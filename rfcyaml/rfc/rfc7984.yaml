- contents:
  - "           Locating Session Initiation Protocol (SIP) Servers\n                       in
    a Dual-Stack IP Network\n"
  title: __initial_text__
- contents:
  - "Abstract\n   RFC 3263 defines how a Session Initiation Protocol (SIP)\n   implementation,
    given a SIP Uniform Resource Identifier (URI), should\n   locate the next-hop
    SIP server using Domain Name System (DNS)\n   procedures.  As SIP networks increasingly
    transition from IPv4-only\n   to dual-stack, a quality user experience must be
    ensured for dual-\n   stack SIP implementations.  This document updates the DNS
    procedures\n   described in RFC 3263 for dual-stack SIP implementations in\n   preparation
    for forthcoming specifications for applying \"Happy\n   Eyeballs\" principles
    to SIP.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7984.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  DNS Procedures in a Dual-Stack Network  . . . . . . . . . .
    .   4\n     3.1.  Dual-Stack SIP UA DNS Record Lookup Procedure . . . . . .   4\n
    \    3.2.  Indicating Address Family Preference in DNS SRV Records .   5\n   4.
    \ Clarification of Interaction with RFC 6724  . . . . . . . . .   6\n   5.  Security
    Considerations . . . . . . . . . . . . . . . . . . .   7\n   6.  References  .
    . . . . . . . . . . . . . . . . . . . . . . . .   8\n     6.1.  Normative References
    \ . . . . . . . . . . . . . . . . . .   8\n     6.2.  Informative References  .
    . . . . . . . . . . . . . . . .   8\n   Acknowledgments . . . . . . . . . . .
    . . . . . . . . . . . . . .   9\n   Authors' Addresses  . . . . . . . . . . .
    . . . . . . . . . . . .  10\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Session Initiation Protocol (SIP) [RFC3261] and the
    additional\n   documents that extended it provide support for both IPv4 and IPv6.\n
    \  However, this support does not fully extend to the highly hybridized\n   environments
    that are characteristic of the transitional migratory\n   phase from IPv4 to IPv6
    networks.  During this phase, many server and\n   client implementations run on
    dual-stack hosts.  In such\n   environments, a dual-stack host will likely suffer
    greater connection\n   delay, and by extension an inferior user experience, than
    an\n   IPv4-only host.  The need to remedy this diminished performance of\n   dual-stack
    hosts led to the development of the \"Happy Eyeballs\"\n   [RFC6555] algorithm,
    which has since been implemented in many\n   protocols and applications.\n   This
    document updates the DNS lookup procedures of RFC 3263 [RFC3263]\n   in preparation
    for the specification of the application of Happy\n   Eyeballs to SIP.  Happy
    Eyeballs will provide enhanced performance,\n   and consequently enhanced user
    experience, in highly hybridized dual-\n   stack SIP networks.  The procedures
    described herein are such that a\n   dual-stack client should look up both A and
    AAAA records in DNS and\n   then select the best way to set up a network flow.
    \ The details of\n   how the latter is done is considered out of scope for this
    document.\n   See the Happy Eyeballs algorithm and implementation and design\n
    \  considerations in RFC 6555 [RFC6555] for more information about\n   issues
    with setting up dual-stack network flows.\n   Section 4 of this document clarifies
    the interaction of [RFC3263]\n   with [RFC6157] and [RFC6724].\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n
    \  RFC 3261 [RFC3261] defines additional terms used in this document\n   that
    are specific to the SIP domain such as \"proxy\", \"registrar\",\n   \"redirect
    server\", \"user agent server\" or \"UAS\", \"user agent client\"\n   or \"UAC\",
    \"back-to-back user agent\" or \"B2BUA\", \"dialog\",\n   \"transaction\", and
    \"server transaction\".\n   This document uses the term \"SIP server\" that is
    defined to include\n   the following SIP entities: user agent server, registrar,
    redirect\n   server, a SIP proxy in the role of user agent server, and a B2BUA
    in\n   the role of a user agent server.\n   While this document focuses on the
    dual-stack situation described in\n   RFC 6555 and other documents, concerning
    the migration from an\n   IPv4-only network to a network supporting both IPv4
    and IPv6, the\n   techniques described can be used in other situations.  Possible\n
    \  situations include when a device has multiple interfaces with\n   distinct
    addressing characteristics and when additional IP address\n   families are created
    in the future.  This document uses the general\n   term \"dual-stack\" to include
    all situations where the client has\n   access to multiple communication methods
    that have distinct\n   addressing characteristics.\n   The term \"address records\"
    means the DNS records that translate a\n   domain name into addresses within the
    address family or families that\n   the entity supports (as A records provide
    IPv4 addresses and AAAA\n   records provide IPv6 addresses), regardless of whether
    the address\n   family was defined before or after this document was approved.\n"
  title: 2.  Terminology
- contents:
  - "3.  DNS Procedures in a Dual-Stack Network\n   This specification introduces
    two normative DNS lookup procedures.\n   These are designed to improve the performance
    of dual-stack clients\n   in IPv4/IPv6 networks.\n"
  - contents:
    - "3.1.  Dual-Stack SIP UA DNS Record Lookup Procedure\n   Once the transport
      protocol has been determined, the procedure for\n   discovering an IP address
      if the TARGET is not a numeric IP address\n   but the port is explicitly stated
      in the URI, is detailed in\n   Section 4.2 of RFC 3263 [RFC3263].  The piece
      relevant to this\n   discussion is:\n      If the TARGET was not a numeric IP
      address, but a port is present\n      in the URI, the client performs an A or
      AAAA record lookup of the\n      domain name.  The result will be a list of
      IP addresses, each of\n      which can be contacted at the specific port from
      the URI and\n      transport protocol determined previously.\n   Section 4.2
      of RFC 3263 [RFC3263] also goes on to describe the\n   procedure for discovering
      an IP address if the TARGET is not a\n   numeric IP address, and no port is
      present in the URI.  The piece\n   relevant to this discussion is:\n      If
      no SRV records were found, the client performs an A or AAAA\n      record lookup
      of the domain name.  The result will be a list of IP\n      addresses, each
      of which can be contacted using the transport\n      protocol determined previously,
      at the default port for that\n      transport.  Processing then proceeds as
      described above for an\n      explicit port once the A or AAAA records have
      been looked up.\n   Happy Eyeballs [RFC6555] documents that looking up the \"A
      or AAAA\n   record\" is not an effective practice for dual-stack clients and
      that\n   it can add significant connection delay and greatly degrade user\n
      \  experience.  Therefore, this document makes the following normative\n   addendum
      to the DNS lookup procedures in Section 4.2 of RFC 3263\n   [RFC3263] for IPv4/IPv6
      hybrid SIP networks and recommends it as a\n   best practice for such dual-stack
      networks:\n      The dual-stack client SHOULD look up address records for all\n
      \     address families that it supports for the domain name and add the\n      resulting
      addresses to the list of IP addresses to be contacted.\n      A client MUST
      be prepared for the existence of DNS resource\n      records containing addresses
      in families that it does not support;\n      if such records may be returned
      by the client's DNS queries, such\n      records MUST be ignored as unusable
      and the supported addresses\n      used as specified herein.\n"
    title: 3.1.  Dual-Stack SIP UA DNS Record Lookup Procedure
  - contents:
    - "3.2.  Indicating Address Family Preference in DNS SRV Records\n   The Happy
      Eyeballs algorithm [RFC6555] is particularly effective for\n   dual-stack HTTP
      client applications that have significant performance\n   differences between
      their IPv4 and IPv6 network paths.  This is\n   because the client can initiate
      two TCP connections to the server,\n   one using IPv4 and one using IPv6, and
      then use the connection that\n   completes first.  This works properly because
      the client can test\n   each route by initiating a TCP connection, but simply
      opening a TCP\n   connection to an HTTP server does not change the server's
      state; the\n   client will send the HTTP request on only one connection.\n   Unfortunately,
      in common SIP situations, it is not possible to \"race\"\n   simultaneous request
      attempts using two address families.  If the SIP\n   requests are transmitted
      as single UDP packets, sending two copies of\n   the request to two different
      addresses risks having two copies of the\n   request propagating through the
      SIP network at the same time.  The\n   difference between SIP and HTTP is that
      in SIP, the sender cannot\n   test a route in a non-state-changing way.\n   (If
      two copies of the same request arrive at the destination client,\n   the client
      SHOULD reject the second of them with a response code of\n   482 [RFC3261].
      \ To convey information on why the request was rejected\n   to the originator,
      the client can include a descriptive reason\n   phrase, for example, \"Merged
      Request\".  However, issuing the 482\n   response is not sufficient to prevent
      user-visible differences in\n   behavior.  A proxy that is upstream of the second
      request to arrive\n   at the client may (almost immediately!) serially fork
      the second\n   request to further destinations (e.g., the voicemail service
      for the\n   destination client).)\n   In this common scenario, it is often necessary
      for a dual-stack\n   client to indicate a preference for either IPv4 or IPv6.
      \ A service\n   may use DNS SRV records to indicate such a preference for an
      address\n   family.  This way, a server with a high-latency and/or low-capacity\n
      \  IPv4 tunnel may indicate a preference for being contacted using IPv6.\n   A
      server that wishes to do this can use the lowest SRV priority to\n   publish
      host names that only resolve in IPv6 and the next priority\n   with host names
      that resolve in both address families.\n   Note that host names that have addresses
      in only one address family\n   are discouraged by [RFC6555].  Such special-purpose
      host names SHOULD\n   be used only as described in this section, as targets
      of SRV records\n   for an aggregate host name, where the aggregate host name
      ultimately\n   resolves to addresses in all families supported by the client.\n"
    title: 3.2.  Indicating Address Family Preference in DNS SRV Records
  title: 3.  DNS Procedures in a Dual-Stack Network
- contents:
  - "4.  Clarification of Interaction with RFC 6724\n   Section 5 of [RFC6157] specifies
    that the addresses from the address\n   records for a single target DNS name for
    a server's DNS name must be\n   contacted in the order specified by the source
    and destination\n   address selection algorithms defined in [RFC6724].  The set
    of\n   addresses provided to a single invocation of the destination address\n
    \  selection algorithm MUST be the address records for the target DNS\n   name
    in a single SRV record (or, if there are no SRV records, the DNS\n   name in the
    URI or derived via NAPTR) -- the destination address\n   selection algorithm MUST
    NOT reorder addresses derived from different\n   SRV records.  Typically, destination
    address selection is done by\n   using the (relatively new) getaddrinfo() function
    to translate the\n   target DNS name into a list of IPv4 and/or IPv6 addresses
    in the\n   order in which they are to be contacted, as that function implements\n
    \  [RFC6724].\n   Thus, if SRV lookup on the server's DNS name is successful,
    the major\n   ordering of the complete list of destination addresses is determined\n
    \  by the priority and weight fields of the SRV records (as specified in\n   [RFC2782]),
    and the (minor) ordering among the destinations derived\n   from the \"target\"
    field of a single SRV record is determined by\n   [RFC6724].\n   For example,
    consider a server with DNS name example.com, with TCP\n   transport specified.
    \ The relevant SRV records for example.com are:\n      _sip._tcp.example.com.
    \ 300 IN SRV 10 1 5060 sip-1.example.com.\n      _sip._tcp.example.com.  300 IN
    SRV 20 1 5060 sip-2.example.com.\n   The processing of [RFC2782] results in this
    ordered list of target\n   domain names:\n      sip-1.example.com\n      sip-2.example.com\n
    \  The address records for sip-1.example.com, as ordered by [RFC6724],\n   are:\n
    \     sip-1.example.com.  300 IN AAAA 2001:0db8:58:c02::face\n      sip-1.example.com.
    \ 300 IN AAAA 2001:0db8:c:a06::2:cafe\n      sip-1.example.com.  300 IN AAAA 2001:0db8:44:204::d1ce\n
    \     sip-1.example.com.  300 IN A 192.0.2.45\n      sip-1.example.com.  300 IN
    A 203.0.113.109\n      sip-1.example.com.  300 IN A 198.51.100.24\n   And the
    address records for sip-2.example.com, as ordered by\n   [RFC6724], are:\n      sip-2.example.com.
    \ 300 IN AAAA 2001:0db8:58:c02::dead\n      sip-2.example.com.  300 IN AAAA 2001:0db8:c:a06::2:beef\n
    \     sip-2.example.com.  300 IN AAAA 2001:0db8:44:204::c0de\n      sip-2.example.com.
    \ 300 IN A 192.0.2.75\n      sip-2.example.com.  300 IN A 203.0.113.38\n      sip-2.example.com.
    \ 300 IN A 198.51.100.140\n   Thus, the complete list of destination addresses
    has this ordering:\n      2001:0db8:58:c02::face\n      2001:0db8:c:a06::2:cafe\n
    \     2001:0db8:44:204::d1ce\n      192.0.2.45\n      203.0.113.109\n      198.51.100.24\n
    \     2001:0db8:58:c02::dead\n      2001:0db8:c:a06::2:beef\n      2001:0db8:44:204::c0de\n
    \     192.0.2.75\n      203.0.113.38\n      198.51.100.140\n   In particular,
    the destination addresses derived from\n   sip-1.example.com and those derived
    from sip-2.example.com are not\n   interleaved; [RFC6724] does not operate on
    the complete list.  This\n   would be true even if the two SRV records had the
    same priority and\n   were (randomly) ordered based on their weights, as the address\n
    \  records of two target DNS names are never interleaved.\n"
  title: 4.  Clarification of Interaction with RFC 6724
- contents:
  - "5.  Security Considerations\n   This document introduces two new normative procedures
    to the existing\n   DNS procedures used to locate SIP servers.  A client may contact\n
    \  additional target addresses for a URI beyond those prescribed in\n   [RFC3263],
    and/or it may contact target addresses in a different\n   order than prescribed
    in [RFC3263].  Neither of these changes\n   introduce any new security considerations
    because it has always been\n   assumed that a client desiring to send to a URI
    may contact any of\n   its targets that are listed in DNS.\n   The specific security
    vulnerabilities, attacks, and threat models of\n   the various protocols discussed
    in this document (SIP, DNS, SRV\n   records, Happy Eyeballs requirements and algorithm,
    etc.) are well\n   documented in their respective specifications.\n"
  title: 5.  Security Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2782]  Gulbrandsen, A., Vixie, P., and L. Esibov, \"A DNS RR for\n              specifying
      the location of services (DNS SRV)\", RFC 2782,\n              DOI 10.17487/RFC2782,
      February 2000,\n              <http://www.rfc-editor.org/info/rfc2782>.\n   [RFC3263]
      \ Rosenberg, J. and H. Schulzrinne, \"Session Initiation\n              Protocol
      (SIP): Locating SIP Servers\", RFC 3263,\n              DOI 10.17487/RFC3263,
      June 2002,\n              <http://www.rfc-editor.org/info/rfc3263>.\n   [RFC6157]
      \ Camarillo, G., El Malki, K., and V. Gurbani, \"IPv6\n              Transition
      in the Session Initiation Protocol (SIP)\",\n              RFC 6157, DOI 10.17487/RFC6157,
      April 2011,\n              <http://www.rfc-editor.org/info/rfc6157>.\n   [RFC6724]
      \ Thaler, D., Ed., Draves, R., Matsumoto, A., and T. Chown,\n              \"Default
      Address Selection for Internet Protocol Version 6\n              (IPv6)\", RFC
      6724, DOI 10.17487/RFC6724, September 2012,\n              <http://www.rfc-editor.org/info/rfc6724>.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [RFC3261]  Rosenberg, J., Schulzrinne, H.,
      Camarillo, G., Johnston,\n              A., Peterson, J., Sparks, R., Handley,
      M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC
      3261,\n              DOI 10.17487/RFC3261, June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n
      \  [RFC6555]  Wing, D. and A. Yourtchenko, \"Happy Eyeballs: Success with\n
      \             Dual-Stack Hosts\", RFC 6555, DOI 10.17487/RFC6555, April\n              2012,
      <http://www.rfc-editor.org/info/rfc6555>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Acknowledgments\n   The authors would like to acknowledge the support and contribution
    of\n   the SIP Forum IPv6 Working Group.  This document is based on a lot of\n
    \  tests and discussions at SIPit events, organized by the SIP Forum.\n   This
    document has benefited from the expertise and review feedback of\n   many participants
    of the IETF DISPATCH and SIPCORE Working Group\n   mailing lists as well as those
    on the SIP Forum IPv6 Task Group\n   mailing list.  The authors wish to specifically
    call out the efforts\n   and express their gratitude for the detailed and thoughtful
    comments\n   and corrections of Dan Wing, Brett Tate, Rifaat Shekh-Yusef, Carl\n
    \  Klatsky, Mary Barnes, Keith Drage, Cullen Jennings, Simon Perreault,\n   Paul
    Kyzivat, Adam Roach, Richard Barnes, Ben Campbell, Stefan\n   Winter, Spencer
    Dawkins, and Suresh Krishnan.  Adam Roach devised the\n   example in Section 4.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Olle E. Johansson\n   Edvina AB\n   Runbovaegen 10\n   Sollentuna
    \ SE-192 48\n   Sweden\n   Email: oej@edvina.net\n   Gonzalo Salgueiro\n   Cisco
    Systems\n   7200-12 Kit Creek Road\n   Research Triangle Park, NC  27709\n   United
    States of America\n   Email: gsalguei@cisco.com\n   Vijay K. Gurbani\n   Bell
    Labs, Nokia Networks\n   1960 Lucent Lane\n   Rm 9C-533\n   Naperville, IL  60563\n
    \  United States of America\n   Email: vkg@bell-labs.com\n   Dale R. Worley (editor)\n
    \  Ariadne Internet Services\n   738 Main St.\n   Waltham, MA  02451\n   United
    States of America\n   Email: worley@ariadne.com\n"
  title: Authors' Addresses
