- title: __initial_text__
  contents:
  - '           IPv4 Run-Out and IPv4-IPv6 Co-Existence Scenarios

    '
- title: Abstract
  contents:
  - "Abstract\n   When IPv6 was designed, it was expected that the transition from\
    \ IPv4\n   to IPv6 would occur more smoothly and expeditiously than experience\n\
    \   has revealed.  The growth of the IPv4 Internet and predicted\n   depletion\
    \ of the free pool of IPv4 address blocks on a foreseeable\n   horizon has highlighted\
    \ an urgent need to revisit IPv6 deployment\n   models.  This document provides\
    \ an overview of deployment scenarios\n   with the goal of helping to understand\
    \ what types of additional tools\n   the industry needs to assist in IPv4 and\
    \ IPv6 co-existence and\n   transition.\n   This document was originally created\
    \ as input to the Montreal co-\n   existence interim meeting in October 2008,\
    \ which led to the\n   rechartering of the Behave and Softwire working groups\
    \ to take on new\n   IPv4 and IPv6 co-existence work.  This document is published\
    \ as a\n   historical record of the thinking at the time, but hopefully will\n\
    \   also help readers understand the rationale behind current IETF tools\n   for\
    \ co-existence and transition.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6127.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Scenarios .......................................................4\n  \
    \    2.1. Reaching the IPv4 Internet .................................4\n    \
    \       2.1.1. NAT444 ..............................................5\n      \
    \     2.1.2. Distributed NAT .....................................6\n        \
    \   2.1.3. Recommendation ......................................8\n      2.2.\
    \ Running Out of IPv4 Private Address Space ..................9\n      2.3. Enterprise\
    \ IPv6-Only Networks .............................11\n      2.4. Reaching Private\
    \ IPv4-Only Servers ........................13\n      2.5. Reaching IPv6-Only\
    \ Servers ................................14\n   3. Security Considerations ........................................16\n\
    \   4. Conclusions ....................................................16\n  \
    \ 5. References .....................................................17\n    \
    \  5.1. Normative References ......................................17\n      5.2.\
    \ Informative References ....................................17\n   Appendix A.\
    \ Acknowledgments .......................................20\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document was originally created as input to the Montreal\n\
    \   co-existence interim meeting in October 2008, which led to the\n   rechartering\
    \ of the Behave and Softwire working groups to take on new\n   IPv4 and IPv6 co-existence\
    \ work.  This document is published as a\n   historical record of the thinking\
    \ at the time, but hopefully will\n   also help readers understand the rationale\
    \ behind current IETF tools\n   for co-existence and transition.\n   When IPv6\
    \ was designed, it was expected that IPv6 would be enabled,\n   in part or in\
    \ whole, while continuing to run IPv4 side-by-side on the\n   same network nodes\
    \ and hosts.  This method of transition is referred\n   to as \"dual-stack\" [RFC4213]\
    \ and has been the prevailing method\n   driving the specifications and available\
    \ tools for IPv6 to date.\n   Experience has shown that large-scale deployment\
    \ of IPv6 takes time,\n   effort, and significant investment.  With IPv4 address\
    \ pool depletion\n   on the foreseeable horizon [HUSTON-IPv4], network operators\
    \ and\n   Internet Service Providers are being forced to consider network\n  \
    \ designs that no longer assume the same level of access to unique\n   global\
    \ IPv4 addresses.  IPv6 alone does not alleviate this concern\n   given the basic\
    \ assumption that all hosts and nodes will be dual-\n   stack until the eventual\
    \ sunsetting of IPv4-only equipment.  In\n   short, the time-frames for the growth\
    \ of the IPv4 Internet, the\n   universal deployment of dual-stack IPv4 and IPv6,\
    \ and the final\n   transition to an IPv6-dominant Internet are not in alignment\
    \ with\n   what was originally expected.\n   While dual-stack remains the most\
    \ well-understood approach to\n   deploying IPv6 today, current realities dictate\
    \ a re-assessment of\n   the tools available for other deployment models that\
    \ are likely to\n   emerge.  In particular, the implications of deploying multiple\
    \ layers\n   of IPv4 address translation need to be considered, as well as those\n\
    \   associated with translation between IPv4 and IPv6, which led to the\n   deprecation\
    \ of [RFC2766] as detailed in [RFC4966].  This document\n   outlines some of the\
    \ scenarios where these address and protocol\n   translation mechanisms could\
    \ be useful, in addition to methods where\n   carrying IPv4 over IPv6 may be used\
    \ to assist in transition to IPv6\n   and co-existence with IPv4.  We purposefully\
    \ avoid a description of\n   classic dual-stack methods, as well as IPv6-over-IPv4\
    \ tunneling.\n   Instead, this document focuses on scenarios that are driving\
    \ tools we\n   have historically not been developing standard solutions around.\n\
    \   It should be understood that the scenarios in this document represent\n  \
    \ new deployment models and are intended to complement, and not\n   replace, existing\
    \ ones.  For instance, dual-stack continues to be the\n   most recommended deployment\
    \ model.  Note that dual-stack is not\n   limited to situations where all hosts\
    \ can acquire public IPv4\n   addresses.  A common deployment scenario is running\
    \ dual-stack on the\n   IPv6 side with public addresses, and on the IPv4 side\
    \ with just one\n   public address and a traditional IPv4 NAT.  Generally speaking,\n\
    \   offering native connectivity with both IP versions is preferred over\n   the\
    \ use of translation or tunneling mechanisms when sufficient\n   address space\
    \ is available.\n"
- title: 2.  Scenarios
  contents:
  - "2.  Scenarios\n   This section identifies five deployment scenarios that we believe\n\
    \   have a significant level of near-to-medium-term demand somewhere on\n   the\
    \ globe.  We will discuss these in the following sections, while\n   walking through\
    \ a bit of the design space to get an understanding of\n   the types of tools\
    \ that could be developed to solve each.  In\n   particular, we want the reader\
    \ to consider for each scenario what\n   type of new equipment must be introduced\
    \ in the network, and where;\n   which nodes must be changed in some way; and\
    \ which nodes must work\n   together in an interoperable manner via a new or existing\
    \ protocol.\n   The five scenarios are:\n   o  Reaching the IPv4 Internet with\
    \ less than one global IPv4 address\n      per subscriber or subscriber household\
    \ available (Section 2.1).\n   o  Running a large network needing more addresses\
    \ than those\n      available in private RFC 1918 address space (Section 2.2).\n\
    \   o  Running an IPv6-only network for operational simplicity as\n      compared\
    \ to dual-stack, while still needing access to the global\n      IPv4 Internet\
    \ for some, but not all, connectivity (Section 2.3).\n   o  Reaching one or more\
    \ privately addressed IPv4-only servers via\n      IPv6 (Section 2.4).\n   o \
    \ Accessing IPv6-only servers from IPv4-only clients (Section 2.5).\n"
- title: 2.1.  Reaching the IPv4 Internet
  contents:
  - "2.1.  Reaching the IPv4 Internet\n                    +----+                \
    \       +---------------+\n   IPv4 host(s)-----+ GW +------IPv4-------------|\
    \ IPv4 Internet |\n                    +----+                       +---------------+\n\
    \   <---private v4--->NAT<--------------public v4----------------->\n        \
    \        Figure 1: Accessing the IPv4 Internet Today\n   Figure 1 shows a typical\
    \ model for accessing the IPv4 Internet today,\n   with the gateway device implementing\
    \ a Network Address and Port\n   Translation (NAPT, or more simply referred to\
    \ in this document as\n   NAT).  The NAT function serves a number of purposes,\
    \ one of which is\n   to allow more hosts behind the gateway (GW) than there are\
    \ IPv4\n   addresses presented to the Internet.  This multiplexing of IP\n   addresses\
    \ comes at great cost to the original end-to-end model of the\n   Internet, but\
    \ nonetheless is the dominant method of access today,\n   particularly to residential\
    \ subscribers.\n   Taking the typical residential subscriber as an example, each\n\
    \   subscriber line is allocated one global IPv4 address for it to use\n   with\
    \ as many devices as the NAT GW and local network can handle.  As\n   IPv4 address\
    \ space becomes more constrained and without substantial\n   movement to IPv6,\
    \ it is expected that service providers will be\n   pressured to assign a single\
    \ global IPv4 address to multiple\n   subscribers.  Indeed, in some deployments\
    \ this is already the case.\n"
- title: 2.1.1.  NAT444
  contents:
  - "2.1.1.  NAT444\n   When there is less than one address per subscriber at a given\
    \ time,\n   address multiplexing must be performed at a location where visibility\n\
    \   to more than one subscriber can be realized.  The most obvious place\n   for\
    \ this is within the service provider network itself, requiring the\n   service\
    \ provider to acquire and operate NAT equipment to allow\n   sharing of addresses\
    \ across multiple subscribers.  For deployments\n   where the GW is owned and\
    \ operated by the customer, however, this\n   becomes operational overhead for\
    \ the Internet Service Provider (ISP),\n   for which the ISP will no longer be\
    \ able to rely on the customer and\n   the seller of the GW device.\n   This new\
    \ address translation node has been termed a \"Carrier Grade\n   NAT\", or CGN\
    \ [NISHITANI-CGN].  The CGN's insertion into the ISP\n   network is shown in Figure\
    \ 2.\n                    +----+                   +---+  +-------------+\n  \
    \ IPv4 host(s)-----+ GW +------IPv4---------+CGN+--+IPv4 Internet|\n         \
    \           +----+                   +---+  +-------------+\n   <---private v4--->NAT<----private\
    \ v4------>NAT<----public v4--->\n                Figure 2: Employing Two NAT\
    \ Devices: NAT444\n   This approach is known as \"NAT444\" or \"Double-NAT\" and\
    \ is discussed\n   further in [NAT-PT].\n   It is important to note that while\
    \ multiplexing of IPv4 addresses is\n   occurring here at multiple levels, there\
    \ is no aggregation of NAT\n   state between the GW and the CGN.  Every flow that\
    \ is originated in\n   the subscriber home is represented as duplicate state in\
    \ the GW and\n   the CGN.  For example, if there are 4 PCs in a subscriber home,\
    \ each\n   with 25 open TCP sessions, both the GW and the CGN must track 100\n\
    \   sessions each for that subscriber line.\n   NAT444 has the enticing property\
    \ that it seems, at first glance, that\n   the CGN can be deployed without any\
    \ change to the GW device or other\n   node in the network.  While it is true\
    \ that a GW that can accept a\n   lease for a global IPv4 address would very likely\
    \ accept a translated\n   IPv4 address as well, the CGN is neither transparent\
    \ to the GW nor to\n   the subscriber.  In short, it is a very different service\
    \ model to\n   offer a translated IPv4 address versus a global IPv4 address to\
    \ a\n   customer.  While many things may continue to work in both\n   environments,\
    \ some end-host applications may break, and GW port-\n   mapping functionality\
    \ will likely cease to work reliably.  Further,\n   if addresses between the subscriber\
    \ network and service provider\n   network overlap [ISP-SHARED-ADDR], ambiguous\
    \ routes in the GW could\n   lead to misdirected or black-holed traffic.  Resolving\
    \ this overlap\n   through allocation of new private address space is difficult,\
    \ as many\n   existing devices rely on knowing what address ranges represent\n\
    \   private addresses [IPv4-SPACE-ISSUES].\n   Network operations that had previously\
    \ been tied to a single IPv4\n   address for a subscriber would need to be considered\
    \ when deploying\n   NAT444 as well.  These may include troubleshooting, operations,\n\
    \   accounting, logging and legal intercept, Quality of Service (QoS)\n   functions,\
    \ anti-spoofing and security, backoffice systems, etc.\n   Ironically, some of\
    \ these considerations overlap with the kinds of\n   considerations one needs\
    \ to perform when deploying IPv6.\n   Consequences aside, NAT444 service is already\
    \ being deployed in some\n   networks for residential broadband service.  It is\
    \ safe to assume\n   that this trend will likely continue in the face of tightening\
    \ IPv4\n   address availability.  The operational considerations of NAT444 need\n\
    \   to be well-documented.\n   NAT444 assumes that the global IPv4 address offered\
    \ to a residential\n   subscriber today will simply be replaced with a single\
    \ translated\n   address.  In order to try and circumvent performing NAT twice,\
    \ and\n   since the address being offered is no longer a global address, a\n \
    \  service provider could begin offering a subnet of translated IPv4\n   addresses\
    \ in hopes that the subscriber would route IPv4 in the GW\n   rather than NAT.\
    \  The same would be true if the GW was known to be an\n   IP-unaware bridge.\
    \  This makes assumptions on whether the ISP can\n   enforce policies, or even\
    \ identify specific capabilities, of the GW.\n   Once we start opening the door\
    \ to making changes at the GW, we have\n   increased the potential design space\
    \ considerably.  The next section\n   covers the same problem scenario of reaching\
    \ the IPv4 Internet in the\n   face of IPv4 address depletion, but with the added\
    \ wrinkle that the\n   GW can be updated or replaced along with the deployment\
    \ of a CGN (or\n   CGN-like) node.\n"
- title: 2.1.2.  Distributed NAT
  contents:
  - "2.1.2.  Distributed NAT\n   Increasingly, service providers offering \"triple-play\"\
    \ services own\n   and manage a highly functional GW in the subscriber home. \
    \ These\n   managed GWs generally have rather tight integration with the service\n\
    \   provider network and applications.  In these types of deployments, we\n  \
    \ can begin to consider what other possibilities exist besides NAT444\n   by assuming\
    \ cooperative functionality between the CGN and the GW.\n   If the connection\
    \ between the GW and the CGN is a point-to-point link\n   (a common configuration\
    \ between the GW and the \"IP edge\" in a number\n   of access architectures),\
    \ NAT-like functionality may be \"split\"\n   between the GW and the CGN rather\
    \ than performing NAT444 as described\n   in the previous section.\n         \
    \        one frac addr            one public addr\n                    +----+\
    \                   +---+  +-------------+\n   IPv4 host(s)-----+ GW +-----p2p\
    \ link------+CGN+--+IPv4 Internet|\n                    +----+               \
    \    +---+  +-------------+\n   <---private v4--->            NAT            \
    \ <----public v4--->\n                             (distributed,\n           \
    \                over a p2p link)\n                     Figure 3: Distributed-NAT\
    \ Service\n   In this approach, multiple GWs share a common public IPv4 address,\n\
    \   but with separate, non-overlapping port ranges.  Each such address/\n   port\
    \ range pair is defined as a \"fractional address\".  Each home\n   gateway can\
    \ use the address as if it were its own public address,\n   except that only a\
    \ limited port range is available to the gateway.\n   The CGN is aware of the\
    \ port ranges, which may be assigned in\n   different ways, for instance during\
    \ DHCP lease acquisition or\n   dynamically when ports are needed [v6OPS-APBP].\
    \  The CGN directs\n   traffic to the fractional address towards that subscriber's\
    \ GW\n   device.  This method has the advantage that the more complicated\n  \
    \ aspects of the NAT function (Application Level Gateways (ALGs), port\n   mapping,\
    \ etc.) remain in the GW, augmented only by the restricted\n   port range allocated\
    \ to the fractional address for that GW.  The CGN\n   is then free to operate\
    \ in a fairly stateless manner, forwarding\n   traffic based on IP address and\
    \ port ranges and not tracking any\n   individual flows from within the subscriber\
    \ network.  There are\n   obvious scaling benefits to this approach within the\
    \ CGN node, with\n   the tradeoff of complexity in terms of the number of nodes\
    \ and\n   protocols that must work together in an interoperable manner.\n   Further,\
    \ the GW is still receiving a global IPv4 address, albeit only\n   a \"portion\"\
    \ of one in terms of available port usage.  There are still\n   outstanding questions\
    \ in terms of how to handle protocols that run\n   directly over IP and cannot\
    \ use the divided port number ranges, and\n   how to handle fragmented packets,\
    \ but the benefit is that we are no\n   longer burdened by two layers of NAT as\
    \ in NAT444.\n   Not all access architectures provide a natural point-to-point\
    \ link\n   between the GW and the CGN to tie into.  Further, the CGN may not be\n\
    \   incorporated into the IP edge device in networks that do have point-\n   to-point\
    \ links.  For these cases, we can build our own point-to-point\n   link using\
    \ a tunnel.  A tunnel is essentially a point-to-point link\n   that we create\
    \ when needed [INTAREA-TUNNELS].  This is illustrated in\n   Figure 4.\n     \
    \            one frac addr            one public addr\n                    +----+\
    \                   +---+  +-------------+\n   IPv4 host(s)-----+ GW +======tunnel=======+CGN+--+IPv4\
    \ Internet|\n                    +----+                   +---+  +-------------+\n\
    \   <---private v4--->            NAT             <----public v4--->\n       \
    \                     (distributed,\n                            over a tunnel)\n\
    \          Figure 4: Point-to-Point Link Created through a Tunnel\n   Figure 4\
    \ is essentially the same as Figure 3, except the data link is\n   created with\
    \ a tunnel.  The tunnel could be created in any number of\n   ways, depending\
    \ on the underlying network.\n   At this point, we have used a tunnel or point-to-point\
    \ link with\n   coordinated operation between the GW and the CGN in order to keep\n\
    \   most of the NAT functionality in the GW.\n   Given the assumption of a point-to-point\
    \ link between the GW and the\n   CGN, the CGN could perform the NAT function,\
    \ allowing private,\n   overlapping space to all subscribers.  For example, each\
    \ subscriber\n   GW may be assigned the same 10.0.0.0/8 address space (or all\
    \ RFC 1918\n   [RFC1918] space for that matter).  The GW then becomes a simple\n\
    \   \"tunneling router\", and the CGN takes on the full NAT role.  One can\n \
    \  think of this design as effectively a layer-3 VPN, but with Virtual-\n   NAT\
    \ tables rather than Virtual-Routing tables.\n"
- title: 2.1.3.  Recommendation
  contents:
  - "2.1.3.  Recommendation\n   This section deals strictly with the problem of reaching\
    \ the IPv4\n   Internet with limited public address space for each device in a\n\
    \   network.  We explored combining NAT functions and tunnels between the\n  \
    \ GW and the CGN to obtain similar results with different design\n   tradeoffs.\
    \  The methods presented can be summarized as:\n   a. Double-NAT (NAT444)\n  \
    \ b. Single-NAT at CGN with a subnet and routing at the GW\n   c. Tunnel/link\
    \ + fractional IP (NAT at GW, port-routing at CGN)\n   d. Tunnel/link + Single-NAT\
    \ with overlapping RFC 1918 (\"Virtual NAT\"\n      tables and routing at the\
    \ GW)\n   In all of the methods above, the GW could be logically moved into a\n\
    \   single host, potentially eliminating one level of NAT by that action\n   alone.\
    \  As long as the hosts themselves need only a single IPv4\n   address, methods\
    \ b and d obviously are of little interest.  This\n   leaves methods a and c as\
    \ the more interesting methods in cases where\n   there is no analogous GW device\
    \ (such as a campus network).\n   This document recommends the development of\
    \ new guidelines and\n   specifications to address the above methods.  Cases where\
    \ the home\n   gateway both can and cannot be modified should be addressed.\n"
- title: 2.2.  Running Out of IPv4 Private Address Space
  contents:
  - "2.2.  Running Out of IPv4 Private Address Space\n   In addition to public address\
    \ space depletion, very large privately\n   addressed networks are reaching exhaustion\
    \ of RFC 1918 space on local\n   networks as well.  Very large service provider\
    \ networks are prime\n   candidates for this.  Private address space is used locally\
    \ in ISPs\n   for a variety of things, including:\n   o  Control and management\
    \ of service provider devices in subscriber\n      premises (cable modems, set-top\
    \ boxes, and so on).\n   o  Addressing the subscriber's NAT devices in a Double-NAT\n\
    \      arrangement.\n   o  \"Walled garden\" data, voice, or video services.\n\
    \   Some providers deal with this problem by dividing their network into\n   parts,\
    \ each on its own copy of the private space.  However, this\n   limits the way\
    \ services can be deployed and what management systems\n   can reach what devices.\
    \  It is also operationally complicated in the\n   sense that the network operators\
    \ have to understand which private\n   scope they are in.\n   Tunnels were used\
    \ in the previous section to facilitate distribution\n   of a single global IPv4\
    \ address across multiple endpoints without\n   using NAT, or to allow overlapping\
    \ address space to GWs or hosts\n   connected to a CGN.  The kind of tunnel or\
    \ link was not specified.\n   If the tunnel used carries IPv4 over IPv6, the portion\
    \ of the IPv6\n   network traversed naturally need not be IPv4-capable, and need\
    \ not\n   utilize IPv4 addresses, private or public, for the tunnel traffic to\n\
    \   traverse the network.  This is shown in Figure 5.\n                      \
    \      IPv6-only network\n                    +----+                     +---+\
    \  +-------------+\n   IPv4 host--------+ GW +=======tunnel========+CGN+--+IPv4\
    \ Internet|\n                    +----+                     +---+  +-------------+\n\
    \   <---private v4---->  <-----  v4 over v6 ----->  <---public v4---->\n     \
    \        Figure 5: Running IPv4 over an IPv6-Only Network\n   Each of the four\
    \ approaches (a, b, c, and d) from the Section 2.1\n   scenario could be applied\
    \ here, and for brevity each iteration is not\n   specified in full here.  The\
    \ models are essentially the same, just\n   that the tunnel is over an IPv6 network\
    \ and carries IPv4 traffic.\n   Note that while there are numerous solutions for\
    \ carrying IPv6 over\n   IPv4, this reverse mode is somewhat of an exception (one\
    \ notable\n   exception being the Softwire working group, as seen in [RFC4925]).\n\
    \   Once we have IPv6 to the GW (or host, if we consider the GW embedded\n   in\
    \ the host), enabling IPv6 and IPv4 over the IPv6 tunnel allows for\n   dual-stack\
    \ operation at the host or network behind the GW device.\n   This is depicted\
    \ in Figure 6:\n                   +----+                               +-------------+\n\
    \     IPv6 host-----+    |            +------------------+IPv6 Internet|\n   \
    \                |    +---IPv6-----+                  +-------------+\n   dual-stack\
    \ host-+ GW |\n                   |    |                        +---+  +-------------+\n\
    \     IPv4 host-----+    +===v4-over-v6 tunnel====+CGN+--+IPv4 Internet|\n   \
    \                +----+                        +---+  +-------------+\n   <-----------private\
    \ v4 (partially in tunnel)-->NAT<---public v4---->\n   <-----------------------------public\
    \ v6---------------------------->\n      Figure 6: \"Dual-Stack Lite\" Operation\
    \ over an IPv6-Only Network\n   In [DUAL-STACK-LITE], this is referred to as \"\
    dual-stack lite\",\n   bowing to the fact that it is dual-stack at the gateway,\
    \ but not at\n   the network.  As introduced in Section 2.1, if the CGN here is\
    \ a full\n   functioning NAT, hosts behind a dual-stack lite gateway can support\n\
    \   IPv4-only and IPv6-enabled applications across an IPv6-only network\n   without\
    \ provisioning a unique IPv4 address to each gateway.  In fact,\n   every gateway\
    \ may have the same address.\n   While the high-level problem space in this scenario\
    \ is how to\n   alleviate local usage of IPv4 addresses within a service provider\n\
    \   network, the solution direction identified with IPv6 has interesting\n   operational\
    \ properties that should be pointed out.  By tunneling IPv4\n   over IPv6 across\
    \ the service provider network, the separate problems\n   of transitioning the\
    \ service provider network to IPv6, deploying IPv6\n   to subscribers, and continuing\
    \ to provide IPv4 service can all be\n   decoupled.  The service provider could\
    \ deploy IPv6 internally, turn\n   off IPv4 internally, and still carry IPv4 traffic\
    \ across the IPv6\n   core for end users.  In the extreme case, all of that IPv4\
    \ traffic\n   need not be provisioned with different IPv4 addresses for each\n\
    \   endpoint, as there is not IPv4 routing or forwarding within the\n   network.\
    \  Thus, there are no issues with IPv4 renumbering, address\n   space allocation,\
    \ etc. within the network itself.\n   It is recommended that the IETF develop\
    \ tools to address this\n   scenario for both a host and the GW.  It is assumed\
    \ that both\n   endpoints of the tunnel can be modified to support these new tools.\n"
- title: 2.3.  Enterprise IPv6-Only Networks
  contents:
  - "2.3.  Enterprise IPv6-Only Networks\n   This scenario is about allowing an IPv6-only\
    \ host or a host that has\n   no interfaces connected to an IPv4 network to reach\
    \ servers on the\n   IPv4 Internet.  This is an important scenario for what we\
    \ sometimes\n   call \"greenfield\" deployments.  One example is an enterprise\
    \ network\n   that wishes to operate only IPv6 for operational simplicity, but\n\
    \   still wishes to reach the content in the IPv4 Internet.  For\n   instance,\
    \ a new office building may be provisioned with IPv6 only.\n   This is shown in\
    \ Figure 7.\n                             +----+                  +-------------+\n\
    \                             |    +------------------+IPv6 Internet+\n      \
    \                       |    |                  +-------------+\n   IPv6 host-----------------+\
    \ GW |\n                             |    |                  +-------------+\n\
    \                             |    +------------------+IPv4 Internet+\n      \
    \                       +----+                  +-------------+\n   <-------------------------public\
    \ v6----------------------------->\n   <-------public v6--------->NAT<----------public\
    \ v4-------------->\n                  Figure 7: Enterprise IPv6-Only Network\n\
    \   Other cases that have been mentioned include \"greenfield\" wireless\n   service\
    \ provider networks and sensor networks.  This enterprise IPv6-\n   only scenario\
    \ bears a striking resemblance to the Section 2.2\n   scenario as well, if one\
    \ considers a particularly large enterprise\n   network that begins to resemble\
    \ a service provider network.\n   In the Section 2.2 scenario, we dipped into\
    \ design space enough to\n   illustrate that the service provider was able to\
    \ implement an IPv6-\n   only network to ease their addressing problems via tunneling.\
    \  This\n   came at the cost of touching two devices on the edges of this\n  \
    \ network; both the GW and the CGN have to support IPv6 and the\n   tunneling\
    \ mechanism over IPv6.  The greenfield enterprise scenario is\n   different from\
    \ that one in the sense that there is only one place\n   that the enterprise can\
    \ easily modify: the border between its network\n   and the IPv4 Internet.  Obviously,\
    \ the IPv4 Internet operates the way\n   it already does.  But in addition, the\
    \ hosts in the enterprise\n   network are commercially available devices, personal\
    \ computers with\n   existing operating systems.  While we consider in this scenario\
    \ that\n   all of the devices on the network are \"modern\" dual-stack-capable\n\
    \   devices, we do not want to have to rely upon kernel-level\n   modifications\
    \ to these operating systems.  This restriction drives us\n   to a \"one box\"\
    \ type of solution, where IPv6 can be translated into\n   IPv4 to reach the public\
    \ Internet.  This is one situation where new\n   or improved IETF specifications\
    \ could have an effect on the user\n   experience in these networks.  In fairness,\
    \ it should be noted that\n   even a network-based solution will take time and\
    \ effort to deploy.\n   This is essentially, again, a tradeoff between one new\
    \ piece of\n   equipment in the network, or a cooperation between two.\n   One\
    \ approach to deal with this environment is to provide an\n   application-level\
    \ proxy at the edge of the network (GW).  For\n   instance, if the only application\
    \ that needs to reach the IPv4\n   Internet is the web, then an HTTP/HTTPS proxy\
    \ can easily convert\n   traffic from IPv6 into IPv4 on the outside.\n   Another\
    \ more generic approach is to employ an IPv6-to-IPv4 translator\n   device.  Different\
    \ types of translation schemes are discussed in\n   [NAT-PT], [RFC6144], [RFC6145],\
    \ and [RFC6052].  NAT64 is one example\n   of a translation scheme falling under\
    \ this category [RFC6147]\n   [RFC6146].\n   Translation will in most cases have\
    \ some negative consequences for\n   the end-to-end operation of Internet protocols.\
    \  For instance, the\n   issues with Network Address Translation - Protocol Translation\n\
    \   (NAT-PT) [RFC2766] have been described in [RFC4966].  It is important\n  \
    \ to note that the choice of translation solution, and the assumptions\n   about\
    \ the network in which it is used, impact the consequences.  A\n   translator\
    \ for the general case has a number of issues that a\n   translator for a more\
    \ specific situation may not have at all.\n   It is recommended that the IETF\
    \ develop tools to address this\n   scenario.  These tools need to allow existing\
    \ IPv6 hosts to operate\n   unchanged.\n"
- title: 2.4.  Reaching Private IPv4-Only Servers
  contents:
  - "2.4.  Reaching Private IPv4-Only Servers\n   This section discusses the specific\
    \ problem of IPv4-only-capable\n   server farms that no longer can be allocated\
    \ a sufficient number of\n   public addresses.  It is expected that for individual\
    \ servers,\n   addresses are going to be available for a long time in a reasonably\n\
    \   easy manner.  However, a large server farm may require a large enough\n  \
    \ block of addresses that it is either not feasible to allocate one or\n   it\
    \ becomes economically desirable to use the addresses for other\n   purposes.\n\
    \   Another use case for this scenario involves a service provider that\n   is\
    \ capable of acquiring a sufficient number of IPv4 addresses, and\n   has already\
    \ done so.  However, the service provider also simply\n   wishes to start to offer\
    \ an IPv6 service but without yet touching the\n   server farm (that is, without\
    \ upgrading the server farm to IPv6).\n   One option available in such a situation\
    \ is to move those servers and\n   their clients to IPv6.  However, moving to\
    \ IPv6 involves not just the\n   cost of the IPv6 connectivity, but the cost of\
    \ moving the application\n   itself from IPv4 to IPv6.  So, in this case, the\
    \ server farm is IPv4-\n   only, there is an increasing cost for IPv4 connectivity,\
    \ and there is\n   an expensive bill for moving server infrastructure to IPv6.\
    \  What can\n   be done?\n   If the clients are IPv4-only as well, the problem\
    \ is a hard one.\n   This issue is dealt with in more depth in Section 2.5.  However,\n\
    \   there are important cases where large sets of clients are IPv6-\n   capable.\
    \  In these cases, it is possible to place the server farm in\n   private IPv4\
    \ space and arrange some of the gateway service from IPv6\n   to IPv4 to reach\
    \ the servers.  This is shown in Figure 8.\n                                 \
    \    +----+\n   IPv6 host(s)-------(Internet)-----+ GW +------Private IPv4 servers\n\
    \                                     +----+\n   <---------public v6--------------->NAT<------private\
    \ v4---------->\n             Figure 8: Reaching Servers in Private IPv4 Space\n\
    \   One approach to implement this is to use NAT64 to translate IPv6 into\n  \
    \ private IPv4 addresses.  The private IPv4 addresses are mapped into\n   IPv6\
    \ addresses within one or more known prefixes.  The GW at the edge\n   of the\
    \ server farm is aware of the mapping, as is the Domain Name\n   System (DNS).\
    \  AAAA records for each server name are given an IPv6\n   address that corresponds\
    \ to the mapped private IPv4 address.  Thus,\n   each privately addressed IPv4\
    \ server is given a public IPv6\n   presentation.  No Application Level Gateway\
    \ for DNS (DNS-ALG) is\n   needed in this case, contrary to what NAT-PT would\
    \ require, for\n   instance.\n   This is very similar to the Section 2.3 scenario\
    \ where we typically\n   think of a small site with IPv6 needing to reach the\
    \ public IPv4\n   Internet.  The difference here is that we assume not a small\
    \ IPv6\n   site, but the whole of the IPv6 Internet needing to reach a small\n\
    \   IPv4 site.  This example was driven by the enterprise network with\n   IPv4\
    \ servers, but could be scaled down to the individual subscriber\n   home level\
    \ as well.  Here, the same technique could be used to, say,\n   access an IPv4\
    \ webcam in the home from the IPv6 Internet.  All that\n   is needed is the ability\
    \ to update AAAA records appropriately, an\n   IPv6 client (which could use Teredo\
    \ [RFC4380] or some other method to\n   obtain IPv6 reachability), and the NAT64\
    \ mechanism.  In this sense,\n   this method looks much like a \"NAT/firewall\
    \ bypass\" function.\n   An argument could be made that since the host is likely\
    \ dual-stack,\n   existing port-mapping services or NAT traversal techniques could\
    \ be\n   used to reach the private space instead of IPv6.  This would have to\n\
    \   be done anyway if the hosts are not all IPv6-capable or connected.\n   However,\
    \ in cases where the hosts are all IPv6-capable, the\n   alternative techniques\
    \ force additional limitations on the use of\n   port numbers.  In the case of\
    \ IPv6-to-IPv4 translation, the full port\n   space would be available for each\
    \ server, even in the private space.\n   It is recommended that the IETF develop\
    \ tools to address this\n   scenario.  These tools need to allow existing IPv4\
    \ servers to operate\n   unchanged.\n"
- title: 2.5.  Reaching IPv6-Only Servers
  contents:
  - "2.5.  Reaching IPv6-Only Servers\n   This scenario is predicted to become increasingly\
    \ important as IPv4\n   global connectivity sufficient for supporting server-oriented\
    \ content\n   becomes significantly more difficult to obtain than global IPv6\n\
    \   connectivity.  Historically, the expectation has been that for\n   connectivity\
    \ to IPv6-only devices, devices would either need to be\n   IPv6-connected, or\
    \ dual-stack with the ability to set up an IPv6-\n   over-IPv4 tunnel in order\
    \ to access the IPv6 Internet.  Many \"modern\"\n   device stacks have this capability,\
    \ and for them this scenario does\n   not present a problem as long as a suitable\
    \ gateway to terminate the\n   tunnel and route the IPv6 packets is available.\
    \  But, for the server\n   operator, it may be a difficult proposition to leave\
    \ all IPv4-only\n   devices without reachability.  Thus, if a solution for IPv4-only\n\
    \   devices to reach IPv6-only servers were realizable, the benefits\n   would\
    \ be clear.  Not only could servers move directly to IPv6 without\n   trudging\
    \ through a difficult dual-stack period, but they could do so\n   without risk\
    \ of losing connectivity with the IPv4-only Internet.\n   Unfortunately, realizing\
    \ this goal is complicated by the fact that\n   IPv4 to IPv6 is considered \"\
    hard\" since of course IPv6 has a much\n   larger address space than IPv4.  Thus,\
    \ representing 128 bits in\n   32 bits is not possible, barring the use of techniques\
    \ similar to\n   NAT64, which uses IPv6 addresses to represent IPv4 addresses\
    \ as well.\n   The main questions regarding this scenario are about timing and\n\
    \   priority.  While the expectation that this scenario may be of\n   importance\
    \ one day is readily acceptable, at the time of this\n   writing, there are few\
    \ or no IPv6-only servers of importance (beyond\n   some contrived cases) that\
    \ the authors are aware of.  The difficulty\n   of making a decision about this\
    \ case is that, quite possibly, when\n   there is sufficient pressure on IPv4\
    \ such that we see IPv6-only\n   servers, the vast majority of hosts will either\
    \ have IPv6\n   connectivity or the ability to tunnel IPv6 over IPv4 in one way\
    \ or\n   another.\n   This discussion makes assumptions about what a \"server\"\
    \ is as well.\n   For the majority of applications seen on the IPv4 Internet to\
    \ date,\n   this distinction has been more or less clear.  This clarity is\n \
    \  perhaps in no small part due to the overhead today in creating a\n   truly\
    \ end-to-end application in the face of the fragmented addressing\n   and reachability\
    \ brought on by the various NATs and firewalls\n   employed today.  However, current\
    \ notions of a \"server\" are beginning\n   to shift, as we see more and more\
    \ pressure to connect people to one\n   another in an end-to-end fashion -- with\
    \ peer-to-peer techniques, for\n   instance -- rather than simply content server\
    \ to client.  Thus, if we\n   consider an \"IPv6-only server\" as what we classically\
    \ consider an\n   \"IPv4 server\" today, there may not be a lot of demand for\
    \ this in the\n   near future.  However, with a more distributed model of the\
    \ Internet\n   in mind, there may be more opportunities to employ IPv6-only\n\
    \   \"servers\" that we would normally extrapolate from based on past\n   experience\
    \ with applications.\n   It is recommended that the IETF address this scenario,\
    \ though perhaps\n   with a slightly lower priority than the others.  In any case,\
    \ when\n   new tools are developed to support this, it should be obvious that\
    \ we\n   cannot assume any support for updating legacy IPv4 hosts in order to\n\
    \   reach the IPv6-only servers.\n"
- title: 3.  Security Considerations
  contents:
  - "3.  Security Considerations\n   Security aspects of the individual solutions\
    \ are discussed in more\n   depth elsewhere, for instance in [DUAL-STACK-LITE],\
    \ [RFC6144],\n   [RFC6147], [RFC6145], [RFC6146], [NAT-PT], and [RFC4966].  This\n\
    \   document highlights just three issues:\n   o  Any type of translation may\
    \ have an impact on how certain\n      protocols can pass through.  For example,\
    \ IPsec needs support for\n      NAT traversal, and the proliferation of NATs\
    \ implies an even\n      higher reliance on these mechanisms.  It may also require\n\
    \      additional support for new types of translation.\n   o  Some solutions\
    \ have a need to modify results obtained from DNS.\n      This may have an impact\
    \ on DNS security, as discussed in\n      [RFC4966].  Minimization or even elimination\
    \ of such problems is\n      essential, as discussed in [RFC6147].\n   o  Tunneling\
    \ solutions have their own security issues, for instance\n      the need to secure\
    \ tunnel endpoint discovery or to avoid opening\n      up denial-of-service or\
    \ reflection vulnerabilities [RFC6169].\n"
- title: 4.  Conclusions
  contents:
  - "4.  Conclusions\n   The authors believe that the scenarios outlined in this document\
    \ are\n   among the top of the list of those that should be addressed by the\n\
    \   IETF community in short order.  For each scenario, there are clearly\n   different\
    \ solution approaches with implementation, operations, and\n   deployment tradeoffs.\
    \  Further, some approaches rely on existing or\n   well-understood technology,\
    \ while some require new protocols and\n   changes to established network architecture.\
    \  It is essential that\n   these tradeoffs be considered, understood by the community\
    \ at large,\n   and in the end well-documented as part of the solution design.\n\
    \   After writing the initial version of this document, the Softwire\n   working\
    \ group was rechartered to address the Section 2.2 scenario\n   with a combination\
    \ of existing tools (tunneling, IPv4 NATs) and some\n   minor new ones (DHCP options)\
    \ [DUAL-STACK-LITE].  Similarly, the\n   Behave working group was rechartered\
    \ to address scenarios from\n   Sections 2.3, 2.4, and 2.5.  At the time this\
    \ document is being\n   published, proposals to address scenarios from Section\
    \ 2.1 are still\n   under consideration for new IETF work items.\n   This document\
    \ set out to list scenarios that are important for the\n   Internet community.\
    \  While it introduces some design elements in\n   order to understand and discuss\
    \ tradeoffs, it does not list detailed\n   requirements.  In large part, the authors\
    \ believe that exhaustive and\n   detailed requirements would not be helpful at\
    \ the expense of\n   embarking on solutions, given our current state of affairs.\
    \  We do\n   not expect any of the solutions to be perfect when measured from\
    \ all\n   vantage points.  When looking for opportunities to deploy IPv6,\n  \
    \ reaching too far for perfection could result in losing these\n   opportunities\
    \ if we are not attentive.  Our goal with this document\n   is to support the\
    \ development of tools to help minimize the tangible\n   problems that we are\
    \ experiencing now, as well as those problems that\n   we can best anticipate\
    \ down the road, in hopes of steering the\n   Internet on its best course from\
    \ here.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, R., Karrenberg,\
    \ D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private\
    \ Internets\",\n              BCP 5, RFC 1918, February 1996.\n   [RFC4213]  Nordmark,\
    \ E. and R. Gilligan, \"Basic Transition Mechanisms\n              for IPv6 Hosts\
    \ and Routers\", RFC 4213, October 2005.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [RFC2766]  Tsirtsis, G. and P. Srisuresh, \"\
    Network Address\n              Translation - Protocol Translation (NAT-PT)\",\
    \ RFC 2766,\n              February 2000.\n   [RFC4380]  Huitema, C., \"Teredo:\
    \ Tunneling IPv6 over UDP through\n              Network Address Translations\
    \ (NATs)\", RFC 4380,\n              February 2006.\n   [RFC4925]  Li, X., Dawkins,\
    \ S., Ward, D., and A. Durand, \"Softwire\n              Problem Statement\",\
    \ RFC 4925, July 2007.\n   [RFC4966]  Aoun, C. and E. Davies, \"Reasons to Move\
    \ the Network\n              Address Translator - Protocol Translator (NAT-PT)\
    \ to\n              Historic Status\", RFC 4966, July 2007.\n   [RFC6052]  Bao,\
    \ C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n              Li, \"IPv6\
    \ Addressing of IPv4/IPv6 Translators\", RFC 6052,\n              October 2010.\n\
    \   [NAT-PT]   Wing, D., Ward, D., and A. Durand, \"A Comparison of\n        \
    \      Proposals to Replace NAT-PT\", Work in Progress,\n              September\
    \ 2008.\n   [DUAL-STACK-LITE]\n              Durand, A., Droms, R., Woodyatt,\
    \ J., and Y. Lee, \"Dual-\n              Stack Lite Broadband Deployments Following\
    \ IPv4\n              Exhaustion\", Work in Progress, May 2011.\n   [RFC6144]\
    \  Baker, F., Li, X., Bao, C., and K. Yin, \"Framework for\n              IPv4/IPv6\
    \ Translation\", RFC 6144, April 2011.\n   [RFC6145]  Li, X., Bao, C., and F.\
    \ Baker, \"IP/ICMP Translation\n              Algorithm\", RFC 6145, April 2011.\n\
    \   [RFC6146]  Bagnulo, M., Matthews, P., and I. van Beijnum, \"Stateful\n   \
    \           NAT64: Network Address and Protocol Translation from IPv6\n      \
    \        Clients to IPv4 Servers\", RFC 6146, April 2011.\n   [RFC6147]  Bagnulo,\
    \ M., Sullivan, A., Matthews, P., and I. van\n              Beijnum, \"DNS64:\
    \ DNS Extensions for Network Address\n              Translation from IPv6 Clients\
    \ to IPv4 Servers\", RFC 6147,\n              April 2011.\n   [INTAREA-TUNNELS]\n\
    \              Touch, J. and M. Townsley, \"Tunnels in the Internet\n        \
    \      Architecture\", Work in Progress, March 2010.\n   [v6OPS-APBP]\n      \
    \        Despres, R., \"A Scalable IPv4-IPv6 Transition Architecture\n       \
    \       Need for an Address-Port-Borrowing-Protocol (APBP)\", Work\n         \
    \     in Progress, July 2008.\n   [HUSTON-IPv4]\n              Huston, G., \"\
    IPv4 Address Report\", available\n              at http://www.potaroo.net, December\
    \ 2010.\n   [NISHITANI-CGN]\n              Perreault, S., Ed., Yamagata, I., Miyakawa,\
    \ S., Nakagawa,\n              A., and H. Ashida, \"Common Requirements for IP\
    \ Address\n              Sharing Schemes\", Work in Progress, March 2011.\n  \
    \ [ISP-SHARED-ADDR]\n              Yamagata, I., Miyakawa, S., Nakagawa, A., Yamaguchi,\
    \ J.,\n              and H. Ashida, \"ISP Shared Address\", Work in Progress,\n\
    \              September 2010.\n   [IPv4-SPACE-ISSUES]\n              Azinger,\
    \ M. and L. Vegoda, \"Issues Associated with\n              Designating Additional\
    \ Private IPv4 Address Space\", Work\n              in Progress, January 2011.\n\
    \   [RFC6169]  Krishnan, S., Thaler, D., and J. Hoagland, \"Security\n       \
    \       Concerns with IP Tunneling\", RFC 6169, April 2011.\n"
- title: Appendix A.  Acknowledgments
  contents:
  - "Appendix A.  Acknowledgments\n   Discussions with a number of people including\
    \ Dave Thaler, Thomas\n   Narten, Marcelo Bagnulo, Fred Baker, Remi Despres, Lorenzo\
    \ Colitti,\n   Dan Wing, and Brian Carpenter, and feedback during the Internet\
    \ Area\n   open meeting at IETF 72, were essential to the creation of the\n  \
    \ content in this document.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Jari Arkko\n   Ericsson\n   Jorvas  02420\n   Finland\n\
    \   EMail: jari.arkko@piuha.net\n   Mark Townsley\n   Cisco\n   Paris  75006\n\
    \   France\n   EMail: townsley@cisco.com\n"
