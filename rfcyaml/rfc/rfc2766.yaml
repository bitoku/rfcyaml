- title: __initial_text__
  contents:
  - '      Network Address Translation - Protocol Translation (NAT-PT)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies an IPv4-to-IPv6 transition mechanism, in\n\
    \   addition to those already specified in [TRANS]. This solution\n   attempts\
    \ to provide transparent routing, as defined in [NAT-TERM], to\n   end-nodes in\
    \ V6 realm trying to communicate with end-nodes in V4\n   realm and vice versa.\
    \ This is achieved using a combination of Network\n   Address Translation and\
    \ Protocol Translation. The scheme described\n   does not mandate dual-stacks\
    \ (i.e., IPv4 as well as V6 protocol\n   support) or special purpose routing requirements\
    \ (such as requiring\n   tunneling support) on end nodes. This scheme is based\
    \ on a\n   combination of address translation theme as described in [NAT-TERM]\n\
    \   and V6/V4 protocol translation theme as described in [SIIT].\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Special thanks to Pedro Marques for reviewing an earlier\
    \ version of\n   this memo.  Also, many thanks to Alan O'Neill and Martin Tatham,\
    \ as\n   the mechanism described in this document was initially developed\n  \
    \ through discussions with them.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction..................................................\
    \  2\n   2. Terminology...................................................  3\n\
    \      2.1 Network Address Translation (NAT).........................  4\n   \
    \   2.2 NAT-PT flavors............................................  4\n      \
    \   2.2.1 Traditional-NAT-PT...................................  4\n         2.2.2\
    \ Bi-directional-NAT-PT................................  5\n      2.3 Protocol\
    \ Translation (PT).................................  5\n      2.4 Application\
    \ Level Gateway (ALG)...........................  5\n      2.5 Requirements..............................................\
    \  5\n   3. Traditional-NAT-PT operation (V6 to V4).......................  6\n\
    \      3.1 NAT-PT Outgoing Sessions..................................  6\n   \
    \   3.2 NAPT-PT Outgoing Sessions.................................  7\n   4. Use\
    \ of DNS-ALG for Address assignment.........................  8\n      4.1 V4\
    \ Address Assignment for Incoming Connections (V4 to V6).  9\n      4.2 V4 Address\
    \ Assignment for Outgoing Connections (V6 to V4). 11\n   5. Protocol Translation\
    \ Details.................................. 12\n      5.1 Translating IPv4 Headers\
    \ to IPv6 Headers.................. 13\n      5.2 Translating IPv6 Headers to\
    \ IPv4 Headers.................. 13\n      5.3 TCP/UDP/ICMP Checksum Update..............................\
    \ 13\n   6. FTP Application Level Gateway (FTP-ALG) Support............... 14\n\
    \      6.1 Payload modifications for V4 originated FTP sessions...... 15\n   \
    \   6.2 Payload modifications for V6 originated FTP sessions...... 16\n      6.3\
    \ Header updates for FTP control packets.................... 16\n   7. NAT-PT\
    \ Limitations and Future Work............................ 17\n      7.1 Topology\
    \ Limitations...................................... 17\n      7.2 Protocol Translation\
    \ Limitations.......................... 17\n      7.3 Impact of Address Translation.............................\
    \ 18\n      7.4 Lack of End-to-End Security............................... 18\n\
    \      7.5 DNS Translation and DNSSEC................................ 18\n   8.\
    \ Applicability Statement....................................... 18\n   9. Security\
    \ Considerations....................................... 19\n   10. References...................................................\
    \ 19\n   Authors' Addresses............................................... 20\n\
    \   Full Copyright Statement......................................... 21\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   IPv6 is a new version of the IP protocol designed to modernize\
    \ IPv4\n   which was designed in the 1970s. IPv6 has a number of advantages over\n\
    \   IPv4 that will allow for future Internet growth and will simplify IP\n   configuration\
    \ and administration. IPv6 has a larger address space\n   than IPv4, an addressing\
    \ model that promotes aggressive route\n   aggregation and a powerful autoconfiguration\
    \ mechanism.  In time, it\n   is expected that Internet growth and a need for\
    \ a plug-and-play\n   solution will result in widespread adoption of IPv6.\n \
    \  There is expected to be a long transition period during which it will\n   be\
    \ necessary for IPv4 and IPv6 nodes to coexist and communicate.  A\n   strong,\
    \ flexible set of IPv4-to-IPv6 transition and coexistence\n   mechanisms will\
    \ be required during this transition period.\n   The SIIT proposal [SIIT] describes\
    \ a protocol translation mechanism\n   that allows communication between IPv6-only\
    \ and IPv4-only nodes via\n   protocol independent translation of IPv4 and IPv6\
    \ datagrams,\n   requiring no state information for the session. The SIIT proposal\n\
    \   assumes that V6 nodes are assigned a V4 address for communicating\n   with\
    \ V4 nodes, and does not specify a mechanism for the assignment of\n   these addresses.\n\
    \   NAT-PT uses a pool of V4 addresses for assignment to V6 nodes on a\n   dynamic\
    \ basis as sessions are initiated across V4-V6  boundaries. The\n   V4 addresses\
    \ are assumed to be globally unique. NAT-PT with private\n   V4 addresses is outside\
    \ the scope of this document and for further\n   study.  NAT-PT binds addresses\
    \ in V6 network with addresses in V4\n   network and vice versa to provide transparent\
    \ routing [NAT-TERM] for\n   the datagrams traversing between address realms.\
    \ This requires no\n   changes to end nodes and IP packet routing is completely\
    \ transparent\n   [NAT-TERM] to end nodes. It does, however, require NAT-PT to\
    \ track\n   the sessions it supports and mandates that inbound and outbound\n\
    \   datagrams pertaining to a session traverse the same NAT-PT router.\n   You\
    \ will note that the topology restrictions on NAT-PT are the same\n   with those\
    \ described for V4 NATs in [NAT-TERM]. Protocol translation\n   details specified\
    \ in [SIIT] would be used to extend address\n   translation with protocol syntax/semantics\
    \ translation. A detailed\n   applicability statement for NAT-PT may be found\
    \ at the end of this\n   document in section 7.\n   By combining SIIT protocol\
    \ translation with the dynamic address\n   translation capabilities of NAT and\
    \ appropriate ALGs, NAT-PT provides\n   a complete solution that would allow a\
    \ large number of commonly used\n   applications to interoperate between IPv6-only\
    \ nodes and IPv4-only\n   A fundamental assumption for NAT-PT is only to be use\
    \ when no other\n   native IPv6 or IPv6 over IPv4 tunneled means of communication\
    \ is\n   possible. In other words the aim is to only use translation between\n\
    \   IPv6 only nodes and IPv4 only nodes, while translation between IPv6\n   only\
    \ nodes and the IPv4 part of a dual stack node should be avoided\n   over other\
    \ alternatives.\n"
- title: 2. Terminology
  contents:
  - "2. Terminology\n   The majority of terms used in this document are borrowed almost\
    \ as is\n   from [NAT-TERM]. The following lists terms specific to this document.\n"
- title: 2.1 Network Address Translation (NAT)
  contents:
  - "2.1 Network Address Translation (NAT)\n   The term NAT in this document is very\
    \ similar to the IPv4 NAT\n   described in [NAT-TERM], but is not identical. IPv4\
    \ NAT translates\n   one IPv4 address into another IPv4 address. In this document,\
    \ NAT\n   refers to translation of an IPv4 address into an IPv6 address and\n\
    \   vice versa.\n   While the V4 NAT [NAT-TERM] provides routing between private\
    \ V4 and\n   external V4 address realms, NAT in this document provides routing\n\
    \   between a V6 address realm and an external V4 address realm.\n"
- title: 2.2 NAT-PT flavors
  contents:
  - "2.2 NAT-PT flavors\n   Just as there are various flavors identified with V4 NAT\
    \ in [NAT-\n   TERM], the following NAT-PT variations may be identified in this\n\
    \   document.\n"
- title: 2.2.1 Traditional NAT-PT
  contents:
  - "2.2.1 Traditional NAT-PT\n   Traditional-NAT-PT would allow hosts within a V6\
    \ network to access\n   hosts in the V4 network. In a traditional-NAT-PT, sessions\
    \ are uni-\n   directional, outbound from the V6 network.  This is in contrast\
    \ with\n   Bi-directional-NAT-PT, which permits sessions in both inbound and\n\
    \   outbound directions.\n   Just as with V4 traditional-NAT, there are two variations\
    \ to\n   traditional-NAT-PT, namely Basic-NAT-PT and NAPT-PT.\n   With Basic-NAT-PT,\
    \ a block of V4 addresses are set aside for\n   translating addresses of V6 hosts\
    \ as they originate sessions to the\n   V4 hosts in external domain. For packets\
    \ outbound from the V6 domain,\n   the source IP address and related fields such\
    \ as IP, TCP, UDP and\n   ICMP header checksums are translated.  For inbound packets,\
    \ the\n   destination IP address and the checksums as listed above are\n   translated.\n\
    \   NAPT-PT extends the notion of translation one step further by also\n   translating\
    \ transport identifier (e.g., TCP and UDP port numbers,\n   ICMP query identifiers).\
    \ This allows the transport identifiers of a\n   number of V6 hosts to be multiplexed\
    \ into the transport identifiers\n   of a single assigned V4 address.  NAPT-PT\
    \ allows a set of V6 hosts to\n   share a single V4 address. Note that NAPT-PT\
    \ can be combined with\n   Basic-NAT-PT so that a pool of external addresses are\
    \ used in\n   conjunction with port translation.\n   For packets outbound from\
    \ the V6 network, NAPT-PT would translate the\n   source IP address, source transport\
    \ identifier and related fields\n   such as IP, TCP, UDP and ICMP header checksums.\
    \ Transport identifier\n   can be one of TCP/UDP port or ICMP query ID. For inbound\
    \ packets, the\n   destination IP address, destination transport identifier and\
    \ the IP\n   and transport header checksums are translated.\n"
- title: 2.2.2  Bi-Directional-NAT-PT
  contents:
  - "2.2.2  Bi-Directional-NAT-PT\n   With Bi-directional-NAT-PT, sessions can be\
    \ initiated from hosts in\n   V4 network as well as the V6 network. V6 network\
    \ addresses are bound\n   to V4 addresses, statically or dynamically as connections\
    \ are\n   established in either direction.  The name space (i.e., their Fully\n\
    \   Qualified Domain Names) between hosts in V4 and V6 networks is\n   assumed\
    \ to be end-to-end unique.  Hosts in V4 realm access V6-realm\n   hosts by using\
    \ DNS for address resolution. A DNS-ALG [DNS-ALG] must\n   be employed in conjunction\
    \ with Bi-Directional-NAT-PT to facilitate\n   name to address mapping.  Specifically,\
    \ the DNS-ALG must be capable\n   of translating V6 addresses in DNS Queries and\
    \ responses into their\n   V4-address bindings, and vice versa, as DNS packets\
    \ traverse between\n   V6 and V4 realms.\n"
- title: 2.3 Protocol Translation (PT)
  contents:
  - "2.3 Protocol Translation (PT)\n   PT in this document refers to the translation\
    \ of an IPv4 packet into\n   a semantically equivalent IPv6 packet and vice versa.\
    \  Protocol\n   translation details are described in [SIIT].\n"
- title: 2.4 Application Level Gateway (ALG)
  contents:
  - "2.4 Application Level Gateway (ALG)\n   Application Level Gateway (ALG) [NAT-TERM]\
    \ is an application specific\n   agent that allows a V6 node to communicate with\
    \ a V4 node and vice\n   versa. Some applications carry network addresses in payloads.\
    \ NAT-PT\n   is application unaware and does not snoop the payload. ALG could\
    \ work\n   in conjunction with NAT-PT to provide support for many such\n   applications.\n"
- title: 2.5 Requirements
  contents:
  - "2.5 Requirements\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in\
    \ this\n   document, are to be interpreted as described in [KEYWORDS].\n"
- title: 3. Traditional-NAT-PT Operation (V6 to V4)
  contents:
  - "3. Traditional-NAT-PT Operation (V6 to V4)\n   NAT-PT offers a straight forward\
    \ solution based on transparent\n   routing [NAT-TERM] and address/protocol translation,\
    \ allowing a large\n   number of applications in V6 and V4 realms to inter-operate\
    \ without\n   requiring any changes to these applications.\n   In the following\
    \ paragraphs we describe the operation of\n   traditional-NAT-PT and the way that\
    \ connections can be initiated from\n   a host in IPv6 domain to a host in IPv4\
    \ domain through a\n   traditional-NAT-PT\n"
- title: 3.1 Basic-NAT-PT Operation
  contents:
  - "3.1 Basic-NAT-PT Operation\n          [IPv6-B]-+\n                   |      \
    \            +==============+\n          [IPv6-A]-+-[NAT-PT]---------| IPv4 network\
    \ |--[IPv4-C]\n                        |             +==============+\n      \
    \           (pool of v4 addresses)\n                     Figure 1: IPv6 to IPv4\
    \ communication\n           Node IPv6-A has an IPv6 address -> FEDC:BA98::7654:3210\n\
    \           Node IPv6-B has an IPv6 address -> FEDC:BA98::7654:3211\n        \
    \      Node IPv4-C has an IPv4 address -> 132.146.243.30\n   NAT-PT has a pool\
    \ of addresses including the IPv4 subnet\n   120.130.26/24\n   The V4 addresses\
    \ in the address pool could be allocated one-to-one to\n   the V6 addresses of\
    \ the V6 end nodes in which case one needs as many\n   V4 addresses as V6 end\
    \ points. In this document we assume that the V6\n   network has less V4 addresses\
    \ than V6 end nodes and thus dynamic\n   address allocation is required for at\
    \ least some of them.\n   Say the IPv6 Node A wants to communicate with the IPv4\
    \ Node C.  Node\n   A creates a packet with:\n      Source Address, SA=FEDC:BA98::7654:3210\
    \ and Destination\n      Address, DA = PREFIX::132.146.243.30\n   NOTE: The prefix\
    \ PREFIX::/96 is advertised in the stub domain by the\n   NAT-PT, and packets\
    \ addressed to this PREFIX will be routed to the\n   NAT-PT. The pre-configured\
    \ PREFIX only needs to be routable within\n   the IPv6 stub domain and as such\
    \ it can be any routable prefix that\n   the network administrator chooses.\n\
    \   The packet is routed via the NAT-PT gateway, where it is translated\n   to\
    \ IPv4.\n   If the outgoing packet is not a session initialisation packet, the\n\
    \   NAT-PT SHOULD already have stored some state about the related\n   session,\
    \ including assigned IPv4 address and other parameters for the\n   translation.\
    \  If this state does not exist, the packet SHOULD be\n   silently discarded.\n\
    \   If the packet is a session initialisation packet, the NAT-PT locally\n   allocates\
    \ an address (e.g: 120.130.26.10)  from  its pool of\n   addresses and the packet\
    \ is translated to IPv4. The translation\n   parameters are cached for the duration\
    \ of the session and the IPv6 to\n   IPv4 mapping is retained by NAT-PT.\n   The\
    \ resulting IPv4 packet has SA=120.130.26.10 and DA=132.146.243.30.\n   Any returning\
    \ traffic will be recognised as belonging to the same\n   session by NAT-PT. NAT-PT\
    \ will use the state information to translate\n   the packet, and the resulting\
    \  addresses will be\n   SA=PREFIX::132.146.243.30, DA=FEDC:BA98::7654:3210. \
    \ Note that this\n   packet can now be routed inside the IPv6-only stub network\
    \ as normal.\n"
- title: 3.2 NAPT-PT Operation
  contents:
  - "3.2 NAPT-PT Operation\n   NAPT-PT, which stands for \"Network Address Port Translation\
    \ +\n   Protocol Translation\", would allow V6 nodes to communicate with the\n\
    \   V4 nodes transparently using a single V4 address. The TCP/UDP ports\n   of\
    \ the V6 nodes are translated into TCP/UDP ports of the registered\n   V4 address.\n\
    \   While NAT-PT support is limited to TCP, UDP and other port\n   multiplexing\
    \ type of applications, NAPT-PT solves a problem that is\n   inherent with NAT-PT.\
    \ That is, NAT-PT would fall flat when the pool\n   of V4 addresses assigned for\
    \ translation purposes is exhausted. Once\n   the address pool is exhausted, newer\
    \ V6 nodes cannot establish\n   sessions with the outside world anymore. NAPT-PT,\
    \ on the other hand,\n   will allow for a maximum of 63K TCP and 63K UDP sessions\
    \ per IPv4\n   address before having no TCP and UDP ports left to assign.\n  \
    \ To modify the example sited in figure 1, we could have NAPT-PT on the\n   border\
    \ router (instead of NAT-PT) and all V6 addresses could be\n   mapped to a single\
    \ v4 address 120.130.26.10.\n   IPv6 Node A would establish a TCP session with\
    \ the IPv4 Node C as\n   follows:\n   Node A creates a packet with:\n   Source\
    \ Address, SA=FEDC:BA98::7654:3210 , source TCP port = 3017 and\n   Destination\
    \ Address, DA = PREFIX::132.146.243.30, destination TCP\n   port = 23.\n   When\
    \ the packet reaches the NAPT-PT box, NAPT-PT would assign one of\n   the TCP\
    \ ports from the assigned V4 address to translate the tuple of\n   (Source Address,\
    \ Source TCP port) as follows:\n      SA=120.130.26.10, source TCP port = 1025\
    \  and\n      DA=132.146.243.30, destination TCP port = 23.\n   The returning\
    \ traffic from 132.146.243.30, TCP port 23 will be\n   recognised as belonging\
    \ to the same session and will be translated\n   back to V6 as follows:\n    \
    \  SA = PREFIX::132.146.243.30, source TCP port = 23;\n      DA = FEDC:BA98::7654:3210\
    \ , destination TCP port = 3017\n   Inbound NAPT-PT sessions are restricted to\
    \ one server per service,\n   assigned via static TCP/UDP port mapping. For example,\
    \ the Node\n   [IPv6-A] in figure 1 may be the only HTTP server (port 80) in the\
    \ V6\n   domain. Node [IPv4-C] sends a packet:\n      SA=132.146.243.30, source\
    \ TCP port = 1025  and\n      DA=120.130.26.10, destination TCP port = 80\n  \
    \ NAPT-PT will translate this packet to:\n      SA=PREFIX::132.146.243.30, source\
    \ TCP port = 1025\n      DA=FEDC:BA98::7654:3210, destination TCP port = 80\n\
    \   In the above example, note that all sessions which reach NAPT-PT with\n  \
    \ a destination port of 80 will be redirected to the same node [IPv6-\n   A].\n"
- title: 4. Use of DNS-ALG for Address Assignment
  contents:
  - "4. Use of DNS-ALG for Address Assignment\n   An IPv4 address is assigned by NAT-PT\
    \ to a V6 node when NAT-PT\n   identifies the start of session, inbound or outbound.\
    \ Identification\n   of the start of a new inbound session is performed differently\
    \ than\n   for outbound sessions. However, the same V4 address pool is used for\n\
    \   assignment to V6 nodes, irrespective of whether a session is\n   initiated\
    \ outbound from a V6 node or initiated inbound from a V4\n   node.\n   Policies\
    \ determining what type of sessions are allowed and in which\n   direction and\
    \ from/to which nodes is out of the scope of this\n   document.\n   IPv4 name\
    \ to address mappings are held in the DNS with \"A\" records.\n   IPv6 name to\
    \ address mappings are at the moment held in the DNS with\n   \"AAAA\" records.\
    \ \"A6\" records have also been defined but at the time\n   of writing they are\
    \ neither fully standardized nor deployed.\n   In any case, the DNS-ALG's principle\
    \ of operation described in this\n   section is the same with either \"AAAA\"\
    \ or \"A6\" records. The only\n   difference is that a name resolution using \"\
    A6\" records may require\n   more than one query - reply pairs. The DNS-ALG SHOULD,\
    \ in that case,\n   track all the replies in the transaction before translating\
    \ an \"A6\"\n   record to an \"A\" record.\n   One of the aims of NAT-PT design\
    \ is to only use translation when\n   there is no other means of communication,\
    \ such as native IPv6 or some\n   form of tunneling. For the following discussion\
    \ NAT-PT, in addition\n   to the IPv4 connectivity that it has it may also have\
    \ a native IPv6\n   and/or a tunneled IPv6 connection.\n"
- title: 4.1 V4 Address assignment for incoming connections (V4 to V6)
  contents:
  - "4.1 V4 Address assignment for incoming connections (V4 to V6)\n        [DNS]--+\n\
    \               |              [DNS]------[DNS]-------[DNS]\n      [IPv6-B]-+\
    \                           |           |\n               |                  +==============+\
    \     |\n      [IPv6-A]-+----[NAT-PT]------| IPv4 network |--[IPv4-C]\n      \
    \                 |          +==============+\n                 (pool of v4 addresses)\n\
    \                     Figure 2: IPv4 to IPv6 communication\n           Node IPv6-A\
    \ has an IPv6 address -> FEDC:BA98::7654:3210\n           Node IPv6-B has an IPv6\
    \ address -> FEDC:BA98::7654:3211\n              Node IPv4-C has an IPv4 address\
    \ -> 132.146.243.30\n   NAT-PT  has a pool of addresses including the IPv4 subnet\n\
    \   120.130.26/24\n   In figure 2 above, when Node C's name resolver sends a name\
    \ look up\n   request for Node A, the lookup query is directed to the DNS server\
    \ on\n   the V6 network. Considering that NAT-PT is residing on the border\n \
    \  router between V4 and V6 networks, this request datagram would\n   traverse\
    \ through the NAT-PT router. The DNS-ALG on the NAT-PT device\n   would modify\
    \ DNS Queries for A records going into the V6 domain as\n   follows: (Note that\
    \ a TCP/UDP DNS packet is recognised by the fact\n   that its source or destination\
    \ port number is 53)\n      a) For Node Name to Node Address Query requests: \
    \ Change the Query\n         type from \"A\" to \"AAAA\" or \"A6\".\n      b)\
    \ For Node address to Node name query requests:  Replace the\n         string\
    \ \"IN-ADDR.ARPA\" with the string \"IP6.INT\".  Replace the\n         V4 address\
    \ octets (in reverse order) preceding the string \"IN-\n         ADDR.ARPA\" with\
    \ the corresponding V6 address (if there exists a\n         map) octets in reverse\
    \ order.\n   In the opposite direction, when a DNS response traverses from the\
    \ DNS\n   server on the V6 network to the V4 node, the DNS-ALG once again\n  \
    \ intercepts the DNS packet and would:\n      a) Translate DNS responses for \"\
    AAAA\" or \"A6\" records into \"A\"\n         records, (only translate \"A6\"\
    \ records when the name has\n         completely been resolved)\n      b) Replace\
    \ the V6 address resolved by the V6 DNS with the V4\n         address internally\
    \ assigned by the NAT-PT router.\n   If a V4 address is not previously assigned\
    \ to this V6 node, NAT-PT\n   would assign one at this time. As an example say\
    \ IPv4-C attempts to\n   initialise a session with node IPv6-A by making a name\
    \ lookup (\"A\"\n   record) for Node-A . The name query goes to the local DNS\
    \ and from\n   there it is propagated to the DNS server of the IPv6 network. \
    \ The\n   DNS-ALG intercepts and translates the \"A\" query to \"AAAA\" or \"\
    A6\"\n   query and then forwards it to the DNS server in the IPv6 network\n  \
    \ which replies as follows: (The example uses AAAA records for\n   convenience)\n\
    \      Node-A    AAAA     FEDC:BA98::7654:3210,\n   this is returned by the DNS\
    \ server and gets intercepted and\n   translated by the DNS-ALG to:\n      Node-A\
    \     A      120.130.26.1\n   The DNS-ALG also holds the mapping between FEDC:BA98::7654:3210\
    \ and\n   120.130.26.1 in NAT-PT. The \"A\" record is then returned to Node-C.\n\
    \   Node-C can now  initiate a session as follows:\n      SA=132.146.243.30, source\
    \ TCP port = 1025  and\n      DA=120.130.26.1, destination TCP port = 80\n   the\
    \ packet will be routed to NAT-PT, which since it already holds a\n   mapping\
    \ between  FEDC:BA98::7654:3210 and 120.130.26.1 can translate\n   the packet\
    \ to:\n      SA=PREFIX::132.146.243.30, source TCP port = 1025\n      DA=FEDC:BA98::7654:3210,\
    \ destination TCP port = 80\n   the communication can now proceed as normal.\n\
    \   The TTL values on all DNS resource records (RRs) passing through\n   NAT-PT\
    \ SHOULD be set to 0 so that DNS servers/clients do not cache\n   temporarily\
    \ assigned RRs. Note, however, that due to some buggy DNS\n   client implementations\
    \ a value of 1 might in some cases work better.\n   The TTL values should be left\
    \ unchanged for statically mapped\n   addresses.\n   Address mappings for incoming\
    \ sessions, as described above, are\n   subject to denial of service attacks since\
    \ one can make multiple\n   queries for nodes residing in the V6 network causing\
    \ the DNS-ALG to\n   map all V4 addresses in NAT-PT and thus block legitimate\
    \ incoming\n   sessions. Thus, address mappings for incoming sessions should time\n\
    \   out to minimise the effect of denial of service attacks.\n   Additionally,\
    \ one IPv4 address (using NAPT-PT, see 3.2) could be\n   reserved for outgoing\
    \ sessions only to minimise the effect of such\n   attacks to outgoing sessions.\n"
- title: 4.2 V4 Address assignment for outgoing connections (V6 to V4)
  contents:
  - "4.2 V4 Address assignment for outgoing connections (V6 to V4)\n   V6 nodes learn\
    \ the address of V4 nodes from the DNS server in the V4\n   domain or from the\
    \ DNS server internal to the V6 network. We\n   recommend that DNS servers internal\
    \ to V6 domains maintain a mapping\n   of names to IPv6 addresses for internal\
    \ nodes and possibly cache\n   mappings for some external nodes. In the case where\
    \ the DNS server in\n   the v6 domain contains the mapping for external V4 nodes,\
    \ the DNS\n   queries will not cross the V6 domain and that would obviate the\
    \ need\n   for DNS-ALG intervention. Otherwise, the queries will cross the V6\n\
    \   domain and are subject to DNS-ALG intervention.  We recommend\n   external\
    \ DNS servers in the V4 domain cache name mapping for external\n   nodes (i.e.,\
    \ V4 nodes) only. Zone transfers across IPv4 - IPv6\n   boundaries are strongly\
    \ discouraged.\n   In the case of NAPT-PT, a TCP/UDP source port is assigned from\
    \ the\n   registered V4 address upon detection of each new outbound session.\n\
    \   We saw that a V6 node that needs to communicate with a V4 node needs\n   to\
    \ use a specific prefix (PREFIX::/96) in front of the IPv4 address\n   of the\
    \ V4 node. The above technique allows the use of this PREFIX\n   without any configuration\
    \ in the nodes.\n   To create another example from Figure 2 say Node-A wants to\
    \ set up a\n   session with Node-C. For this Node-A starts by making a name look-up\n\
    \   (\"AAAA\" or \"A6\" record) for Node-C.\n   Since Node-C may have IPv6 and/or\
    \ IPv4 addresses, the DNS-ALG on the\n   NAT-PT device forwards the original AAAA/A6\
    \ query to the external DNS\n   system unchanged, as well as an A query for the\
    \ same node. If an\n   AAAA/A6 record exists for the destination, this will be\
    \ returned to\n   NAT-PT which will forward it, also unchanged, to the originating\n\
    \   host.\n   If there is an A record for Node-C the reply also returns to the\n\
    \   NAT-PT. The DNS-ALG then, translates the reply adding the appropriate\n  \
    \ PREFIX and forwards it to the originating device with any IPv6\n   addresses\
    \ that might have learned. So, if the reply is\n      NodeC    A     132.146.243.30,\
    \ it is translated to\n      NodeC   AAAA   PREFIX::132.146.243.30 or to\n   \
    \   NodeC    A6    PREFIX::132.146.243.30\n   Now Node A can use this address\
    \ like any other IPv6 address and the\n   V6 DNS server can even cache it as long\
    \ as the PREFIX does not\n   change.\n   An issue here is how the V6 DNS server\
    \ in the V6 stub domain talks to\n   the V4 domain outside the V6 stub domain.\
    \ Remember that there are no\n   dual stack nodes here. The external V4 DNS server\
    \ needs to point to a\n   V4 address, part of the V4 pool of addresses, available\
    \ to NAT-PT.\n   NAT-PT keeps a one-to-one mapping between this V4 address and\
    \ the V6\n   address of the internal V6 DNS server. In the other direction, the\
    \ V6\n   DNS server points to a V6 address formed by the IPv4 address of the\n\
    \   external V4 DNS servers and the prefix (PREFIX::/96) that indicates\n   non\
    \ IPv6 nodes.  This mechanism can easily be extended to accommodate\n   secondary\
    \ DNS servers.\n   Note that the scheme described in this section impacts DNSSEC.\
    \ See\n   section 7.5 of this document for details.\n"
- title: 5. Protocol Translation Details
  contents:
  - "5. Protocol Translation Details\n   The IPv4 and ICMPv4 headers are similar to\
    \ their V6 counterparts but\n   a number of field are either missing, have different\
    \ meaning or\n   different length. NAT-PT SHOULD translate all IP/ICMP headers\
    \ from v4\n   to v6 and vice versa in order to make end-to-end IPv6 to IPv4\n\
    \   communication possible. Due to the address translation function and\n   possible\
    \ port multiplexing, NAT-PT SHOULD also make appropriate\n   adjustments to the\
    \ upper layer protocol (TCP/UDP) headers. A separate\n   section on FTP-ALG describes\
    \ the changes FTP-ALG would make to FTP\n   payload as an FTP packet traverses\
    \ from V4 to V6 realm or vice versa.\n   Protocol Translation details are described\
    \ in [SIIT], but there are\n   some modifications required to SIIT because of\
    \ the fact that NAT-PT\n   also performs Network Address Translation.\n"
- title: 5.1 Translating IPv4 headers to IPv6 headers
  contents:
  - "5.1 Translating IPv4 headers to IPv6 headers\n   This is done exactly the same\
    \ as in SIIT apart from the following\n   fields:\n      Source Address:\n   \
    \      The low-order 32 bits is the IPv4 source address. The high-\n         order\
    \ 96 bits is the designated PREFIX for all v4\n         communications. Addresses\
    \ using this PREFIX will be routed\n         to the NAT-PT gateway (PREFIX::/96)\n\
    \      Destination Address:\n         NAT-PT retains a mapping between the IPv4\
    \ destination\n         address and the IPv6 address of the destination node.\
    \ The\n         IPv4 destination address is replaced by the IPv6 address\n   \
    \      retained in that mapping.\n"
- title: 5.2 Translating IPv6 headers to IPv4 headers
  contents:
  - "5.2 Translating IPv6 headers to IPv4 headers\n   This is done exactly the same\
    \ as in SIIT apart from the Source\n   Address which should be determined as follows:\n\
    \      Source Address:\n         The NAT-PT retains a mapping between the IPv6\
    \ source address\n         and an IPv4 address from the pool of IPv4 addresses\n\
    \         available. The IPv6 source address is replaced by the IPv4\n       \
    \  address retained in that mapping.\n      Destination Address:\n         IPv6\
    \ packets that are translated have a destination address\n         of the form\
    \ PREFIX::IPv4/96. Thus the low-order 32 bits of\n         the IPv6 destination\
    \ address is copied to the IPv4\n         destination address.\n"
- title: 5.3 TCP/UDP/ICMP Checksum Update
  contents:
  - "5.3 TCP/UDP/ICMP Checksum Update\n   NAT-PT retains mapping between IPv6 address\
    \ and an IPv4 address from\n   the pool of IPv4 addresses available. This mapping\
    \ is used in the\n   translation of packets that go through NAT-PT.\n   The following\
    \ sub-sections describe TCP/UDP/ICMP checksum update\n   procedure in NAT-PT,\
    \ as packets are translated from V4 to V6 and vice\n   versa.\n"
- title: 5.3.1 TCP/UDP/ICMP Checksum Update from IPv4 to IPv6
  contents:
  - "5.3.1 TCP/UDP/ICMP Checksum Update from IPv4 to IPv6\n   UDP checksums, when\
    \ set to a non-zero value, and TCP checksum SHOULD\n   be recalculated to reflect\
    \ the address change from v4 to v6. The\n   incremental checksum adjustment algorithm\
    \ may be borrowed from [NAT].\n   In the case of NAPT-PT, TCP/UDP checksum should\
    \ be adjusted to\n   account for the address and TCP/UDP port changes, going from\
    \ V4 to V6\n   address.\n   When the checksum of a V4 UDP packet is set to zero,\
    \ NAT-PT MUST\n   evaluate the checksum in its entirety for the V6-translated\
    \ UDP\n   packet. If a V4 UDP packet with a checksum of zero arrives in\n   fragments,\
    \ NAT-PT MUST await all the fragments until they can be\n   assembled into a single\
    \ non-fragmented packet and evaluate the\n   checksum prior to forwarding the\
    \ translated V6 UDP packet.\n   ICMPv6, unlike ICMPv4, uses a pseudo-header, just\
    \ like UDP and TCP\n   during checksum computation. As a result, when the ICMPv6\
    \ header\n   checksum is computed [SIIT], the checksum needs to be adjusted to\n\
    \   account for the additional pseudo-header. Note, there may also be\n   adjustments\
    \ required to the checksum due to changes in the source and\n   destination addresses\
    \ (and changes in TCP/UDP/ICMP identifiers in the\n   case of NAPT-PT) of the\
    \ payload carried within ICMP.\n"
- title: 5.3.2 TCP/UDP/ICMP Checksum Update from IPv6 to IPv4
  contents:
  - "5.3.2 TCP/UDP/ICMP Checksum Update from IPv6 to IPv4\n   TCP and UDP checksums\
    \ SHOULD be recalculated to reflect the address\n   change from v6 to v4. The\
    \ incremental checksum adjustment algorithm\n   may be borrowed from [NAT]. In\
    \ the case of NAPT-PT, TCP/UDP checksums\n   should be adjusted to account for\
    \ the address and TCP/UDP port\n   changes, going from V6 to V4 addresses. For\
    \ UDP packets, optionally,\n   the checksum may simply be changed to zero.\n \
    \  The checksum calculation for a V4 ICMP header needs to be derived\n   from\
    \ the V6 ICMP header by running the checksum adjustment algorithm\n   [NAT] to\
    \ remove the V6 pseudo header from the computation. Note, the\n   adjustment must\
    \ additionally take into account changes to the\n   checksum as a result of updates\
    \ to the source and destination\n   addresses (and transport ports in the case\
    \ of NAPT-PT) made to the\n   payload carried within ICMP.\n"
- title: 6. FTP Application Level Gateway (FTP-ALG) Support
  contents:
  - "6. FTP Application Level Gateway (FTP-ALG) Support\n   Because an FTP control\
    \ session carries, in its payload, the IP\n   address and TCP port information\
    \ for the data session, an FTP-ALG is\n   required to provide application level\
    \ transparency for this popular\n   Internet application.\n   In the FTP application\
    \ running on a legacy V4 node, arguments to the\n   FTP PORT command and arguments\
    \ in PASV response(successful) include\n   an IP V4 address and a TCP port, both\
    \ represented in ASCII as\n   h1,h2,h3,h4,p1,p2. However, [FTP-IPV6] suggests\
    \ EPRT and EPSV command\n   extensions to FTP, with an intent to eventually retire\
    \ the use of\n   PORT and PASV commands. These extensions may be used on a V4\
    \ or V6\n   node. FTP-ALG, facilitating transparent FTP between V4 and V6 nodes,\n\
    \   works as follows.\n"
- title: 6.1 Payload modifications for V4 originated FTP sessions
  contents:
  - "6.1 Payload modifications for V4 originated FTP sessions\n   A V4 host may or\
    \ may not have the EPRT and EPSV command extensions\n   implemented in its FTP\
    \ application. If a V4 host originates the FTP\n   session and uses PORT or PASV\
    \ command, the FTP-ALG will translate\n   these commands into EPRT and EPSV commands\
    \ respectively prior to\n   forwarding to the V6 node. Likewise, EPSV response\
    \ from V6 nodes will\n   be translated into PASV response prior to forwarding\
    \ to V4 nodes.\n   The format of EPRT and EPSV commands and EPSV response may\
    \ be\n   specified as follows[FTP-IPV6].\n      EPRT<space><d><net-prt><d><net-addr><d><tcp-port><d>\n\
    \      EPSV<space><net-prt>\n            (or)\n      EPSV<space>ALL\n      Format\
    \ of EPSV response(Positive): 229 <text indicating\n      extended passive mode>\
    \ (<d><d><d><tcp-port><d>)\n   PORT command from a V4 node is translated into\
    \ EPRT command, by\n   setting the protocol <net-prt> field to AF #2 (IPV6) and\
    \ translating\n   the V4 host Address (represented as h1,h2,h3,h4) into its NAT-PT\n\
    \   assigned V6 address in string notation, as defined in [V6ADDR] in the\n  \
    \ <net-addr> field.  TCP port represented by p1,p2 in PORT command must\n   be\
    \ specified as a decimal <tcp-port> in the EPRT command. Further,\n   <tcp-port>\
    \ translation may also be required in the case of NAPT-PT.\n   PASV command from\
    \ a V4 node is be translated into a EPSV command with\n   the <net-prt> argument\
    \ set to AF #2.  EPSV response from a V6 node is\n   translated into PASV response\
    \ prior to forwarding to the target V4\n   host.\n   If a V4 host originated the\
    \ FTP session and was using EPRT and EPSV\n   commands, the FTP-ALG will simply\
    \ translate the parameters to these\n   commands, without altering the commands\
    \ themselves. The protocol\n   Number <net-prt> field will be translated from\
    \ AF #1 to AF #2.\n   <net-addr> will be translated from the V4 address in ASCII\
    \ to its\n   NAT-PT assigned V6 address in string notation as defined in [V6ADDR].\n\
    \   <tcp-port> argument in EPSV response requires translation only in the\n  \
    \ case of NAPT-PT.\n"
- title: 6.2 Payload modifications for V6 originated FTP sessions
  contents:
  - "6.2 Payload modifications for V6 originated FTP sessions\n   If a V6 host originates\
    \ the FTP session, however, the FTP-ALG has two\n   approaches to pursue. In the\
    \ first approach, the FTP-ALG will leave\n   the command strings \"EPRT\" and\
    \ \"EPSV\" unaltered and simply translate\n   the <net-prt>, <net-addr> and <tcp-port>\
    \ arguments from V6 to its\n   NAT-PT (or NAPT-PT) assigned V4 information. <tcp-port>\
    \ is translated\n   only in the case of NAPT-PT. Same goes for EPSV response from\
    \ V4\n   node. This is the approach we recommend to ensure forward support for\n\
    \   RFC 2428.  However, with this approach, the V4 hosts are mandated to\n   have\
    \ their FTP application upgraded to support EPRT and EPSV\n   extensions to allow\
    \ access to V4 and V6 hosts, alike.\n   In the second approach, the FTP-ALG will\
    \ translate the command\n   strings \"EPRT\" and \"EPSV\" and their parameters\
    \ from the V6 node into\n   their equivalent NAT-PT assigned V4 node info and\
    \ attach to \"PORT\"\n   and \"PASV\" commands prior to forwarding to V4 node.\
    \  Likewise, PASV\n   response from V4 nodes is translated into EPSV response\
    \ prior to\n   forwarding to the target V6 nodes.  However, the FTP-ALG would\
    \ be\n   unable to translate the command \"EPSV<space>ALL\" issued by V6 nodes.\n\
    \   In such a case, the V4 host, which receives the command, may return\n   an\
    \ error code indicating unsupported function. This error response\n   may cause\
    \ many RFC 2428 compliant FTP applications to simply fail,\n   because EPSV support\
    \ is mandated by RFC 2428. The benefit of this\n   approach, however, is that\
    \ is does not impose any FTP upgrade\n   requirements on V4 hosts.\n"
- title: 6.3 Header updates for FTP control packets
  contents:
  - "6.3 Header updates for FTP control packets\n   All the payload translations considered\
    \ in the previous sections are\n   based on ASCII encoded data.  As a result,\
    \ these translations may\n   result in a change in the size of packet.\n   If\
    \ the new size is the same as the previous, only the TCP checksum\n   needs adjustment\
    \ as a result of the payload translation.  If the new\n   size is different from\
    \ the previous, TCP sequence numbers should also\n   be changed to reflect the\
    \ change in the length of the FTP control\n   session payload. The IP packet length\
    \ field in the V4 header or the\n   IP payload length field in the V6 header should\
    \ also be changed to\n   reflect the new payload size. A table is used by the\
    \ FTP-ALG to\n   correct the TCP sequence and acknowledgement numbers in the TCP\n\
    \   header for control packets in both directions.\n   The table entries should\
    \ have the source address, source data port,\n   destination address and destination\
    \ data port for V4 and V6 portions\n   of the session, sequence number delta for\
    \ outbound control packets\n   and sequence number delta for inbound control packets.\n\
    \   The sequence number for an outbound control packet is increased by\n   the\
    \ outbound sequence number delta, and the acknowledgement number\n   for the same\
    \ outbound packet is decreased by the inbound sequence\n   number delta.  Likewise,\
    \ the sequence number for an inbound packet is\n   increased by the inbound sequence\
    \ number delta and the\n   acknowledgement number for the same inbound packet\
    \ is decreased by\n   the outbound sequence number delta.\n"
- title: 7. NAT-PT Limitations and Future Work
  contents:
  - "7. NAT-PT Limitations and Future Work\n   All limitations associated to NAT [NAT-TERM]\
    \ are also associated to\n   NAT-PT.  Here are the most important of them in detail,\
    \ as well as\n   some unique to NAT-PT.\n"
- title: 7.1 Topology limitations
  contents:
  - "7.1 Topology limitations\n   There are limitations to using the NAT-PT translation\
    \ method. It is\n   mandatory that all requests and responses pertaining to a\
    \ session be\n   routed via the same NAT-PT router. One way to guarantee this\
    \ would be\n   to have NAT-PT based on a border router that is unique to a stub\n\
    \   domain, where all IP packets are either originated from the domain or\n  \
    \ destined to the domain. This is a generic problem with NAT and it is\n   fully\
    \ described in [NAT-TERM].\n   Note, this limitation does not apply to packets\
    \ originating from or\n   directed to dual-stack nodes that do not require packet\
    \ translation.\n   This is because in a dual-stack set-up, IPv4 addresses implied\
    \ in a\n   V6 address can be identified from the address format PREFIX::x.y.z.w\n\
    \   and a dual-stack router can accordingly route a packet between v4 and\n  \
    \ dual-stack nodes without tracking state information.\n   This should also not\
    \ affect IPv6 to IPv6 communication and in fact\n   only actually use translation\
    \ when no other means of communication is\n   possible.  For example NAT-PT may\
    \ also have a native IPv6 connection\n   and/or some kind of tunneled IPv6 connection.\
    \ Both of the above\n   connections should be preferred over translation when\
    \ possible. The\n   above makes sure that NAT-PT is a tool only to be used to\
    \ assist\n   transition to native IPv6 to IPv6 communication.\n"
- title: 7.2 Protocol Translation Limitations
  contents:
  - "7.2 Protocol Translation Limitations\n   A number of IPv4 fields have changed\
    \ meaning in IPv6 and translation\n   is not straightforward. For example, the\
    \ option headers semantics and\n   syntax have changed significantly in IPv6.\
    \  Details of IPv4 to IPv6\n   Protocol Translation can be found in [SIIT].\n"
- title: 7.3 Impact of Address Translation
  contents:
  - "7.3 Impact of Address Translation\n   Since NAT-PT performs address translation,\
    \ applications that carry\n   the IP address in the higher layers will not work.\
    \  In this case\n   Application Layer Gateways (ALG) need to be incorporated to\
    \ provide\n   support for those applications. This is a generic problem with NAT\n\
    \   and it is fully described in [NAT-TERM].\n"
- title: 7.4 Lack of end-to-end security
  contents:
  - "7.4 Lack of end-to-end security\n   One of the most important limitations of\
    \ the NAT-PT proposal is the\n   fact that end-to-end network layer security is\
    \ not possible.  Also\n   transport and application layer security may not be\
    \ possible for\n   applications that carry IP addresses to the application layer.\
    \ This\n   is an inherent limitation of the Network Address Translation\n   function.\n\
    \   Independent of NAT-PT, end-to-end IPSec security is not possible\n   across\
    \ different address realms. The two end-nodes that seek IPSec\n   network level\
    \ security must both support one of IPv4 or IPv6.\n"
- title: 7.5 DNS Translation and DNSSEC
  contents:
  - "7.5 DNS Translation and DNSSEC\n   The scheme described in section 4.2 involves\
    \ translation of DNS\n   messages.  It is clear that this scheme can not be deployed\
    \ in\n   combination with secure DNS.  I.e., an authoritative DNS name server\n\
    \   in the V6 domain cannot sign replies to queries that originate from\n   the\
    \ V4 world.  As a result, an V4 end-node that demands DNS replies\n   to be signed\
    \ will reject replies that have been tampered with by\n   NAT-PT.\n   The good\
    \ news, however, is that only servers in V6 domain that need\n   to be accessible\
    \ from the V4 world pay the price for the above\n   limitation, as V4 end-nodes\
    \ may not access V6 servers due to DNS\n   replies not being signed.\n   Also\
    \ note that zone transfers between DNS-SEC servers within the same\n   V6 network\
    \ are not impacted.\n   Clearly, with DNS SEC deployment in DNS servers and end-host\n\
    \   resolvers, the scheme suggested in this document would not work.\n"
- title: 8. Applicability Statement
  contents:
  - "8. Applicability Statement\n   NAT-PT can be a valuable transition tool at the\
    \ border of a stub\n   network that has been deployed as an IPv6 only network\
    \ when it is\n   connected to an Internet that is either V4-only or a combination\
    \ of\n   V4 and V6.\n   NAT-PT, in its simplest form, without the support of DNS-ALG,\n\
    \   provides one way connectivity between an IPv6 stub domain and the\n   IPv4\
    \  world meaning  that only sessions initialised by IPv6 nodes\n   internal to\
    \ the IPv6 stub domain can be translated, while sessions\n   initiated by  IPv4\
    \ nodes  are dropped. This makes NAT-PT a useful\n   tool to IPv6 only stub networks\
    \ that need to be able to maintain\n   connectivity with the  IPv4 world without\
    \ the need to deploy servers\n   visible to the IPv4 world.\n   NAT-PT  combined\
    \  with a DNS-ALG provides bi-directional connectivity\n   between the IPv6 stub\
    \ domain and the IPv4 world allowing sessions  to\n   be  initialised  by  IPv4\
    \  nodes  outside the IPv6 stub domain.  This\n   makes NAT-PT useful for IPv6\
    \ only stub  networks that need to  deploy\n   servers visible to the IPv4 world.\n\
    \   Some applications count on a certain degree of address stability for\n   their\
    \ operation. Dynamic address reuse by NAT-PT might not be\n   agreeable for these\
    \ applications. For hosts running such address\n   critical applications, NAT-PT\
    \ may be configured to provide static\n   address mapping between the host's V6\
    \ address and a specific V4\n   address. This will ensure that address related\
    \ changes by NAT-PT do\n   not become a significant source of operational failure.\n"
- title: 9. Security Considerations
  contents:
  - "9. Security Considerations\n   Section 7.4 of this document states that end-to-end\
    \ network and\n   transport layer security are not possible when a session is\n\
    \   intercepted by a NAT-PT.  Also application layer security may not be\n   possible\
    \ for applications that carry IP addresses in the application\n   layer.\n   Section\
    \ 7.5 of this document states that the DNS-ALG can not be\n   deployed in combination\
    \ with secure DNS.\n   Finally, all of the security considerations described in\
    \ [NAT-TERM]\n   are applicable to this document as well.\n"
- title: 10. REFERENCES
  contents:
  - "10. REFERENCES\n   [DNS-ALG]  Srisuresh, P., Tsirtsis, G., Akkiraju, P. and A.\n\
    \              Heffernan, \"DNS extensions to Network Address Translators\n  \
    \            (DNS_ALG)\", RFC 2694, September 1999.\n   [DNSSEC]   Eastlake, D.,\
    \ \"Domain Name System Security Extensions\",\n              RFC 2065, March 1999.\n\
    \   [FTP-IPV6] Allman, M., Ostermann, S. and C. Metz, \"FTP Extensions for\n \
    \             IPv6 and NATs\", RFC 2428, September 1998.\n   [KEYWORDS] Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [NAT]      Egevang, K. and P. Francis, \"\
    The IP Network Address\n              Translator (NAT)\", RFC 1631, May 1994.\n\
    \   [NAT-TERM] Srisuresh, P. and M. Holdrege, \"IP Network Address\n         \
    \     Translator (NAT) Terminology and Considerations\", RFC\n              2663,\
    \ August 1999.\n   [SIIT]     Nordmark, E., \"Stateless IP/ICMP Translator (SIIT)\"\
    , RFC\n              2765, February 2000.\n   [TRANS]    Gilligan, R. and  E.\
    \ Nordmark, \"Transition Mechanisms for\n              IPv6 Hosts and Routers\"\
    , RFC 1933, April 1996.\n   [V6ADDR]   Hinden, R. and S. Deering, \"IP Version\
    \ 6 Addressing\n              Architecture\", RFC 2373, July 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   George Tsirtsis\n   Internet Futures\n   B29 Room 129\n\
    \   BT Adastral Park\n   IPSWICH IP5 3RE\n   England\n   Phone: +44 181 8260073\n\
    \   Fax:   +44 181 8260073\n   EMail: george.tsirtsis@bt.com\n   EMail (alternative):\
    \ gtsirt@hotmail.com\n   Pyda Srisuresh\n   630 Alder Drive\n   Milpitas, CA 95035\n\
    \   U.S.A.\n   Phone: (408) 519-3849\n   EMail: srisuresh@yahoo.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
