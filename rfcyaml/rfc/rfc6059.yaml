- contents:
  - '       Simple Procedures for Detecting Network Attachment in IPv6

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Detecting Network Attachment allows hosts to assess if its existing\n
    \  addressing or routing configuration is valid for a newly connected\n   network.
    \ This document provides simple procedures for Detecting\n   Network Attachment
    in IPv6 hosts, and procedures for routers to\n   support such services.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6059.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Goals  . . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n     1.2.  Applicability  . . . . . . . . . . . . . . . . . . . .
    . .  3\n     1.3.  Link Identification Model  . . . . . . . . . . . . . . . .
    \ 4\n     1.4.  DNA Overview . . . . . . . . . . . . . . . . . . . . . . .  4\n
    \    1.5.  Working Assumptions  . . . . . . . . . . . . . . . . . . .  5\n   2.
    \ Requirements Notation  . . . . . . . . . . . . . . . . . . . .  5\n   3.  Terminology
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  6\n   4.  The Simple DNA
    Address Table (SDAT)  . . . . . . . . . . . . .  7\n   5.  Host Operations  .
    . . . . . . . . . . . . . . . . . . . . . .  7\n     5.1.  On Receipt of a Router
    Advertisement . . . . . . . . . . .  7\n     5.2.  After Assignment of a DHCPv6
    Address . . . . . . . . . . .  8\n     5.3.  Steps Involved in Detecting Link
    Change  . . . . . . . . .  8\n     5.4.  Link-Layer Indication  . . . . . . .
    . . . . . . . . . . .  8\n     5.5.  Sending Neighbor Discovery probes  . . .
    . . . . . . . . .  9\n       5.5.1.  Sending Router Solicitations . . . . . .
    . . . . . . .  9\n       5.5.2.  Sending Neighbor Solicitations . . . . . . .
    . . . . .  9\n       5.5.3.  Concurrent Sending of RS and NS Probes . . . . .
    . . .  9\n       5.5.4.  Initiating DHCPv6 Exchange . . . . . . . . . . . . .
    .  9\n     5.6.  Contents of the Neighbor Discovery Messages  . . . . . . . 10\n
    \      5.6.1.  Neighbor Solicitation Messages . . . . . . . . . . . . 10\n       5.6.2.
    \ Router Solicitation Messages . . . . . . . . . . . . . 10\n     5.7.  Response
    Gathering . . . . . . . . . . . . . . . . . . . . 11\n       5.7.1.  Receiving
    Neighbor Advertisements  . . . . . . . . . . 11\n       5.7.2.  Receiving Router
    Advertisements  . . . . . . . . . . . 11\n       5.7.3.  Conflicting Results  .
    . . . . . . . . . . . . . . . . 11\n     5.8.  Further Host Operations  . . .
    . . . . . . . . . . . . . . 11\n     5.9.  On Connecting to a New Point of Attachment
    . . . . . . . . 12\n     5.10. Periodic Maintenance of the SDAT . . . . . . .
    . . . . . . 12\n     5.11. Recommended Retransmission Behavior  . . . . . . .
    . . . . 12\n   6.  Pseudocode for Simple DNA  . . . . . . . . . . . . . . . .
    . . 13\n   7.  Constants  . . . . . . . . . . . . . . . . . . . . . . . . . .
    15\n   8.  Relationship to DNAv4  . . . . . . . . . . . . . . . . . . . . 15\n
    \  9.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15\n   10.
    Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 16\n   11. References
    . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n     11.1. Normative References
    . . . . . . . . . . . . . . . . . . . 17\n     11.2. Informative References .
    . . . . . . . . . . . . . . . . . 17\n   Appendix A.  Issues with Confirming Manually
    Assigned Addresses  . 18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Hosts require procedures to simply and reliably identify
    if they have\n   moved to a network to which they had been recently connected.
    \ In\n   order to detect reconnection to a previously visited network, router\n
    \  and neighbor discovery messages are used to collect reachability and\n   configuration
    information.  This information is used to detect if the\n   host has attached
    to a link for which it may still have valid address\n   and other configuration
    information, and which it can use until it\n   receives confirmation through either
    the Neighbor Discovery protocol\n   or DHCPv6.\n   This document incorporates
    feedback from host and router operating\n   systems implementors, which seeks
    to make implementation and adoption\n   of IPv6 change detection procedures simple
    for general use.\n"
  - contents:
    - "1.1.  Goals\n   The goal of this document is to specify a simple procedure
      for\n   Detecting Network Attachment (Simple DNA) that has the following\n   characteristics.\n
      \  o  Routers do not have to be modified to support this scheme.\n   o  The
      most common use cases are optimized.\n   o  In the worst case, detection latency
      is equal to that of standard\n      neighbor discovery so that performance is
      never degraded.\n   o  False positives are not acceptable.  A host must not
      wrongly\n      conclude that it has reattached to a previously visited network.\n
      \  o  False negatives are acceptable.  A host may fail to identify a\n      previously
      visited link correctly and attempt to acquire fresh\n      addressing and configuration
      information.\n"
    title: 1.1.  Goals
  - contents:
    - "1.2.  Applicability\n   The Simple DNA protocol provides substantial benefits
      over standard\n   neighbor discovery procedures [RFC4861] in some scenarios
      and does\n   not provide any benefit at all in certain other scenarios.  This
      is\n   intentional as Simple DNA was designed for simplicity rather than\n   completeness.
      \ In particular, the Simple DNA protocol provides\n   maximum benefits when
      a host moves between a small set of known\n   links.  When a host moves to a
      completely new link that is previously\n   unknown, the performance of the Simple
      DNA protocol will be identical\n   to that using standard neighbor discovery
      procedures [RFC4861].  In\n   this case, the main benefit of the Simple DNA
      protocol is to\n   immediately flush out the inoperable addresses and configuration\n
      \  instead of timing them out.  The Simple DNA procedure provides\n   support
      for addresses configured using either IPv6 Stateless Address\n   Autoconfiguration
      [RFC4862] or DHCPv6 [RFC3315].  It does not support\n   manually configured
      addresses since they are not widely used and can\n   cause unpredictable results
      and/or aggressive probing behavior (see\n   Appendix A).\n"
    title: 1.2.  Applicability
  - contents:
    - "1.3.  Link Identification Model\n   Earlier methods of Detecting Network Attachment,
      e.g., the procedure\n   defined in [DNA-PROTOCOL], relied on detecting whether
      the host was\n   still connected to the same link.  If the host was attached
      to the\n   same link, all information related to the link such as the routers,\n
      \  prefixes, and configuration parameters was considered to be valid.\n   The
      Simple DNA protocol follows an alternate approach where it relies\n   on probing
      each previously known router to determine whether to use\n   information learnt
      from THAT router.  This allows Simple DNA to probe\n   routers learnt from multiple
      earlier attachments to optimize movement\n   between a known set of links.\n"
    title: 1.3.  Link Identification Model
  - contents:
    - "1.4.  DNA Overview\n   Detecting Network Attachment is performed by hosts after
      detecting a\n   link-layer \"up\" indication.  The host uses a combination of
      unicast\n   Neighbor Solicitations (NSs) and multicast Router Solicitations
      (RSs)\n   in order to determine whether previously encountered routers are\n
      \  present on the link, in which case an existing configuration can be\n   reused.
      \ If previously encountered routers are not present, then\n   either IPv6 Stateless
      Address Autoconfiguration and/or DHCPv6 is used\n   for configuration.\n   Hosts
      implementing Simple DNA may also send DHCPv6 packets, as\n   described in Section
      5.5.4.  Since Simple DNA does not modify the\n   DHCPv6 protocol or state machine,
      the operation of DHCPv6 is\n   unchanged.\n   Routers that follow the standard
      neighbor discovery procedure\n   described in [RFC4861] will delay the router
      advertisement (RA) by a\n   random period between 0 and MAX_RA_DELAY_TIME (defined
      to be 500 ms)\n   as described in Section 6.2.6 of [RFC4861].  In addition,
      consecutive\n   RAs sent to the all-nodes multicast address are rate limited
      to no\n   more than one advertisement every MIN_DELAY_BETWEEN_RAS (defined to\n
      \  be 3 seconds).  This will result in a worst-case delay of 3.5 seconds\n   in
      the absence of any packet loss.\n   Hosts implementing Simple DNA can detect
      the presence of a previously\n   encountered router using unicast Neighbor Solicitations.
      \ As a\n   result, where the host with a valid configuration is returning to
      a\n   previously encountered link, delays in the sending of a Router\n   Advertisement
      (RA) will not delay configuration as long as NS probing\n   is successful.  However,
      in situations where the host is attaching to\n   a link for the first time,
      or where it does not have a valid IP\n   address on the link, it will be dependent
      on the receipt of an RA for\n   stateless autoconfiguration.  In these situations,
      delays in the\n   receipt of an RA can be significant and may result in service\n
      \  disruption.\n"
    title: 1.4.  DNA Overview
  - contents:
    - "1.5.  Working Assumptions\n   There are a series of assumptions about the network
      environment that\n   underpin these procedures.\n   o  The combination of the
      link-layer address and the link-local IPv6\n      address of a router is unique
      across links.\n   o  Hosts receive indications when a link layer comes up.  Without\n
      \     this, they would not know when to commence the DNA procedure.\n   If these
      assumptions do not hold, host change detection systems will\n   not function
      optimally.  In that case, they may occasionally detect\n   change spuriously
      or experience some delay in Detecting Network\n   Attachment.  The delays so
      experienced will be no longer than those\n   caused by following the standard
      neighbor discovery procedure\n   described in [RFC4861].\n"
    title: 1.5.  Working Assumptions
  title: 1.  Introduction
- contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Notation
- contents:
  - "3.  Terminology\n   +---------------------+---------------------------------------------+\n
    \  |         Term        | Definition                                  |\n   +---------------------+---------------------------------------------+\n
    \  |  Valid IPv6 address | An IPv6 address configured on the node that |\n   |
    \                    | has a valid lifetime greater than zero.     |\n   |                     |
    \                                            |\n   |    Operable IPv6    | An
    IPv6 address configured on the node that |\n   |       address       | can be
    used safely on the current link.     |\n   |                     |                                             |\n
    \  |  Router identifier  | Identifier formed using the link-local      |\n   |
    \                    | address of a router along with its          |\n   |                     |
    link-layer address.                         |\n   |                     |                                             |\n
    \  |        D-Flag       | Flag indicating whether the address was     |\n   |
    \                    | obtained using Stateless Address            |\n   |                     |
    Autoconfiguration (SLAAC) or DHCPv6.  If it |\n   |                     | is set
    to 0, then SLAAC was used to         |\n   |                     | configure the
    address.  If it is set to 1,  |\n   |                     | then DHCPv6 was used
    to configure the       |\n   |                     | address.                                    |\n
    \  |                     |                                             |\n   |
    \       O-Flag       | Flag indicating whether the address is      |\n   |                     |
    operable.  If it is set to 0, the address   |\n   |                     | is inoperable.
    \ If it is set to 1, the      |\n   |                     | address is operable.
    \                       |\n   |                     |                                             |\n
    \  |        S-Flag       | Flag indicating whether SEND [RFC3971] was  |\n   |
    \                    | used in the Router Advertisement that       |\n   |                     |
    resulted in the creation/modification of    |\n   |                     | this
    SDAT entry.  If it is set to 0, then   |\n   |                     | SEND was
    not used.  If it is set to 1, then |\n   |                     | SEND was used.
    \                             |\n   |                     |                                             |\n
    \  |   Candidate Router  | A router address in the SDAT that is        |\n   |
    \      Address       | associated with at least one valid address. |\n   |                     |
    \                                            |\n   |   Candidate Router  | A set
    of router addresses that has been     |\n   |         Set         | identified
    for NS-based probing.            |\n   +---------------------+---------------------------------------------+\n
    \                     Table 1: Simple DNA Terminology\n"
  title: 3.  Terminology
- contents:
  - "4.  The Simple DNA Address Table (SDAT)\n   In order to correctly perform the
    procedure described in this\n   document, the host needs to maintain a data structure
    called the\n   Simple DNA address table (SDAT).  The host needs to maintain this\n
    \  data structure for each interface on which it performs Simple DNA.\n   Each
    entry in the SDAT table will be indexed by the router identifier\n   (link-local
    + link-layer address of the router) and consists of at\n   least the following
    parameters.  Fields tagged as [S] are used for\n   addresses configured using
    SLAAC.  Fields tagged as [D] are used for\n   addresses obtained using DHCPv6.
    \ Fields tagged as [S+D] are used in\n   both cases.\n   o  [S+D] Link-local IPv6
    address of the router(s)\n   o  [S+D] Link-layer (MAC) address of the router(s)\n
    \  o  [S+D] Flag indicating whether the address was obtained using SLAAC\n      or
    DHCPv6.  (The D-Flag)\n   o  [S+D] IPv6 address and its related parameters like
    valid lifetime,\n      preferred lifetime, etc.\n   o  [S] Prefix from which the
    address was formed.\n   o  [S] Flag indicating whether SEND was used.  (The S-Flag)\n
    \  o  [D] DHCP-specific information in case DHCPv6 [RFC3315] was used to\n      acquire
    the address.  This information includes the DUID, the\n      IAID, a flag indicating
    IA_NA/IA_TA, and configuration information\n      such as DNS server address,
    NTP server address, etc.\n   o  [S+D] Flag indicating whether the address is operable.
    \ (The\n      O-Flag)\n"
  title: 4.  The Simple DNA Address Table (SDAT)
- contents:
  - "5.  Host Operations\n   On connecting to a new point of attachment, the host
    performs the\n   Detecting Network Attachment procedure in order to determine
    whether\n   the existing addressing and configuration information are still\n
    \  valid.\n"
  - contents:
    - "5.1.  On Receipt of a Router Advertisement\n   When the host receives a Router
      Advertisement and the router\n   identifier of the sending router is not present
      in the SDAT, the host\n   processes the Router Advertisement as specified in
      Section 6.3.4 of\n   [RFC4861].  Additionally, the host performs the following
      operations.\n   If the Router Advertisement is protected by SEND, the S-Flag
      MUST be\n   set to 1 in the SDAT entries created/modified by this RA.\n   o
      \ The host configures addresses out of the autoconfigurable prefixes\n      advertised
      in the RA, as specified in [RFC4862].  The host MUST\n      add an SDAT entry
      (indexed by this router identifier) for each\n      such address the host configures.\n
      \  o  The host might have already configured addresses out of the\n      autoconfigurable
      prefixes advertised in the RA.  This could be a\n      result of receiving the
      prefix in an RA from another router on the\n      same link.  The host MUST
      add an SDAT entry (indexed by this\n      router identifier) for each such address
      the host had already\n      configured.\n   o  The host might have DHCPv6-assigned
      addresses that are known to be\n      operable on the link.  The host MUST add
      an SDAT entry (indexed by\n      this router identifier) for each such DHCPv6
      address.\n"
    title: 5.1.  On Receipt of a Router Advertisement
  - contents:
    - "5.2.  After Assignment of a DHCPv6 Address\n   After the host is assigned an
      address by a DHCPv6 server, it needs to\n   associate the address with the routers
      on link.  The host MUST create\n   one SDAT entry for each of the on-link routers
      associated with the\n   DHCPv6-assigned address.\n"
    title: 5.2.  After Assignment of a DHCPv6 Address
  - contents:
    - "5.3.  Steps Involved in Detecting Link Change\n   The steps involved in basic
      detection of network attachment are:\n   o  Link-layer indication\n   o  Sending
      of neighbor discovery probes\n   o  Response gathering and assessment\n   These
      steps are described below.\n"
    title: 5.3.  Steps Involved in Detecting Link Change
  - contents:
    - "5.4.  Link-Layer Indication\n   In order to start detection of network attachment
      procedures, a host\n   typically requires a link-layer indication that the medium
      has become\n   available [RFC4957].\n   After the indication is received, the
      host MUST mark all currently\n   configured (non-tentative) IP addresses as
      inoperable until the\n   change detection process completes.  It MUST also set
      all Neighbor\n   Cache (NC) entries for the routers on its Default Router List
      to\n   STALE.  This is done to speed up the acquisition of a new default\n   router
      in case the host attaches to a previously unvisited link.\n"
    title: 5.4.  Link-Layer Indication
  - contents:
    - '5.5.  Sending Neighbor Discovery probes

      '
    - contents:
      - "5.5.1.  Sending Router Solicitations\n   When a host receives a link-layer
        \"up\" indication, it SHOULD\n   immediately send a Router Solicitation (as
        specified in Section 6.3.7\n   of [RFC4861]).  The Router Solicitation is
        sent to the all-routers\n   multicast address using a link-local address as
        the source address\n   [RFC4861].  Even if the host is in possession of more
        than one valid\n   IPv6 address, it MUST send only one router solicitation
        using a valid\n   link-local address as the source address.\n"
      title: 5.5.1.  Sending Router Solicitations
    - contents:
      - "5.5.2.  Sending Neighbor Solicitations\n   The host iterates through the
        SDAT to identify a set of candidate\n   routers for NS-based probing.  Each
        router in the SDAT that is\n   associated with at least one valid address
        is added to the candidate\n   router set exactly once.  For each router in
        the candidate router\n   set, the host MUST send a unicast Neighbor Solicitation
        to the\n   router's link-local address it obtained from the lookup on the
        SDAT.\n   The host MUST set the link-layer destination address in each of
        these\n   neighbor solicitations to the link-layer address of the router stored\n
        \  in the SDAT.  The host MUST NOT send unicast Neighbor Solicitations\n   to
        a router that is not associated to a valid address in the SDAT.\n   If at
        least one entry in the SDAT for a given router had the S-Flag\n   set, the
        host SHOULD use SEND to secure the NS probe being sent to\n   the router.\n"
      title: 5.5.2.  Sending Neighbor Solicitations
    - contents:
      - "5.5.3.  Concurrent Sending of RS and NS Probes\n   The host SHOULD send the
        Neighbor-Solicitation-based unicast probes\n   in parallel with the multicast
        Router Solicitation.  Since sending\n   NSs is just an optimization, doing
        the NSs and the RS in parallel\n   ensures that the procedure does not run
        slower than it would if it\n   only used a Router Solicitation.\n   NOTE:
        A Simple DNA implementation SHOULD limit its NS-based probing\n   to at most
        six previously seen routers.\n"
      title: 5.5.3.  Concurrent Sending of RS and NS Probes
    - contents:
      - "5.5.4.  Initiating DHCPv6 Exchange\n   On receiving a link-layer \"up\" indication,
        the host will initiate a\n   DHCPv6 exchange (with the timing and protocol
        as specified in\n   [RFC3315]) in order to verify whether the addresses and
        configuration\n   obtained using DHCPv6 are still usable on the link.  Note
        that\n   DHCPv6, as specified today, only attempts to confirm addresses\n
        \  obtained on the most recently attached link.\n"
      title: 5.5.4.  Initiating DHCPv6 Exchange
    title: 5.5.  Sending Neighbor Discovery probes
  - contents:
    - '5.6.  Contents of the Neighbor Discovery Messages

      '
    - contents:
      - "5.6.1.  Neighbor Solicitation Messages\n   This section describes the contents
        of the neighbor solicitation\n   probe messages sent during the probing procedure.\n
        \  Source Address:           A link-local address assigned to the\n                             probing
        host.\n   Destination Address:      The link-local address of the router being\n
        \                            probed as learned from the SDAT.\n   Hop Limit:
        \               255\n   ND Options:\n      Target Address:        The link-local
        address of the router being\n                             probed as learnt
        from the SDAT.\n   Link-Layer Header:\n      Destination Address:   The link-layer
        (MAC) address of the router\n                             being probed as
        learnt from the SDAT.\n   The probing node SHOULD include the source link-layer
        address option\n   in the probe messages.\n"
      title: 5.6.1.  Neighbor Solicitation Messages
    - contents:
      - "5.6.2.  Router Solicitation Messages\n   This section describes the contents
        of the router solicitation probe\n   message sent during the probing procedure.\n
        \  Source Address:           A link-local address assigned to the\n                             probing
        host.\n   Destination Address:      The all-routers multicast address.\n   Hop
        Limit:                255\n   The probing node SHOULD NOT include the source
        link-layer address\n   option in the probe messages.\n"
      title: 5.6.2.  Router Solicitation Messages
    title: 5.6.  Contents of the Neighbor Discovery Messages
  - contents:
    - '5.7.  Response Gathering

      '
    - contents:
      - "5.7.1.  Receiving Neighbor Advertisements\n   When a Neighbor Advertisement
        is received from a router in response\n   to an NS probe, the host MUST verify
        that both the IPv6 and link-\n   layer (MAC) addresses of the router match
        the expected values before\n   utilizing the configuration associated with
        the detected network\n   (prefixes, MTU, etc.).  The host MUST then go through
        the SDAT and\n   mark the addresses (both SLAAC and DHCPv6 acquired) associated
        with\n   the router as operable.\n"
      title: 5.7.1.  Receiving Neighbor Advertisements
    - contents:
      - "5.7.2.  Receiving Router Advertisements\n   On reception of a Router Advertisement,
        the host MUST go through the\n   SDAT and mark all the addresses associated
        with the router (both\n   SLAAC and DHCPv6 acquired) as inoperable.  The host
        MUST then process\n   the Router Advertisement as specified in Section 6.3.4
        of [RFC4861].\n"
      title: 5.7.2.  Receiving Router Advertisements
    - contents:
      - '5.7.3.  Conflicting Results

        '
      - contents:
        - "5.7.3.1.  Conflicting Results between RS and NS Probes\n   Where the conclusions
          obtained from the Neighbor Solicitation/\n   Advertisement from a given
          router and the RS/RA exchange with the\n   same router differ, the results
          obtained from the RS/RA will be\n   considered definitive.  In case the
          Neighbor Advertisement was\n   secured using SEND and the Router Advertisement
          was not, the host\n   MUST wait for SEND_NA_GRACE_TIME to see if a SEND-secured
          RA is\n   received.  If a SEND-secured RA is not received, the conclusions\n
          \  obtained from the NS/NA exchange will be considered definitive.\n"
        title: 5.7.3.1.  Conflicting Results between RS and NS Probes
      - contents:
        - "5.7.3.2.  Conflicting Results between DHCPv6 and NS Probes\n   Where the
          conclusions obtained from the Neighbor Solicitation/\n   Advertisement for
          a given DHCPv6-assigned address and the conclusions\n   obtained from the
          DHCPv6 exchange differ, the results obtained from\n   the DHCPv6 exchange
          will be considered definitive.\n"
        title: 5.7.3.2.  Conflicting Results between DHCPv6 and NS Probes
      title: 5.7.3.  Conflicting Results
    title: 5.7.  Response Gathering
  - contents:
    - "5.8.  Further Host Operations\n   Operations subsequent to Detecting Network
      Attachment depend upon\n   whether or not the host has reconnected to a previously
      visited\n   network.\n   After confirming the reachability of the associated
      router using an\n   NS/NA pair, the host performs the following steps.\n   o
      \ The host SHOULD rejoin any solicited nodes' multicast groups for\n      addresses
      it continues to use.\n   o  The host SHOULD select a default router as described
      in Section\n      6.3.6 of [RFC4861].\n   If the host has determined that it
      has reattached to a previously\n   visited link, it SHOULD NOT perform duplicate
      address detection on\n   the addresses that have been confirmed to be operable.\n
      \  If the NS-based probe with a router did not complete or if the RS-\n   based
      probe on the same router completed with different prefixes than\n   the ones
      in the SDAT, the host MUST begin address configuration\n   techniques, as indicated
      in a received Router Advertisement [RFC4861]\n   [RFC4862].\n"
    title: 5.8.  Further Host Operations
  - contents:
    - "5.9.  On Connecting to a New Point of Attachment\n   A host usually maintains
      SDAT entries from some number of previously\n   visited networks.  When the
      host attaches to a previously unknown\n   network, it MAY need to discard some
      older SDAT entries.\n"
    title: 5.9.  On Connecting to a New Point of Attachment
  - contents:
    - "5.10.  Periodic Maintenance of the SDAT\n   The host SHOULD maintain the SDAT
      table by removing entries when the\n   valid lifetime for the prefix and address
      expires, that is, at the\n   same time that the prefix is removed from the Prefix
      List in\n   [RFC4861].  The host SHOULD also remove a router from an SDAT entry\n
      \  when that router stops advertising a particular prefix.  When three\n   consecutive
      RAs from a particular router have not included a prefix,\n   then the router
      should be removed from the corresponding SDAT entry.\n   Likewise, if a router
      starts advertising a prefix for which there\n   already exists an SDAT entry,then
      that router should be added to the\n   SDAT entry.\n"
    title: 5.10.  Periodic Maintenance of the SDAT
  - contents:
    - "5.11.  Recommended Retransmission Behavior\n   Where the NS probe does not
      complete successfully, it usually implies\n   that the host is not attached
      to the network whose configuration is\n   being tested.  In such circumstances,
      there is typically little value\n   in aggressively retransmitting unicast neighbor
      solicitations that do\n   not elicit a response.\n   Where unicast Neighbor
      Solicitations and Router Solicitations are\n   sent in parallel, one strategy
      is to forsake retransmission of\n   Neighbor Solicitations and to allow retransmission
      only of Router\n   Solicitations or DHCPv6.  In order to reduce competition
      between\n   unicast Neighbor Solicitations and Router Solicitations and DHCPv6\n
      \  retransmissions, a DNAv6 implementation that retransmits may utilize\n   the
      retransmission strategy described in the DHCPv6 specification\n   [RFC3315],
      scheduling DNAv6 retransmissions between Router\n   Solicitations or DHCPv6
      retransmissions.\n   If a response is received to any unicast Neighbor Solicitation,\n
      \  pending retransmissions of the same MUST be canceled.  A Simple DNA\n   implementation
      SHOULD NOT retransmit a Neighbor Solicitation more\n   than twice.  To provide
      damping in the case of spurious link-up\n   indications, the host SHOULD NOT
      perform the Simple DNA procedure\n   more than once a second.\n"
    title: 5.11.  Recommended Retransmission Behavior
  title: 5.  Host Operations
- contents:
  - "6.  Pseudocode for Simple DNA\n   /* Link-up indication received on INTERFACE
    */\n   /* Start Simple DNA process */\n   /* Mark all addresses as inoperable
    */\n   Configured_Address_List=Get_Address_List(INTERFACE);\n   for each Configured_Address
    in Configured_Address_List\n   {\n     if (Get_Address_State(Configured_Address)!=AS_TENTATIVE)\n
    \    {\n       Set_Address_State(Configured_Address,AS_INOPERABLE);\n     }\n
    \  }\n   /* Mark all routers' NC entries as STALE to speed up */\n   /* acquisition
    of new router if link change has occurred */\n   for each Router_Address in DEFAULT_ROUTER_LIST\n
    \  {\n     NCEntry=Get_Neighbor_Cache_Entry(Router_Address);\n     Set_Neighbor_Cache_Entry_State(NCEntry,NCS_STALE);\n
    \  }\n   /* Thread A : Send Router Solicitation */\n   RS_Target_Address=FF02::2;\n
    \  RS_Source_Address=Get_Any_Link_Local_Address(INTERFACE);\n   Send_Router_Solicitation(RS_Source_Address,RS_Target_Address);\n
    \  /* Thread B : Send Neighbor Solicitation(s) */\n   Previously_Known_Router_List=Get_Router_List_from_SDAT();\n
    \  NS_Source_Address=Get_Any_Link_Local_Address(INTERFACE);\n   for each Router_Address
    in Previously_Known_Router_List\n   {\n     if (Get_Any_Valid_Address_from_SDAT(Router_Address))\n
    \    {\n       Send_Neighbor_Solicitation(NS_Source_Address,\n                                  Router_Address.L3_Address,\n
    \                                 Router_Address.L2_Address);\n     }\n   }\n
    \  /* Thread C : Response collection of RAs */\n   /* Received Router Advertisement
    processing */\n   /* Only for RAs received from routers in the SDAT */\n   L3_Source=Get_L3_Source(RECEIVED_MESSAGE);\n
    \  L2_Source=Get_L2_Source(RECEIVED_MESSAGE);\n   SDAT_Entry_List=Get_Entries_from_SDAT_L2L3(L3_Source,L2_Source));\n
    \  /* Mark all the addresses associated with the router as inoperable */\n   for
    each SDAT_Entry in SDAT_Entry_List\n   {\n       Set_Address_State(SDAT_Entry,AS_INOPERABLE);\n
    \  }\n   /* Ignore further NAs from this router */\n   /* after delaying for x
    milliseconds */\n   Add_Router_to_NA_Ignore_List(L3_Source,SEND_NA_GRACE_PERIOD);\n
    \  /* Perform Standard RA processing as per RFC 4861 / RFC 4862 */\n   /* Thread
    D : Response collection of NAs */\n   /* Received Neighbor Advertisement processing
    */\n   /* Only for NAs received as response to DNA NSs */\n   L3_Source=Get_L3_Source(RECEIVED_MESSAGE);\n
    \  L2_Source=Get_L2_Source(RECEIVED_MESSAGE);\n   if (Is_Router_on_NA_Ignore_List(L3_Source))
    {\n     /* Ignore message and wait for next message */\n     continue;\n   }\n
    \  SDAT_Entry_List=Get_Entries_from_SDAT_L2L3(L3_Source,L2_Source));\n   for each
    SDAT_Entry in SDAT_Entry_List\n   {\n       /* Address is operable. */\n       Set_Address_State(SDAT_Entry,AS_OPERABLE);\n
    \      /* Configure on Interface */\n   }\n                    Figure 1: Pseudocode
    for Simple DNA\n   NOTE: This section does not include any pseudocode for sending
    of the\n   DHCPv6 packets since the DHCPv6 exchange is orthogonal to the Simple\n
    \  DNA process.\n"
  title: 6.  Pseudocode for Simple DNA
- contents:
  - "7.  Constants\n      SEND_NA_GRACE_TIME\n         Definition: An optional period
    to wait after Neighbor\n         Solicitation before adopting a non-SEND RA's
    link change\n         information.\n         Value: 40 milliseconds\n"
  title: 7.  Constants
- contents:
  - "8.  Relationship to DNAv4\n   DNAv4 [RFC4436] specifies a set of steps that optimize
    the (common)\n   case of reattachment to an IPv4 network that a host has been\n
    \  connected to previously by attempting to reuse a previous (but still\n   valid)
    configuration.  This document shares the same goal as DNAv4\n   (that of minimizing
    the handover latency in moving between points of\n   attachment) but differs in
    the steps it performs to achieve this\n   goal.  Another difference is that this
    document supports stateless\n   autoconfiguration of addresses in addition to
    addresses configured\n   using DHCPv6.\n"
  title: 8.  Relationship to DNAv4
- contents:
  - "9.  Security Considerations\n   A host may receive Router Advertisements from
    non-SEND devices, after\n   receiving a link-layer indication.  While it is necessary
    to assess\n   quickly whether a host has moved to another network, it is important\n
    \  that the host's current secured SEND [RFC3971] router information is\n   not
    replaced by an attacker that spoofs an RA and purports to change\n   the link.\n
    \  As such, the host SHOULD send a Neighbor Solicitation to the existing\n   SEND
    router upon link-up indication as described above in\n   Section 5.4.  The host
    SHOULD then ensure that unsecured router\n   information does not cause deletion
    of existing SEND state, within\n   MIN_DELAY_BETWEEN_RAS, in order to allow for
    a present SEND router to\n   respond.\n   If the current default router is a SEND-secured
    router, the host\n   SHOULD wait SEND_NA_GRACE_TIME after transmission before
    adopting a\n   new default router.\n   Even if SEND signatures on RAs are used,
    it may not be immediately\n   clear if the router is authorized to make such advertisements.
    \ As\n   such, a host SHOULD NOT treat such devices as secure until and unless\n
    \  authorization delegation discovery is successful.\n   Unless SEND or another
    form of secure address configuration is used,\n   the DNA procedure does not in
    itself provide positive, secure\n   authentication of the router(s) on the network,
    or authentication of\n   the network itself, as would be provided, e.g., by mutual\n
    \  authentication at the link layer.  Therefore, when such assurance is\n   not
    available, the host MUST NOT make any security-sensitive\n   decisions based on
    the DNA procedure alone.  In particular, it MUST\n   NOT decide that it has moved
    from an untrusted to a trusted network,\n   and MUST NOT make any security decisions
    that depend on the\n   determination that such a transition has occurred.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgments\n   This document is the product of a discussion the authors
    had with\n   Bernard Aboba, Thomas Narten, Erik Nordmark, and Dave Thaler at IETF\n
    \  69.  The authors would like to thank them for clearly detailing the\n   requirements
    of the solution and the goals it needed to meet and for\n   helping to explore
    the solution space.  The authors would like to\n   thank the authors and editors
    of the complete DNA specification for\n   detailing the overall problem space
    and solutions.  The authors would\n   like to thank Jari Arkko for driving the
    evolution of a simple and\n   probabilistic DNA solution.  The authors would like
    to thank Bernard\n   Aboba, Thomas Narten, Jari Arkko, Sathya Narayan, Julien
    Laganier,\n   Domagoj Premec, Jin Hyeock-Choi, Alfred Hoenes, Frederic Rossi,
    Ralph\n   Droms, Ted Lemon, Erik Nordmark, Lars Eggert, Brian Carpenter, and\n
    \  Yaron Sheffer for performing reviews on the document and providing\n   valuable
    comments to drive the document forward.\n"
  title: 10.  Acknowledgments
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]       Bradner, S., \"Key words for
      use in RFCs to Indicate\n                   Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [RFC3315]       Droms, R., Bound, J., Volz, B., Lemon,
      T., Perkins,\n                   C., and M. Carney, \"Dynamic Host Configuration\n
      \                  Protocol for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3971]
      \      Arkko, J., Kempf, J., Zill, B., and P. Nikander,\n                   \"SEcure
      Neighbor Discovery (SEND)\", RFC 3971, March\n                   2005.\n   [RFC4861]
      \      Narten, T., Nordmark, E., Simpson, W., and H.\n                   Soliman,
      \"Neighbor Discovery for IP version 6\n                   (IPv6)\", RFC 4861,
      September 2007.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [DNA-PROTOCOL]  Narayanan, S., Ed., \"Design
      Alternative for Detecting\n                   Network Attachment in IPv6 Networks
      (DNAv6 Design\n                   Alternative)\", Work in Progress, November
      2009.\n   [RFC4436]       Aboba, B., Carlson, J., and S. Cheshire, \"Detecting\n
      \                  Network Attachment in IPv4 (DNAv4)\", RFC 4436, March\n                   2006.\n
      \  [RFC4862]       Thomson, S., Narten, T., and T. Jinmei, \"IPv6\n                   Stateless
      Address Autoconfiguration\", RFC 4862,\n                   September 2007.\n
      \  [RFC4957]       Krishnan, S., Montavont, N., Njedjou, E., Veerepalli,\n                   S.,
      and A. Yegin, \"Link-Layer Event Notifications for\n                   Detecting
      Network Attachments\", RFC 4957, August\n                   2007.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Appendix A.  Issues with Confirming Manually Assigned Addresses\n   Even though
    DNAv4 [RFC4436] supports verification of manually\n   assigned addresses, this
    feature of DNAv4 has not been widely\n   implemented or used.  There are two major
    issues that come up with\n   confirming manually assigned addresses using Simple
    DNA.\n   o  When DHCPv6 or SLAAC addresses are used for probing, there is no\n
    \     need to aggressively retransmit lost probes.  This is because the\n      address
    configuration falls back to vanilla DHCPv6 or SLAAC, and\n      the host will
    eventually obtain an address.  This is not the case\n      with manually assigned
    addresses.  If the probes are lost, the\n      host runs the risk of ending up
    with no addresses at all.  Hence,\n      aggressive retransmissions are necessary.\n
    \  o  Another issue comes up when the host moves between two networks,\n      one
    where manual addressing is being used (say, NET1) and the\n      other where dynamic
    addressing (stateless autoconfiguration or\n      DHCPv6) is being used (say,
    NET2).  Since the host can obtain a\n      dynamic address in some situations,
    it will need to send Simple\n      DNA probes and may also engage in a DHCPv6
    exchange.  In a\n      situation where the host moves to NET1 and the NS probes
    are lost\n      and in addition an RA is not received, the host will not be able\n
    \     to confirm that it attached to NET1, and therefore that it should\n      use
    the manual configuration for that network.  As a result, if\n      DHCPv6 is enabled
    on NET1, then the host could mistakenly obtain a\n      dynamic address and configuration
    instead of using the manual\n      configuration.  To prevent this problem, Simple
    DNA probing needs\n      to continue even after the DHCPv6 exchange has completed,
    and DNA\n      probes need to take precedence over DHCPv6, contrary to the advice\n
    \     provided in Section 5.7.3.\n   Given these issues, it is NOT RECOMMENDED
    to use manual addressing\n   with Simple DNA.\n"
  title: Appendix A.  Issues with Confirming Manually Assigned Addresses
- contents:
  - "Authors' Addresses\n   Suresh Krishnan\n   Ericsson\n   8400 Decarie Blvd.\n
    \  Town of Mount Royal, QC\n   Canada\n   Phone: +1 514 345 7900 x42871\n   EMail:
    suresh.krishnan@ericsson.com\n   Greg Daley\n   Netstar Logicalis\n   Level 6/616
    St Kilda Road\n   Melbourne, Victoria  3004\n   Australia\n   Phone: +61 401 772
    770\n   EMail: hoskuld@hotmail.com\n"
  title: Authors' Addresses
