- title: __initial_text__
  contents:
  - '      When TCP Starts Up With Four Packets Into Only Three Buffers

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo is to document a simple experiment.  The experiment showed\n\
    \   that in the case of a TCP receiver behind a 9600 bps modem link at\n   the\
    \ edge of a fast Internet where there are only 3 buffers before the\n   modem\
    \ (and the fourth packet of a four-packet start will surely be\n   dropped), no\
    \ significant degradation in performance is experienced by\n   a TCP sending with\
    \ a four-packet start when compared with a normal\n   slow start (which starts\
    \ with just one packet).\n"
- title: Background
  contents:
  - "Background\n   Sally Floyd has proposed that TCPs start their initial slow start\
    \ by\n   sending as many as four packets (instead of the usual one packet) as\n\
    \   a means of getting TCP up-to-speed faster.  (Slow starts instigated\n   due\
    \ to timeouts would still start with just one packet.)  Starting\n   with more\
    \ than one packet might reduce the start-up latency over\n   long-fat pipes by\
    \ two round-trip times.  This proposal is documented\n   further in [1], [2],\
    \ and in [3] and we assume the reader is familiar\n   with the details of this\
    \ proposal.\n   On the end2end-interest mailing list, concern was raised that\
    \ in the\n   (allegedly common) case where a slow modem is served by a router\n\
    \   which only allocates three buffers per modem (one buffer being\n   transmitted\
    \ while two packets are waiting), that starting with four\n   packets would not\
    \ be good because the fourth packet is sure to be\n   dropped.\n   Vern Paxson\
    \ replied with the comment (among other things) that the\n   four-packet start\
    \ is no worse than what happens after two round trip\n   times in normal slow\
    \ start, hence no new problem is introduced by\n   starting with as many as four\
    \ packets.  If there is a problem with a\n   four-packet start, then the problem\
    \ already exists in a normal slow-\n   start startup after two round trip times\
    \ when the slow-start\n   algorithm will release into the net four closely spaced\
    \ packets.\n   The experiment reported here confirmed Vern Paxson's reasoning.\n"
- title: Scenario and experimental setup
  contents:
  - 'Scenario and experimental setup

    '
- title: +--------+  100 Mbps  +---+  1.5 Mbps   +---+  9600 bps    +----------+
  contents:
  - '+--------+  100 Mbps  +---+  1.5 Mbps   +---+  9600 bps    +----------+

    '
- title: '| source +------------+ R +-------------+ R +--------------+ receiver |'
  contents:
  - '| source +------------+ R +-------------+ R +--------------+ receiver |

    '
- title: +--------+  no delay  +---+ 25 ms delay +---+ 150 ms delay +----------+
  contents:
  - "+--------+  no delay  +---+ 25 ms delay +---+ 150 ms delay +----------+\n   \
    \           |                             |\n              |                 \
    \            |\n          (we spy here)              (this router has only 3 buffers\n\
    \                                      to hold packets going into the\n      \
    \                                9600 bps link)\n   The scenario studied and simulated\
    \ consists of three links between\n   the source and sink.  The first link is\
    \ a 100 Mbps link with no\n   delay.  It connects the sender to a router.  (It\
    \ was included to have\n   a means of logging the returning ACKs at the time they\
    \ would be seen\n   by the sender.)  The second link is a 1.5 Mbps link with a\
    \ 25 ms\n   one-way delay.  (This link was included to roughly model traversing\n\
    \   an un-congested, intra-continental piece of the terrestrial\n   Internet.)\
    \ The third link is a 9600 bps link with a 150 ms one-way\n   delay.  It connects\
    \ the edge of the net to a receiver which is behind\n   the 9600 bps link.\n \
    \  The queue limits for the queues at each end of the first two links\n   were\
    \ set to 100 (a value sufficiently large that this limit was never\n   a factor).\
    \  The queue limits at each end of the 9600 bps link were\n   set to 3 packets\
    \ (which can hold at most two packets while one is\n   being sent).\n   Version\
    \ 1.2a2 of the the NS simulator (available from LBL) was used\n   to simulate\
    \ both one-packet and four-packet starts for each of the\n   available TCP algorithms\
    \ (tahoe, reno, sack, fack) and the conclusion\n   reported here is independent\
    \ of which TCP algorithm is used (in\n   general, we believe).  In this memo,\
    \ the \"tahoe\" module will be used\n   to illustrate what happens.  In the 4-packet\
    \ start cases, the\n   \"window-init\" variable was set to 4, and the TCP implementations\
    \ were\n   modified to use the value of the window-init variable only on\n   connection\
    \ start, but to set cwnd to 1 on other instances of a slow-\n   start. (The tcp.cc\
    \ module as shipped with ns-1.2a2 would use the\n   window-init value in all cases.)\n\
    \   The packets in simulation are 1024 bytes long for purposes of\n   determining\
    \ the time it takes to transmit them through the links.\n   (The TCP modules included\
    \ with the LBL NS simulator do not simulate\n   the TCP sequence number mechanisms.\
    \  They use just packet numbers.)\n   Observations are made of all packets and\
    \ acknowledgements crossing\n   the 100 Mbps no-delay link, near the sender. \
    \ (All descriptions below\n   are from this point of view.)\n"
- title: What happens with normal slow start
  contents:
  - "What happens with normal slow start\n   At time 0.0 packet number 1 is sent.\n\
    \   At time 1.222 an ack is received covering packet number 1, and\n   packets\
    \ 2 and 3 are sent.\n   At time 2.444 an ack is received covering packet number\
    \ 2, and\n   packets 4 and 5 are sent.\n   At time 3.278 an ack is received covering\
    \ packet number 3, and\n   packets 6 and 7 are sent.\n   At time 4.111 an ack\
    \ is received covering packet number 4, and\n   packets 8 and 9 are sent.\n  \
    \ At time 4.944 an ack is received covering packet number 5, and\n   packets 10\
    \ and 11 are sent.\n   At time 5.778 an ack is received covering packet number\
    \ 6, and\n   packets 12 and 13 are sent.\n   At time 6.111 a duplicate ack is\
    \ recieved (covering packet number 6).\n   At time 7.444 another duplicate ack\
    \ is received (covering packet\n   number 6).\n   At time 8.278 a third duplicate\
    \ ack is received (covering packet\n   number 6) and packet number 7 is retransmitted.\n\
    \   (And the trace continues...)\n"
- title: What happens with a four-packet start
  contents:
  - "What happens with a four-packet start\n   At time 0.0, packets 1, 2, 3, and 4\
    \ are sent.\n   At time 1.222 an ack is received covering packet number 1, and\n\
    \   packets 5 and 6 are sent.\n   At time 2.055 an ack is received covering packet\
    \ number 2, and\n   packets 7 and 8 are sent.\n   At time 2.889 an ack is received\
    \ covering packet number 3, and\n   packets 9 and 10 are sent.\n   At time 3.722\
    \ a duplicate ack is received (covering packet number 3).\n   At time 4.555 another\
    \ duplicate ack is received (covering packet\n   number 3).\n   At time 5.389\
    \ a third duplicate ack is received (covering packet\n   number 3) and packet\
    \ number 4 is retransmitted.\n   (And the trace continues...)\n"
- title: Discussion
  contents:
  - "Discussion\n   At the point left off in the two traces above, the two different\n\
    \   systems are in almost identical states.  The two traces from that\n   point\
    \ on are almost the same, modulo a shift in time of (8.278 -\n   5.389) = 2.889\
    \ seconds and a shift of three packets.  If the normal\n   TCP (with the one-packet\
    \ start) will deliver packet N at time T, then\n   the TCP with the four-packet\
    \ start will deliver packet N - 3 at time\n   T - 2.889 (seconds).\n   Note that\
    \ the time to send three 1024-byte TCP segments through a\n   9600 bps modem is\
    \ 2.66 seconds.  So at what time does the four-\n   packet-start TCP deliver packet\
    \ N?  At time T - 2.889 + 2.66 = T -\n   0.229 in most cases, and in some cases\
    \ earlier, in some cases later,\n   because different packets (by number) experience\
    \ loss in the two\n   traces.\n   Thus the four-packet-start TCP is in some sense\
    \ 0.229 seconds (or\n   about one fifth of a packet) ahead of where the one-packet-start\
    \ TCP\n   would be.  (This is due to the extra time the modem sits idle while\n\
    \   waiting for the dally timer to go off in the receiver in the case of\n   the\
    \ one-packet-start TCP.)\n   The states of the two systems are not exactly identical.\
    \  They differ\n   slightly in the round-trip-time estimators because the behavior\
    \ at\n   the start is not identical. (The observed round trip times may differ\n\
    \   by a small amount due to dally timers and due to that the one-packet\n   start\
    \ experiences more round trip times before the first loss.)  In\n   the cases\
    \ where a retransmit timer did later go off, the additional\n   difference in\
    \ timing was much smaller than the 0.229 second\n   difference discribed above.\n"
- title: Conclusion
  contents:
  - "Conclusion\n   In this particular case, the four-packet start is not harmful.\n"
- title: Non-conclusions, opinions, and future work
  contents:
  - "Non-conclusions, opinions, and future work\n   A four-packet start would be very\
    \ helpful in situations where a\n   long-delay link is involved (as it would reduce\
    \ transfer times for\n   moderately-sized transfers by as much as two round-trip\
    \ times).  But\n   it remains (in the authors' opinions at this time) an open\
    \ question\n   whether or not the four-packet start would be safe for the network.\n\
    \   It would be nice to see if this result could be duplicated with real\n   TCPs,\
    \ real modems, and real three-buffer limits.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   This document discusses a simulation study of the\
    \ effects of a\n   proposed change to TCP.  Consequently, there are no security\n\
    \   considerations directly related to the document.  There are also no\n   known\
    \ security considerations associated with the proposed change.\n"
- title: References
  contents:
  - "References\n   1.   S. Floyd, Increasing TCP's Initial Window (January 29, 1997).\n\
    \        URL ftp://ftp.ee.lbl.gov/papers/draft.jan29.\n   2.   S. Floyd and M.\
    \ Allman, Increasing TCP's Initial Window (July,\n        1997). URL http://gigahertz.lerc.nasa.gov/~mallman/share/draft-\n\
    \        ss.txt\n   3.   Allman, M., Floyd, S., and C. Partridge, \"Increasing\
    \ TCP's\n        Initial Window\", RFC 2414, September 1998.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Tim Shepard\n   BBN Technologies\n   10 Moulton Street\n\
    \   Cambridge, MA 02138\n   EMail: shep@alum.mit.edu\n   Craig Partridge\n   BBN\
    \ Technologies\n   10 Moulton Street\n   Cambridge, MA 02138\n   EMail: craig@bbn.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
