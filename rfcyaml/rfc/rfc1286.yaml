- title: __initial_text__
  contents:
  - '               Definitions of Managed Objects for Bridges

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo is an extension to the SNMP MIB.  This RFC\
    \ specifies an IAB\n   standards track protocol for the Internet community, and\
    \ requests\n   discussion and suggestions for improvements.  Please refer to the\n\
    \   current edition of the \"IAB Official Protocol Standards\" for the\n   standardization\
    \ state and status of this protocol.  Distribution of\n   this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Abstract .............................................\
    \    2\n   2. The Network Management Framework......................    2\n  \
    \ 3. Objects ..............................................    2\n   3.1 Format\
    \ of Definitions ...............................    3\n   4. Overview .............................................\
    \    3\n   4.1 Structure of MIB ....................................    4\n  \
    \ 4.1.1 The dot1dBase Group ...............................    7\n   4.1.2 The\
    \ dot1dStp Group ................................    7\n   4.1.3 The dot1dSr Group\
    \ .................................    7\n   4.1.4 The dot1dTp Group .................................\
    \    7\n   4.1.5 The dot1dStatic Group .............................    7\n  \
    \ 4.2 Relationship to Other MIBs ..........................    7\n   4.2.1 Relationship\
    \ to the 'system' group ................    8\n   4.2.2 Relationship to the 'interfaces'\
    \ group ............    8\n   4.3 Textual Conventions .................................\
    \    9\n   5. Definitions ..........................................    9\n  \
    \ 5.1 Groups in the Bridge MIB ............................   11\n   5.2 The dot1dBase\
    \ Group Definitions .....................   11\n   5.3 The dot1dStp Group Definitions\
    \ ......................   14\n   5.4 The dot1dSr Group Definitions .......................\
    \   22\n   5.5 The dot1dTp Group Definitions .......................   28\n  \
    \ 5.6 The dot1dStatic Group Definitions ...................   34\n   5.8 Traps\
    \ for use by Bridges ............................   36\n   6. Acknowledgments\
    \ ......................................   37\n   7. References ...........................................\
    \   38\n   8. Security Considerations...............................   39\n  \
    \ 9. Authors' Addresses....................................   40\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo defines a portion of the Management Information Base\
    \ (MIB)\n   for use with network management protocols in TCP/IP based internets.\n\
    \   In particular it defines objects for managing bridges based on the\n   IEEE\
    \ 802.1d draft standard between Local Area Network (LAN) segments.\n   Provisions\
    \ are made for support of transparent and source route\n   bridging.  Provisions\
    \ are also made so that these objects apply to\n   bridges connected by subnetworks\
    \ other than LAN segments.\n"
- title: 2.  The Network Management Framework
  contents:
  - "2.  The Network Management Framework\n   The Internet-standard Network Management\
    \ Framework consists of three\n   components.  They are:\n      RFC 1155 which\
    \ defines the SMI, the mechanisms used for describing\n      and naming objects\
    \ for the purpose of management.  RFC 1212\n      defines a more concise description\
    \ mechanism, which is wholly\n      consistent with the SMI.\n      RFC 1156 which\
    \ defines MIB-I, the core set of managed objects for\n      the Internet suite\
    \ of protocols.  RFC 1213, defines MIB-II, an\n      evolution of MIB-I based\
    \ on implementation experience and new\n      operational requirements.\n    \
    \  RFC 1157 which defines the SNMP, the protocol used for network\n      access\
    \ to managed objects.\n   The Framework permits new objects to be defined for\
    \ the purpose of\n   experimentation and evaluation.\n"
- title: 3.  Objects
  contents:
  - "3.  Objects\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the subset of Abstract Syntax Notation One (ASN.1) [7]\n   defined\
    \ in the SMI.  In particular, each object has a name, a syntax,\n   and an encoding.\
    \  The name is an object identifier, an\n   administratively assigned name, which\
    \ specifies an object type.  The\n   object type together with an object instance\
    \ serves to uniquely\n   identify a specific instantiation of the object.  For\
    \ human\n   convenience, we often use a textual string, termed the OBJECT\n  \
    \ DESCRIPTOR, to also refer to the object type.\n   The syntax of an object type\
    \ defines the abstract data structure\n   corresponding to that object type. \
    \ The ASN.1 language is used for\n   this purpose.  However, the SMI [3] purposely\
    \ restricts the ASN.1\n   constructs which may be used.  These restrictions are\
    \ explicitly made\n   for simplicity.\n   The encoding of an object type is simply\
    \ how that object type is\n   represented using the object type's syntax.  Implicitly\
    \ tied to the\n   notion of an object type's syntax and encoding is how the object\
    \ type\n   is represented when being transmitted on the network.\n   The SMI specifies\
    \ the use of the basic encoding rules of ASN.1 [8],\n   subject to the additional\
    \ requirements imposed by the SNMP.\n"
- title: 3.1.  Format of Definitions
  contents:
  - "3.1.  Format of Definitions\n   Section 5 contains the specification of all object\
    \ types contained in\n   this MIB module.  The object types are defined using\
    \ the conventions\n   defined in the SMI, as amended by the extensions specified\
    \ in [9,10].\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   A common device present in many networks is the Bridge.  This\
    \ device\n   is used to connect Local Area Network segments below the network\n\
    \   layer.  There are two major modes defined for this bridging;\n   transparent\
    \ and source route.  The transparent method of bridging is\n   defined in the\
    \ draft IEEE 802.1d specification [11].  Source route\n   bridging has been defined\
    \ by I.B.M. and is described in the Token\n   Ring Architecture Reference [12].\
    \  IEEE 802.1d is currently working\n   on combining the source route and transparent\
    \ techniques in a\n   compatible fashion.  This memo defines those objects needed\
    \ for the\n   management of a bridging entity operating in one of these modes.\n\
    \   To be consistent with IAB directives and good engineering practice,\n   an\
    \ explicit attempt was made to keep this MIB as simple as possible.\n   This was\
    \ accomplished by applying the following criteria to objects\n   proposed for\
    \ inclusion:\n      (1)  Start with a small set of essential objects and add only\n\
    \           as further objects are needed.\n      (2)  Require objects be essential\
    \ for either fault or\n           configuration management.\n      (3)  Consider\
    \ evidence of current use and/or utility.\n      (4)  Limit the total of objects.\n\
    \      (5)  Exclude objects which are simply derivable from others in\n      \
    \     this or other MIBs.\n      (6)  Avoid causing critical sections to be heavily\n\
    \           instrumented.  The guideline that was followed is one\n          \
    \ counter per critical section per layer.\n"
- title: 4.1.  Structure of MIB
  contents:
  - "4.1.  Structure of MIB\n   Objects in this MIB are arranged into groups.  Each\
    \ group is\n   organized as a set of related objects.  The overall structure and\n\
    \   assignment of objects to their groups is shown below.  Where\n   appropriate\
    \ the corresponding IEEE 802.1d [11] management object name\n   is also included.\n"
- title: Bridge MIB Name                  IEEE 802.1d Name
  contents:
  - 'Bridge MIB Name                  IEEE 802.1d Name

    '
- title: dot1dBridge
  contents:
  - "dot1dBridge\n  dot1dBase\n    BridgeAddress                Bridge.BridgeAddress\n\
    \    NumPorts                     Bridge.NumberOfPorts\n    Type\n    PortTable\n\
    \      Port                       BridgePort.PortNumber\n      IfIndex\n     \
    \ Circuit\n      DelayExceededDiscards        .DiscardTransitDelay\n      MtuExceededDiscards\
    \          .DiscardOnError\n  dot1dStp\n    ProtocolSpecification\n    Priority\
    \                     SpanningTreeProtocol\n                                 \
    \  .BridgePriority\n    TimeSinceTopologyChange        .TimeSinceTopologyChange\n\
    \    TopChanges                     .TopologyChangeCount\n    DesignatedRoot \
    \                .DesignatedRoot\n    RootCost                       .RootCost\n\
    \    RootPort                       .RootPort\n    MaxAge                    \
    \     .MaxAge\n    HelloTime                      .HelloTime\n    HoldTime   \
    \                    .HoldTime\n    ForwardDelay                   .ForwardDelay\n\
    \    BridgeMaxAge                   .BridgeMaxAge\n    BridgeHelloTime       \
    \         .BridgeHelloTime\n    BridgeForwardDelay             .BridgeForwardDelay\n\
    \    PortTable\n      Port                        SpanningTreeProtocolPort\n \
    \                                   .PortNumber\n      Priority              \
    \        .PortPriority\n      State                         .SpanningTreeState\n\
    \      Enable\n      PathCost                      .PortPathCost\n      DesignatedRoot\
    \                .DesignatedRoot\n      DesignatedCost                .DesignatedCost\n\
    \      DesignatedBridge              .DesignatedBridge\n      DesignatedPort \
    \               .DesignatedPort\n      ForwardTransitions\n  dot1dSr\n    PortTable\n\
    \      Port\n      HopCount                    SourceRoutingPort\n           \
    \                         .PortHopCount\n      LocalSegment                  .SegmentNumber\n\
    \      BridgeNum                     .BridgeNumber\n      TargetSegment\n    \
    \  LargestFrame                  .LargestFrameSize\n      STESpanMode        \
    \           .LimitedBroadcastMode\n      SpecInFrames                BridgePort\n\
    \                                    .ValidSRFramesReceived\n      SpecOutFrames\
    \                 .ValidSRForwardedOutbound\n      ApeInFrames\n      ApeOutFrames\
    \                  .BroadcastFramesForwarded\n      SteInFrames\n      SteOutFrames\
    \                  .BroadcastFramesForwarded\n      SegmentMismatchDiscards  \
    \     .DiscardInvalidRI\n      DuplicateSegmentDiscards      .LanIdMismatch\n\
    \      HopCountExceededDiscards      .FramesDiscardedHopCountExceeded\n  dot1dTp\n\
    \    LearnedEntryDiscards          BridgeFilter.DatabaseSize\n               \
    \                     .NumDynamic,NumStatic\n    AgingTime                   \
    \  BridgeFilter.AgingTime\n    FdbTable\n      Address\n      Status\n      Port\n\
    \    PortTable\n      Port\n      MaxInfo\n      InFrames                    BridgePort.FramesReceived\n\
    \      OutFrames                     .ForwardOutbound\n      InDiscards      \
    \              .DiscardInbound\n  dot1dStatic\n    StaticTable\n      Address\n\
    \      ReceivePort\n      AllowedToGoTo\n      Status\n   The following IEEE 802.1d\
    \ management objects have not been included\n   in the Bridge MIB for the indicated\
    \ reasons.\n"
- title: IEEE 802.1d Object              Disposition
  contents:
  - 'IEEE 802.1d Object              Disposition

    '
- title: Bridge.BridgeName               Same as sysDescr (MIB II)
  contents:
  - 'Bridge.BridgeName               Same as sysDescr (MIB II)

    '
- title: Bridge.BridgeUpTime             Same as sysUpTime (MIB II)
  contents:
  - 'Bridge.BridgeUpTime             Same as sysUpTime (MIB II)

    '
- title: Bridge.PortAddresses            Same as ifPhysAddress (MIB II)
  contents:
  - 'Bridge.PortAddresses            Same as ifPhysAddress (MIB II)

    '
- title: BridgePort.PortName             Same as ifDescr (MIB II)
  contents:
  - 'BridgePort.PortName             Same as ifDescr (MIB II)

    '
- title: BridgePort.PortType             Same as ifType (MIB II)
  contents:
  - 'BridgePort.PortType             Same as ifType (MIB II)

    '
- title: BridgePort.RoutingType          Derivable from the implemented
  contents:
  - "BridgePort.RoutingType          Derivable from the implemented\n            \
    \                    groups\n"
- title: SpanningTreeProtocol
  contents:
  - "SpanningTreeProtocol\n    .BridgeIdentifier           Combination of dot1dStpPriority\n\
    \                                and dot1dBaseBridgeAddress\n    .TopologyChange\
    \             Since this is transitory, it\n                                is\
    \ not considered useful.\n"
- title: SpanningTreeProtocolPort
  contents:
  - "SpanningTreeProtocolPort\n    .Uptime                     Same as ifLastChange\
    \ (MIB II)\n    .PortIdentifier             Combination of dot1dStpPortNum\n \
    \                               and dot1dStpPortPriority\n    .TopologyChangeAcknowledged\
    \ Since this is transitory, it\n                                is not considered\
    \ useful.\n    .DiscardLackOfBuffers       Redundant\n"
- title: Transmission Priority           These objects are not required
  contents:
  - "Transmission Priority           These objects are not required\n            \
    \                    as per the Pics Proforma and\n                          \
    \      not considered useful.\n    .TransmissionPriorityName\n    .OutboundUserPriority\n\
    \    .OutboundAccessPriority\n"
- title: SourceRoutingPort               The Source Routing Supplement,
  contents:
  - "SourceRoutingPort               The Source Routing Supplement,\n            \
    \                    at the time of this writing,\n                          \
    \      is not stable. The following\n                                objects were\
    \ NOT included in\n                                this MIB because they are\n\
    \                                redundant or not considered\n               \
    \                 useful.\n    .LimitedBroadcastEnable\n"
- title: BridgePort.DupLanIdOrTreeError
  contents:
  - "BridgePort.DupLanIdOrTreeError\n    .DiscardLackOfBuffers\n    .DiscardErrorDetails\n\
    \    .DiscardTargetLANInoperable\n    .ValidSRDiscardedInbound\n    .BroadcastBytesForwarded\n\
    \    .NonBroadcastBytesForwarded\n    .FramesNotReceivedDueToCongestion\n    .FramesDiscardedDueToInternalError\n"
- title: 4.1.1.  The dot1dBase Group
  contents:
  - "4.1.1.  The dot1dBase Group\n   This mandatory group contains the objects which\
    \ are applicable to all\n   types of bridges.\n"
- title: 4.1.2.  The dot1dStp Group
  contents:
  - "4.1.2.  The dot1dStp Group\n   This group contains the objects that denote the\
    \ bridge's state with\n   respect to the Spanning Tree Protocol.  If a node does\
    \ not\n   implemented the Spanning Tree Protocol, this group will not be\n   implemented.\
    \  This group is applicable to any transparent only,\n   source route, or SRT\
    \ bridge which implements the Spanning Tree\n   Protocol.\n"
- title: 4.1.3.  The dot1dSr Group
  contents:
  - "4.1.3.  The dot1dSr Group\n   This group contains the objects that describe the\
    \ entity's state with\n   respect to source route bridging.  If source routing\
    \ is not supported\n   this group will not be implemented.  This group is applicable\
    \ to\n   source route only, and SRT bridges.\n"
- title: 4.1.4.  The dot1dTp Group
  contents:
  - "4.1.4.  The dot1dTp Group\n   This group contains objects that describe the entity's\
    \ state with\n   respect to transparent bridging.  If transparent bridging is\
    \ not\n   supported this group will not be implemented.  This group is\n   applicable\
    \ to transparent only and SRT bridges.\n"
- title: 4.1.5.  The dot1dStatic Group
  contents:
  - "4.1.5.  The dot1dStatic Group\n   This group contains objects that describe the\
    \ entity's state with\n   respect to destination-address filtering.  If destination-address\n\
    \   filtering is not supported this group will not be implemented.  This\n   group\
    \ is applicable to any type of bridge which performs\n   destination-address filtering.\n"
- title: 4.2.  Relationship to Other MIBs
  contents:
  - "4.2.  Relationship to Other MIBs\n   As described above, some IEEE 802.1d management\
    \ objects have not been\n   included in this MIB because they overlap with objects\
    \ in other MIBs\n   applicable to a bridge implementing this MIB.  In particular,\
    \ it is\n   assumed that a bridge implementing this MIB will also implement (at\n\
    \   least) the 'system' group and the 'interfaces' group defined in MIB-\n   II\
    \ [6].\n"
- title: 4.2.1.  Relationship to the 'system' group
  contents:
  - "4.2.1.  Relationship to the 'system' group\n   In MIB-II, the 'system' group\
    \ is defined as being mandatory for all\n   systems such that each managed entity\
    \ contains one instance of each\n   object in the 'system' group.  Thus, those\
    \ objects apply to the\n   entity as a whole irrespective of whether the entity's\
    \ sole\n   functionality is bridging, or whether bridging is only a subset of\n\
    \   the entity's functionality.\n"
- title: 4.2.2.  Relationship to the 'interfaces' group
  contents:
  - "4.2.2.  Relationship to the 'interfaces' group\n   In MIB-II, the 'interfaces'\
    \ group is defined as being mandatory for\n   all systems and contains information\
    \ on an entity's interfaces, where\n   each interface is thought of as being attached\
    \ to a `subnetwork'.\n   (Note that this term is not to be confused with `subnet'\
    \ which refers\n   to an addressing partitioning scheme used in the Internet suite\
    \ of\n   protocols.) The term 'segment' is used in this memo to refer to such\n\
    \   a subnetwork, whether it be an Ethernet segment, a 'ring', a WAN\n   link,\
    \ or even an X.25 virtual circuit.\n   Implicit in this Bridge MIB is the notion\
    \ of ports on a bridge.  Each\n   of these ports is associated with one interface\
    \ of the 'interfaces'\n   group, and in most situations, each port is associated\
    \ with a\n   different interface. However, there are situations in which multiple\n\
    \   ports are associated with the same interface.  An example of such a\n   situation\
    \ would be several ports each corresponding one-to-one with\n   several X.25 virtual\
    \ circuits but all on the same interface.\n   Each port is uniquely identified\
    \ by a port number.  A port number has\n   no mandatory relationship to an interface\
    \ number, but in the simple\n   case a port number will have the same value as\
    \ the corresponding\n   interface's interface number.  Port numbers are in the\
    \ range\n   (1..dot1dBaseNumPorts).\n   Some entities perform other functionality\
    \ as well as bridging through\n   the sending and receiving of data on their interfaces.\
    \  In such\n   situations, only a subset of the data sent/received on an interface\n\
    \   is within the domain of the entity's bridging functionality.  This\n   subset\
    \ is considered to be delineated according to a set of\n   protocols, with some\
    \ protocols being bridged, and other protocols not\n   being bridged. For example,\
    \ in an entity which exclusively performed\n   bridging, all protocols would be\
    \ considered as being bridged, whereas\n   in an entity which performed IP routing\
    \ on IP datagrams and only\n   bridged other protocols, only the non-IP data would\
    \ be considered as\n   being bridged.\n   Thus, this Bridge MIB (and in particular,\
    \ its counters) are\n   applicable only to that subset of the data on an entity's\
    \ interfaces\n   which is sent/received for a protocol being bridged.  All such\
    \ data\n   is sent/received via the ports of the bridge.\n"
- title: 4.3.  Textual Conventions
  contents:
  - "4.3.  Textual Conventions\n   The datatypes, MacAddress, BridgeId and Timeout,\
    \ are used as textual\n   conventions in this document.  These textual conventions\
    \ have NO\n   effect on either the syntax nor the semantics of any managed object.\n\
    \   Objects defined using these conventions are always encoded by means\n   of\
    \ the rules that define their primitive type.  Hence, no changes to\n   the SMI\
    \ or the SNMP are necessary to accommodate these textual\n   conventions which\
    \ are adopted merely for the convenience of readers.\n"
- title: 5.  Definitions
  contents:
  - "5.  Definitions\n   RFC1286-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n         \
    \  Counter, Gauge, TimeTicks\n                   FROM RFC1155-SMI\n          \
    \ mib-2\n                   FROM RFC1213-MIB\n           OBJECT-TYPE\n       \
    \            FROM RFC-1212\n           TRAP-TYPE\n                   FROM RFC-1215;\n\
    \   -- All representations of MAC addresses in this MIB Module use,\n   -- as\
    \ a textual convention (i.e. this convention does not affect\n   -- their encoding),\
    \ the data type:\n   MacAddress ::= OCTET STRING (SIZE (6))    -- a 6 octet address\
    \ in\n                                             -- the \"canonical\" order\n\
    \   -- defined by IEEE 802.1a, i.e., as if it were transmitted least\n   -- significant\
    \ bit first, even though 802.5 (in contrast to other\n   -- 802.x protocols) requires\
    \ MAC addresses to be transmitted most\n   -- significant bit first.\n   --\n\
    \   -- 16-bit addresses, if needed, are represented by setting their\n   -- upper\
    \ 4 octets to all 0's, i.e., AAFF would be represented\n   -- as 00000000AAFF.\n\
    \   -- Similarly, all representations of Bridge-Id in this MIB Module\n   -- use,\
    \ as a textual convention (i.e. this convention does not affect\n   -- their encoding),\
    \ the data type:\n   BridgeId ::= OCTET STRING (SIZE (8))   -- the Bridge-Identifier\
    \ as\n                                          -- used in the Spanning Tree\n\
    \   -- Protocol to uniquely identify a bridge.  Its first two octets\n   -- (in\
    \ network byte order) contain a priority value and its last\n   -- 6 octets contain\
    \ the MAC address used to refer to a bridge in a\n   -- unique fashion (typically,\
    \ the numerically smallest MAC address\n   -- of all ports on the bridge).\n \
    \  -- Several objects in this MIB module represent values of timers\n   -- used\
    \ by the Spanning Tree Protocol.  In this MIB, these timers\n   -- have values\
    \ in units of hundreths of a second (i.e. 1/100 secs).\n   -- These timers, when\
    \ stored in a Spanning Tree Protocol's BPDU,\n   -- are in units of 1/256 seconds.\
    \  Note, however, that 802.1d/D9\n   -- specifies a settable granularity of no\
    \ more than 1 second for\n   -- these timers.  To avoid ambiguity, a data type\
    \ is defined here\n   -- as a textual convention and all representation of these\
    \ timers\n   -- in this MIB module are defined using this data type.  An algorithm\n\
    \   -- is also defined for converting between the different units, to\n   -- ensure\
    \ a timer's value is not distorted by multiple conversions.\n   -- The data type\
    \ is:\n   Timeout ::= INTEGER      -- a STP timer in units of 1/100 seconds\n\
    \   -- To convert a Timeout value into a value in units of\n   -- 1/256 seconds,\
    \ the following algorithm should be used:\n   --\n   --      b  = floor( (n *\
    \ 256) / 100)\n   --\n   -- where:\n   --      floor   =  quotient [ignore remainder]\n\
    \   --      n is the value in 1/100 second units\n   --      b is the value in\
    \ 1/256 second units\n   --\n   -- To convert the value from 1/256 second units\
    \ back to\n   -- 1/100 seconds, the following algorithm should be used:\n   --\n\
    \   --      n = ceiling( (b * 100) / 256)\n   --\n   -- where:\n   --      ceiling\
    \ =  quotient [if remainder is 0], or\n   --                 quotient + 1 [if\
    \ remainder is non-zero]\n   --      n is the value in 1/100 second units\n  \
    \ --      b is the value in 1/256 second units\n   --\n   -- Note: it is important\
    \ that the arithmetic operations are done\n   -- in the order specified (i.e.,\
    \ multiply first, divide second).\n   dot1dBridge   OBJECT IDENTIFIER ::= { mib-2\
    \ 17 }\n   -- groups in the Bridge MIB\n   dot1dBase     OBJECT IDENTIFIER ::=\
    \ { dot1dBridge 1 }\n   dot1dStp      OBJECT IDENTIFIER ::= { dot1dBridge 2 }\n\
    \   dot1dSr       OBJECT IDENTIFIER ::= { dot1dBridge 3 }\n   dot1dTp       OBJECT\
    \ IDENTIFIER ::= { dot1dBridge 4 }\n   dot1dStatic   OBJECT IDENTIFIER ::= { dot1dBridge\
    \ 5 }\n   -- the dot1dBase group\n   -- Implementation of the dot1dBase group\
    \ is mandatory for all\n   -- bridges.\n   dot1dBaseBridgeAddress OBJECT-TYPE\n\
    \       SYNTAX  MacAddress\n       ACCESS  read-only\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The MAC address used by this bridge when\
    \ it must\n               be referred to in a unique fashion.   It is\n      \
    \         recommended that this be the numerically smallest\n               MAC\
    \ address of all ports that belong to this\n               bridge.  However it\
    \ is only required to be unique.\n               When concatenated with dot1dStpPriority\
    \ a unique\n               BridgeIdentifier is formed which is used in the\n \
    \              Spanning Tree Protocol.\"\n       REFERENCE\n               \"\
    P802.1d/D9, July 14, 1989: Sections 6.4.1.1.3 and 3.12.5\"\n       ::= { dot1dBase\
    \ 1 }\n   dot1dBaseNumPorts OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS\
    \  read-only\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    The number of ports controlled by this bridging\n               entity.\"\n  \
    \     REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 6.4.1.1.3\"\
    \n       ::= { dot1dBase 2 }\n   dot1dBaseType OBJECT-TYPE\n       SYNTAX  INTEGER\
    \ {\n                   unknown(1),\n                   transparent-only(2),\n\
    \                   sourceroute-only(3),\n                   srt(4)\n        \
    \       }\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"Indicates what type of bridging this bridge can\n          \
    \     perform.  If a bridge is actually performing a\n               certain type\
    \ of bridging this will be indicated by\n               entries in the port table\
    \ for the given type.\"\n       ::= { dot1dBase 3 }\n   -- The Generic Bridge\
    \ Port Table\n   dot1dBasePortTable OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dot1dBasePortEntry\n\
    \       ACCESS  not-accessible\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"A table that contains generic information about\n          \
    \     every port that is associated with this bridge.\n               Transparent,\
    \ source-route, and srt ports are\n               included.\"\n       ::= { dot1dBase\
    \ 4 }\n   dot1dBasePortEntry OBJECT-TYPE\n       SYNTAX  Dot1dBasePortEntry\n\
    \       ACCESS  not-accessible\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"A list of information for each port of the\n               bridge.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 6.4.2,\
    \ 6.6.1\"\n       INDEX  { dot1dBasePort }\n       ::= { dot1dBasePortTable 1\
    \ }\n   Dot1dBasePortEntry ::=\n       SEQUENCE {\n           dot1dBasePort\n\
    \               INTEGER,\n           dot1dBasePortIfIndex\n               INTEGER,\n\
    \           dot1dBasePortCircuit\n               OBJECT IDENTIFIER,\n        \
    \   dot1dBasePortDelayExceededDiscards\n               Counter,\n           dot1dBasePortMtuExceededDiscards\n\
    \               Counter\n       }\n   dot1dBasePort OBJECT-TYPE\n       SYNTAX\
    \  INTEGER\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"The port number of the port for which this entry\n         \
    \      contains bridge management information.\"\n       ::= { dot1dBasePortEntry\
    \ 1 }\n   dot1dBasePortIfIndex OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS\
    \  read-only\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    The value of the instance of the ifIndex object,\n               defined in [4,6],\
    \ for the interface corresponding\n               to this port.\"\n       ::=\
    \ { dot1dBasePortEntry 2 }\n   dot1dBasePortCircuit OBJECT-TYPE\n       SYNTAX\
    \  OBJECT IDENTIFIER\n       ACCESS  read-only\n       STATUS  mandatory\n   \
    \    DESCRIPTION\n               \"For a port which (potentially) has the same\
    \ value\n               of dot1dBasePortIfIndex as another port on the\n     \
    \          same bridge, this object contains the name of an\n               object\
    \ instance unique to this port.  For example,\n               in the case where\
    \ multiple ports correspond one-\n               to-one with multiple X.25 virtual\
    \ circuits, this\n               value might identify an (e.g., the first) object\n\
    \               instance associated with the X.25 virtual circuit\n          \
    \     corresponding to this port.\n               For a port which has a unique\
    \ value of\n               dot1dBasePortIfIndex, this object can have the\n  \
    \             value { 0 0 }.\"\n       ::= { dot1dBasePortEntry 3 }\n   dot1dBasePortDelayExceededDiscards\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of frames discarded\
    \ by this port due\n               to excessive transit delay through the bridge.\
    \  It\n               is incremented by both transparent and source\n        \
    \       route bridges.\"\n       REFERENCE\n                \"P802.1d/D9, July\
    \ 14, 1989: Section 6.6.1.1.3\"\n       ::= { dot1dBasePortEntry 4 }\n   dot1dBasePortMtuExceededDiscards\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of frames discarded\
    \ by this port due\n               to an excessive size.  It is incremented by\
    \ both\n               transparent and source route bridges.\"\n       REFERENCE\n\
    \               \"P802.1d/D9, July 14, 1989: Section 6.6.1.1.3\"\n       ::= {\
    \ dot1dBasePortEntry 5 }\n   -- the dot1dStp group\n   -- Implementation of the\
    \ dot1dStp group is optional.  It is\n   -- implemented by those bridges that\
    \ support the Spanning Tree\n   -- Protocol.  Transparent, Source Route, and SRT\
    \ bridges will\n   -- implement this group only if they support the Spanning Tree\n\
    \   -- Protocol.\n   dot1dStpProtocolSpecification OBJECT-TYPE\n       SYNTAX\
    \  INTEGER {\n                   unknown(1),\n                   decLb100(2),\n\
    \                   ieee8021d(3)\n               }\n       ACCESS  read-only\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"An indication\
    \ of what version of the Spanning\n               Tree Protocol is being run.\
    \  The value\n               'decLb100(2)' indicates the DEC LANbridge 100\n \
    \              Spanning Tree protocol.  IEEE 802.1d\n               implementations\
    \ will return 'ieee8021d(3)'.  If\n               future versions of the IEEE\
    \ Spanning Tree Protocol\n               are released that are incompatible with\
    \ the\n               current version a new value will be defined.\"\n       ::=\
    \ { dot1dStp 1 }\n   dot1dStpPriority OBJECT-TYPE\n       SYNTAX  INTEGER (0..65535)\n\
    \       ACCESS  read-write\n       STATUS  mandatory\n       DESCRIPTION\n   \
    \            \"The value of the write-able portion of the Bridge\n           \
    \    ID, i.e., the first two octets of the (8 octet\n               long) Bridge\
    \ ID.  The other (last) 6 octets of the\n               Bridge ID are given by\
    \ the value of\n               dot1dBaseBridgeAddress.\"\n       REFERENCE\n \
    \              \"P802.1d/D9, July 14, 1989: Section 4.5.3.7\"\n       ::= { dot1dStp\
    \ 2 }\n   dot1dStpTimeSinceTopologyChange OBJECT-TYPE\n       SYNTAX  TimeTicks\n\
    \       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n    \
    \           \"The time (in hundredths of a second) since the\n               last\
    \ time a topology change was detected by the\n               bridge entity.\"\n\
    \       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 6.8.1.1.3\"\
    \n       ::= { dot1dStp 3 }\n   dot1dStpTopChanges OBJECT-TYPE\n       SYNTAX\
    \  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"The total number of topology changes detected by\n         \
    \      this bridge since the management entity was last\n               reset\
    \ or initialized.\"\n       REFERENCE\n               \"P802.1d/D9, July 14, 1989:\
    \ Section 6.8.1.1.3\"\n       ::= { dot1dStp 4 }\n   dot1dStpDesignatedRoot OBJECT-TYPE\n\
    \       SYNTAX  BridgeId\n       ACCESS  read-only\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The bridge identifier of the root of the\
    \ spanning\n               tree as determined by the Spanning Tree Protocol\n\
    \               as executed by this node.  This value is used as\n           \
    \    the Root Identifier parameter in all Configuration\n               Bridge\
    \ PDUs originated by this node.\"\n       REFERENCE\n               \"P802.1d/D9,\
    \ July 14, 1989: Section 4.5.3.1\"\n       ::= { dot1dStp 5 }\n   dot1dStpRootCost\
    \ OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The cost of the path to the\
    \ root as seen from\n               this bridge.\"\n       REFERENCE\n       \
    \        \"P802.1d/D9, July 14, 1989: Section 4.5.3.2\"\n       ::= { dot1dStp\
    \ 6 }\n   dot1dStpRootPort OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS\
    \  read-only\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    The port number of the port which offers the\n               lowest cost path\
    \ from this bridge to the root\n               bridge.\"\n       REFERENCE\n \
    \              \"P802.1d/D9, July 14, 1989: Section 4.5.3.3\"\n       ::= { dot1dStp\
    \ 7 }\n   dot1dStpMaxAge OBJECT-TYPE\n       SYNTAX  Timeout\n       ACCESS  read-only\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"The maximum age\
    \ of Spanning Tree Protocol\n               information learned from the network\
    \ on any port\n               before it is discarded, in units of hundredths of\n\
    \               a second.  This is the actual value that this\n              \
    \ bridge is currently using.\"\n       REFERENCE\n               \"P802.1d/D9,\
    \ July 14, 1989: Section 4.5.3.4\"\n       ::= { dot1dStp 8 }\n   dot1dStpHelloTime\
    \ OBJECT-TYPE\n       SYNTAX  Timeout\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The amount of time between\
    \ the transmission of\n               Configuration bridge PDUs by this node on\
    \ any port\n               when it is the root of the spanning tree or trying\n\
    \               to become so, in units of hundredths of a second.\n          \
    \     This is the actual value that this bridge is\n               currently using.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 4.5.3.5\"\
    \n       ::= { dot1dStp 9 }\n   dot1dStpHoldTime OBJECT-TYPE\n       SYNTAX  INTEGER\n\
    \       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n    \
    \           \"This time value determines the interval length\n               during\
    \ which no more than two Configuration bridge\n               PDUs shall be transmitted\
    \ by this node, in units\n               of hundredths of a second.\"\n      \
    \ REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 4.5.3.14\"\n\
    \       ::= { dot1dStp 10 }\n   dot1dStpForwardDelay OBJECT-TYPE\n       SYNTAX\
    \  Timeout\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"This time value, measured in units of hundredths\n         \
    \      of a second, controls how fast a port changes its\n               spanning\
    \ state when moving towards the Forwarding\n               state.  The value determines\
    \ how long the port\n               stays in a particular state before moving\
    \ to the\n               next state.  For example, how long a port stays in\n\
    \               the Listening state when moving from Blocking to\n           \
    \    Learning.  This value is also used, when a\n               topology change\
    \ has been detected and is underway,\n               to age all dynamic entries\
    \ in the Forwarding\n               Database.  [Note that this value is the one\
    \ that\n               this bridge is currently using, in contrast to\n      \
    \         dot1dStpBridgeForwardDelay which is the value that\n               this\
    \ bridge and all others would start using\n               if/when this bridge\
    \ were to become the root.]\"\n       REFERENCE\n               \"P802.1d/D9,\
    \ July 14, 1989: Section 4.5.3.6\"\n       ::= { dot1dStp 11 }\n   dot1dStpBridgeMaxAge\
    \ OBJECT-TYPE\n       SYNTAX  Timeout (600..4000)\n       ACCESS  read-write\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"The value that\
    \ all bridges use for MaxAge when\n               this bridge is acting as the\
    \ root.  Note that\n               802.1d/D9 specifies that the range for this\n\
    \               parameter is related to the value of\n               dot1dStpBridgeHelloTime.\
    \ The granularity of this\n               timer is specified by 802.1d/D9 to be\
    \ 1 second.\n               An agent may return a badValue error if a set is\n\
    \               attempted to a value which is not a whole number\n           \
    \    of seconds.\"\n       REFERENCE\n               \"P802.1d/D9, July 14, 1989:\
    \ Section 4.5.3.8\"\n       ::= { dot1dStp 12 }\n   dot1dStpBridgeHelloTime OBJECT-TYPE\n\
    \       SYNTAX  Timeout (100..1000)\n       ACCESS  read-write\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The value that all bridges\
    \ use for HelloTime when\n               this bridge is acting as the root.  The\n\
    \               granularity of this timer is specified by\n               802.1d/D9\
    \ to be 1 second.  An agent may return a\n               badValue error if a set\
    \ is attempted to a value\n               which is not a whole number of seconds.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 4.5.3.9\"\
    \n       ::= { dot1dStp 13 }\n   dot1dStpBridgeForwardDelay OBJECT-TYPE\n    \
    \   SYNTAX  Timeout (400..3000)\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The value that all bridges use for ForwardDelay\n\
    \               when this bridge is acting as the root.  Note that\n         \
    \      802.1d/D9 specifies that the range for this\n               parameter is\
    \ related to the value of\n               dot1dStpBridgeMaxAge.  The granularity\
    \ of this\n               timer is specified by 802.1d/D9 to be 1 second.\n  \
    \             An agent may return a badValue error if a set is\n             \
    \  attempted to a value which is not a whole number\n               of seconds.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 4.5.3.10\"\
    \n       ::= { dot1dStp 14 }\n   -- The Spanning Tree Port Table\n   dot1dStpPortTable\
    \ OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dot1dStpPortEntry\n       ACCESS  not-accessible\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"A table that contains\
    \ port-specific information\n               for the Spanning Tree Protocol.\"\n\
    \       ::= { dot1dStp 15 }\n   dot1dStpPortEntry OBJECT-TYPE\n       SYNTAX \
    \ Dot1dStpPortEntry\n       ACCESS  not-accessible\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"A list of information maintained by every\
    \ port\n               about the Spanning Tree Protocol state for that\n     \
    \          port.\"\n       INDEX   { dot1dStpPort }\n       ::= { dot1dStpPortTable\
    \ 1 }\n   Dot1dStpPortEntry ::=\n       SEQUENCE {\n           dot1dStpPort\n\
    \               INTEGER,\n           dot1dStpPortPriority\n               INTEGER,\n\
    \           dot1dStpPortState\n               INTEGER,\n           dot1dStpPortEnable\n\
    \               INTEGER,\n           dot1dStpPortPathCost\n               INTEGER,\n\
    \           dot1dStpPortDesignatedRoot\n               BridgeId,\n           dot1dStpPortDesignatedCost\n\
    \               INTEGER,\n           dot1dStpPortDesignatedBridge\n          \
    \     BridgeId,\n           dot1dStpPortDesignatedPort\n               OCTET STRING,\n\
    \           dot1dStpPortForwardTransitions\n               Counter\n       }\n\
    \   dot1dStpPort OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS  read-only\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"The port number\
    \ of the port for which this entry\n               contains Spanning Tree Protocol\
    \ management\n               information.\"\n       REFERENCE\n              \
    \ \"P802.1d/D9, July 14, 1989: Section 6.8.2.1.2\"\n       ::= { dot1dStpPortEntry\
    \ 1 }\n   dot1dStpPortPriority OBJECT-TYPE\n       SYNTAX  INTEGER (0..255)\n\
    \       ACCESS  read-write\n       STATUS  mandatory\n       DESCRIPTION\n   \
    \            \"The value of the priority field which is\n               contained\
    \ in the first (in network byte order)\n               octet of the (2 octet long)\
    \ Port ID.  The other\n               octet of the Port ID is given by the value\
    \ of\n               dot1dStpPort.\"\n       REFERENCE\n               \"P802.1d/D9,\
    \ July 14, 1989: Section 4.5.5.1\"\n       ::= { dot1dStpPortEntry 2 }\n   dot1dStpPortState\
    \ OBJECT-TYPE\n       SYNTAX  INTEGER {\n                   disabled(1),\n   \
    \                blocking(2),\n                   listening(3),\n            \
    \       learning(4),\n                   forwarding(5),\n                   broken(6)\n\
    \               }\n       ACCESS  read-only\n       STATUS  mandatory\n      \
    \ DESCRIPTION\n               \"The port's current state as defined by\n     \
    \          application of the Spanning Tree Protocol.  This\n               state\
    \ controls what action a port takes on\n               reception of a frame. \
    \ If the bridge has detected\n               a port that is malfunctioning it\
    \ will place that\n               port into the broken(6) state.  For ports which\n\
    \               are disabled (see dot1dStpPortEnable), this object\n         \
    \      will have a value of disabled(1).\"\n       REFERENCE\n               \"\
    P802.1d/D9, July 14, 1989: Section 4.5.5.2\"\n       ::= { dot1dStpPortEntry 3\
    \ }\n   dot1dStpPortEnable OBJECT-TYPE\n       SYNTAX  INTEGER {\n           \
    \        enabled(1),\n                   disabled(2)\n               }\n     \
    \  ACCESS  read-write\n       STATUS  mandatory\n       DESCRIPTION\n        \
    \       \"The enabled/disabled status of the port.\"\n       REFERENCE\n     \
    \          \"P802.1d/D9, July 14, 1989: Section 4.5.5.2\"\n       ::= { dot1dStpPortEntry\
    \ 4 }\n   dot1dStpPortPathCost OBJECT-TYPE\n       SYNTAX  INTEGER (1..65535)\n\
    \       ACCESS  read-write\n       STATUS  mandatory\n       DESCRIPTION\n   \
    \            \"The contribution of this port to the path cost of\n           \
    \    paths towards the spanning tree root which include\n               this port.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 4.5.5.3\"\
    \n       ::= { dot1dStpPortEntry 5 }\n   dot1dStpPortDesignatedRoot OBJECT-TYPE\n\
    \       SYNTAX  BridgeId\n       ACCESS  read-only\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The unique Bridge Identifier of the Bridge\n\
    \               recorded as the Root in the Configuration BPDUs\n            \
    \   transmitted by the Designated Bridge for the\n               segment to which\
    \ the port is attached.\"\n       REFERENCE\n               \"P802.1d/D9, July\
    \ 14, 1989: Section 4.5.5.4\"\n       ::= { dot1dStpPortEntry 6 }\n   dot1dStpPortDesignatedCost\
    \ OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The path cost of the Designated\
    \ Port of the\n               segment connected to this port.  This value is\n\
    \               compared to the Root Path Cost field in received\n           \
    \    bridge PDUs.\"\n       REFERENCE\n               \"P802.1d/D9, July 14, 1989:\
    \ Section 4.5.5.5\"\n       ::= { dot1dStpPortEntry 7 }\n   dot1dStpPortDesignatedBridge\
    \ OBJECT-TYPE\n       SYNTAX  BridgeId\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The Bridge Identifier of the\
    \ bridge which this\n               port considers to be the Designated Bridge\
    \ for\n               this port's segment.\"\n       REFERENCE\n             \
    \  \"P802.1d/D9, July 14, 1989: Section 4.5.5.6\"\n       ::= { dot1dStpPortEntry\
    \ 8 }\n   dot1dStpPortDesignatedPort OBJECT-TYPE\n       SYNTAX  OCTET STRING\
    \ (SIZE (2))\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"The Port Identifier of the port on the Designated\n        \
    \       Bridge for this port's segment.\"\n       REFERENCE\n               \"\
    P802.1d/D9, July 14, 1989: Section 4.5.5.7\"\n       ::= { dot1dStpPortEntry 9\
    \ }\n   dot1dStpPortForwardTransitions OBJECT-TYPE\n       SYNTAX  Counter\n \
    \      ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n     \
    \          \"The number of times this port has transitioned\n               from\
    \ the Learning state to the Forwarding state.\"\n       ::= { dot1dStpPortEntry\
    \ 10 }\n   -- the dot1dSr group\n   -- Implementation of the dot1dSr group is\
    \ optional.  It is\n   -- implemented by those bridges that support the source\
    \ route\n   -- bridging mode, including Source Route and SRT bridges.\n   dot1dSrPortTable\
    \ OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dot1dSrPortEntry\n       ACCESS  not-accessible\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"A table that contains\
    \ information about every\n               port that is associated with this source\
    \ route\n               bridge.\"\n       ::= { dot1dSr 1 }\n   dot1dSrPortEntry\
    \ OBJECT-TYPE\n       SYNTAX  Dot1dSrPortEntry\n       ACCESS  not-accessible\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"A list of information\
    \ for each port of a source\n               route bridge.\"\n       INDEX   {\
    \ dot1dSrPort }\n       ::= { dot1dSrPortTable 1 }\n   Dot1dSrPortEntry ::=\n\
    \       SEQUENCE {\n           dot1dSrPort\n               INTEGER,\n        \
    \   dot1dSrPortHopCount\n               INTEGER,\n           dot1dSrPortLocalSegment\n\
    \               INTEGER,\n           dot1dSrPortBridgeNum\n               INTEGER,\n\
    \           dot1dSrPortTargetSegment\n               INTEGER,\n           dot1dSrPortLargestFrame\n\
    \               INTEGER,\n           dot1dSrPortSTESpanMode\n               INTEGER,\n\
    \           dot1dSrPortSpecInFrames\n               Counter,\n           dot1dSrPortSpecOutFrames\n\
    \               Counter,\n           dot1dSrPortApeInFrames\n               Counter,\n\
    \           dot1dSrPortApeOutFrames\n               Counter,\n           dot1dSrPortSteInFrames\n\
    \               Counter,\n           dot1dSrPortSteOutFrames\n               Counter,\n\
    \           dot1dSrPortSegmentMismatchDiscards\n               Counter,\n    \
    \       dot1dSrPortDuplicateSegmentDiscards\n               Counter,\n       \
    \    dot1dSrPortHopCountExceededDiscards\n               Counter\n       }\n \
    \  dot1dSrPort OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS  read-only\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"The port number\
    \ of the port for which this entry\n               contains Source Route management\
    \ information.\"\n       ::= { dot1dSrPortEntry 1 }\n   dot1dSrPortHopCount OBJECT-TYPE\n\
    \       SYNTAX  INTEGER\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The maximum number of routing descriptors\
    \ allowed\n               in an All Paths or Spanning Tree Explorer frames.\"\n\
    \       ::= { dot1dSrPortEntry 2 }\n   dot1dSrPortLocalSegment OBJECT-TYPE\n \
    \      SYNTAX  INTEGER\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The segment number that uniquely identifies\
    \ the\n               segment to which this port is connected. Current\n     \
    \          source routing protocols limit this value to the\n               range:\
    \ 0 through 4095. A value of 65535 signifies\n               that no segment number\
    \ is assigned to this port.\"\n       ::= { dot1dSrPortEntry 3 }\n   dot1dSrPortBridgeNum\
    \ OBJECT-TYPE\n       SYNTAX  INTEGER\n       ACCESS  read-write\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"A bridge number uniquely identifies\
    \ a bridge when\n               more than one bridge is used to span the same\
    \ two\n               segments.  Current source routing protocols limit\n    \
    \           this value to the range: 0 through 15. A value of\n              \
    \ 65535 signifies that no bridge number is assigned\n               to this bridge.\"\
    \n       ::= { dot1dSrPortEntry 4 }\n   dot1dSrPortTargetSegment OBJECT-TYPE\n\
    \       SYNTAX  INTEGER\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The segment number that corresponds to the\
    \ target\n               segment this port is considered to be connected to\n\
    \               by the bridge.  Current source routing protocols\n           \
    \    limit this value to the range: 0 through 4095. A\n               value of\
    \ 65535 signifies that no target segment is\n               assigned to this port.\"\
    \n       ::= { dot1dSrPortEntry 5 }\n   -- It would be nice if we could use ifMtu\
    \ as the size of the\n   -- largest frame, but we can't because ifMtu is defined\
    \ to be\n   -- the size that the (inter-)network layer can use which can\n   --\
    \ differ from the MAC layer (especially if several layers of\n   -- encapsulation\
    \ are used).\n   dot1dSrPortLargestFrame OBJECT-TYPE\n       SYNTAX  INTEGER {\n\
    \                   dot1dSrMtu516   (516),\n                   dot1dSrMtu1500\
    \  (1500),\n                   dot1dSrMtu2052  (2052),\n                   dot1dSrMtu4472\
    \  (4472),\n                   dot1dSrMtu8144  (8144),\n                   dot1dSrMtu11407\
    \ (11407), -- yes this is correct don't\n                   dot1dSrMtu17800 (17800),\
    \ -- ask me where it came from.\n                   dot1dSrMtu65535 (65535)\n\
    \               }\n       ACCESS  read-write\n       STATUS  mandatory\n     \
    \  DESCRIPTION\n               \"The maximum size of the INFO field (LLC and\n\
    \               above) that this port can send/receive.  It does\n           \
    \    not include any MAC level (framing) octets.  The\n               value of\
    \ this object is used by this bridge to\n               determine whether a modification\
    \ of the\n               LargestFrame (LF, see [14]) field of the Routing\n  \
    \             Control field of the Routing Information Field is\n            \
    \   necessary.  Valid values as defined by the 802.5\n               source routing\
    \ bridging specification[14] are 516,\n               1500, 2052, 4472, 8144,\
    \ 11407, 17800, and 65535\n               octets.  Behavior of the port when an\
    \ illegal\n               value is written is implementation specific.  It\n \
    \              is recommended that a reasonable legal value be\n             \
    \  chosen.\"\n       ::= { dot1dSrPortEntry 6 }\n   dot1dSrPortSTESpanMode OBJECT-TYPE\n\
    \       SYNTAX  INTEGER {\n                   auto-span(1),\n                \
    \   disabled(2),\n                   forced(3)\n               }\n       ACCESS\
    \  read-write\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    Determines how this port behaves when presented\n               with a Spanning\
    \ Tree Explorer frame.  The value\n               'disabled(2)' indicates that\
    \ the port will not\n               accept or send Spanning Tree Explorer packets;\
    \ any\n               STE packets received will be silently discarded.\n     \
    \          The value 'forced(3)' indicates the port will\n               always\
    \ accept and propagate Spanning Tree Explorer\n               frames.  This allows\
    \ a manually configured\n               Spanning Tree for this class of packet\
    \ to be\n               configured.  Note that unlike transparent bridging\n \
    \              this is not catastrophic to the network if there\n            \
    \   are loops.  The value 'auto-span(1)' can only be\n               returned\
    \ by a bridge that both implements the\n               Spanning Tree Protocol\
    \ and has use of the protocol\n               enabled on this port. The behavior\
    \ of the port for\n               Spanning Tree Explorer frames is determined\
    \ by the\n               state of dot1dStpPortState.  If the port is in the\n\
    \               'forwarding' state, the frame will be accepted or\n          \
    \     propagated.  Otherwise it will be silently\n               discarded.\"\n\
    \       ::= { dot1dSrPortEntry 7 }\n   dot1dSrPortSpecInFrames OBJECT-TYPE\n \
    \      SYNTAX  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n \
    \      DESCRIPTION\n               \"The number of specifically routed frames\
    \ that\n               have been received from this port's segment.\"\n      \
    \ ::= { dot1dSrPortEntry 8 }\n   dot1dSrPortSpecOutFrames OBJECT-TYPE\n      \
    \ SYNTAX  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n      \
    \ DESCRIPTION\n               \"The number of specifically routed frames that\n\
    \               this port has transmitted on its segment.\"\n       ::= { dot1dSrPortEntry\
    \ 9 }\n   dot1dSrPortApeInFrames OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS\
    \  read-only\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    The number of all paths explorer frames that have\n               been received\
    \ by this port from its segment.\"\n       ::= { dot1dSrPortEntry 10 }\n   dot1dSrPortApeOutFrames\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of all paths explorer\
    \ frames that have\n               been transmitted by this port on its segment.\"\
    \n       ::= { dot1dSrPortEntry 11 }\n   dot1dSrPortSteInFrames OBJECT-TYPE\n\
    \       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The number of spanning tree explorer frames\
    \ that\n               have been received by this port from its segment.\"\n \
    \      ::= { dot1dSrPortEntry 12 }\n   dot1dSrPortSteOutFrames OBJECT-TYPE\n \
    \      SYNTAX  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n \
    \      DESCRIPTION\n               \"The number of spanning tree explorer frames\
    \ that\n               have been transmitted by this port on its\n           \
    \    segment.\"\n       ::= { dot1dSrPortEntry 13 }\n   dot1dSrPortSegmentMismatchDiscards\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of explorer frames\
    \ that have been\n               discarded by this port because the routing\n\
    \               descriptor field contained an invalid adjacent\n             \
    \  segment value.\"\n       ::= { dot1dSrPortEntry 14 }\n   dot1dSrPortDuplicateSegmentDiscards\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of frames that have\
    \ been discarded by\n               this port because the routing descriptor field\n\
    \               contained a duplicate segment identifier.\"\n       ::= { dot1dSrPortEntry\
    \ 15 }\n   dot1dSrPortHopCountExceededDiscards OBJECT-TYPE\n       SYNTAX  Counter\n\
    \       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n    \
    \           \"The number of explorer frames that have been\n               discarded\
    \ by this port because the Routing\n               Information Field has exceeded\
    \ the maximum route\n               descriptor length.\"\n       ::= { dot1dSrPortEntry\
    \ 16 }\n   -- the dot1dTp group\n   -- Implementation of the dot1dTp group is\
    \ optional.  It is\n   -- implemented by those bridges that support the transparent\n\
    \   -- bridging mode.  A transparent or SRT bridge will implement\n   -- this\
    \ group.\n   dot1dTpLearnedEntryDiscards OBJECT-TYPE\n       SYNTAX  Counter\n\
    \       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n    \
    \           \"The total number of Forwarding Database entries,\n             \
    \  which have been or would have been learnt, but\n               have been discarded\
    \ due to a lack of space to\n               store them in the Forwarding Database.\
    \  If this\n               counter is increasing, it indicates that the\n    \
    \           Forwarding Database is regularly becoming full (a\n              \
    \ condition which has unpleasant performance effects\n               on the subnetwork).\
    \  If this counter has a\n               significant value but is not presently\
    \ increasing,\n               it indicates that the problem has been occurring\n\
    \               but is not persistent.\"\n       REFERENCE\n               \"\
    P802.1d/D9, July 14, 1989: Section 6.7.1.1.3\"\n       ::= { dot1dTp 1 }\n   dot1dTpAgingTime\
    \ OBJECT-TYPE\n       SYNTAX   INTEGER\n       ACCESS   read-write\n       STATUS\
    \   mandatory\n       DESCRIPTION\n               \"The timeout period in seconds\
    \ for aging out\n               dynamically learned forwarding information.\"\n\
    \       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 6.7.1.1.3\"\
    \n       ::= { dot1dTp 2 }\n   --  The Forwarding Database for Transparent Bridges\n\
    \   dot1dTpFdbTable OBJECT-TYPE\n       SYNTAX  SEQUENCE OF Dot1dTpFdbEntry\n\
    \       ACCESS  not-accessible\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"A table that contains information about unicast\n          \
    \     entries for which the bridge has forwarding and/or\n               filtering\
    \ information.  This information is used\n               by the transparent bridging\
    \ function in\n               determining how to propagate a received frame.\"\
    \n       ::= { dot1dTp 3 }\n   dot1dTpFdbEntry OBJECT-TYPE\n       SYNTAX  Dot1dTpFdbEntry\n\
    \       ACCESS  not-accessible\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"Information about a specific unicast MAC address\n         \
    \      for which the bridge has some forwarding and/or\n               filtering\
    \ information.\"\n       INDEX   { dot1dTpFdbAddress }\n       ::= { dot1dTpFdbTable\
    \ 1 }\n   Dot1dTpFdbEntry ::=\n       SEQUENCE {\n           dot1dTpFdbAddress\n\
    \               MacAddress,\n           dot1dTpFdbPort\n               INTEGER,\n\
    \           dot1dTpFdbStatus\n               INTEGER\n       }\n   dot1dTpFdbAddress\
    \ OBJECT-TYPE\n       SYNTAX  MacAddress\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"A unicast MAC address for which\
    \ the bridge has\n               forwarding and/or filtering information.\"\n\
    \       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 3.9.1,\
    \ 3.9.2\"\n       ::= { dot1dTpFdbEntry 1 }\n   dot1dTpFdbPort OBJECT-TYPE\n \
    \      SYNTAX  INTEGER\n       ACCESS  read-only\n       STATUS  mandatory\n \
    \      DESCRIPTION\n               \"Either the value '0', or the port number\
    \ of the\n               port on which a frame having a source address\n     \
    \          equal to the value of the corresponding instance\n               of\
    \ dot1dTpFdbAddress has been seen.  A value of\n               '0' indicates that\
    \ the port number has not been\n               learned but that the bridge does\
    \ have some\n               forwarding/filtering information about this\n    \
    \           address (e.g. in the dot1dStaticTable).\n               Implementors\
    \ are encouraged to assign the port\n               value to this object whenever\
    \ it is learned even\n               for addresses for which the corresponding\
    \ value of\n               dot1dTpFdbStatus is not learned(3).\"\n       ::= {\
    \ dot1dTpFdbEntry 2 }\n   dot1dTpFdbStatus OBJECT-TYPE\n       SYNTAX  INTEGER\
    \ {\n                   other(1),\n                   invalid(2),\n          \
    \         learned(3),\n                   self(4),\n                   mgmt(5)\n\
    \               }\n       ACCESS  read-only\n       STATUS  mandatory\n      \
    \ DESCRIPTION\n               \"The status of this entry.  The meanings of the\n\
    \               values are:\n                 other(1)   : none of the following.\
    \  This would\n                              include the case where some other\n\
    \                              MIB object (not the corresponding\n           \
    \                   instance of dot1dTpFdbPort, nor an\n                     \
    \         entry in the dot1dStaticTable) is\n                              being\
    \ used to determine if and how\n                              frames addressed\
    \ to the value of\n                              the corresponding instance of\n\
    \                              dot1dTpFdbAddress are being\n                 \
    \             forwarded.\n                 invalid(2) : this entry is not longer\
    \ valid\n                              (e.g., it was learned but has since\n \
    \                             aged-out), but has not yet been\n              \
    \                flushed from the table.\n                 learned(3) : the value\
    \ of the corresponding\n                              instance of dot1dTpFdbPort\
    \ was\n                              learned, and is being used.\n           \
    \      self(4)    : the value of the corresponding\n                         \
    \     instance of dot1dTpFdbAddress\n                              represents\
    \ one of the bridge's\n                              addresses.  The corresponding\n\
    \                              instance of dot1dTpFdbPort\n                  \
    \            indicates which of the bridge's\n                              ports\
    \ has this address.\n                 mgmt(5)    : the value of the corresponding\n\
    \                              instance of dot1dTpFdbAddress is\n            \
    \                  also the value of an existing\n                           \
    \   instance of dot1dStaticAddress.\"\n       ::= { dot1dTpFdbEntry 3 }\n   --\
    \  Port Table for Transparent Bridges\n   dot1dTpPortTable OBJECT-TYPE\n     \
    \  SYNTAX  SEQUENCE OF Dot1dTpPortEntry\n       ACCESS  not-accessible\n     \
    \  STATUS  mandatory\n       DESCRIPTION\n               \"A table that contains\
    \ information about every\n               port that is associated with this transparent\n\
    \               bridge.\"\n       ::= { dot1dTp 4 }\n   dot1dTpPortEntry OBJECT-TYPE\n\
    \       SYNTAX  Dot1dTpPortEntry\n       ACCESS  not-accessible\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"A list of information for each\
    \ port of a\n               transparent bridge.\"\n       INDEX   { dot1dTpPort\
    \ }\n       ::= { dot1dTpPortTable 1 }\n   Dot1dTpPortEntry ::=\n       SEQUENCE\
    \ {\n           dot1dTpPort\n               INTEGER,\n           dot1dTpPortMaxInfo\n\
    \               INTEGER,\n           dot1dTpPortInFrames\n               Counter,\n\
    \           dot1dTpPortOutFrames\n               Counter,\n           dot1dTpPortInDiscards\n\
    \               Counter\n       }\n   dot1dTpPort OBJECT-TYPE\n       SYNTAX \
    \ INTEGER\n       ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n\
    \               \"The port number of the port for which this entry\n         \
    \      contains Transparent bridging management\n               information.\"\
    \n       ::= { dot1dTpPortEntry 1 }\n   -- It would be nice if we could use ifMtu\
    \ as the size of the\n   -- largest INFO field, but we can't because ifMtu is\
    \ defined\n   -- to be the size that the (inter-)network layer can use which\n\
    \   -- can differ from the MAC layer (especially if several layers\n   -- of encapsulation\
    \ are used).\n   dot1dTpPortMaxInfo OBJECT-TYPE\n       SYNTAX  INTEGER\n    \
    \   ACCESS  read-only\n       STATUS  mandatory\n       DESCRIPTION\n        \
    \       \"The maximum size of the INFO (non-MAC) field that\n               this\
    \ port will receive or transmit.\"\n       ::= { dot1dTpPortEntry 2 }\n   dot1dTpPortInFrames\
    \ OBJECT-TYPE\n       SYNTAX  Counter\n       ACCESS  read-only\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"The number of frames that have\
    \ been received by\n               this port from its segment. Note that a frame\n\
    \               received on the interface corresponding to this\n            \
    \   port is only counted by this object if and only if\n               it is for\
    \ a protocol being processed by the local\n               bridging function.\"\
    \n       REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 6.6.1.1.3\"\
    \n       ::= { dot1dTpPortEntry 3 }\n   dot1dTpPortOutFrames OBJECT-TYPE\n   \
    \    SYNTAX  Counter\n       ACCESS  read-only\n       STATUS  mandatory\n   \
    \    DESCRIPTION\n               \"The number of frames that have been transmitted\n\
    \               by this port to its segment.  Note that a frame\n            \
    \   transmitted on the interface corresponding to this\n               port is\
    \ only counted by this object if and only if\n               it is for a protocol\
    \ being processed by the local\n               bridging function.\"\n       REFERENCE\n\
    \               \"P802.1d/D9, July 14, 1989: Section 6.6.1.1.3\"\n       ::= {\
    \ dot1dTpPortEntry 4 }\n   dot1dTpPortInDiscards OBJECT-TYPE\n       SYNTAX  \
    \ Counter\n       ACCESS   read-only\n       STATUS   mandatory\n       DESCRIPTION\n\
    \               \"Count of valid frames received which were\n               discarded\
    \ (i.e., filtered) by the Forwarding\n               Process.\"\n       REFERENCE\n\
    \               \"P802.1d/D9, July 14, 1989: Section 6.6.1.1.3\"\n       ::= {\
    \ dot1dTpPortEntry 5 }\n   -- The Static (Destination-Address Filtering) Database\n\
    \   -- Implementation of this group is optional.\n   dot1dStaticTable OBJECT-TYPE\n\
    \       SYNTAX  SEQUENCE OF Dot1dStaticEntry\n       ACCESS  not-accessible\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"A table containing\
    \ filtering information\n               configured into the bridge by (local or\
    \ network)\n               management specifying the set of ports to which\n \
    \              frames received from specific ports and containing\n          \
    \     specific destination addresses are allowed to be\n               forwarded.\
    \  The value of zero in this table as the\n               port number from which\
    \ frames with a specific\n               destination address are received, is\
    \ used to\n               specify all ports for which there is no specific\n \
    \              entry in this table for that particular\n               destination\
    \ address.  Entries are valid for\n               unicast and for group/broadcast\
    \ addresses.\"\n       REFERENCE\n               \"P802.1d/D9, July 14, 1989:\
    \ Section 6.7.2\"\n       ::= { dot1dStatic 1 }\n   dot1dStaticEntry OBJECT-TYPE\n\
    \       SYNTAX  Dot1dStaticEntry\n       ACCESS  not-accessible\n       STATUS\
    \  mandatory\n       DESCRIPTION\n               \"Filtering information configured\
    \ into the bridge\n               by (local or network) management specifying\
    \ the\n               set of ports to which frames received from a\n         \
    \      specific port and containing a specific\n               destination address\
    \ are allowed to be forwarded.\"\n       REFERENCE\n               \"P802.1d/D9,\
    \ July 14,1989: Section 6.7.2\"\n       INDEX   { dot1dStaticAddress, dot1dStaticReceivePort\
    \ }\n       ::= { dot1dStaticTable 1 }\n   Dot1dStaticEntry ::=\n       SEQUENCE\
    \ {\n           dot1dStaticAddress\n               MacAddress,\n           dot1dStaticReceivePort\n\
    \               INTEGER,\n           dot1dStaticAllowedToGoTo\n              \
    \ OCTET STRING,\n           dot1dStaticStatus\n               INTEGER\n      \
    \ }\n   dot1dStaticAddress OBJECT-TYPE\n       SYNTAX  MacAddress\n       ACCESS\
    \  read-write\n       STATUS  mandatory\n       DESCRIPTION\n               \"\
    The destination MAC address in a frame to which\n               this entry's filtering\
    \ information applies.  This\n               object can take the value of a unicast\
    \ address, a\n               group address or the broadcast address.\"\n     \
    \  REFERENCE\n               \"P802.1d/D9, July 14, 1989: Section 3.9.1, 3.9.2\"\
    \n       ::= { dot1dStaticEntry 1 }\n   dot1dStaticReceivePort OBJECT-TYPE\n \
    \      SYNTAX  INTEGER\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"Either the value '0', or the port number\
    \ of the\n               port from which a frame must be received in order\n \
    \              for this entry's filtering information to apply.\n            \
    \   A value of zero indicates that this entry applies\n               on all ports\
    \ of the bridge for which there is no\n               other applicable entry.\"\
    \n       ::= { dot1dStaticEntry 2 }\n   dot1dStaticAllowedToGoTo OBJECT-TYPE\n\
    \       SYNTAX  OCTET STRING\n       ACCESS  read-write\n       STATUS  mandatory\n\
    \       DESCRIPTION\n               \"The set of ports to which frames received\
    \ from a\n               specific port and destined for a specific MAC\n     \
    \          address, are allowed to be forwarded.  Each octet\n               within\
    \ the value of this object specifies a set of\n               eight ports, with\
    \ the first octet specifying ports\n               1 through 8, the second octet\
    \ specifying ports 9\n               through 16, etc.  Within each octet, the\
    \ most\n               significant bit represents the lowest numbered\n      \
    \         port, and the least significant bit represents the\n               highest\
    \ numbered port.  Thus, each port of the\n               bridge is represented\
    \ by a single bit within the\n               value of this object.  If that bit\
    \ has a value of\n               '1' then that port is included in the set of\n\
    \               ports; the port is not included if its bit has a\n           \
    \    value of '0'.  (Note that the setting of the bit\n               corresponding\
    \ to the port from which a frame is\n               received is irrelevant.)\"\
    \n       ::= { dot1dStaticEntry 3 }\n   dot1dStaticStatus OBJECT-TYPE\n      \
    \ SYNTAX  INTEGER {\n                   other(1),\n                   invalid(2),\n\
    \                   permanent(3),\n                   deleteOnReset(4),\n    \
    \               deleteOnTimeout(5)\n               }\n       ACCESS  read-write\n\
    \       STATUS  mandatory\n       DESCRIPTION\n               \"This object indicates\
    \ the status of this entry.\n                    other(1) - this entry is currently\
    \ in use but\n                         the conditions under which it will\n  \
    \                       remain so are different from each of the\n           \
    \              following values.\n                    invalid(2) - writing this\
    \ value to the object\n                         removes the corresponding entry.\n\
    \                    permanent(3) - this entry is currently in use\n         \
    \                and will remain so after the next reset\n                   \
    \      of the bridge.\n                    deleteOnReset(4) - this entry is currently\
    \ in\n                         use and will remain so until the next\n       \
    \                  reset of the bridge.\n                    deleteOnTimeout(5)\
    \ - this entry is currently\n                         in use and will remain so\
    \ until it is\n                         aged out.\"\n       ::= { dot1dStaticEntry\
    \ 4 }\n   -- Traps for use by Bridges\n   -- Traps for the Spanning Tree Protocol\n\
    \   newRoot TRAP-TYPE\n       ENTERPRISE  dot1dBridge\n       DESCRIPTION\n  \
    \             \"The newRoot trap indicates that the sending agent\n          \
    \     has become the new root of the Spanning Tree; the\n               trap is\
    \ sent by a bridge soon after its election\n               as the new root, e.g.,\
    \ upon expiration of the\n               Topology Change Timer immediately subsequent\
    \ to\n               its election.\"\n       ::= 1\n   topologyChange TRAP-TYPE\n\
    \       ENTERPRISE  dot1dBridge\n       DESCRIPTION\n               \"A topologyChange\
    \ trap is sent by a bridge when\n               any of its configured ports transitions\
    \ from the\n               Learning state to the Forwarding state, or from\n \
    \              the Forwarding state to the Blocking state.  The\n            \
    \   trap is not sent if a newRoot trap is sent for the\n               same transition.\"\
    \n       ::= 2\n   END\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   This document was produced on behalf of the Bridge Sub-Working\
    \ Group\n   of the SNMP Working Group of the Internet Engineering Task Force.\n\
    \   Over the course of its deliberations, the working group received four\n  \
    \ separate documents for consideration as the basis for its work.  The\n   first\
    \ was submitted by Stan Froyd of Advanced Computer\n   Communications; the second\
    \ by Richard Fox of SynOptics; the third by\n   Eric Decker of cisco Inc. and\
    \ Keith McCloghrie of Hughes LAN Systems;\n   and the fourth by Paul Langille\
    \ and Anil Rijsinghani of Digital\n   Equipment Corp. After considering the submissions,\
    \ the working group\n   chose to proceed with a document formed as a conjunction\
    \ of the\n   latter two submissions.  This document is the result.\n   The authors\
    \ wish to thank the members of the Bridge Working Group for\n   their many comments\
    \ and suggestions which improved this effort.  In\n   particular, Fred Baker (chairman\
    \ of the working group) of ACC, Steve\n   Sherry of Xyplex, and Frank Kastenholz\
    \ of Clearpoint Research Corp.\n   Others members of the Bridge Working Group\
    \ who contributed to this\n   effort are:\n        Bill Anderson, Mitre\n    \
    \    Karl Auerbach, Epilogue\n        Fred Baker, ACC (chair)\n        Terry Bradley,\
    \ Wellfleet\n        Ted Brunner, Bellcore\n        Jeffrey Buffum, Apollo\n \
    \       Chris ChioTasso, Fibronics\n        Anthony Chung, HLS\n        Chuck\
    \ Davin, MIT-LCS\n        Andy Davis, Spider\n        Eric Decker, cisco\n   \
    \     Nadya El-Afandi, Network Systems\n        Gary Ellis,HP/Apollo\n       \
    \ Richard Fox, SynOptics\n        Stan Froyd, ACC\n        Frank Kastenholz, Clearpoint\
    \ Research\n        Shirnshon Kaufman,\n        Jim Kinder, Fibercom\n       \
    \ Cheryl Krupczak,NCR\n        Paul Langille, Digital\n        Peter Lin,Vitalink\n\
    \        Keith McCloghrie, HLS\n        Donna McMaster, SynOptics\n        Dave\
    \ Perkins, 3Com\n        Jim Reinstedler, Ungermann Bass\n        Anil Rijsinghani,\
    \ Digital\n        Mark Schaefer, David Systems\n        Steve Sherry, Xyplex\n\
    \        Bob Stewart, Xyplex\n        Emil Sturniolo,\n        Kevin Synott, Retix\n\
    \        Ian Thomas, Chipcom\n        Maurice Turcott, Racal\n        Fei Xu,\n"
- title: 7.  References
  contents:
  - "7.  References\n   [1] Cerf, V., \"IAB Recommendations for the Development of\
    \ Internet\n       Network Management Standards\", RFC 1052, NRI, April 1988.\n\
    \   [2]  Cerf, V., \"Report of the Second Ad Hoc Network Management Review\n \
    \      Group\", RFC 1109, NRI, August 1989.\n   [3] Rose M., and K. McCloghrie,\
    \ \"Structure and Identification of\n       Management Information for TCP/IP-based\
    \ internets\", RFC 1155,\n       Performance Systems International, Hughes LAN\
    \ Systems, May 1990.\n   [4] McCloghrie K., and M. Rose, \"Management Information\
    \ Base for\n       Network Management of TCP/IP-based internets\", RFC 1156, Hughes\n\
    \       LAN Systems, Performance Systems International, May 1990.\n   [5] Case,\
    \ J., Fedor, M., Schoffstall, M., and J. Davin, \"Simple\n       Network Management\
    \ Protocol\", RFC 1157, SNMP Research,\n       Performance Systems International,\
    \ Performance Systems\n       International, MIT Laboratory for Computer Science,\
    \ May 1990.\n   [6] McCloghrie K., and M. Rose, Editors, \"Management Information\
    \ Base\n       for Network Management of TCP/IP-based internets\", RFC 1213,\n\
    \       Performance Systems International, March 1991.\n   [7] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Abstract Syntax\
    \ Notation One (ASN.1),\n       International Organization for Standardization,\
    \ International\n       Standard 8824, December 1987.\n   [8] Information processing\
    \ systems - Open Systems Interconnection -\n       Specification of Basic Encoding\
    \ Rules for Abstract Notation One\n       (ASN.1), International Organization\
    \ for Standardization,\n       International Standard 8825, December 1987.\n \
    \  [9] Rose, M., and K. McCloghrie, Editors, \"Concise MIB Definitions\",\n  \
    \     RFC 1212, Performance Systems International, Hughes LAN Systems,\n     \
    \  March 1991.\n  [10] Rose, M., Editor, \"A Convention for Defining Traps for\
    \ use with\n       the SNMP\", RFC 1215, Performance Systems International, March\n\
    \       1991.\n  [11] ANSI/IEEE Draft P802.1d/D9 MAC Bridges, \"IEEE Project 802\
    \ Local\n       and Metropolitan Area Networks\", July 14, 1989.\n  [12] I.B.M.\
    \ Token Ring Architecture Reference.\n  [13] ISO DIS 10038 MAC Bridges.\n  [14]\
    \ ANSI/IEEE P802.1x/P802.5x, \"Proposed Draft Local Area Network\n       Standard\
    \ -- MAC Bridges, Source Routing Supplement\", IEEE Project\n       802, September\
    \ 1990.\n  [15] ANSI/IEEE 802.1y, \"Source Routing Tutorial for End System\n \
    \      Operation\", September 1990.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Authors' Addresses
  contents:
  - "9.  Authors' Addresses\n   Eric B. Decker\n   cisco Systems, Inc.\n   1525 O'Brien\
    \ Dr.\n   Menlo Park, CA  94025\n   Phone: (415) 326-1941\n   Email: cire@cisco.com\n\
    \   Paul Langille\n   Digital Equipment Corporation\n   Digital Drive, MK02-2/K03\n\
    \   Merrimack, NH 03054\n   Phone: (603) 884-4045\n   EMail: langille@edwin.enet.dec.com\n\
    \   Anil Rijsinghani\n   Digital Equipment Corporation\n   153 Taylor St.\n  \
    \ Littleton, MA 01460\n   Phone: (508)952-3520\n   EMail: anil@levers.enet.dec.com\n\
    \   Keith McCloghrie\n   Hughes LAN Systems\n   1225 Charleston Road\n   Mountain\
    \ View, CA 94043\n   Phone: (415) 966-7934\n   EMail: kzm@hls.com\n"
