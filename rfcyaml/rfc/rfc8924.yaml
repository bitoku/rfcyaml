- title: __initial_text__
  contents:
  - "    Service Function Chaining (SFC) Operations, Administration, and\n       \
    \               Maintenance (OAM) Framework\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a reference framework for Operations,\n \
    \  Administration, and Maintenance (OAM) for Service Function Chaining\n   (SFC).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8924.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Document Scope\n     1.2.\
    \  Acronyms and Terminology\n       1.2.1.  Acronyms\n       1.2.2.  Terminology\n\
    \   2.  SFC Layering Model\n   3.  SFC OAM Components\n     3.1.  The SF Component\n\
    \       3.1.1.  SF Availability\n       3.1.2.  SF Performance Measurement\n \
    \    3.2.  The SFC Component\n       3.2.1.  SFC Availability\n       3.2.2. \
    \ SFC Performance Measurement\n     3.3.  Classifier Component\n     3.4.  Underlay\
    \ Network\n     3.5.  Overlay Network\n   4.  SFC OAM Functions\n     4.1.  Connectivity\
    \ Functions\n     4.2.  Continuity Functions\n     4.3.  Trace Functions\n   \
    \  4.4.  Performance Measurement Functions\n   5.  Gap Analysis\n     5.1.  Existing\
    \ OAM Functions\n     5.2.  Missing OAM Functions\n     5.3.  Required OAM Functions\n\
    \   6.  Operational Aspects of SFC OAM at the Service Layer\n     6.1.  SFC OAM\
    \ Packet Marker\n     6.2.  OAM Packet Processing and Forwarding Semantic\n  \
    \   6.3.  OAM Function Types\n   7.  Candidate SFC OAM Tools\n     7.1.  ICMP\n\
    \     7.2.  BFD / Seamless BFD\n     7.3.  In Situ OAM\n     7.4.  SFC Traceroute\n\
    \   8.  Manageability Considerations\n   9.  Security Considerations\n   10. IANA\
    \ Considerations\n   11. Informative References\n   Acknowledgements\n   Contributors\n\
    \   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Service Function Chaining (SFC) enables the creation of\
    \ composite\n   services that consist of an ordered set of Service Functions (SFs)\n\
    \   that are to be applied to any traffic selected as a result of\n   classification\
    \ [RFC7665].  SFC is a concept that provides for more\n   than just the application\
    \ of an ordered set of SFs to selected\n   traffic; rather, it describes a method\
    \ for deploying SFs in a way\n   that enables dynamic ordering and topological\
    \ independence of those\n   SFs as well as the exchange of metadata between participating\n\
    \   entities.  The foundations of SFC are described in the following\n   documents:\n\
    \   *  SFC Problem Statement [RFC7498]\n   *  SFC Architecture [RFC7665]\n   The\
    \ reader is assumed to be familiar with the material in [RFC7665].\n   This document\
    \ provides a reference framework for Operations,\n   Administration, and Maintenance\
    \ (OAM) [RFC6291] of SFC.\n   Specifically, this document provides:\n   *  an\
    \ SFC layering model (Section 2),\n   *  aspects monitored by SFC OAM (Section\
    \ 3),\n   *  functional requirements for SFC OAM (Section 4),\n   *  a gap analysis\
    \ for SFC OAM (Section 5),\n   *  operational aspects of SFC OAM at the service\
    \ layer (Section 6),\n   *  applicability of various OAM tools (Section 7), and\n\
    \   *  manageability considerations for SF and SFC (Section 8).\n   SFC OAM solution\
    \ documents should refer to this document to indicate\n   the SFC OAM component\
    \ and the functionality they target.\n   OAM controllers are SFC-aware network\
    \ devices that are capable of\n   generating OAM packets.  They should be within\
    \ the same\n   administrative domain as the target SFC-enabled domain.\n"
- title: 1.1.  Document Scope
  contents:
  - "1.1.  Document Scope\n   The focus of this document is to provide an architectural\
    \ framework\n   for SFC OAM, particularly focused on the aspect of the Operations\n\
    \   component within OAM.  Actual solutions and mechanisms are outside\n   the\
    \ scope of this document.\n"
- title: 1.2.  Acronyms and Terminology
  contents:
  - '1.2.  Acronyms and Terminology

    '
- title: 1.2.1.  Acronyms
  contents:
  - "1.2.1.  Acronyms\n   BFD        Bidirectional Forwarding Detection\n   CLI  \
    \      Command-Line Interface\n   DWDM       Dense Wavelength Division Multiplexing\n\
    \   E-OAM      Ethernet OAM\n   hSFC       Hierarchical Service Function Chaining\n\
    \   IBN        Internal Boundary Node\n   IPPM       IP Performance Metrics\n\
    \   MPLS       Multiprotocol Label Switching\n   MPLS_PM    MPLS Performance Measurement\n\
    \   NETCONF    Network Configuration Protocol\n   NSH        Network Service Header\n\
    \   NVO3       Network Virtualization over Layer 3\n   OAM        Operations,\
    \ Administration, and Maintenance\n   POS        Packet over SONET\n   RSP   \
    \     Rendered Service Path\n   SF         Service Function\n   SFC        Service\
    \ Function Chain\n   SFF        Service Function Forwarder\n   SFP        Service\
    \ Function Path\n   SNMP       Simple Network Management Protocol\n   TRILL  \
    \    Transparent Interconnection of Lots of Links\n   VM         Virtual Machine\n"
- title: 1.2.2.  Terminology
  contents:
  - "1.2.2.  Terminology\n   This document uses the terminology defined in [RFC7665]\
    \ and\n   [RFC8300], and readers are expected to be familiar with it.\n"
- title: 2.  SFC Layering Model
  contents:
  - "2.  SFC Layering Model\n   Multiple layers come into play for implementing the\
    \ SFC.  These\n   include the service layer and the underlying layers (network\
    \ layer,\n   link layer, etc.).\n   *  The service layer consists of SFC data-plane\
    \ elements that include\n      classifiers, Service Functions (SFs), Service Function\
    \ Forwarders\n      (SFF), and SFC Proxies.  This layer uses the overlay network\
    \ layer\n      for ensuring connectivity between SFC data-plane elements.\n  \
    \ *  The overlay network layer leverages various overlay network\n      technologies\
    \ (e.g., Virtual eXtensible Local Area Network (VXLAN))\n      for interconnecting\
    \ SFC data-plane elements and allows\n      establishing Service Function Paths\
    \ (SFPs).  This layer is mostly\n      transparent to the SFC data-plane elements,\
    \ as not all the data-\n      plane elements process the overlay header.\n   *\
    \  The underlay network layer is dictated by the networking\n      technology\
    \ deployed within a network (e.g., IP, MPLS).\n   *  The link layer is tightly\
    \ coupled with the physical technology\n      used.  Ethernet is one such choice\
    \ for this layer, but other\n      alternatives may be deployed (e.g., POS and\
    \ DWDM).  In a virtual\n      environment, virtualized I/O technologies, such\
    \ as Single Root I/O\n      Virtualization (SR-IOV) or similar, are also applicable\
    \ for this\n      layer.  The same or distinct link layer technologies may be\
    \ used\n      in each leg shown in Figure 1.\n      o----------------------Service\
    \ Layer----------------------o\n   |Classi|---|SF1|---|SF2|---|SF3|---|SF4|---|SF5|---|SF6|---|SF7|\n\
    \   |fier  |   +---+   +---+   +---+   +---+   +---+   +---+   +---+\n   +------+\n\
    \                <------VM1------>       <--VM2-->       <--VM3-->\n      o-----------------o-------------------o---------------o\
    \  Underlay\n      o--------o--------o--------o----------o-------o-------o  Link\n\
    \                       Figure 1: SFC Layering Example\n   In Figure 1, the service-layer\
    \ elements, such as classifier and SF,\n   are depicted as virtual entities that\
    \ are interconnected using an\n   overlay network.  The underlay network may comprise\
    \ multiple\n   intermediate nodes not shown in the figure that provide underlay\n\
    \   connectivity between the service-layer elements.\n   While Figure 1 depicts\
    \ an example where SFs are enabled as virtual\n   entities, the SFC architecture\
    \ does not make any assumptions on how\n   the SFC data-plane elements are deployed.\
    \  The SFC architecture is\n   flexible and accommodates physical or virtual entity\
    \ deployment.  SFC\n   OAM accounts for this flexibility, and accordingly it is\
    \ applicable\n   whether SFC data-plane elements are deployed directly on physical\n\
    \   hardware, as one or more virtual entities, or any combination\n   thereof.\n"
- title: 3.  SFC OAM Components
  contents:
  - "3.  SFC OAM Components\n   The SFC operates at the service layer.  For the purpose\
    \ of defining\n   the OAM framework, the service layer is broken up into three\
    \ distinct\n   components:\n   SF component:\n      OAM functions applicable at\
    \ this component include testing the SFs\n      from any SFC-aware network device\
    \ (e.g., classifiers, controllers,\n      and other service nodes).  Testing an\
    \ SF may be more expansive\n      than just checking connectivity to the SF, such\
    \ as checking if the\n      SF is providing its intended service.  Refer to Section\
    \ 3.1.1 for\n      a more detailed discussion.\n   SFC component:\n      OAM functions\
    \ applicable at this component include (but are not\n      limited to) testing\
    \ the SFCs and the SFPs, validation of the\n      correlation between an SFC and\
    \ the actual forwarding path followed\n      by a packet matching that SFC, i.e.,\
    \ the Rendered Service Path\n      (RSP).  Some of the hops of an SFC may not\
    \ be visible when\n      Hierarchical Service Function Chaining (hSFC) [RFC8459]\
    \ is in use.\n      In such schemes, it is the responsibility of the Internal\
    \ Boundary\n      Node (IBN) to glue the connectivity between different levels\
    \ for\n      end-to-end OAM functionality.\n   Classifier component:\n      OAM\
    \ functions applicable at this component include testing the\n      validity of\
    \ the classification rules and detecting any incoherence\n      among the rules\
    \ installed when more than one classifier is used,\n      as explained in Section\
    \ 2.2 of [RFC7665].\n   Figure 2 illustrates an example where OAM for the three\
    \ defined\n   components are used within the SFC environment.\n +-Classifier \
    \ +-Service Function Chain OAM\n | OAM         |\n |             |        ___________________________________________\n\
    \        |Classi|    \\      /   +-----+    +-----+    +-----+          /\n  \
    \      |fier  |     \\    /    | SFF1|----| SFF2|----| SFF3|         /\n     \
    \   +----|-+       \\/_________|________________________________/\n          \
    \   +-------SF_OAM-------+\n                              +SF_OAM>|SF3|   |SF5|\n\
    \                       |Controller|     +-SF_OAM+\n                         \
    \   Service Function OAM (SF_OAM)\n                      Figure 2: SFC OAM Components\n\
    \   It is expected that multiple SFC OAM solutions will be defined, each\n   targeting\
    \ one specific component of the service layer.  However, it\n   is critical that\
    \ SFC OAM solutions together provide the coverage of\n   all three SFC OAM components:\
    \ the SF component, the SFC component,\n   and the classifier component.\n"
- title: 3.1.  The SF Component
  contents:
  - '3.1.  The SF Component

    '
- title: 3.1.1.  SF Availability
  contents:
  - "3.1.1.  SF Availability\n   One SFC OAM requirement for the SF component is to\
    \ allow an SFC-aware\n   network device to check the availability of a specific\
    \ SF (instance),\n   located on the same or different network device(s).  For\
    \ cases where\n   multiple instances of an SF are used to realize a given SF for\
    \ the\n   purpose of load sharing, SF availability can be performed by checking\n\
    \   the availability of any one of those instances, or the availability\n   check\
    \ may be targeted at a specific instance.  SF availability is an\n   aspect that\
    \ raises an interesting question: How does one determine\n   that an SF is available?\
    \  At one end of the spectrum, one might argue\n   that an SF is sufficiently\
    \ available if the service node (physical or\n   virtual) hosting the SF is available\
    \ and is functional.  At the other\n   end of the spectrum, one might argue that\
    \ the SF's availability can\n   only be deduced if the packet, after passing through\
    \ the SF, was\n   examined and it was verified that the packet did indeed get\
    \ the\n   expected service.\n   The former approach will likely not provide sufficient\
    \ confidence\n   about the actual SF availability, i.e., a service node and an\
    \ SF are\n   two different entities.  The latter approach is capable of providing\n\
    \   an extensive verification but comes at a cost.  Some SFs make direct\n   modifications\
    \ to packets, while others do not.  Additionally, the\n   purpose of some SFs\
    \ may be to drop certain packets intentionally.  In\n   such cases, it is normal\
    \ behavior that certain packets will not be\n   egressing out from the SF.  The\
    \ OAM mechanism needs to take into\n   account such SF specifics when assessing\
    \ SF availability.  Note that\n   there are many flavors of SFs available and\
    \ many more that are likely\n   be introduced in the future.  Even a given SF\
    \ may introduce a new\n   functionality (e.g., a new signature in a firewall).\
    \  The cost of\n   this approach is that the OAM mechanism for some SF will need\
    \ to be\n   continuously modified in order to \"keep up\" with new functionality\n\
    \   being introduced.\n   The SF availability check can be performed using a generalized\n\
    \   approach, i.e., at an adequate granularity to provide a basic SF\n   service.\
    \  The task of evaluating the true availability of an SF is a\n   complex activity,\
    \ currently having no simple, unified solution.\n   There is currently no standard\
    \ means of doing so.  Any such mechanism\n   would be far from a typical OAM function,\
    \ so it is not explored as\n   part of the analysis in Sections 4 and 5.\n"
- title: 3.1.2.  SF Performance Measurement
  contents:
  - "3.1.2.  SF Performance Measurement\n   The second SFC OAM requirement for the\
    \ SF component is to allow an\n   SFC-aware network device to check the performance\
    \ metrics, such as\n   loss and delay induced by a specific SF for processing\
    \ legitimate\n   traffic.  Performance measurement can be passive by using live\n\
    \   traffic, an active measurement by using synthetic probe packets, or a\n  \
    \ hybrid method that uses a combination of active and passive\n   measurement.\
    \  More details about this OAM function is explained in\n   Section 4.4.\n   On\
    \ the one hand, the performance of any specific SF can be quantified\n   by measuring\
    \ the loss and delay metrics of the traffic from the SFF\n   to the respective\
    \ SF, while on the other hand, the performance can be\n   measured by leveraging\
    \ the loss and delay metrics from the respective\n   SFs.  The latter requires\
    \ SF involvement to perform the measurement,\n   while the former does not.  For\
    \ cases where multiple instances of an\n   SF are used to realize a given SF for\
    \ the purpose of load sharing, SF\n   performance can be quantified by measuring\
    \ the metrics for any one\n   instance of SF or by measuring the metrics for a\
    \ specific instance.\n   The metrics measured to quantify the performance of the\
    \ SF component\n   are not just limited to loss and delay.  Other metrics, such\
    \ as\n   throughput, also exist and the choice of metrics for performance\n  \
    \ measurement is outside the scope of this document.\n"
- title: 3.2.  The SFC Component
  contents:
  - '3.2.  The SFC Component

    '
- title: 3.2.1.  SFC Availability
  contents:
  - "3.2.1.  SFC Availability\n   An SFC could comprise varying SFs, and so the OAM\
    \ layer is required\n   to perform validation and verification of SFs within an\
    \ SFP, in\n   addition to connectivity verification and fault isolation.\n   In\
    \ order to perform service connectivity verification of an SFC/SFP,\n   the OAM\
    \ functions could be initiated from any SFC-aware network\n   device of an SFC-enabled\
    \ domain for end-to-end paths, or partial\n   paths terminating on a specific\
    \ SF, within the SFC/SFP.  The goal of\n   this OAM function is to ensure the\
    \ SFs chained together have\n   connectivity, as was intended at the time when\
    \ the SFC was\n   established.  The necessary return codes should be defined for\n\
    \   sending back in the response to the OAM packet, in order to complete\n   the\
    \ verification.\n   When ECMP is in use at the service layer for any given SFC,\
    \ there\n   must be the ability to discover and traverse all available paths.\n\
    \   A detailed explanation of the mechanism is outside the scope of this\n   document\
    \ and is expected to be included in the actual solution\n   document.\n"
- title: 3.2.2.  SFC Performance Measurement
  contents:
  - "3.2.2.  SFC Performance Measurement\n   Any SFC-aware network device should have\
    \ the ability to make\n   performance measurements over the entire SFC (i.e.,\
    \ end-to-end) or on\n   a specific segment of SFs within the SFC.\n"
- title: 3.3.  Classifier Component
  contents:
  - "3.3.  Classifier Component\n   A classifier maintains the classification rules\
    \ that map a flow to a\n   specific SFC.  It is vital that the classifier is correctly\n\
    \   configured with updated classification rules and is functioning as\n   expected.\
    \  The SFC OAM must be able to validate the classification\n   rules by assessing\
    \ whether a flow is appropriately mapped to the\n   relevant SFC and detect any\
    \ misclassification.  Sample OAM packets\n   can be presented to the classifiers\
    \ to assess the behavior with\n   regard to a given classification entry.\n  \
    \ The classifier availability check may be performed to check the\n   availability\
    \ of the classifier to apply the rules and classify the\n   traffic flows.  Any\
    \ SFC-aware network device should have the ability\n   to perform availability\
    \ checking of the classifier component for each\n   SFC.\n   Any SFC-aware network\
    \ device should have the ability to perform\n   performance measurement of the\
    \ classifier component for each SFC.\n   The performance can be quantified by\
    \ measuring the performance\n   metrics of the traffic from the classifier for\
    \ each SFC/SFP.\n"
- title: 3.4.  Underlay Network
  contents:
  - "3.4.  Underlay Network\n   The underlay network provides connectivity between\
    \ the SFC\n   components, so the availability or the performance of the underlay\n\
    \   network directly impacts the SFC OAM.\n   Any SFC-aware network device may\
    \ have the ability to perform an\n   availability check or performance measurement\
    \ of the underlay network\n   using any existing OAM functions listed in Section\
    \ 5.1.\n"
- title: 3.5.  Overlay Network
  contents:
  - "3.5.  Overlay Network\n   The overlay network provides connectivity for the service\
    \ plane\n   between the SFC components and is mostly transparent to the SFC data-\n\
    \   plane elements.\n   Any SFC-aware network device may have the ability to perform\
    \ an\n   availability check or performance measurement of the overlay network\n\
    \   using any existing OAM functions listed in Section 5.1.\n"
- title: 4.  SFC OAM Functions
  contents:
  - "4.  SFC OAM Functions\n   Section 3 described SFC OAM components and the associated\
    \ OAM\n   operations on each of them.  This section explores SFC OAM functions\n\
    \   that are applicable for more than one SFC component.\n   The various SFC OAM\
    \ requirements listed in Section 3 highlight the\n   need for various OAM functions\
    \ at the service layer.  As listed in\n   Section 5.1, various OAM functions are\
    \ in existence that are defined\n   to perform OAM functionality at different\
    \ layers.  In order to apply\n   such OAM functions at the service layer, they\
    \ need to be enhanced to\n   operate on a single SF/SFF or multiple SFs/SFFs spanning\
    \ across one\n   or more SFCs.\n"
- title: 4.1.  Connectivity Functions
  contents:
  - "4.1.  Connectivity Functions\n   Connectivity is mainly an on-demand function\
    \ to verify that\n   connectivity exists between certain network elements and\
    \ that the SFs\n   are available.  For example, Label Switched Path (LSP) Ping\
    \ [RFC8029]\n   is a common tool used to perform this function for an MPLS network.\n\
    \   Some of the OAM functions performed by connectivity functions are as\n   follows:\n\
    \   *  Verify the Path MTU from a source to the destination SF or through\n  \
    \    the SFC.  This requires the ability for the OAM packet to be of\n      variable\
    \ length.\n   *  Detect any packet reordering and corruption.\n   *  Verify that\
    \ an SFC or SF is applying the expected policy.\n   *  Verify and validate forwarding\
    \ paths.\n   *  Proactively test alternate or protected paths to ensure\n    \
    \  reliability of network configurations.\n"
- title: 4.2.  Continuity Functions
  contents:
  - "4.2.  Continuity Functions\n   Continuity is a model where OAM messages are sent\
    \ periodically to\n   validate or verify the reachability of a given SF within\
    \ an SFC or\n   for the entire SFC.  This allows a monitoring network device (such\
    \ as\n   the classifier or controller) to quickly detect failures, such as\n \
    \  link failures, network element failures, SF outages, or SFC outages.\n   BFD\
    \ [RFC5880] is one such protocol that helps in detecting failures\n   quickly.\
    \  OAM functions supported by continuity functions are as\n   follows:\n   * \
    \ Provision a continuity check to a given SF within an SFC or for\n      the entire\
    \ SFC.\n   *  Proactively test alternate or protected paths to ensure\n      reliability\
    \ of network configurations.\n   *  Notifying other OAM functions or applications\
    \ of the detected\n      failures so they can take appropriate action.\n"
- title: 4.3.  Trace Functions
  contents:
  - "4.3.  Trace Functions\n   Tracing is an OAM function that allows the operation\
    \ to trigger an\n   action (e.g., response generation) from every transit device\
    \ (e.g.,\n   SFF, SF, and SFC Proxy) on the tested layer.  This function is\n\
    \   typically useful for gathering information from every transit device\n   or\
    \ for isolating the failure point to a specific SF within an SFC or\n   for an\
    \ entire SFC.  Some of the OAM functions supported by trace\n   functions are:\n\
    \   *  the ability to trigger an action from every transit device at the\n   \
    \   SFC layer, using TTL or other means,\n   *  the ability to trigger every transit\
    \ device at the SFC layer to\n      generate a response with OAM code(s) using\
    \ TTL or other means,\n   *  the ability to discover and traverse ECMP paths within\
    \ an SFC, and\n   *  the ability to skip SFs that do not support OAM while tracing\
    \ SFs\n      in an SFC.\n"
- title: 4.4.  Performance Measurement Functions
  contents:
  - "4.4.  Performance Measurement Functions\n   Performance measurement functions\
    \ involve measuring of packet loss,\n   delay, delay variance, etc.  These performance\
    \ metrics may be\n   measured proactively or on demand.\n   SFC OAM should provide\
    \ the ability to measure packet loss for an SFC.\n   On-demand measurement can\
    \ be used to estimate packet loss using\n   statistical methods.  To ensure accurate\
    \ estimations, one needs to\n   ensure that OAM packets are treated the same and\
    \ also share the same\n   fate as regular data traffic.\n   Delay within an SFC\
    \ could be measured based on the time it takes for\n   a packet to traverse the\
    \ SFC from the ingress SFC node to the egress\n   SFF.  Measurement protocols,\
    \ such as the One-Way Active Measurement\n   Protocol (OWAMP) [RFC4656] and the\
    \ Two-Way Active Measurement\n   Protocol (TWAMP) [RFC5357], can be used to measure\
    \ delay\n   characteristics.  As SFCs are unidirectional in nature, measurement\n\
    \   of one-way delay [RFC7679] is important.  In order to measure one-way\n  \
    \ delay, time synchronization must be supported by means such as NTP,\n   GPS,\
    \ Precision Time Protocol (PTP), etc.\n   One-way delay variation [RFC3393] could\
    \ also be calculated by sending\n   OAM packets and measuring the jitter for traffic\
    \ passing through an\n   SFC.\n   Some of the OAM functions supported by the performance\
    \ measurement\n   functions are:\n   *  the ability to measure the packet processing\
    \ delay induced by a\n      single SF or the one-way delay to traverse an SFP\
    \ bound to a given\n      SFC, and\n   *  the ability to measure the packet loss\
    \ [RFC7680] within an SF or\n      an SFP bound to a given SFC.\n"
- title: 5.  Gap Analysis
  contents:
  - "5.  Gap Analysis\n   This section identifies various OAM functions available\
    \ at different\n   layers introduced in Section 2.  It also identifies various\
    \ gaps that\n   exist within the current toolset for performing OAM functions\n\
    \   required for SFC.\n"
- title: 5.1.  Existing OAM Functions
  contents:
  - "5.1.  Existing OAM Functions\n   There are various OAM toolsets available to\
    \ perform OAM functions\n   within various layers.  These OAM functions may be\
    \ used to validate\n   some of the underlay and overlay networks.  Tools like\
    \ ping and trace\n   are in existence to perform connectivity checks and trace\n\
    \   intermediate hops in a network.  These tools support different\n   network\
    \ types, like IP, MPLS, TRILL, etc.  Ethernet OAM (E-OAM)\n   [Y.1731] [EFM] and\
    \ Connectivity Fault Management (CFM) [DOT1Q] offer\n   OAM mechanisms, such as\
    \ a continuity check for Ethernet links.  There\n   is an effort around NVO3 OAM\
    \ to provide connectivity and continuity\n   checks for networks that use NVO3.\
    \  BFD is used for the detection of\n   data-plane forwarding failures.  The IPPM\
    \ framework [RFC2330] offers\n   tools such as OWAMP [RFC4656] and TWAMP [RFC5357]\
    \ (collectively\n   referred to as IPPM in this section) to measure various performance\n\
    \   metrics.  MPLS Packet Loss Measurement (LM) and Packet Delay\n   Measurement\
    \ (DM) (collectively referred to as MPLS_PM in this\n   section) [RFC6374] offer\
    \ the ability to measure performance metrics\n   in MPLS networks.  There is also\
    \ an effort to extend the toolset to\n   provide connectivity and continuity checks\
    \ within overlay networks.\n   BFD is another tool that helps in detecting data\
    \ forwarding failures.\n   Table 1 below is not exhaustive.\n     | Layer    \
    \  | Connectivity | Continuity | Trace | Performance |\n     | Underlay   | Ping\
    \         | E-OAM, BFD | Trace | IPPM,       |\n     | network    |          \
    \    |            |       | MPLS_PM     |\n     | Overlay    | Ping         |\
    \ BFD, NVO3  | Trace | IPPM        |\n     | network    |              | OAM \
    \       |       |             |\n     | Classifier | Ping         | BFD      \
    \  | Trace | None        |\n     | SF         | None         | None       | None\
    \  | None        |\n     | SFC        | None         | None       | None  | None\
    \        |\n                      Table 1: OAM Tool Gap Analysis\n"
- title: 5.2.  Missing OAM Functions
  contents:
  - "5.2.  Missing OAM Functions\n   As shown in Table 1, there are no standards-based\
    \ tools available at\n   the time of this writing that can be used natively (i.e.,\
    \ without\n   enhancement) for the verification of SFs and SFCs.\n"
- title: 5.3.  Required OAM Functions
  contents:
  - "5.3.  Required OAM Functions\n   Primary OAM functions exist for underlying layers.\
    \  Tools like ping,\n   trace, BFD, etc. exist in order to perform these OAM functions.\n\
    \   As depicted in Table 1, toolsets and solutions are required to\n   perform\
    \ the OAM functions at the service layer.\n"
- title: 6.  Operational Aspects of SFC OAM at the Service Layer
  contents:
  - "6.  Operational Aspects of SFC OAM at the Service Layer\n   This section describes\
    \ the operational aspects of SFC OAM at the\n   service layer to perform the SFC\
    \ OAM function defined in Section 4\n   and analyzes the applicability of various\
    \ existing OAM toolsets in\n   the service layer.\n"
- title: 6.1.  SFC OAM Packet Marker
  contents:
  - "6.1.  SFC OAM Packet Marker\n   SFC OAM messages should be encapsulated with\
    \ the necessary SFC header\n   and with OAM markings when testing the SFC component.\
    \  SFC OAM\n   messages may be encapsulated with the necessary SFC header and\
    \ with\n   OAM markings when testing the SF component.\n   The SFC OAM function\
    \ described in Section 4 performed at the service\n   layer or overlay network\
    \ layer must mark the packet as an OAM packet\n   so that relevant nodes can differentiate\
    \ OAM packets from data\n   packets.  The base header defined in Section 2.2 of\
    \ [RFC8300] assigns\n   a bit to indicate OAM packets.  When NSH encapsulation\
    \ is used at the\n   service layer, the O bit must be set to differentiate the\
    \ OAM packet.\n   Any other overlay encapsulations used at the service layer must\
    \ have\n   a way to mark the packet as an OAM packet.\n"
- title: 6.2.  OAM Packet Processing and Forwarding Semantic
  contents:
  - "6.2.  OAM Packet Processing and Forwarding Semantic\n   Upon receiving an OAM\
    \ packet, an SFC-aware SF may choose to discard\n   the packet if it does not\
    \ support OAM functionality or if the local\n   policy prevents it from processing\
    \ the OAM packet.  When an SF\n   supports OAM functionality, it is desirable\
    \ to process the packet and\n   provide an appropriate response to allow end-to-end\
    \ verification.  To\n   limit performance impact due to OAM, SFC-aware SFs should\
    \ rate-limit\n   the number of OAM packets processed.\n   An SFF may choose to\
    \ not forward the OAM packet to an SF if the SF\n   does not support OAM or if\
    \ the policy does not allow the forwarding\n   of OAM packets to that SF.  The\
    \ SFF may choose to skip the SF, modify\n   the packet's header, and forward the\
    \ packet to the next SFC node in\n   the chain.  It should be noted that skipping\
    \ an SF might have\n   implications on some OAM functions (e.g., the delay measurement\
    \ may\n   not be accurate).  The method by which an SFF detects if the\n   connected\
    \ SF supports or is allowed to process OAM packets is outside\n   the scope of\
    \ this document.  It could be a configuration parameter\n   instructed by the\
    \ controller, or it can be done by dynamic\n   negotiation between the SF and\
    \ SFF.\n   If the SFF receiving the OAM packet bound to a given SFC is the last\n\
    \   SFF in the chain, it must send a relevant response to the initiator\n   of\
    \ the OAM packet.  Depending on the type of OAM solution and toolset\n   used,\
    \ the response could be a simple response (such as ICMP reply) or\n   could include\
    \ additional data from the received OAM packet (like\n   statistical data consolidated\
    \ along the path).  The details are\n   expected to be covered in the solution\
    \ documents.\n   Any SFC-aware node that initiates an OAM packet must set the\
    \ OAM\n   marker in the overlay encapsulation.\n"
- title: 6.3.  OAM Function Types
  contents:
  - "6.3.  OAM Function Types\n   As described in Section 4, there are different OAM\
    \ functions that may\n   require different OAM solutions.  While the presence\
    \ of the OAM\n   marker in the overlay header (e.g., O bit in the NSH header)\n\
    \   indicates it as an OAM packet, it is not sufficient to indicate what\n   OAM\
    \ function the packet is intended for.  The Next Protocol field in\n   the NSH\
    \ header may be used to indicate what OAM function is intended\n   or what toolset\
    \ is used.  Any other overlay encapsulations used at\n   the service layer must\
    \ have a similar way to indicate the intended\n   OAM function.\n"
- title: 7.  Candidate SFC OAM Tools
  contents:
  - "7.  Candidate SFC OAM Tools\n   As described in Section 5.1, there are different\
    \ toolsets available\n   to perform OAM functions at different layers.  This section\
    \ describe\n   the applicability of some of the available toolsets in the service\n\
    \   layer.\n"
- title: 7.1.  ICMP
  contents:
  - "7.1.  ICMP\n   [RFC0792] and [RFC4443] describe the use of ICMP in IPv4 and IPv6\n\
    \   networks respectively.  It explains how ICMP messages can be used to\n   test\
    \ the network reachability between different end points and\n   perform basic\
    \ network diagnostics.\n   ICMP could be leveraged for connectivity functions\
    \ (defined in\n   Section 4.1) to verify the availability of an SF or SFC.  The\n\
    \   initiator can generate an ICMP echo request message and control the\n   service-layer\
    \ encapsulation header to get the response from the\n   relevant node.  For example,\
    \ a classifier initiating OAM can generate\n   an ICMP echo request message, set\
    \ the TTL field in the NSH header\n   [RFC8300] to 63 to get the response from\
    \ the last SFF, and thereby\n   test the SFC availability.  Alternatively, the\
    \ initiator can set the\n   TTL to some other value to get the response from a\
    \ specific SF and\n   thereby partially test SFC availability, or the initiator\
    \ could send\n   OAM packets with sequentially incrementing TTL in the NSH to\
    \ trace\n   the SFP.\n   It could be observed that ICMP as currently defined may\
    \ not be able\n   to perform all required SFC OAM functions, but as explained\
    \ above, it\n   can be used for some of the connectivity functions.\n"
- title: 7.2.  BFD / Seamless BFD
  contents:
  - "7.2.  BFD / Seamless BFD\n   [RFC5880] defines the Bidirectional Forwarding Detection\
    \ (BFD)\n   mechanism for failure detection.  [RFC5881] and [RFC5884] define the\n\
    \   applicability of BFD in IPv4, IPv6, and MPLS networks.  [RFC7880]\n   defines\
    \ Seamless BFD (S-BFD), a simplified mechanism of using BFD.\n   [RFC7881] explains\
    \ its applicability in IPv4, IPv6, and MPLS\n   networks.\n   BFD or S-BFD could\
    \ be leveraged to perform the continuity function\n   for SF or SFC.  An initiator\
    \ could generate a BFD control packet and\n   set the \"Your Discriminator\" value\
    \ in the control packet to identify\n   the last SFF.  Upon receiving the control\
    \ packet, the last SFF in the\n   SFC will reply back with the relevant DIAG code.\
    \  The TTL field in\n   the NSH header could be used to perform a partial SFC\
    \ availability\n   check.  For example, the initiator can set the \"Your Discriminator\"\
    \n   value to identify the SF that is intended to be tested and set the\n   TTL\
    \ field in the NSH header in a way that it expires at the relevant\n   SF.  How\
    \ the initiator gets the Discriminator value to identify the\n   SF is outside\
    \ the scope of this document.\n"
- title: 7.3.  In Situ OAM
  contents:
  - "7.3.  In Situ OAM\n   [IOAM-NSH] defines how In situ OAM data fields [IPPM-IOAM-DATA]\
    \ are\n   transported using the NSH header.  [PROOF-OF-TRANSIT] defines a\n  \
    \ mechanism to perform proof of transit to securely verify if a packet\n   traversed\
    \ the relevant SFP or SFC.  While the mechanism is defined\n   inband (i.e., it\
    \ will be included in data packets), IOAM Option-\n   Types, such as IOAM Trace\
    \ Option-Types, can also be used to perform\n   other SFC OAM functions, such\
    \ as SFC tracing.\n   In situ OAM could be leveraged to perform SF availability\
    \ and SFC\n   availability or performance measurement.  For example, if SFC is\n\
    \   realized using NSH, the O bit in the NSH header could be set to\n   indicate\
    \ the OAM traffic, as defined in Section 4.2 of [IOAM-NSH].\n"
- title: 7.4.  SFC Traceroute
  contents:
  - "7.4.  SFC Traceroute\n   [SFC-TRACE] defines a protocol that checks for path\
    \ liveliness and\n   traces the service hops in any SFP.  Section 3 of [SFC-TRACE]\
    \ defines\n   the SFC trace packet format, while Sections 4 and 5 of [SFC-TRACE]\n\
    \   define the behavior of SF and SFF respectively.  While [SFC-TRACE]\n   has\
    \ expired, the proposal is implemented in Open Daylight and is\n   available.\n\
    \   An initiator can control the Service Index Limit (SIL) in an SFC\n   trace\
    \ packet to perform SF and SFC availability tests.\n"
- title: 8.  Manageability Considerations
  contents:
  - "8.  Manageability Considerations\n   This document does not define any new manageability\
    \ tools but\n   consolidates the manageability tool gap analysis for SF and SFC.\n\
    \   Table 2 below is not exhaustive.\n   |Layer      | Configuration | Orchestration\
    \ |Topology|Notification  |\n   |Underlay   | CLI, NETCONF  | CLI, NETCONF  |SNMP\
    \    |SNMP, Syslog, |\n   |network    |               |               |      \
    \  |NETCONF       |\n   |Overlay    | CLI, NETCONF  | CLI, NETCONF  |SNMP    |SNMP,\
    \ Syslog, |\n   |network    |               |               |        |NETCONF\
    \       |\n   |Classifier | CLI, NETCONF  | CLI, NETCONF  |None    |None     \
    \     |\n   |SF         | CLI, NETCONF  | CLI, NETCONF  |None    |None       \
    \   |\n   |SFC        | CLI, NETCONF  | CLI, NETCONF  |None    |None         \
    \ |\n                       Table 2: OAM Tool Gap Analysis\n   Configuration,\
    \ orchestration, and other manageability tasks of SF and\n   SFC could be performed\
    \ using CLI, NETCONF [RFC6241], etc.\n   While the NETCONF capabilities are readily\
    \ available, as depicted in\n   Table 2, the information and data models are needed\
    \ for\n   configuration, manageability, and orchestration for SFC.  With\n   virtualized\
    \ SF and SFC, manageability needs to be done\n   programmatically.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Any security considerations defined in [RFC7665]\
    \ and [RFC8300] are\n   applicable for this document.\n   The OAM information\
    \ from the service layer at different components\n   may collectively or independently\
    \ reveal sensitive information.  The\n   information may reveal the type of service\
    \ functions hosted in the\n   network, the classification rules and the associated\
    \ service chains,\n   specific service function paths, etc.  The sensitivity of\
    \ the\n   information from the SFC layer raises a need for careful security\n\
    \   considerations.\n   The mapping and the rules information at the classifier\
    \ component may\n   reveal the traffic rules and the traffic mapped to the SFC.\
    \  The SFC\n   information collected at an SFC component may reveal the SFs\n\
    \   associated within each chain, and this information together with\n   classifier\
    \ rules may be used to manipulate the header of synthetic\n   attack packets that\
    \ may be used to bypass the SFC and trigger any\n   internal attacks.\n   The\
    \ SF information at the SF component may be used by a malicious\n   user to trigger\
    \ a Denial of Service (DoS) attack by overloading any\n   specific SF using rogue\
    \ OAM traffic.\n   To address the above concerns, SFC and SF OAM should provide\n\
    \   mechanisms for mitigating:\n   *  misuse of the OAM channel for denial of\
    \ services,\n   *  leakage of OAM packets across SFC instances, and\n   *  leakage\
    \ of SFC information beyond the SFC domain.\n   The documents proposing the OAM\
    \ solution for SF components should\n   provide rate-limiting the OAM probes at\
    \ a frequency guided by the\n   implementation choice.  Rate-limiting may be applied\
    \ at the\n   classifier, SFF, or the SF.  The OAM initiator may not receive a\n\
    \   response for the probes that are rate-limited resulting in false\n   negatives,\
    \ and the implementation should be aware of this.  To\n   mitigate any attacks\
    \ that leverage OAM packets, future documents\n   proposing OAM solutions should\
    \ describe the use of any technique to\n   detect and mitigate anomalies and various\
    \ security attacks.\n   The documents proposing the OAM solution for any service-layer\n\
    \   components should consider some form of message filtering to control\n   the\
    \ OAM packets entering the administrative domain or prevent leaking\n   any internal\
    \ service-layer information outside the administrative\n   domain.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 11.  Informative References
  contents:
  - "11.  Informative References\n   [DOT1Q]    IEEE, \"IEEE Standard for Local and\
    \ metropolitan area\n              networks--Bridges and Bridged Networks\", IEEE\
    \ 802.1Q-2014,\n              DOI 10.1109/IEEESTD.2014.6991462, November 2014,\n\
    \              <https://doi.org/10.1109/IEEESTD.2014.6991462>.\n   [EFM]     \
    \ IEEE, \"IEEE Standard for Ethernet\", IEEE 802.3-2018,\n              DOI 10.1109/IEEESTD.2018.8457469,\
    \ June 2018,\n              <https://doi.org/10.1109/IEEESTD.2018.8457469>.\n\
    \   [IOAM-NSH] Brockners, F. and S. Bhandari, \"Network Service Header\n     \
    \         (NSH) Encapsulation for In-situ OAM (IOAM) Data\", Work in\n       \
    \       Progress, Internet-Draft, draft-ietf-sfc-ioam-nsh-04, 16\n           \
    \   June 2020,\n              <https://tools.ietf.org/html/draft-ietf-sfc-ioam-nsh-04>.\n\
    \   [IPPM-IOAM-DATA]\n              Brockners, F., Bhandari, S., and T. Mizrahi,\
    \ \"Data Fields\n              for In-situ OAM\", Work in Progress, Internet-Draft,\
    \ draft-\n              ietf-ippm-ioam-data-10, 13 July 2020,\n              <https://tools.ietf.org/html/draft-ietf-ippm-ioam-data-\n\
    \              10>.\n   [PROOF-OF-TRANSIT]\n              Brockners, F., Bhandari,\
    \ S., Mizrahi, T., Dara, S., and S.\n              Youell, \"Proof of Transit\"\
    , Work in Progress, Internet-\n              Draft, draft-ietf-sfc-proof-of-transit-06,\
    \ 16 June 2020,\n              <https://tools.ietf.org/html/draft-ietf-sfc-proof-of-\n\
    \              transit-06>.\n   [RFC0792]  Postel, J., \"Internet Control Message\
    \ Protocol\", STD 5,\n              RFC 792, DOI 10.17487/RFC0792, September 1981,\n\
    \              <https://www.rfc-editor.org/info/rfc792>.\n   [RFC2330]  Paxson,\
    \ V., Almes, G., Mahdavi, J., and M. Mathis,\n              \"Framework for IP\
    \ Performance Metrics\", RFC 2330,\n              DOI 10.17487/RFC2330, May 1998,\n\
    \              <https://www.rfc-editor.org/info/rfc2330>.\n   [RFC3393]  Demichelis,\
    \ C. and P. Chimento, \"IP Packet Delay Variation\n              Metric for IP\
    \ Performance Metrics (IPPM)\", RFC 3393,\n              DOI 10.17487/RFC3393,\
    \ November 2002,\n              <https://www.rfc-editor.org/info/rfc3393>.\n \
    \  [RFC4443]  Conta, A., Deering, S., and M. Gupta, Ed., \"Internet\n        \
    \      Control Message Protocol (ICMPv6) for the Internet\n              Protocol\
    \ Version 6 (IPv6) Specification\", STD 89,\n              RFC 4443, DOI 10.17487/RFC4443,\
    \ March 2006,\n              <https://www.rfc-editor.org/info/rfc4443>.\n   [RFC4656]\
    \  Shalunov, S., Teitelbaum, B., Karp, A., Boote, J., and M.\n              Zekauskas,\
    \ \"A One-way Active Measurement Protocol\n              (OWAMP)\", RFC 4656,\
    \ DOI 10.17487/RFC4656, September 2006,\n              <https://www.rfc-editor.org/info/rfc4656>.\n\
    \   [RFC5357]  Hedayat, K., Krzanowski, R., Morton, A., Yum, K., and J.\n    \
    \          Babiarz, \"A Two-Way Active Measurement Protocol (TWAMP)\",\n     \
    \         RFC 5357, DOI 10.17487/RFC5357, October 2008,\n              <https://www.rfc-editor.org/info/rfc5357>.\n\
    \   [RFC5880]  Katz, D. and D. Ward, \"Bidirectional Forwarding Detection\n  \
    \            (BFD)\", RFC 5880, DOI 10.17487/RFC5880, June 2010,\n           \
    \   <https://www.rfc-editor.org/info/rfc5880>.\n   [RFC5881]  Katz, D. and D.\
    \ Ward, \"Bidirectional Forwarding Detection\n              (BFD) for IPv4 and\
    \ IPv6 (Single Hop)\", RFC 5881,\n              DOI 10.17487/RFC5881, June 2010,\n\
    \              <https://www.rfc-editor.org/info/rfc5881>.\n   [RFC5884]  Aggarwal,\
    \ R., Kompella, K., Nadeau, T., and G. Swallow,\n              \"Bidirectional\
    \ Forwarding Detection (BFD) for MPLS Label\n              Switched Paths (LSPs)\"\
    , RFC 5884, DOI 10.17487/RFC5884,\n              June 2010, <https://www.rfc-editor.org/info/rfc5884>.\n\
    \   [RFC6241]  Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n  \
    \            and A. Bierman, Ed., \"Network Configuration Protocol\n         \
    \     (NETCONF)\", RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n\
    \   [RFC6291]  Andersson, L., van Helvoort, H., Bonica, R., Romascanu,\n     \
    \         D., and S. Mansfield, \"Guidelines for the Use of the \"OAM\"\n    \
    \          Acronym in the IETF\", BCP 161, RFC 6291,\n              DOI 10.17487/RFC6291,\
    \ June 2011,\n              <https://www.rfc-editor.org/info/rfc6291>.\n   [RFC6374]\
    \  Frost, D. and S. Bryant, \"Packet Loss and Delay\n              Measurement\
    \ for MPLS Networks\", RFC 6374,\n              DOI 10.17487/RFC6374, September\
    \ 2011,\n              <https://www.rfc-editor.org/info/rfc6374>.\n   [RFC7498]\
    \  Quinn, P., Ed. and T. Nadeau, Ed., \"Problem Statement for\n              Service\
    \ Function Chaining\", RFC 7498,\n              DOI 10.17487/RFC7498, April 2015,\n\
    \              <https://www.rfc-editor.org/info/rfc7498>.\n   [RFC7665]  Halpern,\
    \ J., Ed. and C. Pignataro, Ed., \"Service Function\n              Chaining (SFC)\
    \ Architecture\", RFC 7665,\n              DOI 10.17487/RFC7665, October 2015,\n\
    \              <https://www.rfc-editor.org/info/rfc7665>.\n   [RFC7679]  Almes,\
    \ G., Kalidindi, S., Zekauskas, M., and A. Morton,\n              Ed., \"A One-Way\
    \ Delay Metric for IP Performance Metrics\n              (IPPM)\", STD 81, RFC\
    \ 7679, DOI 10.17487/RFC7679, January\n              2016, <https://www.rfc-editor.org/info/rfc7679>.\n\
    \   [RFC7680]  Almes, G., Kalidindi, S., Zekauskas, M., and A. Morton,\n     \
    \         Ed., \"A One-Way Loss Metric for IP Performance Metrics\n          \
    \    (IPPM)\", STD 82, RFC 7680, DOI 10.17487/RFC7680, January\n             \
    \ 2016, <https://www.rfc-editor.org/info/rfc7680>.\n   [RFC7880]  Pignataro, C.,\
    \ Ward, D., Akiya, N., Bhatia, M., and S.\n              Pallagatti, \"Seamless\
    \ Bidirectional Forwarding Detection\n              (S-BFD)\", RFC 7880, DOI 10.17487/RFC7880,\
    \ July 2016,\n              <https://www.rfc-editor.org/info/rfc7880>.\n   [RFC7881]\
    \  Pignataro, C., Ward, D., and N. Akiya, \"Seamless\n              Bidirectional\
    \ Forwarding Detection (S-BFD) for IPv4, IPv6,\n              and MPLS\", RFC\
    \ 7881, DOI 10.17487/RFC7881, July 2016,\n              <https://www.rfc-editor.org/info/rfc7881>.\n\
    \   [RFC8029]  Kompella, K., Swallow, G., Pignataro, C., Ed., Kumar, N.,\n   \
    \           Aldrin, S., and M. Chen, \"Detecting Multiprotocol Label\n       \
    \       Switched (MPLS) Data-Plane Failures\", RFC 8029,\n              DOI 10.17487/RFC8029,\
    \ March 2017,\n              <https://www.rfc-editor.org/info/rfc8029>.\n   [RFC8300]\
    \  Quinn, P., Ed., Elzur, U., Ed., and C. Pignataro, Ed.,\n              \"Network\
    \ Service Header (NSH)\", RFC 8300,\n              DOI 10.17487/RFC8300, January\
    \ 2018,\n              <https://www.rfc-editor.org/info/rfc8300>.\n   [RFC8459]\
    \  Dolson, D., Homma, S., Lopez, D., and M. Boucadair,\n              \"Hierarchical\
    \ Service Function Chaining (hSFC)\", RFC 8459,\n              DOI 10.17487/RFC8459,\
    \ September 2018,\n              <https://www.rfc-editor.org/info/rfc8459>.\n\
    \   [SFC-TRACE]\n              Penno, R., Quinn, P., Pignataro, C., and D. Zhou,\n\
    \              \"Services Function Chaining Traceroute\", Work in Progress,\n\
    \              Internet-Draft, draft-penno-sfc-trace-03, 30 September\n      \
    \        2015,\n              <https://tools.ietf.org/html/draft-penno-sfc-trace-03>.\n\
    \   [Y.1731]   ITU-T, \"G.8013: Operations, administration and maintenance\n \
    \             (OAM) functions and mechanisms for Ethernet-based\n            \
    \  networks\", August 2015,\n              <https://www.itu.int/rec/T-REC-G.8013-201508-I/en>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank Mohamed Boucadair, Adrian Farrel,\
    \ Greg Mirsky,\n   Tal Mizrahi, Martin Vigoureux, Tirumaleswar Reddy, Carlos Bernados,\n\
    \   Martin Duke, Barry Leiba, \xC9ric Vyncke, Roman Danyliw, Erik Kline,\n   Benjamin\
    \ Kaduk, Robert Wilton, Frank Brockner, Alvaro Retana, Murray\n   Kucherawy, and\
    \ Alissa Cooper for their review and comments.\n"
- title: Contributors
  contents:
  - "Contributors\n   Nobo Akiya\n   Ericsson\n   Email: nobo.akiya.dev@gmail.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Sam K. Aldrin\n   Google\n   Email: aldrin.ietf@gmail.com\n\
    \   Carlos Pignataro (editor)\n   Cisco Systems, Inc.\n   Email: cpignata@cisco.com\n\
    \   Nagendra Kumar (editor)\n   Cisco Systems, Inc.\n   Email: naikumar@cisco.com\n\
    \   Ram Krishnan\n   VMware\n   Email: ramkri123@gmail.com\n   Anoop Ghanwani\n"
