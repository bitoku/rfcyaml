- title: __initial_text__
  contents:
  - '                Tracing Requirements for Generic Tunnels

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies requirements for a generic route-tracing\n\
    \   application.  It also specifies requirements for a protocol that will\n  \
    \ support that application.  Network operators will use the generic\n   route-tracing\
    \ application to verify proper operation of the IP\n   forwarding plane.  They\
    \ will also use the application to discover\n   details regarding tunnels that\
    \ support IP forwarding.\n   The generic route-tracing application, specified\
    \ herein, supports a\n   superset of the functionality that \"traceroute\" currently\
    \ offers.\n   Like traceroute, the generic route-tracing application can discover\n\
    \   the forwarding path between two interfaces that are contained by an\n   IP\
    \ network.  Unlike traceroute, this application can reveal details\n   regarding\
    \ tunnels that support the IP forwarding path.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IP networks utilize several tunneling technologies.  Although\
    \ these\n   tunneling technologies provide operators with many useful features,\n\
    \   they also present management challenges.  Network operators require a\n  \
    \ generic route-tracing application that they can use to verify the\n   correct\
    \ operation of the IP forwarding plane.  The generic\n   route-tracing application\
    \ must be capable of detecting tunnels and\n   revealing tunnel details.  The\
    \ application also must be useful in\n   diagnosing tunnel faults.\n   Implementors\
    \ also require a new protocol that will support the\n   generic-route tracing\
    \ application.  This document specifies\n   requirements for that protocol.  It\
    \ specifies requirements,\n   primarily, by detailing the desired capabilities\
    \ of the generic\n   route-tracing application.  A particular version of generic\n\
    \   route-tracing application may implement some subset of the desired\n   capabilities.\
    \  It may also implement a superset of those\n   capabilities.  However, protocol\
    \ designers are not required to\n   consider the additional capabilities when\
    \ designing the new protocol.\n   This document also specifies a few protocol\
    \ requirements, stated as\n   such.  These requirements are driven by desired\
    \ characteristics of\n   the generic route-tracing application.  Whenever a protocol\n\
    \   requirement is stated, it is mapped to the desired characteristic of\n   the\
    \ route-tracing application.\n"
- title: 2.  Review of Existing Functionality
  contents:
  - "2.  Review of Existing Functionality\n   Currently, network operators use \"\
    traceroute\" to trace through the\n   forwarding path of an IP network.  Section\
    \ 3.4 of [RFC-2151] provides\n   a thorough description of traceroute.  Although\
    \ traceroute is very\n   reliable and very widely deployed, it is deficient with\
    \ regard to\n   tunnel tracing.\n   Depending upon tunnel type, traceroute may\
    \ display an entire tunnel\n   as a single IP hop, or it may display the tunnel\
    \ as a collection of\n   IP hops, without indicating that they are part of a tunnel.\n\
    \   For example, assume that engineers deploy an IP tunnel in an IP\n   network.\
    \  Assume also that they configure the tunnel so that the\n   ingress router does\
    \ not copy the TTL value from the inner IP header\n   to outer IP header.  Instead,\
    \ the ingress router always sets the\n   outer TTL value to its maximum permitted\
    \ value.  When engineers trace\n   through the network, traceroute will always\
    \ display the tunnel as a\n   single IP hop, hiding all components except the\
    \ egress interface.\n   Now assume that engineers deploy an MPLS LSP in an IP\
    \ network.\n   Assume also that engineers configure the MPLS LSP so that the ingress\n\
    \   router propagates the TTL value from the IP header to the MPLS\n   header.\
    \  When engineers trace through the network, traceroute will\n   display the LSP\
    \ as a series of IP hops, without indicating that they\n   are part of a tunnel.\n"
- title: 3.  Application Requirements
  contents:
  - "3.  Application Requirements\n   Network operators require a new route-tracing\
    \ application.  The new\n   application must support all functionality that traceroute\
    \ currently\n   offers.  It also must provide enhanced tunnel tracing capabilities.\n\
    \   The following list provides specific requirements for the new\n   route-tracing\
    \ application:\n      1) Support the notion of a security token as part of the\
    \ tunnel\n      trace request.  The security token identifies the tracer's\n \
    \     privileges in tracing tunnels.  Network elements will use this\n      security\
    \ token to determine whether or not to return the requested\n      information\
    \ to the tracer.  In particular, appropriate privileges\n      are required for\
    \ items (2), (3), (6), (8), (10), (13), and (14).\n      Justification: Operators\
    \ may need to discover network forwarding\n      details, while concealing those\
    \ details from unauthorized parties.\n      2) Support in-line traces.  An in-line\
    \ trace reveals the path\n      between the host upon which the route-tracing\
    \ application executes\n      and any interface in an IP network.\n      Justification:\
    \ Operators need to discover how the network would\n      forward a datagram between\
    \ any two IP interfaces.\n      3) Support third-party traces.  A third-party\
    \ trace reveals the\n      path between any two points in an IP network.  The\
    \ application\n      that initiates a third-party trace need not execute upon\
    \ a host or\n      router that is part of the traced path.  Unlike existing solutions\n\
    \      [RFC-2151] [RFC-2925], the application will not rely upon IP\n      options\
    \ or require access to the SNMP agent in order to support\n      third-party traces.\n\
    \      Justification: Operators need to discover how the network would\n     \
    \ forward a datagram between any two IP interfaces.\n      4) Support partial\
    \ traces through broken paths or tunnels.\n      Justification: Operators need\
    \ to identify the root cause of\n      forwarding plane failures.\n      5) When\
    \ tracing through a tunnel, either as part of an in-line\n      trace or a third-party\
    \ trace, display the tunnel either as a\n      single IP hop or in detail.  The\
    \ user's request determines how the\n      application displays tunnels, subject\
    \ to the user having\n      permission to do this.\n      Justification: As they\
    \ discover IP forwarding details, operators\n      may need to reveal or mask\
    \ tunneling details.\n      6) When displaying a tunnel in detail, include the\
    \ tunnel type\n      (e.g., GRE, MPLS), the tunnel name (if applicable), the tunnel\n\
    \      identifier (if applicable) and tunnel endpoint addresses.  Also,\n    \
    \  include tunnel components and round trip delay across each\n      component.\n\
    \      Justification: As they discover IP forwarding details, operators\n    \
    \  may need to reveal tunneling details.\n      7) Support the following tunneling\
    \ technologies: GRE, MPLS, IPSEC,\n      GMPLS, IP-in-IP, L2TP.  Be easily extensible\
    \ to support new tunnel\n      technologies.\n      Justification: Operators will\
    \ use the generic route-tracing\n      application to discover how an IP network\
    \ forwards datagrams.  As\n      many tunnel types may support the IP network,\
    \ the generic\n      route-tracing application must detect and reveal details\n\
    \      concerning multiple tunnel types.\n      8) Trace through nested, heterogeneous\
    \ tunnels (e.g., IP-in-IP\n      over MPLS).\n      Justification: Operators will\
    \ use the generic route-tracing\n      application to discover how an IP network\
    \ forwards datagrams.  As\n      nested, heterogeneous tunnels may support the\
    \ IP network, the\n      generic route-tracing application must detect and reveal\
    \ details\n      concerning nested, heterogeneous tunnels.\n      9) At the users\
    \ request, trace through the forwarding plane, the\n      control plane or both.\n\
    \      Justification: Operators need to identify the root cause of\n      forwarding\
    \ plane failures.  Control plane information is sometimes\n      useful in determining\
    \ the cause of forwarding plane failure.\n      10) Support control plane tracing\
    \ for all tunnel types.  When\n      tracing through the control plane, the hop\
    \ ingress device reports\n      hop details.  The hop ingress device is the device\
    \ that originates\n      the hop.\n      Justification: Control plane information\
    \ is available regarding\n      all tunnel types.\n      11) Support tracing through\
    \ forwarding plane for all tunnel types\n      that implement TTL decrement (or\
    \ some similar mechanism).  When\n      tracing through the forwarding plane,\
    \ the hop egress device\n      reports hop details.  The hop egress device is\
    \ the device that\n      terminates the hop.\n      Justification: Forwarding\
    \ plane information may not be available\n      for tunnels that do not support\
    \ TTL decrement.\n      12) Support tracing through the forwarding plane for all\
    \ tunnel\n      types that implement TTL decrement, regardless of whether the\n\
    \      tunnel engages in TTL propagation.  (That is, support tunnel\n      tracing\
    \ regardless of whether the TTL value is copied from an\n      inner header to\
    \ an outer header at tunnel ingress.)\n      Justification: Forwarding plane information\
    \ is always available,\n      regardless of whether the tunnel engages in TTL\
    \ propagation.\n      13) When tracing through the control plane, display the\
    \ MTU\n      associated with each interface that forwards datagrams through the\n\
    \      traced path.\n      Justification: MTU information is sometimes useful\
    \ in identifying\n      the root cause of forwarding and control plane failures.\n\
    \      14) When tracing through the forwarding plane, display the MTU\n      associated\
    \ with each interface that receives datagrams along the\n      traced path.\n\
    \      Justification: MTU information is sometimes useful in identifying\n   \
    \   the root cause of forwarding and control plane failures.\n      15) Support\
    \ partial traces through paths containing devices that\n      do not provide protocol\
    \ support for generic route tracing.  When\n      the application encounters such\
    \ a device, it should inform the\n      user and attempt to discover details regarding\
    \ the next interface\n      downstream.\n      Justification: The application\
    \ must provide useful information\n      even if the supporting protocol is not\
    \ universally deployed.\n"
- title: 4.  Protocol Requirements
  contents:
  - "4.  Protocol Requirements\n   Implementors require a new protocol that supports\
    \ the generic\n   route-tracing application.  This protocol reveals the path between\n\
    \   two points in an IP network.  When access policy permits, the\n   protocol\
    \ also reveals tunnel details.\n"
- title: 4.1.  Information Requirements
  contents:
  - "4.1.  Information Requirements\n   The protocol consists of probes and probe\
    \ responses.  Each probe\n   elicits exactly one response.  Each response represents\
    \ a hop that\n   contributes to the path between two interfaces.  A hop can be\
    \ either\n   a top-level IP hop or lower-level hop that is contained by a tunnel.\n\
    \   Justification: Because the generic route-tracing application must\n   trace\
    \ through broken paths, the required protocol must use a separate\n   response\
    \ message to deliver details regarding each hop.  The protocol\n   must use a\
    \ separate probe to elicit each response because the\n   alternative approach,\
    \ using the single probe with the IP Router Alert\n   Option, is unacceptable.\
    \  Many networks forward datagrams that\n   specify IP options differently than\
    \ they would forward datagrams that\n   do not specify IP options.  Therefore,\
    \ the introduction of IP options\n   would cause the application to trace a forwarding\
    \ path other than the\n   path that its user intended to trace.\n"
- title: 4.2.  Transport Layer Requirements
  contents:
  - "4.2.  Transport Layer Requirements\n   UDP should carry all protocol messages\
    \ to their destinations.  Other\n   transport mechanisms may be considered when\
    \ protocol details are\n   specified.\n   Justification: Because the probe/response\
    \ scheme described above is\n   stateless, a stateless transport is required.\
    \  Candidate transports\n   included UDP over IP, IP and ICMP.  ICMP was disqualified\
    \ because\n   carrying MPLS information in an ICMP datagram would constitute a\n\
    \   layer violation.  IP was disqualified in order to conserve protocol\n   identifiers.\n"
- title: 4.3.  Stateless Protocol
  contents:
  - "4.3.  Stateless Protocol\n   The protocol must be stateless.  That is, nodes\
    \ should not have to\n   maintain state between successive traceroute messages.\n\
    \   Justification: Statelessness is required to support scaling and to\n   prevent\
    \ denial of service attacks.\n"
- title: 4.4.  Routing Requirements
  contents:
  - "4.4.  Routing Requirements\n   The device that hosts the route-tracing application\
    \ must maintain an\n   IP route to the ingress of the traced path.  It must also\
    \ maintain an\n   IP route to the ingress of each tunnel for which it is requesting\n\
    \   tunnel details.  The device that hosts the tunnel tracing application\n  \
    \ need not maintain a route to any other device that supports the\n   traced path.\n\
    \   All of the devices to which the route-tracing application must\n   maintain\
    \ a route must maintain a route back to the route-tracing\n   application.\n \
    \  In order for the protocol to provide tunnel details, all devices\n   contained\
    \ by a tunnel must maintain an IP route to the tunnel\n   ingress.\n   Justification:\
    \ The protocol must be sufficiently robust to operate\n   when tunnel interior\
    \ devices do not maintain a route back to the\n   device that hosts the route\
    \ tracing application.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   A configurable access control policy determines\
    \ the degree to which\n   features described herein are delivered.  The access\
    \ control policy\n   requires user identification and authorization.\n   The new\
    \ protocol must not introduce security holes nor consume\n   excessive resources\
    \ (e.g., CPU, bandwidth).  It also must not be\n   exploitable by those launching\
    \ DoS attacks or replaying messages.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [RFC-2151]  Kessler, G. and S. Shepard, \"A Primer\
    \ On Internet and\n               TCP/IP Tools and Utilities\", FYI 30, RFC 2151,\
    \ June 1997.\n   [RFC-2925]  White, K., \"Definitions of Managed Objects for Remote\n\
    \               Ping, Traceroute, and Lookup Operations\", RFC 2925,\n       \
    \        September 2000.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Thanks to Randy Bush and Steve Bellovin for their comments.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Ronald P. Bonica\n   MCI\n   22001 Loudoun County\
    \ Pkwy\n   Ashburn, Virginia, 20147\n   EMail: ronald.p.bonica@mci.com\n   Kireeti\
    \ Kompella\n   Juniper Networks, Inc.\n   1194 N. Mathilda Ave.\n   Sunnyvale,\
    \ California 94089\n   EMail: kireeti@juniper.net\n   David Meyer\n   EMail: dmm@maoz.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
