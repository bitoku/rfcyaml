- title: __initial_text__
  contents:
  - '                   Architectural Implications of NAT

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   In light of the growing interest in, and deployment of network\n\
    \   address translation (NAT) RFC-1631, this paper will discuss some of\n   the\
    \ architectural implications and guidelines for implementations. It\n   is assumed\
    \ the reader is familiar with the address translation\n   concepts presented in\
    \ RFC-1631.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction...................................................\
    \ 2\n   2.  Terminology.................................................... 4\n\
    \   3.  Scope.......................................................... 6\n  \
    \ 4.  End-to-End Model............................................... 7\n   5.\
    \  Advantages of NATs............................................. 8\n   6.  Problems\
    \ with NATs............................................ 10\n   7.  Illustrations.................................................\
    \ 13\n    7.1 Single point of failure...................................... 13\n\
    \    7.2.  ALG complexity............................................. 14\n  \
    \  7.3. TCP state violations........................................ 15\n    7.4.\
    \  Symmetric state management................................. 16\n    7.5.  Need\
    \ for a globally unique FQDN when advertising public\n          services...................................................\
    \ 18\n    7.6.  L2TP tunnels increase frequency of address collisions...... 19\n\
    \    7.7.  Centralized data collection system report correlation...... 20\n  \
    \ 8.  IPv6.......................................................... 21\n   9.\
    \  Security Considerations....................................... 22\n   10. \
    \ Deployment Guidelines........................................ 23\n   11.  Summary......................................................\
    \ 24\n   12.  References................................................... 27\n\
    \   13.  Acknowledgments.............................................. 28\n  \
    \ 14.  Author's Address............................................. 28\n   15.\
    \  Full Copyright Statement..................................... 29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Published in May 1994, written by K. Egevang and P. Francis,\
    \ RFC-1631\n   [2] defined NAT as one means to ease the growth rate of IPv4 address\n\
    \   use.  But the authors were worried about the impact of this\n   technology.\
    \  Several places in the document they pointed out the need\n   to experiment\
    \ and see what applications may be adversely affected by\n   NAT's header manipulations,\
    \ even before there was any significant\n   operational experience.  This is further\
    \ evidenced in a quote from\n   the conclusions: 'NAT has several negative characteristics\
    \ that make\n   it inappropriate as a long term solution, and may make it\n  \
    \ inappropriate even as a short term solution.'\n   Now, six years later and in\
    \ spite of the prediction, the use of NATs\n   is becoming widespread in the Internet.\
    \  Some people are proclaiming\n   NAT as both the short and long term solution\
    \ to some of the\n   Internet's address availability issues and questioning the\
    \ need to\n   continue the development of IPv6.  The claim is sometimes made that\n\
    \   NAT 'just works' with no serious effects except on a few legacy\n   applications.\
    \  At the same time others see a myriad of difficulties\n   caused by the increasing\
    \ use of NAT.\n   The arguments pro & con frequently take on religious tones,\
    \ with each\n   side passionate about its position.\n   -  Proponents bring enthusiasm\
    \ and frequently cite the most popular\n      applications of Mail & Web services\
    \ as shining examples of NAT\n      transparency.  They will also point out that\
    \ NAT is the feature\n      that finally breaks the semantic overload of the IP\
    \ address as\n      both a locator and the global endpoint identifier (EID).\n\
    \   -  An opposing view of NAT is that of a malicious technology, a weed\n   \
    \   which is destined to choke out continued Internet development.\n      While\
    \ recognizing there are perceived address shortages, the\n      opponents of NAT\
    \ view it as operationally inadequate at best,\n      bordering on a sham as an\
    \ Internet access solution. Reality lies\n      somewhere in between these extreme\
    \ viewpoints.\n   In any case it is clear NAT affects the transparency of end-to-end\n\
    \   connectivity for transports relying on consistency of the IP header,\n   and\
    \ for protocols which carry that address information in places\n   other than\
    \ the IP header.  Using a patchwork of consistently\n   configured application\
    \ specific gateways (ALG's), endpoints can work\n   around some of the operational\
    \ challenges of NAT.  These operational\n   challenges vary based on a number\
    \ of factors including network and\n   application topologies and the specific\
    \ applications in use.  It can\n   be relatively easy to deal with the simplest\
    \ case, with traffic\n   between two endpoints running over an intervening network\
    \ with no\n   parallel redundant NAT devices.  But things can quickly get quite\n\
    \   complicated when there are parallel redundant NAT devices, or where\n   there\
    \ are more distributed and multi-point applications like multi-\n   party document\
    \ sharing.  The complexity of coordinating the updates\n   necessary to work around\
    \ NAT grows geometrically with the number of\n   endpoints.  In a large environment,\
    \ this may require concerted effort\n   to simultaneously update all endpoints\
    \ of a given application or\n   service.\n   The architectural intent of NAT is\
    \ to divide the Internet into\n   independent address administrations, (also see\
    \ \"address realms\",\n   RFC-2663 [3]) specifically facilitating casual use of\
    \ private address\n   assignments RFC-1918 [4].  As noted by Carpenter, et al\
    \ RFC-2101 [5],\n   once private use addresses were deployed in the network, addresses\n\
    \   were guaranteed to be ambiguous.  For example, when simple NATs are\n   inserted\
    \ into the network, the process of resolving names to or from\n   addresses becomes\
    \ dependent on where the question was asked.  The\n   result of this division\
    \ is to enforce a client/server architecture\n   (vs. peer/peer) where the servers\
    \ need to exist in the public address\n   realm.\n   A significant factor in the\
    \ success of the Internet is the\n   flexibility derived from a few basic tenets.\
    \  Foremost is the End-\n   to-End principle (discussed further below), which\
    \ notes that certain\n   functions can only be performed in the endpoints, thus\
    \ they are in\n   control of the communication, and the network should be a simple\n\
    \   datagram service that moves bits between these points.  Restated, the\n  \
    \ endpoint applications are often the only place capable of correctly\n   managing\
    \ the data stream.  Removing this concern from the lower layer\n   packet-forwarding\
    \ devices streamlines the forwarding process,\n   contributing to system-wide\
    \ efficiency.\n   Another advantage is that the network does not maintain per\n\
    \   connection state information.  This allows fast rerouting around\n   failures\
    \ through alternate paths and to better scaling of the overall\n   network.  Lack\
    \ of state also removes any requirement for the network\n   nodes to notify each\
    \ other as endpoint connections are formed or\n   dropped.  Furthermore, the endpoints\
    \ are not, and need not be, aware\n   of any network components other than the\
    \ destination, first hop\n   router(s), and an optional name resolution service.\
    \  Packet integrity\n   is preserved through the network, and transport checksums\
    \ and any\n   address-dependent security functions are valid end-to-end.\n   NAT\
    \ devices (particularly the NAPT variety) undermine most of these,\n   basic advantages\
    \ of the end-to-end model, reducing overall\n   flexibility, while often increasing\
    \ operational complexity and\n   impeding diagnostic capabilities.  NAT variants\
    \ such as RSIP [6] have\n   recently been proposed to address some of the end-to-end\
    \ concerns.\n   While these proposals may be effective at providing the private\
    \ node\n   with a public address (if ports are available), they do not eliminate\n\
    \   several issues like network state management, upper layer constraints\n  \
    \ like TCP_TIME_WAIT state, or well-known-port sharing. Their port\n   multiplexing\
    \ variants also have the same DNS limitations as NAPT, and\n   each host requires\
    \ significant stack modifications to enable the\n   technology (see below).\n\
    \   It must be noted that firewalls also break the end-to-end model and\n   raise\
    \ several of the same issues that NAT devises do, while adding a\n   few of their\
    \ own.  But one operational advantage with firewalls is\n   that they are generally\
    \ installed into networks with the explicit\n   intent to interfere with traffic\
    \ flow, so the issues are more likely\n   to be understood or at least looked\
    \ at if mysterious problems arise.\n   The same issues with NAT devices can sometimes\
    \ be overlooked since\n   NAT devices are frequently presented as transparent\
    \ to applications.\n   One thing that should be clearly stated up front is, that\
    \ attempts to\n   use a variant of NAT as a simple router replacement may create\n\
    \   several significant issues that should be addressed before\n   deployment.\
    \  The goal of this document is to discuss these with the\n   intent to raise\
    \ awareness.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Recognizing that many of these terms are defined in detail\
    \ in RFC\n   2663 [3], the following are summaries as used in this document.\n\
    \   NAT - Network Address Translation in simple form is a method by which\n  \
    \ IP addresses are mapped from one address administration to another.\n   The\
    \ NAT function is unaware of the applications traversing it, as it\n   only looks\
    \ at the IP headers.\n   ALG - Application Layer Gateway: inserted between application\
    \ peers\n   to simulate a direct connection when some intervening protocol or\n\
    \   device prevents direct access.  It terminates the transport protocol,\n  \
    \ and may modify the data stream before forwarding.\n   NAT/ALG - combines ALG\
    \ functions with simple NAT.  Generally more\n   useful than pure NAT, because\
    \ it embeds components for specific\n   applications that would not work through\
    \ a pure NAT.\n   DNS/ALG -  a special case of the NAT/ALG, where an ALG for the\
    \ DNS\n   service interacts with the NAT component to modify the contents of a\n\
    \   DNS response.\n   Firewall - access control point that may be a special case\
    \ of an ALG,\n   or packet filter.\n   Proxy - A relay service designed into a\
    \ protocol, rather than\n   arbitrarily inserted.  Unlike an ALG, the application\
    \ on at least one\n   end must be aware of the proxy.\n   Static NAT - provides\
    \ stable one-to-one mapping between address\n   spaces.\n   Dynamic NAT - provides\
    \ dynamic mapping between address spaces\n   normally used with a relatively large\
    \ number of addresses on one side\n   (private space) to a few addresses on the\
    \ other (public space).\n   NAPT - Network Address Port Translation accomplishes\
    \ translation by\n   multiplexing transport level identifiers of multiple addresses\
    \ from\n   one side, simultaneously into the transport identifiers of a single\n\
    \   address on the other.  See 4.1.2 of RFC-2663.  This permits multiple\n   endpoints\
    \ to share and appear as a single IP address.\n   RSIP - Realm Specific IP allows\
    \ endpoints to acquire and use the\n   public address and port number at the source.\
    \  It includes mechanisms\n   for the private node to request multiple resources\
    \ at once.  RSIP\n   clients must be aware of the address administration boundaries,\
    \ which\n   specific administrative area its peer resides in for each\n   application,\
    \ and the topology for reaching the peer.  To complete a\n   connection, the private\
    \ node client requests one or more addresses\n   and/or ports from the appropriate\
    \ RSIP server, then initiates a\n   connection via that RSIP server using the\
    \ acquired public resources.\n   Hosts must be updated with specific RSIP software\
    \ to support the\n   tunneling functions.\n   VPN - For purposes of this document,\
    \ Virtual Private Networks\n   technically treat an IP infrastructure as a multiplexing\
    \ substrate,\n   allowing the endpoints to build virtual transit pathways, over\
    \ which\n   they run another instance of IP.  Frequently the 2nd instance of IP\n\
    \   uses a different set of IP addresses.\n   AH - IP Authentication Header, RFC-2401\
    \ [7], which provides data\n   integrity, data origin authentication, and an optional\
    \ anti-replay\n   service.\n   ESP - Encapsulating Security Payload protocol,\
    \ RFC 2401, may provide\n   data confidentiality (encryption), and limited traffic\
    \ flow\n   confidentiality.  It also may provide data integrity, data origin\n\
    \   authentication, and an anti-replay service.\n   Address administration - coordinator\
    \ of an address pool assigned to a\n   collection of routers and end systems.\n\
    \   Addressing realm -  a collection of routers and end systems\n   exchanging\
    \ locally unique location knowledge.  (Further defined in\n   RFC-2663 NAT Terminology.)\
    \  NAT is used a means to distribute address\n   allocation authority and provide\
    \ a mechanism to map addresses from\n   one address administration into those\
    \ of another administration.\n"
- title: 3.  Scope
  contents:
  - "3.  Scope\n   In discussing the architectural impact of NATs on the Internet,\
    \ the\n   first task is defining the scope of the Internet.  The most basic\n\
    \   definition is; a concatenation of networks built using IETF defined\n   technologies.\
    \  This simple description does not distinguish between\n   the public network\
    \ known as the Internet, and the private networks\n   built using the same technologies\
    \ (including those connected via\n   NAT).  Rekhter, et al in RFC-1918 defined\
    \ hosts as public when they\n   need network layer access outside the enterprise,\
    \ using a globally\n   unambiguous address.  Those that need limited or no access\
    \ are\n   defined as private.  Another way to view this is in terms of the\n \
    \  transparency of the connection between any given node and the rest of\n   the\
    \ Internet.\n   The ultimate resolution of public or private is found in the intent\n\
    \   of the network in question.  Generally, networks that do not intend\n   to\
    \ be part of the greater Internet will use some screening technology\n   to insert\
    \ a barrier.  Historically barrier devices between the public\n   and private\
    \ networks were known as Firewalls or Application Gateways,\n   and were managed\
    \ to allow approved traffic while blocking everything\n   else.  Increasingly,\
    \ part of the screening technology is a NAT, which\n   manages the network locator\
    \ between the public and private-use\n   address spaces, and then, using ALGs\
    \ adds support for protocols that\n   are incompatible with NAT.  (Use of NAT\
    \ within a private network is\n   possible, and is only addressed here in the\
    \ context that some\n   component of the private network is used as a common transit\
    \ service\n   between the NAT attached stubs.)\n   RFC-1631 limited the scope\
    \ of NAT discussions to stub appendages of a\n   public Internet, that is, networks\
    \ with a single connection to the\n   rest of the Internet.  The use of NAT in\
    \ situations in which a\n   network has multiple connections to the rest of the\
    \ Internet is\n   significantly more complex than when there is only a single\n\
    \   connection since the NATs have to be coordinated to ensure that they\n   have\
    \ a consistent understanding of address mapping for each\n   individual device.\n"
- title: 4.  End-to-End Model
  contents:
  - "4.  End-to-End Model\n   The concept of the End-to-End model is reviewed by Carpenter\
    \ in\n   Internet Transparency [8].  One of the key points is \"state should be\n\
    \   maintained only in the endpoints, in such a way that the state can\n   only\
    \ be destroyed when the endpoint itself breaks\"; this is termed\n   \"fate-sharing\"\
    .  The goal behind fate-sharing is to ensure\n   robustness.  As networks grow\
    \ in size, likelihood of component\n   failures affecting a connection becomes\
    \ increasingly frequent. If\n   failures lead to loss of communication, because\
    \ key state is lost,\n   then the network becomes increasingly brittle, and its\
    \ utility\n   degrades.  However, if an endpoint itself fails, then there is no\n\
    \   hope of subsequent communication anyway.  Therefore the End-to-End\n   model\
    \ argues that as much as possible, only the endpoints should hold\n   critical\
    \ state.\n   For NATs, this aspect of the End-to-End model translates into the\
    \ NAT\n   becoming a critical infrastructure element:  if it fails, all\n   communication\
    \ through it fails, and, unless great care is taken to\n   assure consistent,\
    \ stable storage of its state, even when it recovers\n   the communication that\
    \ was passing through it will still fail\n   (because the NAT no longer translates\
    \ it using the same mappings).\n   Note that this latter type of failure is more\
    \ severe than the failure\n   of a router; when a router recovers, any communication\
    \ that it had\n   been forwarding previous can continue to be successfully forwarded\n\
    \   through it.\n   There are other important facets to the End-to-End model:\n\
    \   -  when state is held in the interior of the network, then traffic\n     \
    \ dependent on that state cannot be routed around failures unless\n      somehow\
    \ the state is replicated to the fail-over points, which can\n      be very difficult\
    \ to do in a consistent yet efficient and timely\n      fashion.\n   -  a key\
    \ principle for scaling networks to large size is to push\n      state-holding\
    \ out to the edges of the network.  If state is held\n      by elements in the\
    \ core of the network, then as the network grows\n      the amount of state the\
    \ elements must holds likewise grows.  The\n      capacities of the elements can\
    \ become severe chokepoints and the\n      number of connections affected by a\
    \ failure also grows.\n   -  if security state must be held inside the network\
    \ (see the\n      discussion below), then the possible trust models the network\
    \ can\n      support become restricted.\n   A network for which endpoints need\
    \ not trust network service\n   providers has a great deal more security flexibility\
    \ than one which\n   does.  (Picture, for example, a business traveler connecting\
    \ from\n   their hotel room back to their home office: should they have to trust\n\
    \   the hotel's networking staff with their security keys?, or the staff\n   of\
    \ the ISP that supplies the hotel with its networking service?  How\n   about\
    \ when the traveler connects over a wireless connection at an\n   airport?)\n\
    \   Related to this, RFC-2101 notes:\n     Since IP Security authentication headers\
    \ assume that the addresses\n     in the network header are preserved end-to-end,\
    \ it is not clear\n     how one could support IP Security-based authentication\
    \ between a\n     pair of hosts communicating through either an ALG or a NAT.\n\
    \   In addition, there are distributed applications that assume that IP\n   addresses\
    \ are globally scoped, globally routable, and all hosts and\n   applications have\
    \ the same view of those addresses.  Indeed, a\n   standard technique for such\
    \ applications to manage their additional\n   control and data connections is\
    \ for one host to send to another the\n   address and port that the second host\
    \ should connect to.  NATs break\n   these applications.  Similarly, there are\
    \ other applications that\n   assume that all upper layer ports from a given IP\
    \ address map to the\n   same endpoint, and port multiplexing technologies like\
    \ NAPT and RSIP\n   break these.  For example, a web server may desire to associate\
    \ a\n   connection to port 80 with one to port 443, but due to the possible\n\
    \   presence of a NATPT, the same IP address no longer ensures the same\n   host.\n\
    \   Limiting such applications is not a minor issue: much of the success\n   of\
    \ the Internet today is due to the ease with which new applications\n   can run\
    \ on endpoints without first requiring upgrades to\n   infrastructure elements.\
    \  If new applications must have the NATs\n   upgraded in order to achieve widespread\
    \ deployment, then rapid\n   deployment is hindered, and the pace of innovation\
    \ slowed.\n"
- title: 5.  Advantages of NATs
  contents:
  - "5.  Advantages of NATs\n   A quick look at the popularity of NAT as a technology\
    \ shows that it\n   tackles several real world problems when used at the border\
    \ of a stub\n   domain.\n   -  By masking the address changes that take place,\
    \ from either dial-\n      access or provider changes, minimizes impact on the\
    \ local network\n      by avoiding renumbering.\n   -  Globally routable addresses\
    \ can be reused for intermittent access\n      customers.  This pushes the demand\
    \ for addresses towards the\n      number of active nodes rather than the total\
    \ number of nodes.\n   -  There is a potential that ISP provided and managed NATs\
    \ would\n      lower support burden since there could be a consistent, simple\n\
    \      device with a known configuration at the customer end of an access\n  \
    \    interface.\n   -  Breaking the Internet into a collection of address authorities\n\
    \      limits the need for continual justification of allocations allows\n   \
    \   network managers to avoid the use of more advanced routing\n      techniques\
    \ such as variable length subnets.\n   -  Changes in the hosts may not be necessary\
    \ for applications that\n      don't rely on the integrity of the packet header,\
    \ or carry IP\n      addresses in the payload.\n   -  Like packet filtering Firewalls,\
    \ NAPT, & RSIP block inbound\n      connections to all ports until they are administratively\
    \ mapped.\n   Taken together these explain some of the strong motivations for\n\
    \   moving quickly with NAT deployment.  Traditional NAT [2] provides a\n   relatively\
    \ simple function that is easily understood.\n   Removing hosts that are not currently\
    \ active lowers address demands\n   on the public Internet.  In cases where providers\
    \ would otherwise end\n   up with address allocations that could not be aggregated,\
    \ this\n   improves the load on the routing system as well as lengthens the\n\
    \   lifetime of the IPv4 address space.  While reclaiming idle addresses\n   is\
    \ a natural byproduct of the existing dynamic allocation, dial-\n   access devices,\
    \ in the dedicated connection case this service could\n   be provided through\
    \ a NAT.  In the case of a NAPT, the aggregation\n   potential is even greater\
    \ as multiple end systems share a single\n   public address.\n   By reducing the\
    \ potential customer connection options and minimizing\n   the support matrix,\
    \ it is possible that ISP provided NATs would lower\n   support costs.\n   Part\
    \ of the motivation for NAT is to avoid the high cost of\n   renumbering inherent\
    \ in the current IPv4 Internet.  Guidelines for\n   the assignment of IPv4 addresses\
    \ RFC-2050 [9] mean that ISP customers\n   are currently required to renumber\
    \ their networks if they want to\n   switch to a new ISP.  Using a NAT (or a firewall\
    \ with NAT functions)\n   means that only the Internet facing IP addresses must\
    \ be changed and\n   internal network nodes do not need to be reconfigured. Localizing\n\
    \   address administration to the NAT minimizes renumbering costs, and\n   simultaneously\
    \ provides for a much larger local pool of addresses\n   than is available under\
    \ current allocation guidelines. (The registry\n   guidelines are intended to\
    \ prolong the lifetime of the IPv4 address\n   space and manage routing table\
    \ growth, until IPv6 is ready or new\n   routing technology reduces the pressure\
    \ on the routing table.  This\n   is accomplished by managing allocations to match\
    \ actual demand and to\n   enforce hierarchical addressing.  An unfortunate byproduct\
    \ of the\n   current guidelines is that they may end up hampering growth in areas\n\
    \   where it is difficult to sort out real need from potential hoarding.)\n  \
    \ NAT is effective at masking provider switching or other requirements\n   to\
    \ change addresses, thus mitigates some of the growth issues.\n   NAT deployments\
    \ have been raising the awareness of protocol designers\n   who are interested\
    \ in ensuring that their protocols work end-to-end.\n   Breaking the semantic\
    \ overload of the IP address will force\n   applications to find a more appropriate\
    \ mechanism for endpoint\n   identification and discourage carrying the locator\
    \ in the data\n   stream.  Since this will not work for legacy applications, RFC-1631\n\
    \   discusses how to look into the packet and make NAT transparent to the\n  \
    \ application (i.e.: create an application gateway).  This may not be\n   possible\
    \ for all applications (such as IP based authentication in\n   SNMP), and even\
    \ with application gateways in the path it may be\n   necessary to modify each\
    \ end host to be aware when there are\n   intermediaries modifying the data.\n\
    \   Another popular practice is hiding a collection of hosts that provide\n  \
    \ a combined service behind a single IP address (i.e.: web host load\n   sharing).\
    \  In many implementations this is architecturally a NAT,\n   since the addresses\
    \ are mapped to the real destination on the fly.\n   When packet header integrity\
    \ is not an issue, this type of virtual\n   host requires no modifications to\
    \ the remote applications since the\n   end client is unaware of the mapping activity.\
    \  While the virtual\n   host has the CPU performance characteristics of the total\
    \ set of\n   machines, the processing and I/O capabilities of the NAT/ALG device\n\
    \   bound the overall performance as it funnels the packets back and\n   forth.\n"
- title: 6.  Problems with NATs
  contents:
  - "6.  Problems with NATs\n   -  NATs break the flexible end-to-end model of the\
    \ Internet.\n   -  NATs create a single point where fates are shared, in the device\n\
    \      maintaining connection state and dynamic mapping information.\n   -  NATs\
    \ complicate the use of multi-homing by a site in order to\n      increase the\
    \ reliability of their Internet connectivity. (While\n      single routers are\
    \ a point of fate sharing, the lack of state in a\n      router makes creating\
    \ redundancy trivial.  Indeed, this is on of\n      the reasons why the Internet\
    \ protocol suite developed using a\n      connectionless datagram service as its\
    \ network layer.)\n   -  NATs inhibit implementation of security at the IP level.\n\
    \   -  NATs enable casual use of private addresses.  These uncoordinated\n   \
    \   addresses are subject to collisions when companies using these\n      addresses\
    \ merge or want to directly interconnect using VPNs.\n   -  NATs facilitate concatenating\
    \ existing private name spaces with\n      the public DNS.\n   -  Port versions\
    \ (NAPT and RSIP) increase operational complexity when\n      publicly published\
    \ services reside on the private side.\n   -  NATs complicated or may even invalidate\
    \ the authentication\n      mechanism of SNMPv3.\n   -  Products may embed a NAT\
    \ function without identifying it as such.\n   By design, NATs impose limitations\
    \ on flexibility.  As such, extended\n   thought about the introduced complications\
    \ is called for.  This is\n   especially true for products where the NAT function\
    \ is a hidden\n   service, such as load balancing routers that re-write the IP\
    \ address\n   to other public addresses.  Since the addresses may be all in\n\
    \   publicly administered space these are rarely recognized as NATs, but\n   they\
    \ break the integrity of the end-to-end model just the same.\n   NATs place constraints\
    \ on the deployment of applications that carry\n   IP addresses (or address derivatives)\
    \ in the data stream, and they\n   operate on the assumption that each session\
    \ is independent. However,\n   there are applications such as FTP and H.323 that\
    \ use one or more\n   control sessions to set the characteristics of the follow-on\
    \ sessions\n   in their control session payload.  Other examples include SNMP\
    \ MIBs\n   for configuration, and COPS policy messages.  Applications or\n   protocols\
    \ like these assume end-to-end integrity of addresses and\n   will fail when traversing\
    \ a NAT.  (TCP was specifically designed to\n   take advantage of, and reuse,\
    \ the IP address in combination with its\n   ports for use as a transport address.)\
    \ To fix how NATs break such\n   applications, an Application Level Gateway needs\
    \ to exist within or\n   alongside each NAT.  An additional gateway service is\
    \ necessary for\n   each application that may imbed an address in the data stream.\
    \  The\n   NAT may also need to assemble fragmented datagrams to enable\n   translation\
    \ of the application stream, and then adjust TCP sequence\n   numbers, prior to\
    \ forwarding.\n   As noted earlier, NATs break the basic tenet of the Internet\
    \ that the\n   endpoints are in control of the communication.  The original design\n\
    \   put state control in the endpoints so there would be no other\n   inherent\
    \ points of failure.  Moving the state from the endpoints to\n   specific nodes\
    \ in the network reduces flexibility, while it increases\n   the impact of a single\
    \ point failure.  See further discussion in\n   Illustration 1 below.\n   In addition,\
    \ NATs are not transparent to all applications, and\n   managing simultaneous\
    \ updates to a large array of ALGs may exceed the\n   cost of acquiring additional\
    \ globally routable addresses.  See\n   further discussion in Illustration 2 below.\n\
    \   While RSIP addresses the transparency and ALG issues, for the\n   specific\
    \ case of an individual private host needing public access,\n   there is still\
    \ a node with state required to maintain the connection.\n   Dynamic NAT and RSIP\
    \ will eventually violate higher layer assumptions\n   about address/port number\
    \ reuse as defined in RFC-793 [10] RFC-1323\n   [11].  The TCP state, TCP_TIME_WAIT,\
    \ is specifically designed to\n   prevent replay of packets between the 4-tuple\
    \ of IP and port for a\n   given IP address pair.  Since the TCP state machine\
    \ of a node is\n   unaware of any previous use of RSIP, its attempt to connect\
    \ to the\n   same remote service that its neighbor just released (which is still\n\
    \   in TCP_TIME_WAIT) may fail, or with a larger sequence number may open\n  \
    \ the prior connection directly from TCP_TIME_WAIT state, at the loss\n   of the\
    \ protection afforded by the TCP_TIME_WAIT state (further\n   discussion in 2.6\
    \ of RFC-2663 [3]).\n   For address translators (which do not translate ports)\
    \ to comply with\n   the TCP_TIME_WAIT requirements, they must refrain from assigning\
    \ the\n   same address to a different host until a period of 2*MSL has elapsed\n\
    \   since the last use of the address, where MSL is the Maximum Segment\n   Lifetime\
    \ defined in RFC-793 as two minutes.  For address-and-port\n   translators to\
    \ comply with this requirement, they similarly must\n   refrain from assigning\
    \ the same host/port pair until 2*MSL has\n   elapsed since the end of its first\
    \ use.  While these requirements are\n   simple to state, they can place a great\
    \ deal of pressure on the NAT,\n   because they temporarily reduce the pool of\
    \ available addresses and\n   ports.  Consequently, it will be tempting or NAT\
    \ implementers to\n   ignore or shorten the TCP_TIME_WAIT requirements, at the\
    \ cost of some\n   of TCP's strong reliability.  Note that in the case where the\
    \ strong\n   reliability is in fact compromised by the appearance of an old\n\
    \   packet, the failure can manifest itself as the receiver accepting\n   incorrect\
    \ data.  See further discussion in Illustration 3 below.\n   It is sometimes argued\
    \ that NATs simply function to facilitate\n   \"routing realms\", where each domain\
    \ is responsible for finding\n   addresses within its boundaries.  Such a viewpoint\
    \ clouds the\n   limitations created by NAT with the better-understood need for\n\
    \   routing management.  Compartmentalization of routing information is\n   correctly\
    \ a function of routing protocols and their scope of\n   application.  NAT is\
    \ simply a means to distribute address allocation\n   authority and provide a\
    \ mechanism to map addresses from one address\n   realm into those of another\
    \ realm.\n   In particular, it is sometimes erroneously believed that NATs serve\n\
    \   to provide routing isolation.  In fact, if someone were to define an\n   OSPF\
    \ ALG it would actually be possible to route across a NAT\n   boundary.  Rather\
    \ than NAT providing the boundary, it is the\n   experienced operators who know\
    \ how to limit network topology that\n   serve to avoid leaking addresses across\
    \ a NAT.  This is an\n   operational necessity given the potential for leaked\
    \ addresses to\n   introduce inconsistencies into the public infrastructure.\n\
    \   One of the greatest concerns from the explosion of NATs is the impact\n  \
    \ on the fledgling efforts at deploying network layer end-to-end IP\n   security.\
    \  One fundamental issue for IPSec is that with both AH and\n   ESP, the authentication\
    \ check covers the TCP/UDP checksum (which in\n   turn covers the IP address).\
    \  When a NAT changes the IP address, the\n   checksum calculation will fail,\
    \ and therefore authentication is\n   guaranteed to fail.  Attempting to use the\
    \ NAT as a security boundary\n   fails when requirement is end-to-end network\
    \ layer encryption, since\n   only the endpoints have access to the keys.  See\
    \ further discussion\n   in Illustration 4 below.\n   Finally, while the port\
    \ multiplexing variants of NAT (popular because\n   they allow Internet access\
    \ through a single address) work modestly\n   well for connecting private hosts\
    \ to public services, they create\n   management problems for applications connecting\
    \ from public toward\n   private.  The concept of a well-known port is undermined\
    \ because only\n   one private side system can be mapped through the single public-side\n\
    \   port number.  This will affect home networks, when applications like\n   multi-player\
    \ Internet games can only be played on one system at a\n   time.  It will also\
    \ affect small businesses when only one system at a\n   time can be operated on\
    \ the standard port to provide web services.\n   These may sound like only medium-grade\
    \ restrictions for the present,\n   but as a basic property of the Internet, not\
    \ to change years into the\n   future, it is highly undesirable.  The issue is\
    \ that the public\n   toward private usage requires administrative mapping for\
    \ each target\n   prior to connection.  If the ISP chooses to provide a standardized\n\
    \   version of these to lower configuration options, they may find the\n   support\
    \ costs of managing the ALGs will exceed the cost of additional\n   address space.\
    \  See further discussion in Illustration 6 below.\n"
- title: 7.  Illustrations
  contents:
  - "7.  Illustrations\n 7.1 Single point of failure\n   A characteristic of stateful\
    \ devices like NATs is the creation of a\n   single point of failure.  Attempts\
    \ to avoid this by establishing\n   redundant NATs, creates a new set of problems\
    \ related to timely\n   communication of the state, and routing related failures.\
    \  This\n   encompasses several issues such as update frequency, performance\n\
    \   impact of frequent updates, reliability of the state update\n   transaction,\
    \ a-priori knowledge of all nodes needing this state\n   information, and notification\
    \ to end nodes of alternatives.  (This\n   notification could be accomplished\
    \ with a routing protocol, which\n   might require modifications to the hosts\
    \ so they will listen.)\n                        --------       --------\n   \
    \                    | Host A |-----| Host B |\n                        --------\
    \   |   --------\n                           -----------------\n             \
    \                |            |\n                          ------        ------\n\
    \                         | AD 1 |      | AD 2 |\n                          ------\
    \        ------\n                              \\         /\n                \
    \                --------\n                               /Internet\\\n      \
    \                         ----------\n                                --------\n\
    \                             Illustration 1\n   In the traditional case where\
    \ Access Device (AD) 1 & 2 are routers,\n   the single point of failure is the\
    \ end Host, and the only effort\n   needed to maintain the connections through\
    \ a router or link failure\n   is a simple routing update from the surviving router.\
    \  In the case\n   where the ADs are a NAT variant there will be connection state\n\
    \   maintained in the active path that would need to be shared with\n   alternative\
    \ NATs.  When the Hosts have open connections through\n   either NAT, and it fails,\
    \ the application connections will drop\n   unless the state had been previously\
    \ moved to the surviving NAT. The\n   hosts will still need to acquire a routing\
    \ redirect.  In the case of\n   RSIP, the public side address pool would also\
    \ need to be shared\n   between the ADs to allow movement.  This sharing creates\
    \ another\n   real-time operational complexity to prevent conflicting assignments\n\
    \   at connection setup.  NAT as a technology creates a point fate\n   sharing\
    \ outside the endpoints, in direct contradiction to the\n   original Internet\
    \ design goals.\n 7.2.  ALG complexity\n   In the following example of a proposed\
    \ corporate network, each\n   NAT/ALG was to be one or more devices at each physical\
    \ location, and\n   there were to be multiple physical locations per diagramed\n\
    \   connection.  The logistics of simply updating software on this scale\n   is\
    \ cumbersome, even when all the devices are the same manufacturer\n   and model.\
    \  While this would also be true with routers, it would be\n   unnecessary for\
    \ all devices to run a consistent version for an\n   application to work across\
    \ an arbitrary path.\n                ----------------------------------------\n\
    \               |           Corporate Network            |\n               | Asia\
    \ |------| Americas |------| Europe |\n                ------        ----------\
    \        --------\n                   |                |                |\n  \
    \             --------         --------         --------\n              |NAT/ALGs|\
    \       |NAT/ALGs|       |NAT/ALGs|\n               --------         --------\
    \         --------\n                   |                |                |\n \
    \             --------------------------------------------\n               | \
    \               Internet                |\n              --------------------------------------------\n\
    \                   |                |                |\n               --------\
    \         --------         --------\n              |NAT/ALGs|       |NAT/ALGs|\
    \       |NAT/ALGs|\n               --------         --------         --------\n\
    \                   |                |                |\n       ------------------\
    \     --------------     ----------------\n       Home Telecommuters     Branch\
    \ Offices     Partner Networks\n       ------------------     -------------- \
    \    ----------------\n                                --------\n            \
    \                 Illustration 2\n 7.3. TCP state violations\n   The full range\
    \ of upper layer architectural assumptions that are\n   broken by NAT technologies\
    \ may not be well understood without a very\n   large-scale deployment, because\
    \ it sometimes requires the diversity\n   that comes with large-scale use to uncover\
    \ unusual failure modes. The\n   following example illustrates an instance of\
    \ the problem discussed\n   above in section 6.\n                        --------\
    \       --------\n                       | Host A |-----| Host B |\n         \
    \               --------   |   --------\n                                --------\n\
    \                               |NAT/RSIP|\n                                --------\n\
    \                                   |\n                                --------\n\
    \                               |Internet|\n                                --------\n\
    \                                   |\n                               ---------\n\
    \                              |   Web   |\n                              |  Server\
    \ |\n                               ---------\n                              \
    \  --------\n                             Illustration 3\n   Host A completes\
    \ its transaction and closes the web service on TCP\n   port 80, and the RSIP\
    \ releases the public side address used for Host\n   A.  Host B attempts to open\
    \ a connection to the same web service, and\n   the NAT assigns then next free\
    \ public side address which is the same\n   one A just released.  The source port\
    \ selection rules on Host B\n   happen to lead it to the same choice that A used.\
    \  The connect\n   request from Host B is rejected because the web server, conforming\
    \ to\n   the TCP specifications, has that 4-tuple in TIME WAIT for 4 minutes.\n\
    \   By the time a call from Host B gets through to the helpdesk\n   complaining\
    \ about no access, the requested retry will work, so the\n   issue is marked as\
    \ resolved, when it in fact is an on-going, but\n   intermittent, problem.\n 7.4.\
    \  Symmetric state management\n   Operational management of networks incorporating\
    \ stateful packet\n   modifying device is considerably easier if inbound and outbound\n\
    \   packets traverse the same path.  (Otherwise it's a headache to keep\n   state\
    \ for the two directions synchronized.)  While easy to say, even\n   with careful\
    \ planning it can be difficult to manage using a\n   connectionless protocol like\
    \ IP.  The problem of creating redundant\n   connections is ensuring that routes\
    \ advertised to the private side\n   reach the end nodes and map to the same device\
    \ as the public side\n   route advertisements.  This state needs to persist throughout\
    \ the\n   lifetime of sessions traversing the NAT, in spite of frequent or\n \
    \  simultaneous internal and external topology churn.  Consider the\n   following\
    \ case where the -X- links are broken, or flapping.\n                        \
    \  --------       --------\n                         | Host A |     | Host B |\n\
    \                         |   Foo  |     |   Bar  |\n                        \
    \  --------       --------\n                              |             |\n  \
    \                          ----          ----\n                           |Rtr1|---X1---|Rtr2|\n\
    \                            ----          ----\n                            \
    \  |            |\n                             ----         ----\n          \
    \                  |NAT1|       |NAT2|\n                             ----    \
    \     ----\n                               |          |\n                    \
    \          --------------\n                             |Rtr         Rtr|\n  \
    \                           | /  Internet \\ |     ---\n                     \
    \        |Rtr----X2---Rtr|----|DNS|\n                              --------------\
    \       ---\n                               |          |\n                   \
    \            |          |\n                          --------       --------\n\
    \                         | Host C |     | Host D |\n                        \
    \  --------       --------\n                                --------\n       \
    \                      Illustration 4\n   To preserve a consistent view of routing,\
    \ the best path to the\n   Internet for Routers 1 & 2 is via NAT1, while the Internet\
    \ is told\n   the path to the address pool managed by the NATs is best found\n\
    \   through NAT1.  When the path X1 breaks, Router 2 would attempt to\n   switch\
    \ to NAT2, but the external return path would still be through\n   NAT1.  This\
    \ is because the NAT1 device is advertising availability of\n   a pool of addresses.\
    \  Directly connected routers in this same\n   situation would advertise the specific\
    \ routes that existed after the\n   loss.  In this case, redundancy was useless.\n\
    \   Consider the case that the path between Router 1 & 2 is up, and some\n   remote\
    \ link in the network X2 is down.  It is also assumed that DNS\n   returns addresses\
    \ for both NATs when queried for Hosts A or B.  When\n   Host D tries to contact\
    \ Host B, the request goes through NAT2, but\n   due to the internal routing,\
    \ the reply is through NAT1.  Since the\n   state information for this connection\
    \ is in NAT2, NAT1 will provide a\n   new mapping.  Even if the remote path is\
    \ restored, the connection\n   will not be made because the requests are to the\
    \ public IP of NAT2,\n   while the replies are from the public IP of NAT1.\n \
    \  In a third case, both Host A & B want to contact Host D, when the\n   remote\
    \ link X2 in the Internet breaks.  As long as the path X1 is\n   down, Host B\
    \ is able to connect, but Host A is cut off.  Without a\n   thorough understanding\
    \ of the remote topology (unlikely since\n   Internet providers tend to consider\
    \ that sensitive proprietary\n   information), the administrator of Hosts A &\
    \ B would have no clue why\n   one worked and the other didn't.  As far as he\
    \ can tell the redundant\n   paths through the NATs are up but only one connection\
    \ works.  Again,\n   this is due to lack of visibility to the topology that is\
    \ inherent\n   when a stateful device is advertising availability to a pool rather\n\
    \   than the actual connected networks.\n   In any network topology, individual\
    \ router or link failures may\n   present problems with insufficient redundancy,\
    \ but the state\n   maintenance requirements of NAT present an additional burden\
    \ that is\n   not as easily understood or resolved.\n 7.5.  Need for a globally\
    \ unique FQDN when advertising public services\n   The primary feature of NATs\
    \ is the 'simple' ability to connect\n   private networks to the public Internet.\
    \  When the private network\n   exists prior to installing the NAT, it is unlikely\
    \ and unnecessary\n   that its name resolver would use a registered domain.  As\
    \ noted in\n   RFC 1123 [12] DNS queries may be resolved via local multicast.\n\
    \   Connecting the NAT device, and reconfiguring it's resolver to proxy\n   for\
    \ all external requests allows access to the public network by\n   hosts on the\
    \ private network.  Configuring the public DNS for the set\n   of private hosts\
    \ that need inbound connections would require a\n   registered domain (either\
    \ private, or from the connecting ISP) and a\n   unique name.  At this point the\
    \ partitioned name space is\n   concatenated and hosts would have different names\
    \ based on inside vs.\n   outside queries.\n                          --------\
    \       --------\n                         | Host A |     | Host B |\n       \
    \                  |   Foo  |-----|   Bar  |\n                          --------\
    \   |   --------   ---\n                                     |-------------|DNS|\n\
    \                                    ---             ---\n                   \
    \                |NAT|\n                                    ---\n            \
    \                         |\n                                 --------      ---\n\
    \                                |Internet|----|DNS|\n                       \
    \          --------      ---\n                                     |\n       \
    \                             ---\n                                   |NAT|\n\
    \                                    ---             ---\n                   \
    \                  |-------------|DNS|\n                          --------   |\
    \   --------   ---\n                         | Host C |-----| Host D |\n     \
    \                    |   Foo  |     |   Bar  |\n                          --------\
    \       --------\n                                --------\n                 \
    \            Illustration 5\n   Everything in this simple example will work until\
    \ an application\n   embeds a name.  For example, a Web service running on Host\
    \ D might\n   present embedded URL's of the form http://D/bar.html, which would\n\
    \   work from Host C, but would thoroughly confuse Host A.  If the\n   embedded\
    \ name resolved to the public address, Host A would be happy,\n   but Host C would\
    \ be looking for some remote machine.  Using the\n   public FQDN resolution to\
    \ establishing a connection from Host C to D,\n   the NAT would have to look at\
    \ the destination rather than simply\n   forwarding the packet out to the router.\
    \  (Normal operating mode for\n   a NAT is translate & forward out the other interface,\
    \ while routers\n   do not send packets back on the same interface they came from.)\
    \  The\n   NAT did not create the name space fragmentation, but it facilitates\n\
    \   attempts to merge networks with independent name administrations.\n 7.6. \
    \ L2TP tunnels increase frequency of address collisions\n   The recent mass growth\
    \ of the Internet has been driven by support of\n   low cost publication via the\
    \ web.  The next big push appears to be\n   support of Virtual Private Networks\
    \ (VPNs) frequently accomplished\n   using L2TP.  Technically VPN tunnels treat\
    \ an IP infrastructure as a\n   multiplexing substrate allowing the endpoints\
    \ to build what appear to\n   be clear pathways from end-to-end.  These tunnels\
    \ redefine network\n   visibility and increase the likelihood of address collision\
    \ when\n   traversing multiple NATs.  Address management in the private space\n\
    \   behind NATs will become a significant burden, as there is no central\n   body\
    \ capable of, or willing to do it.  The lower burden for the ISP\n   is actually\
    \ a transfer of burden to the local level, because\n   administration of addresses\
    \ and names becomes both distributed and\n   more complicated.\n   As noted in\
    \ RFC-1918, the merging of private address spaces can cause\n   an overlap in\
    \ address use, creating a problem.  L2TP tunnels will\n   increase the likelihood\
    \ and frequency of that merging through the\n   simplicity of their establishment.\
    \  There are several configurations\n   of address overlap which will cause failure,\
    \ but in the simple\n   example shown below the private use address of Host B\
    \ matches the\n   private use address of the VPN pool used by Host A for inbound\n\
    \   connections.  When Host B tries to establish the VPN interface, Host\n   A\
    \ will assign it an address from its pool for inbound connections,\n   and identify\
    \ the gateway for Host B to use.  In the example, Host B\n   will not be able\
    \ to distinguish the remote VPN gateway address of\n   Host A from its own private\
    \ address on the physical interface, thus\n   the connection will fail.  Since\
    \ private use addresses are by\n   definition not publicly coordinated, as the\
    \ complexity of the VPN\n   mesh increases so does the likelihood that there will\
    \ be a collision\n   that cannot be resolved.\n              --------------- \
    \                    ----------------\n             |  10.10.10.10  |--------L2TP-------|\
    \ Assigned by A  |\n             |    Host A     |   ---       ---   |    Host\
    \ B      |\n             |    10.1.1.1   |--|NAT|-----|NAT|--|  10.10.10.10  \
    \ |\n              ---------------    ---       ---    ----------------\n    \
    \                            --------\n                             Illustration\
    \ 6\n 7.7.  Centralized data collection system report correlation\n   It has been\
    \ reported that NAT introduces additional challenges when\n   intrusion detection\
    \ systems attempt to correlate reports between\n   sensors inside and outside\
    \ the NAT.  While the details of individual\n   systems are beyond the scope of\
    \ this document, it is clear that a\n   centralized system with monitoring agents\
    \ on both sides of the NAT\n   would also need access to the current NAT mappings\
    \ to get this right.\n   It would also be critical that the resulting data be\
    \ indexed properly\n   if there were agents behind multiple NATs using the same\
    \ address\n   range for the private side.\n   This also applies to management\
    \ data collected via SNMP.  Any time\n   the data stream carries an IP address;\
    \ the central collector or ALG\n   will need to manipulate the data based on the\
    \ current mappings in the\n   NAT.\n"
- title: 8.  IPv6
  contents:
  - "8.  IPv6\n   It has been argued that IPv6 is no longer necessary because NATs\n\
    \   relieve the address space constraints and allow the Internet to\n   continue\
    \ growing.  The reality is they point out the need for IPv6\n   more clearly than\
    \ ever.  People are trying to connect multiple\n   machines through a single access\
    \ line to their ISP and have been\n   willing to give up some functionality to\
    \ get that at minimum cost.\n   Frequently the reason for cost increases is the\
    \ perceived scarcity\n   (therefore increased value) of IPv4 addresses, which\
    \ would be\n   eliminated through deployment of IPv6.  This crisis mentality is\n\
    \   creating a market for a solution to a problem already solved with\n   greater\
    \ flexibility by IPv6.\n   If NAT had never been defined, the motivation to resolve\
    \ the\n   dwindling IPv4 address space would be a much greater.  Given that\n\
    \   NATs are enabling untold new hosts to attach to the Internet daily,\n   it\
    \ is difficult to ascertain the actual impact to the lifetime of\n   IPv4, but\
    \ NAT has certainly extended it.  It is also difficult to\n   determine the extent\
    \ of delay NAT is causing for IPv6, both by\n   relieving the pressure, and by\
    \ redirecting the intellectual cycles\n   away from the longer-term solution.\n\
    \   But at the same time NAT functionality may be a critical facilitator\n   in\
    \ the deployment of IPv6.  There are already 100 million or more\n   computers\
    \ running IPv4 on data networks.  Some of these networks are\n   connected to\
    \ and thus part of the Internet and some are on private\n   isolated networks.\
    \  It is inconceivable that we could have a \"flag\n   day\" and convert all of\
    \ the existing IPv4 nodes to IPv6 at the same\n   time.  There will be a very\
    \ long period of coexistence while both\n   IPv4 and IPv6 are being used in the\
    \ Internet and in private networks.\n   The original IPv6 transition plan relied\
    \ heavily on having new IPv6\n   nodes also be able to run IPv4 - a \"dual stack\"\
    \ approach. When the\n   dual stack node looks up another node in the DNS it will\
    \ get back a\n   IPv4 or an IPv6 address in response.  If the response is an IPv4\n\
    \   address then the node uses IPv4 to contact the other node. And if the\n  \
    \ response is an IPv6 address then IPv6 can be used to make the\n   contact. \
    \ Turning the NAT into a 6to4 [13]router enables widespread\n   deployment of\
    \ IPv6 while providing an IPv4 path if IPv6 is\n   unavailable.  While this maintains\
    \ the current set of issues for IPv4\n   connections, it reestablishes the end-to-end\
    \ principle for IPv6\n   connections.\n   An alternative methodology would be\
    \ to translate the packets between\n   IPv6 and IPv4 at the boarders between IPv4\
    \ supporting networks and\n   IPv6 supporting networks.  The need for this functionality\
    \ was\n   recognized in [RFC 1752], the document that recommended to the IETF\n\
    \   that IPv6 be developed and recommended that a set of working groups\n   be\
    \ established to work on a number of specific problems.  Header\n   translation\
    \ (i.e, NAT) was one of those problems.\n   Of course, NATs in an IPv6 to IPv4\
    \ translation environment encounter\n   all of the same problems that NATs encounter\
    \ in a pure IPv4 and the\n   environment and cautions in this document apply to\
    \ both situations.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   NAT (particularly NAPT) actually has the potential\
    \ to lower overall\n   security because it creates the illusion of a security\
    \ barrier, but\n   does so without the managed intent of a firewall.  Appropriate\n\
    \   security mechanisms are implemented in the end host, without reliance\n  \
    \ on assumptions about routing hacks, firewall filters, or missing NAT\n   translations,\
    \ which may change over time to enable a service to a\n   neighboring host.  In\
    \ general, defined security barriers assume that\n   any threats are external,\
    \ leading to practices that make internal\n   breaches much easier.\n   IPsec\
    \ RFC-2401 [7] defines a set of mechanisms to support packet-\n   level authentication\
    \ and encryption for use in IP networks.  While\n   this may be less efficient\
    \ than application-level security but in the\n   words of RFC-1752 [14] \"support\
    \ for basic packet-level authentication\n   will provide for the adoption of a\
    \ much needed, widespread, security\n   infrastructure throughout the Internet.\"\
    \n   NATs break IPsec's authentication and encryption technologies because\n \
    \  these technologies depend on an end-to-end consistency of the IP\n   addresses\
    \ in the IP headers, and therefore may stall further\n   deployment of enhanced\
    \ security across the Internet.  NATs raise a\n   number of specific issues with\
    \ IPsec.  For example;\n   - Use of AH is not possible via NAT as the hash protects\
    \ the IP\n     address in the header.\n   - Authenticated certificates may contain\
    \ the IP address as part of\n     the subject name for authentication purposes.\n\
    \   - Encrypted Quick Mode structures may contain IP addresses and ports\n   \
    \  for policy verifications.\n   - The Revised Mode of public key encryption includes\
    \ the peer\n     identity in the encrypted payload.\n   It may be possible to\
    \ engineer and work around NATs for IPsec on a\n   case-by-case basis, but at\
    \ the cost of restricting the trust model,\n   as discussed in section 4 above.\
    \  With all of the restrictions placed\n   on deployment flexibility, NATs present\
    \ a significant obstacle to\n   security integration being deployed in the Internet\
    \ today.\n   As noted in the RFC-2694 [15], the DNS/ALG cannot support secure\
    \ DNS\n   name servers in the private domain.  Zone transfers between DNSsec\n\
    \   servers will be rejected when necessary modifications are attempted.\n   It\
    \ is also the case that DNS/ALG will break any modified, signed\n   responses.\
    \  This would be the case for all public side queries of\n   private nodes, when\
    \ the DNS server is on the private side.  It would\n   also be true for any private\
    \ side queries for private nodes, when the\n   DNS server is on the public side.\
    \  Digitally signed records could be\n   modified by the DNS/ALG if it had access\
    \ to the source authentication\n   key.  DNSsec has been specifically designed\
    \ to avoid distribution of\n   this key, to maintain source authenticity.  So\
    \ NATs that use DNS/ALG\n   to repair the namespace resolutions will either; break\
    \ the security\n   when modifying the record, or will require access to all source\
    \ keys\n   to requested resolutions.\n   Security mechanisms that do not protect\
    \ or rely on IP addresses as\n   identifiers, such as TLS [16], SSL [17], or SSH\
    \ [18] may operate in\n   environments containing NATs.  For applications that\
    \ can establish\n   and make use of this type of transport connection, NATs do\
    \ not create\n   any additional complications.  These technologies may not provide\n\
    \   sufficient protection for all applications as the header is exposed,\n   allowing\
    \ subversive acts like TCP resets.  RFC-2385 [19] discusses\n   the issues in\
    \ more detail.\n   Arguments that NATs may operate in a secure mode preclude true\
    \ End-\n   to-End security, as the NAT becomes the security endpoint.\n   Operationally\
    \ the NAT must be managed as part of the security domain,\n   and in this mode\
    \ the packets on the unsecured side of the NAT are\n   fully exposed.\n"
- title: 10.  Deployment Guidelines
  contents:
  - "10.  Deployment Guidelines\n   Given that NAT devices are being deployed at a\
    \ fairly rapid pace,\n   some guidelines are in order.  Most of these cautionary\
    \ in nature and\n   are designed to make sure that the reader fully understands\
    \ the\n   implications of the use of NATs in their environment.\n   - Determine\
    \ the mechanism for name resolution, and ensure the\n     appropriate answer is\
    \ given for each address administration.\n     Embedding the DNS server, or a\
    \ DNS ALG in the NAT device will\n     likely be more manageable than trying to\
    \ synchronize independent\n     DNS systems across administrations.\n   - Is the\
    \ NAT configured for static one to one mappings, or will it\n     dynamically\
    \ manage them? If dynamic, make sure the TTL of the DNS\n     responses is set\
    \ to 0, and that the clients pay attention to the\n     don't cache notification.\n\
    \   - Will there be a single NAT device, or parallel with multiple paths?\n  \
    \   If single, consider the impact of a device failure.  If multiple,\n     consider\
    \ how routing on both sides will insure the packets flow\n     through the same\
    \ box over the connection lifetime of the\n     applications.\n   - Examine the\
    \ applications that will need to traverse the NAT and\n     verify their immunity\
    \ to address changes.  If necessary provide an\n     appropriate ALG or establish\
    \ a VPN to isolate the application from\n     the NAT.\n   - Determine need for\
    \ public toward private connections, variability\n     of destinations on the\
    \ private side, and potential for simultaneous\n     use of public side port numbers.\
    \  NAPTs increase administration if\n     these apply.\n   - Determine if the\
    \ applications traversing the NAPT or RSIP expect\n     all ports from the public\
    \ IP address to be the same endpoint.\n     Administrative controls to prevent\
    \ simultaneous access from\n     multiple private hosts will be required if this\
    \ is the case.\n   - If there are encrypted payloads, the contents cannot be modified\n\
    \     unless the NAT is a security endpoint, acting as a gateway between\n   \
    \  security realms.  This precludes end-to-end confidentiality, as the\n     path\
    \ between the NAT and endpoint is exposed.\n   - Determine the path for name resolutions.\
    \  If hosts on the private\n     side of a NAPT or RSIP server need visibility\
    \ to each other, a\n     private side DNS server may be required.\n   - If the\
    \ environment uses secure DNS records, the DNS/ALG will\n     require access to\
    \ the source authentication keys for all records to\n     be translated.\n   -\
    \ When using VPNs over NATs, identify a clearinghouse for the private\n     side\
    \ addresses to avoid collisions.\n   - Assure that applications used both internally\
    \ and externally avoid\n     embedding names, or use globally unique ones.\n \
    \  - When using RSIP, recognize the scope is limited to individual\n     private\
    \ network connecting to the public Internet.  If other NATs\n     are in the path\
    \ (including web-server load-balancing devices), the\n     advantage of RSIP (end-to-end\
    \ address/port pair use) is lost.\n   - For RSIP, determine the probability of\
    \ TCP_Time_Wait collisions\n     when subsequent private side hosts attempt to\
    \ contact a recently\n     disconnected public side service.\n"
- title: 11.  Summary
  contents:
  - "11.  Summary\n   Over the 6-year period since RFC-1631, the experience base has\
    \ grown,\n   further exposing concerns raised by the original authors.  NAT breaks\n\
    \   a fundamental assumption of the Internet design; the endpoints are in\n  \
    \ control.  Another design principle, 'keep-it-simple' is being\n   overlooked\
    \ as more features are added to the network to work around\n   the complications\
    \ created by NATs.  In the end, overall flexibility\n   and manageability are\
    \ lowered, and support costs go up to deal with\n   the problems introduced.\n\
    \   Evangelists, for and against the technology, present their cases as\n   righteous\
    \ while downplaying any rebuttals.\n   - NATs are a 'fact of life', and will proliferate\
    \ as an enhancement\n     that sustains the existing IPv4 infrastructure.\n  \
    \ - NATs are a 'necessary evil' and create an administrative burden\n     that\
    \ is not easily resolved.  More significantly, they inhibit the\n     roll out\
    \ of IPsec, which will in turn slow growth of applications\n     that require\
    \ a secure infrastructure.\n   In either case, NATs require strong applicability\
    \ statements, clearly\n   declaring what works and what does not.\n   An overview\
    \ of the pluses and minuses:\n   NAT advantages                      NAT disadvantages\n\
    \   --------------------------------    --------------------------------\n   Masks\
    \ global address changes        Breaks end-to-end model\n   Eases renumbering\
    \ when providers    Facilitates concatenation of\n   change                  \
    \            multiple name spaces\n                                       Breaks\
    \ IPsec\n                                       Stateful points of failure\n \
    \  Address administrations avoid       Requires source specific DNS reply\n  \
    \ justifications to registries        or DNS/ALG\n                           \
    \            DNS/ALG breaks DNSsec replies\n   Lowers address utilization    \
    \      Enables end-to-end address\n                                       conflicts\n\
    \   Lowers ISP support burden           Increases local support burden and\n \
    \                                      complexity\n   Transparent to end systems\
    \ in some  Unique development for each app\n   cases\n   Load sharing as virtual\
    \ host        Performance limitations with scale\n   Delays need for IPv4 replacement\
    \    May complicate integration of IPv6\n   There have been many discussions lately\
    \ about the value of continuing\n   with IPv6 development when the market place\
    \ is widely deploying IPv4\n   NATs.  A shortsighted view would miss the point\
    \ that both have a\n   role, because NATs address some real-world issues today,\
    \ while IPv6\n   is targeted at solving fundamental problems, as well as moving\n\
    \   forward.  It should be recognized that there will be a long co-\n   existence\
    \ as applications and services develop for IPv6, while the\n   lifetime of the\
    \ existing IPv4 systems will likely be measured in\n   decades.  NATs are a diversion\
    \ from forward motion, but they do\n   enable wider participation at the present\
    \ state.  They also break a\n   class of applications, which creates the need\
    \ for complex work-around\n   scenarios.\n   Efforts to enhance general security\
    \ in the Internet include IPsec and\n   DNSsec.  These technologies provide a\
    \ variety of services to both\n   authenticate and protect information during\
    \ transit.  By breaking\n   these technologies, NAT and the DNS/ALG work-around,\
    \ hinder\n   deployment of enhanced security throughout the Internet.\n   There\
    \ have also been many questions about the probability of VPNs\n   being established\
    \ that might raise some of the listed concerns. While\n   it is hard to predict\
    \ the future, one way to avoid ALGs for each\n   application is to establish a\
    \ L2TP over the NATs. This restricts the\n   NAT visibility to the headers of\
    \ the tunnel packets, and removes its\n   effects from all applications. While\
    \ this solves the ALG issues, it\n   raises the likelihood that there will be\
    \ address collisions as\n   arbitrary connections are established between uncoordinated\
    \ address\n   spaces. It also creates a side concern about how an application\n\
    \   establishes the necessary tunnel.\n   The original IP architecture is powerful\
    \ because it provides a\n   general mechanism on which other things (yet unimagined)\
    \ may be\n   built. While it is possible to build a house of cards, time and\n\
    \   experience have lead to building standards with more structural\n   integrity.\
    \ IPv6 is the long-term solution that retains end-to-end\n   transparency as a\
    \ principle. NAT is a technological diversion to\n   sustain the lifetime of IPv4.\n"
- title: 12.  References
  contents:
  - "12.  References\n   1   Bradner, S., \" The Internet Standards Process -- Revision\
    \ 3\", BCP\n       9, RFC 2026, October 1996.\n   2   Egevang, K. and P. Francis,\
    \ \"The IP Network Address Translator\",\n       RFC 1631, May 1994.\n   3   Srisuresh,\
    \ P. and M. Holdrege, \"NAT Terminology and\n       Considerations\", RFC 2663,\
    \ August 1999.\n   4   Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot, G.\
    \ and E.\n       Lear, \"Address Allocation for Private Internets\", BCP 5, RFC\n\
    \       1918, February 1996.\n   5   Carpenter, B., Crowcroft, J. and Y. Rekhter,\
    \ \"IPv4 Address\n       Behavior Today\", RFC 2101, February 1997.\n   6   M.\
    \ Borella, D. Grabelsky, J., K. Tuniguchi, \"Realm Specific IP:\n       Protocol\
    \ Specification\", Work in Progress, March 2000.\n   7   Kent, S. and R. Atkinson,\
    \ \"Security Architecture for IP\", RFC\n       2401, November 1998.\n   8   Carpenter,\
    \ B., \"Internet Transparency\", RFC 2775, February 2000.\n   9   Hubbard, K.,\
    \ Kosters, M., Conrad, D., Karrenberg, D. and J.\n       Postel, \"Internet Registry\
    \ IP Allocation Guidelines\", BCP 12, RFC\n       2050, November 1996.\n   10\
    \  Postel, J., \"Transmission Control Protocol\", STD 7, RFC 793,\n       September\
    \ 1981.\n   11  Jacobson, V., Braden, R. and L. Zhang, \"TCP Extension for High-\n\
    \       Speed Paths\", RFC 1185, October 1990.\n   12  Braden, R., \"Requirements\
    \ for Internet Hosts\", STD 3, RFC 1123,\n       October 1989.\n   13  Carpenter,\
    \ B. and K. Moore, \"Connection of IPv6 Domains via IPv4\n       Clouds without\
    \ Explicit Tunnels\", Work in Progress.\n   14  Bradner, S. and A. Mankin, \"\
    Recommendation for IPng\", RFC 1752,\n       January 1995.\n   15  Srisuresh,\
    \ P., Tsirtsis, G., Akkiraju, P. and A. Heffernan, \"DNS\n       extensions to\
    \ NAT\", RFC 2694, September 1999.\n   16  Dierks, T. and C. Allen, \"The TLS\
    \ Protocol\", RFC 2246, January\n       1999.\n   17  http://home.netscape.com/eng/ssl3/ssl-toc.html,\
    \ March 1996.\n   18  T. Ylonen, et al., \"SSH Protocol Architecture\", Work in\
    \ Progress,\n       August 1998.\n   19  Heffernan, A., \"Protection of BGP Sessions\
    \ via the TCP MD5\n       Signature Option\", RFC 2385, August 1998.\n"
- title: 13.  Acknowledgments
  contents:
  - "13.  Acknowledgments\n   Valuable contributions to this document came from the\
    \ IAB, Vern\n   Paxson (lbl), Scott Bradner (harvard), Keith Moore (utk), Thomas\n\
    \   Narten (ibm), Yakov Rekhter (cisco), Pyda Srisuresh, Matt Holdrege\n   (lucent),\
    \ and Eliot Lear (cisco).\n"
- title: 14.  Author's Address
  contents:
  - "14.  Author's Address\n   Tony Hain\n   Microsoft\n   One Microsoft Way\n   Redmond,\
    \ Wa. USA\n   Phone:  1-425-703-6619\n   EMail:  tonyhain@microsoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
