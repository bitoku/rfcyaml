Abstract This document discusses how a number of privacy threats apply to technologies designed for IPv6 over various link layer protocols, and it provides advice to protocol designers on how to address such threats in adaptation layer specifications for IPv6 over such links.
[RFC6973] discusses privacy considerations for Internet protocols, and Section 5.2 of that document covers a number of privacy specific threats.
In the context of IPv6 addresses, Section 3 of [RFC7721] provides further elaboration on the applicability of the privacy threats.
When interface identifiers (IIDs) are generated without sufficient entropy compared to the link lifetime, devices and users can become vulnerable to the various threats discussed there, including:  Correlation of activities over time, if the same identifier is used for traffic over period of time  Location tracking, if the same interface identifier is used with different prefixes as a device moves between different networks  Device specific vulnerability exploitation, if the identifier helps identify a vendor or version or protocol and hence suggests what types of attacks to try  Address scanning, which enables all of the above attacks by off link attackers.
(On some Non Broadcast Multi Access (NBMA) links where all nodes aren't already privy to all on link addresses, address scans might also be done by on link attackers; however, in most cases, address scans are not an interesting threat from on link attackers and thus address scans generally apply only to routable addresses.)
For example, for links that may last for years, "enough" bits of entropy means at least 46 or so bits (see Section 2 for why) in a routable address; ideally all 64 bits of the IID should be used, although historically some bits have been excluded for reasons discussed in [RFC7421].
Link local addresses can also be susceptible to the same privacy threats from off link attackers, since experience shows they are often leaked by upper layer protocols such as SMTP, SIP, or DNS.
For these reasons, [RFC8064] recommends using an address generation scheme in [RFC7217], rather than addresses generated from a fixed link layer address.
Furthermore, to mitigate the threat of correlation of activities over time on long lived links, [RFC4941] specifies the notion of a "temporary" address to be used for transport sessions (typically locally initiated outbound traffic to the Internet) that should not be linkable to a more permanent identifier such as a DNS name, user name, or fixed link layer address.
Indeed, the default address selection rules [RFC6724] now prefer temporary addresses by default for outgoing connections.
If a device needs to simultaneously support unlinkable traffic as well as traffic that is linkable to such a stable identifier, supporting simultaneous use of multiple addresses per device is necessary.
Amount of Entropy Needed in Global Addresses
In terms of privacy threats discussed in [RFC7721], the one with the need for the most entropy is address scans of routable addresses.
To mitigate address scans, one needs enough entropy to make the probability of a successful address probe be negligible.
Typically, this is measured in the length of time it would take to have a 50% probability of getting at least one hit.
Address scans often rely on sending a packet such as a TCP SYN or ICMP Echo Request, then determining whether the reply is a)
an ICMP unreachable error (if no host exists with that address), b) a TCP response or ICMP Echo Reply (if a host exists), or c) none of those, in which case nothing is known for certain.
Many privacy sensitive devices support a "stealth mode" as discussed in Section 5 of [RFC7288] or are behind a network firewall that will drop unsolicited inbound traffic (e.g., TCP SYNs, ICMP Echo Requests, etc.)
and thus no TCP RST or ICMP Echo Reply will be sent.
In such cases, and when the device does not listen on a well known TCP or UDP port known to the scanner, the effectiveness of an address scan is limited by the ability to get ICMP unreachable errors, since the attacker can only infer the presence of a host based on the absence of an ICMP unreachable error.
Generation of ICMP unreachable errors is typically rate limited to 2 per second (the default in routers such as Cisco routers running IOS 12.0 or later).
Such a rate results in taking about a year to completely scan 26 bits of space.
The actual math is as follows.
Let 2^N be the number of devices on the subnet.
Let 2^M be the size of the space to scan (i.e., M bits of entropy).
Let S be the number of scan attempts.
The formula for a 50% chance of getting at least one hit in S attempts is: P(at least one success)   1
> S, this simplifies to: S   2^N/2^M   1/2, giving S   2^(M
N 1), or M   N
Using a scan rate of 2 per second, this results in the following rule of thumb: Bits of entropy needed   log 2
(# devices per link)   log 2(seconds of link lifetime)
For example, for a network with at most 2^16 devices on the same long lived link, where the average lifetime of a link is 8 years (2^28 seconds) or less, this results in a need for at least 46 bits of entropy (
16 28 2) so that an address scan would need to be sustained for longer than the lifetime of the link to have a 50% chance of getting a hit.
Although 46 bits of entropy may be enough to provide privacy in such cases, 59 or more bits of entropy would be needed if addresses are used to provide security against attacks such as spoofing, as CGAs [RFC3972] and HBAs [RFC5535] do, since attacks are not limited by ICMP rate limiting but by the processing power of the attacker.
See those RFCs for more discussion.
If, on the other hand, the devices being scanned for respond to unsolicited inbound packets, then the address scan is not limited by the ICMP unreachable rate limit in routers, since an adversary can determine the presence of a host without them.
In such cases, more bits of entropy would be needed to provide the same level of protection.
The table below shows the number of bits of entropy currently available in various technologies:
We discuss each in turn.
Some technologies allow the use of IEEE EUI 48 or EUI 64 identifiers or allow the use of an arbitrary 64 bit identifier.
Using such an identifier to construct IPv6 addresses makes it easy to use the normal LOWPAN IPHC encoding [RFC6282] with stateless compression, which allows such IPv6 addresses to be fully elided in common cases.
Global addresses with interface identifiers formed from IEEE identifiers can have insufficient entropy to mitigate address scans unless the IEEE identifier itself has sufficient entropy and enough bits of entropy are carried over into the IPv6 address to sufficiently mitigate the threats.
Privacy threats other than "Correlation over time" can be mitigated using per network randomized link layer addresses with enough entropy compared to the link lifetime.
A number of such proposals can be found at <https://mentor.ieee.org/privecsg/documents>, and Section 10.8 of [BTCorev4.1] specifies one for Bluetooth.
Using routable IPv6 addresses derived from such link layer addresses would be roughly equivalent to those specified in [RFC7217].
Correlation over time (for all addresses, not just routable addresses) can be mitigated if the link layer address itself changes often enough, such as each time the link is established, if the link lifetime is short.
For further discussion, see [RANDOM ADDR].
Another potential concern is that of efficiency, such as avoiding Duplicate Address Detection (DAD) altogether when IPv6 addresses are based on IEEE identifiers.
Appendix A of [RFC4429] provides an analysis of address collision probability based on the number of bits of entropy.
A simple web search on "duplicate MAC addresses" will show that collisions do happen with MAC addresses; thus, based on the analysis in [RFC4429], using sufficient bits of entropy in random addresses can provide greater protection against collision than using MAC addresses.
A routable IPv6 address with an interface identifier formed from the combination of a "Short Address" and a set of well known constant bits (such as padding with 0's) lacks sufficient entropy to mitigate address scanning unless the link lifetime is extremely short.
Furthermore, an adversary could also use statistical methods to determine the size of the L2 address space and thereby make some inference regarding the underlying technology on a given link, and target further attacks accordingly.
When Short Addresses are desired on links that are not guaranteed to have a short enough lifetime, the mechanism for constructing an IPv6 interface identifier from a Short Address could be designed to sufficiently mitigate the problem.
For example, if all nodes on a given L2 network have a shared secret (such as the key needed to get on the layer 2 network), the 64 bit IID might be generated using a one way hash that includes (at least)
the shared secret together with the Short Address.
The use of such a hash would result in the IIDs being spread out among the full range of IID address space, thus mitigating address scans while still allowing full stateless compression/elision.
For long lived links, "temporary" addresses might even be generated in the same way by (for example) also including in the hash the Version Number from the Authoritative Border Router Option (Section 4.3 of [RFC6775]), if any.
This would allow changing temporary addresses whenever the Version Number is changed, even if the set of prefix or context information is unchanged.
In summary, any specification using Short Addresses should carefully construct an IID generation mechanism so as to provide sufficient entropy compared to the link lifetime.
The following are recommended for adaptation layer specifications:
Security (privacy) sections should say how address scans are mitigated.
An address scan might be mitigated by having a link always be short lived, by having a large number of bits of entropy in routable addresses, or by some combination thereof.
Thus, a specification should explain what the maximum lifetime of a link is in practice and show how the number of bits of entropy is sufficient given that lifetime.
Technologies should define a way to include sufficient bits of entropy in the IPv6 interface identifier, based on the maximum link lifetime.
Specifying that randomized link layer addresses can be used is one easy way to do so, for technologies that support such identifiers.
Specifications should not simply construct an IPv6 interface identifier by padding a Short Address with a set of other well  known constant bits, unless the link lifetime is guaranteed to be extremely short or the Short Address is allocated by the network (rather than being constant in the node).
This also applies to link local addresses if the same Short Address is used independent of network and is unique enough to allow location tracking.
Specifications should make sure that an IPv6 address can change over long periods of time.
For example, the interface identifier might change each time a device connects to the network (if connections are short) or might change each day (if connections can be long).
This is necessary to mitigate correlation over time.
If a device can roam between networks and more than a few bits of entropy exist in the IPv6 interface identifier, then make sure that the interface identifier can vary per network as the device roams.
This is necessary to mitigate location tracking.
This entire document is about security considerations and how to specify possible mitigations.
