Abstract This document defines a Management Information Base (MIB) module for use with network management protocols in TCP/IP based internets.
This document defines an extension to the Interfaces Group MIB with a set of common objects for managing multi pair bonded Digital Subscriber Line
(xDSL) interfaces, as defined in ITU T Recommendations G.998.1, G.998.2, and G.998.3.
The textual conventions defining the bonding schemes are contained in a separate MIB module maintained by Internet Assigned Numbers Authority (IANA).
The MIB modules specific to each bonding technology are defined in G9981 MIB, G9982 MIB, and G9983 MIB, respectively.
Multi pair bonding allows a service provider to provide high  bandwidth services to business and residential customers over multiple xDSL lines, with greater speed and resiliency than service over a single xDSL line, bridging the gap between xDSL and fiber  based transport.
xDSL Multi pair bonding schemes, also known under the collective name "G.Bond":  ATM Based Multi pair bonding, as specified in ITU T Recommendation G.998.1 [G.998.1], which defines a method for the bonding (or aggregating) of multiple xDSL lines (or individual bearer channels in multiple xDSL lines) into a single bidirectional logical link carrying an ATM stream.
This specification can be viewed as an evolution of the legacy Inverse Multiplexing for ATM (IMA) technology [AF PHY 0086], applied to xDSL with variable rates on each line/bearer channel.
Ethernet Based Multi pair bonding, as specified in ITU T Recommendation
G.998.2 [G.998.2], which defines a method for the bonding (or aggregating) of multiple xDSL lines (or individual bearer channels in multiple xDSL lines) into a single bidirectional logical link carrying an Ethernet stream.
This specification can be viewed as IEEE 802.3 2005 [802.3] Clause 61, Physical Medium Entity
(PME) Aggregation, generalized to work over any xDSL technology (2Base TL and 10Pass TS interfaces defined by IEEE use G.SHDSL (Single pair High speed DSL) and VDSL (Very high speed DSL) technology, respectively).
Multi pair bonding using Time Division Inverse Multiplexing (TDIM), specified in ITU T Recommendation G.998.3 [G.998.3], which defines a method for the bonding (or aggregating) of multiple xDSL lines into a single bidirectional logical link carrying a mix of various traffic streams (e.g., Ethernet, ATM, TDM).
Architecturally, all three bonding schemes define a new "bonded" Transport Protocol Specific Transmission Convergence (TPS TC) sub layer, stacked above multiple ATM TC, Ethernet/Packet Transfer Mode TC (PTM TC), or Synchronous Transfer Mode TC (STM TC) (clear channel) sub layers for the ATM, Ethernet, or TDIM bonding, respectively.
Each underlying TPS TC sub layer represents a protocol specific interface to an xDSL line or an individual bearer channel of an xDSL line.
Bonding of multiple bearer channels in the same xDSL line is not allowed.
All schemes allow bonding of up to 32 individual line/channel sub layers with variable rates, providing common functionality for the configuration, initialization, operation, and monitoring of the bonded link.
This document defines a MIB module common to all 3 schemes.
Additional managed objects specific to each bonding technology are defined in the G9981 MIB [RFC6768], G9982 MIB [RFC6767], and G9983 MIB
The textual conventions listing the bonding schemes are defined in a separate, IANA maintained MIB module, the first version of which is provided in this document.
This arrangement would allow for future bonding schemes to be easily supported, without the need to update the common GBOND MIB module.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This document specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14, RFC 2119 [RFC2119].
The Broadband Forum Management Framework for xDSL Bonding
This document makes use of the Broadband Forum technical report "Management Framework for xDSL Bonding" [TR 159], defining a management model and a hierarchy of management objects for the bonded xDSL interfaces.
Relationship to Other MIB Modules
This section outlines the relationship of the MIB modules defined in this document with other MIB modules described in the relevant RFCs.
Specifically, the following MIB modules are discussed: the Interfaces Group MIB (IF MIB), Inverse Stack Table MIB (IF INVERTED STACK MIB), and Interface Stack Capability MIB (IF CAP STACK MIB); G.Bond scheme  specific modules G.Bond
/ATM (G9981 MIB), G.Bond/Ethernet (G9982 MIB), and G.Bond/TDIM (G9983 MIB); and DSL specific MIB modules ADSL (ADSL LINE EXT MIB), ADSL2 (ADSL2 LINE MIB), SHDSL (HDSL2 SHDSL LINE MIB), VDSL (VDSL LINE MIB), and VDSL2 (VDSL2 LINE MIB).
Relationship to Interfaces Group MIB
Module A bonded xDSL port is a stacked (a.k.a. aggregated or bonded) interface and as such is managed using generic interface management objects defined in the IF MIB
The stack management, i.e., actual connection of the sub layers to the top layer interface, is done via the ifStackTable, as defined in the IF MIB [RFC2863] and its inverse   the ifInvStackTable, as defined in the IF INVERTED STACK MIB [RFC2864].
The ifCapStackTable and its inverse   the ifInvCapStackTable, as defined in the IF CAP STACK MIB [RFC5066]   extend the stack management with an ability to describe possible connections or cross  connect capability, when a flexible cross connect matrix is present between the interface layers.
A G.Bond interface can aggregate up to 32 channel sub layers, with each channel representing an xDSL line or an xDSL bearer channel.
For the purpose of brevity we will refer to the bonded interface as the Generic Bonding Sub layer (GBS) and to the channel sub layer as the Bonding Channel Entity (BCE).
A generic G.Bond device can have a number of GBS ports, each connected to a particular upper layer (e.g., a Media Access Control (MAC) interface for the G.998.2 scheme), while simultaneously cross  connected to a number of underlying BCEs, with a single GBS per BCE relationship.
A GBS port is represented in the Interfaces table (ifTable) as a separate interface with an ifType reflecting a particular bonding scheme, e.g., g9981(263), g9982(264), or g9983(265).
Each BCE in the aggregated GBS port is represented in the ifTable as a separate interface with an ifType relevant to a particular xDSL technology, e.g., shdsl(169)
The ifType values are defined in [IANAifType MIB].
'  BCE    Bonding Channel Entity GBS    Generic Bonding Sub layer PMD    Physical Medium Dependent TPS TC Transport Protocol Specific Transmission Convergence PMS TC Physical Media Specific Transmission Convergence Figure 1:
The ifStackTable is indexed by the ifIndex values of the aggregated G.Bond port (GBS) and the BCEs connected to it.
The ifStackTable allows a network management application to determine which BCEs are connected to a particular GBS and change connections (if supported by the application).
The ifInvStackTable, being an inverted version of the ifStackTable, provides an efficient means for a network management application to read a subset of the ifStackTable and thereby determine which GBS runs on top of a particular BCE.
The ifCapStackTable, defined in the IF CAP STACK MIB module, specifies for each higher layer interface (e.g., GBS port) a list of lower layer
interfaces (e.g., BCEs), which can possibly be cross  connected to that higher layer interface, determined by the cross
connect capability of the device.
This table, modeled after the ifStackTable, is read only, reflecting current cross connect capability of a stacked interface, which can be dynamic in some implementations (e.g., if xDSL lines are located on a pluggable module and the module is pulled out).
Note that BCE availability per GBS, described by the ifCapStackTable, can be constrained by other parameters   for example, by the aggregation capacity of a GBS or by the BCE in question being already connected to another GBS.
So, in order to ensure that a particular BCE can be connected to the GBS, all respective parameters (e.g., ifCapStackTable, ifStackTable, and gBondPortCapCapacity) SHALL be inspected.
The ifInvCapStackTable, also defined in the IF CAP STACK MIB module, describes which higher layer interfaces (e.g., GBS ports) can possibly be connected to a particular lower layer interface (e.g., BCE), providing inverted mapping of the ifCapStackTable.
While it contains no additional information beyond that already contained in the ifCapStackTable, the ifInvCapStackTable has the ifIndex values in its INDEX clause in the reverse order, i.e., the lower layer interface first, and the higher layer interface second, providing efficient means for a network management application to read a subset of the ifCapStackTable and thereby determine which interfaces can be connected to run on top of a particular interface.
The G.998.x Bonding allows a number of BCEs to be aggregated onto a single logical GBS port by splitting the incoming traffic into multiple streams, transmitting each stream over a specific BCE, and combining the streams at the remote GBS port, preserving the original traffic order.
The Ethernet frames MAY be fragmented before the transmission and reassembled at the remote end to minimize transportation delay.
The G.998.2 (G.Bond/Ethernet) ports with multiple BCEs MUST perform the fragmentation and reassembly of the Ethernet frames.
However, for single BCE G.998.2 ports this function MAY be omitted (a.k.a. bonding bypass), to minimize fragmentation overhead and additional processing delay as well as to be able to interoperate with non G.998 DSL equipment.
The agent is REQUIRED to indicate all supported bonding schemes (for example, ATM, Ethernet, and TDIM), including OPTIONAL support for the bonding bypass in G.998.2 single BCE ports.
The GBOND MIB module allows a network management application to query Bonding capability and enable/disable it if supported.
Note that enabling Bonding (by setting the value of the gBondPortConfAdminScheme and gBondPortConfPeerAdminScheme objects to any supported bonding scheme other than 'none') effectively turns on the fragmentation and reassembly function, even on a single BCE port.
The G.Bond ports may optionally support a discovery operation whereby BCEs, during initialization, exchange information about their respective aggregation groups (GBS), via the [G.994.1] handshake (G.hs) protocol.
This information can then be used to detect copper misconnections or for an automatic assignment of the local BCEs into aggregation groups instead of a fixed preconfiguration.
The MIB module defined in this document allows a network management application to control the G.Bond discovery mechanism and query its results.
Two tables are used by the G.Bond discovery mechanism: the ifStackTable and the ifCapStackTable.
The following pseudocode gives an example of the discovery and automatic BCE assignment for a generic multi GBS G.Bond device, located at the Central Office (CO), using objects defined in this MIB module as well as the IF CAP STACK MIB and IF MIB modules
[Note that automatic BCE assignment is only shown here for the purposes of the example.
Perform discovery and auto assignment on GBS ports //
with room for more channels.
Assign a unique 6 octet local discovery code to the GBS, //
e.g., MAC address of the associated port or some other // unique number specifically allocated for this purpose.
Go over all disconnected channels, which can // potentially be connected to the GBS.
This operation is an atomic Set if Clear action; i.e., it // would succeed only if the remote discovery register was // zero.
is/was a peer // for GBS[i], and there is room for another BCE in the // GBS[i] aggregation group (max.
Connect this BCE to the GBS (via the ifStackTable;
ADD bce[j] TO ifStackTable[gbs[i]]; gbs[i].NumBCEs   gbs[i].NumBCEs   1
attached to the same RT and connect them to //
the GBS, provided there is enough room for more BCEs.
Get the remote discovery code from the BCE to see if //
it belongs to a connected RT "grabbed" by //
Physically connect the BCE to the GBS. //
(gbs[i] is auto added TO ifInvStackTable[bce[k]]).
At this point we have discovered all local BCEs that // are physically connected to the same RT and //
Go to the next GBS.
Adding a BCE to the ifStackTable row for a specific GBS involves actual connection of the BCE to the GBS.
Note that a GBS port does not have to be operationally 'down' for the connection to succeed.
In fact, a dynamic BCE addition (and removal) MAY be implemented with an available BCE being initialized first (by setting its ifAdminStatus to 'up') and then added to an operationally 'up' GBS port, by modifying a respective ifStackTable (and respective ifInvStackTable) entry.
It is RECOMMENDED that removal of the last operationally 'up' BCE from an operationally 'up' GBS, i.e., modification of a respective entry in the ifStackTable, and a corresponding entry in the ifInvStackTable, would be rejected by the implementation (in the case of SNMP, with the error inconsistentValue), as this action would completely drop the link.
In addition to the standard handshake based discovery described above, [G.998.2] defines an optional frame based discovery and pair management.
These frame based methods are discussed in [RFC6767].
Initialization of G.Bond Ports G.Bond ports built on top of xDSL technology require a lengthy initialization or 'training' process before any data can pass.
During this initialization, both ends of a link (peers) work cooperatively to achieve a required data rate on a particular copper pair.
Sometimes, when the copper line is too long or the noise on the line is too high, that 'training' process may fail to achieve a specific target rate with required characteristics.
The ifAdminStatus object from the IF MIB controls the desired state of a GBS with
all the BCEs connected to it or of an individual BCE port.
Setting this object to 'up' instructs a particular GBS or a BCE to start the initialization process, which may take tens of seconds for G.Bond ports.
The ifOperStatus object from the IF MIB shows the operational state of an interface for the GBS, extended by the gBondPortStatFltStatus object defined in this document, and a corresponding  Status object from a relevant xDSL line MIB for BCE interfaces.
A disconnected BCE may be initialized by changing the ifAdminStatus from 'down' to 'up'.
Changing the ifAdminStatus to 'up' on the GBS initializes all BCEs connected to that particular GBS.
Note that in the case of bonding, some interfaces may fail to initialize while others succeed.
The GBS is considered operationally 'up' if at least one bonded BCE is operationally 'up'.
When all BCEs connected to the GBS are 'down', the GBS SHALL be considered operationally 'lowerLayerDown'.
The GBS SHALL be considered operationally 'notPresent' if it is not connected to any BCE.
The GBS/BCE interface SHALL remain operationally 'down' during initialization, indicated by the 'init' value of the gBondPortStatFltStatus object.
Usage of the ifTable Both BCE and GBS interfaces are managed using interface specific management objects defined in the GBOND MIB module and generic interface objects from the ifTable of the IF MIB, with all management table entries referenced by the interface index ifIndex.
A relevant  Status object from a particular line
G.Bond Interpretation of IF MIB Objects 4.2.
Relationship to G.Bond ATM, ETH, and TDIM
The MIB module defined in this document is common to all G.998 bonding schemes.
It MUST be used in conjunction with a bonding scheme specific MIB module:
G9981 MIB [RFC6768] for a G.998.1 bonded interface.
MIB [RFC6767] for a G.998.2 bonded interface.
G9983 MIB [RFC6766] for a G.998.3 bonded interface.
Each xDSL technology is described in a relevant xDSL line MIB module: e.g., the HDSL2 SHDSL LINE MIB [RFC4319] for G.SHDSL, ADSL LINE EXT MIB [RFC3440] for ADSL, ADSL2 LINE MIB [RFC4706] for ADSL2, VDSL LINE MIB [RFC3728] for VDSL, or VDSL2 LINE MIB
These MIB modules are used to manage individual xDSL lines/channels (BCEs).
Addition of New Bonding Schemes
In case a new bonding scheme is introduced in a revision of G.998, IANA can update the IANA maintained MIB module, adding the corresponding new value to the IANAgBondScheme and IANAgBondSchemeList textual conventions, as well as listing the new scheme specific MIB module's name (e.g., G998x MIB).
Any scheme specific aspect of an existing GBOND MIB object SHALL be described in the corresponding G998x MIB module, to prevent an unnecessary reissue of the GBOND MIB module.
For example, an exact definition of an Errored Second (ES) or a Severely Errored Second (SES) can be bonding scheme specific; see the definitions for the gBondPortPmCurES and gBondPortPmCurSES objects.
The main management objects defined in the GBOND MIB module are split into 2 groups, structured as recommended by RFC 4181
gBondPort containing objects for configuration, capabilities, status, historical Performance Monitoring, and notifications, common to all G.Bond ports (GBS).
gBondBce containing a single common object for configuration of the remote discovery code per BCE.
Note that the rest of the objects for BCE configuration, capabilities, status, and notifications are located in relevant xDSL line MIB modules as well as in the bonding scheme specific MIB modules.
The OPTIONAL Performance Monitoring counters, thresholds, and history buckets (interval counters) defined in [TR 159] are implemented using the textual conventions defined in the HC PerfHist TC MIB [RFC3705].
The HC PerfHist TC MIB defines 64 bit versions of the textual conventions found in the PerfHist TC MIB [RFC3593].
The agent SHOULD align the beginning of each interval to a fifteen  minute boundary of a wall clock.
Likewise, the beginning of each one day interval SHOULD be aligned with the start of a day.
The rationale behind this is to simplify collection and analysis of Performance Monitoring (PM) from multiple agents by a network management system (NMS)   each PM interval can be "time stamped" using the gBond IntervalIndex object, from the fact that the 1 day interval starts at 00:00 and the 15 minute intervals are aligned with each 1/4 hour and the network wide "wall clock", typically distributed via NTP or the Simple Network Time Protocol (SNTP)
If the agent does not have access to the wall clock, a local clock can be used.
In this case, as well as when coping with multiple time zones, the NMS would have to correlate the difference between the agent's local clock (available, for example, via the hrSystemDate object from the HOST RESOURCES MIB [RFC2790]) and the wall clock.
Counters are not reset when a GBS is re initialized, but rather only when the agent is reset or re initialized.
Note that the accumulation of certain performance events for a monitored entity is inhibited (counting stops) during periods of service unavailability on that monitored entity.
The DESCRIPTION clause of Performance Monitoring counters in this MIB module specifies which of the counters are inhibited during periods of service unavailability.
Mapping of Broadband Forum TR 159 Managed Objects
This section contains the mapping between relevant managed objects (attributes) defined in [TR 159] and managed objects defined in this document and in associated MIB modules, i.e.,
Mapping of TR 159 Managed Objects 6.
Multi Pair Bonding MIB Definitions
The GBOND MIB module IMPORTS objects from SNMPv2
CONF [RFC2580], SNMP FRAMEWORK MIB [RFC3411], IF MIB [RFC2863], and HC PerfHist TC MIB
The module has been structured as recommended by [RFC4181].
IMPORTS MODULE IDENTITY, OBJECT TYPE, NOTIFICATION TYPE,
TEXTUAL CONVENTION, TruthValue, RowStatus, PhysAddress FROM SNMPv2
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
MIB Working Group" CONTACT INFO "WG charter:
http://datatracker.ietf.org/wg/adslmib/charter/ Mailing Lists: General Discussion:
In Body: subscribe your email address Chair:
Hasivim St. Petach Tikva  4951169
972 3 926 8421 EMail:
Bazel St., P.O.B. 10173 Petach Tikva  49103
Israel Phone:  972 3 924 3491 EMail:
Hasivim St. Petach Tikva  4951169
972 3 926 6258 EMail: moti.morgenstern@ecitele.com" DESCRIPTION "
The objects in this MIB module are used to manage the multi pair bonded xDSL interfaces, as defined in ITU T Recommendations G.998.1, G.998.2, and G.998.3.
This MIB module MUST be used in conjunction with a bonding scheme specific MIB module, that is, G9981 MIB, G9982 MIB, or G9983 MIB.
The following references are used throughout this MIB module:
[G.998.1] refers to: ITU T Recommendation G.998.1: 'ATM based multi pair bonding', January 2005.
[G.998.2] refers to: ITU T Recommendation
G.998.2: 'Ethernet based multi pair bonding', January 2005.
[G.998.3] refers to: ITU T Recommendation G.998.3: 'Multi pair bonding using time division inverse multiplexing', January 2005.
[TR 159] refers to: Broadband Forum Technical Report: 'Management Framework for xDSL Bonding', December 2008.
Naming Conventions: BCE   Bonding Channel Entity BTU   Bonding Terminating Unit BTU C Bonding Terminating Unit, CO side BTU R Bonding Terminating Unit, Remote Terminal (CPE)
side CO    Central Office CPE   Customer Premises Equipment GBS
Generic Bonding Sub layer PM    Performance Monitoring SNR   Signal to Noise Ratio
(c) 2013 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)."
"This textual convention defines a range of values that may be set in a fault threshold alarm control for a 1 day Performance Monitoring interval.
As the number of seconds in a 1 day interval numbers at most 86400, objects of this type may have a range of 0...86400, where the value of 0 disables the alarm."
"This notification indicates that the G.Bond port's upstream data rate has reached/dropped below or exceeded the low upstream rate threshold, specified by gBondPortConfThreshLowUpRate.
This notification MAY be sent for the  O subtype ports while the port is 'up', on the crossing event in both directions: from normal (rate is above the threshold) to low (rate equals the threshold or is below it) and from low to normal.
This notification is not applicable to the  R subtypes.
It is RECOMMENDED that a small debouncing period of 2.5 sec, between the detection of the condition and notification, be implemented to prevent simultaneous LinkUp/LinkDown and gBondLowUpRateCrossing notifications from being sent.
The adaptive nature of the G.Bond technology allows the port to adapt itself to the changes in the copper environment; e.g., an impulse noise, alien crosstalk, or a micro interruption may temporarily drop one or more BCEs in the aggregation group, causing a rate degradation of the aggregated G.Bond link.
The dropped BCEs would then try to re initialize, possibly at a lower rate than before, adjusting the rate to provide the required target SNR margin.
Generation of this notification is controlled by the gBondPortConfLowRateCrossingEnable object.
This object maps to the TR 159 notification nGroupLowUpRateCrossing.
"This notification indicates that the G.Bond port's downstream data rate has reached/dropped below or exceeded the low downstream rate threshold, specified by gBondPortConfThreshLowDnRate.
This notification MAY be sent for the  O subtype ports while the port is 'up', on the crossing event in both directions: from normal (rate is above the threshold) to low (rate equals the threshold or is below it) and from low to normal.
This notification is not applicable to the  R subtypes.
It is RECOMMENDED that a small debouncing period of 2.5 sec, between the detection of the condition and notification, be implemented to prevent simultaneous LinkUp/LinkDown and gBondLowDnRateCrossing notifications from being sent.
The adaptive nature of the G.Bond technology allows the port to adapt itself to the changes in the copper environment; e.g., an impulse noise, alien crosstalk, or a micro interruption may temporarily drop one or more BCEs in the aggregation group, causing a rate degradation of the aggregated G.Bond link.
The dropped BCEs would then try to re initialize, possibly at a lower rate than before, adjusting the rate to provide the required target SNR margin.
Generation of this notification is controlled by the gBondPortConfLowRateCrossingEnable object.
This object maps to the TR 159 notification nGroupLowDownRateCrossing.
"This notification indicates that the Errored Seconds threshold, specified by gBondPortPmTcaProfileThresh15MinES, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh15MinES objects.
This object maps to the TR 159 notification nGroupPerfTca15MinES.
"This notification indicates that the Severely Errored Seconds threshold, specified by gBondPortPmTcaProfileThresh15MinSES, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh15MinSES objects.
This object maps to the TR 159 notification nGroupPerfTca15MinSES.
"This notification indicates that the Unavailable Seconds threshold, specified by gBondPortPmTcaProfileThresh15MinUAS, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh15MinUAS objects.
This object maps to the TR 159 notification nGroupPerfTca15MinUAS.
"This notification indicates that the Errored Seconds threshold, specified by gBondPortPmTcaProfileThresh1DayES, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh1DayES objects.
This object maps to the TR 159 notification nGroupPerfTca1DayES.
"This notification indicates that the Severely Errored Seconds threshold, specified by gBondPortPmTcaProfileThresh1DaySES, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh1DaySES objects.
This object maps to the TR 159 notification nGroupPerfTca1DaySES.
"This notification indicates that the Unavailable Seconds threshold, specified by gBondPortPmTcaProfileThresh1DayUAS, has been reached or exceeded for the GBS port.
Generation of this notification is controlled by the gBondPortConfPmTcaEnable and gBondPortPmTcaProfileThresh1DayUAS objects.
This object maps to the TR 159 notification nGroupPerfTca1DayUAS.
G.Bond Port (GBS) group gBondPortConfTable OBJECT
SEQUENCE OF GBondPortConfEntry MAX ACCESS
current DESCRIPTION "Table for configuration of G.Bond GBS ports.
Entries in this table MUST be maintained in a persistent manner."
"An entry in the G.Bond Port Configuration table.
Each entry represents a G.Bond port indexed by the ifIndex.
Note that a G.Bond GBS port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.
A desired bonding scheme for a G.Bond GBS port.
the port not to use bonding (only on a single BCE G.998.2 GBS)
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), if the link is 'up' or initializing.
Attempts to change this object to an unsupported bonding scheme (see gBondPortCapSchemesSupported) SHALL be rejected (in the case of SNMP, with the error wrongValue).
Setting this object to the value of 'none' must be rejected for GBS ports with multiple BCEs (with the error inconsistentValue).
This object maps to the TR 159 attribute aGroupAdminBondScheme.
A desired bonding scheme for a peer (link partner) G.Bond port (GBS).
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), if the link is 'up' or initializing.
Attempts to change this object to an unsupported bonding scheme (see gBondPortCapPeerSchemesSupported) SHALL be rejected (in the case of SNMP, with the error wrongValue).
Setting this object to the value of 'none' must be rejected for GBS ports with multiple BCEs (with the error inconsistentValue).
This object maps to the TR 159 attribute aGroupPeerAdminBondScheme.
" REFERENCE "[TR 159], Section 5.5.1.7; RFC 2863,
MAX ACCESS  read write STATUS
A discovery code of the G.Bond port (GBS).
A unique 6 octet long code used by the Discovery function.
This object MUST be instantiated for the  O subtype GBS before write operations on the gBondBceConfRemoteDiscoveryCode
(Set if Clear and Clear if Same)
are performed by BCEs associated with the GBS.
The initial value of this object for  R subtype ports after reset is all zeroes.
For  R subtype ports, the value of this object cannot be changed directly.
This value may be changed as a result of a write operation on the gBondBceConfRemoteDiscoveryCode object of a remote BCE of  O subtype, connected to one of the local BCEs associated with the GBS.
Discovery MUST be performed when the link is administratively 'down', as indicated by the ifAdminStatus object in the IF MIB.
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), if the link is 'up' or initializing.
This object maps to the TR 159 attribute aGroupDiscoveryCode.
" REFERENCE "[TR 159], Section 5.5.1.20; [802.3], Sections 61.2.2.8.3, 61.2.2.8.4, 45.2.6.6.1, 45.2.6.8, 61A.2; RFC 2863,
{ gBondPortConfEntry 3 } gBondPortConfTargetUpDataRate  OBJECT
A desired G.Bond port data rate in the upstream direction, in Kbps, to be achieved during initialization, under restrictions placed upon the member BCEs by their respective configuration settings.
This object represents a sum of individual BCE upstream data rates, modified to compensate for fragmentation and encapsulation overhead (e.g., for an Ethernet service, the target data rate of 10 Mbps SHALL allow lossless transmission of full duplex 10 Mbps Ethernet frame stream with minimal inter frame gap).
Note that the target upstream data rate may not be achieved during initialization (e.g., due to unavailability of required BCEs) or the initial bandwidth could deteriorate, so that the actual upstream data rate (gBondPortStatUpDataRate) could be less than gBondPortConfTargetUpDataRate.
The value is limited above by 10 Gbps, to accommodate very high speed bonded xDSL interfaces (e.g., 32 x 100 Mbps).
The value between 1 and 10000000 indicates that the total upstream data rate of the G.Bond port after initialization SHALL be equal to the target data rate or less, if the target upstream data rate cannot be achieved under the restrictions configured for BCEs.
In cases where the copper environment allows a higher upstream data rate to be achieved than that specified by this object, the excess capability SHALL be either converted to an additional SNR margin or reclaimed by minimizing transmit power.
The value of 0 means that the target data rate is not fixed and SHALL be set to the maximum attainable rate during initialization (best effort), under specified spectral restrictions and with a desired SNR margin per BCE.
This object is read write for the  O subtype G.Bond ports.
It is irrelevant for the  R subtypes
attempts to read or change this object for such ports MUST be rejected (in the case of SNMP, with the error inconsistentValue).
Changing of the target upstream data rate MUST be performed when the link is administratively 'down', as indicated by the ifAdminStatus object in the IF MIB.
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), if the link is 'up' or initializing.
This object maps to the TR 159 attribute aGroupTargetUpRate.
A desired G.Bond port data rate in the downstream direction, in Kbps, to be achieved during initialization, under restrictions placed upon the member BCEs by their respective configuration settings.
This object represents a sum of individual BCE downstream data rates, modified to compensate for fragmentation and encapsulation overhead (e.g., for an Ethernet service, the target data rate of 10 Mbps SHALL allow lossless transmission of full duplex 10 Mbps Ethernet frame stream with minimal inter frame gap).
Note that the target downstream data rate may not be achieved during initialization (e.g., due to unavailability of required BCEs) or the initial bandwidth could deteriorate, so that the actual downstream data rate (gBondPortStatDnDataRate) could be less than gBondPortConfTargetDnDataRate.
The value is limited above by 10 Gbps, to accommodate very high speed bonded xDSL interfaces (e.g., 32 x 100 Mbps).
The value between 1 and 10000000 indicates that the total downstream data rate of the G.Bond port after initialization SHALL be equal to the target data rate or less, if the target downstream data rate cannot be achieved under the restrictions configured for BCEs.
In cases where the copper environment allows a higher downstream data rate to be achieved than that specified by this object, the excess capability SHALL be either converted to an additional SNR margin or reclaimed by minimizing transmit power.
The value of 0 means that the target data rate is not fixed and SHALL be set to the maximum attainable rate during initialization (best effort), under specified spectral restrictions and with a desired SNR margin per BCE.
This object is read write for the  O subtype G.Bond ports.
It is irrelevant for the  R subtypes
attempts to read or change this object for such ports MUST be rejected (in the case of SNMP, with the error inconsistentValue).
Changing of the target downstream data rate MUST be performed when the link is administratively 'down', as indicated by the ifAdminStatus object in the IF MIB.
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), if the link is 'up' or initializing.
This object maps to the TR 159 attribute aGroupTargetDownRate.
"This object configures the G.Bond port low upstream rate crossing alarm threshold.
When the current value of gBondPortStatUpDataRate for this port reaches/drops below or exceeds this threshold, a gBondLowUpRateCrossing notification MAY be generated if enabled by gBondPortConfLowRateCrossingEnable.
This object is read write for the  O subtype G.Bond ports.
It is irrelevant for the  R subtypes
attempts to read or change this object for such ports MUST be rejected (in the case of SNMP, with the error inconsistentValue).
This object maps to the TR 159 attribute aGroupthreshLowUpRate.
"This object configures the G.Bond port low downstream rate crossing alarm threshold.
When the current value of gBondPortStatDnDataRate for this port reaches/drops below or exceeds this threshold, a gBondLowDnRateCrossing notification MAY be generated if enabled by gBondPortConfLowRateCrossingEnable.
This object is read write for the  O subtype G.Bond ports.
It is irrelevant for the  R subtypes
attempts to read or change this object for such ports MUST be rejected (in the case of SNMP, with the error inconsistentValue).
This object maps to the TR 159 attribute aGroupThreshLowDownRate.
"Indicates whether gBondLowUpRateCrossing and gBondLowDnRateCrossing notifications should be generated for this interface.
A value of true(1) indicates that the notifications are enabled.
A value of false(2) indicates that the notifications are disabled.
This object is read write for the  O subtype G.Bond ports.
It is irrelevant for the  R subtypes
attempts to read or change this object for such ports MUST be rejected (in the case of SNMP, with the error inconsistentValue).
This object maps to the TR 159 attribute aGroupLowRateCrossingEnable.
MAX ACCESS  read write STATUS
"The value of this object is the index of the row in the GBS Port Alarm Configuration Profile table for Performance Monitoring Threshold Crossing Alerts   the gBondPortAlarmConfProfileTable, which applies to this GBS port."
"Indicates whether the gBondPerfTca Crossing set of notifications should be generated for this interface.
A value of true(1) indicates that the notifications are enabled.
A value of false(2) indicates that the notifications are disabled.
This object maps to the TR 159 attribute aGroupPerfTcaEnable.
current DESCRIPTION "Table for capabilities of G.Bond ports.
Entries in this table MUST be maintained in a persistent manner."
An entry in the G.Bond Port Capability table.
Each entry represents a G.Bond port indexed by the ifIndex.
Note that a G.Bond GBS port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.
Bonding capability of the G.Bond port (GBS).
This is a read only bitmap of the possible bonding schemes supported by the GBS.
The various bit positions are: none(0)
GBS is capable of bonding bypass on a single BCE G.998.2
GBS is capable of G.998.1 bonding
GBS is capable of G.998.2 bonding g9983(3)
GBS is capable of G.998.3 bonding Note that for ports supporting multiple bonding schemes, the actual administrative scheme is set via gBondPortConfAdminScheme object.
The current operating bonding scheme is reflected in the gBondPortStatOperScheme object.
This object maps to the TR 159 attribute aGroupBondSchemesSupported.
Bonding capability of the peer G.Bond port (GBS).
This is a read only bitmap of the possible bonding schemes supported by the link partner GBS.
The various bit positions are: none(0)
peer GBS does not support bonding, or the peer unit could not be reached, or peer GBS is capable of bonding bypass on a single BCE G.998.2
The current operating bonding scheme is reflected in the gBondPortStatPeerOperScheme object.
This object maps to the TR 159 attribute aGroupPeerBondSchemesSupported.
The number of BCEs currently assigned to a particular G.Bond port (gBondPortStatNumBCEs) is never greater than gBondPortCapCapacity.
This object maps to the TR 159 attribute aGroupCapacity.
A value of 0 is returned when peer Bonding capacity is unknown (peer cannot be reached).
This object maps to the TR 159 attribute aGroupPeerCapacity.
SEQUENCE OF GBondPortStatEntry MAX ACCESS
"This table provides overall status information of G.Bond ports, complementing the generic status information from the ifTable of the IF MIB.
Additional status information about connected BCEs is available from the relevant line MIBs.
This table contains live data from the equipment.
As such, it is NOT persistent."
An entry in the G.Bond Port Status table.
Each entry represents a G.Bond port indexed by the ifIndex.
Note that a G.Bond GBS port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.
Unsigned32 } gBondPortStatOperScheme  OBJECT TYPE SYNTAX
Current operating bonding scheme of a G.Bond port.
G.998.3 bonding This object maps to the TR 159 attribute aGroupOperBondScheme.
Current operating bonding scheme of a G.Bond port link partner.
G.998.3 bonding This object maps to the TR 159 attribute aGroupPeerOperBondScheme.
"A current G.Bond port operational data rate in the upstream direction, in bps.
This object represents an estimation of the sum of individual BCE upstream data rates, modified to compensate for fragmentation and encapsulation overhead (e.g., for an Ethernet service, the target data rate of 10 Mbps SHALL allow lossless transmission of full duplex 10 Mbps Ethernet frame stream with minimal inter frame gap).
Note that for symmetrical interfaces, gBondPortStatUpDataRate   gBondPortStatDnDataRate   ifSpeed.
This object maps to the TR 159 attribute aGroupUpRate.
"A current G.Bond port operational data rate in the downstream direction, in bps.
This object represents an estimation of the sum of individual BCE downstream data rates, modified to compensate for fragmentation and encapsulation overhead (e.g., for an Ethernet service, the target data rate of 10 Mbps SHALL allow lossless transmission of full duplex 10 Mbps Ethernet frame stream with minimal inter frame gap).
Note that for symmetrical interfaces, gBondPortStatUpDataRate   gBondPortStatDnDataRate   ifSpeed.
This object maps to the TR 159 attribute aGroupDownRate.
BITS { noPeer(0), peerPowerLoss(1), peerBondSchemeMismatch(2), bceSubTypeMismatch(3), lowRate(4), init(5), ready(6)
"G.Bond (GBS) port fault status.
This is a bitmap of possible conditions.
Peer GBS has indicated impending unit failure due to loss of local power ('Dying Gasp').
peerBondSchemeMismatch Operating bonding scheme of a peer GBS is different from the local one.
Local BCEs in the aggregation group are not of the same sub type, e.g., some BCEs in the local device are  O while others are  R subtype.
The link is initializing, as a result of ifAdminStatus being set to 'up' for a particular BCE or a GBS to which the BCE is connected.
At least one BCE in the aggregation group is detecting handshake tones.
This object is intended to supplement the ifOperStatus object in the IF MIB.
This object maps to the TR 159 attribute aGroupStatus.
" REFERENCE "[TR 159], Section 5.5.1.9
The value of 'subscriber' indicates that the port is designated as ' R' subtype (all BCEs assigned to this port are of subtype ' R').
The value of 'office' indicates that the port is designated as ' O' subtype (all BCEs assigned to this port are of subtype ' O').
The value of 'unknown' indicates that the port has no assigned BCEs yet or that the assigned BCEs are not of the same side (subTypeBCEMismatch).
This object maps to the TR 159 attribute aGroupEnd.
This number is never greater than gBondPortCapCapacity.
This object SHALL be automatically incremented or decremented when a BCE is added or deleted to/from the G.Bond port using the ifStackTable.
This object maps to the TR 159 attribute aGroupNumChannels.
"This table contains current Performance Monitoring (PM) information for a GBS port.
This table contains live data from the equipment and as such is NOT persistent."
An entry in the G.Bond Port PM table.
Each entry represents a G.Bond port indexed by the ifIndex.
Note that a G.Bond GBS port runs on top of a single or multiple BCE port(s), which are also indexed by the ifIndex.
"A count of Errored Seconds (ES) on the GBS since the BTU was last restarted.
An Errored Second for a G.998.x interface is defined as a count of 1 second intervals during which one or more GBS errors are declared.
The errors are specific for each bonding scheme, e.g., lost cells for the ATM bonding lost or discarded (due to an error or a buffer overflow) fragments for the Ethernet bonding
CRC 4, CRC 6, or CRC 8 errors for the TDIM bonding This object is inhibited during Unavailable Seconds (UAS).
This object maps to the TR 159 attribute aGroupPerfES.
A count of Severely Errored Seconds (SES) on the GBS since the BTU was last restarted.
A Severely Errored Second for a G.998.x interface is defined as a count of 1 second intervals during which GBS errors cause at least 1% traffic loss of the nominal bonded link rate or at least 12 ms for the TDM traffic.
The exact definition is specific for each bonding scheme, e.g., 234 lost cells for the ATM bonding with 10 Mbps nominal link rate 60 lost/discarded fragments for the Ethernet bonding with 10 Mbps nominal link rate and fixed 192 byte long fragment size
6 or more CRC 4 errors, one or more CRC 6 errors, or one or more CRC 8 errors for the TDM bonding
This object is inhibited during Unavailable Seconds (UAS).
This object maps to the TR 159 attribute aGroupPerfSES.
A count of Unavailable Seconds (UAS) on the GBS since the BTU was last restarted.
An Unavailable Second for a G.998.x interface is defined as a count of 1 second intervals during which the bonded link is unavailable.
The G.998.x link becomes unavailable at the onset of 10 contiguous SESs.
The 10 SESs are included in the unavailable time.
Once unavailable, the G.998.x line becomes available at the onset of 10 contiguous seconds with no SESs.
The 10 seconds with no SESs are excluded from the unavailable time.
This object maps to the TR 159 attribute aGroupPerfUAS.
"A number of 15 minute intervals for which data was collected.
The value of this object will be 96 or the maximum number of 15 minute history intervals collected by the implementation, unless the measurement was (re)started recently, in which case the value will be the number of complete 15 minute intervals for which there are at least some data.
In certain cases, it is possible that some intervals are unavailable.
In this case, this object reports the maximum interval number for which data is available.
This object maps to the TR 159 attribute aGroupPerf15MinValidIntervals.
"A number of 15 minute intervals for which data was not always available.
The value will typically be zero, except in cases where the data for some intervals are not available.
This object maps to the TR 159 attribute aGroupPerf15MinInvalidIntervals.
"A count of seconds that have elapsed since the beginning of the current 15 minute performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr15MinTimeElapsed.
"A count of Errored Seconds (ES) on the GBS in the current 15 minute performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr15MinES.
A count of Severely Errored Seconds (SES) on the GBS in the current 15 minute performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr15MinSES.
A count of Unavailable Seconds (UAS) on the GBS in the current 15 minute performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr15MinUAS.
"A number of 1 day intervals for which data was collected.
The value of this object will be 7 or the maximum number of 1 day history intervals collected by the implementation, unless the measurement was (re)started recently, in which case the value will be the number of complete 1 day intervals for which there are at least some data.
In certain cases, it is possible that some intervals are unavailable.
In this case, this object reports the maximum interval number for which data is available.
This object maps to the TR 159 attribute aGroupPerf1DayValidIntervals.
"A number of 1 day intervals for which data was not always available.
The value will typically be zero, except in cases where the data for some intervals are not available.
This object maps to the TR 159 attribute aGroupPerf1DayInvalidIntervals.
"A count of seconds that have elapsed since the beginning of the current 1 day performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr1DayTimeElapsed.
"A count of Errored Seconds (ES) on the GBS in the current 1 day performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr1DayES.
A count of Severely Errored Seconds (SES) on the GBS in the current 1 day performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr1DaySES.
A count of Unavailable Seconds (UAS) on the GBS in the current 1 day performance interval.
This object maps to the TR 159 attribute aGroupPerfCurr1DayUAS.
PM history: 15 min buckets gBondPortPm15MinTable OBJECT
SEQUENCE OF GBondPortPm15MinEntry MAX ACCESS
"This table contains historical 15 minute buckets of Performance Monitoring information for a GBS port (a row for each 15 minute interval, up to 96 intervals).
Entries in this table MUST be maintained in a persistent manner."
An entry in the G.Bond Port historical 15 minute PM table.
Each entry represents Performance Monitoring data for a GBS port, indexed by the ifIndex, collected during a particular 15 minute interval, indexed by the gBondPortPm15MinIntervalIndex.
current DESCRIPTION "Performance data interval number.
1 is the most recent previous interval; interval 96 is 24 hours ago.
This object maps to the TR 159 attribute aGroupPerf15MinIntervalNumber.
"A count of seconds over which the performance data was actually monitored.
This value will be the same as the interval duration (900 seconds), except in a situation where performance data could not be collected for any reason."
"A count of Errored Seconds (ES) on the GBS in the 15 minute performance history interval.
This object maps to the TR 159 attribute aGroupPerf15MinIntervalES.
A count of Severely Errored Seconds (SES) on the GBS in the 15 minute performance history interval.
This object maps to the TR 159 attribute aGroupPerf15MinIntervalSES.
A count of Unavailable Seconds (UAS) on the GBS in the current 15 minute performance interval.
This object maps to the TR 159 attribute aGroupPerf15MinIntervalUAS.
"A read only object indicating whether or not this history bucket contains valid data.
A valid bucket is reported as true(1) and an invalid bucket as false(2).
If this history bucket is invalid, the BTU C MUST NOT produce notifications based upon the value of the counters in this bucket.
Note that an implementation may decide not to store invalid history buckets in its database.
In such a case, this object is not required, as only valid history buckets are available while invalid history buckets are simply not in the database.
This object maps to the TR 159 attribute aGroupPerf15MinIntervalValid.
"This table contains historical 1 day buckets of Performance Monitoring information for a GBS port (a row for each 1 day interval, up to 7 intervals).
Entries in this table MUST be maintained in a persistent manner."
An entry in the G.Bond Port historical 1 day PM table.
Each entry represents Performance Monitoring data for a GBS port, indexed by the ifIndex, collected during a particular 1 day interval, indexed by the gBondPortPm1DayIntervalIndex.
current DESCRIPTION "Performance data interval number.
1 is the most recent previous interval; interval 7 is 7 days ago.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalNumber.
"A count of seconds over which the performance data was actually monitored.
This value will be the same as the interval duration (86400 seconds), except in a situation where performance data could not be collected for any reason.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalMoniSecs.
"A count of Errored Seconds (ES) on the GBS in the 1 day performance history interval.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalES.
A count of Severely Errored Seconds (SES) on the GBS in the 1 day performance history interval.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalSES.
A count of Unavailable Seconds (UAS) on the GBS in the current 1 day performance interval.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalUAS.
"A read only object indicating whether or not this history bucket contains valid data.
A valid bucket is reported as true(1) and an invalid bucket as false(2).
If this history bucket is invalid, the BTU C MUST NOT produce notifications based upon the value of the counters in this bucket.
Note that an implementation may decide not to store invalid history buckets in its database.
In such a case, this object is not required, as only valid history buckets are available while invalid history buckets are simply not in the database.
This object maps to the TR 159 attribute aGroupPerf1DayIntervalValid.
Performance Monitoring TCA Configuration profile
"This table supports definitions of Performance Monitoring (PM) Threshold Crossing Alert (TCA) configuration profiles for GBS ports.
Entries in this table MUST be maintained in a persistent manner."
{ gBondPortPM 4 } gBondPortPmTcaProfileEntry OBJECT
An entry in the GBS PM TCA Configuration table.
Each entry corresponds to a single TCA configuration profile.
Each profile contains a set of parameters for setting alarm thresholds for various performance attributes monitored at GBS ports.
Profiles may be created/deleted using the row creation/deletion mechanism via gBondPortPmTcaProfileRowStatus.
If an active entry is referenced via gBondPortConfPmTcaConfProfile, the entry MUST remain active until all references are removed.
A default profile with an index of 'DEFVAL' will always exist, and its parameters will be set to vendor specific values unless otherwise specified in this document.
"This object is a unique index (name) associated with this GBS PM TCA profile."
"A desired threshold for the number of Errored Seconds (ES) within any given 15 minute performance data collection interval.
If the number of ESs in a particular 15 minute collection interval reaches or exceeds this value, a gBondPmTca15MinESCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca15MinESCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold15MinES.
"A desired threshold for the number of Severely Errored Seconds (SES) within any given 15 minute performance data collection interval.
If the number of SESs in a particular 15 minute collection interval reaches or exceeds this value, a gBondPmTca15MinSESCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca15MinSESCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold15MinSES.
"A desired threshold for the number of Unavailable Seconds (UAS) within any given 15 minute performance data collection interval.
If the number of UASs in a particular 15 minute collection interval reaches or exceeds this value, a gBondPmTca15MinUASCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca15MinUASCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold15MinUAS.
"A desired threshold for the number of Errored Seconds (ES) within any given 1 day performance data collection interval.
If the number of ESs in a particular 1 day collection interval reaches or exceeds this value, a gBondPmTca1DayESCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca1DayESCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold1DayES.
"A desired threshold for the number of Severely Errored Seconds (SES) within any given 1 day performance data collection interval.
If the number of SESs in a particular 1 day collection interval reaches or exceeds this value, a gBondPmTca1DaySESCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca1DaySESCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold1DaySES.
"A desired threshold for the number of Unavailable Seconds (UAS) within any given 1 day performance data collection interval.
If the number of UASs in a particular 1 day collection interval reaches or exceeds this value, a gBondPmTca1DayUASCrossing notification MAY be generated if enabled by gBondPortConfPmTcaEnable.
At most one notification can be sent per interval.
Setting this attribute to zero (default) effectively disables the gBondPmTca1DayUASCrossing notification.
This object maps to the TR 159 attribute aGroupPerfThreshold1DayUAS.
"This object controls the creation, modification, or deletion of the associated entry in the gBondPortPmTcaProfileTable per the semantics of RowStatus.
If an 'active' entry is referenced via gBondPortConfPmTcaConfProfile instance(s), the entry MUST remain 'active'.
An 'active' entry SHALL NOT be modified.
In order to modify an existing entry, it MUST be taken out of service (by setting this object to 'notInService'), modified, and set to 'active' again."
current DESCRIPTION "Table for configuration of G.Bond common aspects for the Bonding Channel Entity (BCE) ports (modems/channels).
Entries in this table MUST be maintained in a persistent manner."
{ gBondBce 1 } gBondBceConfEntry OBJECT
An entry in the G.Bond BCE Configuration table.
Each entry represents common aspects of a G.Bond BCE port indexed by the ifIndex.
Note that a G.Bond BCE port can be stacked below a single GBS port, also indexed by the ifIndex, possibly together with other BCE ports if bonding is enabled.
MAX ACCESS  read write STATUS
A remote discovery code of the BCE port at the CO.
A 6 octet long discovery code of the peer GBS connected via the BCE.
Reading this object results in a Discovery Get operation.
Setting this object to all zeroes results in a Discovery Clear if Same operation (the value of gBondPortConfDiscoveryCode at the peer GBS SHALL be the same as gBondPortConfDiscoveryCode of the local GBS associated with the BCE for the operation to succeed).
Writing a non zero value to this object results in a Discovery Set if Clear operation.
A zero length octet string SHALL be returned on an attempt to read this object when bonding is not enabled.
This object is irrelevant in BCE R port subtypes (CPE side): in this case, a zero length octet string SHALL be returned on an attempt to read this object.
An attempt to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue).
Discovery MUST be performed when the link is 'down'.
Attempts to change this object MUST be rejected (in the case of SNMP, with the error inconsistentValue), If the link is 'up' or initializing.
This object maps to the TR 159 attribute aLineRemoteDiscoveryCode.
A collection of objects representing management information common to all types of G.Bond ports."
This group supports notifications of significant conditions (non PM threshold crossing alerts) associated with G.Bond ports."
This group supports notifications of Performance Monitoring Threshold Crossing Alerts associated with G.Bond ports."
"The compliance statement for G.Bond interfaces.
Compliance with the following external compliance statements is REQUIRED:
DESCRIPTION "Support for all bonding scheme types is not required.
However, at least one value SHALL be supported."
DESCRIPTION "Support for all bonding scheme types is not required.
However, at least one value SHALL be supported."
IANA Maintained G.Bond TC Definitions
The IANA GBOND TC MIB module IMPORTS objects from SNMPv2 SMI [RFC2578] and SNMPv2 TC [RFC2579].
BEGIN IMPORTS MODULE IDENTITY, mib 2
FROM SNMPv2 SMI TEXTUAL CONVENTION FROM SNMPv2 TC
310 301 5800 EMail: iana@iana.org
This MIB module defines IANAgBondScheme and IANAgBondSchemeList TEXTUAL CONVENTIONs, specifying enumerated values of the gBondPortConfAdminScheme, gBondPortConfPeerAdminScheme, gBondPortStatOperScheme, gBondPortStatPeerOperScheme, gBondPortCapSchemesSupported, and gBondPortCapPeerSchemesSupported objects, respectively, as defined in the GBOND MIB.
It is intended that each new bonding scheme defined by the ITU T Q4/SG15 working group and approved for publication in a revision of the ITU T G.998 specification will be added to this MIB module, provided that it is suitable for being managed by the base objects in the GBOND MIB.
An Expert Review, as defined in RFC 5226, is REQUIRED for such additions.
The following references are used throughout this MIB module:
[G.998.1] refers to: ITU T Recommendation G.998.1: 'ATM based multi pair bonding', January 2005.
[G.998.2] refers to: ITU T Recommendation
G.998.2: 'Ethernet based multi pair bonding', January 2005.
[G.998.3] refers to: ITU T Recommendation G.998.3: 'Multi pair bonding using time division inverse multiplexing', January 2005.
Naming Conventions: BCE   Bonding Channel Entity GBS   Generic Bonding Sub layer
These references should be updated as appropriate when a new bonding scheme is added to this MIB module.
Copyright (c) 2013 IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)."
"This textual convention defines a bitmap of possible ITU T G.998 (G.Bond) bonding schemes.
Currently, the following values are defined for the corresponding bonding schemes:
G.998.1 (G.Bond/ATM; see the G9981 MIB)
G.998.2 (G.Bond/Ethernet; see the G9982 MIB)
G.998.3 (G.Bond/TDIM; see the G9983 MIB)
An additional value of none(0) can be returned as a result of a GET operation when a value of the object cannot be determined (for example, a peer GBS cannot be reached), the port does not support any kind of bonding, or when a single BCE G.998.2 GBS supports bonding (frame fragmentation/reassembly) bypass.
"This textual convention defines ITU T G.998 bonding scheme values.
no bonding (e.g., on a single BCE G.998.2 GBS) or unknown g9981(1)
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
Changing of the gBondPortConfAdminScheme object may lead to a potential locking of the link, if the peer device does not support the desired bonding scheme.
Changing of the gBondPortConfDiscoveryCode object, before the discovery operation, may lead to a wrongful discovery   for example, when two CO ports are connected to the same multi channel RT port, while both CO ports have the same discovery register value.
Changing of the target upstream/downstream data rate via gBondPortConfTargetUpDataRate/gBondPortConfTargetDnDataRate may lead to anything from degradation of link quality and data rate to a complete link initialization failure, as the ability of a G.Bond port to support a particular configuration depends on the copper environment.
Activation of a specific line/channel may cause a severe degradation of service for another G.Bond port, whose channel(s) may be affected by the cross talk from the newly activated channel.
Removal of a channel from an operationally 'up' G.Bond port, aggregating several channels, may cause degradation of the port's data rate.
Some of the readable objects in this MIB module (i.e., those with MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments since, collectively, they provide information about the performance of network interfaces and can reveal some aspects of their configuration.
In particular, since a bonded xDSL port can be comprised of multiple Unshielded Twisted Pair (UTP) voice grade copper, located in the same bundle with other pairs belonging to another operator/customer, it is theoretically possible to eavesdrop on a G.Bond transmission, simply by "listening" to cross talk from the bonded pairs, especially if the operating parameters of the G.Bond link in question are known.
It is thus important to control even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
gBondPortStatTable objects in this table provide status information for the G.Bond port, which may aid in identification of the pairs belonging to the bonded port and eavesdropping on the traffic over that port.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
Implementations SHOULD provide the security features described by the SNMPv3 framework (see [RFC3410]), and implementations claiming compliance to the SNMPv3 standard MUST include full support for authentication and privacy via the User based Security Model (USM)
[RFC3414] with the AES cipher algorithm [RFC3826].
Implementations MAY also provide support for the Transport Security Model (TSM)
[RFC5591] in combination with a secure transport such as SSH [RFC5592] or TLS/DTLS [RFC6353].
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
Three new values of IANAifType   g9981(263), g9982(264), and g9983(265)   have been allocated by IANA <http://www.iana.org/> in the IANAifType MIB module [IANAifType MIB].
An object identifier for gBondMIB MODULE IDENTITY has been allocated by IANA in the MIB 2 transmission sub tree (211).
This document defines the first version of the IANA maintained IANA  GBOND TC MIB module.
It is intended that each new G.998 bonding scheme defined by the ITU T Q4/SG15 working group and approved for publication in a revision of ITU T G.998.x will be added to the IANA  maintained MIB module, provided that it is suitable for being managed by the base objects in the GBOND MIB module.
An object identifier for ianaGBondTcMIB MODULE IDENTITY has been allocated by IANA in the MIB 2 transmission sub tree (215).
For each new bonding scheme added, a short description of the bonding protocol and, wherever possible, a reference to a publicly available specification SHOULD be specified.
An Expert Review, as defined in [RFC5226], is REQUIRED for each modification.
