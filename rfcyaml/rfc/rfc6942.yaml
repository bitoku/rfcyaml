- contents:
  - '     Diameter Support for the EAP Re-authentication Protocol (ERP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The EAP Re-authentication Protocol (ERP) defines extensions to the\n
    \  Extensible Authentication Protocol (EAP) to support efficient\n   re-authentication
    between the peer and an EAP Re-authentication (ER)\n   server through a compatible
    authenticator.  This document specifies\n   Diameter support for ERP.  It defines
    a new Diameter ERP application\n   to transport ERP messages between an ER authenticator
    and the ER\n   server, and a set of new Attribute-Value Pairs (AVPs) that can
    be\n   used to transport the cryptographic material needed by the\n   re-authentication
    server.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6942.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n     2.1.  Requirements Language . . . . . . . . . . . . . . . . .
    .   4\n   3.  Assumptions . . . . . . . . . . . . . . . . . . . . . . . . .   4\n
    \  4.  Protocol Overview . . . . . . . . . . . . . . . . . . . . . .   5\n   5.
    \ Bootstrapping the ER Server . . . . . . . . . . . . . . . . .   6\n     5.1.
    \ Bootstrapping during the Initial EAP Authentication . . .   6\n     5.2.  Bootstrapping
    during the First Re-authentication  . . . .   8\n   6.  Re-authentication . .
    . . . . . . . . . . . . . . . . . . . .  11\n   7.  Application Id  . . . . .
    . . . . . . . . . . . . . . . . . .  12\n   8.  AVPs  . . . . . . . . . . . .
    . . . . . . . . . . . . . . . .  13\n     8.1.  ERP-RK-Request AVP  . . . . .
    . . . . . . . . . . . . . .  13\n     8.2.  ERP-Realm AVP . . . . . . . . . .
    . . . . . . . . . . . .  13\n     8.3.  Key AVP . . . . . . . . . . . . . . .
    . . . . . . . . . .  13\n       8.3.1.  Key-Type AVP  . . . . . . . . . . . .
    . . . . . . . .  13\n       8.3.2.  Keying-Material AVP . . . . . . . . . . .
    . . . . . .  13\n       8.3.3.  Key-Name AVP  . . . . . . . . . . . . . . . .
    . . . .  14\n       8.3.4.  Key-Lifetime AVP  . . . . . . . . . . . . . . . .
    . .  14\n   9.  Result-Code AVP Values  . . . . . . . . . . . . . . . . . . .
    \ 14\n     9.1.  Permanent Failures  . . . . . . . . . . . . . . . . . . .  14\n
    \  10. IANA Considerations . . . . . . . . . . . . . . . . . . . . .  14\n     10.1.
    \ Diameter Application Identifier  . . . . . . . . . . . .  14\n     10.2.  New
    AVPs . . . . . . . . . . . . . . . . . . . . . . . .  15\n     10.3.  New Permanent
    Failures Result-Code AVP Values  . . . . .  15\n   11. Security Considerations
    . . . . . . . . . . . . . . . . . . .  15\n   12. Contributors  . . . . . . .
    . . . . . . . . . . . . . . . . .  16\n   13. Acknowledgements  . . . . . . .
    . . . . . . . . . . . . . . .  16\n   14. References  . . . . . . . . . . . .
    . . . . . . . . . . . . .  16\n     14.1.  Normative References . . . . . . .
    . . . . . . . . . . .  16\n     14.2.  Informative References . . . . . . . .
    . . . . . . . . .  17\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Cao, et al. [RFC6696] defines the EAP Re-authentication
    Protocol\n   (ERP).  It consists of the following steps:\n   Bootstrapping\n      A
    root key for re-authentication is derived from the Extended\n      Master Session
    Key (EMSK) created during EAP authentication\n      [RFC5295].  This root key
    is transported from the EAP server to\n      the ER server.\n   Re-authentication\n
    \     A one-round-trip exchange between the peer and the ER server,\n      resulting
    in mutual authentication.  To support the EAP\n      re-authentication functionality,
    ERP defines two new EAP codes --\n      EAP-Initiate and EAP-Finish.\n   This
    document defines how Diameter transports the ERP messages during\n   the re-authentication
    process.  For this purpose, we define a new\n   Application Identifier for ERP
    and reuse the Diameter EAP commands\n   Diameter-EAP-Request (DER) / Diameter-EAP-Answer
    (DEA).\n   This document also discusses the distribution of the root key during\n
    \  bootstrapping, in conjunction with either the initial EAP\n   authentication
    (implicit bootstrapping) or the first ERP exchange\n   (explicit bootstrapping).
    \ Security considerations for this key\n   distribution are detailed in Section
    7.4 of Salowey, et al.\n   [RFC5295].\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses terminology defined in Aboba, et al. [RFC3748],\n
    \  Salowey, et al. [RFC5295], Cao, et al. [RFC6696], and Eronen, et al.\n   [RFC4072].\n
    \  Following RFC 5295, the term \"domain\" herein refers to a key\n   management
    domain unless otherwise qualified.  Similarly, the terms\n   \"home domain\" and
    \"local domain\" have the same meaning here as in RFC\n   6696.\n   The re-authentication
    Domain-Specific Root Key (rDSRK) is a\n   re-authentication Root Key (rRK) [RFC6696]
    derived from the Domain-\n   Specific Root Key (DSRK) instead of the EMSK.\n   \"Root
    key\" (RK) or \"bootstrapping material\" refers to the rRK or\n   rDSRK derived
    from an EMSK, depending on whether the ER server is\n   located in the home or
    a foreign domain.\n   We use the notation \"ERP/DER\" and \"ERP/DEA\" in this
    document to refer\n   to Diameter-EAP-Request and Diameter-EAP-Answer commands
    with the\n   Application Id set to <Diameter ERP> (Section 10.1); the same\n   commands
    are denoted \"EAP/DER\" and \"EAP/DEA\" when the Application Id\n   in the message
    is set to <Diameter EAP> [RFC4072].\n"
  - contents:
    - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 2.1.  Requirements Language
  title: 2.  Terminology
- contents:
  - "3.  Assumptions\n   This document assumes the existence of, at most, one logical
    ER\n   server entity in a given domain.  If several physical servers are\n   deployed
    for robustness, a replication mechanism must be deployed to\n   synchronize the
    ERP state (e.g., root keys) between these servers.\n   Any such replication mechanism
    is outside the scope of this document.\n   If multiple ER servers are deployed
    in the domain, we assume that\n   they can be used interchangeably.  If multiple
    ER servers are\n   deployed across multiple domains, we assume that only one ER
    server,\n   topologically close to the peer, is involved in ERP, with distance\n
    \  being measured in terms of Diameter hops.\n   This document also assumes the
    existence of, at most, one EAP server\n   entity in the home domain.  In case
    of multiple physical home EAP\n   servers, if the ER server wants to reach the
    same home EAP server,\n   the ER server SHOULD cache the Destination-Host AVP
    corresponding to\n   the home EAP server it requests.\n   In general, it is assumed
    that key management domain names and\n   Diameter realm names are identical for
    any given domain/realm.\n"
  title: 3.  Assumptions
- contents:
  - "4.  Protocol Overview\n   The following figure illustrates the components involved
    in ERP and\n   their interactions.\n                           Diameter                    +--------+\n
    \          +-------------+   ERP   +-----------+  (*)  |  Home  |\n   Peer <->|Authenticator|<=======>|
    ER server | <---> |  EAP   |\n           +-------------+         +-----------+
    \      | server |\n                                                       +--------+\n
    \  (*) Diameter EAP application; explicit bootstrapping scenario only.\n                      Figure
    1: Diameter ERP Overview\n   The ER server is located either in the home domain
    (same as the EAP\n   server) or in the local domain (same as the authenticator,
    when it\n   differs from the home domain).\n   When the peer initiates an ERP
    exchange, the authenticator creates a\n   DER message [RFC4072].  The Application
    Id of the message is set to\n   that of the Diameter ERP application (Section
    10.1) in the message.\n   The generation of the ERP/DER message is detailed in
    Section 6.\n   If there is an ER server in the same domain as the authenticator\n
    \  (i.e., the local domain), Diameter routing MUST be configured so that\n   this
    ERP/DER message reaches that server, even if the Destination-\n   Realm is not
    the same as the local domain.\n   If there is no local ER server, the message
    is routed according to\n   its Destination-Realm AVP content, extracted from the
    realm component\n   of the keyName-NAI attribute.  As specified in RFC 6696, this
    realm\n   is the home domain of the peer in the case of bootstrapping exchange\n
    \  ('B' flag is set in ERP message) or the domain of the bootstrapped ER\n   server
    otherwise.\n   If no ER server is available in the home domain either, the ERP/DER\n
    \  message cannot be delivered and an error, DIAMETER_UNABLE_TO_DELIVER,\n   MUST
    be generated, as specified in RFC 6733, and returned to the\n   authenticator.
    \ The authenticator MAY cache this information (with\n   limited duration) to
    avoid further attempts to execute ERP with this\n   realm.  It MAY also fallback
    to full EAP authentication to\n   authenticate the peer.\n   When an ER server
    receives the ERP/DER message, it searches its local\n   database for a valid,
    unexpired root key matching the keyName part of\n   the User-Name AVP.  If such
    key is found, the ER server processes the\n   ERP message, as described in RFC
    6696, then creates the ERP/DEA\n   answer, as described in Section 6.  The re-authentication
    Master\n   Session Key (rMSK) is included in this answer.\n   Finally, the authenticator
    extracts the rMSK from the ERP/DEA, as\n   described in RFC 6696, and forwards
    the content of the EAP-Payload\n   AVP, the EAP-Finish/Re-auth message, to the
    peer.\n   The ER server may or may not possess the root key in its local\n   database.
    \ If the EAP-Initiate/Re-auth message has its 'B' flag set\n   (bootstrapping
    exchange) and the ER server possesses the root key,\n   the ER server SHOULD respond
    directly to the peer that initiated the\n   ERP exchange.  Otherwise, the ER server
    SHOULD act as a proxy and\n   forward the message to the home EAP server after
    changing its\n   Application Id to Diameter EAP and adding the ERP-RK-Request
    AVP to\n   request the root key.  See Section 5 for more detail on this process.\n"
  title: 4.  Protocol Overview
- contents:
  - "5.  Bootstrapping the ER Server\n   The bootstrapping process involves the home
    EAP server and the ER\n   server, but also impacts the peer and the authenticator.
    \ In ERP, the\n   peer must derive the same keying material as the ER server.
    \ To\n   achieve this, it must learn the domain name of the ER server.  How\n
    \  this information is acquired is outside the scope of this\n   specification,
    but the authenticator might be configured to advertise\n   this domain name, especially
    in the case of re-authentication after a\n   handover.\n   The bootstrapping of
    an ER server with a given root key happens\n   either during the initial EAP authentication
    of the peer when the\n   EMSK -- from which the root key is derived -- is created,
    during the\n   first re-authentication, or sometime between those events.  We
    only\n   consider the first two possibilities in this specification, in the\n
    \  following subsections.\n"
  - contents:
    - "5.1.  Bootstrapping during the Initial EAP Authentication\n   Bootstrapping
      the ER server during the initial EAP authentication\n   (also known as implicit
      bootstrapping) offers the advantage that the\n   server is immediately available
      for re-authentication of the peer,\n   thus minimizing the re-authentication
      delay.  On the other hand, it\n   is possible that only a small number of peers
      will use\n   re-authentication in the local domain.  Deriving and caching key\n
      \  material for all the peers (for example, for the peers that do not\n   support
      ERP) is a waste of resources and should be avoided.\n   To achieve implicit
      bootstrapping, the ER server acts as a Diameter\n   EAP Proxy, and Diameter
      routing MUST be configured so that Diameter\n   EAP application messages are
      routed through this proxy.  The figure\n   below illustrates this mechanism.\n
      \                           ER server &\n   Authenticator             EAP Proxy
      \              Home EAP server\n   =============            ===========              ===============\n
      \       ------------------------->\n            Diameter EAP/DER\n             (EAP-Response)\n
      \                                 ------------------------->\n                                     Diameter
      EAP/DER\n                                      (EAP-Response)\n                                     (ERP-RK-Request)\n
      \       <==================================================>\n           Multi-round
      Diameter EAP exchanges, unmodified\n                                  <-------------------------\n
      \                                     Diameter EAP/DEA\n                                       (EAP-Success)\n
      \                                          (MSK)\n                                      (Key
      AVP (rRK))\n        <-------------------------\n            Diameter EAP/DEA\n
      \             (EAP-Success)\n                  (MSK)\n               [ERP-Realm]\n
      \       Figure 2: ERP Bootstrapping during Full EAP Authentication\n   The authenticator
      creates the first DER of the full EAP\n   authentication and sends it to the
      ER server.  The ER server proxies\n   the first DER of the full EAP authentication
      and adds the\n   ERP-RK-Request AVP inside, then forwards the request to the
      home EAP\n   server.\n   If the home Diameter server does not support the Diameter
      ERP\n   extensions, it simply ignores the ERP-RK-Request AVP and continues as\n
      \  specified in RFC 4072 [RFC4072].  If the server supports the ERP\n   extensions,
      it saves the value of the ERP-Realm AVP found inside the\n   ERP-RK-Request
      AVP, and continues with the EAP authentication.  When\n   the authentication
      completes, if it is successful and the EAP method\n   has generated an EMSK,
      the server MUST derive the rRK as specified in\n   RFC 6696, using the saved
      ERP realm name.  It then includes the rRK\n   inside a Key AVP (Section 8.3)
      with the Key-Type AVP set to rRK,\n   before sending the DEA as usual.\n   When
      the ER server proxies a Diameter-EAP-Answer message with a\n   Session-Id corresponding
      to a message to which it added an\n   ERP-RK-Request AVP, and the Result-Code
      is DIAMETER_SUCCESS, it MUST\n   examine the message and save and remove any
      Key AVP (Section 8.3)\n   with Key-Type AVP set to rRK.  If the message does
      not contain such a\n   Key AVP, the ER server may cache the information that\n
      \  re-authentication via ERP is not possible for the session in order to\n   avoid
      any subsequent attempts.  In any case, the information stored\n   in the ER
      server concerning a session should not have a lifetime\n   greater than the
      EMSK for this session.\n   If the ER server is successfully bootstrapped, it
      should also add the\n   ERP-Realm AVP after removing the Key AVP with Key-Type
      of rRK in the\n   EAP/DEA message.  This ERP-Realm information can be used by
      the\n   authenticator to notify the peer that the ER server is bootstrapped,\n
      \  and for which domain.  How this information can be transmitted to the\n   peer
      is outside the scope of this document.  This information needs\n   to be sent
      to the peer if both implicit and explicit bootstrapping\n   mechanisms are possible,
      because the ERP message and the root key\n   used for protecting this message
      are different in bootstrapping\n   exchanges and non-bootstrapping exchanges.\n"
    title: 5.1.  Bootstrapping during the Initial EAP Authentication
  - contents:
    - "5.2.  Bootstrapping during the First Re-authentication\n   Bootstrapping the
      ER server during the first re-authentication (also\n   known as explicit bootstrapping)
      is only needed when there is no ER\n   server in the local domain and there
      is an ER server in the home\n   domain.  It is less resource intensive, since
      the EMSK generated\n   during initial EAP authentication is reused to derive
      root keys.  On\n   the other hand, the first re-authentication requires a one-round-trip\n
      \  exchange with the home EAP server, since the EMSK is generated during\n   the
      initial EAP authentication and never leaves the home EAP server,\n   which is
      less efficient than implicit bootstrapping.\n   The EAP-Initiate/Re-auth message
      is sent to the home ER server.  The\n   home ER server receives the ERP/DER
      message containing the\n   EAP-Initiate/Re-auth message with the 'B' flag set.
      \ It creates the\n   new EAP/DER message using the received ERP/DER message
      and performs\n   the following processing:\n      Set the Application Id in
      the header of the message to\n      <Diameter EAP> [RFC4072].\n      Extract
      the ERP-RK-Request AVP from the ERP/DER message, which\n      contains the name
      of the domain where the ER server is located,\n      and add it to the newly
      created ERP/DER message.\n   Then, the newly created EAP/DER is sent and routed
      to the home\n   Diameter EAP application server.\n   If the home Diameter EAP
      server does not support ERP extensions, EAP\n   packets with an unknown ERP-specific
      code (EAP-Initiate) will not be\n   understood.  In such a case, the home Diameter
      EAP server MUST send\n   an EAP/DEA with a Result-Code indicating a Permanent
      Failure (for\n   example, DIAMETER_ERROR_EAP_CODE_UNKNOWN or\n   DIAMETER_UNABLE_TO_COMPLY).
      \ The Failed-AVP AVP MUST be included and\n   contain a copy of the EAP-Payload
      AVP.  Otherwise, it processes the\n   DSRK request, as described in RFC 6696.
      \ In particular, it includes\n   the Domain-Name TLV attribute with the content
      from the ERP-Realm\n   AVP.  The server creates the EAP/DEA reply message [RFC4072],\n
      \  including an instance of the Key AVP (Section 8.3) with the Key-Type\n   AVP
      set to rRK and an instance of the Domain-Name TLV attribute with\n   the content
      from the ERP-Realm AVP.\n   The ER server receives this EAP/DEA and proxies
      it as follows, in\n   addition to standard proxy operations:\n      Set the
      Application Id back to Diameter ERP Application Id\n      (Section 10.1).\n
      \     Extract and cache the content of the Key AVP with Key-Type set to\n      rRK,
      as described in Section 5.1).\n   The ERP/DEA message is then forwarded to the
      authenticator that can\n   use the rMSK as described in RFC 6696.\n   The figure
      below captures this proxy behavior:\n   Authenticator            ER server             Home
      Diameter server\n   =============            =========             ====================\n
      \        ----------------------->\n             Diameter ERP/DER\n              (EAP-Initiate)\n
      \                                ------------------------>\n                                       Diameter
      EAP/DER\n                                        (EAP-Response)\n                                       (ERP-RK-Request)\n
      \                                <------------------------\n                                       Diameter
      EAP/DEA\n                                         (EAP-Success)\n                                        (Key
      AVP (rRK))\n                                        (Key AVP (rMSK))\n         <----------------------\n
      \            Diameter ERP/DEA\n               (EAP-Finish)\n             (Key
      AVP (rMSK))\n             Figure 3: ERP Explicit Bootstrapping Message Flow\n"
    title: 5.2.  Bootstrapping during the First Re-authentication
  title: 5.  Bootstrapping the ER Server
- contents:
  - "6.  Re-authentication\n   This section describes in detail a re-authentication
    exchange with an\n   ER server that was previously bootstrapped.  The following
    figure\n   summarizes the re-authentication exchange.\n                                                       ER
    server\n    Peer                 Authenticator                (bootstrapped)\n
    \   ====                 =============            ======================\n    [
    <------------------------          ]\n    [optional EAP-Initiate/Re-auth-start,]\n
    \   [  possibly with ERP domain name     ]\n      ----------------------->\n        EAP-Initiate/Re-auth\n
    \                             ===============================>\n                                 Diameter
    ERP, cmd code DER\n                                   User-Name: keyName-NAI\n
    \                             EAP-Payload: EAP-Initiate/Re-auth\n                              <===============================\n
    \                                Diameter ERP, cmd code DEA\n                               EAP-Payload:
    EAP-Finish/Re-auth\n                                        Key AVP: rMSK\n      <----------------------\n
    \        EAP-Finish/Re-auth\n             Figure 4: Diameter ERP Re-authentication
    Exchange\n   The peer sends an EAP-Initiate/Re-auth message to the ER server via\n
    \  the authenticator.  Alternatively, the authenticator may send an\n   EAP-Initiate/Re-auth-Start
    message to the peer to trigger the\n   mechanism.  In this case, the peer responds
    with an\n   EAP-Initiate/Re-auth message.\n   If the authenticator does not support
    ERP (pure Diameter EAP\n   [RFC4072] support), it discards the EAP packets with
    an unknown ERP-\n   specific code (EAP-Initiate).  The peer should fall back to
    full EAP\n   authentication in this case.\n   When the authenticator receives
    an EAP-Initiate/Re-auth message from\n   the peer, the message is processed as
    described in RFC 6696, with\n   regard to the EAP state machine.  It creates a
    Diameter ERP/DER\n   message following the general process of Diameter EAP [RFC4072],
    with\n   the following differences:\n      The Application Id in the header is
    set to <Diameter ERP>\n      (code 13).\n      The value in the Auth-Application-Id
    AVP is also set to\n      <Diameter ERP>.\n      The keyName-NAI attribute from
    the ERP message is used to create\n      the content of the User-Name and Destination-Realm
    AVPs.\n      The Auth-Request-Type AVP content is set to the appropriate value.\n
    \     The EAP-Payload AVP contains the EAP-Initiate/Re-auth message.\n   Then,
    this ERP/DER message is sent as described in Section 4.\n   The ER server receives
    and processes this request as described in\n   Section 4.  It then creates an
    ERP/DEA message following the general\n   process described in Eronen, et al.
    [RFC4072], with the following\n   differences:\n      The Application Id in the
    header is set to <Diameter ERP>\n      (code 13).\n      The value of the Auth-Application-Id
    AVP is also set to\n      <Diameter ERP>.\n      The EAP-Payload AVP contains
    the EAP-Finish/Re-auth message.\n      If authentication is successful, an instance
    of the Key AVP\n      containing the rMSK derived by ERP is included.\n   When
    the authenticator receives this ERP/DEA answer, it processes it\n   as described
    in the Diameter EAP Application specification [RFC4072]\n   and RFC 6696: the
    content of the EAP-Payload AVP is forwarded to the\n   peer, and the contents
    of the Keying-Material AVP [RFC6734] is used\n   as a shared secret for a secure
    association protocol specific to the\n   lower layer in use.\n"
  title: 6.  Re-authentication
- contents:
  - "7.  Application Id\n   We define a new Diameter application in this document,
    Diameter ERP,\n   with an Application Id value of 13.  Diameter nodes conforming
    to\n   this specification in the role of the ER server MUST advertise\n   support
    by including an Auth-Application-Id AVP with a value of\n   Diameter ERP in the
    Capabilities-Exchange-Request and\n   Capabilities-Exchange-Answer commands [RFC6733].\n
    \  The primary use of the Diameter ERP Application Id is to ensure\n   proper
    routing of the messages, and that the nodes that advertise the\n   support for
    this application do understand the new AVPs defined in\n   Section 8, although
    these AVPs have the 'M' flag cleared.\n"
  title: 7.  Application Id
- contents:
  - "8.  AVPs\n   The following subsections discuss the AVPs used by the Diameter
    ERP\n   application.\n"
  - contents:
    - "8.1.  ERP-RK-Request AVP\n   The ERP-RK-Request AVP (AVP Code 618) is of type
      Grouped AVP.  This\n   AVP is used by the ER server to indicate its willingness
      to act as\n   the ER server for a particular session.\n   This AVP has the 'M'
      and 'V' bits cleared.\n         ERP-RK-Request ::= < AVP Header: 618 >\n                            {
      ERP-Realm }\n                          * [ AVP ]\n                       Figure
      5: ERP-RK-Request ABNF\n"
    title: 8.1.  ERP-RK-Request AVP
  - contents:
    - "8.2.  ERP-Realm AVP\n   The ERP-Realm AVP (AVP Code 619) is of type DiameterIdentity.
      \ It\n   contains the name of the realm in which the ER server is located.\n
      \  This AVP has the 'M' and 'V' bits cleared.\n"
    title: 8.2.  ERP-Realm AVP
  - contents:
    - "8.3.  Key AVP\n   The Key AVP [RFC6734] is of type Grouped and is used to carry
      the rRK\n   or rMSK and associated attributes.  The usage of the Key AVP and
      its\n   constituent AVPs in this application is specified in the following\n
      \  subsections.\n"
    - contents:
      - "8.3.1.  Key-Type AVP\n   The value of the Key-Type AVP MUST be set to 1 for
        rRK or 2 for rMSK.\n"
      title: 8.3.1.  Key-Type AVP
    - contents:
      - "8.3.2.  Keying-Material AVP\n   The Keying-Material AVP contains the rRK
        sent by the home EAP server\n   to the ER server, in answer to a request containing
        an ERP-RK-Request\n   AVP, or the rMSK sent by the ER server to the authenticator.
        \ How\n   this material is derived and used is specified in RFC 6696.\n"
      title: 8.3.2.  Keying-Material AVP
    - contents:
      - "8.3.3.  Key-Name AVP\n   This AVP contains the EMSKname that identifies the
        keying material.\n   The derivation of this name is specified in RFC 6696.\n"
      title: 8.3.3.  Key-Name AVP
    - contents:
      - "8.3.4.  Key-Lifetime AVP\n   The Key-Lifetime AVP contains the lifetime of
        the keying material in\n   seconds.  It MUST NOT be greater than the remaining
        lifetime of the\n   EMSK from which the material was derived.\n"
      title: 8.3.4.  Key-Lifetime AVP
    title: 8.3.  Key AVP
  title: 8.  AVPs
- contents:
  - "9.  Result-Code AVP Values\n   This section defines new Result-Code [RFC6733]
    values that MUST be\n   supported by all Diameter implementations that conform
    to this\n   specification.\n"
  - contents:
    - "9.1.  Permanent Failures\n   Errors that fall within the Permanent Failures
      category are used to\n   inform the peer that the request failed and SHOULD
      NOT be attempted\n   again.\n      DIAMETER_ERROR_EAP_CODE_UNKNOWN (5048)\n
      \        This error code is used by the Diameter server to inform the\n         peer
      that the received EAP-Payload AVP contains an EAP packet\n         with an unknown
      EAP code.\n"
    title: 9.1.  Permanent Failures
  title: 9.  Result-Code AVP Values
- contents:
  - "10.  IANA Considerations\n   IANA has registered the following new elements in
    the Authentication,\n   Authorization, and Accounting (AAA) Parameters registries\n
    \  [AAAPARAMS].\n"
  - contents:
    - "10.1.  Diameter Application Identifier\n   IANA has allocated a new value \"Diameter
      ERP\" (code: 13) in the\n   \"Application IDs\" registry from the \"Standards
      Action\" range of\n   numbers using the \"Specification Required\" policy [RFC5226];
      see\n   Section 11.3 of RFC 3588 [RFC3588] for further details.\n"
    title: 10.1.  Diameter Application Identifier
  - contents:
    - "10.2.  New AVPs\n   IANA has allocated new values from the \"AVP Codes\" registry
      according\n   to the policy specified in Section 11.1 of Fajardo, et al. [RFC6733]\n
      \  for the following AVPs:\n      ERP-RK-Request (code: 618)\n      ERP-Realm
      (code: 619)\n   These AVPs are defined in Section 8.\n"
    title: 10.2.  New AVPs
  - contents:
    - "10.3.  New Permanent Failures Result-Code AVP Values\n   IANA has allocated
      a new value from the \"Result-Code AVP Values (code\n   268) - Permanent Failure\"
      registry according to the policy specified\n   in Section 11.3.2 of Fajardo,
      et al. [RFC6733] for the following\n   Result-Code:\n      DIAMETER_ERROR_EAP_CODE_UNKNOWN
      (code: 5048)\n   This Result-Code value is defined in Section 9.\n"
    title: 10.3.  New Permanent Failures Result-Code AVP Values
  title: 10.  IANA Considerations
- contents:
  - "11.  Security Considerations\n   The security considerations from the following
    documents apply here:\n   o  Eronen, et al. [RFC4072]\n   o  Salowey, et al. [RFC5295]\n
    \  o  Cao, et al. [RFC6696]\n   o  Fajardo, et al. [RFC6733]\n   o  Zorn, et al.
    [RFC6734]\n   Because this application involves the transmission of sensitive
    data,\n   including cryptographic keys, it MUST be protected using Transport\n
    \  Layer Security (TLS) [RFC5246], Datagram Transport Layer Security\n   (DTLS)
    [RFC6347], or IP Encapsulating Security Payload (ESP)\n   [RFC4303].  If TLS or
    DTLS is used, the bulk encryption algorithm\n   negotiated MUST be non-null.  If
    ESP is used, the encryption\n   algorithm MUST be non-null.\n"
  title: 11.  Security Considerations
- contents:
  - "12.  Contributors\n   Hannes Tschofenig wrote the initial draft of this document.\n
    \  Lakshminath Dondeti contributed to the early drafts of the document.\n"
  title: 12.  Contributors
- contents:
  - "13.  Acknowledgements\n   Hannes Tschofenig, Zhen Cao, Benoit Claise, Elwyn Davies,
    Menachem\n   Dodge, Vincent Roca, Stephen Farrell, Sean Turner, Pete Resnick,
    Russ\n   Housley, Martin Stiemerling, and Jouni Korhonen provided useful\n   reviews.\n
    \  Vidya Narayanan reviewed a rough draft version of the document and\n   found
    some errors.\n   Many thanks to these people!\n"
  title: 13.  Acknowledgements
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3748]   Aboba, B., Blunk, L., Vollbrecht, J., Carlson, J.,
      and H.\n               Levkowetz, \"Extensible Authentication Protocol (EAP)\",\n
      \              RFC 3748, June 2004.\n   [RFC4072]   Eronen, P., Hiller, T.,
      and G. Zorn, \"Diameter Extensible\n               Authentication Protocol (EAP)
      Application\", RFC 4072,\n               August 2005.\n   [RFC5226]   Narten,
      T. and H. Alvestrand, \"Guidelines for Writing an\n               IANA Considerations
      Section in RFCs\", BCP 26, RFC 5226,\n               May 2008.\n   [RFC5295]
      \  Salowey, J., Dondeti, L., Narayanan, V., and M. Nakhjiri,\n               \"Specification
      for the Derivation of Root Keys from an\n               Extended Master Session
      Key (EMSK)\", RFC 5295, August\n               2008.\n   [RFC6696]   Cao, Z.,
      He, B., Shi, Y., Wu, Q., and G. Zorn, \"EAP\n               Extensions for the
      EAP Re-authentication Protocol (ERP)\",\n               RFC 6696, July 2012.\n
      \  [RFC6733]   Fajardo, V., Arkko, J., Loughney, J., and G. Zorn,\n               \"Diameter
      Base Protocol\", RFC 6733, October 2012.\n   [RFC6734]   Zorn, G., Wu, Q., and
      V. Cakulev, \"Diameter Attribute-\n               Value Pairs for Cryptographic
      Key Transport\", RFC 6734,\n               October 2012.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [AAAPARAMS] Internet Assigned Numbers Authority,
      \"Authentication,\n               Authorization, and Accounting (AAA) Parameters\",\n
      \              <http://www.iana.org/assignments/aaa-parameters/>.\n   [RFC3588]
      \  Calhoun, P., Loughney, J., Guttman, E., Zorn, G., and J.\n               Arkko,
      \"Diameter Base Protocol\", RFC 3588, September\n               2003.\n   [RFC4303]
      \  Kent, S., \"IP Encapsulating Security Payload (ESP)\", RFC\n               4303,
      December 2005.\n   [RFC5246]   Dierks, T. and E. Rescorla, \"The Transport Layer
      Security\n               (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n
      \  [RFC6347]   Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n               Security
      Version 1.2\", RFC 6347, January 2012.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Julien Bournelle\n   Orange Labs\n   38-40 rue du general
    Leclerc\n   Issy-Les-Moulineaux  92794\n   France\n   EMail: julien.bournelle@orange.com\n
    \  Lionel Morand\n   Orange Labs\n   38-40 rue du general Leclerc\n   Issy-Les-Moulineaux
    \ 92794\n   France\n   EMail: lionel.morand@orange.com\n   Sebastien Decugis\n
    \  INSIDE Secure\n   41 Parc Club du Golf\n   Aix-en-Provence  13856\n   France\n
    \  Phone: +33 (0)4 42 39 63 00\n   EMail: sdecugis@freediameter.net\n   Qin Wu\n
    \  Huawei Technologies Co., Ltd.\n   101 Software Avenue, Yuhua District\n   Nanjing,
    JiangSu  210012\n   China\n   EMail: sunseawq@huawei.com\n   Glen Zorn\n   Network
    Zen\n   227/358 Thanon Sanphawut\n   Bang Na, Bangkok  10260\n   Thailand\n   EMail:
    glenzorn@gmail.com\n"
  title: Authors' Addresses
