- contents:
  - '    Mobile IP Traversal of Network Address Translation (NAT) Devices

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Mobile IP's datagram tunnelling is incompatible with Network Address\n
    \  Translation (NAT).  This document presents extensions to the Mobile\n   IP
    protocol and a tunnelling method which permits mobile nodes using\n   Mobile IP
    to operate in private address networks which are separated\n   from the public
    internet by NAT devices.  The NAT traversal is based\n   on using the Mobile IP
    Home Agent UDP port for encapsulated data\n   traffic.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .  2\n       1.1   Terminology . . . . . . . . . . . . . . . . . . . .
    . .  2\n       1.2   Problem description . . . . . . . . . . . . . . . . . .  3\n
    \      1.3   Assumptions . . . . . . . . . . . . . . . . . . . . . .  4\n   2.
    \ NAT Traversal Overview. . . . . . . . . . . . . . . . . . . .  5\n       2.1
    \  Basic Message Sequence. . . . . . . . . . . . . . . . .  5\n   3.  New Message
    Formats . . . . . . . . . . . . . . . . . . . . .  6\n       3.1   UDP Tunnel
    Request Extension. . . . . . . . . . . . . .  6\n             3.1.1 F (Force)
    Flag. . . . . . . . . . . . . . . . . .  7\n             3.1.2 R (Registration
    through FA Required) flag . . . .  8\n             3.1.3 Reserved Fields . . .
    . . . . . . . . . . . . . .  8\n             3.1.4 Encapsulation . . . . . . .
    . . . . . . . . . . .  8\n             3.1.5 Mobile IP Registration Bits . . .
    . . . . . . . .  9\n       3.2   UDP Tunnel Reply Extension. . . . . . . . . .
    . . . . .  9\n             3.2.1 Reply Code. . . . . . . . . . . . . . . . . .
    . . 10\n       3.3   MIP Tunnel Data Message . . . . . . . . . . . . . . . . 10\n
    \      3.4   UDP Tunnelling Flag in Agent Advertisements . . . . . . 11\n       3.5
    \  New Registration Reply Codes. . . . . . . . . . . . . . 12\n   4.  Protocol
    Behaviour. . . . . . . . . . . . . . . . . . . . . . 12\n       4.1   Relation
    to standard MIP tunnelling . . . . . . . . . . 12\n       4.2   Encapsulating
    IP Headers in UDP . . . . . . . . . . . . 13\n       4.3   Decapsulation . . .
    . . . . . . . . . . . . . . . . . . 15\n       4.4   Mobile Node Considerations.
    . . . . . . . . . . . . . . 15\n       4.5   Foreign Agent Considerations. . .
    . . . . . . . . . . . 16\n       4.6   Home Agent Considerations . . . . . . .
    . . . . . . . . 18\n             4.6.1 Error Handling. . . . . . . . . . . . .
    . . . . . 19\n       4.7   MIP signalling versus tunnelling. . . . . . . . . .
    . . 20\n       4.8   Packet fragmentation. . . . . . . . . . . . . . . . . . 21\n
    \      4.9   Tunnel Keepalive. . . . . . . . . . . . . . . . . . . . 21\n       4.10
    \ Detecting and compensating for loss of NAT mapping. . . 22\n       4.11  Co-located
    registration through FA. . . . . . . . . . . 24\n   5.  Implementation Issues
    . . . . . . . . . . . . . . . . . . . . 24\n       5.1   Movement Detection and
    Private Address Aliasing . . . . 24\n       5.2   Mobility Binding Lifetime .
    . . . . . . . . . . . . . . 25\n   6.  Security Considerations . . . . . . . .
    . . . . . . . . . . . 26\n       6.1   Traffic Redirection Vulnerabilities . .
    . . . . . . . . 27\n             6.1.1 Manipulation of the Registration\n                   Request
    Message . . . . . . . . . . . . . . . . . 27\n             6.1.2 Sending a Bogus
    Keepalive Message . . . . . . . . 27\n       6.2   Use of IPsec. . . . . . . .
    . . . . . . . . . . . . . . 28\n       6.3   Firewall Considerations . . . . .
    . . . . . . . . . . . 28\n   7.  UNSAF Considerations. . . . . . . . . . . . .
    . . . . . . . . 28\n   8.  IANA Considerations . . . . . . . . . . . . . . . .
    . . . . . 30\n   9.  Intellectual Property Rights. . . . . . . . . . . . . . .
    . . 30\n   10. Acknowledgements. . . . . . . . . . . . . . . . . . . . . . . 31\n
    \  11. Normative References. . . . . . . . . . . . . . . . . . . . . 31\n   12.
    Informative References. . . . . . . . . . . . . . . . . . . . 32\n   13. Authors'
    Addresses. . . . . . . . . . . . . . . . . . . . . . 33\n   14. Full Copyright
    Statement. . . . . . . . . . . . . . . . . . . 34\n"
  title: Table of Contents
- contents:
  - '1. Introduction

    '
  - contents:
    - "1.1 Terminology\n   The Mobile IP related terminology described in RFC 3344
      [10] is used\n   in this document.  In addition, the following terms are used:\n
      \  Forward Tunnel\n      A tunnel that forwards packets towards the mobile node.
      \ It starts\n      at the home agent, and ends at the mobile node's care-of
      address.\n   Reverse Tunnel\n      A tunnel that starts at the mobile node's
      care-of address and\n      terminates at the home agent.\n   NAT\n      Network
      Address Translation.  \"Traditional NAT would allow hosts\n      within a private
      network to transparently access hosts in the\n      external network, in most
      cases.  In a traditional NAT, sessions\n      are uni-directional, outbound
      from the private network.\" -- RFC\n      2663 [11].  Basic NAT and NAPT are
      two varieties of NAT.\n   Basic NAT\n      \"With Basic NAT, a block of external
      addresses are set aside for\n      translating addresses of hosts in a private
      domain as they\n      originate sessions to the external domain.  For packets
      outbound\n      from the private network, the source IP address and related
      fields\n      such as IP, TCP, UDP and ICMP header checksums are translated.\n
      \     For inbound packets, the destination IP address and the checksums\n      as
      listed above are translated.\" -- RFC 2663 [11].\n   NAPT\n      Network Address
      Port Translation.  \"NAPT extends the notion of\n      translation one step
      further by also translating transport\n      identifier (e.g., TCP and UDP port
      numbers, ICMP query\n      identifiers).  This allows the transport identifiers
      of a number\n      of private hosts to be multiplexed into the transport identifiers\n
      \     of a single external address.  NAPT allows a set of hosts to share\n      a
      single external address.  Note that NAPT can be combined with\n      Basic NAT
      so that a pool of external addresses are used in\n      conjunction with port
      translation.\" -- RFC 2663 [11].\n   In this document, the more general term
      NAT is used to cover both\n   NATs and NAPTs.  In most deployment cases today,
      we believe that the\n   NATs used are of the NAPT variety.\n   The key words
      \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",
      \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document
      are to be interpreted as described in BCP 14, RFC 2119 [6].\n"
    title: 1.1 Terminology
  - contents:
    - "1.2 Problem description\n   A basic assumption that Mobile IP [10] makes is
      that mobile nodes and\n   foreign agents are uniquely identifiable by a globally
      routable IP\n   address.  This assumption breaks down when a mobile node attempts
      to\n   communicate from behind a NAT.\n   Mobile IP relies on sending traffic
      from the home network to the\n   mobile node or foreign agent through IP-in-IP
      tunnelling.  IP nodes\n   which communicate from behind a NAT are reachable
      only through the\n   NAT's public address(es).  IP-in-IP tunnelling does not
      generally\n   contain enough information to permit unique translation from the\n
      \  common public address(es) to the particular care-of address of a\n   mobile
      node or foreign agent which resides behind the NAT; in\n   particular there
      are no TCP/UDP port numbers available for a NAT to\n   work with.  For this
      reason, IP-in-IP tunnels cannot in general pass\n   through a NAT, and Mobile
      IP will not work across a NAT.\n   Mobile IP's Registration Request and Reply
      will on the other hand be\n   able to pass through NATs and NAPTs on the mobile
      node or foreign\n   agent side, as they are UDP datagrams originated from the
      inside of\n   the NAT or NAPT.  When passing out, they make the NAT set up an\n
      \  address/port mapping through which the Registration Reply will be\n   able
      to pass in to the correct recipient.  The current Mobile IP\n   protocol does
      however not permit a registration where the mobile\n   node's IP source address
      is not either the CoA, the Home Address, or\n   0.0.0.0.\n   What is needed
      is an alternative data tunnelling mechanism for Mobile\n   IP which will provide
      the means needed for NAT devices to do unique\n   mappings so that address translation
      will work, and a registration\n   mechanism which will permit such an alternative
      tunnelling mechanism\n   to be set up when appropriate.\n   This mechanism will
      address 3 different scenarios:\n   -  A mobile node with co-located address
      behind a NAT; no FA\n   -  A mobile node registered with an FA where both the
      mobile node and\n      the FA are behind the same NAT\n   -  A mobile node with
      co-located address using an FA which demands\n      that registrations pass
      through the FA (sets the \"R\" bit) where\n      both the mobile node and the
      FA are behind the same NAT\n"
    title: 1.2 Problem description
  - contents:
    - "1.3 Assumptions\n   The primary assumption in this document is that the network
      allows\n   communication between an UDP port chosen by the mobile node and the\n
      \  home agent UDP port 434.  If this assumption does not hold, neither\n   Mobile
      IP registration nor data tunnelling will work.\n   This document does NOT assume
      that mobility is constrained to a\n   common IP address space.  On the contrary,
      the routing fabric between\n   the mobile node and the home agent may be partitioned
      into a\n   \"private\" and a \"public\" network, and the assumption is that
      some\n   mechanism is needed in addition to vanilla Mobile IP according to RFC\n
      \  3344 [10] in order to achieve mobility within disparate IP address\n   spaces.\n
      \  For a more extensive discussion of the problems with disparate\n   address
      spaces, and how they may be solved, see RFC 3024 [9].\n   The reverse tunnels
      considered here are symmetric, that is, they use\n   the same configuration
      (encapsulation method, IP address endpoints)\n   as the forward tunnel.\n"
    title: 1.3 Assumptions
  title: 1. Introduction
- contents:
  - "2. NAT Traversal Overview\n   This section gives a brief overview of the MIP
    UDP tunnelling\n   mechanism which may be used to achieve NAT traversal for Mobile
    IP.\n   In MIP UDP tunnelling, the mobile node may use an extension\n   (described
    below) in its Registration Request to indicate that it is\n   able to use Mobile
    IP UDP tunnelling instead of standard Mobile IP\n   tunnelling if the home agent
    sees that the Registration Request seems\n   to have passed through a NAT.  The
    home agent may then send a\n   registration reply with an extension indicating
    acceptance (or\n   denial).  After assent from the home agent, MIP UDP tunnelling
    will\n   be available for use for both forward and reverse tunnelling.  UDP\n
    \  tunnelled packets sent by the mobile node use the same ports as the\n   registration
    request message.  In particular, the source port may\n   vary between new registrations,
    but remains the same for all\n   tunnelled data and re-registrations.  The destination
    port is always\n   434.  UDP tunnelled packets sent by the home agent uses the
    same\n   ports, but in reverse.\n"
  - contents:
    - "2.1 Basic Message Sequence\n   The message sequence diagram below exemplifies
      setting up and using a\n   Mobile IP UDP tunnel as described in this document.
      \ The tunnel is\n   set up by the use of specific extensions in the initial
      Mobile IP\n   Registration Request and Reply exchange.  Thereafter, any traffic\n
      \  from the home agent to the mobile node is sent through the UDP\n   tunnel.
      \ The mobile node may at its discretion use the UDP tunnel for\n   reverse tunnelling
      or not, although in most cases where MIP UDP\n   tunnelling is needed, reverse
      tunnelling will also be needed.\n   mobile node            NAT           home
      agent\n        |                  |                  |\n        |                  |
      \                 |\n        | Registration     |                  |\n        |
      Request with     |                  |\n        |-----------------///--------------->>|\n
      \       |UDP Tunnel Request|                  |\n        |                  |
      \                 +\n        |                  |                  || IP Source
      and\n        |                  |                  || CCoA address\n        |
      \                 |                  || discrepancy\n        |                  |
      \                 || seen\n        |                  | Registration     +\n
      \       |                  | Reply with       |\n        |<<---------------///-----------------|\n
      \       |                  | UDP Tunnel Reply.|\n        |                  |
      \                 |\n        | UDP tunnelled pkg|                  |\n        |=================///===============>>|\n
      \       |                  | UDP tunnelled pkg|\n        |<<===============///=================|\n
      \       |                  |                  ||absence of\n        |                  |
      \                 ||traffic for\n        |                  |                  ||UDP
      keepalive\n        | UDP keepalive    |                  ||period\n        |-----------------///--------------->>+\n
      \       .                  .                  +\n        .                  .
      \                 .\n        .                  .                  .\n"
    title: 2.1 Basic Message Sequence
  title: 2. NAT Traversal Overview
- contents:
  - '3. New Message Formats

    '
  - contents:
    - "3.1 UDP Tunnel Request Extension\n   This extension is a skippable extension.
      \ It signifies that the\n   sender is capable of handling MIP UDP tunnelling,
      and optionally that\n   a particular encapsulation format is requested in the
      MIP UDP tunnel.\n   The format of this extension is as shown below.  It adheres
      to the\n   short extension format described in [10].\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |    Sub-Type   |   Reserved 1  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |F|R| Reserved 2| Encapsulation |          Reserved 3           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Type                144\n   Length              6.  Length in bytes of this
      extension, not\n                       including the Type and Length bytes.\n
      \  Sub-Type            0\n   Reserved 1          Reserved for future use.  MUST
      be set to 0 on\n                       sending, MUST be ignored on reception.\n
      \  F                   F (Force) flag.  Indicates that the mobile\n                       node
      wants to force MIP UDP tunnelling to be\n                       established.\n
      \  R                   R (Registration through FA Required) flag.\n                       Indicates
      that the R bit was set in the FA's\n                       Agent Advertisement.
      \ Registration is being\n                       made using a co-located care-of
      address, but\n                       through the FA.\n   Reserved 2          Reserved
      for future use.  MUST be set to 0 on\n                       sending, MUST be
      ignored on reception.\n   Encapsulation       Indicates the type of tunnelled
      data, using\n                       the same numbering as the IP Header Protocol\n
      \                      Field.\n   Reserved 3          Reserved for future use.
      \ MUST be set to 0 on\n                       sending, MUST be verified as 0
      on receipt;\n                       otherwise the extension must be handled
      as not\n                       understood and silently skipped.\n"
    - contents:
      - "3.1.1 F (Force) Flag\n   Indicates that the mobile node wants to use traversal
        regardless of\n   the outcome of NAT detection performed by the home agent.
        \ This is\n   useful if the route between the mobile node and the home agent
        works\n   for Mobile IP signalling packets, but not for generic data packets\n
        \  (e.g., because of firewall filtering rules).  If the home agent\n   supports
        this protocol, it SHOULD either accept the traversal and\n   reply with a
        UDP Tunnel Reply Extension or reject the Registration\n   Request.  In case
        of the registration failing, the Home Agent SHOULD\n   send a Registration
        Reply with Code field set to 129\n   (\"administratively prohibited\").\n
        \  If the HA does not understand the UDP Tunnel Request Extension, it\n   will
        silently discard it, and if everything else is fine, it will\n   reply with
        a registration reply with reply code 0 (registration\n   accepted), but without
        any UDP Tunnel Reply Extension.  In this case,\n   the mobile node MUST NOT
        use MIP UDP tunnelling.\n"
      title: 3.1.1 F (Force) Flag
    - contents:
      - "3.1.2 R (Registration through FA Required) flag\n   This flag MUST be set
        by the mobile node when it is using a co-\n   located address, but registering
        through an FA because it has\n   received an Agent Advertisement with the
        'R' bit set.\n"
      title: 3.1.2 R (Registration through FA Required) flag
    - contents:
      - "3.1.3 Reserved Fields\n   The 'Reserved 1' and 'Reserved 2' fields must be
        ignored on receipt,\n   while the 'Reserved 3' field must be 0 on receipt,
        otherwise this\n   extension MUST be handled as not understood and silently
        skipped.\n   This permits future additions to this extension to be made which\n
        \  either can co-exist with old implementations, or will force a\n   rejection
        of the extension from an old implementation.\n"
      title: 3.1.3 Reserved Fields
    - contents:
      - "3.1.4 Encapsulation\n   The 'Encapsulation' field defines the mode of encapsulation
        requested\n   if MIP UDP tunnelling is accepted by the home agent.  This field
        uses\n   the same values as the IP header Protocol field:\n      4     IP
        header (IP-in-UDP tunnelling) RFC 2003 [4]\n      47    GRE Header (GRE-in-UDP
        tunnelling) RFC 2784 [8]\n      55    Minimal IP encapsulation header RFC
        2004 [5]\n   If the home agent finds that UDP tunnelling is not needed, the\n
        \  encapsulation will be determined by the 'M' and 'G' flags of the\n   registration
        request; but if the home agent finds that MIP UDP\n   tunnelling should be
        done, the encapsulation is determined from the\n   value of the Encapsulation
        field.  If the value of this field is\n   zero, it defaults to the value of
        'M' and 'G' fields in the\n   Registration Request message, but if it is non-zero,
        it indicates\n   that a particular encapsulation is desired.\n"
      title: 3.1.4 Encapsulation
    - contents:
      - "3.1.5 Mobile IP Registration Bits\n   The Mobile IP registration bits S,
        B, D, M, G and T retain their\n   meaning as described in RFC 3344 [10] and
        RFC 3024 [9] (except that\n   the significance of the M and G bits may be
        modified by the\n   Encapsulation field when MIP UDP tunnelling is used, as
        described\n   above).  The use of the M and G bits together with MIP UDP tunnelling\n
        \  is also touched upon in Section 4.1.\n   When the MN requests MIP UDP tunnelling,
        the 'D' bit (Decapsulation\n   by the mobile node) MUST be set, otherwise
        UDP tunnelling would not\n   be meaningful.\n   Both the MN and the FA SHOULD
        set the 'T' bit when requesting MIP UDP\n   tunnelling, even if not all traffic
        will be reverse tunnelled.  This\n   ensures that a HA which is not prepared
        to accept reverse tunnelling\n   will not accept a registration which may
        later turn out to be\n   unusable.  Also see the discussion of use of the
        'T' bit in Foreign\n   Agent Considerations (Section 4.5).\n"
      title: 3.1.5 Mobile IP Registration Bits
    title: 3.1 UDP Tunnel Request Extension
  - contents:
    - "3.2 UDP Tunnel Reply Extension\n   This extension is a non-skippable extension.
      \ It is sent in reply to\n   a UDP Tunnel Request extension, and indicates whether
      or not the HA\n   will use MIP UDP tunnelling for the current mobility binding.
      \ The\n   format of this extension is as shown below.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |    Sub-Type   |  Reply Code   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |F|        Reserved             |     Keepalive Interval        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Type                44\n   Length              6.  Length in bytes of this
      extension, not\n                       including the Type and Length bytes.\n
      \  Sub-Type            0\n   Reply Code          Indicates whether the HA assents
      or declines\n                       to use UDP tunnelling for the current mobility\n
      \                      binding.  See Section 3.2.1 below.\n   F                   F
      (Forced) flag.  Indicates that tunnelling is\n                       being forced
      because the F flag was set in the\n                       tunnelling request,
      irrespective of the\n                       detection of a NAT or not.\n   Keepalive
      Interval  Specifies the NAT keepalive interval that the\n                       mobile
      node SHOULD use.  A keepalive packet\n                       SHOULD be sent
      if Keepalive Interval seconds\n                       have elapsed without any
      signalling or data\n                       traffic being sent.  If this field
      is set to\n                       0, the mobile node MUST use its default\n
      \                      configured keepalive interval.\n   Reserved            Reserved
      for future use.  MUST be set to 0 on\n                       sending, MUST be
      ignored on reception.\n"
    - contents:
      - "3.2.1 Reply Code\n   The Reply Code field of the UDP Tunnel Reply Extension
        indicates if\n   UDP tunnelling have been accepted and will be used by the
        HA.  Values\n   in the range 0 ..  63 indicate assent, i.e., that tunnelling
        will be\n   done, while values in the range 64 ..  255 indicate that tunnelling\n
        \  should not be done.  More information may be given by the value of\n   the
        response code.\n   The following response codes are defined for use in the
        code field of\n   the UDP Tunnel Reply Extension:\n      0     Will do tunnelling\n
        \     64    Tunnelling declined, reason unspecified\n"
      title: 3.2.1 Reply Code
    title: 3.2 UDP Tunnel Reply Extension
  - contents:
    - "3.3 MIP Tunnel Data Message\n   This MIP message header serves to differentiate
      traffic tunnelled\n   through the well-known port 434 from other Mobile IP messages,
      e.g.,\n   Registration Requests and Registration Replies.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |  Next Header  |           Reserved            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Type                4\n   Next Header         Indicates the type of tunnelled
      data, using\n                       the same numbering as the IP Header Protocol\n
      \                      Field.\n   Reserved            Reserved for future use.
      \ MUST be set to 0 on\n                       sending, MUST be ignored on reception.\n
      \  The Next Header field uses the same values as the IP header Protocol\n   field.
      \ Immediately relevant for use with Mobile IP are the following\n   values:\n
      \      4    IP header (IP-in-UDP tunnelling) RFC 2003 [4]\n      47    GRE Header
      (GRE-in-UDP tunnelling) RFC 2784 [8]\n      55    Minimal IP encapsulation header
      RFC 2004 [5]\n   The receiver of a tunnelled packet MUST check that the Next
      Header\n   value matches the tunnelling mode established for the mobility\n
      \  binding with which the packet was sent.  If a discrepancy is\n   detected,
      the packet MUST be dropped.  A log entry MAY be written,\n   but in this case
      the receiver SHOULD ensure that the amount of log\n   entries written is not
      excessive.\n   In addition to the encapsulation forms listed above, the MIP
      UDP\n   tunnelling can potentially support other encapsulations, by use of\n
      \  the Next Header field in the MIP Tunnel Data Header and the\n   Encapsulation
      Header field of the UDP Tunnel Request Extension\n   (Section 3.1).\n"
    title: 3.3 MIP Tunnel Data Message
  - contents:
    - "3.4 UDP Tunnelling Flag in Agent Advertisements\n   The only change to the
      Mobility Agent Advertisement Extension defined\n   in RFC 3344 [10] is a flag
      indicating that the foreign agent\n   generating the Agent Advertisement supports
      MIP UDP Tunnelling.  The\n   flag is inserted after the flags defined in [10].\n
      \   0                   1                   2                   3\n    0 1 2
      3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |     Type      |    Length     |        Sequence Number        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |           Lifetime            |R|B|H|F|M|G|r|T|U|   reserved  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                  zero or more Care-of Addresses               |\n   |                              ...
      \                             |\n   The flag is defined as follows:\n   U     UDP
      Tunnelling support.  This Agent supports MIP UDP Tunnelling\n         as specified
      in this document.  This flag SHOULD be set in\n         advertisements sent
      by a foreign agent which supports MIP UDP\n         tunnelling and is situated
      behind a NAT.  It MUST NOT be set in\n         advertisements from foreign agents
      which are not situated\n         behind a NAT, and thus has no need to advertise
      the capability.\n"
    title: 3.4 UDP Tunnelling Flag in Agent Advertisements
  - contents:
    - "3.5 New Registration Reply Codes\n   One new registration reply code is defined:\n
      \     ERROR_HA_UDP_ENCAP_UNAVAIL      Requested UDP tunnel encapsulation\n                                      unavailable\n
      \  This is used by the HA to distinguish the registration denial caused\n   by
      an unavailable UDP tunnel encapsulation mode from a denial caused\n   by unavailable
      standard tunnel encapsulation requested by use of the\n   'T' bit together with
      either 'M' or 'G' bit.\n"
    title: 3.5 New Registration Reply Codes
  title: 3. New Message Formats
- contents:
  - '4. Protocol Behaviour

    '
  - contents:
    - "4.1 Relation to standard MIP tunnelling\n   The default encapsulation mode
      for MIP UDP tunnelling is IP-in-UDP\n   encapsulation.  The mobile node MAY
      request alternative forms of\n   encapsulation to be used with UDP tunnelling
      by setting the 'M' bit\n   and/or the 'G' bit of a Mobile IP registration request,
      or by\n   explicitly requesting a particular encapsulation for the MIP UDP\n
      \  tunnel by using the Encapsulation field.  The M and G bits retain the\n   meaning
      as described in RFC 3344 [10] within the context of MIP UDP\n   tunnelling.
      \ The UDP tunnelling version of the classic MIP\n   encapsulation methods can
      be summarised as:\n   IP in UDP.  When Mobile IP UDP tunnelling is used, this
      is the\n      default encapsulation type.  Any home agent and mobile node that\n
      \     implements Mobile IP UDP tunnelling MUST implement this\n      encapsulation
      type.\n   GRE in UDP.  If the 'G' bit is set in a registration request and\n
      \     the Encapsulation field is zero, the mobile node requests that its\n      home
      agent use GRE encapsulation [3] for datagrams tunnelled to\n      the mobile
      node.  If MIP UDP tunnelling is also requested and\n      accepted, GRE-in-UDP
      encapsulation SHALL be used in the same cases\n      as GRE in IP encapsulation
      would be used if the MIP UDP tunnelling\n      had not been requested.\n   Minimal
      encapsulation in UDP.  If the 'M' bit is set and the\n      Encapsulation field
      is zero, the mobile node requests that its\n      home agent use minimal encapsulation
      [5] for datagrams tunnelled\n      to the mobile node.  If MIP UDP tunnelling
      is also used, minimal\n      encapsulation in UDP SHALL be used in the same
      cases as minimal\n      encapsulation according to RFC 2004 [5] would be used
      if the MIP\n      UDP tunnelling had not been requested.\n   When the Encapsulation
      field is non-zero, a particular encapsulation\n   format is requested for the
      MIP UDP tunnel.  If tunnelling is\n   indicated, the request MUST either be
      accepted using the requested\n   encapsulation, or rejected with the error code\n
      \  ERROR_HA_UDP_ENCAP_UNAVAIL, \"Requested UDP tunnel encapsulation\n   unavailable\"
      defined in Section 3.5.  On receipt of this error, the\n   mobile node MAY choose
      to send a new Registration Request with\n   different requirements on MIP UDP
      tunnelling encapsulation.\n"
    title: 4.1 Relation to standard MIP tunnelling
  - contents:
    - "4.2 Encapsulating IP Headers in UDP\n   MIP IP-in-UDP tunnelling, or UDP tunnelling
      for short, is done in a\n   manner analogous to that described for IP-in-IP
      tunnelling in RFC\n   2003 [4], with the exception of the addition of an UDP
      header [1] and\n   MIP Message header [10] between the outer and inner IP header.\n
      \  Mobile IP Registration Requests and Registration Replies are already\n   in
      the form of UDP messages, and SHALL NOT be tunnelled even when MIP\n   IP-in-UDP
      tunnelling is in force.\n   To encapsulate an IP datagram using MIP IP-in-UDP
      encapsulation, an\n   outer IP header [2], UDP header [1] and MIP Message header
      [10] is\n   inserted before the datagram's existing IP header, as follows:\n
      \                                      +---------------------------+\n                                       |
      \                          |\n                                       |      Outer
      IP Header      |\n                                       +---------------------------+\n
      \                                      |                           |\n                                       |
      \       UDP Header         |\n                                       +---------------------------+\n
      \                                      |      MIP Tunnel Data      |\n                                       |
      \     Message Header       |\n   +---------------------------+       +---------------------------+\n
      \  |                           |       |                           |\n   |         IP
      Header         |       |         IP Header         |\n   +---------------------------+
      ====> +---------------------------+\n   |                           |       |
      \                          |\n   |         IP Payload        |       |         IP
      Payload        |\n   |                           |       |                           |\n
      \  |                           |       |                           |\n   +---------------------------+
      \      +---------------------------+\n   The outer IP header Source Address
      and Destination Address, together\n   with the UDP header Source Port and Destination
      Port, identify the\n   \"endpoints\" of the tunnel.  The inner IP header Source
      Address and\n   Destination Addresses identify the original sender and the recipient\n
      \  of the datagram, respectively.  The inner IP header is not changed by\n   the
      encapsulator, except to decrement the TTL by one if the\n   tunnelling is being
      done as part of forwarding the datagram as noted\n   in RFC 2003 [4], and remains
      unchanged during its delivery to the\n   tunnel exit point.  No change to IP
      options in the inner header\n   occurs during delivery of the encapsulated datagram
      through the\n   tunnel.  Note that the security options of the inner IP header
      MAY\n   affect the choice of security options for the encapsulating (outer)\n
      \  IP header.\n   Minimal Encapsulation and GRE encapsulation is done in an
      analogous\n   manner, following RFC 2004 [5] for Minimal Encapsulation and RFC
      2784\n   [8] for GRE Encapsulation, but using outer IP, UDP and MIP headers
      in\n   place of the outer IP header.\n   All other provisions and requirements
      of RFC 2003 [4] and RFC 3024\n   [9] are in force, except in one respect, as
      covered in Packet\n   Fragmentation (Section 4.8).\n"
    title: 4.2 Encapsulating IP Headers in UDP
  - contents:
    - "4.3 Decapsulation\n   Before decapsulation is actually done, the decapsulating
      node MUST\n   verify that the outer IP addresses and UDP port numbers exactly
      match\n   the values used for the tunnel, with the exception of tunnels that\n
      \  are \"half bound\" (as described in Section 4.11) where the source UDP\n
      \  port can change.\n   IP-in-UDP encapsulated traffic is decapsulated simply
      by stripping\n   off the outer IP, UDP and MIP header, which leaves the original
      IP\n   packet which is forwarded as is.\n   Minimal IP encapsulation is processed
      by the receiver conceptually as\n   follows.  First, the UDP and the Mobile
      IP headers are removed from\n   the packet, and the Protocol field of the IP
      header replaced with the\n   Next Header field in the MIP Tunnel Data header.
      \ Second, the\n   remaining IP header total length and checksum are adjusted
      to match\n   the stripped packet.  Third, ordinary minimal IP encapsulation\n
      \  processing is done.\n   GRE encapsulated traffic is processed according to
      RFC 2784 [8] and\n   RFC 1701 [3], with the delivery header consisting of the
      outer IP,\n   UDP and MIP headers.\n"
    title: 4.3 Decapsulation
  - contents:
    - "4.4 Mobile Node Considerations\n   The UDP Tunnel Request Extension MAY be
      used in a Mobile IP\n   Registration Request from the mobile node to the home
      agent when the\n   mobile node uses a co-located care-of address.  It SHALL
      NOT be used\n   by the mobile node when it is registering with a foreign agent
      care-\n   of address.\n   The purpose of this extension is to indicate to the
      home agent that\n   the mobile node is able to accept MIP UDP tunnelling if
      the home\n   agent has an indication that the mobile node resides behind a NAT
      or\n   NAPT.  It thus functions as a conditional solicitation for the use of\n
      \  MIP UDP tunnelling.\n   As per Section 3.2 and 3.6.1.3 of RFC 3344 [10],
      the mobile node MUST\n   place this Extension before the Mobile-Home Authentication
      Extension\n   in registration messages, so that it is covered by the Mobile-Home\n
      \  Authentication Extension.\n   If the mobile node includes the UDP Tunnel
      Request extension in a\n   registration request, but receives a registration
      reply without a UDP\n   Tunnel Reply extension, it MUST assume that the HA does
      not\n   understand this extension, and it MUST NOT use UDP tunnelling.  If\n
      \  the mobile node is in fact behind a NAT, the registration may then\n   succeed,
      but traffic will not be able to traverse the NAT.\n   When the mobile node sends
      MIP UDP tunnelled data, it MUST use the\n   same UDP source port as was used
      for the most recent registration\n   request.\n   When the mobile node re-registers
      without having moved, it SHOULD\n   take care to use the same source port as
      was used for the original\n   registration of the current mobility binding.
      \ Otherwise, while the\n   home agent would change destination port on acceptance
      of the new\n   registration, and the mobile node would presumably start listening
      on\n   the new port, the packets in flight from the home agent at the time\n
      \  of change will be dropped when arriving at the mobile node's old\n   port.
      \ (This does not mean that the home agent should refuse a\n   registration request
      using MIP UDP tunnelling where a new port have\n   been used, as this might
      be the result of the NAT dropping state, the\n   mobile node re-booting, changing
      interface, etc.)\n   If a mobile node is registering through a foreign agent
      but using a\n   co-located care-of address, and the agent advertisement from
      the\n   foreign agent had the 'U' bit set, the mobile node MUST set the 'R'\n
      \  flag in its UDP Tunnel Request Extension, in order to make the HA use\n   MIP
      UDP tunnelling.  In this case, the mobile node also MUST send a\n   keepalive
      as soon as its registration has been accepted.\n   If a mobile node is registering
      through a foreign agent but using a\n   co-located care-of address, and the
      agent advertisement from the\n   foreign agent does not have the 'U' bit set,
      the mobile node MUST NOT\n   include a UDP Tunnel Request Extension in the registration
      request.\n"
    title: 4.4 Mobile Node Considerations
  - contents:
    - "4.5 Foreign Agent Considerations\n   The UDP Tunnel Request Extension MAY be
      used by a foreign agent when\n   it is forwarding a Mobile IP Registration Request
      to a home agent,\n   when the foreign agent is situated behind a NAT or has
      some other\n   compelling reason to require MIP UDP tunnelling.\n   The purpose
      of this extension is to indicate to the home agent that\n   the foreign agent
      is able to accept MIP UDP tunnelling if the home\n   agent has an indication
      that the foreign agent resides behind a NAT\n   or NAPT.  It thus functions
      as a conditional solicitation for the use\n   of MIP UDP tunnelling.\n   A foreign
      agent which requires the mobile node to register through a\n   foreign agent
      by setting the 'R' bit in the agent advertisement, MUST\n   NOT add the UDP
      Tunnel Request Extension when forwarding a\n   registration request which uses
      a co-located care-of address, as this\n   will lead to a UDP tunnel being set
      up from the home agent to the\n   foreign agent instead of to the mobile node.\n
      \  As per Section 3.2 and 3.7.2.2 of RFC 3344 [10], the foreign agent\n   when
      using this extension MUST place it after the Mobile-Home\n   Authentication
      Extension in registration messages.  If the foreign\n   agent shares a mobility
      security association with the home agent and\n   therefore appends a Foreign-Home
      Authentication Extension, the UDP\n   Tunnel Request Extension MUST be placed
      before the Foreign-Home\n   Authentication Extension.\n   As the home agent
      detects the presence of a NAT in the path between\n   the sender and itself
      by seeing a mismatch between the IP source\n   address and the care-of address
      given in the registration request, it\n   is REQUIRED that the foreign agent,
      when using this extension, sends\n   the registration request with an IP source
      address matching the\n   care-of address.\n   A foreign agent using MIP UDP
      tunnelling to a home agent because the\n   FA is situated behind a NAT may be
      configured to encourage reverse\n   tunnelling, or be neutral about it, depending
      on the characteristics\n   of the NAT.  If the NAT translates all source addresses
      of outgoing\n   packets to its own public address, it will not be possible to\n
      \  maintain sessions when moving away from this network if the mobile\n   node
      has used triangular routing instead of reverse tunnelling.  On\n   the other
      hand, if it is known that the NAT is smart enough to not\n   translate publicly
      routable source addresses, AND does not do ingress\n   filtering, triangular
      routing may succeed.  The leg from the home\n   agent to the foreign agent will
      still use MIP UDP tunnelling to pass\n   through the NAT.\n   Therefore, if
      it is known when configuring a foreign agent behind a\n   NAT that the NAT will
      translate public as well as private addresses,\n   or it is known that ingress
      filtering is being done between the\n   private and public networks, the foreign
      agent SHOULD reply to\n   registration requests which don't have the 'T' bit
      set with a reply\n   code 75, \"reverse tunnel is mandatory and 'T' bit not
      set\".\n   Conversely, if it is known that the NAT is smart about not\n   translating
      public addresses, and no ingress filtering is done, so it\n   is reasonable
      to believe that a mobile node with a publicly routable\n   address may be able
      to keep up sessions when moving to or from this\n   network, the foreign agent
      MAY be configured to forward registration\n   requests even if they don't have
      the 'T' bit set.\n   If the behaviour of the NAT is unknown in this respect,
      it SHOULD be\n   assumed that it will translate all addresses, thus the foreign
      agent\n   SHOULD be configured to reply to registration requests which don't\n
      \  have the 'T' bit set with a reply code 75, \"reverse tunnel is\n   mandatory
      and 'T' bit not set\".\n"
    title: 4.5 Foreign Agent Considerations
  - contents:
    - "4.6 Home Agent Considerations\n   The purpose of the MIP UDP Tunnel Reply Extension
      is to indicate\n   whether or not the home agent accepts the use of MIP UDP
      tunnelling\n   for this mobility binding, and to inform the mobile node or foreign\n
      \  agent of the suggested tunnel keepalive interval to be used.\n   The UDP
      Tunnel Reply Extension MUST be used in a Mobile IP\n   Registration Reply from
      the home agent to the mobile node when it has\n   received and accepted a UDP
      Tunnel Request (Section 3.1) from a\n   mobile node.\n   The home agent MUST
      use a mismatch between source IP address and\n   care-of address in the Mobile
      IP Registration Request message as the\n   indication that a mobile node may
      reside behind a NAT.  If the\n   Registration Request also contains the UDP
      Tunnel Request extension\n   without the 'R' flag set, and the home agent is
      capable of, and\n   permits MIP UDP tunnelling, the home agent SHALL respond
      with a\n   registration reply containing an assenting UDP Tunnel Reply Extension\n
      \  as described in Section 3.2.  If the 'R' flag is set, special\n   considerations
      apply, as described below.\n   If the home agent receives a Registration Request
      with matching\n   source IP address and co-located care-of address which contains
      a MIP\n   UDP Tunnel Request Extension, the home agent SHOULD respond with a\n
      \  Registration Reply containing a declining UDP Tunnel Reply - unless\n   tunnelling
      has been explicitly requested by the mobile node using the\n   'F' flag as described
      in Section 3.1.\n   If the home agent assents to UDP tunnelling, it MUST use
      the source\n   address of the registration request as the effective care-of
      address,\n   rather than the care-of address given in the registration request,\n
      \  except in the case where the 'R' flag is set in the UDP Tunnel\n   Request
      Extension.\n   If the home agent receives a Registration Request with the 'R'
      flag\n   set in the UDP Tunnel Request Extension, it SHOULD reply with an\n
      \  assenting UDP Tunnel Reply Extension if it is capable of, and permits\n   MIP
      UDP tunnelling.  In this case, however, the source address and\n   port of the
      registration request may be a NAT'ed version of the\n   foreign agent source
      address and port.  In order to direct tunnelled\n   traffic correctly to the
      mobile node, the home agent MUST wait for\n   the first keepalive packet from
      the mobile node to arrive, before it\n   can send traffic back to the correct
      NAT port (the one which is\n   mapped to the MN).  In this case, the home agent
      MUST check that the\n   outer source address (but not the port) of this keepalive
      packet is\n   identical with the source address of the corresponding registration\n
      \  request.  The inner source address (that of the encapsulated ICMP\n   echo
      request) MUST be the home address of the mobile node, and the\n   inner destination
      address MUST be that of the home agent.  If all\n   this holds, the outer source
      address and port of this keepalive\n   packet SHALL be used by the HA as the
      outer destination address and\n   port of the MIP UDP tunnel when forwarding
      traffic to the mobile\n   node.\n   The home agent SHOULD be consistent in acknowledging
      support for UDP\n   tunnelling or not.  A home agent which understands the UDP
      Tunnel\n   Request Extension and is prepared to respond positively to such a\n
      \  request SHOULD also respond with a UDP Tunnel Reply Extension\n   containing
      a declining reply code if use of MIP UDP tunnelling is not\n   indicated for
      a session.  The mobile node MUST NOT assume such\n   behaviour from the home
      agent, since the home agent may undergo a\n   software change with reboot, a
      policy change or a replacement; and\n   consequently a change of behaviour.\n"
    - contents:
      - "4.6.1 Error Handling\n   The following actions take place when things go
        wrong.\n   The HA does not support the UDP Tunnel Request extension:\n      The
        home agent ignores the extension and proceeds normally, which\n      would
        be to refuse the registration if the IP source address does\n      not match
        the care-of address, the home address or 0.0.0.0.  Even\n      if the HA mistakenly
        does accept the registration, the mobile node\n      will not be able to receive
        forward tunnelled data if it is behind\n      a NAT.\n      (It would be beneficial
        to have the mobile node de-register in\n      this case.  The mobile node,
        however, normally has no way of\n      telling that it is behind a NAT if
        it does not receive a UDP\n      Tunnelling Reply.)\n   NAT detected by home
        agent, but traversal not allowed:\n      In some cases the home agent may
        disable NAT traversal even though\n      it supports the UDP Tunnel Request
        extension and a NAT is\n      detected.  In this case, the home agent SHOULD
        send a Registration\n      Reply with the Code field set to 129, \"administratively\n
        \     prohibited\".\n   NAT not detected, 'F' flag set, but home agent does
        not allow forced\n   use of MIP UDP tunnelling:\n      The home agent SHOULD
        send a Registration Reply with the Code\n      field set to 129, \"administratively
        prohibited\".\n   UDP Tunnel Request extension sent by the mobile node (placed
        before\n   the MN-HA authentication extension), but 'D' bit in registration\n
        \  request header not set:\n      The home agent SHOULD send a Registration
        Reply with the Code\n      field set to 134, \"poorly formed Request\".\n
        \  UDP Tunnel Request extension sent by the foreign agent (placed after\n
        \  the MN-HA authentication extension), but 'D' bit is set:\n      The home
        agent SHOULD send a Registration Reply with the Code\n      field set to 134,
        \"poorly formed Request\".\n   Reserved 3 field of UDP Tunnel Request extension
        is nonzero:\n      The home agent SHOULD send a Registration Reply with the
        Code\n      field set to 134, \"poorly formed Request\".\n   Encapsulation
        type requested in UDP Tunnel Request extension is\n   unsupported:\n      The
        home agent SHOULD send a Registration Reply with the Code\n      field set
        to ERROR_HA_UDP_ENCAP_UNAVAIL, \"Requested UDP tunnel\n      encapsulation
        unavailable\" defined in Section 3.5.\n"
      title: 4.6.1 Error Handling
    title: 4.6 Home Agent Considerations
  - contents:
    - "4.7 MIP signalling versus tunnelling\n   UDP tunnelling SHALL be used only
      for data packets, and only when the\n   mobility binding used for sending was
      established using the UDP\n   Tunnel Request, and accepted by an UDP Tunnel
      Reply from the home\n   agent.  After MIP UDP tunnelling has been established
      for a mobility\n   binding, data packets that are forward or reverse tunnelled
      using\n   this mobility binding MUST be tunnelled using MIP UDP tunnelling,
      not\n   IP-in-IP tunnelling or some other tunnelling method.\n   As a consequence:\n
      \  -  Mobile IP signalling is never tunnelled.\n   -  When using simultaneous
      bindings, each binding may have a\n      different type (i.e., UDP tunnelling
      bindings may be mixed with\n      non-UDP tunnelling bindings).\n   -  Tunnelling
      is only allowed for the duration of the binding\n      lifetime.\n"
    title: 4.7 MIP signalling versus tunnelling
  - contents:
    - "4.8 Packet fragmentation\n   From RFC 3022 [12]:\n   \"Translation of outbound
      TCP/UDP fragments (i.e., those originating\n   from private hosts) in NAPT set-up
      are doomed to fail.  The reason is\n   as follows.  Only the first fragment
      contains the TCP/UDP header that\n   would be necessary to associate the packet
      to a session for\n   translation purposes.  Subsequent fragments do not contain
      TCP/UDP\n   port information, but simply carry the same fragmentation identifier\n
      \  specified in the first fragment.  Say, two private hosts originated\n   fragmented
      TCP/UDP packets to the same destination host.  And, they\n   happened to use
      the same fragmentation identifier.  When the target\n   host receives the two
      unrelated datagrams, carrying same\n   fragmentation id, and from the same assigned
      host address, it is\n   unable to determine which of the two sessions the datagrams
      belong\n   to.  Consequently, both sessions will be corrupted.\"\n   Because
      of this, if the mobile node or foreign agent for any reason\n   needs to send
      fragmented packets, the fragmentation MUST be done\n   prior to the encapsulation.
      \ This differs from the case for IP-in-IP\n   tunnelling, where fragmentation
      may be done before or after\n   encapsulation, although RFC 2003 [4] recommends
      doing it before\n   encapsulation.\n   A similar issue exists with some firewalls,
      which may have rules that\n   only permit traffic on certain TCP and UDP ports,
      and not arbitrary\n   outbound (or inbound) IP traffic.  If this is the case
      and the\n   firewall is not set to do packet reassembly, a home agent behind
      a\n   firewall will also have to do packet fragmentation before MIP UDP\n   encapsulation.
      \ Otherwise, only the first fragment (which contains\n   the UDP header) will
      be allowed to pass from the home agent out\n   through the firewall.\n   For
      this reason, the home agent SHOULD do packet fragmentation before\n   it does
      MIP UDP encapsulation.\n"
    title: 4.8 Packet fragmentation
  - contents:
    - "4.9 Tunnel Keepalive\n   As the existence of the bi-directional UDP tunnel
      through the NAT is\n   dependent on the NAT keeping state information associated
      with a\n   session, as described in RFC 2663 [11], and as the NAT may decide\n
      \  that the session has terminated after a certain time, keepalive\n   messages
      may be needed to keep the tunnel open.  The keepalives\n   should be sent more
      often than the timeout value used by the NAT.\n   This timeout may be assumed
      to be a couple of minutes, according to\n   RFC 2663 [11], but it is conceivable
      that shorter timeouts may exist\n   in some NATs.\n   For this reason the extension
      used to set up the UDP tunnel has the\n   option of setting the keepalive message
      interval to another value\n   than the default value, see Section 3.2.\n   The
      keepalive message sent MUST consist of a properly UDP\n   encapsulated ICMP
      echo request directed to the home agent.\n   For each mobility binding which
      has UDP tunnelling established, the\n   non-HA endpoint of the Mobile-IP UDP
      tunnel MUST send a keepalive\n   packet if no other packet to the HA has been
      sent in K seconds.  Here\n   K is a parameter with a default value of 110 seconds.
      \ K may be set\n   to another value by the HA as described in the UDP tunnelling
      reply\n   extension (Section 3.2).\n   Except for the case where the mobile
      node registers with a co-located\n   address through an FA (see Section 4.11)
      MIP UDP tunnelling is done\n   using the same ports that have already been used
      for the registration\n   request / reply exchange.  The MN or FA will send its
      first keepalive\n   message at the earliest K seconds after the registration
      request was\n   sent.  The same UDP source port MUST be used for the keepalive\n
      \  messages as was used for the original Registration Messages and for\n   data
      messages.\n   The remote UDP tunnel endpoint MUST use two-way keepalives consisting\n
      \  of UDP encapsulated ICMP Echo Request/Reply messages.  The rationale\n   for
      using two-way keepalives is two-fold:\n   1. Two-way keepalives allow the mobile
      node to detect loss of a NAT\n      mapping.  Detection of NAT mapping loss
      in turn allows the MN to\n      compensate by re-registering and using a shorter
      keepalive to\n      avoid loss of NAT mappings in the future.\n   2. One-way
      keepalives (keepalives sent by MN or FA, but without any\n      reply from the
      home agent) actually cause more keepalive traffic\n      overhead; the keepalive
      messages have to be sent more frequently\n      to compensate for occasional
      loss of keepalive messages.  In\n      contrast, two-way keepalives are acknowledged,
      and retransmissions\n      occur only when a response is not received for a
      keepalive request\n      within a reasonable time.\n"
    title: 4.9 Tunnel Keepalive
  - contents:
    - "4.10 Detecting and compensating for loss of NAT mapping\n   When a mobile node
      is using UDP encapsulated ICMP Echo Request/Reply\n   messages as keepalives,
      it will have to deal with the possibility\n   that a NAT mapping is lost by
      a NAT device.  The crucial thing here\n   is of course not the loss of the NAT
      mapping in itself; but rather\n   that the home agent, in the absence of a Registration
      Request through\n   the new mapping, will continue to send traffic to the NAT
      port\n   associated with the old mapping.\n   If the mobile node does not get
      a reply to its UDP encapsulated ICMP\n   Echo Request even after a number of
      retransmissions, and is still\n   connected to the same router that was used
      to establish the current\n   mobility binding, the mobile node SHOULD re-register
      with the home\n   agent by sending an Registration Request.  This lets the HA
      know\n   about the new NAT mapping and restores connectivity between mobile\n
      \  node and home agent.\n   Having established a new mobility binding, the mobile
      node MAY use a\n   shorter keepalive interval than before the NAT mapping was
      lost; in\n   particular, the mobile node MAY deviate from the keepalive interval\n
      \  assigned by the home agent.  If the binding loss continues to occur,\n   the
      mobile node may shorten the keepalive interval each time it re-\n   registers,
      in order to end up with a keepalive interval that is\n   sufficient to keep
      the NAT mapping alive.  The strategy used to\n   arrive at a keepalive interval
      when a NAT mapping is lost is\n   implementation dependent.  However, the mobile
      node MUST NOT use a\n   keepalive less than 10 seconds.\n   Note that the above
      discussion only applies when the mobile node is\n   re-registering through the
      same router, and thus presumably through\n   the same NAT device that lost a
      NAT mapping earlier.  If the MN moves\n   and still finds itself behind a NAT,
      it SHOULD return to its original\n   keepalive interval (the default value,
      or as assigned by the home\n   agent) and it SHOULD NOT do any keepalive interval
      compensation\n   unless it discovers a loss of NAT mapping in the new environment.\n
      \  The home agent MUST NOT attempt to detect or compensate for NAT\n   binding
      loss by dynamically changing the keepalive interval assigned\n   in the Registration
      Reply; the home agent does not have enough\n   information to do this reliably
      and should thus not do it at all.\n   The mobile node is in a much better position
      to determine when a NAT\n   mapping has actually been lost.  Note also that
      a MN is allowed to\n   let a NAT mapping expire if the MN no longer needs connectivity.\n
      \  The discussion above does only in a limited sense apply to a foreign\n   agent
      which is situated behind a NAT and using MIP UDP tunnelling.\n   In this case,
      it is a matter of permanently configuring the FA to use\n   a keepalive interval
      which is lower than the NAT mapping lifetime,\n   rather than trying to dynamically
      adapt to the binding lifetimes of\n   different NATs.\n"
    title: 4.10 Detecting and compensating for loss of NAT mapping
  - contents:
    - "4.11 Co-located registration through FA\n   This section summarizes the protocol
      details which have been\n   necessary in order to handle and support the case
      when a mobile node\n   registers with a co-located address through a foreign
      agent, due to\n   the FA advertisements having the 'R' bit set.  It gives background\n
      \  information, but lists no new requirements.\n   When a mobile registers a
      co-located care-of address through an FA,\n   the registration request which
      reaches the HA will have a different\n   care-of address in the registration
      request compared to the source\n   address in the registration request IP-header.
      \ If the registration\n   request also contains a UDP Tunnel Request Extension,
      the HA will\n   erroneously set up a UDP tunnel, which will go to the FA instead
      of\n   the MN.  For this reason, as mentioned in Section 4.4, the mobile\n   node
      must not include a UDP Tunnel Request Extension in the\n   registration if it
      is registering a co-located address through an FA\n   which does not have the
      'U' bit set in its advertisements.\n   In order to still be able to use MIP
      UDP tunnelling in this case,\n   foreign agents which are situated behind a
      NAT are encouraged to send\n   advertisements which have the 'U' bit set, as
      described in Section\n   3.4.\n   If the FA advertisement has the 'U' bit set,
      indicating that it is\n   behind a NAT, and also the 'R' bit set, and the mobile
      node wishes to\n   use a co-located care-of address, it MUST set the 'R' flag
      in the UDP\n   Tunnel Request Extension, in order to inform the HA of the situation\n
      \  so that it may act appropriately, as described in Section 4.4.\n   Because
      the UDP tunnel is now taking another path than the\n   registration requests,
      the home agent, when handling registrations of\n   this type, must wait till
      the arrival of the first keepalive packet\n   before it can set up the tunnel
      to the correct address and port.  To\n   reduce the possibility of tunnel hijacking
      by sending a keepalive\n   with a phony source address, it is required that
      only the port of the\n   keepalive packet may be different from that of the
      registration\n   request; the source address must be the same.  This means that
      if the\n   FA and MN are communicating with the HA through different NATs, the\n
      \  connection will fail.\n"
    title: 4.11 Co-located registration through FA
  title: 4. Protocol Behaviour
- contents:
  - '5. Implementation Issues

    '
  - contents:
    - "5.1 Movement Detection and Private Address Aliasing\n   In providing a mobile
      node with a mechanism for NAT traversal of\n   Mobile IP traffic, we expand
      the address space where a mobile node\n   may function and acquire care-of addresses.
      \ With this comes a new\n   problem of movement detection and address aliasing.
      \ We here have a\n   case which may not occur frequently, but is mentioned for\n
      \  completeness:\n   Since private networks use overlapping address spaces,
      they may be\n   mistaken for one another in some situations; this is referred
      to as\n   private address aliasing in this document.  For this reason, it may\n
      \  be necessary for mobile nodes implementing this specification to\n   monitor
      the link layer address(es) of the gateway(s) used for sending\n   packets.  A
      change in the link layer address indicates probable\n   movement to a new network,
      even if the IP address remains reachable\n   using the new link layer address.\n
      \  For instance, a mobile node may obtain the co-located care-of address\n   10.0.0.1,
      netmask 255.0.0.0, and gateway 10.255.255.254 using DHCP\n   from network #1.
      \ It then moves to network #2, which uses an\n   identical addressing scheme.
      \ The only difference for the mobile node\n   is the gateway's link layer address.
      \ The mobile node should store\n   the link layer address it initially obtains
      for the gateway (using\n   ARP, for instance).  The mobile node may then detect
      changes in the\n   link layer address in successive ARP exchanges as part of
      its\n   ordinary movement detection mechanism.\n   In rare cases the mobile
      nodes may not be able to monitor the link\n   layer address of the gateway(s)
      it is using, and may thus confuse one\n   point of attachment with another.
      \ This specification does not\n   explicitly address this issue.  The potential
      traffic blackout caused\n   by this situation may be limited by ensuring that
      the mobility\n   binding lifetime is short enough; the re-registration caused
      by\n   expiration of the mobility binding fixes the problem (see Section\n   5.2).\n"
    title: 5.1 Movement Detection and Private Address Aliasing
  - contents:
    - "5.2 Mobility Binding Lifetime\n   When responding to a registration request
      with a registration reply,\n   the home agent is allowed to decrease the lifetime
      indicated in the\n   registration request, as covered in RFC 3344 [10].  When
      using UDP\n   tunnelling, there are some cases where a short lifetime is\n   beneficial.\n
      \  First, if the NAT mapping maintained by the NAT device is dropped, a\n   connection
      blackout will arise.  New packets sent by the mobile node\n   (or the foreign
      agent) will establish a new NAT mapping, which the\n   home agent will not recognize
      until a new mobility binding is\n   established by a new registration request.\n
      \  A second case where a short lifetime is useful is related to the\n   aliasing
      of private network addresses.  In case the mobile node is\n   not able to detect
      mobility and ends up behind a new NAT device (as\n   described in Section 5.1),
      a short lifetime will ensure that the\n   traffic blackout will not be exceedingly
      long, and is terminated by a\n   re-registration.\n   The definition of \"short
      lifetime\" in this context is dependent on\n   the requirements of the usage
      scenario.  Suggested maximum lifetime\n   returned by the home agent is 60 seconds,
      but in case the\n   abovementioned scenarios are not considered a problem, longer\n
      \  lifetimes may of course be used.\n"
    title: 5.2 Mobility Binding Lifetime
  title: 5. Implementation Issues
- contents:
  - "6. Security Considerations\n   The ordinary Mobile IP security mechanisms are
    also used with the NAT\n   traversal mechanism described in this document.  However,
    there is\n   one noticeable change: the NAT traversal mechanism requires that
    the\n   HA trust unauthenticated address (and port) fields possibly modified\n
    \  by NATs.\n   Relying on unauthenticated address information when forming or\n
    \  updating a mobility binding leads to several redirection attack\n   vulnerabilities.
    \ In essence, an attacker may do what NATs do, i.e.,\n   modify addresses and
    ports and thus cause traffic to be redirected to\n   a chosen address.  The same
    vulnerabilities apply to both MN-HA and\n   FA-HA NAT traversal.\n   In more detail:
    without a NAT, the care-of address in the\n   registration request will be directly
    used by the HA to send traffic\n   back to the MN (or the FA), and the care-of
    address is protected by\n   the MN-HA (or FA-HA) authentication extension.  When
    communicating\n   across a NAT, the effective care-of address from the HA point
    of view\n   is that of the NAT, which is not protected by any authentication\n
    \  extension, but inferred from the apparent IP source address of\n   received
    packets.  This means that by using the mobile IP\n   registration extensions described
    in this document to enable\n   traversal of NATs, one is opening oneself up to
    having the care-of\n   address of a MN (or a FA) maliciously changed by an attacker.\n
    \  Some, but not all, of the attacks could be alleviated to some extent\n   by
    using a simple routability check.  However, this document does not\n   specify
    such a mechanism for simplicity reasons and because the\n   mechanism would not
    protect against all redirection attacks.  To\n   limit the duration of such redirection
    attacks, it is RECOMMENDED to\n   use a conservative (that is, short) mobility
    binding lifetime when\n   using the NAT traversal mechanism specified in this
    document.\n   The known security issues are described in the sections that follow.\n"
  - contents:
    - '6.1 Traffic Redirection Vulnerabilities

      '
    - contents:
      - "6.1.1 Manipulation of the Registration Request Message\n   An attacker on
        the route between the mobile node (or foreign agent)\n   and the home agent
        may redirect mobility bindings to a desired\n   address simply by modifying
        the IP and UDP headers of the\n   Registration Request message.  Having modified
        the binding, the\n   attacker no longer needs to listen to (or manipulate)
        the traffic.\n   The redirection is in force until the mobility binding expires
        or the\n   mobile node re-registers.\n   This vulnerability may be used by
        an attacker to read traffic\n   destined to a mobile node, and to send traffic
        impersonating the\n   mobile node.  The vulnerability may also be used to
        redirect traffic\n   to a victim host in order to cause denial-of-service
        on the victim.\n   The only defense against this vulnerability is to have
        a short time\n   between re-registrations, which limits the duration of the\n
        \  redirection attack after the attacker has stopped modifying\n   registration
        messages.\n"
      title: 6.1.1 Manipulation of the Registration Request Message
    - contents:
      - "6.1.2 Sending a Bogus Keepalive Message\n   When registering through an FA
        using a co-located care-of address,\n   another redirection vulnerability
        opens up.  Having exchanged\n   Registration Request/Reply messages with the
        HA through the FA, the\n   MN is expected to send the first keepalive message
        to the HA, thus\n   finalizing the mobility binding (the binding will remain
        in a \"half\n   bound\" state until the keepalive is received).\n   Having
        observed a Registration Request/Reply exchange, an attacker\n   may send a
        bogus keepalive message assuming that the mobility binding\n   is in the \"half
        bound\" state.  This opens up a similar redirection\n   attack as discussed
        in Section 6.1.1.  Note, however, that the\n   attacker does not need to be
        able to modify packets in flight; simply\n   being able to observe the Registration
        Request/Reply message exchange\n   is sufficient to mount the attack.\n   With
        this in mind, the home agent MUST NOT accept a keepalive message\n   from
        a different source IP address than where the Registration\n   Request came
        from, as specified in Section 4.6.  This requirement\n   limits the extent
        of the attack to redirecting the traffic to a bogus\n   UDP port, while the
        IP address must remain the same as in the initial\n   Registration Request.\n
        \  The only defenses against this vulnerability are: (1) to have a short\n
        \  time between re-registrations, which limits the duration of the\n   redirection
        attack after the attacker has stopped sending bogus\n   keepalive messages,
        and (2) to minimize the time the binding is in a\n   \"half bound\" state
        by having the mobile node send the first keepalive\n   message immediately
        after receiving an affirmative registration\n   reply.\n"
      title: 6.1.2 Sending a Bogus Keepalive Message
    title: 6.1 Traffic Redirection Vulnerabilities
  - contents:
    - "6.2 Use of IPsec\n   If the intermediate network is considered insecure, it
      is recommended\n   that IPsec be used to protect user data traffic.  However,
      IPsec does\n   not protect against the redirection attacks described previously,\n
      \  other than to protect confidentiality of hijacked user data traffic.\n   The
      NAT traversal mechanism described in this document allows all\n   IPsec-related
      traffic to go through NATs without any modifications to\n   IPsec.  In addition,
      the IPsec security associations do not need to\n   be re-established when the
      mobile node moves.\n"
    title: 6.2 Use of IPsec
  - contents:
    - "6.3 Firewall Considerations\n   This document does not specify a general firewall
      traversal\n   mechanism.  However, the mechanism makes it possible to use only
      a\n   single address and a port for all MN-HA (or FA-HA) communication.\n   Furthermore,
      using the same port for the MIP UDP tunnelled traffic as\n   for control messages
      makes it quite probable that if a MIP\n   registration can reach the home agent,
      MIP tunnelling and reverse\n   tunnelling using the described mechanism will
      also work.\n"
    title: 6.3 Firewall Considerations
  title: 6. Security Considerations
- contents:
  - "7. UNSAF Considerations\n   The mechanism described in this document is not an
    \"UNilateral Self-\n   Address Fixing\" (UNSAF) mechanism.  Although the mobile
    node makes no\n   attempt to determine or use the NAT translated address, the
    mobile\n   node through the registration process does attempt to keep the NAT\n
    \  mapping alive through refresh messages.  This section attempts to\n   address
    issues that may be raised through this usage through the\n   framework of the
    unsaf considerations IAB document [13].\n   1. Precise definition.\n      This
    proposal extends the Mobile IP v4 registration process to\n      work across intervening
    NATs.  The Home Agent detects the presence\n      of the NAT by examining the
    source address in the packet header\n      and comparing it with the address contained
    in the registration\n      message.\n      The NAT address and port detected by
    the home agent are not\n      exported or communicated to any other node anywhere.\n
    \  2. Exit strategy.\n      This mechanism will go out of use as IPv6 and Mobile
    IP v6 is\n      deployed, obviating the need for MIPv4 NAT traversal.\n      It
    can also be noted that this mechanism makes no changes to the\n      base MIPv4
    protocol which makes it dependent on the presence of\n      NATs or the current
    extensions - i.e., no additional protocol\n      changes would be needed if NATs
    were to go away.\n   3. Issues making systems more brittle.\n      The specific
    issue which is relevant here is that the effective\n      care-of address (being
    the source address in the IP header\n      received by the HA) is not protected
    by the Mobile IP\n      authentication extension, and therefore may be spoofed.
    \ This is\n      discussed in some detail in Section 6, Security Considerations.\n
    \  4. Requirements for longer term solutions.\n      The trivial long term solution
    is a transition to an environment\n      where NATs are not required.  The most
    obvious such environment\n      would be an IPv6 based internet.\n      In the
    presence of NATs, an improved solution would require\n      *  the ability to
    discover the translations done by each NAT along\n         the route\n      *
    \ the ability to validate the authority of each NAT to do those\n         translations\n
    \     *  communicating as part of the signed registration request the\n         address
    of the NAT closest to the HA, for use as the effective\n         care-of address
    from the viewpoint of the HA.\n      *  configuration of all intermediate NATs
    to accept only packets\n         from the neighbour NATs.\n   5. Impact on existing,
    deployed NATs.\n      One precursor of the mechanism described here has been used\n
    \     successfully across deployed NATs in Sweden, Germany, England,\n      Japan
    and the USA, without necessitating neither adjustments of\n      the NATs in question,
    nor adjustment of any protocol parameters.\n      At the time of writing, little
    experience exist with the exact\n      implementation proposed in this document,
    but effort has been put\n      into making this mechanism even more robust and
    adaptive than its\n      precursors.\n      With respect to the base Mobile IP
    specification, the impact of\n      this document is that an increased frequency
    of registration\n      requests is recommended from a security perspective when
    the NAT\n      traversal mechanism is used.\n"
  title: 7. UNSAF Considerations
- contents:
  - "8. IANA Considerations\n   The numbers for the extensions defined in this document
    have been\n   taken from the numbering space defined for Mobile IP messages,\n
    \  registration extensions and error codes defined in RFC 3344 [10].\n   This
    document proposes one new message, two new extensions and a new\n   error code
    that require type numbers and an error code value that\n   have been assigned
    by IANA.  The two new extensions also introduce\n   two new sub-type numbering
    spaces to be managed by IANA.\n   Section 3.1 defines a new Mobile IP extension,
    the UDP Tunnel Request\n   Extension.  The type number for this extension is 144.
    \ This\n   extension introduces a new sub-type numbering space where the value
    0\n   has been assigned to this extension.  Approval of new Tunnel Request\n   Extension
    sub-type numbers is subject to Expert Review, and a\n   specification is required
    [7].\n   Section 3.2 defines a new Mobile IP extension, the UDP Tunnel Reply\n
    \  Extension.  The type value for this extension is 44.  This extension\n   introduces
    a new sub-type numbering space where the value 0 has been\n   assigned to this
    extension.  Approval of new Tunnel Reply Extension\n   sub-type numbers is subject
    to Expert Review, and a specification is\n   required [7].\n   Section 3.3 defines
    a new Mobile IP message, the Tunnel Data message.\n   The type value for this
    message is 4.\n   Section 3.5 defines a new error code, ERROR_HA_UDP_ENCAP_UNAVAIL:\n
    \  \"Requested UDP tunnel encapsulation unavailable\", from the numbering\n   space
    for values defined for use with the Code field of Mobile IP\n   Registration Reply
    Messages.  Code number 142 has been assigned from\n   the subset \"Error Codes
    from the Home Agent\".\n   The values for the Next Header field in the MIP Tunnel
    Data Message\n   (Section 3.3) shall be the same as those used for the Protocol
    field\n   of the IP header [2], and requires no new number assignment.\n"
  title: 8. IANA Considerations
- contents:
  - "9. Intellectual Property Rights\n   The IETF has been notified of intellectual
    property rights claimed in\n   regard to some or all of the specification contained
    in this\n   document.  For more information consult the online list of claimed\n
    \  rights (www.ietf.org/ipr.html).\n"
  title: 9. Intellectual Property Rights
- contents:
  - "10. Acknowledgements\n   Much of the text in Section 4.2 has been taken almost
    verbatim from\n   RFC 2003, IP Encapsulation within IP [4].\n   Adding support
    for the FA case was suggested by George Tsirtsis and\n   Frode B. Nilsen.  Roy
    Jose pointed out a problem with binding\n   updates, and Frode, Roy and George
    pointed out that there are cases\n   where triangular routes may work, and suggested
    that reverse\n   tunnelling need not be mandatory.  Roy and Qiang Zhang drew attention\n
    \  to a number of sections which needed to be corrected or stated more\n   clearly.\n
    \  Phil Roberts helped remove a number of rough edges.  Farid Adrangi\n   pointed
    out the DoS issue now covered in Security Considerations\n   (Section 6).  Francis
    Dupont's helpful comments made us extend the\n   Security Considerations section
    to make it more comprehensive and\n   clear.  Milind Kulkarni and Madhavi Chandra
    pointed out the required\n   match between the FA source and care-of addresses
    when the mechanism\n   is used by an FA, and also contributed a number of clarifications
    to\n   the text.\n   Thanks also to our co-workers, Ilkka Pietikainen, Antti Nuopponen
    and\n   Timo Aalto at Netseal and Hans Sjostrand, Fredrik Johansson and Erik\n
    \  Liden at ipUnplugged.  They have read and re-read the text, and\n   contributed
    many valuable corrections and insights.\n"
  title: 10. Acknowledgements
- contents:
  - "11. Normative References\n   [1]  Postel, J., \"User Datagram Protocol\", STD
    6, RFC 768, August\n        1980.\n   [2]  Postel, J., \"Internet Protocol\",
    STD 5, RFC 791, September 1981.\n   [3]  Hanks, S., Li, T., Farinacci, D. and
    P. Traina, \"Generic Routing\n        Encapsulation (GRE)\", RFC 1701, October
    1994.\n   [4]  Perkins, C., \"IP Encapsulation within IP\", RFC 2003, October\n
    \       1996.\n   [5]  Perkins, C., \"Minimal Encapsulation within IP\", RFC 2004,\n
    \       October 1996.\n   [6]  Bradner, S., \"Key words for use in RFCs to Indicate
    Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [7]  Narten,
    T. and H. Alvestrand, \"Guidelines for Writing an IANA\n        Considerations
    Section in RFCs\", BCP 26, RFC 2434, October 1998.\n   [8]  Farinacci, D., Li,
    T., Hanks, S., Meyer, D. and P. Traina,\n        \"Generic Routing Encapsulation
    (GRE)\", RFC 2784, March 2000.\n   [9]  Montenegro, G., \"Reverse Tunneling for
    Mobile IP, revised\", RFC\n        3024, January 2001.\n   [10] Perkins, C., \"IP
    Mobility Support for IPv4\", RFC 3344, August\n        2002.\n"
  title: 11. Normative References
- contents:
  - "12. Informative References\n   [11] Srisuresh, P. and M. Holdrege, \"IP Network
    Address Translator\n        (NAT) Terminology and Considerations\", RFC 2663,
    August 1999.\n   [12] Srisuresh, P. and K. Egevang, \"Traditional IP Network Address\n
    \       Translator (Traditional NAT)\", RFC 3022, January 2001.\n   [13] Daigle,
    L., Editor, and IAB, \"IAB Considerations for UNilateral\n        Self-Address
    Fixing (UNSAF)\", RFC 3424, November 2002.\n"
  title: 12. Informative References
- contents:
  - "13. Authors' Addresses\n   Henrik Levkowetz\n   ipUnplugged AB\n   Arenavagen
    23\n   Stockholm  S-121 28\n   SWEDEN\n   Phone: +46 708 32 16 08\n   EMail: henrik@levkowetz.com\n
    \  Sami Vaarala\n   Netseal\n   Niittykatu 6\n   Espoo  02201\n   FINLAND\n   Phone:
    +358 9 435 310\n   EMail: sami.vaarala@iki.fi\n"
  title: 13. Authors' Addresses
- contents:
  - "14.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 14.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
