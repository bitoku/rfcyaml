Abstract This memo defines an encoding scheme for the Japanese Characters, describes "ISO 2022 JP 1", which is used in electronic mail [RFC  822], and network news [RFC 1036].
Also this memo provides a listing of the Japanese Character Set that can be used in this encoding scheme.
This document uses terms that appear in capital letters to indicate particular requirements of this specification.
Those terms are "MUST", "SHOULD", "MUST NOT", "SHOULD NOT", and "MAY".
The meaning of each term are found in [RFC 2119] 3.
Introduction RFC 1468 defines the way Japanese Characters are encoded, likewise what this memo defines.
It defines the use of JIS X 0208 as the double byte character set in ISO 2022 JP text.
Today, many operating systems support proprietary extended Japanese characters or JIS X 0212, This includes the Unicode character set, which does not conform to JIS X 0201 nor JIS X 0208.
Therefore, this limits the ability to communicate and correspond precise information because of the limited availability of Kanji characters.
Fortunately JIS (Japanese Industry Standard) defines JIS X 0212 as "code of the supplementary Japanese graphic character set for information interchange".
Most Japanese characters which are used in regular electronic mail in most cases can be accommodated in JIS X 0201, JIS X 0208 and JIS X 0212.
Also it is recognized that there is a tendency to use Unicode, however, Unicode is not yet widely used and there is a certain limitation with old electronic mail system.
Furthermore, the purpose of this comment is to add the capability of writing out JIS X 0212.
This comment does not describe any representation of iso 2022 jp 1 version information in addition to JIS X 0212 support.
In "ISO 2022 JP 1" text, the initial character code of the message is in ASCII.
The "double byte seq"(see "Format Syntax" section) (ESC "$"
The end of "ISO 2022 JP 1" text MUST be in ASCII.
Also it is strongly recommended to back up to the ASCII at the end of each line rather than JIS X
if there is any none ASCII character in middle of a line.
Since "ISO 2022 JP 1" is designed to add the capability of writing out JIS X 0212, if the message does not contain none of JIS X 0212 characters.
ISO 2022 JP" text MUST BE used.
JIS X 0201 Roman is not identical to the ASCII with two different characters.
The following list are the escape sequences and character sets that can be used in "ISO 2022 JP 1" text.
The registered number in the ISO 2375 Register which allow double byte ideographic scripts to be encoded within ISO/IEC 2022 code structure is indicated as reg# below.
ESC ( B    G0 42
( D  G0 Other restrictions are given in the Formal Syntax below.
The notational conventions used here are identical to those used in STD 11, RFC 822 [RFC822].
The   (asterisk) convention is as follows:
l m something meaning at least l
and at most m something, with l and m taking default values of 0 and infinity, respectively.
iso 2022 jp 1 text
double byte segment single byte segment   single byte seq  single byte char double byte segment
double byte seq  (one of 94 one of 94)
<any 7 bit value>;(0 177,0. 127.)
<any 7BIT, including bare CR & bare LF, but NOT including CRLF, and not including ESC, SI, SO> 6.
This memo raises no known security issues.
The name to be used for the Japanese encoding scheme in content is "ISO 2022 JP 1".
When this name is used in the MIME message form, it would be: Content Type: text/plain
; charset iso 2022 jp 1
Since the "ISO 2022 JP 1" is 7bit encoding, it will be unnecessary to encode in another format by specifying the "Content Transfer  Encoding" header.
Also applying Based64 or Quoted Printable encoding MAY cause today's software to fail to decode the message. "
ISO 2022 JP 1" can be used in MIME headers.
Also "ISO 2022 JP 1" text can be used with Base64 or Quoted Printable encoding.
As long as mail systems are capable of writing out Unicode, it is recommended to also write out Unicode text in addition to "ISO
Also writing out "ISO 2022 JP" text in addition to "ISO 2022 JP 1" is strongly encouraged for backward compatibility reasons.
Some mail systems write out 8bits characters in 'parameter' and 'value' defined in [RFC 822] and [RFC 1521].
All 8bit characters MUST NOT be used in those fields.
The implementation of future mail systems SHOULD support those only for interoperability reasons.
