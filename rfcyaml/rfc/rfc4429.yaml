- contents:
  - '         Optimistic Duplicate Address Detection (DAD) for IPv6

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Optimistic Duplicate Address Detection is an interoperable\n   modification
    of the existing IPv6 Neighbor Discovery (RFC 2461) and\n   Stateless Address Autoconfiguration
    (RFC 2462) processes.  The\n   intention is to minimize address configuration
    delays in the\n   successful case, to reduce disruption as far as possible in
    the\n   failure case, and to remain interoperable with unmodified hosts and\n
    \  routers.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Problem Statement ..........................................3\n      1.2.
    Definitions ................................................4\n      1.3. Address
    Types ..............................................4\n      1.4. Abbreviations
    ..............................................5\n   2. Optimistic DAD Behaviors
    ........................................6\n      2.1. Optimistic Addresses .......................................6\n
    \     2.2. Avoiding Disruption ........................................6\n      2.3.
    Router Redirection .........................................7\n      2.4. Contacting
    the Router ......................................7\n   3. Modifications to RFC-Mandated
    Behavior ..........................8\n      3.1. General ....................................................8\n
    \     3.2. Modifications to RFC 2461 Neighbor Discovery ...............8\n      3.3.
    Modifications to RFC 2462 Stateless Address\n           Autoconfiguration ..........................................9\n
    \  4. Protocol Operation .............................................10\n      4.1.
    Simple Case ...............................................10\n      4.2. Collision
    Case ............................................10\n      4.3. Interoperation
    Cases ......................................11\n      4.4. Pathological Cases
    ........................................11\n   5. Security Considerations ........................................12\n
    \  Appendix A. Probability of Collision ..............................13\n      A.1.
    The Birthday Paradox ......................................13\n      A.2. Individual
    Moving Nodes ...................................14\n   Normative References ..............................................15\n
    \  Informative References ............................................15\n   Acknowledgements
    ..................................................16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Optimistic Duplicate Address Detection (DAD) is a modification
    of the\n   existing IPv6 Neighbor Discovery (ND) [RFC2461] and Stateless Address\n
    \  Autoconfiguration (SLAAC) [RFC2462] processes.  The intention is to\n   minimize
    address configuration delays in the successful case, and to\n   reduce disruption
    as far as possible in the failure case.\n   Optimistic DAD is a useful optimization
    because in most cases DAD is\n   far more likely to succeed than fail.  This is
    discussed further in\n   Appendix A.  Disruption is minimized by limiting nodes'
    participation\n   in Neighbor Discovery while their addresses are still Optimistic.\n
    \  It is not the intention of this memo to improve the security,\n   reliability,
    or robustness of DAD beyond that of existing standards,\n   but merely to provide
    a method to make it faster.\n"
  - contents:
    - "1.1.  Problem Statement\n   The existing IPv6 address configuration mechanisms
      provide adequate\n   collision detection mechanisms for the fixed hosts they
      were designed\n   for.  However, a growing population of nodes need to maintain\n
      \  continuous network access despite frequently changing their network\n   attachment.
      \ Optimizations to the DAD process are required to provide\n   these nodes with
      sufficiently fast address configuration.\n   An optimized DAD method needs to:\n
      \  * provide interoperability with nodes using the current standards.\n   *
      remove the RetransTimer delay during address configuration.\n   * ensure that
      the probability of address collision is not increased.\n   * improve the resolution
      mechanisms for address collisions.\n   * minimize disruption in the case of
      a collision.\n   It is not sufficient to merely reduce RetransTimer in order
      to reduce\n   the handover delay, as values of RetransTimer long enough to\n
      \  guarantee detection of a collision are too long to avoid disruption\n   of
      time-critical services.\n"
    title: 1.1.  Problem Statement
  - contents:
    - "1.2.  Definitions\n   Definitions of requirements keywords ('MUST NOT', 'SHOULD
      NOT',\n   'MAY', 'SHOULD', 'MUST') are in accordance with the IETF Best Current\n
      \  Practice, RFC 2119 [RFC2119]\n   Address Resolution - Process defined by
      [RFC2461], section 7.2.\n   Neighbor Unreachability Detection (NUD) - Process
      defined by\n        [RFC2461], section 7.3.\n   Standard Node - A Standard Node
      is one that is compliant with\n        [RFC2461] and [RFC2462].\n   Optimistic
      Node (ON) - An Optimistic Node is one that is compliant\n        with the rules
      specified in this memo.\n   Link - A communication facility or medium over which
      nodes can\n        communicate at the link layer.\n   Neighbors - Nodes on the
      same link, which may therefore be competing\n        for the same IP addresses.\n"
    title: 1.2.  Definitions
  - contents:
    - "1.3.  Address Types\n   Tentative address (as per [RFC2462]) - an address whose
      uniqueness on\n        a link is being verified, prior to its assignment to
      an\n        interface.  A Tentative address is not considered assigned to an\n
      \       interface in the usual sense.  An interface discards received\n        packets
      addressed to a Tentative address, but accepts Neighbor\n        Discovery packets
      related to Duplicate Address Detection for the\n        Tentative address.\n
      \  Optimistic address - an address that is assigned to an interface and\n        available
      for use, subject to restrictions, while its uniqueness\n        on a link is
      being verified.  This memo introduces the\n        Optimistic state and defines
      its behaviors and restrictions.\n   Preferred address (as per [RFC2462]) - an
      address assigned to an\n        interface whose use by upper-layer protocols
      is unrestricted.\n        Preferred addresses may be used as the source (or
      destination)\n        address of packets sent from (or to) the interface.\n
      \  Deprecated address (as per [RFC2462]) - An address assigned to an\n        interface
      whose use is discouraged, but not forbidden.  A\n        Deprecated address
      should no longer be used as a source address\n        in new communications,
      but packets sent from or to Deprecated\n        addresses are delivered as expected.
      \ A Deprecated address may\n        continue to be used as a source address
      in communications where\n        switching to a Preferred address causes hardship
      to a specific\n        upper-layer activity (e.g., an existing TCP connection).\n"
    title: 1.3.  Address Types
  - contents:
    - "1.4.  Abbreviations\n   DAD - Duplicate Address Detection.  Technique used
      for SLAAC.  See\n        [RFC2462], section 5.4.\n   ICMP Redirect - See [RFC2461],
      section 4.5.\n   NA - Neighbor Advertisement.  See [RFC2461], sections 4.4 and
      7.\n   NC - Neighbor Cache.  See [RFC2461], sections 5.1 and 7.3.\n   ND - Neighbor
      Discovery.  The process described in [RFC2461].\n   NS - Neighbor Solicitation.
      \ See [RFC2461], sections 4.3 and 7.\n   RA - Router Advertisement.  See [RFC2462],
      sections 4.2 and 6.\n   RS - Router Solicitation.  See [RFC2461], sections 4.1
      and 6.\n   SLAAC - StateLess Address AutoConfiguration.  The process described\n
      \       in [RFC2462].\n   SLLAO - Source Link-Layer Address Option - an option
      to NS, RA, and\n        RS messages, which gives the link-layer address of the
      source of\n        the message.  See [RFC2461], section 4.6.1.\n   TLLAO - Target
      Link-Layer Address Option - an option to ICMP Redirect\n        messages and
      Neighbor Advertisements.  See [RFC2461], sections\n        4.4, 4.5, and 4.6.1.\n"
    title: 1.4.  Abbreviations
  title: 1.  Introduction
- contents:
  - "2.  Optimistic DAD Behaviors\n   This non-normative section discusses Optimistic
    DAD behaviors.\n"
  - contents:
    - "2.1.  Optimistic Addresses\n   [RFC2462] introduces the concept of Tentative
      (in 5.4) and Deprecated\n   (in 5.5.4) addresses.  Addresses that are neither
      are said to be\n   Preferred.  Tentative addresses may not be used for communication,\n
      \  and Deprecated addresses should not be used for new communications.\n   These
      address states may also be used by other standards documents,\n   for example,
      Default Address Selection [RFC3484].\n   This memo introduces a new address
      state, 'Optimistic', that is used\n   to mark an address that is available for
      use but that has not\n   completed DAD.\n   Unless noted otherwise, components
      of the IPv6 protocol stack should\n   treat addresses in the Optimistic state
      equivalently to those in the\n   Deprecated state, indicating that the address
      is available for use\n   but should not be used if another suitable address
      is available.  For\n   example, Default Address Selection [RFC3484] uses the
      address state\n   to decide which source address to use for an outgoing packet.\n
      \  Implementations should treat an address in state Optimistic as if it\n   were
      in state Deprecated.  If address states are recorded as\n   individual flags,
      this can easily be achieved by also setting\n   'Deprecated' when 'Optimistic'
      is set.\n   It is important to note that the address lifetime rules of [RFC2462]\n
      \  still apply, and so an address may be Deprecated as well as\n   Optimistic.
      \ When DAD completes without incident, the address becomes\n   either a Preferred
      or a Deprecated address, as per [RFC2462].\n"
    title: 2.1.  Optimistic Addresses
  - contents:
    - "2.2.  Avoiding Disruption\n   In order to avoid interference, it is important
      that an Optimistic\n   Node does not send any messages from an Optimistic Address
      that will\n   override its neighbors' Neighbor Cache (NC) entries for the address\n
      \  it is trying to configure: doing so would disrupt the rightful owner\n   of
      the address in the case of a collision.\n   This is achieved by:\n   * Clearing
      the 'Override' flag in Neighbor Advertisements for\n        Optimistic Addresses,
      which prevents neighbors from overriding\n        their existing NC entries.
      \ The 'Override' flag is already\n        defined [RFC2461] and used for Proxy
      Neighbor Advertisement.\n   * Never sending Neighbor Solicitations from an Optimistic
      Address.\n        NSes include a Source Link-Layer Address Option (SLLAO), which\n
      \       may cause Neighbor Cache disruption.  NSes sent as part of DAD\n        are
      sent from the unspecified address, without a SLLAO.\n   * Never using an Optimistic
      Address as the source address of a Router\n        Solicitation with a SLLAO.
      \ Another address, or the unspecified\n        address, may be used, or the
      RS may be sent without a SLLAO.\n   An address collision with a router may cause
      a neighboring router's\n   IsRouter flags for that address to be cleared.  However,
      routers do\n   not appear to use the IsRouter flag for anything, and the NA
      sent in\n   response to the collision will reassert the IsRouter flag.\n"
    title: 2.2.  Avoiding Disruption
  - contents:
    - "2.3.  Router Redirection\n   Neighbor Solicitations cannot be sent from Optimistic
      Addresses, and\n   so an ON cannot directly contact a neighbor that is not already
      in\n   its Neighbor Cache.  Instead, the ON forwards packets via its default\n
      \  router, relying on the router to forward the packets to their\n   destination.
      \ In accordance with RFC 2461, the router should then\n   provide the ON with
      an ICMP Redirect, which may include a Target\n   Link-Layer Address Option (TLLAO).
      \ If it does, this will update the\n   ON's NC, and direct communication can
      begin.  If it does not, packets\n   continue to be forwarded via the router
      until the ON has a non-\n   Optimistic address from which to send an NS.\n"
    title: 2.3.  Router Redirection
  - contents:
    - "2.4.  Contacting the Router\n   Generally, an RA will include a SLLAO, however
      this \"MAY be omitted\n   to facilitate in-bound load balancing over replicated
      interfaces\"\n   [RFC2461].  A node with only Optimistic Addresses is unable
      to\n   determine the router's Link-Layer Address as it can neither send an\n
      \  RS to request a unicast RA, nor send an NS to request an NA.  In this\n   case,
      the ON will be unable to communicate with the router until at\n   least one
      of its addresses is no longer Optimistic.\n"
    title: 2.4.  Contacting the Router
  title: 2.  Optimistic DAD Behaviors
- contents:
  - "3.  Modifications to RFC-Mandated Behavior\n   All normative text in this memo
    is contained in this section.\n"
  - contents:
    - "3.1.  General\n   * Optimistic DAD SHOULD only be used when the implementation
      is aware\n        that the address is based on a most likely unique interface\n
      \       identifier (such as in [RFC2464]), generated randomly [RFC3041],\n        or
      by a well-distributed hash function [RFC3972] or assigned by\n        Dynamic
      Host Configuration Protocol for IPv6 (DHCPv6) [RFC3315].\n        Optimistic
      DAD SHOULD NOT be used for manually entered\n        addresses.\n"
    title: 3.1.  General
  - contents:
    - "3.2.  Modifications to RFC 2461 Neighbor Discovery\n   * (modifies section
      6.3.7)  A node MUST NOT send a Router\n        Solicitation with a SLLAO from
      an Optimistic Address.  Router\n        Solicitations SHOULD be sent from a
      non-Optimistic or the\n        Unspecified Address; however, they MAY be sent
      from an\n        Optimistic Address as long as the SLLAO is not included.\n
      \  * (modifies section 7.2.2)  A node MUST NOT use an Optimistic Address\n        as
      the source address of a Neighbor Solicitation.\n   * If the ON isn't told the
      SLLAO of the router in an RA, and it\n        cannot determine this information
      without breaching the rules\n        above, it MUST leave the address Tentative
      until DAD completes\n        despite being unable to send any packets to the
      router.\n   * (modifies section 7.2.2)  When a node has a unicast packet to
      send\n        from an Optimistic Address to a neighbor, but does not know the\n
      \       neighbor's link-layer address, it MUST NOT perform Address\n        Resolution.
      \ It SHOULD forward the packet to a default router on\n        the link in the
      hope that the packet will be redirected.\n        Otherwise, it SHOULD buffer
      the packet until DAD is complete.\n"
    title: 3.2.  Modifications to RFC 2461 Neighbor Discovery
  - contents:
    - "3.3 Modifications to RFC 2462 Stateless Address Autoconfiguration\n   * (modifies
      section 5.5) A host MAY choose to configure a new address\n        as an Optimistic
      Address.  A host that does not know the SLLAO\n        of its router SHOULD
      NOT configure a new address as Optimistic.\n        A router SHOULD NOT configure
      an Optimistic Address.\n   * (modifies section 5.4.2) The host MUST join the
      all-nodes multicast\n        address and the solicited-node multicast address
      of the\n        Tentative address.  The host SHOULD NOT delay before sending\n
      \       Neighbor Solicitation messages.\n   * (modifies section 5.4) The Optimistic
      Address is configured and\n        available for use on the interface immediately.
      \ The address\n        MUST be flagged as 'Optimistic'.\n   * When DAD completes
      for an Optimistic Address, the address is no\n        longer Optimistic and
      it becomes Preferred or Deprecated\n        according to the rules of RFC 2462.\n
      \  * (modifies section 5.4.3) The node MUST NOT reply to a Neighbor\n        Solicitation
      for an Optimistic Address from the unspecified\n        address.  Receipt of
      such an NS indicates that the address is a\n        duplicate, and it MUST be
      deconfigured as per the behaviour\n        specified in RFC 2462 for Tentative
      addresses.\n   * (modifies section 5.4.3) The node MUST reply to a Neighbor\n
      \       Solicitation for an Optimistic Address from a unicast address,\n        but
      the reply MUST have the Override flag cleared (O=0).\n"
    title: 3.3 Modifications to RFC 2462 Stateless Address Autoconfiguration
  title: 3.  Modifications to RFC-Mandated Behavior
- contents:
  - "4.  Protocol Operation\n   This non-normative section provides clarification
    of the interactions\n   between Optimistic Nodes, and between Optimistic Nodes
    and Standard\n   Nodes.\n   The following cases all consider an Optimistic Node
    (ON) receiving a\n   Router Advertisement containing a new prefix and deciding
    to\n   autoconfigure a new Optimistic Address on that prefix.\n   The ON will
    immediately send out a Neighbor Solicitation to determine\n   if its new Optimistic
    Address is already in use.\n"
  - contents:
    - "4.1.  Simple Case\n   In the non-collision case, the Optimistic Address being
      configured by\n   the new node is unused and not present in the Neighbor Caches
      of any\n   of its neighbors.\n   There will be no response to its NS (sent from
      ::), and this NS will\n   not modify the state of neighbors' Neighbor Caches.\n
      \  The ON already has the link-layer address of the router (from the\n   RA),
      and the router can determine the link-layer address of the ON\n   through standard
      Address Resolution.  Communications can begin as\n   soon as the router and
      the ON have each other's link-layer addresses.\n   After the appropriate DAD
      delay has completed, the address is no\n   longer Optimistic, and becomes either
      Preferred or Deprecated as per\n   RFC 2462.\n"
    title: 4.1.  Simple Case
  - contents:
    - "4.2.  Collision Case\n   In the collision case, the Optimistic Address being
      configured by the\n   new node is already in use by another node, and present
      in the\n   Neighbor Caches (NCs) of neighbors that are communicating with this\n
      \  node.\n   The NS sent by the ON has the unspecified source address, ::, and
      no\n   SLLAO.  This NS will not cause changes to the NC entries of\n   neighboring
      hosts.\n   The ON will hopefully already know all it needs to about the router\n
      \  from the initial RA.  However, if it needs to it can still send an RS\n   to
      ask for more information, but it may not include a SLLAO.  This\n   forces an
      all-nodes multicast response from the router, but will not\n   disrupt other
      nodes' NCs.\n   In the course of establishing connections, the ON might have
      sent NAs\n   in response to received NSes.  Since NAs sent from Optimistic\n
      \  Addresses have O=0, they will not have overridden existing NC\n   entries,
      although they may have resulted in a colliding entry being\n   changed to state
      STALE.  This change is recoverable through standard\n   NUD.\n   When an NA
      is received from the collidee defending the address, the\n   ON immediately
      stops using the address and deconfigures it.\n   Of course, in the meantime
      the ON may have sent packets that identify\n   it as the owner of its new Optimistic
      Address (for example, Binding\n   Updates in Mobile IPv6 [RFC3775]).  This may
      incur some penalty to\n   the ON, in the form of broken connections, and some
      penalty to the\n   rightful owner of the address, since it will receive (and
      potentially\n   reply to) the misdirected packets.  It is for this reason that\n
      \  Optimistic DAD should be used only where the probability of collision\n   is
      very low.\n"
    title: 4.2.  Collision Case
  - contents:
    - "4.3.  Interoperation Cases\n   Once the Optimistic Address has completed DAD,
      it acts exactly like a\n   normal address, and so interoperation cases only
      arise while the\n   address is Optimistic.\n   If an ON attempts to configure
      an address currently Tentatively\n   assigned to a Standard Node, the Standard
      Node will see the Neighbor\n   Solicitation and deconfigure the address.\n   If
      a node attempts to configure an ON's Optimistic Address, the ON\n   will see
      the NS and deconfigure the address.\n"
    title: 4.3.  Interoperation Cases
  - contents:
    - "4.4.  Pathological Cases\n   Optimistic DAD suffers from similar problems to
      Standard DAD; for\n   example, duplicates are not guaranteed to be detected
      if packets are\n   lost.\n   These problems exist, and are not gracefully recoverable,
      in Standard\n   DAD.  Their probability in both Optimistic and Standard DAD
      can be\n   reduced by increasing the RFC 2462 DupAddrDetectTransmits variable
      to\n   greater than 1.\n   This version of Optimistic DAD is dependent on the
      details of the\n   router behavior, e.g., that the router includes SLLAOs in
      RAs and\n   that the router is willing to redirect traffic for the ON.  Where
      the\n   router does not behave in this way, the behavior of Optimistic DAD\n
      \  inherently reverts to that of Standard DAD.\n"
    title: 4.4.  Pathological Cases
  title: 4.  Protocol Operation
- contents:
  - "5.  Security Considerations\n   There are existing security concerns with Neighbor
    Discovery and\n   Stateless Address Autoconfiguration, and this memo does not
    purport\n   to fix them.  However, this memo does not significantly increase\n
    \  security concerns either.\n   Secure Neighbor Discovery (SEND) [RFC3971] provides
    protection\n   against the threats to Neighbor Discovery described in [RFC3756].\n
    \  Optimistic Duplicate Address Detection does not introduce any\n   additional
    threats to Neighbor Discovery if SEND is used.\n   Optimistic DAD takes steps
    to ensure that if another node is already\n   using an address, the proper link-layer
    address in existing Neighbor\n   Cache entries is not replaced with the link-layer
    address of the\n   Optimistic Node.  However, there are still scenarios where
    incorrect\n   entries may be created, if only temporarily.  For example, if a\n
    \  router (while forwarding a packet) sends out a Neighbor Solicitation\n   for
    an address, the Optimistic Node may respond first, and if the\n   router has no
    pre-existing link-layer address for that IP address, it\n   will accept the response
    and (incorrectly) forward any queued packets\n   to the Optimistic Node.  The
    Optimistic Node may then respond in an\n   incorrect manner (e.g., sending a TCP
    RST in response to an unknown\n   TCP connection).  Such transient conditions
    should be short-lived, in\n   most cases.\n   Likewise, an Optimistic Node can
    still inject IP packets into the\n   Internet that will in effect be \"spoofed\"
    packets appearing to come\n   from the legitimate node.  In some cases, those
    packets may lead to\n   errors or other operational problems, though one would
    expect that\n   upper-layer protocols would generally treat such packets robustly,
    in\n   the same way they must treat old and other duplicate packets.\n"
  title: 5.  Security Considerations
- contents:
  - "Appendix A.  Probability of Collision\n   In assessing the usefulness of Duplicate
    Address Detection, the\n   probability of collision must be considered.  Various
    mechanisms such\n   as SLAAC [RFC2462] and DHCPv6 [RFC3315] attempt to guarantee
    the\n   uniqueness of the address.  The uniqueness of SLAAC depends on the\n   reliability
    of the manufacturing process (so that duplicate L2\n   addresses are not assigned)
    and human factors if L2 addresses can be\n   manually assigned.  The uniqueness
    of DHCPv6-assigned addresses\n   relies on the correctness of implementation to
    ensure that no two\n   nodes can be given the same address.\n   \"Privacy Extensions
    to SLAAC\" [RFC3041] avoids these potential error\n   cases by picking an Interface
    Identifier (IID) at random from 2^62\n   possible 64-bit IIDs (allowing for the
    reserved U and G bits).  No\n   attempt is made to guarantee uniqueness, but the
    probability can be\n   easily estimated, and as the following discussion shows,
    probability\n   of collision is exceedingly small.\n"
  - contents:
    - "A.1.  The Birthday Paradox\n   When considering collision probability, the
      Birthday Paradox is\n   generally mentioned.  When randomly selecting k values
      from n\n   possibilities, the probability of two values being the same is:\n
      \          Pb(n,k) = 1-( n! / [ (n-k)! . n^k] )\n   Calculating the probability
      of collision with this method is\n   difficult, however, as one of the terms
      is n!, and (2^62)! is an\n   unwieldy number.  We can, however, calculate an
      upper bound for the\n   probability of collision:\n           Pb(n,k) <= 1-(
      [(n-k+1)/n] ^ [k-1] )\n   which lets us calculate that even for large networks
      the probability\n   of any two nodes colliding is very small indeed:\n           Pb(2^62,
      \   500) <= 5.4e-14\n           Pb(2^62,   5000) <= 5.4e-12\n           Pb(2^62,
      \ 50000) <= 5.4e-10\n           Pb(2^62, 500000) <= 5.4e-08\n   The upper-bound
      formula used above was taken from \"Random Generation\n   of Interface Identifiers\",
      by M. Bagnulo, I. Soto, A. Garcia-\n   Martinez, and A. Azcorra, and is used
      with the kind permission of the\n   authors.\n"
    title: A.1.  The Birthday Paradox
  - contents:
    - "A.2.  Individual Nodes\n   When considering the effect of collisions on an
      individual node, we\n   do not need to consider the Birthday Paradox.  When
      a node moves into\n   a network with K existing nodes, the probability that
      it will not\n   collide with any of the distinct addresses in use is simply
      1-K/N.\n   If it moves to such networks M times, the probability that it will\n
      \  not cause a collision on any of those moves is (1-K/N)^M; thus, the\n   probability
      of it causing at least one collision is:\n           Pc(n,k,m) = 1-[(1-k/n)^m]\n
      \  Even considering a very large number of moves (m = 600000, slightly\n   more
      than one move per minute for one year) and rather crowded\n   networks (k=50000
      nodes per network), the odds of collision for a\n   given node are vanishingly
      small:\n           Pc(2^62,  5000,   600000)     = 6.66e-10\n           Pc(2^62,
      50000,   600000)     = 6.53e-09\n   Each such collision affects two nodes, so
      the probability of being\n   affected by a collision is twice this.  Even if
      the node moves into\n   networks of 50000 nodes once per minute for 100 years,
      the\n   probability of it causing or suffering a collision at any point are
      a\n   little over 1 in a million.\n           Pc(2^62, 50000, 60000000) * 2
      = 1.3e-06\n"
    title: A.2.  Individual Nodes
  title: Appendix A.  Probability of Collision
- contents:
  - "Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC2461]  Narten, T., Nordmark, E., and W. Simpson, \"Neighbor\n              Discovery
    for IP Version 6 (IPv6)\", RFC 2461, December\n              1998.\n   [RFC2462]
    \ Thomson, S. and T. Narten, \"IPv6 Stateless Address\n              Autoconfiguration\",
    RFC 2462, December 1998.\n"
  title: Normative References
- contents:
  - "Informative References\n   [RFC2464]  Crawford, M., \"Transmission of IPv6 Packets
    over Ethernet\n              Networks\", RFC 2464, December 1998.\n   [RFC3041]
    \ Narten, T. and R. Draves, \"Privacy Extensions for\n              Stateless
    Address Autoconfiguration in IPv6\", RFC 3041,\n              January 2001.\n
    \  [RFC3315]  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              C.,
    and M. Carney, \"Dynamic Host Configuration Protocol\n              for IPv6 (DHCPv6)\",
    RFC 3315, July 2003.\n   [RFC3484]  Draves, R., \"Default Address Selection for
    Internet\n              Protocol version 6 (IPv6)\", RFC 3484, February 2003.\n
    \  [RFC3756]  Nikander, P., Kempf, J., and E. Nordmark, \"IPv6 Neighbor\n              Discovery
    (ND) Trust Models and Threats\", RFC 3756, May\n              2004.\n   [RFC3775]
    \ Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support\n              in
    IPv6\", RFC 3775, June 2004.\n   [RFC3971]  Arkko, J., Ed., Kempf, J., Zill, B.,
    and P. Nikander,\n              \"SEcure Neighbor Discovery (SEND)\", RFC 3971,
    March 2005.\n   [RFC3972]  Aura, T., \"Cryptographically Generated Addresses (CGA)\",\n
    \             RFC 3972, March 2005.\n"
  title: Informative References
- contents:
  - "Acknowledgements\n   There is some precedent for this work in expired Internet-Drafts
    and\n   in discussions in the MobileIP WG mailing list and at IETF-54.  A\n   similar
    concept occurs in the 'Optimistic' bit used by R. Koodli and\n   C. Perkins in
    the now expired, \"Fast Handovers in Mobile IPv6\".\n   Thanks to Greg Daley,
    Richard Nelson, Brett Pentland and Ahmet\n   Sekercioglu at Monash University
    CTIE for their feedback and\n   encouragement.  More information is available
    at:\n         <http://www.ctie.monash.edu.au/ipv6/fastho/>\n   Thanks to all the
    MobileIP and IPng/IPv6 WG members who have\n   contributed to the debate, especially
    and alphabetically: Jari Arkko,\n   Marcelo Bagnulo, JinHyeock Choi, Youn-Hee
    Han, James Kempf, Thomas\n   Narten, Pekka Nikander, Erik Nordmark, Soohong 'Daniel'
    Park, Mohan\n   Parthasarathy, Ed Remmel, Pekka Savola, Hesham Soliman, Ignatious\n
    \  Souvatzis, Jinmei Tatuya, Dave Thaler, Pascal Thubert, Christian\n   Vogt,
    Vladislav Yasevich, and Alper Yegin.\n   This work has been supported by the Australian
    Telecommunications\n   Cooperative Research Centre (ATcrc):\n         <http://www.telecommunications.crc.org.au/>\n"
  title: Acknowledgements
- contents:
  - "Author's Address\n   Nick 'Sharkey' Moore\n   Centre for Telecommunications and
    Information Engineering\n   Monash University 3800\n   Victoria, Australia\n   Comments
    should be sent to <sharkey@zoic.org> and/or the IPv6 Working\n   Group mailing
    list.  Please include 'RFC4429' in the Subject line.\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
