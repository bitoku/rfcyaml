- title: __initial_text__
  contents:
  - '           An IPv6 Aggregatable Global Unicast Address Format

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: 1.0 Introduction
  contents:
  - "1.0 Introduction\n   This document defines an IPv6 aggregatable global unicast\
    \ address\n   format for use in the Internet.  The address format defined in this\n\
    \   document is consistent with the IPv6 Protocol [IPV6] and the \"IPv6\n   Addressing\
    \ Architecture\" [ARCH].  It is designed to facilitate\n   scalable Internet routing.\n\
    \   This documented replaces RFC 2073, \"An IPv6 Provider-Based Unicast\n   Address\
    \ Format\".  RFC 2073 will become historic.  The Aggregatable\n   Global Unicast\
    \ Address Format is an improvement over RFC 2073 in a\n   number of areas.  The\
    \ major changes include removal of the registry\n   bits because they are not\
    \ needed for route aggregation, support of\n   EUI-64 based interface identifiers,\
    \ support of provider and exchange\n   based aggregation, separation of public\
    \ and site topology, and new\n   aggregation based terminology.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in [RFC 2119].\n"
- title: 2.0 Overview of the IPv6 Address
  contents:
  - "2.0 Overview of the IPv6 Address\n   IPv6 addresses are 128-bit identifiers for\
    \ interfaces and sets of\n   interfaces.  There are three types of addresses:\
    \ Unicast, Anycast,\n   and Multicast.  This document defines a specific type\
    \ of Unicast\n   address.\n   In this document, fields in addresses are given\
    \ specific names, for\n   example \"subnet\".  When this name is used with the\
    \ term \"ID\" (for\n   \"identifier\") after the name (e.g., \"subnet ID\"), it\
    \ refers to the\n   contents of the named field.  When it is used with the term\
    \ \"prefix\"\n   (e.g.  \"subnet prefix\") it refers to all of the addressing\
    \ bits to\n   the left of and including this field.\n   IPv6 unicast addresses\
    \ are designed assuming that the Internet\n   routing system makes forwarding\
    \ decisions based on a \"longest prefix\n   match\" algorithm on arbitrary bit\
    \ boundaries and does not have any\n   knowledge of the internal structure of\
    \ IPv6 addresses.  The structure\n   in IPv6 addresses is for assignment and allocation.\
    \  The only\n   exception to this is the distinction made between unicast and\n\
    \   multicast addresses.\n   The specific type of an IPv6 address is indicated\
    \ by the leading bits\n   in the address.  The variable-length field comprising\
    \ these leading\n   bits is called the Format Prefix (FP).\n   This document defines\
    \ an address format for the 001 (binary) Format\n   Prefix for Aggregatable Global\
    \ Unicast addresses. The same address\n   format could be used for other Format\
    \ Prefixes, as long as these\n   Format Prefixes also identify IPv6 unicast addresses.\
    \  Only the \"001\"\n   Format Prefix is defined here.\n"
- title: 3.0 IPv6 Aggregatable Global Unicast Address Format
  contents:
  - "3.0 IPv6 Aggregatable Global Unicast Address Format\n   This document defines\
    \ an address format for the IPv6 aggregatable\n   global unicast address assignment.\
    \  The authors believe that this\n   address format will be widely used for IPv6\
    \ nodes connected to the\n   Internet.  This address format is designed to support\
    \ both the\n   current provider-based aggregation and a new type of exchange-based\n\
    \   aggregation.  The combination will allow efficient routing\n   aggregation\
    \ for sites that connect directly to providers and for\n   sites that connect\
    \ to exchanges.  Sites will have the choice to\n   connect to either type of aggregation\
    \ entity.\n   While this address format is designed to support exchange-based\n\
    \   aggregation (in addition to current provider-based aggregation) it is\n  \
    \ not dependent on exchanges for it's overall route aggregation\n   properties.\
    \  It will provide efficient route aggregation with only\n   provider-based aggregation.\n\
    \   Aggregatable addresses are organized into a three level hierarchy:\n     \
    \ - Public Topology\n      - Site Topology\n      - Interface Identifier\n   Public\
    \ topology is the collection of providers and exchanges who\n   provide public\
    \ Internet transit services.  Site topology is local to\n   a specific site or\
    \ organization which does not provide public transit\n   service to nodes outside\
    \ of the site.  Interface identifiers identify\n   interfaces on links.\n    \
    \    ______________                  ______________\n    --+/              \\\
    +--------------+/              \\+----------\n      (       P1       )    +----+\
    \    (       P3       )  +----+\n      +\\______________/     |    |----+\\______________/+--|\
    \    |--\n      |                  +--| X1 |                       +| X2 |\n \
    \     | ______________  /   |    |-+    ______________  / |    |--\n      +/ \
    \             \\+    +-+--+  \\  /              \\+  +----+\n      (       P2\
    \       )     / \\     +(      P4        )\n    --+\\______________/     /   \\\
    \      \\______________/\n           |               /     \\           |    \
    \  |\n           |              /       |          |      |\n           |    \
    \         /        |          |      |\n          _|_          _/_       _|_ \
    \       _|_    _|_\n         /   \\        /   \\     /   \\      /   \\  /  \
    \ \\\n        ( S.A )      ( S.B )   ( P5  )    ( P6  )( S.C )\n         \\___/\
    \        \\___/     \\___/      \\___/  \\___/\n                             \
    \     |          / \\\n                                 _|_       _/_  \\   ___\n\
    \                                /   \\     /   \\  +-/   \\\n               \
    \                ( S.D )   ( S.E )  ( S.F )\n                                \\\
    ___/     \\___/    \\___/\n   As shown in the figure above, the aggregatable address\
    \ format is\n   designed to support long-haul providers (shown as P1, P2, P3,\
    \ and\n   P4), exchanges (shown as X1 and X2), multiple levels of providers\n\
    \   (shown at P5 and P6), and subscribers (shown as S.x) Exchanges\n   (unlike\
    \ current NAPs, FIXes, etc.) will allocate IPv6 addresses.\n   Organizations who\
    \ connect to these exchanges will also subscribe\n   (directly, indirectly via\
    \ the exchange, etc.) for long-haul service\n   from one or more long-haul providers.\
    \  Doing so, they will achieve\n   addressing independence from long-haul transit\
    \ providers.  They will\n   be able to change long-haul providers without having\
    \ to renumber\n   their organization.  They can also be multihomed via the exchange\
    \ to\n   more than one long-haul provider without having to have address\n   prefixes\
    \ from each long-haul provider.  Note that the mechanisms used\n   for this type\
    \ of provider selection and portability are not discussed\n   in the document.\n"
- title: 3.1 Aggregatable Global Unicast Address Structure
  contents:
  - "3.1 Aggregatable Global Unicast Address Structure\n   The aggregatable global\
    \ unicast address format is as follows:\n     | 3|  13 | 8 |   24   |   16   |\
    \          64 bits               |\n     +--+-----+---+--------+--------+--------------------------------+\n\
    \     |FP| TLA |RES|  NLA   |  SLA   |         Interface ID           |\n    \
    \ |  | ID  |   |  ID    |  ID    |                                |\n     +--+-----+---+--------+--------+--------------------------------+\n\
    \     <--Public Topology--->   Site\n                           <-------->\n \
    \                           Topology\n                                     <------Interface\
    \ Identifier----->\n   Where\n      FP           Format Prefix (001)\n      TLA\
    \ ID       Top-Level Aggregation Identifier\n      RES          Reserved for future\
    \ use\n      NLA ID       Next-Level Aggregation Identifier\n      SLA ID    \
    \   Site-Level Aggregation Identifier\n      INTERFACE ID Interface Identifier\n\
    \   The following sections specify each part of the IPv6 Aggregatable\n   Global\
    \ Unicast address format.\n"
- title: 3.2 Top-Level Aggregation ID
  contents:
  - "3.2 Top-Level Aggregation ID\n   Top-Level Aggregation Identifiers (TLA ID) are\
    \ the top level in the\n   routing hierarchy.  Default-free routers must have\
    \ a routing table\n   entry for every active TLA ID and will probably have additional\n\
    \   entries providing routing information for the TLA ID in which they\n   are\
    \ located.  They may have additional entries in order to optimize\n   routing\
    \ for their specific topology, but the routing topology at all\n   levels must\
    \ be designed to minimize the number of additional entries\n   fed into the default\
    \ free routing tables.\n   This addressing format supports 8,192 (2^13) TLA ID's.\
    \  Additional\n   TLA ID's may be added by either growing the TLA field to the\
    \ right\n   into the reserved field or by using this format for additional format\n\
    \   prefixes.\n   The issues relating to TLA ID assignment are beyond the scope\
    \ of this\n   document.  They will be described in a document under preparation.\n"
- title: 3.3 Reserved
  contents:
  - "3.3 Reserved\n   The Reserved field is reserved for future use and must be set\
    \ to\n   zero.\n   The Reserved field allows for future growth of the TLA and\
    \ NLA fields\n   as appropriate.  See section 4.0 for a discussion.\n"
- title: 3.4 Next-Level Aggregation Identifier
  contents:
  - "3.4 Next-Level Aggregation Identifier\n   Next-Level Aggregation Identifier's\
    \ are used by organizations\n   assigned a TLA ID to create an addressing hierarchy\
    \ and to identify\n   sites.  The organization can assign the top part of the\
    \ NLA ID in a\n   manner to create an addressing hierarchy appropriate to its\
    \ network.\n   It can use the remainder of the bits in the field to identify sites\n\
    \   it wishes to serve.  This is shown as follows:\n      |  n  |      24-n bits\
    \     |   16   |    64 bits      |\n      +-----+--------------------+--------+-----------------+\n\
    \      |NLA1 |      Site ID       | SLA ID | Interface ID    |\n      +-----+--------------------+--------+-----------------+\n\
    \   Each organization assigned a TLA ID receives 24 bits of NLA ID space.\n  \
    \ This NLA ID space allows each organization to provide service to\n   approximately\
    \ as many organizations as the current IPv4 Internet can\n   support total networks.\n\
    \   Organizations assigned TLA ID's may also support NLA ID's in their\n   own\
    \ Site ID space.  This allows the organization assigned a TLA ID to\n   provide\
    \ service to organizations providing public transit service and\n   to organizations\
    \ who do not provide public transit service.  These\n   organizations receiving\
    \ an NLA ID may also choose to use their Site\n   ID space to support other NLA\
    \ ID's.  This is shown as follows:\n   |  n  |      24-n bits     |   16   | \
    \   64 bits      |\n   +-----+--------------------+--------+-----------------+\n\
    \   |NLA1 |      Site ID       | SLA ID | Interface ID    |\n   +-----+--------------------+--------+-----------------+\n\
    \         |  m  |    24-n-m    |   16   |    64 bits      |\n         +-----+--------------+--------+-----------------+\n\
    \         |NLA2 |   Site ID    | SLA ID | Interface ID    |\n         +-----+--------------+--------+-----------------+\n\
    \               |  o  |24-n-m-o|   16   |    64 bits      |\n               +-----+--------+--------+-----------------+\n\
    \               |NLA3 | Site ID| SLA ID | Interface ID    |\n               +-----+--------+--------+-----------------+\n\
    \   The design of the bit layout of the NLA ID space for a specific TLA\n   ID\
    \ is left to the organization responsible for that TLA ID.  Likewise\n   the design\
    \ of the bit layout of the next level NLA ID is the\n   responsibility of the\
    \ previous level NLA ID.  It is recommended that\n   organizations assigning NLA\
    \ address space use \"slow start\" allocation\n   procedures similar to [RFC2050].\n\
    \   The design of an NLA ID allocation plan is a tradeoff between routing\n  \
    \ aggregation efficiency and flexibility.  Creating hierarchies allows\n   for\
    \ greater amount of aggregation and results in smaller routing\n   tables.  Flat\
    \ NLA ID assignment provides for easier allocation and\n   attachment flexibility,\
    \ but results in larger routing tables.\n"
- title: 3.5 Site-Level Aggregation Identifier
  contents:
  - "3.5 Site-Level Aggregation Identifier\n   The SLA ID field is used by an individual\
    \ organization to create its\n   own local addressing hierarchy and to identify\
    \ subnets.  This is\n   analogous to subnets in IPv4 except that each organization\
    \ has a much\n   greater number of subnets.  The 16 bit SLA ID field support 65,535\n\
    \   individual subnets.\n   Organizations may choose to either route their SLA\
    \ ID \"flat\" (e.g.,\n   not create any logical relationship between the SLA identifiers\
    \ that\n   results in larger routing tables), or to create a two or more level\n\
    \   hierarchy (that results in smaller routing tables) in the SLA ID\n   field.\
    \  The latter is shown as follows:\n   |  n  |   16-n     |              64 bits\
    \                |\n   +-----+------------+-------------------------------------+\n\
    \   |SLA1 |   Subnet   |            Interface ID             |\n   +-----+------------+-------------------------------------+\n\
    \         | m  |16-n-m |              64 bits                |\n         +----+-------+-------------------------------------+\n\
    \         |SLA2|Subnet |            Interface ID             |\n         +----+-------+-------------------------------------+\n\
    \   The approach chosen for structuring an SLA ID field is the\n   responsibility\
    \ of the individual organization.\n   The number of subnets supported in this\
    \ address format should be\n   sufficient for all but the largest of organizations.\
    \  Organizations\n   which need additional subnets can arrange with the organization\
    \ they\n   are obtaining Internet service from to obtain additional site\n   identifiers\
    \ and use this to create additional subnets.\n"
- title: 3.6 Interface ID
  contents:
  - "3.6 Interface ID\n   Interface identifiers are used to identify interfaces on\
    \ a link.\n   They are required to be unique on that link.  They may also be unique\n\
    \   over a broader scope.  In many cases an interfaces identifier will be\n  \
    \ the same or be based on the interface's link-layer address.\n   Interface IDs\
    \ used in the aggregatable global unicast address format\n   are required to be\
    \ 64 bits long and to be constructed in IEEE EUI-64\n   format [EUI-64].  These\
    \ identifiers may have global scope when a\n   global token (e.g., IEEE 48bit\
    \ MAC) is available or may have local\n   scope where a global token is not available\
    \ (e.g., serial links,\n   tunnel end-points, etc.).  The \"u\" bit (universal/local\
    \ bit in IEEE\n   EUI-64 terminology) in the EUI-64 identifier must be set correctly,\n\
    \   as defined in [ARCH], to indicate global or local scope.\n   The procedures\
    \ for creating EUI-64 based Interface Identifiers is\n   defined in [ARCH].  The\
    \ details on forming interface identifiers is\n   defined in the appropriate \"\
    IPv6 over <link>\" specification such as\n   \"IPv6 over Ethernet\" [ETHER], \"\
    IPv6 over FDDI\" [FDDI], etc.\n"
- title: 4.0 Technical Motivation
  contents:
  - "4.0 Technical Motivation\n   The design choices for the size of the fields in\
    \ the aggregatable\n   address format were based on the need to meet a number\
    \ of technical\n   requirements.  These are described in the following paragraphs.\n\
    \   The size of the Top-Level Aggregation Identifier is 13 bits.  This\n   allows\
    \ for 8,192 TLA ID's.  This size was chosen to insure that the\n   default-free\
    \ routing table in top level routers in the Internet is\n   kept within the limits,\
    \ with a reasonable margin, of the current\n   routing technology.  The margin\
    \ is important because default-free\n   routers will also carry a significant\
    \ number of longer (i.e., more-\n   specific) prefixes for optimizing paths internal\
    \ to a TLA and between\n   TLAs.\n   The important issue is not only the size\
    \ of the default-free routing\n   table, but the complexity of the topology that\
    \ determines the number\n   of copies of the default-free routes that a router\
    \ must examine while\n   computing a forwarding table.  Current practice with\
    \ IPv4 it is\n   common to see a prefix announced fifteen times via different\
    \ paths.\n   The complexity of Internet topology is very likely to increase in\
    \ the\n   future.  It is important that IPv6 default-free routing support\n  \
    \ additional complexity as well as a considerably larger internet.\n   It should\
    \ be noted for comparison that at the time of this writing\n   (spring, 1998)\
    \ the IPv4 default-free routing table contains\n   approximately 50,000 prefixes.\
    \  While this shows that it is possible\n   to support more routes than 8,192\
    \ it is matter of debate if the\n   number of prefixes supported today in IPv4\
    \ is already too high for\n   current routing technology.  There are serious issues\
    \ of route\n   stability as well as cases of providers not supporting all top\
    \ level\n   prefixes.  The technical requirement was to pick a TLA ID size that\n\
    \   was below, with a reasonable margin, what was being done with IPv4.\n   The\
    \ choice of 13 bits for the TLA field was an engineering\n   compromise.  Fewer\
    \ bits would have been too small by not supporting\n   enough top level organizations.\
    \  More bits would have exceeded what\n   can be reasonably accommodated, with\
    \ a reasonable margin, with\n   current routing technology in order to deal with\
    \ the issues described\n   in the previous paragraphs.\n   If in the future, routing\
    \ technology improves to support a larger\n   number of top level routes in the\
    \ default-free routing tables there\n   are two choices on how to increase the\
    \ number TLA identifiers.  The\n   first is to expand the TLA ID field into the\
    \ reserved field.  This\n   would increase the number of TLA ID's to approximately\
    \ 2 million.\n   The second approach is to allocate another format prefix (FP)\
    \ for use\n   with this address format.  Either or a combination of these\n  \
    \ approaches allows the number of TLA ID's to increase significantly.\n   The\
    \ size of the Reserved field is 8 bits.  This size was chosen to\n   allow significant\
    \ growth of either the TLA ID and/or the NLA ID\n   fields.\n   The size of the\
    \ Next-Level Aggregation Identifier field is 24 bits.\n   This allows for approximately\
    \ sixteen million NLA ID's if used in a\n   flat manner.  Used hierarchically\
    \ it allows for a complexity roughly\n   equivalent to the IPv4 address space\
    \ (assuming an average network\n   size of 254 interfaces).  If in the future\
    \ additional room for\n   complexity is needed in the NLA ID, this may be accommodated\
    \ by\n   extending the NLA ID into the Reserved field.\n   The size of the Site-Level\
    \ Aggregation Identifier field is 16 bits.\n   This supports 65,535 individual\
    \ subnets per site.  The design goal\n   for the size of this field was to be\
    \ sufficient for all but the\n   largest of organizations.  Organizations which\
    \ need additional\n   subnets can arrange with the organization they are obtaining\
    \ Internet\n   service from to obtain additional site identifiers and use this\
    \ to\n   create additional subnets.\n   The Site-Level Aggregation Identifier\
    \ field was given a fixed size in\n   order to force the length of all prefixes\
    \ identifying a particular\n   site to be the same length (i.e., 48 bits).  This\
    \ facilitates\n   movement of sites in the topology (e.g., changing service providers\n\
    \   and multi-homing to multiple service providers).\n   The Interface ID Interface\
    \ Identifier field is 64 bits.  This size\n   was chosen to meet the requirement\
    \ specified in [ARCH] to support\n   EUI-64 based Interface Identifiers.\n"
- title: 5.0 Acknowledgments
  contents:
  - "5.0 Acknowledgments\n   The authors would like to express our thanks to Thomas\
    \ Narten, Bob\n   Fink, Matt Crawford, Allison Mankin, Jim Bound, Christian Huitema,\n\
    \   Scott Bradner, Brian Carpenter, John Stewart, and Daniel Karrenberg\n   for\
    \ their review and constructive comments.\n"
- title: 6.0 References
  contents:
  - "6.0 References\n   [ALLOC]   IAB and IESG, \"IPv6 Address Allocation Management\"\
    ,\n             RFC 1881, December 1995.\n   [ARCH]    Hinden, R., \"IP Version\
    \ 6 Addressing Architecture\",\n             RFC 2373, July 1998.\n   [AUTH] \
    \   Atkinson, R., \"IP Authentication Header\", RFC 1826, August\n           \
    \  1995.\n   [AUTO]    Thompson, S., and T. Narten., \"IPv6 Stateless Address\n\
    \             Autoconfiguration\", RFC 1971, August 1996.\n   [ETHER]   Crawford,\
    \ M., \"Transmission of IPv6 Packets over Ethernet\n             Networks\", Work\
    \ in Progress.\n   [EUI64]   IEEE, \"Guidelines for 64-bit Global Identifier (EUI-64)\n\
    \             Registration Authority\",\n             http://standards.ieee.org/db/oui/tutorials/EUI64.html,\n\
    \             March 1997.\n   [FDDI]    Crawford, M., \"Transmission of IPv6 Packets\
    \ over FDDI\n             Networks\", Work in Progress.\n   [IPV6]    Deering,\
    \ S., and R. Hinden, \"Internet Protocol, Version 6\n             (IPv6) Specification\"\
    , RFC 1883, December 1995.\n   [RFC2050] Hubbard, K., Kosters, M., Conrad, D.,\
    \ Karrenberg, D.,\n             and J. Postel, \"Internet Registry IP Allocation\n\
    \             Guidelines\", BCP 12, RFC 1466, November 1996.\n   [RFC2119] Bradner,\
    \ S., \"Key words for use in RFCs to Indicate\n             Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n"
- title: 7.0 Security Considerations
  contents:
  - "7.0 Security Considerations\n   IPv6 addressing documents do not have any direct\
    \ impact on Internet\n   infrastructure security.  Authentication of IPv6 packets\
    \ is defined\n   in [AUTH].\n"
- title: 8.0 Authors' Addresses
  contents:
  - "8.0 Authors' Addresses\n   Robert M. Hinden\n   Nokia\n   232 Java Drive\n  \
    \ Sunnyvale, CA 94089\n   USA\n   Phone: 1 408 990-2004\n   EMail: hinden@iprg.nokia.com\n\
    \   Mike O'Dell\n   UUNET Technologies, Inc.\n   3060 Williams Drive\n   Fairfax,\
    \ VA 22030\n   USA\n   Phone: 1 703 206-5890\n   EMail: mo@uunet.uu.net\n   Stephen\
    \ E. Deering\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n   San Jose, CA\
    \ 95134-1706\n   USA\n   Phone: 1 408 527-8213\n   EMail: deering@cisco.com\n"
- title: 9.0  Full Copyright Statement
  contents:
  - "9.0  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
