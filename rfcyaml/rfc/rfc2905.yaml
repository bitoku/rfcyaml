- title: __initial_text__
  contents:
  - '                 AAA Authorization Application Examples

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes several examples of applications requiring\n\
    \   authorization.  Each application is described in terms of a\n   consistent\
    \ framework, and specific authorization requirements of each\n   application are\
    \ given.  This material was not contributed by the\n   working groups responsible\
    \ for the applications and should not be\n   considered prescriptive for how the\
    \ applications will meet their\n   authorization needs.  Rather the intent is\
    \ to explore the fundamental\n   needs of a variety of different applications\
    \ with the view of\n   compiling a set of requirements that an authorization protocol\
    \ will\n   need to meet in order to be generally useful.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \    3\n   2. PPP Dialin with Roaming .....................................  \
    \  4\n      2.1. Descriptive Model ......................................    4\n\
    \      2.2. Authorization Requirements .............................    6\n  \
    \ 3. Mobile-IP ...................................................    6\n    \
    \  3.1. Relationship to the Framework ..........................   10\n      3.2.\
    \ Minimized Internet Traversal ...........................   10\n      3.3. Key\
    \ Distribution .......................................   10\n      3.4. Mobile-IP\
    \ Authorization Requirements ...................   11\n   4. Bandwidth Broker\
    \ ............................................   12\n      4.1. Model Description\
    \ ......................................   13\n      4.2. Components of the Two-Tier\
    \ Model .......................   13\n      4.3. Identification of Contractual\
    \ Relationships ............   13\n           4.3.1. Single-Domain Case ..............................\
    \   14\n           4.3.2. Multi-Domain Case ...............................  \
    \ 15\n      4.4. Identification of Trust Relationships ..................   16\n\
    \      4.5. Communication Models and Trust Relationships ...........   18\n  \
    \    4.6. Bandwidth Broker Communication Models ..................   19\n    \
    \       4.6.1. Concepts ........................................   19\n      \
    \          4.6.1.1. Intra-Domain Authorization ...............   19\n        \
    \        4.6.1.2. Inter-Domain Authorization ...............   19\n          \
    \ 4.6.2. Bandwidth Broker Work Phases ....................   20\n           4.6.3.\
    \ Inter-Domain Signaling ..........................   20\n                4.6.3.1.\
    \ Phase 0 ..................................   20\n                4.6.3.2. Phase\
    \ 1 ..................................   20\n           4.6.4. Bandwidth Broker\
    \ Communication Architecture .....   22\n           4.6.5. Two-Tier Inter-Domain\
    \ Model .....................   23\n                4.6.5.1. Session Initialization\
    \ ...................   23\n                4.6.5.2. Service Setup ............................\
    \   23\n                4.6.5.3. Service Cancellation .....................  \
    \ 24\n                4.6.5.4. Service Renegotiation ....................   24\n\
    \                4.6.5.5. RAR and RAA ..............................   24\n  \
    \              4.6.5.6. Session Maintenance ......................   24\n    \
    \            4.6.5.7. Intra-domain Interface Protocol ..........   24\n      4.7.\
    \ Requirements ...........................................   24\n   5. Internet\
    \ Printing ...........................................   25\n      5.1. Trust\
    \ Relationships ....................................   26\n      5.2. Use of Attribute\
    \ Certificates ..........................   27\n      5.3. IPP and the Authorization\
    \ Descriptive Model ............   28\n   6. Electronic Commerce .........................................\
    \   29\n      6.1. Model Description ......................................  \
    \ 30\n           6.1.1. Identification of Components ....................   30\n\
    \           6.1.2. Identification of Contractual Relationships .....   31\n  \
    \         6.1.3. Identification of Trust Relationships ...........   32\n    \
    \            6.1.3.1. Static Trust Relationships ...............   33\n      \
    \          6.1.3.2. Dynamic Trust Relationships ..............   35\n        \
    \   6.1.4. Communication Model .............................   35\n      6.2.\
    \ Multi Domain Model .....................................   37\n      6.3. Requirements\
    \ ...........................................   38\n   7. Computer Based Education\
    \ and Distance Learning ..............   40\n      7.1. Model Description ......................................\
    \   40\n           7.1.1. Identification of Components ....................  \
    \ 40\n           7.1.2. Identification of Contractual Relationships .....   41\n\
    \           7.1.3. Identification of Trust Relationships ...........   43\n  \
    \         7.1.4. Sequence of Requests ............................   44\n    \
    \  7.2. Requirements ...........................................   46\n   8. Security\
    \ Considerations .....................................   47\n   Glossary .......................................................\
    \   47\n   References .....................................................  \
    \ 48\n   Authors' Addresses .............................................   50\n\
    \   Full Copyright Statement .......................................   53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is one of a series of three documents under\n\
    \   consideration by the AAAarch RG dealing with the authorization\n   requirements\
    \ for AAA protocols.  The three documents are:\n         AAA Authorization Framework\
    \ [2]\n         AAA Authorization Requirements [3]\n         AAA Authorization\
    \ Application Examples (this document)\n   In this memo, we examine several important\
    \ Internet applications that\n   require authorization.  For each application,\
    \ we present a model\n   showing how it might do authorization and then map that\
    \ model back to\n   the framework presented in [2].  We then present the authorization\n\
    \   requirements of the application as well as we presently understand\n   them.\
    \  The requirements presented in this memo have been collected\n   together, generalized,\
    \ and presented in [3].\n   The intent of this memo is to validate and illustrate\
    \ the framework\n   presented in [2] and to motivate the requirements presented\
    \ in [3].\n   This work is intended to be in alignment with the work of the various\n\
    \   working groups responsible for the authorization applications\n   illustrated.\
    \  This memo should not, however, be regarded as\n   authoritative for any of\
    \ the applications illustrated.  Where\n   authoritative documents exist or are\
    \ in development, they are listed\n   in the references at the end of this document.\n\
    \   The work for this memo was done by a group that originally was the\n   Authorization\
    \ subgroup of the AAA Working Group of the IETF.  When\n   the charter of the\
    \ AAA working group was changed to focus on MobileIP\n   and NAS requirements,\
    \ the AAAarch Research Group was chartered within\n   the IRTF to continue and\
    \ expand the architectural work started by the\n   Authorization subgroup.  This\
    \ memo is one of four which were created\n   by the subgroup.  This memo is a\
    \ starting point for further work\n   within the AAAarch Research Group.  It is\
    \ still a work in progress\n   and is published so that the work will be available\
    \ for the AAAarch\n   subgroup and others working in this area, not as a definitive\n\
    \   description of architecture or requirements.\n   This document uses the terms\
    \ 'MUST', 'SHOULD' and 'MAY', and their\n   negatives, in the way described in\
    \ RFC 2119 [4].\n"
- title: 2.  PPP Dialin with Roaming
  contents:
  - "2.  PPP Dialin with Roaming\n   In this section, we present an authorization\
    \ model for dialin network\n   access in terms of the framework presented in [2].\
    \  Included in the\n   model are the multi-domain considerations required for\
    \ roaming [5].\n   Detailed requirements for network access protocols are presented\
    \ in\n   [6].\n"
- title: 2.1.  Descriptive Model
  contents:
  - "2.1.  Descriptive Model\n   The PPP dialin application uses the pull sequence\
    \ as discussed in\n   [2].  The roaming case uses the roaming pull sequence, also\
    \ discussed\n   in [2].  This sequence is redrawn using dialin roaming terminology\
    \ in\n   figure 1, below.\n            +------+      +-------------------------+\n\
    \            |      |      | Home ISP                |\n            |      | \
    \     | (User Home Organization)|\n            |      |      |  +-------------------+\
    \  |\n            |      |      |  |    AAA Server     |  |\n            |   \
    \   |      |  |                   |  |\n            |      |      |  +-------------------+\
    \  |\n            |      |      |             /|\\  |      |\n            |  \
    \    |      +--------------+---+------+\n            |      |                \
    \     |   |\n            |      |                     |3  |4\n            |  \
    \    |                     |   |\n            |      |      +--------------+---+------+\n\
    \            |      |      | Visited ISP  |   |      |\n            |      | \
    \     |              |  \\|/     |\n            | User |      |  +-------------------+\
    \  |\n            |      |      |  |    AAA Server     |  |\n            |   \
    \   |      |  |                   |  |\n            |      |      |  +-------------------+\
    \  |\n            |      |      |             /|\\  |      |\n            |  \
    \    |      |              |2  |5     |\n            |      |      |         \
    \     |  \\|/     |\n            |      |   1  |  +-------------------+  |\n \
    \           |      |------+->| NAS (Service      |  |\n            |      |<-----+--|\
    \      Equipment)   |  |\n            |      |   6  |  +-------------------+ \
    \ |\n            |      |      |  (Service Provider)     |\n            +------+\
    \  PPP +-------------------------+\n            Fig. 1 -- Dialin Authorization\n\
    \                      Based on Roaming Pull Sequence\n   In this model, the User\
    \ dials in to a Network Access Server (NAS)\n   provided by the visited (or foreign)\
    \ ISP (the Service Provider in the\n   general model). The User is authenticated\
    \ using a protocol such as\n   PAP, CHAP, or EAP which is encapsulated in PPP\
    \ frames (1).  Because\n   the User has not yet gained access to the network,\
    \ he or she cannot\n   send IP datagrams to a AAA server. At this point, the User\
    \ can only\n   communicate with the NAS (Service Equipment).  The NAS forwards\
    \ the\n   User's authentication/ authorization request including the Network\n\
    \   Access Identifier (NAI) [7] to a AAA server in its own domain via\n   RADIUS\
    \ [8] or a successor AAA protocol (2).  The visited ISP's AAA\n   server examines\
    \ the realm from the NAI and forwards the request to\n   the User's home domain\
    \ AAA server (3).  The home domain AAA server\n   authenticates the user and authorizes\
    \ access according to a roaming\n   agreement.  The home domain AAA server may\
    \ return service parameters\n   (e.g. Idle-Timeout) to the visited ISP's AAA server\
    \ (4) which\n   forwards them to the NAS, possibly adding additional service\n\
    \   parameters (5).  The NAS completes PPP session initialization (6).\n   In\
    \ the future, this model may be expanded in several ways [9].  For\n   instance,\
    \ Authentication and Authorization may be done in separate\n   passes using different\
    \ servers in order to support specialized forms\n   of authentication.  Or to\
    \ better support roaming, a broker may be\n   inserted between the visited ISP\
    \ and the home ISP.  Or authorization\n   may be supported based on other identifiers\
    \ such as the caller ID and\n   called ID obtained from the PSTN (e.g., using\
    \ ANI and DNIS).\n"
- title: 2.2.  Authorization Requirements
  contents:
  - "2.2.  Authorization Requirements\n   The following requirements are identified\
    \ in [9] for authorizing PPP\n   dialin service using roaming.\n   -  Authorization\
    \ separate from authentication should be allowed when\n      necessary, but the\
    \ AAA protocol MUST allow for a single message to\n      request both authentication\
    \ and authorization.\n   -  The AAA protocol MUST be \"proxyable\", meaning that\
    \ a AAA Server or\n      PDP MUST be able to forward the request to another AAA\
    \ Server or\n      PDP, which may or may not be within the same administrative\n\
    \      domain.\n   -  The AAA protocol MUST allow for intermediate brokers to\
    \ add their\n      own local Authorization information to a request or response.\n\
    \   -  When a broker is involved, the protocol MUST provide end to end\n     \
    \ security.\n   -  The broker MUST be able to return a forwarding address to a\n\
    \      requester, allowing two nodes to communicate together.\n   -  The protocol\
    \ MUST provide the following features (per user\n      session):\n      1. One\
    \ Authentication, One Authorization\n      2. One Authentication, Multiple Authorization\n\
    \      3. Multiple Authentication, Multiple Authorization\n"
- title: 3.  Mobile-IP
  contents:
  - "3.  Mobile-IP\n   The Mobile-IP protocol is used to manage mobility of an IP\
    \ host\n   across IP subnets [10].  Recent activity within the Mobile-IP Working\n\
    \   Group has defined the interaction between Mobile-IP and AAA in order\n   to\
    \ provide:\n      -  Better scaling of security associations\n      -  Mobility\
    \ across administrative domain boundaries\n      -  Dynamic assignment of Home\
    \ Agent\n   The Mobile IP protocol, as defined in [10], works well when all\n\
    \   mobile nodes belong to the same administrative domain.  Some of the\n   current\
    \ work within the Mobile IP Working Group is to allow Mobile IP\n   to scale across\
    \ administrative domains.  This changes the trust model\n   that is currently\
    \ defined in [10].\n   The requirements for Mobile-IP authorization are documented\
    \ in [11].\n   In this section, we develop a multi-domain model for Mobile-IP\n\
    \   authorization and present it in the terms of the framework presented\n   in\
    \ [2].\n   Figure 2 depicts the new AAA trust model for Mobile-IP.  In this\n\
    \   model each network contains mobile nodes (MN) and a AAA server (AAA).\n  \
    \ Each mobility device shares a security association (SA) with the AAA\n   server\
    \ within its own home network.  This means that none of the\n   mobility devices\
    \ initially share a security association.  Both\n   administrative domains' AAA\
    \ servers can either share a security\n   association, or can have a security\
    \ association with an intermediate\n   broker.\n                             Broker\
    \ AAA\n                             +--------+\n                             |\
    \        |\n                             |  AAA   |\n                       /=====|\
    \        |=====\\\n                      //     +--------+     \\\\\n        \
    \    Foreign  // SA                SA \\\\   Home\n              AAA   //    \
    \                    \\\\  AAA\n             +--------+                      +--------+\n\
    \             |        |          SA          |        |\n             |  AAA\
    \   |======================|  AAA   |\n             |        | (in lieu of broker)\
    \  |        |\n             +--------+                      +--------+\n     \
    \            ||                           ||    ||\n              SA ||      \
    \                  SA ||    || SA\n                 ||                       \
    \    ||    ||\n                 ||                           ||    ||\n      \
    \       +---------+              +---------+  +---------+\n             |    \
    \     |              |         |  |         |\n             |   FA    |      \
    \        |   HA    |  |   MN    |\n             |         |              |   \
    \      |  |         |\n             +---------+              +---------+  +---------+\n\
    \                    Fig. 2 -- Mobile-IP AAA Trust Model\n   Figure 3 provides\
    \ an example of a Mobile-IP network that includes\n   AAA. In the integrated Mobile-IP/AAA\
    \ Network, it is assumed that each\n   mobility agent shares a security association\
    \ between itself and its\n   local AAA server.  Further, the Home and Foreign\
    \ AAA servers both\n   share a security association with the broker's AAA server.\
    \  Lastly,\n   it is assumed that each mobile node shares a trust relationship\
    \ with\n   its home AAA Server.\n           Visited Access      Broker       \
    \   Home IP\n           Provider Network    Network         Network\n        \
    \     +--------+      +--------+      +--------+\n             |        |    \
    \  |        |      |        |\n             |  AAA   |------|  AAA   |------|\
    \  AAA   |\n             |        |      |        |      |        |\n        \
    \     +--------+      +--------+      +--------+\n                  |        \
    \                      |\n                  |                              |\n\
    \              AAA |                              | AAA\n                  | \
    \                             |\n                  |                         \
    \     |\n             +---------+                    +---------+\n           \
    \  |         |                    |         |\n             |   FA    |      \
    \              |   HA    |\n             |         |                    |    \
    \     |\n             +---------+                    +---------+\n           \
    \       |\n                  |   Visited Access     Home Network\n           \
    \       |  Provider Network       -Private Network\n           Mobile |      \
    \                   -Home Provider\n             IP   |                      \
    \   -Home ISP\n                  |\n             +--------+\n             | Mobile\
    \ |\n             | Node   |\n             +--------+\n    Fig. 3 -- General Wireless\
    \ IP Architecture for Mobile-IP AAA\n   In this example, a Mobile Node appears\
    \ within a foreign network and\n   issues a registration to the Foreign Agent.\
    \  Since the Foreign Agent\n   does not share any security association with the\
    \ Home Agent, it sends\n   a AAA request to its local AAA server, which includes\
    \ the\n   authentication information and the Mobile-IP registration request.\n\
    \   The Mobile Node cannot communicate directly with the home AAA Server\n   for\
    \ two reasons:\n      -  It does not have access to the network.  The registration\n\
    \         request is sent by the Mobile Node to request access to the\n      \
    \   network.\n      -  The Mobile Node may not have an IP address, and may be\n\
    \         requesting that one be assigned to it by its home provider.\n   The\
    \ Foreign AAA Server will determine whether the request can be\n   satisfied locally\
    \ through the use of the Network Access Identifier\n   [7] provided by the Mobile\
    \ Node.  The NAI has the format of\n   user@realm and the AAA Server uses the\
    \ realm portion of the NAI to\n   identify the Mobile Node's home AAA Server.\
    \ If the Foreign AAA Server\n   does not share any security association with the\
    \ Mobile Node's home\n   AAA Server, it may forward the request to its broker.\
    \  If the broker\n   has a relationship with the home network, it can forward\
    \ the request,\n   otherwise a failed response is sent back to the Foreign AAA\
    \ Server.\n   When the home AAA Server receives the AAA Request, it authenticates\n\
    \   the user and begins the authorization phase.  The authorization phase\n  \
    \ includes the generation of:\n      -  Dynamic Session Keys to be distributed\
    \ among all Mobility\n         Agents\n      -  Optional Dynamic assignment of\
    \ a Home Agent\n      -  Optional Dynamic assignment of a Home Address (note this\
    \ could\n         be done by the Home Agent).\n      -  Optional Assignment of\
    \ QOS parameters for the Mobile Node [12]\n   Once authorization is complete,\
    \ the home AAA Server issues an\n   unsolicited AAA request to the Home Agent,\
    \ which includes the\n   information in the original AAA request as well as the\
    \ authorization\n   information generated by the home AAA server.  The Home Agent\n\
    \   retrieves the Registration Request from the AAA request and processes\n  \
    \ it, then generates a Registration Reply that is sent back to the home\n   AAA\
    \ server in a AAA response.  The message is forwarded through the\n   broker back\
    \ to the Foreign AAA server, and finally to the Foreign\n   Agent.\n   The AAA\
    \ servers maintain session state information based on the\n   authorization information.\
    \  If a Mobile Node moves to another Foreign\n   Agent within the foreign domain,\
    \ a request to the foreign AAA server\n   can immediately be done in order to\
    \ immediately return the keys that\n   were issued to the previous Foreign Agent.\
    \  This minimizes an\n   additional round trip through the internet when micro\
    \ mobility is\n   involved, and enables smooth hand-off.\n"
- title: 3.1.  Relationship to the Framework
  contents:
  - "3.1.  Relationship to the Framework\n   Mobile-IP uses the roaming pull model\
    \ described in [2].  The Mobile\n   Node is the User.  The Foreign Network is\
    \ the Service Provider with\n   the Foreign Agent as the Service Equipment.  The\
    \ Home Network is the\n   User Home Organization.  Note that the User Home Organization\n\
    \   operates not only a AAA Server, but also the Home Agent.  Note, also,\n  \
    \ that a broker has been inserted between the Service Provider and the\n   User\
    \ Home Organization.\n"
- title: 3.2.  Minimized Internet Traversal
  contents:
  - "3.2.  Minimized Internet Traversal\n   Although it would have been possible for\
    \ the AAA interactions to be\n   performed for basic authentication and authorization,\
    \ and the\n   Registration flow to be sent directly to the Home Agent from the\n\
    \   Foreign Agent, one of the key Mobile-IP AAA requirements is to\n   minimize\
    \ Internet Traversals. Including the Registration Request and\n   Replies in the\
    \ AAA messages allows for a single traversal to\n   authenticate the user, perform\
    \ authorization and process the\n   Registration Request.  This streamlined approach\
    \ is required in order\n   to minimize the latency involved in getting wireless\
    \ (cellular)\n   devices access to the network.  New registrations should not\
    \ increase\n   the connect time more than what the current cellular networks\n\
    \   provide.\n"
- title: 3.3.  Key Distribution
  contents:
  - "3.3.  Key Distribution\n   In order to allow the scaling of wireless data access\
    \ across\n   administrative domains, it is necessary to minimize the security\n\
    \   associations required. This means that each Foreign Agent does not\n   share\
    \ a security association with each Home Agent on the Internet.\n   The Mobility\
    \ Agents share a security association with their local AAA\n   server, which in\
    \ turn shares a security association with other AAA\n   servers.  Again, the use\
    \ of brokers, as defined by the Roaming\n   Operations (roamops) Working Group,\
    \ allows such services to scale by\n   allowing the number of relationships established\
    \ by the providers to\n   be reduced.\n   After a Mobile Node is authenticated,\
    \ the authorization phase\n   includes the generation of Sessions Keys.  Specifically,\
    \ three keys\n   are generated:\n      -  k1 - Key to be shared between the Mobile\
    \ Node and the Home\n         Agent\n      -  k2 - Key to be shared between the\
    \ Mobile Node and the Foreign\n         Agent\n      -  k3 - Key to be shared\
    \ between the Foreign Agent and the Home\n         Agent\n   Each Key is propagated\
    \ to each mobility device through the AAA\n   protocol (for the Foreign and Home\
    \ Agent) and via Mobile-IP for the\n   Mobile Node (since the Mobile Node does\
    \ not interface directly with\n   the AAA servers).\n   Figure 4 depicts the new\
    \ security associations used for Mobile-IP\n   message integrity using the keys\
    \ derived by the AAA server.\n             +--------+                      +--------+\n\
    \             |        |          k3          |        |\n             |   FA\
    \   |======================|   HA   |\n             |        |               \
    \       |        |\n             +--------+                      +--------+\n\
    \                   \\\\                          //\n                    \\\\\
    \ k2                  k1 //\n                     \\\\      +--------+      //\n\
    \                      \\\\     |        |     //\n                       \\=====|\
    \   MN   |=====/\n                             |        |\n                  \
    \           +--------+\n       Fig. 4 -- Security Association after Key Distribution\n\
    \   Once the session keys have been established and propagated, the\n   mobility\
    \ devices can exchange registration information directly\n   without the need\
    \ of the AAA infrastructure.  However the session keys\n   have a lifetime, after\
    \ which the AAA infrastructure must be used in\n   order to acquire new session\
    \ keys.\n"
- title: 3.4.  Mobile-IP Authorization Requirements
  contents:
  - "3.4.  Mobile-IP Authorization Requirements\n   To summarize, Mobile-IP has the\
    \ following authorization requirements:\n   1. Mobile-IP requires an AAA protocol\
    \ that makes use of the pull\n      model.\n   2. Mobile-IP requires broker support,\
    \ and data objects must contain\n      data integrity and confidentiality end-to-end.\
    \  This means that\n      neither the broker nor any other intermediate AAA node\
    \ should be\n      able to decrypt the data objects, but they must be able to\
    \ verify\n      the objects' validity.\n   3. Authorization includes Resource\
    \ Management.  This allows the AAA\n      servers to maintain a snapshot of a\
    \ mobile node's current\n      location, keying information, etc.\n   4. Due to\
    \ the nature of the service being offered, it is imperative\n      that the AAA\
    \ transaction add minimal latency to the connect time.\n      Ideally, the AAA\
    \ protocol should allow for a single round trip for\n      authentication and\
    \ authorization.\n   5. If the AAA protocol allows for the Mobile-IP registration\
    \ messages\n      to be embedded within the authentication/authorization request,\n\
    \      this will further reduce the number of round trips required and\n     \
    \ hence reduce the connect time.\n   6. It must be possible to pass Mobile-IP\
    \ specific key management data\n      along with the authorization data.  This\
    \ allows the AAA server to\n      act as a Key Distribution Center (KDC).\n  \
    \ 7. It must be possible to pass other application-specific data units\n     \
    \ such as home agent selection and home address assignment to be\n      carried\
    \ along with the authorization data units.\n   8. The authorization response should\
    \ allow for diffserv (QOS)\n      profiles, which can be used by the mobility\
    \ agents to provide some\n      quality of service to the mobile node.\n   9.\
    \ The AAA protocol must allow for unsolicited messages to be sent to\n      a\
    \ \"client\", such as the AAA client running on the Home Agent.\n"
- title: 4.  Bandwidth Broker
  contents:
  - "4.  Bandwidth Broker\n   This section describes authorization aspects derived\
    \ from the\n   Bandwidth Broker architecture as discussed within the Internet2\
    \ Qbone\n   BB Advisory Council.  We use authorization model concepts to identify\n\
    \   contract relationships and trust relationships, and we present\n   possible\
    \ message exchanges.  We will derive a set of authorization\n   requirements for\
    \ Bandwidth Brokers from our architectural model.  The\n   Internet 2 Qbone BB\
    \ Advisory Council researches a single and multi-\n   domain implementation based\
    \ on 2-tier authorization concepts.  A 3-\n   tier model is considered as a future\
    \ work item and therefore not part\n   of this description. Information concerning\
    \ the Internet 2 Bandwidth\n   Broker work and its concepts can be found at:\n\
    \      http://www.merit.edu/working.groups/i2-qbone-bb\n   The material in this\
    \ section is based on [13] which is a work in\n   progress of the Internet2 Qbone\
    \ BB Advisory Council.\n"
- title: 4.1.  Model Description
  contents:
  - "4.1.  Model Description\n   The establishment of a model involves four steps:\n\
    \   1. identification of the components that are involved and what they\n    \
    \  are called in this specific environment,\n   2. identification of the relationships\
    \ between the involved parties\n      that are based on some form of agreement,\n\
    \   3. identification of the relationships that are based on trust, and\n   4.\
    \ consideration of the sequence of messages exchanged between\n      components.\n"
- title: 4.2.  Components of the Two-Tier Model for Bandwidth Brokerage
  contents:
  - "4.2.  Components of the Two-Tier Model for Bandwidth Brokerage\n   We will consider\
    \ the components of a bandwidth broker transaction in\n   the context of the conceptual\
    \ entities defined in [2].  The bandwidth\n   broker two-tier model recognizes\
    \ a User and the Service Provider\n   controlling the Service Equipment.\n   The\
    \ components are as follows:\n   -  The Service User (User) -- A person or process\
    \ willing to use\n      certain level of QoS by requesting the allocation of a\n\
    \      quantifiable amount of resource between a selected destination and\n  \
    \    itself.  In bandwidth broker terms, the User is called a Service\n      User,\
    \ capable of generating a Resource Allocation Request (RAR).\n   -  The Bandwidth\
    \ Broker (Service Provider) -- a function that\n      authorizes allocation of\
    \ a specified amount of bandwidth resource\n      between an identified source\
    \ and destination based on a set of\n      policies.  In this context we refer\
    \ to this function as the\n      Bandwidth Broker.  A Bandwidth Broker is capable\
    \ of managing the\n      resource availability within a network domain it controls.\n\
    \   Note: a 3-tier model involving a User Home Organization is recognized\n  \
    \ in [13], however its development is left for future study and\n   therefore\
    \ it is not discussed in this document.\n"
- title: 4.3.  Identification of Contractual Relationships
  contents:
  - "4.3.  Identification of Contractual Relationships\n   Authorizations to obtain\
    \ bandwidth are based on contractual\n   relationships. In both the single and\
    \ multi-domain cases, the current\n   Bandwidth Broker model assumes that a User\
    \ always has a contractual\n   relationship with the service domain to which it\
    \ is connected.\n"
- title: 4.3.1.  Single-Domain Case
  contents:
  - "4.3.1.  Single-Domain Case\n   In the single-domain case, the User has a contract\
    \ with a single\n   Service Provider in a single service domain.\n           \
    \                         +-------------+\n                                  \
    \  |             |\n                                    | +---------+ |\n    \
    \                                | |Bandwidth| |\n                  +-------+\
    \         | |Broker   | |\n                  |       |         | |         | |\n\
    \                  |Service|         | +---------+ |\n                  |User\
    \   |=========|             |\n                  |       |         | +---------+\
    \ |\n                  |       |         | | Network | |\n                  +-------+\
    \         | | Routing | |\n                                    | | Devices | |\n\
    \                                    | +---------+ |\n                       \
    \             | Autonomous  |\n                                    | Service \
    \    |\n                                    | Domain      |\n                \
    \                    +-------------+\n                  ==== contractual\n   \
    \                    relationship\n     Fig. 5 -- Two-Tier Single Domain Contractual\
    \ Relationships\n"
- title: 4.3.2.  Multi-Domain Case
  contents:
  - "4.3.2.  Multi-Domain Case\n   In the multi-domain case, the User has a contract\
    \ with a single\n   Service Provider.  This Service Provider has a contract with\n\
    \   neighboring Service Providers.  This model is used when independent\n   autonomous\
    \ networks establish contracts with each other.\n                        +-------------+\
    \        +-------------+\n                        |             |        |   \
    \          |\n                        | +---------+ |        | +---------+ |\n\
    \                        | |Bandwidth| |        | |Bandwidth| |\n      +-------+\
    \         | |Broker   | |        | |Broker   | |\n      |       |         | |\
    \         | |        | |         | |\n      |Service|         | +---------+ |\
    \        | +---------+ |\n      |User   |=========|             |========|   \
    \          |\n      |       |         | +---------+ |        | +---------+ |\n\
    \      |       |         | | Network | |        | | Network | |\n      +-------+\
    \         | | Routing | |        | | Routing | |\n                        | |\
    \ Devices | |        | | Devices | |\n                        | +---------+ |\
    \        | +---------+ |\n                        | Autonomous  |        | Autonomous\
    \  |\n                        | Service     |        | Service     |\n       \
    \                 | Domain A    |        | Domain B    |\n                   \
    \     +-------------+        +-------------+\n      ==== contractual\n       \
    \    relationship\n     Fig. 6 -- Two-Tier Multi-Domain Contractual Relationships\n"
- title: 4.4.  Identification of Trust Relationships
  contents:
  - "4.4.  Identification of Trust Relationships\n   Contractual relationships may\
    \ be independent of how trust, which is\n   necessary to facilitate authenticated\
    \ and possibly secure\n   communication, is implemented.  There are several alternatives\
    \ in the\n   Bandwidth Broker environment to create trusted relationships.\n \
    \  Figures 7 and 8 show two alternatives that are options in the two-\n   tier\
    \ Bandwidth Broker model.\n                        +-------------+        +-------------+\n\
    \                        |             |        |             |\n            \
    \            | +---------+ |        | +---------+ |\n                        |\
    \ |Bandwidth| |        | |Bandwidth| |\n      +-------+         | |Broker   |\
    \ |        | |Broker   | |\n      |       O***********O         O************O\
    \         | |\n      |Service|         | +----O----+ |        | +----O----+ |\n\
    \      |User   |=========|      *      |========|      *      |\n      |     \
    \  |         | +----0----+ |        | +----O----+ |\n      |       |         |\
    \ |Network  | |        | |Network  | |\n      +-------+         | |Routing  |\
    \ |        | |Routing  | |\n                        | |Devices  | |        | |Devices\
    \  | |\n                        | +---------+ |        | +---------+ |\n     \
    \                   | Autonomous  |        | Autonomous  |\n                 \
    \       | Service     |        | Service     |\n                        | Domain\
    \ A    |        | Domain B    |\n                        +-------------+     \
    \   +-------------+\n      ==== contractual relationship\n      O**O trust relationship\n\
    \     Fig. 7 -- Two-Tier Multi-Domain Trust Relationships, alt 1\n           \
    \             +-------------+        +-------------+\n                       \
    \ |             |        |             |\n                        | +---------+\
    \ |        | +---------+ |\n                        | |Bandwidth| |        | |Bandwidth|\
    \ |\n      +-------+         | |Broker   | |        | |Broker   | |\n      | \
    \      |         | |         | |        | |         | |\n      |Service|     \
    \    | +----O----+ |        | +----O----+ |\n      |User   |=========|      *\
    \      |========|      *      |\n      |       |         | +----O----+ |     \
    \   | +----O----+ |\n      |       O***********O Network O************O Network\
    \ | |\n      +-------+         | | Routing | |        | | Routing | |\n      \
    \                  | | Devices | |        | | Devices | |\n                  \
    \      | +---------+ |        | +---------+ |\n                        | Autonomous\
    \  |        | Autonomous  |\n                        | Service     |        |\
    \ Service     |\n                        | Domain A    |        | Domain B   \
    \ |\n                        +-------------+        +-------------+\n      ====\
    \ contractual relationship\n      O**O trust relationship\n     Fig. 8 -- Two-Tier\
    \ Multi-Domain Trust Relationships, alt 2\n   Although [13] does not recommend\
    \ specifics regarding this question,\n   the document recognizes the need for\
    \ trust relationships.  In the\n   first model, a trust relationship, based on\
    \ some form of\n   authentication method, is created between the User and the\
    \ Bandwidth\n   Broker and among Bandwidth Brokers.  In the second model, which\n\
    \   enjoys some popularity in enterprise networks, the trust relationship\n  \
    \ may be established via the wiring closet and the knowledge of which\n   physical\
    \ router port or MAC address is connected to which user.  The\n   router-Bandwidth\
    \ Broker relationship may be established physically or\n   by some other authentication\
    \ method or secure channel.\n   A Certificate Authority (CA) based trust relationship\
    \ is shown in\n   figure 9.  In this figure, a CA signs public key certificates,\
    \ which\n   then can be used in encrypted message exchanges using public keys\n\
    \   that are trusted by all involved.  As a first step, each involved\n   party\
    \ must register with the CA so it can join a trust domain.  The\n   Router-Bandwidth\
    \ Broker relationship may be established as described\n   in the two previous\
    \ figures.  An interesting observation regarding\n   this kind of model is that\
    \ the bandwidth broker in domain B may route\n   information to the user via the\
    \ bandwidth broker in domain A without\n   BB1 being able to read the information\
    \ (using end-to-end security).\n   This model creates a meshed trust relationship\
    \ via a tree like CA\n   structure.\n                               +-------------------+\n\
    \                               |  Certificate      |\n           ....................|\
    \  Authority        |\n          :                  ..|                   |..\n\
    \          :                 :  +-------------------+  :\n          :        \
    \         :                         :\n          :                 :         \
    \                :\n          :  ***************:***********************  :\n\
    \          :  *          +---:---------+        +---*--:------+\n          : \
    \ *          |   :         |        |   *  :      |\n          :  *          |\
    \ +-:-------+ |        | +-O--:----+ |\n          :  *          | |{C}      |\
    \ |        | |   {C}   | |\n      +---:--O+         | |Bandwidth| |        | |Bandwidth|\
    \ |\n      |  {C}  O***********O Broker  O************O Broker  | |\n      |Service|\
    \         | +----O----+ |        | +----O----+ |\n      |User   |=========|  \
    \    *      |========|      *      |\n      |       |         | +----0----+ |\
    \        | +----O----+ |\n      |       |         | |Network  | |        | |Network\
    \  | |\n      +-------+         | |Routing  | |        | |Routing  | |\n     \
    \                   | |Devices  | |        | |Devices  | |\n                 \
    \       | +---------+ |        | +---------+ |\n                        | Autonomous\
    \  |        | Autonomous  |\n                        | Service     |        |\
    \ Service     |\n                        | Domain A    |        | Domain B   \
    \ |\n                        +-------------+        +-------------+\n      ====\
    \ contractual relationship\n      O**O trust relationship\n      {C}. certification\
    \ process\n     Fig. 9 -- Two-Tier Multi-Domain Trust Relationships, alt 3\n"
- title: 4.5.  Communication Models and Trust Relationships
  contents:
  - "4.5.  Communication Models and Trust Relationships\n   When describing the Bandwidth\
    \ Broker communication model, it is\n   important to recognize that trust relationships\
    \ between components\n   must ensure secure and authenticated communication between\
    \ the\n   involved components.  As the Internet 2 Qbone Bandwidth Broker work\n\
    \   does not recommend any particular trust relationship model, we make\n   the\
    \ same assumptions as [13].  In theory, the trust model and\n   communication\
    \ model can be independent, however communication\n   efficiency will determine\
    \ the most logical approach.\n"
- title: 4.6.  Bandwidth Broker Communication Models
  contents:
  - '4.6.  Bandwidth Broker Communication Models

    '
- title: 4.6.1.  Concepts
  contents:
  - "4.6.1.  Concepts\n   The current Internet 2 Qbone Bandwidth Broker discussion\
    \ describes a\n   two-tier model, where a Bandwidth Broker accepts Resource Allocation\n\
    \   Requests (RAR's) from users belonging to its domain or RAR's\n   generated\
    \ by upstream Bandwidth Brokers from adjacent domains.  Each\n   Bandwidth Broker\
    \ will manage one service domain and subsequently\n   provide authorization based\
    \ on a policy that decides whether a\n   request can be honored.\n"
- title: 4.6.1.1.  Intra-Domain Authorization
  contents:
  - "4.6.1.1.  Intra-Domain Authorization\n   Admission Authorization or Connection\
    \ Admission Control (CAC) for\n   intra-domain communication is performed using\
    \ whatever method is\n   appropriate for determining availability of resources\
    \ within the\n   domain. Generally a Bandwidth Broker configures its service domain\
    \ to\n   certain levels of service.  RAR's are subsequently accommodated using\n\
    \   a policy-based decision.\n"
- title: 4.6.1.2.  Inter-Domain Authorization
  contents:
  - "4.6.1.2.  Inter-Domain Authorization\n   Service Level Specifications (SLS's)\
    \ provide the basis for handling\n   inter-domain bandwidth authorization requests.\
    \  A Bandwidth Broker\n   monitors both the state of its network components and\
    \ the state of\n   its connections to neighboring networks.  SLS's are translations\
    \ of\n   SLA's established between Autonomous Service Domains.  Each Bandwidth\n\
    \   Broker will initialize itself so it is aware of existing SLS's.\n   SLS's\
    \ are established in a unidirectional sense.  Two SLS's must\n   govern a bi-directional\
    \ connection.  SLS's are established on the\n   level of aggregate data-flows\
    \ and the resources (bandwidth)\n   provisioned for these flows.\n   A Bandwidth\
    \ Broker may honor an inter-domain RAR by applying policy\n   decisions determining\
    \ that a particular RAR does fit into a pre-\n   established SLS.  If successful,\
    \ the Bandwidth Broker will authorize\n   the usage of the bandwidth.  If unsuccessful,\
    \ the Bandwidth Broker\n   may deny the request or approve the request after it\
    \ has re-\n   negotiated the SLS with its downstream Bandwidth Broker.\n   A separate\
    \ Policy Manager may be involved in the CAC decision.  The\n   Internet 2 Qbone\
    \ Bandwidth Broker discussion recognizes an ideal\n   environment where Bandwidth\
    \ Brokers and Policy Managers work together\n   to provide CAC using integrated\
    \ policy services [13].\n"
- title: 4.6.2.  Bandwidth Broker Work Phases
  contents:
  - "4.6.2.  Bandwidth Broker Work Phases\n   The Internet 2 Qbone Bandwidth Broker\
    \ discussion proposes development\n   of the Bandwidth Broker model in several\
    \ phases:\n   -  Phase 0: Local Admission.  RAR's are only handled within a local\n\
    \      domain. SLS's are pre-established using manual methods (fax, e-\n     \
    \ mail).\n   -  Phase 1: Informed Admission.  RAR's spanning multiple domains\
    \ are\n      authorized based on information obtained from one or more\n     \
    \ Bandwidth Brokers along the path.\n   -  Phase 2: Dynamic SLS admission.  Bandwidth\
    \ Brokers can dynamically\n      set up new SLS's.\n   Although the local admission\
    \ case is addressed, the current Internet\n   2 Qbone Bandwidth Broker work is\
    \ currently concerned with solving\n   multi-domain problems in order to allow\
    \ individual Bandwidth Brokers\n   to inter-operate as identified in phase 0 or\
    \ 1.\n"
- title: 4.6.3.  Inter-Domain Signaling
  contents:
  - '4.6.3.  Inter-Domain Signaling

    '
- title: 4.6.3.1.  Phase 0
  contents:
  - "4.6.3.1.  Phase 0\n   In phase 0 implementations, no electronic signaling between\
    \ Bandwidth\n   Brokers is performed and SLS negotiation will be performed manually\n\
    \   (phone, email etc) by network operators.  An RAR is only handled\n   within\
    \ the domain and may originate from a User or ingress router.\n"
- title: 4.6.3.2.  Phase 1
  contents:
  - "4.6.3.2.  Phase 1\n   Here a CAC decision is made on information obtained from\
    \ downstream\n   Bandwidth Brokers.  This information could come from the next\
    \ hop\n   Bandwidth Broker or all Bandwidth Brokers downstream to the\n   destination.\n\
    \   Two fundamental signaling approaches between Bandwidth Brokers have\n   been\
    \ identified for the Informed Admission case.  These are\n   illustrated in figure\
    \ 10.\n   +-------+         +-------+         +-------+         +-------+\n  \
    \ |       |         |       |         |       |         |       |\n   |      \
    \ |RAR      |       |    1    |       |   2     |       |\n   | User  |-------->|\
    \       |-------->|       |-------->|       |\n   |       |     RAA | BB1   |\
    \    4    |  BB2  |   3     |  BB3  |\n   |       |<--------|       |<--------|\
    \       |<--------|       |\n   |       |         |       |         |       |\
    \         |       |\n   |       |         |       |         |       |        \
    \ |       |\n   +-------+         +-------+         +-------+         +-------+\n\
    \   A)End-to-end signaling\n   +-------+         +-------+         +-------+ \
    \        +-------+\n   |       |         |       |         |       |         |\
    \       |\n   |       |RAR      |       |    1    |       |   3     |       |\n\
    \   | User  |-------->|       |-------->|       |-------->|       |\n   |    \
    \   |     RAA | BB1   |    2    |  BB2  |   4     |  BB3  |\n   |       |<--------|\
    \       |<--------|       |<--------|       |\n   |       |    7    |       |\
    \    6    |       |   5     |       |\n   |       |<--------|       |<--------|\
    \       |<--------|       |\n   +-------+         +-------+         +-------+\
    \         +-------+\n   B) Immediate response signaling.\n            Fig. 10\
    \ -- Fundamental Signalling Approaches\n   -  End to End signaling.  An RAR from\
    \ a User to BB1 is forwarded to\n      BB2 (1). BB2 will forward the request to\
    \ BB3 (2).  If BB3 is the\n      destination of the request, BB3 will authorize\
    \ the request and\n      reply to BB2 (3).  BB2 will then reply to BB1 (4), and\
    \ BB1 will\n      send a Resource Allocation Answer (RAA) back to the User to\n\
    \      complete the authorization.\n   -  Immediate response signaling.  This\
    \ is the case where BB1 will\n      want to authorize an RAR from its domain and\
    \ forwards the\n      authorization request to BB2 (1).  If BB2 approves, the\
    \ response\n      is immediately returned to BB1 (2).  BB1 will send an RAA back\
    \ to\n      the User.  If the authorization was positive BB2 will forward\n  \
    \    subsequently a request to the next BB, BB3 (3).  BB3 authorizes\n      the\
    \ request and responds to BB2 (4).  If the response is negative\n      (5), BB2\
    \ will cancel the authorization it previously issued to BB1\n      (6) and this\
    \ will result in a cancellation from BB1 to the user\n      (7).  In this case\
    \ the RAA authorization is valid until revoked by\n      7.\n"
- title: 4.6.4.  Bandwidth Broker Communication Architecture
  contents:
  - "4.6.4.  Bandwidth Broker Communication Architecture\n   Figure 11 shows components\
    \ of the discussed Bandwidth Broker\n   architecture with its interfaces.\n  \
    \ -  An intra-domain interface allows communication with all the\n      service\
    \ components within the network that the Bandwidth Broker\n      controls.\n \
    \  -  An inter-domain interface allows communication between Bandwidth\n     \
    \ Brokers of different autonomous networks.\n   -  A user/application interface\
    \ allows the Bandwidth Broker to be\n      managed manually.  Requests can be\
    \ sent from the User or a host\n      application.\n   -  A policy manager interface\
    \ allows implementation of complex policy\n      management or admission control.\n\
    \   -  A routing table interface allows the Bandwidth Broker to\n      understand\
    \ the network topology.\n   -  An NMS interface allows coordination of network\
    \ provisioning and\n      monitoring.\n           adjacent BB <--------------------------->\
    \ adjacent BB\n                                     |\n                      \
    \               V\n                      +------------------------------+\n  \
    \                    |       | inter-domain |       |\n                      |\
    \        --------------  ------|\n          application |                    \
    \   |  PM  |\n          server  \\   |                       |iface |\n      \
    \             \\  |-------   ---------+    ------|\n                    ->| user/\
    \ | | simple  |    ------|\n          user/host-->| app   | | policy  |   | NMS\
    \  |\n                    ->| iface | | services|   |iface |\n               \
    \    /  |-------   ---------+    ------|\n          network /   |            \
    \                  |\n          operator    |  -------          -------    |\n\
    \                      | | data  |        |routing|   |\n                    \
    \  | | store |        |info   |   |\n                      | |       |       \
    \ |       |   |\n                      |  -------          -------    |\n    \
    \                  |                              |\n                      | \
    \      ----------------       |\n                      |      | intra-domain \
    \  |      |\n                      +------------------------------+\n        \
    \                             ^\n                                     |\n    \
    \    edge router(s) <---------------------------> edge router(s)\n           \
    \   Fig. 11 -- Bandwidth Broker Architecture\n"
- title: 4.6.5.  Two-Tier Inter-Domain Bandwidth Broker Communication Model
  contents:
  - '4.6.5.  Two-Tier Inter-Domain Bandwidth Broker Communication Model

    '
- title: 4.6.5.1.  Session Initialization
  contents:
  - "4.6.5.1.  Session Initialization\n   Before Bandwidth Brokers can configure services\
    \ between two adjacent\n   domains, they have to establish and initialize a relationship.\
    \  No\n   authentication is used; therefore any trust relationship is implicit.\n\
    \   Part of the initialization is an exchange of topology information\n   (list\
    \ of adjacent Bandwidth Brokers).\n"
- title: 4.6.5.2.  Service Setup
  contents:
  - "4.6.5.2.  Service Setup\n   The Bandwidth Broker must first be configured in\
    \ regard to agreed\n   bi-lateral service levels.  All resources allocated to\
    \ a particular\n   level of provisioned service must be reserved in each domain.\n\
    \   A Service Setup Request (SSR) is generated  (on demand by the\n   operator\
    \ or at startup of the system) and forwarded to a downstream\n   Bandwidth Broker.\
    \  The downstream Bandwidth Broker will check the\n   consistency with its own\
    \ service level specifications and respond\n   with Setup Answer message (SA)\
    \ agreements. This message exchange\n   confirms and identifies pre-established\
    \ service authorization levels.\n"
- title: 4.6.5.3.  Service Cancellation
  contents:
  - "4.6.5.3.  Service Cancellation\n   A Service Cancellation (SC) message may cancel\
    \ a service\n   authorization. This message may be initiated by the operator or\
    \ by an\n   expiration date. A Cancellation Answer (CA) is returned.\n"
- title: 4.6.5.4.  Service Renegotiation
  contents:
  - "4.6.5.4.  Service Renegotiation\n   An (optional) Service-Renegotiation message\
    \ (SR) may allow a\n   Bandwidth Broker to re-negotiate an existing service. \
    \ This message\n   may be initiated by the operator or automatically when a certain\n\
    \   threshold is reached.  Renegotiations happen within the margins of a\n   pre-established\
    \ authorization.\n"
- title: 4.6.5.5.  Resource Allocation Request and Resource Allocation Answer
  contents:
  - "4.6.5.5.  Resource Allocation Request and Resource Allocation Answer\n   An RAR\
    \ allocates a requested level of service on behalf of the User\n   and when available\
    \ it will decide on the admittance of a certain User\n   to the service. A Bandwidth\
    \ Broker may receive an RAR via either the\n   intra-domain or inter-domain interface.\
    \  The RAR must refer to the\n   Service SetUp Identification (SSU_ID), which\
    \ binds a request to a\n   certain authorization. A Resource Allocation Answer\
    \ (RAA) confirms or\n   rejects a request or it may indicate an \"in progress\"\
    \ state.\n"
- title: 4.6.5.6.  Session Maintenance
  contents:
  - "4.6.5.6.  Session Maintenance\n   A certain level of session maintenance is required\
    \ to keep Bandwidth\n   Brokers aware of each other.  This must be implemented\
    \ using time-\n   outs and keep-alive messages.  This will help Bandwidth Brokers\
    \ to\n   notice when other Bandwidth Brokers disappear.\n"
- title: 4.6.5.7.  Intra-domain Interface Protocol
  contents:
  - "4.6.5.7.  Intra-domain Interface Protocol\n   The Intra-domain interface protocol\
    \ used between a Bandwidth Broker\n   and the routers it controls may be COPS,\
    \ SNMP, or Telnet Command Line\n   Interface.\n"
- title: 4.7.  Requirements
  contents:
  - "4.7.  Requirements\n   From the above descriptions we derive the following requirements.\n\
    \   -  The Authorization mechanism may require trust relationships to be\n   \
    \   established before any requests can be made from the User to the\n      Service\
    \ Provider.  Currently trust relationship establishment is\n      implicit.\n\
    \   -  A confirmation of authorization is required in order to initialize\n  \
    \    the system.\n   -  A negation of static authorization is required to shut\
    \ down\n      certain services.\n   -  A renegotiation of static authorization\
    \ is required to alter\n      services (SLS's).\n   -  Dynamic authorization requests\
    \ (RAR) must fit into pre-established\n      static authorizations (SLS's).\n\
    \   -  Dynamic authorization requests (RAR) may be answered by an \"in\n     \
    \ progress state\" answer.\n   -  Provisions must be made to allow reconstruction\
    \ of authorization\n      states after a Bandwidth Broker re-initializes.\n"
- title: 5.  Internet Printing
  contents:
  - "5.  Internet Printing\n   The Internet Printing Protocol, IPP [14], has some\
    \ potentially\n   complex authorization requirements, in particular with the \"\
    print-\n   by-reference\" model.  The following attempts to describe some\n  \
    \ possible ways in which an authorization solution for this aspect of\n   IPP\
    \ might work, and to relate these to the framework described in\n   [2].  This\
    \ is not a product of the IPP working group, and is meant\n   only to illustrate\
    \ some issues in authorization in order to establish\n   requirements for a \"\
    generic\" protocol to support AAA functions across\n   many applications.\n  \
    \ IPP print-by-reference allows a user to request a print service to\n   print\
    \ a particular file.  The user creates a request to print a\n   particular file\
    \ on a printer (or one of a group of printers).  The\n   key aspect is that the\
    \ request includes only the file name and not\n   the file content. The print\
    \ service must then read the file from a\n   file server prior to printing.  Both\
    \ the file server and the print\n   server must authorize the request.  Once initiated,\
    \ printing will be\n   done without intervention of the user; i.e., the file will\
    \ be sent\n   directly to the print service rather than through the user to the\n\
    \   printer.\n"
- title: 5.1.  Trust Relationships
  contents:
  - "5.1.  Trust Relationships\n   The assumption is that the Printer and File Server\
    \ may be owned and\n   operated by different organizations.  There appear to be\
    \ two models\n   for how \"agreements\" can be set up.\n   1. User has agreement\
    \ with Print Server; Print Server has agreement\n      with File Server.\n   2.\
    \ User has agreements with both File and Print Server directly.\n   In case 1,\
    \ the user has a trust relationship with the Print Service\n   AAA Server.  The\
    \ Printer forwards the request to the File Server. The\n   File Server authorizes\
    \ the Printer and determines if the Printer is\n   allowed access to the file.\
    \  Note that while there may be some cases\n   where a Print Server may on its\
    \ own be allowed access to files\n   (perhaps some \"public files\", or that can\
    \ only be printed on certain\n   \"secure\" printers), it is normally the case\
    \ that files are associated\n   with users and not with printers.  This is not\
    \ a good \"generic\" model\n   as it tends to make the print service an attractive\
    \ point of attack.\n            +------+       +----------------------+\n    \
    \        |      |       | File Service         |----+\n            |      |  \
    \     | AAA Server           |<-+ |\n            |      |       +----------------------+\
    \  | |\n            |      |       |                      |  | |\n           \
    \ |      |       | File Server          |  | |\n            |      |       | \
    \                     |  | |\n            | User |       +----------------------+\
    \  | |\n            |      |                                 | |\n           \
    \ |      |                                 | |\n            |      |         \
    \                        | |\n            |      |       +----------------------+\
    \  | |\n            |      |------>| Print Service        |--+ |\n           \
    \ |      |<------| AAA Server           |<---+\n            |      |       +----------------------+\n\
    \            |      |       | Print Server         |\n            |      |   \
    \    |  and Printer         |\n            +------+       +----------------------+\n\
    \          Fig. 12 -- Case 1\n                     User authorizes with Print\
    \ Service.\n                     Printer authorizes with File Service.\n   In\
    \ case 2, the user must have a trust relationship with both the file\n   and print\
    \ services so that each can verify the service appropriate to\n   the User.  In\
    \ this case, the User first contacts the File Service AAA\n   Server and requests\
    \ that it enable authorization for the Print\n   Service to access the file. \
    \ This might be done in various ways, for\n   example the File Service AAA Server\
    \ may return a token to the User\n   which can (via the Print Service) be presented\
    \ to the File Server to\n   enable access.\n               +------+       +----------------------+\n\
    \               |      |------>| File Service         |\n               |    \
    \  |<------| AAA Server           |\n               |      |       +----------------------+\n\
    \               |      |\n               |      |       +----------------------+\n\
    \               |      |       | File Server          |\n               | User\
    \ |       +----------------------+\n               |      |              /|\\\
    \  |\n               |      |               |   |\n               |      |   \
    \            |  \\|/\n               |      |       +----------------------+\n\
    \               |      |------>| Print Service        |\n               |    \
    \  |<------| AAA Server           |\n               |      |       +----------------------+\n\
    \               |      |       | Print Server         |\n               |    \
    \  |       |  and Printer         |\n               +------+       +----------------------+\n\
    \         Fig. 13 -- Case 2\n                    User authorizes File and Print\
    \ Service.\n                    Must create binding for session between\n    \
    \                Print Service and File Service.\n"
- title: 5.2.  Use of Attribute Certificates in Print-by-Reference
  contents:
  - "5.2.  Use of Attribute Certificates in Print-by-Reference\n   The print-by-reference\
    \ case provides a good example of the use of\n   attribute certificates as discussed\
    \ in [2].  If we describe case 2\n   above in terms of attribute certificates\
    \ (ACs) we get the diagram\n   shown in figure 14.\n      +------+       +----------------------+\n\
    \      |      |------>| File Service         |\n      |      |<------| AAA Server\
    \           |\n      |      |Get AC +----------------------+\n      |      |\n\
    \      |      |       +----------------------+\n      |      |       | File Server\
    \          |----+\n      |      |       |                      |<-+ |\n      |\
    \ User |       +----------------------+  | |\n      |      |                 \
    \                | |\n      |      |   +---authorize passing AC      | |<---Create\
    \ session\n      |      |   |                             | |    Using AC\n  \
    \    |      |   V   +----------------------+  | |\n      |      |------>| Print\
    \ Service        |  | |\n      |      |<------| AAA Server           |  | |\n\
    \      |      |       +----------------------+  | |\n      |      |       | Print\
    \ Server         |--+ |\n      |      |       |  and Printer         |<---+\n\
    \      +------+       +----------------------+\n       Fig. 14 -- Using Attribute\
    \ Certificates in IPP Authorization\n   In this case, the User gets an AC from\
    \ the File Service's AAA Server\n   which is signed by the File Service AAA Server\
    \ and contains a set of\n   attributes describing what the holder of the AC is\
    \ allowed to do. The\n   User then authorizes with the Print Service AAA Server\
    \ and passes the\n   AC in the authorization request.  The Printer establishes\
    \ a session\n   with the File Server, passing it the AC.  The File Server trusts\
    \ the\n   AC because it is signed by the File Service AAA Server and allows (or\n\
    \   disallows) the session.\n   It is interesting to note that an AC could also\
    \ be created and signed\n   by the User, and passed from the Print Server to the\
    \ File Server. The\n   File Server would need to be able to recognize the User's\
    \ signature.\n   Yet another possibility is that the Print Service AAA Server\
    \ could\n   simply authenticate the User and then request an AC from the File\n\
    \   Service AAA Server.\n"
- title: 5.3.  IPP and the Authorization Descriptive Model
  contents:
  - "5.3.  IPP and the Authorization Descriptive Model\n   The descriptive model presented\
    \ in [2] includes four basic elements:\n   User, User Home Organization, Service\
    \ Provider AAA Server, and\n   Service Equipment.\n   Mapping these to IPP, the\
    \ User is the same, the User Home\n   Organization (if included) is the same.\
    \  The Service Provider AAA\n   Server and the Service Equipment  are expected\
    \ to be closely coupled\n   on the same processor.  In other words, the interface\
    \ between the\n   Print Service AAA Server and the Printer as well as that between\
    \ the\n   File Service AAA Server and the File Server is an internal one that\n\
    \   will not require a formal protocol (although some standard API might\n   be\
    \ useful).\n   The concept of a Resource Manager (see [2]) has some interesting\n\
    \   twists relative to IPP.  Once started, the user is not involved in\n   the\
    \ service, but until printing is complete it seems useful that any\n   of the\
    \ parties in the authorization process be allowed to query for\n   status or to\
    \ cancel the print session.   The user needs a way to\n   \"bind\" to a particular\
    \ session, and may have to reauthorize to be\n   allowed to access Resource Manager\
    \ information.\n"
- title: 6.  Electronic Commerce
  contents:
  - "6.  Electronic Commerce\n   This section describes the authorization aspects\
    \ of an e-commerce\n   architecture typically used in Europe.  We will use this\
    \ model to\n   identify contractual and trust relationships and message exchanges.\n\
    \   We will then identify a set of authorization requirements for e-\n   commerce.\n\
    \   Whereas most e-commerce protocols focus on authentication and message\n  \
    \ integrity, e-commerce exchanges as described by the Internet Open\n   Trading\
    \ Protocol (trade) Working Group in [15] also involve\n   authorization.  This\
    \ section will examine one e-commerce protocol\n   called SET (Secure Electronic\
    \ Transaction) that provides for credit\n   and debit card payments.  We will\
    \ analyze the authorization aspects\n   from an architectural viewpoint.  We will\
    \ apply concepts and terms\n   defined in [2].\n   We are not here proposing SET\
    \ as a standard authorization protocol.\n   Rather, we are examining the SET model\
    \ as a way of understanding the\n   e-commerce problem domain so that we can derive\
    \ requirements that an\n   authorization protocol would have to meet in order\
    \ to be used in that\n   domain.\n   E-commerce protocols and mechanisms such\
    \ as those described in [16]\n   may not only be important to allow customers\
    \ to shop safely in\n   Cyberspace, but may also be important for purchases of\
    \ Internet\n   services as well.  With emerging technologies allowing Internet\n\
    \   transport services to be differentiated, an inherently more complex\n   pricing\
    \ model will be required as well as additional payment methods.\n   Flexible authorization\
    \ of services will be an important aspect to\n   allow, for example, globally\
    \ roaming users ad hoc allocation of\n   premium bandwidth with an ISP who is\
    \ authorized to accept certain\n   credit card brands.\n"
- title: 6.1.  Model Description
  contents:
  - "6.1.  Model Description\n   The establishment of a model involves four steps:\n\
    \   1. identification of the components that are involved and what they\n    \
    \  are called in this specific environment,\n   2. identification of the relationships\
    \ between the involved parties\n      that are based on some form of agreement,\n\
    \   3. identification of the relationships that are based on trust, and\n   4.\
    \ consideration of the sequence of messages exchanged between\n      components.\n"
- title: 6.1.1.  Identification of Components
  contents:
  - "6.1.1.  Identification of Components\n   We will consider the components of an\
    \ electronic commerce transaction\n   in the context of the conceptual entities\
    \ defined in [2].\n   -  The Cardholder (User) -- the person or organization that\
    \ is to\n      receive and pay for the goods or services after a request to\n\
    \      purchase has been received.  In SET terms this is called a\n      Cardholder.\n\
    \   -  The Issuer (User Home Organization) -- the financial organization\n   \
    \   that guarantees to pay for authorized transactions to purchase\n      goods\
    \ or services on behalf of the User when using a debit or\n      credit card it\
    \ issues.  The financial organization (typically a\n      bank or Brand Organization)\
    \ will transfer money from the user\n      account to the account the party to\
    \ which the User instructs it to\n      send the payment. The issued card authorizes\
    \ the User to use the\n      card for payments to merchants who are authorized\
    \ to accept the\n      card.  In SET terms this organization is called the Issuer.\
    \  This\n      organization is considered \"home\" to the Cardholder.\n   -  The\
    \ Merchant (Service Provider) -- the organization from whom the\n      purchase\
    \ is being made and who is legally responsible for\n      providing the goods\
    \ or services and receives the benefit of the\n      payment made.  In SET terms\
    \ this organization is called a\n      Merchant.  The Cardholder is considered\
    \ to be \"foreign\" to the\n      Merchant.\n   -  The Acquirer (Broker) -- the\
    \ organization that processes credit or\n      debit card transactions.  Although\
    \ in reality this function may be\n      rather complex and may span several organizations,\
    \ we will simply\n      assume this organization to be a Brand Organization fulfilling\
    \ the\n      role of the Acquirer as defined in SET.  The Acquirer establishes\n\
    \      an account with the Merchant.  The Acquirer operates a Payment\n      Gateway\
    \ that will accept payment authorization requests from\n      authorized merchants\
    \ and provide responses from the issuer.  The\n      Acquirer will forward an\
    \ authorization request to the Issuer.  The\n      Acquirer is considered \"home\"\
    \ to the Merchant.\n   As the SET document [16] notes, a Brand Organization (credit\
    \ card\n   organization) may handle both the Issuer function and Acquirer\n  \
    \ function that operates a Payment Gateway.  For simplicity, we\n   therefore\
    \ assume that the authorization role of Broker (Acquirer) and\n   User Home Organization\
    \ (Issuer) both belong to the Brand\n   Organization.\n   In order to be more\
    \ descriptive we now use the SET terms.  In the\n   requirements section these\
    \ terms are mapped back into the\n   authorization framework terms again.\n"
- title: 6.1.2.  Identification of Contractual Relationships
  contents:
  - "6.1.2.  Identification of Contractual Relationships\n   Contractual relationships\
    \ are illustrated in figure 15, below.\n   -  The Cardholder has a contractual\
    \ relationship with the card\n      Issuer.  The Cardholder holds an account with\
    \ the Issuer and\n      obtains an account number.\n   -  The Merchant has a contractual\
    \ relationship with the Acquirer.\n      The Merchant obtains a Merchant ID from\
    \ the Acquirer.\n   -  In the real world there may be no direct contractual relationship\n\
    \      between the Issuer and the Acquirer.  The contractual\n      relationships\
    \ allowing an Acquirer to relay a payment\n      authorization request to an Issuer\
    \ may be very complex and\n      distributed over multiple organizations. For\
    \ simplicity, however,\n      we assume there are contracts in place allowing\
    \ an Acquirer to\n      request payment authorization from an Issuer.  These contracts\
    \ are\n      facilitated by the Brand Organization.  Therefore, in our\n     \
    \ simplified example, the Acquirer and Issuer belong to the same\n      Brand\
    \ Organization.  The Acquirer operates a Payment Gateway for\n      which it needs\
    \ a Bank Identification Number (BIN).\n               +----------------+     \
    \  +------------------------+\n               | Issuer         |       | Acquirer\
    \               |\n               | (User Home     |       | (Broker)        \
    \       |\n               |  Organization) |       |  +------------------+  |\n\
    \               |                |=======|  |  Payment         |  |\n        \
    \       |                |       |  |  Gateway         |  |\n               |\
    \                |       |  +------------------+  |\n               |        \
    \        |       |                        |\n               +----------------+\
    \       +------------------------+\n                       ||                \
    \             ||\n                       ||                             ||\n \
    \                      ||                             ||\n               +----------------+\
    \       +--------------------+\n               | Cardholder     |       | Merchant\
    \           |\n               | (User)         |       | (Service Provider) |---+\n\
    \               |                |       |                    |   |\n        \
    \       |                |       |                    |   |\n               |\
    \                |       +--------------------+   |\n               |        \
    \        |         |                      |\n               |                |\
    \         | Fulfillment          |\n               |                |        \
    \ |                      |\n               +----------------+         +----------------------+\n\
    \                    Fig. 15 -- SET Contractual Relationships\n"
- title: 6.1.3.  Identification of Trust Relationships
  contents:
  - "6.1.3.  Identification of Trust Relationships\n   It is important to recognize\
    \ that there are two kinds of trust\n   relationships: static and dynamic trust\
    \ relationships.  Static trust\n   relationships in SET are established by means\
    \ of a registration\n   process that will request a certificate to be issued to\
    \ the party\n   that needs to be trusted and authorized to be part of a SET\n\
    \   transaction.  Dynamic trust is created at the time of a payment\n   transaction\
    \ and its subsequent authorization request.  Note that at\n   the issue phase\
    \ of a certificate, based on identification and\n   registration, the user of\
    \ the certificate gets an implicit static\n   authorization and a means of authenticating\
    \ and securing messages.\n   For this purpose a Certificate Authority (CA) will\
    \ issue certificates\n   that are used to sign and/or encrypt messages exchanged\
    \ according to\n   the SET protocol.\n"
- title: 6.1.3.1.  Static Trust Relationships
  contents:
  - "6.1.3.1.  Static Trust Relationships\n   In the discussion that follows, refer\
    \ to figure 16, below.\n                               +-------+\n           \
    \                    | Root  |\n                               |  CA   |\n   \
    \                            +-------+     CA = Certificate Authority\n      \
    \                             |        {C} = Certificate\n                   \
    \                |\n                        +-----------------+\n            \
    \            |        Brand    |\n                        |         CA      |\n\
    \                        +-----------------+\n                          |    \
    \    |    |\n                          |        | +-------+\n                \
    \          |        | |Payment|\n   +----------------+     |        | |Gateway|\
    \ +----------------------+\n   | Issuer         |     |        | |  CA   | | Acquirer\
    \             |\n   | (User Home     | +----------+ | +-------+ | (Broker)   \
    \          |\n   |  Organization) | |Cardholder| |    |      |  +----------------+\
    \  |\n   |                | |    CA    | |    +------+--+-{C} Payment    |  |\n\
    \   |                | +----------+ |       3   |  |     Gateway    |  |\n   |\
    \                |     |        |           |  +----------------+  |\n   |   \
    \             |     |   +---------+      |                      |\n   +----------------+\
    \     |   | Merchant|      +----------------------+\n                        \
    \  |   |    CA   |\n                          |   +---------+\n              \
    \            |        |\n   +----------------+     |        |           +--------------------+\n\
    \   | Cardholder     |     |        |           | Merchant           |\n   | (User)\
    \         |     |        |           | (Service Provider) |--+\n   |         \
    \   {C}-+-----+        |           |                    |  |\n   |           \
    \     |  1           +-----------+-{C}                |  |\n   |             \
    \   |                    2     |                    |  |\n   |               \
    \ |                          |                    |  |\n   |                |\
    \                          +--------------------+  |\n   |                |  \
    \                          |                     |\n   |                |    \
    \                        | Fulfillment         |\n   |                |      \
    \                      |                     |\n   +----------------+        \
    \                    +---------------------+\n         Fig. 16 -- SET Trust Relationships\
    \ within a Brand Domain\n   -  The Brand Organization operates a Brand CA and\
    \ is therefore the\n      holder of the common trust within the described domain.\
    \  All\n      involved parties (Cardholder, Issuer, Merchant and Acquirer) are\n\
    \      members of the same trust domain.  We will identify three separate\n  \
    \    CA's which issue a certificate on behalf of the Issuer, the\n      Acquirer\
    \ and the Brand Organization.  The Brand CA, according to a\n      tree like hierarchy,\
    \ certifies all underlying CA's.  The Brand CA\n      obtains its trust from a\
    \ single Root Certificate Authority.\n      Before any party can obtain a Certificate\
    \ from a CA, the party\n      must have some form of contractual relationship.\n\
    \   -  After an account has been established with the Issuer, the\n      Cardholder\
    \ has to register with a Cardholder CA (CCA) through a\n      series of registration\
    \ steps (1) as defined in the SET protocol.\n      If the CCA approves the registration,\
    \ the Cardholder will obtain a\n      Cardholder Certificate.  The CCA may be\
    \ operated by the Brand\n      Organization on behalf of the Issuer.  The Cardholder\
    \ Certificate\n      is an electronic representation of the payment card.  This\
    \ process\n      creates a trust relationship between the Cardholder and the Brand.\n\
    \      After the cardholder has received the Cardholder Certificate, the\n   \
    \   Cardholder is authorized to perform payments to an authorized\n      Merchant.\n\
    \   -  After the Merchant has obtained a Merchant ID from the Acquirer,\n    \
    \  the Merchant has to register with the Merchant CA (MCA) through a\n      series\
    \ of registration steps (2) as defined in the SET protocol.\n      If the MCA\
    \ approves the registration, the Merchant will obtain a\n      Merchant Certificate.\
    \  This process creates a trust relationship\n      between the Merchant and the\
    \ Brand.  The MCA may be operated by\n      the Brand Organization on behalf of\
    \ the Acquirer.  After\n      registration, the Merchant is authorized to accept\
    \ payment\n      requests from Cardholders and to send authorization requests\
    \ to\n      the Acquirer's Payment Gateway.\n   -  After the Acquirer has obtained\
    \ a valid Bank Identification Number\n      (BIN), the Acquirer must register\
    \ with the Payment Gateway CA\n      (PCA) in order to obtain a Payment Gateway\
    \ Certificate (3).  The\n      Payment Gateway Certificate authorizes the Gateway\
    \ to accept\n      payment authorization requests originating from Merchants within\n\
    \      its trust domain.\n   -  The Acquirer and Issuer have a trust relationship\
    \ via the Brand\n      Organization.  The trust relationship is not ensured by\
    \ procedures\n      or a mechanism defined by SET, as this is a problem solved\
    \ by\n      agreements between financial organizations facilitating the\n    \
    \  payment service.  Again, for simplicity, we assume that the\n      relationship\
    \ ensures that payment authorization requests received\n      by the Acquirer's\
    \ gateway will be forwarded in a secure and\n      efficient way to the Issuer\
    \ and its response is handled in the\n      same way.\n"
- title: 6.1.3.2.  Dynamic Trust Relationships
  contents:
  - "6.1.3.2.  Dynamic Trust Relationships\n   Note that there is no prior established\
    \ static trust relationship\n   between the Cardholder and the Merchant, as a\
    \ Cardholder does not\n   have to register with a Merchant or vice versa.  The\
    \ trust\n   relationship is dynamically created during the communication process\n\
    \   and is based on the common relationship with the Brand.  By means of\n   digital\
    \ signatures using public key cryptography, the Cardholder's\n   software is able\
    \ to verify that the Merchant is authorized to accept\n   the Brand Organization's\
    \ credit card.  The merchant is able to verify\n   that the Cardholder has been\
    \ authorized to use the Brand\n   Organization's credit card.\n"
- title: 6.1.4.  Communication Model
  contents:
  - "6.1.4.  Communication Model\n   The purchase request from Cardholder to Merchant\
    \ and subsequent\n   payment authorization exchange between Merchant and Acquirer\
    \ is\n   illustrated in figure 17 and described below.\n         +----------------+\
    \       +------------------------+\n         | Issuer         |       | Acquirer\
    \               |\n         | (User Home     |       | (Broker)              \
    \ |\n         |  Organization) |       |  +------------------+  |\n         |\
    \                |<------+--|  Payment         |  |\n         |              \
    \  |   5   |  |  Gateway         |  |\n         |                |-------+->|\
    \                  |  |\n         |                |   6   |  +------------------+\
    \  |\n         |                |       |        /|\\  |          |\n        \
    \ +----------------+       +---------+---+----------+\n                      \
    \                      |4  |7\n                                            | \
    \ \\|/\n         +----------------+       +--------------------+\n         | Cardholder\
    \     |       | Merchant           |\n         | (User)         |       | (Service\
    \ Provider) |---+\n         |                |------>|                    |  \
    \ |\n         |                |   1   |                    |   |\n         |\
    \                |<------|                    |   |\n         |              \
    \  |   2   |                    |   |\n         |                |------>|   \
    \                 |   |\n         |                |   3   |                 \
    \   |   |\n         |                |<------|                    |   |\n    \
    \     |                |   8   |                    |   |\n         |        \
    \        |       |                 |  |   |\n         |                |     \
    \  +-----------------+--+   |\n         |                |         |         \
    \      |9     |\n         |                |<--------| Fulfillment  \\|/     |\n\
    \         |                |   10    |                      |\n         +----------------+\
    \         +----------------------+\n                  Fig. 17 -- Communication\
    \ Sequence\n   1. The Cardholder shops and decides to purchase some goods at\n\
    \      merchant.com. The Cardholder has selected a list of goods and the\n   \
    \   Merchant's software has subsequently prepared an order form for\n      the\
    \ Cardholder indicating the price, the terms and conditions, and\n      the accepted\
    \ payment methods.  The SET transaction starts at the\n      moment the Cardholder\
    \ indicates that he or she wants to pay for\n      the goods using a certain payment\
    \ brand.  The Cardholder software\n      sends a request to the Merchant that\
    \ initiates the payment\n      process.\n   2. The Merchant checks the order and\
    \ signs it and returns it to the\n      Cardholder including a certificate from\
    \ the Acquirer's Gateway\n      that allows the Cardholder to encrypt payment\
    \ instructions that\n      are only relevant to the Gateway and not to the Merchant\
    \ (e.g.,\n      the Cardholder's credit card information).  The Cardholder also\n\
    \      includes his or her own certificate.\n   3. The Cardholder now verifies\
    \ both certificates (the software has\n      the CA's root certificate).  The\
    \ Cardholder software generates a\n      message containing the order information\
    \ and the payment\n      instructions that is signed by the Cardholder.  Using\
    \ the Gateway\n      Certificate, it will encrypt the Payment Instruction so that\
    \ it\n      will only be readable by the Gateway.  The Cardholder will include\n\
    \      his or her certificate.\n   4. The Merchant verifies the Cardholder certificate\
    \ and checks the\n      message integrity.  He or she will now process the payment\
    \ and\n      issue a payment authorization request to the gateway.  The payment\n\
    \      authorization request contains the Cardholder's certificate and\n     \
    \ both Merchant certificates.\n   5. The Gateway verifies the Merchant's signature\
    \ certificate and that\n      the Merchant signed the authorization request. \
    \ Next it will\n      obtain the account information and payment instructions\
    \ and will\n      check the message integrity and the Cardholder's certificate.\
    \  If\n      everything is in proper order it will send an authorization\n   \
    \   request to the Issuer via a secure bank network.\n   6. The issuer returns\
    \ the authorization.\n   7. The Acquirer's Gateway generates an authorization\
    \ response which\n      includes the gateway's certificate.\n   8. The Merchant\
    \ checks the authorization response and completes the\n      process by forwarding\
    \ a purchase response to the Cardholder.\n   9. The Merchant software authorizes\
    \ the delivery of the purchased\n      goods.\n   10. The Cardholder receives\
    \ the purchased goods.\n"
- title: 6.2.  Multi Domain Model
  contents:
  - "6.2.  Multi Domain Model\n   In the previous \"single\" domain case we already\
    \ assume that there are\n   multiple Cardholders, Merchants, Issuers and Acquirers.\
    \  However all\n   these parties belong to a single trust domain as there is only\
    \ a\n   single CCA, MCA and PCA.  The trust relationship between multiple\n  \
    \ cardholders and multiple Issuers go via a single CCA in the same way\n   as\
    \ the trust relationship between an Acquirer and a Merchant uses the\n   same\
    \ MCA.  The multi-domain case arises when there are multiple\n   domains of CCA's,\
    \ MCA's and PCA's.  In SET these domains reside under\n   a particular Geopolitical\
    \ CA (GCA) which is illustrated in figure 18.\n                        +-----------+\n\
    \                        |  Root CA  |\n                        |           |\n\
    \                        +-----------+\n                              |\n    \
    \                          |\n       +----------------------|-------------------------------+\n\
    \      +-----------------------------------------------------+ |\n      |    \
    \               Brand CA                          | |\n      |               \
    \                                      |-+\n      +-----------------------------------------------------+\n\
    \                              |\n                              |\n       +----------------------|-------------------------------+\n\
    \      +-----------------------------------------------------+ |\n      |    \
    \               Geopolitical CA                   | |\n      |               \
    \                                      |-+\n      +-----------------------------------------------------+\n\
    \            |                 |                    |\n            |         \
    \        |                    |\n       +----|--------+    +---|-------+    +-------|----------+\n\
    \      +------------+ |   +----------+ |   +-----------------+ |\n      | Cardholder\
    \ | |   | Merchant | |   | Payment Gateway | |\n      |     CA     |-+   |   \
    \ CA    |-+   |       CA        |-+\n      +------------+     +----------+   \
    \  +-----------------+\n         Fig. 18 -- SET Certificate Management Architecture\n\
    \   A GCA may represent a country or region.  The architecture defines a\n   trust\
    \ hierarchy needed to manage and verify SET Certificates as these\n   need to\
    \ be issued, renewed or revoked.  Each geopolitical region may\n   have different\
    \ policies for issuing, renewing or revoking\n   certificates. However once certificates\
    \ have been issued, Cardholders\n   and Merchants belonging to different GCA's\
    \ can still be recognized as\n   belonging to the same Brand.  This will allow\
    \ a European Cardholder\n   to purchase goods in the U.S.  The U.S. Acquirer's\
    \ gateway will\n   recognize that the Cardholder belongs to the same Brand and\
    \ will\n   therefore accept a payment authorization request.\n"
- title: 6.3.  Requirements
  contents:
  - "6.3.  Requirements\n   Many e-commerce environments do not use SET.  Other mechanisms\
    \ exist\n   based on SSL, XML, and S/MIME.  Also a mechanism that uses SET only\n\
    \   for the payment authorization to the Gateway exists and is known as\n   half\
    \ SET.  However, using the model described in this document, we\n   can derive\
    \ a fairly comprehensive set of protocol requirements for\n   e-commerce.  In\
    \ these requirements, the SET terms are replaced again\n   by the descriptive\
    \ model terms:\n      Cardholder = User\n      Merchant = Service Provider\n \
    \     Issuer = User Organization\n      Acquirer = Broker\n   1. The Authorization\
    \ mechanism must allow trust relationships to be\n      established before any\
    \ requests can be made from the User to the\n      Service Provider and from the\
    \ Service Provider via a Broker to the\n      User Organization.  This process\
    \ will enable the parties to\n      communicate securely by creating an authenticated\
    \ channel and, by\n      so doing, implicitly authorizing its usage.\n   2. Upon\
    \ receipt of any request or response, entities need to be able\n      to verify\
    \ whether the transmitting party is still authorized to\n      send this request\
    \ or response.\n   3. The User must be able to authorize the Service Provider\
    \ to request\n      an authorization from the User Home Organization.\n   4. The\
    \ User must be able to authorize fulfillment of a proposed\n      service offer\
    \ from the Service Provider.\n   Other requirements related to the authorization\
    \ process:\n   Integrity\n   5. For any authorization request or response, the\
    \ receiving party\n      needs to verify that the content of the message has not\
    \ been\n      altered.\n   Confidentiality/Privacy\n   6. The User must be able\
    \ to pass information relevant to the session\n      authorization process to\
    \ the User Home Organization via a Broker\n      and the Service Provider without\
    \ allowing the Broker or the\n      Service Provider to examine its content.\n\
    \   7. The User Home Organization must be able to communicate information\n  \
    \    relevant to the session authorization via the Broker and the\n      Service\
    \ Provider to the User without allowing the Broker or the\n      Service Provider\
    \ to examine its content.\n   Nonrepudiation\n   8. There is a need for a recorded,\
    \ authenticated and authorized\n      agreement about the request for and delivery\
    \ of service.\n"
- title: 7.  Computer Based Education and Distance Learning
  contents:
  - "7.  Computer Based Education and Distance Learning\n   This section describes\
    \ the authorization aspects of computer based\n   distance learning environments.\
    \  In this section we will model the\n   relationships and working practices in\
    \ a hypothetical university\n   environment where a student enrolls in courses,\
    \ attends lectures, and\n   takes the corresponding exams from remote locations\
    \ (distance\n   learning) or via computer equipment (computer based education).\
    \  When\n   completed successfully, a student is authorized to enroll in a set\
    \ of\n   subsequent courses according to his or her curriculum requirements.\n\
    \   Completion of required courses with passing grades results in\n   graduation.\n\
    \   Although this section specifically describes an example of a student\n   taking\
    \ courses at a faculty (department) of the university, the\n   resulting requirements\
    \ should also be valid for other applications in\n   similar environments, e.g.\
    \ library loans, electronic abstract and\n   reprint services, computer and network\
    \ access, use of copy machines,\n   budget management, store retrievals, use of\
    \ coffee machines and\n   building access.\n   It is important to recognize that\
    \ the AAA environment we are\n   describing also needs to be managed.  For example,\
    \ for an application\n   such as budget management, it is necessary to delegate\
    \ budget\n   authority from a central financial department to budget managers\
    \ in\n   education or faculty groups.  An AAA environment must allow creation\n\
    \   of policy rules either by certain individuals or by other AAA servers\n  \
    \ with authorization to do so.\n"
- title: 7.1.  Model Description
  contents:
  - "7.1.  Model Description\n   The establishment of the model involves four steps:\n\
    \   1. identification of the components that are involved and what they\n    \
    \  are called in this specific environment,\n   2. identification of the contractual\
    \ relationships between the\n      involved parties,\n   3. identification of\
    \ the relationships that are based on trust, and\n   4. consideration of the sequence\
    \ of messages exchanged between\n      components.\n"
- title: 7.1.1.  Identification of Components
  contents:
  - "7.1.1.  Identification of Components\n   We will consider the components of a\
    \ distance learning environment in\n   the context of the conceptual entities\
    \ defined in [2].\n   -  The Student (User) -- the person enrolling in a course\
    \ (Service)\n      and taking the corresponding exam.\n   -  The Educator (Service\
    \ Equipment) -- the education content server\n      for which the content is delivered\
    \ by the Professor.\n   -  The Educator Authorization Module (Service Provider\
    \ AAA Server).\n      This module must check at the service access point whether\
    \ the\n      student complies with the requirements for enrolling in the\n   \
    \   course.  The authorization may be based on both local (by the\n      professor)\
    \ and remote policies (originating from the faculty).\n      Rules must allow\
    \ enough flexibility to prevent students from being\n      falsely denied access\
    \ to courses.  Strict rules must only be\n      applied at graduation time.\n\
    \   -  The Faculty (Service Provider) -- the organization (department in\n   \
    \   U.S. terms) which controls the Service \"Equipment\" of which the\n      Educator\
    \ is one example.\n   -  The Curriculum Commission (Part of User Home Organization)\
    \ -- body\n      responsible for creating rules by which a student is allowed\
    \ to\n      enroll in a certain course and how this course will count toward\n\
    \      his or her graduation requirements.  Students may legally take any\n  \
    \    course available at any time, however the Curriculum Commission\n      will\
    \ decide whether this course will contribute towards their\n      graduation.\
    \  When a Student registers with a certain Educator, the\n      Educator may check\
    \ with the Curriculum Commission AAA server\n      whether the course will count\
    \ towards graduation and confirm this\n      with the student.\n   -  The Student\
    \ Administration (Part of User Home Organization) -- the\n      administrative\
    \ organization that authorizes students to enroll in\n      courses if certain\
    \ criteria, including financial criteria, are\n      met.  Next to the student,\
    \ the Student Administration will keep\n      track of any exam results for the\
    \ student and will issue a\n      graduation certificate when all criteria are\
    \ met.\n"
- title: 7.1.2.  Identification of Contractual Relationships
  contents:
  - "7.1.2.  Identification of Contractual Relationships\n   Contractual relationships\
    \ are illustrated in figure 19, below. Based\n   on contract relationships,specific\
    \ trust relationships are created as\n   required.\n   Although not shown in figure\
    \ 19, it is assumed that the university\n   has contractual relationships with\
    \ the faculties in which every\n   faculty is allowed and obligated to build,\
    \ maintain and present one\n   or more specific studies.\n                   \
    \  +---------------------------------------------+\n                     | +-----------------------------------------+\
    \ |\n                     | |          Faculty administration         | |\n  \
    \                   | |+----------------+     +----------------+| |\n        \
    \             | |O Student        |     | Curriculum     || |\n              \
    \       | *| Administration O*****O Commission     || |\n                    \
    \ |*|| AAA Server     |     | AAA Server     || |\n                     */|+---O------O-----+\
    \     +-----O------O---+| |\n                    *//|    *       *           \
    \    *       *    | |\n                   *// +----*---------*-----------*---------*----+\
    \ |\n                  *//|      *   ||      *       *     ||    *      |\n  \
    \               *// |      *   ||        *   *       ||    *      |\n        \
    \        *//  |      *   ||          *         ||    *      |\n              \
    \ *//   |      *   ||        *   *       ||    *      |\n              *//   \
    \ |      *   ||      *       *     ||    *      |\n             *//     | +----*---------*--+\
    \     +--*---------*----+ |\n            *//      | |    *       *    |     |\
    \    *       *      |\n           *//       | |+---O------O----+|     |+----O------O---+|\
    \ |\n          *//        | || Educator A    ||     || Educator B    || |\n  \
    \       *//         | || AAA Server    ||     || AAA Server    || |\n        *//\
    \          | || Service admin.||     || Service admin.|| |\n       *//       \
    \    | |+---O-----------+|     |+-----------O---+| |\n      *//            | |\
    \    *            |     |            *    | |\n   +-O-------+       | |    * \
    \           |     |            *    | |\n   |         |       | |+---O-----------+|\
    \     |+-----------O---+| |\n   | Student |       | || Educator      ||     ||\
    \ Educator      || |\n   |         |       | || Course A      ||     || Course\
    \ B      || |\n   |         |       | |+---------------+|     |+---------------+|\
    \ |\n   +---------+       | +-----------------+     +-----------------+ |\n  \
    \                   |                   Faculty                   |\n        \
    \             +---------------------------------------------+\n              \
    \       // = contractual relationship\n                     ** = trust relationship\n\
    \       Fig. 19 -- Contractual relationships - single domain case\n   As shown\
    \ in figure 19, the Student has a contractual relationship\n   with the Faculty.\
    \  The contract allows the Student to pursue a course\n   of study consisting\
    \ of a set of courses.  Courses are presented to\n   the Students by the Educators.\
    \  A course of study may consist of\n   courses from different Faculties.\n  \
    \ Faculties have contracts among them allowing Students from one\n   Faculty to\
    \ enroll in courses from other Faculties.\n   Faculties instantiate Educators\
    \ based on a contract between the\n   Faculty Administration and the professor\
    \ implementing and managing\n   the Educator. Authorization is based on policy\
    \ rules defined by one\n   or more parties in the contractual relationships. \
    \ For example, a\n   professor has a policy to give the course only in the afternoon\
    \ and\n   the Faculty has a policy to give the course to their own students and\n\
    \   students from faculty-x but not, when oversubscribed, to faculty-y\n   students.\n"
- title: 7.1.3.  Identification of Trust Relationships
  contents:
  - "7.1.3.  Identification of Trust Relationships\n   Figure 19 illustrates relevant\
    \ trust relationships which statically\n   enable AAA entities to communicate\
    \ certain attributes in our\n   simplified example. However, in order for the\
    \ illustrated entities to\n   work, other trust relationships that are not illustrated\
    \ must already\n   be in existence:\n   -  A trust relationship based on a contract\
    \ between the Faculty and\n      the university enables a faculty to create and\
    \ teach specific\n      courses belonging to a course of study.\n   -  Although\
    \ not further detailed in this example, it is worth noting\n      that trust relationships\
    \ between faculties authorize students from\n      one faculty to enroll in courses\
    \ with other faculties.\n   -  A professor responsible for the content of the\
    \ Educator has a\n      trust relationship with the administration of the faculty.\n\
    \      Through this relationship, the faculty enables the professor to\n     \
    \ teach one or more courses fitting the requirements of the\n      Curriculum\
    \ Commission.\n   Figure 19 illustrates the following trust relationships:\n \
    \  -  When a person wants to become a Student of a Faculty, the contract\n   \
    \   requires the Student to register with the Student Administration\n      of\
    \ the Faculty.  If the requirements for registration are met, a\n      trust relationship\
    \ with the Faculty enables the Student to\n      register for courses.  For this\
    \ purpose, the Student\n      Administration will issue a student card which contains\
    \ a student\n      ID and information about the Faculty he or she is admitted\
    \ to.\n      The Student Administration will only admit Students who pay the\n\
    \      necessary fees and have met certain prerequisites.  The Student\n     \
    \ Administration will also keep track of Student grades and will\n      ultimately\
    \ issue a certificate at graduation. The Student\n      Administration AAA server\
    \ has access to relevant student data and\n      will only issue grade information\
    \ and other student-related\n      information to authorized parties which have\
    \ a specified means of\n      authenticating.\n   -  The Curriculum Commission\
    \ AAA server needs a trust relationship\n      with the Student Administration\
    \ AAA server in order to obtain\n      grade information to check whether a student\
    \ has met the required\n      course prerequisites.  The Curriculum Commission\
    \ creates certain\n      rules within its AAA server which are evaluated when\
    \ a particular\n      student attempts to register for a particular course in\
    \ order to\n      give an advisory to the student.\n   -  The Educator AAA server\
    \ needs a trust relationship with the\n      Student Administrator AAA server\
    \ in order to verify whether this\n      particular Student is in good standing\
    \ with the Faculty.  Only\n      authorized Educator AAA servers may send requests\
    \ to the Student\n      Administration AAA server.\n   -  The Educator AAA server\
    \ needs a trust relationship with the\n      Curriculum Commission AAA server\
    \ in order to allow the Educator to\n      obtain an advisory for the Student\
    \ whether this course is\n      consistent with his or her curriculum or whether\
    \ the student meets\n      the course prerequisites.  Only authorized Educator\
    \ AAA servers\n      may send requests to the Curriculum AAA Server.\n"
- title: 7.1.4.  Sequence of Requests
  contents:
  - "7.1.4.  Sequence of Requests\n   For the sake of simplicity, we take the example\
    \ of a student from the\n   same faculty as the professor.\n   In this example\
    \ the following interactions take place for a\n   hypothetical course (see figure\
    \ 20).\n                   +----------------------------------------------+\n\
    \                   |                                              |\n       \
    \            |  +----------------+  6   +----------------+  |\n              \
    \     |  | Student        |----->| Curriculum     |  |\n                   | \
    \ | Administration |<-----| Commission     |  |\n                   |  | AAA Server\
    \     |  5   | AAA Server     |  |\n                   |  +----------------+ \
    \   _ +----------------+  |\n                   |    /|\\ |               /|/\
    \                   |\n                   |     |  |              / /        \
    \            |\n                   |  2,8|  |3            / /6               \
    \     |\n                   |     |  |           4/ /                      |\n\
    \                   |     |  |           / /                       |\n       \
    \            |     |  |          / /                        |\n              \
    \     |     | \\|/        /|/                         |\n                   |\
    \  +---------------+ --     +---------------+  |\n                   |  | Educator\
    \ A    |        | Educator B    |  |\n                   |  | AAA Server    |\
    \        | AAA Server    |  |\n                   |  +---------------+       \
    \ +---------------+  |\n                   |    /|\\ |                       \
    \              |\n                   |2,4,8|  |3,6                           \
    \       |\n   +---------+     |     | \\|/                                   \
    \ |\n   |         | 1,7 |  +---------------+        +---------------+  |\n   |\
    \ Student |------->| Educator      |        | Educator      |  |\n   |       \
    \  |<-------| Course A      |        | Course B      |  |\n   |         | 7,8\
    \ |  +---------------+        +---------------+  |\n   +---------+     |     \
    \              Faculty                    |\n                   +----------------------------------------------+\n\
    \           Fig. 20 -- AAA transactions - single domain case\n   1. After the\
    \ Professor has set up the Service Equipment (Educator)\n      students come to\
    \ it presenting their ID (college card,\n      name+faculty) and ask to be admitted\
    \ to the course.\n   2. The Educator checks the ID to determine it is indeed dealing\
    \ with\n      a student from the faculty.  This can include a check with the\n\
    \      Student Administration.\n   3. The Student Administration replies to the\
    \ Educator AAA Server, and\n      the Educator AAA Server replies to the Educator.\n\
    \   4. The Educator checks the request of the Student against its own\n      policy\
    \ (courses only in the afternoon) and checks with the\n      Curriculum Commission\
    \ whether this student is advised to take the\n      course.  The necessary information\
    \ is not normally known to or\n      maintained by the professor.\n   5. The Curriculum\
    \ Commission may check against the Student\n      Administration to see if the\
    \ Student had the necessary grades for\n      the previous courses according to\
    \ the policies set by the\n      Curriculum Commission.\n   6. The Student Administration\
    \ replies to the Curriculum Commission,\n      the Curriculum Commission replies\
    \ to the Educator AAA Server, and\n      the Educator AAA Server replies to the\
    \ Educator.\n   7. If now authorized, the Student is presented the material and\
    \ the\n      Student returns completed exams.\n   8. If the Student passes the\
    \ tests, the Educator informs both the\n      Student and the Student Administration\
    \ that the Student has\n      passed.\n"
- title: 7.2.  Requirements
  contents:
  - "7.2.  Requirements\n   We identify the following requirements for an AAA server\
    \ environment\n   for this example:\n   1. It must be possible to delegate authority\
    \ to contracted partners.\n      Although this requirement is not explicit in\
    \ the limited example,\n      the relationship between University and Faculty\
    \ may require\n      delegation of authority regarding the curriculum to the Faculty.\n\
    \      In the case of budget management, this requirement is evident.\n   2. A\
    \ system to manage the delegated authority must be established.\n      It is possible\
    \ that this is just another AAA server environment.\n      This comes from the\
    \ fact that one partner requires the presence of\n      specific rules to be in\
    \ the AAA server of another partner.  For\n      example, the Faculty must be\
    \ sure that certain checks are\n      performed by the Educator's AAA server.\n\
    \   3. AAA requests must either be evaluated at the AAA server queried or\n  \
    \    else parts of the request must be forwarded to another AAA server\n     \
    \ which can decide further on the request.  As such, it must be\n      possible\
    \ to build a network of AAA servers in which each makes the\n      decisions it\
    \ is authorized to make by the relationships among the\n      entities, e.g.,\
    \ a request from the Educator to the Curriculum\n      Commission may result in\
    \ a request to the Student Administration.\n   4. Transaction logs must be maintained\
    \ to support non-repudiation for\n      the grades of the students.  This recording\
    \ should be time-stamped\n      and allow signing by authorized entities.  A student\
    \ should sign\n      for taking an exam and this should be kept by the Educator's\
    \ AAA\n      server.  After grading, the professor should be able to sign a\n\
    \      grade and send it to the Student Administrator and the Student\n      Administrator's\
    \ AAA server should log and timestamp this event.\n   5. Three types of AAA messages\
    \ are required:\n      -  authorization requests and responses for obtaining\n\
    \         authorization,\n      -  notification messages for accounting purposes,\
    \ and\n      -  information requests and responses for getting information\n \
    \        regarding the correct construction of requests and for querying\n   \
    \      the database of notifications.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   The authorization applications discussed in this\
    \ document are modeled\n   on the framework presented in [2].  Security considerations\
    \ relative\n   to the authorization framework are discussed in [2].\n   Specific\
    \ security aspects of each authorization application presented\n   in this document\
    \ are discussed in the relevant section, above.\n   Security aspects of the applications,\
    \ themselves, are discussed in\n   the references cited below.\n"
- title: Glossary
  contents:
  - "Glossary\n   Attribute Certificate -- structure containing authorization\n  \
    \    attributes which is digitally signed using public key\n      cryptography.\n\
    \   Contract Relationship -- a relation established between two or more\n    \
    \  business entities where terms and conditions determine the\n      exchange\
    \ of goods or services.\n   Distributed Service -- a service that is provided\
    \ by more than one\n      Service Provider acting in concert.\n   Dynamic Trust\
    \ Relationship -- a secure relationship which is\n      dynamically created between\
    \ two entities who may never have had\n      any prior relationship. This relationship\
    \ can be created if the\n      involved entities have a mutually trusted third\
    \ party. Example: A\n      merchant trusts a cardholder at the time of a payment\
    \ transaction\n      because they both are known by a credit card organization.\n\
    \   Policy Decision Point (PDP) -- The point where policy decisions are\n    \
    \  made.\n   Policy Enforcement Point (PEP) -- The point where the policy\n  \
    \    decisions are actually enforced.\n   Resource Manager -- the component of\
    \ an AAA Server which tracks the\n      state of sessions associated with the\
    \ AAA Server or its associated\n      Service Equipment and provides an anchor\
    \ point from which a\n      session can be controlled, monitored, and coordinated.\n\
    \   Roaming -- An authorization transaction in which the Service Provider\n  \
    \    and the User Home Organization are two different organizations.\n      (Note\
    \ that the dialin application is one for which roaming has\n      been actively\
    \ considered, but this definition encompasses other\n      applications as well.)\n\
    \   Security Association -- a collection of security contexts, between a\n   \
    \   pair of nodes, which may be applied to protocol messages exchanged\n     \
    \ between them. Each context indicates an authentication algorithm\n      and\
    \ mode, a secret (a shared key, or appropriate public/private\n      key pair),\
    \ and a style of replay protection in use. [14]\n   Service Equipment -- the equipment\
    \ which provides a service.\n   Service Provider -- an organization which provides\
    \ a service.\n   Static Trust Relationship -- a pre-established secure relationship\n\
    \      between two entities created by a trusted party.  This\n      relationship\
    \ facilitates the exchange of AAA messages with a\n      certain level of security\
    \ and traceability. Example: A network\n      operator (trusted party) who has\
    \ access to the wiring closet\n      creates a connection between a user's wall\
    \ outlet and a particular\n      network port.  The user is thereafter trusted\
    \ -- to a certain\n      level -- to be connected to this particular network port.\n\
    \   User -- the entity seeking authorization to use a resource or a\n      service.\n\
    \   User Home Organization (UHO) -- An organization with whom the User\n     \
    \ has a contractual relationship which can authenticate the User and\n      may\
    \ be able to authorize access to resources or services.\n"
- title: References
  contents:
  - "References\n   [1]  Bradner, S., \"The Internet Standards Process -- Revision\
    \ 3\", BCP\n        9, RFC 2026, October 1996.\n   [2]  Vollbrecht, J., Calhoun,\
    \ P., Farrell, S., Gommans, L., Gross,\n        G., de Bruijn, B., de Laat, C.,\
    \ Holdrege, M. and D. Spence, \"AAA\n        Authorization Framework\", RFC 2904,\
    \ August 2000.\n   [3]  Farrell, S., Vollbrecht, J., Calhoun, P., Gommans, L.,\
    \ Gross,\n        G., de Bruijn, B., de Laat, C., Holdrege, M. and D. Spence,\
    \ \"AAA\n        Authorization Requirements\", RFC 2906, August 2000.\n   [4]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [5]  Aboba, B. and G. Zorn, \"Criteria for\
    \ Evaluating Roaming\n        Protocols\", RFC 2477, January 1999.\n   [6]  Beadles,\
    \ Mark Anthony, and David Mitton, \"Criteria for\n        Evaluating Network Access\
    \ Server Protocols\", Work in Progress.\n   [7]  Aboba, B. and M. Beadles, \"\
    The Network Access Identifier\", RFC\n        2486, January 1999.\n   [8]  Rigney,\
    \ C., Rubens, A., Simpson, W. and S. Willens, \"Remote\n        Authentication\
    \ Dial In User Service (RADIUS)\", RFC 2138, April\n        1997.\n   [9]  Calhoun,\
    \ P. and G. Zorn, \"Roamops Authentication/Authorization\n        Requirements\"\
    , Work in Progress.\n   [10] Perkins, C., \"IP Mobility Support\", RFC 2002, October\
    \ 1996.\n   [11] Glass, Steven, et al, \"Mobile IP Authentication, Authorization,\n\
    \        and Accounting Requirements\", Work in Progress.\n   [12] Hiller, Tom,\
    \ et al., \"cdma2000 Wireless Data Requirements for\n        AAA\", Work in Progress.\n\
    \   [13] Neilson, Rob, Jeff Wheeler, Francis Reichmeyer, and Susan Hares,\n  \
    \      \"A Discussion of Bandwidth Broker Requirements for Internet2\n       \
    \ Qbone Deployment\", ver. 0.7, August 1999,\n        http://www.merit.edu/working.groups/i2-qbone-bb/doc/BB_Req7.pdf.\n\
    \   [14] deBry, R., \"Internet Printing Protocol/1.0: Model and\n        Semantics\"\
    , RFC 2566, April 1999.\n   [15] Burdett, D., \"Internet Open Trading Protocol\
    \ - IOTP\", RFC 2801,\n        April 2000.\n   [16] \"SET Secure Electronic Transaction\
    \ Specification Book 1:\n        Business Description\", Version 1.0, May 31,\
    \ 1997,\n        http://www.setco.org/download/set_bk1.pdf.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   John R. Vollbrecht\n   Interlink Networks, Inc.\n   775\
    \ Technology Drive, Suite 200\n   Ann Arbor, MI  48108\n   USA\n   Phone: +1 734\
    \ 821 1205\n   Fax:   +1 734 821 1235\n   EMail: jrv@interlinknetworks.com\n \
    \  Pat R. Calhoun\n   Network and Security Research Center, Sun Labs\n   Sun Microsystems,\
    \ Inc.\n   15 Network Circle\n   Menlo Park, California, 94025\n   USA\n   Phone:\
    \  +1 650 786 7733\n   Fax:    +1 650 786 6445\n   EMail:  pcalhoun@eng.sun.com\n\
    \   Stephen Farrell\n   Baltimore Technologies\n   61 Fitzwilliam Lane\n   Dublin\
    \ 2\n   Ireland\n   Phone:  +353 1 647 7406\n   Fax:    +353 1 647 7499\n   EMail:\
    \  stephen.farrell@baltimore.ie\n   Leon Gommans\n   Enterasys Networks EMEA\n\
    \   Kerkplein 24\n   2841 XM  Moordrecht\n   The Netherlands\n   Phone: +31 182\
    \ 379279\n   email: gommans@cabletron.com\n          or at University of Utrecht:\n\
    \          l.h.m.gommans@phys.uu.nl\n   George M. Gross\n   Lucent Technologies\n\
    \   184 Liberty Corner Road, m.s. LC2N-D13\n   Warren, NJ 07059\n   USA\n   Phone:\
    \  +1 908 580 4589\n   Fax:    +1 908-580-4991\n   EMail:  gmgross@lucent.com\n\
    \   Betty de Bruijn\n   Interpay Nederland B.V.\n   Eendrachtlaan 315\n   3526\
    \ LB Utrecht\n   The Netherlands\n   Phone: +31 30 2835104\n   EMail: betty@euronet.nl\n\
    \   Cees T.A.M. de Laat\n   Physics and Astronomy dept.\n   Utrecht University\n\
    \   Pincetonplein 5,\n   3584CC Utrecht\n   Netherlands\n   Phone: +31 30 2534585\n\
    \   Phone: +31 30 2537555\n   EMail: delaat@phys.uu.nl\n   Matt Holdrege\n   ipVerse\n\
    \   223 Ximeno Ave.\n   Long Beach, CA 90803\n   EMail: matt@ipverse.com\n   David\
    \ W. Spence\n   Interlink Networks, Inc.\n   775 Technology Drive, Suite 200\n\
    \   Ann Arbor, MI  48108\n   USA\n   Phone: +1 734 821 1203\n   Fax:   +1 734\
    \ 821 1235\n   EMail: dspence@interlinknetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
