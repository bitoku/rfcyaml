- contents:
  - "                           RSVP-TE Extensions\n        for Associated Bidirectional
    Label Switched Paths (LSPs)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes Resource Reservation Protocol (RSVP)\n   extensions
    to bind two point-to-point unidirectional Label Switched\n   Paths (LSPs) into
    an associated bidirectional LSP.  The association\n   is achieved by defining
    new Association Types for use in ASSOCIATION\n   and in Extended ASSOCIATION Objects.
    \ One of these types enables\n   independent provisioning of the associated bidirectional
    LSPs on both\n   sides, while the other enables single-sided provisioning.  The\n
    \  REVERSE_LSP Object is also defined to enable a single endpoint to\n   trigger
    creation of the reverse LSP and to specify parameters of the\n   reverse LSP in
    the single-sided provisioning case.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7551.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \  2. Conventions Used in This Document ...............................5\n      2.1.
    Key Word Definitions .......................................5\n      2.2. Reverse
    Unidirectional LSPs ................................5\n      2.3. Message Formats
    ............................................5\n   3. Overview ........................................................6\n
    \     3.1. Provisioning Model Overview ................................6\n           3.1.1.
    Single-Sided Provisioning ...........................6\n           3.1.2. Double-Sided
    Provisioning ...........................6\n      3.2. Association Signaling Overview
    .............................6\n           3.2.1. Single-Sided Provisioning ...........................7\n
    \          3.2.2. Double-Sided Provisioning ...........................7\n      3.3.
    Asymmetric Bandwidth Signaling Overview ....................8\n           3.3.1.
    Single-Sided Provisioning ...........................8\n           3.3.2. Double-Sided
    Provisioning ...........................8\n      3.4. Recovery LSP Overview ......................................8\n
    \  4. Message and Object Definitions ..................................9\n      4.1.
    RSVP Message Formats .......................................9\n      4.2. ASSOCIATION
    Object .........................................9\n      4.3. Extended ASSOCIATION
    Object ...............................10\n      4.4. REVERSE_LSP Object Definition
    .............................11\n           4.4.1. REVERSE_LSP Object Format ..........................11\n
    \          4.4.2. REVERSE_LSP Subobjects .............................11\n   5.
    Processing Rules ...............................................12\n      5.1.
    Rules for ASSOCIATION Object ..............................12\n           5.1.1.
    Compatibility for ASSOCIATION Object ...............14\n      5.2. Rules for REVERSE_LSP
    Object ..............................14\n           5.2.1. Compatibility for REVERSE_LSP
    Object ...............16\n   6. IANA Considerations ............................................16\n
    \     6.1. Association Types .........................................16\n      6.2.
    REVERSE_LSP Object ........................................16\n      6.3. Reverse
    LSP Failure PathErr Sub-code ......................17\n   7. Security Considerations
    ........................................17\n   8. References .....................................................18\n
    \     8.1. Normative References ......................................18\n      8.2.
    Informative References ....................................19\n   Acknowledgements
    ..................................................20\n   Contributors ......................................................20\n
    \  Authors' Addresses ................................................20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The MPLS Transport Profile (MPLS-TP) requirements document
    [RFC5654]\n   specifies that MPLS-TP MUST support associated bidirectional point-\n
    \  to-point Label Switched Paths (LSPs).  These requirements are given\n   in
    Section 2.1 (\"General Requirements\") of that document and are\n   partially
    rephrased below:\n   7.   MPLS-TP MUST support associated bidirectional point-to-point\n
    \       LSPs.\n   11.  The end points of an associated bidirectional LSP MUST
    be aware\n        of the pairing relationship of the forward and reverse LSPs
    used\n        to support the bidirectional service.\n   12.  Nodes on the LSP
    of an associated bidirectional LSP where both\n        the forward and backward
    directions transit the same node in the\n        same (sub)layer as the LSP SHOULD
    be aware of the pairing\n        relationship of the forward and the backward
    directions of the\n        LSP.\n   50.  The MPLS-TP control plane MUST support
    establishing associated\n        bidirectional P2P LSP including configuration
    of protection\n        functions and any associated maintenance functions.\n   The
    above requirements are also repeated in [RFC6373].\n   Furthermore, an associated
    bidirectional LSP is also useful for\n   protection-switching for Operations,
    Administration, and Maintenance\n   (OAM) messages that require a return path.\n
    \  A variety of applications, such as Internet services and the return\n   paths
    of OAM messages, exist and may have different upstream and\n   downstream bandwidth
    requirements.  [RFC5654] specifies an asymmetric\n   bandwidth requirement in
    Section 2.1 (\"General Requirements\"), and it\n   is repeated below:\n   14.
    \ MPLS-TP MUST support bidirectional LSPs with asymmetric\n        bandwidth requirements,
    i.e., the amount of reserved bandwidth\n        differs between the forward and
    backward directions.\n   The approach for supporting asymmetric bandwidth co-routed\n
    \  bidirectional LSPs is defined in [RFC6387].\n   The method of association and
    the corresponding Resource Reservation\n   Protocol (RSVP) ASSOCIATION Object
    are defined in [RFC4872],\n   [RFC4873], and [RFC6689].  In that context, the
    ASSOCIATION Object is\n   used to associate a recovery LSP with the LSP it is
    protecting.  This\n   object also has broader applicability as a mechanism to
    associate\n   RSVP states.  [RFC6780] defines the Extended ASSOCIATION Objects
    that\n   can be more generally applied for this purpose.  This document uses\n
    \  the term \"(Extended) ASSOCIATION Objects\" to refer collectively to\n   the
    ASSOCIATION Objects defined in [RFC4872] and the Extended\n   ASSOCIATION Objects
    defined in [RFC6780].\n   This document specifies mechanisms for binding two reverse\n
    \  unidirectional LSPs into an associated bidirectional LSP.  The\n   association
    is achieved by defining new Association Types for use in\n   (Extended) ASSOCIATION
    Objects.  One of these types enables\n   independent provisioning of the associated
    bidirectional LSPs, while\n   the other enables single-sided provisioning.  The
    REVERSE_LSP Object\n   is also defined to enable a single endpoint to trigger
    creation of\n   the reverse LSP and to specify parameters of the reverse LSP in
    the\n   single-sided provisioning case.  For example, the REVERSE_LSP Object\n
    \  allow asymmetric upstream and downstream bandwidths for the\n   associated
    bidirectional LSP.\n"
  title: 1.  Introduction
- contents:
  - '2.  Conventions Used in This Document

    '
  - contents:
    - "2.1.  Key Word Definitions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 2.1.  Key Word Definitions
  - contents:
    - "2.2.  Reverse Unidirectional LSPs\n   Two reverse unidirectional LSPs are setup
      in the opposite directions\n   between a pair of source and destination nodes
      to form an associated\n   bidirectional LSP.  A reverse unidirectional LSP originates
      on the\n   same node where the forward unidirectional LSP terminates, and it\n
      \  terminates on the same node where the forward unidirectional LSP\n   originates.\n"
    title: 2.2.  Reverse Unidirectional LSPs
  - contents:
    - "2.3.  Message Formats\n   This document uses the Routing Backus-Naur Form (RBNF)
      to define\n   message formats as defined in [RFC5511].\n"
    title: 2.3.  Message Formats
  title: 2.  Conventions Used in This Document
- contents:
  - '3.  Overview

    '
  - contents:
    - "3.1.  Provisioning Model Overview\n   This section provides an overview and
      definition of the models for\n   provisioning associated bidirectional LSPs.\n
      \  The associated bidirectional LSP's forward and reverse unidirectional\n   LSPs
      are established, monitored, and protected independently as\n   specified by
      [RFC5654].  Configuration information regarding the LSPs\n   can be provided
      at one or both endpoints of the associated\n   bidirectional LSP.  Depending
      on the method chosen, there are two\n   models of creating an associated bidirectional
      LSP -- single-sided\n   provisioning and double-sided provisioning.\n"
    - contents:
      - "3.1.1.  Single-Sided Provisioning\n   For the single-sided provisioning,
        the Traffic Engineering (TE)\n   tunnel is configured only on one endpoint.
        \ An LSP for this tunnel is\n   initiated by the initiating endpoint with
        the (Extended) ASSOCIATION\n   and REVERSE_LSP Objects inserted in the Path
        message.  The other\n   endpoint then creates the corresponding reverse TE
        tunnel and signals\n   the reverse LSP in response using information from
        the REVERSE_LSP\n   Object and other objects present in the received Path
        message.\n"
      title: 3.1.1.  Single-Sided Provisioning
    - contents:
      - "3.1.2.  Double-Sided Provisioning\n   For the double-sided provisioning,
        two unidirectional TE tunnels are\n   configured independently, one on each
        endpoint.  The LSPs for the\n   tunnels are signaled with (Extended) ASSOCIATION
        Objects inserted in\n   the Path message by both endpoints to indicate that
        the two LSPs are\n   to be associated to form a bidirectional LSP.\n"
      title: 3.1.2.  Double-Sided Provisioning
    title: 3.1.  Provisioning Model Overview
  - contents:
    - "3.2.  Association Signaling Overview\n   This section provides an overview
      of the association signaling\n   methods for the associated bidirectional LSPs.\n
      \  Three scenarios exist for binding two unidirectional LSPs together to\n   form
      an associated bidirectional LSP.  These are:\n   1) Neither unidirectional LSP
      exists, and both must be established.\n   2) Both unidirectional LSPs exist,
      but the association must be\n      established.\n   3) One LSP exists, but the
      reverse associated LSP must be\n      established.\n   The following sections
      describe the applicable provisioning models\n   for each of these scenarios.\n
      \  Path Computation Element (PCE)-based approaches [RFC4655] may be used\n   for
      path computation of an associated bidirectional LSP. However,\n   these approaches
      are outside the scope of this document.\n   Consider the topology described
      in Figure 1.  LSP1 from node A to B,\n   takes the path A,D,B, and LSP2 from
      node B to A takes the path\n   B,D,C,A.  These two LSPs, once established and
      associated, form an\n   associated bidirectional LSP between nodes A and B.\n
      \                          LSP1 -->\n                           A-------D-------B\n
      \                           \\     / <-- LSP2\n                             \\
      \  /\n                              \\ /\n                               C\n
      \          Figure 1: An Example of Associated Bidirectional LSP\n"
    - contents:
      - "3.2.1.  Single-Sided Provisioning\n   For the single-sided provisioning model,
        creation of reverse LSP1\n   shown in Figure 1 is triggered by LSP2, or creation
        of reverse LSP2\n   is triggered by LSP1.  When creation of reverse LSP2 is
        triggered by\n   LSP1, LSP1 is provisioned first (or refreshed, if LSP1 already\n
        \  exists) at node A.  LSP1 is then signaled with an (Extended)\n   ASSOCIATION,
        and REVERSE_LSP Objects are inserted in the Path\n   message.  The Association
        Type indicates single-sided provisioning.\n   Upon receiving this Path message
        for LSP1, node B establishes reverse\n   LSP2.  The (Extended) ASSOCIATION
        Object inserted in LSP2's Path\n   message is the same as that received in
        LSP1's Path message.\n   A similar procedure is used if LSP2 is provisioned
        first at node B,\n   and the creation of reverse LSP1 at node A is triggered
        by LSP2.  In\n   both scenarios, the two unidirectional LSPs are bound together
        to\n   form an associated bidirectional LSP based on identical (Extended)\n
        \  ASSOCIATION Objects in the two LSPs' Path messages.\n"
      title: 3.2.1.  Single-Sided Provisioning
    - contents:
      - "3.2.2.  Double-Sided Provisioning\n   For the double-sided provisioning model,
        both LSP1 and LSP2 shown in\n   Figure 1 are signaled independently with (Extended)
        ASSOCIATION\n   Objects inserted in the Path messages, in which the Association
        Type\n   indicating double-sided provisioning is included.  In this case,
        the\n   two unidirectional LSPs are bound together to form an associated\n
        \  bidirectional LSP based on identical (Extended) ASSOCIATION Objects\n   in
        the two LSPs' Path messages.  In all three scenarios described in\n   Section
        3.2, the LSPs to be selected for the association are\n   provisioned by the
        management action applied at both endpoints.\n"
      title: 3.2.2.  Double-Sided Provisioning
    title: 3.2.  Association Signaling Overview
  - contents:
    - "3.3.  Asymmetric Bandwidth Signaling Overview\n   This section provides an
      overview of the methods for signaling\n   asymmetric upstream and downstream
      bandwidths for the associated\n   bidirectional LSPs.\n"
    - contents:
      - "3.3.1.  Single-Sided Provisioning\n   A new REVERSE_LSP Object for use in
        the single-sided provisioning\n   model is defined in this document, in Section
        4.4.  The REVERSE_LSP\n   Object allows the initiating node of the single-sided
        provisioned LSP\n   to trigger creation of the reverse LSP on the remote node.
        \ When the\n   single-sided provisioning model is used, a SENDER_TSPEC Object
        can be\n   added in the REVERSE_LSP Object as a subobject in the initiating\n
        \  LSP's Path message to specify a different bandwidth for the reverse\n   LSP.
        \ As described in Section 4.4, addition of the REVERSE_LSP Object\n   also
        allows the initiating node to control other aspects of the\n   reverse LSP
        (such as its path) by including other objects in a\n   REVERSE_LSP Object.\n
        \  Consider again the topology described in Figure 1, where the creation\n
        \  of reverse LSP2 is triggered by LSP1.  Node A signals LSP1 with the\n   (Extended)
        ASSOCIATION Object with Association Type indicating\n   single-sided provisioning
        and inserts a SENDER_TSPEC subobject for\n   use by LSP2 in the REVERSE_LSP
        Object in the Path message.  Node B\n   then establishes the LSP2 in the reverse
        direction using the\n   asymmetric bandwidth thus specified by LSP1 and allows
        node A to\n   control the reverse LSP2.\n"
      title: 3.3.1.  Single-Sided Provisioning
    - contents:
      - "3.3.2.  Double-Sided Provisioning\n   When the double-sided provisioning
        model is used, the two\n   unidirectional LSPs are established with separate
        bandwidths, which\n   may or may not be identical.  However, these LSPs are
        associated\n   purely based on the identical contents of their (Extended)\n
        \  ASSOCIATION Objects.\n"
      title: 3.3.2.  Double-Sided Provisioning
    title: 3.3.  Asymmetric Bandwidth Signaling Overview
  - contents:
    - "3.4.  Recovery LSP Overview\n   Recovery of each unidirectional LSP forming
      the bidirectional LSP is\n   independent [RFC5654] and is based on the parameters
      signaled in\n   their respective RSVP Path messages.\n   Recovery LSP association
      is based on the identical content of the\n   (Extended) ASSOCIATION Objects
      signaled in their Path messages during\n   the initial LSP setup for both single-sided
      and double-sided\n   provisioning.  As defined in [RFC6780], multiple ASSOCIATION
      Objects\n   may be present in the signaling of a single LSP.\n"
    title: 3.4.  Recovery LSP Overview
  title: 3.  Overview
- contents:
  - '4.  Message and Object Definitions

    '
  - contents:
    - "4.1.  RSVP Message Formats\n   This section presents the RSVP message-related
      formats as modified by\n   this document.  Unmodified RSVP message formats are
      not listed.\n   The format of a Path message is as follows:\n      <Path Message>
      ::= <Common Header> [ <INTEGRITY> ]\n                         [ [<MESSAGE_ID_ACK>
      | <MESSAGE_ID_NACK>] ... ]\n                         [ <MESSAGE_ID> ]\n                         <SESSION>
      <RSVP_HOP>\n                         <TIME_VALUES>\n                         [
      <EXPLICIT_ROUTE> ]\n                         <LABEL_REQUEST>\n                         [
      <PROTECTION> ]\n                         [ <LABEL_SET> ... ]\n                         [
      <SESSION_ATTRIBUTE> ]\n                         [ <NOTIFY_REQUEST> ... ]\n                         [
      <ADMIN_STATUS> ]\n                         [ <ASSOCIATION> ... ]\n                         [
      <REVERSE_LSP> ... ]\n                         [ <POLICY_DATA> ... ]\n                         <sender
      descriptor>\n   The format of the <sender descriptor> is not modified by this\n
      \  document.\n"
    title: 4.1.  RSVP Message Formats
  - contents:
    - "4.2.  ASSOCIATION Object\n   The ASSOCIATION Object is populated using the
      rules defined below for\n   associating two reverse unidirectional LSPs to form
      an associated\n   bidirectional LSP.\n   Association Types:\n      In order
      to bind two reverse unidirectional LSPs to be an\n      associated bidirectional
      LSP, the Association Type MUST be set to\n      indicate either single-sided
      or double-sided LSPs.\n      The new Association Types are defined as follows:\n
      \     Value      Type\n      -----      -----\n        3        Double-Sided
      Associated Bidirectional LSP (D)\n        4        Single-Sided Associated Bidirectional
      LSP (A)\n   Association ID:\n      For both single-sided and double-sided provisioning,
      Association\n      ID MUST be set to a value assigned by the node that originates
      the\n      association for the bidirectional LSP.\n   Association Source:\n
      \     Association Source MUST be set to an address selected by the node\n      that
      originates the association for the bidirectional LSP.  For\n      example, this
      may be a management entity or, in the case of\n      single-sided provisioning,
      an address assigned to the node that\n      originates the LSP.\n"
    title: 4.2.  ASSOCIATION Object
  - contents:
    - "4.3.  Extended ASSOCIATION Object\n   The Extended ASSOCIATION Object is populated
      using the rules defined\n   below for associating two reverse unidirectional
      LSPs to form a\n   bidirectional LSP.\n   The Association Type, Association
      ID, and Association Source MUST be\n   set as defined for the ASSOCIATION Object
      in Section 4.1.\n   Global Association Source:\n      For both single-sided
      and double-sided provisioning, Global\n      Association Source, when used,
      MUST be set to the Global_ID\n      [RFC6370] of the node that originates the
      association for the\n      bidirectional LSP.\n   Extended Association ID:\n
      \     For both single-sided and double-sided provisioning, Extended\n      Association
      ID, when used, MUST be set to a value selected by the\n      node that originates
      the association for the bidirectional LSP.\n"
    title: 4.3.  Extended ASSOCIATION Object
  - contents:
    - '4.4.  REVERSE_LSP Object Definition

      '
    - contents:
      - "4.4.1.  REVERSE_LSP Object Format\n   The REVERSE_LSP Object is carried in
        the Path message of a forward\n   LSP to provide information to be used by
        the reverse LSP.  The object\n   also indicates that the LSP is the forward
        LSP of a single-sided\n   associated bidirectional LSP.\n   The Object has
        the following format:\n   Class_Num = 203, C_Type = 1.\n       0                   1
        \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |                                                               |\n
        \     //                        (Subobjects)                          //\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
      title: 4.4.1.  REVERSE_LSP Object Format
    - contents:
      - "4.4.2.  REVERSE_LSP Subobjects\n   Subobjects are used to override the default
        contents of a Path\n   message of a reverse LSP; see Section 5.2.  The contents
        of a\n   REVERSE_LSP Object is zero or more variable-length subobjects that\n
        \  have the same format as RSVP Objects; see Section 3.1.2 of [RFC2205].\n
        \  Any object that may be carried in a Path message MAY be carried in\n   the
        REVERSE_LSP Object.  Subobject ordering MUST follow any Path\n   message Object
        ordering requirements.\n   Examples of the Path message Objects that can be
        carried in the\n   REVERSE_LSP Object are (but not limited to):\n      - SENDER_TSPEC
        [RFC2205]\n      - EXPLICIT_ROUTE Object (ERO) [RFC3209]\n      - SESSION_ATTRIBUTE
        Object [RFC3209]\n      - ADMIN_STATUS Object [RFC3473]\n      - LSP_REQUIRED_ATTRIBUTES
        Object [RFC5420]\n      - PROTECTION Object [RFC3473] [RFC4872]\n"
      title: 4.4.2.  REVERSE_LSP Subobjects
    title: 4.4.  REVERSE_LSP Object Definition
  title: 4.  Message and Object Definitions
- contents:
  - "5.  Processing Rules\n   In general, the processing rules for the ASSOCIATION
    Object are as\n   specified in [RFC4872], and those for the Extended ASSOCIATION
    Object\n   are as specified in [RFC6780].  The following sections describe the\n
    \  rules for processing (Extended) ASSOCIATION Objects for both double-\n   sided
    and single-sided associated bidirectional LSPs and REVERSE_LSP\n   Objects for
    single-sided associated bidirectional LSPs.\n"
  - contents:
    - "5.1.  Rules for ASSOCIATION Object\n   This section defines the processing
      for the association of two\n   unidirectional LSPs to form an associated bidirectional
      LSP.  Such\n   association is based on the use of an (Extended) ASSOCIATION
      Object.\n   The procedures related to the actual identification of associations\n
      \  between LSPs based on (Extended) ASSOCIATION Objects are defined in\n   [RFC6780].
      \ [RFC6780] specifies that in the absence of rules for\n   identifying the association
      that are specific to the Association\n   Type, the included (Extended) ASSOCIATION
      Objects in the LSPs MUST be\n   identical in order for an association to exist.
      \ This document adds\n   no specific rules for the new Association Types defined,
      and the\n   identification of an LSP association therefore proceeds as specified\n
      \  in [RFC6780].\n   As described in [RFC6780], association of LSPs can be upstream
      or\n   downstream initiated, as indicated by (Extended) ASSOCIATION Objects\n
      \  in Path or Resv Messages.  The association of bidirectional LSPs is\n   always
      upstream initiated; therefore, the Association Types defined\n   in this document
      are only to be interpreted in Path Messages.  These\n   types SHOULD NOT be
      used in ASSOCIATION Objects carried in Resv\n   messages and SHOULD be ignored
      if present.\n   To indicate an associated bidirectional LSP, an ingress node
      MUST\n   insert an (Extended) ASSOCIATION Object into the Path message of the\n
      \  unidirectional LSP that is part of the associated bidirectional LSP\n   it
      initiates.  If either Global Association Source or Extended\n   Association
      Address is required, then an Extended ASSOCIATION Object\n   [RFC6780] MUST
      be inserted in the Path message.  Otherwise, an\n   ASSOCIATION Object MAY be
      used.  (Extended) ASSOCIATION Objects with\n   both single-sided and double-sided
      Association Types MUST NOT be\n   added or sent in the same Path message.\n
      \  The ingress node MUST set the Association Type field in the\n   (Extended)
      ASSOCIATION Object to \"Single-Sided Associated\n   Bidirectional LSP\" when
      single-sided provisioning is used, and to\n   \"Double-Sided Associated Bidirectional
      LSP\" when double-sided\n   provisioning is used.\n   A transit node MAY identify
      the unidirectional LSPs of an associated\n   bidirectional LSP based on (Extended)
      ASSOCIATION Objects, with the\n   Association Type values defined in this document,
      carried in Path\n   messages.  Clearly, such associations are only possible
      when the LSPs\n   transit the node.  As mentioned above, such associations are
      made per\n   the rules defined in [RFC6780].\n   Egress nodes that support the
      Association Types defined in this\n   document identify the unidirectional LSPs
      of an associated\n   bidirectional LSP based on (Extended) ASSOCIATION Objects
      carried in\n   Path messages.  Note that an ingress node will normally be the\n
      \  ingress for one of the unidirectional LSPs that make up an associated\n   bidirectional
      LSP.  When an egress node receives a Path message\n   containing an (Extended)
      ASSOCIATION Object with one of the\n   Association Types defined in this document,
      it MUST attempt to\n   identify other LSPs (including ones for which it is an
      ingress node)\n   with which the LSP being processed is associated.  As defined
      above,\n   such associations are made per the rules defined in [RFC6780].  An\n
      \  LSP not being associated at the time of signaling (for example,\n   during
      rerouting or re-optimization) on an egress node is not\n   necessarily considered
      an error condition.\n   Associated bidirectional LSP teardown follows the standard
      procedures\n   defined in [RFC3209] and [RFC3473] either without or with the\n
      \  administrative status.  Generally, the teardown procedures of the\n   unidirectional
      LSPs forming an associated bidirectional LSP are\n   independent of each other,
      so it is possible that while one LSP\n   follows graceful teardown with administrative
      status, the reverse LSP\n   is torn down without administrative status (using\n
      \  PathTear/ResvTear/PathErr with state removal).  See Section 5.2 for\n   additional
      rules related to LSPs established using single-sided\n   provisioning.\n   When
      an LSP signaled with a Path message containing an (Extended)\n   ASSOCIATION
      Object with an Association Type defined in this document\n   is torn down, the
      processing node SHALL remove the binding of the LSP\n   to any previously identified
      associated bidirectional LSP.\n   No additional processing is needed for Path
      messages with an\n   (Extended) ASSOCIATION Object containing an Association
      Type field\n   set to \"Double-Sided Associated Bidirectional LSP\".\n"
    - contents:
      - "5.1.1.  Compatibility for ASSOCIATION Object\n   The ASSOCIATION Object has
        been defined in [RFC4872] and the Extended\n   ASSOCIATION Object has been
        defined in [RFC6780], both with class\n   numbers in the form 11bbbbbb, which
        ensures compatibility with non-\n   supporting nodes.  Per [RFC2205], such
        nodes will ignore the object\n   but forward it without modification.\n   Operators
        wishing to use a function supported by a particular\n   Association Type SHOULD
        ensure that the type is supported on any node\n   that is expected to act
        on the association [RFC6780].\n   An egress node that does not support the
        Association Types defined in\n   this document is expected to return a PathErr
        with Error Code\n   \"Admission Control Failure\" (1) [RFC2205] and Sub-code
        \"Bad\n   Association Type\" (5) [RFC4872].\n   LSP recovery as defined in
        [RFC4872] and [RFC4873] is not impacted by\n   this document.  The recovery
        mechanisms defined in [RFC4872] and\n   [RFC4873] rely on the use of the (Extended)
        ASSOCIATION Objects, but\n   they use a different value for Association Type;
        multiple ASSOCIATION\n   Objects can be present in the LSP Path message and
        can coexist with\n   the procedures defined in this document.\n"
      title: 5.1.1.  Compatibility for ASSOCIATION Object
    title: 5.1.  Rules for ASSOCIATION Object
  - contents:
    - "5.2.  Rules for REVERSE_LSP Object\n   When a node initiates setup of an LSP
      using a Path message containing\n   an ASSOCIATION or Extended ASSOCIATION Object,
      and the Association\n   Type set to \"Single-Sided Associated Bidirectional
      LSP\", the Path\n   message MUST carry the REVERSE_LSP Object to trigger creation
      of a\n   reverse LSP on the egress node.\n   The REVERSE_LSP subobject MAY contain
      any of the objects that the\n   initiating node desires to have included in
      the Path message for the\n   associated reverse LSP.  The REVERSE_LSP Object
      SHOULD NOT be\n   included in a REVERSE_LSP Object.\n   A transit node receiving
      a valid Path message containing a\n   REVERSE_LSP Object MUST forward the REVERSE_LSP
      Object unchanged in\n   the outgoing Path message.\n   An egress node, upon
      receiving a Path message containing an\n   REVERSE_LSP Object MUST verify that
      the Path message contains an\n   ASSOCIATION or Extended ASSOCIATION Object
      with the Association Type\n   set to \"Single-Sided Associated Bidirectional
      LSP\".  If it does not,\n   the Path message MUST NOT trigger a reverse LSP.
      \ This verification\n   failure SHOULD NOT trigger any RSVP message but can
      be logged\n   locally, and perhaps reported through network management mechanisms.\n
      \  Once validated, the egress node MUST create an LSP in the reverse\n   direction
      or reject the Path message.  If the creation of a reverse\n   LSP fails, the
      egress node MUST return a PathErr with Error Code\n   \"Admission Control Failure\"
      (1) [RFC2205] and Sub-code \"Reverse LSP\n   Failure\" (6) defined in this document.
      \ Note that normal Resv\n   processing SHOULD NOT be impacted by the presence
      of an ASSOCIATION\n   Object with an Association Type set to \"Single-Sided
      Associated\n   Bidirectional LSP\".\n   The egress node MUST use the subobjects
      contained in the REVERSE_LSP\n   Object for initiating the reverse LSP.  When
      a subobject is not\n   present in the received REVERSE_LSP Object, the egress
      node SHOULD\n   initiate the reverse LSP based on the information contained
      in the\n   received Path message of the forward LSP as follows:\n   o  The egress
      node SHOULD copy the information from the received\n      SESSION_ATTRIBUTE,
      CLASS_TYPE, LABEL_REQUEST, ASSOCIATION,\n      ADMIN_STATUS, and PROTECTION
      Objects in the forward LSP Path\n      message to form the Path message of the
      reverse LSP when the\n      object is not present in the received REVERSE_LSP
      Object.\n   o  The IP address in the reverse LSP's SESSION Object SHOULD be
      set\n      to the IP address carried in the received SENDER_TEMPLATE Object;\n
      \     and conversely, the IP address in the SENDER_TEMPLATE Object\n      SHOULD
      be set to the IP address carried in the received SESSION\n      Object.  There
      are no additional requirements related to the IDs\n      carried in the SESSION
      and SENDER_TEMPLATE Objects.\n   o  When the forward LSP Path message contains
      a RECORD_ROUTE Object,\n      the egress node SHOULD include the received RECORD_ROUTE
      Object in\n      the reverse LSP Path message.  Local node information SHOULD
      also\n      be recorded per standard Path message processing.\n   o  There are
      no specific requirements related to other objects.\n   The resulting Path message
      is used to create the reverse LSP.  From\n   this point on, standard Path message
      processing is used in processing\n   the resulting Path message.\n   Note that
      the contents of a forward LSP, including a carried\n   REVERSE_LSP Object, may
      change over the life of an LSP, and such\n   changes MUST result in corresponding
      changes in the reverse LSP.  In\n   particular, any object or subobject that
      was copied during the\n   creation of the initial reverse LSP's Path message
      MUST be copied\n   when modified in the forward LSP, and a trigger Path message
      MUST be\n   processed.\n   The removal of the REVERSE_LSP Object in the received
      Path message\n   SHOULD cause the egress node to tear down any previously established\n
      \  reverse LSP.\n   When the egress node receives a PathTear message for the
      forward LSP\n   or whenever the forward LSP is torn down, the node MUST remove
      the\n   associated reverse LSP using standard PathTear message processing.\n
      \  Teardown of the reverse LSP for other reasons SHOULD NOT trigger\n   removal
      of the initiating LSP, but it SHOULD result in the egress\n   node sending a
      PathErr with Error Code \"Admission Control Failure\"\n   (1) [RFC2205] and
      Sub-code \"Reverse LSP Failure\" (6) defined in this\n   document.\n"
    - contents:
      - "5.2.1.  Compatibility for REVERSE_LSP Object\n   The REVERSE_LSP Object is
        defined with class numbers in the form\n   11bbbbbb, which ensures compatibility
        with non-supporting nodes.  Per\n   [RFC2205], such nodes will ignore the
        object but forward it without\n   modification.\n"
      title: 5.2.1.  Compatibility for REVERSE_LSP Object
    title: 5.2.  Rules for REVERSE_LSP Object
  title: 5.  Processing Rules
- contents:
  - "6.  IANA Considerations\n   IANA has registered values for the namespace defined
    in this document\n   and summarized in this section.\n"
  - contents:
    - "6.1.  Association Types\n   IANA maintains the \"Generalized Multi-Protocol
      Label Switching\n   (GMPLS) Signaling Parameters\" registry (see\n   <http://www.iana.org/assignments/gmpls-sig-parameters>).
      \ The\n   \"Association Type\" subregistry is included in this registry.\n   This
      registry has been updated by new Association Types for\n   ASSOCIATION and Extended
      ASSOCIATION Objects defined in this document\n   as follows:\n   Value    Name
      \                                         Reference\n    3   Double-Sided Associated
      Bidirectional LSP (D)    Section 4.2\n    4   Single-Sided Associated Bidirectional
      LSP (A)    Section 4.2\n"
    title: 6.1.  Association Types
  - contents:
    - "6.2.  REVERSE_LSP Object\n   IANA maintains the \"Resource Reservation Protocol
      (RSVP) Parameters\"\n   registry (see <http://www.iana.org/assignments/rsvp-parameters>).\n
      \  The \"Class Names, Class Numbers, and Class Types\" subregistry is\n   included
      in this registry.\n   This registry has been extended for new Class Number (Class-Num)
      and\n   Class Type (C-type) for RSVP REVERSE_LSP Object requested in the\n   11bbbbbb
      range defined in this document as follows:\n     Class Number   Class Name                Reference\n
      \      203         REVERSE_LSP               Section 4.4\n     o  REVERSE_LSP
      : Class Type or C-type = 1\n"
    title: 6.2.  REVERSE_LSP Object
  - contents:
    - "6.3.  Reverse LSP Failure PathErr Sub-code\n   IANA maintains the \"Resource
      Reservation Protocol (RSVP) Parameters\"\n   registry (see <http://www.iana.org/assignments/rsvp-parameters>).\n
      \  The \"Error Codes and Globally-Defined Error Value Sub-Codes\"\n   subregistry
      is included in this registry.\n   This registry has been extended for the new
      PathErr Sub-code defined\n   in this document as follows:\n     Error Code =
      01: \"Admission Control Failure\" (see [RFC2205])\n     o  \"Reverse LSP Failure\"
      (6)\n"
    title: 6.3.  Reverse LSP Failure PathErr Sub-code
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   This document introduces two new Association
    Types for the (Extended)\n   ASSOCIATION Object, Double-Sided Associated Bidirectional
    LSP and\n   Single-Sided Associated Bidirectional LSP.  These types, by\n   themselves,
    introduce no additional information to signaling.\n   Related security considerations
    are already covered for this in RFC\n   6780.\n   The REVERSE_LSP Object is carried
    in the Path message of a forward\n   LSP of the single-sided associated bidirectional
    LSP.  It can carry\n   parameters for the reverse LSP.  This does allow for additional\n
    \  information to be conveyed, but this information is not fundamentally\n   different
    from the information that is already carried in a\n   bidirectional LSP message.
    \ The processing of such messages is\n   already subject to local policy as well
    as security considerations\n   discussions.  For a general discussion on MPLS-
    and GMPLS-related\n   security issues, see the MPLS/GMPLS security framework [RFC5920].\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2205]  Braden, R., Ed., Zhang, L., Berson, S., Herzog, S., and S.\n              Jamin,
      \"Resource ReSerVation Protocol (RSVP) -- Version 1\n              Functional
      Specification\", RFC 2205, DOI 10.17487/RFC2205,\n              September 1997,
      <http://www.rfc-editor.org/info/rfc2205>.\n   [RFC3209]  Awduche, D., Berger,
      L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE:
      Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, DOI 10.17487/RFC3209,
      December 2001,\n              <http://www.rfc-editor.org/info/rfc3209>.\n   [RFC3473]
      \ Berger, L., Ed., \"Generalized Multi-Protocol Label\n              Switching
      (GMPLS) Signaling Resource ReserVation Protocol-\n              Traffic Engineering
      (RSVP-TE) Extensions\", RFC 3473,\n              DOI 10.17487/RFC3473, January
      2003,\n              <http://www.rfc-editor.org/info/rfc3473>.\n   [RFC4872]
      \ Lang, J., Ed., Rekhter, Y., Ed., and D. Papadimitriou,\n              Ed.,
      \"RSVP-TE Extensions in Support of End-to-End\n              Generalized Multi-Protocol
      Label Switching (GMPLS)\n              Recovery\", RFC 4872, DOI 10.17487/RFC4872,
      May 2007,\n              <http://www.rfc-editor.org/info/rfc4872>.\n   [RFC4873]
      \ Berger, L., Bryskin, I., Papadimitriou, D., and A. Farrel,\n              \"GMPLS
      Segment Recovery\", RFC 4873, DOI 10.17487/RFC4873,\n              May 2007,
      <http://www.rfc-editor.org/info/rfc4873>.\n   [RFC5511]  Farrel, A., \"Routing
      Backus-Naur Form (RBNF): A Syntax\n              Used to Form Encoding Rules
      in Various Routing Protocol\n              Specifications\", RFC 5511, DOI 10.17487/RFC5511,
      April\n              2009, <http://www.rfc-editor.org/info/rfc5511>.\n   [RFC6780]
      \ Berger, L., Le Faucheur, F., and A. Narayanan, \"RSVP\n              ASSOCIATION
      Object Extensions\", RFC 6780,\n              DOI 10.17487/RFC6780, October
      2012,\n              <http://www.rfc-editor.org/info/rfc6780>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC4655]  Farrel, A., Vasseur, J.-P., and
      J. Ash, \"A Path\n              Computation Element (PCE)-Based Architecture\",
      RFC 4655,\n              DOI 10.17487/RFC4655, August 2006,\n              <http://www.rfc-editor.org/info/rfc4655>.\n
      \  [RFC5420]  Farrel, A., Ed., Papadimitriou, D., Vasseur, JP., and A.\n              Ayyangarps,
      \"Encoding of Attributes for MPLS LSP\n              Establishment Using Resource
      Reservation Protocol Traffic\n              Engineering (RSVP-TE)\", RFC 5420,
      DOI 10.17487/RFC5420,\n              February 2009, <http://www.rfc-editor.org/info/rfc5420>.\n
      \  [RFC5654]  Niven-Jenkins, B., Ed., Brungard, D., Ed., Betts, M., Ed.,\n              Sprecher,
      N., and S. Ueno, \"Requirements of an MPLS\n              Transport Profile\",
      RFC 5654, DOI 10.17487/RFC5654,\n              September 2009, <http://www.rfc-editor.org/info/rfc5654>.\n
      \  [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n              Networks\",
      RFC 5920, DOI 10.17487/RFC5920, July 2010,\n              <http://www.rfc-editor.org/info/rfc5920>.\n
      \  [RFC6370]  Bocci, M., Swallow, G., and E. Gray, \"MPLS Transport\n              Profile
      (MPLS-TP) Identifiers\", RFC 6370,\n              DOI 10.17487/RFC6370, September
      2011,\n              <http://www.rfc-editor.org/info/rfc6370>.\n   [RFC6373]
      \ Andersson, L., Ed., Berger, L., Ed., Fang, L., Ed., Bitar,\n              N.,
      Ed., and E. Gray, Ed., \"MPLS Transport Profile\n              (MPLS-TP) Control
      Plane Framework\", RFC 6373,\n              DOI 10.17487/RFC6373, September
      2011,\n              <http://www.rfc-editor.org/info/rfc6373>.\n   [RFC6387]
      \ Takacs, A., Berger, L., Caviglia, D., Fedyk, D., and J.\n              Meuric,
      \"GMPLS Asymmetric Bandwidth Bidirectional Label\n              Switched Paths
      (LSPs)\", RFC 6387, DOI 10.17487/RFC6387,\n              September 2011, <http://www.rfc-editor.org/info/rfc6387>.\n
      \  [RFC6689]  Berger, L., \"Usage of the RSVP ASSOCIATION Object\",\n              RFC
      6689, DOI 10.17487/RFC6689, July 2012,\n              <http://www.rfc-editor.org/info/rfc6689>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Lou Berger and George Swallow
    for\n   their great guidance in this work; Jie Dong for the discussion of the\n
    \  recovery LSP; Lamberto Sterling for his valuable comments about\n   asymmetric
    bandwidth signaling; Attila Takacs for the discussion of\n   the provisioning
    model; Siva Sivabalan, Eric Osborne, and Robert\n   Sawaya for the discussions
    on the ASSOCIATION Object; and Matt\n   Hartley for providing useful suggestions
    on the document.  At the\n   same time, the authors would like to acknowledge
    the contributions of\n   Bo Wu, Xihua Fu, and Lizhong Jin for the initial discussions;
    Wenjuan\n   He for the prototype implementation; and Lou Berger, Daniel King,
    and\n   Deborah Brungard for the review of the document.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   Fan Yang\n   ZTE\n   EMail: yang.fan240347@gmail.com\n   Weilian
    Jiang\n   ZTE\n   EMail: jiang.weilian@gmail.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Fei Zhang (editor)\n   Huawei\n   EMail: zhangfei7@huawei.com\n
    \  Ruiquan Jing\n   China Telecom\n   EMail: jingrq@ctbri.com.cn\n   Rakesh Gandhi
    (editor)\n   Cisco Systems\n   EMail: rgandhi@cisco.com\n"
  title: Authors' Addresses
