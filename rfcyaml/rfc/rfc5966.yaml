- title: __initial_text__
  contents:
  - '          DNS Transport over TCP - Implementation Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document updates the requirements for the support of TCP as\
    \ a\n   transport protocol for DNS implementations.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5966.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 3\n   2.  Terminology Used in This Document . . . . . . . . . .\
    \ . . . . . 3\n   3.  Discussion  . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 3\n   4.  Transport Protocol Selection  . . . . . . . . . . . . . .\
    \ . . . 4\n   5.  Connection Handling . . . . . . . . . . . . . . . . . . . .\
    \ . . 5\n   6.  Response Reordering . . . . . . . . . . . . . . . . . . . . .\
    \ . 6\n   7.  Security Considerations . . . . . . . . . . . . . . . . . . . .\
    \ 6\n   8.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 7\n\
    \   9.  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n  \
    \   9.1.  Normative References  . . . . . . . . . . . . . . . . . . . 7\n    \
    \ 9.2.  Informative References  . . . . . . . . . . . . . . . . . . 7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Most DNS [RFC1034] transactions take place over UDP [RFC0768].\
    \  TCP\n   [RFC0793] is always used for zone transfers and is often used for\n\
    \   messages whose sizes exceed the DNS protocol's original 512-byte\n   limit.\n\
    \   Section 6.1.3.2 of [RFC1123] states:\n      DNS resolvers and recursive servers\
    \ MUST support UDP, and SHOULD\n      support TCP, for sending (non-zone-transfer)\
    \ queries.\n   However, some implementors have taken the text quoted above to\
    \ mean\n   that TCP support is an optional feature of the DNS protocol.\n   The\
    \ majority of DNS server operators already support TCP and the\n   default configuration\
    \ for most software implementations is to support\n   TCP.  The primary audience\
    \ for this document is those implementors\n   whose failure to support TCP restricts\
    \ interoperability and limits\n   deployment of new DNS features.\n   This document\
    \ therefore updates the core DNS protocol specifications\n   such that support\
    \ for TCP is henceforth a REQUIRED part of a full DNS\n   protocol implementation.\n\
    \   Whilst this document makes no specific recommendations to operators\n   of\
    \ DNS servers, it should be noted that failure to support TCP (or\n   the blocking\
    \ of DNS over TCP at the network layer) may result in\n   resolution failure and/or\
    \ application-level timeouts.\n"
- title: 2.  Terminology Used in This Document
  contents:
  - "2.  Terminology Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 3.  Discussion
  contents:
  - "3.  Discussion\n   In the absence of EDNS0 (Extension Mechanisms for DNS 0) (see\
    \ below),\n   the normal behaviour of any DNS server needing to send a UDP response\n\
    \   that would exceed the 512-byte limit is for the server to truncate\n   the\
    \ response so that it fits within that limit and then set the TC\n   flag in the\
    \ response header.  When the client receives such a\n   response, it takes the\
    \ TC flag as an indication that it should retry\n   over TCP instead.\n   RFC\
    \ 1123 also says:\n      ... it is also clear that some new DNS record types defined\
    \ in the\n      future will contain information exceeding the 512 byte limit that\n\
    \      applies to UDP, and hence will require TCP.  Thus, resolvers and\n    \
    \  name servers should implement TCP services as a backup to UDP\n      today,\
    \ with the knowledge that they will require the TCP service\n      in the future.\n\
    \   Existing deployments of DNS Security (DNSSEC) [RFC4033] have shown\n   that\
    \ truncation at the 512-byte boundary is now commonplace.  For\n   example, a\
    \ Non-Existent Domain (NXDOMAIN) (RCODE == 3) response from\n   a DNSSEC-signed\
    \ zone using NextSECure 3 (NSEC3) [RFC5155] is almost\n   invariably larger than\
    \ 512 bytes.\n   Since the original core specifications for DNS were written,\
    \ the\n   Extension Mechanisms for DNS (EDNS0 [RFC2671]) have been introduced.\n\
    \   These extensions can be used to indicate that the client is prepared\n   to\
    \ receive UDP responses larger than 512 bytes.  An EDNS0-compatible\n   server\
    \ receiving a request from an EDNS0-compatible client may send\n   UDP packets\
    \ up to that client's announced buffer size without\n   truncation.\n   However,\
    \ transport of UDP packets that exceed the size of the path\n   MTU causes IP\
    \ packet fragmentation, which has been found to be\n   unreliable in some circumstances.\
    \  Many firewalls routinely block\n   fragmented IP packets, and some do not implement\
    \ the algorithms\n   necessary to reassemble fragmented packets.  Worse still,\
    \ some\n   network devices deliberately refuse to handle DNS packets containing\n\
    \   EDNS0 options.  Other issues relating to UDP transport and packet\n   size\
    \ are discussed in [RFC5625].\n   The MTU most commonly found in the core of the\
    \ Internet is around\n   1500 bytes, and even that limit is routinely exceeded\
    \ by DNSSEC-\n   signed responses.\n   The future that was anticipated in RFC\
    \ 1123 has arrived, and the only\n   standardised UDP-based mechanism that may\
    \ have resolved the packet\n   size issue has been found inadequate.\n"
- title: 4.  Transport Protocol Selection
  contents:
  - "4.  Transport Protocol Selection\n   All general-purpose DNS implementations\
    \ MUST support both UDP and TCP\n   transport.\n   o  Authoritative server implementations\
    \ MUST support TCP so that they\n      do not limit the size of responses to what\
    \ fits in a single UDP\n      packet.\n   o  Recursive server (or forwarder) implementations\
    \ MUST support TCP\n      so that they do not prevent large responses from a TCP-capable\n\
    \      server from reaching its TCP-capable clients.\n   o  Stub resolver implementations\
    \ (e.g., an operating system's DNS\n      resolution library) MUST support TCP\
    \ since to do otherwise would\n      limit their interoperability with their own\
    \ clients and with\n      upstream servers.\n   Stub resolver implementations\
    \ MAY omit support for TCP when\n   specifically designed for deployment in restricted\
    \ environments where\n   truncation can never occur or where truncated DNS responses\
    \ are\n   acceptable.\n   Regarding the choice of when to use UDP or TCP, Section\
    \ 6.1.3.2 of\n   RFC 1123 also says:\n      ... a DNS resolver or server that\
    \ is sending a non-zone-transfer\n      query MUST send a UDP query first.\n \
    \  That requirement is hereby relaxed.  A resolver SHOULD send a UDP\n   query\
    \ first, but MAY elect to send a TCP query instead if it has good\n   reason to\
    \ expect the response would be truncated if it were sent over\n   UDP (with or\
    \ without EDNS0) or for other operational reasons, in\n   particular, if it already\
    \ has an open TCP connection to the server.\n"
- title: 5.  Connection Handling
  contents:
  - "5.  Connection Handling\n   Section 4.2.2 of [RFC1035] says:\n      If the server\
    \ needs to close a dormant connection to reclaim\n      resources, it should wait\
    \ until the connection has been idle for a\n      period on the order of two minutes.\
    \  In particular, the server\n      should allow the SOA and AXFR request sequence\
    \ (which begins a\n      refresh operation) to be made on a single connection.\
    \  Since the\n      server would be unable to answer queries anyway, a unilateral\n\
    \      close or reset may be used instead of a graceful close.\n   Other more\
    \ modern protocols (e.g., HTTP [RFC2616]) have support for\n   persistent TCP\
    \ connections and operational experience has shown that\n   long timeouts can\
    \ easily cause resource exhaustion and poor response\n   under heavy load.  Intentionally\
    \ opening many connections and leaving\n   them dormant can trivially create a\
    \ \"denial-of-service\" attack.\n   It is therefore RECOMMENDED that the default\
    \ application-level idle\n   period should be of the order of seconds, but no\
    \ particular value is\n   specified.  In practise, the idle period may vary dynamically,\
    \ and\n   servers MAY allow dormant connections to remain open for longer\n  \
    \ periods as resources permit.\n   To mitigate the risk of unintentional server\
    \ overload, DNS clients\n   MUST take care to minimize the number of concurrent\
    \ TCP connections\n   made to any individual server.  Similarly, servers MAY impose\
    \ limits\n   on the number of concurrent TCP connections being handled for any\n\
    \   particular client.\n   Further recommendations for the tuning of TCP stacks\
    \ to allow higher\n   throughput or improved resiliency against denial-of-service\
    \ attacks\n   are outside the scope of this document.\n"
- title: 6.  Response Reordering
  contents:
  - "6.  Response Reordering\n   RFC 1035 is ambiguous on the question of whether\
    \ TCP queries may be\n   reordered -- the only relevant text is in Section 4.2.1,\
    \ which\n   relates to UDP:\n      Queries or their responses may be reordered\
    \ by the network, or by\n      processing in name servers, so resolvers should\
    \ not depend on them\n      being returned in order.\n   For the avoidance of\
    \ future doubt, this requirement is clarified.\n   Client resolvers MUST be able\
    \ to process responses that arrive in a\n   different order to that in which the\
    \ requests were sent, regardless\n   of the transport protocol in use.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Some DNS server operators have expressed concern\
    \ that wider use of\n   DNS over TCP will expose them to a higher risk of denial-of-service\n\
    \   (DoS) attacks.\n   Although there is a higher risk of such attacks against\
    \ TCP-enabled\n   servers, techniques for the mitigation of DoS attacks at the\
    \ network\n   level have improved substantially since DNS was first designed.\n\
    \   At the time of writing, the vast majority of Top Level Domain (TLD)\n   authority\
    \ servers and all of the root name servers support TCP and\n   the author knows\
    \ of no evidence to suggest that TCP-based DoS attacks\n   against existing DNS\
    \ infrastructure are commonplace.\n   That notwithstanding, readers are advised\
    \ to familiarise themselves\n   with [CPNI-TCP].\n   Operators of recursive servers\
    \ should ensure that they only accept\n   connections from expected clients, and\
    \ do not accept them from\n   unknown sources.  In the case of UDP traffic, this\
    \ will help protect\n   against reflector attacks [RFC5358] and in the case of\
    \ TCP traffic it\n   will prevent an unknown client from exhausting the server's\
    \ limits on\n   the number of concurrent connections.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The author would like to thank the document reviewers\
    \ from the DNSEXT\n   Working Group, and in particular, George Barwood, Alex Bligh,\
    \ Alfred\n   Hoenes, Fernando Gont, Olafur Gudmondsson, Jim Reid, Paul Vixie,\
    \ and\n   Nicholas Weaver.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC0768]   Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n               August 1980.\n   [RFC0793]   Postel, J., \"\
    Transmission Control Protocol\", STD 7,\n               RFC 793, September 1981.\n\
    \   [RFC1034]   Mockapetris, P., \"Domain names - concepts and\n             \
    \  facilities\", STD 13, RFC 1034, November 1987.\n   [RFC1035]   Mockapetris,\
    \ P., \"Domain names - implementation and\n               specification\", STD\
    \ 13, RFC 1035, November 1987.\n   [RFC1123]   Braden, R., \"Requirements for\
    \ Internet Hosts -\n               Application and Support\", STD 3, RFC 1123,\
    \ October 1989.\n   [RFC2119]   Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2671]\
    \   Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\",\n               RFC 2671,\
    \ August 1999.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [CPNI-TCP]  CPNI, \"Security Assessment of the\
    \ Transmission Control\n               Protocol (TCP)\", 2009, <http://www.cpni.gov.uk/Docs/\n\
    \               tn-03-09-security-assessment-TCP.pdf>.\n   [RFC2616]   Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H.,\n               Masinter, L., Leach,\
    \ P., and T. Berners-Lee, \"Hypertext\n               Transfer Protocol -- HTTP/1.1\"\
    , RFC 2616, June 1999.\n   [RFC4033]   Arends, R., Austein, R., Larson, M., Massey,\
    \ D., and S.\n               Rose, \"DNS Security Introduction and Requirements\"\
    ,\n               RFC 4033, March 2005.\n   [RFC5155]   Laurie, B., Sisson, G.,\
    \ Arends, R., and D. Blacka, \"DNS\n               Security (DNSSEC) Hashed Authenticated\
    \ Denial of\n               Existence\", RFC 5155, March 2008.\n   [RFC5358] \
    \  Damas, J. and F. Neves, \"Preventing Use of Recursive\n               Nameservers\
    \ in Reflector Attacks\", BCP 140, RFC 5358,\n               October 2008.\n \
    \  [RFC5625]   Bellis, R., \"DNS Proxy Implementation Guidelines\",\n        \
    \       BCP 152, RFC 5625, August 2009.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ray Bellis\n   Nominet UK\n   Edmund Halley Road\n   Oxford\
    \  OX4 4DQ\n   United Kingdom\n   Phone: +44 1865 332211\n   EMail: ray.bellis@nominet.org.uk\n\
    \   URI:   http://www.nominet.org.uk/\n"
