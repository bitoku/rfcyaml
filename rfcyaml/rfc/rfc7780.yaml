- contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n                Clarifications,
    Corrections, and Updates\n"
  title: __initial_text__
- contents:
  - "Abstract\n   Since the publication of the TRILL (Transparent Interconnection
    of\n   Lots of Links) base protocol in 2011, active development and\n   deployment
    of TRILL have revealed errata in RFC 6325 and areas that\n   could use clarifications
    or updates.  RFC 7177, RFC 7357, and an\n   intended replacement of RFC 6439 provide
    clarifications and updates\n   with respect to adjacency, the TRILL ESADI (End
    Station Address\n   Distribution Information) protocol, and Appointed Forwarders,\n
    \  respectively.  This document provides other known clarifications,\n   corrections,
    and updates.  It obsoletes RFC 7180 (the previous \"TRILL\n   clarifications,
    corrections, and updates\" RFC), and it updates RFCs\n   6325, 7177, and 7179.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7780.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction (Changed) ..........................................5\n
    \     1.1. Precedence (Changed) .......................................5\n      1.2.
    Changes That Are Not Backward Compatible (Unchanged) .......6\n      1.3. Terminology
    and Acronyms (Changed) .........................6\n   2. Overloaded and/or Unreachable
    RBridges (Unchanged) ..............7\n      2.1. Reachability ...............................................8\n
    \     2.2. Distribution Trees .........................................8\n      2.3.
    Overloaded Receipt of TRILL Data Packets ...................9\n           2.3.1.
    Known Unicast Receipt ...............................9\n           2.3.2. Multi-Destination
    Receipt ...........................9\n      2.4. Overloaded Origination of TRILL
    Data Packets ...............9\n           2.4.1. Known Unicast Origination ..........................10\n
    \          2.4.2. Multi-Destination Origination ......................10\n                  2.4.2.1.
    An Example Network ........................10\n                  2.4.2.2. Indicating
    OOMF Support ...................11\n                  2.4.2.3. Using OOMF Service
    ........................11\n   3. Distribution Trees and RPF Check (Changed) .....................12\n
    \     3.1. Number of Distribution Trees (Unchanged) ..................12\n      3.2.
    Distribution Tree Update Clarification (Unchanged) ........12\n      3.3. Multicast
    Pruning Based on IP Address (Unchanged) .........13\n      3.4. Numbering of Distribution
    Trees (Unchanged) ...............13\n      3.5. Link Cost Directionality (Unchanged)
    ......................13\n      3.6. Alternative RPF Check (New) ...............................14\n
    \          3.6.1. Example of the Potential Problem ...................14\n           3.6.2.
    Solution and Discussion ............................15\n   4. Nickname Selection
    (Unchanged) .................................17\n   5. MTU (Maximum Transmission
    Unit) (Unchanged) ....................18\n      5.1. MTU-Related Errata in RFC
    6325 ............................19\n           5.1.1. MTU PDU Addressing .................................19\n
    \          5.1.2. MTU PDU Processing .................................20\n           5.1.3.
    MTU Testing ........................................20\n      5.2. Ethernet MTU
    Values .......................................20\n   6. TRILL Port Modes (Unchanged)
    ...................................21\n   7. The CFI/DEI Bit (Unchanged) ....................................22\n
    \  8. Other IS-IS Considerations (Changed) ...........................23\n      8.1.
    E-L1FS Support (New) ......................................24\n           8.1.1.
    Backward Compatibility .............................24\n           8.1.2. E-L1FS
    Use for Existing (Sub-)TLVs .................25\n      8.2. Control Packet Priorities
    (New) ...........................26\n      8.3. Unknown PDUs (New) ........................................27\n
    \     8.4. Nickname Flags APPsub-TLV (New) ...........................27\n      8.5.
    Graceful Restart (Unchanged) ..............................29\n      8.6. Purge
    Originator Identification (New) .....................29\n   9. Updates to RFC
    7177 (Adjacency) (Changed) ......................30\n   10. TRILL Header Update
    (New) .....................................31\n      10.1. Color Bit ................................................32\n
    \     10.2. Flags Word Changes (Update to RFC 7179) ..................32\n           10.2.1.
    Extended Hop Count ................................32\n                  10.2.1.1.
    Advertising Support ......................33\n                  10.2.1.2. Ingress
    Behavior .........................33\n                  10.2.1.3. Transit Behavior
    .........................33\n                  10.2.1.4. Egress Behavior ..........................34\n
    \          10.2.2. Extended Color Field ..............................34\n      10.3.
    Updated Flags Word Summary ...............................35\n   11. Appointed
    Forwarder Status Lost Counter (New) .................35\n   12. IANA Considerations
    (Changed) .................................37\n      12.1. Previously Completed
    IANA Actions (Unchanged) ............37\n      12.2. New IANA Actions (New) ...................................37\n
    \          12.2.1. Reference Updated .................................37\n           12.2.2.
    The \"E\" Capability Bit ............................37\n           12.2.3. NickFlags
    APPsub-TLV Number and Registry ..........38\n           12.2.4. Updated TRILL
    Extended Header Flags ...............38\n           12.2.5. TRILL-VER Sub-TLV
    Capability Flags ................39\n           12.2.6. Example Nicknames .................................39\n
    \  13. Security Considerations (Changed) .............................39\n   14.
    References ....................................................40\n      14.1.
    Normative References .....................................40\n      14.2. Informative
    References ...................................42\n   Appendix A. Life Cycle of
    a TRILL Switch Port (New) ...............45\n   Appendix B. Example TRILL PDUs
    (New) ..............................48\n      B.1. LAN Hello over Ethernet ...................................48\n
    \     B.2. LSP over PPP ..............................................50\n      B.3.
    TRILL Data over Ethernet ..................................51\n      B.4. TRILL
    Data over PPP .......................................52\n   Appendix C. Changes
    to Previous RFCs (New) ........................53\n      C.1. Changes to Obsoleted
    RFC 7180 .............................53\n         C.1.1. Changes ..............................................53\n
    \        C.1.2. Additions ............................................53\n         C.1.3.
    Deletions ............................................54\n      C.2. Changes to
    RFC 6325 .......................................55\n      C.3. Changes to RFC
    7177 .......................................55\n      C.4. Changes to RFC 7179
    .......................................55\n   Acknowledgments ...................................................56\n
    \  Authors' Addresses ................................................56\n"
  title: Table of Contents
- contents:
  - "1.  Introduction (Changed)\n   Since the TRILL base protocol [RFC6325] was published
    in 2011, active\n   development and deployment of TRILL have revealed errors in
    the\n   specification [RFC6325] and several areas that could use\n   clarifications
    or updates.\n   [RFC7177], [RFC7357], and [RFC6439bis] provide clarifications
    and\n   updates with respect to adjacency, the TRILL ESADI (End Station\n   Address
    Distribution Information) protocol, and Appointed Forwarders,\n   respectively.
    \ This document provides other known clarifications,\n   corrections, and updates
    to [RFC6325], [RFC7177], and [RFC7179].\n   This document obsoletes [RFC7180]
    (the previous TRILL\n   \"clarifications, corrections, and updates\" document),
    updates\n   [RFC6325], updates [RFC7177] as described in Section 9, and updates\n
    \  [RFC7179] as described in Sections 10.2 and 10.3.  The changes to\n   these
    RFCs are summarized in Appendix C.\n   Sections of this document are annotated
    as to whether they are \"New\"\n   technical material, material that has been
    technically \"Changed\", or\n   material that is technically \"Unchanged\", by
    the appearance of one of\n   these three words in parentheses at the end of the
    section header.  A\n   section with only editorial changes is annotated as \"(Unchanged)\".\n
    \  If no such notation appears, then the first notation encountered on\n   going
    to successively higher-level section headers (those with\n   shorter section numbers)
    applies.  Appendix C describes changes,\n   summarizes material added, and lists
    material deleted.\n"
  - contents:
    - "1.1.  Precedence (Changed)\n   In the event of any conflicts between this document
      and [RFC6325],\n   [RFC7177], or [RFC7179], this document takes precedence.\n
      \  In addition, Section 1.2 of [RFC6325] (\"Normative Content and\n   Precedence\")
      is updated to provide a more complete precedence\n   ordering of the sections
      of [RFC6325], as shown below, where sections\n   to the left take precedence
      over sections to their right.  There are\n   no known conflicts between these
      sections; however, Sections 1 and 2\n   are less detailed and do not mention
      every corner case, while\n   subsequent sections of [RFC6325] are more detailed.
      \ This precedence\n   is specified as a fallback in case some conflict is found
      in the\n   future.\n                       4 > 3 > 7 > 5 > 2 > 6 > 1\n"
    title: 1.1.  Precedence (Changed)
  - contents:
    - "1.2.  Changes That Are Not Backward Compatible (Unchanged)\n   The change made
      by Section 3.4 below (unchanged from Section 3.4 of\n   [RFC7180]) is not backward
      compatible with [RFC6325] but has\n   nevertheless been adopted to reduce distribution
      tree changes\n   resulting from topology changes.\n   Several other changes
      herein that are fixes to errata for [RFC6325]\n   -- [Err3002], [Err3003], [Err3004],
      [Err3052], [Err3053], and\n   [Err3508] -- may not be backward compatible with
      previous\n   implementations that conformed to errors in the specification.\n"
    title: 1.2.  Changes That Are Not Backward Compatible (Unchanged)
  - contents:
    - "1.3.  Terminology and Acronyms (Changed)\n   This document uses the acronyms
      defined in [RFC6325], some of which\n   are repeated below for convenience,
      along with some additional\n   acronyms and terms, as follows:\n   BFD - Bidirectional
      Forwarding Detection.\n   Campus - A TRILL network consisting of TRILL switches,
      links, and\n      possibly bridges bounded by end stations and IP routers.  For\n
      \     TRILL, there is no \"academic\" implication in the name \"campus\".\n
      \  CFI - Canonical Format Indicator [802].\n   CSNP - Complete Sequence Number
      PDU.\n   DEI - Drop Eligibility Indicator [802.1Q-2014].\n   FGL - Fine-Grained
      Labeling [RFC7172].\n   FS-LSP - Flooding Scope LSP.\n   OOMF - Overload Originated
      Multi-destination Frame.\n   P2P - Point-to-point.\n   PDU - Protocol Data Unit.\n
      \  PSNP - Partial Sequence Number PDU.\n   RBridge - Routing Bridge, an alternative
      name for a TRILL switch.\n   RPFC - Reverse Path Forwarding Check.\n   SNPA
      - Subnetwork Point of Attachment (for example, Media Access\n      Control (MAC)
      address).\n   ToS - Type of Service.\n   TRILL - Transparent Interconnection
      of Lots of Links or Tunneled\n      Routing in the Link Layer.\n   TRILL switch
      - A device implementing the TRILL protocol.  An\n      alternative name for
      an RBridge.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in\n   [RFC2119].\n   In this document, a \"packet\" usually refers to a TRILL
      Data packet or\n   TRILL IS-IS packet received from or sent to a TRILL switch,
      while a\n   \"frame\" usually refers to a native frame being received from or
      sent\n   to an end station.  (The word \"frame\" also occurs in other contexts,\n
      \  such as the \"Frame Check Sequence\" that is at the end of Ethernet\n   transmissions.)\n"
    title: 1.3.  Terminology and Acronyms (Changed)
  title: 1.  Introduction (Changed)
- contents:
  - "2.  Overloaded and/or Unreachable RBridges (Unchanged)\n   In this section, the
    term \"neighbor\" refers only to actual RBridges\n   and ignores pseudonodes.\n
    \  RBridges may be in overload, as indicated by the [IS-IS] overload\n   flag
    in their LSPs (Link State PDUs).  This means that either (1)\n   they are incapable
    of holding the entire link-state database and thus\n   do not have a view of the
    entire topology or (2) they have been\n   configured to have the overload bit
    set.  Although networks should be\n   engineered to avoid actual link-state overload,
    it might occur under\n   various circumstances -- for example, if a very large
    campus included\n   one or more low-end TRILL switches.\n   It is a common operational
    practice to set the overload bit in an\n   [IS-IS] router (such as a TRILL switch)
    when performing maintenance\n   on that router that might affect its ability to
    correctly forward\n   packets; this will usually leave the router reachable for
    maintenance\n   traffic, but transit traffic will not be routed through it.  (Also,\n
    \  in some cases, TRILL provides for setting the overload bit in the\n   pseudonode
    of a link to stop TRILL Data traffic on an access link\n   (see Section 4.9.1
    of [RFC6325]).)\n   [IS-IS] and TRILL make a reasonable effort to do what they
    can, even\n   if some TRILL switches/routers are in overload.  They can do\n   reasonably
    well if a few scattered nodes are in overload.  However,\n   actual least-cost
    paths are no longer assured if any TRILL switches\n   are in overload.\n   For
    the effect of overload on the appointment of forwarders, see\n   [RFC6439bis].\n"
  - contents:
    - "2.1.  Reachability\n   Packets are not least-cost routed through an overloaded
      TRILL switch,\n   although they may originate or terminate at an overloaded
      TRILL\n   switch.  In addition, packets will not be least-cost routed over\n
      \  links with cost 2**24 - 1 [RFC5305]; such links are reserved for\n   traffic-engineered
      packets, the handling of which is beyond the scope\n   of this document.\n   As
      a result, a portion of the campus may be unreachable for\n   least-cost routed
      TRILL Data because all paths to it would be either\n   through a link with cost
      2**24 - 1 or through an overloaded RBridge.\n   For example, an RBridge (TRILL
      switch) RB1 is not reachable by TRILL\n   Data if all of its neighbors are connected
      to RB1 by links with cost\n   2**24 - 1.  Such RBridges are called \"data unreachable\".\n
      \  The link-state database at an RBridge -- for example, RB1 -- can also\n   contain
      information on TRILL switches that are unreachable by IS-IS\n   link-state flooding
      due to link or RBridge failures.  When such\n   failures partition the campus,
      the TRILL switches adjacent to the\n   failure and on the same side of the failure
      as RB1 will update their\n   LSPs to show the lack of connectivity, and RB1
      will receive those\n   updates.  As a result, RB1 will be aware of the partition.
      \ Nodes on\n   the far side of the partition are both IS-IS unreachable and
      data\n   unreachable from RB1.  However, LSPs held by RB1 for TRILL switches\n
      \  on the far side of the failure will not be updated and may stay\n   around
      until they time out, which could be tens of minutes or longer.\n   (The default
      in [IS-IS] is twenty minutes.)\n"
    title: 2.1.  Reachability
  - contents:
    - "2.2.  Distribution Trees\n   An RBridge in overload cannot be trusted to correctly
      calculate\n   distribution trees or correctly perform the RPFC (Reverse Path\n
      \  Forwarding Check).  Therefore, it cannot be trusted to forward\n   multi-destination
      TRILL Data packets.  It can only appear as a leaf\n   node in a TRILL multi-destination
      distribution tree.  Furthermore, if\n   all the immediate neighbors of an RBridge
      are overloaded, then it is\n   omitted from all trees in the campus and is unreachable
      by\n   multi-destination packets.\n   When an RBridge determines what nicknames
      to use as the roots of the\n   distribution trees it calculates, it MUST ignore
      all nicknames held\n   by TRILL switches that are in overload or are data unreachable.
      \ When\n   calculating RPFCs for multi-destination packets, an RBridge such
      as\n   RB1 MAY, to avoid calculating unnecessary RPFC state information,\n   ignore
      any trees that cannot reach RB1, even if other RBridges list\n   those trees
      as trees that other TRILL switches might use.  (However,\n   see Section 3.)\n"
    title: 2.2.  Distribution Trees
  - contents:
    - "2.3.  Overloaded Receipt of TRILL Data Packets\n   The receipt of TRILL Data
      packets by overloaded RBridge RB2 is\n   discussed in the subsections below.
      \ In all cases, the normal\n   Hop Count decrement is performed, and the TRILL
      Data packets are\n   discarded if the result is less than one or if the Egress
      Nickname is\n   illegal.\n"
    - contents:
      - "2.3.1.  Known Unicast Receipt\n   RB2 will not usually receive unicast TRILL
        Data packets unless it is\n   the egress, in which case it egresses and delivers
        the data normally.\n   If RB2 receives a unicast TRILL Data packet for which
        it is not the\n   egress, perhaps because a neighbor does not yet know it
        is in\n   overload, RB2 MUST NOT discard the packet because the egress is
        an\n   unknown nickname, as it might not know about all nicknames due to its\n
        \  overloaded condition.  If any neighbor other than the neighbor from\n   which
        it received the packet is not overloaded, it MUST attempt to\n   forward the
        packet to one of those neighbors selected at random\n   [RFC4086].  If there
        is no such neighbor, the packet is discarded.\n"
      title: 2.3.1.  Known Unicast Receipt
    - contents:
      - "2.3.2.  Multi-Destination Receipt\n   If RB2 in overload receives a multi-destination
        TRILL Data packet,\n   RB2 MUST NOT apply an RPFC because, due to overload,
        it might not do\n   so correctly.  RB2 egresses and delivers the frame locally
        where it\n   is Appointed Forwarder for the frame's VLAN (or, if the packet
        is\n   FGL, for the VLAN that FGL maps to at the port), subject to any\n   multicast
        pruning.  But because, as stated above, RB2 can only be the\n   leaf of a
        distribution tree, it MUST NOT forward a multi-destination\n   TRILL Data
        packet (except as an egressed native frame where RB2 is\n   Appointed Forwarder).\n"
      title: 2.3.2.  Multi-Destination Receipt
    title: 2.3.  Overloaded Receipt of TRILL Data Packets
  - contents:
    - "2.4.  Overloaded Origination of TRILL Data Packets\n   Overloaded origination
      of unicast TRILL Data packets with known\n   egress and of multi-destination
      packets is discussed in the\n   subsections below.\n"
    - contents:
      - "2.4.1.  Known Unicast Origination\n   When RB2, an overloaded RBridge, ingresses
        or creates a known\n   destination unicast data packet, it delivers it locally
        if the\n   destination is local.  Otherwise, RB2 unicasts it to any neighbor\n
        \  TRILL switch that is not overloaded.  It MAY use what routing\n   information
        it has to help select the neighbor.\n"
      title: 2.4.1.  Known Unicast Origination
    - contents:
      - "2.4.2.  Multi-Destination Origination\n   Overloaded RBridge RB2 ingressing
        or creating a multi-destination\n   data packet presents a more complex scenario
        than that of the known\n   unicast case, as discussed below.\n"
      - contents:
        - "2.4.2.1.  An Example Network\n   For example, consider the network diagram
          below in which, for\n   simplicity, end stations and any bridges are not
          shown.  There is one\n   distribution tree of which RB4 is the root, as
          represented by double\n   lines.  Only RBridge RB2 is overloaded.\n            +-----+
          \   +-----+     +-----+     +-----+\n            | RB7 +====+ RB5 +=====+
          RB3 +=====+ RB1 |\n            +-----+    +--+--+     +-++--+     +--+--+\n
          \                         |          ||           |\n                      +---+---+
          \     ||           |\n               +------+RB2(ov)|======++           |\n
          \              |      +-------+      ||           |\n               |                     ||
          \          |\n            +--+--+    +-----+   ++==++=++     +--+--+\n            |
          RB8 +====+ RB6 +===++ RB4 ++=====+ RB9 |\n            +-----+    +-----+
          \  ++=====++     +-----+\n   Since RB2 is overloaded, it does not know what
          the distribution tree\n   or trees are for the network.  Thus, there is
          no way it can provide\n   normal TRILL Data service for multi-destination
          native frames.  So,\n   RB2 tunnels the frame in a TRILL Data packet to
          a neighbor that is\n   not overloaded if it has such a neighbor that has
          signaled that it is\n   willing to offer this service.  RBridges indicate
          this in their\n   Hellos as described below.  This service is called the
          OOMF (Overload\n   Originated Multi-destination Frame) service.\n   - The
          multi-destination frame MUST NOT be locally distributed in\n     native
          form at RB2, because this would cause the frame to be\n     delivered twice.
          \ Instead, it is tunneling to a neighbor as\n     described in this section.
          \ For example, if RB2 locally distributed\n     a multicast native frame
          and then tunneled it to RB5, RB2 would get\n     a copy of the frame when
          RB3 transmitted it as a TRILL Data packet\n     on the multi-access RB2-RB3-RB4
          link.  Since RB2 would, in general,\n     not be able to tell that this
          was a frame it had tunneled for\n     distribution, RB2 would decapsulate
          it and locally distribute it a\n     second time.\n   - On the other hand,
          if there is no neighbor of RB2 offering RB2 the\n     OOMF service, RB2
          cannot tunnel the frame to a neighbor.  In this\n     case, RB2 MUST locally
          distribute the frame where it is Appointed\n     Forwarder for the frame's
          VLAN and optionally subject to multicast\n     pruning.\n"
        title: 2.4.2.1.  An Example Network
      - contents:
        - "2.4.2.2.  Indicating OOMF Support\n   An RBridge RB3 indicates its willingness
          to offer the OOMF service to\n   RB2 in the TRILL Neighbor TLV in RB3's
          TRILL Hellos by setting a bit\n   associated with the SNPA (Subnetwork Point
          of Attachment, also known\n   as MAC address) of RB2 on the link (see the
          IANA Considerations\n   section).  Overloaded RBridge RB2 can only distribute\n
          \  multi-destination TRILL Data packets to the campus if a neighbor of\n
          \  RB2 not in overload offers RB2 the OOMF service.  If RB2 does not\n   have
          OOMF service available to it, RB2 can still receive\n   multi-destination
          packets from non-overloaded neighbors, and if RB2\n   should originate or
          ingress such a frame, it distributes it locally\n   in native form.\n"
        title: 2.4.2.2.  Indicating OOMF Support
      - contents:
        - "2.4.2.3.  Using OOMF Service\n   If RB2 sees this OOMF (Overload Originated
          Multi-destination Frame)\n   service advertised for it by any of its neighbors
          on any link to\n   which RB2 connects, it selects one such neighbor by a
          means that is\n   beyond the scope of this document.  Assuming that RB2
          selects RB3 to\n   handle multi-destination packets it originates, RB2 MUST
          advertise in\n   its LSP that it might use any of the distribution trees
          that RB3\n   advertises so that the RPFC will work in the rest of the campus.\n
          \  Thus, notwithstanding its overloaded state, RB2 MUST retain this\n   information
          from RB3 LSPs, which it will receive, as it is directly\n   connected to
          RB3.\n   RB2 then encapsulates such frames as TRILL Data packets to RB3
          as\n   follows: \"M\" bit = 0; Hop Count = 2; Ingress Nickname = a nickname\n
          \  held by RB2; and, since RB2 cannot tell what distribution tree RB3\n
          \  will use, Egress Nickname = a special nickname indicating an OOMF\n   packet
          (see the IANA Considerations section).  RB2 then unicasts this\n   TRILL
          Data packet to RB3.  (Implementation of Item 4 in Section 4\n   below provides
          reasonable assurance that, notwithstanding its\n   overloaded state, the
          ingress nickname used by RB2 will be unique\n   within at least the portion
          of the campus that is IS-IS reachable\n   from RB2.)\n   On receipt of such
          a packet, RB3 does the following:\n   - changes the Egress Nickname field
          to designate a distribution tree\n     that RB3 normally uses,\n   - sets
          the \"M\" bit to one,\n   - changes the Hop Count to the value it would
          normally use if it were\n     the ingress, and\n   - forwards the TRILL
          Data packet on that tree.\n   RB3 MAY rate-limit the number of packets for
          which it is providing\n   this service by discarding some such packets from
          RB2.  The provision\n   of even limited bandwidth for OOMFs by RB3, perhaps
          via the slow\n   path, may be important to the bootstrapping of services
          at RB2 or at\n   end stations connected to RB2, such as supporting DHCP
          and ARP/ND\n   (Address Resolution Protocol / Neighbor Discovery).  (Everyone\n
          \  sometimes needs a little OOMF (pronounced \"oomph\") to get off the\n
          \  ground.)\n"
        title: 2.4.2.3.  Using OOMF Service
      title: 2.4.2.  Multi-Destination Origination
    title: 2.4.  Overloaded Origination of TRILL Data Packets
  title: 2.  Overloaded and/or Unreachable RBridges (Unchanged)
- contents:
  - "3.  Distribution Trees and RPF Check (Changed)\n   Two corrections, a clarification,
    and two updates related to\n   distribution trees appear in the subsections below,
    along with an\n   alternative, stronger RPF (Reverse Path Forwarding) check.  See
    also\n   Section 2.2.\n"
  - contents:
    - "3.1.  Number of Distribution Trees (Unchanged)\n   In [RFC6325], Section 4.5.2,
      page 56, point 2, fourth paragraph, the\n   parenthetical \"(up to the maximum
      of {j,k})\" is incorrect [Err3052].\n   It should read \"(up to k if j is zero
      or the minimum of (j, k) if j\n   is non-zero)\".\n"
    title: 3.1.  Number of Distribution Trees (Unchanged)
  - contents:
    - "3.2.  Distribution Tree Update Clarification (Unchanged)\n   When a link-state
      database change causes a change in the distribution\n   tree(s), several possible
      types of change can occur.  If a tree root\n   remains a tree root but the tree
      changes, then local forwarding and\n   RPFC entries for that tree should be
      updated as soon as practical.\n   Similarly, if a new nickname becomes a tree
      root, forwarding and RPFC\n   entries for the new tree should be installed as
      soon as practical.\n   However, if a nickname ceases to be a tree root and there
      is\n   sufficient room in local tables, the forwarding and RPFC entries for\n
      \  the former tree MAY be retained so that any multi-destination TRILL\n   Data
      packets already in flight on that tree have a higher probability\n   of being
      delivered.\n"
    title: 3.2.  Distribution Tree Update Clarification (Unchanged)
  - contents:
    - "3.3.  Multicast Pruning Based on IP Address (Unchanged)\n   The TRILL base
      protocol specification [RFC6325] provides for, and\n   recommends the pruning
      of, multi-destination packet distribution\n   trees based on the location of
      IP multicast routers and listeners;\n   however, multicast listening is identified
      by derived MAC addresses\n   as communicated in the Group MAC Address sub-TLV
      [RFC7176].\n   TRILL switches MAY communicate multicast listeners and prune\n
      \  distribution trees based on the actual IPv4 or IPv6 multicast\n   addresses
      involved.  Additional Group Address sub-TLVs are provided\n   in [RFC7176] to
      carry this information.  A TRILL switch that is only\n   capable of pruning
      based on derived MAC addresses SHOULD calculate\n   and use such derived MAC
      addresses from the multicast listener IPv4\n   or IPv6 address information it
      receives.\n"
    title: 3.3.  Multicast Pruning Based on IP Address (Unchanged)
  - contents:
    - "3.4.  Numbering of Distribution Trees (Unchanged)\n   Section 4.5.1 of [RFC6325]
      specifies that, when building distribution\n   tree number j, node (RBridge)
      N that has multiple possible parents in\n   the tree is attached to possible
      parent number j mod p.  Trees are\n   numbered starting with 1, but possible
      parents are numbered starting\n   with 0.  As a result, if there are two trees
      and two possible\n   parents, then in tree 1 parent 1 will be selected, and
      in tree 2\n   parent 0 will be selected.\n   This is changed so that the selected
      parent MUST be (j-1) mod p.  As\n   a result, in the case above, tree 1 will
      select parent 0, and tree 2\n   will select parent 1.  This change is not backward
      compatible with\n   [RFC6325].  If all RBridges in a campus do not determine
      distribution\n   trees in the same way, then for most topologies, the RPFC will
      drop\n   many multi-destination packets before they have been properly\n   delivered.\n"
    title: 3.4.  Numbering of Distribution Trees (Unchanged)
  - contents:
    - "3.5.  Link Cost Directionality (Unchanged)\n   Distribution tree construction,
      like other least-cost aspects of\n   TRILL, works even if link costs are asymmetric,
      so the cost of the\n   hop from RB1 to RB2 is different from the cost of the
      hop from RB2 to\n   RB1.  However, it is essential that all RBridges calculate
      the same\n   distribution trees, and thus all must use either the cost away
      from\n   the tree root or the cost towards the tree root.  The text in\n   Section
      4.5.1 of [RFC6325] is incorrect, as documented in [Err3508].\n   The text says:\n
      \     In other words, the set of potential parents for N, for the tree\n      rooted
      at R, consists of those that give equally minimal cost\n      paths from N to
      R and ...\n   but the text should say \"from R to N\":\n      In other words,
      the set of potential parents for N, for the tree\n      rooted at R, consists
      of those that give equally minimal cost\n      paths from R to N and ...\n"
    title: 3.5.  Link Cost Directionality (Unchanged)
  - contents:
    - "3.6.  Alternative RPF Check (New)\n   [RFC6325] mandates a Reverse Path Forwarding
      (RPF) check on\n   multi-destination TRILL Data packets to avoid possible multiplication\n
      \  and/or looping of multi-destination traffic during TRILL campus\n   topology
      transients.  This check is logically performed at each TRILL\n   switch input
      port and determines whether it is arriving on the\n   expected port based on
      where the packet started (the ingress\n   nickname) and the tree on which it
      is being distributed.  If not, the\n   packet is silently discarded.  This check
      is fine for point-to-point\n   links; however, there are rare circumstances
      involving multi-access\n   (\"broadcast\") links where a packet can be duplicated
      despite this\n   RPF check and other checks performed by TRILL.\n   Section
      3.6.1 gives an example of the potential problem, and\n   Section 3.6.2 specifies
      a solution.  This solution is an alternative,\n   stronger RPF check that TRILL
      switches can implement in place of the\n   RPF check discussed in [RFC6325].\n"
    - contents:
      - "3.6.1.  Example of the Potential Problem\n   Consider this network:\n            F--A--B--C--o--D\n
        \                       |\n                        E\n   All the links except
        the link between C, D, and E are point-to-point\n   links.  C, D, and E are
        connected over a broadcast link represented\n   by the pseudonode \"o\".  For
        example, they could be connected by a\n   bridged LAN.  (Bridged LANs are
        transparent to TRILL.)\n   Although the choice of root is unimportant here,
        assume that D or F\n   is chosen as the root of a distribution tree so that
        it is obvious\n   that the tree looks just like the diagram above.\n   Now
        assume that a link comes up from A to the same bridged LAN.  The\n   network
        then looks like this:\n               +--------+\n               |        |\n
        \           F--A--B--C--o--D\n                        |\n                        E\n
        \  Let's say the resulting tree in steady state includes all links\n   except
        the B-C link.  After the network has converged, a packet that\n   starts from
        F will go F->A.  Then A will send one copy on the A-B\n   link and another
        copy into the bridged LAN from which it will be\n   received by C and D.\n
        \  Now consider a transition stage where A and D have acted on the new\n   LSPs
        and programmed their forwarding plane, while B and C have not\n   yet done
        so.  This means that B and C both consider the link between\n   them to still
        be part of the tree.  In this case, a packet that\n   starts out from F and
        reaches A will be copied by A into the A-B link\n   and to the bridged LAN.
        \ D's RPF check says to accept packets on this\n   tree coming from F over
        its port on the bridged LAN, so it gets\n   accepted.  D is also adjacent
        to A on the tree, so the tree adjacency\n   check, a separate check mandated
        by [RFC6325], also passes.\n   However, the packet that gets to B gets sent
        out by B to C.  C's RPF\n   check still has the old state, and it thinks the
        packet is OK.  C\n   sends the packet along the old tree, which sends the
        packet into the\n   bridged LAN.  D receives one more packet, but the tree
        adjacency\n   check passes at D because C is adjacent to D in the new tree
        as well.\n   The RPF check also passes at D because D's port on the bridged
        LAN is\n   OK for receiving packets from F.\n   So, during this transient
        state, D gets duplicates of every\n   multi-destination packet ingressed at
        F (unless the packet gets\n   pruned) until B and C act on the new LSPs and
        program their\n   forwarding tables.\n"
      title: 3.6.1.  Example of the Potential Problem
    - contents:
      - "3.6.2.  Solution and Discussion\n   The problem stems from the RPF check
        described in [RFC6325] depending\n   only on the port at which a TRILL Data
        packet is received, the\n   ingress nickname, and the tree being used, that
        is, a check if\n   {ingress nickname, tree, input port} is a valid combination
        according\n   to the receiving TRILL switch's view of the campus topology.
        \ A\n   multi-access link actually has multiple adjacencies overlaid on one\n
        \  physical link, and to avoid the problem shown in Section 3.6.1, a\n   stronger
        check is needed that includes the Layer 2 source address of\n   the TRILL
        Data packet being received.  (TRILL is a Layer 3 protocol,\n   and TRILL switches
        are true routers that logically strip the Layer 2\n   header from any arriving
        TRILL Data packets and add the appropriate\n   new Layer 2 header to any outgoing
        TRILL Data packet to get it to the\n   next TRILL switch, so the Layer 2 source
        address in a TRILL Data\n   packet identifies the immediately previous TRILL
        switch that\n   forwarded the packet.)\n   What is needed, instead of checking
        the validity of the triplet\n   {ingress nickname, tree, input port}, is to
        check that the quadruplet\n   {ingress nickname, source SNPA, tree, input
        port} is valid (where\n   \"source SNPA\" (Subnetwork Point of Attachment)
        is the Outer.MacSA for\n   an Ethernet link).  Although it is true that [RFC6325]
        also requires\n   a check to ensure that a multi-destination TRILL Data packet
        is from\n   a TRILL switch that is adjacent in the distribution tree being
        used,\n   this check is separate from the RPF check, and these two independent\n
        \  checks are not as powerful as the single unified check for a valid\n   quadruplet.\n
        \                 _______\n                 /       \\\n               RB1
        ------ o ----- RB2\n                 \\_______/\n   However, this stronger
        RPF check is not without cost.  In the simple\n   case of a multi-access link
        where each TRILL switch has only one port\n   on the link, it merely increases
        the size of validity entries by\n   adding the source SNPA (Outer.MacSA).
        \ However, assume that some\n   TRILL switch RB1 has multiple ports attached
        to a multi-access link.\n   In the figure above, RB1 is shown with three ports
        on the\n   multi-access link.  RB1 is permitted to load split multi-destination\n
        \  traffic it is sending into the multi-access link across those ports\n   (Section
        4.4.4 of [RFC6325]).  Assume that RB2 is another TRILL\n   switch on the link
        and RB2 is adjacent to RB1 in the distribution\n   tree.  The number of validity
        quadruplets at RB2 for ingress\n   nicknames whose multi-destination traffic
        would arrive through RB1 is\n   multiplied by the number of ports RB1 has
        on the access link, because\n   RB2 has to accept such traffic from any such
        ports.  Although such\n   instances seem to be very rare in practice, the
        number of ports an\n   RBridge has on a link could in principle be tens or
        even a hundred or\n   more ports, vastly increasing the RPF check state at
        RB2 when this\n   stronger RPF check is used.\n   Another potential cost of
        the stronger RPF check is increased\n   transient loss of multi-destination
        TRILL Data packets during a\n   topology change.  For TRILL switch D, the
        new stronger RPF check is\n   (tree->A, Outer.MacSA=A, ingress=A, arrival
        port=if1), while the old\n   one was (tree->A, Outer.MacSA=C, ingress=A, arrival
        port=if1).\n   Suppose that both A and B have switched to the new tree for
        multicast\n   forwarding but D has not updated its RPF check yet; the multicast\n
        \  packet will then be dropped at D's input port, because D still\n   expects
        a packet from \"Outer.MacSA=C\".  But we do not have this\n   packet loss
        issue if the weaker triplet check (tree->A, ingress=A,\n   arrival port=if1)
        is used.  Thus, the stronger check can increase the\n   RPF check discard
        of multi-destination packets during topology\n   transients.\n   Because of
        these potential costs, implementation of this stronger\n   RPF check is optional.
        \ The TRILL base protocol is updated to provide\n   that TRILL switches MUST,
        for multi-destination packets, either\n   implement the RPF and other checks
        as described in [RFC6325] or\n   implement this stronger RPF check as a substitute
        for the [RFC6325]\n   RPF and tree adjacency checks.  There is no problem
        with a campus\n   having a mixture of TRILL switches, some of which implement
        one of\n   these RPF checks and some of which implement the other.\n"
      title: 3.6.2.  Solution and Discussion
    title: 3.6.  Alternative RPF Check (New)
  title: 3.  Distribution Trees and RPF Check (Changed)
- contents:
  - "4.  Nickname Selection (Unchanged)\n   Nickname selection is covered by Section
    3.7.3 of [RFC6325].\n   However, the following should be noted:\n   1. The second
    sentence in the second bullet item in Section 3.7.3 of\n      [RFC6325] on page
    25 is erroneous [Err3002] and is corrected as\n      follows:\n      o  The occurrence
    of \"IS-IS ID (LAN ID)\" is replaced with\n         \"priority\".\n      o  The
    occurrence of \"IS-IS System ID\" is replaced with \"7-byte\n         IS-IS ID
    (LAN ID)\".\n      The resulting corrected sentence in [RFC6325] reads as follows:\n
    \        If RB1 chooses nickname x, and RB1 discovers, through receipt\n         of
    an LSP for RB2 at any later time, that RB2 has also chosen\n         x, then the
    RBridge or pseudonode with the numerically higher\n         priority keeps the
    nickname, or if there is a tie in priority,\n         the RBridge with the numerically
    higher 7-byte IS-IS ID\n         (LAN ID) keeps the nickname, and the other RBridge
    MUST select\n         a new nickname.\n   2. In examining the link-state database
    for nickname conflicts,\n      nicknames held by IS-IS unreachable TRILL switches
    MUST be\n      ignored, but nicknames held by IS-IS reachable TRILL switches\n
    \     MUST NOT be ignored even if they are data unreachable.\n   3. An RBridge
    may need to select a new nickname, either initially\n      because it has none
    or because of a conflict.  When doing so, the\n      RBridge MUST consider as
    available all nicknames that do not\n      appear in its link-state database or
    that appear to be held by\n      IS-IS unreachable TRILL switches; however, it
    SHOULD give\n      preference to selecting new nicknames that do not appear to
    be\n      held by any TRILL switch in the campus, reachable or unreachable,\n
    \     so as to minimize conflicts if IS-IS unreachable TRILL switches\n      later
    become reachable.\n   4. An RBridge, even after it has acquired a nickname for
    which there\n      appears to be no conflicting claimant, MUST continue to monitor\n
    \     for conflicts with the nickname or nicknames it holds.  It does so\n      by
    monitoring any received LSPs that should update its link-state\n      database
    for any occurrence of any of its nicknames held with\n      higher priority by
    some other TRILL switch that is IS-IS reachable\n      from it.  If it finds such
    a conflict, it MUST select a new\n      nickname, even when in overloaded state.
    \ (It is possible to\n      receive an LSP that should update the link-state database
    but does\n      not do so due to overload.)\n   5. In the very unlikely case that
    an RBridge is unable to obtain a\n      nickname because all valid RBridge nicknames
    (0x0001 through\n      0xFFBF inclusive) are in use with higher priority by IS-IS\n
    \     reachable TRILL switches, it will be unable to act as an ingress,\n      egress,
    or tree root but will still be able to function as a\n      transit TRILL switch.
    \ Although it cannot be a tree root, such an\n      RBridge is included in distribution
    trees computed for the campus\n      unless all its neighbors are overloaded.
    \ It would not be possible\n      to send a unicast RBridge Channel message specifically
    to such a\n      TRILL switch [RFC7178]; however, it will receive unicast RBridge\n
    \     Channel messages sent by a neighbor to the Any-RBridge egress\n      nickname
    and will receive appropriate multi-destination RBridge\n      Channel messages.\n"
  title: 4.  Nickname Selection (Unchanged)
- contents:
  - "5.  MTU (Maximum Transmission Unit) (Unchanged)\n   MTU values in TRILL are derived
    from the originatingL1LSPBufferSize\n   value communicated in the IS-IS originatingLSPBufferSize
    TLV [IS-IS].\n   The campus-wide value Sz, as described in Section 4.3.1 of [RFC6325],\n
    \  is the minimum value of originatingL1LSPBufferSize for the RBridges\n   in
    a campus, but not less than 1470.  The MTU testing mechanism and\n   limiting
    LSPs to Sz assure that the LSPs can be flooded by IS-IS and\n   thus that IS-IS
    can operate properly.\n   If an RBridge knows nothing about the MTU of the links
    or the\n   originatingL1LSPBufferSize of other RBridges in a campus, the\n   originatingL1LSPBufferSize
    for that RBridge should default to the\n   minimum of the LSP size that its TRILL
    IS-IS software can handle and\n   the minimum MTU of the ports that it might use
    to receive or transmit\n   LSPs.  If an RBridge does have knowledge of link MTUs
    or other\n   RBridge originatingL1LSPBufferSize, then, to avoid the necessity
    of\n   regenerating the local LSPs using a different maximum size, the\n   RBridge's
    originatingL1LSPBufferSize SHOULD be configured to the\n   minimum of (1) the
    smallest value that other RBridges are, or will\n   be, announcing as their originatingL1LSPBufferSize
    and (2) a value\n   small enough that the campus will not partition due to a significant\n
    \  number of links with limited MTUs.  However, as specified in\n   [RFC6325],
    in no case can originatingL1LSPBufferSize be less than\n   1470.  In a well-configured
    campus, to minimize any LSP regeneration\n   due to resizing, all RBridges will
    be configured with the same\n   originatingL1LSPBufferSize.\n   Section 5.1 below
    corrects errata in [RFC6325], and Section 5.2\n   clarifies the meaning of various
    MTU limits for TRILL Ethernet links.\n"
  - contents:
    - "5.1.  MTU-Related Errata in RFC 6325\n   Three MTU-related errata in [RFC6325]
      are corrected in the\n   subsections below.\n"
    - contents:
      - "5.1.1.  MTU PDU Addressing\n   Section 4.3.2 of [RFC6325] incorrectly states
        that multi-destination\n   MTU-probe and MTU-ack TRILL IS-IS PDUs are sent
        on Ethernet links\n   with the All-RBridges multicast address as the Outer.MacDA
        [Err3004].\n   As TRILL IS-IS PDUs, when multicast on an Ethernet link, these\n
        \  multi-destination MTU-probe and MTU-ack PDUs MUST be sent to the\n   All-IS-IS-RBridges
        multicast address.\n"
      title: 5.1.1.  MTU PDU Addressing
    - contents:
      - "5.1.2.  MTU PDU Processing\n   As discussed in [RFC6325] and (in more detail)
        [RFC7177], MTU-probe\n   and MTU-ack PDUs MAY be unicast; however, Section
        4.6 of [RFC6325]\n   erroneously does not allow for this possibility [Err3003].
        \ It is\n   corrected by replacing Item 1 in Section 4.6.2 of [RFC6325] with
        the\n   following text, to which TRILL switches MUST conform:\n      1. If
        the Ethertype is L2-IS-IS and the Outer.MacDA is either\n         All-IS-IS-RBridges
        or the unicast MAC address of the receiving\n         RBridge port, the frame
        is handled as described in\n         Section 4.6.2.1.\n   The reference to
        \"Section 4.6.2.1\" in the above text is to that\n   section in [RFC6325].\n"
      title: 5.1.2.  MTU PDU Processing
    - contents:
      - "5.1.3.  MTU Testing\n   The last two sentences of Section 4.3.2 of [RFC6325]
        contain errors\n   [Err3053].  They currently read as follows:\n      If X
        is not greater than Sz, then RB1 sets the \"failed minimum MTU\n      test\"
        flag for RB2 in RB1's Hello.  If size X succeeds, and X >\n      Sz, then
        RB1 advertises the largest tested X for each adjacency in\n      the TRILL
        Hellos RB1 sends on that link, and RB1 MAY advertise X\n      as an attribute
        of the link to RB2 in RB1's LSP.\n   They should read as follows:\n      If
        X is not greater than or equal to Sz, then RB1 sets the \"failed\n      minimum
        MTU test\" flag for RB2 in RB1's Hello.  If size X\n      succeeds, and X
        >= Sz, then RB1 advertises the largest tested X\n      for each adjacency
        in the TRILL Hellos RB1 sends on that link,\n      and RB1 MAY advertise X
        as an attribute of the link to RB2 in\n      RB1's LSP.\n"
      title: 5.1.3.  MTU Testing
    title: 5.1.  MTU-Related Errata in RFC 6325
  - contents:
    - "5.2.  Ethernet MTU Values\n   originatingL1LSPBufferSize is the maximum permitted
      size of LSPs\n   starting with and including the IS-IS 0x83 \"Intradomain Routeing\n
      \  Protocol Discriminator\" byte.  In Layer 3 IS-IS,\n   originatingL1LSPBufferSize
      defaults to 1492 bytes.  (This is because,\n   in its previous life as DECnet
      Phase V, IS-IS was encoded using the\n   SNAP SAP (Subnetwork Access Protocol
      Service Access Point) [RFC7042]\n   format, which takes 8 bytes of overhead
      and 1492 + 8 = 1500, the\n   classic Ethernet maximum.  When standardized by
      ISO/IEC [IS-IS] to\n   use Logical Link Control (LLC) encoding, this default
      could have been\n   increased by a few bytes but was not.)\n   In TRILL, originatingL1LSPBufferSize
      defaults to 1470 bytes.  This\n   allows 27 bytes of headroom or safety margin
      to accommodate legacy\n   devices with the classic Ethernet maximum MTU, despite
      headers such\n   as an Outer.VLAN.\n   Assuming that the campus-wide minimum
      link MTU is Sz, RBridges on\n   Ethernet links MUST limit most TRILL IS-IS PDUs
      so that PDUz (the\n   length of the PDU starting just after the L2-IS-IS Ethertype
      and\n   ending just before the Ethernet Frame Check Sequence (FCS)) does not\n
      \  exceed Sz.  The PDU exceptions are TRILL Hello PDUs, which MUST NOT\n   exceed
      1470 bytes, and MTU-probe and MTU-ack PDUs that are padded by\n   an amount
      that depends on the size being tested (which may\n   exceed Sz).\n   Sz does
      not limit TRILL Data packets.  They are only limited by the\n   MTU of the devices
      and links that they actually pass through;\n   however, links that can accommodate
      IS-IS PDUs up to Sz would\n   accommodate, with a generous safety margin, TRILL
      Data packet\n   payloads of (Sz - 24) bytes, starting after the Inner.VLAN and
      ending\n   just before the FCS.\n   Most modern Ethernet equipment has ample
      headroom for frames with\n   extensive headers and is sometimes engineered to
      accommodate 9 KB\n   jumbo frames.\n"
    title: 5.2.  Ethernet MTU Values
  title: 5.  MTU (Maximum Transmission Unit) (Unchanged)
- contents:
  - "6.  TRILL Port Modes (Unchanged)\n   Section 4.9.1 of [RFC6325] specifies four
    mode bits for RBridge ports\n   but may not be completely clear on the effects
    of all combinations of\n   bits in terms of allowed frame types.\n   The table
    below explicitly indicates the effects of all possible\n   combinations of the
    TRILL port mode bits.  \"*\" in one of the first\n   four columns indicates that
    the bit can be either zero or one.  The\n   remaining columns indicate allowed
    frame types.  The \"disable bit\"\n   normally disables all frames; however, as
    an implementation choice,\n   some or all low-level Layer 2 control messages can
    still be sent or\n   received.  Examples of Layer 2 control messages are those
    control\n   frames for Ethernet identified in Section 1.4 of [RFC6325] or PPP\n
    \  link negotiation messages [RFC6361].\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |D| | | |        |       |       |       |       |\n            |i|
    |A| |        |       | TRILL |       |       |\n            |s| |c|T|        |Native
    | Data  |       |       |\n            |a| |c|r|        |Ingress|       |       |
    \      |\n            |b|P|e|u|        |       |  LSP  |       |       |\n            |l|2|s|n|Layer
    2 |Native |  SNP  | TRILL |  P2P  |\n            |e|P|s|k|Control |Egress |  MTU
    \ | Hello | Hello |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|0|0|0|  Yes   |  Yes  |  Yes  |  Yes  |  No   |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|0|0|1|  Yes   |  No   |  Yes  |  Yes  |  No   |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|0|1|0|  Yes   |  Yes  |  No   |  Yes  |  No   |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|0|1|1|  Yes   |  No   |  No   |  Yes  |  No   |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|1|0|*|  Yes   |  No   |  Yes  |  No   |  Yes  |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |0|1|1|*|  Yes   |  No   |  No   |  No   |  Yes  |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \           |1|*|*|*|Optional|  No   |  No   |  No   |  No   |\n            +-+-+-+-+--------+-------+-------+-------+-------+\n
    \  The formal name of the \"access bit\" above is the \"TRILL traffic\n   disable
    bit\".  The formal name of the \"trunk bit\" is the \"end-station\n   service
    disable bit\" [RFC6325].\n"
  title: 6.  TRILL Port Modes (Unchanged)
- contents:
  - "7.  The CFI/DEI Bit (Unchanged)\n   In May 2011, the IEEE promulgated IEEE Std
    802.1Q-2011, which changed\n   the meaning of the bit between the priority and
    VLAN ID bits in the\n   payload of C-VLAN tags.  Previously, this bit was called
    the CFI\n   (Canonical Format Indicator) bit [802] and had a special meaning in\n
    \  connection with IEEE 802.5 (Token Ring) frames.  After 802.1Q-2011\n   and
    in subsequent versions of 802.1Q -- the most current of which is\n   [802.1Q-2014]
    -- this bit is now the DEI (Drop Eligibility Indicator)\n   bit.  (The corresponding
    bit in S-VLAN/B-VLAN tags has always been a\n   DEI bit.)\n   The TRILL base protocol
    specification [RFC6325] assumed, in effect,\n   that the link by which end stations
    are connected to TRILL switches\n   and the restricted virtual link provided by
    the TRILL Data packet are\n   IEEE 802.3 Ethernet links on which the CFI bit is
    always zero.\n   Should an end station be attached by some other type of link,
    such as\n   a Token Ring link, [RFC6325] implicitly assumed that such frames\n
    \  would be canonicalized to 802.3 frames before being ingressed, and\n   similarly,
    on egress, such frames would be converted from 802.3 to\n   the appropriate frame
    type for the link.  Thus, [RFC6325] required\n   that the CFI bit in the Inner.VLAN,
    which is shown as the \"C\" bit in\n   Section 4.1.1 of [RFC6325], always be zero.\n
    \  However, for TRILL switches with ports conforming to the change\n   incorporated
    in the IEEE 802.1Q-2011 standard, the bit in the\n   Inner.VLAN, now a DEI bit,
    MUST be set to the DEI value provided by\n   the port interface on ingressing
    a native frame.  Similarly, this bit\n   MUST be provided to the port when transiting
    or egressing a TRILL\n   Data packet.  As with the 3-bit Priority field, the DEI
    bit to use in\n   forwarding a transit packet MUST be taken from the Inner.VLAN.
    \ The\n   exact effect on the Outer.VLAN DEI and priority bits, and whether or\n
    \  not an Outer.VLAN appears at all on the wire for output frames, may\n   depend
    on output port configuration.\n   TRILL campuses with a mixture of ports, some
    compliant with versions\n   of 802.1Q from IEEE Std 802.1Q-2011 onward and some
    compliant with\n   pre-802.1Q-2011 standards, especially if they have actual Token
    Ring\n   links, may operate incorrectly and may corrupt data, just as a\n   bridged
    LAN with such mixed ports and links would.\n"
  title: 7.  The CFI/DEI Bit (Unchanged)
- contents:
  - "8.  Other IS-IS Considerations (Changed)\n   This section covers Extended Level
    1 Flooding Scope (E-L1FS) support,\n   control packet priorities, unknown PDUs,
    the Nickname Flags\n   APPsub-TLV, graceful restart, and the Purge Originator\n
    \  Identification TLV.\n"
  - contents:
    - "8.1.  E-L1FS Support (New)\n   TRILL switches MUST support E-L1FS PDUs [RFC7356]
      and MUST include a\n   Scope Flooding Support TLV [RFC7356] in all TRILL Hellos
      they send\n   indicating support for this scope and any other FS-LSP scopes
      that\n   they support.  This support increases the number of fragments\n   available
      for link-state information by over two orders of magnitude.\n   (See Section
      9 for further information on support of the Scope\n   Flooding Support TLV.)\n
      \  In addition, TRILL switches MUST advertise their support of E-L1FS\n   flooding
      in a TRILL-VER sub-TLV Capability Flag (see [RFC7176] and\n   Section 12.2).
      \ This flag is used by a TRILL switch, say RB1, to\n   determine support for
      E-L1FS by some remote RBx.  The alternative of\n   simply looking for an E-L1FS
      FS-LSP originated by RBx fails because\n   (1) RBx might support E-L1FS flooding
      but is not originating any\n   E-L1FS FS-LSPs and (2) even if RBx is originating
      E-L1FS FS-LSPs\n   there might, due to legacy TRILL switches in the campus,
      be no path\n   between RBx and RB1 through TRILL switches supporting E-L1FS\n
      \  flooding.  If that were the case, no E-L1FS FS-LSP originated by RBx\n   could
      get to RB1.\n   E-L1FS will commonly be used to flood TRILL GENINFO TLVs and
      enclosed\n   TRILL APPsub-TLVs [RFC7357].  For robustness, E-L1FS fragment zero\n
      \  MUST NOT exceed 1470 bytes in length; however, if such a fragment is\n   received
      that is larger, it is processed normally.  It is anticipated\n   that in the
      future some particularly important TRILL APPsub-TLVs will\n   be specified as
      being flooded in E-L1FS fragment zero.  TRILL GENINFO\n   TLVs MUST NOT be sent
      in LSPs; however, if one is received in an LSP,\n   it is processed normally.\n"
    - contents:
      - "8.1.1.  Backward Compatibility\n   A TRILL campus might contain TRILL switches
        supporting E-L1FS\n   flooding and legacy TRILL switches that do not support
        E-L1FS or\n   perhaps do not support any [RFC7356] scopes.\n   A TRILL switch
        conformant to this document can always tell which\n   adjacent TRILL switches
        support E-L1FS flooding from the adjacency\n   table entries on its ports
        (see Section 9).  In addition, such a\n   TRILL switch can tell which remote
        TRILL switches in a campus support\n   E-L1FS by the presence of a TRILL version
        sub-TLV in that TRILL\n   switch's LSP with the E-L1FS support bit set in
        the Capabilities\n   field; this capability bit is ignored for adjacent TRILL
        switches for\n   which only the adjacency table entry is consulted to determine
        E-L1FS\n   support.\n   TRILL specifications making use of E-L1FS MUST specify
        how situations\n   involving a mixed TRILL campus of TRILL switches will be
        handled.\n"
      title: 8.1.1.  Backward Compatibility
    - contents:
      - "8.1.2.  E-L1FS Use for Existing (Sub-)TLVs\n   In a campus where all TRILL
        switches support E-L1FS, all TRILL\n   sub-TLVs listed in Section 2.3 of [RFC7176],
        except the TRILL version\n   sub-TLV, MAY be advertised by inclusion in Router
        Capability or\n   MT-Capability TLVs in E-L1FS FS-LSPs [RFC7356].  (The TRILL
        version\n   sub-TLV still MUST appear in an LSP fragment zero.)\n   In a mixed
        campus where some TRILL switches support E-L1FS and some\n   do not, then
        only the following four sub-TLVs of those listed in\n   Section 2.3 of [RFC7176]
        can appear in E-L1FS, and then only under\n   the conditions discussed below.
        \ In the following list, each sub-TLV\n   is preceded by an abbreviated acronym
        used only in this section of\n   this document:\n      IV: Interested VLANs
        and Spanning Tree Roots sub-TLV\n      VG: VLAN Group sub-TLV\n      IL: Interested
        Labels and Spanning Tree Roots sub-TLV\n      LG: Label Group sub-TLV\n   An
        IV or VG sub-TLV MUST NOT be advertised by TRILL switch RB1 in an\n   E-L1FS
        FS-LSP (and should instead be advertised in an LSP) unless the\n   following
        conditions are met:\n   - E-L1FS is supported by all of the TRILL switches
        that are data\n     reachable from RB1 and are interested in the VLANs mentioned
        in the\n     IV or VG sub-TLV, and\n   - there is E-L1FS connectivity between
        all such TRILL switches in the\n     campus interested in the VLANs mentioned
        in the IV or VG sub-TLV\n     (connectivity involving only intermediate TRILL
        switches that also\n     support E-L1FS).\n   Any IV and VG sub-TLVs MAY still
        be advertised via core TRILL IS-IS\n   LSPs by any TRILL switch that has enough
        room in its LSPs.\n   The conditions for using E-L1FS for the IL and LG sub-TLVs
        are the\n   same as for IV and VG, but with Fine-Grained Labels [RFC7172]\n
        \  substituted for VLANs.\n      Note, for example, that the above would permit
        a contiguous subset\n      of the campus that supported Fine-Grained Labels
        and E-L1FS to use\n      E-L1FS to advertise IL and LG sub-TLVs, even if the
        remainder of\n      the campus did not support Fine-Grained Labels or E-L1FS.\n"
      title: 8.1.2.  E-L1FS Use for Existing (Sub-)TLVs
    title: 8.1.  E-L1FS Support (New)
  - contents:
    - "8.2.  Control Packet Priorities (New)\n   When deciding what packet to send
      out a port, control packets used to\n   establish and maintain adjacency between
      TRILL switches SHOULD be\n   treated as being in the highest-priority category.
      \ This includes\n   TRILL IS-IS Hello and MTU PDUs, and possibly other adjacency\n
      \  [RFC7177] or link-technology-specific packets.  Other control and\n   data
      packets SHOULD be given lower priority so that a flood of such\n   other packets
      cannot lead to loss of, or inability to establish,\n   adjacency.  Loss of adjacency
      causes a topology transient that can\n   result in reduced throughput; reordering;
      increased probability of\n   loss of data; and, in the worst case, network partition
      if the\n   adjacency is a cut point.\n   Other important control packets should
      be given second-highest\n   priority.  Lower priorities should be given to data
      or less important\n   control packets.\n   Based on the above, control packets
      can be ordered into priority\n   categories as shown below, based on the relative
      criticality of these\n   types of messages, where the most critical control
      packets relate to\n   the core routing between TRILL switches and the less critical
      control\n   packets are closer to \"application\" information.  (There may be\n
      \  additional control packets, not specifically listed in any category\n   below,
      that SHOULD be handled as being in the most nearly analogous\n   category.)
      \ Although few implementations will actually treat these\n   four categories
      with different priority, an implementation MAY choose\n   to prioritize more
      critical messages over less critical.  However, an\n   implementation SHOULD
      NOT send control packets in a lower-priority\n   category with a priority above
      those in a higher-priority category\n   because, under sufficiently congested
      conditions, this could block\n   control packets in a higher-priority category,
      resulting in network\n   disruption.\n      Priority\n      Category   Description\n
      \     --------  --------------\n      4.        Hello, MTU-probe, MTU-ack, and
      other packets critical\n                to establishing and maintaining adjacency.
      \ (Normally\n                sent with highest priority, which is priority 7.)\n
      \     3.        LSPs, CSNPs/PSNPs, and other important control packets.\n      2.
      \       Circuit scoped FS-LSPs, FS-CSNPs, and FS-PSNPs.\n      1.        Non-circuit
      scoped FS-LSPs, FS-CSNPs, and FS-PSNPs.\n"
    title: 8.2.  Control Packet Priorities (New)
  - contents:
    - "8.3.  Unknown PDUs (New)\n   TRILL switches MUST silently discard [IS-IS] PDUs
      they receive with\n   PDU numbers they do not understand, just as they ignore
      TLVs and\n   sub-TLVs they receive that have unknown Types and sub-Types; however,\n
      \  they SHOULD maintain a counter of how many such PDUs have been\n   received,
      on a per-PDU-number basis.  (This is not burdensome, as the\n   PDU number is
      only a 5-bit field.)\n      Note: The set of valid [IS-IS] PDUs was stable for
      so long that\n         some IS-IS implementations may treat PDUs with unknown
      PDU\n         numbers as a serious error and, for example, an indication that\n
      \        other valid PDUs from the sender are not to be trusted or that\n         they
      should drop adjacency to the sender if it was adjacent.\n         However, the
      MTU-probe and MTU-ack PDUs were added by\n         [RFC7176], and now [RFC7356]
      has added three more new PDUs.\n         Although the authors of this document
      are not aware of any\n         Internet-Drafts calling for further PDUs, the
      eventual addition\n         of further new PDUs should not be surprising.\n"
    title: 8.3.  Unknown PDUs (New)
  - contents:
    - "8.4.  Nickname Flags APPsub-TLV (New)\n   An optional Nickname Flags APPsub-TLV
      within the TRILL GENINFO TLV\n   [RFC7357] is specified below.\n                           1
      1 1 1 1 1\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     | Type = NickFlags (6)          |   (2 bytes)\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     | Length = 4*K                  |   (2 bytes)\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |   NICKFLAG RECORD 1               (4 bytes)                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      ...\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |   NICKFLAG RECORD K               (4 bytes)                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     where each NICKFLAG RECORD has the following format:\n        0  1  2
      \ 3  4  5  6  7  8  9 10 11 12 13 14 15\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
      \     |   Nickname                                    |\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
      \     |IN|      RESV                                  |\n      +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n
      \     o  Type: NickFlags TRILL APPsub-TLV, set to 6 (NICKFLAGS).\n      o  Length:
      4 times the number of NICKFLAG RECORDS present.\n      o  Nickname: A 16-bit
      TRILL nickname held by the advertising TRILL\n         switch ([RFC6325] and
      Section 4).\n      o  IN: Ingress.  If this flag is one, it indicates that the\n
      \        advertising TRILL switch may use the nickname in the NICKFLAG\n         RECORD
      as the Ingress Nickname of TRILL Headers it creates.  If\n         the flag
      is zero, that nickname will not be used for that\n         purpose.\n      o
      \ RESV: Reserved for additional flags to be specified in the\n         future.
      \ MUST be sent as zero and ignored on receipt.\n   The entire NickFlags APPsub-TLV
      is ignored if the Length is not a\n   multiple of 4.  A NICKFLAG RECORD is ignored
      if the nickname it lists\n   is not a nickname owned by the TRILL switch advertising
      the enclosing\n   NickFlags APPsub-TLV.\n   If a TRILL switch intends to use
      a nickname in the Ingress Nickname\n   field of TRILL Headers it constructs,
      it can advertise this through\n   E-L1FS FS-LSPs (see Section 8.1) using a NickFlags
      APPsub-TLV entry\n   with the IN flag set.  If it owns only one nickname, there
      is no\n   reason to do this because, if a TRILL switch advertises no NickFlags\n
      \  APPsub-TLVs with the IN flag set for nicknames it owns, it is assumed\n   that
      the TRILL switch might use any or all nicknames it owns as the\n   Ingress Nickname
      in TRILL Headers it constructs.  If a TRILL switch\n   advertises any NickFlags
      APPsub-TLV entries with the IN flag set,\n   then it MUST NOT use any other
      nickname(s) it owns as the Ingress\n   Nickname in TRILL Headers it constructs.\n
      \  Every reasonable effort should be made to be sure that Nickname\n   sub-TLVs
      [RFC7176] and NickFlags APPsub-TLVs remain in sync.  If all\n   TRILL switches
      in a campus support E-L1FS, so that Nickname sub-TLVs\n   can be advertised
      in E-L1FS FS-LSPs, then the Nickname sub-TLV and\n   any NickFlags APPsub-TLVs
      for any particular nickname SHOULD be\n   advertised in the same fragment.  If
      they are not in the same\n   fragment, then, to the extent practical, all fragments
      involving\n   those sub-TLVs for the same nickname should be propagated as an\n
      \  atomic action.  If a TRILL switch sees multiple NickFlags APPsub-TLV\n   entries
      for the same nickname, it assumes that that nickname might be\n   used as the
      ingress in a TRILL Header if any of the NickFlags\n   APPsub-TLV entries have
      the IN bit set.\n   It is possible that a NickFlags APPsub-TLV would not be
      propagated\n   throughout the TRILL campus due to legacy TRILL switches not\n
      \  supporting E-L1FS.  In that case, Nickname sub-TLVs MUST be\n   advertised
      in LSPs, and TRILL switches not receiving NickFlags\n   APPsub-TLVs having entries
      with the IN flag set will simply assume\n   that the source TRILL switch might
      use any of its nicknames as the\n   ingress in constructing TRILL Headers.  Thus,
      the use of this\n   optional APPsub-TLV is backward compatible with legacy lack
      of E-L1FS\n   support.\n   (Additional flags are assigned from those labeled
      RESV above and\n   specified in [TRILL-L3-GW] and [Centralized-Replication].)\n"
    title: 8.4.  Nickname Flags APPsub-TLV (New)
  - contents:
    - "8.5.  Graceful Restart (Unchanged)\n   TRILL switches SHOULD support the features
      specified in [RFC5306],\n   which describes a mechanism for a restarting IS-IS
      router to signal\n   to its neighbors that it is restarting, allowing them to
      reestablish\n   their adjacencies without cycling through the down state, while
      still\n   correctly initiating link-state database synchronization.  If this\n
      \  feature is not supported, it may increase the number of topology\n   transients
      caused by a TRILL switch rebooting due to errors or\n   maintenance.\n"
    title: 8.5.  Graceful Restart (Unchanged)
  - contents:
    - "8.6.  Purge Originator Identification (New)\n   To ease debugging of any purge-related
      problems, TRILL switches\n   SHOULD include the Purge Originator Identification
      TLV [RFC6232] in\n   all purge PDUs in TRILL IS-IS.  This includes Flooding
      Scope LSPs\n   [RFC7356] and ESADI LSPs [RFC7357].\n"
    title: 8.6.  Purge Originator Identification (New)
  title: 8.  Other IS-IS Considerations (Changed)
- contents:
  - "9.  Updates to RFC 7177 (Adjacency) (Changed)\n   To support the E-L1FS flooding
    scope [RFC7356] mandated by\n   Section 8.1 and backward compatibility with legacy
    RBridges not\n   supporting E-L1FS flooding, this document updates [RFC7177] as\n
    \  follows:\n   1. The list in the second paragraph of Section 3.1 of [RFC7177]
    is\n      updated by adding the following item:\n      o  The Scope Flooding Support
    TLV.\n      In addition, the sentence immediately after that list is updated\n
    \     by this document to read as follows:\n         Of course, (a) the priority,
    (b) the Desired Designated VLAN,\n         (c) the Scope Flooding Support TLV,
    and whether or not the\n         (d) PORT-TRILL-VER sub-TLV and/or (e) BFD-Enabled
    TLV are\n         included, and their value if included, could change on\n         occasion.
    \ However, if these change, the new value(s) must\n         similarly be used
    in all TRILL Hellos on the LAN port,\n         regardless of VLAN.\n   2. This
    document adds another bullet item to the end of Section 3.2\n      of [RFC7177],
    as follows:\n      o  The value from the Scope Flooding Support TLV, or a null
    string\n         if none was included.\n   3. Near the bottom of Section 3.3 of
    [RFC7177], this document adds\n      the following bullet item:\n      o  The
    variable-length value part of the Scope Flooding Support\n         TLV in the
    Hello, or a null string if that TLV does not occur\n         in the Hello.\n   4.
    At the beginning of Section 4 of [RFC7177], this document adds a\n      bullet
    item to the list, as follows:\n      o  The variable-length value part of the
    Scope Flooding Support\n         TLV used in TRILL Hellos sent on the port.\n
    \  5. This document adds a line to Table 4 (\"TRILL Hello Contents\") in\n      Section
    8.1 of [RFC7177], as follows:\n         LAN  P2P  Number  Content Item\n         ---
    \ ---  ------  ---------------------------\n          M    M     1      Scope
    Flooding Support TLV\n"
  title: 9.  Updates to RFC 7177 (Adjacency) (Changed)
- contents:
  - "10.  TRILL Header Update (New)\n   The TRILL Header has been updated from its
    original specification in\n   [RFC6325] by [RFC7455] and [RFC7179] and is further
    updated by this\n   document.  The TRILL Header is now as shown in the figure
    below\n   (which is followed by references for all of the fields).  Those\n   fields
    for which the reference is only to [RFC6325] are unchanged\n   from that RFC.\n
    \                                  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                                   |
    V |A|C|M| RESV  |F| Hop Count |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |   Egress Nickname             |   Ingress Nickname            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  :   Optional Flags Word                                         :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  In calculating a TRILL Data packet hash as part of equal-cost\n   multipath
    selection, a TRILL switch MUST ignore the value of the\n   \"A\" and \"C\" bits.\n
    \  In [RFC6325] and [RFC7179], there is a TRILL Header Extension Length\n   field
    called \"Op-Length\", which is hereby changed to consist of the\n   RESV field
    and \"F\" bit shown above.\n   o  V (Version): 2-bit unsigned integer.  See Section
    3.2\n      of [RFC6325].\n   o  A (Alert): 1 bit.  See [RFC7455].\n   o  C (Color):
    1 bit.  See Section 10.1.\n   o  M (Multi-destination): 1 bit.  See Section 3.4
    of [RFC6325].\n   o  RESV: 4 bits.  These bits are reserved and MUST be sent as
    zero.\n      Due to the previous use of these bits as specified in [RFC6325],\n
    \     most TRILL \"fast path\" hardware implementations trap and do not\n      forward
    TRILL Data packets with these bits non-zero.  A TRILL\n      switch receiving
    a TRILL Data packet with any of these bits\n      non-zero MUST discard the packet
    unless the non-zero bit or bits\n      have some future use specified that the
    TRILL switch understands.\n   o  F: 1 bit.  If this field is non-zero, then the
    optional flags word\n      described in Section 10.2 is present.  If it is zero,
    the\n      flags word is not present.\n   o  Hop Count: 6 bits.  See Section 3.6
    of [RFC6325] and\n      Section 10.2.1 below.\n   o  Egress Nickname: See Section
    3.7.1 of [RFC6325].\n   o  Ingress Nickname: See Section 3.7.2 of [RFC6325].\n
    \  o  Optional Flags Word: See [RFC7179] and Section 10.2.\n"
  - contents:
    - "10.1.  Color Bit\n   The Color bit provides an optional way by which ingress
      TRILL\n   switches MAY mark TRILL Data packets for implementation-specific\n
      \  purposes.  Transit TRILL switches MUST NOT change this bit.  Transit\n   and
      egress TRILL switches MAY use the Color bit for implementation-\n   dependent
      traffic labeling, or for statistical analysis or other\n   types of traffic
      study or analysis.\n"
    title: 10.1.  Color Bit
  - contents:
    - "10.2.  Flags Word Changes (Update to RFC 7179)\n   When the \"F\" bit in the
      TRILL Header is non-zero, the first 32 bits\n   after the Ingress Nickname field
      provide additional flags.  These\n   bits are as specified in [RFC7179], except
      as changed by the\n   subsections below, in which the Extended Hop Count and
      Extended Color\n   fields are described.  See Section 10.3 for a diagram and
      summary of\n   these fields.\n"
    - contents:
      - "10.2.1.  Extended Hop Count\n   The TRILL base protocol [RFC6325] specifies
        the Hop Count field in\n   the header, to avoid packets persisting in the
        network due to looping\n   or the like.  However, the Hop Count field size
        (6 bits) limits the\n   maximum hops a TRILL Data packet can traverse to 64.
        \ Optionally,\n   TRILL switches can use a field composed of bits 14 through
        16 in the\n   flags word, as specified below, to extend this field to 9 bits.
        \ This\n   increases the maximum Hop Count to 512.  Except in rare\n   circumstances,
        reliable use of Hop Counts in excess of 64 requires\n   support of this optional
        capability at all TRILL switches along the\n   path of a TRILL Data packet.\n"
      - contents:
        - "10.2.1.1.  Advertising Support\n   It may be that not all the TRILL switches
          support the Extended Hop\n   Count mechanism in a TRILL campus and in that
          campus more than\n   64 hops are required either for the distribution tree
          calculated path\n   or for the unicast calculated path plus a reasonable
          allowance for\n   alternate pathing.  As such, it is required that TRILL
          switches\n   advertise their support by setting bit 14 in the TRILL Version\n
          \  Sub-TLV Capabilities and Header Flags Supported field [RFC7176];\n   bits
          15 and 16 of that field are now specified as Unassigned (see\n   Section
          12.2.5).\n"
        title: 10.2.1.1.  Advertising Support
      - contents:
        - "10.2.1.2.  Ingress Behavior\n   If an ingress TRILL switch determines that
          it should set the\n   Hop Count for a TRILL Data packet to 63 or less, then
          behavior is as\n   specified in the TRILL base protocol [RFC6325].  If the
          optional\n   TRILL Header flags word is present, bits 14, 15, and 16 and
          the\n   critical reserved bit of the critical summary bits are zero.\n   If
          the Hop Count for a TRILL Data packet should be set to some value\n   greater
          than 63 but less than 512 and all TRILL switches that the\n   packet is
          reasonably likely to encounter support Extended Hop Count,\n   then the
          resulting TRILL Header has the flags word extension present,\n   the high-order
          3 bits of the desired Hop Count are stored in the\n   Extended Hop Count
          field in the flags word, the low-order 5 bits are\n   stored in the Hop
          Count field in the first word of the TRILL Header,\n   and bit two (the
          critical reserved bit of the critical summary bits)\n   in the flags word
          is set to one.\n   For known unicast traffic (TRILL Header \"M\" bit zero),
          an ingress\n   TRILL switch discards the frame if it determines that the
          least-cost\n   path to the egress is (1) more than 64 hops and not all TRILL\n
          \  switches on that path support the Extended Hop Count feature or\n   (2)
          more than 512 hops.\n   For multi-destination traffic, when a TRILL switch
          determines that\n   one or more tree paths from the ingress are more than
          64 hops and not\n   all TRILL switches in the campus support the Extended
          Hop Count\n   feature, the encapsulation uses a total Hop Count of 63 to
          obtain at\n   least partial distribution of the traffic.\n"
        title: 10.2.1.2.  Ingress Behavior
      - contents:
        - "10.2.1.3.  Transit Behavior\n   A transit TRILL switch supporting Extended
          Hop Count behaves like a\n   base protocol [RFC6325] TRILL switch in decrementing
          the Hop Count,\n   except that it considers the Hop Count to be a 9-bit
          field where the\n   Extended Hop Count field constitutes the high-order
          3 bits.\n   To be more precise: a TRILL switch supporting Extended Hop Count\n
          \  takes the first of the following actions that is applicable:\n   1. If
          both the Hop Count and Extended Hop Count fields are zero, the\n      packet
          is discarded.\n   2. If the Hop Count is non-zero, it is decremented.  As
          long as the\n      Extended Hop Count is non-zero, no special action is
          taken.  If\n      the result of this decrement is zero, the packet is processed\n
          \     normally.\n   3. If the Hop Count is zero, it is set to the maximum
          value of 63,\n      and the Extended Hop Count is decremented.  If this
          results in the\n      Extended Hop Count being zero, the critical reserved
          bit in the\n      critical summary bits is set to zero.\n"
        title: 10.2.1.3.  Transit Behavior
      - contents:
        - "10.2.1.4.  Egress Behavior\n   No special behavior is required when egressing
          a TRILL Data packet\n   that uses the Extended Hop Count.  The flags word,
          if present, is\n   removed along with the rest of the TRILL Header during
          decapsulation.\n"
        title: 10.2.1.4.  Egress Behavior
      title: 10.2.1.  Extended Hop Count
    - contents:
      - "10.2.2.  Extended Color Field\n   Flags word bits 27 and 28 are specified
        to be a 2-bit Extended Color\n   field (see Section 10.3).  These bits are
        in the non-critical\n   ingress-to-egress region of the flags word.\n   The
        Extended Color field provides an optional way by which ingress\n   TRILL switches
        MAY mark TRILL Data packets for implementation-\n   specific purposes.  Transit
        TRILL switches MUST NOT change these\n   bits.  Transit and egress TRILL switches
        MAY use the Extended Color\n   bits for implementation-dependent traffic labeling,
        or for\n   statistical analysis or other types of traffic study or analysis.\n
        \  Per Section 2.3.1 of [RFC7176], support for these bits is indicated\n   by
        the same bits (27 and 28) in the Capabilities and Header Flags\n   Supported
        field of the TRILL version sub-TLV.  If these bits are zero\n   in those capabilities,
        Extended Color is not supported.  A TRILL\n   switch that does not support
        Extended Color will ignore the\n   corresponding bits in any TRILL Header
        flags word it receives as part\n   of a TRILL Data packet and will set those
        bits to zero in any TRILL\n   Header flags word it creates.  A TRILL switch
        that sets or senses the\n   Extended Color field on transmitting or receiving
        TRILL Data packets\n   MUST set the corresponding 2-bit field in the TRILL
        version sub-TLV\n   to a non-zero value.  Any difference in the meaning of
        the three\n   possible non-zero values of this 2-bit capability field (0b01,
        0b10,\n   or 0b11) is implementation dependent.\n"
      title: 10.2.2.  Extended Color Field
    title: 10.2.  Flags Word Changes (Update to RFC 7179)
  - contents:
    - "10.3.  Updated Flags Word Summary\n   With the changes above, the 32-bit flags
      word extension to the TRILL\n   Header [RFC7179], which is detailed in the \"TRILL
      Extended Header\n   Flags\" registry on the \"Transparent Interconnection of
      Lots of Links\n   (TRILL) Parameters\" IANA web page, is now as follows:\n    0
      \                  1                   2                   3\n    0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |Crit.|  CHbH   |   NCHbH   |CRSV | NCRSV |   CItE    |  NCItE  |\n   |.....|.........|...........|.....|.......|...........|.........|\n
      \  |C|C|C|       |C|N|         | Ext |       |           |Ext|     |\n   |R|R|R|
      \      |R|C|         | Hop |       |           |Clr|     |\n   |H|I|R|       |C|C|
      \        | Cnt |       |           |   |     |\n   |b|t|s|       |A|A|         |
      \    |       |           |   |     |\n   |H|E|v|       |F|F|         |     |
      \      |           |   |     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  Bits 0, 1, and 2 are the critical summary bits, as specified in\n   [RFC7179],
      consisting of the critical hop-by-hop, critical\n   ingress-to-egress, and critical
      reserved bits, respectively.  The\n   next two fields are specific critical
      and non-critical hop-by-hop\n   bits -- CHbH and NCHbH, respectively -- containing
      the Critical and\n   Non-critical Channel Alert flags as specified in [RFC7179].
      \ The next\n   field is the critical reserved bits (CRSV), which are specified\n
      \  herein to be the Extended Hop Count.  The non-critical reserved bits\n   (NCRSV)
      and the critical ingress-to-egress bits (CItE) as specified\n   in [RFC7179]
      follow.  Finally, there is the non-critical\n   ingress-to-egress field, including
      bits 27 and 28, which are\n   specified herein as the Extended Color field.\n"
    title: 10.3.  Updated Flags Word Summary
  title: 10.  TRILL Header Update (New)
- contents:
  - "11.  Appointed Forwarder Status Lost Counter (New)\n   Strict conformance to
    the provisions of Section 4.8.3 of [RFC6325] on\n   the value of the Appointed
    Forwarder Status Lost Counter can result\n   in the splitting of Interested VLANs
    and Spanning Tree Roots sub-TLVs\n   [RFC7176] (or the corresponding Interested
    Labels and Spanning Tree\n   Roots sub-TLVs where a VLAN is mapped to an FGL)
    due to differences\n   in this counter value for adjacent VLAN IDs (or 24-bit
    FGLs).  This\n   counter is a mechanism to optimize data-plane learning by trimming\n
    \  the expiration timer for learned addresses on a per-VLAN/FGL basis\n   under
    some circumstances.\n   The requirement to increment this counter by one whenever
    a TRILL\n   switch loses Appointed Forwarder status on a port is hereby changed\n
    \  from the mandatory provisions of [RFC6325] to the enumerated\n   provisions
    below.  To the extent that this might cause the Appointed\n   Forwarder Status
    Lost Counter to be increased when [RFC6325]\n   indicates that it should not,
    this will cause data-plane address\n   learning timeouts at remote TRILL switches
    to be reduced.  To the\n   extent that this might cause the Appointed Forwarder
    Status Lost\n   Counter to remain unchanged when [RFC6325] indicates that it should\n
    \  be increased, this will defeat a reduction in such timeouts that\n   would
    otherwise occur.\n   (1) If any of the following apply, either data-plane address
    learning\n       is not in use or Appointed Forwarder status is irrelevant.  In\n
    \      these cases, the Appointed Forwarder Status Lost Counter MAY be\n       left
    at zero or set to any convenient value such as the value of\n       the Appointed
    Forwarder Status Lost Counter for an adjacent\n       VLAN ID or FGL.\n       (1a)
    The TRILL switch port has been configured with the\n            \"end-station
    service disable\" bit (also known as the\n            trunk bit) on.\n       (1b)
    The TRILL switch port has been configured in IS-IS as an\n            IS-IS point-to-point
    link.\n       (1c) The TRILL switch is relying on ESADI [RFC7357] or Directory\n
    \           Assist [RFC7067] and not using data-plane learning.\n   (2) In cases
    other than those enumerated in point 1 above, the\n       Appointed Forwarder
    Status Lost Counter SHOULD be incremented as\n       described in [RFC6325].  Such
    incrementing has the advantage of\n       optimizing data-plane learning.  Alternatively,
    the value of the\n       Appointed Forwarder Status Lost Counter can deviate from
    that\n       value -- for example, to make it match the value for an adjacent\n
    \      VLAN ID (or FGL), so as to permit greater aggregation of\n       Interested
    VLANs and Spanning Tree Roots sub-TLVs.\n"
  title: 11.  Appointed Forwarder Status Lost Counter (New)
- contents:
  - "12.  IANA Considerations (Changed)\n   This section lists IANA actions previously
    completed and new IANA\n   actions.\n"
  - contents:
    - "12.1.  Previously Completed IANA Actions (Unchanged)\n   The following IANA
      actions were completed as part of [RFC7180] and\n   are included here for completeness,
      since this document obsoletes\n   [RFC7180].\n   1. The nickname 0xFFC1, which
      was reserved by [RFC6325], is allocated\n      for use in the TRILL Header Egress
      Nickname field to indicate an\n      OOMF (Overload Originated Multi-destination
      Frame).\n   2. Bit 1 from the seven previously reserved (RESV) bits in the\n
      \     per-neighbor \"Neighbor RECORD\" in the TRILL Neighbor TLV [RFC7176]\n
      \     is allocated to indicate that the RBridge sending the TRILL Hello\n      volunteers
      to provide the OOMF forwarding service described in\n      Section 2.4.2 to
      such frames originated by the TRILL switch whose\n      SNPA (MAC address) appears
      in that Neighbor RECORD.  The\n      description of this bit is \"Offering OOMF
      service\".\n   3. Bit 0 is allocated from the capability bits in the PORT-TRILL-VER\n
      \     sub-TLV [RFC7176] to indicate support of the VLANs Appointed\n      sub-TLV
      [RFC7176] and the VLAN inhibition setting mechanisms\n      specified in [RFC6439bis].
      \ The description of this bit is \"Hello\n      reduction support\".\n"
    title: 12.1.  Previously Completed IANA Actions (Unchanged)
  - contents:
    - "12.2.  New IANA Actions (New)\n   The following are new IANA actions for this
      document.\n"
    - contents:
      - "12.2.1.  Reference Updated\n   All references to [RFC7180] in the \"Transparent
        Interconnection of\n   Lots of Links (TRILL) Parameters\" registry have been
        replaced with\n   references to this document, except that the Reference for
        bit 0 in\n   the PORT-TRILL-VER Sub-TLV Capability Flags has been changed
        to\n   [RFC6439bis].\n"
      title: 12.2.1.  Reference Updated
    - contents:
      - "12.2.2.  The \"E\" Capability Bit\n   There is an existing TRILL version
        sub-TLV, sub-TLV #13, under both\n   TLV #242 and TLV #144 [RFC7176].  This
        TRILL version sub-TLV contains\n   a capability bits field for which assignments
        are documented in the\n   \"TRILL-VER Sub-TLV Capability Flags\" registry
        on the TRILL Parameters\n   IANA web page.  IANA has allocated 4 from the
        previously reserved\n   bits in this \"TRILL-VER Sub-TLV Capability Flags\"
        registry to\n   indicate support of the E-L1FS flooding scope as specified
        in\n   Section 8.1.  This capability bit is referred to as the \"E\" bit.
        \ The\n   following is the addition to the \"TRILL-VER Sub-TLV Capability
        Flags\"\n   registry:\n       Bit     Description             References\n
        \      ----   ---------------------   ---------------\n       4      E-L1FS
        FS-LSP support   [RFC7356], RFC 7780\n"
      title: 12.2.2.  The "E" Capability Bit
    - contents:
      - "12.2.3.  NickFlags APPsub-TLV Number and Registry\n   IANA has assigned an
        APPsub-TLV number, as follows, under the TRILL\n   GENINFO TLV from the range
        less than 255.\n        Type      Name           References\n        ----
        \   ---------       -----------\n        6       NICKFLAGS       RFC 7780\n
        \  In addition, IANA has created a registry on its TRILL Parameters web\n
        \  page for NickFlags bit assignments, as follows:\n        Name: NickFlags
        Bits\n        Registration Procedure: IETF Review [RFC5226]\n        Reference:
        RFC 7780\n         Bit   Mnemonic  Description      Reference\n        -----
        \ --------  -----------      ---------\n         0       IN      Used as ingress
        \ RFC 7780\n        1-15      -      Unassigned       RFC 7780\n"
      title: 12.2.3.  NickFlags APPsub-TLV Number and Registry
    - contents:
      - "12.2.4.  Updated TRILL Extended Header Flags\n   The \"TRILL Extended Header
        Flags\" registry has been updated as\n   follows:\n   Bits     Purpose                                  Reference\n
        \  -----   ----------------------------------------  ------------\n   14-16
        \  Extended Hop Count                        RFC 7780\n   27-28   Extended
        Color                            RFC 7780\n   29-31   Available non-critical
        ingress-to-egress  [RFC7179], RFC 7780\n           flags\n"
      title: 12.2.4.  Updated TRILL Extended Header Flags
    - contents:
      - "12.2.5.  TRILL-VER Sub-TLV Capability Flags\n   The \"TRILL-VER Sub-TLV Capability
        Flags\" registry has been updated as\n   follows:\n   Bit     Description
        \                  Reference\n   -----  --------------------------     ----------------\n
        \     14  Extended Hop Count support     RFC 7780\n   15-16  Unassigned                     RFC
        7780\n   27-28  Extended Color support         RFC 7780\n   29-31  Extended
        header flag support   [RFC7179], RFC 7780\n"
      title: 12.2.5.  TRILL-VER Sub-TLV Capability Flags
    - contents:
      - "12.2.6.  Example Nicknames\n   As shown in the table below, IANA has assigned
        a block of eight\n   nicknames for use as examples in documentation.  Appendix
        B shows a\n   use of some of these nicknames.  The \"TRILL Nicknames\" registry
        has\n   been updated by changing the previous \"0xFFC2-0xFFFE Unassigned\"
        line\n   to the following:\n       Name        Description                        Reference\n
        \  -------------  --------------                     -----------\n   0xFFC2-0xFFD7
        \ Unassigned\n   0xFFD8-0xFFDF  For use in documentation examples  RFC 7780\n
        \  0xFFE0-0xFFFE  Unassigned\n"
      title: 12.2.6.  Example Nicknames
    title: 12.2.  New IANA Actions (New)
  title: 12.  IANA Considerations (Changed)
- contents:
  - "13.  Security Considerations (Changed)\n   See [RFC6325] for general TRILL security
    considerations.\n   This memo improves the documentation of the TRILL protocol;
    corrects\n   six errata in [RFC6325]; updates [RFC6325], [RFC7177], and [RFC7179];\n
    \  and obsoletes [RFC7180].  It does not change the security\n   considerations
    of those RFCs, except as follows:\n   o  E-L1FS FS-LSPs can be authenticated with
    IS-IS security [RFC5310],\n      that is, through the inclusion of an IS-IS Authentication
    TLV in\n      E-L1FS PDUs.\n   o  As discussed in Section 3.6, when using an allowed
    weaker RPF\n      check under very rare topologies and transient conditions,\n
    \     multi-destination TRILL Data packets can be duplicated; this could\n      have
    security consequences for some protocols.\n"
  title: 13.  Security Considerations (Changed)
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [802.1Q-2014]\n              IEEE, \"IEEE Standard
      for Local and metropolitan area\n              networks -- Bridges and Bridged
      Networks\",\n              DOI 10.1109/IEEESTD.2014.6991462, IEEE Std 802.1Q-2014.\n
      \  [IS-IS]    International Organization for Standardization,\n              \"Information
      technology -- Telecommunications and\n              information exchange between
      systems -- Intermediate\n              System to Intermediate System intra-domain
      routeing\n              information exchange protocol for use in conjunction
      with\n              the protocol for providing the connectionless-mode network\n
      \             service (ISO 8473)\", ISO/IEC 10589:2002, Second Edition,\n              November
      2002.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n
      \             Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,
      March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC5305]
      \ Li, T. and H. Smit, \"IS-IS Extensions for Traffic\n              Engineering\",
      RFC 5305, DOI 10.17487/RFC5305,\n              October 2008, <http://www.rfc-editor.org/info/rfc5305>.\n
      \  [RFC5306]  Shand, M. and L. Ginsberg, \"Restart Signaling for IS-IS\",\n
      \             RFC 5306, DOI 10.17487/RFC5306, October 2008,\n              <http://www.rfc-editor.org/info/rfc5306>.\n
      \  [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n              and
      M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\", RFC
      5310, DOI 10.17487/RFC5310,\n              February 2009, <http://www.rfc-editor.org/info/rfc5310>.\n
      \  [RFC6232]  Wei, F., Qin, Y., Li, Z., Li, T., and J. Dong, \"Purge\n              Originator
      Identification TLV for IS-IS\", RFC 6232,\n              DOI 10.17487/RFC6232,
      May 2011,\n              <http://www.rfc-editor.org/info/rfc6232>.\n   [RFC6325]
      \ Perlman, R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n              Ghanwani,
      \"Routing Bridges (RBridges): Base Protocol\n              Specification\",
      RFC 6325, DOI 10.17487/RFC6325, July 2011,\n              <http://www.rfc-editor.org/info/rfc6325>.\n
      \  [RFC6361]  Carlson, J. and D. Eastlake 3rd, \"PPP Transparent\n              Interconnection
      of Lots of Links (TRILL) Protocol Control\n              Protocol\", RFC 6361,
      DOI 10.17487/RFC6361, August 2011,\n              <http://www.rfc-editor.org/info/rfc6361>.\n
      \  [RFC7172]  Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n              D.
      Dutt, \"Transparent Interconnection of Lots of Links\n              (TRILL):
      Fine-Grained Labeling\", RFC 7172,\n              DOI 10.17487/RFC7172, May
      2014,\n              <http://www.rfc-editor.org/info/rfc7172>.\n   [RFC7176]
      \ Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt,\n              D.,
      and A. Banerjee, \"Transparent Interconnection of Lots\n              of Links
      (TRILL) Use of IS-IS\", RFC 7176,\n              DOI 10.17487/RFC7176, May 2014,\n
      \             <http://www.rfc-editor.org/info/rfc7176>.\n   [RFC7177]  Eastlake
      3rd, D., Perlman, R., Ghanwani, A., Yang, H., and\n              V. Manral,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): Adjacency\",
      RFC 7177, DOI 10.17487/RFC7177,\n              May 2014, <http://www.rfc-editor.org/info/rfc7177>.\n
      \  [RFC7179]  Eastlake 3rd, D., Ghanwani, A., Manral, V., Li, Y., and C.\n              Bestler,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): Header
      Extension\", RFC 7179,\n              DOI 10.17487/RFC7179, May 2014,\n              <http://www.rfc-editor.org/info/rfc7179>.\n
      \  [RFC7356]  Ginsberg, L., Previdi, S., and Y. Yang, \"IS-IS Flooding\n              Scope
      Link State PDUs (LSPs)\", RFC 7356,\n              DOI 10.17487/RFC7356, September
      2014,\n              <http://www.rfc-editor.org/info/rfc7356>.\n   [RFC7455]
      \ Senevirathne, T., Finn, N., Salam, S., Kumar, D., Eastlake\n              3rd,
      D., Aldrin, S., and Y. Li, \"Transparent\n              Interconnection of Lots
      of Links (TRILL): Fault\n              Management\", RFC 7455, DOI 10.17487/RFC7455,
      March 2015,\n              <http://www.rfc-editor.org/info/rfc7455>.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [802]      IEEE 802, \"IEEE Standard for
      Local and Metropolitan Area\n              Networks: Overview and Architecture\",\n
      \             DOI 10.1109/IEEESTD.2014.6847097, IEEE Std 802-2014.\n   [Centralized-Replication]\n
      \             Hao, W., Li, Y., Durrani, M., Gupta, S., Qu, A., and T.\n              Han,
      \"Centralized Replication for BUM traffic in\n              active-active edge
      connection\", Work in Progress,\n              draft-ietf-trill-centralized-replication-03,\n
      \             November 2015.\n   [Err3002]  RFC Errata, Erratum ID 3002, RFC
      6325.\n   [Err3003]  RFC Errata, Erratum ID 3003, RFC 6325.\n   [Err3004]  RFC
      Errata, Erratum ID 3004, RFC 6325.\n   [Err3052]  RFC Errata, Erratum ID 3052,
      RFC 6325.\n   [Err3053]  RFC Errata, Erratum ID 3053, RFC 6325.\n   [Err3508]
      \ RFC Errata, Erratum ID 3508, RFC 6325.\n   [RFC792]   Postel, J., \"Internet
      Control Message Protocol\", STD 5,\n              RFC 792, DOI 10.17487/RFC0792,
      September 1981,\n              <http://www.rfc-editor.org/info/rfc792>.\n   [RFC826]
      \  Plummer, D., \"Ethernet Address Resolution Protocol: Or\n              Converting
      Network Protocol Addresses to 48.bit Ethernet\n              Address for Transmission
      on Ethernet Hardware\", STD 37,\n              RFC 826, DOI 10.17487/RFC0826,
      November 1982,\n              <http://www.rfc-editor.org/info/rfc826>.\n   [RFC4086]
      \ Eastlake 3rd, D., Schiller, J., and S. Crocker,\n              \"Randomness
      Requirements for Security\", BCP 106, RFC 4086,\n              DOI 10.17487/RFC4086,
      June 2005,\n              <http://www.rfc-editor.org/info/rfc4086>.\n   [RFC5226]
      \ Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC6327]
      \ Eastlake 3rd, D., Perlman, R., Ghanwani, A., Dutt, D., and\n              V.
      Manral, \"Routing Bridges (RBridges): Adjacency\",\n              RFC 6327,
      DOI 10.17487/RFC6327, July 2011,\n              <http://www.rfc-editor.org/info/rfc6327>.\n
      \  [RFC6439]  Perlman, R., Eastlake, D., Li, Y., Banerjee, A., and F.\n              Hu,
      \"Routing Bridges (RBridges): Appointed Forwarders\",\n              RFC 6439,
      DOI 10.17487/RFC6439, November 2011,\n              <http://www.rfc-editor.org/info/rfc6439>.\n
      \  [RFC6439bis]\n              Eastlake 3rd, D., Li, Y., Umair, M., Banerjee,
      A., and H.\n              Fangwei, \"TRILL: Appointed Forwarders\", Work in
      Progress,\n              draft-ietf-trill-rfc6439bis-01, January 2016.\n   [RFC7042]
      \ Eastlake 3rd, D. and J. Abley, \"IANA Considerations and\n              IETF
      Protocol and Documentation Usage for IEEE 802\n              Parameters\", BCP
      141, RFC 7042, DOI 10.17487/RFC7042,\n              October 2013, <http://www.rfc-editor.org/info/rfc7042>.\n
      \  [RFC7067]  Dunbar, L., Eastlake 3rd, D., Perlman, R., and I.\n              Gashinsky,
      \"Directory Assistance Problem and High-Level\n              Design Proposal\",
      RFC 7067, DOI 10.17487/RFC7067,\n              November 2013, <http://www.rfc-editor.org/info/rfc7067>.\n
      \  [RFC7175]  Manral, V., Eastlake 3rd, D., Ward, D., and A. Banerjee,\n              \"Transparent
      Interconnection of Lots of Links (TRILL):\n              Bidirectional Forwarding
      Detection (BFD) Support\",\n              RFC 7175, DOI 10.17487/RFC7175, May
      2014,\n              <http://www.rfc-editor.org/info/rfc7175>.\n   [RFC7178]
      \ Eastlake 3rd, D., Manral, V., Li, Y., Aldrin, S., and D.\n              Ward,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): RBridge
      Channel Support\", RFC 7178,\n              DOI 10.17487/RFC7178, May 2014,\n
      \             <http://www.rfc-editor.org/info/rfc7178>.\n   [RFC7180]  Eastlake
      3rd, D., Zhang, M., Ghanwani, A., Manral, V., and\n              A. Banerjee,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): Clarifications,
      Corrections, and Updates\",\n              RFC 7180, DOI 10.17487/RFC7180, May
      2014,\n              <http://www.rfc-editor.org/info/rfc7180>.\n   [RFC7357]
      \ Zhai, H., Hu, F., Perlman, R., Eastlake 3rd, D., and O.\n              Stokes,
      \"Transparent Interconnection of Lots of Links\n              (TRILL): End Station
      Address Distribution Information\n              (ESADI) Protocol\", RFC 7357,
      DOI 10.17487/RFC7357,\n              September 2014, <http://www.rfc-editor.org/info/rfc7357>.\n
      \  [TRILL-L3-GW]\n              Hao, W., Li, Y., Qu, A., Durrani, M., Sivamurugan,
      P., and\n              L. Xia, \"TRILL Distributed Layer 3 Gateway\", Work in\n
      \             Progress, draft-ietf-trill-irb-10, January 2016.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Appendix A.  Life Cycle of a TRILL Switch Port (New)\n   Text from <http://www.ietf.org/mail-archive/web/trill/\n
    \  current/msg06355.html> is paraphrased in this informational appendix.\n   Question:\n
    \     Suppose we are developing a TRILL implementation to run on\n      different
    machines.  Then what happens first?  Is LSP flooding or\n      ESADI started first?
    \ -> Link-state database creation ->\n      Designated RBridge election (How to
    set priority?  Any fixed\n      process that depends on user settings?) -> etc.\n
    \  Answer:\n      The first thing that happens on a port/link is any link setup
    that\n      is needed.  For example, on a PPP link [RFC6361], you need to\n      negotiate
    that you will be using TRILL.  However, if you have\n      Ethernet links [RFC6325],
    which are probably the most common type,\n      there isn't any link setup needed.\n
    \     As soon as the port is set up, it can ingress or egress native\n      frames
    if end-station service is being offered on that port.\n      Offering end-station
    service is the default.  However, if the port\n      trunk bit (end-station service
    disable) is set or the port is\n      configured as an IS-IS point-to-point link
    port, then end-station\n      service is not offered; therefore, native frames
    received are\n      ignored, and native frames are not egressed.\n      TRILL
    IS-IS Hellos then get sent out the port to be exchanged with\n      any other
    TRILL switches on the link [RFC7177].  Only the Hellos\n      are required; optionally,
    you might also exchange MTU-probe/ack\n      PDUs [RFC7177], BFD PDUs [RFC7175],
    or other link test packets.\n      TRILL doesn't send any TRILL Data or TRILL
    IS-IS packets out the\n      port to the link, except for Hellos, until the link
    gets to the\n      2-Way or Report state [RFC7177].\n      If a link is configured
    as a point-to-point link, there is no\n      Designated RBridge (DRB) election.
    \ By default, an Ethernet link\n      is considered a LAN link, and the DRB election
    occurs when the\n      link is in any state other than Down.  You don't have to
    configure\n      priorities for each TRILL switch (RBridge) to be the DRB.  Things\n
    \     will work fine with all the RBridges on a link using default\n      priority.
    \ But if the network manager wants to control this, there\n      should be a way
    for them to configure the priority to be the DRB\n      of the TRILL switch ports
    on the link.\n      (To avoid complexity, this appendix generally describes the\n
    \     life cycle for a link that only has two TRILL switches on it.  But\n      TRILL
    works fine as currently specified on a broadcast link with\n      multiple TRILL
    switches on it -- actually, multiple TRILL switch\n      ports -- since a TRILL
    switch can have multiple ports connected to\n      the same link.  The most likely
    way to get such a multi-access\n      link with current technology and the existing
    TRILL standards is\n      to have more than two TRILL switch Ethernet ports connected
    to a\n      bridged LAN.  The TRILL protocol operates above all bridging; in\n
    \     general, the bridged LAN looks like a transparent broadcast link\n      to
    TRILL.)\n      When a link gets to the 2-Way or Report state, LSPs, CSNPs, and\n
    \     PSNPs will start to flow on the link (as well as FS-LSPs,\n      FS-CSNPs,
    and FS-PSNPs for E-L1FS (see Section 8.1)).\n      When a link gets to the Report
    state, there is adjacency.  The\n      existence of that adjacency is flooded
    (reported) to the campus in\n      LSPs.  TRILL Data packets can then start to
    flow on the link as\n      TRILL switches recalculate the least-cost paths and
    distribution\n      trees to take the new adjacency into account.  Until it gets
    to\n      the Report state, there is no adjacency, and no TRILL Data packets\n
    \     can flow over that link (with the minor corner case exception that\n      an
    RBridge Channel message can, for its first hop only, be sent on\n      a port
    where there is no adjacency (Section 2.4 of [RFC7178]).\n      (Although this
    paragraph seems to be talking about link state, it\n      is actually port state.
    \ It is possible for different TRILL switch\n      ports on the same link to temporarily
    be in different states.  The\n      adjacency state machinery runs independently
    on each port.)\n      ESADI [RFC7357] is built on top of the regular TRILL Data
    routing.\n      Since ESADI PDUs look, to transit TRILL switches, like regular\n
    \     TRILL Data packets, no ESADI PDUs can flow until adjacencies are\n      established
    and TRILL Data is flowing.  Of course, ESADI is\n      optional and is not used
    unless configured.\n   Question:\n      Does it require TRILL Full Headers at
    the time TRILL LSPs start\n      being broadcast on a link?  Because at that time
    it's not defined\n      egress and ingress nicknames.\n   Answer:\n      TRILL
    Headers are only for TRILL Data packets.  TRILL IS-IS\n      packets, such as
    TRILL LSPs, are sent in a different way that does\n      not use a TRILL Header
    and does not depend on nicknames.\n      Probably, in most implementations, a
    TRILL switch will start up\n      using the same nickname it had when it shut
    down or last got\n      disconnected from a campus.  If you want, you can implement
    TRILL\n      to come up initially not reporting any nickname (by not including\n
    \     a Nickname sub-TLV in its LSPs) until you get the link-state\n      database
    or most of the link-state database, and then choose a\n      nickname no other
    TRILL switch in the campus is using.  Of course,\n      if a TRILL switch does
    not have a nickname, then it cannot ingress\n      data, cannot egress known unicast
    data, and cannot be a tree root.\n      TRILL IS-IS PDUs such as LSPs, and the
    link-state database, all\n      work based on the 7-byte IS-IS System ID (sometimes
    called the\n      LAN ID [IS-IS]).  Since topology determination uses System IDs,\n
    \     which are always unique across the campus, it is not affected by\n      the
    nickname assignment state.  The nickname system is built on\n      top of that.\n"
  title: Appendix A.  Life Cycle of a TRILL Switch Port (New)
- contents:
  - "Appendix B.  Example TRILL PDUs (New)\n   This appendix shows example TRILL IS-IS
    PDUs.  The primary purpose of\n   these examples is to clarify issues related
    to bit ordering.\n   The examples in this appendix concentrate on the format of
    the packet\n   header and trailer.  There are frequently unspecified optional
    items\n   or data in the packet that would affect header or trailer fields like\n
    \  the packet length or checksum.  Thus, an \"Xed out\" placeholder is\n   used
    for such fields, where each X represents one hex nibble.\n"
  - contents:
    - "B.1.  LAN Hello over Ethernet\n   A TRILL Hello sent from a TRILL switch (RBridge)
      with 7-byte\n   System ID 0x30033003300300 holding nickname 0xFFDE over Ethernet
      from\n   a port with MAC address 0x00005E0053DE on VLAN 1 at priority 7.\n   There
      is one neighbor that is the DRB.  The neighbor's port MAC is\n   0x00005E0053E3,
      and the neighbor's System ID is 0x44444444444400.\n      Ethernet Header\n        Outer.MacDA,
      Outer.MacSA\n          0x0180C2000041   All-IS-IS-RBridges Destination MAC Address\n
      \         0x00005E0053DE   Source MAC Address\n        Outer VLAN Tag (optional)\n
      \         0x8100           C-VLAN Ethertype [802.1Q-2014]\n          0xE001
      \          Priority 7, Outer.VLAN\n        IS-IS\n          0x22F4           L2-IS-IS
      Ethertype\n      IS-IS Payload\n        Common Header\n          0x83             Intradomain
      Routeing Protocol Discriminator\n          0x08             Header Length\n
      \         0x01             IS-IS Version Number\n          0x06             ID
      Length of 6 Bytes\n          0x0F             PDU Type (Level 1 LAN Hello)\n
      \         0x01             Version\n          0x00             Reserved\n          0x01
      \            Maximum Area Addresses\n        Hello PDU Specific Fields\n          0x01
      \            Circuit Type (Level 1)\n          0x30033003300300 Source System
      ID\n          0x0009           Holding Time\n          0xXXXX           PDU
      Length\n          0x40             Priority to be DRB\n          0x44444444444400
      LAN ID\n        TLVs (the following order of TLVs or of sub-TLVs in a TLV\n
      \         is not significant)\n        Area Addresses TLV\n          0x01             Area
      Addresses Type\n          0x02             Length of Value\n          0x01             Length
      of Address\n          0x00             The fixed TRILL Area Address\n        MT
      Port Capabilities TLV\n          0x8F             MT Port Capabilities Type\n
      \         0x0011           Length of Value\n          0x0000           Topology\n
      \           Special VLANs and Flags Sub-TLV\n              0x01            Sub-TLV
      Type\n              0x08            Length\n              0x0123          Port
      ID\n              0xFFDE          Sender Nickname\n              0x0001          Outer.VLAN\n
      \             0x0001          Designated VLAN\n            Enabled VLANs Sub-TLV
      (optional)\n              0x02            Sub-TLV Type\n              0x03            Length\n
      \             0x0001          Start VLAN 1\n              0x80            VLAN
      1\n        TRILL Neighbor TLV\n          0x91            Neighbor Type\n          0x0A
      \           Length of Value\n          0xC0            S Flag = 1, L Flag =
      1, SIZE field 0\n            NEIGHBOR RECORD\n              0x00            Flags\n
      \             0x2328          MTU = 9 KB\n              0x00005E0053E3  Neighbor
      MAC Address\n        Scope Flooding Support TLV\n        0xF3              Scope
      Flooding Support Type\n        0x01              Length of Value\n        0x40
      \             E-L1FS Flooding Scope\n        More TLVs (optional)\n          ...\n
      \     Ethernet Trailer\n        0xXXXXXXXX      Ethernet Frame Check Sequence
      (FCS)\n"
    title: B.1.  LAN Hello over Ethernet
  - contents:
    - "B.2.  LSP over PPP\n   Here is an example of a TRILL LSP sent over a PPP link
      by the same\n   source TRILL switch as the example in Appendix B.1.\n      PPP
      Header\n        0x405D               PPP TRILL Link State Protocol\n      IS-IS
      Payload\n        Common Header\n          0x83               Intradomain Routeing
      Protocol Discriminator\n          0x08               Header Length\n          0x01
      \              IS-IS Version Number\n          0x06               ID Length
      of 6 Bytes\n          0x12               PDU Type (Level 1 LSP)\n          0x01
      \              Version\n          0x00               Reserved\n          0x01
      \              Maximum Area Addresses\n        LSP Specific Fields\n          0xXXXX
      \            PDU Length\n          0x0123             Remaining Lifetime\n          0x3003300330030009
      LSP ID (fragment 9)\n          0x00001234         Sequence Number\n          0xXXXX
      \            Checksum\n          0x01               Flags = Level 1\n        TLVs
      (the following order of TLVs or of sub-TLVs in a TLV\n          is not significant)\n
      \       Router Capability TLV\n          0xF2               Router Capability
      Type\n          0x0F               Length of Value\n          0x00               Flags\n
      \           Nickname Sub-TLV\n              0x06           Sub-TLV Type\n              0x05
      \          Length of Value\n              NICKNAME RECORD\n                0x33
      \        Nickname Priority\n                0x1234       Tree Root Priority\n
      \               0xFFDE       Nickname\n            TRILL Version Sub-TLV\n              0x0D
      \          Sub-TLV Type\n              0x05\n              0x00           Max
      Version\n              0x40000000     Flags = FGL Support\n        More TLVs
      (optional\n          ...\n      PPP Trailer\n        0xXXXXXX        PPP Frame
      Check Sequence (FCS)\n"
    title: B.2.  LSP over PPP
  - contents:
    - "B.3.  TRILL Data over Ethernet\n   Below is an IPv4 ICMP Echo [RFC792] sent
      in a TRILL Data packet from\n   the TRILL switch that sent the Hello in Appendix
      B.1 to the neighbor\n   TRILL switch on the link used in Appendix B.1.\n      Ethernet
      Header\n        Outer.MacDA, Outer.MacSA\n          0x00005E0053E3  Destination
      MAC Address\n          0x00005E0053DE  Source MAC Address\n        Outer VLAN
      Tag (optional)\n          0x8100          C-VLAN Ethertype [802.1Q-2014]\n          0x0001
      \         Priority 0, Outer.VLAN 1\n        TRILL\n          0x22F3          TRILL
      Ethertype\n      TRILL Header\n          0X000E          Flags, Hop Count 14\n
      \         0xFFDF          Egress Nickname\n          0xFFDC          Ingress
      Nickname\n      Inner Ethernet Header\n        Inner.MacDA, Inner.MacSA\n          0x00005E005322
      \ Destination MAC Address\n          0x00005E005344  Source MAC Address\n        Inner
      VLAN Tag\n          0x8100          C-VLAN Ethertype\n          0x0022          Priority
      0, Inner.VLAN 34\n        Ethertype\n          0x0800          IPv4 Ethertype\n
      \     IP Header\n          0x4500          Version 4, Header Length 5, ToS 0\n
      \         0xXXXX          Total Length\n          0x3579          Identification\n
      \         0x0000          Flags, Fragment Offset\n          0x1101          TTL
      17, ICMP = Protocol 1\n          0xXXXX          Header Checksum\n          0xC0000207
      \     Source IP 192.0.2.7\n          0xC000020D      Destination IP 192.0.2.13\n
      \         0x00000000      Options, Padding\n      ICMP\n          0x0800          ICMP
      Echo\n          0xXXXX          Checksum\n          0x87654321      Identifier,
      Sequence Number\n          ...             Echo Data\n      Ethernet Trailer\n
      \       0xXXXXXXXX      Ethernet Frame Check Sequence (FCS)\n"
    title: B.3.  TRILL Data over Ethernet
  - contents:
    - "B.4.  TRILL Data over PPP\n   Below is an ARP Request [RFC826] sent in a TRILL
      Data packet from the\n   TRILL switch that sent the Hello in Appendix B.1 over
      a PPP link.\n      PPP Header\n        0x005D          PPP TRILL Network Protocol\n
      \     TRILL Header\n          0X080D          Flags (M = 1), Hop Count 13\n
      \         0xFFDD          Distribution Tree Root Nickname\n          0xFFDC
      \         Ingress Nickname\n      Inner Ethernet Header\n        Inner.MacDA,
      Inner.MacSA\n          0xFFFFFFFFFFFF  Destination MAC Address\n          0x00005E005344
      \ Source MAC Address\n        Inner VLAN Tag\n          0x8100          C-VLAN
      Ethertype\n          0x0022          Priority 0, Inner.VLAN 34\n        Ethertype\n
      \         0x0806          ARP Ethertype\n      ARP\n          0x0001          Hardware
      Address Space = Ethernet\n          0x0001          Protocol Address Space =
      IPv4\n          0x06            Size of Hardware Address\n          0x04            Size
      of Protocol Address\n          0x0001          OpCode = Request\n          0x00005E005344
      \ Sender Hardware Address\n          0xC0000207      Sender Protocol Address
      192.0.2.7\n          0x000000000000  Target Hardware Address\n          0xC000020D
      \     Target Protocol Address 192.0.2.13\n      PPP Trailer\n        0xXXXXXX
      \       PPP Frame Check Sequence (FCS)\n"
    title: B.4.  TRILL Data over PPP
  title: Appendix B.  Example TRILL PDUs (New)
- contents:
  - 'Appendix C.  Changes to Previous RFCs (New)

    '
  - contents:
    - "C.1.  Changes to Obsoleted RFC 7180\n   This section summarizes the changes,
      augmentations, and excisions\n   this document specifies for [RFC7180], which
      it obsoletes and\n   replaces.\n"
    - contents:
      - "C.1.1.  Changes\n   For each section header in this document ending with
        \"(Changed)\",\n   this section summarizes the changes that are made by this
        document:\n   Section 1 (\"Introduction\"): Numerous changes to reflect the
        overall\n   changes in contents.\n   Section 1.1 (\"Precedence\"): Changed
        to add mention of [RFC7179].\n   Section 1.3 (\"Terminology and Acronyms\"):
        Numerous terms added.\n   Section 3 (\"Distribution Trees and RPF Check\"):
        Changed by the\n   addition of the new material in Section 3.6.  See Appendix
        C.1.2,\n   Item 1.\n   Section 8 (\"Other IS-IS Considerations\"): Changed
        by the addition of\n   Sections 8.1, 8.2, 8.3, and 8.4.  See Appendix C.1.2
        -- Items 2, 3,\n   4, and 5, respectively.\n   Section 9 (\"Updates to RFC
        7177 (Adjacency)\": Changes and additions\n   to [RFC7177] to support E-L1FS.
        \ See Appendix C.1.2, Item 2.\n   Section 12 (\"IANA Considerations\"): Changed
        by the addition of\n   material in Section 12.2.  See Appendix C.1.2, Item
        7.\n   Section 13 (\"Security Considerations\"): Minor changes in the RFCs\n
        \  listed.\n"
      title: C.1.1.  Changes
    - contents:
      - "C.1.2.  Additions\n   This document contains the following material not present
        in\n   [RFC7180]:\n   1.  Support for an alternative Reverse Path Forwarding
        Check (RPFC),\n       along with considerations for deciding between the original\n
        \      [RFC6325] RPFC and this alternative RPFC.  This alternative RPFC\n
        \      was originally discussed on the TRILL WG mailing list in\n       <http://www.ietf.org/mail-archive/web/trill/current/\n
        \      msg01852.html> and subsequent messages (Section 3.6).\n   2.  Mandatory
        E-L1FS [RFC7356] support (Sections 8.1 and 9).\n   3.  Recommendations concerning
        control packet priorities\n       (Section 8.2).\n   4.  Implementation requirements
        concerning unknown IS-IS PDU types\n       (Section 8.3).\n   5.  Specification
        of an optional Nickname Flags APPsub-TLV and an\n       ingress flag within
        that APPsub-TLV (Section 8.4).\n   6.  Update to the TRILL Header to allocate
        a Color bit\n       (Section 10.1), and update to the optional TRILL Header
        Extension\n       flags word to allocate a 2-bit Extended Color field\n       (Section
        10.2).\n   7.  Some new IANA Considerations in Section 12.2, including\n       reservation
        of nicknames for use as examples in documentation.\n   8.  A new \"Appointed
        Forwarder Status Lost Counter\" section\n       (Section 11 of this document)
        that loosens the mandatory update\n       requirements specified in [RFC6325].\n
        \  9.  Informative Appendix A on the life cycle of a TRILL port.\n   10. A
        new Appendix B containing example TRILL PDUs.\n   11. Recommendation to use
        the Purge Originator Identification TLV\n       (Section 8.6).\n"
      title: C.1.2.  Additions
    - contents:
      - "C.1.3.  Deletions\n   This document omits the following material that was
        present in\n   [RFC7180]:\n   1.  All updates to [RFC6327] that occurred in
        [RFC7180].  These have\n       been rolled into [RFC7177], which obsoletes
        [RFC6327].  However,\n       new updates to [RFC7177] are included (see Appendix
        C.3).\n   2.  All updates to [RFC6439].  These have been rolled into\n       [RFC6439bis],
        which is intended to obsolete [RFC6439].\n"
      title: C.1.3.  Deletions
    title: C.1.  Changes to Obsoleted RFC 7180
  - contents:
    - "C.2.  Changes to RFC 6325\n   This document contains many normative updates
      to [RFC6325], some of\n   which were also in [RFC7180], which this document
      replaces.  These\n   changes include the following:\n   1.  Changing nickname
      allocation to ignore conflicts with RBridges\n       that are IS-IS unreachable.\n
      \  2.  Fixing errors: [Err3002], [Err3003], [Err3004], [Err3052],\n       [Err3053],
      and [Err3508].\n   3.  Changing the requirement to use the RPF check described
      in\n       [RFC6325] for multi-destination TRILL Data packets by providing\n
      \      an alternative stronger RPF check.\n   4.  Adoption of the change of
      the CFI bit, which was required to be\n       zero in the inner frame, to the
      DEI bit, which is obtained from\n       inner frame ingress or creation.\n   5.
      \ Requiring that all RBridges support E-L1FS FS-LSP flooding.\n   6.  Reducing
      the variable-length TRILL Header extensions area to one\n       optional flags
      word.  The Extension Length field (called\n       \"Op-Length\" in [RFC6325])
      is reduced to 1 bit that indicates\n       whether the flags word is present.
      \ The rest of that Length field\n       is now reserved.\n   7.  Changing the
      mandatory Appointed Forwarder Status Lost Counter\n       increment provisions,
      as specified in Section 11.\n"
    title: C.2.  Changes to RFC 6325
  - contents:
    - "C.3.  Changes to RFC 7177\n   All of the updates to [RFC7177] herein are in
      Section 9.  Basically,\n   this document requires that a Scope Flooding Support
      TLV [RFC7356]\n   appear in all Hellos and that TRILL switches retain in their\n
      \  adjacency state the information received in that TLV.\n"
    title: C.3.  Changes to RFC 7177
  - contents:
    - "C.4.  Changes to RFC 7179\n   The updates to [RFC7179] herein are in Sections
      10.2 and 10.3.\n"
    title: C.4.  Changes to RFC 7179
  title: Appendix C.  Changes to Previous RFCs (New)
- contents:
  - "Acknowledgments\n   The contributions of the following individuals to this document
    are\n   gratefully acknowledged:\n      Santosh Rajagopalan and Gayle Noble\n
    \  The contributions of the following (listed in alphabetical order) to\n   the
    preceding version of this document, [RFC7180], are gratefully\n   acknowledged:\n
    \     Somnath Chatterjee, Weiguo Hao, Rakesh Kumar, Yizhou Li, Radia\n      Perlman,
    Varun Shah, Mike Shand, and Meral Shirazipour.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Donald Eastlake 3rd\n   Huawei Technology\n   155 Beaver
    Street\n   Milford, MA  01757\n   United States\n   Phone: +1-508-333-2270\n   Email:
    d3e3e3@gmail.com\n   Mingui Zhang\n   Huawei Technologies\n   No. 156 Beiqing
    Rd., Haidian District\n   Beijing  100095\n   China\n   Email: zhangmingui@huawei.com\n
    \  Radia Perlman\n   EMC\n   2010 256th Avenue NE, #200\n   Bellevue, WA  98007\n
    \  United States\n   Email: radia@alum.mit.edu\n   Ayan Banerjee\n   Cisco\n   Email:
    ayabaner@cisco.com\n   Anoop Ghanwani\n   Dell\n   5450 Great America Parkway\n
    \  Santa Clara, CA  95054\n   United States\n   Email: anoop@alumni.duke.edu\n
    \  Sujay Gupta\n   IP Infusion\n   RMZ Centennial\n   Mahadevapura Post\n   Bangalore
    \ 560048\n   India\n   Email: sujay.gupta@ipinfusion.com\n"
  title: Authors' Addresses
