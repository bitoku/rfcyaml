Corrections to RFC 560 Remote Controlled Transmission & Echoing TELNET Option
[This RFC contains corrections to RFC 560 (NIC   18492,) which described the Remote Controlled Transmission and Echoing TELNET Option.
A completely updated version of 18492 has been journalized and will be included in the Protocols Notebook.
These new specifications for RCTE are in NIC document (19859,).]
2 Section 1 of the RCTE Option specification (18492,2a:gy) was supposed to include the name and code for the option.
The code was accidentally left out.
All examples in the option specifications, showing RCTE SB commands, should also show the IAC SE parameter.
(The revised RCTE specifications have been so changed.)
The sample scenario, in Section 5.D (18492,2e4:gy), should be modified to reflect the kind of asynchrony of events that can occur with the RCTE protocol.
The updated RCTE specifications (in
In RFC 563 (18755,) John Davidson criticizes RCTE's apparent failure to allow Net
I/O and server computation to overlap.
(For Net efficiency, User hosts are DISCOURAGED from sending before the occurrence of a Transmission character).
A Transmission character is one which RECOMMENDS that the Using Host transmit all text accumulated up to and including its occurrence.
(For Net efficiency, Using hosts are DISCOURAGED from sending before the occurrence of a Transmission character, as defined at the moment the character is typed).
A Break character has the effect of a Transmission character, but also causes the Using host to stop its print/discard action upon the User's input text, until directed to do otherwise by another IAC SB RCTE <cmd> IAC SE command from the Serving host.
Break characters therefore define printing units.
"Break character" as used in this document does NOT mean Telnet Break character.
A Break character REQUIRES that the Using host transmit all text accumulated up to and including its occurrence and also causes the Using host to stop its print/discard action upon the User's input text, until directed to do otherwise by another IAC SB RCTE <cmd> IAC SE command from the Serving host.
Break characters therefore define printing units.
"Break character" as used in this document does NOT mean Telnet Break character.
The most recent RCTE command determines the echo, Transmission and Break actions.
The most recent RCTE Break reset command determines the Break actions.
A severe (User) site dependent problem will be buffering type  ahead input from the terminal.
It is possible, especially in the case of TIPS, that the input buffer will overflow often.
If the receiving (serving) host will permit, the accumulated text should be transmitted at this point.
If the text cannot be transmitted and further typing by the user will result in lost text, the user should be notified.
Buffering Problems and Transmission vs. Printing Constraints:
There are NO mandatory transmission constraints.
The Using host is allowed to send a character a time, though this would be a waste of RCTE.
The Transmission Classes commands are GUIDELINES, so deviating from them, as when the User's buffer gets full, is allowed.
Additionally, the Using host may send a Break Class character, without knowing that it is one (as with type  ahead).
The problem with buffering occurs when printing on the user's terminal must be suspended, after the user has typed a currently valid Break Character and until a Break Reset command is received from the serving host.
During this time, the user may be typing merrily along.
The text being typed may be SENT, but may not yet be PRINTED.
The more standard problem of filling the transmission buffer, while awaiting an ALLOC from the Serving host, may also occur, but this problem is well known to implementors and in no way special to RCTE.
In any case, when the buffer does fill and further text typed by the user will be lost, the user should be notified.
The Serving and Using hosts must carefully synchronize Break Class Reset commands with the transmission of Break characters.
Except at the beginning of an interaction, the Serving host MAY ONLY send a Break Reset command in response to the User host's having sent a Break character as defined at that time.
This should establish a one to one correspondence between them.
(A <cmd> value of zero, in this context, is interpreted as a Break Classes reset to the same class(es) as before.)
The Reset command may be preceded by terminal output.
Text should be buffered by the User host until the user types a character which belongs to the transmission class in force at THE MOMENT
(7) Transmission Class Reset commands may be sent by the Serving host at ANY TIME.
If they are frequently sent separate from Break Class Reset commands, it will probably be better to exit from RCTE and enter regular character at a time transmission.
It is not immediately clear what the Using host should do with currently buffered text, when a Transmission Classes Reset command is received.
The buffering is according to the previous Transmission Classes scheme.
The Using host clearly should NOT simply wait until a Transmission character (according to the new scheme) is typed.
This is the simpler approach, and probably quite adequate.
This might actually be useful, as in the case of transmitting on carriage return, with the Using host echoing (a controlled half duplex).
Having the using host send a Telnet Command will allow the serving host to know when he may reset the Break classes, but the mechanism is awkward and probably should be avoided.
