- contents:
  - '     Definitions of Supplemental Managed Objects for ATM Interface

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines objects used for managing ATM-based interfaces,\n
    \  devices, and services, in addition to those defined in RFC 2515, the\n   ATM-MIB,
    to provide additional support for the management of ATM\n   Switched Virtual Connections
    (SVCs) and ATM Permanent Virtual\n   Connections (PVCs).\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  The Internet-Standard Management Framework. . . . .
    . . . .   3\n   2.  Overview. . . . . . . . . . . . . . . . . . . . . . . . .
    .   3\n       2.1.  Background. . . . . . . . . . . . . . . . . . . . . .   3\n
    \      2.2.  Important Definitions . . . . . . . . . . . . . . . .   4\n   3.
    \ Conventions used in the MIB . . . . . . . . . . . . . . . .   6\n       3.1.
    \ Structure . . . . . . . . . . . . . . . . . . . . . .   6\n             3.1.1.
    \ ATM SVC VP Cross-Connect Table. . . . . . . .   6\n             3.1.2.  ATM
    SVC VC Cross-Connect Table. . . . . . . .   7\n             3.1.3.  ATM Interface
    Signalling Statistics Table . .   8\n             3.1.4.  ATM Signalling Capability
    Support . . . . . .   9\n             3.1.5.  Signalling Descriptor Parameter
    Table . . . .  10\n             3.1.6.  ATM Interface Registered Address Table.
    . . .  10\n             3.1.7.  ATM VPI/VCI to Address Mapping Table. . . . .
    \ 11\n             3.1.8.  ATM Address to VPI/VCI Mapping Table. . . . .  11\n
    \            3.1.9.  ATM VPL Statistics Table. . . . . . . . . . .  11\n             3.1.10.
    ATM VPL Logical Port Table. . . . . . . . . .  12\n             3.1.11. ATM VCL
    Statistics Table. . . . . . . . . . .  15\n             3.1.12. ATM VC General
    Information Table. . . . . . .  15\n             3.1.13. ATM Interface Configuration
    Extension Table .  16\n             3.1.14. ATM ILMI Service Registry Table .
    . . . . . .  17\n             3.1.15. ILMI Network Prefix Table . . . . . . .
    . . .  19\n             3.1.16. ATM Switch Address Table. . . . . . . . . . .
    \ 19\n             3.1.17. AAL5 per-VCC Statistics Table . . . . . . . .  19\n
    \            3.1.18. ATM VP Cross-Connect Extension Table. . . . .  20\n             3.1.19.
    ATM VC Cross-Connect Extension Table. . . . .  20\n             3.1.20. Currently
    Failing PVPL Table. . . . . . . . .  20\n             3.1.21. Currently Failing
    PVCL Table. . . . . . . . .  20\n             3.1.22. Leaf Initiated Join Counter
    support . . . . .  20\n       3.2.  Network and User Addresses. . . . . . . .
    . . . . . .  20\n       3.3.  Configuration of VPLs, VCLs, and Cross-Connects
    . . .  20\n       3.4.  ATM-related Trap Support. . . . . . . . . . . . . . .
    \ 20\n   4.  Conformance and Compliance. . . . . . . . . . . . . . . . .  21\n
    \  5.  Definitions . . . . . . . . . . . . . . . . . . . . . . . .  21\n   6.
    \ Acknowledgments . . . . . . . . . . . . . . . . . . . . . .  89\n   7.  References.
    . . . . . . . . . . . . . . . . . . . . . . . .  89\n       7.1.  Normative References.
    . . . . . . . . . . . . . . . .  89\n       7.2.  Informative References. . .
    . . . . . . . . . . . . .  90\n   8.  Security Considerations . . . . . . . .
    . . . . . . . . . .  90\n   9.  Intellectual Property Statement . . . . . . .
    . . . . . . .  92\n   10. Authors' Addresses. . . . . . . . . . . . . . . . .
    . . . .  93\n   11. Full Copyright Statement. . . . . . . . . . . . . . . . .
    .  94\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Overview\n   The purpose of this memo is to provide additional capabilities,
    not\n   found in the ATM-MIB [RFC2515], which are needed to manage ATM\n   interfaces.
    \ This memo addresses the following areas:\n   -  ATM Switch Support\n   -  ATM
    Service Support\n   -  ATM Host Support\n   In addition, this memo also provides
    ATM trap support.\n"
  - contents:
    - "2.1.  Background\n   In addition to the MIB module defined in this memo, other
      MIB modules\n   are necessary to manage ATM interfaces, links and cross-connects.\n
      \  Examples include MIB II for general system and interface management\n   ([RFC2863]),
      the DS3 ([RFC2496]) or SONET MIBs ([RFC3592]) for\n   management of SONET and
      DS3 physical interfaces, and, as appropriate,\n   MIB modules for applications
      that make use of ATM, such as SMDS\n   [RFC1694] and LAN Emulation [ATM Forum
      LANE].  These MIB modules are\n   outside the scope of this specification.\n
      \  This MIB module also requires the use of the ATM-MIB module defined\n   in
      [RFC2515] and ATM-specific textual conventions defined in\n   [RFC2514].\n   ATM
      Endpoint applications such as ATM LAN Emulation or Classical IP-\n   over-ATM
      Clients and Servers use ATM to establish SVC/PVC connections\n   for exchanging
      control and data information.  The agents of these ATM\n   applications must
      provide the network manager with information on the\n   SVC/PVCs in use and
      which applications are using them.  The\n   information can be made generic
      so as to apply to all ATM\n   applications.  This memo defines extensions to
      the ATM-MIB [RFC2515]\n   in order to support this.\n   The current specification
      of this supplemental ATM2-MIB is based on\n   SNMPv2 SMI.\n"
    title: 2.1.  Background
  - contents:
    - "2.2.  Important Definitions\n   The following terms are defined here and used
      throughout this MIB:\n   -  Virtual Path Link (VPL)\n   -  Virtual Path Connection
      (VPC)\n   -  Virtual Path Segment (VP Segment)\n   -  Virtual Channel Link (VCL)\n
      \  -  Virtual Channel Connection (VCC)\n   -  Virtual Channel Segment (VC Segment).\n
      \  The figures on the next page show how these terms apply in typical\n   ATM
      network topologies.  Additional terms relevant to this MIB are\n   defined and
      illustrated in the ATM Terminology section 3 of\n   [RFC2515].\n    _____      _______
      \     _______      _______      _____\n   |     |____|       |____|       |____|
      \      |____|     |\n   |Host1|    |SwitchA|    |SwitchB|    |SwitchC|    |Host2|\n
      \  |     |____|       |____|       |____|       |____|     |\n   |_____|    |_______|
      \   |_______|    |_______|    |_____|\n         |<-->|                    |<-->|\n
      \   Virtual Path Link         Virtual Path Link\n         |<----------------------------------------->|\n
      \                    Virtual Path Connection\n                    (between Host1
      and Host2)\n                      |<--------------->|\n                      Virtual
      Path Segment\n                 (between SwitchA and SwitchC)\n   Figure 1: Examples
      of Virtual Path Links, Virtual Path\n             Connection, and Virtual Path
      Segment\n    _____      _______      _______      _______      _____\n   |     |____|
      \      |____|       |____|       |____|     |\n   |Host1|----|SwitchA|----|SwitchB|----|SwitchC|----|Host2|\n
      \  |     |____|       |____|       |____|       |____|     |\n   |_____|    |_______|
      \   |_______|    |_______|    |_____|\n         |<-->|                    |<-->|\n
      \  Virtual Channel Link      Virtual Channel Link\n         |<----------------------------------------->|\n
      \                  Virtual Channel Connection\n                   (between Host1
      and Host2)\n                      |<--------------->|\n                    Virtual
      Channel Segment\n                 (between SwitchA and SwitchC)\n   Figure 2:
      Examples of Virtual Channel Links, Virtual\n             Channel Connection,
      and Virtual Channel Segment\n"
    title: 2.2.  Important Definitions
  title: 2.  Overview
- contents:
  - '3.  Conventions used in the MIB

    '
  - contents:
    - "3.1.  Structure\n   The managed ATM objects are arranged as follows:\n     Table
      \                        Host   Switch Service\n   _____________________________________________________\n
      \  atmSvcVcCrossConnectTable      |      |  Y   |  Y   |\n   atmSvcVpCrossConnectTable
      \     |      |  Y   |  Y   |\n   atmSigStatTable                |  Y   |  Y
      \  |  Y   |\n   atmSigSupportTable             |      |  Y   |  Y   |\n   atmSigDescrParamTable
      \         |  Y   |      |      |\n   atmIfRegisteredAddrTable       |      |
      \ Y   |  Y   |\n   atmVclAddrTable                |  Y   |      |      |\n   atmAddrVclTable
      \               |  Y   |      |      |\n   atmVplStatTable                |
      \ Y   |  Y   |  Y   |\n   atmVplLogicalPortTable         |  Y   |  Y   |  Y
      \  |\n   atmVclStatTable                |  Y   |  Y   |  Y   |\n   atmAal5VclStatTable
      \           |  Y   |      |      |\n   atmVclGenTable                 |  Y   |
      \     |      |\n   atmInterfaceExtTable           |  Y   |  Y   |  Y   |\n   atmIlmiSrvcRegTable
      \           |      |  Y   |  Y   |\n   atmIlmiNetworkPrefixTable      |      |
      \ Y   |  Y   |\n   atmSwitchAddressTable          |      |  Y   |      |\n   atmVpCrossConnectXTable
      \       |      |      |  Y   |\n   atmVcCrossConnectXTable        |      |      |
      \ Y   |\n   atmCurrentlyFailingPVplTable   |  Y   |  Y   |  Y   |\n   atmCurrentlyFailingPVclTable
      \  |  Y   |  Y   |  Y   |\n   Table 1: MIB structure\n"
    - contents:
      - "3.1.1.  ATM SVC VP Cross-Connect Table\n   This table provides the SVC VP
        Cross-Connect (SVPC) information.  The\n   equivalent PVC VP Cross-Connect
        table is defined in [RFC2515].  This\n   table also includes cross-connect
        information for Soft PVPs.\n   This table contains configuration and state
        information of all SVC VP\n   point-to-point, point-to-multipoint, or multipoint-to-multipoint
        VP\n   cross-connects.\n   This table has read-only access and can be used
        to monitor the\n   cross-connects which connect the VPLs together in an ATM
        switch or\n   network.  The atmSvcVpCrossConnectIndex is used to associate
        the\n   related SVC VPLs that are cross-connected together.  The\n   atmSvcVpCrossConnectRowStatus
        object has read-write access to allow\n   for tear-down.\n   The ATM SVC VP
        Cross-Connect Table models each bi-directional\n   Switched Virtual Circuit
        (SVC) VP cross-connect as a set of entries\n   in the atmSvcVpCrossConnectTable.
        \ A point-to-point VPC cross-connect\n   is modeled as one entry; a point-to-multipoint
        (N leafs) VPC cross-\n   connect as N entries in this table; and a multipoint-to-multipoint
        (N\n   parties) VPC cross-connect as N(N-1)/2 entries in this table.  In the\n
        \  latter cases, all the N (or N(N-1)/2) entries are associated with a\n   single
        VPC cross-connect by having the same value of\n   atmSvcVpCrossConnectIndex.\n
        \       _________________________________________\n        |                                       |\n
        \   Low |         ATM Switch or Network         | High\n    port|                                       |
        port\n   _____|>> from low to high VPC traffic flow >>|______\n        |<<
        from high to low VPC traffic flow <<|\n        |_______________________________________|\n
        \  Figure 3: VPC Cross-Connect Model\n   The terms low and high are chosen
        to represent numerical ordering of\n   the two interfaces associated with
        a VPC cross-connect.  That is, the\n   ATM interface with the lower value
        of ifIndex is termed 'low', while\n   the other ATM interface associated with
        the VPC cross-connect is\n   termed 'high'.\n"
      title: 3.1.1.  ATM SVC VP Cross-Connect Table
    - contents:
      - "3.1.2.  ATM SVC VC Cross-Connect Table\n   This table provides the SVC Cross-Connect
        (SVCC) information.  The\n   equivalent PVC VC Cross-Connect table is defined
        in [RFC2515].  This\n   table also includes cross-connect information for
        Soft PVCs.\n   This table is used to model a bi-directional point-to-point,
        point-\n   to-multipoint or multipoint-to-multipoint SVC VC cross-connect.\n
        \  This table has read-only access and is used to monitor the cross-\n   connects
        which connect the VCLs together in an ATM switch or network\n   that belong
        to a VC connection.  The atmSvcVcCrossConnectIndex is\n   used to associate
        the related SVC VCLs that are cross-connected\n   together.  The atmSvcVcCrossConnectRowStatus
        object has read-write\n   access to allow for tear-down.\n   The ATM SVC VC
        Cross-Connect Table models each bi-directional\n   Switched Virtual Circuit
        (SVC) VC cross-connect as a set of entries\n   in the atmSvcVcCrossConnectTable.
        \ A point-to-point VC cross-connect\n   is modeled as one entry; a point-to-multipoint
        (N leafs) VC cross-\n   connect as N entries in this table; and a multipoint-to-multipoint
        (N\n   parties) VPC cross-connect as N(N-1)/2 entries in this table.  In the\n
        \  latter cases, all the N (or N(N-1)/2) entries are associated with a\n   single
        VPC cross-connect by having the same value of\n   atmSvcVcCrossConnectIndex.\n
        \        ______________________________________\n        |                                      |\n
        \   Low |         ATM Switch or Network        | High\n    port|                                      |
        port\n   _____|>> from low to high VC traffic flow >>|______\n        |<<
        from high to low VC traffic flow <<|\n        |______________________________________|\n
        \  Figure 4: VC Cross-Connect Model\n   The terms low and high are chosen
        to represent numerical ordering of\n   the two interfaces associated with
        a VPC cross-connect.  That is, the\n   ATM interface with the lower value
        of ifIndex is termed 'low', while\n   the other ATM interface associated with
        the VPC cross-connect is\n   termed 'high'.\n"
      title: 3.1.2.  ATM SVC VC Cross-Connect Table
    - contents:
      - "3.1.3.  ATM Interface Signalling Statistics Table\n   This table provides
        statistical information of the signalling entity.\n   A signalling entity
        can be deployed over an ATM interface as defined\n   in the atmInterfaceConfTable
        [RFC2515], a logical ATM interface\n   defined in section 5.1.10.1 in this
        document, or a proprietary\n   virtual interface as described in the atmInterfaceExtTable.
        \ To\n   monitor the signalling entity, a few counters are provided.  They
        are\n   defined as:\n      atmSigSSCOPConEvents\n      atmSigSSCOPErrdPdus\n
        \     atmSigDetectSetupAttempts\n      atmSigEmitSetupAttempts\n      atmSigDetectUnavailRoutes\n
        \     atmSigEmitUnavailRoutes\n      atmSigDetectUnavailResrcs\n      atmSigEmitUnavailResrcs\n
        \     atmSigDetectCldPtyEvents\n      atmSigEmitCldPtyEvents\n      atmSigDetectMsgErrors\n
        \     atmSigEmitMsgErrors\n      atmSigDetectClgPtyEvents\n      atmSigEmitClgPtyEvents\n
        \     atmSigDetectTimerExpireds\n      atmSigEmitTimerExpireds\n      atmSigDetectRestarts\n
        \     atmSigEmitRestarts\n      atmSigInEstabls\n      atmSigOutEstabls\n"
      title: 3.1.3.  ATM Interface Signalling Statistics Table
    - contents:
      - "3.1.4.  ATM Signalling Capability Support\n   A number of Information Elements
        may or may not be supported by ATM\n   switches or ATM Services.  Hence, for
        trouble isolation it is\n   important to keep track which particular Information
        Elements are\n   supported.  The corresponding group of objects must be supported
        by\n   switches or services supporting SVCs, and indicate whether the\n   following
        Information Elements are enabled/disabled:\n   1) Calling party number\n   2)
        Calling party subaddress\n   3) Called party subaddress\n   4) Broadband high
        layer information\n   5) Broadband low layer information\n   6) Broadband
        Repeat Indicator\n   7) AAL parameters\n   The last parameter, Preferred Carrier
        Pre-Subscription, identifies\n   the carrier to which intercarrier calls originated
        from this\n   interface are routed when transit network selection information
        is\n   not provided by the calling party.\n"
      title: 3.1.4.  ATM Signalling Capability Support
    - contents:
      - "3.1.5.  Signalling Descriptor Parameter Table\n   This table extends the
        ATM VCL table of the ATM-MIB [RFC2515] to\n   include all other necessary
        signalling information as specified in\n   the ATM Forum UNI Specifications
        [ATM Forum 3.0] and [ATM Forum UNI\n   3.1].  A user can create an entry with
        all signalling parameters and\n   later use that entry to specify the signalling
        characteristics of\n   SVCs.\n   Some of the signalling parameters, such as
        the AAL5 parameters\n   information element, are reflected in the VCL and
        VPL tables, and\n   this table only contains the remaining AAL5 parameters.\n
        \  Signalling attributes can be grouped into following categories:\n   1)
        ATM Adaptation Layer Parameters\n      Information in this group is captured
        in the ATM Signalling\n      Descriptor Parameter Table defined in this memo.
        \ Please refer to\n      section 5.4.5.5 of [ATM Forum 3.0] and [ATM Forum
        UNI 3.1].\n   2) Broadband High Layer Information\n      Information in this
        group is captured by the ATM Signalling\n      Descriptor Parameter Table
        defined in this memo.  Please refer to\n      section 5.4.5.8 of [ATM Forum
        3.0] and [ATM Forum UNI 3.1].\n   3) Broadband Low Layer Information\n      Information
        in this group is captured by the ATM Signalling\n      Descriptor Parameter
        Table defined in this memo.  Please refer to\n      section 5.4.5.9 of [ATM
        Forum 3.0] and [ATM Forum UNI 3.1].\n"
      title: 3.1.5.  Signalling Descriptor Parameter Table
    - contents:
      - "3.1.6.  ATM Interface Registered Address Table\n   This table contains a
        list of ATM addresses that can be used for\n   calls to and from a given interface
        by a switch or service.  The ATM\n   addresses are either registered by the
        endsystem via ILMI or\n   statically configured.  This table does not expose
        PNNI reachability\n   information.  This table only applies to switches and
        network\n   services.  See also Section 5.2.\n"
      title: 3.1.6.  ATM Interface Registered Address Table
    - contents:
      - "3.1.7.  ATM VPI/VCI to Address Mapping Table\n   In the atmVclAddrTable,
        the object atmVclAddrAddr can either be an\n   ATM Local Address or an ATM
        Remote Address which represent the two\n   endpoint addresses of a VCL.  ATM
        Local Address identifies the local\n   endpoint of the VCL represented by
        this agent.  The ATM Remote\n   address represents the address of the ATM
        application at the other\n   end of the VCL.\n"
      title: 3.1.7.  ATM VPI/VCI to Address Mapping Table
    - contents:
      - "3.1.8.  ATM Address to VPI/VCI Mapping Table\n   This table provides an alternative
        way to retrieve the atmVclTable.\n   This table can be used to retrieve the
        indexing to the atmVclTable by\n   an ATM address.\n"
      title: 3.1.8.  ATM Address to VPI/VCI Mapping Table
    - contents:
      - "3.1.9.  ATM VPL Statistics Table\n   The atmVplStatTable includes per-VPL
        cell counters.  The VPL cell\n   counters count the valid ATM cells.  The
        valid ATM cells include the\n   user and OAM cells but exclude the physical
        layer (e.g., idle cells)\n   and unassigned cells.  Cells coming into an ATM
        managed system are\n   counted differently with the high Cell Loss Priority
        (CLP=0) or low\n   Cell Loss Priority (CLP=1).  The cells are tagged, passed
        or\n   discarded depending on the incoming CLP value and the policed cell\n
        \  rate by the \"traffic policing\" entity in the ATM managed system.\n   Refer
        to [ATM Forum 3.0] and [ATM Forum UNI 3.1] for a description of\n   the traffic
        policing.\n   In the switch where the traffic policing is not supported, cells
        are\n   passed or discarded depending on the bandwidth and buffering capacity\n
        \  of the switching fabric.  The Output Tagged Cells counter, in this\n   case,
        is always zero.\n                 _______________\n                 | ATM
        Managed |\n      Input      | System      | Output\n      CLP=0 cells|             |
        CLP=0 cells\n      ---------->|             |----------->\n      CLP=1 cells|
        (traffic    | CLP=1 cells\n      ---------->| policing    |----------->\n
        \                | entity)     | Tagged cells (CLP=1)\n                 |_____________|----------->\n
        \                 |Discard  | Discard\n                  |CLP=0    | CLP=1\n
        \                 |cells    | cells\n                  |         |\n                  V
        \        V\n   Figure 5: ATM Cell Counters per VPL\n   In this table, cells
        coming into and out of the managed ATM system\n   are counted as the total
        number of cells and the cells with the\n   CLP=0.  The CLP=1 counter is derived
        by subtracting CLP=0 cells from\n   the total cells.  In addition, cells that
        are tagged on the output\n   are also counted.  The output CLP=1 cells equals
        the total cells out\n   count minus both the CLP=0 cells and the tagged cells.\n"
      title: 3.1.9.  ATM VPL Statistics Table
    - contents:
      - "3.1.10.  ATM VPL Logical Port Table\n   The ATM VPL Logical Port Table includes
        all ATM logical port\n   interface configuration information.\n"
      - contents:
        - "3.1.10.1.  ATM Logical Port Interface\n   The interface type \"ATM Logical
          Port\" (ifType=80) is defined to allow\n   the representation of a VP Tunnel,
          which is a VPL used as a trunk\n   connection (most likely between devices
          that are not physically\n   adjacent), providing for multiplexing and demultiplexing
          of VCs on\n   the VP.  Figure 6 illustrates such a VP Tunnel.\n   Note:
          the \"ATM Logical Port\" interface is more of a logical port,\n   compared
          with an interface of type \"ATM\" which is more of a physical\n   port that
          provides for the transport of many VP and VC connections\n   between adjacent
          devices.\n                       <------VP Tunnel------>\n                 ATM
          Switch A             ATM Switch B\n                ------------             -----------\n
          \               |ATM       |_____________|ATM       |\n                |X-Connect
          |      .      |X-Connect |\n         VCL1   |Point     | VPL1 . VPL2 |Point
          \    |  VCL4\n      O---------|----X-----|----- . -----|----X-----|-----O\n
          \               |    X-----|----- . -----|----X     |\n                |
          \   |     |_____________|    |     |\n                ------------             ------------\n
          \                    | VCL2                   | VCL3\n                     O
          \                       O\n   Figure 6: Virtual Path Tunnel\n   In Figure
          6, a VP tunnel (denoted as VPL1 by Switch A, and as VPL2 by\n   Switch B)
          is used to connect VCL1 with VCL4 and VCL2 with VCL3.\n   Figure 6 shows
          only one VP tunnel, but there can be multiple VP\n   tunnels over the same
          physical interface.\n   A particularly useful VP tunnel scenario is tunneling
          across a public\n   network that does not support signalling.  In Figure
          6 above, assume\n   Switches A and B are private switches that signal over
          the VP to set\n   up connections transparently through the public network.
          \ The public\n   network would just transport a PVC VP between the two switches.\n
          \  Because the VP Tunnel constitutes an interface between two ATM\n   devices
          that are not necessarily physically adjacent, most of the\n   management
          information pertaining to the interface may differ for the\n   tunnel, including:\n
          \  -  active VPI/VCI fields (the tunnel may be a subset of the parent\n
          \     interface).\n   -  maximum number of VCCs\n   -  configured VCCs\n
          \  -  ILMI VPI/VCI values\n   -  ATM address type\n   -  ATM administrative
          address\n   -  received/transmitted cells.\n"
        title: 3.1.10.1.  ATM Logical Port Interface
      - contents:
        - "3.1.10.2.  How to create an ATM Logical Port interface\n      On ATM devices
          supporting VP tunnels, the ATM Logical Port\n      Interface Table can be
          used to create VP tunnels.  To create an\n      ATM Logical Port interface
          via SNMP:\n         - Create a VPL (e.g., VPI=a on an existing ATM interface\n
          \          which has ifIndex=x) in the atmVplTable.\n         - Set the
          object atmVplLogicalPortDef to isLogicalIf.\n           A new row in the
          ifTable is then created by the agent,\n           with ifIndex=y, to represent
          the ATM Logical Port\n           interface.  The object atmVplLogicalPortIndex
          is also\n           set to y by the agent to represent the ifIndex value
          of\n           the ATM Logical Port interface.\n         - The ifEntry values
          are set for the ATM Logical\n           Port interface (ifIndex=y) as discussed
          in RFC\n           2515, with the following exceptions:\n               *
          ifType - a new enumerated value of atmLogical(80)\n                 was
          added to IANAifType, specifying an \"ATM\n                 Logical Port\"
          interface.\n               * ifSpeed - The total bandwidth in bits per\n
          \                second for use by the ATM layer.  Computed\n                 from
          the traffic descriptor for the VPL.\n               * ifOperStatus - determined
          hierarchically,\n                 depending on the state of the physical\n
          \                atm-cell layer interface beneath it,\n                 and
          the ILMI on the VP.\n            * ifInOctets, ifOutOctets - support of\n
          \             these objects is not mandatory for ATM\n              Logical
          Port interfaces.\n            * ifInErrors - always zero, HEC errors are\n
          \             specified for the atm cell-layer interface\n              beneath
          it.\n            * ifInUnknownProtos - always zero, errors\n              are
          specified for the atm cell-layer\n              interface beneath it.\n
          \     - The atmInterfaceConfEntry values are set and reported\n        as
          discussed in [RFC2515], with the following exceptions:\n            * atmInterfaceMaxVpcs
          - 0.\n            * atmInterfaceConfVpcs - 0.\n            * atmInterfaceIlmiVpi
          - VPI of the VP tunnel.\n      - The atmInterfaceExtEntry values are set
          and reported\n        as follows:\n            * atmInterfaceConfMaxSvpcVpi
          - VPI of the VP tunnel,\n              although VPCs cannot be setup on
          a VP tunnel.\n            * atmInterfaceCurrentMaxSvpcVpi - VPI of VP tunnel,\n
          \             although VPCs cannot be setup on a VP tunnel.\n            *
          atmInterfaceConfMaxSvccVpi - VPI of the VP tunnel.\n            * atmInterfaceCurrentMaxSvccVpi
          - VPI of VP tunnel.\n            * atmIntfPvcFailures - Includes failures
          of PVCLs\n              within the VP tunnel, but not of the PVPL itself,\n
          \             since those are reported on the atm(37) interface.\n            *
          atmIntfCurrentlyFailingPVpls - 0.\n            * atmIntfPvcFailuresTrapEnable
          - Enables traps for\n              PVCL failures within the VP tunnel, but
          not for\n              the PVPL itself, since the latter are generated on\n
          \             behalf of the atm(37) interface.\n      - An entry is created
          in the ifStackTable, with\n        values: ifStackHigherLayer=y, ifStackLowerLayer=x.\n
          \     - VCLs defined on the VP tunnel are indexed by\n        ifIndex=y,
          VPI=a, VCI.\n"
        title: 3.1.10.2.  How to create an ATM Logical Port interface
      title: 3.1.10.  ATM VPL Logical Port Table
    - contents:
      - "3.1.11.  ATM VCL Statistics Table\n      The atmVclStatTable includes per-VCL
        cell counters.  The VCL cell\n      counters count the valid ATM cells.  The
        valid ATM cells include\n      the user and OAM cells but exclude the physical
        layer (e.g., idle\n      cells) and unassigned cells.  Cells coming into an
        ATM managed\n      system are counted differently with the high Cell Loss
        Priority\n      (CLP=0) or low Cell Loss Priority (CLP=1).  The cells are
        tagged,\n      passed or discarded depending on the incoming CLP value and
        the\n      policed cell rate by the \"traffic policing\" entity in the ATM\n
        \     managed system.  Refer to [ATM Forum 3.0] and [ATM Forum UNI 3.1]\n
        \     for the description of the traffic policing.\n      In a switch where
        the traffic policing is not supported, cells are\n      passed or discarded
        depending on the bandwidth and buffering\n      capacity of the switching
        fabric.  The Output Tagged Cells\n      counter, in this case, is always zero.\n
        \                _______________\n                 | ATM Managed |\n      Input
        \     | System      | Output\n      CLP=0 cells|             | CLP=0 cells\n
        \     ---------->|             |----------->\n      CLP=1 cells| (traffic
        \   | CLP=1 cells\n      ---------->| policing    |----------->\n                 |
        entity)     | Tagged cells (CLP=1)\n                 |_____________|----------->\n
        \                 |Discard  | Discard\n                  |CLP=0    | CLP=1\n
        \                 |cells    | cells\n                  |         |\n                  V
        \        V\n   Figure 7: ATM Cell Counters per VCL\n   In this table, cells
        coming into and out of the managed ATM system\n   are counted as the total
        number of cells and the cells with the\n   CLP=0.  The CLP=1 counter is derived
        by subtracting CLP=0 cells from\n   the total cells.  In addition, cells that
        are tagged on the output\n   are also counted.  The output CLP=1 cells equals
        the total cells out\n   count minus both the CLP=0 cells and the tagged cells.\n"
      title: 3.1.11.  ATM VCL Statistics Table
    - contents:
      - "3.1.12.  ATM VC General Information Table\n   This table contains the general
        information for each VC.  It provides\n   an index to the atmSigDescrParamTable
        defined in this MIB.  This\n   table is an extension to the atmVclTable defined
        in the ATM-MIB\n   [RFC2515].\n"
      title: 3.1.12.  ATM VC General Information Table
    - contents:
      - "3.1.13.  ATM Interface Configuration Extension Table\n   The ATM Interface
        Configuration Extension Table contains ATM\n   interface information that
        supplements the atmInterfaceConfTable\n   defined in [RFC2515].  It includes
        the configuration information of\n   the interface type (i.e., connection
        setup procedures) and ILMI.\n   A network manager can configure the interface
        to run a specific type\n   of connection setup procedures (i.e., protocol
        and version) such as\n   ITU-T DSS2, ATM Forum UNI 3.1, PNNI 1.0 or BICI 2.0.
        \ It can also\n   dictate the role of the managed entity as one side of the
        interface.\n   For example, if an interface is configured to run ATM Forum
        UNI 3.1,\n   the managed entity has to be told to run as either the network
        side\n   or the user side of the UNI.\n   The objects atmIntfConfigType and
        atmIntfConfigSide are used for\n   configuration and the objects atmIntfActualType
        and atmIntfActualSide\n   are used for reading back the actual interface protocol
        and version.\n   The following table describes all the valid combinations
        of\n   configuration of the interface type and side.  Note that the value\n
        \  N/A meaning not applicable, should be set to the value other(1) when\n
        \  used.\n      atmIntfConfigType          atmIntfConfigSide\n      -----------------
        \         -----------------\n      autoConfig                 N/A\n      ituDss2
        \                   user/network\n      atmfUni3Dot0               user/network\n
        \     atmfUni3Dot1               user/network\n      atmfUni4Dot0               user/network\n
        \     atmfIispUni3Dot0           user/network\n      atmfIispUni3Dot1           user/network\n
        \     atmfIispUni4Dot0           user/network\n      atmfPnni1Dot0              N/A\n
        \     atmfBici2Dot0              N/A\n      atmfUniPvcOnly             user/network\n
        \     atmfNniPvcOnly             N/A\n   When the value of the object atmIntfConfigType
        is configured to\n   autoConfig(2), the interface type is determined via the
        ATM Forum\n   ILMI auto-configuration procedures [ATM Forum ILMI].  There
        is no\n   need to set the interface side since it should be a derived value.\n
        \  The PNNI and BICI interfaces are always symmetric so setting the\n   interface
        side is also not necessary.\n   This table also includes the configured and
        negotiated maximum VPI\n   value per ATM interface, and the configured and
        negotiated minimum\n   VCI value per ATM interface.  Refer to [ATM Forum ILMI]
        Sections\n   8.2.3.8 through 8.2.3.10 for a detailed description.\n   The
        following figure provides an example how the current minimum VCI\n   values
        are derived from the configured minimum VCI values and the\n   neighboring
        minimum VCI values:\n   +--------+              +--------+              +--------+\n
        \  |  ATM   | ifA      ifB |  ATM   | ifC      ifD |  ATM   |\n   | Device
        |--------------| Device |--------------| Device |\n   +--------+              +--------+
        \             +--------+\n        ifA:  Configured Min SVCC VCI = 32  (configured)\n
        \             Current Min SVCC VCI    = 40  (negotiated)\n        ifB:  Configured
        Min SVCC VCI = 40  (configured)\n              Current Min SVCC VCI    = 40
        \ (negotiated)\n        ifC:  Configured Min SVCC VCI = 32  (configured)\n
        \             Current Min SVCC VCI    = 32  (negotiated)\n        ifD:  Configured
        Min SVCC VCI = 32  (configured)\n              Current Min SVCC VCI    = 32
        \ (negotiated)\n   Between ifA and ifB, the maximum of the two vales for\n
        \  atmInterfaceConfMinSvccVci is 40, so both interfaces set their\n   atmInterfaceCurrentMinSvccVci
        values to 40.  On the other hand, since\n   ifC and ifD both are configured
        with atmInterfaceConfMinSvccVci\n   values of 32, they set their atmInterfaceCurrentMinSvccVci
        values to\n   32.\n   Figure 8: Examples of configured vs. negotiated ILMI
        values\n"
      title: 3.1.13.  ATM Interface Configuration Extension Table
    - contents:
      - "3.1.14.  ATM ILMI Service Registry Table\n   This table contains information
        used by the switch/service to inform\n   ATM hosts of the location of ATM
        network services such as the LAN\n   Emulation Configuration Server (LECS),
        the ATM Name Server (ANS), the\n   ATMARP Server, the Multicast Address Resolution
        Server (MARS), and\n   the NHRP Server (NHS).  Entries in this table are exported
        to\n   adjacent devices via ILMI over either all or a few user selected ATM\n
        \  interfaces.\n   As an example, let's assume that:\n   -  An ATM switch
        X has three interfaces if1, if2 and if3.\n   -  There are two ATM network
        services offered, a1.a2...aN and\n      b1.b2...bN, where a1.a2...aN is an
        object identifier used to\n      identify the first service, and b1.b2...bN
        is the object\n      identifier for the other service.\n   -  The first service
        is available at the ATM address 'a'.\n   -  The second service is available
        at the ATM address 'b'.\n   -  The first service can be used by any device
        connecting to the\n      switch X.\n   -  The second service can be used only
        by devices that connect to\n      interfaces if1 and if3 on switch X.\n     +------------------+
        \   +------------------+\n     |service a1.a2...aN|    |service b1.b2...bN|\n
        \    |                  |    |                  |\n     | ATM address = a
        \ |    | ATM address = b  |\n     +--------+---------+    +--------+---------+\n
        \             |                       |\n              |                       |\n
        \    +--------+-----------------------+---------+\n     |             ATM
        NETWORK                  |\n     +-----------------+------------------------+\n
        \                      |\n                       |\n                +-------------+\n
        \               |  switch X   |\n                +-+----+----+-+\n                  |
        \   |    |\n                  |    |    |\n                 if1  if2  if3
        \  (interfaces)\n       Figure 9: ATM topology with registered services\n
        \  The table for switch X will contain three entries:\n    - one entry for
        the \"a1.a2...aN\", implicitly available to any\n      devices on switch X.\n
        \   - two entries for the \"b1.b2...bN\" (one for each interface\n      where
        this service can be explicitly used).\n   The content of the table is:\n    -
        Service Identifier:   a1.a2...aN    b1.b2...bN   b1.b2...bN\n    - ATM address:
        \             a             b            b\n    - Arbitrary index:          m
        \            n            p\n    - Available interface:      0             1
        \           3\n   where the Service Identifier values a1.a2...aN and b1.b2...bN
        are\n   represented by atmIlmiSrvcRegServiceID, the ATM addresses a and b
        are\n   represented by atmIlmiSrvcRegATMAddress, the values m, n, and p are\n
        \  arbitrary non-zero integer parameters (necessary in this example to\n   differentiate
        the two entries for b1.b2...bN that are both available\n   at the ATM address
        'b') represented by atmIlmiSrvcRegAddressIndex,\n   and the available interfaces
        are represented by atmIlmiSrvcRegIndex,\n   where the special value 0 indicates
        any ATM interface.\n   When querying the ILMI service registry table, through
        the ILMI\n   protocol:\n   -  the device attached to interface if1 will obtain
        the address a and\n      b.\n   -  the device attached to interface if2 will
        obtain the address a\n      only.\n   -  the device attached to interface
        if3 will obtain the address a and\n      b.\n"
      title: 3.1.14.  ATM ILMI Service Registry Table
    - contents:
      - "3.1.15.  ILMI Network Prefix Table\n   A table specifying per-interface network
        prefix(es) supplied by the\n   network side of the UNI during ILMI address
        registration.  When no\n   network prefixes are specified for a particular
        interface, one or\n   more network prefixes based on the switch address(es)
        may be used for\n   ILMI address registration.\n"
      title: 3.1.15.  ILMI Network Prefix Table
    - contents:
      - "3.1.16.  ATM Switch Address Table\n   This table contains one or more ATM
        endsystem addresses on a per-\n   switch basis.  These addresses are used
        to identify the switch.  When\n   no ILMI network prefixes are configured
        for certain interfaces,\n   network prefixes based on the switch address(es)
        may be used for ILMI\n   address registration.\n"
      title: 3.1.16.  ATM Switch Address Table
    - contents:
      - "3.1.17.  AAL5 per-VCC Statistics Table\n   This table contains the AAL5 statistics
        for the VCCs.\n"
      title: 3.1.17.  AAL5 per-VCC Statistics Table
    - contents:
      - "3.1.18.  ATM VP Cross-Connect Extension Table\n   This table extends the
        atmVpCrossConnectTable defined in ATM-MIB\n   [RFC2515].\n"
      title: 3.1.18.  ATM VP Cross-Connect Extension Table
    - contents:
      - "3.1.19.  ATM VC Cross-Connect Extension Table\n   This table extends the
        atmVcCrossConnectTable defined in ATM-MIB\n   [RFC2515].\n"
      title: 3.1.19.  ATM VC Cross-Connect Extension Table
    - contents:
      - "3.1.20.  Currently Failing PVPL Table\n   This table contains all the PVPLs
        that are in trouble.\n"
      title: 3.1.20.  Currently Failing PVPL Table
    - contents:
      - "3.1.21.  Currently Failing PVCL Table\n   This table contains all the PVCLs
        that are in trouble.\n"
      title: 3.1.21.  Currently Failing PVCL Table
    - contents:
      - "3.1.22.  Leaf Initiated Join Counter support\n   Two counter objects are
        added to count the number of leaf intiated\n   setup requests and setup failures.\n"
      title: 3.1.22.  Leaf Initiated Join Counter support
    title: 3.1.  Structure
  - contents:
    - "3.2.  Network and User Addresses\n   At the user side of a given ATM UNI interface
      there may be an\n   address, \"ifPhysAddress\", to identify the interface.  In
      addition,\n   there may be several other addresses which can be used to originate\n
      \  and receive calls.  These other addresses that are used to receive\n   calls
      are listed in the \"ifRcvAddrTable\" defined in RFC 2863.  The\n   registered
      addresses on the network side are listed in the ATM\n   Registered Address Table.
      \ The ATM Registered Address Table is\n   supported by switches and network
      services.  It is not supported by\n   hosts.\n"
    title: 3.2.  Network and User Addresses
  - contents:
    - "3.3.  Configuration of VPLs, VCLs, and Cross-Connects\n   The ATM Managed Objects
      needed to support the configuration of VPLs,\n   VCLs, and Cross-Connects of
      the Permanent VPLs and VCLs are defined\n   in the ATM-MIB [RFC2515].  Cross-Connects
      of the Switched VPLs and\n   VCLs are defined in this memo.\n"
    title: 3.3.  Configuration of VPLs, VCLs, and Cross-Connects
  - contents:
    - "3.4.  ATM-related Trap Support\n   Traps are defined to detect changes in the
      status of permanent VPLs\n   and VCLs.  The current up/down status of each permanent
      VPL or VCL is\n   indicated by the atmVplOperStatus or atmVclOperStatus object,\n
      \  respectively.  Several tables and objects and one trap are defined in\n   order
      to help network managers quickly and efficiently detect changes\n   in the status
      of permanent virtual links.  Through use of these\n   tables, objects, and traps,
      the time consuming and resource intensive\n   task of continuously polling each
      row in the entire atmVplTable and\n   atmVclTable can be avoided.\n   The atmIntfPvcFailures
      counter and the atmIntfCurrentlyFailingPVpls\n   and atmIntfCurrentlyFailingPVcls
      gauges provide a quick means of\n   determining the status of all PVPLs and
      PVCLs on an interface.  The\n   atmCurrentlyFailingPVplTable and the atmCurrentlyFailingPVclTable\n
      \  list all of the problematic PVPLs and PVCLs, respectively, allowing\n   them
      to be quickly identified.\n   The atmIntfPvcFailuresTrap is generated just after
      a PVPL or PVCL on\n   a particular interface leaves the 'up' operational state.
      \ Managers\n   can then determine which PVPLs and/or PVCLs are failing by reading\n
      \  the atmCurrentlyFailingPVplTable and the\n   atmCurrentlyFailingPVclTable.
      \ Generation of the\n   atmIntfPvcFailuresTrap is rate limited by suppressing
      all traps that\n   would occur within atmIntfPvcNotificationInterval of a previous
      trap\n   for the same interface.  Managers should continuously poll the tables\n
      \  and objects mentioned above for at least this amount of time in order\n   to
      keep up with the state of the network.\n"
    title: 3.4.  ATM-related Trap Support
  title: 3.  Conventions used in the MIB
- contents:
  - "4.  Conformance and Compliance\n   See the conformance and compliance statements
    within the information\n   module.\n"
  title: 4.  Conformance and Compliance
- contents:
  - '5.  Definitions

    '
  - "ATM2-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY, OBJECT-TYPE,
    NOTIFICATION-TYPE,\n       Gauge32, Counter32, Integer32\n           FROM SNMPv2-SMI\n
    \      TruthValue, RowStatus, TimeStamp\n           FROM SNMPv2-TC\n       MODULE-COMPLIANCE,
    OBJECT-GROUP, NOTIFICATION-GROUP\n           FROM SNMPv2-CONF\n       SnmpAdminString\n
    \          FROM SNMP-FRAMEWORK-MIB\n       InterfaceIndex, InterfaceIndexOrZero,
    ifIndex\n           FROM IF-MIB\n       atmMIBObjects, atmInterfaceConfEntry,\n
    \      atmVplEntry, atmVplVpi,\n       atmVclEntry, atmVclVpi, atmVclVci,\n       atmVpCrossConnectEntry,
    atmVcCrossConnectEntry\n           FROM ATM-MIB\n       AtmAddr, AtmSigDescrParamIndex,\n
    \      AtmInterfaceType, AtmIlmiNetworkPrefix,\n       AtmVcIdentifier, AtmVpIdentifier,\n
    \      AtmTrafficDescrParamIndex\n           FROM ATM-TC-MIB;\n   atm2MIB MODULE-IDENTITY\n
    \      LAST-UPDATED \"200309230000Z\"\n       ORGANIZATION \"IETF AToMMIB Working
    Group\"\n       CONTACT-INFO\n         \"AToMMIB WG\n             http://www.ietf.org/html.charters/atommib-charter.html\n
    \          Editors:\n                    Faye Ly\n           Postal:  Pedestal
    Networks\n                    6503 Dumbarton Circle\n                    Fremont,
    CA 94555\n                    USA\n           Tel:     +1 510 896 2908\n           E-Mail:
    \ faye@pedestalnetworks.com\n                    Michael Noto\n           Postal:
    \ Cisco Systems\n                    170 W. Tasman Drive\n                    San
    Jose, CA 95134-1706\n                    USA\n           E-mail:  mnoto@cisco.com\n
    \                   Andrew Smith\n           Postal:  Consultant\n           E-Mail:
    \ ah_smith@acm.org\n                    Ethan Mickey Spiegel\n           Postal:
    \ Cisco Systems\n                    170 W. Tasman Drive\n                    San
    Jose, CA 95134-1706\n                    USA\n           Tel:     +1 408 526 6408\n
    \          Fax:     +1 408 526 6488\n           E-Mail:  mspiegel@cisco.com\n
    \                   Kaj Tesink\n           Postal:  Telcordia Technologies\n                    331
    Newman Springs Road\n                    Red Bank, NJ 07701\n                    USA\n
    \          Tel:     +1 732 758 5254\n           E-mail:  kaj@research.telcordia.com\"\n
    \      DESCRIPTION\n         \"Copyright (C) The Internet Society (2003). This
    version of\n         this MIB module is part of RFC 3606; see the RFC itself for\n
    \        full legal notices.\n         This MIB Module is a supplement to the
    ATM-MIB\n         defined in RFC 2515.\"\n       REVISION \"200309230000Z\"\n
    \      DESCRIPTION\n         \"Initial version of this MIB, published as RFC 3606.\"\n
    \        ::= { atmMIBObjects 14 }\n   atm2MIBObjects  OBJECT IDENTIFIER ::= {atm2MIB
    1}\n   atm2MIBTraps OBJECT IDENTIFIER ::= {atm2MIB 2}\n   -- This ATM2-MIB Module
    consists of the following tables,\n   -- plus ATM trap support:\n   --      1.
    atmSvcVpCrossConnectTable\n   --      2. atmSvcVcCrossConnectTable\n   --      3.
    atmSigStatTable\n   --      4. atmSigSupportTable\n   --      5. atmSigDescrParamTable\n
    \  --      6. atmIfRegisteredAddrTable\n   --      7. atmVclAddrTable\n   --      8.
    atmAddrVclTable\n   --      9. atmVplStatTable\n   --      10. atmVplLogicalPortTable\n
    \  --      11. atmVclStatTable\n   --      12. atmAal5VclStatTable\n   --      13.
    atmVclGenTable\n   --      14. atmInterfaceExtTable\n   --      15. atmIlmiSrvcRegTable\n
    \  --      16. atmIlmiNetworkPrefixTable\n   --      17. atmSwitchAddressTable\n
    \  --      18. atmVpCrossConnectXTable\n   --      19. atmVcCrossConnectXTable\n
    \  --      20. atmCurrentlyFailingPVplTable\n   --      21. atmCurrentlyFailingPVclTable\n
    \  -- 1. ATM VPL SVC Cross-Connect Table\n   atmSvcVpCrossConnectTable OBJECT-TYPE\n
    \      SYNTAX       SEQUENCE OF\n                    AtmSvcVpCrossConnectEntry\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \        \"The ATM SVPC Cross-Connect table.  A\n         bi-directional VP cross-connect
    between two\n         switched VPLs is modeled as one entry in this\n         table.
    \ A Soft PVPC cross-connect, between a\n         soft permanent VPL and a switched
    VPL, is\n         also modeled as one entry in this table.\"\n       ::= { atm2MIBObjects
    1 }\n   atmSvcVpCrossConnectEntry OBJECT-TYPE\n       SYNTAX       AtmSvcVpCrossConnectEntry\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \        \"An entry in the ATM SVPC Cross-Connect table.\n         This entry
    is used to model a bi-directional\n         ATM VP cross-connect between two VPLs.\"\n
    \      INDEX { atmSvcVpCrossConnectIndex,\n               atmSvcVpCrossConnectLowIfIndex,\n
    \              atmSvcVpCrossConnectLowVpi,\n               atmSvcVpCrossConnectHighIfIndex,\n
    \              atmSvcVpCrossConnectHighVpi }\n       ::= { atmSvcVpCrossConnectTable
    1 }\n   AtmSvcVpCrossConnectEntry ::= SEQUENCE {\n       atmSvcVpCrossConnectIndex
    \          INTEGER,\n       atmSvcVpCrossConnectLowIfIndex      InterfaceIndex,\n
    \      atmSvcVpCrossConnectLowVpi          AtmVpIdentifier,\n       atmSvcVpCrossConnectHighIfIndex
    \    InterfaceIndex,\n       atmSvcVpCrossConnectHighVpi         AtmVpIdentifier,\n
    \      atmSvcVpCrossConnectCreationTime    TimeStamp,\n       atmSvcVpCrossConnectRowStatus
    \      RowStatus\n                     }\n   atmSvcVpCrossConnectIndex OBJECT-TYPE\n
    \      SYNTAX       INTEGER (1..2147483647)\n       MAX-ACCESS   not-accessible\n
    \      STATUS       current\n       DESCRIPTION\n         \"A unique value to
    identify this SVPC\n         cross-connect.  For each VP associated\n         with
    this cross-connect, the agent reports\n         this cross-connect index value
    in the\n         atmVplCrossConnectIdentifer attribute of the\n         corresponding
    atmVplTable entries.\"\n       ::= { atmSvcVpCrossConnectEntry 1 }\n   atmSvcVpCrossConnectLowIfIndex
    OBJECT-TYPE\n       SYNTAX       InterfaceIndex\n       MAX-ACCESS   not-accessible\n
    \      STATUS       current\n       DESCRIPTION\n         \"The value of this
    object is equal to the\n         ifIndex value of the ATM interface port for this\n
    \        SVPC cross-connect.  The term low implies\n         that this ATM interface
    has the numerically lower\n         ifIndex value than the other ATM interface\n
    \        identified in the same atmSvcVpCrossConnectEntry.\"\n       ::= { atmSvcVpCrossConnectEntry
    2 }\n   atmSvcVpCrossConnectLowVpi OBJECT-TYPE\n       SYNTAX       AtmVpIdentifier\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \        \"The value of this object is equal to the VPI\n         value associated
    with the SVPC cross-connect\n         at the ATM interface that is identified
    by\n         atmSvcVpCrossConnectLowIfIndex.  The VPI value\n         cannot exceed
    the number supported by the\n         atmInterfaceCurrentMaxSvpcVpi at the low
    ATM interface\n         port.\"\n       ::= { atmSvcVpCrossConnectEntry 3 }\n
    \  atmSvcVpCrossConnectHighIfIndex OBJECT-TYPE\n       SYNTAX       InterfaceIndex\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the\n         ifIndex value of
    the ATM interface port for\n         this SVC VP cross-connect.  The term high\n
    \        implies that this ATM interface has the\n         numerically higher
    ifIndex value than the\n         other ATM interface identified in the same\n
    \        atmSvcVpCrossConnectEntry.\"\n       ::= { atmSvcVpCrossConnectEntry
    4 }\n   atmSvcVpCrossConnectHighVpi OBJECT-TYPE\n       SYNTAX       AtmVpIdentifier\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the VPI\n         value associated
    with the SVPC cross-connect\n         at the ATM interface that is identified
    by\n         atmSvcVpCrossConnectHighIfIndex.  The VPI value\n         cannot
    exceed the number supported by the\n         atmInterfaceCurrentMaxSvpcVpi at
    the high ATM interface\n         port.\"\n       ::= { atmSvcVpCrossConnectEntry
    5 }\n   atmSvcVpCrossConnectCreationTime OBJECT-TYPE\n       SYNTAX       TimeStamp\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of the sysUpTime object\n         at the time this bi-directional
    SVPC\n         cross-connect was created.  If the current\n         state was
    entered prior to the last\n         re-initialization of the agent, then this\n
    \        object contains a zero value.\"\n       ::= { atmSvcVpCrossConnectEntry
    6 }\n   atmSvcVpCrossConnectRowStatus OBJECT-TYPE\n       SYNTAX       RowStatus\n
    \      MAX-ACCESS   read-write\n       STATUS       current\n       DESCRIPTION\n
    \          \"This object is used to delete rows in the\n            atmSvcVpCrossConnectTable.\"\n
    \      ::= { atmSvcVpCrossConnectEntry 7 }\n   -- 2. ATM VCL SVC Cross-Connect
    Table\n   atmSvcVcCrossConnectTable OBJECT-TYPE\n       SYNTAX       SEQUENCE
    OF AtmSvcVcCrossConnectEntry\n       MAX-ACCESS   not-accessible\n       STATUS
    \      current\n       DESCRIPTION\n        \"The ATM SVCC Cross-Connect table.
    \ A\n         bi-directional VC cross-connect between two\n         switched VCLs
    is modeled as one entry in\n         this table.  A Soft PVCC cross-connect,\n
    \        between a soft permanent VCL and a switched\n         VCL, is also modeled
    as one entry in this\n         table.\"\n       ::= { atm2MIBObjects 2 }\n   atmSvcVcCrossConnectEntry
    OBJECT-TYPE\n       SYNTAX       AtmSvcVcCrossConnectEntry\n       MAX-ACCESS
    \  not-accessible\n       STATUS       current\n       DESCRIPTION\n        \"An
    entry in the ATM SVCC Cross-Connect table.\n         This entry is used to model
    a bi-directional ATM\n         VC cross-connect between two VCLs.\"\n       INDEX
    { atmSvcVcCrossConnectIndex,\n               atmSvcVcCrossConnectLowIfIndex,\n
    \              atmSvcVcCrossConnectLowVpi,\n               atmSvcVcCrossConnectLowVci,\n
    \              atmSvcVcCrossConnectHighIfIndex,\n               atmSvcVcCrossConnectHighVpi,\n
    \              atmSvcVcCrossConnectHighVci }\n       ::= { atmSvcVcCrossConnectTable
    1 }\n   AtmSvcVcCrossConnectEntry ::= SEQUENCE {\n       atmSvcVcCrossConnectIndex
    \          INTEGER,\n       atmSvcVcCrossConnectLowIfIndex      InterfaceIndex,\n
    \      atmSvcVcCrossConnectLowVpi          AtmVpIdentifier,\n       atmSvcVcCrossConnectLowVci
    \         AtmVcIdentifier,\n       atmSvcVcCrossConnectHighIfIndex     InterfaceIndex,\n
    \      atmSvcVcCrossConnectHighVpi         AtmVpIdentifier,\n       atmSvcVcCrossConnectHighVci
    \        AtmVcIdentifier,\n       atmSvcVcCrossConnectCreationTime    TimeStamp,\n
    \      atmSvcVcCrossConnectRowStatus       RowStatus\n               }\n   atmSvcVcCrossConnectIndex
    OBJECT-TYPE\n       SYNTAX       INTEGER (1..2147483647)\n       MAX-ACCESS   not-accessible\n
    \      STATUS       current\n       DESCRIPTION\n        \"A unique value to identify
    this SVCC cross-connect.\n         For each VP associated with this cross-connect,
    the\n         agent reports this cross-connect index value in the\n         atmVclCrossConnectIdentifier
    attribute of the\n         corresponding atmVplTable entries.\"\n       ::= {
    atmSvcVcCrossConnectEntry 1 }\n   atmSvcVcCrossConnectLowIfIndex OBJECT-TYPE\n
    \      SYNTAX       InterfaceIndex\n       MAX-ACCESS   not-accessible\n       STATUS
    \      current\n       DESCRIPTION\n        \"The value of this object is equal
    to the\n         ifIndex value of the ATM interface port for this\n         SVCC
    cross-connect.  The term low implies that\n         this ATM interface has the
    numerically lower\n         ifIndex value than the other ATM interface\n         identified
    in the same atmSvcVcCrossConnectEntry.\"\n       ::= { atmSvcVcCrossConnectEntry
    2 }\n   atmSvcVcCrossConnectLowVpi OBJECT-TYPE\n       SYNTAX       AtmVpIdentifier\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the VPI\n         value associated
    with the SVCC cross-connect\n         at the ATM interface that is identified
    by\n         atmSvcVcCrossConnectLowIfIndex.  The VPI value\n         cannot exceed
    the number supported by the\n         atmInterfaceCurrentMaxSvccVpi at the low
    ATM interface\n         port.\"\n       ::= { atmSvcVcCrossConnectEntry 3 }\n
    \  atmSvcVcCrossConnectLowVci OBJECT-TYPE\n       SYNTAX       AtmVcIdentifier\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the VCI\n         value associated
    with the SVCC cross-connect\n         at the ATM interface that is identified
    by\n         atmSvcVcCrossConnectLowIfIndex.  The VCI value\n         cannot exceed
    the number supported by the\n         atmInterfaceCurrentMaxSvccVci at the low
    ATM interface\n         port.\"\n       ::= { atmSvcVcCrossConnectEntry 4 }\n
    \  atmSvcVcCrossConnectHighIfIndex OBJECT-TYPE\n       SYNTAX       InterfaceIndex\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the\n         ifIndex value for
    the ATM interface port for\n         this SVCC cross-connect.  The term high implies\n
    \        that this ATM interface has the numerically\n         higher ifIndex
    value than the other ATM interface\n         identified in the same atmSvcVcCrossConnectEntry.\"\n
    \      ::= { atmSvcVcCrossConnectEntry 5 }\n   atmSvcVcCrossConnectHighVpi OBJECT-TYPE\n
    \      SYNTAX       AtmVpIdentifier\n       MAX-ACCESS   not-accessible\n       STATUS
    \      current\n       DESCRIPTION\n        \"The value of this object is equal
    to the VPI\n         value associated with the SVCC cross-connect\n         at
    the ATM interface that is identified by\n         atmSvcVcCrossConnectHighIfIndex.
    \ The VPI value\n         cannot exceed the number supported by the\n         atmInterfaceCurrentMaxSvccVpi
    at the high ATM interface\n         port.\"\n       ::= { atmSvcVcCrossConnectEntry
    6 }\n   atmSvcVcCrossConnectHighVci OBJECT-TYPE\n       SYNTAX       AtmVcIdentifier\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of this object is equal to the VCI\n         value associated
    with the SVCC cross-connect\n         at the ATM interface that is identified
    by\n         atmSvcVcCrossConnectHighIfIndex.  The VCI value\n         cannot
    exceed the number supported by the\n         atmInterfaceMaxVciBits at the high
    ATM interface\n         port.\"\n       ::= { atmSvcVcCrossConnectEntry 7 }\n
    \  atmSvcVcCrossConnectCreationTime OBJECT-TYPE\n       SYNTAX       TimeStamp\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \       \"The value of the sysUpTime object\n         at the time this bi-directional
    SVCC\n         cross-connect was created.  If the current\n         state was
    entered prior to the last\n         re-initialization of the agent, then this\n
    \        object contains a zero value.\"\n       ::= { atmSvcVcCrossConnectEntry
    8 }\n   atmSvcVcCrossConnectRowStatus OBJECT-TYPE\n       SYNTAX       RowStatus\n
    \      MAX-ACCESS   read-write\n       STATUS       current\n       DESCRIPTION\n
    \          \"This object is used to delete rows in the\n            atmSvcVcCrossConnectTable.\"\n
    \      ::= { atmSvcVcCrossConnectEntry 9 }\n   -- 3. ATM Interface Signalling
    Statistics Table --\n   atmSigStatTable       OBJECT-TYPE\n       SYNTAX       SEQUENCE
    OF AtmSigStatEntry\n       MAX-ACCESS   not-accessible\n       STATUS       current\n
    \      DESCRIPTION\n        \"This table contains ATM interface signalling\n        statistics,
    one entry per ATM signalling\n        interface.\"\n       ::= { atm2MIBObjects
    3 }\n   atmSigStatEntry         OBJECT-TYPE\n       SYNTAX       AtmSigStatEntry\n
    \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
    \       \"This list contains signalling statistics variables.\"\n       INDEX
    { ifIndex }\n       ::= { atmSigStatTable  1}\n   AtmSigStatEntry    ::= SEQUENCE
    \ {\n       atmSigSSCOPConEvents            Counter32,\n       atmSigSSCOPErrdPdus
    \            Counter32,\n       atmSigDetectSetupAttempts       Counter32,\n       atmSigEmitSetupAttempts
    \        Counter32,\n       atmSigDetectUnavailRoutes       Counter32,\n       atmSigEmitUnavailRoutes
    \        Counter32,\n       atmSigDetectUnavailResrcs       Counter32,\n       atmSigEmitUnavailResrcs
    \        Counter32,\n       atmSigDetectCldPtyEvents        Counter32,\n       atmSigEmitCldPtyEvents
    \         Counter32,\n       atmSigDetectMsgErrors           Counter32,\n       atmSigEmitMsgErrors
    \            Counter32,\n       atmSigDetectClgPtyEvents        Counter32,\n       atmSigEmitClgPtyEvents
    \         Counter32,\n       atmSigDetectTimerExpireds       Counter32,\n       atmSigEmitTimerExpireds
    \        Counter32,\n       atmSigDetectRestarts            Counter32,\n       atmSigEmitRestarts
    \             Counter32,\n       atmSigInEstabls                 Counter32,\n
    \      atmSigOutEstabls                Counter32\n            }\n   atmSigSSCOPConEvents
    \  OBJECT-TYPE\n       SYNTAX       Counter32\n       MAX-ACCESS   read-only\n
    \      STATUS       current\n       DESCRIPTION\n           \"SSCOP Connection
    Events Counter.  This counter counts\n            the sum of the following errors:\n
    \           1) SSCOP Connection Disconnect Counter\n                The abnormal
    occurrence of this event is\n                characterized by the expiry of Timer_NO_RESPONSE.\n
    \               (This event is communicated to the layer management\n                with
    MAA-ERROR code P.  See ITU-T Q.2110.)\n             2) SSCOP Connection Initiation
    Failure\n                This condition indicates the inability to establish\n
    \               an SSCOP connection.  This event occurs whenever the\n                number
    of expiries of the connection control timer\n                (Timer_CC) equals
    or exceeds the MaxCC, or upon\n                receipt of a connection reject
    message BGREJ PDU.\n                (This event is communicated to layer management
    with\n                MAA-ERROR code O.  See ITU-T Q.2110.)\n             3) SSCOP
    Connection Re-Establ/Resynch\n                This event occurs upon receipt of
    a BGN PDU or\n                RS PDU.\"\n       REFERENCE\n           \"ITU-T
    Recommendation Q.2110, Broadband\n            Integrated Services Digital Network\n
    \           (B-ISDN) - ATM Adaptation Layer - Service\n            Specific Connection
    Oriented Protocol (SSCOP)\n            Specification, July 1994.\"\n       ::=
    { atmSigStatEntry 1}\n   atmSigSSCOPErrdPdus   OBJECT-TYPE\n       SYNTAX       Counter32\n
    \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
    \          \"SSCOP Errored PDUs Counter.  This counter counts the\n           sum
    of the following errors:\n           1) Invalid PDUs.\n              These are
    defined in SSCOP and consist of PDUs\n              with an incorrect length (MAA-ERROR
    code U), an\n              undefined PDU type code, or that are not 32-bit\n              aligned.\n
    \          2) PDUs that result in MAA-ERROR codes and are\n              discarded.\n
    \          See MAA-ERROR codes A-D, F-M, and Q-T defined in\n           ITU-T
    Q.2110.\"\n       REFERENCE\n           \"ITU-T Recommendation Q.2110, Broadband\n
    \           Integrated Services Digital Network\n            (B-ISDN) - ATM Adaptation
    Layer - Service\n            Specific Connection Oriented Protocol (SSCOP)\n            Specification,
    July 1994.\"\n       ::= { atmSigStatEntry 2 }\n   atmSigDetectSetupAttempts    OBJECT-TYPE\n
    \      SYNTAX       Counter32\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n           \"Call Setup Attempts Counter.  This counter counts\n
    \          the number of call setup attempts (both successful\n           and
    unsuccessful) detected on this interface.\"\n       ::= { atmSigStatEntry 3 }\n
    \  atmSigEmitSetupAttempts    OBJECT-TYPE\n       SYNTAX       Counter32\n       MAX-ACCESS
    \  read-only\n       STATUS       current\n       DESCRIPTION\n           \"Call
    Setup Attempts Counter.  This counter counts\n           the number of call setup
    attempts (both successful\n           and unsuccessful) transmitted on this interface.\"\n
    \      ::= { atmSigStatEntry 4 }\n   atmSigDetectUnavailRoutes    OBJECT-TYPE\n
    \      SYNTAX       Counter32\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n           \"Number of Route Unavailability detected on this
    interface.\n           This counter is incremented when a RELEASE, RELEASE COMPLETE\n
    \          (only when not preceded by a RELEASE message for the same\n           call),
    ADD PARTY REJECT, or STATUS message that\n           contains one of the following
    cause code values is\n           received (Note: These cause values\n           apply
    to both UNI3.0 and UNI3.1):\n           Cause Value            Meaning\n              1
    \           unallocated (unassigned) number\n              2            no route
    to specified transit network\n              3            no route to destination\n
    \          NOTE:  For this counter, RELEASE COMPLETE\n           messages that
    are a reply to a previous RELEASE\n           message and contain the same cause
    value, are\n           redundant (for counting purposes) and should not\n           be
    counted.\"\n       ::= { atmSigStatEntry 5 }\n   atmSigEmitUnavailRoutes    OBJECT-TYPE\n
    \      SYNTAX       Counter32\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n           \"Number of Route Unavailability transmitted from
    this\n           interface.  This counter is incremented when a RELEASE,\n           RELEASE
    COMPLETE (only when not preceded by a RELEASE\n           message for the same
    call), ADD PARTY REJECT, or\n           STATUS message that contains one of the
    following cause\n           code values is transmitted (Note: These cause values
    apply\n           to both UNI3.0 and UNI3.1):\n           Cause Value            Meaning\n
    \             1            unallocated (unassigned) number\n              2            no
    route to specified transit network\n              3            no route to destination\n
    \          NOTE:  For this counter, RELEASE COMPLETE\n           messages that
    are a reply to a previous RELEASE\n           message and contain the same cause
    value, are\n           redundant (for counting purposes) and should not\n           be
    counted.\"\n       ::= { atmSigStatEntry 6 }\n   atmSigDetectUnavailResrcs     OBJECT-TYPE\n
    \      SYNTAX       Counter32\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n           \"Number of Resource Unavailability detected on
    this\n           interface.  This counter is incremented when a RELEASE,\n           RELEASE
    COMPLETE (only when not preceded by a RELEASE\n           message for the same
    call), ADD PARTY REJECT, or\n           STATUS message that contains one of the
    following\n           cause code values is received (Note: These cause\n           values
    apply to both UNI3.0 and UNI3.1 unless\n           otherwise stated):\n           Cause
    Value          Meaning\n              35          requested VPCI/VCI not available\n
    \             37          user cell rate not available (UNI3.1\n                          only)\n
    \             38          network out of order\n              41          temporary
    failure\n              45          no VPCI/VCI available\n              47          resource
    unavailable, unspecified\n              49          Quality of Service unavailable\n
    \             51          user cell rate not available (UNI3.0\n                          only)\n
    \             58          bearer capability not presently\n                          available\n
    \             63          Service or option not available,\n                          unspecified\n
    \             92          too many pending add party requests\n           NOTE:
    \ For this counter, RELEASE COMPLETE\n           messages that are a reply to
    a previous RELEASE\n           message and contain the same cause value, are\n
    \          redundant (for counting purposes) and should not\n           be counted.\"\n
    \      ::= { atmSigStatEntry 7 }\n   atmSigEmitUnavailResrcs     OBJECT-TYPE\n
    \      SYNTAX       Counter32\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n          \"Number of Resource Unavailability transmitted
    from this\n          interface.  This counter is incremented when a RELEASE,\n
    \         RELEASE COMPLETE (only when not preceded by a RELEASE message\n          for
    the same call), ADD PARTY REJECT, or STATUS message that\n          contains one
    of the following cause code values is transmitted\n          (Note: These cause
    values apply to both UNI3.0 and UNI3.1\n          unless otherwise stated):\n
    \         Cause Value          Meaning\n             35          requested VPCI/VCI
    not available\n             37          user cell rate not available (UNI3.1\n
    \                        only)\n             38          network out of order\n
    \            41          temporary failure\n             45          no VPCI/VCI
    available\n             47          resource unavailable, unspecified\n             49
    \         Quality of Service unavailable\n             51          user cell rate
    not available (UNI3.0\n                         only)\n             58          bearer
    capability not presently\n                         available\n             63
    \         Service or option not available,\n                         unspecified\n
    \            92          too many pending add party requests\n          NOTE:
    \ For this counter, RELEASE COMPLETE messages that are a\n          reply to a
    previous RELEASE message and contain the same cause\n          value, are redundant
    (for counting purposes) and should not be\n          counted.\"\n      ::= { atmSigStatEntry
    8 }\n  atmSigDetectCldPtyEvents     OBJECT-TYPE\n      SYNTAX       Counter32\n
    \     MAX-ACCESS   read-only\n      STATUS       current\n      DESCRIPTION\n
    \        \"Number of Called Party Responsible For Unsuccessful Call\n         detected
    on this interface.  This counter is incremented when a\n         RELEASE, RELEASE
    COMPLETE (only when not preceded by a RELEASE\n         message for the same call),
    ADD PARTY REJECT, or STATUS message\n         that contains one of the following
    cause code values is\n         received (Note: These cause values apply to both
    UNI3.0 and\n         UNI3.1):\n         Cause Value         Meaning\n            17
    \          user busy\n            18           no user responding\n            21
    \          call rejected\n            22           number changed\n            23
    \          user rejects all calls with calling\n                         line
    identification restriction (CLIR)\n            27           destination out of
    order\n            31           normal, unspecified\n            88           incompatible
    destination\n         NOTE:  For this counter, RELEASE COMPLETE messages that
    are a\n         reply to a previous RELEASE message and contain the same cause\n
    \        value, are redundant (for counting purposes) and should not be\n         counted.\n
    \        Note: Cause Value #30 'response to STATUS ENQUIRY' was not\n         included
    in this memo since it did not apply to a hard\n         failure.\"\n     ::= {
    atmSigStatEntry 9 }\n atmSigEmitCldPtyEvents     OBJECT-TYPE\n     SYNTAX       Counter32\n
    \    MAX-ACCESS   read-only\n     STATUS       current\n     DESCRIPTION\n        \"Number
    of Called Party Responsible For Unsuccessful Call\n        transmitted from this
    interface.  This counter is incremented\n        when a RELEASE, RELEASE COMPLETE
    (only when not preceded by a\n        RELEASE message for the same call), ADD
    PARTY REJECT, or STATUS\n        message that contains one of the following cause
    code values is\n        transmitted (Note: These cause values apply to both UNI3.0
    and\n        UNI3.1):\n        Cause Value         Meaning\n           17           user
    busy\n           18           no user responding\n           21           call
    rejected\n           22           number changed\n           23           user
    rejects all calls with calling\n                        line identification restriction
    (CLIR)\n           27           destination out of order\n           31           normal,
    unspecified\n           88           incompatible destination\n        NOTE:  For
    this counter, RELEASE COMPLETE messages that are a\n        reply to a previous
    RELEASE message and contain the same cause\n        value, are redundant (for
    counting purposes) and should not be\n        counted.\n        Note: Cause Value
    #30 'response to STATUS ENQUIRY' was not\n        included in this memo since
    it did not apply to a hard failure.\"\n    ::= { atmSigStatEntry 10 }\n"
  - "atmSigDetectMsgErrors    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Incorrect
    Messages detected on this interface.  The\n       Incorrect Messages Counter reflects
    any sort of incorrect\n       information in a message.  This includes:\n       -
    RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,\n         and STATUS messages transmitted,
    that contain any of\n         the Cause values listed below.\n       - Ignored
    messages.  These messages are dropped\n         because the message was so damaged
    that it could\n         not be further processed.  A list of dropped\n         messages
    is compiled below:\n          1.  Message with invalid protocol discriminator\n
    \         2.  Message with errors in the call reference I.E.\n               -
    Bits 5-8 of the first octet not equal to\n                 '0000'\n               -
    Bits 1-4 of the first octet indicating a\n                 length other than 3
    octets\n               - RELEASE COMPLETE message received with a\n                 call
    reference that does not relate to a\n                 call active or in progress\n
    \              - SETUP message received with call reference\n                 flag
    incorrectly set to 1\n               - SETUP message received with a call\n                 reference
    for a call that is already\n                 active or in progress.\n          3.
    \ Message too short\n       The following cause values are monitored by this counter
    (Note:\n       These cause values apply to both UNI3.0 and UNI3.1 unless\n       otherwise
    stated):\n       Cause Value     Meaning\n          10     VPCI/VCI unacceptable
    (UNI3.0 only)\n          36     VPCI/VCI assignment failure (UNI3.1 only)\n          81
    \    invalid call reference value\n          82     identified channel does not
    exist\n          89     invalid endpoint reference\n          96     mandatory
    information element is missing\n          97     message type non-existent or
    not\n                 implemented\n          99     information element non-existent
    or not\n                 implemented\n          100    invalid information element
    contents\n          101    message not compatible with call state\n          104
    \   incorrect message length\n          111    protocol error, unspecified\n          NOTE:
    \ For this counter, RELEASE COMPLETE messages that are\n          a reply to a
    previous RELEASE message and contain the same\n          cause value, are redundant
    (for counting purposes) and\n          should not be counted.\"\n    ::= { atmSigStatEntry
    11 }\n"
  - "atmSigEmitMsgErrors    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Incorrect
    Messages transmitted on this interface.\n       The Incorrect Messages Counter
    reflects any sort of incorrect\n       information in a message.  This includes:\n
    \      - RELEASE, RELEASE COMPLETE, ADD PARTY REJECT,\n         and STATUS messages
    transmitted or\n         received, that contain any of the Cause values\n         listed
    below.\n       - Ignored messages.  These messages are dropped\n         because
    the message was so damaged that it could\n         not be further processed.  A
    list of dropped\n         messages is compiled below:\n          1.  Message with
    invalid protocol discriminator\n          2.  Message with errors in the call
    reference I.E.\n               - Bits 5-8 of the first octet not equal to\n                 '0000'\n
    \              - Bits 1-4 of the first octet indicating a\n                 length
    other than 3 octets\n               - RELEASE COMPLETE message received with a\n
    \                call reference that does not relate to a\n                 call
    active or in progress\n               - SETUP message received with call reference\n
    \                flag incorrectly set to 1\n               - SETUP message received
    with a call\n                 reference for a call that is already\n                 active
    or in progress.\n          3.  Message too short\n       The following cause values
    are monitored by this counter\n       (Note: These cause values apply to both
    UNI3.0 and UNI3.1\n       unless otherwise stated):\n       Cause Value     Meaning\n
    \         10     VPCI/VCI unacceptable (UNI3.0 only)\n          36     VPCI/VCI
    assignment failure (UNI3.1 only)\n          81     invalid call reference value\n
    \         82     identified channel does not exist\n          89     invalid endpoint
    reference\n          96     mandatory information element is missing\n          97
    \    message type non-existent or not\n                 implemented\n          99
    \    information element non-existent or not\n                 implemented\n          100
    \   invalid information element contents\n          101    message not compatible
    with call state\n          104    incorrect message length\n          111    protocol
    error, unspecified\n          NOTE:  For this counter, RELEASE COMPLETE messages
    that are\n          a reply to a previous RELEASE message and contain the same\n
    \         cause value, are redundant (for counting purposes) and\n          should
    not be counted.\"\n    ::= { atmSigStatEntry 12 }\n"
  - "atmSigDetectClgPtyEvents    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Calling
    Party Events detected on this interface.\n       This counter monitors error events
    that occur due to the\n       originating user doing something wrong.  This counter
    is\n       incremented when a RELEASE, RELEASE COMPLETE (only when not\n       preceded
    by a RELEASE message for the same call), ADD PARTY\n       REJECT, or STATUS message
    that contains one of the following\n       cause code values is received (Note:
    These cause values\n       apply to both UNI3.0 and UNI3.1):\n       Cause Value
    \    Meaning\n          28     invalid number format (address incomplete)\n          43
    \    access information discarded\n          57     bearer capability not authorized\n
    \         65     bearer capability not implemented\n          73     unsupported
    combination of traffic\n                 parameters\n          78     AAL parameters
    cannot be supported (UNI3.1\n                 only)\n          91     invalid
    transit network selection\n          93     AAL parameters cannot be supported
    (UNI3.0\n                 only)\n          NOTE:  For this counter, RELEASE COMPLETE
    messages that\n          are a reply to a previous RELEASE message and contain\n
    \         the same cause value, are redundant (for counting purposes)\n          and
    should not be counted.\"\n    ::= { atmSigStatEntry 13 }\n"
  - "atmSigEmitClgPtyEvents    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Calling
    Party Events transmitted from this interface.\n       This counter monitors error
    events that occur due to the\n       originating user doing something wrong.  This
    counter is\n       incremented when a RELEASE, RELEASE COMPLETE (only when not\n
    \      preceded by a RELEASE message for the same call), ADD PARTY\n       REJECT,
    or STATUS message that contains one of the following\n       cause code values
    is transmitted (Note: These cause values\n       apply to both UNI3.0 and UNI3.1):\n
    \      Cause Value     Meaning\n          28     invalid number format (address
    incomplete)\n          43     access information discarded\n          57     bearer
    capability not authorized\n          65     bearer capability not implemented\n
    \         73     unsupported combination of traffic\n                 parameters\n
    \         78     AAL parameters cannot be supported (UNI3.1\n                 only)\n
    \         91     invalid transit network selection\n          93     AAL parameters
    cannot be supported (UNI3.0\n                 only)\n          NOTE:  For this
    counter, RELEASE COMPLETE messages that are\n          a reply to a previous RELEASE
    message and contain the same\n          cause value, are redundant (for counting
    purposes) and\n          should not be counted.\"\n    ::= { atmSigStatEntry 14
    }\n"
  - "atmSigDetectTimerExpireds    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Timer
    Expiries detected on this interface.  The Timer\n       Expiries Counter provides
    a count of network timer expiries, and\n       to some extent, host or switch
    timer expiries.  The conditions\n       for incrementing this counter are:\n          -
    Expiry of any network timer\n          - Receipt of a RELEASE or RELEASE COMPLETE\n
    \           message with Cause #102, 'recovery on\n            timer expiry'.\n
    \         NOTE:  For this counter, RELEASE COMPLETE messages that are\n          a
    reply to a previous RELEASE message and contain the same\n          cause value,
    are redundant (for counting purposes) and\n          should not be counted.\"\n
    \   ::= { atmSigStatEntry 15 }\n"
  - "atmSigEmitTimerExpireds    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Timer
    Expiries transmitted from this interface.\n       The Timer Expiries Counter provides
    a count of network timer\n       expiries, and to some extent, host or switch
    timer expiries.\n       The conditions for incrementing this counter are:\n          -
    Expiry of any network timer\n          - Receipt of a RELEASE or RELEASE COMPLETE\n
    \           message with Cause #102, 'recovery on\n            timer expiry'.\n
    \      NOTE:  For this counter, RELEASE COMPLETE messages that are a\n       reply
    to a previous RELEASE message and contain the same cause\n       value, are redundant
    (for counting purposes) and should not be\n       counted.\"\n    ::= { atmSigStatEntry
    16 }\n"
  - "atmSigDetectRestarts    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Restart
    Activity errors detected on this interface.\n       The Restart Activity Counter
    provides a count of host, switch,\n       or network restart activity.  This counter
    is incremented when\n       receiving a RESTART message.\"\n    ::= { atmSigStatEntry
    17 }\n"
  - "atmSigEmitRestarts    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of Restart
    Activity errors transmitted from this\n       interface.  The Restart Activity
    Counter provides a count of\n       host, switch, or network restart activity.
    \ This counter is\n       incremented when transmitting a RESTART message.\"\n
    \   ::= { atmSigStatEntry 18 }\n"
  - "atmSigInEstabls    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS   read-only\n
    \   STATUS       current\n    DESCRIPTION\n       \"Number of SVCs established
    at this signalling entity for\n       incoming connections.\"\n    ::= { atmSigStatEntry
    19 }\n"
  - "atmSigOutEstabls    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS   read-only\n
    \   STATUS       current\n    DESCRIPTION\n       \"Number of SVCs established
    at this signalling entity for\n       outgoing connections.\"\n    ::= { atmSigStatEntry
    20 }\n  -- 4. ATM Interface Signalling Support Table\n  --\n  -- This table provides
    information to support\n  -- the signalling process which is used to establish\n
    \ -- ATM Switched Virtual Connections (SVCs).\n"
  - "atmSigSupportTable       OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmSigSupportEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains ATM local interface configuration\n       parameters, one entry
    per ATM signalling interface.\"\n    ::= { atm2MIBObjects 4 }\n"
  - "atmSigSupportEntry         OBJECT-TYPE\n    SYNTAX       AtmSigSupportEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    list contains signalling configuration parameters\n       and state variables.\"\n
    \   INDEX { ifIndex }\n    ::= { atmSigSupportTable  1}\n"
  - "AtmSigSupportEntry    ::= SEQUENCE  {\n    atmSigSupportClgPtyNumDel       INTEGER,\n
    \   atmSigSupportClgPtySubAddr      INTEGER,\n    atmSigSupportCldPtySubAddr      INTEGER,\n
    \   atmSigSupportHiLyrInfo          INTEGER,\n    atmSigSupportLoLyrInfo          INTEGER,\n
    \   atmSigSupportBlliRepeatInd      INTEGER,\n    atmSigSupportAALInfo            INTEGER,\n
    \   atmSigSupportPrefCarrier        OCTET STRING\n"
  - '}

    '
  - "atmSigSupportClgPtyNumDel     OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether the Calling Party Number\n       Information
    Element is transferred to the called party\n       address.  The value of this
    object can be:\n         - enabled(1)  This Information Element is transferred\n
    \                      to the called party\n         - disabled(2) This Information
    Element is NOT\n                       transferred to the called party.\"\n    ::=
    { atmSigSupportEntry 1 }\n"
  - "atmSigSupportClgPtySubAddr   OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether to accept and transfer the Calling\n       Party
    Subaddress Information Element from the calling party to\n       the called party.
    \ Calling party subaddress information shall\n       only be transferred to the
    called party if calling party number\n       delivery is enabled (i.e., atmSigSupportClgPtyNumDel
    =\n       'enabled(1)'.  The value of this object can be:\n         - enabled(1)
    \ This Information Element is transferred\n                       to the called
    party\n         - disabled(2) This Information Element is NOT\n                       transferred
    to the called party.\"\n    ::= { atmSigSupportEntry 2 }\n"
  - "atmSigSupportCldPtySubAddr    OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether to accept, transfer, and deliver\n       the
    Called Party Subaddress Information Element from the calling\n       party to
    the called party.  The value of this object can be:\n         - enabled(1)  This
    Information Element is transferred\n                       to the called party\n
    \        - disabled(2) This Information Element is NOT\n                       transferred
    to the called party.\"\n    ::= { atmSigSupportEntry 3 }\n"
  - "atmSigSupportHiLyrInfo     OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether to accept, transfer, and deliver\n       the
    Broadband High Layer Information Element from the calling\n       party to the
    called party.  The value of this object can be:\n         - enabled(1)  This Information
    Element is transferred\n                       to the called party\n         -
    disabled(2) This Information Element is NOT\n                       transferred
    to the called party.\"\n    ::= { atmSigSupportEntry 4 }\n"
  - "atmSigSupportLoLyrInfo     OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether to accept, transfer, and deliver\n       the
    Broadband Low Layer Information Element from the calling\n       party to the
    called party.  The value of this object can be:\n         - enabled(1)  This Information
    Element is transferred\n                       to the called party\n         -
    disabled(2) This Information Element is NOT\n                       transferred
    to the called party.\"\n    ::= { atmSigSupportEntry 5 }\n"
  - "atmSigSupportBlliRepeatInd      OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \       \"This object indicates whether to accept, transfer, and deliver\n        the
    Broadband Repeat Indicator with two or three instances of\n        the Broadband
    Low Layer Information Element for low layer\n        information selection from
    the calling party to the called\n        party.  This object's value should always
    be disabled(2) if\n        the value of atmSigSupportLolyrInfo is disabled(2).\n
    \       The value of this object can be:\n        - enabled(1)  This Information
    Element is transferred\n              to the called party\n        - disabled(2)
    This Information Element is NOT\n              transferred to the called party.\"\n
    \   ::= { atmSigSupportEntry 6 }\n"
  - "atmSigSupportAALInfo     OBJECT-TYPE\n    SYNTAX       INTEGER  { enabled(1),
    disabled(2) }\n    MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n
    \      \"This object indicates whether to accept, transfer, and deliver\n       the
    ATM Adaptation Layer Parameters Information Element from the\n       calling party
    to the called party.  The value of this object can\n       be:\n         - enabled(1)
    \ This Information Element is transferred\n                       to the called
    party\n         - disabled(2) This Information Element is NOT\n                       transferred
    to the called party.\"\n    ::= { atmSigSupportEntry 7 }\n"
  - "atmSigSupportPrefCarrier     OBJECT-TYPE\n    SYNTAX       OCTET STRING (SIZE(0|4))\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"This
    parameter identifies the carrier to which intercarrier\n       calls originated
    from this interface are routed when transit\n       network selection information
    is not provided by the calling\n       party.  If a Carrier Identification Code
    (CIC) is used the\n       parameter shall contain the CIC.  For three-digit CICs,
    the first\n       octet shall be '0' and the CIC is contained in the three\n       following
    octets.  If the preferred carrier feature is not\n       supported the value is
    a zero-length string.\"\n    ::= { atmSigSupportEntry 8 }\n  -- 5. ATM Signalling
    Descriptor Parameter Table\n    atmSigDescrParamTable     OBJECT-TYPE\n        SYNTAX
    \      SEQUENCE OF AtmSigDescrParamEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"A table contains
    signalling capabilities of VCLs except the\n            Traffic Descriptor.  Traffic
    descriptors are described in\n            the atmTrafficDescrParamTable.\"\n        REFERENCE\n
    \           \"ATM User-Network Interface Specification, Version 3.1 (UNI\n            3.1),
    September 1994, Section 5.4.5 Variable Length\n            Information Elements.\"\n
    \       ::= { atm2MIBObjects 5 }\n    atmSigDescrParamEntry        OBJECT-TYPE\n
    \       SYNTAX       AtmSigDescrParamEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"Each entry in
    this table represents a\n            set of signalling capabilities that can\n
    \           be applied to a VCL.  There is no requirement\n            for unique
    entries, except that the index must\n            be unique.\"\n        INDEX {
    atmSigDescrParamIndex }\n        ::= { atmSigDescrParamTable 1 }\n    AtmSigDescrParamEntry
    ::=\n        SEQUENCE {\n            atmSigDescrParamIndex\n                                   AtmSigDescrParamIndex,\n
    \           atmSigDescrParamAalType         INTEGER,\n            atmSigDescrParamAalSscsType
    \    INTEGER,\n            atmSigDescrParamBhliType        INTEGER,\n            atmSigDescrParamBhliInfo
    \       OCTET STRING,\n            atmSigDescrParamBbcConnConf     INTEGER,\n
    \           atmSigDescrParamBlliLayer2      INTEGER,\n            atmSigDescrParamBlliLayer3
    \     INTEGER,\n            atmSigDescrParamBlliPktSize     INTEGER,\n            atmSigDescrParamBlliSnapId
    \     INTEGER,\n            atmSigDescrParamBlliOuiPid      OCTET STRING,\n            atmSigDescrParamRowStatus
    \      RowStatus\n        }\n    atmSigDescrParamIndex OBJECT-TYPE\n        SYNTAX
    \      AtmSigDescrParamIndex\n        MAX-ACCESS   not-accessible\n        STATUS
    \      current\n        DESCRIPTION\n            \"The value of this object is
    used by the\n            atmVclGenSigDescrIndex object in the atmVclGenTable to\n
    \           identify a row in this table.\"\n        ::= { atmSigDescrParamEntry
    1 }\n     atmSigDescrParamAalType OBJECT-TYPE\n         SYNTAX       INTEGER {\n
    \           other(1),       -- not defined\n            aal1(2),        -- AAL
    type 1\n            aal34(3),       -- AAL type 3/4\n            aal5(4),        --
    AAL type 5\n            userDefined(5), -- User-Defined AAL\n            aal2(6)
    \        -- AAL type 2\n            }\n         MAX-ACCESS   read-create\n         STATUS
    \      current\n         DESCRIPTION\n            \"The AAL type.  The value of
    this object is set to other(1)\n            when not defined.\"\n         DEFVAL
    { other }\n         ::= { atmSigDescrParamEntry 2 }\n     atmSigDescrParamAalSscsType
    OBJECT-TYPE\n         SYNTAX       INTEGER {\n            other(1),       -- other,
    or not used\n            assured(2),     -- Data SSCS based on SSCOP\n                            --
    assured operation\n            nonassured(3),  -- Data SSCS based on SSCOP\n                            --
    non-assured operation\n            frameRelay(4),  -- frame relay SSCS\n            null(5)
    \        -- null\n            }\n         MAX-ACCESS   read-create\n         STATUS
    \      current\n         DESCRIPTION\n            \"The SSCS type used by this
    entry.\"\n         DEFVAL { other }\n         ::= { atmSigDescrParamEntry 3 }\n
    \    atmSigDescrParamBhliType OBJECT-TYPE\n         SYNTAX       INTEGER {\n            other(1),
    \        -- not defined\n            iso(2),           -- ISO\n            user(3),
    \         -- User specific\n            hiProfile(4),     -- Higher layer profile\n
    \                             -- this enum applicable to\n                              --
    UNI 3.0 only\n            vendorSpecific(5) -- Vender specific\n                              --
    application identifier\n            }\n         MAX-ACCESS   read-create\n         STATUS
    \      current\n         DESCRIPTION\n            \"The Broadband high layer type.\"\n
    \        DEFVAL { other }\n         ::= { atmSigDescrParamEntry 4 }\n     atmSigDescrParamBhliInfo
    OBJECT-TYPE\n         SYNTAX     OCTET STRING (SIZE(0..8))\n         MAX-ACCESS
    read-create\n         STATUS     current\n         DESCRIPTION\n            \"The
    Broadband high layer information.  When\n            atmSigDescrParamBhliType
    is set to iso(2), the value of this\n            object is a zero length string.
    \ When\n            atmSigDescrParamBhliType is set to user(3), the value of\n
    \           this object is an octet string with length ranging from 0 to\n            8.
    \ When atmSigDescrParamBhliType is set to hiProfile(4),\n            the value
    of this object is a length of 4 octet string\n            containing user to user
    profile identifier.  When\n            atmSigDescrParamBhliType is set to vendorSpecific(5),
    the\n            value of this object is a length of 7 octet string, where\n            the
    most significant 3 octets consist of a globally-\n            administered OUI,
    and the least significant 4 octets are the\n            vender administered application
    OUI.\"\n         DEFVAL { ''H }\n         ::= { atmSigDescrParamEntry 5 }\n     atmSigDescrParamBbcConnConf
    OBJECT-TYPE\n         SYNTAX       INTEGER {\n             ptp(1),   -- point-to-point\n
    \            ptmp(2)   -- point-to-multipoint\n             }\n         MAX-ACCESS
    \  read-create\n         STATUS       current\n         DESCRIPTION\n             \"The
    Broadband bearer capability user plane connection\n              configuration
    parameter.\"\n         DEFVAL { ptp }\n         ::= { atmSigDescrParamEntry 6
    }\n      atmSigDescrParamBlliLayer2 OBJECT-TYPE\n          SYNTAX       INTEGER
    {\n             other(1),        -- not specified\n             iso1745(2),      --
    Basic mode ISO 1745\n             q921(3),         -- CCITT Recommendation Q.921\n
    \            x25linklayer(4), -- CCITT Recommendation X.25\n                              --
    Link Layer\n             x25multilink(5), -- CCITT Recommendation X.25\n                              --
    Multilink\n             lapb(6),         -- Extended LAPB; for half\n                              --
    duplex operation\n             hdlcArm(7),      -- HDLC ARM (ISO 4335)\n             hdlcNrm(8),
    \     -- HDLC NRM (ISO 4335)\n             hdlcAbm(9),      -- HDLC ABM (ISO 4335)\n
    \            iso88022(10),    -- LAN logical link control\n                              --
    (ISO 8802/2)\n             x75slp(11),      -- CCITT Recommendation X.75,\n                              --
    single link\n                              -- procedure (SLP)\n             q922(12),
    \       -- CCITT Recommendation Q.922\n             userDef(13),     -- User specified\n
    \            iso7776(14)      -- ISO 7776 DTE-DTE operation\n             }\n
    \         MAX-ACCESS   read-create\n          STATUS       current\n          DESCRIPTION\n
    \           \"The Broadband low layer information, protocol type of layer\n            2.
    \ The value of this object is other(1) if layer 2 protocol\n            is not
    used.\"\n          DEFVAL { other }\n          ::= { atmSigDescrParamEntry 7 }\n
    \     atmSigDescrParamBlliLayer3 OBJECT-TYPE\n          SYNTAX       INTEGER {\n
    \            other(1),       -- not specified\n             x25pkt(2),      --
    CCITT Recommendation X.25\n                             -- packet layer\n             isoiec8208(3),
    \ -- ISO/IEC 8208 (X.25 packet\n                             -- level protocol
    for data\n                             -- terminal equipment)\n             x223iso8878(4),
    -- X.223/ISO 8878\n             isoiec8473(5),  -- ISO/IEC 8473 OSI\n                             --
    connectionless\n                             -- mode protocol\n             t70(6),
    \        -- CCITT Recommendation T.70\n                             -- minimum\n
    \                            -- network layer\n             tr9577(7),      --
    ISO/IEC TR 9577 Protocol\n                             -- Identification in the\n
    \                            -- network layer\n             userDef(8)      --
    user specified\n             }\n          MAX-ACCESS   read-create\n          STATUS
    \      current\n          DESCRIPTION\n            \"The Broadband low layer information,
    protocol type of layer\n            3.  The value of this object is other(1) if
    layer 3 protocol\n            is not used.\"\n          DEFVAL { other }\n          ::=
    { atmSigDescrParamEntry 8 }\n      atmSigDescrParamBlliPktSize OBJECT-TYPE\n          SYNTAX
    \      INTEGER {\n             other(1),        -- not used\n             s16(2),
    \         -- 16 octets\n             s32(3),          -- 32 octets\n             s64(4),
    \         -- 64 octets\n             s128(5),         -- 128 octets\n             s256(6),
    \        -- 256 octets\n             s512(7),         -- 512 octets\n             s1024(8),
    \       -- 1028 octets\n             s2048(9),        -- 2048 octets\n             s4096(10)
    \       -- 4096 octets\n          }\n          MAX-ACCESS   read-create\n          STATUS
    \      current\n          DESCRIPTION\n            \"The default packet size defined
    in B-LLI.\"\n          DEFVAL { other }\n          ::= { atmSigDescrParamEntry
    9 }\n      atmSigDescrParamBlliSnapId OBJECT-TYPE\n          SYNTAX       INTEGER
    {\n             other(1),  -- not used\n             true(2),   -- SNAP ID is
    1\n             false(3)   -- SNAP ID is 0\n          }\n          MAX-ACCESS
    \  read-create\n          STATUS       current\n          DESCRIPTION\n            \"The
    SNAP ID used for Broadband low layer protocol layer 3.\n            The value
    of this object is other(1) if\n            atmSigDescrParamBlliLayer3 is set to
    other(1).\"\n          DEFVAL { other }\n          ::= { atmSigDescrParamEntry
    10 }\n      atmSigDescrParamBlliOuiPid OBJECT-TYPE\n          SYNTAX       OCTET
    STRING (SIZE(0|5))\n          MAX-ACCESS   read-create\n          STATUS       current\n
    \         DESCRIPTION\n            \"The OUI/PID encoding for Broadband low layer
    protocol layer\n            3.  The value of this object is a zero length string
    if\n            atmSigDescrParamBlliLayer3 is set to other(1).  When used,\n            it
    is always 5 octets with the most significant octet as the\n            OUI Octet
    1 and the least significant octet as the PID Octet\n            2.\"\n          DEFVAL
    { ''H }\n          ::= { atmSigDescrParamEntry 11 }\n       atmSigDescrParamRowStatus
    OBJECT-TYPE\n           SYNTAX       RowStatus\n           MAX-ACCESS   read-create\n
    \          STATUS       current\n           DESCRIPTION\n            \"This object
    is used to create and delete rows in the\n            atmSigDescrParamTable.\"\n
    \          ::= { atmSigDescrParamEntry 12 }\n  -- 6. ATM Interface Registered
    Address Table --\n"
  - "atmIfRegisteredAddrTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmIfRegisteredAddrEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains a list of ATM addresses that can be used for\n       calls to and
    from a given interface by a switch or service.  The\n       ATM addresses are
    either registered by the endsystem via ILMI or\n       statically configured.
    \ This table does not expose PNNI\n       reachability information.  ILMI registered
    addresses cannot be\n       deleted using this table.  This table only applies
    to switches\n       and network services.\"\n    ::= { atm2MIBObjects 6 }\n"
  - "atmIfRegisteredAddrEntry    OBJECT-TYPE\n    SYNTAX       AtmIfRegisteredAddrEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An
    entry in the ATM Interface Registered Address table.\"\n    INDEX { ifIndex, atmIfRegAddrAddress
    }\n    ::= { atmIfRegisteredAddrTable  1}\n"
  - "AtmIfRegisteredAddrEntry    ::= SEQUENCE  {\n    atmIfRegAddrAddress             AtmAddr,\n
    \   atmIfRegAddrAddressSource       INTEGER,\n    atmIfRegAddrOrgScope            INTEGER,\n
    \   atmIfRegAddrRowStatus           RowStatus\n         }\n"
  - "atmIfRegAddrAddress   OBJECT-TYPE\n    SYNTAX       AtmAddr\n    MAX-ACCESS   not-accessible\n
    \   STATUS       current\n    DESCRIPTION\n       \"An address registered for
    a given switch or service interface.\"\n    ::= { atmIfRegisteredAddrEntry 1}\n"
  - "atmIfRegAddrAddressSource  OBJECT-TYPE\n    SYNTAX       INTEGER  {\n       other(1),\n
    \      static(2),\n       dynamic(3)\n       }\n    MAX-ACCESS   read-only\n    STATUS
    \      current\n    DESCRIPTION\n       \"The type of address source for a given
    ATM Address. The value\n       dynamic(3) is indicated when ILMI is used.\"\n
    \   ::= { atmIfRegisteredAddrEntry 2}\n"
  - "atmIfRegAddrOrgScope  OBJECT-TYPE\n    SYNTAX       INTEGER {\n        localNetwork(1),\n
    \       localNetworkPlusOne(2),\n        localNetworkPlusTwo(3),\n        siteMinusOne(4),\n
    \       intraSite(5),\n        sitePlusOne(6),\n        organizationMinusOne(7),\n
    \       intraOrganization(8),\n        organizationPlusOne(9),\n        communityMinusOne(10),\n
    \       intraCommunity(11),\n        communityPlusOne(12),\n        regional(13),\n
    \       interRegional(14),\n        global(15)\n    }\n    MAX-ACCESS   read-create\n
    \   STATUS       current\n    DESCRIPTION\n        \"This object indicates the
    organizational scope for\n        the referenced address.  The information of
    the\n        referenced address shall not be distributed outside\n        the
    indicated scope.   Refer to Annex 5.3 of ATM\n        Forum UNI Signalling 4.0
    for guidelines regarding\n        the use of organizational scopes.\n        This
    value cannot be configured for ILMI-registered\n        addresses.\n        The
    default values for organizational scope are\n        localNetwork(1) for ATM group
    addresses, and\n        global(15) for individual addresses.\"\n    ::= { atmIfRegisteredAddrEntry
    3}\n"
  - "atmIfRegAddrRowStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS
    \  read-create\n    STATUS       current\n    DESCRIPTION\n       \"This object
    is used to create and delete rows in the\n       atmIfRegisteredAddrTable.  Rows
    created dynamically (e.g., ILMI-\n       registered addresses) cannot be deleted
    using this object.\"\n    ::= { atmIfRegisteredAddrEntry 4}\n  -- 7. ATM VPI/VCI
    to Address Mapping Table\n    atmVclAddrTable  OBJECT-TYPE\n        SYNTAX       SEQUENCE
    OF AtmVclAddrEntry\n        MAX-ACCESS   not-accessible\n        STATUS       current\n
    \       DESCRIPTION\n            \"This table provides a mapping between the atmVclTable
    and\n            the ATM called party/calling party address.  This table can\n
    \           be used to retrieve the calling party and called party ATM\n            address
    pair for a given VCL.  Note that there can be more\n            than one pair
    of calling party and called party ATM\n            addresses for a VCL in a point
    to multi-point call.\"\n        ::= { atm2MIBObjects 7 }\n    atmVclAddrEntry
    \   OBJECT-TYPE\n        SYNTAX       AtmVclAddrEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"Each entry in
    this table represents a binding between a VCL\n            and an ATM address
    associated with this call.  This ATM\n            address can be either the called
    party address or the\n            calling party address.  There can be more than
    one pair of\n            calling/called party ATM addresses associated with the
    VCL\n            entry for point to multi-point calls.  Objects\n            atmVclAddrType,
    and atmVclAddrRowStatus are\n            required during row creation.\"\n        INDEX
    \ { ifIndex, atmVclVpi, atmVclVci,\n                 atmVclAddrAddr }\n        ::=
    { atmVclAddrTable 1 }\n    AtmVclAddrEntry ::=\n        SEQUENCE {\n            atmVclAddrAddr
    \         AtmAddr,\n            atmVclAddrType          INTEGER,\n            atmVclAddrRowStatus
    \    RowStatus\n        }\n    atmVclAddrAddr     OBJECT-TYPE\n        SYNTAX
    \      AtmAddr\n        MAX-ACCESS   not-accessible\n        STATUS       current\n
    \       DESCRIPTION\n            \"An ATM address on one end of the VCL.  For
    SVCs, the agent\n            supplies the value of this object at creation time.
    \ For PVC\n            VCL, the manager can supply the value of this object during\n
    \           or after the PVC VCL creation.\"\n        ::= { atmVclAddrEntry 1
    }\n   atmVclAddrType     OBJECT-TYPE\n       SYNTAX       INTEGER {\n           callingParty(1),\n
    \          calledParty(2)\n       }\n       MAX-ACCESS   read-create\n       STATUS
    \      current\n       DESCRIPTION\n            \"The type of ATM Address represented
    by the object\n            atmVclAddrAddr.  Choices are either the calling party
    ATM\n            address or the called party ATM address.\"\n       ::= { atmVclAddrEntry
    2 }\n   atmVclAddrRowStatus     OBJECT-TYPE\n       SYNTAX       RowStatus\n       MAX-ACCESS
    \  read-create\n       STATUS       current\n       DESCRIPTION\n           \"This
    object is used to create or destroy an\n           entry from this table.  Note
    that the manager entity\n           can only destroy the PVC VCLs.\"\n       ::=
    { atmVclAddrEntry 3 }\n  -- 8. ATM Address to VPI/VCI Mapping Table\n  --\n  --
    This table provides an alternative way to access\n  -- a row in the atmVclAddrTable
    by using\n  -- an ATM address as an index, instead of\n  -- the ifIndex\n    atmAddrVclTable
    \  OBJECT-TYPE\n        SYNTAX       SEQUENCE OF AtmAddrVclEntry\n        MAX-ACCESS
    \  not-accessible\n        STATUS       current\n        DESCRIPTION\n            \"This
    table provides an alternative way to retrieve the\n            atmVclTable.  This
    table can be used to retrieve the\n            indexing to the atmVclTable by
    an ATM address.\"\n        ::= { atm2MIBObjects 8 }\n    atmAddrVclEntry    OBJECT-TYPE\n
    \       SYNTAX       AtmAddrVclEntry\n        MAX-ACCESS   not-accessible\n        STATUS
    \      current\n        DESCRIPTION\n            \"Each entry in this table represents
    an entry in the\n            atmVclTable of the ATM-MIB by its ATM address.  The
    ATM\n            address is either the calling or called party ATM address\n            of
    the call.  Entries in this table are read only.\n            They show up when
    entries are created in the\n            atmVclAddrTable.\"\n        REFERENCE\n
    \           \"Tesink, K., Editor, Definitions of Managed Objects\n             for
    ATM Management, RFC 2515, Bell Communications\n             Research, February,
    1999.\"\n        INDEX { atmVclAddrAddr, atmAddrVclAtmIfIndex,\n                atmAddrVclVpi,
    atmAddrVclVci }\n        ::= { atmAddrVclTable 1 }\n    AtmAddrVclEntry ::=\n
    \       SEQUENCE {\n            atmAddrVclAtmIfIndex    InterfaceIndex,\n            atmAddrVclVpi
    \          AtmVpIdentifier,\n            atmAddrVclVci           AtmVcIdentifier,\n
    \           atmAddrVclAddrType      INTEGER\n            }\n    atmAddrVclAtmIfIndex
    \    OBJECT-TYPE\n        SYNTAX       InterfaceIndex\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"The interface
    index of the ATM interface to which this\n             VCL pertains.  This object
    combined with the\n             atmAddrVclVpi and atmAddrVclVci objects serves
    as an\n             index to the atmVclTable.\"\n        ::= { atmAddrVclEntry
    1 }\n    atmAddrVclVpi     OBJECT-TYPE\n        SYNTAX       AtmVpIdentifier\n
    \       MAX-ACCESS   not-accessible\n        STATUS       current\n        DESCRIPTION\n
    \           \"The VPI value of the VCL.  This object combined with the\n            atmAddrVclAtmIfIndex
    and atmAddrVclVci objects serves as\n            an index to the atmVclTable.\"\n
    \       ::= { atmAddrVclEntry 2 }\n    atmAddrVclVci     OBJECT-TYPE\n        SYNTAX
    \      AtmVcIdentifier\n        MAX-ACCESS   not-accessible\n        STATUS       current\n
    \       DESCRIPTION\n            \"The VCI value of the VCL.  This object combined
    with the\n            atmAddrVclAtmIfIndex and atmAddrVclVpi objects serves as\n
    \           an index to the atmVclTable.\"\n        ::= { atmAddrVclEntry 3 }\n
    \  atmAddrVclAddrType     OBJECT-TYPE\n       SYNTAX       INTEGER {\n           callingParty(1),\n
    \          calledParty(2) }\n       MAX-ACCESS   read-only\n       STATUS       current\n
    \      DESCRIPTION\n            \"The type of ATM Address represented by the object\n
    \           atmVclAddrAddr.  Choices are either calling party address\n            or
    called party address.\"\n       ::= { atmAddrVclEntry 4 }\n  -- 9. ATM VPL Statistics
    Table\n    atmVplStatTable   OBJECT-TYPE\n        SYNTAX       SEQUENCE OF AtmVplStatEntry\n
    \       MAX-ACCESS   not-accessible\n        STATUS       current\n        DESCRIPTION\n
    \           \"This table contains all statistics counters per VPL.  It is\n            used
    to monitor the usage of the VPL in terms of incoming\n            cells and outgoing
    cells.\"\n        ::= { atm2MIBObjects 9 }\n    atmVplStatEntry    OBJECT-TYPE\n
    \       SYNTAX       AtmVplStatEntry\n        MAX-ACCESS   not-accessible\n        STATUS
    \      current\n        DESCRIPTION\n            \"Each entry in this table represents
    a VPL.\"\n        INDEX { ifIndex, atmVplVpi }\n        ::= { atmVplStatTable
    1 }\n    AtmVplStatEntry ::=\n        SEQUENCE {\n            atmVplStatTotalCellIns
    \     Counter32,\n            atmVplStatClp0CellIns       Counter32,\n            atmVplStatTotalDiscards
    \    Counter32,\n            atmVplStatClp0Discards      Counter32,\n            atmVplStatTotalCellOuts
    \    Counter32,\n            atmVplStatClp0CellOuts      Counter32,\n            atmVplStatClp0Tagged
    \       Counter32\n    }\n    atmVplStatTotalCellIns OBJECT-TYPE\n        SYNTAX
    \      Counter32\n        MAX-ACCESS   read-only\n        STATUS       current\n
    \       DESCRIPTION\n            \"The total number of valid ATM cells received
    by this VPL\n            including both CLP=0 and CLP=1 cells.  The cells are\n
    \           counted prior to the application of the traffic policing.\"\n        ::=
    { atmVplStatEntry 1 }\n    atmVplStatClp0CellIns OBJECT-TYPE\n        SYNTAX       Counter32\n
    \       MAX-ACCESS   read-only\n        STATUS       current\n        DESCRIPTION\n
    \           \"The number of valid ATM cells received by this VPL with\n            CLP=0.
    \ The cells are counted prior to the application of\n            the traffic policing.\"\n
    \       ::= { atmVplStatEntry 2 }\n    atmVplStatTotalDiscards OBJECT-TYPE\n        SYNTAX
    \      Counter32\n        MAX-ACCESS   read-only\n        STATUS       current\n
    \       DESCRIPTION\n            \"The total number of valid ATM cells discarded
    by the\n            traffic policing entity.  This includes cells originally\n
    \           received with CLP=0 and CLP=1.\"\n        ::= { atmVplStatEntry 3
    }\n    atmVplStatClp0Discards OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS
    \  read-only\n        STATUS       current\n        DESCRIPTION\n            \"The
    total number of valid ATM cells received with CLP=0 and\n            discarded
    by the traffic policing entity.\"\n        ::= { atmVplStatEntry 4 }\n    atmVplStatTotalCellOuts
    OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The total number
    of valid ATM cells transmitted  by this\n            VPL.  This includes both
    CLP=0 and CLP=1 cells.\"\n        ::= { atmVplStatEntry 5 }\n    atmVplStatClp0CellOuts
    OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The total number
    of valid ATM cells transmitted with CLP=0\n            by this VPL.\"\n        ::=
    { atmVplStatEntry 6 }\n    atmVplStatClp0Tagged OBJECT-TYPE\n        SYNTAX       Counter32\n
    \       MAX-ACCESS   read-only\n        STATUS       current\n        DESCRIPTION\n
    \           \"The total number of valid ATM cells tagged by the traffic\n            policing
    entity from CLP=0 to CLP=1.\"\n        ::= { atmVplStatEntry 7 }\n  -- 10. ATM
    Logical Port Configuration Table\n    atmVplLogicalPortTable OBJECT-TYPE\n        SYNTAX
    \      SEQUENCE OF AtmVplLogicalPortEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"Indicates whether
    the VPL is an ATM Logical Port interface\n            (ifType=80).\"\n        ::=
    { atm2MIBObjects 10 }\n    atmVplLogicalPortEntry OBJECT-TYPE\n        SYNTAX
    \      AtmVplLogicalPortEntry\n        MAX-ACCESS   not-accessible\n        STATUS
    \      current\n        DESCRIPTION\n            \"An entry with information about
    the ATM Logical Port\n            interface.\"\n        AUGMENTS { atmVplEntry
    }\n        ::= { atmVplLogicalPortTable 1 }\n    AtmVplLogicalPortEntry ::=\n
    \       SEQUENCE {\n            atmVplLogicalPortDef        INTEGER,\n            atmVplLogicalPortIndex
    \     InterfaceIndexOrZero\n            }\n    atmVplLogicalPortDef   OBJECT-TYPE\n
    \       SYNTAX       INTEGER {\n                        notLogicalIf(1),\n                        isLogicalIf(2)\n
    \                       }\n        MAX-ACCESS   read-create\n        STATUS       current\n
    \       DESCRIPTION\n            \"Indicates whether the VPC at this VPL interface
    is an ATM\n            Logical Port interface.\"\n        DEFVAL { notLogicalIf
    }\n        ::= { atmVplLogicalPortEntry 1 }\n    atmVplLogicalPortIndex OBJECT-TYPE\n
    \       SYNTAX       InterfaceIndexOrZero\n        MAX-ACCESS   read-only\n        STATUS
    \      current\n        DESCRIPTION\n            \"The ifTable index of the ATM
    logical port interface\n            associated with this VPL. The distinguished
    value of zero\n            indicates that the agent has not (yet) assigned such
    an\n            ifTable Index. The zero value must be assigned by the agent\n
    \           if the value of atmVplLogicalPortDef is set to notLogicalIf,\n            or
    if the VPL row is not active.\"\n        ::= { atmVplLogicalPortEntry 2 }\n  --
    11. ATM VCL Statistics Table\n    atmVclStatTable   OBJECT-TYPE\n        SYNTAX
    \      SEQUENCE OF AtmVclStatEntry\n        MAX-ACCESS   not-accessible\n        STATUS
    \      current\n        DESCRIPTION\n            \"This table contains all statistics
    counters per VCL.  It is\n            used to monitor the usage of the VCL in
    terms of incoming\n            cells and outgoing cells.\"\n        ::= { atm2MIBObjects
    11 }\n    atmVclStatEntry    OBJECT-TYPE\n        SYNTAX       AtmVclStatEntry\n
    \       MAX-ACCESS   not-accessible\n        STATUS       current\n        DESCRIPTION\n
    \           \"Each entry in this table represents a VCL.\"\n        INDEX { ifIndex,
    atmVclVpi, atmVclVci }\n        ::= { atmVclStatTable 1 }\n    AtmVclStatEntry
    ::=\n        SEQUENCE {\n            atmVclStatTotalCellIns      Counter32,\n
    \           atmVclStatClp0CellIns       Counter32,\n            atmVclStatTotalDiscards
    \    Counter32,\n            atmVclStatClp0Discards      Counter32,\n            atmVclStatTotalCellOuts
    \    Counter32,\n            atmVclStatClp0CellOuts      Counter32,\n            atmVclStatClp0Tagged
    \       Counter32\n        }\n    atmVclStatTotalCellIns OBJECT-TYPE\n        SYNTAX
    \      Counter32\n        MAX-ACCESS   read-only\n        STATUS       current\n
    \       DESCRIPTION\n            \"The total number of valid ATM cells received
    by this VCL\n            including both CLP=0 and CLP=1 cells.  The cells are
    counted\n            prior to the application of the traffic policing.\"\n        ::=
    { atmVclStatEntry 1 }\n    atmVclStatClp0CellIns OBJECT-TYPE\n        SYNTAX       Counter32\n
    \       MAX-ACCESS   read-only\n        STATUS       current\n        DESCRIPTION\n
    \           \"The number of valid ATM cells received by this VCL with\n            CLP=0.
    \ The cells are counted prior to the application of\n            the traffic policing.\"\n
    \       ::= { atmVclStatEntry 2 }\n    atmVclStatTotalDiscards OBJECT-TYPE\n        SYNTAX
    \      Counter32\n        MAX-ACCESS   read-only\n        STATUS       current\n
    \       DESCRIPTION\n            \"The total number of valid ATM cells discarded
    by the\n            traffic policing entity.  This includes cells originally\n
    \           received with CLP=0 and CLP=1.\"\n        ::= { atmVclStatEntry 3
    }\n    atmVclStatClp0Discards OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS
    \  read-only\n        STATUS       current\n        DESCRIPTION\n            \"The
    total number of valid ATM cells received with CLP=0\n             and discarded
    by the traffic policing entity.\"\n        ::= { atmVclStatEntry 4 }\n    atmVclStatTotalCellOuts
    OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The total number
    of valid ATM cells transmitted  by this\n            VCL.  This includes both
    CLP=0 and CLP=1 cells.\"\n        ::= { atmVclStatEntry 5 }\n    atmVclStatClp0CellOuts
    OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The total number
    of valid ATM cells transmitted with CLP=0\n            by this VCL.\"\n        ::=
    { atmVclStatEntry 6 }\n    atmVclStatClp0Tagged OBJECT-TYPE\n        SYNTAX       Counter32\n
    \       MAX-ACCESS   read-only\n        STATUS       current\n        DESCRIPTION\n
    \           \"The total number of valid ATM cells tagged by the traffic\n            policing
    entity from CLP=0 to CLP=1.\"\n        ::= { atmVclStatEntry 7 }\n  -- 12. ATM
    AAL5 per-VCC Statistics Table\n    atmAal5VclStatTable   OBJECT-TYPE\n        SYNTAX
    \      SEQUENCE OF AtmAal5VclStatEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"This table provides
    a collection of objects providing AAL5\n            configuration and performance
    statistics of a VCL.\"\n        ::= { atm2MIBObjects 12 }\n    atmAal5VclStatEntry
    \   OBJECT-TYPE\n        SYNTAX       AtmAal5VclStatEntry\n        MAX-ACCESS
    \  not-accessible\n        STATUS       current\n        DESCRIPTION\n            \"Each
    entry in this table represents an AAL5 VCL, and\n             is indexed by ifIndex
    values of AAL5 interfaces and\n             the associated VPI/VCI values.\"\n
    \       INDEX { ifIndex, atmVclVpi, atmVclVci }\n        ::= { atmAal5VclStatTable
    1 }\n    AtmAal5VclStatEntry ::=\n        SEQUENCE {\n           atmAal5VclInPkts
    \       Counter32,\n           atmAal5VclOutPkts       Counter32,\n           atmAal5VclInOctets
    \     Counter32,\n           atmAal5VclOutOctets     Counter32\n        }\n    atmAal5VclInPkts
    \     OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The number of
    AAL5 CPCS PDUs received on the AAL5 VCC at\n            the interface identified
    by the ifIndex.\"\n        ::= { atmAal5VclStatEntry 1 }\n    atmAal5VclOutPkts
    \  OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The number of
    AAL5 CPCS PDUs transmitted on the AAL5 VCC\n             at the interface identified
    by the ifIndex.\"\n        ::= { atmAal5VclStatEntry 2 }\n    atmAal5VclInOctets
    \  OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS   read-only\n
    \       STATUS       current\n        DESCRIPTION\n            \"The number of
    octets contained in AAL5 CPCS PDUs received\n            on the AAL5 VCC at the
    interface identified by the ifIndex.\"\n        ::= { atmAal5VclStatEntry 3 }\n
    \   atmAal5VclOutOctets   OBJECT-TYPE\n        SYNTAX       Counter32\n        MAX-ACCESS
    \  read-only\n        STATUS       current\n        DESCRIPTION\n            \"The
    number of octets contained in AAL5 CPCS PDUs\n            transmitted on the AAL5
    VCC at the interface identified by\n            the ifIndex.\"\n        ::= {
    atmAal5VclStatEntry 4 }\n  -- 13. ATM VC General Information Table\n    atmVclGenTable
    OBJECT-TYPE\n        SYNTAX       SEQUENCE OF AtmVclGenEntry\n        MAX-ACCESS
    \  not-accessible\n        STATUS       current\n        DESCRIPTION\n            \"General
    Information for each VC.\"\n        ::= { atm2MIBObjects 13 }\n    atmVclGenEntry
    OBJECT-TYPE\n        SYNTAX       AtmVclGenEntry\n        MAX-ACCESS   not-accessible\n
    \       STATUS       current\n        DESCRIPTION\n            \"An entry with
    general information about the ATM VC.\"\n        AUGMENTS { atmVclEntry }\n        ::=
    { atmVclGenTable 1 }\n    AtmVclGenEntry ::=\n        SEQUENCE {\n          atmVclGenSigDescrIndex
    \     AtmSigDescrParamIndex\n        }\n    atmVclGenSigDescrIndex   OBJECT-TYPE\n
    \       SYNTAX       AtmSigDescrParamIndex\n        MAX-ACCESS   read-create\n
    \       STATUS       current\n        DESCRIPTION\n            \"The value of
    this object identifies the row in the ATM\n            Signalling Descriptor Parameter
    Table which applies to this\n            VCL.\"\n        ::= { atmVclGenEntry
    1 }\n  -- 14. ATM Interface Configuration Extension Table\n"
  - "atmInterfaceExtTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmInterfaceExtEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains ATM interface configuration and monitoring\n       information
    not defined in the atmInterfaceConfTable from the\n       ATM-MIB.  This includes
    the type of connection setup procedures,\n       ILMI information, and information
    on the VPI/VCI range.\"\n    REFERENCE\n        \"Tesink, K., Editor, Definitions
    of Managed Objects\n         for ATM Management, RFC 2515, Bell Communications\n
    \        Research, February, 1999.\"\n    ::= { atm2MIBObjects 14 }\n"
  - "atmInterfaceExtEntry    OBJECT-TYPE\n    SYNTAX       AtmInterfaceExtEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An
    entry extends the atmInterfaceConfEntry defined in the ATM-\n       MIB.  Each
    entry corresponds to an ATM interface.\"\n    REFERENCE\n        \"Tesink, K.,
    Editor, Definitions of Managed Objects\n         for ATM Management, RFC 2515,
    Bell Communications\n         Research, February, 1999.\"\n    AUGMENTS { atmInterfaceConfEntry
    }\n    ::= { atmInterfaceExtTable 1 }\n"
  - "AtmInterfaceExtEntry    ::= SEQUENCE  {\n        atmIntfConfigType                   AtmInterfaceType,\n
    \       atmIntfActualType                   AtmInterfaceType,\n        atmIntfConfigSide
    \                  INTEGER,\n        atmIntfActualSide                   INTEGER,\n
    \       atmIntfIlmiAdminStatus              BITS,\n        atmIntfIlmiOperStatus
    \              BITS,\n        atmIntfIlmiFsmState                 INTEGER,\n        atmIntfIlmiEstablishConPollIntvl
    \   Integer32,\n        atmIntfIlmiCheckConPollIntvl        Integer32,\n        atmIntfIlmiConPollInactFactor
    \      Integer32,\n        atmIntfIlmiPublicPrivateIndctr      INTEGER,\n        atmInterfaceConfMaxSvpcVpi
    \         INTEGER,\n        atmInterfaceCurrentMaxSvpcVpi       INTEGER,\n        atmInterfaceConfMaxSvccVpi
    \         INTEGER,\n        atmInterfaceCurrentMaxSvccVpi       INTEGER,\n        atmInterfaceConfMinSvccVci
    \         INTEGER,\n        atmInterfaceCurrentMinSvccVci       INTEGER,\n        atmIntfSigVccRxTrafficDescrIndex\n
    \                                  AtmTrafficDescrParamIndex,\n        atmIntfSigVccTxTrafficDescrIndex\n
    \                                  AtmTrafficDescrParamIndex,\n        atmIntfPvcFailures
    \                 Counter32,\n        atmIntfCurrentlyFailingPVpls        Gauge32,\n
    \       atmIntfCurrentlyFailingPVcls        Gauge32,\n        atmIntfPvcFailuresTrapEnable
    \       TruthValue,\n        atmIntfPvcNotificationInterval      INTEGER,\n        atmIntfLeafSetupFailures
    \           Counter32,\n        atmIntfLeafSetupRequests            Counter32
    }\n"
  - "atmIntfConfigType     OBJECT-TYPE\n    SYNTAX       AtmInterfaceType\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n       \"The type of
    connection setup procedures configured for the ATM\n       interface.  Setting
    this variable to a value of 'other' is not\n       allowed.\"\n    DEFVAL { autoConfig
    }\n    ::= { atmInterfaceExtEntry 1 }\n"
  - "atmIntfActualType     OBJECT-TYPE\n    SYNTAX       AtmInterfaceType\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"The type of
    connection setup procedures currently being used on\n       the interface.  This
    may reflect a manually configured value for\n       the interface type, or may
    be determined by other means such as\n       auto-configuration.  A value of `autoConfig'
    indicates that\n       auto-configuration was requested but has not yet been completed.\"\n
    \   ::= { atmInterfaceExtEntry 2 }\n"
  - "atmIntfConfigSide     OBJECT-TYPE\n    SYNTAX       INTEGER  {\n                     other(1),\n
    \                    user(2),\n                     network(3) }\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n       \"The configured
    role of the managed entity as one side of the ATM\n       interface.  This value
    does not apply when the object\n       atmIntfConfigType is set to `autoConfig',
    `atmfPnni1Dot0', or\n       `atmfBici2Dot0'.\"\n    ::= { atmInterfaceExtEntry
    3 }\n"
  - "atmIntfActualSide     OBJECT-TYPE\n    SYNTAX       INTEGER  {\n                     other(1),\n
    \                    user(2),\n                     network(3),\n                     symmetric(4)
    }\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    current role used by the managed entity to represent one\n       side of the ATM
    interface.\"\n    ::= { atmInterfaceExtEntry 4 }\n"
  - "atmIntfIlmiAdminStatus    OBJECT-TYPE\n    SYNTAX       BITS { ilmi(0),\n                        ilmiAddressRegistration(1),\n
    \                       ilmiConnectivity(2),\n                        ilmiPvcPvpMgmt(3),\n
    \                       ilmiSigVccParamNegotiation(4) }\n    MAX-ACCESS   read-write\n
    \   STATUS       current\n    DESCRIPTION\n       \"Indicates which components
    of ILMI are administratively enabled\n       on this interface.  If the 'ilmi'
    bit is not set, then no ILMI\n       components are operational.  ILMI components
    other than auto-\n       configuration that are not represented in the value have
    their\n       administrative status determined according to the 'ilmi' bit.\n
    \      The ILMI auto-configuration component is enabled/disabled by the\n       atmIntfConfigType
    object.\"\n    ::= { atmInterfaceExtEntry 5 }\n"
  - "atmIntfIlmiOperStatus    OBJECT-TYPE\n    SYNTAX       BITS { ilmi(0),\n                        ilmiAddressRegistration(1),\n
    \                       ilmiConnectivity(2),\n                        ilmiPvcPvpMgmt(3),\n
    \                       ilmiSigVccParamNegotiation(4) }\n    MAX-ACCESS   read-only\n
    \   STATUS       current\n    DESCRIPTION\n       \"Indicates which components
    of ILMI are operational on this\n       interface.\"\n    ::= { atmInterfaceExtEntry
    6 }\n"
  - "atmIntfIlmiFsmState    OBJECT-TYPE\n    SYNTAX       INTEGER { stopped(1),\n
    \                          linkFailing(2),\n                           establishing(3),\n
    \                          configuring(4),\n                           retrievingNetworkPrefixes(5),\n
    \                          registeringNetworkPrefixes(6),\n                           retrievingAddresses(7),\n
    \                          registeringAddresses(8),\n                           verifying(9)
    }\n    MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"Indicates
    the state of the ILMI Finite State Machine associated\n       with this interface.\"\n
    \       REFERENCE\n            \"ATM Forum, Integrated Local Management Interface\n
    \            (ILMI) Specification, Version 4.0, af-ilmi-0065.000,\n             September
    1996, Appendix 1\"\n    ::= { atmInterfaceExtEntry 7 }\n"
  - "atmIntfIlmiEstablishConPollIntvl    OBJECT-TYPE\n    SYNTAX       Integer32 (1..65535)\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n       \"The amount of time S between successive transmissions
    of ILMI\n       messages on this interface for the purpose of detecting\n       establishment
    of ILMI connectivity.\"\n    REFERENCE\n       \"ATM Forum, Integrated Local Management
    Interface\n        (ILMI) Specification, Version 4.0, af-ilmi-0065.000,\n        September
    1996, Section 8.3.1\"\n    DEFVAL { 1 }\n    ::= { atmInterfaceExtEntry 8 }\n"
  - "atmIntfIlmiCheckConPollIntvl    OBJECT-TYPE\n    SYNTAX       Integer32 (0..65535)\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n       \"The amount of time T between successive transmissions
    of ILMI\n       messages on this interface for the purpose of detecting loss of\n
    \      ILMI connectivity.  The distinguished value zero disables ILMI\n       connectivity
    procedures on this interface.\"\n    REFERENCE\n       \"ATM Forum, Integrated
    Local Management Interface\n        (ILMI) Specification, Version 4.0, af-ilmi-0065.000,\n
    \       September 1996, Section 8.3.1\"\n    DEFVAL { 5 }\n    ::= { atmInterfaceExtEntry
    9 }\n"
  - "atmIntfIlmiConPollInactFactor    OBJECT-TYPE\n    SYNTAX       Integer32 (0..65535)\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"The
    number K of consecutive polls on this interface for which no\n       ILMI response
    message is received before ILMI connectivity is\n       declared lost.\"\n    REFERENCE\n
    \      \"ATM Forum, Integrated Local Management Interface\n        (ILMI) Specification,
    Version 4.0, af-ilmi-0065.000,\n        September 1996, Section 8.3.1\"\n    DEFVAL
    { 4 }\n    ::= { atmInterfaceExtEntry 10 }\n"
  - "atmIntfIlmiPublicPrivateIndctr    OBJECT-TYPE\n    SYNTAX       INTEGER {\n                           other(1),\n
    \                          public(2),\n                           private(3)\n
    \                          }\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n       \"Specifies whether this end of the interface is advertised
    in\n       ILMI as a device of the `public' or `private' type.\"\n    DEFVAL {
    private }\n    ::= { atmInterfaceExtEntry 11 }\n"
  - "atmInterfaceConfMaxSvpcVpi    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..4095)\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"The
    maximum VPI that the signalling stack on the ATM interface\n       is configured
    to support for allocation to switched virtual path\n       connections.\"\n    ::=
    { atmInterfaceExtEntry 12 }\n"
  - "atmInterfaceCurrentMaxSvpcVpi    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..4095)\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    maximum VPI that the signalling stack on the ATM interface\n       may currently
    allocate to switched virtual path connections.\n       This value is the minimum
    of atmInterfaceConfMaxSvpcVpi, and the\n       atmInterfaceMaxSvpcVpi of the interface's
    UNI/NNI peer.\n       If the interface does not negotiate with its peer to determine\n
    \      the maximum VPI that can be allocated to SVPCs on the interface,\n       then
    the value of this object must equal\n       atmInterfaceConfMaxSvpcVpi. \"\n    ::=
    { atmInterfaceExtEntry 13 }\n"
  - "atmInterfaceConfMaxSvccVpi    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..4095)\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"The
    maximum VPI that the signalling stack on the ATM interface\n       is configured
    to support for allocation to switched virtual\n       channel connections.\"\n
    \   ::= { atmInterfaceExtEntry 14 }\n"
  - "atmInterfaceCurrentMaxSvccVpi    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..4095)\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    maximum VPI that the signalling stack on the ATM interface\n       may currently
    allocate to switched virtual channel connections.\n       This value is the minimum
    of atmInterfaceConfMaxSvccVpi, and the\n       atmInterfaceConfMaxSvccVpi of the
    interface's UNI/NNI peer.\n       If the interface does not negotiate with its
    peer to determine\n       the maximum VPI that can be allocated to SVCCs on the
    interface,\n       then the value of this object must equal\n       atmInterfaceConfMaxSvccVpi.\"\n
    \   ::= { atmInterfaceExtEntry 15 }\n"
  - "atmInterfaceConfMinSvccVci    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..65535)\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"The
    minimum VCI that the signalling stack on the ATM interface\n       is configured
    to support for allocation to switched virtual\n       channel connections.\"\n
    \   ::= { atmInterfaceExtEntry 16 }\n"
  - "atmInterfaceCurrentMinSvccVci    OBJECT-TYPE\n    SYNTAX       INTEGER  (0..65535)\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    minimum VCI that the signalling stack on the ATM interface\n       may currently
    allocate to switched virtual channel connections.\n       This value is the maximum
    of atmInterfaceConfMinSvccVci, and the\n       atmInterfaceConfMinSvccVci of the
    interface's UNI/NNI peer.\n       If the interface does not negotiate with its
    peer to determine\n       the minimum VCI that can be allocated to SVCCs on the
    interface,\n       then the value of this object must equal\n       atmInterfaceConfMinSvccVci.\"\n
    \   ::= { atmInterfaceExtEntry 17 }\n"
  - "atmIntfSigVccRxTrafficDescrIndex    OBJECT-TYPE\n    SYNTAX       AtmTrafficDescrParamIndex\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"This
    object identifies the row in the atmTrafficDescrParamTable\n       used during
    ILMI auto-configuration to specify the advertised\n       signalling VCC traffic
    parameters for the receive direction.\n       The traffic descriptor resulting
    from ILMI auto-configuration of\n       the signalling VCC is indicated in the
    atmVclTable.\"\n    ::= { atmInterfaceExtEntry 18 }\n"
  - "atmIntfSigVccTxTrafficDescrIndex    OBJECT-TYPE\n    SYNTAX       AtmTrafficDescrParamIndex\n
    \   MAX-ACCESS   read-write\n    STATUS       current\n    DESCRIPTION\n       \"This
    object identifies the row in the atmTrafficDescrParamTable\n       used during
    ILMI auto-configuration to specify the advertised\n       signalling VCC traffic
    parameters for the transmit direction.\n       The traffic descriptor resulting
    from ILMI auto-configuration of\n       the signalling VCC is indicated in the
    atmVclTable.\"\n    ::= { atmInterfaceExtEntry 19 }\n"
  - "atmIntfPvcFailures    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"The number of
    times the operational status of a PVPL or PVCL on\n       this interface has gone
    down.\"\n    ::= { atmInterfaceExtEntry 20 }\n"
  - "atmIntfCurrentlyFailingPVpls    OBJECT-TYPE\n    SYNTAX       Gauge32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"The current
    number of VPLs on this interface for which there is\n       an active row in the
    atmVplTable having an atmVplConnKind value\n       of `pvc' and an atmVplOperStatus
    with a value other than `up'.\"\n    ::= { atmInterfaceExtEntry 21 }\n"
  - "atmIntfCurrentlyFailingPVcls    OBJECT-TYPE\n    SYNTAX       Gauge32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"The current
    number of VCLs on this interface for which there is\n       an active row in the
    atmVclTable having an atmVclConnKind value\n       of `pvc' and an atmVclOperStatus
    with a value other than `up'.\"\n    ::= { atmInterfaceExtEntry 22 }\n"
  - "atmIntfPvcFailuresTrapEnable    OBJECT-TYPE\n    SYNTAX       TruthValue\n    MAX-ACCESS
    \  read-write\n    STATUS       current\n    DESCRIPTION\n       \"Allows the
    generation of traps in response to PVCL or PVPL\n       failures on this interface.\"\n
    \   DEFVAL { false }\n    ::= { atmInterfaceExtEntry 23 }\n"
  - "atmIntfPvcNotificationInterval    OBJECT-TYPE\n    SYNTAX       INTEGER (1..3600)\n
    \   UNITS        \"seconds\"\n    MAX-ACCESS   read-write\n    STATUS       current\n
    \   DESCRIPTION\n       \"The minimum interval between the sending of\n       atmIntfPvcFailuresTrap
    notifications for this interface.\"\n    DEFVAL { 30 }\n    ::= { atmInterfaceExtEntry
    24 }\n"
  - "atmIntfLeafSetupFailures    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of setup
    failures.  For root, this is the number of\n       rejected setup requests and
    for leaf, this is the number of setup\n       failure received.\"\n    ::= { atmInterfaceExtEntry
    25 }\n"
  - "atmIntfLeafSetupRequests    OBJECT-TYPE\n    SYNTAX       Counter32\n    MAX-ACCESS
    \  read-only\n    STATUS       current\n    DESCRIPTION\n       \"Number of setup
    requests.  For root, this includes both incoming\n       setup request and root
    intiated setup requests.\"\n    ::= { atmInterfaceExtEntry 26 }\n  -- 15. ATM
    ILMI Service Registry Table\n"
  - "atmIlmiSrvcRegTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmIlmiSrvcRegEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains a list of all the ATM network services known\n       by this device.\n
    \      The characteristics of these services are made available through\n       the
    ILMI, using the ILMI general-purpose service registry MIB.\n       These services
    may be made available to all ATM interfaces\n       (atmIlmiSrvcRegIndex = 0)
    or to some specific ATM interfaces only\n       (atmIlmiSrvcRegIndex = ATM interface
    index).\"\n    ::= { atm2MIBObjects 15 }\n"
  - "atmIlmiSrvcRegEntry OBJECT-TYPE\n    SYNTAX       AtmIlmiSrvcRegEntry\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Information
    about a single service provider that is available to\n       the user-side of
    an adjacent device through the ILMI.\n       Implementors need to be aware that
    if the size of the\n       atmIlmiSrvcRegServiceID exceeds 112 sub-identifiers
    then OIDs of\n       column instances in this table will have more than 128 sub-\n
    \      identifiers and cannot be accessed using SNMPv1, SNMPv2, or\n       SNMPv3.\"\n
    \   INDEX { atmIlmiSrvcRegIndex,\n            atmIlmiSrvcRegServiceID,\n            atmIlmiSrvcRegAddressIndex
    }\n    ::= { atmIlmiSrvcRegTable 1 }\n"
  - "AtmIlmiSrvcRegEntry ::= SEQUENCE {\n           atmIlmiSrvcRegIndex             InterfaceIndexOrZero,\n
    \          atmIlmiSrvcRegServiceID         OBJECT IDENTIFIER,\n           atmIlmiSrvcRegAddressIndex
    \     INTEGER,\n           atmIlmiSrvcRegATMAddress        AtmAddr,\n           atmIlmiSrvcRegParm1
    \            OCTET STRING,\n           atmIlmiSrvcRegRowStatus         RowStatus\n
    \          }\n"
  - "atmIlmiSrvcRegIndex OBJECT-TYPE\n    SYNTAX       InterfaceIndexOrZero\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"The ATM
    interface where the service defined in this entry can be\n       made available
    to an ATM device attached to this interface.\n       The value of 0 has a special
    meaning: when an ATM service is\n       defined in an entry whose atmIlmiSrvcRegIndex
    is zero, the ATM\n       service is available to ATM devices connected to any
    ATM\n       interface.  (default value(s)).\n       When the user-side of an adjacent
    device queries the content of\n       the ILMI service registry MIB (using the
    ILMI protocol), the\n       local network-side responds with the ATM services
    defined in\n       atmIlmiSrvcRegTable entries, provided that these entries are\n
    \      indexed by:\n       - the corresponding ifIndex value (atmIlmiSrvcRegIndex\n
    \        equal to the ifIndex of the interface to which the\n         adjacent
    device is connected) - zero (atmIlmiSrvcRegIndex=0).\"\n    ::= { atmIlmiSrvcRegEntry
    1 }\n"
  - "atmIlmiSrvcRegServiceID OBJECT-TYPE\n    SYNTAX       OBJECT IDENTIFIER\n    MAX-ACCESS
    \  not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This is
    the service identifier which uniquely identifies the\n       type of service at
    the address provided in the table.  The object\n       identifiers for the LAN
    Emulation Configuration Server (LECS) and\n       the ATM Name Server (ANS) are
    defined in the ATM Forum ILMI\n       Service Registry MIB.  The object identifiers
    for the ATMARP\n       Server, the Multicast Address Resolution Server (MARS),
    and the\n       NHRP Server (NHS) are defined in RFC 2601, RFC 2602, and RFC\n
    \      2603, respectively.\"\n    ::= { atmIlmiSrvcRegEntry 2 }\n"
  - "atmIlmiSrvcRegAddressIndex OBJECT-TYPE\n    SYNTAX       INTEGER (1..2147483647)\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An
    arbitrary integer to differentiate multiple rows containing\n       different
    ATM addresses for the same service on the same\n       interface.  This number
    need NOT be the same as the corresponding\n       ILMI atmfSrvcRegAddressIndex
    MIB object.\"\n    ::= { atmIlmiSrvcRegEntry 3 }\n"
  - "atmIlmiSrvcRegATMAddress OBJECT-TYPE\n    SYNTAX       AtmAddr\n    MAX-ACCESS
    \  read-create\n    STATUS       current\n    DESCRIPTION\n       \"This is the
    full address of the service.  The user-side of the\n       adjacent device may
    use this address to establish a connection\n       with the service.\"\n    ::=
    { atmIlmiSrvcRegEntry 4 }\n"
  - "atmIlmiSrvcRegParm1 OBJECT-TYPE\n    SYNTAX       OCTET STRING (SIZE(1..255))\n
    \   MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n       \"An
    octet string used according to the value of\n       atmIlmiSrvcRegServiceID.\"\n
    \   ::= { atmIlmiSrvcRegEntry 5 }\n"
  - "atmIlmiSrvcRegRowStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS
    \  read-create\n    STATUS       current\n    DESCRIPTION\n       \"This object
    is used to create or destroy an entry from this\n       table.\"\n    ::= { atmIlmiSrvcRegEntry
    6 }\n  -- 16. ILMI Network Prefix Table\n"
  - "atmIlmiNetworkPrefixTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmIlmiNetworkPrefixEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"A
    table specifying per-interface network prefix(es) supplied by\n       the network
    side of the UNI during ILMI address registration.\n       When no network prefixes
    are specified for a particular\n       interface, one or more network prefixes
    based on the switch\n       address(es) may be used for ILMI address registration.\"\n
    \   ::= { atm2MIBObjects 16 }\n"
  - "atmIlmiNetworkPrefixEntry OBJECT-TYPE\n    SYNTAX       AtmIlmiNetworkPrefixEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Information
    about a single network prefix supplied by the\n       network side of the UNI
    during ILMI address registration.  Note\n       that the index variable atmIlmiNetPrefixPrefix
    is a variable-\n       length string, and as such the rule for variable-length
    strings\n       in section 7.7 of RFC 2578 applies.\"\n    INDEX   { ifIndex,\n
    \             atmIlmiNetPrefixPrefix }\n    ::= { atmIlmiNetworkPrefixTable 1
    }\n"
  - "AtmIlmiNetworkPrefixEntry ::=\n    SEQUENCE {\n           atmIlmiNetPrefixPrefix
    \      AtmIlmiNetworkPrefix,\n           atmIlmiNetPrefixRowStatus    RowStatus\n
    \   }\n"
  - "atmIlmiNetPrefixPrefix    OBJECT-TYPE\n    SYNTAX       AtmIlmiNetworkPrefix\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"The
    network prefix specified for use in ILMI address\n       registration.\"\n    ::=
    { atmIlmiNetworkPrefixEntry 1 }\n"
  - "atmIlmiNetPrefixRowStatus    OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS
    \  read-create\n    STATUS       current\n    DESCRIPTION\n       \"Used to create,
    delete, activate and de-activate network\n       prefixes used in ILMI address
    registration.\"\n    ::= { atmIlmiNetworkPrefixEntry 2 }\n  -- 17. ATM Switch
    Address Table\n"
  - "atmSwitchAddressTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmSwitchAddressEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains one or more ATM endsystem addresses on a\n       per-switch basis.
    \ These addresses are used to identify the\n       switch.  When no ILMI network
    prefixes are configured for certain\n       interfaces, network prefixes based
    on the switch address(es) may\n       be used for ILMI address registration.\"\n
    \   ::= { atm2MIBObjects 17 }\n"
  - "atmSwitchAddressEntry    OBJECT-TYPE\n    SYNTAX       AtmSwitchAddressEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An
    entry in the ATM Switch Address table.\"\n    INDEX { atmSwitchAddressIndex }\n
    \   ::= { atmSwitchAddressTable 1 }\n"
  - "AtmSwitchAddressEntry ::=\n    SEQUENCE {\n               atmSwitchAddressIndex
    \          Integer32,\n               atmSwitchAddressAddress         OCTET STRING,\n
    \              atmSwitchAddressRowStatus       RowStatus\n    }\n"
  - "atmSwitchAddressIndex   OBJECT-TYPE\n    SYNTAX       Integer32 (1..65535)\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"An
    arbitrary index used to enumerate the ATM endsystem addresses\n       for this
    switch.\"\n    ::= { atmSwitchAddressEntry 1 }\n"
  - "atmSwitchAddressAddress   OBJECT-TYPE\n    SYNTAX       OCTET STRING (SIZE(13|20))\n
    \   MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n       \"An
    ATM endsystem address or address prefix used to identify this\n       switch.
    \ When no ESI or SEL field is specified, the switch may\n       generate the ESI
    and SEL fields automatically to obtain a\n       complete 20-byte ATM endsystem
    address.\"\n    ::= { atmSwitchAddressEntry 2 }\n"
  - "atmSwitchAddressRowStatus OBJECT-TYPE\n    SYNTAX       RowStatus\n    MAX-ACCESS
    \  read-create\n    STATUS       current\n    DESCRIPTION\n       \"Used to create,
    delete, activate, and de-activate addresses used\n       to identify this switch.\"\n
    \   ::= { atmSwitchAddressEntry 3 }\n  -- 18. ATM VP Cross-Connect Extension Table\n"
  - "atmVpCrossConnectXTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmVpCrossConnectXEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains one row per VP Cross-Connect represented in\n       the atmVpCrossConnectTable.\"\n
    \   ::= { atm2MIBObjects 18 }\n"
  - "atmVpCrossConnectXEntry       OBJECT-TYPE\n    SYNTAX       AtmVpCrossConnectXEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Information
    about a particular ATM VP Cross-Connect.\n       Each entry provides an two objects
    that name the Cross-Connect.\n       One is assigned by the Service User and the
    other by the Service\n       Provider.\"\n    AUGMENTS     { atmVpCrossConnectEntry
    }\n    ::= { atmVpCrossConnectXTable 1 }\n"
  - "AtmVpCrossConnectXEntry ::= SEQUENCE {\n      atmVpCrossConnectUserName       SnmpAdminString,\n
    \     atmVpCrossConnectProviderName   SnmpAdminString\n"
  - '}

    '
  - "atmVpCrossConnectUserName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..255))\n
    \   MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n       \"This
    is a service user assigned textual representation of a VPC\n       PVC.\"\n    ::=
    { atmVpCrossConnectXEntry 1 }\n"
  - "atmVpCrossConnectProviderName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..255))\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"This
    is a system supplied textual representation of VPC PVC.  It\n       is assigned
    by the service provider.\"\n    ::= { atmVpCrossConnectXEntry 2 }\n  -- 19. ATM
    VC Cross-Connect Extension Table\n"
  - "atmVcCrossConnectXTable OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmVcCrossConnectXEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"This
    table contains one row per VC Cross-Connect represented in\n       the atmVcCrossConnectTable.\"\n
    \   ::= { atm2MIBObjects 19 }\n"
  - "atmVcCrossConnectXEntry       OBJECT-TYPE\n    SYNTAX       AtmVcCrossConnectXEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Information
    about a particular ATM VC Cross-Connect.\n       Each entry provides an two objects
    that name the Cross-Connect.\n       One is assigned by the Service User and the
    other by the Service\n       Provider.\"\n    AUGMENTS   { atmVcCrossConnectEntry
    }\n    ::= { atmVcCrossConnectXTable 1 }\n"
  - "AtmVcCrossConnectXEntry ::= SEQUENCE {\n      atmVcCrossConnectUserName       SnmpAdminString,\n
    \     atmVcCrossConnectProviderName   SnmpAdminString\n"
  - '}

    '
  - "atmVcCrossConnectUserName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..255))\n
    \   MAX-ACCESS   read-create\n    STATUS       current\n    DESCRIPTION\n       \"This
    is a service user assigned textual representation of a VCC\n       PVC.\"\n    ::=
    { atmVcCrossConnectXEntry 1 }\n"
  - "atmVcCrossConnectProviderName OBJECT-TYPE\n    SYNTAX       SnmpAdminString (SIZE(0..255))\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"This
    is a system supplied textual representation of VCC PVC.  It\n       is assigned
    by the service provider.\"\n    ::= { atmVcCrossConnectXEntry 2 }\n  -- 20. Currently
    Failing PVPL Table\n"
  - "atmCurrentlyFailingPVplTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmCurrentlyFailingPVplEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"A
    table indicating all VPLs for which there is an active row in\n       the atmVplTable
    having an atmVplConnKind value of `pvc' and an\n       atmVplOperStatus with a
    value other than `up'.\"\n    ::= { atm2MIBObjects 20 }\n"
  - "atmCurrentlyFailingPVplEntry    OBJECT-TYPE\n    SYNTAX       AtmCurrentlyFailingPVplEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Each
    entry in this table represents a VPL for which the\n       atmVplRowStatus is
    `active', the atmVplConnKind is `pvc', and the\n       atmVplOperStatus is other
    than `up'.\"\n    INDEX   { ifIndex, atmVplVpi }\n    ::= { atmCurrentlyFailingPVplTable
    1 }\n"
  - "AtmCurrentlyFailingPVplEntry ::=\n    SEQUENCE {\n               atmCurrentlyFailingPVplTimeStamp
    \   TimeStamp\n    }\n"
  - "atmCurrentlyFailingPVplTimeStamp    OBJECT-TYPE\n    SYNTAX       TimeStamp\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    time at which this PVPL began to fail.\"\n    ::= { atmCurrentlyFailingPVplEntry
    1 }\n  -- 21. Currently Failing PVCL Table\n"
  - "atmCurrentlyFailingPVclTable    OBJECT-TYPE\n    SYNTAX       SEQUENCE OF AtmCurrentlyFailingPVclEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"A
    table indicating all VCLs for which there is an active row in\n       the atmVclTable
    having an atmVclConnKind value of `pvc' and an\n       atmVclOperStatus with a
    value other than `up'.\"\n    ::= { atm2MIBObjects 21 }\n"
  - "atmCurrentlyFailingPVclEntry    OBJECT-TYPE\n    SYNTAX       AtmCurrentlyFailingPVclEntry\n
    \   MAX-ACCESS   not-accessible\n    STATUS       current\n    DESCRIPTION\n       \"Each
    entry in this table represents a VCL for which the\n       atmVclRowStatus is
    `active', the atmVclConnKind is `pvc', and the\n       atmVclOperStatus is other
    than `up'.\"\n    INDEX        { ifIndex, atmVclVpi, atmVclVci }\n    ::= { atmCurrentlyFailingPVclTable
    1 }\n"
  - "AtmCurrentlyFailingPVclEntry ::=\n    SEQUENCE {\n               atmCurrentlyFailingPVclTimeStamp
    \   TimeStamp\n    }\n"
  - "atmCurrentlyFailingPVclTimeStamp    OBJECT-TYPE\n    SYNTAX       TimeStamp\n
    \   MAX-ACCESS   read-only\n    STATUS       current\n    DESCRIPTION\n       \"The
    time at which this PVCL began to fail.\"\n    ::= { atmCurrentlyFailingPVclEntry
    1 }\n  -- ATM PVC Traps\n  atmPvcTraps    OBJECT IDENTIFIER ::= { atm2MIBTraps
    1 }\n  atmPvcTrapsPrefix    OBJECT IDENTIFIER ::= { atmPvcTraps 0 }\n  atmIntfPvcFailuresTrap
    \   NOTIFICATION-TYPE\n    OBJECTS      { ifIndex, atmIntfPvcFailures,\n                   atmIntfCurrentlyFailingPVpls,\n
    \                  atmIntfCurrentlyFailingPVcls }\n    STATUS       current\n
    \   DESCRIPTION\n       \"A notification indicating that one or more PVPLs or
    PVCLs on\n       this interface has failed since the last atmPvcFailuresTrap was\n
    \      sent.  If this trap has not been sent for the last\n       atmIntfPvcNotificationInterval,
    then it will be sent on the next\n       increment of atmIntfPvcFailures.\"\n
    \   ::= { atmPvcTrapsPrefix 1 }\n  -- Conformance Information\n"
  - 'atm2MIBConformance   OBJECT IDENTIFIER ::= {atm2MIB 3}

    '
  - 'atm2MIBGroups        OBJECT IDENTIFIER ::= {atm2MIBConformance 1}

    '
  - "atm2MIBCompliances   OBJECT IDENTIFIER ::= {atm2MIBConformance 2}\n  -- Compliance
    Statements\n"
  - "atm2MIBCompliance   MODULE-COMPLIANCE\n    STATUS       current\n    DESCRIPTION\n
    \       \"The compliance statement for SNMP entities which represent ATM\n         interfaces.
    \ The compliance statements are used to determine\n         if a particular group
    or object applies to hosts,\n         networks/switches, or both.  The Common
    group is defined as\n         applicable to all three.\"\n    MODULE  -- this
    module\n    MANDATORY-GROUPS  { atmCommonGroup }\n  -- Objects in the ATM Switch/Service/Host
    Group\n    GROUP       atmCommonStatsGroup\n    DESCRIPTION\n        \"This group
    is mandatory for systems that are supporting\n         per-VPC or per-VCC counters.\"\n
    \   OBJECT       atmVplLogicalPortDef\n    MIN-ACCESS   read-only\n    DESCRIPTION\n
    \       \"This object is mandatory for systems support ATM Logical\n         Port
    interfaces.\"\n    OBJECT       atmIntfSigVccRxTrafficDescrIndex\n    DESCRIPTION\n
    \       \"This object is mandatory for systems that support negotiation\n         of
    signalling VCC traffic parameters through ILMI.\"\n    OBJECT       atmIntfSigVccTxTrafficDescrIndex\n
    \   DESCRIPTION\n        \"This object is mandatory for systems that support negotiation\n
    \        of signalling VCC traffic parameters through ILMI.\"\n    OBJECT       atmCurrentlyFailingPVplTimeStamp\n
    \   DESCRIPTION\n        \"This object is optional.\"\n    OBJECT       atmCurrentlyFailingPVclTimeStamp\n
    \   DESCRIPTION\n        \"This object is optional.\"\n    OBJECT       atmIntfLeafSetupFailures\n
    \   DESCRIPTION\n        \"This object is optional.\"\n    OBJECT       atmIntfLeafSetupRequests\n
    \   DESCRIPTION\n        \"This object is optional.\"\n  -- Objects in the ATM
    Switch/Service Group\n    GROUP        atmSwitchServcGroup\n    DESCRIPTION\n
    \       \"This group is mandatory for a Switch/Service that implements\n         ATM
    interfaces.\"\n    OBJECT       atmIfRegAddrRowStatus\n    MIN-ACCESS   read-only\n
    \   DESCRIPTION\n        \"Write access is not required, and only one of the six\n
    \        enumerated values for the RowStatus textual convention need\n         be
    supported, specifically: active(1).\"\n    OBJECT       atmSvcVpCrossConnectRowStatus\n
    \   MIN-ACCESS   read-only\n    DESCRIPTION\n        \"Write access is not required,
    and only one of the six\n         enumerated values for the RowStatus textual
    convention need\n         be supported, specifically: active(1)\"\n    OBJECT
    \      atmSvcVcCrossConnectRowStatus\n    MIN-ACCESS   read-only\n    DESCRIPTION\n
    \       \"Write access is not required, and only one of the six\n         enumerated
    values for the RowStatus textual convention need\n         be supported, specifically:
    active(1)\"\n  -- Objects in the ATM Switch/Service Signalling Group\n    GROUP
    \      atmSwitchServcSigGroup\n    DESCRIPTION\n        \"This group's write access
    is not required.\"\n  -- Objects in the ATM Switch/Service Notifications Group\n
    \   GROUP        atmSwitchServcNotifGroup\n    DESCRIPTION\n        \"This group
    is optional for systems implementing support for\n         an ATM Switch or an
    ATM Network Service.\"\n  -- Objects in the ATM Switch Group\n    GROUP        atmSwitchGroup\n
    \   DESCRIPTION\n        \"This group is optional for a switch that implements
    ATM\n         interfaces.\"\n  -- Objects in the ATM Service Group\n    GROUP
    \       atmServcGroup\n    DESCRIPTION\n        \"This group is mandatory for
    systems implementing support for\n         an ATM Network Service.\"\n  -- Objects
    in the ATM Host Group\n    GROUP        atmHostGroup\n    DESCRIPTION\n        \"This
    group is mandatory for a Host that implements ATM\n         interfaces.\"\n    OBJECT
    \      atmVclAddrType\n    MIN-ACCESS   read-only\n    DESCRIPTION\n        \"Write
    access is not required.\"\n    OBJECT       atmVclAddrRowStatus\n    MIN-ACCESS
    \  read-only\n    DESCRIPTION\n        \"Write access is not required, and only
    one of the six\n         enumerated values for the RowStatus textual convention
    need\n         be supported, specifically:  active(1).\"\n  -- ATM Host Sig Descriptor
    Parameter Group\n    GROUP        atmHostSigDescrGroup\n    DESCRIPTION\n        \"This
    group is mandatory for a Host that implements ATM\n         interfaces.  Write
    access is not required for this group.\"\n    ::= { atm2MIBCompliances 1 }\n  --
    **********************************************\n  -- Units of Conformance\n  --
    Mandatory for ATM hosts and switch/service providers\n"
  - 'atmCommonGroup     OBJECT-GROUP

    '
  - "OBJECTS {\n    atmSigSSCOPConEvents,\n    atmSigSSCOPErrdPdus,\n    atmSigDetectSetupAttempts,\n
    \   atmSigEmitSetupAttempts,\n    atmSigDetectUnavailRoutes,\n    atmSigEmitUnavailRoutes,\n
    \   atmSigDetectUnavailResrcs,\n    atmSigEmitUnavailResrcs,\n    atmSigDetectCldPtyEvents,\n
    \   atmSigEmitCldPtyEvents,\n    atmSigDetectMsgErrors,\n    atmSigEmitMsgErrors,\n
    \   atmSigDetectClgPtyEvents,\n    atmSigEmitClgPtyEvents,\n    atmSigDetectTimerExpireds,\n
    \   atmSigEmitTimerExpireds,\n    atmSigDetectRestarts,\n    atmSigEmitRestarts,\n
    \   atmSigInEstabls,\n    atmSigOutEstabls,\n    atmVplLogicalPortDef,\n    atmVplLogicalPortIndex,\n
    \   atmInterfaceConfMaxSvpcVpi,\n    atmInterfaceCurrentMaxSvpcVpi,\n    atmInterfaceConfMaxSvccVpi,\n
    \   atmInterfaceCurrentMaxSvccVpi,\n    atmInterfaceConfMinSvccVci,\n    atmInterfaceCurrentMinSvccVci,\n
    \   atmIntfSigVccRxTrafficDescrIndex,\n    atmIntfSigVccTxTrafficDescrIndex,\n
    \   atmIntfPvcFailures,\n    atmIntfCurrentlyFailingPVpls,\n    atmIntfCurrentlyFailingPVcls,\n
    \   atmIntfPvcNotificationInterval,\n    atmIntfPvcFailuresTrapEnable,\n    atmIntfLeafSetupFailures,\n
    \   atmIntfLeafSetupRequests,\n    atmIntfConfigType,\n    atmIntfActualType,\n
    \   atmIntfConfigSide,\n    atmIntfActualSide,\n    atmIntfIlmiAdminStatus,\n
    \   atmIntfIlmiOperStatus,\n    atmIntfIlmiFsmState,\n    atmIntfIlmiEstablishConPollIntvl,\n
    \   atmIntfIlmiCheckConPollIntvl,\n    atmIntfIlmiConPollInactFactor,\n    atmIntfIlmiPublicPrivateIndctr,\n
    \   atmCurrentlyFailingPVplTimeStamp,\n    atmCurrentlyFailingPVclTimeStamp\n"
  - "}\n  STATUS       current\n  DESCRIPTION\n    \"A collection of objects providing
    information\n    for a Switch/Service/Host that implements\n    ATM interfaces.\"\n
    \ ::= { atm2MIBGroups 1 }\n"
  - 'atmCommonStatsGroup     OBJECT-GROUP

    '
  - "OBJECTS {\n    atmVclStatTotalCellIns,\n    atmVclStatClp0CellIns,\n    atmVclStatTotalDiscards,\n
    \   atmVclStatClp0Discards,\n    atmVclStatTotalCellOuts,\n    atmVclStatClp0CellOuts,\n
    \   atmVclStatClp0Tagged,\n    atmVplStatTotalCellIns,\n    atmVplStatClp0CellIns,\n
    \   atmVplStatTotalDiscards,\n    atmVplStatClp0Discards,\n    atmVplStatTotalCellOuts,\n
    \   atmVplStatClp0CellOuts,\n    atmVplStatClp0Tagged\n"
  - "}\n  STATUS       current\n  DESCRIPTION\n    \"A collection of objects providing
    information\n    for a Switch/Service/Host that implements\n    ATM VCL and VPL
    Statistics\"\n  ::= { atm2MIBGroups 2 }\n  atmSwitchServcGroup     OBJECT-GROUP\n
    \ OBJECTS {\n    atmIlmiSrvcRegATMAddress,\n    atmIlmiSrvcRegParm1,\n    atmIlmiSrvcRegRowStatus,\n
    \   atmIlmiNetPrefixRowStatus,\n    atmSvcVpCrossConnectCreationTime,\n    atmSvcVpCrossConnectRowStatus,\n
    \   atmSvcVcCrossConnectCreationTime,\n    atmSvcVcCrossConnectRowStatus,\n    atmIfRegAddrAddressSource,\n
    \   atmIfRegAddrOrgScope,\n    atmIfRegAddrRowStatus}\n  STATUS       current\n
    \ DESCRIPTION\n    \"A collection of objects providing information\n    for a
    Switch/Service that implements ATM interfaces.\"\n  ::= { atm2MIBGroups 3 }\n
    \ atmSwitchServcSigGroup     OBJECT-GROUP\n  OBJECTS {\n    atmSigSupportClgPtyNumDel,\n
    \   atmSigSupportClgPtySubAddr,\n    atmSigSupportCldPtySubAddr,\n    atmSigSupportHiLyrInfo,\n
    \   atmSigSupportLoLyrInfo,\n    atmSigSupportBlliRepeatInd,\n    atmSigSupportAALInfo,\n
    \   atmSigSupportPrefCarrier}\n  STATUS       current\n  DESCRIPTION\n    \"A
    collection of objects providing information\n    for a Switch/Service that implements
    ATM signalling.\"\n  ::= { atm2MIBGroups 4 }\n    atmSwitchServcNotifGroup     NOTIFICATION-GROUP\n
    \   NOTIFICATIONS { atmIntfPvcFailuresTrap }\n    STATUS       current\n    DESCRIPTION\n
    \       \"A collection of notifications providing information\n        for a Switch/Service
    that implements ATM interfaces.\"\n    ::= { atm2MIBGroups 5 }\n    atmSwitchGroup
    \    OBJECT-GROUP\n        OBJECTS {\n            atmSwitchAddressAddress,\n            atmSwitchAddressRowStatus
    }\n        STATUS       current\n        DESCRIPTION\n          \"A collection
    of objects providing information\n          for an ATM switch.\"\n        ::=
    { atm2MIBGroups 6 }\n    atmServcGroup     OBJECT-GROUP\n    OBJECTS {\n        atmVpCrossConnectUserName,\n
    \       atmVpCrossConnectProviderName,\n        atmVcCrossConnectUserName,\n        atmVcCrossConnectProviderName
    }\n    STATUS       current\n    DESCRIPTION\n        \"A collection of objects
    providing information\n        for an ATM Network Service.\"\n    ::= { atm2MIBGroups
    7 }\n    atmHostGroup     OBJECT-GROUP\n    OBJECTS {\n        atmAal5VclInPkts,\n
    \       atmAal5VclOutPkts,\n        atmAal5VclInOctets,\n        atmAal5VclOutOctets,\n
    \       atmVclAddrType,\n        atmVclAddrRowStatus,\n        atmAddrVclAddrType,\n
    \       atmVclGenSigDescrIndex}\n    STATUS       current\n    DESCRIPTION\n      \"A
    collection of objects providing information\n      for a Host that implements
    ATM interfaces.\"\n    ::= { atm2MIBGroups 8 }\n    atmHostSigDescrGroup     OBJECT-GROUP\n
    \   OBJECTS {\n           atmSigDescrParamAalType,\n           atmSigDescrParamAalSscsType,\n
    \          atmSigDescrParamBhliType,\n           atmSigDescrParamBhliInfo,\n           atmSigDescrParamBbcConnConf,\n
    \          atmSigDescrParamBlliLayer2,\n           atmSigDescrParamBlliLayer3,\n
    \          atmSigDescrParamBlliPktSize,\n           atmSigDescrParamBlliSnapId,\n
    \          atmSigDescrParamBlliOuiPid,\n           atmSigDescrParamRowStatus}\n
    \   STATUS       current\n    DESCRIPTION\n      \"A collection of objects providing
    information\n      for a Host that implements ATM interfaces.\"\n    ::= { atm2MIBGroups
    9 }\n"
  - 'END

    '
  title: 5.  Definitions
- contents:
  - "6.  Acknowledgments\n   This document is a product of the AToMMIB Working Group.
    \ Special\n   thanks go to Gary Hanson of ADC Telecommunications for his quality\n
    \  contributions to this specification.\n   The authors also like to acknowledge
    John Flick of HP for his\n   thorough and valuable review of this memo.\n"
  title: 6.  Acknowledgments
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2515]            Tesink, K., Ed., \"Definitions
      of Managed Objects\n                        for ATM Management\", RFC 2515,
      February 1999.\n   [ATM Forum 3.0]      ATM Forum, \"ATM User-Network Interface\n
      \                       Specification, Version 3.0 (UNI 3.0)\", September\n
      \                       1993.\n   [ATM Forum UNI 3.1]  ATM Forum, \"ATM User-Network
      Interface\n                        Specification, Version 3.1 (UNI 3.1)\", September\n
      \                       1994.\n   [ATM Forum LANE]     ATM Forum, \"LAN Emulation
      Client Management\n                        Specification, Version 1.0\", af-lane-0038.000,\n
      \                       September 1995.\n   [RFC1694]            Brown, T. and
      K. Tesink, \"Definitions of Managed\n                        Objects for SMDS
      Interfaces using SMIv2\", RFC\n                        1694, August 1994.\n
      \  [ATM Forum ILMI]     ATM Forum, \"Integrated Local Management\n                        Interface
      (ILMI) Specification, Version 4.0\",\n   [RFC3592]            Tesink, K., \"Definitions
      of Managed Objects for\n                        the Synchronous Optical Network/Synchronous\n
      \                       Digital Hierarchy (SONET/SDH) Interface Type\",\n                        RFC
      3592, September 2003.\n   [RFC2496]            Fowler, D., Ed., \"Definitions
      of Managed Objects\n                        for the DS3/E3 Interface Type\",
      RFC 2496,\n                        January 1999.\n   [RFC2578]            McCloghrie,
      K., Perkins, D., Schoenwaelder, J.,\n                        Case, J., Rose,
      M., and S. Waldbusser,\n                        \"Structure of Management Information
      Version 2\n                        (SMIv2)\", STD 58, RFC 2578, April 1999.\n
      \  [RFC2579]            McCloghrie, K., Perkins, D., Schoenwaelder, J.,\n                        Case,
      J., Rose, M., and S. Waldbusser, \"Textual\n                        Conventions
      for SMIv2\", STD 58, RFC 2579, April\n                        1999.\n   [RFC2580]
      \           McCloghrie, K., Perkins, D., Schoenwaelder, J.,\n                        Case,
      J., Rose, M., and S. Waldbusser,\n                        \"Conformance Statements
      for SMIv2\", STD 58, RFC\n                        2580, April 1999.\n   [RFC2863]
      \           McCloghrie, K. and F. Kastenholz, \"The\n                        Interfaces
      Group MIB\", RFC 2863, June 2000.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [RFC3410]            Case, J., Mundy, R.,
      Partain, D. and B. Stewart,\n                        \"Introduction and Applicability
      Statements for\n                        Internet-Standard Management Framework\",
      RFC\n                        3410, December 2002.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "8.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.
    \ These are the tables and objects and their\n   sensitivity/vulnerability:\n
    \  Table                              Sensitivity/vulnerability\n   1. atmSvcVpCrossConnectTable
    \      Deletion of VP cross-connects\n   2. atmSvcVcCrossConnectTable       Deletion
    of VC cross-connects\n   3. atmSigStatTable                 Signalling read-only
    statistics\n   4. atmSigSupportTable              Signalling configuration params\n
    \  5. atmSigDescrParamTable           Signalling configuration params\n   6. atmIfRegisteredAddrTable
    \       Interface address table\n   7. atmVclAddrTable                 VCL/Address
    mapping table\n   8. atmAddrVclTable                 VCL/Address mapping table\n
    \                                         (read-only)\n   9. atmVplStatTable                 VPL
    statistics (read-only)\n   10. atmVplLogicalPortTable         VPL logical port
    configuration\n   11. atmVclStatTable                VCL statistics (read-only)\n
    \  12. atmAal5VclStatTable            AAL5 statistics (read-only)\n   13. atmVclGenTable
    \                Signalling configuration\n   14. atmInterfaceExtTable           Interface
    configuration\n   15. atmIlmiSrvcRegTable            ILMI config params\n   16.
    atmIlmiNetworkPrefixTable      ILMI config params\n   17. atmSwitchAddressTable
    \         Switch address info\n   18. atmVpCrossConnectXTable        VP cross-connect
    params\n   19. atmVcCrossConnectXTable        VC cross-connect params\n   20.
    atmCurrentlyFailingPVplTable   PVPL status info (read-only)\n   21. atmCurrentlyFailingPVclTable
    \  PVCL status info (read-only)\n   Some of the readable objects in this MIB module
    (i.e., objects with a\n   MAX-ACCESS other than not-accessible) may be considered
    sensitive or\n   vulnerable in some network environments.  It is thus important
    to\n   control even GET and/or NOTIFY access to these objects and possibly\n   to
    even encrypt the values of these objects when sending them over\n   the network
    via SNMP.\n   SNMP versions prior to SNMPv3 did not include adequate security.\n
    \  Even if the network itself is secure (for example by using IPSec),\n   even
    then, there is no control as to who on the secure network is\n   allowed to access
    and GET/SET (read/change/create/delete) the objects\n   in this MIB module.\n
    \  It is RECOMMENDED that implementers consider the security features as\n   provided
    by the SNMPv3 framework (see [RFC3410], section 8),\n   including full support
    for the SNMPv3 cryptographic mechanisms (for\n   authentication and privacy).\n
    \  Further, deployment of SNMP versions prior to SNMPv3 is NOT\n   RECOMMENDED.
    \ Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable cryptographic
    security.  It is then a customer/operator\n   responsibility to ensure that the
    SNMP entity giving access to an\n   instance of this MIB module is properly configured
    to give access to\n   the objects only to those principals (users) that have legitimate\n
    \  rights to indeed GET or SET (change/create/delete) them.\n"
  title: 8.  Security Considerations
- contents:
  - "9. Intellectual Property Statement\n   The IETF takes no position regarding the
    validity or scope of any\n   intellectual property or other rights that might
    be claimed to\n   pertain to the implementation or use of the technology described
    in\n   this document or the extent to which any license under such rights\n   might
    or might not be available; neither does it represent that it\n   has made any
    effort to identify any such rights.  Information on the\n   IETF's procedures
    with respect to rights in standards-track and\n   standards-related documentation
    can be found in BCP-11.  Copies of\n   claims of rights made available for publication
    and any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementers or users of this specification can\n   be obtained from
    the IETF Secretariat.\"\n   The IETF invites any interested party to bring to
    its attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 9. Intellectual Property Statement
- contents:
  - "10.  Authors' Addresses\n   Faye Ly\n   Pedestal Networks\n   6503 Dumbarton
    Circle\n   Fremont, CA 94555\n   USA\n   Phone (510) 896-2908\n   EMail: faye@pedestalnetworks.com\n
    \  Michael Noto\n   Cisco Systems\n   170 W. Tasman Drive\n   San Jose, CA 95134-1706\n
    \  USA\n   EMail: mnoto@cisco.com\n   Andrew Smith\n   Consultant\n   EMail: ah_smith@acm.org\n
    \  Ethan Mickey Spiegel\n   Cisco Systems\n   170 W. Tasman Drive\n   San Jose,
    CA 95134-1706\n   Phone: (408) 526-6408\n   EMail: mspiegel@cisco.com\n   Kaj
    Tesink\n   Telcordia Technologies\n   331 Newman Springs Road\n   Red Bank, NJ
    \ 07701-7020\n   Phone: (732) 758-5254\n   EMail: kaj@research.telcordia.com\n"
  title: 10.  Authors' Addresses
- contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assignees.\n   This document and the
    information contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET
    SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES,
    EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE
    OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 11.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
