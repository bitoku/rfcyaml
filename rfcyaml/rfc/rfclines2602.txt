Abstract This memo defines how ILMI based Server Discovery, which provides a method for ATM attached hosts and routers to dynamically determine the ATM addresses of servers, shall be used to locate MARS servers.
Introduction Presently, configuring a host or router to use MARS [1] is cumbersome and error prone since it requires at least one ATM address to be statically configured on each host or router in the network.
Further, it is impossible to implement a diskless host to use MARS since local configuration is required.
ILMI based Server Discovery, hereafter referred to as "server discovery," provides a solution to these problems.
A brief overview of the Integrated Local Management Interface (ILMI) and the Service Registry MIB, as defined by the ATM Forum, are provided in this memo.
The reader should consult [2] for a complete description of ILMI and this MIB, but the information contained here is sufficient for an understanding of its use to support MARS server discovery.
The Integrated Local Management Interface (ILMI)
[2] provides a mechanism for ATM attached devices, such as hosts, routers, and ATM switches, to transfer management information.
It is based on the Simple Network Management Protocol (SNMP), Version 1, and supports get, get next, set and trap operations.
The ILMI specification designates the switch side of the ATM link as the 'network side' and the host/router side of the ATM link as the ' user side.'
The Service Registry MIB, which is outlined in Section 3, is implmented on the network side and is queried from the user side.
4.0 Service Registry MIB Server discovery utilizes the Service Registry MIB defined by the ATM Forum in ILMI Specification Version 4.0 [2].
To support the existing framework for IP over ATM, as embodied by ATMARP and MARS, ATM switches must support the Service Registry MIB.
The definition of each field in this structure is: atmfSrvcRegPort The ATM port number for which this entry contains management information.
The value of zero may be used to indicate the ATM interface over which a management request was received.
This is the service identifier that uniquely identifies the type of service at the address provided in the table.
(See Section 3.2 for MARS OID.)
This is the full address of the service.
The ATM client will use this address to establish a connection with the service.
An arbitrary integer to differentiate multiple rows containing different ATM addresses for the same service on the same port.
An octet string whose size and meaning is determined by the value of atmfSrvcRegServiceID.
The service registry table is indexed by atmfSrvcRegPort, atmfSrvcRegServiceID and atmfSrvcRegAddressIndex.
3.1 Service Parameter String A generic parameter string is defined in the service registry table, thus allowing protocol specific parameters to be specified.
To be consistent with [1], the parameter string for MARS shall be: mar$pro.type
(IPv4 is 0x0800, IPv6 is 0x86DD)
(IPv4 and IPv6 are 0)
Length of the protocol address.
(IPv4 is 4, IPv6 is 16)
Network mask represented in network byte order 3.2 Service Object Identifier This OID, assigned in the ATM Forum Service Registry MIB, names MARS within the context of server discovery.
{ 1.3.6.1.4.1.353.1.5.4 } It does not name any managed objects, rather is used to locate appropriate rows in the service registery table.
A MARS client will access the service registry table via ILMI using the SNMP GetNext operator to "sweep" (SNMP parlance for a linear search)
<see Section 3.2>, Index   0} while holding the port number and the serviceID constant.
(Port number 0 is used within ILMI to indicate "this port.")
An MARS client with no local configuration, such as a diskless workstation, must use the row with the lowest index value if multiple MARS servers, possibly for multiple networks, are listed.
MARS clients that have local IP configuration must use a row that has the appropriate IP address.
For example, consider the case where an IP router has 3 logical interfaces defined on a single physical interface with IP addresses 1.0.0.1/8, 128.10.0.1/16 and 171.69.150.226/24.
The router will sweep the service registry table looking for rows that have atmfSrvcRegParm1 values as shown below:
When the correct atmfSrvcRegParm1 values are located, the router may then establish an SVC to the selected server and perform the appropriate protocol operations.
Redundant MARS servers are supported with multiple rows in the service registry table.
This list of MARS servers is ordered with the primary MARS server having the lowest index value.
The MARS client must attempt to utilize the primary MARS server before utilizing a secondary MARS server.
Administrators must ensure that the listed MARS servers are synchronized.
An MARS server shall be locally configured.
The MARS server may retrieve the MARS service registry data to validate the results.
If an incorrect row is retrieved the error may be flagged in a locally significant way.
An augmented version PNNI ("PNNI Augmented Routing," or PAR) [3] has been developed by the ATM Forum.
PAR can distribute data such as MARS server addresses.
Further, the ATM Forum is developing a proxy mechanism for PAR (Proxy PAR) that would allow a UNI attached host or router to access PAR data without a full PAR implementation.
These mechanisms offer a promising way to manage the service registry tables maintained on each switch in an ATM network, yet would not require changes to the mechanism defined in this memo.
Hosts and routers can continue to utilize ILMI based or Proxy PAR based server discovery and network administrators could manage the service registry data with local configuration or via PAR and Proxy PAR.
The server discovery mechanism is built on the ILMI managment framework and the security embodied in that framework.
Access, to user  or network side information is controlled by MIB design rather than protocol security mechanisms.
The service registery MIB, the table containing information for server discovery, is defined in [2] with read only access.
This means that any user side device may query the service registry, but may not modify the service registry via ILMI.
Instead, the sevice registry table must be modified via local configuration on the ATM switch.
Author's  Address Mike Davison Cisco Systems 170 West Tasman Drive San Jose,
