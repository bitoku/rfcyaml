- title: __initial_text__
  contents:
  - '                       On Internet Authentication

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document provides information for the Internet community.\
    \  This\n   memo does not specify an Internet standard of any kind.  Distribution\n\
    \   of this memo is unlimited.\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   The authentication requirements of computing systems and\
    \ network\n   protocols vary greatly with their intended use, accessibility, and\n\
    \   their network connectivity.  This document describes a spectrum of\n   authentication\
    \ technologies and provides suggestions to protocol\n   developers on what kinds\
    \ of authentication might be suitable for some\n   kinds of protocols and applications\
    \ used in the Internet.  It is\n   hoped that this document will provide useful\
    \ information to\n   interested members of the Internet community.\n   Passwords,\
    \ which are vulnerable to passive attack, are not strong\n   enough to be appropriate\
    \ in the current Internet [CERT94].  Further,\n   there is ample evidence that\
    \ both passive and active attacks are not\n   uncommon in the current Internet\
    \ [Bellovin89, Bellovin92, Bellovin93,\n   CB94, Stoll90].  The authors of this\
    \ paper believe that many\n   protocols used in the Internet should have stronger\
    \ authentication\n   mechanisms so that they are at least protected from passive\
    \ attacks.\n   Support for authentication mechanisms secure against active attack\
    \ is\n   clearly desirable in internetworking protocols.\n   There are a number\
    \ of dimensions to the internetwork authentication\n   problem and, in the interest\
    \ of brevity and readability, this\n   document only describes some of them. \
    \ However, factors that a\n   protocol designer should consider include whether\
    \ authentication is\n   between machines or between a human and a machine, whether\
    \ the\n   authentication is local only or distributed across a network,\n   strength\
    \ of the authentication mechanism, and how keys are managed.\n"
- title: 2. DEFINITION OF TERMS
  contents:
  - "2. DEFINITION OF TERMS\n   This section briefly defines some of the terms used\
    \ in this paper to\n   aid the reader in understanding these suggestions.  Other\
    \ references\n   on this subject might be using slightly different terms and\n\
    \   definitions because the security community has not reached full\n   consensus\
    \ on all definitions.  The definitions provided here are\n   specifically focused\
    \ on the matters discussed in this particular\n   document.\n   Active Attack:\
    \  An attempt to improperly modify data, gain\n          authentication, or gain\
    \ authorization by inserting false\n          packets into the data stream or\
    \ by modifying packets\n          transiting the data stream. (See passive attacks\
    \ and replay\n          attacks.)\n   Asymmetric Cryptography:  An encryption\
    \ system that uses different\n          keys, for encryption and decryption. \
    \ The two keys have an\n          intrinsic mathematical relationship to each\
    \ other.  Also\n          called Public~Key~Cryptography.  (See Symmetric Cryptography)\n\
    \   Authentication:  The verification of the identity of the source of\n     \
    \     information.\n   Authorization:  The granting of access rights based on\
    \ an\n          authenticated identity.\n   Confidentiality: The protection of\
    \ information so that someone not\n          authorized to access the information\
    \ cannot read the\n          information even though the unauthorized person might\
    \ see the\n          information's container (e.g., computer file or network\n\
    \          packet).\n   Encryption: A mechanism often used to provide confidentiality.\n\
    \   Integrity:  The protection of information from unauthorized\n          modification.\n\
    \   Key Certificate: A data structure consisting of a public key, the\n      \
    \    identity of the person, system, or role associated with that\n          key,\
    \ and information authenticating both the key and the\n          association between\
    \ that identity and that public key.  The\n          keys used by PEM are one\
    \ example of a key certificate\n          [Kent93].\n   Passive Attack:  An attack\
    \ on an authentication system that inserts\n          no data into the stream,\
    \ but instead relies on being able to\n          passively monitor information\
    \ being sent between other\n          parties.  This information could be used\
    \ a later time in what\n          appears to be a valid session.  (See active\
    \ attack and replay\n          attack.)\n   Plain-text:  Unencrypted text.\n \
    \  Replay Attack:  An attack on an authentication system by recording\n      \
    \    and replaying previously sent valid messages (or parts of\n          messages).\
    \  Any constant authentication information, such as a\n          password or electronically\
    \ transmitted biometric data, can be\n          recorded and used later to forge\
    \ messages that appear to be\n          authentic.\n   Symmetric Cryptography:\
    \ An encryption system that uses the same key\n          for encryption and decryption.\
    \  Sometimes referred to as\n          Secret~Key~Cryptography.\n"
- title: 3. AUTHENTICATION TECHNOLOGIES
  contents:
  - "3. AUTHENTICATION TECHNOLOGIES\n   There are a number of different classes of\
    \ authentication, ranging\n   from no authentication to very strong authentication.\
    \  Different\n   authentication mechanisms are appropriate for addressing different\n\
    \   kinds of authentication problems, so this is not a strict\n   hierarchical\
    \ ordering.\n   3.1 No Authentication\n      For completeness, the simplest authentication\
    \ system is not to\n      have any.  A non-networked PC in a private (secure)\
    \ location is an\n      example of where no authentication is acceptable.  Another\
    \ case is\n      a stand-alone public workstation, such as \"mail reading\"\n\
    \      workstations provided at some conferences,  on which the data is\n    \
    \  not sensitive to disclosure or modification.\n   3.2 Authentication Mechanisms\
    \ Vulnerable to Passive Attacks\n      The simple password check is by far the\
    \ most common form of\n      authentication.  Simple authentication checks come\
    \ in many forms:\n      the key may be a password memorized by the user, it may\
    \ be a\n      physical or electronic item possessed by the user, or it may be\
    \ a\n      unique biological feature.  Simple authentication systems are said\n\
    \      to be \"disclosing\" because if the key is transmitted over a\n      network\
    \ it is disclosed to eavesdroppers.  There have been\n      widespread reports\
    \ of successful passive attacks in the current\n      Internet using already compromised\
    \ machines to engage in passive\n      attacks against additional machines [CERT94].\
    \  Disclosing\n      authentication mechanisms are vulnerable to replay attacks.\n\
    \      Access keys may be stored on the target system, in which case a\n     \
    \ single breach in system security may gain access to all passwords.\n      Alternatively,\
    \ as on most systems, the data stored on the system\n      can be enough to verify\
    \ passwords but not to generate them.\n   3.3 Authentication Mechanisms Vulnerable\
    \ to Active Attacks\n      Non-disclosing password systems have been designed\
    \ to prevent\n      replay attacks.  Several systems have been invented to generate\n\
    \      non-disclosing passwords.  For example, the SecurID Card from\n      Security\
    \ Dynamics uses synchronized clocks for authentication\n      information.  The\
    \ card generates a visual display and thus must be\n      in the possession of\
    \ the person seeking authentication.  The S/Key\n      (TM) authentication system\
    \ developed at Bellcore generates\n      multiple single use passwords from a\
    \ single secret key [Haller94].\n      It does not use a physical token, so it\
    \ is also suitable for\n      machine-machine authentication.  In addition there\
    \ are challenge-\n      response systems in which a device or computer program\
    \ is used to\n      generate a verifiable response from a non-repeating challenge.\n\
    \      S/Key authentication does not require the storage of the user's\n     \
    \ secret key, which is an advantage when dealing with current\n      untrustworthy\
    \ computing systems.  In its current form, the S/Key\n      system is vulnerable\
    \ to a dictionary attack on the secret password\n      (pass phrase) which might\
    \ have been poorly chosen.  The Point-to-\n      Point Protocol's CHAP challenge-response\
    \ system is non-disclosing\n      but only useful locally [LS92, Simpson93]. \
    \ These systems vary in\n      the sensitivity of the information stored in the\
    \ authenticating\n      host, and thus vary in the security requirements that\
    \ must be\n      placed on that host.\n   3.4 Authentication Mechanisms Not Vulnerable\
    \ to Active Attacks\n      The growing use of networked computing environments\
    \ has led to the\n      need for stronger authentication.  In open networks, many\
    \ users\n      can gain access to any information flowing over the network, and\n\
    \      with additional effort, a user can send information that appears\n    \
    \  to come from another user.\n      More powerful authentication systems make\
    \ use of the computation\n      capability of the two authenticating parties.\
    \  Authentication may\n      be unidirectional, for example authenticating users\
    \ to a host\n      computer system, or it may be mutual in which case the entity\n\
    \      logging in is assured of the identity of the host.  Some\n      authentication\
    \ systems use cryptographic techniques and establish\n      (as a part of the\
    \ authentication process) a shared secret (e.g.,\n      session key) that can\
    \ be used for further exchanges.  For example,\n      a user, after completion\
    \ of the authentication process, might be\n      granted an authorization ticket\
    \ that can be used to obtain other\n      services without further authentication.\
    \  These authentication\n      systems might also provide confidentiality (using\
    \ encryption) over\n      insecure networks when required.\n"
- title: 4. CRYPTOGRAPHY
  contents:
  - "4. CRYPTOGRAPHY\n   Cryptographic mechanisms are widely used to provide authentication,\n\
    \   either with or without confidentiality, in computer networks and\n   internetworks.\
    \  There are two basic kinds of cryptography and these\n   are described in this\
    \ section.  A fundamental and recurring problem\n   with cryptographic mechanisms\
    \ is how to securely distribute keys to\n   the communicating parties.  Key distribution\
    \ is addressed in Section\n   6 of this document.\n   4.1 Symmetric Cryptography\n\
    \      Symmetric Cryptography includes all systems that use the same key\n   \
    \   for encryption and decryption.  Thus if anyone improperly obtains\n      the\
    \ key, they can both decrypt and read data encrypted using that\n      key and\
    \ also encrypt false data and make it appear to be valid.\n      This means that\
    \ knowledge of the key by an undesired third party\n      fully compromises the\
    \ confidentiality of the system.  Therefore,\n      the keys used need to be distributed\
    \ securely, either by courier\n      or perhaps by use of a key distribution protocol,\
    \ of which the\n      best known is perhaps that proposed by Needham and Schroeder\n\
    \      [NS78, NS87].  The widely used Data Encryption Standard (DES)\n      algorithm,\
    \ that has been standardized for use to protect\n      unclassified civilian US\
    \ Government information, is perhaps the\n      best known symmetric encryption\
    \ algorithm [NBS77].\n      A well known system that addresses insecure open networks\
    \ as a\n      part of a computing environment is the Kerberos (TM)\n      Authentication\
    \ Service that was developed as part of Project\n      Athena at MIT [SNS88, BM91,\
    \ KN93].  Kerberos is based on Data\n      Encryption Standard (DES) symmetric\
    \ key encryption and uses a\n      trusted (third party) host that knows the secret\
    \ keys of all users\n      and services, and thus can generate credentials that\
    \ can be used\n      by users and servers to prove their identities to other systems.\n\
    \      As with any distributed authentication scheme, these credentials\n    \
    \  will be believed by any computer within the local administrative\n      domain\
    \ or realm.  Hence, if a user's password is disclosed, an\n      attacker would\
    \ be able to masquerade as that user on any system\n      which trusts Kerberos.\
    \  As the Kerberos server knows all secret\n      keys, it must be physically\
    \ secure.  Kerberos session keys can be\n      used to provide confidentiality\
    \ between any entities that trust\n      the key server.\n   4.2 Asymmetric Cryptography\n\
    \      In the late 1970s, a major breakthrough in cryptology led to the\n    \
    \  availability of Asymmetric Cryptography.  This is different from\n      Symmetric\
    \ Cryptography because different keys are used for\n      encryption and decryption,\
    \ which greatly simplifies the key\n      distribution problem.  The best known\
    \ asymmetric system is based\n      on work by Rivest, Shamir, and Adleman and\
    \ is often referred to as\n      \"RSA\" after the authors' initials [RSA78].\n\
    \      SPX is an experimental system that overcomes the limitations of\n     \
    \ the trusted key distribution center of Kerberos by using RSA\n      Public Key\
    \ Cryptography [TA91].  SPX assumes a global hierarchy of\n      certifying authorities\
    \ at least one of which is trusted by each\n      party.  It uses digital signatures\
    \ that consist of a token\n      encrypted in the private key of the signing entity\
    \ and that are\n      validated using the appropriate public key.  The public\
    \ keys are\n      believed to be correct as they are obtained under the signature\
    \ of\n      the trusted certification authority.  Critical parts of the\n    \
    \  authentication exchange are encrypted in the public keys of the\n      receivers,\
    \ thus preventing a replay attack.\n   4.3 Cryptographic Checksums\n      Cryptographic\
    \ checksums are one of the most useful near term tools\n      for protocol designers.\
    \  A cryptographic checksum or message\n      integrity checksum (MIC) provides\
    \ data integrity and\n      authentication but not non-repudiation.  For example,\
    \ Secure SNMP\n      and SNMPv2 both calculate a MD5 cryptographic checksum over\
    \ a\n      shared secret item of data and the information to be authenticated\n\
    \      [Rivest92, GM93].  This serves to authenticate the data origin and\n  \
    \    is believed to be very difficult to forge.  It does not\n      authenticate\
    \ that the data being sent is itself valid, only that\n      it was actually sent\
    \ by the party that claims to have sent it.\n      Crytographic checksums can\
    \ be used to provide relatively strong\n      authentication and are particularly\
    \ useful in host-to-host\n      communications.  The main implementation difficulty\
    \ with\n      cryptographic checksums is key distribution.\n   4.4 Digital Signatures\n\
    \      A digital signature is a cryptographic mechanism which is the\n      electronic\
    \ equivalent of a written signature.  It serves to\n      authenticate a piece\
    \ of data as to the sender.  A digital\n      signature using asymmetric cryptography\
    \ (Public Key) can also be\n      useful in proving that data originated with\
    \ a party even if the\n      party denies having sent it; this property is called\
    \ non-\n      repudiation.  A digital signature provides authentication without\n\
    \      confidentiality and without incurring some of the difficulties in\n   \
    \   full encryption.  Digital signatures are being used with key\n      certificates\
    \ for Privacy Enhanced Mail [Linn93, Kent93,\n      Balenson93, Kaliski93].\n"
- title: 5. USER TO HOST AUTHENTICATION
  contents:
  - "5. USER TO HOST AUTHENTICATION\n   There are a number of different approaches\
    \ to authenticating users to\n   remote or networked hosts.  Two types of hazard\
    \ are created by remote\n   or networked access: First an intruder can eavesdrop\
    \ on the network\n   and obtain user ids and passwords for a later replay attack.\
    \ Even the\n   form of existing passwords provides a potential intruder with a\
    \ head\n   start in guessing new ones.\n   Currently, most systems use plain-text\
    \ disclosing passwords sent over\n   the network (typically using telnet or rlogin)\
    \ from the user to the\n   remote host [Anderson84, Kantor91].  This system does\
    \ not provide\n   adequate protection from replay attacks where an eavesdropper\
    \ gains\n   remote user ids and remote passwords.\n   5.1 Protection Against Passive\
    \ Attack Is Necessary\n      Failure to use at least a non-disclosing password\
    \ system means\n      that unlimited access is unintentionally granted to anyone\
    \ with\n      physical access to the network.  For example, anyone with physical\n\
    \      access to the Ethernet cable can impersonate any user on that\n      portion\
    \ of the network.  Thus, when one has plain-text disclosing\n      passwords on\
    \ an Ethernet, the primary security system is the guard\n      at the door (if\
    \ any exist).  The same problem exists in other LAN\n      technologies such as\
    \ Token-Ring or FDDI.  In some small internal\n      Local Area Networks (LANs)\
    \ it may be acceptable to take this risk,\n      but it is an unacceptable risk\
    \ in an Internet [CERT94].\n      The minimal defense against passive attacks,\
    \ such as\n      eavesdropping, is to use a non-disclosing password system.  Such\
    \ a\n      system can be run from a dumb terminal or a simple communications\n\
    \      program (e.g., Crosstalk or PROCOMM) that emulates a dumb terminal\n  \
    \    on a PC class computer.  Using a stronger authentication system\n      would\
    \ certainly defend against passive attacks against remotely\n      accessed systems,\
    \ but at the cost of not being able to use simple\n      terminals.  It is reasonable\
    \ to expect that the vendors of\n      communications programs and non user-programmable\
    \ terminals (such\n      as X-Terminals) would build in non-disclosing password\
    \ or stronger\n      authentication systems if they were standardized or if a\
    \ large\n      market were offered.  One of the advantages of Kerberos is that,\n\
    \      if used properly, the user's password never leaves the user's\n      workstation.\
    \  Instead they are used to decrypt the user's Kerberos\n      tickets, which\
    \ are themselves encrypted information which are sent\n      over the network\
    \ to application servers.\n   5.2 Perimeter Defenses as Short Term Tool\n    \
    \  Perimeter defenses are becoming more common.  In these systems,\n      the\
    \ user first authenticates to an entity on an externally\n      accessible portion\
    \ of the network, possibly a \"firewall\" host on\n      the Internet, using a\
    \ non-disclosing password system. The user\n      then uses a second system to\
    \ authenticate to each host, or group\n      of hosts, from which service is desired.\
    \  This decouples the\n      problem into two more easily handled situations.\n\
    \      There are several disadvantages to the perimeter defense, so it\n     \
    \ should be thought of as a short term solution.  The gateway is not\n      transparent\
    \ at the IP level, so it must treat every service\n      independently.  The use\
    \ of  double authentication is, in general,\n      difficult or impossible for\
    \ computer-computer communication.  End\n      to end protocols, which are common\
    \ on the connectionless Internet,\n      could easily break.  The perimeter defense\
    \ must be tight and\n      complete, because if it is broken, the inner defenses\
    \ tend to be\n      too weak to stop a potential intruder.  For example, if disclosing\n\
    \      passwords are used internally, these passwords can be learned by\n    \
    \  an external intruder (eavesdropping).  If that intruder is able to\n      penetrate\
    \ the perimeter, the internal system is completely\n      exposed.  Finally, a\
    \ perimeter defense may be open to compromise\n      by internal users looking\
    \ for shortcuts.\n      A frequent form of perimeter defense is the application\
    \ relay.  As\n      these relays are protocol specific, the IP connectivity of\
    \ the\n      hosts inside the perimeter with the outside world is broken and\n\
    \      part of the power of the Internet is lost.\n      An administrative advantage\
    \ of the perimeter defense is that the\n      number of machines that are on the\
    \ perimeter and thus vulnerable\n      to attack is small.  These machines may\
    \ be carefully checked for\n      security hazards, but it is difficult (or impossible)\
    \ to guarantee\n      that the perimeter is leak-proof.  The security of a perimeter\n\
    \      defense is complicated as the gateway machines must pass some\n      types\
    \ of traffic such as electronic mail.  Other network services\n      such as the\
    \ Network Time Protocol (NTP) and the File Transfer\n      Protocol (FTP) may\
    \ also be desirable [Mills92, PR85, Bishop].\n      Furthermore, the perimeter\
    \ gateway system must be able to pass\n      without bottleneck the entire traffic\
    \ load for its security\n      domain.\n   5.3 Protection Against Active Attacks\
    \ Highly Desirable\n      In the foreseeable future, the use of stronger techniques\
    \ will be\n      required to protect against active attacks.  Many corporate\n\
    \      networks based on broadcast technology such as Ethernet probably\n    \
    \  need such techniques.  To defend against an active attack, or to\n      provide\
    \ privacy, it is necessary to use a protocol with session\n      encryption, for\
    \ example Kerberos, or use an authentication\n      mechanism that protects against\
    \ replay attacks, perhaps using time\n      stamps.  In Kerberos, users obtain\
    \ credentials from the Kerberos\n      server and use them for authentication\
    \ to obtain services from\n      other computers on the network.  The computing\
    \ power of the local\n      workstation can be used to decrypt credentials (using\
    \ a key\n      derived from the user-provided password) and store them until\n\
    \      needed.  If the security protocol relies on synchronized clocks,\n    \
    \  then NTPv3 might be useful because it distributes time amongst a\n      large\
    \ number of computers and is one of the few existing Internet\n      protocols\
    \ that includes authentication mechanisms [Bishop,\n      Mills92].\n      Another\
    \ approach to remotely accessible networks of computers is\n      for all externally\
    \ accessible machines to share a secret with the\n      Kerberos KDC.  In a sense,\
    \ this makes these machines \"servers\"\n      instead of general use workstations.\
    \  This shared secret can then\n      be used encrypt all communication between\
    \ the two machines\n      enabling the accessible workstation to relay authentication\n\
    \      information to the KDC in a secure way.\n      Finally, workstations that\
    \ are remotely accessible could use\n      asymmetric cryptographic technology\
    \ to encrypt communications.\n      The workstation's public key would be published\
    \ and well known to\n      all clients.  A user could use the public key to encrypt\
    \ a simple\n      password and the remote system can decrypt the password to\n\
    \      authenticate the user without risking disclosure of the password\n    \
    \  while it is in transit.  A limitation of this workstation-oriented\n      security\
    \ is that it does not authenticate individual users only\n      individual workstations.\
    \  In some environments for example,\n      government multi-level secure or compartmented\
    \ mode workstations,\n      user to user authentication and confidentiality is\
    \ also needed.\n"
- title: 6. KEY DISTRIBUTION & MANAGEMENT
  contents:
  - "6. KEY DISTRIBUTION & MANAGEMENT\n   The discussion thus far has periodically\
    \ mentioned keys, either for\n   encryption or for authentication (e.g., as input\
    \ to a digital\n   signature function).  Key management is perhaps the hardest\
    \ problem\n   faced when seeking to provide authentication in large internetworks.\n\
    \   Hence this section provides a very brief overview of key management\n   technology\
    \ that might be used.\n   The Needham & Schroeder protocol, which is used by Kerberos,\
    \ relies\n   on a central key server.  In a large internetwork, there would need\n\
    \   to be significant numbers of these key servers, at least one key\n   server\
    \ per administrative domain.  There would also need to be\n   mechanisms for separately\
    \ administered key servers to cooperate in\n   generating a session key for parties\
    \ in different administrative\n   domains.  These are not impossible problems,\
    \ but this approach\n   clearly involves significant infrastructure changes.\n\
    \   Most public-key encryption algorithms are computationally expensive\n   and\
    \ so are not ideal for encrypting packets in a network.  However,\n   the asymmetric\
    \ property makes them very useful for setup and exchange\n   of symmetric session\
    \ keys.  In practice, the commercial sector\n   probably uses asymmetric algorithms\
    \ primarily for digital signatures\n   and key exchange, but not for bulk data\
    \ encryption.  Both RSA and the\n   Diffie-Hellman techniques can be used for\
    \ this [DH76].  One advantage\n   of using asymmetric techniques is that the central\
    \ key server can be\n   eliminated.  The difference in key management techniques\
    \ is perhaps\n   the primary difference between Kerberos and SPX.  Privacy Enhanced\n\
    \   Mail has trusted key authorities use digital signatures to sign and\n   authenticate\
    \ the public keys of users [Kent93].  The result of this\n   operation is a key\
    \ certificates which contains the public key of some\n   party and authentication\
    \ that the public key in fact belongs to that\n   party.  Key certificates can\
    \ be distributed in many ways.  One way to\n   distribute key certificates might\
    \ be to add them to existing\n   directory services, for example by extending\
    \ the existing Domain Name\n   System to hold each host's the key certificate\
    \ in a new record type.\n   For multicast sessions, key management is harder because\
    \ the number\n   of exchanges required by the widely used techniques is proportional\n\
    \   to the number of participating parties.  Thus there is a serious\n   scaling\
    \ problem with current published multicast key management\n   techniques.\n  \
    \ Finally, key management mechanisms described in the public literature\n   have\
    \ a long history of subtle flaws.  There is ample evidence of\n   this, even for\
    \ well-known techniques such as the Needham & Schroeder\n   protocol [NS78, NS87].\
    \  In some cases, subtle flaws have only become\n   known after formal methods\
    \ techniques were used in an attempt to\n   verify the protocol.  Hence, it is\
    \ highly desirable that key\n   management mechanisms be kept separate from authentication\
    \ or\n   encryption mechanisms as much as is possible.  For example, it is\n \
    \  probably better to have a key management protocol that is distinct\n   from\
    \ and does not depend upon another security protocol.\n"
- title: 7. AUTHENTICATION OF NETWORK SERVICES
  contents:
  - "7. AUTHENTICATION OF NETWORK SERVICES\n   In addition to needing to authenticate\
    \ users and hosts to each other,\n   many network services need or could benefit\
    \ from authentication.\n   This section describes some approaches to authentication\
    \ in protocols\n   that are primarily host to host in orientation.  As in the\
    \ user to\n   host authentication case, there are several techniques that might\
    \ be\n   considered.\n   The most common case at present is to not have any authentication\n\
    \   support in the protocol.  Bellovin and others have documented a\n   number\
    \ of cases where existing protocols can be used to attack a\n   remote machine\
    \ because there is no authentication in the protocols\n   [Bellovin89].\n   Some\
    \ protocols provide for disclosing passwords to be passed along\n   with the protocol\
    \ information.  The original SNMP protocols used this\n   method and a number\
    \ of the routing protocols continue to use this\n   method [Moy91, LR91, CFSD88].\
    \  This method is useful as a\n   transitional aid to slightly increase security\
    \ and might be\n   appropriate when there is little risk in having a completely\
    \ insecure\n   protocol.\n   There are many protocols that need to support stronger\
    \ authentication\n   mechanisms.  For example, there was widespread concern that\
    \ SNMP\n   needed stronger authentication than it originally had.  This led to\n\
    \   the publication of the Secure SNMP protocols which support optional\n   authentication,\
    \ using a digital signature mechanism, and optional\n   confidentiality, using\
    \ DES encryption.  The digital signatures used\n   in Secure SNMP are based on\
    \ appending a cryptographic checksum to the\n   SNMP information.  The cryptographic\
    \ checksum is computed using the\n   MD5 algorithm and a secret shared between\
    \ the communicating parties\n   so is believed to be difficult to forge or invert.\n\
    \   Digital signature technology has evolved in recent years and should\n   be\
    \ considered for applications requiring authentication but not\n   confidentiality.\
    \  Digital signatures may use a single secret shared\n   among two or more communicating\
    \ parties or it might be based on\n   asymmetric encryption technology.  The former\
    \ case would require the\n   use of predetermined keys or the use of a secure\
    \ key distribution\n   protocol, such as that devised by Needham and Schroeder.\
    \  In the\n   latter case, the public keys would need to be distributed in an\n\
    \   authenticated manner.  If a general key distribution mechanism were\n   available,\
    \ support for optional digital signatures could be added to\n   most protocols\
    \ with little additional expense.  Each protocol could\n   address the key exchange\
    \ and setup problem, but that might make\n   adding support for digital signatures\
    \ more complicated and\n   effectively discourage protocol designers from adding\
    \ digital\n   signature support.\n   For cases where both authentication and confidentiality\
    \ are required\n   on a host-to-host basis, session encryption could be employed\
    \ using\n   symmetric cryptography, asymmetric cryptography, or a combination\
    \ of\n   both.  Use of the asymmetric cryptography simplifies key management.\n\
    \   Each host would encrypt the information while in transit between\n   hosts\
    \ and the existing operating system mechanisms would provide\n   protection within\
    \ each host.\n   In some cases, possibly including electronic mail, it might be\n\
    \   desirable to provide the security properties within the application\n   itself\
    \ in a manner that was truly user-to-user rather than being\n   host-to-host.\
    \  The Privacy Enhanced Mail (PEM) work is employing this\n   approach [Linn93,\
    \ Kent93, Balenson93, Kaliski93].  The recent IETF\n   work on Common Authentication\
    \ Technology might make it easier to\n   implement a secure distributed or networked\
    \ application through use\n   of standard security programming interfaces [Linn93a].\n"
- title: 8. FUTURE DIRECTIONS
  contents:
  - "8. FUTURE DIRECTIONS\n   Systems are moving towards the cryptographically stronger\n\
    \   authentication mechanisms described earlier.  This move has two\n   implications\
    \ for future systems.  We can expect to see the\n   introduction of non-disclosing\
    \ authentication systems in the near\n   term and eventually see more widespread\
    \ use of public key crypto-\n   systems.  Session authentication, integrity, and\
    \ privacy issues are\n   growing in importance. As computer-to-computer communication\
    \ becomes\n   more important, protocols that provide simple human interfaces will\n\
    \   become less important. This is not to say that human interfaces are\n   unimportant;\
    \ they are very important.  It means that these interfaces\n   are the responsibility\
    \ of the applications, not the underlying\n   protocol.  Human interface design\
    \ is beyond the scope of this memo.\n   The use of public key crypto-systems for\
    \ user-to-host authentication\n   simplifies many security issues, but unlike\
    \ simple passwords, a\n   public key cannot be memorized.  As of this writing,\
    \ public key sizes\n   of at least 500 bits are commonly used in the commercial\
    \ world.  It\n   is likely that larger key sizes will be used in the future. \
    \ Thus,\n   users might have to carry their private keys in some electrically\n\
    \   readable form.  The use of read-only storage, such as a floppy disk\n   or\
    \ a magnetic stripe card provides such storage, but it might require\n   the user\
    \ to trust their private keys to the reading device.  Use of a\n   smart card,\
    \ a portable device containing both storage and program\n   might be preferable.\
    \  These devices have the potential to perform the\n   authenticating operations\
    \ without divulging the private key they\n   contain.  They can also interact\
    \ with the user requiring a simpler\n   form of authentication to \"unlock\" the\
    \ card.\n   The use of public key crypto-systems for host-to-host authentication\n\
    \   appears not to have the same key memorization problem as the user-\n   to-host\
    \ case does.  A multiuser host can store its key(s) in space\n   protected from\
    \ users and obviate that problem.  Single user\n   inherently insecure systems,\
    \ such as PCs and Macintoshes, remain\n   difficult to handle but the smart card\
    \ approach should also work for\n   them.\n   If one considers existing symmetric\
    \ algorithms to be 1-key\n   techniques, and existing asymmetric algorithms such\
    \ as RSA to be 2-\n   key techniques, one might wonder whether N-key techniques\
    \ will be\n   developed in the future (i.e., for values of N larger than 2). \
    \ If\n   such N-key technology existed, it might be useful in creating\n   scalable\
    \ multicast key distribution protocols.  There is work\n   currently underway\
    \ examining the possible use of the Core Based Tree\n   (CBT) multicast routing\
    \ technology to provide scalable multicast key\n   distribution [BFC93].\n   The\
    \ implications of this taxonomy are clear.  Strong cryptographic\n   authentication\
    \ is needed in the near future for many protocols.\n   Public key technology should\
    \ be used when it is practical and cost-\n   effective.  In the short term, authentication\
    \ mechanisms vulnerable\n   to passive attack should be phased out in favour of\
    \ stronger\n   authentication mechanisms.  Additional research is needed to develop\n\
    \   improved key management technology and scalable multicast security\n   mechanisms.\n"
- title: SECURITY CONSIDERATIONS
  contents:
  - "SECURITY CONSIDERATIONS\n   This entire memo discusses Security Considerations\
    \ in that it\n   discusses authentication technologies and needs.\n"
- title: ACKNOWLEDGEMENTS
  contents:
  - "ACKNOWLEDGEMENTS\n   This memo has benefited from review by and suggestions from\
    \ the\n   IETF's Common Authentication Technology (CAT) working group, chaired\n\
    \   by John Linn, and from Marcus J. Ranum.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [Anderson84]  Anderson, B., \"TACACS User Identification Telnet\n\
    \   Option\", RFC 927, BBN, December 1984.\n   [Balenson93]  Balenson, D., \"\
    Privacy Enhancement for Internet\n   Electronic Mail: Part III: Algorithms, Modes,\
    \ and Identifiers\", RFC\n   1423, TIS, IAB IRTF PSRG, IETF PEM WG, February 1993.\n\
    \   [BFC93]  Ballardie, A., Francis, P., and J. Crowcroft, \"Core Based\n   Trees\
    \ (CBT) An Architecture for Scalable Inter-Domain Multicast\n   Routing\", Proceedings\
    \ of ACM SIGCOMM93, ACM, San Franciso, CA,\n   September 1993, pp. 85-95.\n  \
    \ [Bellovin89]  Bellovin, S., \"Security Problems in the TCP/IP Protocol\n   Suite\"\
    , ACM Computer Communications Review, Vol. 19, No. 2, March\n   1989.\n   [Bellovin92]\
    \  Bellovin, S., \"There Be Dragons\", Proceedings of the\n   3rd Usenix UNIX\
    \ Security Symposium, Baltimore, MD, September 1992.\n   [Bellovin93]  Bellovin,\
    \ S., \"Packets Found on an Internet\", ACM\n   Computer Communications Review,\
    \ Vol. 23, No. 3, July 1993, pp. 26-31.\n   [BM91]  Bellovin S., and M. Merritt,\
    \ \"Limitations of the Kerberos\n   Authentication System\", ACM Computer Communications\
    \ Review, October\n   1990.\n   [Bishop]  Bishop, M., \"A Security Analysis of\
    \ Version 2 of the\n   Network Time Protocol NTP: A report to the Privacy & Security\n\
    \   Research Group\", Technical Report PCS-TR91-154, Department of\n   Mathematics\
    \ & Computer Science, Dartmouth College, Hanover, New\n   Hampshire.\n   [CB94]\
    \  Cheswick W., and S. Bellovin, \"Chapter 10: An Evening with\n   Berferd\",\
    \ Firewalls & Internet Security, Addison-Wesley, Reading,\n   Massachusetts, 1994.\
    \  ISBN 0-201-63357-4.\n   [CERT94]  Computer Emergency Response Team, \"Ongoing\
    \ Network\n   Monitoring Attacks\", CERT Advisory CA-94:01, available by anonymous\n\
    \   ftp from cert.sei.cmu.edu, 3 February 1994.\n   [CFSD88]  Case, J., Fedor,\
    \ M., Schoffstall, M., and  J. Davin,\n   \"Simple Network Management Protocol\"\
    , RFC 1067, University of\n   Tennessee at Knoxville, NYSERNet, Inc., Rensselaer\
    \ Polytechnic\n   Institute, Proteon, Inc., August 1988.\n   [DH76]  Diffie W.,\
    \ and M. Hellman, \"New Directions in Cryptography\",\n   IEEE Transactions on\
    \ Information Theory, Volume IT-11, November 1976,\n   pp. 644-654.\n   [GM93]\
    \  Galvin, J., and K. McCloghrie, \"Security Protocols for\n   Version 2 of the\
    \ Simple Network Management Protocol (SNMPv2)\", RFC\n   1446, Trusted Information\
    \ Systems, Hughes LAN Systems, April 1993.\n   [Haller94]  Haller, N., \"The S/Key\
    \ One-time Password System\",\n   Proceedings of the Symposium on Network & Distributed\
    \ Systems\n   Security, Internet Society, San Diego, CA, February 1994.\n   [Kaufman93]\
    \  Kaufman, C., \"Distributed Authentication Security\n   Service (DASS)\", RFC\
    \ 1507, Digital Equipment Corporation, September\n   1993.\n   [Kaliski93]  Kaliski,\
    \ B., \"Privacy Enhancement for Internet\n   Electronic Mail: Part IV: Key Certification\
    \ and Related Services\",\n   RFC 1424, RSA Laboratories, February 1993.\n   [Kantor91]\
    \  Kantor, B., \"BSD Rlogin\", RFC 1258, Univ. of Calif San\n   Diego, September\
    \ 1991.\n   [Kent93]  Kent, S., \"Privacy Enhancement for Internet Electronic\n\
    \   Mail: Part II: Certificate-Based Key Management\", RFC 1422, BBN, IAB\n  \
    \ IRTF PSRG, IETF PEM, February 1993.\n   [KN93]  Kohl, J., and C. Neuman, \"\
    The Kerberos Network Authentication\n   Service (V5)\", RFC 1510, Digital Equipment\
    \ Corporation,\n   USC/Information Sciences Institute, September 1993.\n   [Linn93]\
    \  Linn, J., \"Privacy Enhancement for Internet Electronic\n   Mail: Part I: Message\
    \ Encryption and Authentication Procedures\", RFC\n   1421, IAB IRTF PSRG, IETF\
    \ PEM WG, February 1993.\n   [Linn93a]  Linn, J., \"Common Authentication Technology\
    \ Overview\", RFC\n   1511, Geer Zolot Associate, September 1993.\n   [LS92] \
    \ Lloyd B., and W. Simpson, \"PPP Authentication Protocols\", RFC\n   1334, L&A,\
    \ Daydreamer, October 1992.\n   [LR91]  Lougheed K., and Y. Rekhter, \"A Border\
    \ Gateway protocol 3\n   (BGP-3)\", RFC 1267, cisco Systems, T.J. Watson Research\
    \ Center, IBM\n   Corp., October 1991.\n   [Mills92]  Mills, D., \"Network Time\
    \ Protocol (Version 3) -\n   Specification, Implementation, and Analysis\", RFC\
    \ 1305, UDEL, March\n   1992.\n   [NBS77]  National Bureau of Standards, \"Data\
    \ Encryption Standard\",\n   Federal Information Processing Standards Publication\
    \ 46, Government\n   Printing Office, Washington, DC, 1977.\n   [NS78]  Needham,\
    \ R., and M. Schroeder, \"Using Encryption for\n   Authentication in Large Networks\
    \ of Computers\", Communications of the\n   ACM, Vol. 21, No. 12, December 1978.\n\
    \   [NS87]  Needham, R., and M. Schroeder, \"Authentication Revisited\",\n   ACM\
    \ Operating Systems Review, Vol. 21, No. 1, 1987.\n   [PR85]  Postel J., and J.\
    \ Reynolds, \"File Transfer Protocol\", STD 9,\n   RFC 959, USC/Information Sciences\
    \ Institute, October 1985.\n   [Moy91]  Moy, J., \"OSPF Routing Protocol, Version\
    \ 2\", RFC 1247,\n   Proteon, Inc., July 1991.\n   [RSA78]  Rivest, R., Shamir,\
    \ A., and L. Adleman, \"A Method for\n   Obtaining Digital Signatures and Public\
    \ Key Crypto-systems\",\n   Communications of the ACM, Vol. 21, No. 2, February\
    \ 1978.\n   [Rivest92]  Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC\
    \ 1321,\n   MIT Laboratory for Computer Science and RSA Data Security, Inc.,\n\
    \   April 1992.\n   [Simpson93]  Simpson, W., \"The Point to Point Protocol\"\
    , RFC 1548,\n   Daydreamer, December 1993.\n   [SNS88]  Steiner, J., Neuman, C.,\
    \ and J. Schiller, \"Kerberos: \"An\n   Authentication Service for Open Network\
    \ Systems\", USENIX Conference\n   Proceedings, Dallas, Texas, February 1988.\n\
    \   [Stoll90]  Stoll, C., \"The Cuckoo's Egg: Tracking a Spy Through the\n   Maze\
    \ of Computer Espionage\", Pocket Books, New York, NY, 1990.\n   [TA91]  Tardo\
    \ J., and K. Alagappan, \"SPX: Global Authentication Using\n   Public Key Certificates\"\
    , Proceedings of the 1991 Symposium on\n   Research in Security & Privacy, IEEE\
    \ Computer Society, Los Amitos,\n   California, 1991. pp.232-244.\n   AUTHORS'\
    \ ADDRESSES\n   Neil Haller\n   Bell Communications Research\n   445 South Street\
    \  -- MRE 2Q-280\n   Morristown, NJ 07962-1910\n   Phone: (201) 829-4478\n   EMail:\
    \ nmh@thumper.bellcore.com\n   Randall Atkinson\n   Information Technology Division\n\
    \   Naval Research Laboratory\n   Washington, DC 20375-5320\n   Phone: (DSN) 354-8590\n\
    \   EMail: atkinson@itd.nrl.navy.mil\n"
