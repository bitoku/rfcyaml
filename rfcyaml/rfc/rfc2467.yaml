- contents:
  - '            Transmission of IPv6 Packets over FDDI Networks

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "1.  Introduction\n   This document specifies the frame format for transmission
    of IPv6\n   packets and the method of forming IPv6 link-local addresses and\n
    \  statelessly autoconfigured addresses on FDDI networks.  It also\n   specifies
    the content of the Source/Target Link-layer Address option\n   used in Router
    Solicitation, Router Advertisement, Neighbor\n   Solicitation, Neighbor Advertisement
    and Redirect messages when those\n   messages are transmitted on an FDDI network.\n
    \  This document replaces RFC 2019, \"Transmission of IPv6 Packets Over\n   FDDI\",
    which will become historic.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC
    2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Maximum Transmission Unit\n   FDDI permits a frame length of 4500 octets
    (9000 symbols), including\n   at least 22 octets (44 symbols) of Data Link encapsulation
    when\n   long-format addresses are used.  Subtracting 8 octets of LLC/SNAP\n   header,
    this would, in principle, allow the IPv6 [IPV6] packet in the\n   Information
    field to be up to 4470 octets.  However, it is desirable\n   to allow for the
    variable sizes and possible future extensions of the\n   MAC header and frame
    status fields.  The default MTU size for IPv6\n   packets on an FDDI network is
    therefore 4352 octets.  This size may\n   be reduced by a Router Advertisement
    [DISC] containing an MTU option\n   which specifies a smaller MTU, or by manual
    configuration of each\n   node.  If a Router Advertisement received on an FDDI
    interface has an\n   MTU option specifying an MTU larger than 4352, or larger
    than a\n   manually configured value, that MTU option may be logged to system\n
    \  management but must be otherwise ignored.\n   For purposes of this document,
    information received from DHCP is\n   considered \"manually configured\" and the
    term FDDI includes CDDI.\n"
  title: 2.  Maximum Transmission Unit
- contents:
  - "3.  Frame Format\n   FDDI provides both synchronous and asynchronous transmission,
    with\n   the latter class further subdivided by the use of restricted and\n   unrestricted
    tokens.  Only asynchronous transmission with\n   unrestricted tokens is required
    for FDDI interoperability.\n   Accordingly, IPv6 packets shall be sent in asynchronous
    frames using\n   unrestricted tokens.  The robustness principle dictates that
    nodes\n   should be able to receive synchronous frames and asynchronous frames\n
    \  sent using restricted tokens.\n   IPv6 packets are transmitted in LLC/SNAP
    frames, using long-format\n   (48 bit) addresses.  The data field contains the
    IPv6 header and\n   payload and is followed by the FDDI Frame Check Sequence,
    Ending\n   Delimiter, and Frame Status symbols.\n                      0                   1\n
    \                     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n                                     +-+-+-+-+-+-+-+-+\n
    \                                    |      FC       |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |          Destination          |\n                     +-
    \                            -+\n                     |             FDDI              |\n
    \                    +-                             -+\n                     |
    \           Address            |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |            Source             |\n                     +-
    \                            -+\n                     |             FDDI              |\n
    \                    +-                             -+\n                     |
    \           Address            |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |     DSAP      |     SSAP      |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |      CTL      |      OUI ...  |\n                     +-+-+-+-+-+-+-+-+
    \              +\n                     |          ... OUI              |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |           Ethertype           |\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                    |             IPv6              |\n                     +-
    \                            -+\n                     |            header             |\n
    \                    +-                             -+\n                     |
    \            and               |\n                     +-                             -+\n
    \                    /            payload ...        /\n                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                   (Each tic mark represents one bit.)\n   FDDI Header Fields:\n
    \  FC          The Frame Code must be in the range 50 to 57\n               hexadecimal,
    inclusive, with the three low order bits\n               indicating the frame
    priority.\n   DSAP, SSAP  Both the DSAP and SSAP fields shall contain the value
    AA\n               hexadecimal, indicating SNAP encapsulation.\n   CTL         The
    Control field shall be set to 03 hexadecimal,\n               indicating Unnumbered
    Information.\n   OUI         The Organizationally Unique Identifier shall be set
    to\n               000000 hexadecimal.\n   Ethertype   The Ethernet protocol type
    (\"ethertype\") shall be set to\n               the value 86DD hexadecimal.\n"
  title: 3.  Frame Format
- contents:
  - "4.  Interaction with Bridges\n   802.1d MAC bridges which connect different media,
    for example\n   Ethernet and FDDI, have become very widespread.  Some of them
    do IPv4\n   packet fragmentation and/or support IPv4 Path MTU discovery [RFC\n
    \  1981], many others do not, or do so incorrectly.  Use of IPv6 in a\n   bridged
    mixed-media environment must not depend on support from MAC\n   bridges, unless
    those bridges are known to correctly implement IPv6\n   Path MTU Discovery [RFC
    1981, ICMPV6].\n   For correct operation when mixed media are bridged together
    by\n   bridges which do not support IPv6 Path MTU Discovery, the smallest\n   MTU
    of all the media must be advertised by routers in an MTU option.\n   If there
    are no routers present, this MTU must be manually configured\n   in each node
    which is connected to a medium with a default MTU larger\n   than the smallest
    MTU.\n"
  title: 4.  Interaction with Bridges
- contents:
  - "5.  Stateless Autoconfiguration\n   The Interface Identifier [AARCH] for an FDDI
    interface is based on\n   the EUI-64 identifier [EUI64] derived from the interface's
    built-in\n   48-bit IEEE 802 address.  The EUI-64 is formed as follows.\n   (Canonical
    bit order is assumed throughout.  See [CANON] for a\n   caution on bit-order effects
    in LAN interfaces.)\n   The OUI of the FDDI MAC address (the first three octets)
    becomes the\n   company_id of the EUI-64 (the first three octets).  The fourth
    and\n   fifth octets of the EUI are set to the fixed value FFFE hexadecimal.\n
    \  The last three octets of the FDDI MAC address become the last three\n   octets
    of the EUI-64.\n   The Interface Identifier is then formed from the EUI-64 by\n
    \  complementing the \"Universal/Local\" (U/L) bit, which is the next-to-\n   lowest
    order bit of the first octet of the EUI-64.  For further\n   discussion on this
    point, see [ETHER] and [AARCH].\n   For example, the Interface Identifier for
    an FDDI interface whose\n   built-in address is, in hexadecimal,\n                             34-56-78-9A-BC-DE\n
    \  would be\n                         36-56-78-FF-FE-9A-BC-DE.\n   A different
    MAC address set manually or by software should not be\n   used to derive the Interface
    Identifier.  If such a MAC address must\n   be used, its global uniqueness property
    should be reflected in the\n   value of the U/L bit.\n   An IPv6 address prefix
    used for stateless autoconfiguration [ACONF]\n   of an FDDI interface must have
    a length of 64 bits.\n"
  title: 5.  Stateless Autoconfiguration
- contents:
  - "6.  Link-Local Addresses\n   The IPv6 link-local address [AARCH] for an FDDI
    interface is formed\n   by appending the Interface Identifier, as defined above,
    to the\n   prefix FE80::/64.\n     10 bits            54 bits                  64
    bits\n   +----------+-----------------------+----------------------------+\n   |1111111010|
    \        (zeros)       |    Interface Identifier    |\n   +----------+-----------------------+----------------------------+\n"
  title: 6.  Link-Local Addresses
- contents:
  - "7.  Address Mapping -- Unicast\n   The procedure for mapping IPv6 unicast addresses
    into FDDI link-layer\n   addresses is described in [DISC].  The Source/Target
    Link-layer\n   Address option has the following form when the link layer is FDDI.\n
    \                0                   1\n                 0 1 2 3 4 5 6 7 8 9 0
    1 2 3 4 5\n                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                |
    \    Type      |    Length     |\n                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \               |                               |\n                +-            FDDI
    \            -+\n                |                               |\n                +-
    \          Address           -+\n                |                               |\n
    \               +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   Option fields:\n   Type
    \       1 for Source Link-layer address.\n               2 for Target Link-layer
    address.\n   Length      1 (in units of 8 octets).\n   FDDI Address\n               The
    48 bit FDDI IEEE 802 address, in canonical bit order.\n               This is
    the address the interface currently responds to,\n               and may be different
    from the built-in address used to\n               derive the Interface Identifier.\n"
  title: 7.  Address Mapping -- Unicast
- contents:
  - "8.  Address Mapping -- Multicast\n   An IPv6 packet with a multicast destination
    address DST, consisting\n   of the sixteen octets DST[1] through DST[16], is transmitted
    to the\n   FDDI multicast address whose first two octets are the value 3333\n
    \  hexadecimal and whose last four octets are the last four octets of\n   DST.\n
    \                +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                 |0 0 1 1
    0 0 1 1|0 0 1 1 0 0 1 1|\n                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                |   DST[13]     |   DST[14]     |\n                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                |   DST[15]     |   DST[16]     |\n                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
  title: 8.  Address Mapping -- Multicast
- contents:
  - "9.  Differences From RFC 2019\n   The following are the functional differences
    between this\n   specification and RFC 2019.\n       \"FDDI adjacency detection\"
    has been removed, due to recent work\n       in IEEE 802.1p.\n       The Address
    Token, which was a node's 48-bit MAC address, is\n       replaced with the Interface
    Identifier, which is 64 bits in\n       length and based on the EUI-64 format
    [EUI64].  An IEEE-defined\n       mapping exists from 48-bit MAC addresses to
    EUI-64 form.\n       A prefix used for stateless autoconfiguration must now be
    64 bits\n       long rather than 80.  The link-local prefix is also shortened
    to\n       64 bits.\n"
  title: 9.  Differences From RFC 2019
- contents:
  - "10.  Security Considerations\n   The method of derivation of Interface Identifiers
    from MAC addresses\n   is intended to preserve global uniqueness when possible.
    \ However,\n   there is no protection from duplication through accident or forgery.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  References\n   [AARCH] Hinden, R. and S. Deering \"IP Version 6 Addressing\n
    \          Architecture\", RFC 2373, July 1998.\n   [ACONF] Thomson, S. and T.
    Narten, \"IPv6 Stateless Address\n           Autoconfiguration\", RFC 2462, December
    1998.\n   [CANON] Narten, T. and C. Burton, \"A Caution On The Canonical\n           Ordering
    Of Link-Layer Addresses\", RFC 2469, December 1998.\n   [DISC]  Narten, T., Nordmark,
    E. and W. Simpson, \"Neighbor Discovery\n           for IP Version 6 (IPv6)\",
    RFC 2461, December 1998.\n   [ETHER] Crawford, M., \"Transmission of IPv6 Packets
    over Ethernet\n           Networks\", RFC 2464, December 1998.\n   [EUI64] \"Guidelines
    For 64-bit Global Identifier (EUI-64)\",\n           http://standards.ieee.org/db/oui/tutorials/EUI64.html.\n
    \  [ICMPV6]  Conta, A. and S. Deering, \"Internet Control Message\n             Protocol
    (ICMPv6) for the Internet Protocol Version 6\n             (IPv6) Specification\",
    RFC 2463, December 1998.\n   [IPV6]  Deering, S. and R. Hinden, \"Internet Protocol,
    Version 6\n           (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC
    1981]  McCann, J., Deering, S. and J. Mogul, \"Path MTU Discovery\n               for
    IP version 6\", RFC 1981, August 1996.\n   [RFC 2119]  Bradner, S., \"Key words
    for use in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC
    2119, March 1997.\n"
  title: 11.  References
- contents:
  - "12.  Author's Address\n   Matt Crawford\n   Fermilab MS 368\n   PO Box 500\n
    \  Batavia, IL 60510\n   USA\n   Phone: +1 630 840-3461\n   EMail: crawdad@fnal.gov\n"
  title: 12.  Author's Address
- contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 13.  Full Copyright Statement
