- title: __initial_text__
  contents:
  - "                     Definitions of Managed Objects\n                       \
    \ for SNA NAUs using SMIv2\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ................................................\
    \    2\n   2. The SNMPv2 Network Management Framework .....................  \
    \  2\n   2.1 Object Definitions .........................................    2\n\
    \   3. Overview ....................................................    3\n  \
    \ 3.1 Applying MIB II to managing SNA NAUs .......................    4\n   3.2\
    \ SNANAU MIB Structure .......................................    4\n   3.2.1\
    \ snaNode group ............................................    5\n   3.2.2 snaLu\
    \ group ..............................................    6\n   3.2.3 snaMgtTools\
    \ group ........................................    7\n   3.2.4 Conformance statement\
    \ ....................................    7\n   3.3 SNANAU MIB special feature\
    \ .................................    7\n   3.3.1 Row Creation mechanism ...................................\
    \    8\n   3.3.2 State Diagrams ...........................................  \
    \  8\n   4. Object Definitions ..........................................    9\n\
    \   5. Acknowledgments .............................................   67\n  \
    \ 6. References ..................................................   67\n   7.\
    \ Security Considerations .....................................   68\n   8. Authors'\
    \ Addresses ..........................................   68\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo defines a portion of the Management Information\
    \ Base (MIB)\n   for use with network management protocols in the Internet community.\n\
    \   In particular, it defines objects for managing the configuration,\n   monitoring\
    \ and control of Physical Units (PUs) and Logical Units\n   (LUs) in an SNA environment.\
    \  PUs and LUs are two types of Network\n   Addressable Units (NAUs) in the logical\
    \ structure of an SNA network.\n   NAUs are the origination or destination points\
    \ for SNA data streams.\n   This memo identifies managed objects for PU Type 1.0,\
    \ 2.0 and Type\n   2.1 and LU Type 0, 1, 2, 3, 4, 7.  The generic objects defined\
    \ here\n   can also be used to manage LU 6.2 and any LU-LU session.  The SNA\n\
    \   terms and overall architecture are documented in [1].\n"
- title: 2.  The SNMPv2 Network Management Framework
  contents:
  - "2.  The SNMPv2 Network Management Framework\n   The SNMPv2 Network Management\
    \ Framework consists of four major\n   components.  They are:\n      o    RFC\
    \ 1442 [2] which defines the SMI, the mechanisms used for\n           describing\
    \ and naming objects for the purpose of management.\n      o    STD 17, RFC 1213\
    \ [3] defines MIB-II, the core set of\n           managed objects for the Internet\
    \ suite of protocols.\n      o    RFC 1445 [4] which defines the administrative\
    \ and other\n           architectural aspects of the framework.\n      o    RFC\
    \ 1448 [5] which defines the protocol used for network\n           access to managed\
    \ objects.\n   The Framework permits new objects to be defined for the purpose\
    \ of\n   experimentation and evaluation.\n"
- title: 2.1.  Object Definitions
  contents:
  - "2.1.  Object Definitions\n   Managed objects are accessed via a virtual information\
    \ store, termed\n   the Management Information Base or MIB.  Objects in the MIB\
    \ are\n   defined using the subset of Abstract Syntax Notation One (ASN.1)\n \
    \  defined in the SMI (RFC 1442 [2]).  In particular, each object type\n   is\
    \ named by an OBJECT IDENTIFIER, an administratively assigned name.\n   The object\
    \ type together with an object instance serves to uniquely\n   identify a specific\
    \ instantiation of the object.  For human\n   convenience, we often use a textual\
    \ string, termed the descriptor, to\n   refer to the object type.\n"
- title: 3.  Overview
  contents:
  - "3.  Overview\n   This document identifies the proposed set of objects for managing\
    \ the\n   configuration, monitoring and control of Physical Units (PUs) and\n\
    \   Logical Units (LUs) in an SNA environment. In this document, the name\n  \
    \ \"Node\" is used to describe SNA Node Type 1.0, 2.0 and Type 2.1 and\n   the\
    \ name \"LU\" is used to describe Logical Unit of Type 0, 1, 2, 3, 4,\n   7 and\
    \ 6.2.   Note however that only objects common to all PU and LU\n   types are\
    \ covered here and LU 6.2 specific objects are not included\n   in this MIB module.\n\
    \   Highlights of the management functions supported by the SNANAU MIB\n   module\
    \ include the following:\n   o    Creation/deletion of Nodes and LUs via the RowStatus\
    \ objects\n        in the snaNodeAdminTable and in the snaLuAdminTable.\n   o\
    \    Creation/deletion of table entries associating Node instances\n        with\
    \ link instances via the RowStatus object in the\n        snaNodeLinkAdminTable\n\
    \   o    Activation/Deactivation of Nodes via the AdminState object in\n     \
    \   the snaNodeAdminTable\n   o    Deactivation of sessions via the AdminState\
    \ object in the\n        snaLuSessnTable\n   o    Monitoring and modification\
    \ of parameters related to Nodes, LUs,\n        and Node/link associations\n \
    \  o    Monitoring of session operational parameters\n   o    PU2.0  operational\
    \ statistics\n   o    Session operational statistics\n   o    RTM statistics\n\
    \   o    Traps for:\n                + Node state change\n                + Node\
    \ activation failure\n                + LU state change\n                + LU\
    \ session BIND failure\n   This MIB module does not support:\n   o    creation\
    \ of links,\n   o    activation or deactivation of LUs, nor\n   o    activation\
    \ of sessions.\n"
- title: 3.1.  Applying MIB II to managing SNA NAUs
  contents:
  - "3.1.  Applying MIB II to managing SNA NAUs\n   This section identifies how MIB\
    \ II objects, specifically the MIB II\n   system group will be used in SNMP-based\
    \ management of SNA NAUs.  The\n   MIB II system group applies to the SNMP Agent.\
    \  The following object\n   is from the MIB II system group:\n   sysUpTime:  clock\
    \ in the SNMP Agent/proxy-Agent; expressed in\n           TimeTicks (1/100s of\
    \ a seconds).\n   This MIB module uses the TimeStamp TEXTUAL-CONVENTION which\
    \ is\n   defined in the SNMPv2 Textual Conventions (RFC 1443 [6]) as \"the\n \
    \  value of MIB II's sysUpTime object when a specific occurrence\n   happens.\"\
    \ The specific occurrences related to SNA NAU management are\n   defined in this\
    \ MIB module.\n"
- title: 3.2.  SNANAU MIB Structure
  contents:
  - "3.2.  SNANAU MIB Structure\n   The SNANAU MIB module contains three groups of\
    \ objects:\n   o    snaNode - objects related to Node configuration, monitoring\
    \ and\n        control.\n   o    snaLu   - objects related to LU definition, monitoring\
    \ and\n        control.\n   o    snaMgtTools  - objects related to specific management\
    \ tools well\n        known in SNA environment.\n   These groups are described\
    \ below in more detail.\n   The objects related to PUs and LUs are organized into\
    \ two types of\n   tables: the Admin and Oper tables.\n   The \"Admin\" table\
    \ contains parameters which are used by a Management\n   Station to affect the\
    \ operation of the SNA service.  Some parameters\n   are used to initialize and\
    \ configure the SNA service at the next\n   startup, while others can take effect\
    \ immediately.  A Management\n   Station can dynamically define SNA resources\
    \ (PUs, LUs) by creating\n   new entries in the Admin table. It uses a special\
    \ object, AdminState,\n   to control the desired state of a defined PU or LU Session\
    \ resource.\n   Note that this MIB does not allow the manipulation of an LU's\n\
    \   operational state.\n   The \"Oper\" table is an extension (augment) of the\
    \ corresponding Admin\n   table.  It contains objects which correspond to the\
    \ values of\n   parameters currently used by the SNA system.\n"
- title: 3.2.1.  snaNode group
  contents:
  - "3.2.1.  snaNode group\n   The snaNode group consists of the following tables:\n\
    \      1) snaNodeAdminTable - This table contains objects which describe\n   \
    \   the configuration parameters of an SNA Node.  Link-specific\n      configuration\
    \ objects are contained in a separate MIB module\n      (e.g., the SNA DLC MIB\
    \ module) corresponding to link type.\n      Entries in this table can be created,\
    \ modified and deleted by\n      either an Agent or a Management Station. The\
    \ snaNodeAdminRowStatus\n      object describes the status of an entry and is\
    \ used to change the\n      status of that entry.\n      The snaNodeAdminState\
    \ object describes the desired operational\n      state of a Node and is used\
    \ to change the operational state of a\n      Node.\n      How an Agent or a Management\
    \ Station obtains the initial value of\n      each object at creation time is\
    \ an implementation specific issue\n      not addressed in this memo.\n      For\
    \ each entry in the snaNodeAdminTable, there is a corresponding\n      entry in\
    \ the snaNodeOperTable.  While the objects in this table\n      describe the desired\
    \ or configured operational values of the SNA\n      Node, the actual runtime\
    \ values are contained in snaNodeOperTable.\n      2) snaNodeOperTable - Each\
    \ row contains runtime and operational\n      state variables for a Node.  It\
    \ is an extension of\n      snaNodeAdminTable and as such uses the same index.\
    \  The rows in\n      this table are created by an Agent as soon as the entry\
    \ in the\n      Admin Table become 'active'.  The entries in this table cannot\
    \ be\n      modified by a Management Station.\n      3) snaPu20StatsTable - Each\
    \ row contains statistics variables\n      (counters) for a PU 2.0.  The entries\
    \ in this table are indexed by\n      snaNodeAdminIndex. The rows in this table\
    \ are created by an Agent\n      as soon as the corresponding entry in the snaNodeAdminTable\n\
    \      becomes 'active'.\n      4) snaNodeLinkAdminTable - This table contains\
    \ all references to\n      link- specific tables.  If a Node is configured with\
    \ multiple\n      links, then it will have multiple entries in this table.  The\n\
    \      entries in this table can be generated initially, after startup of\n  \
    \    SNA service, by the Agent which uses information from Node\n      configuration\
    \ file.  Subsequent modifications of parameters,\n      creation of new Node link\
    \ entries and deletion of entries is\n      possible. The modifications to this\
    \ table can be saved in the Node\n      configuration file for the next startup\
    \ (i.e., restart or next\n      initialization) of SNA service, but the mechanism\
    \ for this\n      function is not defined in this memo.  Each entry contains the\n\
    \      configuration information that associates a Node instance to one\n    \
    \  link instance. The entries are indexed by snaNodeAdminIndex and\n      snaNodeLinkAdminIndex.\n\
    \      5) snaNodeLinkOperTable - This table contains all references to\n     \
    \ link- specific tables for operational parameters.  If the Node is\n      configured\
    \ for multiple links, then it will have multiple entries\n      in this table.\
    \  This table augments the snaNodeLinkAdminTable.\n      6) snaNodeTraps - Two\
    \ traps are defined for Nodes. The\n      snaNodeStateChangeTrap indicates that\
    \ the operational state of a\n      Node has changed.  The snaNodeActFailTrap\
    \ indicates the failure of\n      ACTPU received from host.\n"
- title: 3.2.2.  snaLu group
  contents:
  - "3.2.2.  snaLu group\n   The snaLu group consists of the following tables:\n \
    \     1) snaLuAdminTable - Table containing LU configuration\n      information.\
    \  The rows in this table can be created and deleted by\n      a Management Station.\
    \  Only objects which are common to all types\n      of LUs are included in this\
    \ table. The entries are indexed by Node\n      and LU indices.\n      2) snaLuOperTable\
    \ - Table containing dynamic runtime information\n      and control variables\
    \ relating to LUs.  Only objects which are\n      common to all types of LUs are\
    \ included in this table. This table\n      augments the snaLuAdminTable.\n  \
    \    3) snaLuSessnTable - This is a table containing objects which\n      describe\
    \ the operational state of LU-LU sessions.  Only objects\n      which are common\
    \ to all types of LU-LU sessions are included in\n      this table. When a session's\
    \ snaLuSessnOperState value changes to\n      entry in the session table is created\
    \ by the Agent.  When the\n      snaLuSessionOperState value changes to will be\
    \ removed from the\n      session table by the Agent.  Entries are indexed by\
    \ Node, local\n      LU, remote LU and session indices.\n      4) snaLuSessnStatsTable\
    \ - Table containing dynamic statistics\n      information relating to LU-LU sessions.\
    \ The entries in this table\n      augment the entries in the snaLuSessnTable\
    \ and cannot be created\n      by a Management Station.\n      5) snaLuTraps -\
    \ Two traps are defined for LUs.  The\n      snaLuStateChangeTrap indicates that\
    \ the operational state of an LU\n      has changed.  The snaLuSessnBindFailTrap\
    \ indicates the failure of\n      a BIND request.\n"
- title: 3.2.3.  snaMgtTools group
  contents:
  - "3.2.3.  snaMgtTools group\n   This is an optional group.  The snaMgtTools group\
    \ consists of the\n   following table:\n      1) snaLuRtmTable - Each row contains\
    \ Response Time Monitor (RTM)\n      variables for an LU.  The table is indexed\
    \ by Node and LU indices.\n      Entries correspond to LU 2 entries in the snaLuAdminTable.\
    \  A\n      Management Station can read collection of RTM statistics for a\n \
    \     given LU.\n"
- title: 3.2.4.  Conformance statement
  contents:
  - "3.2.4.  Conformance statement\n   Compliance of the SNMPv2 management entity\
    \ to the SNANAU MIB is\n   defined in terms of following conformance units called\
    \ groups.\n   Unconditionally mandatory groups: snaNodeGroup, snaLuGroup,\n  \
    \ snaSessionGroup.\n   Conditionally mandatory groups: snaPu20Group - mandatory\
    \ only for\n   those entities which implement PU type 2.0.  The snaMgtToolsRtmGroup\n\
    \   - mandatory only for those entities which implement LU type 2 and\n   RTM.\n\
    \   Refinement of requirements for objects access: an Agent which does\n   not\
    \ implement row creation for snaNodeAdminTable\n   snaNodeLinkAdminTable and snaLuAdminTable\
    \ must at least support\n   object modification requests (i.e., read-write access\
    \ instead of\n   read-create).\n"
- title: 3.3.  SNANAU MIB special feature
  contents:
  - "3.3.  SNANAU MIB special feature\n   This section describes the mechanism used\
    \ for row creation in the\n   Admin tables and also presents critical state transitions\
    \ for PUs,\n   LUs and Sessions.\n"
- title: 3.3.1.  Row Creation mechanism
  contents:
  - "3.3.1.  Row Creation mechanism\n   The row creation mechanism for the Admin tables\
    \ in this MIB module is\n   based on the use of the RowStatus object. Restriction\
    \ of some\n   operations for specific tables are described in each table.  In\n\
    \   particular, before accepting the 'destroy' value for an entry, an\n   Agent\
    \ has to verify the operational state of the corresponding entry\n   in the Oper\
    \ table.\n"
- title: 3.3.2.  State Diagrams
  contents:
  - "3.3.2.  State Diagrams\n   The following state diagram models the state transitions\
    \ for Nodes.\n   When a row is created by a Management Station, an Agent creates\
    \ the\n   Oper table entry for that Node with the OperState equal to\n   'inactive'.\
    \ An Agent cannot accept any operations for that Node until\n   the RowStatus\
    \ is set to 'active'.\n   OperState ->    inactive       active         waiting\
    \        stopping\n   --------------I--------------I--------------I--------------I---------\n\
    \   AdminState:   I              I              I              I\n   active  \
    \      I active       I active       I waiting      I no\n                 I \
    \             I              I              I\n   inactive      I inactive   \
    \  I stopping     I inactive     I stopping\n                                I\
    \ or inactive  I\n   The following state diagram models state transitions for\
    \ Sessions.\n   When a session goes to the 'unbound' state [1], the corresponding\n\
    \   entry will be removed from the Session table by the Agent.\n   OperState ->\
    \   unbound        pendingBind   bound      pendingUnbind\n   --------------I--------------I--------------I----------I--------------\n\
    \   AdminState:   I              I              I          I\n   bound       \
    \  I no           I no           I no       I no\n                 I         \
    \     I              I          I\n   unbound       I unbound      I unbound \
    \     I unbound  I unbound\n"
- title: 4.  Object Definitions
  contents:
  - '4.  Object Definitions

    '
- title: SNA-NAU-MIB DEFINITIONS ::= BEGIN
  contents:
  - 'SNA-NAU-MIB DEFINITIONS ::= BEGIN

    '
- title: -- This MIB module contains objects necessary
  contents:
  - '-- This MIB module contains objects necessary

    '
- title: '-- for management of the following SNA devices: PU types 1.0, 2.0, 2.1'
  contents:
  - '-- for management of the following SNA devices: PU types 1.0, 2.0, 2.1

    '
- title: -- and LU types 0, 1, 2, 3, 4, 7.  It also contains generic objects
  contents:
  - '-- and LU types 0, 1, 2, 3, 4, 7.  It also contains generic objects

    '
- title: -- which can be used to manage LU 6.2.
  contents:
  - '-- which can be used to manage LU 6.2.

    '
- title: '-- Naming conventions in this document:'
  contents:
  - '-- Naming conventions in this document:

    '
- title: -- The following names are used in object descriptors according to
  contents:
  - '-- The following names are used in object descriptors according to

    '
- title: -- SNA conventions.
  contents:
  - '-- SNA conventions.

    '
- title: -- The name 'PU' or 'Node' is used to describe Node type 1.0, 2.0 or
  contents:
  - '-- The name ''PU'' or ''Node'' is used to describe Node type 1.0, 2.0 or

    '
- title: -- 2.1.
  contents:
  - '-- 2.1.

    '
- title: -- The name 'LU' is used to describe Logical Unit of type 0,1,2,3,
  contents:
  - '-- The name ''LU'' is used to describe Logical Unit of type 0,1,2,3,

    '
- title: -- 4,7 or 6.2.
  contents:
  - '-- 4,7 or 6.2.

    '
- title: IMPORTS
  contents:
  - "IMPORTS\n        DisplayString, RowStatus, TimeStamp, InstancePointer\n     \
    \           FROM SNMPv2-TC\n        Counter32, Gauge32, Integer32,\n        OBJECT-TYPE,\
    \ MODULE-IDENTITY, NOTIFICATION-TYPE\n                FROM SNMPv2-SMI\n      \
    \  MODULE-COMPLIANCE, OBJECT-GROUP\n                FROM SNMPv2-CONF;\n"
- title: snanauMIB MODULE-IDENTITY
  contents:
  - "snanauMIB MODULE-IDENTITY\n        LAST-UPDATED  \"9405120900Z\"\n        ORGANIZATION\
    \  \"IETF SNA NAU MIB Working Group\"\n        CONTACT-INFO\n                \"\
    \       Zbigniew Kielczewski\n                        Eicon Technology Inc.\n\
    \                        2196 32nd Avenue\n                        Lachine, Que\
    \  H8T 3H7\n                        Canada\n                        Tel:    1\
    \ 514 631 2592\n                        E-mail: zbig@eicon.qc.ca\n           \
    \             Deirdre Kostick\n                        Bellcore\n            \
    \            331 Newman Springs Road\n                        Red Bank, NJ 07701\n\
    \                        Tel:    1 908 758 2642\n                        E-mail:\
    \ dck2@mail.bellcore.com\n                        Kitty Shih (editor)\n      \
    \                  Novell\n                        890 Ross Drive\n          \
    \              Sunnyvale, CA 94089\n                        Tel:   1 408 747 4305\n\
    \                        E-mail: kmshih@novell.com\"\n        DESCRIPTION\n  \
    \              \"This is the MIB module for objects used to\n                \
    \ manage SNA devices.\"\n"
- title: ::= { mib-2 34 }
  contents:
  - '::= { mib-2 34 }

    '
- title: -- The SNANAU MIB module contains an objects part and a conformance part.
  contents:
  - '-- The SNANAU MIB module contains an objects part and a conformance part.

    '
- title: '-- Objects are organized into the following groups:'
  contents:
  - '-- Objects are organized into the following groups:

    '
- title: -- (1)snaNode group,
  contents:
  - '-- (1)snaNode group,

    '
- title: -- (2)snaLU group,
  contents:
  - '-- (2)snaLU group,

    '
- title: -- (3)snaMgtTools group.
  contents:
  - '-- (3)snaMgtTools group.

    '
- title: snanauObjects   OBJECT IDENTIFIER ::= { snanauMIB 1 }
  contents:
  - "snanauObjects   OBJECT IDENTIFIER ::= { snanauMIB 1 }\n  snaNode       OBJECT\
    \ IDENTIFIER ::= { snanauObjects 1 }\n  snaLu         OBJECT IDENTIFIER ::= {\
    \ snanauObjects 2 }\n  snaMgtTools   OBJECT IDENTIFIER ::= { snanauObjects 3}\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- snaNode group
  contents:
  - '-- snaNode group

    '
- title: --
  contents:
  - '--

    '
- title: -- It contains Managed Objects related to any type of Node and
  contents:
  - '-- It contains Managed Objects related to any type of Node and

    '
- title: -- some specific objects for Node Type 2.0.
  contents:
  - '-- some specific objects for Node Type 2.0.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains generic Node configuration
  contents:
  - '-- The following table contains generic Node configuration

    '
- title: -- parameters.
  contents:
  - '-- parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeAdminTable OBJECT-TYPE
  contents:
  - "snaNodeAdminTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaNodeAdminEntry\n\
    \        MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This table contains objects which describe the\n          \
    \      configuration parameters for an SNA Node.  Link\n                specific\
    \ configuration objects are contained in\n                a separate MIB module\
    \ (e.g., SNA DLC MIB)\n                corresponding to the link type.\n     \
    \           The table snaNodeAdminLinkTable contains objects\n               \
    \ which identify the relationship between node instances\n                and\
    \ link instances.\n                The entries (i.e., rows) in this table can\
    \ be created\n                by either an Agent or a Management Station.\n  \
    \              The Management Station can do this through setting\n          \
    \      the appropriate value in the snaNodeAdminRowStatus.\n                The\
    \ snaNodeAdminRowStatus object describes the\n                status of an entry\
    \ and is used to change the status\n                of an entry.  The entry is\
    \ deleted by an Agent based\n                on the value of the snaNodeAdminRowStatus.\n\
    \                The snaNodeAdminState object describes the desired\n        \
    \        operational state of a Node and is used to change the\n             \
    \   operational state of a Node.  For example, such\n                information\
    \ may be obtained from a configuration file.\n                How an Agent or\
    \ a Management Station obtains the\n                initial value of each object\
    \ at creation time is an\n                implementation specific issue.\n   \
    \             For each entry in this table, there is a corresponding\n       \
    \         entry in the snaNodeOperTable.\n                While the objects in\
    \ this table describe the desired\n                or configured operational values\
    \ of the SNA Node, the\n                actual runtime values are contained in\n\
    \                snaNodeOperTable.\"\n        ::= { snaNode 1 }\n"
- title: snaNodeAdminEntry OBJECT-TYPE
  contents:
  - "snaNodeAdminEntry OBJECT-TYPE\n        SYNTAX  SnaNodeAdminEntry\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"An entry contains the configuration parameters for\n                one\
    \ SNA Node instance. The objects in the entry\n                have read-create\
    \ access.\n                An entry can be created, modified or deleted.  The\n\
    \                object snaNodeAdminRowStatus is used (i.e., set) to\n       \
    \         create or delete a row entry.\"\n        INDEX  { snaNodeAdminIndex\
    \ }\n        ::= { snaNodeAdminTable 1 }\n"
- title: SnaNodeAdminEntry ::= SEQUENCE {
  contents:
  - "SnaNodeAdminEntry ::= SEQUENCE {\n        snaNodeAdminIndex\n               \
    \ Integer32,\n        snaNodeAdminName\n                DisplayString,\n     \
    \   snaNodeAdminType\n                INTEGER,\n        snaNodeAdminXidFormat\n\
    \                INTEGER,\n        snaNodeAdminBlockNum\n                DisplayString,\n\
    \        snaNodeAdminIdNum\n                DisplayString,\n        snaNodeAdminEnablingMethod\n\
    \                INTEGER,\n        snaNodeAdminLuTermDefault\n               \
    \ INTEGER,\n        snaNodeAdminMaxLu\n                Integer32,\n        snaNodeAdminHostDescription\n\
    \                DisplayString,\n        snaNodeAdminStopMethod\n            \
    \    INTEGER,\n        snaNodeAdminState\n                INTEGER,\n        snaNodeAdminRowStatus\n\
    \                RowStatus\n        }\n"
- title: snaNodeAdminIndex OBJECT-TYPE
  contents:
  - "snaNodeAdminIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"Index used to uniquely identify each Node instance.\n                If\
    \ an Agent creates the entry, then it will assign\n                this number\
    \ otherwise a Management Station\n                generates a random number when\
    \ it reserves the\n                entry for creation.\"\n        ::= { snaNodeAdminEntry\
    \ 1 }\n"
- title: snaNodeAdminName OBJECT-TYPE
  contents:
  - "snaNodeAdminName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(0..17))\n \
    \       MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The value indicates the desired name of the\n             \
    \   Node for use during Node activation.\n                In Type 2.1 networks,\
    \ this is a fully-qualified name,\n                meaning that the Node name\
    \ is preceded by the NetId (if\n                present) with a period as the\
    \ delimiter.\n                A write operation to this object will\n        \
    \        not change the operational value reflected\n                in snaNodeOperName\
    \ until the Node has\n                been re-activated (e.g., after the next\
    \ initialization\n                of the SNA services).\"\n        ::= { snaNodeAdminEntry\
    \ 2 }\n"
- title: snaNodeAdminType OBJECT-TYPE
  contents:
  - "snaNodeAdminType OBJECT-TYPE\n        SYNTAX  INTEGER {\n                other(1),\n\
    \                pu10(2),\n                pu20(3),\n                t21len(4),\n\
    \                endNode(5),\n                networkNode(6)\n               \
    \ }\n        MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The value indicates the type of SNA Node.\n               \
    \ A write operation to this object will\n                not change the operational\
    \ value reflected\n                in snaNodeOperType until the Node has\n   \
    \             been re-activated (e.g., after the next initialization\n       \
    \         of the SNA services).\"\n        ::= { snaNodeAdminEntry 3 }\n"
- title: snaNodeAdminXidFormat OBJECT-TYPE
  contents:
  - "snaNodeAdminXidFormat OBJECT-TYPE\n        SYNTAX  INTEGER  {\n             \
    \   format0(1),\n                format1(2),\n                format3(3)\n   \
    \             }\n        MAX-ACCESS  read-create\n        STATUS  current\n  \
    \      DESCRIPTION\n                \"The value indicates the type of XID format\
    \ used for\n                this Node.  Note that there is no format type 2.\n\
    \                A write operation to this object will\n                not change\
    \ the operational value reflected\n                in snaNodeOperAdminXidFormat\
    \ until the Node has\n                been re-activated (e.g., after the next\
    \ initialization\n                of the SNA services).\"\n        ::= { snaNodeAdminEntry\
    \ 4 }\n"
- title: snaNodeAdminBlockNum OBJECT-TYPE
  contents:
  - "snaNodeAdminBlockNum OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(3))\n \
    \       MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The value indicates the block number for this Node\n      \
    \          instance.  It is the first 3 hexadecimal digits of the\n          \
    \      SNA Node id.\n                A write operation to this object will\n \
    \               not change the operational value reflected\n                in\
    \ snaNodeOperBlockNum until the Node has\n                been re-activated (e.g.,\
    \ after the next initialization\n                of the SNA services).\"\n   \
    \     ::= { snaNodeAdminEntry 5 }\n"
- title: snaNodeAdminIdNum OBJECT-TYPE
  contents:
  - "snaNodeAdminIdNum OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(5))\n    \
    \    MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n \
    \               \"The value indicates the ID number for this Node\n          \
    \      instance.  This is the last 5 hexadecimal digits of\n                the\
    \ SNA Node id.\n                A write operation to this object will\n      \
    \          not change the operational value reflected\n                in snaNodeOperIdNum\
    \ until the Node has\n                been re-activated (e.g., after the next\
    \ initialization\n                of the SNA services).\"\n        ::= { snaNodeAdminEntry\
    \ 6 }\n"
- title: snaNodeAdminEnablingMethod OBJECT-TYPE
  contents:
  - "snaNodeAdminEnablingMethod OBJECT-TYPE\n        SYNTAX  INTEGER {\n         \
    \       other (1),\n                startup (2),\n                demand (3),\n\
    \                onlyMS (4)\n                }\n        MAX-ACCESS  read-create\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value indicates\
    \ how the Node should be\n                activated for the first time.\n    \
    \            The values have the following meanings:\n                other (1)\
    \  - may be used for proprietary methods\n                   not listed in this\
    \ enumeration,\n                startup (2) - at SNA services' initialization\
    \ time\n                   (this is the default),\n                demand (3)\
    \ - only when LU is requested by application,\n                             or\n\
    \                onlyMS (4) - by a Management Station only.\n                A\
    \  write operation to this object may immediately\n                change the\
    \ operational value reflected\n                in snaNodeOperEnablingMethod depending\n\
    \                on the Agent implementation.  If the Agent\n                implementation\
    \ accepts immediate changes, then the\n                behavior of the Node changes\
    \ immediately and not only\n                after the next system startup of the\
    \ SNA services.\n                An immediate change may only apply when the\n\
    \                current value 'demand (3)' is changed to 'onlyMS (4)'\n     \
    \           and vice versa.\"\n          ::= { snaNodeAdminEntry 7 }\n"
- title: snaNodeAdminLuTermDefault OBJECT-TYPE
  contents:
  - "snaNodeAdminLuTermDefault OBJECT-TYPE\n        SYNTAX  INTEGER {\n          \
    \      unbind (1),\n                termself (2),\n                rshutd (3),\n\
    \                poweroff(4)\n                }\n          MAX-ACCESS  read-create\n\
    \          STATUS  current\n          DESCRIPTION\n                \"The value\
    \ indicates the desired default method\n                used to deactivate LUs\
    \ for this Node\n                For LU6.2s, 'unbind(1)' is the only valid value.\n\
    \                unbind(1) -   terminate the LU-LU session by sending\n      \
    \                  an SNA UNBIND request.\n                termself(2) - terminate\
    \ the LU-LU session by sending\n                        an SNA TERM-SELF (Terminate\
    \ Self) request on\n                        the SSCP-LU session. The SSCP will\
    \ inform the\n                        remote session LU partner to send an UNBIND\n\
    \                        request to terminate the session.\n                rshutd(3)\
    \ -   terminate the LU-LU session by sending\n                        an SNA RSHUTD\
    \ (Request ShutDown) request to\n                        the remote session LU\
    \ partner. The remote LU\n                        will then send an UNBIND request\
    \ to terminate\n                        the session.\n                poweroff(4)\
    \ - terminate the LU-LU session by sending\n                        either an\
    \ SNA LUSTAT (LU Status) request on\n                        the LU-LU session\
    \ or an SNA NOTIFY request on\n                        the SSCP-LU session indicating\
    \ that the LU has\n                        been powered off. Sending both is also\n\
    \                        acceptable. The result should be that the\n         \
    \               remote session LU partner will send an UNBIND\n              \
    \          to terminate the session.\n                The default behavior indicated\
    \ by the value of this\n                object may be overridden for an LU instance.\
    \ The\n                override is performed by setting the snaLuAdminTerm\n \
    \               object instance in the snaLuAdminTable to the desired\n      \
    \          value.\n                A write operation to this object may immediately\n\
    \                change the operational value reflected\n                in snaNodeOperLuTermDefault\
    \ depending\n                on the Agent implementation.\"\n          ::= { snaNodeAdminEntry\
    \ 8 }\n"
- title: snaNodeAdminMaxLu OBJECT-TYPE
  contents:
  - "snaNodeAdminMaxLu OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-create\n        STATUS  current\n        DESCRIPTION\n               \
    \ \"The maximum number of LUs that may be\n                activated for this\
    \ Node. For PU2.1, this object\n                refers to the number of dependent\
    \ LUs.\n                A write operation to this object will\n              \
    \  not change the operational value reflected\n                in snaNodeOperMaxLu\
    \ until the Node has\n                been re-activated (e.g., after the next\
    \ initialization\n                of the SNA services).\"\n          ::= { snaNodeAdminEntry\
    \ 9 }\n"
- title: snaNodeAdminHostDescription OBJECT-TYPE
  contents:
  - "snaNodeAdminHostDescription OBJECT-TYPE\n          SYNTAX  DisplayString (SIZE(0..128))\n\
    \          MAX-ACCESS  read-create\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The value identifies the remote host associated\n       \
    \           with this Node.\n                  Since SSCP Id's may not be unique\n\
    \                  across hosts, the host description\n                  is required\
    \ to uniquely identify the SSCP.\n                  This object is only applicable\
    \ to PU2.0 type\n                  Nodes. If the remote host is unknown, then\
    \ the\n                  value is the null string.\n                  A write\
    \ operation to this object may immediately\n                  change the operational\
    \ value reflected\n                  in snaNodeOperHostDescription depending\n\
    \                  on the Agent implementation.\"\n          ::= { snaNodeAdminEntry\
    \ 10 }\n"
- title: snaNodeAdminStopMethod OBJECT-TYPE
  contents:
  - "snaNodeAdminStopMethod OBJECT-TYPE\n          SYNTAX  INTEGER {\n           \
    \       other (1),\n                  normal (2),\n                  immed (3),\n\
    \                  force (4)\n                  }\n          MAX-ACCESS  read-create\n\
    \          STATUS  current\n          DESCRIPTION\n                  \"The value\
    \ indicates the desired method to be used\n                  by the Agent to stop\
    \ a Node (i.e., change the Node's\n                  operational state to inactive(1)\
    \ ).\n                  The values have the following meaning:\n             \
    \     other (1) - used for proprietary\n                        methods not listed\
    \ in this enumeration.\n                  normal(2) - deactivate only when there\
    \ is no more\n                        activity on this Node (i.e., all data flows\n\
    \                        have been completed and all sessions\n              \
    \          have been terminated).\n                  immed(3)  - deactivate immediately\
    \ regardless of\n                        current activities on this Node. Wait\
    \ for\n                        deactivation responses (from remote Node)\n   \
    \                     before changing the Node state to inactive.\n          \
    \        force(4)  - deactivate immediately regardless of\n                  \
    \      current activities on this Node. Do not wait\n                        for\
    \ deactivation responses (from remote Node)\n                        before changing\
    \ the Node state to inactive.\n                  A write operation to this object\
    \ may immediately\n                  change the operational value reflected\n\
    \                  in snaNodeOperStopMethod depending\n                  on the\
    \ Agent implementation.\"\n          ::= { snaNodeAdminEntry 11 }\n"
- title: snaNodeAdminState OBJECT-TYPE
  contents:
  - "snaNodeAdminState OBJECT-TYPE\n          SYNTAX  INTEGER {\n                \
    \  inactive (1),\n                  active (2)\n                  }\n        \
    \  MAX-ACCESS  read-create\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The value indicates the desired operational\n           \
    \        state of the SNA Node. This object is used\n                   by the\
    \ Management Station to\n                   activate or deactivate the Node.\n\
    \                  If the current value in snaNodeOperState is\n             \
    \     'active (2)', then setting this object to\n                  'inactive (1)'\
    \ will initiate the Node shutdown\n                  process using the method\
    \ indicated\n                  by snaNodeOperStopMethod.\n                  If\
    \ the current value in snaNodeOperState is\n                  'inactive (1)',\
    \ then setting this object to\n                  'active (2)' will initiate the\n\
    \                  Node's activation.\n                  A Management Station\
    \ can always set this object to\n                  'active (2)' irrespective of\
    \ the value in the\n                  snaOperEnablingMethod.\"\n          ::=\
    \ { snaNodeAdminEntry 12 }\n"
- title: snaNodeAdminRowStatus OBJECT-TYPE
  contents:
  - "snaNodeAdminRowStatus OBJECT-TYPE\n          SYNTAX  RowStatus\n          MAX-ACCESS\
    \  read-create\n          STATUS  current\n          DESCRIPTION\n           \
    \       \"This object is used by a Management Station to\n                  create\
    \ or delete the row entry in the\n                  snaNodeAdminTable following\n\
    \                  the RowStatus textual convention.\n                  Upon successful\
    \ creation of\n                  the row, an Agent automatically creates a\n \
    \                 corresponding entry in the snaNodeOperTable with\n         \
    \         snaNodeOperState equal to 'inactive (1)'.\n                  Row deletion\
    \ can be Management Station or Agent\n                  initiated:\n         \
    \         (a) The Management Station can set the value to\n                  'destroy\
    \ (6)' only when the value of\n                  snaNodeOperState of this Node\
    \ instance is\n                  'inactive (1)'. The Agent will then delete the\
    \ rows\n                  corresponding to this Node instance from the\n     \
    \             snaNodeAdminTable and the snaNodeOperTable.\n                  (b)\
    \ The Agent detects that a row is in the\n                  'notReady (3)' state\
    \ for greater than a\n                  default period of 5 minutes.\n       \
    \           (c) All rows with the snaNodeAdminRowStatus object's\n           \
    \       value of 'notReady (3)' will be removed upon the\n                  next\
    \ initialization of the SNA services.\"\n          ::= { snaNodeAdminEntry 13\
    \ }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following object is updated when there is a change to
  contents:
  - '-- The following object is updated when there is a change to

    '
- title: -- the value of any object in the snaNodeAdminTable.
  contents:
  - '-- the value of any object in the snaNodeAdminTable.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeAdminTableLastChange OBJECT-TYPE
  contents:
  - "snaNodeAdminTableLastChange OBJECT-TYPE\n          SYNTAX  TimeStamp\n      \
    \    MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The value indicates the timestamp\n                  (e.g.,\
    \ the Agent's sysUpTime value) of the last\n                  change made to any\
    \ object in the snaNodeAdminTable,\n                  including row deletions/additions\
    \ (e.g., changes to\n                  snaNodeAdminRowStatus values).\n      \
    \            This object can be used to reduce frequent\n                  retrievals\
    \ of the snaNodeAdminTable by a Management\n                  Station. It is expected\
    \ that a Management Station\n                  will periodically poll this object\
    \ and compare its\n                  current value with the previous one. A difference\n\
    \                  indicates that some Node configuration information\n      \
    \            has been changed. Only then will the Management\n               \
    \   Station retrieve the entire table.\"\n          ::= { snaNode 2 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains Node operational parameters.
  contents:
  - '-- The following table contains Node operational parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeOperTable OBJECT-TYPE
  contents:
  - "snaNodeOperTable OBJECT-TYPE\n          SYNTAX  SEQUENCE OF SnaNodeOperEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This table contains the dynamic parameters which\n      \
    \            have read-only access. These objects reflect the\n              \
    \    actual status of the Node. The entries in this\n                  table cannot\
    \ be created or modified by a\n                  Management Station.\n       \
    \           This table augments the snaNodeAdminTable.\"\n          ::= { snaNode\
    \ 3 }\n"
- title: snaNodeOperEntry OBJECT-TYPE
  contents:
  - "snaNodeOperEntry OBJECT-TYPE\n          SYNTAX  SnaNodeOperEntry\n          MAX-ACCESS\
    \  not-accessible\n          STATUS  current\n          DESCRIPTION\n        \
    \          \"The entry contains parameters which describe the\n              \
    \    state of one Node. The entries are created by the\n                  Agent.\
    \ They have read-only access.\"\n          AUGMENTS   { snaNodeAdminEntry }\n\
    \          ::= { snaNodeOperTable 1 }\n"
- title: SnaNodeOperEntry ::= SEQUENCE {
  contents:
  - "SnaNodeOperEntry ::= SEQUENCE {\n          snaNodeOperName\n                \
    \  DisplayString,\n          snaNodeOperType\n                  INTEGER,\n   \
    \       snaNodeOperXidFormat\n                  INTEGER,\n          snaNodeOperBlockNum\n\
    \                  DisplayString,\n          snaNodeOperIdNum\n              \
    \    DisplayString,\n          snaNodeOperEnablingMethod\n                  INTEGER,\n\
    \          snaNodeOperLuTermDefault\n                  INTEGER,\n          snaNodeOperMaxLu\n\
    \                  Integer32,\n          snaNodeOperHostDescription\n        \
    \          DisplayString,\n          snaNodeOperStopMethod\n                 \
    \ INTEGER,\n          snaNodeOperState\n                  INTEGER,\n         \
    \ snaNodeOperHostSscpId\n                  OCTET STRING,\n          snaNodeOperStartTime\n\
    \                  TimeStamp,\n          snaNodeOperLastStateChange\n        \
    \          TimeStamp,\n          snaNodeOperActFailures\n                  Counter32,\n\
    \          snaNodeOperActFailureReason\n                  INTEGER\n          }\n"
- title: snaNodeOperName OBJECT-TYPE
  contents:
  - "snaNodeOperName OBJECT-TYPE\n          SYNTAX  DisplayString (SIZE(0..17))\n\
    \          MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                \"The value identifies the current name of the Node.\n      \
    \          In Type 2.1 networks, this\n                is a fully-qualified name,\
    \ meaning that the Node name\n                is preceded by the NetId (if present)\
    \ with a period\n                as the delimiter.\"\n          ::= { snaNodeOperEntry\
    \ 1 }\n"
- title: snaNodeOperType OBJECT-TYPE
  contents:
  - "snaNodeOperType OBJECT-TYPE\n          SYNTAX  INTEGER {\n                  other(1),\n\
    \                  pu10(2),\n                  pu20(3),\n                  t21LEN(4),\n\
    \                  endNode(5),\n                  networkNode(6)\n           \
    \       }\n          MAX-ACCESS  read-only\n          STATUS  current\n      \
    \    DESCRIPTION\n                  \"The value identifies the current type of\
    \ the Node.\"\n          ::= { snaNodeOperEntry 2 }\n"
- title: snaNodeOperXidFormat OBJECT-TYPE
  contents:
  - "snaNodeOperXidFormat OBJECT-TYPE\n          SYNTAX  INTEGER  {\n            \
    \      format0 (1),\n                  format1 (2),\n                  format3\
    \ (3)\n                  }\n          MAX-ACCESS  read-only\n          STATUS\
    \  current\n          DESCRIPTION\n                  \"The value identifies the\
    \ type of XID format currently\n                   used for this Node.\n     \
    \              Note that there is no format type 2.\"\n          ::= { snaNodeOperEntry\
    \ 3 }\n"
- title: snaNodeOperBlockNum OBJECT-TYPE
  contents:
  - "snaNodeOperBlockNum OBJECT-TYPE\n          SYNTAX DisplayString (SIZE(3))\n \
    \         MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The value identifies the block number for this Node\n   \
    \               instance. It is the first 3 hexadecimal digits\n             \
    \     of the SNA Node id.\"\n          ::= { snaNodeOperEntry 4 }\n"
- title: snaNodeOperIdNum OBJECT-TYPE
  contents:
  - "snaNodeOperIdNum OBJECT-TYPE\n          SYNTAX  DisplayString (SIZE(5))\n   \
    \       MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The value identifies the ID number for this Node\n      \
    \            instance.  This is the last 5 hexadecimal digits of\n           \
    \       the SNA Node id.\"\n          ::= { snaNodeOperEntry 5 }\n"
- title: snaNodeOperEnablingMethod OBJECT-TYPE
  contents:
  - "snaNodeOperEnablingMethod OBJECT-TYPE\n          SYNTAX  INTEGER {\n        \
    \          other (1),\n                  startup (2),\n                  demand\
    \ (3),\n                  onlyMS (4)\n                  }\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The value indicates how the Node is activated for\n                  the\
    \ first time.\n                  The values have the following meanings:\n   \
    \                  other (1)   - not at boot time, LU activation\n           \
    \             or by a Management Station;\n                     startup (2) -\
    \ at SNA services' initialization\n                        time (this is the default),\n\
    \                     demand (3)  - only when LU is requested by\n           \
    \             application,\n                     onlyMS (4) - by a network Management\
    \ Station\n                        only.\"\n          ::= { snaNodeOperEntry 6\
    \ }\n"
- title: snaNodeOperLuTermDefault OBJECT-TYPE
  contents:
  - "snaNodeOperLuTermDefault OBJECT-TYPE\n          SYNTAX  INTEGER {\n         \
    \         unbind (1),\n                  termself (2),\n                  rshutd\
    \ (3),\n                  poweroff (4)\n                  }\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \   \"The value identifies the default method used to\n                deactivate\
    \ LUs for this Node.\n                For LU6.2s, 'unbind(1)' is the only valid\
    \ value.\n                unbind(1) -   terminate the LU-LU session by sending\n\
    \                        an SNA UNBIND request.\n                termself(2) -\
    \ terminate the LU-LU session by sending\n                        an SNA TERM-SELF\
    \ (Terminate Self) request on\n                        the SSCP-LU session. The\
    \ SSCP will inform the\n                        remote session LU partner to send\
    \ an UNBIND\n                        request to terminate the session.\n     \
    \           rshutd(3) -   terminate the LU-LU session by sending\n           \
    \             an SNA RSHUTD (Request ShutDown) request to\n                  \
    \      the remote session LU partner. The remote LU\n                        will\
    \ then send an UNBIND request to terminate\n                        the session.\n\
    \                poweroff(4) - terminate the LU-LU session by sending\n      \
    \                  either an SNA LUSTAT (LU Status) request on\n             \
    \           the LU-LU session or an SNA NOTIFY request on\n                  \
    \      the SSCP-LU session indicating that the LU has\n                      \
    \  been powered off. Sending both is also\n                        acceptable.\
    \ The result should be that the\n                        remote session LU partner\
    \ will send an UNBIND\n                        to terminate the session.\n   \
    \             This object describes the default behavior for this\n          \
    \      Node; however, it is possible that for a specific LU\n                the\
    \ behavior indicated by the snaLuOperTerm object is\n                different.\"\
    \n          ::= { snaNodeOperEntry 7 }\n"
- title: snaNodeOperMaxLu OBJECT-TYPE
  contents:
  - "snaNodeOperMaxLu OBJECT-TYPE\n          SYNTAX  Integer32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"This value identifies the current, maximum number\n                  of\
    \ LUs that are activated for this Node. For PU2.1,\n                  this object\
    \ refers to the number of dependent LUs.\"\n          ::= { snaNodeOperEntry 8\
    \ }\n"
- title: snaNodeOperHostDescription OBJECT-TYPE
  contents:
  - "snaNodeOperHostDescription OBJECT-TYPE\n          SYNTAX  DisplayString (SIZE(0..128))\n\
    \          MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This value identifies the remote host currently\n       \
    \            associated with this Node.\n                   Since SSCP Id's may\
    \ not be unique\n                   across hosts, the host description\n     \
    \              is required to uniquely identify the SSCP.\"\n          ::= { snaNodeOperEntry\
    \ 9 }\n"
- title: snaNodeOperStopMethod OBJECT-TYPE
  contents:
  - "snaNodeOperStopMethod OBJECT-TYPE\n          SYNTAX  INTEGER {\n            \
    \      other (1),\n                  normal (2),\n                  immed (3),\n\
    \                  force (4)\n                  }\n          MAX-ACCESS  read-only\n\
    \          STATUS  current\n          DESCRIPTION\n                  \"This value\
    \ identifies the current Node shutdown\n                  method to be used by\
    \ the Agent to stop the Node.\n                  When the Agent changes the Node's\
    \ state to 'inactive\n                  (1)', the Agent must use the shutdown\
    \ method\n                  indicated by this object.\n                  The values\
    \ have the following meaning:\n                  other (1) - proprietary method\
    \ not listed in this\n                              enumeration\n            \
    \      normal(2) - deactivate only when there is no more\n                   \
    \     activity on this Node (i.e., all data flows\n                        have\
    \ been completed and all sessions have\n                        been terminated).\n\
    \                  immed(3)  - deactivate immediately regardless of\n        \
    \                current activities on this Node. Wait for\n                 \
    \       deactivation responses (from remote Node)\n                        before\
    \ changing the Node state to inactive.\n                  force(4)  - deactivate\
    \ immediately regardless of\n                        current activities on this\
    \ Node. Do not wait\n                        for deactivation responses (from\
    \ remote Node)\n                        before changing the Node state to inactive.\n\
    \                  Note that a write operation to\n                  snaNodeAdminOperStopMethod\
    \ may immediately change\n                  the value of snaNodeOperStopMethod\
    \ depending on\n                  the Agent implementation.\"\n          ::= {\
    \ snaNodeOperEntry 10 }\n"
- title: snaNodeOperState OBJECT-TYPE
  contents:
  - "snaNodeOperState OBJECT-TYPE\n          SYNTAX  INTEGER {\n                 \
    \ inactive (1),\n                  active (2),\n                  waiting (3),\n\
    \                  stopping (4)\n                  }\n          MAX-ACCESS  read-only\n\
    \          STATUS  current\n          DESCRIPTION\n                  \"The current\
    \ state of the Node.\n                  The values have the following meanings:\n\
    \                    inactive (1), a row representing the Node has\n         \
    \               been created in the AdminTable\n                        and, the\
    \ Node is ready for activation -or-\n                        an active Node has\
    \ been stopped -or-\n                        a waiting Node has returned to the\
    \ inactive\n                        state.\n                    waiting (3), a\
    \ request to have the Node activated\n                        has been issued,\
    \ and the Node is pending\n                        activation.\n             \
    \       active (2), the Node is ready and operating.\n                    stopping\
    \ (4), the request to stop the Node has\n                        been issued while\
    \ the StopMethod normal\n                        or immediate is used.\"\n   \
    \       ::= { snaNodeOperEntry 11 }\n"
- title: snaNodeOperHostSscpId OBJECT-TYPE
  contents:
  - "snaNodeOperHostSscpId OBJECT-TYPE\n          SYNTAX  OCTET STRING (SIZE(0..6))\n\
    \          MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This value identifies the current SSCP Id\n             \
    \      associated with the Node. This object is only\n                   applicable\
    \ to PU 2.0s. If the Node\n                   is not a PU 2.0 type, then this\
    \ object contains a\n                   zero length string.\"\n          ::= {\
    \ snaNodeOperEntry 12 }\n"
- title: snaNodeOperStartTime OBJECT-TYPE
  contents:
  - "snaNodeOperStartTime OBJECT-TYPE\n          SYNTAX  TimeStamp\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The timestamp (e.g, the Agent's sysUpTime value)\n                   at\
    \ the Node activation.\"\n          ::= { snaNodeOperEntry 13 }\n"
- title: snaNodeOperLastStateChange OBJECT-TYPE
  contents:
  - "snaNodeOperLastStateChange OBJECT-TYPE\n          SYNTAX  TimeStamp\n       \
    \   MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The timestamp (e.g., the Agent's sysUpTime value)\n     \
    \             at the last state change of the Node.\"\n          ::= { snaNodeOperEntry\
    \ 14 }\n"
- title: snaNodeOperActFailures OBJECT-TYPE
  contents:
  - "snaNodeOperActFailures OBJECT-TYPE\n          SYNTAX  Counter32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"This value identifies the number of failed Node\n                  activation\
    \ attempts.\"\n          ::= { snaNodeOperEntry 15 }\n"
- title: snaNodeOperActFailureReason OBJECT-TYPE
  contents:
  - "snaNodeOperActFailureReason OBJECT-TYPE\n          SYNTAX  INTEGER {\n      \
    \            other (1),\n                  linkFailure (2),\n                \
    \  noResources (3),\n                  badConfiguration (4),\n               \
    \   internalError (5)\n                  }\n          MAX-ACCESS  read-only\n\
    \          STATUS  current\n          DESCRIPTION\n                  \"The value\
    \ indicates the reason for the activation\n                  failure.  The value\
    \ 'other (1)' indicates a reason\n                  not listed in the enumeration.\
    \ This object\n                  will be sent in the trap snaNodeActFailTrap.\"\
    \n          ::= { snaNodeOperEntry 16 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following object is updated when there is a change to
  contents:
  - '-- The following object is updated when there is a change to

    '
- title: -- the value of snaNodeOperState in any row or a row is
  contents:
  - '-- the value of snaNodeOperState in any row or a row is

    '
- title: -- added/deleted from the snaNodeOperTable via the snaNodeAdminTable.
  contents:
  - '-- added/deleted from the snaNodeOperTable via the snaNodeAdminTable.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeOperTableLastChange OBJECT-TYPE
  contents:
  - "snaNodeOperTableLastChange OBJECT-TYPE\n          SYNTAX  TimeStamp\n       \
    \   MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The timestamp (e.g., the Agent's sysUpTime value)\n     \
    \             at the last change made to any object in the\n                 \
    \ snaNodeOperTable, including row deletions/additions\n                  made\
    \ as a result of changes to the\n                  snaNodeAdminRowStatus object.\n\
    \                  This object can be used to reduce frequent\n              \
    \    retrievals of the snaNodeOperTable by a Management\n                  Station.\
    \ It is expected that a Management Station\n                  will periodically\
    \ poll this object and compare its\n                  current value with the previous\
    \ one. A difference\n                  indicates that some Node operational information\n\
    \                  has been changed. Only then will the Management\n         \
    \         Station retrieve the entire table.\"\n          ::= { snaNode 4 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains PU 2.0 statistics dynamic parameters.
  contents:
  - '-- The following table contains PU 2.0 statistics dynamic parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaPu20StatsTable OBJECT-TYPE
  contents:
  - "snaPu20StatsTable OBJECT-TYPE\n          SYNTAX  SEQUENCE OF SnaPu20StatsEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This table contains the dynamic parameters which\n      \
    \            have read-only access. The entries in this table\n              \
    \    correspond to PU 2.0 entries in the snaNodeOperTable\n                  and\
    \ cannot be created by a Management Station.\"\n          ::= { snaNode 5 }\n"
- title: snaPu20StatsEntry OBJECT-TYPE
  contents:
  - "snaPu20StatsEntry OBJECT-TYPE\n          SYNTAX  SnaPu20StatsEntry\n        \
    \  MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The entry contains parameters which describe the\n      \
    \            statistics for one PU 2.0. They have read-only\n                \
    \  access.\n                  The counters represent traffic for all kinds\n \
    \                 of sessions: LU-LU, SSCP-PU, SSCP-LU.\n                  Each\
    \ Node of PU Type 2.0 from the snaNodeAdminTable\n                  has one entry\
    \ in this table and the index used\n                  here has the same value\
    \ as snaNodeAdminIndex of\n                  that PU.  The entry is created by\
    \ the Agent.\"\n          INDEX   { snaNodeAdminIndex }\n          ::= { snaPu20StatsTable\
    \ 1 }\n"
- title: SnaPu20StatsEntry ::= SEQUENCE {
  contents:
  - "SnaPu20StatsEntry ::= SEQUENCE {\n          snaPu20StatsSentBytes\n         \
    \         Counter32,\n          snaPu20StatsReceivedBytes\n                  Counter32,\n\
    \          snaPu20StatsSentPius\n                  Counter32,\n          snaPu20StatsReceivedPius\n\
    \                  Counter32,\n          snaPu20StatsSentNegativeResps\n     \
    \             Counter32,\n          snaPu20StatsReceivedNegativeResps\n      \
    \            Counter32,\n          snaPu20StatsActLus\n                  Gauge32,\n\
    \          snaPu20StatsInActLus\n                  Gauge32,\n          snaPu20StatsBindLus\n\
    \                  Gauge32\n          }\n"
- title: snaPu20StatsSentBytes OBJECT-TYPE
  contents:
  - "snaPu20StatsSentBytes OBJECT-TYPE\n          SYNTAX  Counter32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The number of bytes sent by this Node.\"\n          ::= { snaPu20StatsEntry\
    \ 1 }\n"
- title: snaPu20StatsReceivedBytes OBJECT-TYPE
  contents:
  - "snaPu20StatsReceivedBytes OBJECT-TYPE\n          SYNTAX  Counter32\n        \
    \  MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n \
    \                 \"The number of bytes received by this Node.\"\n          ::=\
    \ { snaPu20StatsEntry 2 }\n"
- title: snaPu20StatsSentPius OBJECT-TYPE
  contents:
  - "snaPu20StatsSentPius OBJECT-TYPE\n          SYNTAX  Counter32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The number of PIUs sent by this Node.\"\n          ::= { snaPu20StatsEntry\
    \ 3 }\n"
- title: snaPu20StatsReceivedPius OBJECT-TYPE
  contents:
  - "snaPu20StatsReceivedPius OBJECT-TYPE\n          SYNTAX  Counter32\n         \
    \ MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n  \
    \                \"The number of PIUs received by this Node.\"\n          ::=\
    \ { snaPu20StatsEntry 4 }\n"
- title: snaPu20StatsSentNegativeResps OBJECT-TYPE
  contents:
  - "snaPu20StatsSentNegativeResps OBJECT-TYPE\n          SYNTAX  Counter32\n    \
    \      MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The number of negative responses sent\n                 \
    \ by this Node.\"\n          ::= { snaPu20StatsEntry 5 }\n"
- title: snaPu20StatsReceivedNegativeResps OBJECT-TYPE
  contents:
  - "snaPu20StatsReceivedNegativeResps OBJECT-TYPE\n          SYNTAX  Counter32\n\
    \          MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The number of negative responses received\n             \
    \     by this Node.\"\n          ::= { snaPu20StatsEntry 6 }\n"
- title: snaPu20StatsActLus OBJECT-TYPE
  contents:
  - "snaPu20StatsActLus OBJECT-TYPE\n          SYNTAX  Gauge32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The number of LUs on this PU which have\n                  received and\
    \ responded to ACTLU from the host.\"\n          ::= { snaPu20StatsEntry 7 }\n"
- title: snaPu20StatsInActLus OBJECT-TYPE
  contents:
  - "snaPu20StatsInActLus OBJECT-TYPE\n          SYNTAX  Gauge32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The number of LUs on this PU which have\n                  not received\
    \ an ACTLU from the host.  This is\n                  possible if the number of\
    \ configured LUs exceeds\n                  that on the host.\"\n          ::=\
    \ { snaPu20StatsEntry 8 }\n"
- title: snaPu20StatsBindLus OBJECT-TYPE
  contents:
  - "snaPu20StatsBindLus OBJECT-TYPE\n          SYNTAX  Gauge32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"The number of LUs on this PU which have\n                  received and\
    \ acknowledged a BIND request from the\n                  host.\"\n          ::=\
    \ { snaPu20StatsEntry 9 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains the association between Nodes and
  contents:
  - '-- The following table contains the association between Nodes and

    '
- title: -- link identifiers.
  contents:
  - '-- link identifiers.

    '
- title: -- It is used for configuration purposes.
  contents:
  - '-- It is used for configuration purposes.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeLinkAdminTable OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminTable OBJECT-TYPE\n          SYNTAX  SEQUENCE OF SnaNodeLinkAdminEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This table contains the references to link\n            \
    \      specific tables. If a Node is configured for\n                  multiple\
    \ links, then the Node will have\n                  multiple entries in this table.\n\
    \                  The entries in this table can be generated\n              \
    \    initially, after initialization of SNA service,\n                  by the\
    \ Agent which uses information from\n                  Node configuration file.\n\
    \                  Subsequent modifications of parameters,\n                 \
    \ creation of new Nodes link entries and deletion\n                  of entries\
    \ is possible.\n                  The modification to this table can be\n    \
    \              saved in the Node configuration file for the\n                \
    \  next initialization of SNA service, but the mechanism\n                  for\
    \ this function is not defined here.\"\n          ::= { snaNode 6 }\n"
- title: snaNodeLinkAdminEntry OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminEntry OBJECT-TYPE\n          SYNTAX  SnaNodeLinkAdminEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"Entry contains the configuration information that\n     \
    \             associates a Node instance to one link instance.\n             \
    \     The objects in the entry have read-create access.\n                  Entry\
    \ can be created, modified or deleted.\n                  The object snaNodeLinkAdminRowStatus\
    \ is used (set)\n                  to create or delete an entry.\n           \
    \       The object snaNodeLinkAdminSpecific can be set\n                  later,\
    \ after the entry has been created.\"\n          INDEX   { snaNodeAdminIndex,\n\
    \                    snaNodeLinkAdminIndex }\n          ::= { snaNodeLinkAdminTable\
    \ 1 }\n"
- title: SnaNodeLinkAdminEntry ::= SEQUENCE {
  contents:
  - "SnaNodeLinkAdminEntry ::= SEQUENCE {\n          snaNodeLinkAdminIndex\n     \
    \             Integer32,\n          snaNodeLinkAdminSpecific\n               \
    \   InstancePointer,\n          snaNodeLinkAdminMaxPiu\n                  Integer32,\n\
    \          snaNodeLinkAdminRowStatus\n                  RowStatus\n          }\n"
- title: snaNodeLinkAdminIndex OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminIndex OBJECT-TYPE\n          SYNTAX  Integer32\n          MAX-ACCESS\
    \  not-accessible\n          STATUS  current\n          DESCRIPTION\n        \
    \          \"This value is used to index the instances of objects.\n         \
    \         If an Agent creates the entry, then it will assign\n               \
    \   this number otherwise a Management Station\n                  generates a\
    \ random number when it reserves the\n                  entry for creation.\"\n\
    \          ::= { snaNodeLinkAdminEntry 1 }\n"
- title: snaNodeLinkAdminSpecific OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminSpecific OBJECT-TYPE\n          SYNTAX  InstancePointer\n   \
    \       MAX-ACCESS  read-create\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This value points to the row in the table\n             \
    \     containing information on the link instance.\n                  (e.g., the\
    \ sdlcLSAdminTable of\n                  the SNA DLC MIB module).\"\n        \
    \  ::= { snaNodeLinkAdminEntry 2 }\n"
- title: snaNodeLinkAdminMaxPiu OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminMaxPiu OBJECT-TYPE\n          SYNTAX  Integer32\n          MAX-ACCESS\
    \  read-create\n          STATUS  current\n          DESCRIPTION\n           \
    \       \"This value identifies the maximum number of octets\n               \
    \   that can be exchanged by this Node in one\n                  Path Information\
    \ Unit (PIU).\"\n          ::= { snaNodeLinkAdminEntry 3 }\n"
- title: snaNodeLinkAdminRowStatus OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminRowStatus OBJECT-TYPE\n          SYNTAX  RowStatus\n        \
    \  MAX-ACCESS  read-create\n          STATUS  current\n          DESCRIPTION\n\
    \                \"This object is used by a Management Station to\n          \
    \      create or delete the row entry in the\n                snaNodeLinkAdminTable.\n\
    \                To activate a row, a Management Station sets the value\n    \
    \            to 'active (1)' or 'notReady (3)'.  Upon successful\n           \
    \     creation of the row, the Agent automatically creates\n                a\
    \ corresponding entry in the snaNodeLinkOperTable.\n                Row deletion\
    \ can be Management Station or Agent\n                initiated:\n           \
    \     (a) The Management Station can set the value to\n                'destroy\
    \ (6)' only when the value of\n                snaNodeLinkOperState of this Link\n\
    \                instance is 'inactive (1)'. The Agent will then\n           \
    \     delete the row corresponding to this Link\n                instance from\
    \ snaNodeLinkOperTable and\n                from snaNodeLinkAdminTable.\n    \
    \            (b) The Agent detects that a row is in the\n                'notReady\
    \ (3)' state for greater than a\n                default period of 5 minutes.\n\
    \                (c) The Agent will not include a row with RowStatus=\n      \
    \          'notReady (3)', after SNA system re-initialization\n              \
    \   (e.g., reboot).\"\n          ::= { snaNodeLinkAdminEntry 4 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following object is updated when there is a change to
  contents:
  - '-- The following object is updated when there is a change to

    '
- title: -- the value of any object in the snaNodeLinkAdminTable.
  contents:
  - '-- the value of any object in the snaNodeLinkAdminTable.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeLinkAdminTableLastChange OBJECT-TYPE
  contents:
  - "snaNodeLinkAdminTableLastChange OBJECT-TYPE\n          SYNTAX  TimeStamp\n  \
    \        MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The timestamp (e.g., the Agent's sysUpTime value)\n     \
    \             at the last\n                  change made to any object in the\
    \ snaNodeLinkAdminTable,\n                  including row deletions/additions\
    \ (i.e., changes\n                  to the snaNodeLinkAdminRowStatus object).\n\
    \                  This object can be used to reduce frequent\n              \
    \    retrievals of the snaNodeLinkAdminTable by a\n                  Management\
    \ Station. It is expected that a\n                  Management Station will periodically\
    \ poll this\n                  object and compare its current value with the\n\
    \                  previous one.\n                  A difference indicates that\
    \ some Node operational\n                  information has been changed. Only\
    \ then will the\n                  Management Station retrieve the entire table.\"\
    \n          ::= { snaNode 7 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains the association between
  contents:
  - '-- The following table contains the association between

    '
- title: -- Nodes and link identifiers.
  contents:
  - '-- Nodes and link identifiers.

    '
- title: -- It provides the current status.
  contents:
  - '-- It provides the current status.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeLinkOperTable OBJECT-TYPE
  contents:
  - "snaNodeLinkOperTable OBJECT-TYPE\n          SYNTAX  SEQUENCE OF SnaNodeLinkOperEntry\n\
    \          MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This table contains all references to link\n            \
    \      specific tables for operational parameters.\n                  If a Node\
    \ is configured for multiple links,\n                  then the Node will have\
    \ multiple entries in\n                  this table. This table augments the\n\
    \                  snaNodeLinkAdminTable.\"\n          ::= { snaNode 8 }\n"
- title: snaNodeLinkOperEntry OBJECT-TYPE
  contents:
  - "snaNodeLinkOperEntry OBJECT-TYPE\n          SYNTAX  SnaNodeLinkOperEntry\n  \
    \        MAX-ACCESS  not-accessible\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"Entry contains all current parameters for one\n         \
    \         Node link. The objects in the entry have\n                  read-only\
    \ access.\"\n          AUGMENTS   { snaNodeLinkAdminEntry }\n          ::= { snaNodeLinkOperTable\
    \ 1 }\n"
- title: SnaNodeLinkOperEntry ::= SEQUENCE {
  contents:
  - "SnaNodeLinkOperEntry ::= SEQUENCE {\n          snaNodeLinkOperSpecific\n    \
    \              InstancePointer,\n          snaNodeLinkOperMaxPiu\n           \
    \       Integer32\n          }\n"
- title: snaNodeLinkOperSpecific OBJECT-TYPE
  contents:
  - "snaNodeLinkOperSpecific OBJECT-TYPE\n          SYNTAX  InstancePointer\n    \
    \      MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This value points to the row in the table\n             \
    \     containing information on the link instance.\n                  (e.g., the\
    \ sdlcLSOperTable of\n                  the SNA DLC MIB module).\"\n         \
    \ ::= { snaNodeLinkOperEntry 1 }\n"
- title: snaNodeLinkOperMaxPiu OBJECT-TYPE
  contents:
  - "snaNodeLinkOperMaxPiu OBJECT-TYPE\n          SYNTAX  Integer32\n          MAX-ACCESS\
    \  read-only\n          STATUS  current\n          DESCRIPTION\n             \
    \     \"Maximum number of octets that can\n                  be exchanged by this\
    \ Node in one Path\n                  Information Unit (PIU).\"\n          ::=\
    \ { snaNodeLinkOperEntry 2 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following object is updated when a row is added/deleted
  contents:
  - '-- The following object is updated when a row is added/deleted

    '
- title: -- from the snaNodeLinkOperTable.
  contents:
  - '-- from the snaNodeLinkOperTable.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeLinkOperTableLastChange OBJECT-TYPE
  contents:
  - "snaNodeLinkOperTableLastChange OBJECT-TYPE\n          SYNTAX  TimeStamp\n   \
    \       MAX-ACCESS  read-only\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"The timestamp of the last\n                  change made\
    \ to any object in the snaNodeLinkOperTable,\n                  including row\
    \ deletions/additions.\n                  This object can be used to reduce frequent\n\
    \                  retrievals of the snaNodeLinkOperTable by a\n             \
    \     Management Station. It is expected that a\n                  Management\
    \ Station will periodically poll this\n                  object and compare its\
    \ current value with the\n                  previous one.\n                  A\
    \ difference indicates that some Node operational\n                  information\
    \ has been changed. Only then will the\n                  Management Station retrieve\
    \ the entire table.\"\n          ::= { snaNode 9 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- Traps
  contents:
  - '-- Traps

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaNodeTraps OBJECT IDENTIFIER ::= { snaNode 10 }
  contents:
  - 'snaNodeTraps OBJECT IDENTIFIER ::= { snaNode 10 }

    '
- title: snaNodeStateChangeTrap NOTIFICATION-TYPE
  contents:
  - "snaNodeStateChangeTrap NOTIFICATION-TYPE\n          OBJECTS  { snaNodeOperName,\n\
    \                  snaNodeOperState }\n          STATUS  current\n          DESCRIPTION\n\
    \                  \"This trap indicates that the operational state\n        \
    \          (i.e., value of the snaNodeOperState object) of a Node\n          \
    \         has changed. The following variables are returned:\n               \
    \     snaNodeOperName - current name of the Node,\n                      with\
    \ the instance identifying the Node; and,\n                    snaNodeOperState\
    \ - current state after\n                      the change.\"\n          ::= {\
    \ snaNodeTraps 1 }\n"
- title: snaNodeActFailTrap NOTIFICATION-TYPE
  contents:
  - "snaNodeActFailTrap NOTIFICATION-TYPE\n          OBJECTS  { snaNodeOperName,\n\
    \                  snaNodeOperState,\n                  snaNodeOperActFailureReason\
    \ }\n          STATUS  current\n          DESCRIPTION\n                  \"This\
    \ trap indicates a Node activation failure.\n                  The value of snaNodeOperState\
    \ indicates the current\n                  state after the activation attempt.\n\
    \                  The value of snaNodeOperActFailureReason indicates\n      \
    \            the failure reason.\"\n          ::=  { snaNodeTraps 2 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- snaLu group
  contents:
  - '-- snaLu group

    '
- title: --
  contents:
  - '--

    '
- title: -- It contains Managed Objects related to LUs in general and some
  contents:
  - '-- It contains Managed Objects related to LUs in general and some

    '
- title: -- specific for LUs of type 0, 1, 2, 3.
  contents:
  - '-- specific for LUs of type 0, 1, 2, 3.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains LU configuration parameters.
  contents:
  - '-- The following table contains LU configuration parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuAdminTable OBJECT-TYPE
  contents:
  - "snaLuAdminTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaLuAdminEntry\n  \
    \      MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This table contains LU configuration information.\n       \
    \         The rows in this table can be created and deleted\n                by\
    \ a Management Station.\n                Only objects which are common to all\
    \ types of LUs\n                are included in this table.\"\n        ::= { snaLu\
    \ 1 }\n"
- title: snaLuAdminEntry OBJECT-TYPE
  contents:
  - "snaLuAdminEntry OBJECT-TYPE\n        SYNTAX  SnaLuAdminEntry\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"Contains configuration variables for an LU.\"\n        INDEX   { snaNodeAdminIndex,\
    \ snaLuAdminLuIndex }\n        ::= { snaLuAdminTable 1 }\n"
- title: SnaLuAdminEntry ::= SEQUENCE {
  contents:
  - "SnaLuAdminEntry ::= SEQUENCE {\n        snaLuAdminLuIndex\n                Integer32,\n\
    \        snaLuAdminName\n                DisplayString,\n        snaLuAdminSnaName\n\
    \                DisplayString,\n        snaLuAdminType\n                INTEGER,\n\
    \        snaLuAdminDepType\n                INTEGER,\n        snaLuAdminLocalAddress\n\
    \                OCTET STRING,\n        snaLuAdminDisplayModel\n             \
    \   INTEGER,\n        snaLuAdminTerm\n                INTEGER,\n        snaLuAdminRowStatus\n\
    \                RowStatus\n        }\n"
- title: snaLuAdminLuIndex OBJECT-TYPE
  contents:
  - "snaLuAdminLuIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"This value identifies the unique index for an\n                 LU instance\
    \ within a Node.\"\n        ::= { snaLuAdminEntry 1 }\n"
- title: snaLuAdminName OBJECT-TYPE
  contents:
  - "snaLuAdminName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(0..48))\n   \
    \     MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This value identifies the user configurable\n             \
    \   name for this LU. If a name is not assigned to the LU,\n                then\
    \ this object contains a zero length string.\n                A write operation\
    \ to this object will\n                not change the operational value reflected\n\
    \                in snaLuOperName until the Node has\n                been re-activated\
    \ (e.g., after the next\n                initialization of the SNA services).\"\
    \n        ::= { snaLuAdminEntry 2 }\n"
- title: snaLuAdminSnaName OBJECT-TYPE
  contents:
  - "snaLuAdminSnaName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(1..17))\n\
    \        MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This value identifies the SNA LU name\n                used\
    \ in exchange of SNA data.\n                A write operation to this object will\n\
    \                not change the operational value reflected\n                in\
    \ snaLuOperSnaName until the Node has\n                been re-activated (e.g.,\
    \ after the next\n                initialization of the SNA services).\"\n   \
    \     ::= { snaLuAdminEntry 3 }\n"
- title: snaLuAdminType OBJECT-TYPE
  contents:
  - "snaLuAdminType OBJECT-TYPE\n        SYNTAX  INTEGER {\n                other(1),\n\
    \                lu0(2),\n                lu1(3),\n                lu2(4),\n \
    \               lu3(5),\n                lu4(6),\n                lu62(7),\n \
    \               lu7(8)\n                }\n        MAX-ACCESS  read-create\n \
    \       STATUS  current\n        DESCRIPTION\n                \"This value identifies\
    \ the LU type.\n                A write operation to this object will\n      \
    \          not change the operational value reflected\n                in snaLuOperAdminType\
    \ until the Node has\n                been re-activated (e.g., after the next\n\
    \                initialization of the SNA services).\"\n        ::= { snaLuAdminEntry\
    \ 4 }\n"
- title: snaLuAdminDepType OBJECT-TYPE
  contents:
  - "snaLuAdminDepType OBJECT-TYPE\n        SYNTAX  INTEGER {\n                dependent(1),\n\
    \                independent(2)\n                }\n        MAX-ACCESS  read-create\n\
    \        STATUS  current\n        DESCRIPTION\n                \"This value identifies\
    \ whether the LU is\n                dependent or independent.\n             \
    \   A write operation to this object will\n                not change the operational\
    \ value reflected\n                in snaLuOperDepType until the Node has\n  \
    \              been re-activated (e.g., after the next\n                initialization\
    \ of the SNA services).\"\n        ::= { snaLuAdminEntry 5 }\n"
- title: snaLuAdminLocalAddress OBJECT-TYPE
  contents:
  - "snaLuAdminLocalAddress OBJECT-TYPE\n        SYNTAX  OCTET STRING (SIZE(1))\n\
    \        MAX-ACCESS  read-create\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The local address for this LU is a byte with a value\n    \
    \            ranging from 0 to 254.For dependent LUs, this value\n           \
    \     ranges from 1 to 254 and for independent LUs this\n                value\
    \ is always 0.\n                A write operation to this object will not change\
    \ the\n                operational value reflected in snaLuOperLocalAddress\n\
    \                until the Node has been re-activated (e.g., after the\n     \
    \           next initialization of the SNA services).\"\n        ::= { snaLuAdminEntry\
    \ 6 }\n"
- title: snaLuAdminDisplayModel OBJECT-TYPE
  contents:
  - "snaLuAdminDisplayModel OBJECT-TYPE\n        SYNTAX  INTEGER {\n             \
    \   invalid(1),\n                model2A(2),\n                model2B(3),\n  \
    \              model3A(4),\n                model3B(5),\n                model4A(6),\n\
    \                model4B(7),\n                model5A(8),\n                model5B(9),\n\
    \                dynamic(10)\n                }\n        MAX-ACCESS  read-create\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value of\
    \ this object identifies the  model type\n                and screen size of the\
    \ terminal connected to the host.\n                This is only valid for LU Type\
    \ 2.  The values have\n                the following meaning:\n              \
    \  model2A(2) - Model 2 (24 rows x 80 cols) with base\n                      \
    \  attributes\n                model2B(3) - Model 2 (24 rows x 80 cols) with\n\
    \                        extended attributes\n                model3A(4) - Model\
    \ 3 (32 rows x 80 cols) with base\n                        attributes\n      \
    \          model3B(5) - Model 3 (32 rows x 80 cols) with extended\n          \
    \              attributes\n                model4A(6) - Model 4 (43 rows x 80\
    \ cols) with base\n                        attributes\n                model4B(7)\
    \ - Model 4 (43 rows x 80 cols) with extended\n                              \
    \                  attributes\n                model5A(8) - Model 5 (27 rows x\
    \ 132 cols) with base\n                        attributes\n                model5B(9)\
    \ - Model 5 (27 rows x 132 cols) with\n                        extended attributes\n\
    \                dynamic(10) - Screen size determine with BIND and Read\n    \
    \                                            Partition Query.\n              \
    \  In case this LU is not Type 2, then this object\n                should contain\
    \ the invalid(1) value.\"\n        ::= { snaLuAdminEntry 7 }\n"
- title: snaLuAdminTerm OBJECT-TYPE
  contents:
  - "snaLuAdminTerm OBJECT-TYPE\n        SYNTAX  INTEGER {\n                unbind\
    \ (1),\n                termself (2),\n                rshutd (3),\n         \
    \       poweroff (4)\n                }\n        MAX-ACCESS  read-create\n   \
    \     STATUS  current\n        DESCRIPTION\n                \"This value identifies\
    \ the desired method for\n                deactivation of this LU. This value\
    \ overrides the\n                default method (snaNodeOperLuTermDefault) for\
    \ this\n                Node.  For LU 6.2, only the value 'unbind (1)'\n     \
    \           applies.\n                unbind(1) -   terminate the LU-LU session\
    \ by sending\n                        an SNA UNBIND request.\n               \
    \ termself(2) - terminate the LU-LU session by sending\n                     \
    \   an SNA TERM-SELF (Terminate Self) request on\n                        the\
    \ SSCP-LU session. The SSCP will inform the\n                        remote session\
    \ LU partner to send an UNBIND\n                        request to terminate the\
    \ session.\n                rshutd(3) -   terminate the LU-LU session by sending\n\
    \                        an SNA RSHUTD (Request ShutDown) request to\n       \
    \                 the remote session LU partner. The remote LU\n             \
    \           will then send an UNBIND request to terminate\n                  \
    \      the session.\n                poweroff(4) - terminate the LU-LU session\
    \ by sending\n                        either an SNA LUSTAT (LU Status) request\
    \ on\n                        the LU-LU session or an SNA NOTIFY request on\n\
    \                        the SSCP-LU session indicating that the LU has\n    \
    \                    been powered off. Sending both is also\n                \
    \        acceptable. The result should be that the\n                        remote\
    \ session LU partner will send an UNBIND\n                        to terminate\
    \ the session.\n                A write operation to this object may immediately\n\
    \                change the operational value reflected\n                in snaLuOperTerm\
    \ depending\n                on the Agent implementation.\"\n        ::= { snaLuAdminEntry\
    \ 8 }\n"
- title: snaLuAdminRowStatus OBJECT-TYPE
  contents:
  - "snaLuAdminRowStatus OBJECT-TYPE\n        SYNTAX  RowStatus\n        MAX-ACCESS\
    \  read-create\n        STATUS  current\n        DESCRIPTION\n               \
    \ \"This object is used by a Management Station to\n                create or\
    \ delete the row entry in the\n                snaLuAdminTable.\n            \
    \    To activate a row, the Management Station sets the\n                value\
    \ to 'active (1)' or 'notReady (3)'.\n                Upon successful creation\
    \ of the row, the Agent\n                automatically creates a corresponding\
    \ entry in the\n                snaLuOperTable with snaLuOperState equal to\n\
    \                'inactive (1)'.\n                Row deletion can be Management\
    \ Station or Agent\n                initiated:\n                (a) The Management\
    \ Station can set the value to\n                'destroy (6)' only when the value\
    \ of snaLuOperState\n                of this LU instance is 'inactive (1)'. The\
    \ Agent will\n                then delete the row corresponding to this LU\n \
    \               instance from snaLuAdminTable and\n                from snaLuOperTable.\n\
    \                (b) The Agent detects that a row is in the\n                'notReady\
    \ (3)' state for greater than a\n                default period of 5 minutes.\n\
    \                (c) The Agent will not create a row with RowStatus\n        \
    \        equal to 'notReady (3)', after SNA system\n                re-initialization\
    \ (e.g., reboot).\"\n        ::= { snaLuAdminEntry 9 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains LU state dynamic parameters.
  contents:
  - '-- The following table contains LU state dynamic parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuOperTable OBJECT-TYPE
  contents:
  - "snaLuOperTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaLuOperEntry\n    \
    \    MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This table contains dynamic runtime information and\n     \
    \           control variables relating to LUs.\n                Only objects which\
    \ are common to all types of LUs are\n                included in this table.\
    \ This table augments the\n                snaLuAdminTable.\"\n        ::= { snaLu\
    \ 2 }\n"
- title: snaLuOperEntry OBJECT-TYPE
  contents:
  - "snaLuOperEntry OBJECT-TYPE\n        SYNTAX  SnaLuOperEntry\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"Contains objects reflecting current information\n                for an\
    \ LU.\n                Each entry is created by the Agent.  All entries\n    \
    \            have read-only access.\"\n        AUGMENTS        { snaLuAdminEntry\
    \ }\n        ::= { snaLuOperTable 1 }\n"
- title: SnaLuOperEntry ::= SEQUENCE {
  contents:
  - "SnaLuOperEntry ::= SEQUENCE {\n        snaLuOperName\n                DisplayString,\n\
    \        snaLuOperSnaName\n                DisplayString,\n        snaLuOperType\n\
    \                INTEGER,\n        snaLuOperDepType\n                INTEGER,\n\
    \        snaLuOperLocalAddress\n                OCTET STRING,\n        snaLuOperDisplayModel\n\
    \                INTEGER,\n        snaLuOperTerm\n                INTEGER,\n \
    \       snaLuOperState\n                INTEGER,\n        snaLuOperSessnCount\n\
    \                Gauge32\n        }\n"
- title: snaLuOperName OBJECT-TYPE
  contents:
  - "snaLuOperName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(0..48))\n    \
    \    MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n   \
    \             \"User configurable name for this LU. If a name\n              \
    \  is not assigned, then this object contains a\n                zero length string.\"\
    \n        ::= { snaLuOperEntry 1 }\n"
- title: snaLuOperSnaName OBJECT-TYPE
  contents:
  - "snaLuOperSnaName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(1..17))\n \
    \       MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The value identifies the current SNA LU name.\"\n        ::=\
    \ { snaLuOperEntry 2 }\n"
- title: snaLuOperType OBJECT-TYPE
  contents:
  - "snaLuOperType OBJECT-TYPE\n        SYNTAX  INTEGER {\n                other(1),\n\
    \                lu0(2),\n                lu1(3),\n                lu2(4),\n \
    \               lu3(5),\n                lu4(6),\n                lu62(7),\n \
    \               lu7(8)\n                }\n        MAX-ACCESS  read-only\n   \
    \     STATUS  current\n        DESCRIPTION\n                \"The value identifies\
    \ the current LU type.\"\n        ::= { snaLuOperEntry 3 }\n"
- title: snaLuOperDepType OBJECT-TYPE
  contents:
  - "snaLuOperDepType OBJECT-TYPE\n        SYNTAX  INTEGER {\n                dependent(1),\n\
    \                independent(2)\n                }\n        MAX-ACCESS  read-only\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value identifies\
    \ whether the LU is currently\n                 dependent or independent.\n  \
    \              A write operation to this object will\n                not change\
    \ the operational value reflected\n                in snaLuOperDepType until the\
    \ Node has\n                been re-activated (e.g., after the next\n        \
    \        initialization of the SNA services).\"\n        ::= { snaLuOperEntry\
    \ 4 }\n"
- title: snaLuOperLocalAddress OBJECT-TYPE
  contents:
  - "snaLuOperLocalAddress OBJECT-TYPE\n        SYNTAX  OCTET STRING (SIZE(1))\n \
    \       MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The local address for this LU is a byte with a value\n    \
    \            ranging from 0 to 254. For dependent LUs, this value\n          \
    \      ranges from 1 to 254; for independent LUs this value\n                is\
    \ always 0.\n                A write operation to this object will\n         \
    \       not change the operational value reflected\n                in snaLuOperLocalAddress\
    \ until the Node has\n                been re-activated (e.g., after the next\n\
    \                initialization of the SNA services).\"\n        ::= { snaLuOperEntry\
    \ 5 }\n"
- title: snaLuOperDisplayModel OBJECT-TYPE
  contents:
  - "snaLuOperDisplayModel OBJECT-TYPE\n        SYNTAX  INTEGER {\n              \
    \  invalid(1),\n                model2A(2),\n                model2B(3),\n   \
    \             model3A(4),\n                model3B(5),\n                model4A(6),\n\
    \                model4B(7),\n                model5A(8),\n                model5B(9),\n\
    \                dynamic(10)\n                }\n        MAX-ACCESS  read-only\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The screen model\
    \ type of the terminal connected to\n                the host. If this LU is not\
    \ Type 2, then this\n                object should contain the 'invalid(1)' value.\"\
    \n        ::= { snaLuOperEntry 6 }\n"
- title: snaLuOperTerm OBJECT-TYPE
  contents:
  - "snaLuOperTerm OBJECT-TYPE\n        SYNTAX  INTEGER {\n                unbind\
    \ (1),\n                termself (2),\n                rshutd (3),\n         \
    \       poweroff (4)\n                }\n        MAX-ACCESS  read-only\n     \
    \   STATUS  current\n        DESCRIPTION\n                \"The value identifies\
    \ the current method for\n                deactivation of this LU. This value\
    \ overrides the\n                default method (snaNodeOperLuTermDefault) for\
    \ this\n                Node.  For LU 6.2, only the value 'unbind (1)'\n     \
    \           applies.\n                unbind(1) -   terminate the LU-LU session\
    \ by sending\n                        an SNA UNBIND request.\n               \
    \ termself(2) - terminate the LU-LU session by sending\n                     \
    \   an SNA TERM-SELF (Terminate Self) request on\n                        the\
    \ SSCP-LU session. The SSCP will inform the\n                        remote session\
    \ LU partner to send an UNBIND\n                        request to terminate the\
    \ session.\n                rshutd(3) -   terminate the LU-LU session by sending\n\
    \                        an SNA RSHUTD (Request ShutDown) request to\n       \
    \                 the remote session LU partner. The remote LU\n             \
    \           will then send an UNBIND request to terminate\n                  \
    \      the session.\n                poweroff(4) - terminate the LU-LU session\
    \ by sending\n                        either an SNA LUSTAT (LU Status) request\
    \ on\n                        the LU-LU session or an SNA NOTIFY request on\n\
    \                        the SSCP-LU session indicating that the LU has\n    \
    \                    been powered off. Sending both is also\n                \
    \        acceptable. The result should be that the\n                        remote\
    \ session LU partner will send an UNBIND\n                        to terminate\
    \ the session.\"\n        ::= { snaLuOperEntry 7 }\n"
- title: snaLuOperState OBJECT-TYPE
  contents:
  - "snaLuOperState OBJECT-TYPE\n        SYNTAX  INTEGER {\n                inactive\
    \ (1),\n                active (2)\n                }\n        MAX-ACCESS  read-only\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value identifies\
    \ the current operational state of\n                this LU.\n               \
    \ It has different meanings for dependent and independent\n                LUs.\n\
    \                For dependent LUs the values indicate the following:\n      \
    \            inactive (1) - LU didn't receive ACTLU, or\n                    \
    \    it received DACTLU, or received ACTLU and sent\n                        negative\
    \ response.\n                  active (2) - LU received ACTLU and acknowledged\n\
    \                        positively.\n                For independent LUs the\
    \ values indicate the following:\n                  active (2) - the LU is defined\
    \ and is able to send\n                        and receive BIND.\n           \
    \       inactive (1) - the LU has a session count equal\n                    \
    \    to 0.\"\n        ::= { snaLuOperEntry 8 }\n"
- title: snaLuOperSessnCount OBJECT-TYPE
  contents:
  - "snaLuOperSessnCount OBJECT-TYPE\n        SYNTAX  Gauge32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The number of currently active LU-LU sessions of\n                this LU.\n \
    \               For the independent LU, if this object has value 0,\n        \
    \        it indicates that LU is inactive.\"\n        ::= { snaLuOperEntry 9 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains LU session status parameters.
  contents:
  - '-- The following table contains LU session status parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuSessnTable OBJECT-TYPE
  contents:
  - "snaLuSessnTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaLuSessnEntry\n  \
    \      MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This is a table containing objects which describe the\n   \
    \             operational state of LU sessions.  Only objects which\n        \
    \        are common to all types of LU sessions are included\n               \
    \ in this table.\n                When a session's snaLuSessnOperState value changes\
    \ to\n                'pendingBind (2)', then the corresponding entry\n      \
    \          in the session table is created by the Agent.\n                When\
    \ the session's snaLuSessnOperState value changes to\n                 'unbound\
    \ (1)',  then the session will be removed from\n                the session table\
    \ by the Agent.\"\n        ::= { snaLu 3 }\n"
- title: snaLuSessnEntry OBJECT-TYPE
  contents:
  - "snaLuSessnEntry OBJECT-TYPE\n        SYNTAX  SnaLuSessnEntry\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"An entry contains dynamic parameters for an LU-LU\n                session.\n\
    \                The indices identify the Node, local LU, and remote LU\n    \
    \            for this session.\"\n        INDEX   { snaNodeAdminIndex,\n     \
    \              snaLuAdminLuIndex,\n                   snaLuSessnRluIndex,\n  \
    \                 snaLuSessnIndex }\n        ::= { snaLuSessnTable 1 }\n"
- title: SnaLuSessnEntry ::= SEQUENCE {
  contents:
  - "SnaLuSessnEntry ::= SEQUENCE {\n        snaLuSessnRluIndex\n                Integer32,\n\
    \        snaLuSessnIndex\n                Integer32,\n        snaLuSessnLocalApplName\n\
    \                DisplayString,\n        snaLuSessnRemoteLuName\n            \
    \    DisplayString,\n        snaLuSessnMaxSndRuSize\n                INTEGER,\n\
    \        snaLuSessnMaxRcvRuSize\n                INTEGER,\n        snaLuSessnSndPacingSize\n\
    \                INTEGER,\n        snaLuSessnRcvPacingSize\n                INTEGER,\n\
    \        snaLuSessnActiveTime\n                TimeStamp,\n        snaLuSessnAdminState\n\
    \                INTEGER,\n        snaLuSessnOperState\n                INTEGER,\n\
    \        snaLuSessnSenseData\n                OCTET STRING,\n        snaLuSessnTerminationRu\n\
    \                INTEGER,\n        snaLuSessnUnbindType\n                OCTET\
    \ STRING,\n        snaLuSessnLinkIndex\n                Integer32\n        }\n"
- title: snaLuSessnRluIndex OBJECT-TYPE
  contents:
  - "snaLuSessnRluIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value may be used to identify information about\n                the session\
    \ partner LU in a table of information about\n                remote LUs.  Such\
    \ a table is not defined in this\n                document.  If a table of remote\
    \ LU information is not\n                implemented, or if the table is implemented\
    \ but it does\n                not contain information about the partner LU for\
    \ a\n                particular session (as for dependent LU-LU sessions)\n  \
    \              then this object will have a value of zero.\"\n        ::= { snaLuSessnEntry\
    \ 1 }\n"
- title: snaLuSessnIndex OBJECT-TYPE
  contents:
  - "snaLuSessnIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS  read-only\n\
    \        STATUS  current\n        DESCRIPTION\n                \"This value identifies\
    \ the unique index of the session.\n                It is recommended that an\
    \ Agent should not reuse the\n                index of a deactivated session for\
    \ a significant\n                period of time (e.g., one week).\"\n        ::=\
    \ { snaLuSessnEntry 2 }\n"
- title: snaLuSessnLocalApplName OBJECT-TYPE
  contents:
  - "snaLuSessnLocalApplName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(0..48))\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The name of the local application using this LU.\n        \
    \        If the local application is unknown, then this object\n             \
    \   contains a zero length string.\"\n        ::= { snaLuSessnEntry 3 }\n"
- title: snaLuSessnRemoteLuName OBJECT-TYPE
  contents:
  - "snaLuSessnRemoteLuName OBJECT-TYPE\n        SYNTAX  DisplayString (SIZE(0..17))\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"For dependent LUs which are indicated by the\n            \
    \    snaLuOperDepType object containing the value\n                'dependent\
    \ (1)', this object contains the Primary\n                LU (PLU) name.  For\
    \ independent LUs,\n                this object contains the fully-qualified remote\
    \ LU\n                name of this 6.2 session.\n                A fully qualified\
    \ name is an SNA NAU entity name\n                preceded by the NetId and a\
    \ period as the delimiter.\"\n        ::= { snaLuSessnEntry 4 }\n"
- title: snaLuSessnMaxSndRuSize OBJECT-TYPE
  contents:
  - "snaLuSessnMaxSndRuSize OBJECT-TYPE\n        SYNTAX  INTEGER (1..8192)\n     \
    \   MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n    \
    \            \"The maximum RU size used on this session for sending\n        \
    \        RUs.\"\n        ::= { snaLuSessnEntry 5 }\n"
- title: snaLuSessnMaxRcvRuSize OBJECT-TYPE
  contents:
  - "snaLuSessnMaxRcvRuSize OBJECT-TYPE\n        SYNTAX  INTEGER (1..8192)\n     \
    \   MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n    \
    \            \"The maximum RU size used on this session for\n                receiving\
    \ RUs.\"\n        ::= { snaLuSessnEntry 6 }\n"
- title: snaLuSessnSndPacingSize OBJECT-TYPE
  contents:
  - "snaLuSessnSndPacingSize OBJECT-TYPE\n        SYNTAX  INTEGER (1..63)\n      \
    \  MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n     \
    \           \"The size of the send pacing window on this session.\"\n        ::=\
    \ { snaLuSessnEntry 7 }\n"
- title: snaLuSessnRcvPacingSize OBJECT-TYPE
  contents:
  - "snaLuSessnRcvPacingSize OBJECT-TYPE\n        SYNTAX  INTEGER (1..63)\n      \
    \  MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n     \
    \           \"The size of the receive pacing window on this\n                session.\"\
    \n        ::= { snaLuSessnEntry 8 }\n"
- title: snaLuSessnActiveTime OBJECT-TYPE
  contents:
  - "snaLuSessnActiveTime OBJECT-TYPE\n        SYNTAX  TimeStamp\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The timestamp (e.g., the Agent's sysUpTime value)\n                when this session\
    \ becomes active.\"\n        ::= { snaLuSessnEntry 9 }\n"
- title: snaLuSessnAdminState OBJECT-TYPE
  contents:
  - "snaLuSessnAdminState OBJECT-TYPE\n        SYNTAX  INTEGER {\n               \
    \ unbound (1),\n                bound (3)\n                }\n        MAX-ACCESS\
    \  read-write\n        STATUS  current\n        DESCRIPTION\n                \"\
    The value indicates the desired operational state of\n                the session.\
    \ This object is used to\n                change the operational state of the\
    \ session.\n                A Management Station can only change the operational\n\
    \                state of the session to 'unbound (1)'.\n                Session\
    \ deactivation:\n                  If a session is in the operational state\n\
    \                  'bound (3)' then setting the value of this\n              \
    \    object to 'unbound (1)' will initiate the\n                  session shutdown.\n\
    \                  If a session is in the operational state\n                \
    \  'pendingBind (2)' then setting the value of this\n                  object\
    \ to 'unbound (1)' will initiate the session\n                  shutdown.\n  \
    \                If a session is in the operational state\n                  'pendingUnbind\
    \ (4)' for an abnormally long period\n                  of time (e.g., three minutes)\
    \ then setting the value\n                  of this object to 'unbound (1)' will\
    \ change the\n                  session operational state to 'unbound (1)'.\n\
    \                Note: for dependent LUs, deactivating the session is\n      \
    \          the same as deactivating the LU.\"\n        ::= { snaLuSessnEntry 10\
    \ }\n"
- title: snaLuSessnOperState OBJECT-TYPE
  contents:
  - "snaLuSessnOperState OBJECT-TYPE\n        SYNTAX  INTEGER {\n                unbound\
    \ (1),\n                pendingBind (2),\n                bound (3),\n       \
    \         pendingUnbind (4)\n                }\n        MAX-ACCESS  read-only\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value indicates\
    \ the current operational state of\n                the session.\n           \
    \       'unbound (1)' - session has been  unbound;\n                        in\
    \ this state it will be removed from the\n                        session table\
    \ by the Agent.\n                  'pendingBind (2)' - this state has different\n\
    \                        meanings for dependent and independent LUs;\n       \
    \                 for dependent LU - waiting for BIND from\n                 \
    \       the host, for independent LU - waiting for\n                        BIND\
    \ response.  When a session enters this\n                        state, the corresponding\
    \ entry in the\n                        session table is created by the Agent.\n\
    \                  'bound (3)' - session has been successfully bound.\n      \
    \            'pendingUnbind (4)' - session enters this state\n               \
    \         when an UNBIND is sent and before the\n                        rsp(UNBIND)\
    \ is received.\"\n        ::= { snaLuSessnEntry 11 }\n"
- title: snaLuSessnSenseData OBJECT-TYPE
  contents:
  - "snaLuSessnSenseData OBJECT-TYPE\n        SYNTAX  OCTET STRING (SIZE(0..8))\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The value identifies the sense code when there is\n       \
    \         a BIND failure. It is taken from the negative BIND\n               \
    \ response or UNBIND request.\n                This is displayed as 8 hexadecimal\
    \ digits.\"\n        ::= { snaLuSessnEntry 12 }\n"
- title: snaLuSessnTerminationRu OBJECT-TYPE
  contents:
  - "snaLuSessnTerminationRu OBJECT-TYPE\n        SYNTAX INTEGER {\n             \
    \   other (1),\n                bindFailure (2),\n                unbind (3)\n\
    \                }\n        MAX-ACCESS  read-only\n        STATUS  current\n \
    \       DESCRIPTION\n                \"The value identifies the SNA RU that terminated\
    \ the\n                session.\n                If the session is not in the\
    \ unbound state, this object\n                has a value of  'other (1)'.\"\n\
    \        ::= { snaLuSessnEntry 13 }\n"
- title: snaLuSessnUnbindType OBJECT-TYPE
  contents:
  - "snaLuSessnUnbindType OBJECT-TYPE\n        SYNTAX  OCTET STRING (SIZE(0..1))\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"If the session is in the unbound state, and it was\n      \
    \          terminated by an UNBIND, then this object contains\n              \
    \  the UNBIND type value (byte 1 of the UNBIND RU);\n                otherwise\
    \ the string is null.\"\n        ::= { snaLuSessnEntry 14 }\n"
- title: snaLuSessnLinkIndex OBJECT-TYPE
  contents:
  - "snaLuSessnLinkIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value identifies the link over which the session\n                passes.\
    \  It is an index into snaNodeLinkAdminTable.\n                If the index value\
    \ is not known, the value of this\n                object shall be zero.\"\n \
    \       ::= { snaLuSessnEntry 15 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains LU sessions statistics dynamic
  contents:
  - '-- The following table contains LU sessions statistics dynamic

    '
- title: -- parameters.
  contents:
  - '-- parameters.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuSessnStatsTable OBJECT-TYPE
  contents:
  - "snaLuSessnStatsTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaLuSessnStatsEntry\n\
    \        MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This table contains dynamic statistics information\n      \
    \          relating to LU sessions.\n                The entries in this table\
    \ augment the entries in\n                the snaLuSessnTable and cannot be created\
    \ by\n                a Management Station.\"\n        ::= { snaLu 4 }\n"
- title: snaLuSessnStatsEntry OBJECT-TYPE
  contents:
  - "snaLuSessnStatsEntry OBJECT-TYPE\n        SYNTAX  SnaLuSessnStatsEntry\n    \
    \    MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"Contains statistics information for an LU session.\n      \
    \          Each entry is created by the Agent.\n                Objects in this\
    \ table have read-only access.\n                Each session from snaLuSessnTable\n\
    \                has one entry in this table.\"\n        AUGMENTS   { snaLuSessnEntry\
    \ }\n        ::= { snaLuSessnStatsTable 1 }\n"
- title: SnaLuSessnStatsEntry ::= SEQUENCE {
  contents:
  - "SnaLuSessnStatsEntry ::= SEQUENCE {\n        snaLuSessnStatsSentBytes\n     \
    \           Counter32,\n        snaLuSessnStatsReceivedBytes\n               \
    \ Counter32,\n        snaLuSessnStatsSentRus\n                Counter32,\n   \
    \     snaLuSessnStatsReceivedRus\n                Counter32,\n        snaLuSessnStatsSentNegativeResps\n\
    \                Counter32,\n        snaLuSessnStatsReceivedNegativeResps\n  \
    \              Counter32\n        }\n"
- title: snaLuSessnStatsSentBytes OBJECT-TYPE
  contents:
  - "snaLuSessnStatsSentBytes OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The number of bytes sent by the local LU.\"\n        ::= { snaLuSessnStatsEntry\
    \ 1 }\n"
- title: snaLuSessnStatsReceivedBytes OBJECT-TYPE
  contents:
  - "snaLuSessnStatsReceivedBytes OBJECT-TYPE\n        SYNTAX  Counter32\n       \
    \ MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n      \
    \          \"The number of bytes received by the local LU.\"\n        ::= { snaLuSessnStatsEntry\
    \ 2 }\n"
- title: snaLuSessnStatsSentRus OBJECT-TYPE
  contents:
  - "snaLuSessnStatsSentRus OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The number of RUs sent by the local LU.\"\n        ::= { snaLuSessnStatsEntry\
    \ 3 }\n"
- title: snaLuSessnStatsReceivedRus OBJECT-TYPE
  contents:
  - "snaLuSessnStatsReceivedRus OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The number of RUs received by the local LU.\"\n        ::= { snaLuSessnStatsEntry\
    \ 4 }\n"
- title: snaLuSessnStatsSentNegativeResps OBJECT-TYPE
  contents:
  - "snaLuSessnStatsSentNegativeResps OBJECT-TYPE\n        SYNTAX  Counter32\n   \
    \     MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n  \
    \              \"The number of negative responses sent by the\n              \
    \  local LU.\"\n        ::= { snaLuSessnStatsEntry 5 }\n"
- title: snaLuSessnStatsReceivedNegativeResps OBJECT-TYPE
  contents:
  - "snaLuSessnStatsReceivedNegativeResps OBJECT-TYPE\n        SYNTAX  Counter32\n\
    \        MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The number of negative responses received by the\n        \
    \        local LU.\"\n        ::= { snaLuSessnStatsEntry 6 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- Traps
  contents:
  - '-- Traps

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuTraps OBJECT IDENTIFIER ::= { snaLu 5 }
  contents:
  - 'snaLuTraps OBJECT IDENTIFIER ::= { snaLu 5 }

    '
- title: snaLuStateChangeTrap NOTIFICATION-TYPE
  contents:
  - "snaLuStateChangeTrap NOTIFICATION-TYPE\n        OBJECTS  {  snaLuOperName,\n\
    \                 snaLuOperSnaName,\n                snaLuOperState }\n      \
    \  STATUS  current\n        DESCRIPTION\n                \"This trap indicates\
    \ that the operational state\n                (i.e., snaLuOperState value) of\
    \ the LU has changed.\n                The value of snaLuOperName indicates the\
    \ name of the\n                LU.\n                The value of snaLuOperSnaName\
    \ indicates the SNA name\n                of LU.\n                The value of\
    \ snaLuOperState indicates the current\n                state after change.\"\n\
    \        ::= { snaLuTraps 1 }\n"
- title: snaLuSessnBindFailTrap NOTIFICATION-TYPE
  contents:
  - "snaLuSessnBindFailTrap NOTIFICATION-TYPE\n        OBJECTS  { snaLuSessnLocalApplName,\n\
    \                snaLuSessnRemoteLuName,\n                snaLuSessnOperState,\n\
    \                snaLuSessnSenseData }\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This trap indicates the failure of a BIND.\n              \
    \  The value of snaLuSessnLocalApplName indicates the local\n                application\
    \ name.\n                The value of snaLuSessnPartnerName indicates the partner\n\
    \                name.\n                The value of snaLuSessnOperState indicates\
    \ the current\n                state after change.\n                The value\
    \ of snaLuSessnBindFailureReason\n                indicates the failure reason.\n\
    \                The Agent should not generate more than 1 trap of this\n    \
    \            type per minute to minimize the level of management\n           \
    \     traffic on the network.\"\n        ::= { snaLuTraps 2 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- snaMgtTools group
  contents:
  - '-- snaMgtTools group

    '
- title: --
  contents:
  - '--

    '
- title: -- Currently this group contains only one table.
  contents:
  - '-- Currently this group contains only one table.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- The following table contains Response Time Monitoring (RTM)
  contents:
  - '-- The following table contains Response Time Monitoring (RTM)

    '
- title: -- configuration information and statistics for LU Type 2s.
  contents:
  - '-- configuration information and statistics for LU Type 2s.

    '
- title: -- RTM supports the capability to measure and report end-user
  contents:
  - '-- RTM supports the capability to measure and report end-user

    '
- title: -- response times for dependent LUs. When the RTM state of an LU
  contents:
  - '-- response times for dependent LUs. When the RTM state of an LU

    '
- title: -- is 'on', response times for each LU transaction are monitored.
  contents:
  - '-- is ''on'', response times for each LU transaction are monitored.

    '
- title: -- A set of ranges is defined (e.g., Range 1 includes the number of
  contents:
  - '-- A set of ranges is defined (e.g., Range 1 includes the number of

    '
- title: -- transactions with response times less than 1 second) using the
  contents:
  - '-- transactions with response times less than 1 second) using the

    '
- title: '-- "boundary" definitions (e.g., boundary #2 is defined as 3 seconds).'
  contents:
  - '-- "boundary" definitions (e.g., boundary #2 is defined as 3 seconds).

    '
- title: -- A set of counters (one per range) identifies
  contents:
  - '-- A set of counters (one per range) identifies

    '
- title: -- the number of transactions within each response time range.
  contents:
  - '-- the number of transactions within each response time range.

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snaLuRtmTable OBJECT-TYPE
  contents:
  - "snaLuRtmTable OBJECT-TYPE\n        SYNTAX  SEQUENCE OF SnaLuRtmEntry\n      \
    \  MAX-ACCESS  not-accessible\n        STATUS  current\n        DESCRIPTION\n\
    \                \"This table contains Response Time Monitoring (RTM)\n      \
    \          information relating to an LU (Type 2). Each entry\n              \
    \  corresponds to an LU 2 entry in\n                snaLuAdminTable.\"\n     \
    \   ::= { snaMgtTools 1 }\n"
- title: snaLuRtmEntry OBJECT-TYPE
  contents:
  - "snaLuRtmEntry OBJECT-TYPE\n        SYNTAX  SnaLuRtmEntry\n        MAX-ACCESS\
    \  not-accessible\n        STATUS  current\n        DESCRIPTION\n            \
    \    \"Contains RTM information for an LU (Type 2).\n                Each entry\
    \ is created by the Agent.\"\n        INDEX   { snaLuRtmPuIndex, snaLuRtmLuIndex\
    \ }\n        ::= { snaLuRtmTable 1 }\n"
- title: SnaLuRtmEntry ::= SEQUENCE {
  contents:
  - "SnaLuRtmEntry ::= SEQUENCE {\n        snaLuRtmPuIndex\n                Integer32,\n\
    \        snaLuRtmLuIndex\n                Integer32,\n        snaLuRtmState\n\
    \                INTEGER,\n        snaLuRtmStateTime\n                TimeStamp,\n\
    \        snaLuRtmDef\n                INTEGER,\n        snaLuRtmBoundary1\n  \
    \              Integer32,\n        snaLuRtmBoundary2\n                Integer32,\n\
    \        snaLuRtmBoundary3\n                Integer32,\n        snaLuRtmBoundary4\n\
    \                Integer32,\n        snaLuRtmCounter1\n                Counter32,\n\
    \        snaLuRtmCounter2\n                Counter32,\n        snaLuRtmCounter3\n\
    \                Counter32,\n        snaLuRtmCounter4\n                Counter32,\n\
    \        snaLuRtmOverFlows\n                Counter32,\n        snaLuRtmObjPercent\n\
    \                Integer32,\n        snaLuRtmObjRange\n                INTEGER,\n\
    \        snaLuRtmNumTrans\n                Integer32,\n        snaLuRtmLastRspTime\n\
    \                Integer32,\n        snaLuRtmAvgRspTime\n                Integer32\n\
    \        }\n"
- title: snaLuRtmPuIndex OBJECT-TYPE
  contents:
  - "snaLuRtmPuIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS not-accessible\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value identifies\
    \ the PU 2.0 with which this LU is\n                associated.\"\n        ::=\
    \ { snaLuRtmEntry 1 }\n"
- title: snaLuRtmLuIndex OBJECT-TYPE
  contents:
  - "snaLuRtmLuIndex OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS  not-accessible\n\
    \        STATUS  current\n        DESCRIPTION\n                \"The value uniquely\
    \ identifies an LU in a PU 2.0.\"\n        ::= { snaLuRtmEntry 2 }\n"
- title: snaLuRtmState OBJECT-TYPE
  contents:
  - "snaLuRtmState OBJECT-TYPE\n        SYNTAX  INTEGER {\n                off(1),\n\
    \                on(2)\n                }\n        MAX-ACCESS  read-only\n   \
    \     STATUS  current\n        DESCRIPTION\n                \"The value indicates\
    \ the current RTM state of an LU.\"\n        ::= { snaLuRtmEntry 3 }\n"
- title: snaLuRtmStateTime  OBJECT-TYPE
  contents:
  - "snaLuRtmStateTime  OBJECT-TYPE\n        SYNTAX  TimeStamp\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The timestamp (e.g., the Agent's sysUpTime value)\n                when this session's\
    \ RTM state (e.g., snaLuRtmState)\n                changes value.\"\n        ::=\
    \ { snaLuRtmEntry 4 }\n"
- title: snaLuRtmDef OBJECT-TYPE
  contents:
  - "snaLuRtmDef OBJECT-TYPE\n        SYNTAX  INTEGER {\n                firstChar(1),\n\
    \                kb(2),\n                cdeb(3)\n                }\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    The value indicates the mode of measurement for this\n                RTM request.\
    \  The values have following meaning:\n                  firstChar(1) - time to\
    \ first character on screen\n                  kb(2) - time to keyboard usable\
    \ by operator\n                  cdeb(3) - time to Change Direction/End Bracket.\"\
    \n        ::= { snaLuRtmEntry 5 }\n"
- title: snaLuRtmBoundary1 OBJECT-TYPE
  contents:
  - "snaLuRtmBoundary1 OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This object contains the value of the first boundary\n                in units\
    \ of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 6 }\n"
- title: snaLuRtmBoundary2 OBJECT-TYPE
  contents:
  - "snaLuRtmBoundary2 OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This object contains the value of the second boundary\n                 in units\
    \ of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 7 }\n"
- title: snaLuRtmBoundary3 OBJECT-TYPE
  contents:
  - "snaLuRtmBoundary3 OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This object contains the value of the third boundary\n                 in units\
    \ of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 8 }\n"
- title: snaLuRtmBoundary4 OBJECT-TYPE
  contents:
  - "snaLuRtmBoundary4 OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This object contains the value of the fourth boundary\n                in units\
    \ of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 9 }\n"
- title: snaLuRtmCounter1 OBJECT-TYPE
  contents:
  - "snaLuRtmCounter1 OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS \
    \ read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the number of transactions which\n                fall in\
    \ the range specified by the first boundary.\"\n        ::= { snaLuRtmEntry 10\
    \ }\n"
- title: snaLuRtmCounter2 OBJECT-TYPE
  contents:
  - "snaLuRtmCounter2 OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS \
    \ read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the number of transactions which\n                fall in\
    \ the range specified by the second boundary.\"\n        ::= { snaLuRtmEntry 11\
    \ }\n"
- title: snaLuRtmCounter3 OBJECT-TYPE
  contents:
  - "snaLuRtmCounter3 OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS \
    \ read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the number of transactions which\n                fall in\
    \ the range specified by the third boundary.\"\n        ::= { snaLuRtmEntry 12\
    \ }\n"
- title: snaLuRtmCounter4 OBJECT-TYPE
  contents:
  - "snaLuRtmCounter4 OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS \
    \ read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the number of transactions which\n                fall in\
    \ the range specified by the fourth boundary.\"\n        ::= { snaLuRtmEntry 13\
    \ }\n"
- title: snaLuRtmOverFlows OBJECT-TYPE
  contents:
  - "snaLuRtmOverFlows OBJECT-TYPE\n        SYNTAX  Counter32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the number of transactions which\n                exceed\
    \ the highest range specified by the\n                boundaries.\"\n        ::=\
    \ { snaLuRtmEntry 14 }\n"
- title: snaLuRtmObjPercent OBJECT-TYPE
  contents:
  - "snaLuRtmObjPercent OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the desired percentage of\n                transactions which\
    \ should be under a designated\n                boundary range indicated by snaLuRtmObjRange.\"\
    \n        ::= { snaLuRtmEntry 15 }\n"
- title: snaLuRtmObjRange OBJECT-TYPE
  contents:
  - "snaLuRtmObjRange OBJECT-TYPE\n         SYNTAX  INTEGER {\n                other(1),\n\
    \                range1(2),\n                range2(3),\n                range3(4),\n\
    \                range4(5),\n                range5(6)\n                }\n  \
    \      MAX-ACCESS  read-only\n        STATUS  current\n        DESCRIPTION\n \
    \               \"This value indicates the designated boundary range to\n    \
    \            which the snaLuRtmObject refers.\n                The values have\
    \ the following meanings:\n                  other(1)   - not specified\n    \
    \              range1(2)  - less than boundary 1\n                  range2(3)\
    \  - between boundary 1 and 2\n                  range3(4)  - between boundary\
    \ 2 and 3\n                  range4(5)  - between boundary 3 and 4\n         \
    \         range5(6)  - greater than boundary 4.\"\n        ::= { snaLuRtmEntry\
    \ 16 }\n"
- title: snaLuRtmNumTrans OBJECT-TYPE
  contents:
  - "snaLuRtmNumTrans OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS \
    \ read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the total number of transactions\n                executed\
    \ since the RTM monitoring began (i.e.,\n                snaLuRtmState changed\
    \ to 'on(2)') for this LU.\"\n        ::= { snaLuRtmEntry 17 }\n"
- title: snaLuRtmLastRspTime OBJECT-TYPE
  contents:
  - "snaLuRtmLastRspTime OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the response time for the last\n                transaction\
    \ in units of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 18 }\n"
- title: snaLuRtmAvgRspTime OBJECT-TYPE
  contents:
  - "snaLuRtmAvgRspTime OBJECT-TYPE\n        SYNTAX  Integer32\n        MAX-ACCESS\
    \  read-only\n        STATUS  current\n        DESCRIPTION\n                \"\
    This value indicates the average response time for all\n                transactions\
    \ in units of 1/10th of a second.\"\n        ::= { snaLuRtmEntry 19 }\n"
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: -- Conformance information
  contents:
  - '-- Conformance information

    '
- title: -- ***************************************************************
  contents:
  - '-- ***************************************************************

    '
- title: snanauConformance       OBJECT IDENTIFIER ::= { snanauMIB 2 }
  contents:
  - 'snanauConformance       OBJECT IDENTIFIER ::= { snanauMIB 2 }

    '
- title: snanauCompliances       OBJECT IDENTIFIER ::= {snanauConformance 1 }
  contents:
  - 'snanauCompliances       OBJECT IDENTIFIER ::= {snanauConformance 1 }

    '
- title: snanauGroups            OBJECT IDENTIFIER ::= {snanauConformance 2 }
  contents:
  - 'snanauGroups            OBJECT IDENTIFIER ::= {snanauConformance 2 }

    '
- title: -- Compliance statements
  contents:
  - '-- Compliance statements

    '
- title: snanauCompliance  MODULE-COMPLIANCE
  contents:
  - "snanauCompliance  MODULE-COMPLIANCE\n        STATUS  current\n        DESCRIPTION\n\
    \                \"The compliance statement for the SNMPv2 entities\n        \
    \        which implement the snanau MIB.\"\n        MODULE  -- this module\n"
- title: --      Unconditionally mandatory groups
  contents:
  - "--      Unconditionally mandatory groups\n                MANDATORY-GROUPS  {\
    \ snaNodeGroup,\n                        snaLuGroup,\n                       \
    \ snaSessionGroup }\n"
- title: --      Conditionally mandatory groups
  contents:
  - "--      Conditionally mandatory groups\n                GROUP  snaPu20Group\n\
    \                DESCRIPTION\n                        \"The snaPu20Group is mandatory\
    \ only for those\n                        entities which implement PU type 2.0\"\
    \n                GROUP  snaMgtToolsRtmGroup\n                DESCRIPTION\n  \
    \                      \"The snaMgtToolsGroup is mandatory only for\n        \
    \                those entities which implement LU type 2\n                  \
    \      and RTM.\"\n"
- title: --      Refinement of requirements for objects access.
  contents:
  - '--      Refinement of requirements for objects access.

    '
- title: --      The Agent which does not implement row creation for
  contents:
  - '--      The Agent which does not implement row creation for

    '
- title: --      snaNodeAdminTable, snaNodeLinkAdminTable and
  contents:
  - '--      snaNodeAdminTable, snaNodeLinkAdminTable and

    '
- title: --      snaLuAdminTable must at least accept
  contents:
  - '--      snaLuAdminTable must at least accept

    '
- title: --      objects modification (read-write access instead of
  contents:
  - '--      objects modification (read-write access instead of

    '
- title: --      read-create).
  contents:
  - "--      read-create).\n                OBJECT  snaNodeAdminName\n           \
    \     MIN-ACCESS  read-write\n                DESCRIPTION\n                  \
    \      \"An Agent is required to implement read-write\n                      \
    \  access to this object.\"\n                OBJECT  snaNodeAdminType\n      \
    \          MIN-ACCESS  read-write\n                DESCRIPTION\n             \
    \           \"An Agent is required to implement read-write\n                 \
    \       access to this object.\"\n                OBJECT  snaNodeAdminXidFormat\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminBlockNum\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminIdNum\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminEnablingMethod\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminLuTermDefault\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminMaxLu\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminHostDescription\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminStopMethod\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeAdminState\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeLinkAdminSpecific\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaNodeLinkAdminMaxPiu\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminName\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminSnaName\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminType\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminDepType\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminLocalAddress\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminDisplayModel\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n                OBJECT  snaLuAdminTerm\n\
    \                MIN-ACCESS  read-write\n                DESCRIPTION\n       \
    \                 \"An Agent is required to implement read-write\n           \
    \             access to this object.\"\n        ::= {snanauCompliances 1 }\n"
- title: -- Units of conformance
  contents:
  - '-- Units of conformance

    '
- title: snaNodeGroup  OBJECT-GROUP
  contents:
  - "snaNodeGroup  OBJECT-GROUP\n        OBJECTS  { snaNodeAdminName,\n          \
    \      snaNodeAdminType,\n                snaNodeAdminXidFormat,\n           \
    \     snaNodeAdminBlockNum,\n                snaNodeAdminIdNum,\n            \
    \    snaNodeAdminEnablingMethod,\n                snaNodeAdminLuTermDefault,\n\
    \                snaNodeAdminMaxLu,\n                snaNodeAdminHostDescription,\n\
    \                snaNodeAdminStopMethod,\n                snaNodeAdminState,\n\
    \                snaNodeAdminRowStatus,\n                snaNodeAdminTableLastChange,\n\
    \                snaNodeOperName,\n                snaNodeOperType,\n        \
    \        snaNodeOperXidFormat,\n                snaNodeOperBlockNum,\n       \
    \         snaNodeOperIdNum,\n                snaNodeOperEnablingMethod,\n    \
    \            snaNodeOperLuTermDefault,\n                snaNodeOperMaxLu,\n  \
    \              snaNodeOperHostDescription,\n                snaNodeOperStopMethod,\n\
    \                snaNodeOperState,\n                snaNodeOperHostSscpId,\n \
    \               snaNodeOperStartTime,\n                snaNodeOperLastStateChange,\n\
    \                snaNodeOperActFailures,\n                snaNodeOperActFailureReason,\n\
    \                snaNodeOperTableLastChange,\n                snaNodeLinkAdminSpecific,\n\
    \                snaNodeLinkAdminMaxPiu,\n                snaNodeLinkAdminRowStatus,\n\
    \                snaNodeLinkAdminTableLastChange,\n                snaNodeLinkOperSpecific,\n\
    \                snaNodeLinkOperMaxPiu,\n                snaNodeLinkOperTableLastChange\
    \ }\n        STATUS  current\n        DESCRIPTION\n                \"A collection\
    \ of objects providing the\n                instrumentation of SNA nodes.\"\n\
    \        ::= { snanauGroups 1 }\n"
- title: snaLuGroup  OBJECT-GROUP
  contents:
  - "snaLuGroup  OBJECT-GROUP\n        OBJECTS  { snaLuAdminName,\n              \
    \  snaLuAdminSnaName,\n                snaLuAdminType,\n                snaLuAdminDepType,\n\
    \                snaLuAdminLocalAddress,\n                snaLuAdminDisplayModel,\n\
    \                snaLuAdminTerm,\n                snaLuAdminRowStatus,\n     \
    \           snaLuOperName,\n                snaLuOperSnaName,\n              \
    \  snaLuOperType,\n                snaLuOperDepType,\n                snaLuOperLocalAddress,\n\
    \                snaLuOperDisplayModel,\n                snaLuOperTerm,\n    \
    \            snaLuOperState,\n                snaLuOperSessnCount }\n        STATUS\
    \  current\n        DESCRIPTION\n                \"A collection of objects providing\
    \ the\n                instrumentation of SNA LUs.\"\n        ::= { snanauGroups\
    \ 2 }\n"
- title: snaSessionGroup  OBJECT-GROUP
  contents:
  - "snaSessionGroup  OBJECT-GROUP\n        OBJECTS  { snaLuSessnRluIndex,\n     \
    \           snaLuSessnIndex,\n                snaLuSessnLocalApplName,\n     \
    \           snaLuSessnRemoteLuName,\n                snaLuSessnMaxSndRuSize,\n\
    \                snaLuSessnMaxRcvRuSize,\n                snaLuSessnSndPacingSize,\n\
    \                snaLuSessnRcvPacingSize,\n                snaLuSessnActiveTime,\n\
    \                snaLuSessnAdminState,\n                snaLuSessnOperState,\n\
    \                snaLuSessnSenseData,\n                snaLuSessnTerminationRu,\n\
    \                snaLuSessnUnbindType,\n                snaLuSessnLinkIndex,\n\
    \                snaLuSessnStatsSentBytes,\n                snaLuSessnStatsReceivedBytes,\n\
    \                snaLuSessnStatsSentRus,\n                snaLuSessnStatsReceivedRus,\n\
    \                snaLuSessnStatsSentNegativeResps,\n                snaLuSessnStatsReceivedNegativeResps\
    \ }\n        STATUS  current\n        DESCRIPTION\n                \"A collection\
    \ of objects providing the\n                instrumentation of SNA sessions.\"\
    \n        ::= { snanauGroups 3 }\n"
- title: snaPu20Group  OBJECT-GROUP
  contents:
  - "snaPu20Group  OBJECT-GROUP\n        OBJECTS  { snaPu20StatsSentBytes,\n     \
    \           snaPu20StatsReceivedBytes,\n                snaPu20StatsSentPius,\n\
    \                snaPu20StatsReceivedPius,\n                snaPu20StatsSentNegativeResps,\n\
    \                snaPu20StatsReceivedNegativeResps,\n                snaPu20StatsActLus,\n\
    \                snaPu20StatsInActLus,\n                snaPu20StatsBindLus }\n\
    \        STATUS  current\n        DESCRIPTION\n                \"A collection\
    \ of objects providing the\n                instrumentation of PU 2.0.\"\n   \
    \     ::= { snanauGroups 4 }\n"
- title: snaMgtToolsRtmGroup  OBJECT-GROUP
  contents:
  - "snaMgtToolsRtmGroup  OBJECT-GROUP\n        OBJECTS  { snaLuRtmState,\n      \
    \          snaLuRtmStateTime,\n                snaLuRtmDef,\n                snaLuRtmBoundary1,\n\
    \                snaLuRtmBoundary2,\n                snaLuRtmBoundary3,\n    \
    \            snaLuRtmBoundary4,\n                snaLuRtmCounter1,\n         \
    \       snaLuRtmCounter2,\n                snaLuRtmCounter3,\n               \
    \ snaLuRtmCounter4,\n                snaLuRtmOverFlows,\n                snaLuRtmObjPercent,\n\
    \                snaLuRtmObjRange,\n                snaLuRtmNumTrans,\n      \
    \          snaLuRtmLastRspTime,\n                snaLuRtmAvgRspTime }\n      \
    \  STATUS  current\n        DESCRIPTION\n                \"A collection of objects\
    \ providing the\n                instrumentation of RTM for SNA LU 2.0.\"\n  \
    \      ::= { snanauGroups 5 }\n"
- title: -- end of conformance statement
  contents:
  - '-- end of conformance statement

    '
- title: END
  contents:
  - 'END

    '
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   The following people greatly contributed to the work\
    \ on this MIB\n   document: Michael Allen, Robin Cheng, Bill Kwan. Special thanks\
    \ goes\n   to Dave Perkins for his assistance in reviewing this MIB proposal.\n"
- title: 6.  References
  contents:
  - "6.  References\n   [1] IBM, Systems Network Architecture Technical Overview,\
    \ GC 30-\n       3073-3, March, 1991.\n   [2] Case, J., McCloghrie, K., Rose,\
    \ M., and S. Waldbusser, \"Structure\n       of Management Information for version\
    \ 2 of the Simple Network\n       Management Protocol (SNMPv2)\", RFC 1442, SNMP\
    \ Research, Inc.,\n       Hughes LAN Systems, Dover Beach Consulting, Inc., Carnegie\
    \ Mellon\n       University, April 1993.\n   [3] McCloghrie, K., and M. Rose,\
    \ \"Management Information Base for\n       Network Management of TCP/IP-based\
    \ internets - MIB-II\", STD 17,\n       RFC 1213, Hughes LAN Systems, Performance\
    \ Systems International,\n       March 1991.\n   [4] Galvin, J., and K. McCloghrie,\
    \ \"Administrative Model for version\n       2 of the Simple Network Management\
    \ Protocol (SNMPv2)\", RFC 1445,\n       Trusted Information Systems, Hughes LAN\
    \ Systems, April 1993.\n   [5] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser,\
    \ \"Protocol\n       Operations for version 2 of the Simple Network Management\n\
    \       Protocol (SNMPv2)\", RFC 1448, SNMP Research, Inc., Hughes LAN\n     \
    \  Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University,\
    \ April 1993.\n   [6] Case, J., McCloghrie, K., Rose, M., and S. Waldbusser, \"\
    Textual\n       Conventions for version 2 of the Simple Network Management\n \
    \      Protocol (SNMPv2)\", RFC 1443, SNMP Research, Inc., Hughes LAN\n      \
    \ Systems, Dover Beach Consulting, Inc., Carnegie Mellon\n       University, April\
    \ 1993.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 8.  Authors' Addresses
  contents:
  - "8.  Authors' Addresses\n   Zbigniew Kielczewski\n   Eicon Technology Corporation\n\
    \   2196 32nd Avenue\n   Montreal, Quebec, Canada H8T 3H7\n   Phone:    1 514\
    \ 631 2592\n   EMail: zbig@eicon.qc.ca\n   Deirdre Kostick\n   Bellcore\n   331\
    \ Newman Springs Road\n   Red Bank, NJ 07701\n   Phone:    1 908 758 2642\n  \
    \ EMail: dck2@mail.bellcore.com\n   Kitty Shih\n   Novell\n   890 Ross Drive\n\
    \   Sunnyvale, CA 94089\n   Phone:   1 408 747 4305\n   EMail: kmshih@novell.com\n"
