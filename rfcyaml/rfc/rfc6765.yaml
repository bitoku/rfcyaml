- contents:
  - '                  xDSL Multi-Pair Bonding (G.Bond) MIB

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a Management Information Base (MIB) module
    for\n   use with network management protocols in TCP/IP-based internets.\n   This
    document defines an extension to the Interfaces Group MIB with a\n   set of common
    objects for managing multi-pair bonded Digital\n   Subscriber Line (xDSL) interfaces,
    as defined in ITU-T\n   Recommendations G.998.1, G.998.2, and G.998.3.  The textual\n
    \  conventions defining the bonding schemes are contained in a separate\n   MIB
    module maintained by Internet Assigned Numbers Authority (IANA).\n   The MIB modules
    specific to each bonding technology are defined in\n   G9981-MIB, G9982-MIB, and
    G9983-MIB, respectively.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6765.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. The Internet-Standard Management Framework ......................4\n   3.
    The Broadband Forum Management Framework for xDSL Bonding .......4\n   4. Relationship
    to Other MIB Modules ...............................5\n      4.1. Relationship
    to Interfaces Group MIB Module ................5\n           4.1.1. Layering Model
    ......................................5\n           4.1.2. xDSL Bonding ........................................7\n
    \          4.1.3. Discovery Operation .................................8\n           4.1.4.
    Initialization of G.Bond Ports .....................10\n           4.1.5. Usage
    of the ifTable ...............................11\n      4.2. Relationship to G.Bond
    ATM, ETH, and TDIM MIB Modules .....13\n      4.3. Relationship to xDSL MIB Modules
    ..........................13\n      4.4. Addition of New Bonding Schemes ...........................13\n
    \  5. MIB Structure ..................................................13\n      5.1.
    Overview ..................................................13\n      5.2. Performance
    Monitoring ....................................14\n      5.3. Mapping of Broadband
    Forum TR-159 Managed Objects .........14\n   6. xDSL Multi-Pair Bonding MIB Definitions
    ........................19\n   7. IANA-Maintained G.Bond TC Definitions ..........................65\n
    \  8. Security Considerations ........................................67\n   9.
    IANA Considerations ............................................69\n   10. Acknowledgments
    ...............................................69\n   11. References ....................................................70\n
    \     11.1. Normative References .....................................70\n      11.2.
    Informative References ...................................71\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   xDSL Multi-pair bonding allows a service provider to provide
    high-\n   bandwidth services to business and residential customers over\n   multiple
    xDSL lines, with greater speed and resiliency than service\n   over a single xDSL
    line, bridging the gap between xDSL and fiber-\n   based transport.\n   Currently,
    there are three xDSL Multi-pair bonding schemes, also\n   known under the collective
    name \"G.Bond\":\n   o  ATM-Based Multi-pair bonding, as specified in ITU-T Recommendation\n
    \     G.998.1 [G.998.1], which defines a method for the bonding (or\n      aggregating)
    of multiple xDSL lines (or individual bearer channels\n      in multiple xDSL
    lines) into a single bidirectional logical link\n      carrying an ATM stream.
    \ This specification can be viewed as an\n      evolution of the legacy Inverse
    Multiplexing for ATM (IMA)\n      technology [AF-PHY-0086], applied to xDSL with
    variable rates on\n      each line/bearer channel.\n   o  Ethernet-Based Multi-pair
    bonding, as specified in ITU-T\n      Recommendation G.998.2 [G.998.2], which
    defines a method for the\n      bonding (or aggregating) of multiple xDSL lines
    (or individual\n      bearer channels in multiple xDSL lines) into a single\n
    \     bidirectional logical link carrying an Ethernet stream.  This\n      specification
    can be viewed as IEEE 802.3-2005 [802.3] Clause 61,\n      Physical Medium Entity
    (PME) Aggregation, generalized to work over\n      any xDSL technology (2Base-TL
    and 10Pass-TS interfaces defined by\n      IEEE use G.SHDSL (Single-pair High-speed
    DSL) and VDSL (Very high\n      speed DSL) technology, respectively).\n   o  Multi-pair
    bonding using Time-Division Inverse Multiplexing\n      (TDIM), specified in ITU-T
    Recommendation G.998.3 [G.998.3], which\n      defines a method for the bonding
    (or aggregating) of multiple xDSL\n      lines into a single bidirectional logical
    link carrying a mix of\n      various traffic streams (e.g., Ethernet, ATM, TDM).\n
    \  Architecturally, all three bonding schemes define a new \"bonded\"\n   Transport
    Protocol Specific - Transmission Convergence (TPS-TC)\n   sub-layer, stacked above
    multiple ATM-TC, Ethernet/Packet Transfer\n   Mode-TC (PTM-TC), or Synchronous
    Transfer Mode-TC (STM-TC) (clear\n   channel) sub-layers for the ATM, Ethernet,
    or TDIM bonding,\n   respectively.  Each underlying TPS-TC sub-layer represents
    a\n   protocol-specific interface to an xDSL line or an individual bearer\n   channel
    of an xDSL line.  Bonding of multiple bearer channels in the\n   same xDSL line
    is not allowed.\n   All schemes allow bonding of up to 32 individual line/channel\n
    \  sub-layers with variable rates, providing common functionality for\n   the
    configuration, initialization, operation, and monitoring of the\n   bonded link.\n
    \  This document defines a MIB module common to all 3 schemes.\n   Additional
    managed objects specific to each bonding technology are\n   defined in the G9981-MIB
    [RFC6768], G9982-MIB [RFC6767], and\n   G9983-MIB [RFC6766] modules.\n   The textual
    conventions listing the bonding schemes are defined in a\n   separate, IANA-maintained
    MIB module, the first version of which is\n   provided in this document.  This
    arrangement would allow for future\n   bonding schemes to be easily supported,
    without the need to update\n   the common GBOND-MIB module.\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This document specifies
    a\n   MIB module that is compliant to the SMIv2, which is described in STD\n   58,
    RFC 2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC\n   2580 [RFC2580].\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\",
    and\n   \"OPTIONAL\" in this document are to be interpreted as described in BCP\n
    \  14, RFC 2119 [RFC2119].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  The Broadband Forum Management Framework for xDSL Bonding\n   This document
    makes use of the Broadband Forum technical report\n   \"Management Framework for
    xDSL Bonding\" [TR-159], defining a\n   management model and a hierarchy of management
    objects for the bonded\n   xDSL interfaces.\n"
  title: 3.  The Broadband Forum Management Framework for xDSL Bonding
- contents:
  - "4.  Relationship to Other MIB Modules\n   This section outlines the relationship
    of the MIB modules defined in\n   this document with other MIB modules described
    in the relevant RFCs.\n   Specifically, the following MIB modules are discussed:
    the Interfaces\n   Group MIB (IF-MIB), Inverse Stack Table MIB (IF-INVERTED-STACK-MIB),\n
    \  and Interface Stack Capability MIB (IF-CAP-STACK-MIB); G.Bond scheme-\n   specific
    modules G.Bond/ATM (G9981-MIB), G.Bond/Ethernet (G9982-MIB),\n   and G.Bond/TDIM
    (G9983-MIB); and DSL-specific MIB modules ADSL\n   (ADSL-LINE-EXT-MIB), ADSL2
    (ADSL2-LINE-MIB), SHDSL\n   (HDSL2-SHDSL-LINE-MIB), VDSL (VDSL-LINE-MIB), and
    VDSL2\n   (VDSL2-LINE-MIB).\n"
  - contents:
    - "4.1.  Relationship to Interfaces Group MIB Module\n   A bonded xDSL port is
      a stacked (a.k.a. aggregated or bonded)\n   interface and as such is managed
      using generic interface management\n   objects defined in the IF-MIB [RFC2863].\n
      \  The stack management, i.e., actual connection of the sub-layers to\n   the
      top layer interface, is done via the ifStackTable, as defined in\n   the IF-MIB
      [RFC2863] and its inverse -- the ifInvStackTable, as\n   defined in the IF-INVERTED-STACK-MIB
      [RFC2864].\n   The ifCapStackTable and its inverse -- the ifInvCapStackTable,
      as\n   defined in the IF-CAP-STACK-MIB [RFC5066] -- extend the stack\n   management
      with an ability to describe possible connections or cross-\n   connect capability,
      when a flexible cross-connect matrix is present\n   between the interface layers.\n"
    - contents:
      - "4.1.1.  Layering Model\n   A G.Bond interface can aggregate up to 32 channel
        sub-layers, with\n   each channel representing an xDSL line or an xDSL bearer
        channel.\n   For the purpose of brevity we will refer to the bonded interface
        as\n   the Generic Bonding Sub-layer (GBS) and to the channel sub-layer as\n
        \  the Bonding Channel Entity (BCE).\n   A generic G.Bond device can have
        a number of GBS ports, each\n   connected to a particular upper layer (e.g.,
        a Media Access Control\n   (MAC) interface for the G.998.2 scheme), while
        simultaneously cross-\n   connected to a number of underlying BCEs, with a
        single-GBS-per-BCE\n   relationship.\n   A GBS port is represented in the
        Interfaces table (ifTable) as a\n   separate interface with an ifType reflecting
        a particular bonding\n   scheme, e.g., g9981(263), g9982(264), or g9983(265).\n
        \  Each BCE in the aggregated GBS port is represented in the ifTable as\n
        \  a separate interface with an ifType relevant to a particular xDSL\n   technology,
        e.g., shdsl(169) or vdsl(97).  The ifType values are\n   defined in [IANAifType-MIB].\n
        \  The following figure shows the layering diagram and corresponding use\n
        \  of the ifTable for the bonded xDSL interfaces:\n   .-----------------------------.
        \ -\n   |            GBS              |  ^ 1 ifEntry\n   |          (TPS-TC)
        \          |  v    ifType: g9981(263), g9982(264),\n   +-----------------+---+-------+
        \ -            g9983(265), etc.\n   | TPS-TC \\        |   |       |  ^\n
        \  +---------\\       |   |       |  | N ifEntry  (N=1..32)\n   | PMS-TC   )BCE
        1 |...| BCE N |  )    ifType: adsl(94), shdsl(169),\n   +---------/       |
        \  |       |  |            vdsl(97), vdsl2(251),\n   | PMD    /        |   |
        \      |  v            etc.\n   '-----------------+---+-------'  -\n    BCE
        \   - Bonding Channel Entity\n    GBS    - Generic Bonding Sub-layer\n    PMD
        \   - Physical Medium Dependent\n    TPS-TC - Transport Protocol Specific
        - Transmission Convergence\n    PMS-TC - Physical Media Specific - Transmission
        Convergence\n            Figure 1: Use of ifTable for Bonded xDSL Interfaces\n
        \  The ifStackTable is indexed by the ifIndex values of the aggregated\n   G.Bond
        port (GBS) and the BCEs connected to it.  The ifStackTable\n   allows a network
        management application to determine which BCEs are\n   connected to a particular
        GBS and change connections (if supported by\n   the application).  The ifInvStackTable,
        being an inverted version of\n   the ifStackTable, provides an efficient means
        for a network\n   management application to read a subset of the ifStackTable
        and\n   thereby determine which GBS runs on top of a particular BCE.\n   The
        ifCapStackTable, defined in the IF-CAP-STACK-MIB module,\n   specifies for
        each higher-layer interface (e.g., GBS port) a list of\n   lower-layer interfaces
        (e.g., BCEs), which can possibly be cross-\n   connected to that higher-layer
        interface, determined by the cross-\n   connect capability of the device.
        \ This table, modeled after the\n   ifStackTable, is read only, reflecting
        current cross-connect\n   capability of a stacked interface, which can be
        dynamic in some\n   implementations (e.g., if xDSL lines are located on a
        pluggable\n   module and the module is pulled out).  Note that BCE availability
        per\n   GBS, described by the ifCapStackTable, can be constrained by other\n
        \  parameters -- for example, by the aggregation capacity of a GBS or by\n
        \  the BCE in question being already connected to another GBS.  So, in\n   order
        to ensure that a particular BCE can be connected to the GBS,\n   all respective
        parameters (e.g., ifCapStackTable, ifStackTable, and\n   gBondPortCapCapacity)
        SHALL be inspected.\n   The ifInvCapStackTable, also defined in the IF-CAP-STACK-MIB
        module,\n   describes which higher-layer interfaces (e.g., GBS ports) can\n
        \  possibly be connected to a particular lower-layer interface (e.g.,\n   BCE),
        providing inverted mapping of the ifCapStackTable.  While it\n   contains
        no additional information beyond that already contained in\n   the ifCapStackTable,
        the ifInvCapStackTable has the ifIndex values in\n   its INDEX clause in the
        reverse order, i.e., the lower-layer\n   interface first, and the higher-layer
        interface second, providing\n   efficient means for a network management application
        to read a subset\n   of the ifCapStackTable and thereby determine which interfaces
        can be\n   connected to run on top of a particular interface.\n"
      title: 4.1.1.  Layering Model
    - contents:
      - "4.1.2.  xDSL Bonding\n   The G.998.x Bonding allows a number of BCEs to be
        aggregated onto a\n   single logical GBS port by splitting the incoming traffic
        into\n   multiple streams, transmitting each stream over a specific BCE, and\n
        \  combining the streams at the remote GBS port, preserving the original\n
        \  traffic order.\n   The Ethernet frames MAY be fragmented before the transmission
        and\n   reassembled at the remote end to minimize transportation delay.  The\n
        \  G.998.2 (G.Bond/Ethernet) ports with multiple BCEs MUST perform the\n   fragmentation
        and reassembly of the Ethernet frames.  However, for\n   single-BCE G.998.2
        ports this function MAY be omitted (a.k.a. bonding\n   bypass), to minimize
        fragmentation overhead and additional processing\n   delay as well as to be
        able to interoperate with non-G.998 DSL\n   equipment.\n   The agent is REQUIRED
        to indicate all supported bonding schemes (for\n   example, ATM, Ethernet,
        and TDIM), including OPTIONAL support for the\n   bonding bypass in G.998.2
        single-BCE ports.\n   The GBOND-MIB module allows a network management application
        to query\n   Bonding capability and enable/disable it if supported.  Note
        that\n   enabling Bonding (by setting the value of the\n   gBondPortConfAdminScheme
        and gBondPortConfPeerAdminScheme objects to\n   any supported bonding scheme
        other than 'none') effectively turns on\n   the fragmentation and reassembly
        function, even on a single-BCE port.\n"
      title: 4.1.2.  xDSL Bonding
    - contents:
      - "4.1.3.  Discovery Operation\n   The G.Bond ports may optionally support a
        discovery operation whereby\n   BCEs, during initialization, exchange information
        about their\n   respective aggregation groups (GBS), via the [G.994.1] handshake\n
        \  (G.hs) protocol.  This information can then be used to detect copper\n
        \  misconnections or for an automatic assignment of the local BCEs into\n
        \  aggregation groups instead of a fixed preconfiguration.\n   The MIB module
        defined in this document allows a network management\n   application to control
        the G.Bond discovery mechanism and query its\n   results.\n   Two tables are
        used by the G.Bond discovery mechanism: the\n   ifStackTable and the ifCapStackTable.
        \ The following pseudocode gives\n   an example of the discovery and automatic
        BCE assignment for a\n   generic multi-GBS G.Bond device, located at the Central
        Office (CO),\n   using objects defined in this MIB module as well as the\n
        \  IF-CAP-STACK-MIB and IF-MIB modules [Note that automatic BCE\n   assignment
        is only shown here for the purposes of the example.  Fixed\n   BCE pre-assignment,
        manual assignment, or auto-assignment using an\n   alternative internal algorithm
        may be chosen by a particular\n   implementation]:\n   // Go over all GBS
        ports in the CO device\n   FOREACH gbs[i] IN CO_device\n   { // Perform discovery
        and auto-assignment on GBS ports\n     // with room for more channels.\n     IF
        ( gbs[i].NumBCEs < gbs[i].BondCapacity )\n     { // Assign a unique 6-octet
        local discovery code to the GBS,\n       // e.g., MAC address of the associated
        port or some other\n       // unique number specifically allocated for this
        purpose.\n       dc = gbs[i].DiscoveryCode = MAC[i];\n       // Go over all
        disconnected channels, which can\n       // potentially be connected to the
        GBS.\n       FOREACH bce[j] IN ifCapStackTable[gbs[i]] AND\n                      NOT
        IN ifStackTable[gbs[i]]  // not connected\n       { // Try to grab the Remote
        Terminal device (RT) by writing the\n         // value of the local 6-byte
        discovery code to the remote\n         // discovery code register (via a handshake
        mechanism).\n         // This operation is an atomic Set-if-Clear action;
        i.e., it\n         // would succeed only if the remote discovery register
        was\n         // zero.  Read the remote discovery code register via a Get\n
        \        // operation to see if the RT, attached via the BCE,\n         //
        is indeed marked as being the CO_device peer.\n         bce[j].RemoteDiscoveryCode
        = dc;          // Set-if-Clear\n         r = bce[j].RemoteDiscoveryCode;           //
        Get\n         IF ( r == dc AND gbs[i].NumBCEs < gbs[i].BondCapacity )\n         {
        // RT connected via BCE[j] is/was a peer\n           // for GBS[i], and there
        is room for another BCE in the\n           // GBS[i] aggregation group (max.
        Bonding capacity is\n           // not reached yet).\n           // Connect
        this BCE to the GBS (via the ifStackTable; the\n           // ifInvStackTable,
        which is the inverse of the ifStackTable,\n           // is updated automatically;
        i.e., gbs[i] is auto-added\n           // to ifInvStackTable[bce[j]]).\n           ADD
        bce[j] TO ifStackTable[gbs[i]];\n           gbs[i].NumBCEs = gbs[i].NumBCEs
        + 1;\n           // Discover all other disconnected BCEs\n           // attached
        to the same RT and connect them to\n           // the GBS, provided there
        is enough room for more BCEs.\n           FOREACH bce[k] IN ifCapStackTable[gbs[i]]
        and\n                          NOT IN ifStackTable[gbs[i]]\n           { //
        Get the remote discovery code from the BCE to see if\n             // it belongs
        to a connected RT \"grabbed\" by\n             // the CO_device.\n             r
        = bce[k].RemoteDiscoveryCode;\n             IF ( r == dc AND gbs[i].NumBCEs
        < gbs[i].BondCapacity )\n             { // Physically connect the BCE to the
        GBS.\n               // (gbs[i] is auto-added TO ifInvStackTable[bce[k]]).\n
        \              ADD bce[k] TO ifStackTable[gbs[i]];\n               gbs[i].NumBCEs
        = gbs[i].NumBCEs + 1;\n             }\n           }\n         }\n         //
        At this point we have discovered all local BCEs that\n         // are physically
        connected to the same RT and\n         // connected them to GBS[i].  Go to
        the next GBS.\n         BREAK;\n       }\n     }\n   }\n   An SNMP agent for
        a G.Bond device builds the ifCapStackTable and its\n   inverse -- the ifInvCapStackTable
        -- on device initialization,\n   according to the cross-connect capabilities
        of the device.\n   Adding a BCE to the ifStackTable row for a specific GBS
        involves\n   actual connection of the BCE to the GBS.\n   Note that a GBS
        port does not have to be operationally 'down' for the\n   connection to succeed.
        \ In fact, a dynamic BCE addition (and removal)\n   MAY be implemented with
        an available BCE being initialized first (by\n   setting its ifAdminStatus
        to 'up') and then added to an operationally\n   'up' GBS port, by modifying
        a respective ifStackTable (and respective\n   ifInvStackTable) entry.\n   It
        is RECOMMENDED that removal of the last operationally 'up' BCE\n   from an
        operationally 'up' GBS, i.e., modification of a respective\n   entry in the
        ifStackTable, and a corresponding entry in the\n   ifInvStackTable, would
        be rejected by the implementation (in the case\n   of SNMP, with the error
        inconsistentValue), as this action would\n   completely drop the link.\n   In
        addition to the standard handshake-based discovery described\n   above, [G.998.2]
        defines an optional frame-based discovery and pair\n   management.  These
        frame-based methods are discussed in [RFC6767].\n"
      title: 4.1.3.  Discovery Operation
    - contents:
      - "4.1.4.  Initialization of G.Bond Ports\n   G.Bond ports built on top of xDSL
        technology require a lengthy\n   initialization or 'training' process before
        any data can pass.\n   During this initialization, both ends of a link (peers)
        work\n   cooperatively to achieve a required data rate on a particular copper\n
        \  pair.  Sometimes, when the copper line is too long or the noise on\n   the
        line is too high, that 'training' process may fail to achieve a\n   specific
        target rate with required characteristics.\n   The ifAdminStatus object from
        the IF-MIB controls the desired state\n   of a GBS with all the BCEs connected
        to it or of an individual BCE\n   port.  Setting this object to 'up' instructs
        a particular GBS or a\n   BCE to start the initialization process, which may
        take tens of\n   seconds for G.Bond ports.  The ifOperStatus object from the
        IF-MIB\n   shows the operational state of an interface for the GBS, extended
        by\n   the gBondPortStatFltStatus object defined in this document, and a\n
        \  corresponding *Status object from a relevant xDSL line MIB for BCE\n   interfaces.\n
        \  A disconnected BCE may be initialized by changing the ifAdminStatus\n   from
        'down' to 'up'.  Changing the ifAdminStatus to 'up' on the GBS\n   initializes
        all BCEs connected to that particular GBS.  Note that in\n   the case of bonding,
        some interfaces may fail to initialize while\n   others succeed.  The GBS
        is considered operationally 'up' if at least\n   one bonded BCE is operationally
        'up'.  When all BCEs connected to the\n   GBS are 'down', the GBS SHALL be
        considered operationally\n   'lowerLayerDown'.  The GBS SHALL be considered
        operationally\n   'notPresent' if it is not connected to any BCE.  The GBS/BCE\n
        \  interface SHALL remain operationally 'down' during initialization,\n   indicated
        by the 'init' value of the gBondPortStatFltStatus object.\n"
      title: 4.1.4.  Initialization of G.Bond Ports
    - contents:
      - "4.1.5.  Usage of the ifTable\n   Both BCE and GBS interfaces are managed
        using interface-specific\n   management objects defined in the GBOND-MIB module
        and generic\n   interface objects from the ifTable of the IF-MIB, with all
        management\n   table entries referenced by the interface index ifIndex.\n
        \  The following table summarizes G.Bond-specific interpretations for\n   some
        of the ifTable objects specified by the mandatory\n   ifGeneralInformationGroup:\n
        \  +---------------+---------------------------------------------------+\n
        \  | IF-MIB Object | G.Bond Interpretation                             |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifIndex       | Interface index.  Note that each BCE and each GBS |\n
        \  |               | in the G.Bond PHY MUST have a unique index, as    |\n
        \  |               | there are some GBS- and BCE-specific attributes   |\n
        \  |               | accessible only on the GBS or BCE level.          |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifType        | g9981(263), g9982(264), or g9983(265) for the     |\n
        \  |               | ATM, Ethernet, or TDIM GBS, respectively;         |\n
        \  |               | shdsl(169) for the G.SHDSL BCE, vdsl(97) for the  |\n
        \  |               | VDSL BCE, etc.                                    |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifSpeed       | Operating data rate for the BCE.  For the GBS, it |\n
        \  |               | is the sum of the current operating data rates of |\n
        \  |               | all BCEs in the aggregation group, without the    |\n
        \  |               | encapsulation overhead and G.Bond overhead, but   |\n
        \  |               | accounting for Inter-Frame Gaps (IFG).  When a    |\n
        \  |               | GBS or a BCE is operating in an asymmetrical      |\n
        \  |               | fashion (the upstream data rate differs from the  |\n
        \  |               | downstream one), the lowest of the values is      |\n
        \  |               | shown.                                            |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifAdminStatus | Setting this object to 'up' instructs a           |\n
        \  |               | particular GBS (with all BCEs connected to it) or |\n
        \  |               | a BCE to start the initialization process.        |\n
        \  +---------------+---------------------------------------------------+\n
        \  | ifOperStatus  | A relevant *Status object from a particular line  |\n
        \  |               | MIB supplements the value of ifOperStatus for     |\n
        \  |               | BCEs.  gBondPortStatFltStatus supplements the     |\n
        \  |               | value of ifOperStatus for a GBS.  Note that both  |\n
        \  |               | relevant objects shall be inspected to determine  |\n
        \  |               | the real operational status of a BCE/GBS port,    |\n
        \  |               | e.g., a GBS port may be operationally 'up' with   |\n
        \  |               | gBondPortStatFltStatus indicating lowRate(4)      |\n
        \  |               | fault condition, or 'down' with no gBond faults.  |\n
        \  +---------------+---------------------------------------------------+\n
        \            Table 1: G.Bond Interpretation of IF-MIB Objects\n"
      title: 4.1.5.  Usage of the ifTable
    title: 4.1.  Relationship to Interfaces Group MIB Module
  - contents:
    - "4.2.  Relationship to G.Bond ATM, ETH, and TDIM MIB Modules\n   The MIB module
      defined in this document is common to all G.998\n   bonding schemes.  It MUST
      be used in conjunction with a bonding\n   scheme-specific MIB module:\n   o
      \ G9981-MIB [RFC6768] for a G.998.1 bonded interface.\n   o  G9982-MIB [RFC6767]
      for a G.998.2 bonded interface.\n   o  G9983-MIB [RFC6766] for a G.998.3 bonded
      interface.\n"
    title: 4.2.  Relationship to G.Bond ATM, ETH, and TDIM MIB Modules
  - contents:
    - "4.3.  Relationship to xDSL MIB Modules\n   Each xDSL technology is described
      in a relevant xDSL line MIB module:\n   e.g., the HDSL2-SHDSL-LINE-MIB [RFC4319]
      for G.SHDSL,\n   ADSL-LINE-EXT-MIB [RFC3440] for ADSL, ADSL2-LINE-MIB [RFC4706]
      for\n   ADSL2, VDSL-LINE-MIB [RFC3728] for VDSL, or VDSL2-LINE-MIB [RFC5650]\n
      \  for VDSL2.\n   These MIB modules are used to manage individual xDSL lines/channels\n
      \  (BCEs).\n"
    title: 4.3.  Relationship to xDSL MIB Modules
  - contents:
    - "4.4.  Addition of New Bonding Schemes\n   In case a new bonding scheme is introduced
      in a revision of G.998,\n   IANA can update the IANA-maintained MIB module,
      adding the\n   corresponding new value to the IANAgBondScheme and\n   IANAgBondSchemeList
      textual conventions, as well as listing the new\n   scheme-specific MIB module's
      name (e.g., G998x-MIB).\n   Any scheme-specific aspect of an existing GBOND-MIB
      object SHALL be\n   described in the corresponding G998x-MIB module, to prevent
      an\n   unnecessary reissue of the GBOND-MIB module.  For example, an exact\n
      \  definition of an Errored Second (ES) or a Severely Errored Second\n   (SES)
      can be bonding-scheme specific; see the definitions for the\n   gBondPortPmCurES
      and gBondPortPmCurSES objects.\n"
    title: 4.4.  Addition of New Bonding Schemes
  title: 4.  Relationship to Other MIB Modules
- contents:
  - '5.  MIB Structure

    '
  - contents:
    - "5.1.  Overview\n   The main management objects defined in the GBOND-MIB module
      are split\n   into 2 groups, structured as recommended by RFC 4181 [RFC4181]:\n
      \  o  gBondPort - containing objects for configuration, capabilities,\n      status,
      historical Performance Monitoring, and notifications,\n      common to all G.Bond
      ports (GBS).\n   o  gBondBce - containing a single common object for configuration
      of\n      the remote discovery code per BCE.  Note that the rest of the\n      objects
      for BCE configuration, capabilities, status, and\n      notifications are located
      in relevant xDSL line MIB modules as\n      well as in the bonding scheme-specific
      MIB modules.\n"
    title: 5.1.  Overview
  - contents:
    - "5.2.  Performance Monitoring\n   The OPTIONAL Performance Monitoring counters,
      thresholds, and history\n   buckets (interval-counters) defined in [TR-159]
      are implemented using\n   the textual conventions defined in the HC-PerfHist-TC-MIB
      [RFC3705].\n   The HC-PerfHist-TC-MIB defines 64-bit versions of the textual\n
      \  conventions found in the PerfHist-TC-MIB [RFC3593].\n   The agent SHOULD
      align the beginning of each interval to a fifteen-\n   minute boundary of a
      wall clock.  Likewise, the beginning of each\n   one-day interval SHOULD be
      aligned with the start of a day.\n   The rationale behind this is to simplify
      collection and analysis of\n   Performance Monitoring (PM) from multiple agents
      by a network\n   management system (NMS) -- each PM interval can be \"time-stamped\"\n
      \  using the gBond*IntervalIndex object, from the fact that the 1-day\n   interval
      starts at 00:00 and the 15-minute intervals are aligned with\n   each 1/4 hour
      and the network-wide \"wall clock\", typically\n   distributed via NTP or the
      Simple Network Time Protocol (SNTP)\n   [RFC5905].  If the agent does not have
      access to the wall clock, a\n   local clock can be used.  In this case, as well
      as when coping with\n   multiple time zones, the NMS would have to correlate
      the difference\n   between the agent's local clock (available, for example,
      via the\n   hrSystemDate object from the HOST-RESOURCES-MIB [RFC2790]) and the\n
      \  wall clock.\n   Counters are not reset when a GBS is re-initialized, but
      rather only\n   when the agent is reset or re-initialized.\n   Note that the
      accumulation of certain performance events for a\n   monitored entity is inhibited
      (counting stops) during periods of\n   service unavailability on that monitored
      entity.  The DESCRIPTION\n   clause of Performance Monitoring counters in this
      MIB module\n   specifies which of the counters are inhibited during periods
      of\n   service unavailability.\n"
    title: 5.2.  Performance Monitoring
  - contents:
    - "5.3.  Mapping of Broadband Forum TR-159 Managed Objects\n   This section contains
      the mapping between relevant managed objects\n   (attributes) defined in [TR-159]
      and managed objects defined in this\n   document and in associated MIB modules,
      i.e., the IF-MIB [RFC2863].\n +--------------------------------+------------------------------------+\n
      | G.Bond Managed Object          | Corresponding SNMP Object          |\n +--------------------------------+------------------------------------+\n
      | oBondingGroup - Basic Package  |                                    |\n |
      (Mandatory)                    |                                    |\n +--------------------------------+------------------------------------+\n
      | aGroupID                       | ifIndex (IF-MIB)                   |\n +--------------------------------+------------------------------------+\n
      | aGroupBondSchemesSupported     | gBondPortCapSchemesSupported       |\n +--------------------------------+------------------------------------+\n
      | aGroupPeerBondSchemesSupported | gBondPortCapPeerSchemesSupported   |\n +--------------------------------+------------------------------------+\n
      | aGroupAdminBondScheme          | gBondPortConfAdminScheme           |\n +--------------------------------+------------------------------------+\n
      | aGroupPeerAdminBondScheme      | gBondPortConfPeerAdminScheme       |\n +--------------------------------+------------------------------------+\n
      | aGroupOperBondScheme           | gBondPortStatOperScheme            |\n +--------------------------------+------------------------------------+\n
      | aGroupPeerOperBondScheme       | gBondPortStatPeerOperScheme        |\n +--------------------------------+------------------------------------+\n
      | aGroupEnd                      | gBondPortStatSide                  |\n +--------------------------------+------------------------------------+\n
      | aGroupOperState                | ifOperStatus (IF-MIB)              |\n +--------------------------------+------------------------------------+\n
      | aGroupAdminState               | ifAdminStatus (IF-MIB)             |\n +--------------------------------+------------------------------------+\n
      | aGroupStatus                   | gBondPortStatFltStatus             |\n +--------------------------------+------------------------------------+\n
      | aGroupCapacity                 | gBondPortCapCapacity               |\n +--------------------------------+------------------------------------+\n
      | aGroupPeerCapacity             | gBondPortCapPeerCapacity           |\n +--------------------------------+------------------------------------+\n
      | aGroupNumChannels              | gBondPortStatNumBCEs               |\n +--------------------------------+------------------------------------+\n
      | aGroupName                     | ifName (IF-MIB)                    |\n +--------------------------------+------------------------------------+\n
      | aGroupDiscoveryCode            | gBondPortConfDiscoveryCode         |\n +--------------------------------+------------------------------------+\n
      | aGroupUpRate                   | gBondPortStatUpDataRate            |\n +--------------------------------+------------------------------------+\n
      | aGroupDownRate                 | gBondPortStatDnDataRate            |\n +--------------------------------+------------------------------------+\n
      | aGroupTargetUpRate             | gBondPortConfTargetUpDataRate      |\n +--------------------------------+------------------------------------+\n
      | aGroupTargetDownRate           | gBondPortConfTargetDnDataRate      |\n +--------------------------------+------------------------------------+\n
      | aGroupThreshLowUpRate          | gBondPortConfThreshLowUpRate       |\n +--------------------------------+------------------------------------+\n
      +--------------------------------+------------------------------------+\n |
      aGroupThreshLowDownRate        | gBondPortConfThreshLowDnRate       |\n +--------------------------------+------------------------------------+\n
      | aGroupLowRateCrossingEnable    | gBondPortConfLowRateCrossingEnable |\n +--------------------------------+------------------------------------+\n
      | nGroupLowUpRateCrossing        | gBondLowUpRateCrossing             |\n +--------------------------------+------------------------------------+\n
      | nGroupLowDownRateCrossing      | gBondLowDnRateCrossing             |\n +--------------------------------+------------------------------------+\n
      | aGroupLinkUpDownEnable         | ifLinkUpDownTrapEnable (IF-MIB)    |\n +--------------------------------+------------------------------------+\n
      | nGroupLinkUp                   | linkUp (IF-MIB)                    |\n +--------------------------------+------------------------------------+\n
      | nGroupLinkDown                 | linkDown (IF-MIB)                  |\n +--------------------------------+------------------------------------+\n
      | oBondingGroup - PM Package     |                                    |\n |
      (Optional)                     |                                    |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfES                   | gBondPortPmCurES                   |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfSES                  | gBondPortPmCurSES                  |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfUAS                  | gBondPortPmCurUAS                  |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinValidIntervals  | gBondPortPmCur15MinValidIntervals  |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinInvalidIntervals| gBondPortPmCur15MinInvalidIntervals|\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr15MinTimeElapsed | gBondPortPmCur15MinTimeElapsed     |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr15MinES          | gBondPortPmCur15MinES              |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr15MinSES         | gBondPortPmCur15MinSES             |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr15MinUAS         | gBondPortPmCur15MinUAS             |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfTcaEnable            | gBondPortConfPmTcaEnable           |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold15MinES     | gBondPortPmTcaProfileThresh15MinES |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold15MinSES    | gBondPortPmTcaProfileThresh15MinSES|\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold15MinUAS    | gBondPortPmTcaProfileThresh15MinUAS|\n +--------------------------------+------------------------------------+\n
      | nGroupPerfTca15MinES           | gBondPmTca15MinESCrossing          |\n +--------------------------------+------------------------------------+\n
      | nGroupPerfTca15MinSES          | gBondPmTca15MinSESCrossing         |\n +--------------------------------+------------------------------------+\n
      +--------------------------------+------------------------------------+\n |
      nGroupPerfTca15MinUAS          | gBondPmTca15MinUASCrossing         |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayValidIntervals   | gBondPortPmCur1DayValidIntervals   |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayInvalidIntervals | gBondPortPmCur1DayInvalidIntervals |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr1DayTimeElapsed  | gBondPortPmCur1DayTimeElapsed      |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr1DayES           | gBondPortPmCur1DayIntervalES       |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr1DaySES          | gBondPortPmCur1DayIntervalSES      |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfCurr1DayUAS          | gBondPortPmCur1DayIntervalUAS      |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold1DayES      | gBondPortPmTcaProfileThresh1DayES  |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold1DaySES     | gBondPortPmTcaProfileThresh1DaySES |\n +--------------------------------+------------------------------------+\n
      | aGroupPerfThreshold1DayUAS     | gBondPortPmTcaProfileThresh1DayUAS |\n +--------------------------------+------------------------------------+\n
      | nGroupPerfTca1DayES            | gBondPmTca1DayESCrossing           |\n +--------------------------------+------------------------------------+\n
      | nGroupPerfTca1DaySES           | gBondPmTca1DaySESCrossing          |\n +--------------------------------+------------------------------------+\n
      | nGroupPerfTca1DayUAS           | gBondPmTca1DayUASCrossing          |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinIntervalNumber  | gBondPortPm15MinIntervalIndex      |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinIntervalValid   | gBondPortPm15MinIntervalValid      |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinIntervalES      | gBondPortPm15MinIntervalES         |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinIntervalSES     | gBondPortPm15MinIntervalSES        |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf15MinIntervalUAS     | gBondPortPm15MinIntervalUAS        |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayIntervalNumber   | gBondPortPm1DayIntervalIndex       |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayIntervalValid    | gBondPortPm1DayIntervalValid       |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayIntervalMoniSecs | gBondPortPm1DayIntervalMoniTime    |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayIntervalES       | gBondPortPm1DayIntervalES          |\n +--------------------------------+------------------------------------+\n
      | aGroupPerf1DayIntervalSES      | gBondPortPm1DayIntervalSES         |\n +--------------------------------+------------------------------------+\n
      +--------------------------------+------------------------------------+\n |
      aGroupPerf1DayIntervalUAS      | gBondPortPm1DayIntervalUAS         |\n +--------------------------------+------------------------------------+\n
      | oLine - Basic Package          |                                    |\n |
      (Mandatory)                    |                                    |\n +--------------------------------+------------------------------------+\n
      | aLineID                        | ifIndex (IF-MIB)                   |\n +--------------------------------+------------------------------------+\n
      | aLineType                      | ifType (IF-MIB)                    |\n +--------------------------------+------------------------------------+\n
      | aLineOperState                 | ifOperStatus (IF-MIB)              |\n +--------------------------------+------------------------------------+\n
      | aLineStatus                    | *dsl*CurrStatus (*DSL-LINE-MIB)    |\n +--------------------------------+------------------------------------+\n
      | aLineEnd                       | *dsl*Side (*DSL-LINE-MIB)          |\n +--------------------------------+------------------------------------+\n
      | aLineAdminState                | ifAdminStatus (IF-MIB)             |\n +--------------------------------+------------------------------------+\n
      | aLineRemoteDiscoveryCode       | gBondBceConfRemoteDiscoveryCode    |\n +--------------------------------+------------------------------------+\n
      | aLineUpDownEnable              | ifLinkUpDownTrapEnable (IF-MIB)    |\n +--------------------------------+------------------------------------+\n
      | nLineUp                        | LinkUp (IF-MIB)                    |\n +--------------------------------+------------------------------------+\n
      | nLineDown                      | LinkDown (IF-MIB)                  |\n +--------------------------------+------------------------------------+\n
      | oChannel - Basic Package       |                                    |\n |
      (Mandatory)                    |                                    |\n +--------------------------------+------------------------------------+\n
      | aChannelID                     | ifIndex (IF-MIB)                   |\n +--------------------------------+------------------------------------+\n
      | aChannelGroupID                |                                    |\n +--------------------------------+------------------------------------+\n
      | aChannelType                   | ifType (IF-MIB)                    |\n +--------------------------------+------------------------------------+\n
      | aChannelOperState              | ifOperStatus (IF-MIB)              |\n +--------------------------------+------------------------------------+\n
      | aChannelStatus                 | *dsl*CurrStatus (*DSL-LINE-MIB),   |\n |
      \                               | xdsl2ChStatus*Status               |\n |                                |
      (VDSL2-LINE-MIB)                   |\n +--------------------------------+------------------------------------+\n
      \                Table 2: Mapping of TR-159 Managed Objects\n"
    title: 5.3.  Mapping of Broadband Forum TR-159 Managed Objects
  title: 5.  MIB Structure
- contents:
  - "6.  xDSL Multi-Pair Bonding MIB Definitions\n   The GBOND-MIB module IMPORTS
    objects from SNMPv2-SMI [RFC2578],\n   SNMPv2-TC [RFC2579], SNMPv2-CONF [RFC2580],
    SNMP-FRAMEWORK-MIB\n   [RFC3411], IF-MIB [RFC2863], and HC-PerfHist-TC-MIB [RFC3705].\n
    \  The module has been structured as recommended by [RFC4181].\n"
  - "GBOND-MIB DEFINITIONS ::= BEGIN\n  IMPORTS\n    MODULE-IDENTITY,\n    OBJECT-TYPE,\n
    \   NOTIFICATION-TYPE,\n    mib-2,\n    Unsigned32,\n    Gauge32\n      FROM SNMPv2-SMI
    \          -- RFC 2578\n    TEXTUAL-CONVENTION,\n    TruthValue,\n    RowStatus,\n
    \   PhysAddress\n      FROM SNMPv2-TC            -- RFC 2579\n    MODULE-COMPLIANCE,\n
    \   OBJECT-GROUP,\n    NOTIFICATION-GROUP\n      FROM SNMPv2-CONF          --
    RFC 2580\n    SnmpAdminString\n      FROM SNMP-FRAMEWORK-MIB   -- RFC 3411\n    ifIndex\n
    \     FROM IF-MIB               -- RFC 2863\n    HCPerfCurrentCount,\n    HCPerfIntervalCount,\n
    \   HCPerfIntervalThreshold,\n    HCPerfValidIntervals,\n    HCPerfInvalidIntervals,\n
    \   HCPerfTimeElapsed,\n    HCPerfTotalCount\n      FROM  HC-PerfHist-TC-MIB  --
    RFC 3705\n    IANAgBondScheme,\n    IANAgBondSchemeList\n      FROM  IANA-GBOND-TC-MIB\n
    \   ;\n"
  - "------------------------------------------------------------------------\n  gBondMIB
    MODULE-IDENTITY\n    LAST-UPDATED \"201302200000Z\"  -- 20 February 2013\n    ORGANIZATION
    \"IETF ADSL MIB Working Group\"\n    CONTACT-INFO\n      \"WG charter:\n        http://datatracker.ietf.org/wg/adslmib/charter/\n
    \     Mailing Lists:\n        General Discussion: adslmib@ietf.org\n        To
    Subscribe: adslmib-request@ietf.org\n        In Body: subscribe your_email_address\n
    \      Chair: Menachem Dodge\n      Postal: ECI Telecom, Ltd.\n              30
    Hasivim St.\n              Petach-Tikva  4951169\n              Israel\n       Phone:
    +972-3-926-8421\n       EMail: menachemdodge1@gmail.com\n      Editor: Edward
    Beili\n      Postal: Actelis Networks, Inc.\n              25 Bazel St., P.O.B.
    10173\n              Petach-Tikva  49103\n              Israel\n       Phone:
    +972-3-924-3491\n       EMail: edward.beili@actelis.com\n      Editor: Moti Morgenstern\n
    \     Postal: ECI Telecom\n              30 Hasivim St.\n              Petach-Tikva
    \ 4951169\n              Israel\n       Phone: +972-3-926-6258\n       EMail:
    moti.morgenstern@ecitele.com\"\n    DESCRIPTION\n      \"The objects in this MIB
    module are used to manage the\n      multi-pair bonded xDSL interfaces, as defined
    in ITU-T\n      Recommendations G.998.1, G.998.2, and G.998.3.\n      This MIB
    module MUST be used in conjunction with a bonding\n      scheme-specific MIB module,
    that is, G9981-MIB, G9982-MIB,\n      or G9983-MIB.\n      The following references
    are used throughout this MIB module:\n      [G.998.1] refers to:\n        ITU-T
    Recommendation G.998.1: 'ATM-based multi-pair bonding',\n        January 2005.\n
    \     [G.998.2] refers to:\n        ITU-T Recommendation G.998.2: 'Ethernet-based
    multi-pair\n        bonding', January 2005.\n      [G.998.3] refers to:\n        ITU-T
    Recommendation G.998.3: 'Multi-pair bonding using\n        time-division inverse
    multiplexing', January 2005.\n      [TR-159] refers to:\n        Broadband Forum
    Technical Report: 'Management Framework for\n        xDSL Bonding', December 2008.\n
    \     Naming Conventions:\n        BCE   - Bonding Channel Entity\n        BTU
    \  - Bonding Terminating Unit\n        BTU-C - Bonding Terminating Unit, CO side\n
    \       BTU-R - Bonding Terminating Unit, Remote Terminal (CPE) side\n        CO
    \   - Central Office\n        CPE   - Customer Premises Equipment\n        GBS
    \  - Generic Bonding Sub-layer\n        PM    - Performance Monitoring\n        SNR
    \  - Signal to Noise Ratio\n        TCA   - Threshold Crossing Alert\n     Copyright
    (c) 2013 IETF Trust and the persons identified as\n     authors of the code.  All
    rights reserved.\n     Redistribution and use in source and binary forms, with
    or without\n     modification, is permitted pursuant to, and subject to the license\n
    \    terms contained in, the Simplified BSD License set forth in Section\n     4.c
    of the IETF Trust's Legal Provisions Relating to IETF Documents\n     (http://trustee.ietf.org/license-info).\"\n
    \   REVISION    \"201302200000Z\"  -- 20 February 2013\n    DESCRIPTION \"Initial
    version, published as RFC 6765.\"\n    ::= { mib-2 211 }\n   -- Sections of the
    module\n   -- Structured as recommended by RFC 4181, Appendix D\n   gBondObjects
    \    OBJECT IDENTIFIER ::= { gBondMIB 1 }\n   gBondConformance OBJECT IDENTIFIER
    ::= { gBondMIB 2 }\n   -- Groups in the module\n   gBondPort        OBJECT IDENTIFIER
    ::= { gBondObjects 1 }\n   gBondBce         OBJECT IDENTIFIER ::= { gBondObjects
    2 }\n   -- Textual Conventions\n   GBondPm1DayIntervalThreshold ::= TEXTUAL-CONVENTION\n
    \    DISPLAY-HINT \"d\"\n     STATUS      current\n     DESCRIPTION\n       \"This
    textual convention defines a range of values that may be\n       set in a fault
    threshold alarm control for a 1-day Performance\n       Monitoring interval.\n
    \      As the number of seconds in a 1-day interval numbers at most\n       86400,
    objects of this type may have a range of 0...86400,\n       where the value of
    0 disables the alarm.\"\n     SYNTAX      Unsigned32 (0..86400)\n   -- Port Notifications
    group\n   gBondPortNotifications OBJECT IDENTIFIER ::= { gBondPort 0 }\n   gBondLowUpRateCrossing
    NOTIFICATION-TYPE\n     OBJECTS {\n       -- ifIndex is not needed here, since
    we are under specific GBS\n       gBondPortStatUpDataRate,\n       gBondPortConfThreshLowUpRate\n
    \    }\n     STATUS      current\n     DESCRIPTION\n       \"This notification
    indicates that the G.Bond port's upstream\n       data rate has reached/dropped
    below or exceeded the low\n       upstream rate threshold, specified by\n       gBondPortConfThreshLowUpRate.\n
    \      This notification MAY be sent for the -O subtype ports\n       while the
    port is 'up', on the crossing event in both\n       directions: from normal (rate
    is above the threshold) to low\n       (rate equals the threshold or is below
    it) and from low to\n       normal.  This notification is not applicable to the
    -R\n       subtypes.\n       It is RECOMMENDED that a small debouncing period
    of 2.5 sec,\n       between the detection of the condition and notification,\n
    \      be implemented to prevent simultaneous LinkUp/LinkDown and\n       gBondLowUpRateCrossing
    notifications from being sent.\n       The adaptive nature of the G.Bond technology
    allows the port\n       to adapt itself to the changes in the copper environment;\n
    \      e.g., an impulse noise, alien crosstalk, or a\n       micro-interruption
    may temporarily drop one or more BCEs in\n       the aggregation group, causing
    a rate degradation of the\n       aggregated G.Bond link.  The dropped BCEs would
    then try to\n       re-initialize, possibly at a lower rate than before, adjusting\n
    \      the rate to provide the required target SNR margin.\n       Generation
    of this notification is controlled by the\n       gBondPortConfLowRateCrossingEnable
    object.\n       This object maps to the TR-159 notification\n       nGroupLowUpRateCrossing.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.24\"\n     ::= { gBondPortNotifications
    1 }\n   gBondLowDnRateCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       -- ifIndex
    is not needed here, since we are under specific GBS\n       gBondPortStatDnDataRate,\n
    \      gBondPortConfThreshLowDnRate\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"This notification indicates that the G.Bond port's downstream\n       data
    rate has reached/dropped below or exceeded the low\n       downstream rate threshold,
    specified by\n       gBondPortConfThreshLowDnRate.\n       This notification MAY
    be sent for the -O subtype ports\n       while the port is 'up', on the crossing
    event in both\n       directions: from normal (rate is above the threshold) to
    low\n       (rate equals the threshold or is below it) and from low to\n       normal.
    \ This notification is not applicable to the -R\n       subtypes.\n       It is
    RECOMMENDED that a small debouncing period of 2.5 sec,\n       between the detection
    of the condition and notification,\n       be implemented to prevent simultaneous
    LinkUp/LinkDown and\n       gBondLowDnRateCrossing notifications from being sent.\n
    \      The adaptive nature of the G.Bond technology allows the port\n       to
    adapt itself to the changes in the copper environment;\n       e.g., an impulse
    noise, alien crosstalk, or a\n       micro-interruption may temporarily drop one
    or more BCEs in\n       the aggregation group, causing a rate degradation of the\n
    \      aggregated G.Bond link.  The dropped BCEs would then try to\n       re-initialize,
    possibly at a lower rate than before,\n       adjusting the rate to provide the
    required target SNR margin.\n       Generation of this notification is controlled
    by the\n       gBondPortConfLowRateCrossingEnable object.\n       This object
    maps to the TR-159 notification\n       nGroupLowDownRateCrossing.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.25\"\n     ::= { gBondPortNotifications 2}\n
    \  gBondPmTca15MinESCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       -- ifIndex
    is not needed here, since we are under specific GBS\n       gBondPortPmCur15MinES,\n
    \      gBondPortPmTcaProfileThresh15MinES\n     }\n     STATUS      current\n
    \    DESCRIPTION\n       \"This notification indicates that the Errored Seconds
    threshold,\n       specified by gBondPortPmTcaProfileThresh15MinES, has been\n
    \      reached or exceeded for the GBS port.\n       Generation of this notification
    is controlled by the\n       gBondPortConfPmTcaEnable and\n       gBondPortPmTcaProfileThresh15MinES
    objects.\n       This object maps to the TR-159 notification\n       nGroupPerfTca15MinES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.42\"\n     ::= { gBondPortNotifications
    3}\n   gBondPmTca15MinSESCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       --
    ifIndex is not needed here, since we are under specific GBS\n       gBondPortPmCur15MinSES,\n
    \      gBondPortPmTcaProfileThresh15MinSES\n     }\n     STATUS      current\n
    \    DESCRIPTION\n       \"This notification indicates that the Severely Errored
    Seconds\n       threshold, specified by gBondPortPmTcaProfileThresh15MinSES,\n
    \      has been reached or exceeded for the GBS port.\n       Generation of this
    notification is controlled by the\n       gBondPortConfPmTcaEnable and\n       gBondPortPmTcaProfileThresh15MinSES
    objects.\n       This object maps to the TR-159 notification\n       nGroupPerfTca15MinSES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.43\"\n     ::= { gBondPortNotifications
    4}\n   gBondPmTca15MinUASCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       --
    ifIndex is not needed here, since we are under specific GBS\n       gBondPortPmCur15MinUAS,\n
    \      gBondPortPmTcaProfileThresh15MinUAS\n     }\n     STATUS      current\n
    \    DESCRIPTION\n       \"This notification indicates that the Unavailable Seconds\n
    \      threshold, specified by gBondPortPmTcaProfileThresh15MinUAS,\n       has
    been reached or exceeded for the GBS port.\n       Generation of this notification
    is controlled by the\n       gBondPortConfPmTcaEnable and\n       gBondPortPmTcaProfileThresh15MinUAS
    objects.\n       This object maps to the TR-159 notification\n       nGroupPerfTca15MinUAS.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.44\"\n     ::= { gBondPortNotifications
    5}\n   gBondPmTca1DayESCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       -- ifIndex
    is not needed here, since we are under specific GBS\n       gBondPortPmCur1DayES,\n
    \      gBondPortPmTcaProfileThresh1DayES\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"This notification indicates that the Errored Seconds threshold,\n       specified
    by gBondPortPmTcaProfileThresh1DayES, has been\n       reached or exceeded for
    the GBS port.\n       Generation of this notification is controlled by the\n       gBondPortConfPmTcaEnable
    and\n       gBondPortPmTcaProfileThresh1DayES objects.\n       This object maps
    to the TR-159 notification\n       nGroupPerfTca1DayES.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.54\"\n     ::= { gBondPortNotifications 6}\n   gBondPmTca1DaySESCrossing
    NOTIFICATION-TYPE\n     OBJECTS {\n       -- ifIndex is not needed here, since
    we are under specific GBS\n       gBondPortPmCur1DaySES,\n       gBondPortPmTcaProfileThresh1DaySES\n
    \    }\n     STATUS      current\n     DESCRIPTION\n       \"This notification
    indicates that the Severely Errored Seconds\n       threshold, specified by gBondPortPmTcaProfileThresh1DaySES,\n
    \      has been reached or exceeded for the GBS port.\n       Generation of this
    notification is controlled by the\n       gBondPortConfPmTcaEnable and\n       gBondPortPmTcaProfileThresh1DaySES
    objects.\n       This object maps to the TR-159 notification\n       nGroupPerfTca1DaySES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.55\"\n     ::= { gBondPortNotifications
    7}\n   gBondPmTca1DayUASCrossing NOTIFICATION-TYPE\n     OBJECTS {\n       --
    ifIndex is not needed here, since we are under specific GBS\n       gBondPortPmCur1DayUAS,\n
    \      gBondPortPmTcaProfileThresh1DayUAS\n     }\n     STATUS      current\n
    \    DESCRIPTION\n       \"This notification indicates that the Unavailable Seconds\n
    \      threshold, specified by gBondPortPmTcaProfileThresh1DayUAS,\n       has
    been reached or exceeded for the GBS port.\n       Generation of this notification
    is controlled by the\n       gBondPortConfPmTcaEnable and\n       gBondPortPmTcaProfileThresh1DayUAS
    objects.\n       This object maps to the TR-159 notification\n       nGroupPerfTca1DayUAS.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.56\"\n     ::= { gBondPortNotifications
    8}\n   -- G.Bond Port (GBS) group\n   gBondPortConfTable OBJECT-TYPE\n     SYNTAX
    \     SEQUENCE OF GBondPortConfEntry\n     MAX-ACCESS  not-accessible\n     STATUS
    \     current\n     DESCRIPTION\n       \"Table for configuration of G.Bond GBS
    ports.  Entries in this\n       table MUST be maintained in a persistent manner.\"\n
    \    ::= { gBondPort 1 }\n   gBondPortConfEntry OBJECT-TYPE\n     SYNTAX      GBondPortConfEntry\n
    \    MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"An entry in the G.Bond Port Configuration table.\n       Each entry represents
    a G.Bond port indexed by the ifIndex.\n       Note that a G.Bond GBS port runs
    on top of a single\n       or multiple BCE port(s), which are also indexed by
    the ifIndex.\"\n     INDEX  { ifIndex }\n     ::= { gBondPortConfTable 1 }\n   GBondPortConfEntry
    ::=\n     SEQUENCE {\n       gBondPortConfAdminScheme              IANAgBondScheme,\n
    \      gBondPortConfPeerAdminScheme          IANAgBondScheme,\n       gBondPortConfDiscoveryCode
    \           PhysAddress,\n       gBondPortConfTargetUpDataRate         Unsigned32,\n
    \      gBondPortConfTargetDnDataRate         Unsigned32,\n       gBondPortConfThreshLowUpRate
    \         Unsigned32,\n       gBondPortConfThreshLowDnRate          Unsigned32,\n
    \      gBondPortConfLowRateCrossingEnable    TruthValue,\n       gBondPortConfPmTcaConfProfile
    \        SnmpAdminString,\n       gBondPortConfPmTcaEnable              TruthValue\n
    \    }\n   gBondPortConfAdminScheme  OBJECT-TYPE\n     SYNTAX      IANAgBondScheme\n
    \    MAX-ACCESS  read-write\n     STATUS      current\n     DESCRIPTION\n       \"A
    desired bonding scheme for a G.Bond GBS port.\n       The following values instruct
    the port to use the corresponding\n       bonding scheme if supported:\n         none(0)
    \      - instructs the port not to use bonding\n                         (only
    on a single-BCE G.998.2 GBS)\n         g9981(1)      - instructs the port to use
    G.998.1 bonding\n         g9982(2)      - instructs the port to use G.998.2 bonding\n
    \        g9983(3)      - instructs the port to use G.998.3 bonding\n       Changing
    of the gBondPortConfAdminScheme object MUST be\n       performed when the link
    is administratively 'down', as indicated\n       by the ifAdminStatus object in
    the IF-MIB.\n       Attempts to change this object MUST be rejected (in the case
    of\n       SNMP, with the error inconsistentValue), if the link is 'up' or\n       initializing.
    \ Attempts to change this object to an unsupported\n       bonding scheme (see
    gBondPortCapSchemesSupported) SHALL be\n       rejected (in the case of SNMP,
    with the error wrongValue).\n       Setting this object to the value of 'none'
    must be rejected for\n       GBS ports with multiple BCEs (with the error inconsistentValue).\n
    \      This object maps to the TR-159 attribute aGroupAdminBondScheme.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.6; RFC 2863, IF-MIB, ifAdminStatus\"\n     ::=
    { gBondPortConfEntry 1 }\n   gBondPortConfPeerAdminScheme  OBJECT-TYPE\n     SYNTAX
    \     IANAgBondScheme\n     MAX-ACCESS  read-write\n     STATUS      current\n
    \    DESCRIPTION\n       \"A desired bonding scheme for a peer (link partner)
    G.Bond\n       port (GBS).\n       The following values instruct the peer port
    to use the\n       corresponding bonding scheme if supported:\n         none(0)
    \      - instructs the port not to use bonding\n                         (only
    on a single-BCE G.998.2 GBS)\n         g9981(1)      - instructs the port to use
    G.998.1 bonding\n         g9982(2)      - instructs the port to use G.998.2 bonding\n
    \        g9983(3)      - instructs the port to use G.998.3 bonding\n       Changing
    of this object MUST be performed when the link is\n       administratively 'down',
    as indicated by the ifAdminStatus\n       object in the IF-MIB.\n       Attempts
    to change this object MUST be rejected (in the case of\n       SNMP, with the
    error inconsistentValue), if the link is 'up' or\n       initializing.  Attempts
    to change this object to an unsupported\n       bonding scheme (see gBondPortCapPeerSchemesSupported)
    SHALL be\n       rejected (in the case of SNMP, with the error wrongValue).\n
    \      Setting this object to the value of 'none' must be rejected for\n       GBS
    ports with multiple BCEs (with the error inconsistentValue).\n       This object
    maps to the TR-159 attribute\n       aGroupPeerAdminBondScheme.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.7; RFC 2863, IF-MIB, ifAdminStatus\"\n     ::=
    { gBondPortConfEntry 2 }\n   gBondPortConfDiscoveryCode  OBJECT-TYPE\n     SYNTAX
    \     PhysAddress (SIZE (6))\n     MAX-ACCESS  read-write\n     STATUS      current\n
    \    DESCRIPTION\n       \"A discovery code of the G.Bond port (GBS).\n       A
    unique 6-octet-long code used by the Discovery function.\n       This object MUST
    be instantiated for the -O subtype GBS before\n       write operations on the
    gBondBceConfRemoteDiscoveryCode\n       (Set_if_Clear and Clear_if_Same) are performed
    by BCEs\n       associated with the GBS.\n       The initial value of this object
    for -R subtype ports after\n       reset is all zeroes.  For -R subtype ports,
    the value of this\n       object cannot be changed directly.  This value may be
    changed\n       as a result of a write operation on the\n       gBondBceConfRemoteDiscoveryCode
    object of a remote BCE of -O\n       subtype, connected to one of the local BCEs
    associated with\n       the GBS.\n       Discovery MUST be performed when the
    link is administratively\n       'down', as indicated by the ifAdminStatus object
    in the IF-MIB.\n       Attempts to change this object MUST be rejected (in the
    case of\n       SNMP, with the error inconsistentValue), if the link is 'up' or\n
    \      initializing.\n       This object maps to the TR-159 attribute\n       aGroupDiscoveryCode.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.20; [802.3], Sections 61.2.2.8.3,\n
    \      61.2.2.8.4, 45.2.6.6.1, 45.2.6.8, 61A.2;\n       RFC 2863, IF-MIB, ifAdminStatus\"\n
    \    ::= { gBondPortConfEntry 3 }\n   gBondPortConfTargetUpDataRate  OBJECT-TYPE\n
    \    SYNTAX      Unsigned32 (0|1..10000000)\n     UNITS       \"Kbps\"\n     MAX-ACCESS
    \ read-write\n     STATUS      current\n     DESCRIPTION\n       \"A desired G.Bond
    port data rate in the upstream direction,\n       in Kbps, to be achieved during
    initialization, under\n       restrictions placed upon the member BCEs by their
    respective\n       configuration settings.\n       This object represents a sum
    of individual BCE upstream data\n       rates, modified to compensate for fragmentation
    and\n       encapsulation overhead (e.g., for an Ethernet service, the\n       target
    data rate of 10 Mbps SHALL allow lossless transmission\n       of full-duplex
    10-Mbps Ethernet frame stream with minimal\n       inter-frame gap).\n       Note
    that the target upstream data rate may not be achieved\n       during initialization
    (e.g., due to unavailability of required\n       BCEs) or the initial bandwidth
    could deteriorate, so that the\n       actual upstream data rate (gBondPortStatUpDataRate)
    could be less\n       than gBondPortConfTargetUpDataRate.\n       The value is
    limited above by 10 Gbps, to accommodate very\n       high speed bonded xDSL interfaces
    (e.g., 32 x 100 Mbps).\n       The value between 1 and 10000000 indicates that
    the total\n       upstream data rate of the G.Bond port after initialization\n
    \      SHALL be equal to the target data rate or less, if the target\n       upstream
    data rate cannot be achieved under the restrictions\n       configured for BCEs.
    \ In cases where the copper environment\n       allows a higher upstream data
    rate to be achieved than that\n       specified by this object, the excess capability
    SHALL be\n       either converted to an additional SNR margin or reclaimed by\n
    \      minimizing transmit power.\n       The value of 0 means that the target
    data rate is not\n       fixed and SHALL be set to the maximum attainable rate
    during\n       initialization (best effort), under specified spectral\n       restrictions
    and with a desired SNR margin per BCE.\n       This object is read-write for the
    -O subtype G.Bond ports.\n       It is irrelevant for the -R subtypes -- attempts
    to read or\n       change this object for such ports MUST be rejected (in the
    case\n       of SNMP, with the error inconsistentValue).\n       Changing of the
    target upstream data rate MUST be performed\n       when the link is administratively
    'down', as indicated by the\n       ifAdminStatus object in the IF-MIB.\n       Attempts
    to change this object MUST be rejected (in the case of\n       SNMP, with the
    error inconsistentValue), if the link is 'up' or\n       initializing.\n       This
    object maps to the TR-159 attribute aGroupTargetUpRate.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.17; RFC 2863, IF-MIB, ifAdminStatus\"\n     ::= { gBondPortConfEntry
    4 }\n   gBondPortConfTargetDnDataRate  OBJECT-TYPE\n     SYNTAX      Unsigned32
    (0|1..10000000)\n     UNITS       \"Kbps\"\n     MAX-ACCESS  read-write\n     STATUS
    \     current\n     DESCRIPTION\n       \"A desired G.Bond port data rate in the
    downstream direction,\n       in Kbps, to be achieved during initialization, under\n
    \      restrictions placed upon the member BCEs by their respective\n       configuration
    settings.\n       This object represents a sum of individual BCE downstream data\n
    \      rates, modified to compensate for fragmentation and\n       encapsulation
    overhead (e.g., for an Ethernet service, the\n       target data rate of 10 Mbps
    SHALL allow lossless transmission\n       of full-duplex 10-Mbps Ethernet frame
    stream with minimal\n       inter-frame gap).\n       Note that the target downstream
    data rate may not be achieved\n       during initialization (e.g., due to unavailability
    of required\n       BCEs) or the initial bandwidth could deteriorate, so that
    the\n       actual downstream data rate (gBondPortStatDnDataRate) could be\n       less
    than gBondPortConfTargetDnDataRate.\n       The value is limited above by 10 Gbps,
    to accommodate very\n       high speed bonded xDSL interfaces (e.g., 32 x 100
    Mbps).\n       The value between 1 and 10000000 indicates that the total\n       downstream
    data rate of the G.Bond port after initialization\n       SHALL be equal to the
    target data rate or less, if the target\n       downstream data rate cannot be
    achieved under the restrictions\n       configured for BCEs.  In cases where the
    copper environment\n       allows a higher downstream data rate to be achieved
    than that\n       specified by this object, the excess capability SHALL be\n       either
    converted to an additional SNR margin or reclaimed by\n       minimizing transmit
    power.\n       The value of 0 means that the target data rate is not\n       fixed
    and SHALL be set to the maximum attainable rate during\n       initialization
    (best effort), under specified spectral\n       restrictions and with a desired
    SNR margin per BCE.\n       This object is read-write for the -O subtype G.Bond
    ports.\n       It is irrelevant for the -R subtypes -- attempts to read or\n       change
    this object for such ports MUST be rejected (in the case\n       of SNMP, with
    the error inconsistentValue).\n       Changing of the target downstream data rate
    MUST be performed\n       when the link is administratively 'down', as indicated
    by the\n       ifAdminStatus object in the IF-MIB.\n       Attempts to change
    this object MUST be rejected (in the case of\n       SNMP, with the error inconsistentValue),
    if the link is 'up' or\n       initializing.\n       This object maps to the TR-159
    attribute aGroupTargetDownRate.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.18; RFC 2863, IF-MIB, ifAdminStatus\"\n     ::= { gBondPortConfEntry 5 }\n
    \  gBondPortConfThreshLowUpRate  OBJECT-TYPE\n     SYNTAX      Unsigned32 (1..10000000)\n
    \    UNITS       \"Kbps\"\n     MAX-ACCESS  read-write\n     STATUS      current\n
    \    DESCRIPTION\n       \"This object configures the G.Bond port low upstream
    rate\n       crossing alarm threshold.  When the current value of\n       gBondPortStatUpDataRate
    for this port reaches/drops below or\n       exceeds this threshold, a gBondLowUpRateCrossing
    notification\n       MAY be generated if enabled by\n       gBondPortConfLowRateCrossingEnable.\n
    \      This object is read-write for the -O subtype G.Bond ports.\n       It is
    irrelevant for the -R subtypes -- attempts to read or\n       change this object
    for such ports MUST be rejected (in the case\n       of SNMP, with the error inconsistentValue).\n
    \      This object maps to the TR-159 attribute\n       aGroupthreshLowUpRate.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.21\"\n     ::= { gBondPortConfEntry
    6 }\n   gBondPortConfThreshLowDnRate  OBJECT-TYPE\n     SYNTAX      Unsigned32
    (1..10000000)\n     UNITS       \"Kbps\"\n     MAX-ACCESS  read-write\n     STATUS
    \     current\n     DESCRIPTION\n       \"This object configures the G.Bond port
    low downstream rate\n       crossing alarm threshold.  When the current value
    of\n       gBondPortStatDnDataRate for this port reaches/drops below or\n       exceeds
    this threshold, a gBondLowDnRateCrossing notification\n       MAY be generated
    if enabled by\n       gBondPortConfLowRateCrossingEnable.\n       This object
    is read-write for the -O subtype G.Bond ports.\n       It is irrelevant for the
    -R subtypes -- attempts to read or\n       change this object for such ports MUST
    be rejected (in the case\n       of SNMP, with the error inconsistentValue).\n
    \      This object maps to the TR-159 attribute\n       aGroupThreshLowDownRate.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.22\"\n     ::= { gBondPortConfEntry
    7 }\n   gBondPortConfLowRateCrossingEnable  OBJECT-TYPE\n     SYNTAX      TruthValue\n
    \    MAX-ACCESS  read-write\n     STATUS      current\n     DESCRIPTION\n       \"Indicates
    whether gBondLowUpRateCrossing and\n       gBondLowDnRateCrossing notifications
    should be generated\n       for this interface.\n       A value of true(1) indicates
    that the notifications are\n       enabled.  A value of false(2) indicates that
    the notifications\n       are disabled.\n       This object is read-write for
    the -O subtype G.Bond ports.\n       It is irrelevant for the -R subtypes -- attempts
    to read or\n       change this object for such ports MUST be rejected (in the
    case\n       of SNMP, with the error inconsistentValue).\n       This object maps
    to the TR-159 attribute\n       aGroupLowRateCrossingEnable.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.23\"\n     ::= { gBondPortConfEntry 8 }\n   gBondPortConfPmTcaConfProfile
    \ OBJECT-TYPE\n     SYNTAX      SnmpAdminString (SIZE (1..32))\n     MAX-ACCESS
    \ read-write\n     STATUS      current\n     DESCRIPTION\n       \"The value of
    this object is the index of the row in the GBS\n       Port Alarm Configuration
    Profile table for Performance Monitoring\n       Threshold Crossing Alerts --
    the gBondPortAlarmConfProfileTable,\n       which applies to this GBS port.\"\n
    \    DEFVAL  { \"DEFVAL\" }\n     ::= { gBondPortConfEntry 9 }\n   gBondPortConfPmTcaEnable
    \ OBJECT-TYPE\n     SYNTAX      TruthValue\n     MAX-ACCESS  read-write\n     STATUS
    \     current\n     DESCRIPTION\n       \"Indicates whether the gBondPerfTca*Crossing
    set of\n       notifications should be generated for this interface.\n       A
    value of true(1) indicates that the notifications are\n       enabled.  A value
    of false(2) indicates that the notifications\n       are disabled.\n       This
    object maps to the TR-159 attribute aGroupPerfTcaEnable.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.38\"\n     ::= { gBondPortConfEntry 10 }\n   gBondPortCapTable OBJECT-TYPE\n
    \    SYNTAX      SEQUENCE OF GBondPortCapEntry\n     MAX-ACCESS  not-accessible\n
    \    STATUS      current\n     DESCRIPTION\n       \"Table for capabilities of
    G.Bond ports.  Entries in this table\n       MUST be maintained in a persistent
    manner.\"\n     ::= { gBondPort 2 }\n   gBondPortCapEntry OBJECT-TYPE\n     SYNTAX
    \     GBondPortCapEntry\n     MAX-ACCESS  not-accessible\n     STATUS      current\n
    \    DESCRIPTION\n       \"An entry in the G.Bond Port Capability table.\n       Each
    entry represents a G.Bond port indexed by the ifIndex.\n       Note that a G.Bond
    GBS port runs on top of a single\n       or multiple BCE port(s), which are also
    indexed by the ifIndex.\"\n     INDEX  { ifIndex }\n     ::= { gBondPortCapTable
    1 }\n   GBondPortCapEntry ::=\n     SEQUENCE {\n       gBondPortCapSchemesSupported
    \         IANAgBondSchemeList,\n       gBondPortCapPeerSchemesSupported      IANAgBondSchemeList,\n
    \      gBondPortCapCapacity                  Unsigned32,\n       gBondPortCapPeerCapacity
    \             Unsigned32\n     }\n   gBondPortCapSchemesSupported          OBJECT-TYPE\n
    \    SYNTAX      IANAgBondSchemeList\n     MAX-ACCESS  read-only\n     STATUS
    \     current\n     DESCRIPTION\n       \"Bonding capability of the G.Bond port
    (GBS).  This is a\n       read-only bitmap of the possible bonding schemes supported
    by\n       the GBS.  The various bit positions are:\n         none(0)       -
    GBS is capable of bonding bypass on a\n                         single-BCE G.998.2
    GBS\n         g9981(1)      - GBS is capable of G.998.1 bonding\n         g9982(2)
    \     - GBS is capable of G.998.2 bonding\n         g9983(3)      - GBS is capable
    of G.998.3 bonding\n       Note that for ports supporting multiple bonding schemes,
    the\n       actual administrative scheme is set via gBondPortConfAdminScheme\n
    \      object.  The current operating bonding scheme is reflected in\n       the
    gBondPortStatOperScheme object.\n       This object maps to the TR-159 attribute\n
    \      aGroupBondSchemesSupported.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.2\"\n     ::= { gBondPortCapEntry 1 }\n   gBondPortCapPeerSchemesSupported
    \ OBJECT-TYPE\n     SYNTAX      IANAgBondSchemeList\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"Bonding capability of the
    peer G.Bond port (GBS).  This is a\n       read-only bitmap of the possible bonding
    schemes supported by\n       the link partner GBS.  The various bit positions
    are:\n         none(0)       - peer GBS does not support bonding, or\n                         the
    peer unit could not be reached, or\n                         peer GBS is capable
    of bonding bypass on a\n                         single-BCE G.998.2 GBS\n         g9981(1)
    \     - peer GBS is capable of G.998.1 bonding\n         g9982(2)      - peer
    GBS is capable of G.998.2 bonding\n         g9983(3)      - peer GBS is capable
    of G.998.3 bonding\n       Note that for ports supporting multiple bonding schemes,
    the\n       actual administrative scheme is set via the\n       gBondPortConfPeerAdminScheme
    object.  The current operating\n       bonding scheme is reflected in the gBondPortStatPeerOperScheme\n
    \      object.\n       This object maps to the TR-159 attribute\n       aGroupPeerBondSchemesSupported.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.3\"\n     ::= { gBondPortCapEntry
    2 }\n   gBondPortCapCapacity  OBJECT-TYPE\n     SYNTAX      Unsigned32 (1..32)\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"Number
    of BCEs that can be aggregated by the local GBS.\n       The number of BCEs currently
    assigned to a particular G.Bond\n       port (gBondPortStatNumBCEs) is never greater
    than\n       gBondPortCapCapacity.\n       This object maps to the TR-159 attribute
    aGroupCapacity.\"\n     REFERENCE\n       \"[TR-159], Section 5.5.1.12\"\n     ::=
    { gBondPortCapEntry 3 }\n   gBondPortCapPeerCapacity  OBJECT-TYPE\n     SYNTAX
    \     Unsigned32 (0|1..32)\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"Number of BCEs that can be aggregated by the peer GBS
    port.\n       A value of 0 is returned when peer Bonding capacity is unknown\n
    \      (peer cannot be reached).\n       This object maps to the TR-159 attribute
    aGroupPeerCapacity.\"\n     REFERENCE\n       \"[TR-159], Section 5.5.1.13\"\n
    \    ::= { gBondPortCapEntry 4 }\n   gBondPortStatTable OBJECT-TYPE\n     SYNTAX
    \     SEQUENCE OF GBondPortStatEntry\n     MAX-ACCESS  not-accessible\n     STATUS
    \     current\n     DESCRIPTION\n       \"This table provides overall status information
    of G.Bond\n       ports, complementing the generic status information from the\n
    \      ifTable of the IF-MIB.  Additional status information about\n       connected
    BCEs is available from the relevant line MIBs.\n       This table contains live
    data from the equipment.  As such,\n       it is NOT persistent.\"\n     ::= {
    gBondPort 3 }\n   gBondPortStatEntry OBJECT-TYPE\n     SYNTAX      GBondPortStatEntry\n
    \    MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"An entry in the G.Bond Port Status table.\n       Each entry represents
    a G.Bond port indexed by the ifIndex.\n       Note that a G.Bond GBS port runs
    on top of a single\n       or multiple BCE port(s), which are also indexed by
    the ifIndex.\"\n     INDEX  { ifIndex }\n     ::= { gBondPortStatTable 1 }\n   GBondPortStatEntry
    ::=\n     SEQUENCE {\n       gBondPortStatOperScheme               IANAgBondScheme,\n
    \      gBondPortStatPeerOperScheme           IANAgBondScheme,\n       gBondPortStatUpDataRate
    \              Gauge32,\n       gBondPortStatDnDataRate               Gauge32,\n
    \      gBondPortStatFltStatus                BITS,\n       gBondPortStatSide                     INTEGER,\n
    \      gBondPortStatNumBCEs                  Unsigned32\n     }\n   gBondPortStatOperScheme
    \ OBJECT-TYPE\n     SYNTAX      IANAgBondScheme\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"Current operating bonding
    scheme of a G.Bond port.\n       The possible values are:\n         none(0)       -
    bonding bypass on a single-BCE G.998.2 GBS\n         g9981(1)      - G.998.1 bonding\n
    \        g9982(2)      - G.998.2 bonding\n         g9983(3)      - G.998.3 bonding\n
    \      This object maps to the TR-159 attribute\n       aGroupOperBondScheme.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.4\"\n     ::= { gBondPortStatEntry
    1 }\n   gBondPortStatPeerOperScheme  OBJECT-TYPE\n     SYNTAX      IANAgBondScheme\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"Current
    operating bonding scheme of a G.Bond port link partner.\n       The possible values
    are:\n         unknown(0)    - peer cannot be reached due to the link state or\n
    \                        bonding bypass on a single-BCE G.998.2 GBS\n         g9981(1)
    \     - G.998.1 bonding\n         g9982(2)      - G.998.2 bonding\n         g9983(3)
    \     - G.998.3 bonding\n       This object maps to the TR-159 attribute\n       aGroupPeerOperBondScheme.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.5\"\n     ::= { gBondPortStatEntry
    2 }\n   gBondPortStatUpDataRate  OBJECT-TYPE\n     SYNTAX      Gauge32\n     UNITS
    \      \"bps\"\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n
    \      \"A current G.Bond port operational data rate in the upstream\n       direction,
    in bps.\n       This object represents an estimation of the sum of individual\n
    \      BCE upstream data rates, modified to compensate for\n       fragmentation
    and encapsulation overhead (e.g., for an\n       Ethernet service, the target
    data rate of 10 Mbps SHALL allow\n       lossless transmission of full-duplex
    10-Mbps Ethernet frame\n       stream with minimal inter-frame gap).\n       Note
    that for symmetrical interfaces, gBondPortStatUpDataRate ==\n       gBondPortStatDnDataRate
    == ifSpeed.\n       This object maps to the TR-159 attribute aGroupUpRate.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.15\"\n     ::= { gBondPortStatEntry
    3 }\n   gBondPortStatDnDataRate  OBJECT-TYPE\n     SYNTAX      Gauge32\n     UNITS
    \      \"bps\"\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n
    \      \"A current G.Bond port operational data rate in the downstream\n       direction,
    in bps.\n       This object represents an estimation of the sum of individual\n
    \      BCE downstream data rates, modified to compensate for\n       fragmentation
    and encapsulation overhead (e.g., for an\n       Ethernet service, the target
    data rate of 10 Mbps SHALL allow\n       lossless transmission of full-duplex
    10-Mbps Ethernet frame\n       stream with minimal inter-frame gap).\n       Note
    that for symmetrical interfaces, gBondPortStatUpDataRate ==\n       gBondPortStatDnDataRate
    == ifSpeed.\n       This object maps to the TR-159 attribute aGroupDownRate.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.16\"\n     ::= { gBondPortStatEntry
    4 }\n   gBondPortStatFltStatus  OBJECT-TYPE\n     SYNTAX      BITS {\n       noPeer(0),\n
    \      peerPowerLoss(1),\n       peerBondSchemeMismatch(2),\n       bceSubTypeMismatch(3),\n
    \      lowRate(4),\n       init(5),\n       ready(6)\n     }\n     MAX-ACCESS
    \ read-only\n     STATUS      current\n     DESCRIPTION\n       \"G.Bond (GBS)
    port fault status.  This is a bitmap of possible\n       conditions.  The various
    bit positions are:\n         noPeer                 - Peer GBS cannot be reached
    (e.g.,\n                                  no BCEs attached, all BCEs are\n                                  'down',
    etc.).\n         peerPowerLoss          - Peer GBS has indicated impending unit\n
    \                                 failure due to loss of local power\n                                  ('Dying
    Gasp').\n         peerBondSchemeMismatch - Operating bonding scheme of a peer\n
    \                                 GBS is different from the local one.\n         bceSubTypeMismatch
    \    - Local BCEs in the aggregation group\n                                  are
    not of the same sub-type, e.g.,\n                                  some BCEs in
    the local device are -O\n                                  while others are -R
    subtype.\n         lowRate                - gBondUpRate/gBondDnRate of the port\n
    \                                 has reached or dropped below\n                                  gBondPortConfThreshLowUpRate/\n
    \                                 gBondPortConfThreshLowDnRate.\n         init
    \                  - The link is initializing, as a result\n                                  of
    ifAdminStatus being set to 'up'\n                                  for a particular
    BCE or a GBS\n                                  to which the BCE is connected.\n
    \        ready                  - At least one BCE in the aggregation\n                                  group
    is detecting handshake tones.\n       This object is intended to supplement the
    ifOperStatus object\n       in the IF-MIB.\n       This object maps to the TR-159
    attribute aGroupStatus.\"\n     REFERENCE\n       \"[TR-159], Section 5.5.1.9;
    RFC 2863, IF-MIB, ifOperStatus\"\n     ::= { gBondPortStatEntry 5 }\n   gBondPortStatSide
    \ OBJECT-TYPE\n     SYNTAX      INTEGER {\n       subscriber(1),\n       office(2),\n
    \      unknown(3)\n     }\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"G.Bond port mode of operation (subtype).\n       The
    value of 'subscriber' indicates that the port is\n       designated as '-R' subtype
    (all BCEs assigned to this port are of\n       subtype '-R').\n       The value
    of 'office' indicates that the port is designated\n       as '-O' subtype (all
    BCEs assigned to this port are of\n       subtype '-O').\n       The value of
    'unknown' indicates that the port has no assigned\n       BCEs yet or that the
    assigned BCEs are not of the same side\n       (subTypeBCEMismatch).\n       This
    object maps to the TR-159 attribute aGroupEnd.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.11\"\n     ::= { gBondPortStatEntry 6 }\n   gBondPortStatNumBCEs
    \ OBJECT-TYPE\n     SYNTAX      Unsigned32 (0..32)\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"Number of BCEs that are currently
    aggregated by the local GBS\n       (assigned to the G.Bond port using the ifStackTable).\n
    \      This number is never greater than gBondPortCapCapacity.\n       This object
    SHALL be automatically incremented or decremented\n       when a BCE is added
    or deleted to/from the G.Bond port using\n       the ifStackTable.\n       This
    object maps to the TR-159 attribute aGroupNumChannels.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.14\"\n     ::= { gBondPortStatEntry 7 }\n   -- Performance Monitoring
    group\n   gBondPortPM   OBJECT IDENTIFIER ::= { gBondPort 4 }\n   gBondPortPmCurTable
    OBJECT-TYPE\n     SYNTAX      SEQUENCE OF GBondPortPmCurEntry\n     MAX-ACCESS
    \ not-accessible\n     STATUS      current\n     DESCRIPTION\n       \"This table
    contains current Performance Monitoring (PM)\n       information for a GBS port.
    \ This table contains live data from\n       the equipment and as such is NOT
    persistent.\"\n     ::= { gBondPortPM 1 }\n   gBondPortPmCurEntry OBJECT-TYPE\n
    \    SYNTAX      GBondPortPmCurEntry\n     MAX-ACCESS  not-accessible\n     STATUS
    \     current\n     DESCRIPTION\n       \"An entry in the G.Bond Port PM table.\n
    \      Each entry represents a G.Bond port indexed by the ifIndex.\n       Note
    that a G.Bond GBS port runs on top of a single\n       or multiple BCE port(s),
    which are also indexed by the ifIndex.\"\n     INDEX  { ifIndex }\n     ::= {
    gBondPortPmCurTable 1 }\n   GBondPortPmCurEntry ::=\n     SEQUENCE {\n       gBondPortPmCurES
    \                     HCPerfTotalCount,\n       gBondPortPmCurSES                     HCPerfTotalCount,\n
    \      gBondPortPmCurUAS                     HCPerfTotalCount,\n       gBondPortPmCur15MinValidIntervals
    \    HCPerfValidIntervals,\n       gBondPortPmCur15MinInvalidIntervals   HCPerfInvalidIntervals,\n
    \      gBondPortPmCur15MinTimeElapsed        HCPerfTimeElapsed,\n       gBondPortPmCur15MinES
    \                HCPerfCurrentCount,\n       gBondPortPmCur15MinSES                HCPerfCurrentCount,\n
    \      gBondPortPmCur15MinUAS                HCPerfCurrentCount,\n       gBondPortPmCur1DayValidIntervals
    \     Unsigned32,\n       gBondPortPmCur1DayInvalidIntervals    Unsigned32,\n
    \      gBondPortPmCur1DayTimeElapsed         HCPerfTimeElapsed,\n       gBondPortPmCur1DayES
    \                 HCPerfCurrentCount,\n       gBondPortPmCur1DaySES                 HCPerfCurrentCount,\n
    \      gBondPortPmCur1DayUAS                 HCPerfCurrentCount\n     }\n   gBondPortPmCurES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfTotalCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Errored Seconds (ES) on the GBS since the BTU was\n       last restarted.\n
    \      An Errored Second for a G.998.x interface is defined as a count\n       of
    1-second intervals during which one or more GBS errors are\n       declared.  The
    errors are specific for each bonding scheme, e.g.,\n         - lost cells for
    the ATM bonding\n         - lost or discarded (due to an error or a buffer overflow)\n
    \          fragments for the Ethernet bonding\n         - CRC-4, CRC-6, or CRC-8
    errors for the TDIM bonding\n       This object is inhibited during Unavailable
    Seconds (UAS).\n       This object maps to the TR-159 attribute aGroupPerfES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.29\"\n     ::= { gBondPortPmCurEntry
    1 }\n   gBondPortPmCurSES  OBJECT-TYPE\n     SYNTAX      HCPerfTotalCount\n     UNITS
    \      \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n
    \      \"A count of Severely Errored Seconds (SES) on the GBS\n       since the
    BTU was last restarted.\n       A Severely Errored Second for a G.998.x interface
    is defined as\n       a count of 1-second intervals during which GBS errors cause
    at\n       least 1% traffic loss of the nominal bonded link rate or at\n       least
    12 ms for the TDM traffic.  The exact definition is\n       specific for each
    bonding scheme, e.g.,\n         - 234 lost cells for the ATM bonding with 10-Mbps
    nominal link\n           rate\n         - 60 lost/discarded fragments for the
    Ethernet bonding with\n           10-Mbps nominal link rate and fixed 192-byte-long
    fragment\n           size\n         - 6 or more CRC-4 errors, one or more CRC-6
    errors, or one or\n           more CRC-8 errors for the TDM bonding\n       This
    object is inhibited during Unavailable Seconds (UAS).\n       This object maps
    to the TR-159 attribute aGroupPerfSES.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.30\"\n     ::= { gBondPortPmCurEntry 2 }\n   gBondPortPmCurUAS  OBJECT-TYPE\n
    \    SYNTAX      HCPerfTotalCount\n     UNITS       \"seconds\"\n     MAX-ACCESS
    \ read-only\n     STATUS      current\n     DESCRIPTION\n       \"A count of Unavailable
    Seconds (UAS) on the GBS since the BTU\n       was last restarted.\n       An
    Unavailable Second for a G.998.x interface is defined as a\n       count of 1-second
    intervals during which the bonded link is\n       unavailable.  The G.998.x link
    becomes unavailable at the onset\n       of 10 contiguous SESs.  The 10 SESs are
    included in the\n       unavailable time.  Once unavailable, the G.998.x line
    becomes\n       available at the onset of 10 contiguous seconds with no SESs.\n
    \      The 10 seconds with no SESs are excluded from the unavailable\n       time.\n
    \      This object maps to the TR-159 attribute aGroupPerfUAS.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.31\"\n     ::= { gBondPortPmCurEntry 3 }\n   gBondPortPmCur15MinValidIntervals
    \ OBJECT-TYPE\n     SYNTAX      HCPerfValidIntervals\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"A number of 15-minute intervals
    for which data was collected.\n       The value of this object will be 96 or the
    maximum number of\n       15-minute history intervals collected by the implementation,\n
    \      unless the measurement was (re)started recently, in which case\n       the
    value will be the number of complete 15-minute intervals\n       for which there
    are at least some data.\n       In certain cases, it is possible that some intervals
    are\n       unavailable.  In this case, this object reports the maximum\n       interval
    number for which data is available.\n       This object maps to the TR-159 attribute\n
    \      aGroupPerf15MinValidIntervals.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.32\"\n     ::= { gBondPortPmCurEntry 4 }\n   gBondPortPmCur15MinInvalidIntervals
    \ OBJECT-TYPE\n     SYNTAX      HCPerfInvalidIntervals\n     MAX-ACCESS  read-only\n
    \    STATUS      current\n     DESCRIPTION\n       \"A number of 15-minute intervals
    for which data was not always\n       available.  The value will typically be
    zero, except in cases\n       where the data for some intervals are not available.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerf15MinInvalidIntervals.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.33\"\n     ::= { gBondPortPmCurEntry
    5 }\n   gBondPortPmCur15MinTimeElapsed  OBJECT-TYPE\n     SYNTAX      HCPerfTimeElapsed\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of seconds that have elapsed since the beginning
    of the\n       current 15-minute performance interval.\n       This object maps
    to the TR-159 attribute\n       aGroupPerfCurr15MinTimeElapsed.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.34\"\n     ::= { gBondPortPmCurEntry 6 }\n   gBondPortPmCur15MinES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfCurrentCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Errored Seconds (ES) on the GBS in the current\n       15-minute performance
    interval.\n       This object maps to the TR-159 attribute aGroupPerfCurr15MinES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.35\"\n     ::= { gBondPortPmCurEntry
    7 }\n   gBondPortPmCur15MinSES  OBJECT-TYPE\n     SYNTAX      HCPerfCurrentCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Severely Errored Seconds (SES) on the GBS
    in the\n       current 15-minute performance interval.\n       This object maps
    to the TR-159 attribute aGroupPerfCurr15MinSES.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.36\"\n     ::= { gBondPortPmCurEntry 8 }\n   gBondPortPmCur15MinUAS
    \ OBJECT-TYPE\n     SYNTAX      HCPerfCurrentCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Unavailable Seconds (UAS) on the GBS in the current\n       15-minute
    performance interval.\n       This object maps to the TR-159 attribute aGroupPerfCurr15MinUAS.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.37\"\n     ::= { gBondPortPmCurEntry
    9 }\n   gBondPortPmCur1DayValidIntervals  OBJECT-TYPE\n     SYNTAX      Unsigned32
    (0..7)\n     UNITS       \"days\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A number of 1-day intervals for which data was collected.\n
    \      The value of this object will be 7 or the maximum number of\n       1-day
    history intervals collected by the implementation, unless\n       the measurement
    was (re)started recently, in which case the\n       value will be the number of
    complete 1-day intervals for which\n       there are at least some data.\n       In
    certain cases, it is possible that some intervals are\n       unavailable.  In
    this case, this object reports the maximum\n       interval number for which data
    is available.\n       This object maps to the TR-159 attribute\n       aGroupPerf1DayValidIntervals.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.45\"\n     ::= { gBondPortPmCurEntry
    10 }\n   gBondPortPmCur1DayInvalidIntervals  OBJECT-TYPE\n     SYNTAX      Unsigned32
    (0..7)\n     UNITS       \"days\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A number of 1-day intervals for which data was not
    always\n       available.  The value will typically be zero, except in cases\n
    \      where the data for some intervals are not available.\n       This object
    maps to the TR-159 attribute\n       aGroupPerf1DayInvalidIntervals.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.46\"\n     ::= { gBondPortPmCurEntry 11 }\n   gBondPortPmCur1DayTimeElapsed
    \ OBJECT-TYPE\n     SYNTAX      HCPerfTimeElapsed\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of seconds that have elapsed since the beginning of\n       the current
    1-day performance interval.\n       This object maps to the TR-159 attribute\n
    \      aGroupPerfCurr1DayTimeElapsed.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.47\"\n     ::= { gBondPortPmCurEntry 12 }\n   gBondPortPmCur1DayES  OBJECT-TYPE\n
    \    SYNTAX      HCPerfCurrentCount\n     UNITS       \"seconds\"\n     MAX-ACCESS
    \ read-only\n     STATUS      current\n     DESCRIPTION\n       \"A count of Errored
    Seconds (ES) on the GBS in the current 1-day\n       performance interval.\n       This
    object maps to the TR-159 attribute aGroupPerfCurr1DayES.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.48\"\n     ::= { gBondPortPmCurEntry 13 }\n   gBondPortPmCur1DaySES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfCurrentCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Severely Errored Seconds (SES) on the GBS in the\n       current 1-day
    performance interval.\n       This object maps to the TR-159 attribute aGroupPerfCurr1DaySES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.49\"\n     ::= { gBondPortPmCurEntry
    14 }\n   gBondPortPmCur1DayUAS  OBJECT-TYPE\n     SYNTAX      HCPerfCurrentCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Unavailable Seconds (UAS) on the GBS in
    the current\n       1-day performance interval.\n       This object maps to the
    TR-159 attribute aGroupPerfCurr1DayUAS.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.50\"\n     ::= { gBondPortPmCurEntry 15 }\n   -- PM history: 15-min
    buckets\n   gBondPortPm15MinTable OBJECT-TYPE\n     SYNTAX      SEQUENCE OF GBondPortPm15MinEntry\n
    \    MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"This table contains historical 15-minute buckets of Performance\n       Monitoring
    information for a GBS port (a row for each 15-minute\n       interval, up to 96
    intervals).\n       Entries in this table MUST be maintained in a persistent manner.\"\n
    \    ::= { gBondPortPM 2 }\n   gBondPortPm15MinEntry OBJECT-TYPE\n     SYNTAX
    \     GBondPortPm15MinEntry\n     MAX-ACCESS  not-accessible\n     STATUS      current\n
    \    DESCRIPTION\n       \"An entry in the G.Bond Port historical 15-minute PM
    table.\n       Each entry represents Performance Monitoring data for a GBS port,\n
    \      indexed by the ifIndex, collected during a particular 15-minute\n       interval,
    indexed by the gBondPortPm15MinIntervalIndex.\"\n     INDEX  { ifIndex, gBondPortPm15MinIntervalIndex
    }\n     ::= { gBondPortPm15MinTable 1 }\n   GBondPortPm15MinEntry ::=\n     SEQUENCE
    {\n       gBondPortPm15MinIntervalIndex         Unsigned32,\n       gBondPortPm15MinIntervalMoniTime
    \     HCPerfTimeElapsed,\n       gBondPortPm15MinIntervalES            HCPerfIntervalCount,\n
    \      gBondPortPm15MinIntervalSES           HCPerfIntervalCount,\n       gBondPortPm15MinIntervalUAS
    \          HCPerfIntervalCount,\n       gBondPortPm15MinIntervalValid         TruthValue\n
    \    }\n   gBondPortPm15MinIntervalIndex  OBJECT-TYPE\n     SYNTAX      Unsigned32
    (1..96)\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"Performance data interval number.  1 is the most recent\n       previous
    interval; interval 96 is 24 hours ago.\n       Intervals 2..96 are OPTIONAL.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerf15MinIntervalNumber.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.57\"\n     ::= { gBondPortPm15MinEntry
    1 }\n   gBondPortPm15MinIntervalMoniTime  OBJECT-TYPE\n     SYNTAX      HCPerfTimeElapsed\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of seconds over which the performance data
    was actually\n       monitored.  This value will be the same as the interval duration\n
    \      (900 seconds), except in a situation where performance data\n       could
    not be collected for any reason.\"\n     ::= { gBondPortPm15MinEntry 2 }\n   gBondPortPm15MinIntervalES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Errored Seconds (ES) on the GBS in the 15-minute\n       performance
    history interval.\n       This object maps to the TR-159 attribute\n       aGroupPerf15MinIntervalES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.59\"\n     ::= { gBondPortPm15MinEntry
    3 }\n   gBondPortPm15MinIntervalSES  OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Severely Errored Seconds (SES) on the GBS
    in the\n       15-minute performance history interval.\n       This object maps
    to the TR-159 attribute\n       aGroupPerf15MinIntervalSES.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.60\"\n     ::= { gBondPortPm15MinEntry 4 }\n
    \  gBondPortPm15MinIntervalUAS  OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Unavailable Seconds (UAS) on the GBS in
    the current\n       15-minute performance interval.\n       This object maps to
    the TR-159 attribute\n       aGroupPerf15MinIntervalUAS.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.61\"\n     ::= { gBondPortPm15MinEntry 5 }\n   gBondPortPm15MinIntervalValid
    \ OBJECT-TYPE\n     SYNTAX      TruthValue\n     MAX-ACCESS  read-only\n     STATUS
    \     current\n     DESCRIPTION\n       \"A read-only object indicating whether
    or not this history\n       bucket contains valid data.  A valid bucket is reported
    as\n       true(1) and an invalid bucket as false(2).\n       If this history
    bucket is invalid, the BTU-C MUST NOT produce\n       notifications based upon
    the value of the counters in this\n       bucket.\n       Note that an implementation
    may decide not to store invalid\n       history buckets in its database.  In such
    a case, this object\n       is not required, as only valid history buckets are
    available\n       while invalid history buckets are simply not in the database.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerf15MinIntervalValid.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.58\"\n     ::= { gBondPortPm15MinEntry
    6 }\n   -- PM history: 1-day buckets\n   gBondPortPm1DayTable OBJECT-TYPE\n     SYNTAX
    \     SEQUENCE OF GBondPortPm1DayEntry\n     MAX-ACCESS  not-accessible\n     STATUS
    \     current\n     DESCRIPTION\n       \"This table contains historical 1-day
    buckets of Performance\n       Monitoring information for a GBS port (a row for
    each 1-day\n       interval, up to 7 intervals).\n       Entries in this table
    MUST be maintained in a persistent manner.\"\n     ::= { gBondPortPM 3 }\n   gBondPortPm1DayEntry
    OBJECT-TYPE\n     SYNTAX      GBondPortPm1DayEntry\n     MAX-ACCESS  not-accessible\n
    \    STATUS      current\n     DESCRIPTION\n       \"An entry in the G.Bond Port
    historical 1-day PM table.\n       Each entry represents Performance Monitoring
    data for a GBS port,\n       indexed by the ifIndex, collected during a particular
    1-day\n       interval, indexed by the gBondPortPm1DayIntervalIndex.\"\n     INDEX
    \ { ifIndex, gBondPortPm1DayIntervalIndex }\n     ::= { gBondPortPm1DayTable 1
    }\n   GBondPortPm1DayEntry ::=\n     SEQUENCE {\n       gBondPortPm1DayIntervalIndex
    \         Unsigned32,\n       gBondPortPm1DayIntervalMoniTime       HCPerfTimeElapsed,\n
    \      gBondPortPm1DayIntervalES             HCPerfIntervalCount,\n       gBondPortPm1DayIntervalSES
    \           HCPerfIntervalCount,\n       gBondPortPm1DayIntervalUAS            HCPerfIntervalCount,\n
    \      gBondPortPm1DayIntervalValid          TruthValue\n     }\n   gBondPortPm1DayIntervalIndex
    \ OBJECT-TYPE\n     SYNTAX      Unsigned32 (1..7)\n     MAX-ACCESS  not-accessible\n
    \    STATUS      current\n     DESCRIPTION\n       \"Performance data interval
    number.  1 is the most recent\n       previous interval; interval 7 is 7 days
    ago.\n       Intervals 2..7 are OPTIONAL.\n       This object maps to the TR-159
    attribute\n       aGroupPerf1DayIntervalNumber.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.62\"\n     ::= { gBondPortPm1DayEntry 1 }\n   gBondPortPm1DayIntervalMoniTime
    \ OBJECT-TYPE\n     SYNTAX      HCPerfTimeElapsed\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of seconds over which the performance data was actually\n       monitored.
    \ This value will be the same as the interval duration\n       (86400 seconds),
    except in a situation where performance data\n       could not be collected for
    any reason.\n       This object maps to the TR-159 attribute\n       aGroupPerf1DayIntervalMoniSecs.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.64\"\n     ::= { gBondPortPm1DayEntry
    2 }\n   gBondPortPm1DayIntervalES  OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Errored Seconds (ES) on the GBS in the 1-day\n
    \      performance history interval.\n       This object maps to the TR-159 attribute\n
    \      aGroupPerf1DayIntervalES.\"\n     REFERENCE\n       \"[TR-159], Section
    5.5.1.65\"\n     ::= { gBondPortPm1DayEntry 3 }\n   gBondPortPm1DayIntervalSES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-only\n     STATUS      current\n     DESCRIPTION\n       \"A
    count of Severely Errored Seconds (SES) on the GBS in the\n       1-day performance
    history interval.\n       This object maps to the TR-159 attribute\n       aGroupPerf1DayIntervalSES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.66\"\n     ::= { gBondPortPm1DayEntry
    4 }\n   gBondPortPm1DayIntervalUAS  OBJECT-TYPE\n     SYNTAX      HCPerfIntervalCount\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-only\n     STATUS      current\n
    \    DESCRIPTION\n       \"A count of Unavailable Seconds (UAS) on the GBS in
    the current\n       1-day performance interval.\n       This object maps to the
    TR-159 attribute\n       aGroupPerf1DayIntervalUAS.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.67\"\n     ::= { gBondPortPm1DayEntry 5 }\n   gBondPortPm1DayIntervalValid
    \ OBJECT-TYPE\n     SYNTAX      TruthValue\n     MAX-ACCESS  read-only\n     STATUS
    \     current\n     DESCRIPTION\n       \"A read-only object indicating whether
    or not this history\n       bucket contains valid data.  A valid bucket is reported
    as\n       true(1) and an invalid bucket as false(2).\n       If this history
    bucket is invalid, the BTU-C MUST NOT produce\n       notifications based upon
    the value of the counters in this\n       bucket.\n       Note that an implementation
    may decide not to store invalid\n       history buckets in its database.  In such
    a case, this object\n       is not required, as only valid history buckets are
    available\n       while invalid history buckets are simply not in the database.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerf1DayIntervalValid.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.63\"\n     ::= { gBondPortPm1DayEntry
    6 }\n   -- Performance Monitoring TCA Configuration profile\n   gBondPortPmTcaProfileTable
    OBJECT-TYPE\n     SYNTAX      SEQUENCE OF GBondPortPmTcaProfileEntry\n     MAX-ACCESS
    \ not-accessible\n     STATUS      current\n     DESCRIPTION\n       \"This table
    supports definitions of Performance Monitoring (PM)\n       Threshold Crossing
    Alert (TCA) configuration profiles for GBS\n       ports.\n       Entries in this
    table MUST be maintained in a persistent manner.\"\n     ::= { gBondPortPM 4 }\n
    \  gBondPortPmTcaProfileEntry OBJECT-TYPE\n     SYNTAX      GBondPortPmTcaProfileEntry\n
    \    MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"An entry in the GBS PM TCA Configuration table.\n       Each entry corresponds
    to a single TCA configuration profile.\n       Each profile contains a set of
    parameters for setting alarm\n       thresholds for various performance attributes
    monitored at GBS\n       ports.  Profiles may be created/deleted using the row\n
    \      creation/deletion mechanism via\n       gBondPortPmTcaProfileRowStatus.
    \ If an active entry is\n       referenced via gBondPortConfPmTcaConfProfile,
    the entry MUST\n       remain active until all references are removed.\n       A
    default profile with an index of 'DEFVAL' will always exist,\n       and its parameters
    will be set to vendor-specific values\n       unless otherwise specified in this
    document.\"\n     INDEX  { gBondPortPmTcaProfileName }\n     ::= { gBondPortPmTcaProfileTable
    1 }\n   GBondPortPmTcaProfileEntry ::=\n     SEQUENCE {\n       gBondPortPmTcaProfileName
    \          SnmpAdminString,\n       gBondPortPmTcaProfileThresh15MinES  HCPerfIntervalThreshold,\n
    \      gBondPortPmTcaProfileThresh15MinSES HCPerfIntervalThreshold,\n       gBondPortPmTcaProfileThresh15MinUAS
    HCPerfIntervalThreshold,\n       gBondPortPmTcaProfileThresh1DayES   GBondPm1DayIntervalThreshold,\n
    \      gBondPortPmTcaProfileThresh1DaySES  GBondPm1DayIntervalThreshold,\n       gBondPortPmTcaProfileThresh1DayUAS
    \ GBondPm1DayIntervalThreshold,\n       gBondPortPmTcaProfileRowStatus      RowStatus\n
    \    }\n   gBondPortPmTcaProfileName  OBJECT-TYPE\n     SYNTAX      SnmpAdminString
    (SIZE (1..32))\n     MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"This object is a unique index (name) associated with this\n       GBS
    PM TCA profile.\"\n     ::= { gBondPortPmTcaProfileEntry 1 }\n   gBondPortPmTcaProfileThresh15MinES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfIntervalThreshold\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-create\n     STATUS      current\n     DESCRIPTION\n       \"A
    desired threshold for the number of Errored Seconds (ES)\n       within any given
    15-minute performance data collection interval.\n       If the number of ESs in
    a particular 15-minute collection\n       interval reaches or exceeds this value,
    a\n       gBondPmTca15MinESCrossing notification MAY be generated if\n       enabled
    by gBondPortConfPmTcaEnable.\n       At most one notification can be sent per
    interval.\n       Setting this attribute to zero (default) effectively disables\n
    \      the gBondPmTca15MinESCrossing notification.\n       This object maps to
    the TR-159 attribute\n       aGroupPerfThreshold15MinES.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.1.39\"\n     ::= { gBondPortPmTcaProfileEntry 2 }\n   gBondPortPmTcaProfileThresh15MinSES
    \ OBJECT-TYPE\n     SYNTAX      HCPerfIntervalThreshold\n     UNITS       \"seconds\"\n
    \    MAX-ACCESS  read-create\n     STATUS      current\n     DESCRIPTION\n       \"A
    desired threshold for the number of Severely Errored Seconds\n       (SES) within
    any given 15-minute performance data collection\n       interval.\n       If the
    number of SESs in a particular 15-minute collection\n       interval reaches or
    exceeds this value, a\n       gBondPmTca15MinSESCrossing notification MAY be generated
    if\n       enabled by gBondPortConfPmTcaEnable.\n       At most one notification
    can be sent per interval.\n       Setting this attribute to zero (default) effectively
    disables\n       the gBondPmTca15MinSESCrossing notification.\n       This object
    maps to the TR-159 attribute\n       aGroupPerfThreshold15MinSES.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.40\"\n     ::= { gBondPortPmTcaProfileEntry 3
    }\n   gBondPortPmTcaProfileThresh15MinUAS  OBJECT-TYPE\n     SYNTAX      HCPerfIntervalThreshold\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-create\n     STATUS      current\n
    \    DESCRIPTION\n       \"A desired threshold for the number of Unavailable Seconds
    (UAS)\n       within any given 15-minute performance data collection interval.\n
    \      If the number of UASs in a particular 15-minute collection\n       interval
    reaches or exceeds this value, a\n       gBondPmTca15MinUASCrossing notification
    MAY be generated if\n       enabled by gBondPortConfPmTcaEnable.\n       At most
    one notification can be sent per interval.\n       Setting this attribute to zero
    (default) effectively disables\n       the gBondPmTca15MinUASCrossing notification.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerfThreshold15MinUAS.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.41\"\n     ::= { gBondPortPmTcaProfileEntry
    4 }\n   gBondPortPmTcaProfileThresh1DayES  OBJECT-TYPE\n     SYNTAX      GBondPm1DayIntervalThreshold\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-create\n     STATUS      current\n
    \    DESCRIPTION\n       \"A desired threshold for the number of Errored Seconds
    (ES)\n       within any given 1-day performance data collection interval.\n       If
    the number of ESs in a particular 1-day collection interval\n       reaches or
    exceeds this value, a gBondPmTca1DayESCrossing\n       notification MAY be generated
    if enabled by\n       gBondPortConfPmTcaEnable.\n       At most one notification
    can be sent per interval.\n       Setting this attribute to zero (default) effectively
    disables\n       the gBondPmTca1DayESCrossing notification.\n       This object
    maps to the TR-159 attribute\n       aGroupPerfThreshold1DayES.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.51\"\n     ::= { gBondPortPmTcaProfileEntry 5
    }\n   gBondPortPmTcaProfileThresh1DaySES  OBJECT-TYPE\n     SYNTAX      GBondPm1DayIntervalThreshold\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-create\n     STATUS      current\n
    \    DESCRIPTION\n       \"A desired threshold for the number of Severely Errored
    Seconds\n       (SES) within any given 1-day performance data collection\n       interval.\n
    \      If the number of SESs in a particular 1-day collection interval\n       reaches
    or exceeds this value, a gBondPmTca1DaySESCrossing\n       notification MAY be
    generated if enabled by\n       gBondPortConfPmTcaEnable.\n       At most one
    notification can be sent per interval.\n       Setting this attribute to zero
    (default) effectively disables\n       the gBondPmTca1DaySESCrossing notification.\n
    \      This object maps to the TR-159 attribute\n       aGroupPerfThreshold1DaySES.\"\n
    \    REFERENCE\n       \"[TR-159], Section 5.5.1.52\"\n     ::= { gBondPortPmTcaProfileEntry
    6 }\n   gBondPortPmTcaProfileThresh1DayUAS  OBJECT-TYPE\n     SYNTAX      GBondPm1DayIntervalThreshold\n
    \    UNITS       \"seconds\"\n     MAX-ACCESS  read-create\n     STATUS      current\n
    \    DESCRIPTION\n       \"A desired threshold for the number of Unavailable Seconds
    (UAS)\n       within any given 1-day performance data collection interval.\n       If
    the number of UASs in a particular 1-day collection interval\n       reaches or
    exceeds this value, a gBondPmTca1DayUASCrossing\n       notification MAY be generated
    if enabled by\n       gBondPortConfPmTcaEnable.\n       At most one notification
    can be sent per interval.\n       Setting this attribute to zero (default) effectively
    disables\n       the gBondPmTca1DayUASCrossing notification.\n       This object
    maps to the TR-159 attribute\n       aGroupPerfThreshold1DayUAS.\"\n     REFERENCE\n
    \      \"[TR-159], Section 5.5.1.53\"\n     ::= { gBondPortPmTcaProfileEntry 7
    }\n   gBondPortPmTcaProfileRowStatus  OBJECT-TYPE\n     SYNTAX      RowStatus\n
    \    MAX-ACCESS  read-create\n     STATUS      current\n     DESCRIPTION\n       \"This
    object controls the creation, modification, or deletion\n       of the associated
    entry in the gBondPortPmTcaProfileTable\n       per the semantics of RowStatus.\n
    \      If an 'active' entry is referenced via\n       gBondPortConfPmTcaConfProfile
    instance(s), the entry MUST\n       remain 'active'.\n       An 'active' entry
    SHALL NOT be modified.  In order to modify an\n       existing entry, it MUST
    be taken out of service (by setting\n       this object to 'notInService'), modified,
    and set to 'active'\n       again.\"\n     ::= { gBondPortPmTcaProfileEntry 8
    }\n   -- The BCE group\n   gBondBceConfTable OBJECT-TYPE\n     SYNTAX      SEQUENCE
    OF GBondBceConfEntry\n     MAX-ACCESS  not-accessible\n     STATUS      current\n
    \    DESCRIPTION\n       \"Table for configuration of G.Bond common aspects for
    the\n       Bonding Channel Entity (BCE) ports (modems/channels).\n       Entries
    in this table MUST be maintained in a persistent\n       manner.\"\n     ::= {
    gBondBce 1 }\n   gBondBceConfEntry OBJECT-TYPE\n     SYNTAX      GBondBceConfEntry\n
    \    MAX-ACCESS  not-accessible\n     STATUS      current\n     DESCRIPTION\n
    \      \"An entry in the G.Bond BCE Configuration table.\n       Each entry represents
    common aspects of a G.Bond BCE port\n       indexed by the ifIndex.  Note that
    a G.Bond BCE port can be\n       stacked below a single GBS port, also indexed
    by the ifIndex,\n       possibly together with other BCE ports if bonding is enabled.\"\n
    \    INDEX  { ifIndex }\n     ::= { gBondBceConfTable 1 }\n   GBondBceConfEntry
    ::=\n     SEQUENCE {\n       gBondBceConfRemoteDiscoveryCode    PhysAddress\n
    \    }\n   gBondBceConfRemoteDiscoveryCode  OBJECT-TYPE\n     SYNTAX      PhysAddress
    (SIZE (0|6))\n     MAX-ACCESS  read-write\n     STATUS      current\n     DESCRIPTION\n
    \      \"A remote discovery code of the BCE port at the CO.\n       A 6-octet-long
    discovery code of the peer GBS connected via\n       the BCE.\n       Reading
    this object results in a Discovery Get operation.\n       Setting this object
    to all zeroes results in a Discovery\n       Clear_if_Same operation (the value
    of gBondPortConfDiscoveryCode\n       at the peer GBS SHALL be the same as gBondPortConfDiscoveryCode\n
    \      of the local GBS associated with the BCE for the operation to\n       succeed).\n
    \      Writing a non-zero value to this object results in a\n       Discovery
    Set_if_Clear operation.\n       A zero-length octet string SHALL be returned on
    an attempt to\n       read this object when bonding is not enabled.\n       This
    object is irrelevant in BCE-R port subtypes (CPE side):\n       in this case,
    a zero-length octet string SHALL be returned on\n       an attempt to read this
    object.  An attempt to change this\n       object MUST be rejected (in the case
    of SNMP, with the error\n       inconsistentValue).\n       Discovery MUST be
    performed when the link is 'down'.\n       Attempts to change this object MUST
    be rejected (in the case of\n       SNMP, with the error inconsistentValue), If
    the link is 'up' or\n       initializing.\n       This object maps to the TR-159
    attribute\n       aLineRemoteDiscoveryCode.\"\n     REFERENCE\n       \"[TR-159],
    Section 5.5.6.7\"\n     ::= { gBondBceConfEntry 1 }\n  --\n  -- Conformance Statements\n
    \ --\n   gBondGroups      OBJECT IDENTIFIER ::= { gBondConformance 1 }\n   gBondCompliances
    OBJECT IDENTIFIER ::= { gBondConformance 2 }\n   -- Object Groups\n   gBondBasicGroup
    OBJECT-GROUP\n     OBJECTS {\n       gBondPortStatOperScheme,\n       gBondPortStatUpDataRate,\n
    \      gBondPortStatDnDataRate,\n       gBondPortConfTargetUpDataRate,\n       gBondPortConfTargetDnDataRate,\n
    \      gBondPortCapSchemesSupported,\n       gBondPortCapCapacity,\n       gBondPortStatNumBCEs,\n
    \      gBondPortStatSide,\n       gBondPortStatFltStatus\n     }\n     STATUS
    \     current\n     DESCRIPTION\n       \"A collection of objects representing
    management information\n       common to all types of G.Bond ports.\"\n     ::=
    { gBondGroups 1 }\n   gBondDiscoveryGroup OBJECT-GROUP\n     OBJECTS {\n       gBondPortStatPeerOperScheme,\n
    \      gBondPortCapPeerSchemesSupported,\n       gBondPortCapPeerCapacity,\n       gBondPortConfDiscoveryCode,\n
    \      gBondBceConfRemoteDiscoveryCode\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"A collection of objects supporting OPTIONAL G.Bond discovery\n       in
    G.Bond ports.\"\n     ::= { gBondGroups 2 }\n   gBondMultiSchemeGroup OBJECT-GROUP\n
    \    OBJECTS {\n       gBondPortConfAdminScheme,\n       gBondPortConfPeerAdminScheme\n
    \    }\n     STATUS      current\n     DESCRIPTION\n       \"A collection of objects
    providing OPTIONAL management\n       information for G.Bond ports supporting
    multiple bonding\n       schemes.\"\n     ::= { gBondGroups 3 }\n   gBondTcaConfGroup
    OBJECT-GROUP\n     OBJECTS {\n       gBondPortConfThreshLowUpRate,\n       gBondPortConfThreshLowDnRate,\n
    \      gBondPortConfLowRateCrossingEnable\n     }\n     STATUS      current\n
    \    DESCRIPTION\n       \"A collection of objects required for configuration
    of alarm\n       thresholds and notifications in G.Bond ports.\"\n     ::= { gBondGroups
    4 }\n   gBondTcaNotificationGroup NOTIFICATION-GROUP\n     NOTIFICATIONS {\n       gBondLowUpRateCrossing,\n
    \      gBondLowDnRateCrossing\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"This group supports notifications of significant conditions\n       (non-PM
    threshold crossing alerts) associated with G.Bond ports.\"\n     ::= { gBondGroups
    5 }\n   gBondPmCurGroup OBJECT-GROUP\n     OBJECTS {\n       gBondPortPmCurES,\n
    \      gBondPortPmCurSES,\n       gBondPortPmCurUAS,\n       gBondPortPmCur15MinValidIntervals,\n
    \      gBondPortPmCur15MinInvalidIntervals,\n       gBondPortPmCur15MinTimeElapsed,\n
    \      gBondPortPmCur15MinES,\n       gBondPortPmCur15MinSES,\n       gBondPortPmCur15MinUAS,\n
    \      gBondPortPmCur1DayValidIntervals,\n       gBondPortPmCur1DayInvalidIntervals,\n
    \      gBondPortPmCur1DayTimeElapsed,\n       gBondPortPmCur1DayES,\n       gBondPortPmCur1DaySES,\n
    \      gBondPortPmCur1DayUAS\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"A collection of objects supporting OPTIONAL current Performance\n       Monitoring
    information for G.Bond ports.\"\n     ::= { gBondGroups 6 }\n   gBondPm15MinGroup
    OBJECT-GROUP\n     OBJECTS {\n       gBondPortPm15MinIntervalMoniTime,\n       gBondPortPm15MinIntervalES,\n
    \      gBondPortPm15MinIntervalSES,\n       gBondPortPm15MinIntervalUAS,\n       gBondPortPm15MinIntervalValid\n
    \    }\n     STATUS      current\n     DESCRIPTION\n       \"A collection of objects
    supporting OPTIONAL historical\n       Performance Monitoring information for
    G.Bond ports, during\n       previous 15-minute intervals.\"\n     ::= { gBondGroups
    7 }\n   gBondPm1DayGroup OBJECT-GROUP\n     OBJECTS {\n       gBondPortPm1DayIntervalMoniTime,\n
    \      gBondPortPm1DayIntervalES,\n       gBondPortPm1DayIntervalSES,\n       gBondPortPm1DayIntervalUAS,\n
    \      gBondPortPm1DayIntervalValid\n     }\n     STATUS      current\n     DESCRIPTION\n
    \      \"A collection of objects supporting OPTIONAL historical\n       Performance
    Monitoring information for G.Bond ports, during\n       previous 1-day intervals.\"\n
    \    ::= { gBondGroups 8 }\n   gBondPmTcaConfGroup OBJECT-GROUP\n     OBJECTS
    {\n       gBondPortConfPmTcaConfProfile,\n       gBondPortConfPmTcaEnable,\n       gBondPortPmTcaProfileThresh15MinES,\n
    \      gBondPortPmTcaProfileThresh15MinSES,\n       gBondPortPmTcaProfileThresh15MinUAS,\n
    \      gBondPortPmTcaProfileThresh1DayES,\n       gBondPortPmTcaProfileThresh1DaySES,\n
    \      gBondPortPmTcaProfileThresh1DayUAS,\n       gBondPortPmTcaProfileRowStatus\n
    \    }\n     STATUS      current\n     DESCRIPTION\n       \"A collection of objects
    required for configuration of\n       Performance Monitoring Threshold Crossing
    Alert notifications\n       in G.Bond ports.\"\n     ::= { gBondGroups 9 }\n   gBondPmTcaNotificationGroup
    NOTIFICATION-GROUP\n     NOTIFICATIONS {\n       gBondPmTca15MinESCrossing,\n
    \      gBondPmTca15MinSESCrossing,\n       gBondPmTca15MinUASCrossing,\n       gBondPmTca1DayESCrossing,\n
    \      gBondPmTca1DaySESCrossing,\n       gBondPmTca1DayUASCrossing\n     }\n
    \    STATUS      current\n     DESCRIPTION\n       \"This group supports notifications
    of Performance Monitoring\n       Threshold Crossing Alerts associated with G.Bond
    ports.\"\n     ::= { gBondGroups 10 }\n  -- Compliance Statements\n   gBondCompliance
    MODULE-COMPLIANCE\n     STATUS      current\n     DESCRIPTION\n       \"The compliance
    statement for G.Bond interfaces.\n       Compliance with the following external
    compliance statements\n       is REQUIRED:\n       MIB Module             Compliance
    Statement\n       ----------             --------------------\n       IF-MIB                 ifCompliance3\n
    \      Compliance with the following external compliance statements\n       is
    OPTIONAL for implementations supporting bonding with\n       flexible cross-connect
    between the GBS and BCE ports:\n       MIB Module             Compliance Statement\n
    \      ----------             --------------------\n       IF-INVERTED-STACK-MIB
    \ ifInvCompliance\n       IF-CAP-STACK-MIB       ifCapStackCompliance\"\n     MODULE
    \ -- this module\n       MANDATORY-GROUPS {\n         gBondBasicGroup,\n         gBondTcaConfGroup,\n
    \        gBondTcaNotificationGroup\n       }\n       GROUP       gBondDiscoveryGroup\n
    \      DESCRIPTION\n         \"Support for this group is only required for implementations\n
    \        supporting the G.Bond Discovery function.\"\n       GROUP       gBondMultiSchemeGroup\n
    \      DESCRIPTION\n         \"Support for this group is only required for implementations\n
    \        supporting multiple bonding schemes.\"\n       GROUP       gBondPmCurGroup\n
    \      DESCRIPTION\n         \"Support for this group is only required for implementations\n
    \        supporting Performance Monitoring.\"\n       GROUP       gBondPm15MinGroup\n
    \      DESCRIPTION\n         \"Support for this group is only required for implementations\n
    \        supporting 15-minute historical Performance Monitoring.\"\n       GROUP
    \      gBondPm1DayGroup\n       DESCRIPTION\n         \"Support for this group
    is only required for implementations\n         supporting 1-day historical Performance
    Monitoring.\"\n       GROUP       gBondPmTcaConfGroup\n       DESCRIPTION\n         \"Support
    for this group is only required for implementations\n         supporting Performance
    Monitoring Threshold Crossing Alert\n         notifications.\"\n       GROUP       gBondPmTcaNotificationGroup\n
    \      DESCRIPTION\n         \"Support for this group is only required for implementations\n
    \        supporting Performance Monitoring Threshold Crossing Alert\n         notifications.\"\n
    \      OBJECT      gBondPortCapSchemesSupported\n       SYNTAX      IANAgBondSchemeList\n
    \      DESCRIPTION\n         \"Support for all bonding scheme types is not required.\n
    \        However, at least one value SHALL be supported.\"\n       OBJECT      gBondPortCapPeerSchemesSupported\n
    \      SYNTAX      IANAgBondSchemeList\n       DESCRIPTION\n         \"Support
    for all bonding scheme types is not required.\n         However, at least one
    value SHALL be supported.\"\n     ::= { gBondCompliances 1 }\n"
  - 'END

    '
  title: 6.  xDSL Multi-Pair Bonding MIB Definitions
- contents:
  - "7.  IANA-Maintained G.Bond TC Definitions\n   The IANA-GBOND-TC-MIB module IMPORTS
    objects from SNMPv2-SMI\n   [RFC2578] and SNMPv2-TC [RFC2579].\n"
  - "IANA-GBOND-TC-MIB DEFINITIONS ::= BEGIN\n  IMPORTS\n    MODULE-IDENTITY,\n    mib-2\n
    \     FROM SNMPv2-SMI\n    TEXTUAL-CONVENTION\n      FROM SNMPv2-TC\n    ;\n"
  - "------------------------------------------------------------------------\n  ianaGBondTcMIB
    MODULE-IDENTITY\n    LAST-UPDATED \"201302200000Z\"  -- 20 February 2013\n    ORGANIZATION
    \"IANA\"\n    CONTACT-INFO \"        Internet Assigned Numbers Authority\n                  Postal:
    ICANN\n                          12025 Waterfront Drive, Suite 300\n                          Los
    Angeles, CA 90094-2536\n                     Tel: +1-310-301-5800\n                   EMail:
    iana@iana.org\"\n    DESCRIPTION\n      \"This MIB module defines IANAgBondScheme
    and IANAgBondSchemeList\n      TEXTUAL-CONVENTIONs, specifying enumerated values
    of the\n      gBondPortConfAdminScheme, gBondPortConfPeerAdminScheme,\n      gBondPortStatOperScheme,
    gBondPortStatPeerOperScheme,\n      gBondPortCapSchemesSupported, and gBondPortCapPeerSchemesSupported\n
    \     objects, respectively, as defined in the GBOND-MIB.\n      It is intended
    that each new bonding scheme defined by the\n      ITU-T Q4/SG15 working group
    and approved for publication in a\n      revision of the ITU-T G.998 specification
    will be added to this\n      MIB module, provided that it is suitable for being
    managed by the\n      base objects in the GBOND-MIB.  An Expert Review, as defined
    in\n      RFC 5226, is REQUIRED for such additions.\n      The following references
    are used throughout this MIB module:\n      [G.998.1] refers to:\n        ITU-T
    Recommendation G.998.1: 'ATM-based multi-pair bonding',\n        January 2005.\n
    \     [G.998.2] refers to:\n        ITU-T Recommendation G.998.2: 'Ethernet-based
    multi-pair\n        bonding', January 2005.\n      [G.998.3] refers to:\n        ITU-T
    Recommendation G.998.3: 'Multi-pair bonding using\n        time-division inverse
    multiplexing', January 2005.\n      Naming Conventions:\n        BCE   - Bonding
    Channel Entity\n        GBS   - Generic Bonding Sub-layer\n      These references
    should be updated as appropriate when a new\n      bonding scheme is added to
    this MIB module.\n      Copyright (c) 2013 IETF Trust and the persons identified
    as\n      authors of the code.  All rights reserved.\n      Redistribution and
    use in source and binary forms, with or without\n      modification, is permitted
    pursuant to, and subject to the license\n      terms contained in, the Simplified
    BSD License set forth in\n      Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF\n      Documents (http://trustee.ietf.org/license-info).\"\n
    \   REVISION    \"201302200000Z\"  -- 20 February 2013\n    DESCRIPTION \"Initial
    version, published as RFC 6765.\"\n    ::= { mib-2 215 }\n   -- Textual Conventions\n
    \  IANAgBondSchemeList ::= TEXTUAL-CONVENTION\n     STATUS      current\n     DESCRIPTION\n
    \      \"This textual convention defines a bitmap of possible ITU-T\n       G.998
    (G.Bond) bonding schemes.  Currently, the following values\n       are defined
    for the corresponding bonding schemes:\n         g9981(1) - G.998.1 (G.Bond/ATM;
    see the G9981-MIB)\n         g9982(2) - G.998.2 (G.Bond/Ethernet; see the G9982-MIB)\n
    \        g9983(3) - G.998.3 (G.Bond/TDIM; see the G9983-MIB)\n       An additional
    value of none(0) can be returned as a result\n       of a GET operation when a
    value of the object cannot be\n       determined (for example, a peer GBS cannot
    be reached), the port\n       does not support any kind of bonding, or when a
    single-BCE\n       G.998.2 GBS supports bonding (frame fragmentation/reassembly)\n
    \      bypass.\"\n     SYNTAX      BITS {\n       none(0),\n       g9981(1),\n
    \      g9982(2),\n       g9983(3)\n     }\n   IANAgBondScheme ::= TEXTUAL-CONVENTION\n
    \    STATUS      current\n     DESCRIPTION\n       \"This textual convention defines
    ITU-T G.998 bonding scheme\n       values.  Possible values are:\n         none(0)
    \   - no bonding (e.g., on a single-BCE G.998.2 GBS)\n                      or
    unknown\n         g9981(1)   - G.998.1 (G.Bond/ATM)\n         g9982(2)   - G.998.2
    (G.Bond/Ethernet)\n         g9983(3)   - G.998.3 (G.Bond/TDIM)\"\n     SYNTAX
    \     INTEGER {\n       none(0),\n       g9981(1),\n       g9982(2),\n       g9983(3)\n
    \    }\n"
  - 'END

    '
  title: 7.  IANA-Maintained G.Bond TC Definitions
- contents:
  - "8.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write and/or read-create.
    \ Such\n   objects may be considered sensitive or vulnerable in some network\n
    \  environments.  The support for SET operations in a non-secure\n   environment
    without proper protection can have a negative effect on\n   network operations.
    \ These are the tables and objects and their\n   sensitivity/vulnerability:\n
    \  o  Changing of the gBondPortConfAdminScheme object may lead to a\n      potential
    locking of the link, if the peer device does not support\n      the desired bonding
    scheme.\n   o  Changing of the gBondPortConfDiscoveryCode object, before the\n
    \     discovery operation, may lead to a wrongful discovery -- for\n      example,
    when two CO ports are connected to the same multi-channel\n      RT port, while
    both CO ports have the same discovery register\n      value.\n   o  Changing of
    the target upstream/downstream data rate via\n      gBondPortConfTargetUpDataRate/gBondPortConfTargetDnDataRate
    may\n      lead to anything from degradation of link quality and data rate to\n
    \     a complete link initialization failure, as the ability of a G.Bond\n      port
    to support a particular configuration depends on the copper\n      environment.\n
    \  o  Activation of a specific line/channel may cause a severe\n      degradation
    of service for another G.Bond port, whose channel(s)\n      may be affected by
    the cross-talk from the newly activated\n      channel.\n   o  Removal of a channel
    from an operationally 'up' G.Bond port,\n      aggregating several channels, may
    cause degradation of the port's\n      data rate.\n   Some of the readable objects
    in this MIB module (i.e., those with\n   MAX-ACCESS other than not-accessible)
    may be considered sensitive or\n   vulnerable in some network environments since,
    collectively, they\n   provide information about the performance of network interfaces
    and\n   can reveal some aspects of their configuration.\n   In particular, since
    a bonded xDSL port can be comprised of multiple\n   Unshielded Twisted Pair (UTP)
    voice-grade copper, located in the same\n   bundle with other pairs belonging
    to another operator/customer, it is\n   theoretically possible to eavesdrop on
    a G.Bond transmission, simply\n   by \"listening\" to cross-talk from the bonded
    pairs, especially if the\n   operating parameters of the G.Bond link in question
    are known.\n   It is thus important to control even GET and/or NOTIFY access to\n
    \  these objects and possibly to even encrypt the values of these\n   objects
    when sending them over the network via SNMP.  These are the\n   tables and objects
    and their sensitivity/vulnerability:\n   o  gBondPortStatTable - objects in this
    table provide status\n      information for the G.Bond port, which may aid in
    identification\n      of the pairs belonging to the bonded port and eavesdropping
    on the\n      traffic over that port.\n   SNMP versions prior to SNMPv3 did not
    include adequate security.\n   Even if the network itself is secure (for example
    by using IPsec),\n   there is no control as to who on the secure network is allowed
    to\n   access and GET/SET (read/change/create/delete) the objects in this\n   MIB
    module.\n   Implementations SHOULD provide the security features described by
    the\n   SNMPv3 framework (see [RFC3410]), and implementations claiming\n   compliance
    to the SNMPv3 standard MUST include full support for\n   authentication and privacy
    via the User-based Security Model (USM)\n   [RFC3414] with the AES cipher algorithm
    [RFC3826].  Implementations\n   MAY also provide support for the Transport Security
    Model (TSM)\n   [RFC5591] in combination with a secure transport such as SSH\n
    \  [RFC5592] or TLS/DTLS [RFC6353].\n   Further, deployment of SNMP versions prior
    to SNMPv3 is NOT\n   RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3
    and to\n   enable cryptographic security.  It is then a customer/operator\n   responsibility
    to ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA Considerations\n   Three new values of IANAifType -- g9981(263), g9982(264),
    and\n   g9983(265) -- have been allocated by IANA <http://www.iana.org/> in\n
    \  the IANAifType-MIB module [IANAifType-MIB].\n   An object identifier for gBondMIB
    MODULE-IDENTITY has been allocated\n   by IANA in the MIB-2 transmission sub-tree
    (211).\n   This document defines the first version of the IANA-maintained IANA-\n
    \  GBOND-TC-MIB module.  It is intended that each new G.998 bonding\n   scheme
    defined by the ITU-T Q4/SG15 working group and approved for\n   publication in
    a revision of ITU-T G.998.x will be added to the IANA-\n   maintained MIB module,
    provided that it is suitable for being managed\n   by the base objects in the
    GBOND-MIB module.  An object identifier\n   for ianaGBondTcMIB MODULE-IDENTITY
    has been allocated by IANA in the\n   MIB-2 transmission sub-tree (215).\n   For
    each new bonding scheme added, a short description of the bonding\n   protocol
    and, wherever possible, a reference to a publicly available\n   specification
    SHOULD be specified.  An Expert Review, as defined in\n   [RFC5226], is REQUIRED
    for each modification.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Acknowledgments\n   This document was produced by the [ADSLMIB] working
    group.\n   Special thanks to Dan Romascanu for his meticulous review of this\n
    \  text.\n"
  title: 10.  Acknowledgments
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\",
      STD 58, RFC 2578, April 1999.\n   [RFC2579]  McCloghrie, K., Ed., Perkins, D.,
      Ed., and J.\n              Schoenwaelder, Ed., \"Textual Conventions for SMIv2\",\n
      \             STD 58, RFC 2579, April 1999.\n   [RFC2580]  McCloghrie, K., Perkins,
      D., and J. Schoenwaelder,\n              \"Conformance Statements for SMIv2\",
      STD 58, RFC 2580,\n              April 1999.\n   [RFC2863]  McCloghrie, K. and
      F. Kastenholz, \"The Interfaces Group\n              MIB\", RFC 2863, June 2000.\n
      \  [RFC3411]  Harrington, D., Presuhn, R., and B. Wijnen, \"An\n              Architecture
      for Describing Simple Network Management\n              Protocol (SNMP) Management
      Frameworks\", STD 62, RFC 3411,\n              December 2002.\n   [RFC3414]
      \ Blumenthal, U. and B. Wijnen, \"User-based Security Model\n              (USM)
      for version 3 of the Simple Network Management\n              Protocol (SNMPv3)\",
      STD 62, RFC 3414, December 2002.\n   [RFC3705]  Ray, B. and R. Abbi, \"High
      Capacity Textual Conventions\n              for MIB Modules Using Performance
      History Based on 15\n              Minute Intervals\", RFC 3705, February 2004.\n
      \  [RFC3826]  Blumenthal, U., Maino, F., and K. McCloghrie, \"The\n              Advanced
      Encryption Standard (AES) Cipher Algorithm in the\n              SNMP User-based
      Security Model\", RFC 3826, June 2004.\n   [RFC5226]  Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an\n              IANA Considerations Section in RFCs\",
      BCP 26, RFC 5226,\n              May 2008.\n   [RFC5591]  Harrington, D. and
      W. Hardaker, \"Transport Security Model\n              for the Simple Network
      Management Protocol (SNMP)\",\n              RFC 5591, June 2009.\n   [RFC5592]
      \ Harrington, D., Salowey, J., and W. Hardaker, \"Secure\n              Shell
      Transport Model for the Simple Network Management\n              Protocol (SNMP)\",
      RFC 5592, June 2009.\n   [RFC6353]  Hardaker, W., \"Transport Layer Security
      (TLS) Transport\n              Model for the Simple Network Management Protocol
      (SNMP)\",\n              RFC 6353, July 2011.\n   [TR-159]   Beili, E. and M.
      Morgenstern, \"Management Framework for\n              xDSL Bonding\", Broadband
      Forum Technical Report TR-159,\n              December 2008, <http://www.broadband-forum.org/technical/\n
      \             download/TR-159.pdf>.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [802.3]    IEEE, \"IEEE Standard for Information
      technology -\n              Telecommunications and information exchange between\n
      \             systems - Local and metropolitan area networks - Specific\n              requirements
      - Part 3: Carrier Sense Multiple Access with\n              Collision Detection
      (CSMA/CD) Access Method and Physical\n              Layer Specifications\",
      IEEE Std 802.3-2005, December 2005.\n   [ADSLMIB]  IETF, \"ADSL MIB (adslmib)
      Charter\",\n              <http://datatracker.ietf.org/wg/adslmib/charter/>.\n
      \  [AF-PHY-0086]\n              ATM Forum, \"Inverse Multiplexing for ATM (IMA)\n
      \             Specification Version 1.1\", ATM Forum specification af-\n              phy-0086.001,
      March 1999, <http://www.broadband-forum.org/\n              ftp/pub/approved-specs/af-phy-0086.001.pdf>.\n
      \  [G.994.1]  ITU-T, \"Handshake procedures for digital subscriber line\n              (DSL)
      transceivers\", ITU-T Recommendation G.994.1,\n              June 2012, <http://www.itu.int/rec/T-REC-G.994.1/en>.\n
      \  [G.998.1]  ITU-T, \"ATM-based multi-pair bonding\", ITU-T\n              Recommendation
      G.998.1, January 2005,\n              <http://www.itu.int/rec/T-REC-G.998.1/en>.\n
      \  [G.998.2]  ITU-T, \"Ethernet-based multi-pair bonding\", ITU-T\n              Recommendation
      G.998.2, January 2005,\n              <http://www.itu.int/rec/T-REC-G.998.2/en>.\n
      \  [G.998.3]  ITU-T, \"Multi-pair bonding using time-division inverse\n              multiplexing\",
      ITU-T Recommendation G.998.3, January 2005,\n              <http://www.itu.int/rec/T-REC-G.998.3/en>.\n
      \  [IANAifType-MIB]\n              Internet Assigned Numbers Authority (IANA),
      \"IANAifType\n              Textual Convention definition\",\n              <http://www.iana.org/assignments/ianaiftype-mib>.\n
      \  [RFC2790]  Waldbusser, S. and P. Grillo, \"Host Resources MIB\",\n              RFC
      2790, March 2000.\n   [RFC2864]  McCloghrie, K. and G. Hanson, \"The Inverted
      Stack Table\n              Extension to the Interfaces Group MIB\", RFC 2864,\n
      \             June 2000.\n   [RFC3410]  Case, J., Mundy, R., Partain, D., and
      B. Stewart,\n              \"Introduction and Applicability Statements for Internet-\n
      \             Standard Management Framework\", RFC 3410, December 2002.\n   [RFC3440]
      \ Ly, F. and G. Bathrick, \"Definitions of Extension Managed\n              Objects
      for Asymmetric Digital Subscriber Lines\",\n              RFC 3440, December
      2002.\n   [RFC3593]  Tesink, K., \"Textual Conventions for MIB Modules Using\n
      \             Performance History Based on 15 Minute Intervals\",\n              RFC
      3593, September 2003.\n   [RFC3728]  Ray, B. and R. Abbi, \"Definitions of Managed
      Objects for\n              Very High Speed Digital Subscriber Lines (VDSL)\",\n
      \             RFC 3728, February 2004.\n   [RFC4181]  Heard, C., \"Guidelines
      for Authors and Reviewers of MIB\n              Documents\", BCP 111, RFC 4181,
      September 2005.\n   [RFC4319]  Sikes, C., Ray, B., and R. Abbi, \"Definitions
      of Managed\n              Objects for High Bit-Rate DSL - 2nd generation (HDSL2)
      and\n              Single-Pair High-Speed Digital Subscriber Line (SHDSL)\n
      \             Lines\", RFC 4319, December 2005.\n   [RFC4706]  Morgenstern,
      M., Dodge, M., Baillie, S., and U. Bonollo,\n              \"Definitions of
      Managed Objects for Asymmetric Digital\n              Subscriber Line 2 (ADSL2)\",
      RFC 4706, November 2006.\n   [RFC5066]  Beili, E., \"Ethernet in the First Mile
      Copper (EFMCu)\n              Interfaces MIB\", RFC 5066, November 2007.\n   [RFC5650]
      \ Morgenstern, M., Baillie, S., and U. Bonollo, \"Definitions\n              of
      Managed Objects for Very High Speed Digital Subscriber\n              Line 2
      (VDSL2)\", RFC 5650, September 2009.\n   [RFC5905]  Mills, D., Martin, J., Burbank,
      J., and W. Kasch, \"Network\n              Time Protocol Version 4: Protocol
      and Algorithms\n              Specification\", RFC 5905, June 2010.\n   [RFC6766]
      \ Beili, E., \"xDSL Multi-Pair Bonding Using Time-Division\n              Inverse
      Multiplexing (G.Bond/TDIM) MIB\", RFC 6766,\n              February 2013.\n
      \  [RFC6767]  Beili, E. and M. Morgenstern, \"Ethernet-Based xDSL Multi-\n              Pair
      Bonding (G.Bond/Ethernet) MIB\", RFC 6767,\n              February 2013.\n   [RFC6768]
      \ Beili, E., \"ATM-Based xDSL Bonded Interfaces MIB\",\n              RFC 6768,
      February 2013.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Edward Beili\n   Actelis Networks\n   25 Bazel St.\n   Petach-Tikva
    \ 49103\n   Israel\n   Phone: +972-3-924-3491\n   EMail: edward.beili@actelis.com\n
    \  Moti Morgenstern\n   ECI Telecom\n   30 Hasivim St.\n   Petach-Tikva  4951169\n
    \  Israel\n   Phone: +972-3-926-6258\n   EMail: moti.morgenstern@ecitele.com\n"
  title: Authors' Addresses
