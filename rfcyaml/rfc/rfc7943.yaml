- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                           F. Gont
  contents:
  - 'Independent Submission                                           F. Gont

    '
- title: A Method for Generating Semantically Opaque Interface Identifiers (IIDs)
  contents:
  - "A Method for Generating Semantically Opaque Interface Identifiers (IIDs)\n  \
    \   with the Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a method for selecting IPv6 Interface\n\
    \   Identifiers that can be employed by Dynamic Host Configuration\n   Protocol\
    \ for IPv6 (DHCPv6) servers when leasing non-temporary IPv6\n   addresses to DHCPv6\
    \ clients.  This method is a DHCPv6 server-side\n   algorithm that does not require\
    \ any updates to the existing DHCPv6\n   specifications.  The aforementioned method\
    \ results in stable\n   addresses within each subnet, even in the presence of\
    \ multiple DHCPv6\n   servers or DHCPv6 server reinstallments.  It is a DHCPv6\
    \ variant of\n   the method specified in RFC 7217 for IPv6 Stateless Address\n\
    \   Autoconfiguration.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   A predecessor to this document was earlier a working group document\n\
    \   in the DHC WG.  The WG decided to stop further work in this area\n   because\
    \ such work was not considered useful.\n   The proposal described in this document\
    \ has an unaddressed failure\n   case that makes it unsuitable for use as the\
    \ mechanism to provide the\n   claimed failover features for DHCPv6 servers. \
    \ Specifically, when a\n   DHCPv6 client DECLINEs a provided address there is\
    \ no recovery\n   mechanism described that will result in the DHCPv6 client obtaining\
    \ a\n   working IPv6 address.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7943.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Applicability and Design Goals  . . . . . . . . . . .\
    \ . . . .   3\n   3.  Method Specification  . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Security Considerations . . . . . . . . . . . . . . . . .\
    \ . .   8\n   5.  References  . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   8\n     5.1.  Normative References  . . . . . . . . . . . . . . . . . .\
    \   8\n     5.2.  Informative References  . . . . . . . . . . . . . . . . .  \
    \ 8\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  10\n\
    \   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The benefits of stable IPv6 addresses are discussed in [RFC7721].\n\
    \   Providing address stability across server reinstallations or when a\n   database\
    \ of previous DHCPv6 address leases is unavailable is of use\n   not only when\
    \ a DHCPv6 server must be reinstalled or the address-\n   lease database becomes\
    \ corrupted, but is also of use when\n   implementation constraints (e.g., a DHCPv6\
    \ server implementation on\n   an embedded device) make it impossible for a DHCPv6\
    \ server\n   implementation to maintain a database of previous DHCPv6 address\n\
    \   leases.  Additionally, [RFC7031] describes scenarios where multiple\n   DHCPv6\
    \ servers are required to run in such a way as to provide\n   increased availability\
    \ in case of server failures.\n   This document describes a method for selecting\
    \ IPv6 Interface\n   Identifiers that can be employed by DHCPv6 servers when leasing\
    \ non-\n   temporary IPv6 addresses to DHCPv6 clients (i.e., to be employed with\n\
    \   IA_NA options).  This method is a DHCPv6 server-side algorithm that\n   does\
    \ not require any updates to the existing DHCPv6 specifications.\n   The aforementioned\
    \ method has the following properties:\n   o  The resulting IPv6 addresses remain\
    \ stable within each subnet for\n      the same network interface of the same\
    \ client, even when different\n      DHCPv6 servers (implementing this specification)\
    \ are employed.\n   o  Predicting the IPv6 addresses that will be generated by\
    \ the method\n      specified in this document, even with knowledge of the IPv6\n\
    \      addresses generated for other nodes within the same network,\n      becomes\
    \ very difficult.\n   The method specified in this document achieves the aforementioned\n\
    \   properties by means of a calculated technique as opposed to, e.g.,\n   state\
    \ sharing among DHCPv6 servers.  This approach has already been\n   suggested\
    \ in [RFC7031].  We note that the method described in this\n   document is essentially\
    \ a DHCPv6 version of the \"Method for\n   Generating Semantically Opaque Interface\
    \ Identifiers with IPv6\n   Stateless Address Autoconfiguration (SLAAC)\" specified\
    \ in [RFC7217].\n"
- title: 2.  Applicability and Design Goals
  contents:
  - "2.  Applicability and Design Goals\n   This document simply describes one possible\
    \ approach for selecting\n   IPv6 Interface Identifiers to be employed by DHCPv6\
    \ servers when\n   leasing non-temporary IPv6 addresses to DHCPv6 clients, with\
    \ the\n   following properties:\n   o  The resulting IPv6 addresses remain stable\
    \ within each subnet for\n      the same network interface of the same client.\n\
    \   o  The resulting IPv6 addresses cannot be predicted by an attacker\n     \
    \ without knowledge of a secret key.\n   o  The resulting IPv6 addresses remain\
    \ stable across DHCPv6 server\n      reinstallations, or even if a database of\
    \ previous DHCPv6 address\n      leases is not available.\n   o  The resulting\
    \ IPv6 addresses remain stable when different DHCPv6\n      servers (implementing\
    \ this specification) are employed on the same\n      network.\n   We note that\
    \ the algorithm specified in this document employs a\n   (lightweight) calculated\
    \ technique (as opposed to, e.g., state\n   sharing among DHCPv6 servers) to achieve\
    \ address stability in\n   scenarios where multiple DHCPv6 servers are required\
    \ to run in such a\n   way as to provide increased availability, without the need\
    \ of an\n   additional protocol to synchronize the lease databases of DHCPv6\n\
    \   servers.\n   Finally, we note that the algorithm in this document is only\
    \ meant to\n   mitigate IPv6 address-based location tracking, device-specific\n\
    \   vulnerability exploitation, and host scanning (please see [RFC7721]).\n  \
    \ There are a number of ways in which DHCPv6 affects user privacy,\n   which the\
    \ algorithm specified in this document does not mitigate (and\n   does not intend\
    \ to).  Please see [RFC7844] for a comprehensive\n   discussion of how DHCPv6\
    \ may affect user privacy.\n"
- title: 3.  Method Specification
  contents:
  - "3.  Method Specification\n   Implementations should provide the means for a system\
    \ administrator\n   to enable or disable the use of this algorithm for generating\
    \ IPv6\n   addresses.\n   A DHCPv6 server implementing this specification must\
    \ select the IPv6\n   addresses to be leased with the following algorithm:\n \
    \  1.  Compute a random (but stable) identifier with the expression:\n       RID\
    \ = F(Prefix | Client_DUID | IAID | Counter | secret_key)\n       Where:\n   \
    \    RID:\n          Random (but stable) Identifier\n       F():\n          A\
    \ Pseudorandom Function (PRF) that must not be computable from\n          the\
    \ outside (without knowledge of the secret key).  F() must\n          also be\
    \ difficult to reverse, such that it resists attempts to\n          obtain the\
    \ secret key, even when given samples of the output\n          of F() and knowledge\
    \ or control of the other input parameters.\n          F() should produce an output\
    \ of at least 64 bits.  F() could\n          be implemented as a cryptographic\
    \ hash of the concatenation of\n          each of the function parameters.  The\
    \ default algorithm to be\n          employed for F() should be SHA-256 [FIPS-SHS].\
    \  An\n          implementation may provide the means for selecting other\n  \
    \        algorithms.  Note: Message Digest 5 (MD5) [RFC1321] is\n          considered\
    \ unacceptable for F() [RFC6151].\n       Prefix:\n          The prefix employed\
    \ for the local subnet, as a 128-bit\n          unsigned integer in network byte\
    \ order (with the unused bits\n          set to 0).  If multiple servers operate\
    \ on the same network to\n          provide increased availability, all such DHCPv6\
    \ servers must\n          be configured with the same Prefix.  It is the administrator's\n\
    \          responsibility that the aforementioned requirement is met.\n      \
    \ |:\n          An operator representing \"concatenation\".\n       Client_DUID:\n\
    \          The DHCPv6 Unique Identifier (DUID) value contained in the\n      \
    \    Client Identifier option received in the DHCPv6 client\n          message.\
    \  The DUID can be treated as an array of 8-bit\n          unsigned integers.\n\
    \       IAID:\n          The Identity Association Identifier (IAID) value contained\
    \ in\n          the IA_NA option received in the client message.  It must be\n\
    \          interpreted as a 32-bit unsigned integer in network byte\n        \
    \  order.\n       secret_key:\n          A secret key configured by the DHCPv6\
    \ server administrator,\n          which must not be known by the attacker.  It\
    \ must be encoded\n          as an array of 8-bit unsigned integers.  An implementation\
    \ of\n          this specification must provide an interface for viewing and\n\
    \          changing the secret key.  All DHCPv6 servers leasing addresses\n  \
    \        from the same address range must employ the same secret key.\n      \
    \ Counter:\n          A 32-bit unsigned integer in network byte order that is\n\
    \          employed to resolve address conflicts.  It must be initialized\n  \
    \        to 0.\n   2.  A candidate IPv6 address (IPV6_ADDR) to be leased is obtained\
    \ by\n       concatenating as many bits as necessary from the RID value\n    \
    \   computed in the previous step (starting from the least\n       significant\
    \ bit) to the Prefix employed in the equation above, as\n       follows:\n   \
    \     IPV6_ADDR = IPV6_ADDR_LOW +\n                    RID % (IPV6_ADDR_HI - IPV6_ADDR_LOW\
    \ + 1)\n       where:\n       IPV6_ADDR:\n          The candidate IPv6 address\
    \ to be leased.\n       IPV6_ADDR_HI:\n          An IPv6 address specifying the\
    \ upper boundary of the IPv6\n          address pool from which the DHCPv6 server\
    \ leases IPv6\n          addresses.  If an address range is not explicitly selected,\n\
    \          IPV6_ADDR_HI must be set to the IPv6 address from the Prefix\n    \
    \      (see the expression above) that has all of the bits of the\n          Interface\
    \ Identifier set to 1.\n       IPV6_ADDR_LOW:\n          An IPv6 address specifying\
    \ the lower boundary of the IPv6\n          address pool from which the DHCPv6\
    \ server leases IPv6\n          addresses.  If an address range is not explicitly\
    \ selected,\n          IPV6_ADDR_LOW must be set to the IPv6 address from the\
    \ Prefix\n          (see the expression above) that has all of the bits of the\n\
    \          Interface Identifier set to 0.\n   3.  The Interface Identifier of\
    \ the selected IPv6 address must be\n       compared against the reserved IPv6\
    \ Interface Identifiers\n       [RFC5453] [IANA-RESERVED-IID].  In the event that\
    \ an unacceptable\n       identifier has been generated, the Counter variable\
    \ should be\n       incremented by 1, and a new IPv6 address should be computed\
    \ with\n       the updated Counter value.\n   4.  If the resulting address is\
    \ not available (e.g., there is a\n       conflicting binding), the DHCPv6 server\
    \ should increment the\n       Counter variable, and a new Interface Identifier\
    \ and IPv6 address\n       should be computed with the updated Counter value.\n\
    \   This document requires that SHA-256 be the default function to be\n   used\
    \ for F(), such that (all other configuration parameters being the\n   same) different\
    \ implementations of this specification result in the\n   same IPv6 addresses.\n\
    \   Including the Prefix in the PRF computation causes the Interface\n   Identifier\
    \ to be different for each address from a different prefix\n   leased to the same\
    \ client.  This mitigates the correlation of\n   activities of multihomed nodes\
    \ (since each of the corresponding\n   addresses will employ a different Interface\
    \ Identifier), host\n   tracking (since the network prefix, and therefore the\
    \ resulting\n   Interface Identifier, will change as the node moves from one network\n\
    \   to another), and any other attacks that benefit from predictable\n   Interface\
    \ Identifiers [RFC7721].\n   As required by [RFC3315], an IAID is associated with\
    \ each of the\n   client's network interfaces and is consistent across restarts\
    \ of the\n   DHCPv6 client.\n   The Counter parameter provides the means to intentionally\
    \ cause this\n   algorithm to produce different IPv6 addresses (all other parameters\n\
    \   being the same).  This can be of use to resolve address conflicts\n   (e.g.,\
    \ the resulting address having a conflicting binding).\n   Note that the result\
    \ of F() in the algorithm above is no more secure\n   than the secret key.  If\
    \ an attacker is aware of the PRF that is\n   being used by the DHCPv6 server\
    \ (which we should expect), and the\n   attacker can obtain enough material (i.e.,\
    \ addresses generated by the\n   DHCPv6 server), the attacker may simply search\
    \ the entire secret-key\n   space to find matches.  To protect against this, the\
    \ secret key\n   should be of at least 128 bits.  Key lengths of at least 128\
    \ bits\n   should be adequate.\n   Providing a mechanism to display and change\
    \ the secret_key is crucial\n   for having different DHCPv6 servers produce the\
    \ same IPv6 addresses\n   and for causing a replacement system to generate the\
    \ same IPv6\n   addresses as the system being replaced.  We note that since the\n\
    \   privacy of the scheme specified in this document relies on the\n   secrecy\
    \ of the secret_key parameter, implementations should constrain\n   access to\
    \ the secret_key parameter to the extent practicable (e.g.,\n   require superuser\
    \ privileges to access it).  Furthermore, in order to\n   prevent leakages of\
    \ the secret_key parameter, it should not be used\n   for any other purposes than\
    \ being a parameter to the scheme specified\n   in this document.\n   We note\
    \ that all of the bits in the resulting Interface Identifiers\n   are treated\
    \ as \"opaque\" bits [RFC7136].  For example, the universal/\n   local bit of\
    \ Modified EUI-64 format identifiers is treated as any\n   other bit of such identifier.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The method specified in this document results\
    \ in IPv6 Interface\n   Identifiers (and hence IPv6 addresses) that do not follow\
    \ any\n   specific pattern.  Thus, attacks that rely on predictable Interface\n\
    \   Identifiers (such as [RFC7707]) are mitigated.\n   The method specified in\
    \ this document neither mitigates nor\n   exacerbates the security considerations\
    \ for DHCPv6 discussed in\n   [RFC3315] and does not mitigate a range of other\
    \ privacy implications\n   associated with DHCPv6.  Please read [RFC7844] for\
    \ a comprehensive\n   assessment of the privacy implications of DHCPv6.\n   Finally,\
    \ we note that an attacker that is able to attach to each of\n   the links to\
    \ which the victim attaches would still be able to\n   correlate the activities\
    \ of the victim across networks.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [RFC3315]  Droms, R., Ed., Bound, J., Volz, B.,\
    \ Lemon, T., Perkins,\n              C., and M. Carney, \"Dynamic Host Configuration\
    \ Protocol\n              for IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315,\
    \ July\n              2003, <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC5453]\
    \  Krishnan, S., \"Reserved IPv6 Interface Identifiers\",\n              RFC 5453,\
    \ DOI 10.17487/RFC5453, February 2009,\n              <http://www.rfc-editor.org/info/rfc5453>.\n\
    \   [RFC7136]  Carpenter, B. and S. Jiang, \"Significance of IPv6\n          \
    \    Interface Identifiers\", RFC 7136, DOI 10.17487/RFC7136,\n              February\
    \ 2014, <http://www.rfc-editor.org/info/rfc7136>.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [FIPS-SHS]\n              Federal Information\
    \ Processing Standards (FIPS), \"Secure\n              Hash Standard (SHS)\",\
    \ FIPS 180-4, August 2015,\n              <http://csrc.nist.gov/publications/fips/fips180-4/\n\
    \              fips-180-4.pdf>.\n   [IANA-RESERVED-IID]\n              IANA, \"\
    Reserved IPv6 Interface Identifiers\",\n              <http://www.iana.org/assignments/ipv6-interface-ids>.\n\
    \   [RFC1321]  Rivest, R., \"The MD5 Message-Digest Algorithm\", RFC 1321,\n \
    \             DOI 10.17487/RFC1321, April 1992,\n              <http://www.rfc-editor.org/info/rfc1321>.\n\
    \   [RFC6151]  Turner, S. and L. Chen, \"Updated Security Considerations\n   \
    \           for the MD5 Message-Digest and the HMAC-MD5 Algorithms\",\n      \
    \        RFC 6151, DOI 10.17487/RFC6151, March 2011,\n              <http://www.rfc-editor.org/info/rfc6151>.\n\
    \   [RFC7031]  Mrugalski, T. and K. Kinnear, \"DHCPv6 Failover\n             \
    \ Requirements\", RFC 7031, DOI 10.17487/RFC7031, September\n              2013,\
    \ <http://www.rfc-editor.org/info/rfc7031>.\n   [RFC7217]  Gont, F., \"A Method\
    \ for Generating Semantically Opaque\n              Interface Identifiers with\
    \ IPv6 Stateless Address\n              Autoconfiguration (SLAAC)\", RFC 7217,\n\
    \              DOI 10.17487/RFC7217, April 2014,\n              <http://www.rfc-editor.org/info/rfc7217>.\n\
    \   [RFC7707]  Gont, F. and T. Chown, \"Network Reconnaissance in IPv6\n     \
    \         Networks\", RFC 7707, DOI 10.17487/RFC7707, March 2016,\n          \
    \    <http://www.rfc-editor.org/info/rfc7707>.\n   [RFC7721]  Cooper, A., Gont,\
    \ F., and D. Thaler, \"Security and Privacy\n              Considerations for\
    \ IPv6 Address Generation Mechanisms\",\n              RFC 7721, DOI 10.17487/RFC7721,\
    \ March 2016,\n              <http://www.rfc-editor.org/info/rfc7721>.\n   [RFC7844]\
    \  Huitema, C., Mrugalski, T., and S. Krishnan, \"Anonymity\n              Profiles\
    \ for DHCP Clients\", RFC 7844,\n              DOI 10.17487/RFC7844, May 2016,\n\
    \              <http://www.rfc-editor.org/info/rfc7844>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   This document is based on [RFC7217], authored by Fernando\
    \ Gont.\n   The authors would like to thank Marc Blanchet, Stephane Bortzmeyer,\n\
    \   Tatuya Jinmei, Andre Kostur, Tomek Mrugalski, Hosnieh Rafiee, Jim\n   Schaad,\
    \ Jean-Francois Tremblay, Tina Tsou, and Bernie Volz for\n   providing valuable\
    \ comments on earlier draft versions of this\n   documents.\n   The authors would\
    \ like to thank Ted Lemon, who kindly answered some\n   DHCPv6-related questions,\
    \ and Nevil Brownlee for his guidance while\n   pursuing this document.\n   Fernando\
    \ Gont would like to thank Nelida Garcia and Guillermo Gont\n   for their love\
    \ and support, and Diego Armando Maradona for his magic\n   and inspiration.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fernando Gont\n   SI6 Networks / UTN-FRH\n   Evaristo\
    \ Carriego 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone:\
    \ +54 11 4650 8472\n   Email: fgont@si6networks.com\n   URI:   http://www.si6networks.com\n\
    \   Will (Shucheng) Liu\n   Huawei Technologies\n   Bantian, Longgang District\n\
    \   Shenzhen  518129\n   China\n   Email: liushucheng@huawei.com\n"
