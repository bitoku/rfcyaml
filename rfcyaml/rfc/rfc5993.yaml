- contents:
  - "                         RTP Payload Format for\n       Global System for Mobile
    Communications Half Rate (GSM-HR)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies the payload format for packetization of\n
    \  Global System for Mobile Communications Half Rate (GSM-HR) speech\n   codec
    data into the Real-time Transport Protocol (RTP).  The payload\n   format supports
    transmission of multiple frames per payload and\n   packet loss robustness methods
    using redundancy.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5993.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions Used in This Document  . . . . . . . . . .
    . . . .  3\n   3.  GSM Half Rate  . . . . . . . . . . . . . . . . . . . . . .
    . .  3\n   4.  Payload Format Capabilities  . . . . . . . . . . . . . . . . .
    \ 4\n     4.1.  Use of Forward Error Correction (FEC)  . . . . . . . . . .  4\n
    \  5.  Payload Format . . . . . . . . . . . . . . . . . . . . . . . .  5\n     5.1.
    \ RTP Header Usage . . . . . . . . . . . . . . . . . . . . .  6\n     5.2.  Payload
    Structure  . . . . . . . . . . . . . . . . . . . .  6\n       5.2.1.  Encoding
    of Speech Frames  . . . . . . . . . . . . . .  8\n       5.2.2.  Encoding of Silence
    Description Frames . . . . . . . .  8\n     5.3.  Implementation Considerations
    \ . . . . . . . . . . . . . .  8\n       5.3.1.  Transmission of SID Frames .
    . . . . . . . . . . . . .  8\n       5.3.2.  Receiving Redundant Frames . . .
    . . . . . . . . . . .  8\n       5.3.3.  Decoding Validation  . . . . . . . .
    . . . . . . . . .  9\n   6.  Examples . . . . . . . . . . . . . . . . . . . .
    . . . . . . . 10\n     6.1.  3 Frames . . . . . . . . . . . . . . . . . . . .
    . . . . . 10\n     6.2.  3 Frames with Lost Frame in the Middle . . . . . . .
    . . . 11\n   7.  Payload Format Parameters  . . . . . . . . . . . . . . . . .
    . 11\n     7.1.  Media Type Definition  . . . . . . . . . . . . . . . . . . 12\n
    \    7.2.  Mapping to SDP . . . . . . . . . . . . . . . . . . . . . . 13\n       7.2.1.
    \ Offer/Answer Considerations  . . . . . . . . . . . . . 14\n       7.2.2.  Declarative
    SDP Considerations . . . . . . . . . . . . 14\n   8.  IANA Considerations  . .
    . . . . . . . . . . . . . . . . . . . 15\n   9.  Congestion Control . . . . .
    . . . . . . . . . . . . . . . . . 15\n   10. Security Considerations  . . . .
    . . . . . . . . . . . . . . . 15\n   11. Acknowledgements . . . . . . . . . .
    . . . . . . . . . . . . . 16\n   12. References . . . . . . . . . . . . . . .
    . . . . . . . . . . . 16\n     12.1. Normative References . . . . . . . . . .
    . . . . . . . . . 16\n     12.2. Informative References . . . . . . . . . . .
    . . . . . . . 17\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the payload format for packetization
    of GSM\n   Half Rate (GSM-HR) codec [TS46.002] encoded speech signals into the\n
    \  Real-time Transport Protocol (RTP) [RFC3550].  The payload format\n   supports
    transmission of multiple frames per payload and packet loss\n   robustness methods
    using redundancy.\n   This document starts with conventions, a brief description
    of the\n   codec, and payload format capabilities.  The payload format is\n   specified
    in Section 5.  Examples can be found in Section 6.  The\n   media type specification
    and its mappings to SDP, and considerations\n   when using the Session Description
    Protocol (SDP) offer/answer\n   procedures are then specified.  The document ends
    with considerations\n   related to congestion control and security.\n   This document
    registers a media type (audio/GSM-HR-08) for the Real-\n   time Transport Protocol
    (RTP) payload format for the GSM-HR codec.\n   Note: This format is not compatible
    with the one provided back in\n   1999 to 2000 in early draft versions of what
    was later published as\n   RFC 3551.  RFC 3551 was based on a later version of
    the Audio-Visual\n   Profile (AVP) draft, which did not provide any specification
    of the\n   GSM-HR payload format.  To avoid a possible conflict with this older\n
    \  format, the media type of the payload format specified in this\n   document
    has a media type name that is different from (audio/GSM-HR).\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   This document uses the normal IETF
    bit-order representation.  Bit\n   fields in figures are read left to right and
    then down.  The leftmost\n   bit in each field is the most significant.  The numbering
    starts from\n   0 and ascends, where bit 0 will be the most significant.\n   The
    key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",
    \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document
    are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  GSM Half Rate\n   The Global System for Mobile Communications (GSM) network
    provides\n   with mobile communication services for nearly 3 billion users\n   (statistics
    as of 2008).  The GSM Half Rate (GSM-HR) codec is one of\n   the speech codecs
    used in GSM networks.  GSM-HR denotes the Half Rate\n   speech codec as specified
    in [TS46.002].\n   Note: For historical reasons, these 46-series specifications
    are\n   internally referenced as 06-series.  A simple mapping applies; for\n   example,
    46.020 is referenced as 06.20, and so on.\n   The GSM-HR codec has a frame length
    of 20 ms, with narrowband speech\n   sampled at 8000 Hz, i.e., 160 samples per
    frame.  Each speech frame\n   is compressed into 112 bits of speech parameters,
    which is equivalent\n   to a bit rate of 5.6 kbit/s.  Speech pauses are detected
    by a\n   standardized Voice Activity Detection (VAD).  During speech pauses,\n
    \  the transmission of speech frames is inhibited.  Silence Descriptor\n   (SID)
    frames are transmitted at the end of a talkspurt and about\n   every 480 ms during
    speech pauses to allow for a decent comfort noise\n   (CN) quality on the receiver
    side.\n   The SID frame generation in the GSM radio network is determined by\n
    \  the GSM mobile station and the GSM radio subsystem.  SID frames come\n   during
    speech pauses in the uplink from the mobile station about\n   every 480 ms.  In
    the downlink to the mobile station, when they are\n   generated by the encoder
    of the GSM radio subsystem, SID frames are\n   sent every 20 ms to the GSM base
    station, which then picks only one\n   every 480 ms for downlink radio transmission.
    \ For other\n   applications, like transport over IP, it is more appropriate to
    send\n   the SID frames less often than every 20 ms, but 480 ms may be too\n   sparse.
    \ We recommend as a compromise that a GSM-HR encoder outside\n   of the GSM radio
    network (i.e., not in the GSM mobile station and not\n   in the GSM radio subsystem,
    but, for example, in the media gateway of\n   the core network) should generate
    and send SID frames every 160 ms.\n"
  title: 3.  GSM Half Rate
- contents:
  - "4.  Payload Format Capabilities\n   This RTP payload format carries one or more
    GSM-HR encoded frames --\n   either full voice or silence descriptor (SID) --
    representing a mono\n   speech signal.  To maintain synchronization or to indicate
    unsent or\n   lost frames, it has the capability to indicate No_Data frames.\n"
  - contents:
    - "4.1.  Use of Forward Error Correction (FEC)\n   Generic forward error correction
      within RTP is defined, for example,\n   in RFC 5109 [RFC5109].  Audio redundancy
      coding is defined in RFC\n   2198 [RFC2198].  Either scheme can be used to add
      redundant\n   information to the RTP packet stream and make it more resilient
      to\n   packet losses, at the expense of a higher bit rate.  Please see\n   either
      RFC for a discussion of the implications of the higher bit\n   rate to network
      congestion.\n   In addition to these media-unaware mechanisms, this memo specifies
      an\n   optional-to-use GSM-HR-specific form of audio redundancy coding,\n   which
      may be beneficial in terms of packetization overhead.\n   Conceptually, previously
      transmitted transport frames are aggregated\n   together with new ones.  A sliding
      window can be used to group the\n   frames to be sent in each payload.  Figure
      1 below shows an example.\n   --+--------+--------+--------+--------+--------+--------+--------+--\n
      \    | f(n-2) | f(n-1) |  f(n)  | f(n+1) | f(n+2) | f(n+3) | f(n+4) |\n   --+--------+--------+--------+--------+--------+--------+--------+--\n
      \     <---- p(n-1) ---->\n               <----- p(n) ----->\n                        <----
      p(n+1) ---->\n                                 <---- p(n+2) ---->\n                                          <----
      p(n+3) ---->\n                                                   <---- p(n+4)
      ---->\n              Figure 1: An Example of Redundant Transmission\n   Here,
      each frame is retransmitted once in the following RTP payload\n   packet. f(n-2)...f(n+4)
      denote a sequence of audio frames, and\n   p(n-1)...p(n+4) a sequence of payload
      packets.\n   The mechanism described does not really require signaling at the\n
      \  session setup.  However, signaling has been defined to allow the\n   sender
      to voluntarily bound the buffering and delay requirements.  If\n   nothing is
      signaled, the use of this mechanism is allowed and\n   unbounded.  For a certain
      timestamp, the receiver may acquire\n   multiple copies of a frame containing
      encoded audio data.  The cost\n   of this scheme is bandwidth, and the receiver
      delay is necessary to\n   allow the redundant copy to arrive.\n   This redundancy
      scheme provides a functionality similar to the one\n   described in RFC 2198,
      but it works only if both original frames and\n   redundant representations
      are GSM-HR frames.  When the use of other\n   media coding schemes is desirable,
      one has to resort to RFC 2198.\n   The sender is responsible for selecting an
      appropriate amount of\n   redundancy, based on feedback regarding the channel
      conditions, e.g.,\n   in the RTP Control Protocol (RTCP) [RFC3550] receiver
      reports.  The\n   sender is also responsible for avoiding congestion, which
      may be\n   exacerbated by redundancy (see Section 9 for more details).\n"
    title: 4.1.  Use of Forward Error Correction (FEC)
  title: 4.  Payload Format Capabilities
- contents:
  - "5.  Payload Format\n   The format of the RTP header is specified in [RFC3550].
    \ The payload\n   format described in this document uses the header fields in
    a manner\n   consistent with that specification.\n   The duration of one speech
    frame is 20 ms.  The sampling frequency is\n   8000 Hz, corresponding to 160 speech
    samples per frame.  An RTP\n   packet may contain multiple frames of encoded speech
    or SID\n   parameters.  Each packet covers a period of one or more contiguous\n
    \  20-ms frame intervals.  During silence periods, no speech packets are\n   sent;
    however, SID packets are transmitted every now and then.\n   To allow for error
    resiliency through redundant transmission, the\n   periods covered by multiple
    packets MAY overlap in time.  A receiver\n   MUST be prepared to receive any speech
    frame multiple times.  A given\n   frame MUST NOT be encoded as a speech frame
    in one packet and as a\n   SID frame or as a No_Data frame in another packet.
    \ Furthermore, a\n   given frame MUST NOT be encoded with different voicing modes
    in\n   different packets.\n   The rules regarding maximum payload size given in
    Section 3.2 of\n   [RFC5405] SHOULD be followed.\n"
  - contents:
    - "5.1.  RTP Header Usage\n   The RTP timestamp corresponds to the sampling instant
      of the first\n   sample encoded for the first frame in the packet.  The timestamp\n
      \  clock frequency SHALL be 8000 Hz.  The timestamp is also used to\n   recover
      the correct decoding order of the frames.\n   The RTP header marker bit (M)
      SHALL be set to 1 whenever the first\n   frame carried in the packet is the
      first frame in a talkspurt (see\n   definition of the talkspurt in Section 4.1
      of [RFC3551]).  For all\n   other packets, the marker bit SHALL be set to zero
      (M=0).\n   The assignment of an RTP payload type for the format defined in this\n
      \  memo is outside the scope of this document.  The RTP profiles in use\n   currently
      mandate binding the payload type dynamically for this\n   payload format.\n
      \  The remaining RTP header fields are used as specified in RFC 3550\n   [RFC3550].\n"
    title: 5.1.  RTP Header Usage
  - contents:
    - "5.2.  Payload Structure\n   The complete payload consists of a payload table
      of contents (ToC)\n   section, followed by speech data representing one or more
      speech\n   frames, SID frames, or No_Data frames.  The following diagram shows\n
      \  the general payload format layout:\n      +-------------+-------------------------\n
      \     | ToC section | speech data section ...\n      +-------------+-------------------------\n
      \     Figure 2: General Payload Format Layout\n   Each ToC element is one octet
      and corresponds to one speech frame;\n   the number of ToC elements is thus
      equal to the number of speech\n   frames (including SID frames and No_Data frames).
      \ Each ToC entry\n   represents a consecutive speech or SID or No_Data frame.
      \ The\n   timestamp value for ToC element (and corresponding speech frame data)\n
      \  N within the payload is (RTP timestamp field + (N-1)*160) mod 2^32.\n   The
      format of the ToC element is as follows.\n       0 1 2 3 4 5 6 7\n      +-+-+-+-+-+-+-+-+\n
      \     |F| FT  |R R R R|\n      +-+-+-+-+-+-+-+-+\n   Figure 3: The TOC Element\n
      \  F: Follow flag; 1 denotes that more ToC elements follow; 0 denotes\n      the
      last ToC element.\n   R: Reserved bits; MUST be set to zero, and MUST be ignored
      by\n      receiver.\n   FT:  Frame type\n      000 = Good Speech frame\n      001
      = Reserved\n      010 = Good SID frame\n      011 = Reserved\n      100 = Reserved\n
      \     101 = Reserved\n      110 = Reserved\n      111 = No_Data frame\n   The
      length of the payload data depends on the frame type:\n   Good Speech frame:
      \  The 112 speech data bits are put in 14 octets.\n   Good SID frame:   The
      33 SID data bits are put in 14 octets, as in\n      the case of Speech frames,
      with the unused 79 bits all set to \"1\".\n   No_Data frame:   Length of payload
      data is zero octets.\n   Frames marked in the GSM radio subsystem as \"Bad Speech
      frame\", \"Bad\n   SID frame\", or \"No_Data frame\" are not sent in RTP packets,
      in order\n   to save bandwidth.  They are marked as \"No_Data frame\", if they
      occur\n   within an RTP packet that carries more than one speech frame, SID\n
      \  frame, or No_Data frame.\n"
    - contents:
      - "5.2.1.  Encoding of Speech Frames\n   The 112 bits of GSM-HR-coded speech
        (b1...b112) are defined in TS\n   46.020, Annex B [TS46.020], in their order
        of occurrence.  The first\n   bit (b1) of the first parameter is placed in
        the most significant bit\n   (MSB) (bit 0) of the first octet (octet 1) of
        the payload field; the\n   second bit is placed in bit 1 of the first octet;
        and so on.  The\n   last bit (b112) is placed in the least significant bit
        (LSB) (bit 7)\n   of octet 14.\n"
      title: 5.2.1.  Encoding of Speech Frames
    - contents:
      - "5.2.2.  Encoding of Silence Description Frames\n   The GSM-HR codec applies
        a specific coding for silence periods in so-\n   called SID frames.  The coding
        of SID frames is based on the coding\n   of speech frames by using only the
        first 33 bits for SID parameters\n   and by setting all of the remaining 79
        bits to \"1\".\n"
      title: 5.2.2.  Encoding of Silence Description Frames
    title: 5.2.  Payload Structure
  - contents:
    - "5.3.  Implementation Considerations\n   An application implementing this payload
      format MUST understand all\n   the payload parameters that are defined in this
      specification.  Any\n   mapping of the parameters to a signaling protocol MUST
      support all\n   parameters.  So an implementation of this payload format in
      an\n   application using SDP is required to understand all the payload\n   parameters
      in their SDP-mapped form.  This requirement ensures that\n   an implementation
      always can decide whether it is capable of\n   communicating when the communicating
      entities support this version of\n   the specification.\n"
    - contents:
      - "5.3.1.  Transmission of SID Frames\n   When using this RTP payload format,
        the sender SHOULD generate and\n   send SID frames every 160 ms, i.e., every
        8th frame, during silent\n   periods.  Other SID transmission intervals may
        occur due to gateways\n   to other systems that use other transmission intervals.\n"
      title: 5.3.1.  Transmission of SID Frames
    - contents:
      - "5.3.2.  Receiving Redundant Frames\n   The reception of redundant audio frames,
        i.e., more than one audio\n   frame from the same source for the same time
        slot, MUST be supported\n   by the implementation.\n"
      title: 5.3.2.  Receiving Redundant Frames
    - contents:
      - "5.3.3.  Decoding Validation\n   If the receiver finds a mismatch between
        the size of a received\n   payload and the size indicated by the ToC of the
        payload, the\n   receiver SHOULD discard the packet.  This is recommended,
        because\n   decoding a frame parsed from a payload based on erroneous ToC
        data\n   could severely degrade the audio quality.\n"
      title: 5.3.3.  Decoding Validation
    title: 5.3.  Implementation Considerations
  title: 5.  Payload Format
- contents:
  - "6.  Examples\n   A few examples below highlight the payload format.\n"
  - contents:
    - "6.1.  3 Frames\n   Below is a basic example of the aggregation of 3 consecutive
      speech\n   frames into a single packet.\n      The first 24 bits are ToC elements.\n
      \     Bit 0 is '1', as another ToC element follows.\n      Bits 1..3 are 000
      = Good speech frame\n      Bits 4..7 are 0000 = Reserved\n      Bit 8 is '1',
      as another ToC element follows.\n      Bits 9..11 are 000 = Good speech frame\n
      \     Bits 12..15 are 0000 = Reserved\n      Bit 16 is '0'; no more ToC elements
      follow.\n      Bits 17..19 are 000 = Good speech frame\n      Bits 20..23 are
      0000 = Reserved\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |1|0 0 0|0 0 0 0|1|0 0 0|0 0 0 0|0|0 0 0|0 0 0 0|b1           b8|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      \              +\n      |b9   Frame 1                                                b40|\n
      \     +                                                               +\n      |b41
      \                                                        b72|\n      +                                                               +\n
      \     |b73                                                        b104|\n      +
      \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |b105
      \      b112|b1                                          b24|\n      +-+-+-+-+-+-+-+-+
      \                                              +\n      |b25  Frame 2                                                b56|\n
      \     +                                                               +\n      |b57
      \                                                        b88|\n      +                                               +-+-+-+-+-+-+-+-+\n
      \     |b89                                        b112|b1           b8|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      \              +\n      |b9   Frame 3                                                b40|\n
      \     +                                                               +\n      |b41
      \                                                        b72|\n      +                                                               +\n
      \     |b73                                                        b104|\n      +
      \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |b105
      \      b112|\n      +-+-+-+-+-+-+-+-+\n"
    title: 6.1.  3 Frames
  - contents:
    - "6.2.  3 Frames with Lost Frame in the Middle\n   Below is an example of a payload
      carrying 3 frames, where the middle\n   one is No_Data (for example, due to
      loss prior to transmission by the\n   RTP source).\n      The first 24 bits
      are ToC elements.\n      Bit 0 is '1', as another ToC element follows.\n      Bits
      1..3 are 000 = Good speech frame\n      Bits 4..7 are 0000 = Reserved\n      Bit
      8 is '1', as another ToC element follows.\n      Bits 9..11 are 111 = No_Data
      frame\n      Bits 12..15 are 0000 = Reserved\n      Bit 16 is '0'; no more ToC
      elements follow.\n      Bits 17..19 are 000 = Good speech frame\n      Bits
      20..23 are 0000 = Reserved\n       0                   1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |1|0 0 0|0 0 0 0|1|1 1 1|0 0 0 0|0|0 0 0|0 0 0 0|b1           b8|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
      \              +\n      |b9   Frame 1                                                b40|\n
      \     +                                                               +\n      |b41
      \                                                        b72|\n      +                                                               +\n
      \     |b73                                                        b104|\n      +
      \              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |b105
      \      b112|b1                                          b24|\n      +-+-+-+-+-+-+-+-+
      \                                              +\n      |b25  Frame 3                                                b56|\n
      \     +                                                               +\n      |b57
      \                                                        b88|\n      +                                               +-+-+-+-+-+-+-+-+\n
      \     |b89                                        b112|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
    title: 6.2.  3 Frames with Lost Frame in the Middle
  title: 6.  Examples
- contents:
  - "7.  Payload Format Parameters\n   This RTP payload format is identified using
    the media type \"audio/\n   GSM-HR-08\", which is registered in accordance with
    [RFC4855] and uses\n   [RFC4288] as a template.  Note: Media subtype names are
    case-\n   insensitive.\n"
  - contents:
    - "7.1.  Media Type Definition\n   The media type for the GSM-HR codec is allocated
      from the IETF tree,\n   since GSM-HR is a well-known speech codec.  This media
      type\n   registration covers real-time transfer via RTP.\n   Note: Reception
      of any unspecified parameter MUST be ignored by the\n   receiver to ensure that
      additional parameters can be added in the\n   future.\n   Type name: audio\n
      \  Subtype name: GSM-HR-08\n   Required parameters: none\n   Optional parameters:\n
      \     max-red: The maximum duration in milliseconds that elapses between\n      the
      primary (first) transmission of a frame and any redundant\n      transmission
      that the sender will use.  This parameter allows a\n      receiver to have a
      bounded delay when redundancy is used.  Allowed\n      values are integers between
      0 (no redundancy will be used) and\n      65535.  If the parameter is omitted,
      no limitation on the use of\n      redundancy is present.\n      ptime: See
      [RFC4566].\n      maxptime: See [RFC4566].\n   Encoding considerations:\n      This
      media type is framed and binary; see Section 4.8 of RFC 4288\n      [RFC4288].\n
      \  Security considerations:\n      See Section 10 of RFC 5993.\n   Interoperability
      considerations:\n      The media subtype name contains \"-08\" to avoid potential
      conflict\n      with any earlier drafts of GSM-HR RTP payload types that aren't\n
      \     bit-compatible.\n   Published specifications:\n      RFC 5993, 3GPP TS
      46.002\n   Applications that use this media type:\n      Real-time audio applications
      like voice over IP and\n      teleconference.\n   Additional information: none\n
      \  Person & email address to contact for further information:\n      Ingemar
      Johansson <ingemar.s.johansson@ericsson.com>\n   Intended usage: COMMON\n   Restrictions
      on usage:\n      This media type depends on RTP framing, and hence is only defined\n
      \     for transfer via RTP [RFC3550].  Transport within other framing\n      protocols
      is not defined at this time.\n   Authors:\n      Xiaodong Duan <duanxiaodong@chinamobile.com>\n
      \     Shuaiyu Wang <wangshuaiyu@chinamobile.com>\n      Magnus Westerlund <magnus.westerlund@ericsson.com>\n
      \     Ingemar Johansson <ingemar.s.johansson@ericsson.com>\n      Karl Hellwig
      <karl.hellwig@ericsson.com>\n   Change controller:\n      IETF Audio/Video Transport
      working group, delegated from the IESG.\n"
    title: 7.1.  Media Type Definition
  - contents:
    - "7.2.  Mapping to SDP\n   The information carried in the media type specification
      has a\n   specific mapping to fields in the Session Description Protocol (SDP)\n
      \  [RFC4566], which is commonly used to describe RTP sessions.  When SDP\n   is
      used to specify sessions employing the GSM-HR codec, the mapping\n   is as follows:\n
      \  o  The media type (\"audio\") goes in SDP \"m=\" as the media name.\n   o
      \ The media subtype (payload format name) goes in SDP \"a=rtpmap\" as\n      the
      encoding name.  The RTP clock rate in \"a=rtpmap\" MUST be 8000,\n      and
      the encoding parameters (number of channels) MUST either be\n      explicitly
      set to 1 or omitted, implying a default value of 1.\n   o  The parameters \"ptime\"
      and \"maxptime\" go in the SDP \"a=ptime\" and\n      \"a=maxptime\" attributes,
      respectively.\n   o  Any remaining parameters go in the SDP \"a=fmtp\" attribute
      by\n      copying them directly from the media type parameter string as a\n
      \     semicolon-separated list of parameter=value pairs.\n"
    - contents:
      - "7.2.1.  Offer/Answer Considerations\n   The following considerations apply
        when using SDP offer/answer\n   procedures to negotiate the use of GSM-HR
        payload in RTP:\n   o  The SDP offerer and answerer MUST generate GSM-HR packets
        as\n      described by the offered parameters.\n   o  In most cases, the parameters
        \"maxptime\" and \"ptime\" will not\n      affect interoperability; however,
        the setting of the parameters\n      can affect the performance of the application.
        \ The SDP offer/\n      answer handling of the \"ptime\" parameter is described
        in\n      [RFC3264].  The \"maxptime\" parameter MUST be handled in the same\n
        \     way.\n   o  The parameter \"max-red\" is a stream property parameter.
        \ For\n      sendonly or sendrecv unicast media streams, the parameter declares\n
        \     the limitation on redundancy that the stream sender will use.  For\n
        \     recvonly streams, it indicates the desired value for the stream\n      sent
        to the receiver.  The answerer MAY change the value, but is\n      RECOMMENDED
        to use the same limitation as the offer declares.  In\n      the case of multicast,
        the offerer MAY declare a limitation; this\n      SHALL be answered using
        the same value.  A media sender using this\n      payload format is RECOMMENDED
        to always include the \"max-red\"\n      parameter.  This information is likely
        to simplify the media\n      stream handling in the receiver.  This is especially
        true if no\n      redundancy will be used, in which case \"max-red\" is set
        to 0.\n   o  Any unknown media type parameter in an offer SHALL be removed
        in\n      the answer.\n"
      title: 7.2.1.  Offer/Answer Considerations
    - contents:
      - "7.2.2.  Declarative SDP Considerations\n   In declarative usage, like SDP
        in the Real Time Streaming Protocol\n   (RTSP) [RFC2326] or the Session Announcement
        Protocol (SAP)\n   [RFC2974], the parameters SHALL be interpreted as follows:\n
        \  o  The stream property parameter (\"max-red\") is declarative, and a\n
        \     participant MUST follow what is declared for the session.  In this\n
        \     case, it means that the receiver MUST be prepared to allocate\n      buffer
        memory for the given redundancy.  Any transmissions MUST\n      NOT use more
        redundancy than what has been declared.  More than\n      one configuration
        may be provided if necessary by declaring\n      multiple RTP payload types;
        however, the number of types should be\n      kept small.\n   o  Any \"maxptime\"
        and \"ptime\" values should be selected with care to\n      ensure that the
        session's participants can achieve reasonable\n      performance.\n"
      title: 7.2.2.  Declarative SDP Considerations
    title: 7.2.  Mapping to SDP
  title: 7.  Payload Format Parameters
- contents:
  - "8.  IANA Considerations\n   One media type (audio/GSM-HR-08) has been defined,
    and it has been\n   registered in the media types registry; see Section 7.1.\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Congestion Control\n   The general congestion control considerations for
    transporting RTP\n   data apply; see RTP [RFC3550] and any applicable RTP profiles,
    e.g.,\n   \"RTP/AVP\" [RFC3551].\n   The number of frames encapsulated in each
    RTP payload highly\n   influences the overall bandwidth of the RTP stream due
    to header\n   overhead constraints.  Packetizing more frames in each RTP payload\n
    \  can reduce the number of packets sent and hence the header overhead,\n   at
    the expense of increased delay and reduced error robustness.  If\n   forward error
    correction (FEC) is used, the amount of FEC-induced\n   redundancy needs to be
    regulated such that the use of FEC itself does\n   not cause a congestion problem.\n"
  title: 9.  Congestion Control
- contents:
  - "10.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the security considerations discussed
    in the RTP\n   specification [RFC3550], and in any applicable RTP profile.  The
    main\n   security considerations for the RTP packet carrying the RTP payload\n
    \  format defined within this memo are confidentiality, integrity, and\n   source
    authenticity.  Confidentiality is achieved by encryption of\n   the RTP payload,
    and integrity of the RTP packets through a suitable\n   cryptographic integrity
    protection mechanism.  A cryptographic system\n   may also allow the authentication
    of the source of the payload.  A\n   suitable security mechanism for this RTP
    payload format should\n   provide confidentiality, integrity protection, and at
    least source\n   authentication capable of determining whether or not an RTP packet
    is\n   from a member of the RTP session.\n   Note that the appropriate mechanism
    to provide security to RTP and\n   payloads following this may vary.  It is dependent
    on the\n   application, the transport, and the signaling protocol employed.\n
    \  Therefore, a single mechanism is not sufficient, although if\n   suitable,
    the usage of the Secure Real-time Transport Protocol (SRTP)\n   [RFC3711] is recommended.
    \ Other mechanisms that may be used are\n   IPsec [RFC4301] and Transport Layer
    Security (TLS) [RFC5246] (e.g.,\n   for RTP over TCP), but other alternatives
    may also exist.\n   This RTP payload format and its media decoder do not exhibit
    any\n   significant non-uniformity in the receiver-side computational\n   complexity
    for packet processing, and thus are unlikely to pose a\n   denial-of-service threat
    due to the receipt of pathological data; nor\n   does the RTP payload format contain
    any active content.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Acknowledgements\n   The authors would like to thank Xiaodong Duan, Shuaiyu
    Wang, Rocky\n   Wang, and Ying Zhang for their initial work in this area.  Many\n
    \  thanks also go to Tomas Frankkila for useful input and comments.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3264]   Rosenberg, J. and H. Schulzrinne, \"An Offer/Answer
      Model\n               with Session Description Protocol (SDP)\", RFC 3264,\n
      \              June 2002.\n   [RFC3550]   Schulzrinne, H., Casner, S., Frederick,
      R., and V.\n               Jacobson, \"RTP: A Transport Protocol for Real-Time\n
      \              Applications\", STD 64, RFC 3550, July 2003.\n   [RFC3551]   Schulzrinne,
      H. and S. Casner, \"RTP Profile for Audio and\n               Video Conferences
      with Minimal Control\", STD 65,\n               RFC 3551, July 2003.\n   [RFC4566]
      \  Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n               Description
      Protocol\", RFC 4566, July 2006.\n   [RFC5405]   Eggert, L. and G. Fairhurst,
      \"Unicast UDP Usage\n               Guidelines for Application Designers\",
      BCP 145, RFC 5405,\n               November 2008.\n   [TS46.002]  3GPP, \"Half
      rate speech; Half rate speech processing\n               functions\", 3GPP TS
      46.002, June 2007, <http://\n               www.3gpp.org/ftp/Specs/archive/46_series/46.002/\n
      \              46002-700.zip>.\n   [TS46.020]  3GPP, \"Half rate speech; Half
      rate speech transcoding\",\n               3GPP TS 46.020, June 2007, <http://www.3gpp.org/ftp/\n
      \              Specs/archive/46_series/46.020/46020-700.zip>.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [RFC2198]   Perkins, C., Kouvelas, I., Hodson,
      O., Hardman, V.,\n               Handley, M., Bolot, J., Vega-Garcia, A., and
      S. Fosse-\n               Parisis, \"RTP Payload for Redundant Audio Data\",\n
      \              RFC 2198, September 1997.\n   [RFC2326]   Schulzrinne, H., Rao,
      A., and R. Lanphier, \"Real Time\n               Streaming Protocol (RTSP)\",
      RFC 2326, April 1998.\n   [RFC2974]   Handley, M., Perkins, C., and E. Whelan,
      \"Session\n               Announcement Protocol\", RFC 2974, October 2000.\n
      \  [RFC3711]   Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n               Norrman,
      \"The Secure Real-time Transport Protocol\n               (SRTP)\", RFC 3711,
      March 2004.\n   [RFC4288]   Freed, N. and J. Klensin, \"Media Type Specifications
      and\n               Registration Procedures\", BCP 13, RFC 4288,\n               December
      2005.\n   [RFC4301]   Kent, S. and K. Seo, \"Security Architecture for the\n
      \              Internet Protocol\", RFC 4301, December 2005.\n   [RFC4855]   Casner,
      S., \"Media Type Registration of RTP Payload\n               Formats\", RFC
      4855, February 2007.\n   [RFC5109]   Li, A., \"RTP Payload Format for Generic
      Forward Error\n               Correction\", RFC 5109, December 2007.\n   [RFC5246]
      \  Dierks, T. and E. Rescorla, \"The Transport Layer Security\n               (TLS)
      Protocol Version 1.2\", RFC 5246, August 2008.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Authors' Addresses\n   Xiaodong Duan\n   China Mobile Communications Corporation\n
    \  53A, Xibianmennei Ave., Xuanwu District\n   Beijing,   100053\n   P.R. China\n
    \  EMail: duanxiaodong@chinamobile.com\n   Shuaiyu Wang\n   China Mobile Communications
    Corporation\n   53A, Xibianmennei Ave., Xuanwu District\n   Beijing,   100053\n
    \  P.R. China\n   EMail: wangshuaiyu@chinamobile.com\n   Magnus Westerlund\n   Ericsson
    AB\n   Farogatan 6\n   Stockholm,   SE-164 80\n   Sweden\n   Phone: +46 8 719
    0000\n   EMail: magnus.westerlund@ericsson.com\n   Karl Hellwig\n   Ericsson AB\n
    \  Ericsson Allee 1\n   52134 Herzogenrath\n   Germany\n   Phone: +49 2407 575-2054\n
    \  EMail: karl.hellwig@ericsson.com\n   Ingemar Johansson\n   Ericsson AB\n   Laboratoriegrand
    11\n   SE-971 28 Lulea\n   Sweden\n   Phone: +46 73 0783289\n   EMail: ingemar.s.johansson@ericsson.com\n"
  title: Authors' Addresses
