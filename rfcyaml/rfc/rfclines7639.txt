Abstract This specification allows HTTP CONNECT requests to indicate what protocol is intended to be used within the tunnel once established, using the ALPN header field.
The HTTP CONNECT method (Section 4.3.6 of [RFC7231]) requests that the recipient establish a tunnel to the identified origin server and thereafter forward packets, in both directions, until the tunnel is closed.
Such tunnels are commonly used to create end to end virtual connections through one or more proxies.
The ALPN HTTP header field identifies the protocol or protocols that the client intends to use within a tunnel that is established using CONNECT.
This uses the Application Layer Protocol Negotiation (ALPN)
For a tunnel that is then secured using Transport Layer Security (TLS) [RFC5246], the header field carries the same application protocol label as will be carried within the TLS handshake [RFC7301].
If there are multiple possible application protocols, all of those application protocols are indicated.
The ALPN header field carries an indication of client intent only.
An ALPN identifier is used here only to identify the application protocol or suite of protocols that the client intends to use in the tunnel.
No negotiation takes place using this header field.
In TLS, the final choice of application protocol is made by the server from the set of choices presented by the client.
Other substrates could negotiate the application protocol differently.
Proxies do not implement the tunneled protocol, though they might choose to make policy decisions based on the value of the header field.
For example, a proxy could use the application protocol to select appropriate traffic prioritization.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The ALPN HTTP Header Field Clients include the ALPN header field in an HTTP CONNECT request to indicate the application layer protocol that a client intends to use within the tunnel, or a set of protocols that might be used within the tunnel.
Valid values for the protocol field are taken from the "Application  Layer Protocol Negotiation (ALPN) Protocol ID" registry [ALPN IDS] established by [RFC7301].
The ABNF (Augmented Backus Naur Form) syntax for the ALPN header field value is given below.
It uses the syntax defined in Section 1.2 of [RFC7230].
Octets not allowed in tokens ([RFC7230], Section 3.2.6)
MUST be percent encoded as per Section 2.1 of [RFC3986].
When using percent encoding, uppercase hex digits MUST be used.
With these constraints, recipients can apply simple string comparison to match protocol identifiers.
www.example.com ALPN: h2, http%2F1.1 2.3.
When used in the ALPN header field, an ALPN identifier is used to identify an entire application protocol stack, not a single protocol layer or component.
For a CONNECT tunnel that conveys a protocol secured with TLS, the value of the ALPN header field contains the same list of ALPN identifiers that will be sent in the TLS ClientHello message [RFC7301].
Where no protocol negotiation is expected to occur, such as in protocols that do not use TLS, the ALPN header field contains a single ALPN protocol identifier corresponding to the application protocol that is intended to be used.
If an alternative form of protocol negotiation is possible, the ALPN header field contains the set of protocols that might be negotiated.
A proxy can use the value of the ALPN header field to more cleanly and efficiently reject requests for a CONNECT tunnel.
Exposing protocol information at the HTTP layer allows a proxy to deny requests earlier, with better error reporting (such as a 403 status code).
The ALPN header field can be falsified and therefore is not a sufficient basis for authorizing a request.
A proxy could attempt to inspect packets to determine the protocol in use.
This requires that the proxy understand each ALPN identifier.
Protocols like TLS could hide negotiated protocols, or protocol negotiation details could change over time.
Proxies SHOULD NOT break a CONNECT tunnel solely on the basis of a failure to recognize the protocol.
A proxy can use the ALPN header field value to change how it manages or prioritizes connections.
IANA Considerations HTTP header fields are registered within the "Permanent Message Header Field Names" registry maintained by IANA [MSG HDRS].
This document defines and registers the ALPN header field, according to [RFC3864] as follows:
Header Field Name:  ALPN Protocol:
Section 2 of this document (RFC 7639)
Internet Engineering Task Force 4.
In case of using HTTP CONNECT to a TURN
(Traversal Using Relays around NAT,
[RFC5766]) server, the security considerations of Section 4.3.6 of [RFC7231] apply.
SHOULD restrict its use to a limited set of known ports or a configurable whitelist of safe request targets.
" The ALPN header field described in this document is OPTIONAL.
Clients and HTTP proxies could choose not to support it and therefore either fail to provide it or ignore it when present.
If the header field is not available or is ignored, a proxy cannot identify the purpose of the tunnel and use this as input to any authorization decision regarding the tunnel.
This is indistinguishable from the case where either client or proxy does not support the ALPN header field.
There is no confidentiality protection for the ALPN header field.
ALPN identifiers that might expose confidential or sensitive information SHOULD NOT be sent, as described in Section 5 of [RFC7301].
The value of the ALPN header field could be falsified by a client.
If the data being sent through the tunnel is encrypted (for example, with TLS [RFC5246]), then the proxy might not be able to directly inspect the data to verify that the claimed protocol is the one which is actually being used, though a proxy might be able to perform traffic analysis [TRAFFIC].
Therefore, a proxy cannot rely on the value of the ALPN header field as a policy input in all cases.
