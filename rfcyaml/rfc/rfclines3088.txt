Abstract The OpenLDAP Project is operating an experimental LDAP (Lightweight Directory Access Protocol)
referral service known as the "OpenLDAP Root Service".
The automated system generates referrals based upon service location information published in DNS SRV RRs (Domain Name System location of services resource records).
This document describes this service.
Background LDAP [RFC2251] directories use a hierarchical naming scheme inherited from X.500 [X500].
Traditionally, X.500 deployments have used a geo political naming scheme (e.g., CN Jane Doe,OU Engineering,O Example,ST CA,C US).
However, registration infrastructure and location services in many portions of the naming hierarchical are inadequate or nonexistent.
The construction of a global directory requires a robust registration infrastructure and location service.
Use of Internet domain based naming [RFC2247] (e.g., UID jdoe,DC eng,DC example,DC net) allows LDAP directory services to leverage the existing DNS [RFC1034] registration infrastructure and DNS SRV [RFC2782]
resource records can be used to locate services [LOCATE].
The Glue Most existing LDAP implementations do not support location of directory services using DNS SRV resource records.
However, most servers support generation of referrals to "superior" server(s).
This service provides a "root" LDAP service which servers may use as their superior referral service.
Client may also use the service directly to locate services associated with an arbitrary Distinguished Name [RFC2253] within the domain based hierarchy.
The mechanisms used by service are experimental.
The descriptions provided by this document are not definitive.
Definitive mechanisms shall be published in a Standard Track document(s). 2.
Generating Referrals based upon DNS SRV RRs
This service returns referrals generated from DNS SRV resource records [RFC2782].
DN to Domain Name Mapping
; } continue; } domain   null; } Examples:
A later incarnation will use a Standard Track mechanism.
A later incarnation of this service may use a right to left algorithm.
RFC 2247 does not state how one can map the domain representing the root of the domain tree to a DN.
We suggest the root of the domain tree be mapped to "DC ." and that this be reversable.
RFC 2247 states that domain "example.net" should be mapped to the DN "DC example,DC net", not to "DC example,DC net,DC .".
As it is not our intent to introduce or support an alternative domain to DN mapping, the algorithm ignores domainComponents to the left of "DC .".
RFC 2247 states that domain "example.net" should be mapped to the DN "DC example,DC net", not to
As it is not our intent to introduce or support an alternative domain to DN mapping, the algorithm ignores domainComponents to the left of "DC ." and "DC .
if further domainComponents are found to the right.
RFC 2247 states that value of an DC attribute type is a domain component.
It should not contain multiple domain components.
A later incarnation of this service may map this domain to null or be coded to return invalid DN error.
Later incarnation of this service may abort processing if the resulting domain is a top level domain.
The root service locates services associated with a given fully qualified domain name by querying the Domain Name System for LDAP SRV resource records.
For the domain example.net, the service would do a issue a SRV query for the domain " ldap.
A successful query will return one or more resource records of the form:  ldap.
IN SRV 0 0 389 ldap.example.net.
If no LDAP SRV resource records are returned or any DNS error occurs, the service aborts further processing and returns noSuchObject.
Later incarnations of this service will better handle transient errors.
Constructing an LDAP Referrals For each DNS SRV resource record returned for the domain, a LDAP URL [RFC2255] is constructed.
For the above resource record, the URL would be: ldap://ldap.example.net:389/
These URLs are then returned in the referral.
The URLs are currently returned in resolver order.
That is, the server itself does not make use of priority or weight information in the SRV resource records.
A later incarnation of this service may.
This section describes how the service performs basic LDAP operations.
The service supports operations extended through certain controls as described in a later section.
Basic Operations Basic (add, compare, delete, modify, rename, search) operations return a referral result if the target (or base)
DN can be mapped to a set of LDAP URLs as described above.
Otherwise a noSuchObject response or other appropriate response is returned.
The service accepts "anonymous" bind specifying version 2 or version 3 of the protocol.
All other bind requests will return a non  successful resultCode.
In particular, clients which submit clear text credentials will be sent an unwillingToPerform
resultCode with a cautionary text regarding providing passwords to strangers.
As this service is read only, LDAPv3 authentication [RFC2829] is not supported.
Unbind Operations Upon receipt of an unbind request, the server abandons all outstanding requests made by client and disconnects.
The service currently does recognize any extended operation.
Later incarnations of the service may support Start TLS [RFC2830] and other operations.
A later incarnation of this service may return unwillingToPerform for all update operations as this is an unauthenticated service.
The service supports the ManageDSAit control.
Unsupported controls are serviced per RFC 2251.
The server recognizes and honors the ManageDSAit control [NAMEDREF] provided with operations.
If DNS location information is available for the base DN itself, the service will return unwillingToPerform for non search operations.
For search operations, an entry will be returned if within scope and matches the provided filter.
For example: c: searchRequest { base "DC example,DC net" scope base filter (objectClass  )
} s: searchEntry { dn: DC example,DC net objectClass: referral objectClass:
example ref: ldap://ldap.example.net:389/ associatedDomain: example.net } s: searchResult { success }
If DNS location information is available for the DC portion of a subordinate entry, the service will return noSuchObject with the matchedDN set to the DC portion of the base for search and update operations.
c: searchRequest { base "CN subordinate,DC example,DC net" scope base filter (objectClass  )
searchResult { noSuchObject matchedDN "DC example,DC net" } 5.
Using the Service Servers may be configured to refer superior requests to <ldap://root.openldap.org:389>.
Though clients may use the service directly, this is not encouraged.
Clients should use a local service and only use this service when referred to it.
The service supports LDAPv3 and LDAPv2
[LDAPv2 ] clients over TCP/IPv4.
Future incarnations of this service may support TCP/IPv6 or other transport/internet protocols.
This service currently runs on a single host.
This host and associated network resources are not yet exhausted.
If they do become exhausted, we believe we can easily scale to meet the demand through common distributed load balancing technics.
The service can also easily be duplicated locally.
This service has able avoided known interoperability issues in supporting variants of LDAP.
The server implements all features of LDAPv3 [RFC2251] necessary to provide the service.
6.2.2. LDAPv2 LDAPv2 [RFC1777] does not support the return of referrals and hence may not be referred to this service.
Though a LDAPv2 client could connect and issue requests to this service, the client would treat any referral returned to it as an unknown error.
[LDAPv2 ] provides a number of extensions to LDAPv2, including referrals.
LDAPv2 , like LDAPv3, does not require a bind operation before issuing of other operations.
As the referral representation differ between LDAPv2  and LDAPv3, the service returns LDAPv3 referrals in this case.
However, as commonly deployed LDAPv2
clients issue bind requests (for compatibility with LDAPv2 servers), this has not generated any interoperability issues (yet).
A future incarnation of this service may drop support for LDAPv2  (and LDAPv2).
CLDAP CLDAP [RFC1798] does not support the return of referrals and hence is not supported.
This service provides information to "anonymous" clients.
This information is derived from the public directories, namely the Domain Name System.
The use of authentication would require clients to disclose information to the service.
This would be an unnecessary invasion of privacy.
The lack of encryption allows eavesdropping upon client requests and responses.
A later incarnation of this service may support encryption (such as via Start TLS
Information integrity protection is not provided by the service.
The service is subject to varies forms of DNS spoofing and attacks.
LDAP session or operation integrity would provide false sense of security concerning the integrity of DNS information.
A later incarnation of this service may support DNSSEC and provide integrity protection (via SASL, TLS, or IPSEC).
The service is subject to a variety of denial of service attacks.
The service is capable of blocking access by a number of factors.
This capability have yet to be used and likely would be ineffective in preventing sophisticated attacks.
Later incarnations of this service will likely need better protection from such attacks.
Conclusions DNS is good glue.
By leveraging of the Domain Name System, global LDAP directories may be built without requiring a protocol specific registration infrastructures.
In addition, use of DNS service location allows global directories to be built "ad hoc".
That is, anyone with a domain name can participate.
There is no requirement that the superior domain participate.
Additional Information Additional information about the OpenLDAP Project and the OpenLDAP Root Service can be found at <http://www.openldap.org/>.
