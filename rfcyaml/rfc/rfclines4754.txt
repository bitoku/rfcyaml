Abstract This document describes how the Elliptic Curve Digital Signature Algorithm (ECDSA) may be used as the authentication method within the Internet Key Exchange (IKE) and Internet Key Exchange version 2 (IKEv2) protocols.
ECDSA may provide benefits including computational efficiency, small signature sizes, and minimal bandwidth compared to other available digital signature methods.
This document adds ECDSA capability to IKE and IKEv2 without introducing any changes to existing IKE operation.
The Internet Key Exchange, or IKE [IKE], is a key agreement and security negotiation protocol; it is used for key establishment in IPsec.
In the initial set of exchanges, both parties must authenticate each other using a negotiated authentication method.
In the original version of IKE, this occurs in Phase 1; in IKEv2, it occurs in the exchange called IKE AUTH.
One option for the authentication method is digital signatures using public key cryptography.
Currently, there are two digital signature methods defined for use within Phase 1 and IKE AUTH:
RSA signatures and Digital Signature Algorithm (DSA)
Digital Signature Standard (DSS) signatures.
This document introduces ECDSA signatures as a third method.
For any given level of security against the best attacks known, ECDSA signatures are smaller than RSA signatures, and ECDSA keys require less bandwidth than DSA keys [LV]; there are also advantages of computational speed and efficiency in many settings.
Additional efficiency may be gained by simultaneously using ECDSA for IKE/IKEv2 authentication and using elliptic curve groups for the IKE/IKEv2 key exchange.
Implementers of IPsec and IKE
/IKEv2 may therefore find it desirable to use ECDSA as the Phase 1/IKE AUTH authentication method.
The key word "SHALL" in this document is to be interpreted as described in [RFC2119].
The Elliptic Curve Digital Signature Algorithm (ECDSA) is the elliptic curve analogue of the DSA (DSS) signature method [DSS].
It is defined in the ANSI X9.62 standard [X9.62 2003].
Other compatible specifications include FIPS 186 2 [DSS], IEEE 1363
, IEEE 1363A [IEEE 1363A], and SEC1 [SEC].
ECDSA signatures are smaller than RSA signatures of similar cryptographic strength.
ECDSA public keys (and certificates) are smaller than similar strength DSA keys, resulting in improved communications efficiency.
Furthermore, on many platforms, ECDSA operations can be computed more quickly than similar strength RSA or DSA operations (see [LV] for a security analysis of key sizes across public key algorithms).
These advantages of signature size, bandwidth, and computational efficiency may make ECDSA an attractive choice for many IKE and IKEv2 implementations.
Specifying ECDSA within IKE and
The original IKE key negotiation protocol consists of two phases, Phase 1 and Phase 2.
Within Phase 1, the two negotiating parties authenticate each other using either pre shared keys, digital signatures, or public key encryption.
The IKEv2 key negotiation protocol begins with two exchanges, IKE SA INIT and IKE AUTH.
When not using extensible authentication, the IKE AUTH exchange includes a digital signature or Message Authentication Code (MAC) on a block of data.
The IANA assigned attribute number for authentication using generic ECDSA in IKE
is 8 (see [IANA IKE]), but the corresponding list of IKEv2 authentication methods does not include ECDSA (see [IANA IKEv2]).
Moreover, ECDSA cannot be specified for IKEv2 independently of an associated hash function since IKEv2 does not have a transform type for hash functions.
For this reason, it is necessary to specify the hash function as part of the signature algorithm.
Furthermore, the elliptic curve group must be specified since the choice of hash function depends on it as well.
As a result, it is necessary to specify three signature algorithms, named ECDSA 256, ECDSA 384, and ECDSA 521.
Each of these algorithms represents an instantiation of the ECDSA algorithm using a particular elliptic curve group and hash function.
The three hash functions are specified in [SHS].
For reasons of consistency, this document defines the signatures for IKE in the same way.
The elliptic curve groups, including their base points, are specified in [IKE ECP].
Security Considerations Since this document proposes new digital signatures for use within IKE and IKEv2, many of the security considerations contained within [IKE] and [IKEv2] apply here as well.
Implementers should ensure that appropriate security measures are in place when they deploy ECDSA within IKE or IKEv2.
ECDSA 256, ECDSA 384, and ECDSA 521 are designed to offer security comparable with the AES 128, AES 192, and AES 256 respectively.
IANA Considerations IANA updated its registry of IPsec authentication methods in [IANA IKE] and its registry of IKEv2 authentication methods in [IANA IKEv2] to include ECDSA 256, ECDSA 384, and ECDSA 521.
When ECDSA 256, ECDSA 384, or ECDSA 521 is used as the digital signature in IKE or IKEv2, the signature payload SHALL contain an encoding of the computed signature consisting of the concatenation of a pair of integers r and s.
The definitions of r and s are given in Section 8 of this document.
The bit lengths of r and s are enforced, if necessary, by pre pending the value with zeros.
The following are examples of the IKEv2 authentication payload for each of the three signatures specified in this document.
The following notation is used.
The Diffie Hellman group is given by the elliptic curve y^2
If (x,y) is a point on the curve (i.e., x and y satisfy the above equation), then
(x,y)^n denotes the scalar multiple of the point (x,y) by the integer n; it is another point on the curve.
In the literature, the scalar multiple is typically denoted n(x,y); the notation (x,y)^n is used to conform to the notation used in [IKE], [IKEv2], and [IKE ECP].
The group order for the curve group is denoted q.
The generator is denoted g (gx,gy).
The hash of the message is denoted h.
The signer's static private key is denoted w; it is an integer between zero and q.
The signer's static public key is g^w (gwx,gwy).
The ephemeral private key is denoted k; it is an integer between zero and q.
The ephemeral public key is g^k (gkx,gky).
The quantity kinv is the integer between zero and q
The first signature component is denoted r; it is equal to gkx reduced modulo q.
The second signature component is denoted s; it is equal to (
h r w) kinv reduced modulo q.
The test vectors below also include the data for verifying the ECDSA signature.
The verifier computes h and the quantity sinv, which is the integer between zero and q
u   h sinv modulo q and
v   r sinv modulo q.
The verifier computes (gx,gy)^u   (gux,guy) and (gwx,gwy)^v
The verifier computes the sum (sumx,sumy)
(gwvx,gwvy) where   denotes addition of points on the elliptic curve.
The signature is verified if sumx modulo q
ECDSA 256 IANA assigned the ID value 9 to ECDSA 256.
The parameters for the group for this signature are p: FFFFFFFF 00000001 00000000 00000000 00000000
The static and ephemeral keys are given by w:
The SHA 256 hash of the message "abc" (hex 616263) is h: BA7816BF 8F01CFEA 414140DE
F20015AD The signature of the message is (r,s)
The quantities required for verification of the signature are sinv: 33BDC294 E90CFAD6
The signature is valid since sumx modulo q equals r.
If the signature (r,s) were the one appearing in the authentication payload, then the payload would be as follows.
899256CE 7594BB1E A0C89212 748BFF3B 3D5B0315 8.2.
ECDSA 384 IANA assigned the ID value 10 to ECDSA 384.
The parameters for the group for this signature are p:
FE814112 0314088F 5013875A C656398D 8A2ED19D
FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
The static and ephemeral keys are given by w: 0BEB6466 34BA8773 5D77AE48 09A0EBEA 865535DE
96281BF8 DD5E0525 CA049C04 8D345D30 82968D10
A1895009 6EB7463B 854D7FA9 92F934D9 27376285
B46F53DD AB2C6994 8084E293 0F1C8F7E 08E07C9C
The SHA 384 hash of the message "abc" (hex 616263) is h:
The signature of the message is (r,s) where kinv: EB12876B F6191A29 1AA5780A 3887C3BF E7A5C7E3 21CCA674 886B1228 D9BB3D52 918EF19F
B46F53DD AB2C6994 8084E293 0F1C8F7E 08E07C9C
The quantities required for verification of the signature are sinv: 06EFACEE
u: CA5E3714 B4B68BB8 5AF0BC69 E12B16C8 8FAFA26A
7D731721 ABE62CC0 1165ABFD 847088E9 v:
5F1A4563 5435899A C24AEF06 3947CA47 951E89F6 83D73172 F964C359
A9DB4E64 8422E370 F19ED1A9 C699769E 01EC9A30
45882DC2 CF367F74 3FC02961 2D5B96FC F9A09E28
B46F53DD AB2C6994 8084E293 0F1C8F7E 08E07C9C
The signature is valid since sumx modulo q equals r.
If the signature (r,s) were the one appearing in the authentication payload, then the payload would be as follows.
B46F53DD AB2C6994 8084E293 0F1C8F7E 08E07C9C
ECDSA 521 IANA assigned the ID value 11 to ECDSA 521.
The parameters for the group for this signature are p: 01FFFFFF
FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFFFFFF FFFF b
3951EC7E 937B1652 C0BD3BB1 BF073573 DF883D2C 34F1EF45 1FD46B50
B71E9138 6409 gx: 00C6858E 06B70404
E9CD9E3E CB662395 B4429C64 8139053F B521F828 AF606B4D
The static and ephemeral keys are given by w: 0065FDA3
D704ADF7 8B570FFA D6F062E9 5C7E0C5D 5481C5B1
E6E85317 D9DF45CA D7803C6C 20035B2F 3FF63AFF
1C077577 DA3F4286 C58F0AEA E643 k:
B1EF825F F24F42F9 B4A4BD73 82CFC337 8A540B1B 7F0C1B95
988534FD E8318FC6 AAAAB68E 2E6F4339 B19F2F28 1A7E0B22 C269D93C F8794A92 78880ED7
The hash of the message "abc" (hex 616263) is SHA 512(616263):
DDAF35A1 93617ABA CC417349 AE204131 12E6FA4E
Therefore, the quantity h is h:
3C23A3FE EBBD454D 4423643C E80E2A9A C94FA54C
The signature of the message is (r,s)
E5A4EEBD 0905F425 2400B0AE 73B49E33 23BCE258
E51D9343 46D71593 A80C8C62 FE229DDF 5D2B64B7 AF4A0837
988534FD E8318FC6 AAAAB68E 2E6F4339 B19F2F28 1A7E0B22 C269D93C F8794A92 78880ED7
017705A7 030290D1 CEB605A9 A1BB03FF 9CDD521E
The quantities required for verification of the signature are sinv: 00DDA6B8 83CB36BF
32D8 v: 0069BB0C BA5A6FC8 8A08C0AD AA88F5A5
006E62C4 30CE545E 9C918F04 D852DA13 47CC6A3E
25BA8D60 BF03 gux: 00921F3E CEAF579C FDDA6AF9 C1728E5B
DA1ED5DE A9A6EF09 85D965AE 98BCF129 855C6C4F 3311 guy: 01812CBF E8D08BE9 0CD6AB5D 2ED107A0
988534FD E8318FC6 AAAAB68E 2E6F4339 B19F2F28 1A7E0B22 C269D93C F8794A92 78880ED7
The signature is valid since sumx modulo q equals r.
If the signature (r,s) were the one appearing in the authentication payload, then the payload would be as follows.
988534FD E8318FC6 AAAAB68E 2E6F4339 B19F2F28 1A7E0B22 C269D93C F8794A92 78880ED7
