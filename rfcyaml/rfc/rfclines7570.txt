Abstract RFC 5420 extends RSVP TE to specify or record generic attributes that apply to the whole of the path of a Label Switched Path (LSP).
This document defines an extension to the RSVP Explicit Route Object (ERO) and Record Route Object (RRO) to allow them to specify or record generic attributes that apply to a given hop.
Label Switched Paths (LSPs) can be route constrained by making use of the Explicit Route Object (ERO) and related subobjects as defined in [RFC3209], [RFC3473], [RFC3477], [RFC4873], [RFC4874], [RFC5520], and [RFC5553].
Several documents have identified the need for attributes that can be targeted at specific hops in the path of an LSP, including [RFC6163], [WSON SIG], [RFC7571], or [OBJ FUN].
This document provides a generic mechanism for use by these other documents.
RSVP already supports generic extension of LSP attributes in [RFC5420].
In order to support current and future ERO constraint extensions, this document provides a mechanism to define per hop attributes.
The document describes a generic mechanism for carrying information related to specific nodes when signaling an LSP.
This document does not restrict what that information can be used for.
The defined approach builds on LSP attributes defined in [RFC5420] and enables attributes to be expressed in ERO and Secondary Explicit Route Objects (SEROs).
A new ERO subobject is defined, containing a list of generic per hop attributes.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The ERO Hop Attributes subobject is OPTIONAL.
If used, it is carried in the ERO or SERO.
The subobject uses the standard format of an ERO subobject.
The length is variable and content is a list of Hop Attributes TLVs defined in Section 2.2.
The size of the ERO subobject limits the size of the Hop Attributes TLV to 250 bytes.
The typical size of currently defined and forthcoming LSP ATTRIBUTE TLVs applicable to a specific hop (WSON SIGNALING, Objective Function (OF), and Metric) is not foreseen to exceed this limit.
The ERO Hop Attributes subobject is defined as follows:
The L, Type, and Length parameters are as defined in [RFC3209], Section 4.3.3.
The L bit MUST be set to 0.
The Type for the ERO Hop Attributes subobject is 35.
The Hop Attributes TLVs are encoded as defined in Section 2.2.
Reserved MUST be set to 0 when the subobject is inserted in the ERO, MUST NOT be changed when a node processes the ERO, and MUST be ignored on the node addressed by the preceding ERO subobjects.
This bit reflects the LSP REQUIRED ATTRIBUTE and LSP ATTRIBUTE semantic defined in [RFC5420].
When set, it indicates required hop attributes to be processed by the node.
When cleared, it indicates that the hop attributes are not required as described in Section 2.3.
The TLVs as defined in Section 2.2.
Hop Attributes TLVs ERO attributes carried by the new objects defined in this document are encoded within TLVs.
Each object MAY contain one or more TLVs.
There are no ordering rules for TLVs, and interpretation SHOULD NOT be placed on the order in which TLVs are received.
The TLV format is defined in [RFC5420], Section 3.
The Attribute Flags TLV defined in [RFC5420]
is carried in an ERO Hop Attributes subobject.
Flags set in the Attribute Flags TLV [RFC5420] carried in an ERO Hop Attributes subobject SHALL be interpreted in the context of the received ERO.
Only a subset of defined flags are defined as valid for use in Attribute Flags TLV carried in an ERO Hop Attributes subobject.
Invalid flags SHALL be silently ignored.
Unknown flags SHOULD trigger the generation of a PathErr with Error Code "Unknown Attributes Bit" as defined in [RFC5420], Section 5.2.
The set of valid flags are defined in Section 4.3.
The presence and ordering rule of the Attribute Flags TLV in an ERO Hop Attributes subobject is defined by each Flag.
A document defining a flag to be used in an Attribute Flags TLV carried in the ERO
Hop Attributes subobject has to describe:  after which kinds of ERO subobject the flag is valid,  if ordering of the flag and other ERO subobjects associated with the same hop (e.g., Label subobjects) is significant,  if ordering is significant, how the flag is interpreted in association with the preceding subobjects, and  any flag modification rules that might apply.
As described in [RFC3209], the ERO is managed as a list of subobjects each identifying a specific entity, an abstract node, or a link that defines a waypoint in the network path.
Identifying subobjects of various types are defined in [RFC3209], [RFC3477], [RFC4873], [RFC4874], [RFC5520], and [RFC5553].
[RFC3473] modified the ERO list by allowing one or two Label subobjects to be interposed in the list after a subobject identifying a link.
One or more ERO Hop Attributes subobjects applicable to a particular hop
MAY be inserted directly after any of the existing identifying subobjects defined in[RFC3209], [RFC3477], [RFC4873], [RFC4874], [RFC5520], and [RFC5553].
If any Label subobjects are present for a hop, the ERO Hop Attributes
MAY also be inserted after the Label subobjects.
The attributes specified in an ERO Hop Attributes subobject apply to the immediately preceding subobject(s) in the ERO subobject list.
A document defining a specific Hop Attributes TLV has to describe:  after which kinds of ERO subobject they are valid,  if ordering of the Hop Attributes subobject and other ERO subobjects associated with the same hop (e.g., Label subobjects) is significant,  if ordering is significant, how the attribute is interpreted in association with the preceding ERO subobjects, and  any TLV modification rules that might apply.
For instance, subobject presence rules can be defined by describing rules similar to [RFC4990], Section 6.1.
If a node is processing an ERO Hop Attributes subobject and does not support the handling of the subobject, it will behave as described in [RFC3209] when an unrecognized ERO subobject is encountered.
This node will return a PathErr with Error Code "Routing Error" and Error Value "
Bad EXPLICIT ROUTE object" with
the EXPLICIT ROUTE object included, truncated (on the left) to the offending unrecognized subobject.
When the R bit is set, a node MUST examine the attributes TLV present in the subobject following the rules described in [RFC5420], Section 5.2.
When the R bit is not set, a node MUST examine the attributes TLV present in the subobject following the rules described in [RFC5420], Section 4.2.
A node processing an ERO Hop Attributes subobject with a Hop Attributes TLV longer than the ERO subobject SHOULD return a PathErr with Error Code "Routing Error" and
Error Value "Bad EXPLICIT ROUTE object" with
the EXPLICIT ROUTE object included, truncated (on the left) to the offending malformed subobject.
A processing node MUST NOT originate a Hop Attributes TLV longer than the ERO Hop Attributes subobject.
The processing of the Hop Attributes TLVs SHOULD be described in the documents defining them.
In some cases, it is important to determine if an OPTIONAL hop attribute has been processed by a node.
Encoding The RRO Hop Attributes subobject is OPTIONAL.
If used, it is carried in the RECORD ROUTE object.
The subobject uses the standard format of an RRO subobject.
The RRO Hop Attributes subobject is defined as follows:
The Type and Length parameters are as defined in [RFC3209], Section 4.4.1.
The Type for the RRO Hop Attributes subobject is 35.
The Hop Attributes TLVs are encoded as defined in Section 2.2.
Reserved MUST be set to 0 when the subobject is inserted in the RRO, MUST NOT be changed when a node processes the RRO, and MUST be ignored on the node addressed by the preceding RRO subobjects.
The processed or additional Hop Attributes TLVs, using the format defined in Section 2.2.
The RRO rules defined in [RFC3209] are not changed.
The RRO Hop Attributes subobject MUST be pushed after the RRO Attributes subobject (if present) as defined in [RFC5420].
The RRO Hop Attributes subobject MAY be present between a pair of subobjects identifying the Label Switching Router (LSR) or links.
Unless local policy applies, all such subobjects SHOULD be forwarded unmodified by transit LSRs.
It is noted that a node (e.g., a domain edge node) MAY edit the RRO to prune/modify the RRO, including the RRO Hop Attributes subobject before forwarding due to confidentiality policy or other reasons (for instance, RRO size reduction).
Reporting Compliance with ERO Hop Attributes
To report that an ERO hop attribute has been considered, or to report an additional attribute, an LSR can add a RRO Hop Attributes subobject with the Hop Attributes TLV, which describes the attribute to be reported.
The requirement to report compliance MUST be specified in the document that defines the usage of a hop attribute.
Compatibility with RRO Attributes Subobject
The RRO Hop Attributes subobject extends the capability of the RRO Attributes subobject defined in [RFC5420], Section 7.2 by allowing the node to report the attribute value.
The mechanism defined in this document is compatible with the RRO Attributes subobject using the following procedures.
For LSP attributes signaled in the LSP ATTRIBUTES or LSP REQUIRED ATTRIBUTES objects, a node SHOULD use the RRO Attributes subobject to report processing of those attributes.
For LSP attributes signaled in the ERO Hop Attributes subobject and not in the LSP ATTRIBUTES or LSP REQUIRED ATTRIBUTES objects, if a node desires to report the attributes, it SHOULD use the RRO Hop Attributes subobject and SHOULD NOT use the RRO Attributes subobject.
Ingress nodes not supporting the RRO Hop Attributes subobject will drop the information, as described in [RFC3209], Section 4.4.5.
A node can use the RRO Hop Attributes subobject to report an LSP attribute signaled in LSP ATTRIBUTES or LSP REQUIRED ATTRIBUTES only if the following conditions are met: The attribute and its corresponding flag is allowed on both the LSP ATTRIBUTES or LSP REQUIRED ATTRIBUTES and LSP Hop Attributes subobject.
The reporting of an LSP attribute signaled in LSP ATTRIBUTES or LSP REQUIRED ATTRIBUTES in the RRO Hop Attribute is specified in the document defining that LSP attribute.
ERO Hop Attributes Subobject IANA manages the "Resource Reservation Protocol (RSVP)
Parameters" registry located at <http://www.iana.org/assignments/rsvp parameters
Per this document, IANA has made an allocation in the Sub object type 20 EXPLICIT ROUTE Type 1 Explicit Route registry.
This document introduces a new ERO subobject:
This document, Section 2 4.2.
Hop Attributes Subobject IANA manages the "Resource Reservation Protocol (RSVP)
Parameters" registry located at <http://www.iana.org/assignments/rsvp parameters
Per this document, IANA has made an allocation in the Sub object type 21 ROUTE RECORD Type 1 Route Record registry.
This value is the same as that in Section 4.1.
This document, Section 3 4.3.
Existing Attribute Flags IANA manages the "Attribute Flags" registry as part of the "Resource Reservation Protocol Traffic Engineering (RSVP TE) Parameters" registry located at <http://www.iana.org/assignments/rsvp
A new column in the registry is introduced by this document.
This column indicates if the flag is permitted to be used in an Attribute Flags TLV carried in the ERO Hop Attributes subobject.
The column uses the heading "ERO" and the registry has been updated as follows:
This Document 2   Segment based re
[RFC5150] desired This Document 6
No  [RFC6790] Capability This Document 10
This Document 12  SRLG collection
This Document registered 2014 09 11, expires 2015 09 11)
New allocation requests to this registry SHALL indicate the value to be used in the ERO column.
Existing LSP Attribute TLVs IANA manages the "Resource Reservation Protocol Traffic Engineering (RSVP TE) Parameters" registry located at <http://www.iana.org/assignments/rsvp
The "Attributes TLV Space" registry manages the following attributes, as defined in [RFC5420]:  TLV Type (T field value)
Whether allowed on LSP ATTRIBUTES object  Whether allowed on LSP REQUIRED ATTRIBUTES object Per this document, IANA has added the following information for each TLV in the RSVP TLV type identifier registry.
Whether allowed on LSP Hop Attributes ERO subobject The existing registry has been modified for existing TLVs as follows.
The following abbreviations are used below:
LSP A:  Whether allowed on LSP ATTRIBUTES object.
Whether allowed on LSP REQUIRED ATTRIBUTES object.
HOP A:  Whether allowed on LSP Hop Attributes subobject.
LSP A LSP RA HOP A Ref.
This Document 2 Service ID TLV
This Document 3 OAM Configuration
This document adds a new subobject in the EXPLICIT ROUTE and the ROUTE RECORD objects carried in RSVP messages used in MPLS and GMPLS signaling.
It builds on mechanisms defined in [RFC3209] and [RFC5420] and does not introduce any new security.
The existing security considerations described in [RFC2205], [RFC3209], [RFC3473], and [RFC5420] do apply.
As with any RSVP TE signaling request, the procedures defined in this document permit the transfer and reporting of functional preferences on a specific node.
The mechanism added in this document does allow more control of LSP attributes at a given node.
A node SHOULD check the hop attributes against its policies and admission procedures as it does with other inputs.
A node MAY reject the message using existing RSVP Error Codes like "Policy Control Failure" or "Admission Control Failure".
The node MAY also, depending on the specific TLV procedures, modify the requested attribute.
This can reveal information about the LSP request and status to anyone with unauthorized access.
The mechanism described in this document does not contribute to this issue, which can be only resolved by encrypting the content of the whole signaling message.
In addition, the reporting of attributes using the RRO can reveal details about the node that the operator wishes to remain confidential.
The same strategy and policies that apply to other RRO subobjects also apply to this new mechanism.
It is RECOMMENDED that domain boundary policies take the releasing of RRO hop attributes into consideration.
