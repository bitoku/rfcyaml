Abstract This memo allocates code points for four new elliptic curve domain parameter sets over finite prime fields into a registry that was established by the Internet Key Exchange (IKE) but is used by other protocols.
Introduction [RFC5639] defines new elliptic curve domain parameters for curves over a number of different prime fields, each with a "twisted" variant.
These curves have a number of interesting security properties (as described in [EBP]) that make them desirable to use.
IANA maintains a registry for [RFC2409] to map complete domain parameter sets into easily referenced numbers.
While [RFC2409] is deprecated, other protocols, for example [IEEE802.11] and [RFC5931], refer to this registry for its convenience.
Therefore, this memo instructs IANA to allocate new code points for the Brainpool curves defined in [RFC5639] to the registry established by [RFC2409] for use by other protocols.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
2.  Brainpool Elliptic Curves [RFC5639] defines several elliptic curves over finite prime fields (ECP, in the parlance of [RFC2409]).
The domain parameter sets for each of the elliptic curves defined in [RFC5639] are copied here for convenient reference.
The equation for all elliptic curves defined here is: y^2   x^3   ax   b (mod p) Domain parameter sets consist of:  p:
the prime  a, b: parameters to the equation of the curve
x, y: the coordinates of the generator for the group, G  q: the order of the group formed by the generator G  h: the co factor
z: the "twist" (for conversion into twisted curves) [
RFC5639] defines elliptic curves over seven (7) prime fields with a random and a "twisted" variety for each, for a total of fourteen (14) distinct curves.
However, some of those curves are not particularly useful: the 160 bit curves provide only 80 bits of strength and that is too small to be of use in current cryptographic applications, and there is no standard hash function to use with the 196 bit and 320 bit curves
it would make more sense to use the 224 bit and 384 bit curves, respectively, instead.
For this reason, the curves defined over 160 bit, 192 bit, and 320 bit primes are not being added to the registry created by [RFC2409].
The twisted curves in [RFC5639] are isomorphic to the random curves of the same length.
The curve parameter "a" for the twisted curves equals  3 mod p, and there are certain arithmetical advantages to using such curves.
It is possible to convert a point from a random curve (x,y) into a point on the twisted curve (x', y') and back again using this equation: (x',y')
This would allow an implementation to internally use the twisted version of the curve, taking full advantage of the arithmetical advantages, while exchanging points on the random versions of the curve with peers.
Therefore, the twisted curves are not being added to the registry created by [RFC2409].
that desire to use the twisted curves internally MUST refer to [RFC5639] for the complete domain parameter sets, only the "twist" is defined here.
Domain Parameters for the 224 Bit Curve Curve ID:
Domain Parameters for the 256 Bit Curve Curve ID:
Domain Parameters for the 384 Bit Curve Curve ID:
Domain Parameters for the 512 Bit Curve Curve ID:
IANA Considerations IANA has assigned four values from the unassigned portion of the "Group Description" component of the [IANA IKE] registry and updated the registry by appending Table 1 to the registry table.
Security Considerations [EBP] describes the security properties of the curves referenced here.
The curves support security levels of 112 (Section 2.1), 128 (Section 2.2), 192 (Section 2.3), and 256 (Section 2.4).
These security levels assume that when these elliptic curves are used with discrete logarithm cryptography, for example elliptic curve Diffie  Hellman, that the private key used is a uniformly random number in the range [1..(q 1)], where q is the order from the curve's domain parameter set.
In order to achieve system security commensurate with the security level of a particular elliptic curve, it is incumbent upon an implementation to choose key derivation functions, hash functions, pseudo random functions, and ciphers according to the recommendations from [SP800 57].
The notes in Table 1 are an administrative prohibition, not a technical one.
The notes are there because, although [RFC2409] has been deprecated, it is still widely used.
There is a desire among some in the IETF to not do anything that would prolong the use of [RFC2409], and the addition of these curves was perceived as doing just that.
The registry could not have been updated without including notes to indicate that these curves are not for use with [RFC2409] and not updating the [RFC2409] registry would have a detrimental affect on the other protocols that use it.
This section provides some test vectors for example
Diffie Hellman key exchanges using each of the curves defined in Section 2.
The following notation is used in subsequent sections:
the secret key of party A
the x coordinate of the public key of party A
: the y coordinate of the public key of party
the secret key of party B
the x coordinate of the public key of party B
the y coordinate of the public key of party B
x Z: the x coordinate of the shared secret that results from completion of the Diffie Hellman computation
the y coordinate of the shared secret that results from completion of the Diffie Hellman computation A.1.
E2BC681B CE8E3996 3B2E9FC4 15B05283 313DD1A8 BCC055F1 1AE49699
B94232FF BBC350F3 B137628F E6FD134C A.3.
A4FEE035 E39BDB88 5D509D22 4A142FF9 FBCC5CFE 5CCBB302 68EE4748 7ED80448
Z   04CC4FF3 DCCCB07A F24E0ACC 529955B3 6D7C8077
95D28BAC 0CF03A78 41A383B9 5C262B98 3782874C
378AA81F 51B275B2 BE6B7DEE 978EFC73 43EA642E
B41FD2FA F369B1D1 8DCADEED 7E410A7E 251F0831
