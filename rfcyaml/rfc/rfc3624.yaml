- title: __initial_text__
  contents:
  - '     The Media Gateway Control Protocol (MGCP) Bulk Audit Package

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document is being published for the information of the\n \
    \  community.  It describes a non-IETF protocol that is currently being\n   deployed\
    \ in a number of products.  Implementers should be aware of\n   RFC 3015, which\
    \ was developed in the IETF Megaco Working Group and\n   the ITU-T SG16, and which\
    \ is considered by the IETF and the ITU-T to\n   be the standards-based (including\
    \ reviewed security considerations)\n   way to meet the needs that MGCP was designed\
    \ to address.\n"
- title: Abstract
  contents:
  - "Abstract\n   The base Media Gateway Control Protocol (MGCP) includes audit\n\
    \   commands that only allow a Call Agent to audit endpoint and/or\n   connection\
    \ state one endpoint at a time.  This document describes a\n   new MGCP package\
    \ for bulk auditing of a group of gateway endpoints.\n   It allows a Call Agent\
    \ to determine the endpoint naming convention,\n   the list of instantiated endpoints\
    \ as well connection and endpoint\n   state for the group of endpoints.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Bulk Audit Package. . . . . . . . . . . . . . . . . .\
    \ . . . .   2\n       2.1.  Package Definition. . . . . . . . . . . . . . . .\
    \ . . .   2\n             2.1.1. Package Parameters . . . . . . . . . . . . .\
    \ . .   3\n             2.1.2. Bulk Auditing of Non-persistent Virtual\n     \
    \               Endpoints. . . . . . . . . . . . . . . . . . . .  11\n       \
    \      2.1.3. Package Specific Return Codes. . . . . . . . . .  12\n       2.2.\
    \  Examples of Package Use . . . . . . . . . . . . . . . .  13\n             2.2.1.\
    \ Endpoint List. . . . . . . . . . . . . . . . . .  13\n             2.2.2. Connection\
    \ Count List. . . . . . . . . . . . . .  13\n             2.2.3. Connection Mode\
    \ List . . . . . . . . . . . . . .  15\n             2.2.4. Endpoint State . .\
    \ . . . . . . . . . . . . . . .  15\n   3.  IANA Considerations . . . . . . .\
    \ . . . . . . . . . . . . . .  17\n   4.  Security Considerations . . . . . .\
    \ . . . . . . . . . . . . .  17\n   5.  References. . . . . . . . . . . . . .\
    \ . . . . . . . . . . . .  18\n   6.  Authors' Addresses. . . . . . . . . . .\
    \ . . . . . . . . . . .  18\n   7.  Full Copyright Statement. . . . . . . . .\
    \ . . . . . . . . . .  19\n"
- title: 1.   Introduction
  contents:
  - "1.   Introduction\n   The reader is assumed to be familiar with the base MGCP\
    \ protocol [3].\n   The base Media Gateway Control Protocol (MGCP) [3] includes\
    \ audit\n   commands that only allow a Call Agent to audit an endpoint and/or\
    \ a\n   connection state, one endpoint at a time.  This document describes a\n\
    \   new MGCP package for bulk auditing of a group of gateway endpoints.\n   It\
    \ allows a Call Agent to determine the endpoint naming convention,\n   to determine\
    \ the list of instantiated endpoints, and to determine the\n   connection and\
    \ endpoint state for the group of endpoints.  This is\n   particularly important\
    \ in fail-over situations in which there are\n   gateways that have large numbers\
    \ of endpoints.\n   Conventions Used in this Document\n   The key words \"MUST\"\
    , \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in RFC 2119 [2].\n"
- title: 2.  Bulk Audit Package
  contents:
  - '2.  Bulk Audit Package

    '
- title: 2.1.  Package Definition
  contents:
  - "2.1.  Package Definition\n   Package Name: BA\n   Package Version: 0\n   Package\
    \ Description: This package provides the Call Agent the ability\n   to audit and\
    \ obtain high-level view of endpoint and connection state\n   for a group of endpoints\
    \ in a gateway.\n"
- title: 2.1.1.  Package Parameters
  contents:
  - "2.1.1.  Package Parameters\n   A new BulkRequestedInfo parameter is defined for\
    \ use in the\n   AuditEndpoint command.  The parameter can be used to request\
    \ a\n   compact list of EndpointIds or to request a high level view of\n   endpoint\
    \ or connection state for a group of endpoints as defined\n   below:\n      ReturnCode,\n\
    \      [EndPointNameList,]\n      [InstantiatedEndpointList,]\n      [ConnectionCountList,]\n\
    \      [ConnectionModeList,]\n      [EndpointStateList,]\n      [NextEndpointName,]\n\
    \      [ReportedEndpointList]\n      <-- AuditEndPoint(EndpointId,\n         \
    \                 [StartEndpointName,]\n                          [MaxNumEndpoints,]\n\
    \                          [BulkRequestedInfo])\n   Unlike the normal RequestedInfo\
    \ parameter in the base MGCP\n   specification, the BulkRequestedInfo parameter\
    \ associated with the\n   Bulk Audits package can be used with \"all-of\" wildcards\
    \ for auditing\n   a collection of endpoints.  However, it is not an error to\
    \ specify an\n   EndpointId without wildcards.\n   The following sub-sections\
    \ describe the parameters associated with\n   the Bulk Audit Command in detail.\
    \  Sections 2.1.1.1 and 2.1.1.2\n   describe the parameters that can be included\
    \ with a request and\n   sections 2.1.1.3 to 2.1.1.8 describe return parameters.\n"
- title: 2.1.1.1.  StartEndpointName and MaxNumEndpoints Parameters
  contents:
  - "2.1.1.1.  StartEndpointName and MaxNumEndpoints Parameters\n   Because wild-carding\
    \ may not be sufficient to qualify the endpoints\n   of interest, further qualification\
    \ can be provided by including a\n   StartEndpointName (the first endpoint of\
    \ interest) and\n   MaxNumEndPoints (the maximum number of endpoints of interest).\
    \  These\n   parameters are described according to the following Augmented BNF\n\
    \   (ABNF) Syntax (refer to RFC 2234 for ABNF syntax definitions [1]):\n     \
    \ \"BA/SE\" \":\" 0*WSP LocalEndpointName\n      \"BA/NU\" \":\" 0*WSP MaxNumEndpoints\n\
    \   where MaxNumEndpoints is the decimal number of endpoints with a value\n  \
    \ in the range 1 to 65535.  The MaxNumEndpoints parameter SHOULD only\n   be included\
    \ when requesting an audit for an EndpointStateList and/or\n   ConnectionCountList.\
    \  If included in a request for the\n   EndPointNameList or InstantiatedEndpointList,\
    \ it MAY be ignored.\n   Note that only the LocalEndpointName (see ABNF grammar\
    \ in [3]) is\n   provided in request and response parameter lines for this package\n\
    \   rather than the full EndpointName.  This is done for the sake of\n   compactness,\
    \ i.e., the domain name portion is left out since it is\n   already available\
    \ in the command line portion of a given request.\n   If the list of endpoints\
    \ defined by the StartEndpointName and\n   MaxNumEndPoints is outside the range\
    \ designated by the wild-carding,\n   a report will only be returned for endpoints\
    \ up to those specified\n   within the wild-card range.\n"
- title: 2.1.1.2.  BulkRequestedInfo Parameter
  contents:
  - "2.1.1.2.  BulkRequestedInfo Parameter\n   The BulkRequestedInfo parameter line\
    \ is described according to the\n   following ABNF syntax definitions:\n     \
    \ BulkRequestedInfo = \"BA/F:\" 0*WSP\n             *( EndpointOrInstantList *(\"\
    ,\" EndpointOrInstantList))\n           / *( EndpointOrConnState *(\",\" EndpointOrConnState))\n\
    \      EndpointOrConnState = \"BA/C\" / \"BA/M\" /  EndpointStateParam\n     \
    \ EndpointOrInstantList = \"BA/Z\" / \"BA/X\"\n      EndpointStateParam = \"BA/S\"\
    \ \"(\" StateType\n                                         0*(\",\" 0*(WSP) StateType)\"\
    )\"\n      StateType = \"I\" / \"D\" / \"N\" / \"S\" / \"H\"\n   where the BulkRequestedInfo\
    \ parameters have the following meaning:\n      * \"BA/Z\" is a request to return\
    \ EndPointNameList\n      * \"BA/X\" is a request to return InstantiatedEndpointList\n\
    \      * \"BA/C\" is a request to return the ConnectionCountList\n      * \"BA/M\"\
    \ is a request to return the ConnectionModeList\n      * \"BA/S\" is a request\
    \ to return the EndpointStateList\n   Each of the parameters can be provided at\
    \ most once in the\n   BulkRequestedInfo.\n   EndpointStateParam Parameter:\n\
    \   As indicated in the above ABNF, the EndpointStateParam parameter is\n   itself\
    \ parameterized with one or more StateType parameters that\n   define the conditions\
    \ to be evaluated for the endpoint:\n   *  \"I\" - the endpoint is in-service,\n\
    \   *  \"D\" - the endpoint is disconnected (see sections 4.3 and 4.4.7 of\n \
    \     [3] for a discussion on disconnected endpoints),\n   *  \"N\" - the endpoint\
    \ is in the notification state,\n   *  \"L\" - the endpoint is in lockstep state\
    \ (i.e., waiting for an RQNT\n      after a response to a NTFY has occurred while\
    \ in lockstep mode)\n   *  \"S\" - there is an active on-off (OO) or timeout (TO)\
    \ signal on the\n      endpoint,\n   *  \"H\" - the endpoint is in some state\
    \ other than \"idle\".  The\n      meaning of this last parameter depends on the\
    \ type of endpoint:\n      *  The parameter has no meaning for endpoints that\
    \ only provide\n         bearer services (with no state that the endpoint is aware\
    \ of).\n         In this case, the condition is always evaluated to false\n  \
    \       (corresponding to \"idle\").\n      *  For endpoints that have a state\
    \ machine associated with them\n         (such as a CAS endpoint), the endpoint\
    \ MUST be in some state\n         other than the \"idle\" state in order for the\
    \ condition to be\n         evaluated as true.\n      *  In the case where the\
    \ endpoint has hook-state associated with\n         it, the hook-state MUST be\
    \ off-hook.  In the case of digital\n         channel associated signaling (CAS)\
    \ connections, hook-state may\n         be provided in either direction.  If the\
    \ hook-state in either\n         direction is off-hook, the endpoint is considered\
    \ non-idle,\n         i.e., the condition is satisfied.\n   The list of StateTypes\
    \ may be extended in the future.  If an unknown\n   StateType is encountered,\
    \ the command MUST be rejected with error\n   code 803 (i.e., \"unsupported StateType\"\
    ).\n   The report, provided as a result of this request, yields an\n   indication\
    \ of either \"True\", \"False\", or \"Out of Service\" for each\n   endpoint.\
    \  If the endpoint is in-service and any one of the criteria\n   holds true, then\
    \ the report for the endpoint will evaluate to \"True\".\n   A \"False\" indication\
    \ will only be reported if the endpoint is in-\n   service and all criteria evaluate\
    \ to false.  The report thus provides\n   the logical \"OR\" function over the\
    \ conditions audited for endpoints\n   in-service.  Irrespective of the state\
    \ being audited, an \"Out of\n   Service\" indication will always be reported\
    \ if the endpoint is\n   considered out-of-service.\n   Note that the criteria\
    \ \"D\", \"N\", \"L\", \"S\" and \"H\" can only be true if\n   the endpoint is\
    \ in-service, so that requesting \"I\" at the same time\n   (although allowed)\
    \ would be unnecessary (i.e., redundant).\n   Example: If the request for EndpointStateList\
    \ for one or more\n   endpoints includes the parameter line:\n      BA/F: BA/S(D,N)\n\
    \   indicating a request for a report on whether endpoints are\n   disconnected\
    \ or in the notification state.  If a given endpoint is in\n   either a \"disconnected\"\
    \ or \"notification\" state, then the report will\n   indicate \"True\" for that\
    \ endpoint.  If the endpoint is neither in a\n   disconnected state nor in a notification\
    \ state, but is in-service,\n   then the report for that endpoint will indicate\
    \ \"False\".  If the\n   endpoint is out-of-service, then the report for that\
    \ endpoint will\n   indicate \"Out of Service\".\n   In order to only determine\
    \ whether an endpoint is in-service or out-\n   of service, the Call Agent should\
    \ make a request with only the \"I\"\n   StateType parameter.\n"
- title: 2.1.1.3.  EndPointNameList and InstantiatedEndpointList Parameters
  contents:
  - "2.1.1.3.  EndPointNameList and InstantiatedEndpointList Parameters\n   EndPointNameList\
    \ Parameter:\n   The EndPointNameList is a list of the endpoint names (i.e., the\n\
    \   endpoint naming convention for the endpoints configured for service)\n   supported\
    \ by the gateway as qualified by the wildcarded EndPointId,\n   and possibly StartEndPointName\
    \ and MaxNumEndpoints parameters.  This\n   list can include one or more lines\
    \ in the following ABNF format:\n      \"BA/Z:\" 0*WSP RangedLocalName 0*(\",\"\
    \ 0*WSP RangedLocalName)\n   where RangedLocalName is a LocalEndpointName that\
    \ may include the\n   ranged wildcard notation described in Appendix E (section\
    \ E.5) of\n   [3], i.e.,:\n      RangeWildcard = \"[\" NumericalRange *( \",\"\
    \ NumericalRange ) \"]\"\n      NumericalRange     = 1*(DIGIT) [ \"-\" 1*(DIGIT)\
    \ ].\n   Example:\n      ba/z: ds/ds1-1/[1-24], ds/ds1-2/[1-24], ds/ds1-3/[1-24]\n\
    \   or simply:\n      ba/z: ds/ds1-[1-3]/[1-24]\n   Note that, since range wildcards\
    \ use the character \"[\" to indicate\n   the start of a range, the \"[\" character\
    \ MUST NOT be used in endpoint\n   names that use range wildcards.\n   Note that\
    \ the ranged wildcard notation (RangeWildcard above) also\n   allows commas between\
    \ ranges like:\n      ba/z: ds/ds1-1/[1,3-5,8-24]\n   For virtual endpoints, that\
    \ are automatically created and deleted on\n   the fly by the gateway, there is\
    \ a difference between reporting the\n   endpoint names (i.e., the \"naming convention\"\
    ) used in describing the\n   endpoints and reporting the actual endpoints that\
    \ are instantiated at\n   the time the request is made.  For this case:\n   *\
    \  EndPointNameList is a request to return the naming convention and\n   *  InstantiatedEndpointList\
    \ is a request to return the \"real\" (or\n      instantiated) endpoints.\n  \
    \ InstantiatedEndpointList Parameter:\n      The syntax of the InstantiatedEndpointList\
    \ value is the same as\n      the EndPointNameList value returned with EndPointNameList,\
    \ i.e., a\n      number of lines may be returned with the following syntax:\n\
    \         \"BA/X:\" 0*WSP RangedLocalName 0*(\",\" 0*WSP RangedLocalName)\n  \
    \ In the case of hard-wired/physical endpoints (such as DSO's) or other\n   persistent\
    \ endpoints, the InstantiatedEndpointList would normally not\n   be requested.\
    \  However, if it is requested, the\n   InstantiatedEndpointList and the EndPointNameList\
    \ will be the same.\n   For virtual endpoints that are not persistent, an \"all\
    \ of\" wild card\n   (\"*\") is returned for the leftmost term of the name, which\
    \ is\n   dynamically assigned in the EndPointNameList to indicate that\n   arbitrary\
    \ names apply, and that the endpoints are virtual and non-\n   persistent.  The\
    \ \"all of\" wild card notation MUST NOT be used when\n   returning the EndPointNameList\
    \ for persistent endpoints however.  The\n   following example illustrates this:\n\
    \   ba/z: announcement/*\n   ba/z: foo/bar/*\n   ba/z: foo/foo/*\n   The \"all\
    \ of\" wildcard tells us, that \"announcement\" is simply the\n   leftmost term\
    \ for a dynamic set of non-persistent virtual endpoints.\n   To instantiate one\
    \ of these endpoints, we would include the \"any of\"\n   wildcard (e.g., \"announcement/$\"\
    ) as the LocalEndpointName in the\n   EndpointId of a request (e.g., NotificationRequest\
    \ or\n   CreateConnection).  The response would then include the\n   SpecificEndpointId\
    \ indicating the instantiated endpoint.  Also, note\n   in the above example that\
    \ \"foo\" defines two different levels of non-\n   persistent virtual endpoints.\n"
- title: 2.1.1.4.  ConnectionCountList
  contents:
  - "2.1.1.4.  ConnectionCountList\n   The ConnectionCountList indicates the number\
    \ of connections on a\n   series of endpoints.  It consists of a number of lines\
    \ with the\n   following ABNF syntax:\n      \"BA/C:\" 0*WSP NumConnections 0*(NumConnections)\n\
    \   where NumConnections is either:\n   *  a hexadecimal digit indicating the\
    \ number of connections on the\n      endpoint corresponding to the position on\
    \ the list, or\n   *  the letter \"Z\" indicating that there are more than 15\
    \ connections\n      on this endpoint.\n"
- title: 2.1.1.5.  ConnectionModeList
  contents:
  - "2.1.1.5.  ConnectionModeList\n   The ConnectionModeList indicates the connection\
    \ modes for all the\n   connections on a series of endpoints.  It consists of\
    \ a number of\n   lines with the following ABNF syntax:\n      \"BA/M:\" 0*WSP\
    \ ModeOrCount 0*(ModOrCount)\n      ModeOrCount = ConnCount / ConnMode\n     \
    \ ConnMode = \"I\" / \"S\" / \"R\" / \"B\" / \"C\" / \"L\" / \"T\" / \"N\" / \"\
    U\"\n   where ConnCount is either hexadecimal value corresponding to 0-15\n  \
    \ connections on an endpoint or the value \"Z\", indicating that more\n   than\
    \ 15 connections are present.\n   ConnMode indicates the connection mode where:\n\
    \      * \"I\" indicates \"inactive\" connection mode\n      * \"S\" indicates\
    \ \"sendonly\" connection mode\n      * \"R\" indicates \"recvonly\" connection\
    \ mode\n      * \"B\" indicates \"sendrecv\" connection mode\n      * \"C\" indicates\
    \ \"confrnce\" connection mode\n      * \"L\" indicates \"loopback\" connection\
    \ mode\n      * \"T\" indicates \"conttest\" connection mode\n      * \"N\" indicates\
    \ \"netwloop\" connection mode\n      * \"U\" indicates some other connection\
    \ mode\n   For a definition of MGCP connection modes, refer to section 3.2.2.6\n\
    \   of [3].\n   If an endpoint has no connections on it, ModeOrCount is given\
    \ the\n   value \"0\".  If there is one connection associated with the endpoint,\n\
    \   the symbol for the connection mode (ConnMode) is provided.  If, on\n   the\
    \ other hand, there are from 2 to 15 connections, a symbol\n   representing the\
    \ number of connections (ConnCount) is provided\n   followed by a list of symbols\
    \ indicating the connection mode\n   (ConnMode) for each connection.  If there\
    \ are more than 15\n   connections, \"Z\" is indicated for ConnCount and no connection\
    \ modes\n   are provided for the connections on that endpoint.\n"
- title: 2.1.1.6.  EndpointStateList Parameter
  contents:
  - "2.1.1.6.  EndpointStateList Parameter\n   The EndpointStateList gives an overview\
    \ of the endpoint state for a\n   series of endpoints.  It consists of a number\
    \ of lines with the\n   following ABNF syntax:\n      \"BA/S:\" 0*WSP EndPointState\
    \ 0*(EndPointState)\n      EndPointState = \"T\" / \"F\" / \"O\"\n   where:\n\
    \      * \"T\" indicates \"True\"\n      * \"F\" indicates \"False\"\n      *\
    \ \"O\" indicates \"Out of Service\"\n   The \"True\" or \"False\" determination\
    \ is based on the criteria supplied\n   in StateType parameters when the request\
    \ is made.\n   Note that the EndPointState indicator does not say anything about\
    \ the\n   connection state of the endpoint.\n"
- title: 2.1.1.7.  NextEndpointName Parameter
  contents:
  - "2.1.1.7.  NextEndpointName Parameter\n   The NextEndpointName parameter will\
    \ be included in the return, if\n   there are additional endpoints in this gateway\
    \ covered by the wild-\n   carded endpoint name that were not reported, but for\
    \ which\n   information was available to be reported.\n   Note that the NextEndpointName\
    \ is the LocalEndpointName (as opposed\n   to EndpointName) of the next endpoint\
    \ after the last endpoint\n   reported.  The syntax is as follows:\n      \"BA/NE\"\
    \ \":\" 0*WSP LocalEndpointName\n   A gateway may supply a report that is shorter\
    \ than the request if the\n   resulting report would have resulted in a message\
    \ that would be too\n   large (i.e., such that the report is larger than the maximum\
    \ datagram\n   size).  In the case where the gateway supplied a response for less\n\
    \   endpoints than requested, the gateway MUST supply NextEndpointName in\n  \
    \ the response.\n   In order to continue the audit on a following set of endpoints,\
    \ the\n   Call Agent can make a further request by using the NextEndpointName\n\
    \   as the starting point (e.g., as the StartEndpointName in a following\n   request).\n"
- title: 2.1.1.8.  ReportedEndpointList Parameter
  contents:
  - "2.1.1.8.  ReportedEndpointList Parameter\n   A ReportedEndpointList MUST be provided\
    \ in a response line before\n   list(s) of EndpointStateList and/or ConnectionCountList\
    \ in order to\n   clearly specify the list of endpoints that are being reported.\
    \  The\n   ABNF syntax is as follows:\n      \"BA/EL:\" 0*WSP LimitedRangedName\
    \ 0*(\",\" 0*WSP LimitRangedName)\n   where LimitedRangedName is a LocalEndpointName\
    \ that may include a\n   ranged wildcard notation (RangeWildcard syntax indicated\
    \ earlier).\n   However, unlike the RangedLocalName that allows the range wildcard\n\
    \   notation to be used on multiple terms of the local name at the same\n   time,\
    \ LimitedRangedName only allows the range notation to be used for\n   the last\
    \ term, i.e., the following is valid:\n      ba/el: ds/ds1-1/[1,3-5,8-24]\n  \
    \ or\n      ba/el: ds/ds1-1/[1-24], ds/ds1-2/[1-24], ds/ds1-3/[1-24]\n   However,\
    \ the following is not valid:\n      ba/el: ds/ds1-[1-3]/[1-24]\n   Note that\
    \ a single bulk audit request may include a request to return\n   both ConnectionCountList\
    \ and EndpointStateList.  However, the\n   resulting report that includes both\
    \ MUST cover the same endpoints.\n   A single bulk audit request may also include\
    \ a request to return both\n   EndPointNameList and InstantiatedEndpointList.\
    \  However, requests for\n   either an EndPointNameList and/or an InstantiatedEndpointList\
    \ MUST\n   NOT include a request for either ConnectionCountList or\n   EndpointStateList.\n"
- title: 2.1.2.  Bulk Auditing of Non-persistent Virtual Endpoints
  contents:
  - "2.1.2.  Bulk Auditing of Non-persistent Virtual Endpoints\n   Note that gateways\
    \ that have non-persistent virtual endpoints may\n   have instantiated endpoints\
    \ that are disjoint with respect to the\n   name space.  The ReportedEndpointList\
    \ in front of a\n   ConnectionCountList and/or EndpointStateList describes exactly\
    \ which\n   endpoints are being reported.\n   Example:\n      A Call Agent requests\
    \ to know about the EndPointNameList for the\n      endpoints on a conference\
    \ bridge:\n      AUEP 1200 *@gw1.x.net MGCP 1.0\n      BA/F: BA/Z\n   Response:\n\
    \      200 1200 OK\n      ba/z: cnf/*\n   This indicates the naming convention\
    \ but in fact not all of these\n   endpoints are instantiated.  A request for\
    \ the list of instantiated\n   endpoints, i.e.,:\n      AUEP 1201 cnf/*@gw1.x.net\
    \ MGCP 1.0\n      BA/F: BA/X\n   might yield:\n      200 1201 OK\n      ba/x:\
    \ cnf/[1-3]\n      ba/x: cnf/[6-12]\n   indicating that only these particular\
    \ endpoints are instantiated.\n   Suppose the Call Agent now asks for the ConnectionCountList\
    \ i.e.,:\n      AUEP 1202 cnf/*@gw1.x.net MGCP 1.0\n      BA/F: BA/C\n   The resulting\
    \ instantiated virtual endpoints may be disjoint, which\n   would be indicated\
    \ by the ReportedEndpointList in front of the\n   ConnectionCountList, e.g.,:\n\
    \      200 1202 OK\n      ba/el: cnf/[1-3]\n      ba/c: 035\n      ba/el: cnf/[6-12]\n\
    \      ba/c: 3450333\n   or alternatively:\n      200 1202 OK\n      ba/el: cnf/[1-3],\
    \ ba/el: cnf/[6-12]\n      ba/c: 035\n      ba/c: 3450333\n   or\n      200 1202\
    \ OK\n      ba/el: cnf/[1-3], ba/el: cnf/[6-12]\n      ba/c: 0353450333\n"
- title: 2.1.3. Package Specific Return Codes
  contents:
  - "2.1.3. Package Specific Return Codes\n   The following return codes are specific\
    \ to this package:\n      800     Invalid NextEndpointName\n      801     Invalid\
    \ StartEndpointName\n      802     Invalid or unsupported BulkRequestInfo Parameter\n\
    \      803     Invalid or unsupported StateType\n      804     Bulk Audit Type\
    \ not supported\n      805     Incorrectly specified endpoint range\n      806\
    \     Requested StartEndpoint unknown or unavailable\n   Note that package specific\
    \ error codes includes the package name\n   following the error code.  For example,\
    \ if error code 801 occurs in\n   response to a request with a transaction ID\
    \ of 1001 it would be sent\n   as:\n      801 1001 /BA\n"
- title: 2.2.  Examples of Package Use
  contents:
  - '2.2.  Examples of Package Use

    '
- title: 2.2.1.  Endpoint List
  contents:
  - "2.2.1.  Endpoint List\n   This section contains examples of how to obtain a list\
    \ of endpoints.\n   Example 1: This is an example of a gateway that contains a\
    \ single OC3\n   that contains a single level of hierarchy at the T1 level.\n\
    \   The request is made:\n      AUEP 1200 *@gw1.x.net MGCP 1.0\n      BA/F: BA/Z\n\
    \   This may result in a single \"BA/Z\" term with ranges specifying all of\n\
    \   the endpoints.\n      200 1200 OK\n      ba/z: ds/ds1-[1-84]/[1-24]\n   Example\
    \ 2: In this example the gateway has 10 analog lines and a\n   single T1.  The\
    \ same request is made as in example 1, but now the\n   response is:\n      200\
    \ 1200 OK\n      ba/z: aaln/[1-10]\n      ba/z: ds/ds1-1/[1-24]\n"
- title: 2.2.2.  Connection Count List
  contents:
  - "2.2.2.  Connection Count List\n   Example1: Audit the number of connections on\
    \ endpoints of a single\n   E1:\n      AUEP 2111 ds/e1-3/*@gw1.net\n      BA/F:\
    \ BA/C\n   Response:\n      200 2111 OK\n      BA/EL: ds/e1-3/[1-30]\n      BA/C:\
    \  012111210001000001000001000010\n   Example 2: Audit the number of connections\
    \ on endpoints of a DS3:\n      AUEP 1144 ds/ds3-1/*@gateway.net\n      BA/F:\
    \ BA/C\n   Response:\n      200 1144 OK\n      BA/EL: ds/ds3-1/[1-192]\n     \
    \ BA/C:  010000010001000001000001\n      BA/C:  001000000101000000001001\n   \
    \   :\n      BA/C:  011000100010000010000010\n      BA/C:  011111010001000001000001\n\
    \      BA/C:  011000001100000001000001\n      BA/NE: ds/ds3-1/193\n   In this\
    \ case, the response provided by the gateway contained\n   information about the\
    \ first 192 endpoints.  If the ds-3 contained a\n   T1 hierarchy, the \"BA/EL\"\
    \ and \"BA/NE\" values would indicate that\n   hierarchy e.g.,:\n      200 1144\
    \ OK\n      BA/EL: ds/ds3-1/ds1-1/[1-24]\n      BA/C:  010000010001000001000001\n\
    \      BA/EL: ds/ds3-1/ds1-2/[1-24]\n      BA/C:  001000000101000000001001\n \
    \     :\n      BA/EL: ds/ds3-1/ds1-6/[1-24]\n      BA/C:  011000100010000010000010\n\
    \      BA/EL: ds/ds3-1/ds1-7/[1-24]\n      BA/C:  011111010001000001000001\n \
    \     BA/EL: ds/ds3-1/ds1-8/[1-24]\n      BA/C:  011000001100000001000001\n  \
    \    BA/NE: ds/ds3-1/ds1-9/1\n   The Call Agent could continue to request endpoints\
    \ by indicating the\n   starting endpoint where it left off, i.e., simply using\
    \ the returned\n   \"BE/NE\" value as the \"BA/SE\" value for the next request:\n\
    \      AUEP 1145 ds/ds3-3/*@gw1.net\n      BA/F: BA/C\n      BA/SE: ds/ds3-1/ds1-9/1\n\
    \   Example 3: In this case, the Call Agent wants to know about the\n   connection\
    \ state of 12 DS0's starting with the endpoint with the\n   LocalEndpointName\
    \ \"ds/ds3-1/ds1-6/4\":\n      AUEP 1146 ds/ds3-1/*@gw1.net\n      BA/F: BA/C\n\
    \      BA/SE: ds/ds3-1/ds1-6/4\n      BA/NU: 12\n   Response:\n      200 1144\
    \ OK\n      BA/EL: ds/ds3-1/ds1-6/[4-15]\n      BA/C:  011000010001\n      BA/NE:\
    \ ds/ds3-1/ds1-6/16\n"
- title: 2.2.3.  Connection Mode List
  contents:
  - "2.2.3.  Connection Mode List\n   Example: Audit the connection modes for connections\
    \ on the endpoints\n   of a single E1:\n      AUEP 2111 ds/e1-3/*@gw1.net\n  \
    \    BA/F: BA/M\n   Response:\n      200 2111 OK\n      BA/EL: ds/e1-3/[1-30]\n\
    \      BA/M:  0R2BRBBB2RRB000B00000B00000B0000B0\n   This shows that:\n   *  Endpoint\
    \ ds/e1-3/1 has no connections\n   *  Endpoint ds/e1-3/2 has one connection and\
    \ it is in \"recvonly\"\n      mode.\n   *  Endpoint ds/e1-3/3 has two connections\
    \ which are in \"sendrecv\" and\n      \"recvonly\" mode\n   *  Endpoints ds/e1-3/4\
    \ to ds/e1-3/6 each have one connection - in\n      \"sendrecv\" mode in all cases\n\
    \   *  Endpoints ds/e1-3/7 has two connections, both in \"recvonly\" mode\n  \
    \ *  etc.\n"
- title: 2.2.4.  Endpoint State
  contents:
  - "2.2.4.  Endpoint State\n   Endpoint state requests and responses are similar.\
    \  An example of\n   requesting endpoint state similar to example 3 in the previous\n\
    \   section:\n      AUEP 1150 ds/ds3-1/*@gw1.net\n      BA/F: BA/S(I)\n      BA/SE:\
    \ ds/ds3-1/ds1-6/4\n      BA/NU: 12\n   Response:\n      200 1150 OK\n      BA/EL:\
    \ ds/ds3-1/ds1-6/[4-15]\n      BA/S:  TOOTTOOTTOOT\n      BA/NE: ds/ds3-1/ds1-6/16\n\
    \   The request for in-service endpoints returns \"True\" for all endpoints\n\
    \   in-service, and \"O\" for all endpoints \"Out of Service\".\n   A similar\
    \ request but with additional parameters might be:\n      AUEP 1151 ds/ds3-1/*@gw1.net\n\
    \      BA/F: BA/S(H,N)\n      BA/SE: ds/ds3-1/ds1-6/4\n      BA/NU: 12\n   Response:\n\
    \      200 1151 OK\n      BA/EL: ds/ds3-1/ds1-6/[4-15]\n      BA/S:  FFFTFFFFFFFO\n\
    \      BA/NE: ds/ds3-1/ds1-6/16\n   This indicates that at least one of the StateType\
    \ parameters \"H\"\n   (off-hook) and \"N\" (notification state) evaluated to\
    \ true for the\n   endpoints that have a \"T\" associated with then (i.e., ds/ds3-1/ds1-\n\
    \   6/7 and ds/ds3-1/ds1-6/16 since the request started from ds/ds3-\n   1/ds1-6/4).\
    \  All other endpoints are neither off-hook nor in the\n   \"notification state\"\
    .  Note that endpoint ds/ds3-1/ds1-6/15 is marked\n   as being out-of-service.\n\
    \   It is possible to request both connection state and endpoint state in\n  \
    \ the same request such as:\n      AUEP 1151 ds/ds3-1/*@gw1.net\n      BA/F: BA/S(H,N),\
    \ BA/C\n      BA/SE: ds/ds3-1/ds1-6/4\n      BA/NU: 12\n   In this case, the response\
    \ might be:\n      200 1151 OK\n      BA/EL: ds/ds3-1/ds1-6/[4-15]\n      BA/S:\
    \  FFFTFFFFFFFO\n      BA/C:  011000010001\n      BA/NE: ds/ds3-1/ds1-6/16\n"
- title: 3.  IANA Considerations
  contents:
  - "3.  IANA Considerations\n   The MGCP package title, \"Bulk Audit\", with the\
    \ name, \"BA\", has been\n   registered with IANA as indicated in Appendix C.1\
    \ in [3].\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Section 5 of the base MGCP specification [3]\
    \ discusses security\n   requirements for the base protocol, which apply equally\
    \ to the\n   package defined in this document.  Use of a security Protocol such\
    \ as\n   IPsec [4, 5] that provides per message authentication and integrity\n\
    \   services is required in order to ensure that requests and responses\n   are\
    \ obtained from authenticated sources and that messages have not\n   been modified.\
    \  Without such services, gateways and Call Agents are\n   open to attacks.\n\
    \   For example, although audit requests from unauthorized sources will\n   not\
    \ modify media gateway state, the information provided could be\n   used to locate\
    \ idle endpoints, which could then lead to making\n   unauthorized calls.  Similarly,\
    \ an attack that modifies a response to\n   an audit returned to a Call Agent\
    \ could lead to a denial of service\n   attack in which a Call Agent that is provided\
    \ misinformation as to\n   endpoint state could take some incorrect action such\
    \ as taking valid\n   calls out of service.\n"
- title: 5.  References
  contents:
  - "5.  References\n   [1]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n\
    \        Specifications: ABNF\", RFC 2234, November 1997.\n   [2]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14,\
    \ RFC 2119, March 1997.\n   [3]  Andreasen, F. and B. Foster, \"Media Gateway\
    \ Control Protocol\n        (MGCP) Version 1.0\", RFC 3435, January 2003.\n  \
    \ [4]  Kent, S. and R. Atkinson, \"Security Architecture for the\n        Internet\
    \ Protocol\", RFC 2401, November 1998.\n   [5]  Kent, S. and R. Atkinson, \"IP\
    \ Encapsulating Security Payload\n        (ESP)\", RFC 2406, November 1998.\n"
- title: 6.  Authors' Addresses
  contents:
  - "6.  Authors' Addresses\n   Flemming Andreasen\n   Cisco Systems\n   499 Thornall\
    \ Street, 8th Floor\n   Edison, NJ 08837\n   EMail: fandreas@cisco.com\n   David\
    \ Auerbach\n   Cisco Systems Inc.\n   170 W. Tasman Drive\n   San Jose, CA,  95134\n\
    \   EMail: dea@cisco.com\n   Bill Foster\n   Cisco Systems\n   EMail: bfoster@cisco.com\n"
- title: 7.  Full Copyright Statement
  contents:
  - "7.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
