- contents:
  - ''
  title: __initial_text__
- contents:
  - 'Multimedia Congestion Control: Circuit Breakers for Unicast RTP Sessions

    '
  title: 'Multimedia Congestion Control: Circuit Breakers for Unicast RTP Sessions'
- contents:
  - "Abstract\n   The Real-time Transport Protocol (RTP) is widely used in telephony,\n
    \  video conferencing, and telepresence applications.  Such applications\n   are
    often run on best-effort UDP/IP networks.  If congestion control\n   is not implemented
    in these applications, then network congestion can\n   lead to uncontrolled packet
    loss and a resulting deterioration of the\n   user's multimedia experience.  The
    congestion control algorithm acts\n   as a safety measure by stopping RTP flows
    from using excessive\n   resources and protecting the network from overload.  At
    the time of\n   this writing, however, while there are several proprietary solutions,\n
    \  there is no standard algorithm for congestion control of interactive\n   RTP
    flows.\n   This document does not propose a congestion control algorithm.  It\n
    \  instead defines a minimal set of RTP circuit breakers: conditions\n   under
    which an RTP sender needs to stop transmitting media data to\n   protect the network
    from excessive congestion.  It is expected that,\n   in the absence of long-lived
    excessive congestion, RTP applications\n   running on best-effort IP networks
    will be able to operate without\n   triggering these circuit breakers.  To avoid
    triggering the RTP\n   circuit breaker, any Standards Track congestion control
    algorithms\n   defined for RTP will need to operate within the envelope set by
    these\n   RTP circuit breaker algorithms.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8083.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Background  . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Terminology . . . . . . . . . . . . . . . . . . . . . . . .
    .   6\n   4.  RTP Circuit Breakers for Systems Using the RTP/AVP Profile  .   8\n
    \    4.1.  RTP/AVP Circuit Breaker #1: RTCP Timeout  . . . . . . . .  10\n     4.2.
    \ RTP/AVP Circuit Breaker #2: Media Timeout . . . . . . . .  11\n     4.3.  RTP/AVP
    Circuit Breaker #3: Congestion  . . . . . . . . .  12\n     4.4.  RTP/AVP Circuit
    Breaker #4: Media Usability . . . . . . .  16\n     4.5.  Ceasing Transmission
    \ . . . . . . . . . . . . . . . . . .  17\n   5.  RTP Circuit Breakers and the
    RTP/AVPF and RTP/SAVPF Profiles   18\n   6.  Impact of RTCP Extended Reports (XR)
    \ . . . . . . . . . . . .  19\n   7.  Impact of Explicit Congestion Notification
    (ECN)  . . . . . .  19\n   8.  Impact of Bundled Media and Layered Coding  . .
    . . . . . . .  20\n   9.  Security Considerations . . . . . . . . . . . . . .
    . . . . .  20\n   10. References  . . . . . . . . . . . . . . . . . . . . . .
    . . .  21\n     10.1.  Normative References . . . . . . . . . . . . . . . . .
    .  21\n     10.2.  Informative References . . . . . . . . . . . . . . . . .  22\n
    \  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  25\n   Authors'
    Addresses  . . . . . . . . . . . . . . . . . . . . . . .  25\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Real-time Transport Protocol (RTP) [RFC3550] is widely
    used in\n   voice-over-IP, video teleconferencing, and telepresence systems.\n
    \  Many of these systems run over best-effort UDP/IP networks and can\n   suffer
    from packet loss and increased latency if network congestion\n   occurs.  Designing
    effective RTP congestion control algorithms to\n   adapt the transmission of RTP-based
    media to match the available\n   network capacity while also maintaining the user
    experience is a\n   difficult but important problem.  Many such congestion control
    and\n   media adaptation algorithms have been proposed, but to date there is\n
    \  no consensus on the correct approach or even that a single standard\n   algorithm
    is desirable.\n   This memo does not attempt to propose a new RTP congestion control\n
    \  algorithm.  Instead, we propose a small set of RTP circuit breakers:\n   mechanisms
    that terminate RTP flows in conditions under which there\n   is general agreement
    that serious network congestion is occurring.\n   The RTP circuit breakers proposed
    in this memo are a specific\n   instance of the general class of network transport
    circuit breakers\n   [RFC8084] designed to act as a protection mechanism of last
    resort to\n   avoid persistent excessive congestion.  To avoid triggering the
    RTP\n   circuit breaker, any Standards Track congestion control algorithms\n   defined
    for RTP will need to operate within the envelope set by the\n   RTP circuit breaker
    algorithms defined by this memo.\n"
  title: 1.  Introduction
- contents:
  - "2.  Background\n   We consider congestion control for unicast RTP traffic flows.
    \ This\n   is the problem of adapting the transmission of an audio/visual data\n
    \  flow, encapsulated within an RTP transport session, from one sender\n   to
    one receiver so that it does not use more capacity than is\n   available along
    the network path.  Such adaptation needs to be done\n   in a way that limits the
    disruption to the user experience caused by\n   both packet loss and excessive
    rate changes.  Congestion control for\n   multicast flows is outside the scope
    of this memo.  Multicast traffic\n   needs different solutions since the available
    capacity estimator for\n   a group of receivers will differ from that for a single
    receiver, and\n   because multicast congestion control has to consider issues
    of\n   fairness across groups of receivers that do not apply to unicast\n   flows.\n
    \  Congestion control for unicast RTP traffic can be implemented in one\n   of
    two places in the protocol stack.  One approach is to run the RTP\n   traffic
    over a congestion-controlled transport protocol (for example,\n   over TCP), and
    to adapt the media encoding to match the dictates of\n   the transport-layer congestion
    control algorithm.  This is safe for\n   the network but can be suboptimal for
    the media quality unless the\n   transport protocol is designed to support real-time
    media flows.  We\n   do not consider this class of applications further in this
    memo, as\n   their network safety is guaranteed by the underlying transport.\n
    \  Alternatively, RTP flows can be run over a non-congestion-controlled\n   transport
    protocol (for example, UDP) performing rate adaptation at\n   the application
    layer based on RTP Control Protocol (RTCP) feedback.\n   With a well-designed,
    network-aware application, this allows highly\n   effective media quality adaptation,
    but there is potential to cause\n   persistent congestion in the network if the
    application does not\n   adapt its sending rate in a timely and effective manner.
    \ We consider\n   this class of applications in this memo.\n   Congestion control
    relies on monitoring the delivery of a media flow\n   and responding to adapt
    the transmission of that flow when there are\n   signs that the network path is
    congested.  Network congestion can be\n   detected in one of three ways:\n   1)
    \ a receiver can infer the onset of congestion by observing an\n       increase
    in one-way delay caused by queue build-up within the\n       network;\n   2)  if
    Explicit Congestion Notification (ECN) [RFC3168] is supported,\n       the network
    can signal the presence of congestion by marking\n       packets using ECN Congestion
    Experienced (CE) marks (this could\n       potentially be augmented by mechanisms
    such as Congestion\n       Exposure (ConEx) [RFC7713] or other future protocol
    extensions\n       for network signaling of congestion); or\n   3)  in the extreme
    case, congestion will cause packet loss that can\n       be detected by observing
    a gap in the received RTP sequence\n       numbers.\n   Once the onset of congestion
    is observed, the receiver has to send\n   feedback to the sender to indicate that
    the transmission rate needs\n   to be reduced.  How the sender reduces the transmission
    rate is\n   highly dependent on the media codec being used and is outside the\n
    \  scope of this memo.\n   There are several ways in which a receiver can send
    feedback to a\n   media sender within the RTP framework:\n   o  The base RTP specification
    [RFC3550] defines RTCP Receiver Report\n      (RR) packets to convey reception
    quality feedback information and\n      Sender Report (SR) packets to convey information
    about the media\n      transmission.  RTCP SR packets contain data that can be
    used to\n      reconstruct media timing at a receiver along with a count of the\n
    \     total number of octets and packets sent.  RTCP RR packets report\n      on
    the fraction of packets lost in the last reporting interval,\n      the cumulative
    number of packets lost, the highest sequence number\n      received, and the inter-arrival
    jitter.  The RTCP RR packets also\n      contain timing information that allows
    the sender to estimate the\n      network Round-Trip Time (RTT) to the receivers.
    \ RTCP reports are\n      sent periodically, with the reporting interval being
    determined by\n      the number of Synchronization Sources (SSRCs) used in the
    session\n      and a configured session bandwidth estimate (the number of SSRCs)\n
    \     used is usually two in a unicast session, one for each\n      participant,
    but can be greater if the participants send multiple\n      media streams).  The
    interval between reports sent from each\n      receiver is on the order of a few
    seconds on average; although it\n      varies with the session bandwidth, it is
    randomized to avoid\n      synchronization of reports from multiple receivers.
    \ The interval\n      can be less than a second in a high-bandwidth session.  RTCP
    RR\n      packets allow a receiver to report ongoing network congestion to\n      the
    sender.  However, if a receiver detects the onset of\n      congestion part way
    through a reporting interval, the base RTP\n      specification contains no provision
    for sending the RTCP RR packet\n      early, and the receiver has to wait until
    the next scheduled\n      reporting interval.\n   o  The RTCP Extended Reports
    (XR) [RFC3611] allow reporting of more\n      complex and sophisticated reception
    quality metrics but do not\n      change the RTCP timing rules.  RTCP extended
    reports of potential\n      interest for congestion control purposes are the extended
    packet\n      loss, discard, and burst metrics [RFC3611] [RFC7002] [RFC7097]\n
    \     [RFC7003] [RFC6958] as well as the extended delay metrics\n      [RFC6843]
    [RFC6798].  Other RTCP Extended Reports that could be\n      helpful for congestion
    control purposes might be developed in\n      future.\n   o  Rapid feedback about
    the occurrence of congestion events can be\n      achieved using the Extended
    RTP Profile for RTCP-Based Feedback\n      (RTP/AVPF) [RFC4585] (or its secure
    variant, RTP/SAVPF [RFC5124])\n      in place of the RTP/AVP profile [RFC3551].
    \ This modifies the RTCP\n      timing rules to allow RTCP reports to be sent
    early, in some cases\n      immediately, provided the RTCP transmission rate keeps
    within its\n      bandwidth allocation.  It also defines transport-layer feedback\n
    \     messages, including Negative Acknowledgements (NACKs), that can be\n      used
    to report on specific congestion events.  RTP Codec Control\n      Messages [RFC5104]
    extend the RTP/AVPF profile with additional\n      feedback messages that can
    be used to influence the way in which\n      rate adaptation occurs but do not
    further change the dynamics of\n      how rapidly feedback can be sent.  Use of
    the RTP/AVPF profile is\n      dependent on signaling.\n   o  Finally, ECN for
    RTP over UDP [RFC6679] can be used to provide\n      feedback on the number of
    packets that received an ECN-CE mark.\n      This RTCP extension builds on the
    RTP/AVPF profile to allow rapid\n      congestion feedback when ECN is supported.\n
    \  In addition to these mechanisms for providing feedback, the sender\n   can
    include an RTP header extension in each packet to record packet\n   transmission
    times [RFC5450].  Accurate transmission timestamps can\n   be helpful for estimating
    queuing delays to get an early indication\n   of the onset of congestion.\n   Taken
    together, these various mechanisms allow receivers to provide\n   feedback on
    the senders when congestion events occur, with varying\n   degrees of timeliness
    and accuracy.  The key distinction is between\n   systems that use only the basic
    RTCP mechanisms, without RTP/AVPF\n   rapid feedback, and those that use the RTP/AVPF
    extensions to respond\n   to congestion more rapidly.\n"
  title: 2.  Background
- contents:
  - "3.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n
    \  This interpretation of these key words applies only when written in\n   ALL
    CAPS.  Mixed- or lower-case uses of these key words are not to be\n   interpreted
    as carrying special significance in this memo.\n   The definition of the RTP circuit
    breaker is specified in terms of\n   the following variables:\n   o  Td is the
    deterministic RTCP reporting interval, as defined in\n      Section 6.3.1 of [RFC3550].\n
    \  o  Tdr is the sender's estimate of the deterministic RTCP reporting\n      interval,
    Td, calculated by a receiver of the data it is sending.\n      Tdr is not known
    at the sender but can be estimated by executing\n      the algorithm in Section
    6.2 of [RFC3550] using the average RTCP\n      packet size seen at the sender,
    the number of members reported in\n      the receiver's SR/RR report blocks, and
    whether the receiver is\n      sending SR or RR packets.  Tdr is recalculated
    when each new RTCP\n      SR/RR report is received, but the media timeout circuit
    breaker\n      (see Section 4.2) is only reconsidered when Tdr increases.\n   o
    \ Tr is the network round-trip time, which is calculated by the\n      sender
    using the algorithm in Section 6.4.1 of [RFC3550] and is\n      smoothed using
    an exponentially weighted moving average as\n      Tr = (0.8 * Tr) + (0.2 * Tr_new)
    where Tr_new is the latest RTT\n      estimate obtained from an RTCP report.  The
    weight is chosen so\n      old estimates decay over k intervals.\n   o  k is the
    non-reporting threshold (see Section 4.2).\n   o  Tf is the media framing interval
    at the sender.  For applications\n      sending at a constant frame rate, Tf is
    the inter-frame interval.\n      For applications that switch between a small
    set of possible frame\n      rates (for example, when sending speech with comfort
    noise, such\n      that comfort noise frames are sent less often than speech frames),\n
    \     Tf is set to the longest of the inter-frame intervals of the\n      different
    frame rates.  For applications that send periodic frames\n      but dynamically
    vary their frame rate, Tf is set to the largest\n      inter-frame interval used
    in the last 10 seconds.  For\n      applications that send less than one frame
    every 10 seconds, or\n      that have no concept of periodic frames (e.g., text
    conversation\n      [RFC4103], or pointer events [RFC2862]), when each frame is
    sent,\n      Tf is set to the time interval since the previous frame.\n   o  G
    is the frame group size.  That is, the number of frames that are\n      coded
    together based on a particular sending rate setting.  If the\n      codec used
    by the sender can change its rate on each frame, then G\n      = 1; otherwise,
    G is set to the number of frames before the codec\n      can adjust to the new
    rate.  For codecs that have the concept of a\n      Group of Pictures (GOP), G
    is likely the GOP length.\n   o  T_rr_interval is the minimal interval between
    RTCP reports, as\n      defined in Section 3.4 of [RFC4585]; it is only meaningful
    for\n      implementations of RTP/AVPF profile [RFC4585] or the RTP/SAVPF\n      profile
    [RFC5124].\n   o  X is the estimated throughput a TCP connection would achieve
    over\n      a path, in bytes per second.\n   o  s is the size of RTP packets being
    sent, in bytes.  If the RTP\n      packets being sent vary in size, then the average
    size over the\n      packet comprising the last 4 * G frames MUST be used (this
    is\n      intended to be comparable to the four loss intervals used in\n      [RFC5348]).\n
    \  o  p is the loss event rate, between 0.0 and 1.0, that would be seen\n      by
    a TCP connection over a particular path.  When used in the RTP\n      congestion
    circuit breaker, this is approximated as described in\n      Section 4.3.\n   o
    \ t_RTO is the retransmission timeout value that would be used by a\n      TCP
    connection over a particular path, in seconds.  This MUST be\n      approximated
    using t_RTO = 4 * Tr when used as part of the RTP\n      congestion circuit breaker.\n
    \  o  b is the number of packets that are acknowledged by a single TCP\n      acknowledgement.
    \ Following [RFC5348], it is RECOMMENDED that the\n      value b = 1 is used as
    part of the RTP congestion circuit breaker.\n"
  title: 3.  Terminology
- contents:
  - "4.  RTP Circuit Breakers for Systems Using the RTP/AVP Profile\n   The feedback
    mechanisms defined in [RFC3550] and available under the\n   RTP/AVP profile [RFC3551]
    are the minimum that can be assumed for a\n   baseline circuit breaker mechanism
    that is suitable for all unicast\n   applications of RTP.  Accordingly, for an
    RTP circuit breaker to be\n   useful, it needs to be able to detect that an RTP
    flow is causing\n   excessive congestion using only basic RTCP features without
    needing\n   RTCP XR feedback or the RTP/AVPF profile for rapid RTCP reports.\n
    \  RTCP is a fundamental part of the RTP protocol, and the mechanisms\n   described
    here rely on the implementation of RTCP.  Implementations\n   that claim to support
    RTP, but that do not implement RTCP, will be\n   unable to use the circuit breaker
    mechanisms described in this memo.\n   Such implementations SHOULD NOT be used
    on networks that might be\n   subject to congestion unless equivalent mechanisms
    are defined using\n   some non-RTCP feedback channel to report congestion and
    signal\n   circuit breaker conditions.\n   The RTCP timeout circuit breaker (Section
    4.1) will trigger if an\n   implementation of this memo attempts to interwork
    with an endpoint\n   that does not support RTCP.  Implementations that sometimes
    need to\n   interwork with endpoints that do not support RTCP need to disable
    the\n   RTP circuit breakers if they don't receive some confirmation via\n   signaling
    that the remote endpoint implements RTCP (the presence of a\n   Session Description
    Protocol (SDP) \"a=rtcp:\" attribute in an answer\n   might be such an indication).
    \ The RTP circuit breaker SHOULD NOT be\n   disabled on networks that might be
    subject to congestion unless\n   equivalent mechanisms are defined using some
    non-RTCP feedback\n   channel to report congestion and signal circuit breaker
    conditions\n   [RFC8084].\n   Three potential congestion signals are available
    from the basic RTCP\n   SR/RR packets and are reported for each SSRC in the RTP
    session:\n   1.  The sender can estimate the network round-trip time once per
    RTCP\n       reporting interval based on the contents and timing of RTCP SR\n
    \      and RR packets.\n   2.  Receivers report a jitter estimate (the statistical
    variance of\n       the RTP data packet inter-arrival time) calculated over the
    RTCP\n       reporting interval.  Due to the nature of the jitter calculation\n
    \      (Section 6.4.4. of [RFC3550]), the jitter is only meaningful for\n       RTP
    flows that send a single data packet for each RTP timestamp\n       value (i.e.,
    audio flows, or video flows where each packet\n       comprises one video frame).\n
    \  3.  Receivers report the fraction of RTP data packets lost during the\n       RTCP
    reporting interval and the cumulative number of RTP packets\n       lost over
    the entire RTP session.\n   These congestion signals limit the possible circuit
    breakers since\n   they give only limited visibility into the behavior of the
    network.\n   RTT estimates are widely used in congestion control algorithms as
    a\n   proxy for queuing delay measures in delay-based congestion control or\n
    \  to determine connection timeouts.  RTT estimates derived from RTCP SR\n   and
    RR packets sent according to the RTP/AVP timing rules are too\n   infrequent to
    be useful for congestion control and don't give enough\n   information to distinguish
    a delay change due to routing updates from\n   queuing delay caused by congestion.
    \ Accordingly, we cannot use the\n   RTT estimate alone as an RTP circuit breaker.\n
    \  Increased jitter can be a signal of transient network congestion, but\n   in
    the highly aggregated form reported in RTCP RR packets, it offers\n   insufficient
    information to estimate the extent or persistence of\n   congestion.  Jitter reports
    are a useful early warning of potential\n   network congestion but provide an
    insufficiently strong signal to be\n   used as a circuit breaker.\n   The remaining
    congestion signals are the packet loss fraction and the\n   cumulative number
    of packets lost.  If considered carefully, and over\n   an appropriate time frame
    to distinguish transient problems from long\n   term issues [RFC8084], these can
    be effective indicators that\n   persistent excessive congestion is occurring
    in networks where packet\n   loss is primarily due to queue overflows, although
    loss caused by\n   non-congestive packet corruption can distort the result in
    some\n   networks.  TCP congestion control [RFC5681] intentionally tries to\n
    \  fill the router queues and uses the resulting packet loss as\n   congestion
    feedback.  An RTP flow competing with TCP traffic will\n   therefore expect to
    see a non-zero packet loss fraction, and some\n   variation in queuing latency,
    in normal operation when sharing a path\n   with other flows, which needs to be
    accounted for when determining\n   the circuit breaker threshold [RFC8084].  This
    behavior of TCP is\n   reflected in the congestion circuit breaker below and will
    affect the\n   design of any RTP congestion control protocol.\n   Two packet loss
    regimes can be observed: 1) RTCP RR packets show a\n   non-zero packet loss fraction
    while the extended highest sequence\n   number received continues to increment;
    and 2) RR packets show a loss\n   fraction of zero, but the extended highest sequence
    number received\n   does not increment even though the sender has been transmitting
    RTP\n   data packets.  The former corresponds to the TCP congestion avoidance\n
    \  state and indicates a congested path that is still delivering data;\n   the
    latter corresponds to a TCP timeout and is most likely due to a\n   path failure.
    \ A third condition is that data is being sent but no\n   RTCP feedback is received
    at all, corresponding to a failure of the\n   reverse path.  We derive circuit
    breaker conditions for these loss\n   regimes in the following.\n"
  - contents:
    - "4.1.  RTP/AVP Circuit Breaker #1: RTCP Timeout\n   An RTCP timeout can occur
      when RTP data packets are being sent, but\n   there are no RTCP reports returned
      from the receiver.  This is either\n   due to a failure of the receiver to send
      RTCP reports or a failure of\n   the return path that is preventing those RTCP
      reporting from being\n   delivered.  In either case, it is not safe to continue
      transmission\n   since the sender has no way of knowing if it is causing congestion.\n
      \  An RTP sender that has not received any RTCP SR or RTCP RR packets\n   reporting
      on the SSRC it is using, for a time period of at least\n   three times its deterministic
      RTCP reporting interval, Td (where Td\n   is calculated without the randomization
      factor and using the fixed\n   minimum interval of Tmin=5 seconds), SHOULD cease
      transmission (see\n   Section 4.5).  The rationale for this choice of timeout
      is as\n   described in Section 6.2 of [RFC3550] (\"so that implementations which\n
      \  do not use the reduced value for transmitting RTCP packets are not\n   timed
      out by other participants prematurely\") and has been updated by\n   Section
      6.1.4 of [RFC8108] to account for the use of the RTP/AVPF\n   profile [RFC4585]
      or the RTP/SAVPF profile [RFC5124].\n   To reduce the risk of premature timeout,
      implementations SHOULD NOT\n   configure the RTCP bandwidth such that Td is
      larger than 5 seconds.\n   Similarly, implementations that use the RTP/AVPF
      profile [RFC4585] or\n   the RTP/SAVPF profile [RFC5124] SHOULD NOT configure
      T_rr_interval to\n   values larger than 4 seconds (the reduced limit for T_rr_interval\n
      \  follows Section 6.1.3 of [RFC8108]).\n   The choice of three RTCP reporting
      intervals as the timeout is made\n   following Section 6.3.5 of RFC 3550 [RFC3550].
      \ This specifies that\n   participants in an RTP session will timeout and remove
      an RTP sender\n   from the list of active RTP senders if no RTP data packets
      have been\n   received from that RTP sender within the last two RTCP reporting\n
      \  intervals.  Using a timeout of three RTCP reporting intervals is\n   therefore
      large enough that the other participants will have timed\n   out the sender
      if a network problem stops the data packets it is\n   sending from reaching
      the receivers, even allowing for loss of some\n   RTCP packets.\n   If a sender
      is transmitting a large number of RTP media streams, such\n   that the corresponding
      RTCP SR or RR packets are too large to fit\n   into the network MTU, the receiver
      will generate RTCP SR or RR\n   packets in a round-robin manner.  In this case,
      the sender SHOULD\n   treat receipt of an RTCP SR or RR packet corresponding
      to any SSRC it\n   sent on the same 5-tuple of source and destination IP address,
      port,\n   and protocol as an indication that the receiver and return path are\n
      \  working and thus preventing the RTCP timeout circuit breaker from\n   triggering.\n"
    title: '4.1.  RTP/AVP Circuit Breaker #1: RTCP Timeout'
  - contents:
    - "4.2.  RTP/AVP Circuit Breaker #2: Media Timeout\n   If RTP data packets are
      being sent but the RTCP SR or RR packets\n   reporting on that SSRC indicate
      a non-increasing extended highest\n   sequence number received, this is an indication
      that those RTP data\n   packets are not reaching the receiver.  This could be
      a short-term\n   issue affecting only a few RTP packets, perhaps caused by a
      slow-to-\n   open firewall or a transient connectivity problem, but if the issue\n
      \  persists, it is a sign of a more ongoing and significant problem (a\n   \"media
      timeout\").\n   The time needed to declare a media timeout depends on the parameters\n
      \  Tdr, Tr, Tf, and on the non-reporting threshold k.  The value of k is\n   chosen
      so that when Tdr is large compared to Tr and Tf, receipt of at\n   least k RTCP
      reports with non-increasing extended highest sequence\n   number received gives
      reasonable assurance that the forward path has\n   failed and that the RTP data
      packets have not been lost by chance.\n   The RECOMMENDED value for k is 5 reports.\n
      \  When Tdr < Tf, then RTP data packets are being sent at a rate less\n   than
      one per RTCP reporting interval of the receiver, so the extended\n   highest
      sequence number received can be expected to be non-increasing\n   for some receiver
      RTCP reporting intervals.  Similarly, when\n   Tdr < Tr, some receiver RTCP
      reporting intervals might pass before\n   the RTP data packets arrive at the
      receiver, also leading to reports\n   where the extended highest sequence number
      received is non-\n   increasing.  Both issues require the media timeout interval
      to be\n   scaled relative to the threshold, k.\n   The media timeout RTP circuit
      breaker is therefore as follows.  When\n   starting sending, calculate MEDIA_TIMEOUT
      using:\n      MEDIA_TIMEOUT = ceil(k * max(Tf, Tr, Tdr) / Tdr)\n   When a sender
      receives an RTCP packet that indicates reception of the\n   media it has been
      sending, then it cancels the media timeout circuit\n   breaker.  If it is still
      sending, then it MUST calculate a new value\n   for MEDIA_TIMEOUT and set a
      new media timeout circuit breaker.\n   If a sender receives an RTCP packet indicating
      that its media was not\n   received, it MUST calculate a new value for MEDIA_TIMEOUT.
      \ If the\n   new value is larger than the previous, it replaces MEDIA_TIMEOUT
      with\n   the new value, extending the media timeout circuit breaker;\n   otherwise,
      it keeps the original value of MEDIA_TIMEOUT.  This\n   process is known as
      reconsidering the media timeout circuit breaker.\n   If MEDIA_TIMEOUT consecutive
      RTCP packets are received indicating\n   that the media being sent was not received,
      and the media timeout\n   circuit breaker has not been canceled, then the media
      timeout circuit\n   breaker triggers.  When the media timeout circuit breaker
      triggers,\n   the sender SHOULD cease transmission (see Section 4.5).\n   When
      stopping sending an RTP stream, a sender MUST cancel the\n   corresponding media
      timeout circuit breaker.\n"
    title: '4.2.  RTP/AVP Circuit Breaker #2: Media Timeout'
  - contents:
    - "4.3.  RTP/AVP Circuit Breaker #3: Congestion\n   If RTP data packets are being
      sent and the corresponding RTCP SR or\n   RR packets show non-zero packet loss
      fraction and increasing extended\n   highest sequence number received, then
      those RTP data packets are\n   arriving at the receiver, but some degree of
      congestion is occurring.\n   The RTP/AVP profile [RFC3551] states that:\n      If
      best-effort service is being used, RTP receivers SHOULD monitor\n      packet
      loss to ensure that the packet loss rate is within\n      acceptable parameters.
      \ Packet loss is considered acceptable if a\n      TCP flow across the same
      network path and experiencing the same\n      network conditions would achieve
      an average throughput, measured\n      on a reasonable timescale, that is not
      less than [the throughput]\n      the RTP flow is achieving.  This condition
      can be satisfied by\n      implementing congestion control mechanisms to adapt
      the\n      transmission rate (or the number of layers subscribed for a\n      layered
      multicast session), or by arranging for a receiver to\n      leave the session
      if the loss rate is unacceptably high.\n      The comparison to TCP cannot be
      specified exactly, but is intended\n      as an \"order-of-magnitude\" comparison
      in timescale and throughput.\n      The timescale on which TCP throughput is
      measured is the round-\n      trip time of the connection.  In essence, this
      requirement states\n      that it is not acceptable to deploy an application
      (using RTP or\n      any other transport protocol) on the best-effort Internet
      which\n      consumes bandwidth arbitrarily and does not compete fairly with\n
      \     TCP within an order of magnitude.\n   The phase \"order of magnitude\"
      in the above means within a factor of\n   ten, approximately.  In order to implement
      this, it is necessary to\n   estimate the throughput a bulk TCP connection would
      achieve over the\n   path.  For a long-lived TCP Reno connection, it has been
      shown that\n   the TCP throughput, X, in bytes per second, can be estimated
      as\n   follows [Padhye]:\n                                  s\n      X = -------------------------------------------------------------\n
      \         Tr*sqrt(2*b*p/3)+(t_RTO * (3*sqrt(3*b*p/8) * p * (1+32*p*p)))\n   This
      is the same approach to estimated TCP throughput that is used in\n   [RFC5348].
      \ Under conditions of low packet loss, the second term on\n   the denominator
      is small, so this formula can be approximated with\n   reasonable accuracy as
      follows [Mathis]:\n                s\n      X = ----------------\n          Tr*sqrt(2*b*p/3)\n
      \  It is RECOMMENDED that this simplified throughput equation be used\n   since
      the reduction in accuracy is small, and it is much simpler to\n   calculate
      than the full equation.  Measurements have shown that the\n   simplified TCP
      throughput equation is effective as an RTP circuit\n   breaker for multimedia
      flows sent to hosts on residential networks\n   using Asymmetric Digital Subscriber
      Line (ADSL) and cable modem links\n   [Singh].  The data shows that the full
      TCP throughput equation tends\n   to be more sensitive to packet loss and triggers
      the RTP circuit\n   breaker earlier than the simplified equation.  Implementations
      that\n   desire this extra sensitivity MAY use the full TCP throughput\n   equation
      in the RTP circuit breaker.  Initial measurements in LTE\n   networks have shown
      that the extra sensitivity is helpful in that\n   environment, with the full
      TCP throughput equation giving a more\n   balanced circuit breaker response
      than the simplified TCP equation\n   [Sarker]; other networks might see similar
      behavior.\n   No matter what TCP throughput equation is chosen, two parameters
      need\n   to be estimated and reported to the sender in order to calculate the\n
      \  throughput: the round-trip time, Tr, and the loss event rate, p (the\n   packet
      size, s, is known to the sender).  The round-trip time can be\n   estimated
      from RTCP SR and RR packets.  This is done too infrequently\n   for accurate
      statistics but is the best that can be done with the\n   standard RTCP mechanisms.\n
      \  Report blocks in RTCP SR or RR packets contain the packet loss\n   fraction,
      rather than the loss event rate, so p cannot be reported\n   (TCP typically
      treats the loss of multiple packets within a single\n   RTT as one loss event,
      but RTCP RR packets report the overall\n   fraction of packets lost and do not
      report when the packet losses\n   occurred).  Using the loss fraction in place
      of the loss event rate\n   can overestimate the loss.  We believe that this
      overestimate will\n   not be significant given that we are only interested in
      order of\n   magnitude comparison (Section 3.2.1 of [Floyd] shows that the\n
      \  difference is small for steady-state conditions and random loss, but\n   using
      the loss fraction is more conservative in the case of bursty\n   loss).\n   The
      congestion circuit breaker is therefore as follows.  When a\n   sender that
      is transmitting at least one RTP packet every max(Tdr,\n   Tr) seconds receives
      an RTCP SR or RR packet that contains a report\n   block for an SSRC it is using,
      the sender MUST record the value of\n   the fraction lost field from the report
      block, and the time since the\n   last report block was received, for that SSRC.
      \ If more than\n   CB_INTERVAL (see below) report blocks have been received
      for that\n   SSRC, the sender MUST calculate the average fraction lost over
      the\n   last CB_INTERVAL reporting intervals and then estimate the TCP\n   throughput
      that would be achieved over the path using the chosen TCP\n   throughput equation
      and the measured values of the round-trip time,\n   Tr, the loss event rate,
      p (approximated by the average fraction\n   lost, as is described below), and
      the packet size, s.  The estimate\n   of the TCP throughput, X, is then compared
      with the actual sending\n   rate of the RTP stream.  If the actual sending rate
      of the RTP stream\n   is more than 10 * X, then the congestion circuit breaker
      is\n   triggered.\n   The average fraction lost is calculated based on the sum
      (over the\n   last CB_INTERVAL reporting intervals) of the fraction lost in
      each\n   reporting interval that is then multiplied by the duration of the\n
      \  corresponding reporting interval and then divided by the total\n   duration
      of the last CB_INTERVAL reporting intervals.  The\n   CB_INTERVAL parameter
      is set to:\n      CB_INTERVAL =\n         ceil(3*min(max(10*G*Tf, 10*Tr, 3*Tdr),
      max(15, 3*Td))/(3*Tdr))\n   The parameters that feed into CB_INTERVAL are chosen
      to give the\n   congestion control algorithm time to react to congestion.  They
      give\n   at least three RTCP reports, ten round trip times, and ten groups of\n
      \  frames to adjust the rate to reduce the congestion to a reasonable\n   level.
      \ It is expected that a responsive congestion control algorithm\n   will begin
      to respond with the next group of frames after it receives\n   indication of
      congestion, so CB_INTERVAL ought to be a much longer\n   interval than the congestion
      response.\n   If the RTP/AVPF profile [RFC4585] or the RTP/SAVPF [RFC5124] is
      used,\n   and the T_rr_interval parameter is used to reduce the frequency of\n
      \  regular RTCP reports, then the value of Tdr in the above expression\n   for
      the CB_INTERVAL parameter MUST be replaced by max(T_rr_interval,\n   Tdr).\n
      \  The CB_INTERVAL parameter is calculated on joining the session, and\n   recalculated
      on receipt of each RTCP packet, after checking whether\n   the media timeout
      circuit breaker or the congestion circuit breaker\n   has been triggered.\n
      \  To ensure a timely response to persistent congestion, implementations\n   SHOULD
      NOT configure the RTCP bandwidth such that Tdr is larger than\n   5 seconds.
      \ Similarly, implementations that use the RTP/AVPF profile\n   [RFC4585] or
      the RTP/SAVPF profile [RFC5124] SHOULD NOT configure\n   T_rr_interval to values
      larger than 4 seconds (the reduced limit for\n   T_rr_interval follows Section
      6.1.3 of [RFC8108]).\n   The rationale for enforcing a minimum sending rate
      below which the\n   congestion circuit breaker will not trigger is to avoid
      spurious\n   circuit breaker triggers when the number of packets sent per RTCP\n
      \  reporting interval is small, and hence, the fraction lost samples are\n   subject
      to measurement artifacts.  The bound of at least one packet\n   every max(Tdr,
      Tr) seconds is derived from the one packet per RTT\n   minimum sending rate
      of TCP [RFC8085], which is adapted for use with\n   RTP where the RTCP reporting
      interval is decoupled from the network\n   RTT.\n   When the congestion circuit
      breaker is triggered, the sender SHOULD\n   cease transmission (see Section
      4.5).  However, if the sender is able\n   to reduce its sending rate by a factor
      of (approximately) ten, then\n   it MAY first reduce its sending rate by this
      factor (or some larger\n   amount) to see if that resolves the congestion.  If
      the sending rate\n   is reduced in this way and the congestion circuit breaker
      triggers\n   again after the next CB_INTERVAL RTCP reporting intervals, the
      sender\n   MUST then cease transmission.  An example of such a rate reduction\n
      \  might be a video conferencing system that backs off to sending audio\n   only
      before completely dropping the call.  If such a reduction in\n   sending rate
      resolves the congestion problem, the sender MAY\n   gradually increase the rate
      at which it sends data after a reasonable\n   amount of time has passed, provided
      it takes care not to cause the\n   problem to recur (\"reasonable\" is intentionally
      not defined here\n   since it depends on the application, media codec, and congestion\n
      \  control algorithm).\n   The RTCP reporting interval of the media sender does
      not affect how\n   quickly the congestion circuit breaker can trigger.  The
      timing is\n   based on the RTCP reporting interval of the receiver that generates\n
      \  the SR/RR packets from which the loss rate and RTT estimate are\n   derived
      (note that RTCP requires all participants in a session to\n   have similar reporting
      intervals, else the participant timeout rules\n   in [RFC3550] will not work,
      so this interval is likely similar to\n   that of the sender).  If the incoming
      RTCP SR or RR packets are using\n   a reduced minimum RTCP reporting interval
      (as specified in\n   Section 6.2 of RFC 3550 [RFC3550] or the RTP/AVPF profile
      [RFC4585]),\n   then that reduced RTCP reporting interval is used when determining
      if\n   the circuit breaker is triggered.\n   If there are more media streams
      that can be reported in a single RTCP\n   SR or RR packet, or if the size of
      a complete RTCP SR or RR packet\n   exceeds the network MTU, then the receiver
      will report on a subset of\n   sources in each reporting interval with the subsets
      selected round-\n   robin across multiple intervals so that all sources are
      eventually\n   reported [RFC3550].  When generating such round-robin RTCP reports,\n
      \  priority SHOULD be given to reports on sources that have high packet\n   loss
      rates to ensure that senders are aware of network congestion\n   they are causing
      (this is an update to [RFC3550]).\n"
    title: '4.3.  RTP/AVP Circuit Breaker #3: Congestion'
  - contents:
    - "4.4.  RTP/AVP Circuit Breaker #4: Media Usability\n   Applications that use
      RTP are generally tolerant to some amount of\n   packet loss.  How much packet
      loss can be tolerated will depend on\n   the application, media codec, and the
      amount of error correction and\n   packet loss concealment that is applied.
      \ There is an upper bound on\n   the amount of loss that can be corrected, however,
      beyond which the\n   media becomes unusable.  Similarly, many applications have
      some upper\n   bound on the media capture to play-out latency that can be tolerated\n
      \  before the application becomes unusable.  The latency bound will\n   depend
      on the application, but typical values can range from the\n   order of a few
      hundred milliseconds for voice telephony and\n   interactive conferencing applications
      up to several seconds for some\n   video-on-demand systems.\n   As a final circuit
      breaker, RTP senders SHOULD monitor the reported\n   packet loss and delay to
      estimate whether the media is likely to be\n   suitable for the intended purpose.
      \ If the packet loss rate and/or\n   latency is such that the media has become
      unusable and has remained\n   unusable for a significant time period, then the
      application SHOULD\n   cease transmission.  Similarly, receivers SHOULD monitor
      the quality\n   of the media they receive, and if the quality is unusable for
      a\n   significant time period, they SHOULD terminate the session.  This\n   memo
      intentionally does not define a bound on the packet loss rate or\n   latency
      that will result in unusable media, as these are highly\n   application dependent.
      \ Similarly, the time period that is considered\n   significant is application
      dependent but is likely on the order of\n   seconds, or tens of seconds.\n   Sending
      media that suffers from such high packet loss or latency that\n   it is unusable
      at the receiver is both wasteful of resources and is\n   of no benefit to the
      user of the application.  It also is highly\n   likely to be congesting the
      network and disrupting other\n   applications.  As such, the congestion circuit
      breaker will almost\n   certainly trigger to stop flows where the media would
      be unusable due\n   to high packet loss or latency.  However, in pathological
      scenarios\n   where the congestion circuit breaker does not stop the flow, it
      is\n   desirable to prevent the application sending unnecessary traffic that\n
      \  might disrupt other uses of the network.  The role of the media\n   usability
      circuit breaker is to protect the network in such cases.\n"
    title: '4.4.  RTP/AVP Circuit Breaker #4: Media Usability'
  - contents:
    - "4.5.  Ceasing Transmission\n   What it means to cease transmission depends
      on the application.  This\n   could mean stopping a single RTP flow or it could
      mean that multiple\n   bundled RTP flows are stopped.  The intention is that
      the application\n   will stop sending RTP data packets on a particular 5-tuple
      (transport\n   protocol, source and destination ports, source and destination
      IP\n   addresses) until whatever network problem that triggered the RTP\n   circuit
      breaker has dissipated.  RTP flows halted by the circuit\n   breaker SHOULD
      NOT be restarted automatically unless the sender has\n   received information
      that the congestion has dissipated or can\n   reasonably be expected to have
      dissipated.  What could trigger this\n   expectation is necessarily application
      dependent, but could be, for\n   example, an indication that a competing flow
      has finished and freed\n   up some capacity, or for an application running on
      a mobile device it\n   could indicate that the device moved to a new location
      so the flow\n   would traverse a different path if it were restarted.  Ideally,
      a\n   human user will be involved in the decision to try to restart the\n   flow
      since that user will eventually give up if the flows repeatedly\n   trigger
      the circuit breaker.  This will help avoid problems with\n   automatic redial
      systems from congesting the network.\n   It is recognized that the RTP implementation
      in some systems might\n   not be able to determine if a flow setup request was
      initiated by a\n   human user or automatically by some scripted higher-level
      component\n   of the system.  These implementations MUST rate limit attempts
      to\n   restart a flow on the same 5-tuple as used by a flow that triggered\n
      \  the circuit breaker so that the reaction to a triggered circuit\n   breaker
      lasts for at least the triggering interval [RFC8084].\n   The RTP circuit breaker
      will only trigger, and cease transmission,\n   for media flows subject to long-term
      persistent congestion.  Such\n   flows are likely to have poor quality and usability
      for some time\n   before the circuit breaker triggers.  Implementations can
      monitor\n   RTCP Receiver Report blocks being returned for their media flows
      and\n   might find it beneficial to use this information to provide a user\n
      \  interface cue that problems are occurring in advance of the circuit\n   breaker
      triggering.\n"
    title: 4.5.  Ceasing Transmission
  title: 4.  RTP Circuit Breakers for Systems Using the RTP/AVP Profile
- contents:
  - "5.  RTP Circuit Breakers and the RTP/AVPF and RTP/SAVPF Profiles\n   Use of the
    Extended RTP Profile for RTCP-based Feedback (RTP/AVPF)\n   [RFC4585] allows receivers
    to send early RTCP reports, in some cases,\n   to inform the sender about particular
    events in the media stream.\n   There are several use cases for such early RTCP
    reports, including\n   providing rapid feedback to a sender about the onset of
    congestion.\n   The RTP/SAVPF Profile [RFC5124] is a secure variant of the RTP/AVPF\n
    \  profile that is treated the same in the context of the RTP circuit\n   breaker.
    \ These feedback profiles are often used with non-compound\n   RTCP reports [RFC5506]
    to reduce the reporting overhead.\n   Receiving rapid feedback about congestion
    events potentially allows\n   congestion control algorithms to be more responsive
    and to better\n   adapt the media transmission to the limitations of the network.
    \ It\n   is expected that many RTP congestion control algorithms will adopt\n
    \  the RTP/AVPF profile or the RTP/SAVPF profile for this reason and\n   thus
    define new transport-layer feedback reports that suit their\n   requirements.
    \ Since these reports are not yet defined, and likely\n   very specific to the
    details of the congestion control algorithm\n   chosen, they cannot be used as
    part of the generic RTP circuit\n   breaker.\n   Reduced-size RTCP reports sent
    under the RTP/AVPF early feedback\n   rules that do not contain an RTCP SR or
    RR packet MUST be ignored by\n   the congestion circuit breaker (they do not contain
    the information\n   needed by the congestion circuit breaker algorithm) but MUST
    be\n   counted as received packets for the RTCP timeout circuit breaker.\n   Reduced-size
    RTCP reports sent under the RTP/AVPF early feedback\n   rules that contain RTCP
    SR or RR packets MUST be processed by the\n   congestion circuit breaker as if
    they were sent as regular RTCP\n   reports and counted towards the circuit breaker
    conditions specified\n   in Section 4 of this memo.  This will potentially make
    the RTP\n   circuit breaker trigger earlier than it would if the RTP/AVPF profile\n
    \  was not used.\n   When using ECN with RTP (see Section 7), early RTCP feedback
    packets\n   can contain ECN feedback reports.  The count of ECN-CE-marked packets\n
    \  contained in those ECN feedback reports is counted towards the number\n   of
    lost packets reported if the ECN Feedback Report is sent in a\n   compound RTCP
    packet along with an RTCP SR/RR report packet.  Reports\n   of ECN-CE packets
    sent as reduced-size RTCP ECN feedback packets\n   without an RTCP SR/RR packet
    MUST be ignored.\n   These rules are intended to allow the use of low-overhead
    RTP/AVPF\n   feedback for generic NACK messages without triggering the RTP circuit\n
    \  breaker.  This is expected to make such feedback suitable for RTP\n   congestion
    control algorithms that need to quickly report loss events\n   in between regular
    RTCP reports.  The reaction to reduced-size RTCP\n   SR/RR packets is to allow
    such algorithms to send feedback that can\n   trigger the circuit breaker when
    desired.\n   The RTP/AVPF and RTP/SAVPF profiles include the T_rr_interval\n   parameter
    that can be used to adjust the regular RTCP reporting\n   interval.  The use of
    the T_rr_interval parameter changes the\n   behavior of the RTP circuit breaker,
    as described in Section 4.\n"
  title: 5.  RTP Circuit Breakers and the RTP/AVPF and RTP/SAVPF Profiles
- contents:
  - "6.  Impact of RTCP Extended Reports (XR)\n   RTCP Extended Report (XR) blocks
    provide additional reception quality\n   metrics, but do not change the RTCP timing
    rules.  Some of the RTCP\n   XR blocks provide information that might be useful
    for congestion\n   control purposes, others provide non-congestion-related metrics.\n
    \  With the exception of RTCP XR ECN Summary Reports (see Section 7),\n   the
    presence of RTCP XR blocks in a compound RTCP packet does not\n   affect the RTP
    circuit breaker algorithm.  For consistency and ease\n   of implementation, only
    the receiver report blocks contained in RTCP\n   SR packets, RTCP RR packets,
    or RTCP XR ECN Summary Report packets\n   are used by the RTP circuit breaker
    algorithm.\n"
  title: 6.  Impact of RTCP Extended Reports (XR)
- contents:
  - "7.  Impact of Explicit Congestion Notification (ECN)\n   The use of ECN for RTP
    flows does not affect the RTCP timeout circuit\n   breaker (Section 4.1) or the
    media timeout circuit breaker\n   (Section 4.2) since these are both connectivity
    checks that simply\n   determinate if any packets are being received.\n   At the
    time of this writing, there's no consensus on how the receipt\n   of ECN feedback
    will impact the congestion circuit breaker\n   (Section 4.3) or indeed whether
    the congestion circuit breaker ought\n   to take ECN feedback into account.  A
    future replacement of this memo\n   is expected to provide guidance for implementers.\n
    \  For the media usability circuit breaker (Section 4.4), ECN-CE-marked\n   packets
    arrive at the receiver, and if they arrive in time, they will\n   be decoded and
    rendered as normal.  Accordingly, receipt of such\n   packets ought not affect
    the usability of the media, and the arrival\n   of RTCP feedback indicating their
    receipt is not expected to impact\n   the operation of the media usability circuit
    breaker.\n"
  title: 7.  Impact of Explicit Congestion Notification (ECN)
- contents:
  - "8.  Impact of Bundled Media and Layered Coding\n   The RTP circuit breaker operates
    on a per-RTP session basis.  An RTP\n   sender that participates in several RTP
    sessions MUST treat each RTP\n   session independently with regards to the RTP
    circuit breaker.\n   An RTP sender can generate several media streams within a
    single RTP\n   session, with each stream using a different SSRC.  This can happen
    if\n   bundled media are in use when using simulcast or when using layered\n   media
    coding.  By default, each SSRC will be treated independently by\n   the RTP circuit
    breaker.  However, the sender MAY choose to treat the\n   flows (or a subset thereof)
    as a group such that a circuit breaker\n   trigger for one flow applies to the
    group of flows as a whole and\n   either causes the entire group to cease transmission
    or causes the\n   sending rate of the group to reduce by a factor of ten, depending
    on\n   the RTP circuit breaker triggered.  Grouping flows in this way is\n   expected
    to be especially useful for layered flows sent using\n   multiple SSRCs as it
    allows the layered flow to react as a whole,\n   thus ceasing transmission on
    the enhancement layers first to reduce\n   sending rate, if necessary, rather
    than treating each layer\n   independently.  Care needs to be taken if the different
    media streams\n   sent on a single transport-layer flow use different Differentiated\n
    \  Services Code Point (DSCP) values [RFC7657] [WebRTC-QoS] since\n   congestion
    could be experienced differently depending on the DSCP\n   marking.  Accordingly,
    RTP media streams with different DSCP values\n   SHOULD NOT be considered as a
    group when evaluating the RTP circuit\n   breaker conditions.\n"
  title: 8.  Impact of Bundled Media and Layered Coding
- contents:
  - "9.  Security Considerations\n   The security considerations of [RFC3550] apply.\n
    \  If the RTP/AVPF profile is used to provide rapid RTCP feedback, the\n   security
    considerations of [RFC4585] apply.  If ECN feedback for RTP\n   over UDP/IP is
    used, the security considerations of [RFC6679] apply.\n   If non-authenticated
    RTCP reports are used, an on-path attacker can\n   trivially generate fake RTCP
    packets that indicate high packet loss\n   rates and thus cause the circuit breaker
    to trigger and disrupt an\n   RTP session.  This is somewhat more difficult for
    an off-path\n   attacker due to the need to guess the randomly chosen RTP SSRC
    value\n   and the RTP sequence number.  This attack can be avoided if RTCP\n   packets
    are authenticated; authentication options are discussed in\n   [RFC7201].\n   Timely
    operation of the RTP circuit breaker depends on the choice of\n   RTCP reporting
    interval.  If the receiver has a reporting interval\n   that is overly long, then
    the responsiveness of the circuit breaker\n   decreases.  In the limit, the RTP
    circuit breaker can be disabled for\n   all practical purposes by configuring
    an RTCP reporting interval that\n   has a duration of many minutes.  This issue
    is not specific to the\n   circuit breaker: long RTCP reporting intervals also
    prevent reception\n   quality reports, feedback messages, codec control messages,
    etc.,\n   from being used.  Implementations are expected to impose an upper\n
    \  limit on the RTCP reporting interval they are willing to negotiate\n   (based
    on the session bandwidth and RTCP bandwidth fraction) when\n   using the RTP circuit
    breaker, as discussed in Section 4.3.\n"
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3550]  Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,
      \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD
      64, RFC 3550, DOI 10.17487/RFC3550,\n              July 2003, <http://www.rfc-editor.org/info/rfc3550>.\n
      \  [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and\n              Video
      Conferences with Minimal Control\", STD 65, RFC 3551,\n              DOI 10.17487/RFC3551,
      July 2003,\n              <http://www.rfc-editor.org/info/rfc3551>.\n   [RFC3611]
      \ Friedman, T., Ed., Caceres, R., Ed., and A. Clark, Ed.,\n              \"RTP
      Control Protocol Extended Reports (RTCP XR)\",\n              RFC 3611, DOI
      10.17487/RFC3611, November 2003,\n              <http://www.rfc-editor.org/info/rfc3611>.\n
      \  [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n              \"Extended
      RTP Profile for Real-time Transport Control\n              Protocol (RTCP)-Based
      Feedback (RTP/AVPF)\", RFC 4585,\n              DOI 10.17487/RFC4585, July 2006,\n
      \             <http://www.rfc-editor.org/info/rfc4585>.\n   [RFC5348]  Floyd,
      S., Handley, M., Padhye, J., and J. Widmer, \"TCP\n              Friendly Rate
      Control (TFRC): Protocol Specification\",\n              RFC 5348, DOI 10.17487/RFC5348,
      September 2008,\n              <http://www.rfc-editor.org/info/rfc5348>.\n   [RFC6679]
      \ Westerlund, M., Johansson, I., Perkins, C., O'Hanlon, P.,\n              and
      K. Carlberg, \"Explicit Congestion Notification (ECN)\n              for RTP
      over UDP\", RFC 6679, DOI 10.17487/RFC6679, August\n              2012, <http://www.rfc-editor.org/info/rfc6679>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [Floyd]    Floyd, S., Handley, M., Padhye,
      J., and J. Widmer,\n              \"Equation-Based Congestion Control for Unicast\n
      \             Applications\", ACM SIGCOMM Computer Communication\n              Review,
      Volume 30, Issue 4, pages 43-56,\n              DOI 10.1145/347059.347397, August
      2000.\n   [Mathis]   Mathis, M., Semke, J., Mahdavi, J., and T. Ott, \"The\n
      \             Macroscopic Behavior of the TCP Congestion Avoidance\n              Algorithm\",
      ACM SIGCOMM Computer Communication\n              Review, Volume 27, Issue 3,
      pages 67-82,\n              DOI 10.1145/263932.264023, July 1997.\n   [Padhye]
      \  Padhye, J., Firoiu, V., Towsley, D., and J. Kurose,\n              \"Modeling
      TCP Throughput: A Simple Model and its Empirical\n              Validation\",
      ACM SIGCOMM Computer Communication\n              Review Volume 30, Issue 4,
      pages 303-314,\n              DOI 10.1145/285237.285291, August 1998.\n   [RFC2862]
      \ Civanlar, M. and G. Cash, \"RTP Payload Format for Real-\n              Time
      Pointers\", RFC 2862, DOI 10.17487/RFC2862, June 2000,\n              <http://www.rfc-editor.org/info/rfc2862>.\n
      \  [RFC3168]  Ramakrishnan, K., Floyd, S., and D. Black, \"The Addition\n              of
      Explicit Congestion Notification (ECN) to IP\",\n              RFC 3168, DOI
      10.17487/RFC3168, September 2001,\n              <http://www.rfc-editor.org/info/rfc3168>.\n
      \  [RFC4103]  Hellstrom, G. and P. Jones, \"RTP Payload for Text\n              Conversation\",
      RFC 4103, DOI 10.17487/RFC4103, June 2005,\n              <http://www.rfc-editor.org/info/rfc4103>.\n
      \  [RFC5104]  Wenger, S., Chandra, U., Westerlund, M., and B. Burman,\n              \"Codec
      Control Messages in the RTP Audio-Visual Profile\n              with Feedback
      (AVPF)\", RFC 5104, DOI 10.17487/RFC5104,\n              February 2008, <http://www.rfc-editor.org/info/rfc5104>.\n
      \  [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n              Real-time
      Transport Control Protocol (RTCP)-Based Feedback\n              (RTP/SAVPF)\",
      RFC 5124, DOI 10.17487/RFC5124, February\n              2008, <http://www.rfc-editor.org/info/rfc5124>.\n
      \  [RFC5450]  Singer, D. and H. Desineni, \"Transmission Time Offsets in\n              RTP
      Streams\", RFC 5450, DOI 10.17487/RFC5450, March 2009,\n              <http://www.rfc-editor.org/info/rfc5450>.\n
      \  [RFC5506]  Johansson, I. and M. Westerlund, \"Support for Reduced-Size\n
      \             Real-Time Transport Control Protocol (RTCP): Opportunities\n              and
      Consequences\", RFC 5506, DOI 10.17487/RFC5506, April\n              2009, <http://www.rfc-editor.org/info/rfc5506>.\n
      \  [RFC5681]  Allman, M., Paxson, V., and E. Blanton, \"TCP Congestion\n              Control\",
      RFC 5681, DOI 10.17487/RFC5681, September 2009,\n              <http://www.rfc-editor.org/info/rfc5681>.\n
      \  [RFC6798]  Clark, A. and Q. Wu, \"RTP Control Protocol (RTCP) Extended\n
      \             Report (XR) Block for Packet Delay Variation Metric\n              Reporting\",
      RFC 6798, DOI 10.17487/RFC6798, November 2012,\n              <http://www.rfc-editor.org/info/rfc6798>.\n
      \  [RFC6843]  Clark, A., Gross, K., and Q. Wu, \"RTP Control Protocol\n              (RTCP)
      Extended Report (XR) Block for Delay Metric\n              Reporting\", RFC
      6843, DOI 10.17487/RFC6843, January 2013,\n              <http://www.rfc-editor.org/info/rfc6843>.\n
      \  [RFC6958]  Clark, A., Zhang, S., Zhao, J., and Q. Wu, Ed., \"RTP\n              Control
      Protocol (RTCP) Extended Report (XR) Block for\n              Burst/Gap Loss
      Metric Reporting\", RFC 6958,\n              DOI 10.17487/RFC6958, May 2013,\n
      \             <http://www.rfc-editor.org/info/rfc6958>.\n   [RFC7002]  Clark,
      A., Zorn, G., and Q. Wu, \"RTP Control Protocol\n              (RTCP) Extended
      Report (XR) Block for Discard Count Metric\n              Reporting\", RFC 7002,
      DOI 10.17487/RFC7002, September\n              2013, <http://www.rfc-editor.org/info/rfc7002>.\n
      \  [RFC7003]  Clark, A., Huang, R., and Q. Wu, Ed., \"RTP Control\n              Protocol
      (RTCP) Extended Report (XR) Block for Burst/Gap\n              Discard Metric
      Reporting\", RFC 7003, DOI 10.17487/RFC7003,\n              September 2013,
      <http://www.rfc-editor.org/info/rfc7003>.\n   [RFC7097]  Ott, J., Singh, V.,
      Ed., and I. Curcio, \"RTP Control\n              Protocol (RTCP) Extended Report
      (XR) for RLE of Discarded\n              Packets\", RFC 7097, DOI 10.17487/RFC7097,
      January 2014,\n              <http://www.rfc-editor.org/info/rfc7097>.\n   [RFC7201]
      \ Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\",
      RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <http://www.rfc-editor.org/info/rfc7201>.\n
      \  [RFC7657]  Black, D., Ed. and P. Jones, \"Differentiated Services\n              (Diffserv)
      and Real-Time Communication\", RFC 7657,\n              DOI 10.17487/RFC7657,
      November 2015,\n              <http://www.rfc-editor.org/info/rfc7657>.\n   [RFC7713]
      \ Mathis, M. and B. Briscoe, \"Congestion Exposure (ConEx)\n              Concepts,
      Abstract Mechanism, and Requirements\", RFC 7713,\n              DOI 10.17487/RFC7713,
      December 2015,\n              <http://www.rfc-editor.org/info/rfc7713>.\n   [RFC8084]
      \ Fairhurst, G., \"Network Transport Circuit Breakers\",\n              BCP
      208, RFC 8084, DOI 10.17487/RFC8084, March 2017,\n              <http://www.rfc-editor.org/info/rfc8084>.\n
      \  [RFC8085]  Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n              Guidelines\",
      BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n              March 2017, <http://www.rfc-editor.org/info/rfc8085>.\n
      \  [RFC8108]  Lennox, J., Westerlund, M., Wu, Q., and C. Perkins,\n              \"Sending
      Multiple RTP Streams in a Single RTP Session\",\n              RFC 8108, DOI
      10.17487/RFC8108, March 2017,\n              <http://www.rfc-editor.org/info/rfc8108>.\n
      \  [Sarker]   Sarker, Z., Singh, V., and C. Perkins, \"An Evaluation of\n              RTP
      Circuit Breaker Performance on LTE Networks\",\n              Proceedings of
      the IEEE INFOCOM Workshop on Communication\n              and Networking Techniques
      for Contemporary Video,\n              DOI 10.1109/INFCOMW.2014.6849240, April
      2014.\n   [Singh]    Singh, V., McQuistin, S., Ellis, M., and C. Perkins,\n
      \             \"Circuit Breakers for Multimedia Congestion Control\",\n              Proceedings
      of the 2013 20th International Packet Video\n              Workshop (PV), DOI
      10.1109/PV.2013.6691439, December 2013.\n   [WebRTC-QoS]\n              Jones,
      P., Dhesikan, S., Jennings, C., and D. Druta, \"DSCP\n              Packet Markings
      for WebRTC QoS\", Work in Progress,\n              draft-ietf-tsvwg-rtcweb-qos-18,
      August 2016.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Bernard Aboba, Harald Alvestrand,
    Ben\n   Campbell, Alissa Cooper, Spencer Dawkins, Gorry Fairhurst, Stephen\n   Farrell,
    Nazila Fough, Kevin Gross, Cullen Jennings, Randell Jesup,\n   Mirja Kuehlewind,
    Jonathan Lennox, Matt Mathis, Stephen McQuistin,\n   Simon Perreault, Eric Rescorla,
    Abheek Saha, Meral Shirazipour, Fabio\n   Verdicchio, and Magnus Westerlund for
    their valuable feedback.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Colin Perkins\n   University of Glasgow\n   School of
    Computing Science\n   Glasgow  G12 8QQ\n   United Kingdom\n   Email: csp@csperkins.org\n
    \  Varun Singh\n   CALLSTATS I/O Oy\n   Runeberginkatu 4c A 4\n   Helsinki  00100\n
    \  Finland\n   Email: varun@callstats.io\n   URI:   https://www.callstats.io/about\n"
  title: Authors' Addresses
