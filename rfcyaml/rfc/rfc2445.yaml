- title: __initial_text__
  contents:
  - "     Internet Calendaring and Scheduling Core Object Specification\n        \
    \                      (iCalendar)\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   There is a clear need to provide and deploy interoperable calendaring\n\
    \   and scheduling services for the Internet. Current group scheduling\n   and\
    \ Personal Information Management (PIM) products are being extended\n   for use\
    \ across the Internet, today, in proprietary ways. This memo\n   has been defined\
    \ to provide the definition of a common format for\n   openly exchanging calendaring\
    \ and scheduling information across the\n   Internet.\n   This memo is formatted\
    \ as a registration for a MIME media type per\n   [RFC 2048]. However, the format\
    \ in this memo is equally applicable\n   for use outside of a MIME message content\
    \ type.\n   The proposed media type value is 'text/calendar'. This string would\n\
    \   label a media type containing calendaring and scheduling information\n   encoded\
    \ as text characters formatted in a manner outlined below.\n   This MIME media\
    \ type provides a standard content type for capturing\n   calendar event, to-do\
    \ and journal entry information. It also can be\n   used to convey free/busy time\
    \ information. The content type is\n   suitable as a MIME message entity that\
    \ can be transferred over MIME\n   based email systems, using HTTP or some other\
    \ Internet transport. In\n   addition, the content type is useful as an object\
    \ for interactions\n   between desktop applications using the operating system\
    \ clipboard,\n   drag/drop or file systems capabilities.\n   This memo is based\
    \ on the earlier work of the vCalendar specification\n   for the exchange of personal\
    \ calendaring and scheduling information.\n   In order to avoid confusion with\
    \ this referenced work, this memo is\n   to be known as the iCalendar specification.\n\
    \   This memo defines the format for specifying iCalendar object methods.\n  \
    \ An iCalendar object method is a set of usage constraints for the\n   iCalendar\
    \ object. For example, these methods might define scheduling\n   messages that\
    \ request an event be scheduled, reply to an event\n   request, send a cancellation\
    \ notice for an event, modify or replace\n   the definition of an event, provide\
    \ a counter proposal for an\n   original event request, delegate an event request\
    \ to another\n   individual, request free or busy time, reply to a free or busy\
    \ time\n   request, or provide similar scheduling messages for a to-do or\n  \
    \ journal entry calendar component. The iCalendar Transport-indendent\n   Interoperability\
    \ Protocol (iTIP) defined in [ITIP] is one such\n   scheduling protocol.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1 Introduction.....................................................5\n\
    \   2 Basic Grammar and Conventions....................................6\n   \
    \ 2.1 Formatting Conventions .......................................7\n    2.2\
    \ Related Memos ................................................8\n    2.3 International\
    \ Considerations .................................8\n   3 Registration Information.........................................8\n\
    \    3.1 Content Type .................................................8\n   \
    \ 3.2 Parameters ...................................................9\n    3.3\
    \ Content Header Fields .......................................10\n    3.4 Encoding\
    \ Considerations .....................................10\n    3.5 Security Considerations\
    \ .....................................10\n    3.6 Interoperability Considerations\
    \ .............................11\n    3.7 Applications Which Use This Media Type\
    \ ......................11\n    3.8 Additional Information ......................................11\n\
    \    3.9 Magic Numbers ...............................................11\n   \
    \ 3.10 File Extensions ............................................11\n    3.11\
    \ Contact for Further Information: ...........................12\n    3.12 Intended\
    \ Usage .............................................12\n    3.13 Authors/Change\
    \ Controllers .................................12\n   4 iCalendar Object Specification..................................13\n\
    \    4.1 Content Lines ...............................................13\n   \
    \  4.1.1 List and Field Separators ................................16\n     4.1.2\
    \ Multiple Values ..........................................16\n     4.1.3 Binary\
    \ Content ...........................................16\n     4.1.4 Character\
    \ Set ............................................17\n    4.2 Property Parameters\
    \ .........................................17\n     4.2.1 Alternate Text Representation\
    \ ............................18\n     4.2.2 Common Name ..............................................19\n\
    \     4.2.3 Calendar User Type .......................................20\n   \
    \  4.2.4 Delegators ...............................................20\n     4.2.5\
    \ Delegatees ...............................................21\n     4.2.6 Directory\
    \ Entry Reference ................................21\n     4.2.7 Inline Encoding\
    \ ..........................................22\n     4.2.8 Format Type ..............................................23\n\
    \     4.2.9 Free/Busy Time Type ......................................23\n   \
    \  4.2.10 Language ................................................24\n     4.2.11\
    \ Group or List Membership ................................25\n     4.2.12 Participation\
    \ Status ....................................25\n     4.2.13 Recurrence Identifier\
    \ Range .............................27\n     4.2.14 Alarm Trigger Relationship\
    \ ..............................27\n     4.2.15 Relationship Type .......................................28\n\
    \     4.2.16 Participation Role ......................................29\n   \
    \  4.2.17 RSVP Expectation ........................................29\n     4.2.18\
    \ Sent By .................................................30\n     4.2.19 Time\
    \ Zone Identifier ....................................30\n     4.2.20 Value Data\
    \ Types ........................................32\n    4.3 Property Value Data\
    \ Types ...................................32\n     4.3.1 Binary ...................................................33\n\
    \     4.3.2 Boolean ..................................................33\n   \
    \  4.3.3 Calendar User Address ....................................34\n     4.3.4\
    \ Date .....................................................34\n     4.3.5 Date-Time\
    \ ................................................35\n     4.3.6 Duration .................................................37\n\
    \     4.3.7 Float ....................................................38\n   \
    \  4.3.8 Integer ..................................................38\n     4.3.9\
    \ Period of Time ...........................................39\n     4.3.10 Recurrence\
    \ Rule .........................................40\n     4.3.11 Text ....................................................45\n\
    \     4.3.12 Time ....................................................47\n   \
    \  4.3.13 URI .....................................................49\n     4.3.14\
    \ UTC Offset ..............................................49\n    4.4 iCalendar\
    \ Object ............................................50\n    4.5 Property ....................................................51\n\
    \    4.6 Calendar Components .........................................51\n   \
    \  4.6.1 Event Component ..........................................52\n     4.6.2\
    \ To-do Component ..........................................55\n     4.6.3 Journal\
    \ Component ........................................56\n     4.6.4 Free/Busy Component\
    \ ......................................58\n     4.6.5 Time Zone Component ......................................60\n\
    \     4.6.6 Alarm Component ..........................................67\n   \
    \ 4.7 Calendar Properties .........................................73\n     4.7.1\
    \ Calendar Scale ...........................................73\n     4.7.2 Method\
    \ ...................................................74\n     4.7.3 Product Identifier\
    \ .......................................75\n     4.7.4 Version ..................................................76\n\
    \    4.8 Component Properties ........................................77\n   \
    \  4.8.1 Descriptive Component Properties .........................77\n      \
    \ 4.8.1.1 Attachment ...........................................77\n       4.8.1.2\
    \ Categories ...........................................78\n       4.8.1.3 Classification\
    \ .......................................79\n       4.8.1.4 Comment ..............................................80\n\
    \       4.8.1.5 Description ..........................................81\n   \
    \    4.8.1.6 Geographic Position ..................................82\n      \
    \ 4.8.1.7 Location .............................................84\n       4.8.1.8\
    \ Percent Complete .....................................85\n       4.8.1.9 Priority\
    \ .............................................85\n       4.8.1.10 Resources ...........................................87\n\
    \       4.8.1.11 Status ..............................................88\n   \
    \    4.8.1.12 Summary .............................................89\n     4.8.2\
    \ Date and Time Component Properties .......................90\n       4.8.2.1\
    \ Date/Time Completed ..................................90\n       4.8.2.2 Date/Time\
    \ End ........................................91\n       4.8.2.3 Date/Time Due\
    \ ........................................92\n       4.8.2.4 Date/Time Start ......................................93\n\
    \       4.8.2.5 Duration .............................................94\n   \
    \    4.8.2.6 Free/Busy Time .......................................95\n      \
    \ 4.8.2.7 Time Transparency ....................................96\n     4.8.3\
    \ Time Zone Component Properties ...........................97\n       4.8.3.1\
    \ Time Zone Identifier .................................97\n       4.8.3.2 Time\
    \ Zone Name .......................................98\n       4.8.3.3 Time Zone\
    \ Offset From ................................99\n       4.8.3.4 Time Zone Offset\
    \ To .................................100\n       4.8.3.5 Time Zone URL .......................................101\n\
    \     4.8.4 Relationship Component Properties .......................102\n   \
    \    4.8.4.1 Attendee ............................................102\n      \
    \ 4.8.4.2 Contact .............................................104\n       4.8.4.3\
    \ Organizer ...........................................106\n       4.8.4.4 Recurrence\
    \ ID .......................................107\n       4.8.4.5 Related To ..........................................109\n\
    \       4.8.4.6 Uniform Resource Locator ............................110\n   \
    \    4.8.4.7 Unique Identifier ...................................111\n     4.8.5\
    \ Recurrence Component Properties .........................112\n       4.8.5.1\
    \ Exception Date/Times ................................112\n       4.8.5.2 Exception\
    \ Rule ......................................114\n       4.8.5.3 Recurrence Date/Times\
    \ ...............................115\n       4.8.5.4 Recurrence Rule .....................................117\n\
    \     4.8.6 Alarm Component Properties ..............................126\n   \
    \    4.8.6.1 Action ..............................................126\n      \
    \ 4.8.6.2 Repeat Count ........................................126\n       4.8.6.3\
    \ Trigger .............................................127\n     4.8.7 Change\
    \ Management Component Properties ..................129\n       4.8.7.1 Date/Time\
    \ Created ...................................129\n       4.8.7.2 Date/Time Stamp\
    \ .....................................130\n       4.8.7.3 Last Modified .......................................131\n\
    \       4.8.7.4 Sequence Number .....................................131\n   \
    \  4.8.8 Miscellaneous Component Properties ......................133\n      \
    \ 4.8.8.1 Non-standard Properties .............................133\n       4.8.8.2\
    \ Request Status ......................................134\n   5 iCalendar Object\
    \ Examples......................................136\n   6 Recommended Practices..........................................140\n\
    \   7 Registration of Content Type Elements..........................141\n   \
    \ 7.1 Registration of New and Modified iCalendar Object Methods ..141\n    7.2\
    \ Registration of New Properties .............................141\n     7.2.1\
    \ Define the property .....................................142\n     7.2.2 Post\
    \ the Property definition ............................143\n     7.2.3 Allow a\
    \ comment period ..................................143\n     7.2.4 Submit the\
    \ property for approval ........................143\n    7.3 Property Change Control\
    \ ....................................143\n   8 References.....................................................144\n\
    \   9 Acknowledgments................................................145\n   10\
    \ Authors' and Chairs' Addresses................................146\n   11 Full\
    \ Copyright Statement......................................148\n"
- title: 1 Introduction
  contents:
  - "1 Introduction\n   The use of calendaring and scheduling has grown considerably\
    \ in the\n   last decade. Enterprise and inter-enterprise business has become\n\
    \   dependent on rapid scheduling of events and actions using this\n   information\
    \ technology. However, the longer term growth of\n   calendaring and scheduling,\
    \ is currently limited by the lack of\n   Internet standards for the message content\
    \ types that are central to\n   these knowledgeware applications. This memo is\
    \ intended to progress\n   the level of interoperability possible between dissimilar\
    \ calendaring\n   and scheduling applications. This memo defines a MIME content\
    \ type\n   for exchanging electronic calendaring and scheduling information. The\n\
    \   Internet Calendaring and Scheduling Core Object Specification, or\n   iCalendar,\
    \ allows for the capture and exchange of information\n   normally stored within\
    \ a calendaring and scheduling application; such\n   as a Personal Information\
    \ Manager (PIM) or a Group Scheduling\n   product.\n   The iCalendar format is\
    \ suitable as an exchange format between\n   applications or systems. The format\
    \ is defined in terms of a MIME\n   content type. This will enable the object\
    \ to be exchanged using\n   several transports, including but not limited to SMTP,\
    \ HTTP, a file\n   system, desktop interactive protocols such as the use of a\
    \ memory-\n   based clipboard or drag/drop interactions, point-to-point\n   asynchronous\
    \ communication, wired-network transport, or some form of\n   unwired transport\
    \ such as infrared might also be used.\n   The memo also provides for the definition\
    \ of iCalendar object methods\n   that will map this content type to a set of\
    \ messages for supporting\n   calendaring and scheduling operations such as requesting,\
    \ replying\n   to, modifying, and canceling meetings or appointments, to-dos and\n\
    \   journal entries. The iCalendar object methods can be used to define\n   other\
    \ calendaring and scheduling operations such a requesting for and\n   replying\
    \ with free/busy time data. Such a scheduling protocol is\n   defined in the iCalendar\
    \ Transport-independent Interoperability\n   Protocol (iTIP) defined in [ITIP].\n\
    \   The memo also includes a formal grammar for the content type based on\n  \
    \ the Internet ABNF defined in [RFC 2234]. This ABNF is required for\n   the implementation\
    \ of parsers and to serve as the definitive\n   reference when ambiguities or\
    \ questions arise in interpreting the\n   descriptive prose definition of the\
    \ memo.\n"
- title: 2 Basic Grammar and Conventions
  contents:
  - "2 Basic Grammar and Conventions\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"NOT RECOMMENDED\", \"MAY\" and\n   \"OPTIONAL\" in this document are to be\
    \ interoperated as described in\n   [RFC 2119].\n   This memo makes use of both\
    \ a descriptive prose and a more formal\n   notation for defining the calendaring\
    \ and scheduling format.\n   The notation used in this memo is the ABNF notation\
    \ of [RFC 2234].\n   Readers intending on implementing this format defined in\
    \ this memo\n   should be familiar with this notation in order to properly interpret\n\
    \   the specifications of this memo.\n   All numeric and hexadecimal values used\
    \ in this memo are given in\n   decimal notation.\n   All names of properties,\
    \ property parameters, enumerated property\n   values and property parameter values\
    \ are case-insensitive. However,\n   all other property values are case-sensitive,\
    \ unless otherwise\n   stated.\n        Note: All indented editorial notes, such\
    \ as this one, are\n        intended to provide the reader with additional information.\
    \ The\n        information is not essential to the building of an\n        implementation\
    \ conformant with this memo. The information is\n        provided to highlight\
    \ a particular feature or characteristic of\n        the memo.\n   The format\
    \ for the iCalendar object is based on the syntax of the\n   [RFC 2425] content\
    \ type. While the iCalendar object is not a profile\n   of the [RFC 2425] content\
    \ type, it does reuse a number of the\n   elements from the [RFC 2425] specification.\n"
- title: 2.1 Formatting Conventions
  contents:
  - "2.1 Formatting Conventions\n   The mechanisms defined in this memo are defined\
    \ in prose. Many of the\n   terms used to describe these have common usage that\
    \ is different than\n   the standards usage of this memo. In order to reference\
    \ within this\n   memo elements of the calendaring and scheduling model, core\
    \ object\n   (this memo) or interoperability protocol [ITIP] some formatting\n\
    \   conventions have been used. Calendaring and scheduling roles are\n   referred\
    \ to in quoted-strings of text with the first character of\n   each word in upper\
    \ case. For example, \"Organizer\" refers to a role of\n   a \"Calendar User\"\
    \ within the scheduling protocol defined by [ITIP].\n   Calendar components defined\
    \ by this memo are referred to with\n   capitalized, quoted-strings of text. All\
    \ calendar components start\n   with the letter \"V\". For example, \"VEVENT\"\
    \ refers to the event\n   calendar component, \"VTODO\" refers to the to-do calendar\
    \ component\n   and \"VJOURNAL\" refers to the daily journal calendar component.\n\
    \   Scheduling methods defined by [ITIP] are referred to with\n   capitalized,\
    \ quoted-strings of text. For example, \"REQUEST\" refers to\n   the method for\
    \ requesting a scheduling calendar component be created\n   or modified, \"REPLY\"\
    \ refers to the method a recipient of a request\n   uses to update their status\
    \ with the \"Organizer\" of the calendar\n   component.\n   The properties defined\
    \ by this memo are referred to with capitalized,\n   quoted-strings of text, followed\
    \ by the word \"property\". For example,\n   \"ATTENDEE\" property refers to the\
    \ iCalendar property used to convey\n   the calendar address of a calendar user.\
    \ Property parameters defined\n   by this memo are referred to with lowercase,\
    \ quoted-strings of text,\n   followed by the word \"parameter\". For example,\
    \ \"value\" parameter\n   refers to the iCalendar property parameter used to override\
    \ the\n   default data type for a property value. Enumerated values defined by\n\
    \   this memo are referred to with capitalized text, either alone or\n   followed\
    \ by the word \"value\". For example, the \"MINUTELY\" value can\n   be used with\
    \ the \"FREQ\" component of the \"RECUR\" data type to specify\n   repeating components\
    \ based on an interval of one minute or more.\n"
- title: 2.2 Related Memos
  contents:
  - "2.2 Related Memos\n   Implementers will need to be familiar with several other\
    \ memos that,\n   along with this memo, form a framework for Internet calendaring\
    \ and\n   scheduling standards. This memo, [ICAL], specifies a core\n   specification\
    \ of objects, data types, properties and property\n   parameters.\n   [ITIP] -\
    \ specifies an interoperability protocol for scheduling\n   between different\
    \ implementations;\n   [IMIP] specifies an Internet email binding for [ITIP].\n\
    \   This memo does not attempt to repeat the specification of concepts or\n  \
    \ definitions from these other memos. Where possible, references are\n   made\
    \ to the memo that provides for the specification of these\n   concepts or definitions.\n"
- title: 2.3 International Considerations
  contents:
  - "2.3 International Considerations\n   In the rest of this document, descriptions\
    \ of characters are of the\n   form \"character name (codepoint)\", where \"codepoint\"\
    \ is from the US-\n   ASCII character set. The \"character name\" is the authoritative\n\
    \   description; (codepoint) is a reference to that character in US-ASCII\n  \
    \ or US-ASCII compatible sets (for example the ISO-8859-x family, UTF-\n   8,\
    \ ISO-2022-xx, KOI8-R). If a non-US-ASCII compatible character set\n   is used,\
    \ appropriate code-point from that character set MUST be\n   chosen instead. Use\
    \ of non-US-ASCII-compatible character sets is NOT\n   recommended.\n"
- title: 3  Registration Information
  contents:
  - "3  Registration Information\n   The Calendaring and Scheduling Core Object Specification\
    \ is intended\n   for use as a MIME content type. However, the implementation\
    \ of the\n   memo is in no way limited solely as a MIME content type.\n"
- title: 3.1 Content Type
  contents:
  - "3.1 Content Type\n   The following text is intended to register this memo as\
    \ the MIME\n   content type \"text/calendar\".\n     To: ietf-types@uninett.no\n\
    \     Subject: Registration of MIME content type text/calendar.\n     MIME media\
    \ type name: text\n     MIME subtype name: calendar\n"
- title: 3.2 Parameters
  contents:
  - "3.2 Parameters\n   Required parameters: none\n   Optional parameters: charset,\
    \ method, component and optinfo\n   The \"charset\" parameter is defined in [RFC\
    \ 2046] for other body\n   parts. It is used to identify the default character\
    \ set used within\n   the body part.\n   The \"method\" parameter is used to convey\
    \ the iCalendar object method\n   or transaction semantics for the calendaring\
    \ and scheduling\n   information. It also is an identifier for the restricted\
    \ set of\n   properties and values that the iCalendar object consists of. The\n\
    \   parameter is to be used as a guide for applications interpreting the\n   information\
    \ contained within the body part. It SHOULD NOT be used to\n   exclude or require\
    \ particular pieces of information unless the\n   identified method definition\
    \ specifically calls for this behavior.\n   Unless specifically forbidden by a\
    \ particular method definition, a\n   text/calendar content type can contain any\
    \ set of properties\n   permitted by the Calendaring and Scheduling Core Object\n\
    \   Specification. The \"method\" parameter MUST be the same value as that\n \
    \  specified in the \"METHOD\" component property in the iCalendar object.\n \
    \  If one is present, the other MUST also be present.\n   The value for the \"\
    method\" parameter is defined as follows:\n        method  = 1*(ALPHA / DIGIT\
    \ / \"-\")\n        ; IANA registered iCalendar object method\n   The \"component\"\
    \ parameter conveys the type of iCalendar calendar\n   component within the body\
    \ part. If the iCalendar object contains more\n   than one calendar component\
    \ type, then multiple component parameters\n   MUST be specified.\n   The value\
    \ for the \"component\" parameter is defined as follows:\n        component  \
    \     = (\"VEVENT\" / \"VTODO\" / \"VJOURNAL\" / \"VFREEBUSY\"\n             \
    \           / \"VTIMEZONE\" / x-name / iana-token)\n   The \"optinfo\" parameter\
    \ conveys optional information about the\n   iCalendar object within the body\
    \ part. This parameter can only\n   specify semantics already specified by the\
    \ iCalendar object and that\n   can be otherwise determined by parsing the body\
    \ part. In addition,\n   the optional information specified by this parameter\
    \ MUST be\n   consistent with that information specified by the iCalendar object.\n\
    \   For example, it can be used to convey the \"Attendee\" response status\n \
    \  to a meeting request. The parameter value consists of a string value.\n   The\
    \ parameter can be specified multiple times.\n   This parameter MAY only specify\
    \ semantics already specified by the\n   iCalendar object and that can be otherwise\
    \ determined by parsing the\n   body part.\n   The value for the \"optinfo\" parameter\
    \ is defined as follows:\n        optinfo = infovalue / qinfovalue\n        infovalue\
    \       = iana-token / x-name\n        qinfovalue      = DQUOTE (infovalue) DQUOTE\n"
- title: 3.3 Content Header Fields
  contents:
  - "3.3 Content Header Fields\n   Optional content header fields: Any header fields\
    \ defined by [RFC\n   2045].\n"
- title: 3.4 Encoding Considerations
  contents:
  - "3.4 Encoding Considerations\n   This MIME content type can contain 8bit characters,\
    \ so the use of\n   quoted-printable or BASE64 MIME content-transfer-encodings\
    \ might be\n   necessary when iCalendar objects are transferred across protocols\n\
    \   restricted to the 7bit repertoire. Note that a text valued property\n   in\
    \ the content entity can also have content encoding of special\n   characters\
    \ using a BACKSLASH character (US-ASCII decimal 92)\n   escapement technique.\
    \ This means that content values can end up\n   encoded twice.\n"
- title: 3.5 Security Considerations
  contents:
  - "3.5 Security Considerations\n   SPOOFING - - In this memo, the \"Organizer\"\
    \ is the only person\n   authorized to make changes to an existing \"VEVENT\"\
    , \"VTODO\",\n   \"VJOURNAL\" calendar component and redistribute the updates\
    \ to the\n   \"Attendees\". An iCalendar object that maliciously changes or cancels\n\
    \   an existing \"VEVENT\", \"VTODO\" or \"VJOURNAL\" or \"VFREEBUSY\" calendar\n\
    \   component might be constructed by someone other than the \"Organizer\"\n \
    \  and sent to the \"Attendees\". In addition in this memo, other than the\n \
    \  \"Organizer\", an \"Attendee\" of a \"VEVENT\", \"VTODO\", \"VJOURNAL\"\n \
    \  calendar component is the only other person authorized to update any\n   parameter\
    \ associated with their \"ATTENDEE\" property and send it to\n   the \"Organizer\"\
    . An iCalendar object that maliciously changes the\n   \"ATTENDEE\" parameters\
    \ can be constructed by someone other than the\n   real \"Attendee\" and sent\
    \ to the \"Organizer\".\n   PROCEDURAL ALARMS - - An iCalendar object can be created\
    \ that\n   contains a \"VEVENT\" and \"VTODO\" calendar component with \"VALARM\"\
    \n   calendar components. The \"VALARM\" calendar component can be of type\n \
    \  PROCEDURE and can have an attachment containing some sort of\n   executable\
    \ program. Implementations that incorporate these types of\n   alarms are subject\
    \ to any virus or malicious attack that might occur\n   as a result of executing\
    \ the attachment.\n   ATTACHMENTS - - An iCalendar object can include references\
    \ to Uniform\n   Resource Locators that can be programmed resources.\n   Implementers\
    \ and users of this memo should be aware of the network\n   security implications\
    \ of accepting and parsing such information. In\n   addition, the security considerations\
    \ observed by implementations of\n   electronic mail systems should be followed\
    \ for this memo.\n"
- title: 3.6 Interoperability Considerations
  contents:
  - "3.6 Interoperability Considerations\n   This MIME content type is intended to\
    \ define a common format for\n   conveying calendaring and scheduling information\
    \ between different\n   systems. It is heavily based on the earlier [VCAL] industry\n\
    \   specification.\n"
- title: 3.7 Applications Which Use This Media Type
  contents:
  - "3.7 Applications Which Use This Media Type\n   This content-type is designed\
    \ for widespread use by Internet\n   calendaring and scheduling applications.\
    \ In addition, applications in\n   the workflow and document management area might\
    \ find this content-\n   type applicable. The [ITIP] and [IMIP] Internet protocols\
    \ directly\n   use this content-type also. Future work on an Internet calendar\n\
    \   access protocol will utilize this content-type too.\n"
- title: 3.8 Additional Information
  contents:
  - "3.8 Additional Information\n   This memo defines this content-type.\n"
- title: 3.9 Magic Numbers
  contents:
  - "3.9 Magic Numbers\n   None.\n"
- title: 3.10 File Extensions
  contents:
  - "3.10 File Extensions\n   The file extension of \"ics\" is to be used to designate\
    \ a file\n   containing (an arbitrary set of) calendaring and scheduling\n   information\
    \ consistent with this MIME content type.\n   The file extension of \"ifb\" is\
    \ to be used to designate a file\n   containing free or busy time information\
    \ consistent with this MIME\n   content type.\n   Macintosh file type codes: The\
    \ file type code of \"iCal\" is to be used\n   in Apple MacIntosh operating system\
    \ environments to designate a file\n   containing calendaring and scheduling information\
    \ consistent with\n   this MIME media type.\n   The file type code of \"iFBf\"\
    \ is to be used in Apple MacIntosh\n   operating system environments to designate\
    \ a file containing free or\n   busy time information consistent with this MIME\
    \ media type.\n"
- title: '3.11 Contact for Further Information:'
  contents:
  - "3.11 Contact for Further Information:\n   Frank Dawson\n   6544 Battleford Drive\n\
    \   Raleigh, NC 27613-3502\n   919-676-9515 (Telephone)\n   919-676-9564 (Data/Facsimile)\n\
    \   Frank_Dawson@Lotus.com (Internet Mail)\n   Derik Stenerson\n   One Microsoft\
    \ Way\n   Redmond, WA  98052-6399\n   425-936-5522 (Telephone)\n   425-936-7329\
    \ (Facsimile)\n   deriks@microsoft.com (Internet Mail)\n"
- title: 3.12 Intended Usage
  contents:
  - "3.12 Intended Usage\n   COMMON\n"
- title: 3.13 Authors/Change Controllers
  contents:
  - "3.13 Authors/Change Controllers\n   Frank Dawson\n   6544 Battleford Drive\n\
    \   Raleigh, NC 27613-3502\n   919-676-9515 (Telephone)\n   919-676-9564 (Data/Facsimile)\n\
    \   Frank_Dawson@Lotus.com (Internet Mail)\n   Derik Stenerson\n   One Microsoft\
    \ Way\n   Redmond, WA  98052-6399\n   425-936-5522 (Telephone)\n   425-936-7329\
    \ (Facsimile)\n   deriks@microsoft.com (Internet Mail)\n"
- title: 4 iCalendar Object Specification
  contents:
  - "4 iCalendar Object Specification\n   The following sections define the details\
    \ of a Calendaring and\n   Scheduling Core Object Specification. This information\
    \ is intended to\n   be an integral part of the MIME content type registration.\
    \ In\n   addition, this information can be used independent of such content\n\
    \   registration. In particular, this memo has direct applicability for\n   use\
    \ as a calendaring and scheduling exchange format in file-, memory-\n   or network-based\
    \ transport mechanisms.\n"
- title: 4.1 Content Lines
  contents:
  - "4.1 Content Lines\n   The iCalendar object is organized into individual lines\
    \ of text,\n   called content lines. Content lines are delimited by a line break,\n\
    \   which is a CRLF sequence (US-ASCII decimal 13, followed by US-ASCII\n   decimal\
    \ 10).\n   Lines of text SHOULD NOT be longer than 75 octets, excluding the line\n\
    \   break. Long content lines SHOULD be split into a multiple line\n   representations\
    \ using a line \"folding\" technique. That is, a long\n   line can be split between\
    \ any two characters by inserting a CRLF\n   immediately followed by a single\
    \ linear white space character (i.e.,\n   SPACE, US-ASCII decimal 32 or HTAB,\
    \ US-ASCII decimal 9). Any sequence\n   of CRLF followed immediately by a single\
    \ linear white space character\n   is ignored (i.e., removed) when processing\
    \ the content type.\n   For example the line:\n     DESCRIPTION:This is a long\
    \ description that exists on a long line.\n   Can be represented as:\n     DESCRIPTION:This\
    \ is a lo\n      ng description\n       that exists on a long line.\n   The process\
    \ of moving from this folded multiple line representation\n   to its single line\
    \ representation is called \"unfolding\". Unfolding is\n   accomplished by removing\
    \ the CRLF character and the linear white\n   space character that immediately\
    \ follows.\n   When parsing a content line, folded lines MUST first be unfolded\n\
    \   according to the unfolding procedure described above. When generating\n  \
    \ a content line, lines longer than 75 octets SHOULD be folded\n   according to\
    \ the folding procedure described above.\n   The content information associated\
    \ with an iCalendar object is\n   formatted using a syntax similar to that defined\
    \ by [RFC 2425]. That\n   is, the content information consists of CRLF-separated\
    \ content lines.\n   The following notation defines the lines of content in an\
    \ iCalendar\n   object:\n     contentline        = name *(\";\" param ) \":\"\
    \ value CRLF\n        ; This ABNF is just a general definition for an initial\
    \ parsing\n        ; of the content line into its property name, parameter list,\n\
    \        ; and value string\n     ; When parsing a content line, folded lines\
    \ MUST first\n        ; be unfolded according to the unfolding procedure\n   \
    \     ; described above. When generating a content line, lines\n        ; longer\
    \ than 75 octets SHOULD be folded according to\n        ; the folding procedure\
    \ described above.\n     name               = x-name / iana-token\n     iana-token\
    \ = 1*(ALPHA / DIGIT / \"-\")\n     ; iCalendar identifier registered with IANA\n\
    \     x-name             = \"X-\" [vendorid \"-\"] 1*(ALPHA / DIGIT / \"-\")\n\
    \     ; Reservered for experimental use. Not intended for use in\n     ; released\
    \ products.\n     vendorid   = 3*(ALPHA / DIGIT)     ;Vendor identification\n\
    \     param              = param-name \"=\" param-value\n                    \
    \      *(\",\" param-value)\n        ; Each property defines the specific ABNF\
    \ for the parameters\n        ; allowed on the property. Refer to specific properties\
    \ for\n        ; precise parameter ABNF.\n     param-name = iana-token / x-token\n\
    \     param-value        = paramtext / quoted-string\n     paramtext  = *SAFE-CHAR\n\
    \     value      = *VALUE-CHAR\n     quoted-string      = DQUOTE *QSAFE-CHAR DQUOTE\n\
    \     NON-US-ASCII       = %x80-F8\n     ; Use restricted by charset parameter\n\
    \     ; on outer MIME object (UTF-8 preferred)\n     QSAFE-CHAR = WSP / %x21 /\
    \ %x23-7E / NON-US-ASCII\n     ; Any character except CTLs and DQUOTE\n     SAFE-CHAR\
    \  = WSP / %x21 / %x23-2B / %x2D-39 / %x3C-7E\n                / NON-US-ASCII\n\
    \     ; Any character except CTLs, DQUOTE, \";\", \":\", \",\"\n     VALUE-CHAR\
    \ = WSP / %x21-7E / NON-US-ASCII\n     ; Any textual character\n     CR = %x0D\n\
    \     ; carriage return\n     LF = %x0A\n     ; line feed\n     CRLF       = CR\
    \ LF\n     ; Internet standard newline\n     CTL        = %x00-08 / %x0A-1F /\
    \ %x7F\n        ; Controls\n     ALPHA      = %x41-5A / %x61-7A   ; A-Z / a-z\n\
    \     DIGIT      = %x30-39\n        ; 0-9\n     DQUOTE     = %x22\n        ; Quotation\
    \ Mark\n     WSP        = SPACE / HTAB\n     SPACE      = %x20\n     HTAB    \
    \   = %x09\n   The property value component of a content line has a format that\
    \ is\n   property specific. Refer to the section describing each property for\n\
    \   a definition of this format.\n   All names of properties, property parameters,\
    \ enumerated property\n   values and property parameter values are case-insensitive.\
    \ However,\n   all other property values are case-sensitive, unless otherwise\n\
    \   stated.\n"
- title: 4.1.1 List and Field Separators
  contents:
  - "4.1.1 List and Field Separators\n   Some properties and parameters allow a list\
    \ of values. Values in a\n   list of values MUST be separated by a COMMA character\
    \ (US-ASCII\n   decimal 44). There is no significance to the order of values in\
    \ a\n   list. For those parameter values (such as those that specify URI\n   values)\
    \ that are specified in quoted-strings, the individual quoted-\n   strings are\
    \ separated by a COMMA character (US-ASCII decimal 44).\n   Some property values\
    \ are defined in terms of multiple parts. These\n   structured property values\
    \ MUST have their value parts separated by a\n   SEMICOLON character (US-ASCII\
    \ decimal 59).\n   Some properties allow a list of parameters. Each property parameter\n\
    \   in a list of property parameters MUST be separated by a SEMICOLON\n   character\
    \ (US-ASCII decimal 59).\n   Property parameters with values containing a COLON,\
    \ a SEMICOLON or a\n   COMMA character MUST be placed in quoted text.\n   For\
    \ example, in the following properties a SEMICOLON is used to\n   separate property\
    \ parameters from each other, and a COMMA is used to\n   separate property values\
    \ in a value list.\n     ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT:MAILTO:\n   \
    \   jsmith@host.com\n     RDATE;VALUE=DATE:19970304,19970504,19970704,19970904\n"
- title: 4.1.2 Multiple Values
  contents:
  - "4.1.2 Multiple Values\n   Some properties defined in the iCalendar object can\
    \ have multiple\n   values. The general rule for encoding multi-valued items is\
    \ to simply\n   create a new content line for each value, including the property\n\
    \   name. However, it should be noted that some properties support\n   encoding\
    \ multiple values in a single property by separating the\n   values with a COMMA\
    \ character (US-ASCII decimal 44). Individual\n   property definitions should\
    \ be consulted for determining whether a\n   specific property allows multiple\
    \ values and in which of these two\n   forms.\n"
- title: 4.1.3 Binary Content
  contents:
  - "4.1.3 Binary Content\n   Binary content information in an iCalendar object SHOULD\
    \ be\n   referenced using a URI within a property value. That is the binary\n\
    \   content information SHOULD be placed in an external MIME entity that\n   can\
    \ be referenced by a URI from within the iCalendar object. In\n   applications\
    \ where this is not feasible, binary content information\n   can be included within\
    \ an iCalendar object, but only after first\n   encoding it into text using the\
    \ \"BASE64\" encoding method defined in\n   [RFC 2045]. Inline binary contact\
    \ SHOULD only be used in applications\n   whose special circumstances demand that\
    \ an iCalendar object be\n   expressed as a single entity. A property containing\
    \ inline binary\n   content information MUST specify the \"ENCODING\" property\
    \ parameter.\n   Binary content information placed external to the iCalendar object\n\
    \   MUST be referenced by a uniform resource identifier (URI).\n   The following\
    \ example specifies an \"ATTACH\" property that references\n   an attachment external\
    \ to the iCalendar object with a URI reference:\n     ATTACH:http://xyz.com/public/quarterly-report.doc\n\
    \   The following example specifies an \"ATTACH\" property with inline\n   binary\
    \ encoded content information:\n     ATTACH;FMTTYPE=image/basic;ENCODING=BASE64;VALUE=BINARY:\n\
    \      MIICajCCAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQAwdzELMAkGA1U\n      EBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlIENvbW11bmljYXRpb25zIE\n\
    \        <...remainder of \"BASE64\" encoded binary data...>\n"
- title: 4.1.4 Character Set
  contents:
  - "4.1.4 Character Set\n   There is not a property parameter to declare the character\
    \ set used\n   in a property value. The default character set for an iCalendar\n\
    \   object is UTF-8 as defined in [RFC 2279].\n   The \"charset\" Content-Type\
    \ parameter can be used in MIME transports\n   to specify any other IANA registered\
    \ character set.\n"
- title: 4.2 Property Parameters
  contents:
  - "4.2 Property Parameters\n   A property can have attributes associated with it.\
    \ These \"property\n   parameters\" contain meta-information about the property\
    \ or the\n   property value. Property parameters are provided to specify such\n\
    \   information as the location of an alternate text representation for a\n  \
    \ property value, the language of a text property value, the data type\n   of\
    \ the property value and other attributes.\n   Property parameter values that\
    \ contain the COLON (US-ASCII decimal\n   58), SEMICOLON (US-ASCII decimal 59)\
    \ or COMMA (US-ASCII decimal 44)\n   character separators MUST be specified as\
    \ quoted-string text values.\n   Property parameter values MUST NOT contain the\
    \ DOUBLE-QUOTE (US-ASCII\n   decimal 22) character. The DOUBLE-QUOTE (US-ASCII\
    \ decimal 22)\n   character is used as a delimiter for parameter values that contain\n\
    \   restricted characters or URI text. For example:\n     DESCRIPTION;ALTREP=\"\
    http://www.wiz.org\":The Fall'98 Wild Wizards\n       Conference - - Las Vegas,\
    \ NV, USA\n   Property parameter values that are not in quoted strings are case\n\
    \   insensitive.\n   The general property parameters defined by this memo are\
    \ defined by\n   the following notation:\n     parameter  = altrepparam      \
    \     ; Alternate text representation\n                / cnparam             \
    \  ; Common name\n                / cutypeparam           ; Calendar user type\n\
    \                / delfromparam          ; Delegator\n                / deltoparam\
    \            ; Delegatee\n                / dirparam              ; Directory\
    \ entry\n                / encodingparam         ; Inline encoding\n         \
    \       / fmttypeparam          ; Format type\n                / fbtypeparam \
    \          ; Free/busy time type\n                / languageparam         ; Language\
    \ for text\n                / memberparam           ; Group or list membership\n\
    \                / partstatparam         ; Participation status\n            \
    \    / rangeparam            ; Recurrence identifier range\n                /\
    \ trigrelparam          ; Alarm trigger relationship\n                / reltypeparam\
    \          ; Relationship type\n                / roleparam             ; Participation\
    \ role\n                / rsvpparam             ; RSVP expectation\n         \
    \       / sentbyparam           ; Sent by\n                / tzidparam       \
    \      ; Reference to time zone object\n                / valuetypeparam     \
    \   ; Property value data type\n                / ianaparam\n        ; Some other\
    \ IANA registered iCalendar parameter.\n                / xparam\n        ; A\
    \ non-standard, experimental parameter.\n     ianaparam  = iana-token \"=\" param-value\
    \ *(\",\" param-value)\n     xparam     =x-name \"=\" param-value *(\",\" param-value)\n"
- title: 4.2.1 Alternate Text Representation
  contents:
  - "4.2.1 Alternate Text Representation\n   Parameter Name: ALTREP\n   Purpose: To\
    \ specify an alternate text representation for the property\n   value.\n   Format\
    \ Definition: The property parameter is defined by the following\n   notation:\n\
    \     altrepparam        = \"ALTREP\" \"=\" DQUOTE uri DQUOTE\n   Description:\
    \ The parameter specifies a URI that points to an\n   alternate representation\
    \ for a textual property value. A property\n   specifying this parameter MUST\
    \ also include a value that reflects the\n   default representation of the text\
    \ value. The individual URI\n   parameter values MUST each be specified in a quoted-string.\n\
    \   Example:\n     DESCRIPTION;ALTREP=\"CID:<part3.msg.970415T083000@host.com>\"\
    :Project\n       XYZ Review Meeting will include the following agenda items: (a)\n\
    \       Market Overview, (b) Finances, (c) Project Management\n   The \"ALTREP\"\
    \ property parameter value might point to a \"text/html\"\n   content portion.\n\
    \     Content-Type:text/html\n     Content-Id:<part3.msg.970415T083000@host.com>\n\
    \     <html><body>\n     <p><b>Project XYZ Review Meeting</b> will include the\
    \ following\n     agenda items:<ol><li>Market\n     Overview</li><li>Finances</li><li>Project\
    \ Management</li></ol></p>\n     </body></html>\n"
- title: 4.2.2 Common Name
  contents:
  - "4.2.2 Common Name\n   Parameter Name: CN\n   Purpose: To specify the common name\
    \ to be associated with the\n   calendar user specified by the property.\n   Format\
    \ Definition: The property parameter is defined by the following\n   notation:\n\
    \     cnparam    = \"CN\" \"=\" param-value\n   Description: This parameter can\
    \ be specified on properties with a\n   CAL-ADDRESS value type. The parameter\
    \ specifies the common name to be\n   associated with the calendar user specified\
    \ by the property. The\n   parameter value is text. The parameter value can be\
    \ used for display\n   text to be associated with the calendar address specified\
    \ by the\n   property.\n   Example:\n     ORGANIZER;CN=\"John Smith\":MAILTO:jsmith@host.com\n"
- title: 4.2.3 Calendar User Type
  contents:
  - "4.2.3 Calendar User Type\n   Parameter Name: CUTYPE\n   Purpose: To specify the\
    \ type of calendar user specified by the\n   property.\n   Format Definition:\
    \ The property parameter is defined by the following\n   notation:\n     cutypeparam\
    \        = \"CUTYPE\" \"=\"\n                         (\"INDIVIDUAL\"        \
    \  ; An individual\n                        / \"GROUP\"               ; A group\
    \ of individuals\n                        / \"RESOURCE\"            ; A physical\
    \ resource\n                        / \"ROOM\"                ; A room resource\n\
    \                        / \"UNKNOWN\"             ; Otherwise not known\n   \
    \                     / x-name                ; Experimental type\n          \
    \              / iana-token)           ; Other IANA registered\n             \
    \                                   ; type\n     ; Default is INDIVIDUAL\n   Description:\
    \ This parameter can be specified on properties with a\n   CAL-ADDRESS value type.\
    \ The parameter identifies the type of calendar\n   user specified by the property.\
    \ If not specified on a property that\n   allows this parameter, the default is\
    \ INDIVIDUAL.\n   Example:\n     ATTENDEE;CUTYPE=GROUP:MAILTO:ietf-calsch@imc.org\n"
- title: 4.2.4 Delegators
  contents:
  - "4.2.4 Delegators\n   Parameter Name: DELEGATED-FROM\n   Purpose: To specify the\
    \ calendar users that have delegated their\n   participation to the calendar user\
    \ specified by the property.\n   Format Definition: The property parameter is\
    \ defined by the following\n   notation:\n     delfromparam       = \"DELEGATED-FROM\"\
    \ \"=\" DQUOTE cal-address DQUOTE\n                          *(\",\" DQUOTE cal-address\
    \ DQUOTE)\n   Description: This parameter can be specified on properties with\
    \ a\n   CAL-ADDRESS value type. This parameter can be specified on a property\n\
    \   that has a value type of calendar address. This parameter specifies\n   those\
    \ calendar uses that have delegated their participation in a\n   group scheduled\
    \ event or to-do to the calendar user specified by the\n   property. The value\
    \ MUST be a MAILTO URI as defined in [RFC 1738].\n   The individual calendar address\
    \ parameter values MUST each be\n   specified in a quoted-string.\n   Example:\n\
    \     ATTENDEE;DELEGATED-FROM=\"MAILTO:jsmith@host.com\":MAILTO:\n      jdoe@host.com\n"
- title: 4.2.5 Delegatees
  contents:
  - "4.2.5 Delegatees\n   Parameter Name: DELEGATED-TO\n   Purpose: To specify the\
    \ calendar users to whom the calendar user\n   specified by the property has delegated\
    \ participation.\n   Format Definition: The property parameter is defined by the\
    \ following\n   notation:\n     deltoparam = \"DELEGATED-TO\" \"=\" DQUOTE cal-address\
    \ DQUOTE\n                  *(\",\" DQUOTE cal-address DQUOTE)\n   Description:\
    \ This parameter can be specified on properties with a\n   CAL-ADDRESS value type.\
    \ This parameter specifies those calendar users\n   whom have been delegated participation\
    \ in a group scheduled event or\n   to-do by the calendar user specified by the\
    \ property. The value MUST\n   be a MAILTO URI as defined in [RFC 1738]. The individual\
    \ calendar\n   address parameter values MUST each be specified in a quoted-string.\n\
    \   Example:\n     ATTENDEE;DELEGATED-TO=\"MAILTO:jdoe@host.com\",\"MAILTO:jqpublic@\n\
    \      host.com\":MAILTO:jsmith@host.com\n"
- title: 4.2.6 Directory Entry Reference
  contents:
  - "4.2.6 Directory Entry Reference\n   Parameter Name: DIR\n   Purpose: To specify\
    \ reference to a directory entry associated with\n   the calendar user specified\
    \ by the property.\n   Format Definition: The property parameter is defined by\
    \ the following\n   notation:\n     dirparam   = \"DIR\" \"=\" DQUOTE uri DQUOTE\n\
    \   Description: This parameter can be specified on properties with a\n   CAL-ADDRESS\
    \ value type. The parameter specifies a reference to the\n   directory entry associated\
    \ with the calendar user specified by the\n   property. The parameter value is\
    \ a URI. The individual URI parameter\n   values MUST each be specified in a quoted-string.\n\
    \   Example:\n     ORGANIZER;DIR=\"ldap://host.com:6666/o=eDABC%20Industries,c=3DUS??\n\
    \      (cn=3DBJim%20Dolittle)\":MAILTO:jimdo@host1.com\n"
- title: 4.2.7 Inline Encoding
  contents:
  - "4.2.7 Inline Encoding\n   Parameter Name: ENCODING\n   Purpose: To specify an\
    \ alternate inline encoding for the property\n   value.\n   Format Definition:\
    \ The property parameter is defined by the following\n   notation:\n     encodingparam\
    \      = \"ENCODING\" \"=\"\n                          (\"8BIT\"\n        ; \"\
    8bit\" text encoding is defined in [RFC 2045]\n                        / \"BASE64\"\
    \n        ; \"BASE64\" binary encoding format is defined in [RFC 2045]\n     \
    \                   / iana-token\n        ; Some other IANA registered iCalendar\
    \ encoding type\n                        / x-name)\n        ; A non-standard,\
    \ experimental encoding type\n   Description: The property parameter identifies\
    \ the inline encoding\n   used in a property value. The default encoding is \"\
    8BIT\",\n   corresponding to a property value consisting of text. The \"BASE64\"\
    \n   encoding type corresponds to a property value encoded using the\n   \"BASE64\"\
    \ encoding defined in [RFC 2045].\n   If the value type parameter is \";VALUE=BINARY\"\
    , then the inline\n   encoding parameter MUST be specified with the value\n  \
    \ \";ENCODING=BASE64\".\n   Example:\n     ATTACH;FMTYPE=IMAGE/JPEG;ENCODING=BASE64;VALUE=BINARY:MIICajC\n\
    \      CAdOgAwIBAgICBEUwDQYJKoZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDA\n      qBgNVBAoTI05ldHNjYXBlIENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uMRw\n\
    \      <...remainder of \"BASE64\" encoded binary data...>\n"
- title: 4.2.8 Format Type
  contents:
  - "4.2.8 Format Type\n   Parameter Name: FMTTYPE\n   Purpose: To specify the content\
    \ type of a referenced object.\n   Format Definition: The property parameter is\
    \ defined by the following\n   notation:\n     fmttypeparam       = \"FMTTYPE\"\
    \ \"=\" iana-token\n                                        ; A IANA registered\
    \ content type\n                                     / x-name\n              \
    \                          ; A non-standard content type\n   Description: This\
    \ parameter can be specified on properties that are\n   used to reference an object.\
    \ The parameter specifies the content type\n   of the referenced object. For example,\
    \ on the \"ATTACH\" property, a\n   FTP type URI value does not, by itself, necessarily\
    \ convey the type\n   of content associated with the resource. The parameter value\
    \ MUST be\n   the TEXT for either an IANA registered content type or a non-standard\n\
    \   content type.\n     Example:\n      ATTACH;FMTTYPE=application/binary:ftp://domain.com/pub/docs/\n\
    \       agenda.doc\n"
- title: 4.2.9 Free/Busy Time Type
  contents:
  - "4.2.9 Free/Busy Time Type\n   Parameter Name: FBTYPE\n   Purpose: To specify\
    \ the free or busy time type.\n   Format Definition: The property parameter is\
    \ defined by the following\n   notation:\n     fbtypeparam        = \"FBTYPE\"\
    \ \"=\" (\"FREE\" / \"BUSY\"\n                        / \"BUSY-UNAVAILABLE\" /\
    \ \"BUSY-TENTATIVE\"\n                        / x-name\n        ; Some experimental\
    \ iCalendar data type.\n                        / iana-token)\n        ; Some\
    \ other IANA registered iCalendar data type.\n   Description: The parameter specifies\
    \ the free or busy time type. The\n   value FREE indicates that the time interval\
    \ is free for scheduling.\n   The value BUSY indicates that the time interval\
    \ is busy because one\n   or more events have been scheduled for that interval.\
    \ The value\n   BUSY-UNAVAILABLE indicates that the time interval is busy and\
    \ that\n   the interval can not be scheduled. The value BUSY-TENTATIVE indicates\n\
    \   that the time interval is busy because one or more events have been\n   tentatively\
    \ scheduled for that interval. If not specified on a\n   property that allows\
    \ this parameter, the default is BUSY.\n   Example: The following is an example\
    \ of this parameter on a FREEBUSY\n   property.\n     FREEBUSY;FBTYPE=BUSY:19980415T133000Z/19980415T170000Z\n"
- title: 4.2.10 Language
  contents:
  - "4.2.10 Language\n   Parameter Name: LANGUAGE\n   Purpose: To specify the language\
    \ for text values in a property or\n   property parameter.\n   Format Definition:\
    \ The property parameter is defined by the following\n   notation:\n     languageparam\
    \ =    \"LANGUAGE\" \"=\" language\n     language = <Text identifying a language,\
    \ as defined in [RFC 1766]>\n   Description: This parameter can be specified on\
    \ properties with a\n   text value type. The parameter identifies the language\
    \ of the text in\n   the property or property parameter value. The value of the\
    \ \"language\"\n   property parameter is that defined in [RFC 1766].\n   For transport\
    \ in a MIME entity, the Content-Language header field can\n   be used to set the\
    \ default language for the entire body part.\n   Otherwise, no default language\
    \ is assumed.\n   Example:\n     SUMMARY;LANGUAGE=us-EN:Company Holiday Party\n\
    \     LOCATION;LANGUAGE=en:Germany\n     LOCATION;LANGUAGE=no:Tyskland\n   The\
    \ following example makes use of the Quoted-Printable encoding in\n   order to\
    \ represent non-ASCII characters.\n     LOCATION;LANGUAGE=da:K=F8benhavn\n   \
    \  LOCATION;LANGUAGE=en:Copenhagen\n"
- title: 4.2.11  Group or List Membership
  contents:
  - "4.2.11  Group or List Membership\n   Parameter Name: MEMBER\n   Purpose: To specify\
    \ the group or list membership of the calendar user\n   specified by the property.\n\
    \   Format Definition: The property parameter is defined by the following\n  \
    \ notation:\n     memberparam        = \"MEMBER\" \"=\" DQUOTE cal-address DQUOTE\n\
    \                          *(\",\" DQUOTE cal-address DQUOTE)\n   Description:\
    \ This parameter can be specified on properties with a\n   CAL-ADDRESS value type.\
    \ The parameter identifies the groups or list\n   membership for the calendar\
    \ user specified by the property. The\n   parameter value either a single calendar\
    \ address in a quoted-string\n   or a COMMA character (US-ASCII decimal 44) list\
    \ of calendar\n   addresses, each in a quoted-string. The individual calendar\
    \ address\n   parameter values MUST each be specified in a quoted-string.\n  \
    \ Example:\n     ATTENDEE;MEMBER=\"MAILTO:ietf-calsch@imc.org\":MAILTO:jsmith@host.com\n\
    \     ATTENDEE;MEMBER=\"MAILTO:projectA@host.com\",\"MAILTO:projectB@host.\n \
    \     com\":MAILTO:janedoe@host.com\n"
- title: 4.2.12 Participation Status
  contents:
  - "4.2.12 Participation Status\n   Parameter Name: PARTSTAT\n   Purpose: To specify\
    \ the participation status for the calendar user\n   specified by the property.\n\
    \   Format Definition: The property parameter is defined by the following\n  \
    \ notation:\n     partstatparam      = \"PARTSTAT\" \"=\"\n                  \
    \       (\"NEEDS-ACTION\"        ; Event needs action\n                      \
    \  / \"ACCEPTED\"            ; Event accepted\n                        / \"DECLINED\"\
    \            ; Event declined\n                        / \"TENTATIVE\"       \
    \    ; Event tentatively\n                                                ; accepted\n\
    \                        / \"DELEGATED\"           ; Event delegated\n       \
    \                 / x-name                ; Experimental status\n            \
    \            / iana-token)           ; Other IANA registered\n               \
    \                                 ; status\n     ; These are the participation\
    \ statuses for a \"VEVENT\". Default is\n     ; NEEDS-ACTION\n     partstatparam\
    \      /= \"PARTSTAT\" \"=\"\n                         (\"NEEDS-ACTION\"     \
    \   ; To-do needs action\n                        / \"ACCEPTED\"            ;\
    \ To-do accepted\n                        / \"DECLINED\"            ; To-do declined\n\
    \                        / \"TENTATIVE\"           ; To-do tentatively\n     \
    \                                           ; accepted\n                     \
    \   / \"DELEGATED\"           ; To-do delegated\n                        / \"\
    COMPLETED\"           ; To-do completed.\n                                   \
    \             ; COMPLETED property has\n                                     \
    \           ;date/time completed.\n                        / \"IN-PROCESS\"  \
    \        ; To-do in process of\n                                             \
    \   ; being completed\n                        / x-name                ; Experimental\
    \ status\n                        / iana-token)           ; Other IANA registered\n\
    \                                                ; status\n     ; These are the\
    \ participation statuses for a \"VTODO\". Default is\n     ; NEEDS-ACTION\n  \
    \   partstatparam      /= \"PARTSTAT\" \"=\"\n                         (\"NEEDS-ACTION\"\
    \        ; Journal needs action\n                        / \"ACCEPTED\"      \
    \      ; Journal accepted\n                        / \"DECLINED\"            ;\
    \ Journal declined\n                        / x-name                ; Experimental\
    \ status\n                        / iana-token)           ; Other IANA registered\n\
    \                                                ; status\n     ; These are the\
    \ participation statuses for a \"VJOURNAL\". Default is\n     ; NEEDS-ACTION\n\
    \   Description: This parameter can be specified on properties with a\n   CAL-ADDRESS\
    \ value type. The parameter identifies the participation\n   status for the calendar\
    \ user specified by the property value. The\n   parameter values differ depending\
    \ on whether they are associated with\n   a group scheduled \"VEVENT\", \"VTODO\"\
    \ or \"VJOURNAL\". The values MUST\n   match one of the values allowed for the\
    \ given calendar component. If\n   not specified on a property that allows this\
    \ parameter, the default\n   value is NEEDS-ACTION.\n   Example:\n     ATTENDEE;PARTSTAT=DECLINED:MAILTO:jsmith@host.com\n"
- title: 4.2.13  Recurrence Identifier Range
  contents:
  - "4.2.13  Recurrence Identifier Range\n   Parameter Name: RANGE\n   Purpose: To\
    \ specify the effective range of recurrence instances from\n   the instance specified\
    \ by the recurrence identifier specified by the\n   property.\n   Format Definition:\
    \ The property parameter is defined by the following\n   notation:\n     rangeparam\
    \ = \"RANGE\" \"=\" (\"THISANDPRIOR\"\n        ; To specify all instances prior\
    \ to the recurrence identifier\n                / \"THISANDFUTURE\")\n       \
    \ ; To specify the instance specified by the recurrence identifier\n        ;\
    \ and all subsequent recurrence instances\n   Description: The parameter can be\
    \ specified on a property that\n   specifies a recurrence identifier. The parameter\
    \ specifies the\n   effective range of recurrence instances that is specified\
    \ by the\n   property. The effective range is from the recurrence identified\n\
    \   specified by the property. If this parameter is not specified an\n   allowed\
    \ property, then the default range is the single instance\n   specified by the\
    \ recurrence identifier value of the property. The\n   parameter value can be\
    \ \"THISANDPRIOR\" to indicate a range defined by\n   the recurrence identified\
    \ value of the property and all prior\n   instances. The parameter value can also\
    \ be \"THISANDFUTURE\" to\n   indicate a range defined by the recurrence identifier\
    \ and all\n   subsequent instances.\n   Example:\n     RECURRENCE-ID;RANGE=THISANDPRIOR:19980401T133000Z\n"
- title: 4.2.14 Alarm Trigger Relationship
  contents:
  - "4.2.14 Alarm Trigger Relationship\n   Parameter Name: RELATED\n   Purpose: To\
    \ specify the relationship of the alarm trigger with\n   respect to the start\
    \ or end of the calendar component.\n   Format Definition: The property parameter\
    \ is defined by the following\n   notation:\n     trigrelparam       = \"RELATED\"\
    \ \"=\"\n                         (\"START\"       ; Trigger off of start\n  \
    \                      / \"END\")        ; Trigger off of end\n   Description:\
    \ The parameter can be specified on properties that\n   specify an alarm trigger\
    \ with a DURATION value type. The parameter\n   specifies whether the alarm will\
    \ trigger relative to the start or end\n   of the calendar component. The parameter\
    \ value START will set the\n   alarm to trigger off the start of the calendar\
    \ component; the\n   parameter value END will set the alarm to trigger off the\
    \ end of the\n   calendar component. If the parameter is not specified on an allowable\n\
    \   property, then the default is START.\n   Example:\n     TRIGGER;RELATED=END:PT5M\n"
- title: 4.2.15 Relationship Type
  contents:
  - "4.2.15 Relationship Type\n   Parameter Name: RELTYPE\n   Purpose: To specify\
    \ the type of hierarchical relationship associated\n   with the calendar component\
    \ specified by the property.\n   Format Definition: The property parameter is\
    \ defined by the following\n   notation:\n     reltypeparam       = \"RELTYPE\"\
    \ \"=\"\n                         (\"PARENT\"      ; Parent relationship. Default.\n\
    \                        / \"CHILD\"       ; Child relationship\n            \
    \            / \"SIBLING      ; Sibling relationship\n                       \
    \ / iana-token    ; Some other IANA registered\n                             \
    \           ; iCalendar relationship type\n                        / x-name) \
    \      ; A non-standard, experimental\n                                      \
    \  ; relationship type\n   Description: This parameter can be specified on a property\
    \ that\n   references another related calendar. The parameter specifies the\n\
    \   hierarchical relationship type of the calendar component referenced\n   by\
    \ the property. The parameter value can be PARENT, to indicate that\n   the referenced\
    \ calendar component is a superior of calendar\n   component; CHILD to indicate\
    \ that the referenced calendar component\n   is a subordinate of the calendar\
    \ component; SIBLING to indicate that\n   the referenced calendar component is\
    \ a peer of the calendar\n   component. If this parameter is not specified on\
    \ an allowable\n   property, the default relationship type is PARENT.\n   Example:\n\
    \     RELATED-TO;RELTYPE=SIBLING:<19960401-080045-4000F192713@host.com>\n"
- title: 4.2.16 Participation Role
  contents:
  - "4.2.16 Participation Role\n   Parameter Name: ROLE\n   Purpose: To specify the\
    \ participation role for the calendar user\n   specified by the property.\n  \
    \ Format Definition: The property parameter is defined by the following\n   notation:\n\
    \     roleparam  = \"ROLE\" \"=\"\n                 (\"CHAIR\"               ;\
    \ Indicates chair of the\n                                        ; calendar entity\n\
    \                / \"REQ-PARTICIPANT\"     ; Indicates a participant whose\n \
    \                                       ; participation is required\n        \
    \        / \"OPT-PARTICIPANT\"     ; Indicates a participant whose\n         \
    \                               ; participation is optional\n                /\
    \ \"NON-PARTICIPANT\"     ; Indicates a participant who is\n                 \
    \                       ; copied for information\n                           \
    \             ; purposes only\n                / x-name                ; Experimental\
    \ role\n                / iana-token)           ; Other IANA role\n     ; Default\
    \ is REQ-PARTICIPANT\n   Description: This parameter can be specified on properties\
    \ with a\n   CAL-ADDRESS value type. The parameter specifies the participation\n\
    \   role for the calendar user specified by the property in the group\n   schedule\
    \ calendar component. If not specified on a property that\n   allows this parameter,\
    \ the default value is REQ-PARTICIPANT.\n   Example:\n     ATTENDEE;ROLE=CHAIR:MAILTO:mrbig@host.com\n"
- title: 4.2.17  RSVP Expectation
  contents:
  - "4.2.17  RSVP Expectation\n   Parameter Name: RSVP\n   Purpose: To specify whether\
    \ there is an expectation of a favor of a\n   reply from the calendar user specified\
    \ by the property value.\n   Format Definition: The property parameter is defined\
    \ by the following\n   notation:\n     rsvpparam = \"RSVP\" \"=\" (\"TRUE\" /\
    \ \"FALSE\")\n     ; Default is FALSE\n   Description: This parameter can be specified\
    \ on properties with a\n   CAL-ADDRESS value type. The parameter identifies the\
    \ expectation of a\n   reply from the calendar user specified by the property\
    \ value. This\n   parameter is used by the \"Organizer\" to request a participation\n\
    \   status reply from an \"Attendee\" of a group scheduled event or to-do.\n \
    \  If not specified on a property that allows this parameter, the\n   default\
    \ value is FALSE.\n   Example:\n     ATTENDEE;RSVP=TRUE:MAILTO:jsmith@host.com\n"
- title: 4.2.18  Sent By
  contents:
  - "4.2.18  Sent By\n   Parameter Name: SENT-BY\n   Purpose: To specify the calendar\
    \ user that is acting on behalf of the\n   calendar user specified by the property.\n\
    \   Format Definition: The property parameter is defined by the following\n  \
    \ notation:\n     sentbyparam        = \"SENT-BY\" \"=\" DQUOTE cal-address DQUOTE\n\
    \   Description: This parameter can be specified on properties with a\n   CAL-ADDRESS\
    \ value type. The parameter specifies the calendar user\n   that is acting on\
    \ behalf of the calendar user specified by the\n   property. The parameter value\
    \ MUST be a MAILTO URI as defined in [RFC\n   1738]. The individual calendar address\
    \ parameter values MUST each be\n   specified in a quoted-string.\n   Example:\n\
    \     ORGANIZER;SENT-BY:\"MAILTO:sray@host.com\":MAILTO:jsmith@host.com\n"
- title: 4.2.19 Time Zone Identifier
  contents:
  - "4.2.19 Time Zone Identifier\n   Parameter Name: TZID\n   Purpose: To specify\
    \ the identifier for the time zone definition for a\n   time component in the\
    \ property value.\n   Format Definition: This property parameter is defined by\
    \ the\n   following notation:\n     tzidparam  = \"TZID\" \"=\" [tzidprefix] paramtext\
    \ CRLF\n     tzidprefix = \"/\"\n   Description: The parameter MUST be specified\
    \ on the \"DTSTART\",\n   \"DTEND\", \"DUE\", \"EXDATE\" and \"RDATE\" properties\
    \ when either a DATE-\n   TIME or TIME value type is specified and when the value\
    \ is not either\n   a UTC or a \"floating\" time. Refer to the DATE-TIME or TIME\
    \ value type\n   definition for a description of UTC and \"floating time\" formats.\
    \ This\n   property parameter specifies a text value which uniquely identifies\n\
    \   the \"VTIMEZONE\" calendar component to be used when evaluating the\n   time\
    \ portion of the property. The value of the TZID property\n   parameter will be\
    \ equal to the value of the TZID property for the\n   matching time zone definition.\
    \ An individual \"VTIMEZONE\" calendar\n   component MUST be specified for each\
    \ unique \"TZID\" parameter value\n   specified in the iCalendar object.\n   The\
    \ parameter MUST be specified on properties with a DATE-TIME value\n   if the\
    \ DATE-TIME is not either a UTC or a \"floating\" time.\n   The presence of the\
    \ SOLIDUS character (US-ASCII decimal 47) as a\n   prefix, indicates that this\
    \ TZID represents a unique ID in a globally\n   defined time zone registry (when\
    \ such registry is defined).\n        Note: This document does not define a naming\
    \ convention for time\n        zone identifiers. Implementers may want to use\
    \ the naming\n        conventions defined in existing time zone specifications\
    \ such as\n        the public-domain Olson database [TZ]. The specification of\n\
    \        globally unique time zone identifiers is not addressed by this\n    \
    \    document and is left for future study.\n   The following are examples of\
    \ this property parameter:\n     DTSTART;TZID=US-Eastern:19980119T020000\n   \
    \  DTEND;TZID=US-Eastern:19980119T030000\n   The TZID property parameter MUST\
    \ NOT be applied to DATE-TIME or TIME\n   properties whose time values are specified\
    \ in UTC.\n   The use of local time in a DATE-TIME or TIME value without the TZID\n\
    \   property parameter is to be interpreted as a local time value,\n   regardless\
    \ of the existence of \"VTIMEZONE\" calendar components in the\n   iCalendar object.\n\
    \   For more information see the sections on the data types DATE-TIME and\n  \
    \ TIME.\n"
- title: 4.2.20 Value Data Types
  contents:
  - "4.2.20 Value Data Types\n   Parameter Name: VALUE\n   Purpose: To explicitly\
    \ specify the data type format for a property\n   value.\n   Format Definition:\
    \ The \"VALUE\" property parameter is defined by the\n   following notation:\n\
    \     valuetypeparam = \"VALUE\" \"=\" valuetype\n     valuetype  = (\"BINARY\"\
    \n                / \"BOOLEAN\"\n                / \"CAL-ADDRESS\"\n         \
    \       / \"DATE\"\n                / \"DATE-TIME\"\n                / \"DURATION\"\
    \n                / \"FLOAT\"\n                / \"INTEGER\"\n               \
    \ / \"PERIOD\"\n                / \"RECUR\"\n                / \"TEXT\"\n    \
    \            / \"TIME\"\n                / \"URI\"\n                / \"UTC-OFFSET\"\
    \n                / x-name\n                ; Some experimental iCalendar data\
    \ type.\n                / iana-token)\n                ; Some other IANA registered\
    \ iCalendar data type.\n   Description: The parameter specifies the data type\
    \ and format of the\n   property value. The property values MUST be of a single\
    \ value type.\n   For example, a \"RDATE\" property cannot have a combination\
    \ of DATE-\n   TIME and TIME value types.\n   If the property's value is the default\
    \ value type, then this\n   parameter need not be specified. However, if the property's\
    \ default\n   value type is overridden by some other allowable value type, then\n\
    \   this parameter MUST be specified.\n"
- title: 4.3 Property Value Data Types
  contents:
  - "4.3 Property Value Data Types\n   The properties in an iCalendar object are strongly\
    \ typed. The\n   definition of each property restricts the value to be one of\
    \ the\n   value data types, or simply value types, defined in this section. The\n\
    \   value type for a property will either be specified implicitly as the\n   default\
    \ value type or will be explicitly specified with the \"VALUE\"\n   parameter.\
    \ If the value type of a property is one of the alternate\n   valid types, then\
    \ it MUST be explicitly specified with the \"VALUE\"\n   parameter.\n"
- title: 4.3.1   Binary
  contents:
  - "4.3.1   Binary\n   Value Name: BINARY\n   Purpose: This value type is used to\
    \ identify properties that contain\n   a character encoding of inline binary data.\
    \ For example, an inline\n   attachment of an object code might be included in\
    \ an iCalendar\n   object.\n   Formal Definition: The value type is defined by\
    \ the following\n   notation:\n     binary     = *(4b-char) [b-end]\n     ; A\
    \ \"BASE64\" encoded character string, as defined by [RFC 2045].\n     b-end \
    \     = (2b-char \"==\") / (3b-char \"=\")\n     b-char = ALPHA / DIGIT / \"+\"\
    \ / \"/\"\n   Description: Property values with this value type MUST also include\n\
    \   the inline encoding parameter sequence of \";ENCODING=BASE64\". That\n   is,\
    \ all inline binary data MUST first be character encoded using the\n   \"BASE64\"\
    \ encoding method defined in [RFC 2045]. No additional content\n   value encoding\
    \ (i.e., BACKSLASH character encoding) is defined for\n   this value type.\n \
    \  Example: The following is an abridged example of a \"BASE64\" encoded\n   binary\
    \ value data.\n     ATTACH;VALUE=BINARY;ENCODING=BASE64:MIICajCCAdOgAwIBAgICBEUwDQY\n\
    \      JKoZIhvcNAQEEBQAwdzELMAkGA1UEBhMCVVMxLDAqBgNVBAoTI05ldHNjYXBlI\n      ENvbW11bmljYXRpb25zIENvcnBvcmF0aW9uMRwwGgYDVQQLExNJbmZv\n\
    \        <...remainder of \"BASE64\" encoded binary data...>\n"
- title: 4.3.2   Boolean
  contents:
  - "4.3.2   Boolean\n   Value Name: BOOLEAN\n   Purpose: This value type is used\
    \ to identify properties that contain\n   either a \"TRUE\" or \"FALSE\" Boolean\
    \ value.\n   Formal Definition: The value type is defined by the following\n \
    \  notation:\n     boolean    = \"TRUE\" / \"FALSE\"\n   Description: These values\
    \ are case insensitive text. No additional\n   content value encoding (i.e., BACKSLASH\
    \ character encoding) is\n   defined for this value type.\n   Example: The following\
    \ is an example of a hypothetical property that\n   has a BOOLEAN value type:\n\
    \   GIBBERISH:TRUE\n"
- title: 4.3.3   Calendar User Address
  contents:
  - "4.3.3   Calendar User Address\n   Value Name: CAL-ADDRESS\n   Purpose: This value\
    \ type is used to identify properties that contain\n   a calendar user address.\n\
    \   Formal Definition: The value type is as defined by the following\n   notation:\n\
    \     cal-address        = uri\n   Description: The value is a URI as defined\
    \ by [RFC 1738] or any other\n   IANA registered form for a URI. When used to\
    \ address an Internet\n   email transport address for a calendar user, the value\
    \ MUST be a\n   MAILTO URI, as defined by [RFC 1738]. No additional content value\n\
    \   encoding (i.e., BACKSLASH character encoding) is defined for this\n   value\
    \ type.\n   Example:\n     ATTENDEE:MAILTO:jane_doe@host.com\n"
- title: 4.3.4 Date
  contents:
  - "4.3.4 Date\n   Value Name: DATE\n   Purpose: This value type is used to identify\
    \ values that contain a\n   calendar date.\n   Formal Definition: The value type\
    \ is defined by the following\n   notation:\n     date               = date-value\n\
    \     date-value         = date-fullyear date-month date-mday\n     date-fullyear\
    \      = 4DIGIT\n     date-month         = 2DIGIT        ;01-12\n     date-mday\
    \          = 2DIGIT        ;01-28, 01-29, 01-30, 01-31\n                     \
    \                   ;based on month/year\n   Description: If the property permits,\
    \ multiple \"date\" values are\n   specified as a COMMA character (US-ASCII decimal\
    \ 44) separated list\n   of values. The format for the value type is expressed\
    \ as the [ISO\n   8601] complete representation, basic format for a calendar date.\
    \ The\n   textual format specifies a four-digit year, two-digit month, and\n \
    \  two-digit day of the month. There are no separator characters between\n   the\
    \ year, month and day component text.\n   No additional content value encoding\
    \ (i.e., BACKSLASH character\n   encoding) is defined for this value type.\n \
    \  Example: The following represents July 14, 1997:\n     19970714\n"
- title: 4.3.5   Date-Time
  contents:
  - "4.3.5   Date-Time\n   Value Name: DATE-TIME\n   Purpose: This value type is used\
    \ to identify values that specify a\n   precise calendar date and time of day.\n\
    \   Formal Definition: The value type is defined by the following\n   notation:\n\
    \     date-time  = date \"T\" time ;As specified in the date and time\n      \
    \                          ;value definitions\n   Description: If the property\
    \ permits, multiple \"date-time\" values are\n   specified as a COMMA character\
    \ (US-ASCII decimal 44) separated list\n   of values. No additional content value\
    \ encoding (i.e., BACKSLASH\n   character encoding) is defined for this value\
    \ type.\n   The \"DATE-TIME\" data type is used to identify values that contain\
    \ a\n   precise calendar date and time of day. The format is based on the\n  \
    \ [ISO 8601] complete representation, basic format for a calendar date\n   and\
    \ time of day. The text format is a concatenation of the \"date\",\n   followed\
    \ by the LATIN CAPITAL LETTER T character (US-ASCII decimal\n   84) time designator,\
    \ followed by the \"time\" format.\n   The \"DATE-TIME\" data type expresses time\
    \ values in three forms:\n   The form of date and time with UTC offset MUST NOT\
    \ be used. For\n   example, the following is not valid for a date-time value:\n\
    \     DTSTART:19980119T230000-0800       ;Invalid time format\n   FORM #1: DATE\
    \ WITH LOCAL TIME\n   The date with local time form is simply a date-time value\
    \ that does\n   not contain the UTC designator nor does it reference a time zone.\
    \ For\n   example, the following represents Janurary 18, 1998, at 11 PM:\n   \
    \  DTSTART:19980118T230000\n   Date-time values of this type are said to be \"\
    floating\" and are not\n   bound to any time zone in particular. They are used\
    \ to represent the\n   same hour, minute, and second value regardless of which\
    \ time zone is\n   currently being observed. For example, an event can be defined\
    \ that\n   indicates that an individual will be busy from 11:00 AM to 1:00 PM\n\
    \   every day, no matter which time zone the person is in. In these\n   cases,\
    \ a local time can be specified. The recipient of an iCalendar\n   object with\
    \ a property value consisting of a local time, without any\n   relative time zone\
    \ information, SHOULD interpret the value as being\n   fixed to whatever time\
    \ zone the ATTENDEE is in at any given moment.\n   This means that two ATTENDEEs,\
    \ in different time zones, receiving the\n   same event definition as a floating\
    \ time, may be participating in the\n   event at different actual times. Floating\
    \ time SHOULD only be used\n   where that is the reasonable behavior.\n   In most\
    \ cases, a fixed time is desired. To properly communicate a\n   fixed time in\
    \ a property value, either UTC time or local time with\n   time zone reference\
    \ MUST be specified.\n   The use of local time in a DATE-TIME value without the\
    \ TZID property\n   parameter is to be interpreted as floating time, regardless\
    \ of the\n   existence of \"VTIMEZONE\" calendar components in the iCalendar object.\n\
    \   FORM #2: DATE WITH UTC TIME\n   The date with UTC time, or absolute time,\
    \ is identified by a LATIN\n   CAPITAL LETTER Z suffix character (US-ASCII decimal\
    \ 90), the UTC\n   designator, appended to the time value. For example, the following\n\
    \   represents January 19, 1998, at 0700 UTC:\n     DTSTART:19980119T070000Z\n\
    \   The TZID property parameter MUST NOT be applied to DATE-TIME\n   properties\
    \ whose time values are specified in UTC.\n   FORM #3: DATE WITH LOCAL TIME AND\
    \ TIME ZONE REFERENCE\n   The date and local time with reference to time zone\
    \ information is\n   identified by the use the TZID property parameter to reference\
    \ the\n   appropriate time zone definition. TZID is discussed in detail in the\n\
    \   section on Time Zone. For example, the following represents 2 AM in\n   New\
    \ York on Janurary 19, 1998:\n          DTSTART;TZID=US-Eastern:19980119T020000\n\
    \   Example: The following represents July 14, 1997, at 1:30 PM in New\n   York\
    \ City in each of the three time formats, using the \"DTSTART\"\n   property.\n\
    \     DTSTART:19970714T133000            ;Local time\n     DTSTART:19970714T173000Z\
    \           ;UTC time\n     DTSTART;TZID=US-Eastern:19970714T133000    ;Local\
    \ time and time\n                        ; zone reference\n   A time value MUST\
    \ ONLY specify 60 seconds when specifying the\n   periodic \"leap second\" in\
    \ the time value. For example:\n     COMPLETED:19970630T235960Z\n"
- title: 4.3.6   Duration
  contents:
  - "4.3.6   Duration\n   Value Name: DURATION\n   Purpose: This value type is used\
    \ to identify properties that contain\n   a duration of time.\n   Formal Definition:\
    \ The value type is defined by the following\n   notation:\n     dur-value  =\
    \ ([\"+\"] / \"-\") \"P\" (dur-date / dur-time / dur-week)\n     dur-date   =\
    \ dur-day [dur-time]\n     dur-time   = \"T\" (dur-hour / dur-minute / dur-second)\n\
    \     dur-week   = 1*DIGIT \"W\"\n     dur-hour   = 1*DIGIT \"H\" [dur-minute]\n\
    \     dur-minute = 1*DIGIT \"M\" [dur-second]\n     dur-second = 1*DIGIT \"S\"\
    \n     dur-day    = 1*DIGIT \"D\"\n   Description: If the property permits, multiple\
    \ \"duration\" values are\n   specified by a COMMA character (US-ASCII decimal\
    \ 44) separated list\n   of values. The format is expressed as the [ISO 8601]\
    \ basic format for\n   the duration of time. The format can represent durations\
    \ in terms of\n   weeks, days, hours, minutes, and seconds.\n   No additional\
    \ content value encoding (i.e., BACKSLASH character\n   encoding) are defined\
    \ for this value type.\n   Example: A duration of 15 days, 5 hours and 20 seconds\
    \ would be:\n     P15DT5H0M20S\n   A duration of 7 weeks would be:\n     P7W\n"
- title: 4.3.7   Float
  contents:
  - "4.3.7   Float\n   Value Name: FLOAT\n   Purpose: This value type is used to identify\
    \ properties that contain\n   a real number value.\n   Formal Definition: The\
    \ value type is defined by the following\n   notation:\n     float      = ([\"\
    +\"] / \"-\") 1*DIGIT [\".\" 1*DIGIT]\n   Description: If the property permits,\
    \ multiple \"float\" values are\n   specified by a COMMA character (US-ASCII decimal\
    \ 44) separated list\n   of values.\n   No additional content value encoding (i.e.,\
    \ BACKSLASH character\n   encoding) is defined for this value type.\n   Example:\n\
    \     1000000.0000001\n     1.333\n     -3.14\n"
- title: 4.3.8 Integer
  contents:
  - "4.3.8 Integer\n     Value Name:INTEGER\n     Purpose: This value type is used\
    \ to identify properties that contain\n     a signed integer value.\n     Formal\
    \ Definition: The value type is defined by the following\n     notation:\n   \
    \  integer    = ([\"+\"] / \"-\") 1*DIGIT\n     Description: If the property permits,\
    \ multiple \"integer\" values are\n     specified by a COMMA character (US-ASCII\
    \ decimal 44) separated list\n     of values. The valid range for \"integer\"\
    \ is -2147483648 to\n     2147483647. If the sign is not specified, then the value\
    \ is assumed\n     to be positive.\n     No additional content value encoding\
    \ (i.e., BACKSLASH character\n     encoding) is defined for this value type.\n\
    \     Example:\n     1234567890\n     -1234567890\n     +1234567890\n     432109876\n"
- title: 4.3.9 Period of Time
  contents:
  - "4.3.9 Period of Time\n   Value Name: PERIOD\n   Purpose: This value type is used\
    \ to identify values that contain a\n   precise period of time.\n   Formal Definition:\
    \ The data type is defined by the following\n   notation:\n     period     = period-explicit\
    \ / period-start\n     period-explicit = date-time \"/\" date-time\n     ; [ISO\
    \ 8601] complete representation basic format for a period of\n     ; time consisting\
    \ of a start and end. The start MUST be before the\n     ; end.\n     period-start\
    \ = date-time \"/\" dur-value\n     ; [ISO 8601] complete representation basic\
    \ format for a period of\n     ; time consisting of a start and positive duration\
    \ of time.\n   Description: If the property permits, multiple \"period\" values\
    \ are\n   specified by a COMMA character (US-ASCII decimal 44) separated list\n\
    \   of values. There are two forms of a period of time. First, a period\n   of\
    \ time is identified by its start and its end. This format is\n   expressed as\
    \ the [ISO 8601] complete representation, basic format for\n   \"DATE-TIME\" start\
    \ of the period, followed by a SOLIDUS character\n   (US-ASCII decimal 47), followed\
    \ by the \"DATE-TIME\" of the end of the\n   period. The start of the period MUST\
    \ be before the end of the period.\n   Second, a period of time can also be defined\
    \ by a start and a\n   positive duration of time. The format is expressed as the\
    \ [ISO 8601]\n   complete representation, basic format for the \"DATE-TIME\" start\
    \ of\n   the period, followed by a SOLIDUS character (US-ASCII decimal 47),\n\
    \   followed by the [ISO 8601] basic format for \"DURATION\" of the period.\n\
    \   Example: The period starting at 18:00:00 UTC, on January 1, 1997 and\n   ending\
    \ at 07:00:00 UTC on January 2, 1997 would be:\n     19970101T180000Z/19970102T070000Z\n\
    \   The period start at 18:00:00 on January 1, 1997 and lasting 5 hours\n   and\
    \ 30 minutes would be:\n     19970101T180000Z/PT5H30M\n   No additional content\
    \ value encoding (i.e., BACKSLASH character\n   encoding) is defined for this\
    \ value type.\n"
- title: 4.3.10 Recurrence Rule
  contents:
  - "4.3.10 Recurrence Rule\n   Value Name: RECUR\n   Purpose: This value type is\
    \ used to identify properties that contain\n   a recurrence rule specification.\n\
    \   Formal Definition: The value type is defined by the following\n   notation:\n\
    \     recur      = \"FREQ\"=freq *(\n                ; either UNTIL or COUNT may\
    \ appear in a 'recur',\n                ; but UNTIL and COUNT MUST NOT occur in\
    \ the same 'recur'\n                ( \";\" \"UNTIL\" \"=\" enddate ) /\n    \
    \            ( \";\" \"COUNT\" \"=\" 1*DIGIT ) /\n                ; the rest of\
    \ these keywords are optional,\n                ; but MUST NOT occur more than\
    \ once\n                ( \";\" \"INTERVAL\" \"=\" 1*DIGIT )          /\n    \
    \            ( \";\" \"BYSECOND\" \"=\" byseclist )        /\n               \
    \ ( \";\" \"BYMINUTE\" \"=\" byminlist )        /\n                ( \";\" \"\
    BYHOUR\" \"=\" byhrlist )           /\n                ( \";\" \"BYDAY\" \"=\"\
    \ bywdaylist )          /\n                ( \";\" \"BYMONTHDAY\" \"=\" bymodaylist\
    \ )    /\n                ( \";\" \"BYYEARDAY\" \"=\" byyrdaylist )     /\n  \
    \              ( \";\" \"BYWEEKNO\" \"=\" bywknolist )       /\n             \
    \   ( \";\" \"BYMONTH\" \"=\" bymolist )          /\n                ( \";\" \"\
    BYSETPOS\" \"=\" bysplist )         /\n                ( \";\" \"WKST\" \"=\"\
    \ weekday )              /\n                ( \";\" x-name \"=\" text )\n    \
    \            )\n     freq       = \"SECONDLY\" / \"MINUTELY\" / \"HOURLY\" / \"\
    DAILY\"\n                / \"WEEKLY\" / \"MONTHLY\" / \"YEARLY\"\n     enddate\
    \    = date\n     enddate    =/ date-time            ;An UTC value\n     byseclist\
    \  = seconds / ( seconds *(\",\" seconds) )\n     seconds    = 1DIGIT / 2DIGIT\
    \       ;0 to 59\n     byminlist  = minutes / ( minutes *(\",\" minutes) )\n \
    \    minutes    = 1DIGIT / 2DIGIT       ;0 to 59\n     byhrlist   = hour / ( hour\
    \ *(\",\" hour) )\n     hour       = 1DIGIT / 2DIGIT       ;0 to 23\n     bywdaylist\
    \ = weekdaynum / ( weekdaynum *(\",\" weekdaynum) )\n     weekdaynum = [([plus]\
    \ ordwk / minus ordwk)] weekday\n     plus       = \"+\"\n     minus      = \"\
    -\"\n     ordwk      = 1DIGIT / 2DIGIT       ;1 to 53\n     weekday    = \"SU\"\
    \ / \"MO\" / \"TU\" / \"WE\" / \"TH\" / \"FR\" / \"SA\"\n     ;Corresponding to\
    \ SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\n     ;FRIDAY, SATURDAY and SUNDAY\
    \ days of the week.\n     bymodaylist = monthdaynum / ( monthdaynum *(\",\" monthdaynum)\
    \ )\n     monthdaynum = ([plus] ordmoday) / (minus ordmoday)\n     ordmoday  \
    \ = 1DIGIT / 2DIGIT       ;1 to 31\n     byyrdaylist = yeardaynum / ( yeardaynum\
    \ *(\",\" yeardaynum) )\n     yeardaynum = ([plus] ordyrday) / (minus ordyrday)\n\
    \     ordyrday   = 1DIGIT / 2DIGIT / 3DIGIT      ;1 to 366\n     bywknolist =\
    \ weeknum / ( weeknum *(\",\" weeknum) )\n     weeknum    = ([plus] ordwk) / (minus\
    \ ordwk)\n     bymolist   = monthnum / ( monthnum *(\",\" monthnum) )\n     monthnum\
    \   = 1DIGIT / 2DIGIT       ;1 to 12\n     bysplist   = setposday / ( setposday\
    \ *(\",\" setposday) )\n     setposday  = yeardaynum\n   Description: If the property\
    \ permits, multiple \"recur\" values are\n   specified by a COMMA character (US-ASCII\
    \ decimal 44) separated list\n   of values. The value type is a structured value\
    \ consisting of a list\n   of one or more recurrence grammar parts. Each rule\
    \ part is defined by\n   a NAME=VALUE pair. The rule parts are separated from\
    \ each other by\n   the SEMICOLON character (US-ASCII decimal 59). The rule parts\
    \ are not\n   ordered in any particular sequence. Individual rule parts MUST only\n\
    \   be specified once.\n   The FREQ rule part identifies the type of recurrence\
    \ rule. This rule\n   part MUST be specified in the recurrence rule. Valid values\
    \ include\n   SECONDLY, to specify repeating events based on an interval of a\n\
    \   second or more; MINUTELY, to specify repeating events based on an\n   interval\
    \ of a minute or more; HOURLY, to specify repeating events\n   based on an interval\
    \ of an hour or more; DAILY, to specify repeating\n   events based on an interval\
    \ of a day or more; WEEKLY, to specify\n   repeating events based on an interval\
    \ of a week or more; MONTHLY, to\n   specify repeating events based on an interval\
    \ of a month or more; and\n   YEARLY, to specify repeating events based on an\
    \ interval of a year or\n   more.\n   The INTERVAL rule part contains a positive\
    \ integer representing how\n   often the recurrence rule repeats. The default\
    \ value is \"1\", meaning\n   every second for a SECONDLY rule, or every minute\
    \ for a MINUTELY\n   rule, every hour for an HOURLY rule, every day for a DAILY\
    \ rule,\n   every week for a WEEKLY rule, every month for a MONTHLY rule and\n\
    \   every year for a YEARLY rule.\n   The UNTIL rule part defines a date-time\
    \ value which bounds the\n   recurrence rule in an inclusive manner. If the value\
    \ specified by\n   UNTIL is synchronized with the specified recurrence, this date\
    \ or\n   date-time becomes the last instance of the recurrence. If specified\n\
    \   as a date-time value, then it MUST be specified in an UTC time\n   format.\
    \ If not present, and the COUNT rule part is also not present,\n   the RRULE is\
    \ considered to repeat forever.\n   The COUNT rule part defines the number of\
    \ occurrences at which to\n   range-bound the recurrence. The \"DTSTART\" property\
    \ value, if\n   specified, counts as the first occurrence.\n   The BYSECOND rule\
    \ part specifies a COMMA character (US-ASCII decimal\n   44) separated list of\
    \ seconds within a minute. Valid values are 0 to\n   59. The BYMINUTE rule part\
    \ specifies a COMMA character (US-ASCII\n   decimal 44) separated list of minutes\
    \ within an hour. Valid values\n   are 0 to 59. The BYHOUR rule part specifies\
    \ a COMMA character (US-\n   ASCII decimal 44) separated list of hours of the\
    \ day. Valid values\n   are 0 to 23.\n   The BYDAY rule part specifies a COMMA\
    \ character (US-ASCII decimal 44)\n   separated list of days of the week; MO indicates\
    \ Monday; TU indicates\n   Tuesday; WE indicates Wednesday; TH indicates Thursday;\
    \ FR indicates\n   Friday; SA indicates Saturday; SU indicates Sunday.\n   Each\
    \ BYDAY value can also be preceded by a positive (+n) or negative\n   (-n) integer.\
    \ If present, this indicates the nth occurrence of the\n   specific day within\
    \ the MONTHLY or YEARLY RRULE. For example, within\n   a MONTHLY rule, +1MO (or\
    \ simply 1MO) represents the first Monday\n   within the month, whereas -1MO represents\
    \ the last Monday of the\n   month. If an integer modifier is not present, it\
    \ means all days of\n   this type within the specified frequency. For example,\
    \ within a\n   MONTHLY rule, MO represents all Mondays within the month.\n   The\
    \ BYMONTHDAY rule part specifies a COMMA character (ASCII decimal\n   44) separated\
    \ list of days of the month. Valid values are 1 to 31 or\n   -31 to -1. For example,\
    \ -10 represents the tenth to the last day of\n   the month.\n   The BYYEARDAY\
    \ rule part specifies a COMMA character (US-ASCII decimal\n   44) separated list\
    \ of days of the year. Valid values are 1 to 366 or\n   -366 to -1. For example,\
    \ -1 represents the last day of the year\n   (December 31st) and -306 represents\
    \ the 306th to the last day of the\n   year (March 1st).\n   The BYWEEKNO rule\
    \ part specifies a COMMA character (US-ASCII decimal\n   44) separated list of\
    \ ordinals specifying weeks of the year. Valid\n   values are 1 to 53 or -53 to\
    \ -1. This corresponds to weeks according\n   to week numbering as defined in\
    \ [ISO 8601]. A week is defined as a\n   seven day period, starting on the day\
    \ of the week defined to be the\n   week start (see WKST). Week number one of\
    \ the calendar year is the\n   first week which contains at least four (4) days\
    \ in that calendar\n   year. This rule part is only valid for YEARLY rules. For\
    \ example, 3\n   represents the third week of the year.\n        Note: Assuming\
    \ a Monday week start, week 53 can only occur when\n        Thursday is January\
    \ 1 or if it is a leap year and Wednesday is\n        January 1.\n   The BYMONTH\
    \ rule part specifies a COMMA character (US-ASCII decimal\n   44) separated list\
    \ of months of the year. Valid values are 1 to 12.\n   The WKST rule part specifies\
    \ the day on which the workweek starts.\n   Valid values are MO, TU, WE, TH, FR,\
    \ SA and SU. This is significant\n   when a WEEKLY RRULE has an interval greater\
    \ than 1, and a BYDAY rule\n   part is specified. This is also significant when\
    \ in a YEARLY RRULE\n   when a BYWEEKNO rule part is specified. The default value\
    \ is MO.\n   The BYSETPOS rule part specifies a COMMA character (US-ASCII decimal\n\
    \   44) separated list of values which corresponds to the nth occurrence\n   within\
    \ the set of events specified by the rule. Valid values are 1 to\n   366 or -366\
    \ to -1. It MUST only be used in conjunction with another\n   BYxxx rule part.\
    \ For example \"the last work day of the month\" could\n   be represented as:\n\
    \     RRULE:FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-1\n   Each BYSETPOS value\
    \ can include a positive (+n) or negative (-n)\n   integer. If present, this indicates\
    \ the nth occurrence of the\n   specific occurrence within the set of events specified\
    \ by the rule.\n   If BYxxx rule part values are found which are beyond the available\n\
    \   scope (ie, BYMONTHDAY=30 in February), they are simply ignored.\n   Information,\
    \ not contained in the rule, necessary to determine the\n   various recurrence\
    \ instance start time and dates are derived from the\n   Start Time (DTSTART)\
    \ entry attribute. For example,\n   \"FREQ=YEARLY;BYMONTH=1\" doesn't specify\
    \ a specific day within the\n   month or a time. This information would be the\
    \ same as what is\n   specified for DTSTART.\n   BYxxx rule parts modify the recurrence\
    \ in some manner. BYxxx rule\n   parts for a period of time which is the same\
    \ or greater than the\n   frequency generally reduce or limit the number of occurrences\
    \ of the\n   recurrence generated. For example, \"FREQ=DAILY;BYMONTH=1\" reduces\
    \ the\n   number of recurrence instances from all days (if BYMONTH tag is not\n\
    \   present) to all days in January. BYxxx rule parts for a period of\n   time\
    \ less than the frequency generally increase or expand the number\n   of occurrences\
    \ of the recurrence. For example,\n   \"FREQ=YEARLY;BYMONTH=1,2\" increases the\
    \ number of days within the\n   yearly recurrence set from 1 (if BYMONTH tag is\
    \ not present) to 2.\n   If multiple BYxxx rule parts are specified, then after\
    \ evaluating the\n   specified FREQ and INTERVAL rule parts, the BYxxx rule parts\
    \ are\n   applied to the current set of evaluated occurrences in the following\n\
    \   order: BYMONTH, BYWEEKNO, BYYEARDAY, BYMONTHDAY, BYDAY, BYHOUR,\n   BYMINUTE,\
    \ BYSECOND and BYSETPOS; then COUNT and UNTIL are evaluated.\n   Here is an example\
    \ of evaluating multiple BYxxx rule parts.\n     DTSTART;TZID=US-Eastern:19970105T083000\n\
    \     RRULE:FREQ=YEARLY;INTERVAL=2;BYMONTH=1;BYDAY=SU;BYHOUR=8,9;\n      BYMINUTE=30\n\
    \   First, the \"INTERVAL=2\" would be applied to \"FREQ=YEARLY\" to arrive\n\
    \   at \"every other year\". Then, \"BYMONTH=1\" would be applied to arrive\n\
    \   at \"every January, every other year\". Then, \"BYDAY=SU\" would be\n   applied\
    \ to arrive at \"every Sunday in January, every other year\".\n   Then, \"BYHOUR=8,9\"\
    \ would be applied to arrive at \"every Sunday in\n   January at 8 AM and 9 AM,\
    \ every other year\". Then, \"BYMINUTE=30\"\n   would be applied to arrive at\
    \ \"every Sunday in January at 8:30 AM and\n   9:30 AM, every other year\". Then,\
    \ lacking information from RRULE, the\n   second is derived from DTSTART, to end\
    \ up in \"every Sunday in January\n   at 8:30:00 AM and 9:30:00 AM, every other\
    \ year\". Similarly, if the\n   BYMINUTE, BYHOUR, BYDAY, BYMONTHDAY or BYMONTH\
    \ rule part were\n   missing, the appropriate minute, hour, day or month would\
    \ have been\n   retrieved from the \"DTSTART\" property.\n   No additional content\
    \ value encoding (i.e., BACKSLASH character\n   encoding) is defined for this\
    \ value type.\n   Example: The following is a rule which specifies 10 meetings\
    \ which\n   occur every other day:\n     FREQ=DAILY;COUNT=10;INTERVAL=2\n   There\
    \ are other examples specified in the \"RRULE\" specification.\n"
- title: 4.3.11 Text
  contents:
  - "4.3.11 Text\n   Value Name: TEXT\n   Purpose This value type is used to identify\
    \ values that contain human\n   readable text.\n   Formal Definition: The character\
    \ sets supported by this revision of\n   iCalendar are UTF-8 and US ASCII thereof.\
    \ The applicability to other\n   character sets is for future work. The value\
    \ type is defined by the\n   following notation.\n     text       = *(TSAFE-CHAR\
    \ / \":\" / DQUOTE / ESCAPED-CHAR)\n     ; Folded according to description above\n\
    \     ESCAPED-CHAR = \"\\\\\" / \"\\;\" / \"\\,\" / \"\\N\" / \"\\n\")\n     \
    \   ; \\\\ encodes \\, \\N or \\n encodes newline\n        ; \\; encodes ;, \\\
    , encodes ,\n     TSAFE-CHAR = %x20-21 / %x23-2B / %x2D-39 / %x3C-5B\n       \
    \           %x5D-7E / NON-US-ASCII\n        ; Any character except CTLs not needed\
    \ by the current\n        ; character set, DQUOTE, \";\", \":\", \"\\\", \",\"\
    \n     Note: Certain other character sets may require modification of the\n  \
    \   above definitions, but this is beyond the scope of this document.\n   Description:\
    \ If the property permits, multiple \"text\" values are\n   specified by a COMMA\
    \ character (US-ASCII decimal 44) separated list\n   of values.\n   The language\
    \ in which the text is represented can be controlled by\n   the \"LANGUAGE\" property\
    \ parameter.\n   An intentional formatted text line break MUST only be included\
    \ in a\n   \"TEXT\" property value by representing the line break with the\n \
    \  character sequence of BACKSLASH (US-ASCII decimal 92), followed by a\n   LATIN\
    \ SMALL LETTER N (US-ASCII decimal 110) or a LATIN CAPITAL LETTER\n   N (US-ASCII\
    \ decimal 78), that is \"\\n\" or \"\\N\".\n   The \"TEXT\" property values may\
    \ also contain special characters that\n   are used to signify delimiters, such\
    \ as a COMMA character for lists\n   of values or a SEMICOLON character for structured\
    \ values. In order to\n   support the inclusion of these special characters in\
    \ \"TEXT\" property\n   values, they MUST be escaped with a BACKSLASH character.\
    \ A BACKSLASH\n   character (US-ASCII decimal 92) in a \"TEXT\" property value\
    \ MUST be\n   escaped with another BACKSLASH character. A COMMA character in a\n\
    \   \"TEXT\" property value MUST be escaped with a BACKSLASH character\n   (US-ASCII\
    \ decimal 92). A SEMICOLON character in a \"TEXT\" property\n   value MUST be\
    \ escaped with a BACKSLASH character (US-ASCII decimal\n   92).  However, a COLON\
    \ character in a \"TEXT\" property value SHALL NOT\n   be escaped with a BACKSLASH\
    \ character.Example: A multiple line value\n   of:\n     Project XYZ Final Review\n\
    \     Conference Room - 3B\n     Come Prepared.\n   would be represented as:\n\
    \     Project XYZ Final Review\\nConference Room - 3B\\nCome Prepared.\n"
- title: 4.3.12 Time
  contents:
  - "4.3.12 Time\n   Value Name: TIME\n   Purpose: This value type is used to identify\
    \ values that contain a\n   time of day.\n   Formal Definition: The data type\
    \ is defined by the following\n   notation:\n     time               = time-hour\
    \ time-minute time-second [time-utc]\n     time-hour          = 2DIGIT       \
    \ ;00-23\n     time-minute        = 2DIGIT        ;00-59\n     time-second   \
    \     = 2DIGIT        ;00-60\n     ;The \"60\" value is used to account for \"\
    leap\" seconds.\n     time-utc   = \"Z\"\n   Description: If the property permits,\
    \ multiple \"time\" values are\n   specified by a COMMA character (US-ASCII decimal\
    \ 44) separated list\n   of values. No additional content value encoding (i.e.,\
    \ BACKSLASH\n   character encoding) is defined for this value type.\n   The \"\
    TIME\" data type is used to identify values that contain a time\n   of day. The\
    \ format is based on the [ISO 8601] complete\n   representation, basic format\
    \ for a time of day. The text format\n   consists of a two-digit 24-hour of the\
    \ day (i.e., values 0-23), two-\n   digit minute in the hour (i.e., values 0-59),\
    \ and two-digit seconds\n   in the minute (i.e., values 0-60). The seconds value\
    \ of 60 MUST only\n   to be used to account for \"leap\" seconds. Fractions of\
    \ a second are\n   not supported by this format.\n   In parallel to the \"DATE-TIME\"\
    \ definition above, the \"TIME\" data type\n   expresses time values in three\
    \ forms:\n   The form of time with UTC offset MUST NOT be used. For example, the\n\
    \   following is NOT VALID for a time value:\n     230000-0800        ;Invalid\
    \ time format\n   FORM #1 LOCAL TIME\n   The local time form is simply a time\
    \ value that does not contain the\n   UTC designator nor does it reference a time\
    \ zone. For example, 11:00\n   PM:\n     230000\n   Time values of this type are\
    \ said to be \"floating\" and are not bound\n   to any time zone in particular.\
    \ They are used to represent the same\n   hour, minute, and second value regardless\
    \ of which time zone is\n   currently being observed. For example, an event can\
    \ be defined that\n   indicates that an individual will be busy from 11:00 AM\
    \ to 1:00 PM\n   every day, no matter which time zone the person is in. In these\n\
    \   cases, a local time can be specified. The recipient of an iCalendar\n   object\
    \ with a property value consisting of a local time, without any\n   relative time\
    \ zone information, SHOULD interpret the value as being\n   fixed to whatever\
    \ time zone the ATTENDEE is in at any given moment.\n   This means that two ATTENDEEs\
    \ may participate in the same event at\n   different UTC times; floating time\
    \ SHOULD only be used where that is\n   reasonable behavior.\n   In most cases,\
    \ a fixed time is desired. To properly communicate a\n   fixed time in a property\
    \ value, either UTC time or local time with\n   time zone reference MUST be specified.\n\
    \   The use of local time in a TIME value without the TZID property\n   parameter\
    \ is to be interpreted as a local time value, regardless of\n   the existence\
    \ of \"VTIMEZONE\" calendar components in the iCalendar\n   object.\n   FORM #2:\
    \ UTC TIME\n   UTC time, or absolute time, is identified by a LATIN CAPITAL LETTER\
    \ Z\n   suffix character (US-ASCII decimal 90), the UTC designator, appended\n\
    \   to the time value. For example, the following represents 07:00 AM\n   UTC:\n\
    \     070000Z\n   The TZID property parameter MUST NOT be applied to TIME properties\n\
    \   whose time values are specified in UTC.\n   FORM #3: LOCAL TIME AND TIME ZONE\
    \ REFERENCE\n   The local time with reference to time zone information form is\n\
    \   identified by the use the TZID property parameter to reference the\n   appropriate\
    \ time zone definition. TZID is discussed in detail in the\n   section on Time\
    \ Zone.\n   Example: The following represents 8:30 AM in New York in Winter, five\n\
    \   hours behind UTC, in each of the three formats using the \"X-\n   TIMEOFDAY\"\
    \ non-standard property:\n     X-TIMEOFDAY:083000\n     X-TIMEOFDAY:133000Z\n\
    \     X-TIMEOFDAY;TZID=US-Eastern:083000\n"
- title: 4.3.13 URI
  contents:
  - "4.3.13 URI\n   Value Name: URI\n   Purpose: This value type is used to identify\
    \ values that contain a\n   uniform resource identifier (URI) type of reference\
    \ to the property\n   value.\n   Formal Definition: The data type is defined by\
    \ the following\n   notation:\n     uri        = <As defined by any IETF RFC>\n\
    \   Description: This data type might be used to reference binary\n   information,\
    \ for values that are large, or otherwise undesirable to\n   include directly\
    \ in the iCalendar object.\n   The URI value formats in RFC 1738, RFC 2111 and\
    \ any other IETF\n   registered value format can be specified.\n   Any IANA registered\
    \ URI format can be used. These include, but are\n   not limited to, those defined\
    \ in RFC 1738 and RFC 2111.\n   When a property parameter value is a URI value\
    \ type, the URI MUST be\n   specified as a quoted-string value.\n   No additional\
    \ content value encoding (i.e., BACKSLASH character\n   encoding) is defined for\
    \ this value type.\n   Example: The following is a URI for a network file:\n \
    \    http://host1.com/my-report.txt\n"
- title: 4.3.14 UTC Offset
  contents:
  - "4.3.14 UTC Offset\n   Value Name: UTC-OFFSET\n   Purpose: This value type is\
    \ used to identify properties that contain\n   an offset from UTC to local time.\n\
    \   Formal Definition: The data type is defined by the following\n   notation:\n\
    \     utc-offset = time-numzone  ;As defined above in time data type\n     time-numzone\
    \       = (\"+\" / \"-\") time-hour time-minute [time-\n     second]\n   Description:\
    \ The PLUS SIGN character MUST be specified for positive\n   UTC offsets (i.e.,\
    \ ahead of UTC). The value of \"-0000\" and \"-000000\"\n   are not allowed. The\
    \ time-second, if present, may not be 60; if\n   absent, it defaults to zero.\n\
    \   No additional content value encoding (i.e., BACKSLASH character\n   encoding)\
    \ is defined for this value type.\n   Example: The following UTC offsets are given\
    \ for standard time for\n   New York (five hours behind UTC) and Geneva (one hour\
    \ ahead of UTC):\n     -0500\n     +0100\n"
- title: 4.4 iCalendar Object
  contents:
  - "4.4 iCalendar Object\n   The Calendaring and Scheduling Core Object is a collection\
    \ of\n   calendaring and scheduling information. Typically, this information\n\
    \   will consist of a single iCalendar object. However, multiple\n   iCalendar\
    \ objects can be sequentially grouped together. The first\n   line and last line\
    \ of the iCalendar object MUST contain a pair of\n   iCalendar object delimiter\
    \ strings. The syntax for an iCalendar\n   object is as follows:\n     icalobject\
    \ = 1*(\"BEGIN\" \":\" \"VCALENDAR\" CRLF\n                  icalbody\n      \
    \            \"END\" \":\" \"VCALENDAR\" CRLF)\n   The following is a simple example\
    \ of an iCalendar object:\n     BEGIN:VCALENDAR\n     VERSION:2.0\n     PRODID:-//hacksw/handcal//NONSGML\
    \ v1.0//EN\n     BEGIN:VEVENT\n     DTSTART:19970714T170000Z\n     DTEND:19970715T035959Z\n\
    \     SUMMARY:Bastille Day Party\n     END:VEVENT\n     END:VCALENDAR\n"
- title: 4.5 Property
  contents:
  - "4.5 Property\n   A property is the definition of an individual attribute describing\
    \ a\n   calendar or a calendar component. A property takes the form defined\n\
    \   by the \"contentline\" notation defined in section 4.1.1.\n   The following\
    \ is an example of a property:\n     DTSTART:19960415T133000Z\n   This memo imposes\
    \ no ordering of properties within an iCalendar\n   object.\n   Property names,\
    \ parameter names and enumerated parameter values are\n   case insensitive. For\
    \ example, the property name \"DUE\" is the same as\n   \"due\" and \"Due\", DTSTART;TZID=US-Eastern:19980714T120000\
    \ is the same\n   as DtStart;TzID=US-Eastern:19980714T120000.\n"
- title: 4.6 Calendar Components
  contents:
  - "4.6 Calendar Components\n   The body of the iCalendar object consists of a sequence\
    \ of calendar\n   properties and one or more calendar components. The calendar\n\
    \   properties are attributes that apply to the calendar as a whole. The\n   calendar\
    \ components are collections of properties that express a\n   particular calendar\
    \ semantic. For example, the calendar component can\n   specify an event, a to-do,\
    \ a journal entry, time zone information, or\n   free/busy time information, or\
    \ an alarm.\n   The body of the iCalendar object is defined by the following\n\
    \   notation:\n     icalbody   = calprops component\n     calprops   = 2*(\n \
    \               ; 'prodid' and 'version' are both REQUIRED,\n                ;\
    \ but MUST NOT occur more than once\n                prodid /version /\n     \
    \           ; 'calscale' and 'method' are optional,\n                ; but MUST\
    \ NOT occur more than once\n                calscale        /\n              \
    \  method          /\n                x-prop\n                )\n     component\
    \  = 1*(eventc / todoc / journalc / freebusyc /\n                / timezonec /\
    \ iana-comp / x-comp)\n     iana-comp  = \"BEGIN\" \":\" iana-token CRLF\n   \
    \               1*contentline\n                  \"END\" \":\" iana-token CRLF\n\
    \     x-comp     = \"BEGIN\" \":\" x-name CRLF\n                  1*contentline\n\
    \                  \"END\" \":\" x-name CRLF\n   An iCalendar object MUST include\
    \ the \"PRODID\" and \"VERSION\" calendar\n   properties. In addition, it MUST\
    \ include at least one calendar\n   component. Special forms of iCalendar objects\
    \ are possible to publish\n   just busy time (i.e., only a \"VFREEBUSY\" calendar\
    \ component) or time\n   zone (i.e., only a \"VTIMEZONE\" calendar component)\
    \ information. In\n   addition, a complex iCalendar object is possible that is\
    \ used to\n   capture a complete snapshot of the contents of a calendar (e.g.,\n\
    \   composite of many different calendar components). More commonly, an\n   iCalendar\
    \ object will consist of just a single \"VEVENT\", \"VTODO\" or\n   \"VJOURNAL\"\
    \ calendar component.\n"
- title: 4.6.1 Event Component
  contents:
  - "4.6.1 Event Component\n   Component Name: \"VEVENT\"\n   Purpose: Provide a grouping\
    \ of component properties that describe an\n   event.\n   Format Definition: A\
    \ \"VEVENT\" calendar component is defined by the\n   following notation:\n  \
    \   eventc     = \"BEGIN\" \":\" \"VEVENT\" CRLF\n                  eventprop\
    \ *alarmc\n                  \"END\" \":\" \"VEVENT\" CRLF\n     eventprop  =\
    \ *(\n                ; the following are optional,\n                ; but MUST\
    \ NOT occur more than once\n                class / created / description / dtstart\
    \ / geo /\n                last-mod / location / organizer / priority /\n    \
    \            dtstamp / seq / status / summary / transp /\n                uid\
    \ / url / recurid /\n                ; either 'dtend' or 'duration' may appear\
    \ in\n                ; a 'eventprop', but 'dtend' and 'duration'\n          \
    \      ; MUST NOT occur in the same 'eventprop'\n                dtend / duration\
    \ /\n                ; the following are optional,\n                ; and MAY\
    \ occur more than once\n                attach / attendee / categories / comment\
    \ /\n                contact / exdate / exrule / rstatus / related /\n       \
    \         resources / rdate / rrule / x-prop\n                )\n   Description:\
    \ A \"VEVENT\" calendar component is a grouping of component\n   properties, and\
    \ possibly including \"VALARM\" calendar components, that\n   represents a scheduled\
    \ amount of time on a calendar. For example, it\n   can be an activity; such as\
    \ a one-hour long, department meeting from\n   8:00 AM to 9:00 AM, tomorrow. Generally,\
    \ an event will take up time\n   on an individual calendar. Hence, the event will\
    \ appear as an opaque\n   interval in a search for busy time. Alternately, the\
    \ event can have\n   its Time Transparency set to \"TRANSPARENT\" in order to\
    \ prevent\n   blocking of the event in searches for busy time.\n   The \"VEVENT\"\
    \ is also the calendar component used to specify an\n   anniversary or daily reminder\
    \ within a calendar. These events have a\n   DATE value type for the \"DTSTART\"\
    \ property instead of the default\n   data type of DATE-TIME. If such a \"VEVENT\"\
    \ has a \"DTEND\" property, it\n   MUST be specified as a DATE value also. The\
    \ anniversary type of\n   \"VEVENT\" can span more than one date (i.e, \"DTEND\"\
    \ property value is\n   set to a calendar date after the \"DTSTART\" property\
    \ value).\n   The \"DTSTART\" property for a \"VEVENT\" specifies the inclusive\
    \ start\n   of the event. For recurring events, it also specifies the very first\n\
    \   instance in the recurrence set. The \"DTEND\" property for a \"VEVENT\"\n\
    \   calendar component specifies the non-inclusive end of the event. For\n   cases\
    \ where a \"VEVENT\" calendar component specifies a \"DTSTART\"\n   property with\
    \ a DATE data type but no \"DTEND\" property, the events\n   non-inclusive end\
    \ is the end of the calendar date specified by the\n   \"DTSTART\" property. For\
    \ cases where a \"VEVENT\" calendar component\n   specifies a \"DTSTART\" property\
    \ with a DATE-TIME data type but no\n   \"DTEND\" property, the event ends on\
    \ the same calendar date and time\n   of day specified by the \"DTSTART\" property.\n\
    \   The \"VEVENT\" calendar component cannot be nested within another\n   calendar\
    \ component. However, \"VEVENT\" calendar components can be\n   related to each\
    \ other or to a \"VTODO\" or to a \"VJOURNAL\" calendar\n   component with the\
    \ \"RELATED-TO\" property.\n   Example: The following is an example of the \"\
    VEVENT\" calendar\n   component used to represent a meeting that will also be\
    \ opaque to\n   searches for busy time:\n     BEGIN:VEVENT\n     UID:19970901T130000Z-123401@host.com\n\
    \     DTSTAMP:19970901T1300Z\n     DTSTART:19970903T163000Z\n     DTEND:19970903T190000Z\n\
    \     SUMMARY:Annual Employee Review\n     CLASS:PRIVATE\n     CATEGORIES:BUSINESS,HUMAN\
    \ RESOURCES\n     END:VEVENT\n   The following is an example of the \"VEVENT\"\
    \ calendar component used\n   to represent a reminder that will not be opaque,\
    \ but rather\n   transparent, to searches for busy time:\n     BEGIN:VEVENT\n\
    \     UID:19970901T130000Z-123402@host.com\n     DTSTAMP:19970901T1300Z\n    \
    \ DTSTART:19970401T163000Z\n     DTEND:19970402T010000Z\n     SUMMARY:Laurel is\
    \ in sensitivity awareness class.\n     CLASS:PUBLIC\n     CATEGORIES:BUSINESS,HUMAN\
    \ RESOURCES\n     TRANSP:TRANSPARENT\n     END:VEVENT\n   The following is an\
    \ example of the \"VEVENT\" calendar component used\n   to represent an anniversary\
    \ that will occur annually. Since it takes\n   up no time, it will not appear\
    \ as opaque in a search for busy time;\n   no matter what the value of the \"\
    TRANSP\" property indicates:\n     BEGIN:VEVENT\n     UID:19970901T130000Z-123403@host.com\n\
    \     DTSTAMP:19970901T1300Z\n     DTSTART:19971102\n     SUMMARY:Our Blissful\
    \ Anniversary\n     CLASS:CONFIDENTIAL\n     CATEGORIES:ANNIVERSARY,PERSONAL,SPECIAL\
    \ OCCASION\n     RRULE:FREQ=YEARLY\n     END:VEVENT\n"
- title: 4.6.2 To-do Component
  contents:
  - "4.6.2 To-do Component\n   Component Name: VTODO\n   Purpose: Provide a grouping\
    \ of calendar properties that describe a\n   to-do.\n   Formal Definition: A \"\
    VTODO\" calendar component is defined by the\n   following notation:\n     todoc\
    \      = \"BEGIN\" \":\" \"VTODO\" CRLF\n                  todoprop *alarmc\n\
    \                  \"END\" \":\" \"VTODO\" CRLF\n     todoprop   = *(\n      \
    \          ; the following are optional,\n                ; but MUST NOT occur\
    \ more than once\n                class / completed / created / description /\
    \ dtstamp /\n                dtstart / geo / last-mod / location / organizer /\n\
    \                percent / priority / recurid / seq / status /\n             \
    \   summary / uid / url /\n                ; either 'due' or 'duration' may appear\
    \ in\n                ; a 'todoprop', but 'due' and 'duration'\n             \
    \   ; MUST NOT occur in the same 'todoprop'\n                due / duration /\n\
    \                ; the following are optional,\n                ; and MAY occur\
    \ more than once\n                attach / attendee / categories / comment / contact\
    \ /\n                exdate / exrule / rstatus / related / resources /\n     \
    \           rdate / rrule / x-prop\n                )\n   Description: A \"VTODO\"\
    \ calendar component is a grouping of component\n   properties and possibly \"\
    VALARM\" calendar components that represent\n   an action-item or assignment.\
    \ For example, it can be used to\n   represent an item of work assigned to an\
    \ individual; such as \"turn in\n   travel expense today\".\n   The \"VTODO\"\
    \ calendar component cannot be nested within another\n   calendar component. However,\
    \ \"VTODO\" calendar components can be\n   related to each other or to a \"VTODO\"\
    \ or to a \"VJOURNAL\" calendar\n   component with the \"RELATED-TO\" property.\n\
    \   A \"VTODO\" calendar component without the \"DTSTART\" and \"DUE\" (or\n \
    \  \"DURATION\") properties specifies a to-do that will be associated with\n \
    \  each successive calendar date, until it is completed.\n   Example: The following\
    \ is an example of a \"VTODO\" calendar component:\n     BEGIN:VTODO\n     UID:19970901T130000Z-123404@host.com\n\
    \     DTSTAMP:19970901T1300Z\n     DTSTART:19970415T133000Z\n     DUE:19970416T045959Z\n\
    \     SUMMARY:1996 Income Tax Preparation\n     CLASS:CONFIDENTIAL\n     CATEGORIES:FAMILY,FINANCE\n\
    \     PRIORITY:1\n     STATUS:NEEDS-ACTION\n     END:VTODO\n"
- title: 4.6.3 Journal Component
  contents:
  - "4.6.3 Journal Component\n   Component Name: VJOURNAL\n   Purpose: Provide a grouping\
    \ of component properties that describe a\n   journal entry.\n   Formal Definition:\
    \ A \"VJOURNAL\" calendar component is defined by the\n   following notation:\n\
    \     journalc   = \"BEGIN\" \":\" \"VJOURNAL\" CRLF\n                  jourprop\n\
    \                  \"END\" \":\" \"VJOURNAL\" CRLF\n     jourprop   = *(\n   \
    \             ; the following are optional,\n                ; but MUST NOT occur\
    \ more than once\n                class / created / description / dtstart / dtstamp\
    \ /\n                last-mod / organizer / recurid / seq / status /\n       \
    \         summary / uid / url /\n                ; the following are optional,\n\
    \                ; and MAY occur more than once\n                attach / attendee\
    \ / categories / comment /\n                contact / exdate / exrule / related\
    \ / rdate /\n                rrule / rstatus / x-prop\n                )\n   Description:\
    \ A \"VJOURNAL\" calendar component is a grouping of\n   component properties\
    \ that represent one or more descriptive text\n   notes associated with a particular\
    \ calendar date. The \"DTSTART\"\n   property is used to specify the calendar\
    \ date that the journal entry\n   is associated with. Generally, it will have\
    \ a DATE value data type,\n   but it can also be used to specify a DATE-TIME value\
    \ data type.\n   Examples of a journal entry include a daily record of a legislative\n\
    \   body or a journal entry of individual telephone contacts for the day\n   or\
    \ an ordered list of accomplishments for the day. The \"VJOURNAL\"\n   calendar\
    \ component can also be used to associate a document with a\n   calendar date.\n\
    \   The \"VJOURNAL\" calendar component does not take up time on a\n   calendar.\
    \ Hence, it does not play a role in free or busy time\n   searches - - it is as\
    \ though it has a time transparency value of\n   TRANSPARENT. It is transparent\
    \ to any such searches.\n   The \"VJOURNAL\" calendar component cannot be nested\
    \ within another\n   calendar component. However, \"VJOURNAL\" calendar components\
    \ can be\n   related to each other or to a \"VEVENT\" or to a \"VTODO\" calendar\n\
    \   component, with the \"RELATED-TO\" property.\n   Example: The following is\
    \ an example of the \"VJOURNAL\" calendar\n   component:\n     BEGIN:VJOURNAL\n\
    \     UID:19970901T130000Z-123405@host.com\n     DTSTAMP:19970901T1300Z\n    \
    \ DTSTART;VALUE=DATE:19970317\n     SUMMARY:Staff meeting minutes\n     DESCRIPTION:1.\
    \ Staff meeting: Participants include Joe\\, Lisa\n       and Bob. Aurora project\
    \ plans were reviewed. There is currently\n       no budget reserves for this\
    \ project. Lisa will escalate to\n       management. Next meeting on Tuesday.\\\
    n\n       2. Telephone Conference: ABC Corp. sales representative called\n   \
    \    to discuss new printer. Promised to get us a demo by Friday.\\n\n       3.\
    \ Henry Miller (Handsoff Insurance): Car was totaled by tree.\n       Is looking\
    \ into a loaner car. 654-2323 (tel).\n     END:VJOURNAL\n"
- title: 4.6.4 Free/Busy Component
  contents:
  - "4.6.4 Free/Busy Component\n   Component Name: VFREEBUSY\n   Purpose: Provide\
    \ a grouping of component properties that describe\n   either a request for free/busy\
    \ time, describe a response to a request\n   for free/busy time or describe a\
    \ published set of busy time.\n   Formal Definition: A \"VFREEBUSY\" calendar\
    \ component is defined by the\n   following notation:\n     freebusyc  = \"BEGIN\"\
    \ \":\" \"VFREEBUSY\" CRLF\n                  fbprop\n                  \"END\"\
    \ \":\" \"VFREEBUSY\" CRLF\n     fbprop     = *(\n                ; the following\
    \ are optional,\n                ; but MUST NOT occur more than once\n       \
    \         contact / dtstart / dtend / duration / dtstamp /\n                organizer\
    \ / uid / url /\n                ; the following are optional,\n             \
    \   ; and MAY occur more than once\n                attendee / comment / freebusy\
    \ / rstatus / x-prop\n                )\n   Description: A \"VFREEBUSY\" calendar\
    \ component is a grouping of\n   component properties that represents either a\
    \ request for, a reply to\n   a request for free or busy time information or a\
    \ published set of\n   busy time information.\n   When used to request free/busy\
    \ time information, the \"ATTENDEE\"\n   property specifies the calendar users\
    \ whose free/busy time is being\n   requested; the \"ORGANIZER\" property specifies\
    \ the calendar user who\n   is requesting the free/busy time; the \"DTSTART\"\
    \ and \"DTEND\"\n   properties specify the window of time for which the free/busy\
    \ time is\n   being requested; the \"UID\" and \"DTSTAMP\" properties are specified\
    \ to\n   assist in proper sequencing of multiple free/busy time requests.\n  \
    \ When used to reply to a request for free/busy time, the \"ATTENDEE\"\n   property\
    \ specifies the calendar user responding to the free/busy time\n   request; the\
    \ \"ORGANIZER\" property specifies the calendar user that\n   originally requested\
    \ the free/busy time; the \"FREEBUSY\" property\n   specifies the free/busy time\
    \ information (if it exists); and the\n   \"UID\" and \"DTSTAMP\" properties are\
    \ specified to assist in proper\n   sequencing of multiple free/busy time replies.\n\
    \   When used to publish busy time, the \"ORGANIZER\" property specifies\n   the\
    \ calendar user associated with the published busy time; the\n   \"DTSTART\" and\
    \ \"DTEND\" properties specify an inclusive time window\n   that surrounds the\
    \ busy time information; the \"FREEBUSY\" property\n   specifies the published\
    \ busy time information; and the \"DTSTAMP\"\n   property specifies the date/time\
    \ that iCalendar object was created.\n   The \"VFREEBUSY\" calendar component\
    \ cannot be nested within another\n   calendar component. Multiple \"VFREEBUSY\"\
    \ calendar components can be\n   specified within an iCalendar object. This permits\
    \ the grouping of\n   Free/Busy information into logical collections, such as\
    \ monthly\n   groups of busy time information.\n   The \"VFREEBUSY\" calendar\
    \ component is intended for use in iCalendar\n   object methods involving requests\
    \ for free time, requests for busy\n   time, requests for both free and busy,\
    \ and the associated replies.\n   Free/Busy information is represented with the\
    \ \"FREEBUSY\" property.\n   This property provides a terse representation of\
    \ time periods. One or\n   more \"FREEBUSY\" properties can be specified in the\
    \ \"VFREEBUSY\"\n   calendar component.\n   When present in a \"VFREEBUSY\" calendar\
    \ component, the \"DTSTART\" and\n   \"DTEND\" properties SHOULD be specified\
    \ prior to any \"FREEBUSY\"\n   properties. In a free time request, these properties\
    \ can be used in\n   combination with the \"DURATION\" property to represent a\
    \ request for a\n   duration of free time within a specified window of time.\n\
    \   The recurrence properties (\"RRULE\", \"EXRULE\", \"RDATE\", \"EXDATE\") are\n\
    \   not permitted within a \"VFREEBUSY\" calendar component. Any recurring\n \
    \  events are resolved into their individual busy time periods using the\n   \"\
    FREEBUSY\" property.\n   Example: The following is an example of a \"VFREEBUSY\"\
    \ calendar\n   component used to request free or busy time information:\n    \
    \ BEGIN:VFREEBUSY\n     ORGANIZER:MAILTO:jane_doe@host1.com\n     ATTENDEE:MAILTO:john_public@host2.com\n\
    \     DTSTART:19971015T050000Z\n     DTEND:19971016T050000Z\n     DTSTAMP:19970901T083000Z\n\
    \     END:VFREEBUSY\n   The following is an example of a \"VFREEBUSY\" calendar\
    \ component used\n   to reply to the request with busy time information:\n   \
    \  BEGIN:VFREEBUSY\n     ORGANIZER:MAILTO:jane_doe@host1.com\n     ATTENDEE:MAILTO:john_public@host2.com\n\
    \     DTSTAMP:19970901T100000Z\n     FREEBUSY;VALUE=PERIOD:19971015T050000Z/PT8H30M,\n\
    \      19971015T160000Z/PT5H30M,19971015T223000Z/PT6H30M\n     URL:http://host2.com/pub/busy/jpublic-01.ifb\n\
    \     COMMENT:This iCalendar file contains busy time information for\n       the\
    \ next three months.\n     END:VFREEBUSY\n   The following is an example of a\
    \ \"VFREEBUSY\" calendar component used\n   to publish busy time information.\n\
    \     BEGIN:VFREEBUSY\n     ORGANIZER:jsmith@host.com\n     DTSTART:19980313T141711Z\n\
    \     DTEND:19980410T141711Z\n     FREEBUSY:19980314T233000Z/19980315T003000Z\n\
    \     FREEBUSY:19980316T153000Z/19980316T163000Z\n     FREEBUSY:19980318T030000Z/19980318T040000Z\n\
    \     URL:http://www.host.com/calendar/busytime/jsmith.ifb\n     END:VFREEBUSY\n"
- title: 4.6.5 Time Zone Component
  contents:
  - "4.6.5 Time Zone Component\n   Component Name: VTIMEZONE\n   Purpose: Provide\
    \ a grouping of component properties that defines a\n   time zone.\n   Formal\
    \ Definition: A \"VTIMEZONE\" calendar component is defined by the\n   following\
    \ notation:\n     timezonec  = \"BEGIN\" \":\" \"VTIMEZONE\" CRLF\n          \
    \        2*(\n                  ; 'tzid' is required, but MUST NOT occur more\n\
    \                  ; than once\n                tzid /\n                  ; 'last-mod'\
    \ and 'tzurl' are optional,\n                but MUST NOT occur more than once\n\
    \                last-mod / tzurl /\n                  ; one of 'standardc' or\
    \ 'daylightc' MUST occur\n                ..; and each MAY occur more than once.\n\
    \                standardc / daylightc /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                  x-prop\n  \
    \                )\n                  \"END\" \":\" \"VTIMEZONE\" CRLF\n     standardc\
    \  = \"BEGIN\" \":\" \"STANDARD\" CRLF\n                  tzprop\n           \
    \       \"END\" \":\" \"STANDARD\" CRLF\n     daylightc  = \"BEGIN\" \":\" \"\
    DAYLIGHT\" CRLF\n                  tzprop\n                  \"END\" \":\" \"\
    DAYLIGHT\" CRLF\n     tzprop     = 3*(\n                ; the following are each\
    \ REQUIRED,\n                ; but MUST NOT occur more than once\n           \
    \     dtstart / tzoffsetto / tzoffsetfrom /\n                ; the following are\
    \ optional,\n                ; and MAY occur more than once\n                comment\
    \ / rdate / rrule / tzname / x-prop\n                )\n   Description: A time\
    \ zone is unambiguously defined by the set of time\n   measurement rules determined\
    \ by the governing body for a given\n   geographic area. These rules describe\
    \ at a minimum the base  offset\n   from UTC for the time zone, often referred\
    \ to as the Standard Time\n   offset. Many locations adjust their Standard Time\
    \ forward or backward\n   by one hour, in order to accommodate seasonal changes\
    \ in number of\n   daylight hours, often referred to as Daylight  Saving Time.\
    \ Some\n   locations adjust their time by a fraction of an hour. Standard Time\n\
    \   is also known as Winter Time. Daylight Saving Time is also known as\n   Advanced\
    \ Time, Summer Time, or Legal Time in certain countries. The\n   following table\
    \ shows the changes in time zone rules in effect for\n   New York City starting\
    \ from 1967. Each line represents a description\n   or rule for a particular observance.\n\
    \     Effective Observance Rule\n     Date       (Date/Time)             Offset\
    \  Abbreviation\n     1967-*     last Sun in Oct, 02:00  -0500   EST\n     1967-1973\
    \  last Sun in Apr, 02:00  -0400   EDT\n     1974-1974  Jan 6,  02:00        \
    \   -0400   EDT\n     1975-1975  Feb 23, 02:00           -0400   EDT\n     1976-1986\
    \  last Sun in Apr, 02:00  -0400   EDT\n     1987-*     first Sun in Apr, 02:00\
    \ -0400   EDT\n        Note: The specification of a global time zone registry\
    \ is not\n        addressed by this document and is left for future study.\n \
    \       However, implementers may find the Olson time zone database [TZ]\n   \
    \     a useful reference. It is an informal, public-domain collection\n      \
    \  of time zone information, which is currently being maintained by\n        volunteer\
    \ Internet participants, and is used in several\n        operating systems. This\
    \ database contains current and historical\n        time zone information for\
    \ a wide variety of locations around the\n        globe; it provides a time zone\
    \ identifier for every unique time\n        zone rule set in actual use since\
    \ 1970, with historical data\n        going back to the introduction of standard\
    \ time.\n   Interoperability between two calendaring and scheduling applications,\n\
    \   especially for recurring events, to-dos or journal entries, is\n   dependent\
    \ on the ability to capture and convey date and time\n   information in an unambiguous\
    \ format. The specification of current\n   time zone information is integral to\
    \ this behavior.\n   If present, the \"VTIMEZONE\" calendar component defines\
    \ the set of\n   Standard Time and Daylight Saving Time observances (or rules)\
    \ for a\n   particular time zone for a given interval of time. The \"VTIMEZONE\"\
    \n   calendar component cannot be nested within other calendar components.\n \
    \  Multiple \"VTIMEZONE\" calendar components can exist in an iCalendar\n   object.\
    \ In this situation, each \"VTIMEZONE\" MUST represent a unique\n   time zone\
    \ definition. This is necessary for some classes of events,\n   such as airline\
    \ flights, that start in one time zone and end in\n   another.\n   The \"VTIMEZONE\"\
    \ calendar component MUST be present if the iCalendar\n   object contains an RRULE\
    \ that generates dates on both sides of a time\n   zone shift (e.g. both in Standard\
    \ Time and Daylight Saving Time)\n   unless the iCalendar object intends to convey\
    \ a floating time (See\n   the section \"4.1.10.11 Time\" for proper interpretation\
    \ of floating\n   time). It can be present if the iCalendar object does not contain\n\
    \   such a RRULE. In addition, if a RRULE is present, there MUST be valid\n  \
    \ time zone information for all recurrence instances.\n   The \"VTIMEZONE\" calendar\
    \ component MUST include the \"TZID\" property\n   and at least one definition\
    \ of a standard or daylight component. The\n   standard or daylight component\
    \ MUST include the \"DTSTART\",\n   \"TZOFFSETFROM\" and \"TZOFFSETTO\" properties.\n\
    \   An individual \"VTIMEZONE\" calendar component MUST be specified for\n   each\
    \ unique \"TZID\" parameter value specified in the iCalendar object.\n   Each\
    \ \"VTIMEZONE\" calendar component consists of a collection of one\n   or more\
    \ sub-components that describe the rule for a particular\n   observance (either\
    \ a Standard Time or a Daylight Saving Time\n   observance). The \"STANDARD\"\
    \ sub-component consists of a collection of\n   properties that describe Standard\
    \ Time. The \"DAYLIGHT\" sub-component\n   consists of a collection of properties\
    \ that describe Daylight Saving\n   Time. In general this collection of properties\
    \ consists of:\n        - the first onset date-time for the observance\n     \
    \   - the last onset date-time for the observance, if a last onset\n         \
    \ is known.\n        - the offset to be applied for the observance\n        -\
    \ a rule that describes the day and time when the observance\n          takes\
    \ effect\n        - an optional name for the observance\n   For a given time zone,\
    \ there may be multiple unique definitions of\n   the observances over a period\
    \ of time. Each observance is described\n   using either a \"STANDARD\" or \"\
    DAYLIGHT\" sub-component. The collection\n   of these sub-components is used to\
    \ describe the time zone for a given\n   period of time. The offset to apply at\
    \ any given time is found by\n   locating the observance that has the last onset\
    \ date and time before\n   the time in question, and using the offset value from\
    \ that\n   observance.\n   The top-level properties in a \"VTIMEZONE\" calendar\
    \ component are:\n   The mandatory \"TZID\" property is a text value that uniquely\n\
    \   identifies the VTIMZONE calendar component within the scope of an\n   iCalendar\
    \ object.\n   The optional \"LAST-MODIFIED\" property is a UTC value that specifies\n\
    \   the date and time that this time zone definition was last updated.\n   The\
    \ optional \"TZURL\" property is url value that points to a published\n   VTIMEZONE\
    \ definition. TZURL SHOULD refer to a resource that is\n   accessible by anyone\
    \ who might need to interpret the object. This\n   SHOULD NOT normally be a file:\
    \ URL or other URL that is not widely-\n   accessible.\n   The collection of properties\
    \ that are used to define the STANDARD and\n   DAYLIGHT sub-components include:\n\
    \   The mandatory \"DTSTART\" property gives the effective onset date and\n  \
    \ local time for the time zone sub-component definition. \"DTSTART\" in\n   this\
    \ usage MUST be specified as a local DATE-TIME value.\n   The mandatory \"TZOFFSETFROM\"\
    \ property gives the UTC offset which is\n   in use when the onset of this time\
    \ zone observance begins.\n   \"TZOFFSETFROM\" is combined with \"DTSTART\" to\
    \ define the effective\n   onset for the time zone sub-component definition. For\
    \ example, the\n   following represents the time at which the observance of Standard\n\
    \   Time took effect in Fall 1967 for New York City:\n     DTSTART:19671029T020000\n\
    \     TZOFFSETFROM:-0400\n   The mandatory \"TZOFFSETTO \" property gives the\
    \ UTC offset for the\n   time zone sub-component (Standard Time or Daylight Saving\
    \ Time) when\n   this observance is in use.\n   The optional \"TZNAME\" property\
    \ is the customary name for the time\n   zone. It may be specified multiple times,\
    \ to allow for specifying\n   multiple language variants of the time zone names.\
    \ This could be used\n   for displaying dates.\n   If specified, the onset for\
    \ the observance defined by the time zone\n   sub-component is defined by either\
    \ the \"RRULE\" or \"RDATE\" property.\n   If neither is specified, only one sub-component\
    \ can be specified in\n   the \"VTIMEZONE\" calendar component and it is assumed\
    \ that the single\n   observance specified is always in effect.\n   The \"RRULE\"\
    \ property defines the recurrence rule for the onset of the\n   observance defined\
    \ by this time zone sub-component. Some specific\n   requirements for the usage\
    \ of RRULE for this purpose include:\n        - If observance is known to have\
    \ an effective end date, the\n        \"UNTIL\" recurrence rule parameter MUST\
    \ be used to specify the\n        last valid onset of this observance (i.e., the\
    \ UNTIL date-time\n        will be equal to the last instance generated by the\
    \ recurrence\n        pattern). It MUST be specified in UTC time.\n        - The\
    \ \"DTSTART\" and the \"TZOFFSETTO\" properties MUST be used\n        when generating\
    \ the onset date-time values (instances) from the\n        RRULE.\n   Alternatively,\
    \ the \"RDATE\" property can be used to define the onset\n   of the observance\
    \ by giving the individual onset date and times.\n   \"RDATE\" in this usage MUST\
    \ be specified as a local DATE-TIME value in\n   UTC time.\n   The optional \"\
    COMMENT\" property is also allowed for descriptive\n   explanatory text.\n   Example:\
    \ The following are examples of the \"VTIMEZONE\" calendar\n   component:\n  \
    \ This is an example showing time zone information for the Eastern\n   United\
    \ States using \"RDATE\" property. Note that this is only suitable\n   for a recurring\
    \ event that starts on or later than April 6, 1997 at\n   03:00:00 EDT (i.e.,\
    \ the earliest effective transition date and time)\n   and ends no later than\
    \ April 7, 1998 02:00:00 EST (i.e., latest valid\n   date and time for EST in\
    \ this scenario). For example, this can be\n   used for a recurring event that\
    \ occurs every Friday, 8am-9:00 AM,\n   starting June 1, 1997, ending December\
    \ 31, 1997.\n     BEGIN:VTIMEZONE\n     TZID:US-Eastern\n     LAST-MODIFIED:19870101T000000Z\n\
    \     BEGIN:STANDARD\n     DTSTART:19971026T020000\n     RDATE:19971026T020000\n\
    \     TZOFFSETFROM:-0400\n     TZOFFSETTO:-0500\n     TZNAME:EST\n     END:STANDARD\n\
    \     BEGIN:DAYLIGHT\n     DTSTART:19971026T020000\n     RDATE:19970406T020000\n\
    \     TZOFFSETFROM:-0500\n     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n\
    \     END:VTIMEZONE\n   This is a simple example showing the current time zone\
    \ rules for the\n   Eastern United States using a RRULE recurrence pattern. Note\
    \ that\n   there is no effective end date to either of the Standard Time or\n\
    \   Daylight Time rules. This information would be valid for a recurring\n   event\
    \ starting today and continuing indefinitely.\n     BEGIN:VTIMEZONE\n     TZID:US-Eastern\n\
    \     LAST-MODIFIED:19870101T000000Z\n     TZURL:http://zones.stds_r_us.net/tz/US-Eastern\n\
    \     BEGIN:STANDARD\n     DTSTART:19671029T020000\n     RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \     TZOFFSETFROM:-0400\n     TZOFFSETTO:-0500\n     TZNAME:EST\n     END:STANDARD\n\
    \     BEGIN:DAYLIGHT\n     DTSTART:19870405T020000\n     RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4\n\
    \     TZOFFSETFROM:-0500\n     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n\
    \     END:VTIMEZONE\n   This is an example showing a fictitious set of rules for\
    \ the Eastern\n   United States, where the Daylight Time rule has an effective\
    \ end date\n   (i.e., after that date, Daylight Time is no longer observed).\n\
    \     BEGIN:VTIMEZONE\n     TZID:US--Fictitious-Eastern\n     LAST-MODIFIED:19870101T000000Z\n\
    \     BEGIN:STANDARD\n     DTSTART:19671029T020000\n     RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n\
    \     TZOFFSETFROM:-0400\n     TZOFFSETTO:-0500\n     TZNAME:EST\n     END:STANDARD\n\
    \     BEGIN:DAYLIGHT\n     DTSTART:19870405T020000\n     RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z\n\
    \     TZOFFSETFROM:-0500\n     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n\
    \     END:VTIMEZONE\n   This is an example showing a fictitious set of rules for\
    \ the Eastern\n   United States, where the first Daylight Time rule has an effective\n\
    \   end date. There is a second Daylight Time rule that picks up where\n   the\
    \ other left off.\n     BEGIN:VTIMEZONE\n     TZID:US--Fictitious-Eastern\n  \
    \   LAST-MODIFIED:19870101T000000Z\n     BEGIN:STANDARD\n     DTSTART:19671029T020000\n\
    \     RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=10\n     TZOFFSETFROM:-0400\n     TZOFFSETTO:-0500\n\
    \     TZNAME:EST\n     END:STANDARD\n     BEGIN:DAYLIGHT\n     DTSTART:19870405T020000\n\
    \     RRULE:FREQ=YEARLY;BYDAY=1SU;BYMONTH=4;UNTIL=19980404T070000Z\n     TZOFFSETFROM:-0500\n\
    \     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n     BEGIN:DAYLIGHT\n\
    \     DTSTART:19990424T020000\n     RRULE:FREQ=YEARLY;BYDAY=-1SU;BYMONTH=4\n \
    \    TZOFFSETFROM:-0500\n     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n\
    \     END:VTIMEZONE\n"
- title: 4.6.6 Alarm Component
  contents:
  - "4.6.6 Alarm Component\n   Component Name: VALARM\n   Purpose: Provide a grouping\
    \ of component properties that define an\n   alarm.\n   Formal Definition: A \"\
    VALARM\" calendar component is defined by the\n   following notation:\n      \
    \    alarmc     = \"BEGIN\" \":\" \"VALARM\" CRLF\n                       (audioprop\
    \ / dispprop / emailprop / procprop)\n                       \"END\" \":\" \"\
    VALARM\" CRLF\n     audioprop  = 2*(\n                ; 'action' and 'trigger'\
    \ are both REQUIRED,\n                ; but MUST NOT occur more than once\n  \
    \              action / trigger /\n                ; 'duration' and 'repeat' are\
    \ both optional,\n                ; and MUST NOT occur more than once each,\n\
    \                ; but if one occurs, so MUST the other\n                duration\
    \ / repeat /\n                ; the following is optional,\n                ;\
    \ but MUST NOT occur more than once\n                attach /\n              \
    \  ; the following is optional,\n                ; and MAY occur more than once\n\
    \                x-prop\n                )\n     dispprop   = 3*(\n          \
    \      ; the following are all REQUIRED,\n                ; but MUST NOT occur\
    \ more than once\n                action / description / trigger /\n         \
    \       ; 'duration' and 'repeat' are both optional,\n                ; and MUST\
    \ NOT occur more than once each,\n                ; but if one occurs, so MUST\
    \ the other\n                duration / repeat /\n                ; the following\
    \ is optional,\n                ; and MAY occur more than once\n             \
    \   *x-prop\n                )\n     emailprop  = 5*(\n                ; the following\
    \ are all REQUIRED,\n                ; but MUST NOT occur more than once\n   \
    \             action / description / trigger / summary\n                ; the\
    \ following is REQUIRED,\n                ; and MAY occur more than once\n   \
    \             attendee /\n                ; 'duration' and 'repeat' are both optional,\n\
    \                ; and MUST NOT occur more than once each,\n                ;\
    \ but if one occurs, so MUST the other\n                duration / repeat /\n\
    \                ; the following are optional,\n                ; and MAY occur\
    \ more than once\n                attach / x-prop\n                )\n     procprop\
    \   = 3*(\n                ; the following are all REQUIRED,\n               \
    \ ; but MUST NOT occur more than once\n                action / attach / trigger\
    \ /\n                ; 'duration' and 'repeat' are both optional,\n          \
    \      ; and MUST NOT occur more than once each,\n                ; but if one\
    \ occurs, so MUST the other\n                duration / repeat /\n           \
    \     ; 'description' is optional,\n                ; and MUST NOT occur more\
    \ than once\n                description /\n                ; the following is\
    \ optional,\n                ; and MAY occur more than once\n                x-prop\n\
    \                )\n   Description: A \"VALARM\" calendar component is a grouping\
    \ of component\n   properties that is a reminder or alarm for an event or a to-do.\
    \ For\n   example, it may be used to define a reminder for a pending event or\n\
    \   an overdue to-do.\n   The \"VALARM\" calendar component MUST include the \"\
    ACTION\" and\n   \"TRIGGER\" properties. The \"ACTION\" property further constrains\
    \ the\n   \"VALARM\" calendar component in the following ways:\n   When the action\
    \ is \"AUDIO\", the alarm can also include one and only\n   one \"ATTACH\" property,\
    \ which MUST point to a sound resource, which is\n   rendered when the alarm is\
    \ triggered.\n   When the action is \"DISPLAY\", the alarm MUST also include a\n\
    \   \"DESCRIPTION\" property, which contains the text to be displayed when\n \
    \  the alarm is triggered.\n   When the action is \"EMAIL\", the alarm MUST include\
    \ a \"DESCRIPTION\"\n   property, which contains the text to be used as the message\
    \ body, a\n   \"SUMMARY\" property, which contains the text to be used as the\
    \ message\n   subject, and one or more \"ATTENDEE\" properties, which contain\
    \ the\n   email address of attendees to receive the message. It can also\n   include\
    \ one or more \"ATTACH\" properties, which are intended to be\n   sent as message\
    \ attachments. When the alarm is triggered, the email\n   message is sent.\n \
    \  When the action is \"PROCEDURE\", the alarm MUST include one and only\n   one\
    \ \"ATTACH\" property, which MUST point to a procedure resource,\n   which is\
    \ invoked when the alarm is triggered.\n   The \"VALARM\" calendar component MUST\
    \ only appear within either a\n   \"VEVENT\" or \"VTODO\" calendar component.\
    \ \"VALARM\" calendar components\n   cannot be nested. Multiple mutually independent\
    \ \"VALARM\" calendar\n   components can be specified for a single \"VEVENT\"\
    \ or \"VTODO\" calendar\n   component.\n   The \"TRIGGER\" property specifies\
    \ when the alarm will be triggered.\n   The \"TRIGGER\" property specifies a duration\
    \ prior to the start of an\n   event or a to-do. The \"TRIGGER\" edge may be explicitly\
    \ set to be\n   relative to the \"START\" or \"END\" of the event or to-do with\
    \ the\n   \"RELATED\" parameter of the \"TRIGGER\" property. The \"TRIGGER\" property\n\
    \   value type can alternatively be set to an absolute calendar date and\n   time\
    \ of day value.\n   In an alarm set to trigger on the \"START\" of an event or\
    \ to-do, the\n   \"DTSTART\" property MUST be present in the associated event\
    \ or to-do.\n   In an alarm in a \"VEVENT\" calendar component set to trigger\
    \ on the\n   \"END\" of the event, either the \"DTEND\" property MUST be present,\
    \ or\n   the \"DTSTART\" and \"DURATION\" properties MUST both be present. In\
    \ an\n   alarm in a \"VTODO\" calendar component set to trigger on the \"END\"\
    \ of\n   the to-do, either the \"DUE\" property MUST be present, or the\n   \"\
    DTSTART\" and \"DURATION\" properties MUST both be present.\n   The alarm can\
    \ be defined such that it triggers repeatedly. A\n   definition of an alarm with\
    \ a repeating trigger MUST include both the\n   \"DURATION\" and \"REPEAT\" properties.\
    \ The \"DURATION\" property specifies\n   the delay period, after which the alarm\
    \ will repeat. The \"REPEAT\"\n   property specifies the number of additional\
    \ repetitions that the\n   alarm will triggered. This repitition count is in addition\
    \ to the\n   initial triggering of the alarm. Both of these properties MUST be\n\
    \   present in order to specify a repeating alarm. If one of these two\n   properties\
    \ is absent, then the alarm will not repeat beyond the\n   initial trigger.\n\
    \   The \"ACTION\" property is used within the \"VALARM\" calendar component\n\
    \   to specify the type of action invoked when the alarm is triggered.\n   The\
    \ \"VALARM\" properties provide enough information for a specific\n   action to\
    \ be invoked. It is typically the responsibility of a\n   \"Calendar User Agent\"\
    \ (CUA) to deliver the alarm in the specified\n   fashion. An \"ACTION\" property\
    \ value of AUDIO specifies an alarm that\n   causes a sound to be played to alert\
    \ the user; DISPLAY specifies an\n   alarm that causes a text message to be displayed\
    \ to the user; EMAIL\n   specifies an alarm that causes an electronic email message\
    \ to be\n   delivered to one or more email addresses; and PROCEDURE specifies\
    \ an\n   alarm that causes a procedure to be executed. The \"ACTION\" property\n\
    \   MUST specify one and only one of these values.\n   In an AUDIO alarm, if the\
    \ optional \"ATTACH\" property is included, it\n   MUST specify an audio sound\
    \ resource. The intention is that the sound\n   will be played as the alarm effect.\
    \ If an \"ATTACH\" property is\n   specified that does not refer to a sound resource,\
    \ or if the\n   specified sound resource cannot be rendered (because its format\
    \ is\n   unsupported, or because it cannot be retrieved), then the CUA or\n  \
    \ other entity responsible for playing the sound may choose a fallback\n   action,\
    \ such as playing a built-in default sound, or playing no sound\n   at all.\n\
    \   In a DISPLAY alarm, the intended alarm effect is for the text value\n   of\
    \ the \"DESCRIPTION\" property to be displayed to the user.\n   In an EMAIL alarm,\
    \ the intended alarm effect is for an email message\n   to be composed and delivered\
    \ to all the addresses specified by the\n   \"ATTENDEE\" properties in the \"\
    VALARM\" calendar component. The\n   \"DESCRIPTION\" property of the \"VALARM\"\
    \ calendar component MUST be\n   used as the body text of the message, and the\
    \ \"SUMMARY\" property MUST\n   be used as the subject text. Any \"ATTACH\" properties\
    \ in the \"VALARM\"\n   calendar component SHOULD be sent as attachments to the\
    \ message.\n   In a PROCEDURE alarm, the \"ATTACH\" property in the \"VALARM\"\
    \ calendar\n   component MUST specify a procedure or program that is intended\
    \ to be\n   invoked as the alarm effect. If the procedure or program is in a\n\
    \   format that cannot be rendered, then no procedure alarm will be\n   invoked.\
    \ If the \"DESCRIPTION\" property is present, its value\n   specifies the argument\
    \ string to be passed to the procedure or\n   program. \"Calendar User Agents\"\
    \ that receive an iCalendar object with\n   this category of alarm, can disable\
    \ or allow the \"Calendar User\" to\n   disable, or otherwise ignore this type\
    \ of alarm. While a very useful\n   alarm capability, the PROCEDURE type of alarm\
    \ SHOULD be treated by\n   the \"Calendar User Agent\" as a potential security\
    \ risk.\n   Example: The following example is for a \"VALARM\" calendar component\n\
    \   that specifies an audio alarm that will sound at a precise time and\n   repeat\
    \ 4 more times at 15 minute intervals:\n     BEGIN:VALARM\n     TRIGGER;VALUE=DATE-TIME:19970317T133000Z\n\
    \     REPEAT:4\n     DURATION:PT15M\n     ACTION:AUDIO\n     ATTACH;FMTTYPE=audio/basic:ftp://host.com/pub/sounds/bell-01.aud\n\
    \     END:VALARM\n   The following example is for a \"VALARM\" calendar component\
    \ that\n   specifies a display alarm that will trigger 30 minutes before the\n\
    \   scheduled start of the event or the due date/time of the to-do it is\n   associated\
    \ with and will repeat 2 more times at 15 minute intervals:\n     BEGIN:VALARM\n\
    \     TRIGGER:-PT30M\n     REPEAT:2\n     DURATION:PT15M\n     ACTION:DISPLAY\n\
    \     DESCRIPTION:Breakfast meeting with executive\\n\n      team at 8:30 AM EST.\n\
    \     END:VALARM\n   The following example is for a \"VALARM\" calendar component\
    \ that\n   specifies an email alarm that will trigger 2 days before the\n   scheduled\
    \ due date/time of a to-do it is associated with. It does not\n   repeat. The\
    \ email has a subject, body and attachment link.\n     BEGIN:VALARM\n     TRIGGER:-P2D\n\
    \     ACTION:EMAIL\n     ATTENDEE:MAILTO:john_doe@host.com\n     SUMMARY:*** REMINDER:\
    \ SEND AGENDA FOR WEEKLY STAFF MEETING ***\n     DESCRIPTION:A draft agenda needs\
    \ to be sent out to the attendees\n       to the weekly managers meeting (MGR-LIST).\
    \ Attached is a\n       pointer the document template for the agenda file.\n \
    \    ATTACH;FMTTYPE=application/binary:http://host.com/templates/agen\n      da.doc\n\
    \     END:VALARM\n   The following example is for a \"VALARM\" calendar component\
    \ that\n   specifies a procedural alarm that will trigger at a precise date/time\n\
    \   and will repeat 23 more times at one hour intervals. The alarm will\n   invoke\
    \ a procedure file.\n     BEGIN:VALARM\n     TRIGGER;VALUE=DATE-TIME:19980101T050000Z\n\
    \     REPEAT:23\n     DURATION:PT1H\n     ACTION:PROCEDURE\n     ATTACH;FMTTYPE=application/binary:ftp://host.com/novo-\n\
    \      procs/felizano.exe\n     END:VALARM\n"
- title: 4.7 Calendar Properties
  contents:
  - "4.7 Calendar Properties\n   The Calendar Properties are attributes that apply\
    \ to the iCalendar\n   object, as a whole. These properties do not appear within\
    \ a calendar\n   component. They SHOULD be specified after the \"BEGIN:VCALENDAR\"\
    \n   property and prior to any calendar component.\n"
- title: 4.7.1 Calendar Scale
  contents:
  - "4.7.1 Calendar Scale\n   Property Name: CALSCALE\n   Purpose: This property defines\
    \ the calendar scale used for the\n   calendar information specified in the iCalendar\
    \ object.\n   Value Type: TEXT\n   Property Parameters: Non-standard property\
    \ parameters can be\n   specified on this property.\n   Conformance: Property\
    \ can be specified in an iCalendar object. The\n   default value is \"GREGORIAN\"\
    .\n   Description: This memo is based on the Gregorian calendar scale. The\n \
    \  Gregorian calendar scale is assumed if this property is not specified\n   in\
    \ the iCalendar object. It is expected that other calendar scales\n   will be\
    \ defined in other specifications or by future versions of this\n   memo.\n  \
    \ Format Definition: The property is defined by the following notation:\n    \
    \ calscale   = \"CALSCALE\" calparam \":\" calvalue CRLF\n     calparam   = *(\"\
    ;\" xparam)\n     calvalue   = \"GREGORIAN\" / iana-token\n   Example: The following\
    \ is an example of this property:\n     CALSCALE:GREGORIAN\n"
- title: 4.7.2 Method
  contents:
  - "4.7.2 Method\n   Property Name: METHOD\n   Purpose: This property defines the\
    \ iCalendar object method associated\n   with the calendar object.\n   Value Type:\
    \ TEXT\n   Property Parameters: Non-standard property parameters can be\n   specified\
    \ on this property.\n   Conformance: The property can be specified in an iCalendar\
    \ object.\n   Description: When used in a MIME message entity, the value of this\n\
    \   property MUST be the same as the Content-Type \"method\" parameter\n   value.\
    \ This property can only appear once within the iCalendar\n   object. If either\
    \ the \"METHOD\" property or the Content-Type \"method\"\n   parameter is specified,\
    \ then the other MUST also be specified.\n   No methods are defined by this specification.\
    \ This is the subject of\n   other specifications, such as the iCalendar Transport-independent\n\
    \   Interoperability Protocol (iTIP) defined by [ITIP].\n   If this property is\
    \ not present in the iCalendar object, then a\n   scheduling transaction MUST\
    \ NOT be assumed. In such cases, the\n   iCalendar object is merely being used\
    \ to transport a snapshot of some\n   calendar information; without the intention\
    \ of conveying a scheduling\n   semantic.\n   Format Definition: The property\
    \ is defined by the following notation:\n     method     = \"METHOD\" metparam\
    \ \":\" metvalue CRLF\n     metparam   = *(\";\" xparam)\n     metvalue   = iana-token\n\
    \   Example: The following is a hypothetical example of this property to\n   convey\
    \ that the iCalendar object is a request for a meeting:\n     METHOD:REQUEST\n"
- title: 4.7.3 Product Identifier
  contents:
  - "4.7.3 Product Identifier\n   Property Name: PRODID\n   Purpose: This property\
    \ specifies the identifier for the product that\n   created the iCalendar object.\n\
    \   Value Type: TEXT\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: The property MUST be\
    \ specified once in an iCalendar\n   object.\n   Description: The vendor of the\
    \ implementation SHOULD assure that this\n   is a globally unique identifier;\
    \ using some technique such as an FPI\n   value, as defined in [ISO 9070].\n \
    \  This property SHOULD not be used to alter the interpretation of an\n   iCalendar\
    \ object beyond the semantics specified in this memo. For\n   example, it is not\
    \ to be used to further the understanding of non-\n   standard properties.\n \
    \  Format Definition: The property is defined by the following notation:\n   \
    \  prodid     = \"PRODID\" pidparam \":\" pidvalue CRLF\n     pidparam   = *(\"\
    ;\" xparam)\n     pidvalue   = text\n     ;Any text that describes the product\
    \ and version\n     ;and that is generally assured of being unique.\n   Example:\
    \ The following is an example of this property. It does not\n   imply that English\
    \ is the default language.\n     PRODID:-//ABC Corporation//NONSGML My Product//EN\n"
- title: 4.7.4 Version
  contents:
  - "4.7.4 Version\n   Property Name: VERSION\n   Purpose: This property specifies\
    \ the identifier corresponding to the\n   highest version number or the minimum\
    \ and maximum range of the\n   iCalendar specification that is required in order\
    \ to interpret the\n   iCalendar object.\n   Value Type: TEXT\n   Property Parameters:\
    \ Non-standard property parameters can be\n   specified on this property.\n  \
    \ Conformance: This property MUST be specified by an iCalendar object,\n   but\
    \ MUST only be specified once.\n   Description: A value of \"2.0\" corresponds\
    \ to this memo.\n   Format Definition: The property is defined by the following\
    \ notation:\n     version    = \"VERSION\" verparam \":\" vervalue CRLF\n    \
    \ verparam   = *(\";\" xparam)\n     vervalue   = \"2.0\"         ;This memo\n\
    \                / maxver\n                / (minver \";\" maxver)\n     minver\
    \     = <A IANA registered iCalendar version identifier>\n     ;Minimum iCalendar\
    \ version needed to parse the iCalendar object\n     maxver     = <A IANA registered\
    \ iCalendar version identifier>\n     ;Maximum iCalendar version needed to parse\
    \ the iCalendar object\n   Example: The following is an example of this property:\n\
    \     VERSION:2.0\n"
- title: 4.8 Component Properties
  contents:
  - "4.8 Component Properties\n   The following properties can appear within calendar\
    \ components, as\n   specified by each component property definition.\n"
- title: 4.8.1 Descriptive Component Properties
  contents:
  - "4.8.1 Descriptive Component Properties\n   The following properties specify descriptive\
    \ information about\n   calendar components.\n"
- title: 4.8.1.1 Attachment
  contents:
  - "4.8.1.1 Attachment\n   Property Name: ATTACH\n   Purpose: The property provides\
    \ the capability to associate a document\n   object with a calendar component.\n\
    \   Value Type: The default value type for this property is URI. The\n   value\
    \ type can also be set to BINARY to indicate inline binary\n   encoded content\
    \ information.\n   Property Parameters: Non-standard, inline encoding, format\
    \ type and\n   value data type property parameters can be specified on this\n\
    \   property.\n   Conformance: The property can be specified in a \"VEVENT\",\
    \ \"VTODO\",\n   \"VJOURNAL\" or \"VALARM\" calendar components.\n   Description:\
    \ The property can be specified within \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\"\
    , or \"VALARM\" calendar components. This property can be\n   specified multiple\
    \ times within an iCalendar object.\n   Format Definition: The property is defined\
    \ by the following notation:\n     attach     = \"ATTACH\" attparam \":\" uri\
    \  CRLF\n     attach     =/ \"ATTACH\" attparam \";\" \"ENCODING\" \"=\" \"BASE64\"\
    \n                   \";\" \"VALUE\" \"=\" \"BINARY\" \":\" binary\n     attparam\
    \   = *(\n                ; the following is optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" fmttypeparam) /\n    \
    \            ; the following is optional,\n                ; and MAY occur more\
    \ than once\n                (\";\" xparam)\n                )\n   Example: The\
    \ following are examples of this property:\n     ATTACH:CID:jsmith.part3.960817T083000.xyzMail@host1.com\n\
    \     ATTACH;FMTTYPE=application/postscript:ftp://xyzCorp.com/pub/\n      reports/r-960812.ps\n"
- title: 4.8.1.2 Categories
  contents:
  - "4.8.1.2 Categories\n   Property Name: CATEGORIES\n   Purpose: This property defines\
    \ the categories for a calendar\n   component.\n   Value Type: TEXT\n   Property\
    \ Parameters: Non-standard and language property parameters\n   can be specified\
    \ on this property.\n   Conformance: The property can be specified within \"VEVENT\"\
    , \"VTODO\"\n   or \"VJOURNAL\" calendar components.\n   Description: This property\
    \ is used to specify categories or subtypes\n   of the calendar component. The\
    \ categories are useful in searching for\n   a calendar component of a particular\
    \ type and category. Within the\n   \"VEVENT\", \"VTODO\" or \"VJOURNAL\" calendar\
    \ components, more than one\n   category can be specified as a list of categories\
    \ separated by the\n   COMMA character (US-ASCII decimal 44).\n   Format Definition:\
    \ The property is defined by the following notation:\n     categories = \"CATEGORIES\"\
    \ catparam \":\" text *(\",\" text)\n                  CRLF\n     catparam   =\
    \ *(\n                ; the following is optional,\n                ; but MUST\
    \ NOT occur more than once\n                (\";\" languageparam ) /\n       \
    \         ; the following is optional,\n                ; and MAY occur more than\
    \ once\n                (\";\" xparam)\n                )\n   Example: The following\
    \ are examples of this property:\n     CATEGORIES:APPOINTMENT,EDUCATION\n    \
    \ CATEGORIES:MEETING\n"
- title: 4.8.1.3 Classification
  contents:
  - "4.8.1.3 Classification\n   Property Name: CLASS\n   Purpose: This property defines\
    \ the access classification for a\n   calendar component.\n   Value Type: TEXT\n\
    \   Property Parameters: Non-standard property parameters can be\n   specified\
    \ on this property.\n   Conformance: The property can be specified once in a \"\
    VEVENT\",\n   \"VTODO\" or \"VJOURNAL\" calendar components.\n   Description:\
    \ An access classification is only one component of the\n   general security system\
    \ within a calendar application. It provides a\n   method of capturing the scope\
    \ of the access the calendar owner\n   intends for information within an individual\
    \ calendar entry. The\n   access classification of an individual iCalendar component\
    \ is useful\n   when measured along with the other security components of a calendar\n\
    \   system (e.g., calendar user authentication, authorization, access\n   rights,\
    \ access role, etc.). Hence, the semantics of the individual\n   access classifications\
    \ cannot be completely defined by this memo\n   alone. Additionally, due to the\
    \ \"blind\" nature of most exchange\n   processes using this memo, these access\
    \ classifications cannot serve\n   as an enforcement statement for a system receiving\
    \ an iCalendar\n   object. Rather, they provide a method for capturing the intention\
    \ of\n   the calendar owner for the access to the calendar component.\n   Format\
    \ Definition: The property is defined by the following notation:\n     class \
    \     = \"CLASS\" classparam \":\" classvalue CRLF\n     classparam = *(\";\"\
    \ xparam)\n     classvalue = \"PUBLIC\" / \"PRIVATE\" / \"CONFIDENTIAL\" / iana-token\n\
    \                / x-name\n     ;Default is PUBLIC\n   Example: The following\
    \ is an example of this property:\n     CLASS:PUBLIC\n"
- title: 4.8.1.4 Comment
  contents:
  - "4.8.1.4 Comment\n   Property Name: COMMENT\n   Purpose: This property specifies\
    \ non-processing information intended\n   to provide a comment to the calendar\
    \ user.\n   Value Type: TEXT\n   Property Parameters: Non-standard, alternate\
    \ text representation and\n   language property parameters can be specified on\
    \ this property.\n   Conformance: This property can be specified in \"VEVENT\"\
    , \"VTODO\",\n   \"VJOURNAL\", \"VTIMEZONE\" or \"VFREEBUSY\" calendar components.\n\
    \   Description: The property can be specified multiple times.\n   Format Definition:\
    \ The property is defined by the following notation:\n     comment    = \"COMMENT\"\
    \ commparam \":\" text CRLF\n     commparam  = *(\n                ; the following\
    \ are optional,\n                ; but MUST NOT occur more than once\n       \
    \         (\";\" altrepparam) / (\";\" languageparam) /\n                ; the\
    \ following is optional,\n                ; and MAY occur more than once\n   \
    \             (\";\" xparam)\n                )\n   Example: The following is\
    \ an example of this property:\n     COMMENT:The meeting really needs to include\
    \ both ourselves\n       and the customer. We can't hold this  meeting without\
    \ them.\n       As a matter of fact\\, the venue for the meeting ought to be at\n\
    \       their site. - - John\n   The data type for this property is TEXT.\n"
- title: 4.8.1.5 Description
  contents:
  - "4.8.1.5 Description\n   Property Name: DESCRIPTION\n   Purpose: This property\
    \ provides a more complete description of the\n   calendar component, than that\
    \ provided by the \"SUMMARY\" property.\n   Value Type: TEXT\n   Property Parameters:\
    \ Non-standard, alternate text representation and\n   language property parameters\
    \ can be specified on this property.\n   Conformance: The property can be specified\
    \ in the \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VALARM\" calendar components.\
    \ The property can be\n   specified multiple times only within a \"VJOURNAL\"\
    \ calendar component.\n   Description: This property is used in the \"VEVENT\"\
    \ and \"VTODO\" to\n   capture lengthy textual decriptions associated with the\
    \ activity.\n   This property is used in the \"VJOURNAL\" calendar component to\
    \ capture\n   one more textual journal entries.\n   This property is used in the\
    \ \"VALARM\" calendar component to capture\n   the display text for a DISPLAY\
    \ category of alarm, to capture the body\n   text for an EMAIL category of alarm\
    \ and to capture the argument\n   string for a PROCEDURE category of alarm.\n\
    \   Format Definition: The property is defined by the following notation:\n  \
    \   description        = \"DESCRIPTION\" descparam \":\" text CRLF\n     descparam\
    \  = *(\n                ; the following are optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" altrepparam) / (\";\"\
    \ languageparam) /\n                ; the following is optional,\n           \
    \     ; and MAY occur more than once\n                (\";\" xparam)\n       \
    \         )\n   Example: The following is an example of the property with formatted\n\
    \   line breaks in the property value:\n     DESCRIPTION:Meeting to provide technical\
    \ review for \"Phoenix\"\n       design.\\n Happy Face Conference Room. Phoenix\
    \ design team\n       MUST attend this meeting.\\n RSVP to team leader.\n   The\
    \ following is an example of the property with folding of long\n   lines:\n  \
    \   DESCRIPTION:Last draft of the new novel is to be completed\n       for the\
    \ editor's proof today.\n"
- title: 4.8.1.6 Geographic Position
  contents:
  - "4.8.1.6 Geographic Position\n   Property Name: GEO\n   Purpose: This property\
    \ specifies information related to the global\n   position for the activity specified\
    \ by a calendar component.\n   Value Type: FLOAT. The value MUST be two SEMICOLON\
    \ separated FLOAT\n   values.\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified in  \"VEVENT\" or \"VTODO\"\n   calendar components.\n   Description:\
    \ The property value specifies latitude and longitude, in\n   that order (i.e.,\
    \ \"LAT LON\" ordering). The longitude represents the\n   location east or west\
    \ of the prime meridian as a positive or negative\n   real number, respectively.\
    \ The longitude and latitude values MAY be\n   specified up to six decimal places,\
    \ which will allow for accuracy to\n   within one meter of geographical position.\
    \ Receiving applications\n   MUST accept values of this precision and MAY truncate\
    \ values of\n   greater precision.\n   Values for latitude and longitude shall\
    \ be expressed as decimal\n   fractions of degrees. Whole degrees of latitude\
    \ shall be represented\n   by a two-digit decimal number ranging from 0 through\
    \ 90. Whole\n   degrees of longitude shall be represented by a decimal number\
    \ ranging\n   from 0 through 180. When a decimal fraction of a degree is specified,\n\
    \   it shall be separated from the whole number of degrees by a decimal\n   point.\n\
    \   Latitudes north of the equator shall be specified by a plus sign (+),\n  \
    \ or by the absence of a minus sign (-), preceding the digits\n   designating\
    \ degrees. Latitudes south of the Equator shall be\n   designated by a minus sign\
    \ (-) preceding the digits designating\n   degrees. A point on the Equator shall\
    \ be assigned to the Northern\n   Hemisphere.\n   Longitudes east of the prime\
    \ meridian shall be specified by a plus\n   sign (+), or by the absence of a minus\
    \ sign (-), preceding the digits\n   designating degrees. Longitudes west of the\
    \ meridian shall be\n   designated by minus sign (-) preceding the digits designating\n\
    \   degrees. A point on the prime meridian shall be assigned to the\n   Eastern\
    \ Hemisphere. A point on the 180th meridian shall be assigned\n   to the Western\
    \ Hemisphere. One exception to this last convention is\n   permitted. For the\
    \ special condition of describing a band of latitude\n   around the earth, the\
    \ East Bounding Coordinate data element shall be\n   assigned the value +180 (180)\
    \ degrees.\n   Any spatial address with a latitude of +90 (90) or -90 degrees\
    \ will\n   specify the position at the North or South Pole, respectively. The\n\
    \   component for longitude may have any legal value.\n   With the exception of\
    \ the special condition described above, this\n   form is specified in Department\
    \ of Commerce, 1986, Representation of\n   geographic point locations for information\
    \ interchange (Federal\n   Information Processing Standard 70-1):  Washington,\
    \  Department of\n   Commerce, National Institute of Standards and Technology.\n\
    \   The simple formula for converting degrees-minutes-seconds into\n   decimal\
    \ degrees is:\n     decimal = degrees + minutes/60 + seconds/3600.\n   Format\
    \ Definition: The property is defined by the following notation:\n     geo   \
    \     = \"GEO\" geoparam \":\" geovalue CRLF\n     geoparam   = *(\";\" xparam)\n\
    \     geovalue   = float \";\" float\n     ;Latitude and Longitude components\n\
    \   Example: The following is an example of this property:\n     GEO:37.386013;-122.082932\n"
- title: 4.8.1.7 Location
  contents:
  - "4.8.1.7 Location\n   Property Name: LOCATION\n   Purpose: The property defines\
    \ the intended venue for the activity\n   defined by a calendar component.\n \
    \  Value Type: TEXT\n   Property Parameters: Non-standard, alternate text representation\
    \ and\n   language property parameters can be specified on this property.\n  \
    \ Conformance: This property can be specified in \"VEVENT\" or \"VTODO\"\n   calendar\
    \ component.\n   Description: Specific venues such as conference or meeting rooms\
    \ may\n   be explicitly specified using this property. An alternate\n   representation\
    \ may be specified that is a URI that points to\n   directory information with\
    \ more structured specification of the\n   location. For example, the alternate\
    \ representation may specify\n   either an LDAP URI pointing to an LDAP server\
    \ entry or a CID URI\n   pointing to a MIME body part containing a vCard [RFC\
    \ 2426] for the\n   location.\n   Format Definition: The property is defined by\
    \ the following notation:\n     location   = \"LOCATION locparam \":\" text CRLF\n\
    \     locparam   = *(\n                ; the following are optional,\n       \
    \         ; but MUST NOT occur more than once\n                (\";\" altrepparam)\
    \ / (\";\" languageparam) /\n                ; the following is optional,\n  \
    \              ; and MAY occur more than once\n                (\";\" xparam)\n\
    \                )\n   Example: The following are some examples of this property:\n\
    \     LOCATION:Conference Room - F123, Bldg. 002\n     LOCATION;ALTREP=\"http://xyzcorp.com/conf-rooms/f123.vcf\"\
    :\n      Conference Room - F123, Bldg. 002\n"
- title: 4.8.1.8 Percent Complete
  contents:
  - "4.8.1.8 Percent Complete\n   Property Name: PERCENT-COMPLETE\n   Purpose: This\
    \ property is used by an assignee or delegatee of a to-do\n   to convey the percent\
    \ completion of a to-do to the Organizer.\n   Value Type: INTEGER\n   Property\
    \ Parameters: Non-standard property parameters can be\n   specified on this property.\n\
    \   Conformance: This property can be specified in a \"VTODO\" calendar\n   component.\n\
    \   Description: The property value is a positive integer between zero\n   and\
    \ one hundred. A value of \"0\" indicates the to-do has not yet been\n   started.\
    \ A value of \"100\" indicates that the to-do has been\n   completed. Integer\
    \ values in between indicate the percent partially\n   complete.\n   When a to-do\
    \ is assigned to multiple individuals, the property value\n   indicates the percent\
    \ complete for that portion of the to-do assigned\n   to the assignee or delegatee.\
    \ For example, if a to-do is assigned to\n   both individuals \"A\" and \"B\"\
    . A reply from \"A\" with a percent\n   complete of \"70\" indicates that \"A\"\
    \ has completed 70% of the to-do\n   assigned to them. A reply from \"B\" with\
    \ a percent complete of \"50\"\n   indicates \"B\" has completed 50% of the to-do\
    \ assigned to them.\n   Format Definition: The property is defined by the following\
    \ notation:\n     percent = \"PERCENT-COMPLETE\" pctparam \":\" integer CRLF\n\
    \     pctparam   = *(\";\" xparam)\n   Example: The following is an example of\
    \ this property to show 39%\n   completion:\n     PERCENT-COMPLETE:39\n"
- title: 4.8.1.9 Priority
  contents:
  - "4.8.1.9 Priority\n   Property Name: PRIORITY\n   Purpose: The property defines\
    \ the relative priority for a calendar\n   component.\n   Value Type: INTEGER\n\
    \   Property Parameters: Non-standard property parameters can be\n   specified\
    \ on this property.\n   Conformance: The property can be specified in a \"VEVENT\"\
    \ or \"VTODO\"\n   calendar component.\n   Description: The priority is specified\
    \ as an integer in the range\n   zero to nine. A value of zero (US-ASCII decimal\
    \ 48) specifies an\n   undefined priority. A value of one (US-ASCII decimal 49)\
    \ is the\n   highest priority. A value of two (US-ASCII decimal 50) is the second\n\
    \   highest priority. Subsequent numbers specify a decreasing ordinal\n   priority.\
    \ A value of nine (US-ASCII decimal 58) is the lowest\n   priority.\n   A CUA\
    \ with a three-level priority scheme of \"HIGH\", \"MEDIUM\" and\n   \"LOW\" is\
    \ mapped into this property such that a property value in the\n   range of one\
    \ (US-ASCII decimal 49) to four (US-ASCII decimal 52)\n   specifies \"HIGH\" priority.\
    \ A value of five (US-ASCII decimal 53) is\n   the normal or \"MEDIUM\" priority.\
    \ A value in the range of six (US-\n   ASCII decimal 54) to nine (US-ASCII decimal\
    \ 58) is \"LOW\" priority.\n   A CUA with a priority schema of \"A1\", \"A2\"\
    , \"A3\", \"B1\", \"B2\", ...,\n   \"C3\" is mapped into this property such that\
    \ a property value of one\n   (US-ASCII decimal 49) specifies \"A1\", a property\
    \ value of two (US-\n   ASCII decimal 50) specifies \"A2\", a property value of\
    \ three (US-ASCII\n   decimal 51) specifies \"A3\", and so forth up to a property\
    \ value of 9\n   (US-ASCII decimal 58) specifies \"C3\".\n   Other integer values\
    \ are reserved for future use.\n   Within a \"VEVENT\" calendar component, this\
    \ property specifies a\n   priority for the event. This property may be useful\
    \ when more than\n   one event is scheduled for a given time period.\n   Within\
    \ a \"VTODO\" calendar component, this property specified a\n   priority for the\
    \ to-do. This property is useful in prioritizing\n   multiple action items for\
    \ a given time period.\n   Format Definition: The property is specified by the\
    \ following\n   notation:\n     priority   = \"PRIORITY\" prioparam \":\" privalue\
    \ CRLF\n     ;Default is zero\n     prioparam  = *(\";\" xparam)\n     privalue\
    \   = integer       ;Must be in the range [0..9]\n        ; All other values are\
    \ reserved for future use\n   The following is an example of a property with the\
    \ highest priority:\n     PRIORITY:1\n   The following is an example of a property\
    \ with a next highest\n   priority:\n     PRIORITY:2\n   Example: The following\
    \ is an example of a property with no priority.\n   This is equivalent to not\
    \ specifying the \"PRIORITY\" property:\n     PRIORITY:0\n"
- title: 4.8.1.10 Resources
  contents:
  - "4.8.1.10 Resources\n   Property Name: RESOURCES\n   Purpose: This property defines\
    \ the equipment or resources anticipated\n   for an activity specified by a calendar\
    \ entity..\n   Value Type: TEXT\n   Property Parameters: Non-standard, alternate\
    \ text representation and\n   language property parameters can be specified on\
    \ this property.\n   Conformance: This property can be specified in \"VEVENT\"\
    \ or \"VTODO\"\n   calendar component.\n   Description: The property value is\
    \ an arbitrary text. More than one\n   resource can be specified as a list of\
    \ resources separated by the\n   COMMA character (US-ASCII decimal 44).\n   Format\
    \ Definition: The property is defined by the following notation:\n     resources\
    \  = \"RESOURCES\" resrcparam \":\" text *(\",\" text) CRLF\n     resrcparam =\
    \ *(\n                ; the following are optional,\n                ; but MUST\
    \ NOT occur more than once\n                (\";\" altrepparam) / (\";\" languageparam)\
    \ /\n                ; the following is optional,\n                ; and MAY occur\
    \ more than once\n                (\";\" xparam)\n                )\n   Example:\
    \ The following is an example of this property:\n     RESOURCES:EASEL,PROJECTOR,VCR\n\
    \     RESOURCES;LANGUAGE=fr:1 raton-laveur\n"
- title: 4.8.1.11 Status
  contents:
  - "4.8.1.11 Status\n   Property Name: STATUS\n   Purpose: This property defines\
    \ the overall status or confirmation for\n   the calendar component.\n   Value\
    \ Type: TEXT\n   Property Parameters: Non-standard property parameters can be\n\
    \   specified on this property.\n   Conformance: This property can be specified\
    \ in \"VEVENT\", \"VTODO\" or\n   \"VJOURNAL\" calendar components.\n   Description:\
    \ In a group scheduled calendar component, the property is\n   used by the \"\
    Organizer\" to provide a confirmation of the event to the\n   \"Attendees\". For\
    \ example in a \"VEVENT\" calendar component, the\n   \"Organizer\" can indicate\
    \ that a meeting is tentative, confirmed or\n   cancelled. In a \"VTODO\" calendar\
    \ component, the \"Organizer\" can\n   indicate that an action item needs action,\
    \ is completed, is in\n   process or being worked on, or has been cancelled. In\
    \ a \"VJOURNAL\"\n   calendar component, the \"Organizer\" can indicate that a\
    \ journal entry\n   is draft, final or has been cancelled or removed.\n   Format\
    \ Definition: The property is defined by the following notation:\n     status\
    \     = \"STATUS\" statparam] \":\" statvalue CRLF\n     statparam  = *(\";\"\
    \ xparam)\n     statvalue  = \"TENTATIVE\"           ;Indicates event is\n   \
    \                                     ;tentative.\n                / \"CONFIRMED\"\
    \           ;Indicates event is\n                                        ;definite.\n\
    \                / \"CANCELLED\"           ;Indicates event was\n            \
    \                            ;cancelled.\n        ;Status values for a \"VEVENT\"\
    \n     statvalue  =/ \"NEEDS-ACTION\"       ;Indicates to-do needs action.\n \
    \               / \"COMPLETED\"           ;Indicates to-do completed.\n      \
    \          / \"IN-PROCESS\"          ;Indicates to-do in process of\n        \
    \        / \"CANCELLED\"           ;Indicates to-do was cancelled.\n        ;Status\
    \ values for \"VTODO\".\n     statvalue  =/ \"DRAFT\"              ;Indicates\
    \ journal is draft.\n                / \"FINAL\"               ;Indicates journal\
    \ is final.\n                / \"CANCELLED\"           ;Indicates journal is removed.\n\
    \        ;Status values for \"VJOURNAL\".\n   Example: The following is an example\
    \ of this property for a \"VEVENT\"\n   calendar component:\n     STATUS:TENTATIVE\n\
    \   The following is an example of this property for a \"VTODO\" calendar\n  \
    \ component:\n     STATUS:NEEDS-ACTION\n   The following is an example of this\
    \ property for a \"VJOURNAL\"\n   calendar component:\n     STATUS:DRAFT\n"
- title: 4.8.1.12 Summary
  contents:
  - "4.8.1.12 Summary\n   Property Name: SUMMARY\n   Purpose: This property defines\
    \ a short summary or subject for the\n   calendar component.\n   Value Type: TEXT\n\
    \   Property Parameters: Non-standard, alternate text representation and\n   language\
    \ property parameters can be specified on this property.\n   Conformance: The\
    \ property can be specified in \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VALARM\"\
    \ calendar components.\n   Description: This property is used in the \"VEVENT\"\
    , \"VTODO\" and\n   \"VJOURNAL\" calendar components to capture a short, one line\
    \ summary\n   about the activity or journal entry.\n   This property is used in\
    \ the \"VALARM\" calendar component to capture\n   the subject of an EMAIL category\
    \ of alarm.\n   Format Definition: The property is defined by the following notation:\n\
    \     summary    = \"SUMMARY\" summparam \":\" text CRLF\n     summparam  = *(\n\
    \                ; the following are optional,\n                ; but MUST NOT\
    \ occur more than once\n                (\";\" altrepparam) / (\";\" languageparam)\
    \ /\n                ; the following is optional,\n                ; and MAY occur\
    \ more than once\n                (\";\" xparam)\n                )\n   Example:\
    \ The following is an example of this property:\n     SUMMARY:Department Party\n"
- title: 4.8.2 Date and Time Component Properties
  contents:
  - "4.8.2 Date and Time Component Properties\n   The following properties specify\
    \ date and time related information in\n   calendar components.\n"
- title: 4.8.2.1 Date/Time Completed
  contents:
  - "4.8.2.1 Date/Time Completed\n   Property Name: COMPLETED\n   Purpose: This property\
    \ defines the date and time that a to-do was\n   actually completed.\n   Value\
    \ Type: DATE-TIME\n   Property Parameters: Non-standard property parameters can\
    \ be\n   specified on this property.\n   Conformance: The property can be specified\
    \ in a \"VTODO\" calendar\n   component.\n   Description: The date and time MUST\
    \ be in a UTC format.\n   Format Definition: The property is defined by the following\
    \ notation:\n     completed  = \"COMPLETED\" compparam \":\" date-time CRLF\n\
    \     compparam  = *(\";\" xparam)\n   Example: The following is an example of\
    \ this property:\n     COMPLETED:19960401T235959Z\n"
- title: 4.8.2.2 Date/Time End
  contents:
  - "4.8.2.2 Date/Time End\n   Property Name: DTEND\n   Purpose: This property specifies\
    \ the date and time that a calendar\n   component ends.\n   Value Type: The default\
    \ value type is DATE-TIME. The value type can\n   be set to a DATE value type.\n\
    \   Property Parameters: Non-standard, value data type, time zone\n   identifier\
    \ property parameters can be specified on this property.\n   Conformance: This\
    \ property can be specified in \"VEVENT\" or\n   \"VFREEBUSY\" calendar components.\n\
    \   Description: Within the \"VEVENT\" calendar component, this property\n   defines\
    \ the date and time by which the event ends. The value MUST be\n   later in time\
    \ than the value of the \"DTSTART\" property.\n   Within the \"VFREEBUSY\" calendar\
    \ component, this property defines the\n   end date and time for the free or busy\
    \ time information. The time\n   MUST be specified in the UTC time format. The\
    \ value MUST be later in\n   time than the value of the \"DTSTART\" property.\n\
    \   Format Definition: The property is defined by the following notation:\n  \
    \   dtend      = \"DTEND\" dtendparam\":\" dtendval CRLF\n     dtendparam = *(\n\
    \                ; the following are optional,\n                ; but MUST NOT\
    \ occur more than once\n                (\";\" \"VALUE\" \"=\" (\"DATE-TIME\"\
    \ / \"DATE\")) /\n                (\";\" tzidparam) /\n                ; the following\
    \ is optional,\n                ; and MAY occur more than once\n             \
    \   (\";\" xparam)\n                )\n     dtendval   = date-time / date\n  \
    \   ;Value MUST match value type\n   Example: The following is an example of this\
    \ property:\n     DTEND:19960401T235959Z\n     DTEND;VALUE=DATE:19980704\n"
- title: 4.8.2.3 Date/Time Due
  contents:
  - "4.8.2.3 Date/Time Due\n   Property Name: DUE\n   Purpose: This property defines\
    \ the date and time that a to-do is\n   expected to be completed.\n   Value Type:\
    \ The default value type is DATE-TIME. The value type can\n   be set to a DATE\
    \ value type.\n   Property Parameters: Non-standard, value data type, time zone\n\
    \   identifier property parameters can be specified on this property.\n   Conformance:\
    \ The property can be specified once in a \"VTODO\" calendar\n   component.\n\
    \   Description: The value MUST be a date/time equal to or after the\n   DTSTART\
    \ value, if specified.\n   Format Definition: The property is defined by the following\
    \ notation:\n     due        = \"DUE\" dueparam\":\" dueval CRLF\n     dueparam\
    \   = *(\n                ; the following are optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" \"VALUE\" \"=\" (\"DATE-TIME\"\
    \ / \"DATE\")) /\n                (\";\" tzidparam) /\n                ; the following\
    \ is optional,\n                ; and MAY occur more than once\n             \
    \     *(\";\" xparam)\n                )\n     dueval     = date-time / date\n\
    \     ;Value MUST match value type\n   Example: The following is an example of\
    \ this property:\n     DUE:19980430T235959Z\n"
- title: 4.8.2.4 Date/Time Start
  contents:
  - "4.8.2.4 Date/Time Start\n   Property Name: DTSTART\n   Purpose: This property\
    \ specifies when the calendar component begins.\n   Value Type: The default value\
    \ type is DATE-TIME. The time value MUST\n   be one of the forms defined for the\
    \ DATE-TIME value type. The value\n   type can be set to a DATE value type.\n\
    \   Property Parameters: Non-standard, value data type, time zone\n   identifier\
    \ property parameters can be specified on this property.\n   Conformance: This\
    \ property can be specified in the \"VEVENT\", \"VTODO\",\n   \"VFREEBUSY\", or\
    \ \"VTIMEZONE\" calendar components.\n   Description: Within the \"VEVENT\" calendar\
    \ component, this property\n   defines the start date and time for the event.\
    \ The property is\n   REQUIRED in \"VEVENT\" calendar components. Events can have\
    \ a start\n   date/time but no end date/time. In that case, the event does not\
    \ take\n   up any time.\n   Within the \"VFREEBUSY\" calendar component, this\
    \ property defines the\n   start date and time for the free or busy time information.\
    \ The time\n   MUST be specified in UTC time.\n   Within the \"VTIMEZONE\" calendar\
    \ component, this property defines the\n   effective start date and time for a\
    \ time zone specification. This\n   property is REQUIRED within each STANDARD\
    \ and DAYLIGHT part included\n   in \"VTIMEZONE\" calendar components and MUST\
    \ be specified as a local\n   DATE-TIME without the \"TZID\" property parameter.\n\
    \   Format Definition: The property is defined by the following notation:\n  \
    \   dtstart    = \"DTSTART\" dtstparam \":\" dtstval CRLF\n     dtstparam  = *(\n\
    \                ; the following are optional,\n                ; but MUST NOT\
    \ occur more than once\n                (\";\" \"VALUE\" \"=\" (\"DATE-TIME\"\
    \ / \"DATE\")) /\n                (\";\" tzidparam) /\n                ; the following\
    \ is optional,\n                ; and MAY occur more than once\n             \
    \     *(\";\" xparam)\n                )\n     dtstval    = date-time / date\n\
    \     ;Value MUST match value type\n   Example: The following is an example of\
    \ this property:\n     DTSTART:19980118T073000Z\n"
- title: 4.8.2.5 Duration
  contents:
  - "4.8.2.5 Duration\n   Property Name: DURATION\n   Purpose: The property specifies\
    \ a positive duration of time.\n   Value Type: DURATION\n   Property Parameters:\
    \ Non-standard property parameters can be\n   specified on this property.\n  \
    \ Conformance: The property can be specified in \"VEVENT\", \"VTODO\",\n   \"\
    VFREEBUSY\" or \"VALARM\" calendar components.\n   Description: In a \"VEVENT\"\
    \ calendar component the property may be\n   used to specify a duration of the\
    \ event, instead of an explicit end\n   date/time. In a \"VTODO\" calendar component\
    \ the property may be used\n   to specify a duration for the to-do, instead of\
    \ an explicit due\n   date/time. In a \"VFREEBUSY\" calendar component the property\
    \ may be\n   used to specify the interval of free time being requested. In a\n\
    \   \"VALARM\" calendar component the property may be used to specify the\n  \
    \ delay period prior to repeating an alarm.\n   Format Definition: The property\
    \ is defined by the following notation:\n     duration   = \"DURATION\" durparam\
    \ \":\" dur-value CRLF\n                  ;consisting of a positive duration of\
    \ time.\n     durparam   = *(\";\" xparam)\n   Example: The following is an example\
    \ of this property that specifies\n   an interval of time of 1 hour and zero minutes\
    \ and zero seconds:\n     DURATION:PT1H0M0S\n   The following is an example of\
    \ this property that specifies an\n   interval of time of 15 minutes.\n     DURATION:PT15M\n"
- title: 4.8.2.6 Free/Busy Time
  contents:
  - "4.8.2.6 Free/Busy Time\n   Property Name: FREEBUSY\n   Purpose: The property\
    \ defines one or more free or busy time\n   intervals.\n   Value Type: PERIOD.\
    \ The date and time values MUST be in an UTC time\n   format.\n   Property Parameters:\
    \ Non-standard or free/busy time type property\n   parameters can be specified\
    \ on this property.\n   Conformance: The property can be specified in a \"VFREEBUSY\"\
    \ calendar\n   component.\n   Property Parameter: \"FBTYPE\" and non-standard\
    \ parameters can be\n   specified on this property.\n   Description: These time\
    \ periods can be specified as either a start\n   and end date-time or a start\
    \ date-time and duration. The date and\n   time MUST be a UTC time format.\n \
    \  \"FREEBUSY\" properties within the \"VFREEBUSY\" calendar component\n   SHOULD\
    \ be sorted in ascending order, based on start time and then end\n   time, with\
    \ the earliest periods first.\n   The \"FREEBUSY\" property can specify more than\
    \ one value, separated by\n   the COMMA character (US-ASCII decimal 44). In such\
    \ cases, the\n   \"FREEBUSY\" property values SHOULD all be of the same \"FBTYPE\"\
    \n   property parameter type (e.g., all values of a particular \"FBTYPE\"\n  \
    \ listed together in a single property).\n   Format Definition: The property is\
    \ defined by the following notation:\n     freebusy   = \"FREEBUSY\" fbparam \"\
    :\" fbvalue\n                  CRLF\n     fbparam    = *(\n                ; the\
    \ following is optional,\n                ; but MUST NOT occur more than once\n\
    \                (\";\" fbtypeparam) /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                (\";\" xparam)\n\
    \                )\n     fbvalue    = period *[\",\" period]\n     ;Time value\
    \ MUST be in the UTC time format.\n   Example: The following are some examples\
    \ of this property:\n     FREEBUSY;FBTYPE=BUSY-UNAVAILABLE:19970308T160000Z/PT8H30M\n\
    \     FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H\n     FREEBUSY;FBTYPE=FREE:19970308T160000Z/PT3H,19970308T200000Z/PT1H,\n\
    \      19970308T230000Z/19970309T000000Z\n"
- title: 4.8.2.7 Time Transparency
  contents:
  - "4.8.2.7 Time Transparency\n   Property Name: TRANSP\n   Purpose: This property\
    \ defines whether an event is transparent or not\n   to busy time searches.\n\
    \   Value Type: TEXT\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified once in a \"VEVENT\"\n   calendar component.\n   Description: Time\
    \ Transparency is the characteristic of an event that\n   determines whether it\
    \ appears to consume time on a calendar. Events\n   that consume actual time for\
    \ the individual or resource associated\n   with the calendar SHOULD be recorded\
    \ as OPAQUE, allowing them to be\n   detected by free-busy time searches. Other\
    \ events, which do not take\n   up the individual's (or resource's) time SHOULD\
    \ be recorded as\n   TRANSPARENT, making them invisible to free-busy time searches.\n\
    \   Format Definition: The property is specified by the following\n   notation:\n\
    \     transp     = \"TRANSP\" tranparam \":\" transvalue CRLF\n     tranparam\
    \  = *(\";\" xparam)\n     transvalue = \"OPAQUE\"      ;Blocks or opaque on busy\
    \ time searches.\n                / \"TRANSPARENT\" ;Transparent on busy time\
    \ searches.\n        ;Default value is OPAQUE\n   Example: The following is an\
    \ example of this property for an event\n   that is transparent or does not block\
    \ on free/busy time searches:\n     TRANSP:TRANSPARENT\n   The following is an\
    \ example of this property for an event that is\n   opaque or blocks on free/busy\
    \ time searches:\n     TRANSP:OPAQUE\n"
- title: 4.8.3 Time Zone Component Properties
  contents:
  - "4.8.3 Time Zone Component Properties\n   The following properties specify time\
    \ zone information in calendar\n   components.\n"
- title: 4.8.3.1 Time Zone Identifier
  contents:
  - "4.8.3.1 Time Zone Identifier\n   Property Name: TZID\n   Purpose: This property\
    \ specifies the text value that uniquely\n   identifies the \"VTIMEZONE\" calendar\
    \ component.\n   Value Type: TEXT\n   Property Parameters: Non-standard property\
    \ parameters can be\n   specified on this property.\n   Conformance: This property\
    \ MUST be specified in a \"VTIMEZONE\"\n   calendar component.\n   Description:\
    \ This is the label by which a time zone calendar\n   component is referenced\
    \ by any iCalendar properties whose data type\n   is either DATE-TIME or TIME\
    \ and not intended to specify a UTC or a\n   \"floating\" time. The presence of\
    \ the SOLIDUS character (US-ASCII\n   decimal 47) as a prefix, indicates that\
    \ this TZID represents an\n   unique ID in a globally defined time zone registry\
    \ (when such\n   registry is defined).\n        Note: This document does not define\
    \ a naming convention for time\n        zone identifiers. Implementers may want\
    \ to use the naming\n        conventions defined in existing time zone specifications\
    \ such as\n        the public-domain Olson database [TZ]. The specification of\n\
    \        globally unique time zone identifiers is not addressed by this\n    \
    \    document and is left for future study.\n   Format Definition: This property\
    \ is defined by the following\n   notation:\n     tzid       = \"TZID\" tzidpropparam\
    \ \":\" [tzidprefix] text CRLF\n     tzidpropparam      = *(\";\" xparam)\n  \
    \   ;tzidprefix        = \"/\"\n     ; Defined previously. Just listed here for\
    \ reader convenience.\n   Example: The following are examples of non-globally\
    \ unique time zone\n   identifiers:\n     TZID:US-Eastern\n     TZID:California-Los_Angeles\n\
    \   The following is an example of a fictitious globally unique time zone\n  \
    \ identifier:\n     TZID:/US-New_York-New_York\n"
- title: 4.8.3.2 Time Zone Name
  contents:
  - "4.8.3.2 Time Zone Name\n   Property Name: TZNAME\n   Purpose: This property specifies\
    \ the customary designation for a time\n   zone description.\n   Value Type: TEXT\n\
    \   Property Parameters: Non-standard and language property parameters\n   can\
    \ be specified on this property.\n   Conformance: This property can be specified\
    \ in a \"VTIMEZONE\" calendar\n   component.\n   Description: This property may\
    \ be specified in multiple languages; in\n   order to provide for different language\
    \ requirements.\n   Format Definition: This property is defined by the following\n\
    \   notation:\n     tzname     = \"TZNAME\" tznparam \":\" text CRLF\n     tznparam\
    \   = *(\n                ; the following is optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" languageparam) /\n   \
    \             ; the following is optional,\n                ; and MAY occur more\
    \ than once\n                (\";\" xparam)\n                )\n   Example: The\
    \ following are example of this property:\n     TZNAME:EST\n   The following is\
    \ an example of this property when two different\n   languages for the time zone\
    \ name are specified:\n     TZNAME;LANGUAGE=en:EST\n     TZNAME;LANGUAGE=fr-CA:HNE\n"
- title: 4.8.3.3 Time Zone Offset From
  contents:
  - "4.8.3.3 Time Zone Offset From\n   Property Name: TZOFFSETFROM\n   Purpose: This\
    \ property specifies the offset which is in use prior to\n   this time zone observance.\n\
    \   Value Type: UTC-OFFSET\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property MUST be\
    \ specified in a \"VTIMEZONE\"\n   calendar component.\n   Description: This property\
    \ specifies the offset which is in use prior\n   to this time observance. It is\
    \ used to calculate the absolute time at\n   which the transition to a given observance\
    \ takes place. This property\n   MUST only be specified in a \"VTIMEZONE\" calendar\
    \ component. A\n   \"VTIMEZONE\" calendar component MUST include this property.\
    \ The\n   property value is a signed numeric indicating the number of hours and\n\
    \   possibly minutes from UTC. Positive numbers represent time zones east\n  \
    \ of the prime meridian, or ahead of UTC. Negative numbers represent\n   time\
    \ zones west of the prime meridian, or behind UTC.\n   Format Definition: The\
    \ property is defined by the following notation:\n     tzoffsetfrom       = \"\
    TZOFFSETFROM\" frmparam \":\" utc-offset\n                          CRLF\n   \
    \  frmparam   = *(\";\" xparam)\n   Example: The following are examples of this\
    \ property:\n     TZOFFSETFROM:-0500\n     TZOFFSETFROM:+1345\n"
- title: 4.8.3.4 Time Zone Offset To
  contents:
  - "4.8.3.4 Time Zone Offset To\n   Property Name: TZOFFSETTO\n   Purpose: This property\
    \ specifies the offset which is in use in this\n   time zone observance.\n   Value\
    \ Type: UTC-OFFSET\n   Property Parameters: Non-standard property parameters can\
    \ be\n   specified on this property.\n   Conformance: This property MUST be specified\
    \ in a \"VTIMEZONE\"\n   calendar component.\n   Description: This property specifies\
    \ the offset which is in use in\n   this time zone observance. It is used to calculate\
    \ the absolute time\n   for the new observance. The property value is a signed\
    \ numeric\n   indicating the number of hours and possibly minutes from UTC.\n\
    \   Positive numbers represent time zones east of the prime meridian, or\n   ahead\
    \ of UTC. Negative numbers represent time zones west of the prime\n   meridian,\
    \ or behind UTC.\n   Format Definition: The property is defined by the following\
    \ notation:\n     tzoffsetto = \"TZOFFSETTO\" toparam \":\" utc-offset CRLF\n\
    \     toparam    = *(\";\" xparam)\n   Example: The following are examples of\
    \ this property:\n     TZOFFSETTO:-0400\n     TZOFFSETTO:+1245\n"
- title: 4.8.3.5 Time Zone URL
  contents:
  - "4.8.3.5 Time Zone URL\n   Property Name: TZURL\n   Purpose: The TZURL provides\
    \ a means for a VTIMEZONE component to\n   point to a network location that can\
    \ be used to retrieve an up-to-\n   date version of itself.\n   Value Type: URI\n\
    \   Property Parameters: Non-standard property parameters can be\n   specified\
    \ on this property.\n   Conformance: This property can be specified in a \"VTIMEZONE\"\
    \ calendar\n   component.\n   Description: The TZURL provides a means for a VTIMEZONE\
    \ component to\n   point to a network location that can be used to retrieve an\
    \ up-to-\n   date version of itself. This provides a hook to handle changes\n\
    \   government bodies impose upon time zone definitions. Retrieval of\n   this\
    \ resource results in an iCalendar object containing a single\n   VTIMEZONE component\
    \ and a METHOD property set to PUBLISH.\n   Format Definition: The property is\
    \ defined by the following notation:\n     tzurl      = \"TZURL\" tzurlparam \"\
    :\" uri CRLF\n     tzurlparam = *(\";\" xparam)\n   Example: The following is\
    \ an example of this property:\n     TZURL:http://timezones.r.us.net/tz/US-California-Los_Angeles\n"
- title: 4.8.4 Relationship Component Properties
  contents:
  - "4.8.4 Relationship Component Properties\n   The following properties specify\
    \ relationship information in calendar\n   components.\n"
- title: 4.8.4.1 Attendee
  contents:
  - "4.8.4.1 Attendee\n   Property Name: ATTENDEE\n   Purpose: The property defines\
    \ an \"Attendee\" within a calendar\n   component.\n   Value Type: CAL-ADDRESS\n\
    \   Property Parameters: Non-standard, language, calendar user type,\n   group\
    \ or list membership, participation role, participation status,\n   RSVP expectation,\
    \ delegatee, delegator, sent by, common name or\n   directory entry reference\
    \ property parameters can be specified on\n   this property.\n   Conformance:\
    \ This property MUST be specified in an iCalendar object\n   that specifies a\
    \ group scheduled calendar entity. This property MUST\n   NOT be specified in\
    \ an iCalendar object when publishing the calendar\n   information (e.g., NOT\
    \ in an iCalendar object that specifies the\n   publication of a calendar user's\
    \ busy time, event, to-do or journal).\n   This property is not specified in an\
    \ iCalendar object that specifies\n   only a time zone definition or that defines\
    \ calendar entities that\n   are not group scheduled entities, but are entities\
    \ only on a single\n   user's calendar.\n   Description: The property MUST only\
    \ be specified within calendar\n   components to specify participants, non-participants\
    \ and the chair of\n   a group scheduled calendar entity. The property is specified\
    \ within\n   an \"EMAIL\" category of the \"VALARM\" calendar component to specify\
    \ an\n   email address that is to receive the email type of iCalendar alarm.\n\
    \   The property parameter CN is for the common or displayable name\n   associated\
    \ with the calendar address; ROLE, for the intended role\n   that the attendee\
    \ will have in the calendar component; PARTSTAT, for\n   the status of the attendee's\
    \ participation; RSVP, for indicating\n   whether the favor of a reply is requested;\
    \ CUTYPE, to indicate the\n   type of calendar user; MEMBER, to indicate the groups\
    \ that the\n   attendee belongs to; DELEGATED-TO, to indicate the calendar users\n\
    \   that the original request was delegated to; and DELEGATED-FROM, to\n   indicate\
    \ whom the request was delegated from; SENT-BY, to indicate\n   whom is acting\
    \ on behalf of the ATTENDEE; and DIR, to indicate the\n   URI that points to the\
    \ directory information corresponding to the\n   attendee. These property parameters\
    \ can be specified on an \"ATTENDEE\"\n   property in either a \"VEVENT\", \"\
    VTODO\" or \"VJOURNAL\" calendar\n   component. They MUST not be specified in\
    \ an \"ATTENDEE\" property in a\n   \"VFREEBUSY\" or \"VALARM\" calendar component.\
    \ If the LANGUAGE property\n   parameter is specified, the identified language\
    \ applies to the CN\n   parameter.\n   A recipient delegated a request MUST inherit\
    \ the RSVP and ROLE values\n   from the attendee that delegated the request to\
    \ them.\n   Multiple attendees can be specified by including multiple \"ATTENDEE\"\
    \n   properties within the calendar component.\n   Format Definition: The property\
    \ is defined by the following notation:\n     attendee   = \"ATTENDEE\" attparam\
    \ \":\" cal-address CRLF\n     attparam   = *(\n                ; the following\
    \ are optional,\n                ; but MUST NOT occur more than once\n       \
    \         (\";\" cutypeparam) / (\";\"memberparam) /\n                (\";\" roleparam)\
    \ / (\";\" partstatparam) /\n                (\";\" rsvpparam) / (\";\" deltoparam)\
    \ /\n                (\";\" delfromparam) / (\";\" sentbyparam) /\n          \
    \      (\";\"cnparam) / (\";\" dirparam) /\n                (\";\" languageparam)\
    \ /\n                ; the following is optional,\n                ; and MAY occur\
    \ more than once\n                (\";\" xparam)\n                )\n   Example:\
    \ The following are examples of this property's use for a to-\n   do:\n     ORGANIZER:MAILTO:jsmith@host1.com\n\
    \     ATTENDEE;MEMBER=\"MAILTO:DEV-GROUP@host2.com\":\n      MAILTO:joecool@host2.com\n\
    \     ATTENDEE;DELEGATED-FROM=\"MAILTO:immud@host3.com\":\n      MAILTO:ildoit@host1.com\n\
    \   The following is an example of this property used for specifying\n   multiple\
    \ attendees to an event:\n     ORGANIZER:MAILTO:jsmith@host1.com\n     ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;CN=Henry\
    \ Cabot\n      :MAILTO:hcabot@host2.com\n     ATTENDEE;ROLE=REQ-PARTICIPANT;DELEGATED-FROM=\"\
    MAILTO:bob@host.com\"\n      ;PARTSTAT=ACCEPTED;CN=Jane Doe:MAILTO:jdoe@host1.com\n\
    \   The following is an example of this property with a URI to the\n   directory\
    \ information associated with the attendee:\n     ATTENDEE;CN=John Smith;DIR=\"\
    ldap://host.com:6666/o=eDABC%\n      20Industries,c=3DUS??(cn=3DBJim%20Dolittle)\"\
    :MAILTO:jimdo@\n      host1.com\n   The following is an example of this property\
    \ with \"delegatee\" and\n   \"delegator\" information for an event:\n     ORGANIZER;CN=John\
    \ Smith:MAILTO:jsmith@host.com\n     ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=TENTATIVE;DELEGATED-FROM=\n\
    \      \"MAILTO:iamboss@host2.com\";CN=Henry Cabot:MAILTO:hcabot@\n      host2.com\n\
    \     ATTENDEE;ROLE=NON-PARTICIPANT;PARTSTAT=DELEGATED;DELEGATED-TO=\n      \"\
    MAILTO:hcabot@host2.com\";CN=The Big Cheese:MAILTO:iamboss\n      @host2.com\n\
    \     ATTENDEE;ROLE=REQ-PARTICIPANT;PARTSTAT=ACCEPTED;CN=Jane Doe\n      :MAILTO:jdoe@host1.com\n\
    \   Example: The following is an example of this property's use when\n   another\
    \ calendar user is acting on behalf of the \"Attendee\":\n     ATTENDEE;SENT-BY=MAILTO:jan_doe@host1.com;CN=John\
    \ Smith:MAILTO:\n      jsmith@host1.com\n"
- title: 4.8.4.2 Contact
  contents:
  - "4.8.4.2 Contact\n   Property Name: CONTACT\n   Purpose: The property is used\
    \ to represent contact information or\n   alternately a reference to contact information\
    \ associated with the\n   calendar component.\n   Value Type: TEXT\n   Property\
    \ Parameters: Non-standard, alternate text representation and\n   language property\
    \ parameters can be specified on this property.\n   Conformance: The property\
    \ can be specified in a \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VFREEBUSY\"\
    \ calendar component.\n   Description: The property value consists of textual\
    \ contact\n   information. An alternative representation for the property value\
    \ can\n   also be specified that refers to a URI pointing to an alternate form,\n\
    \   such as a vCard [RFC 2426], for the contact information.\n   Format Definition:\
    \ The property is defined by the following notation:\n     contact    = \"CONTACT\"\
    \ contparam \":\" text CRLF\n     contparam  = *(\n                ; the following\
    \ are optional,\n                ; but MUST NOT occur more than once\n       \
    \         (\";\" altrepparam) / (\";\" languageparam) /\n                ; the\
    \ following is optional,\n                ; and MAY occur more than once\n   \
    \             (\";\" xparam)\n                )\n   Example: The following is\
    \ an example of this property referencing\n   textual contact information:\n \
    \    CONTACT:Jim Dolittle\\, ABC Industries\\, +1-919-555-1234\n   The following\
    \ is an example of this property with an alternate\n   representation of a LDAP\
    \ URI to a directory entry containing the\n   contact information:\n     CONTACT;ALTREP=\"\
    ldap://host.com:6666/o=3DABC%20Industries\\,\n      c=3DUS??(cn=3DBJim%20Dolittle)\"\
    :Jim Dolittle\\, ABC Industries\\,\n      +1-919-555-1234\n   The following is\
    \ an example of this property with an alternate\n   representation of a MIME body\
    \ part containing the contact\n   information, such as a vCard [RFC 2426] embedded\
    \ in a [MIME-DIR]\n   content-type:\n     CONTACT;ALTREP=\"CID=<part3.msg970930T083000SILVER@host.com>\"\
    :Jim\n       Dolittle\\, ABC Industries\\, +1-919-555-1234\n   The following is\
    \ an example of this property referencing a network\n   resource, such as a vCard\
    \ [RFC 2426] object containing the contact\n   information:\n     CONTACT;ALTREP=\"\
    http://host.com/pdi/jdoe.vcf\":Jim\n       Dolittle\\, ABC Industries\\, +1-919-555-1234\n"
- title: 4.8.4.3 Organizer
  contents:
  - "4.8.4.3 Organizer\n   Property Name: ORGANIZER\n   Purpose: The property defines\
    \ the organizer for a calendar component.\n   Value Type: CAL-ADDRESS\n   Property\
    \ Parameters: Non-standard, language, common name, directory\n   entry reference,\
    \ sent by property parameters can be specified on this\n   property.\n   Conformance:\
    \ This property MUST be specified in an iCalendar object\n   that specifies a\
    \ group scheduled calendar entity. This property MUST\n   be specified in an iCalendar\
    \ object that specifies the publication of\n   a calendar user's busy time. This\
    \ property MUST NOT be specified in\n   an iCalendar object that specifies only\
    \ a time zone definition or\n   that defines calendar entities that are not group\
    \ scheduled entities,\n   but are entities only on a single user's calendar.\n\
    \   Description: The property is specified within the \"VEVENT\", \"VTODO\",\n\
    \   \"VJOURNAL calendar components to specify the organizer of a group\n   scheduled\
    \ calendar entity. The property is specified within the\n   \"VFREEBUSY\" calendar\
    \ component to specify the calendar user\n   requesting the free or busy time.\
    \ When publishing a \"VFREEBUSY\"\n   calendar component, the property is used\
    \ to specify the calendar that\n   the published busy time came from.\n   The\
    \ property has the property parameters CN, for specifying the\n   common or display\
    \ name associated with the \"Organizer\", DIR, for\n   specifying a pointer to\
    \ the directory information associated with the\n   \"Organizer\", SENT-BY, for\
    \ specifying another calendar user that is\n   acting on behalf of the \"Organizer\"\
    . The non-standard parameters may\n   also be specified on this property. If the\
    \ LANGUAGE property\n   parameter is specified, the identified language applies\
    \ to the CN\n   parameter value.\n   Format Definition: The property is defined\
    \ by the following notation:\n     organizer  = \"ORGANIZER\" orgparam \":\"\n\
    \                  cal-address CRLF\n     orgparam   = *(\n                ; the\
    \ following are optional,\n                ; but MUST NOT occur more than once\n\
    \                (\";\" cnparam) / (\";\" dirparam) / (\";\" sentbyparam) /\n\
    \                (\";\" languageparam) /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                (\";\" xparam)\n\
    \                )\n   Example: The following is an example of this property:\n\
    \     ORGANIZER;CN=John Smith:MAILTO:jsmith@host1.com\n   The following is an\
    \ example of this property with a pointer to the\n   directory information associated\
    \ with the organizer:\n     ORGANIZER;CN=JohnSmith;DIR=\"ldap://host.com:6666/o=3DDC%20Associ\n\
    \      ates,c=3DUS??(cn=3DJohn%20Smith)\":MAILTO:jsmith@host1.com\n   The following\
    \ is an example of this property used by another calendar\n   user who is acting\
    \ on behalf of the organizer, with responses\n   intended to be sent back to the\
    \ organizer, not the other calendar\n   user:\n     ORGANIZER;SENT-BY=\"MAILTO:jane_doe@host.com\"\
    :\n      MAILTO:jsmith@host1.com\n"
- title: 4.8.4.4 Recurrence ID
  contents:
  - "4.8.4.4 Recurrence ID\n   Property Name: RECURRENCE-ID\n   Purpose: This property\
    \ is used in conjunction with the \"UID\" and\n   \"SEQUENCE\" property to identify\
    \ a specific instance of a recurring\n   \"VEVENT\", \"VTODO\" or \"VJOURNAL\"\
    \ calendar component. The property\n   value is the effective value of the \"\
    DTSTART\" property of the\n   recurrence instance.\n   Value Type: The default\
    \ value type for this property is DATE-TIME.\n   The time format can be any of\
    \ the valid forms defined for a DATE-TIME\n   value type. See DATE-TIME value\
    \ type definition for specific\n   interpretations of the various forms. The value\
    \ type can be set to\n   DATE.\n   Property Parameters: Non-standard property,\
    \ value data type, time\n   zone identifier and recurrence identifier range parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified in an iCalendar object\n   containing a recurring calendar component.\n\
    \   Description: The full range of calendar components specified by a\n   recurrence\
    \ set is referenced by referring to just the \"UID\" property\n   value corresponding\
    \ to the calendar component. The \"RECURRENCE-ID\"\n   property allows the reference\
    \ to an individual instance within the\n   recurrence set.\n   If the value of\
    \ the \"DTSTART\" property is a DATE type value, then the\n   value MUST be the\
    \ calendar date for the recurrence instance.\n   The date/time value is set to\
    \ the time when the original recurrence\n   instance would occur; meaning that\
    \ if the intent is to change a\n   Friday meeting to Thursday, the date/time is\
    \ still set to the\n   original Friday meeting.\n   The \"RECURRENCE-ID\" property\
    \ is used in conjunction with the \"UID\"\n   and \"SEQUENCE\" property to identify\
    \ a particular instance of a\n   recurring event, to-do or journal. For a given\
    \ pair of \"UID\" and\n   \"SEQUENCE\" property values, the \"RECURRENCE-ID\"\
    \ value for a\n   recurrence instance is fixed. When the definition of the recurrence\n\
    \   set for a calendar component changes, and hence the \"SEQUENCE\"\n   property\
    \ value changes, the \"RECURRENCE-ID\" for a given recurrence\n   instance might\
    \ also change.The \"RANGE\" parameter is used to specify\n   the effective range\
    \ of recurrence instances from the instance\n   specified by the \"RECURRENCE-ID\"\
    \ property value. The default value\n   for the range parameter is the single\
    \ recurrence instance only. The\n   value can also be \"THISANDPRIOR\" to indicate\
    \ a range defined by the\n   given recurrence instance and all prior instances\
    \ or the value can be\n   \"THISANDFUTURE\" to indicate a range defined by the\
    \ given recurrence\n   instance and all subsequent instances.\n   Format Definition:\
    \ The property is defined by the following notation:\n     recurid    = \"RECURRENCE-ID\"\
    \ ridparam \":\" ridval CRLF\n     ridparam   = *(\n                ; the following\
    \ are optional,\n                ; but MUST NOT occur more than once\n       \
    \         (\";\" \"VALUE\" \"=\" (\"DATE-TIME\" / \"DATE)) /\n               \
    \ (\";\" tzidparam) / (\";\" rangeparam) /\n                ; the following is\
    \ optional,\n                ; and MAY occur more than once\n                (\"\
    ;\" xparam)\n                )\n     ridval     = date-time / date\n     ;Value\
    \ MUST match value type\n   Example: The following are examples of this property:\n\
    \     RECURRENCE-ID;VALUE=DATE:19960401\n     RECURRENCE-ID;RANGE=THISANDFUTURE:19960120T120000Z\n"
- title: 4.8.4.5 Related To
  contents:
  - "4.8.4.5 Related To\n   Property Name: RELATED-TO\n   Purpose: The property is\
    \ used to represent a relationship or\n   reference between one calendar component\
    \ and another.\n   Value Type: TEXT\n   Property Parameters: Non-standard and\
    \ relationship type property\n   parameters can be specified on this property.\n\
    \   Conformance: The property can be specified one or more times in the\n   \"\
    VEVENT\", \"VTODO\" or \"VJOURNAL\" calendar components.\n   Description: The\
    \ property value consists of the persistent, globally\n   unique identifier of\
    \ another calendar component. This value would be\n   represented in a calendar\
    \ component by the \"UID\" property.\n   By default, the property value points\
    \ to another calendar component\n   that has a PARENT relationship to the referencing\
    \ object. The\n   \"RELTYPE\" property parameter is used to either explicitly\
    \ state the\n   default PARENT relationship type to the referenced calendar component\n\
    \   or to override the default PARENT relationship type and specify\n   either\
    \ a CHILD or SIBLING relationship. The PARENT relationship\n   indicates that\
    \ the calendar component is a subordinate of the\n   referenced calendar component.\
    \ The CHILD relationship indicates that\n   the calendar component is a superior\
    \ of the referenced calendar\n   component. The SIBLING relationship indicates\
    \ that the calendar\n   component is a peer of the referenced calendar component.\n\
    \   Changes to a calendar component referenced by this property can have\n   an\
    \ implicit impact on the related calendar component. For example, if\n   a group\
    \ event changes its start or end date or time, then the\n   related, dependent\
    \ events will need to have their start and end dates\n   changed in a corresponding\
    \ way. Similarly, if a PARENT calendar\n   component is canceled or deleted, then\
    \ there is an implied impact to\n   the related CHILD calendar components. This\
    \ property is intended only\n   to provide information on the relationship of\
    \ calendar components. It\n   is up to the target calendar system to maintain\
    \ any property\n   implications of this relationship.\n   Format Definition: The\
    \ property is defined by the following notation:\n     related    = \"RELATED-TO\"\
    \ [relparam] \":\" text CRLF\n     relparam   = *(\n                ; the following\
    \ is optional,\n                ; but MUST NOT occur more than once\n        \
    \        (\";\" reltypeparam) /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                (\";\" xparm)\n\
    \                )\n   The following is an example of this property:\n     RELATED-TO:<jsmith.part7.19960817T083000.xyzMail@host3.com>\n\
    \     RELATED-TO:<19960401-080045-4000F192713-0052@host1.com>\n"
- title: 4.8.4.6 Uniform Resource Locator
  contents:
  - "4.8.4.6 Uniform Resource Locator\n   Property Name: URL\n   Purpose: This property\
    \ defines a Uniform Resource Locator (URL)\n   associated with the iCalendar object.\n\
    \   Value Type: URI\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified once in the \"VEVENT\",\n   \"VTODO\", \"VJOURNAL\" or \"VFREEBUSY\"\
    \ calendar components.\n   Description: This property may be used in a calendar\
    \ component to\n   convey a location where a more dynamic rendition of the calendar\n\
    \   information associated with the calendar component can be found. This\n  \
    \ memo does not attempt to standardize the form of the URI, nor the\n   format\
    \ of the resource pointed to by the property value. If the URL\n   property and\
    \ Content-Location MIME header are both specified, they\n   MUST point to the\
    \ same resource.\n   Format Definition: The property is defined by the following\
    \ notation:\n     url        = \"URL\" urlparam \":\" uri CRLF\n     urlparam\
    \   = *(\";\" xparam)\n   Example: The following is an example of this property:\n\
    \     URL:http://abc.com/pub/calendars/jsmith/mytime.ics\n"
- title: 4.8.4.7 Unique Identifier
  contents:
  - "4.8.4.7 Unique Identifier\n   Property Name: UID\n   Purpose: This property defines\
    \ the persistent, globally unique\n   identifier for the calendar component.\n\
    \   Value Type: TEXT\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: The property MUST be\
    \ specified in the \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VFREEBUSY\" calendar\
    \ components.\n   Description: The UID itself MUST be a globally unique identifier.\
    \ The\n   generator of the identifier MUST guarantee that the identifier is\n\
    \   unique. There are several algorithms that can be used to accomplish\n   this.\
    \ The identifier is RECOMMENDED to be the identical syntax to the\n   [RFC 822]\
    \ addr-spec. A good method to assure uniqueness is to put the\n   domain name\
    \ or a domain literal IP address of the host on which the\n   identifier was created\
    \ on the right hand side of the \"@\", and on the\n   left hand side, put a combination\
    \ of the current calendar date and\n   time of day (i.e., formatted in as a DATE-TIME\
    \ value) along with some\n   other currently unique (perhaps sequential) identifier\
    \ available on\n   the system (for example, a process id number). Using a date/time\n\
    \   value on the left hand side and a domain name or domain literal on\n   the\
    \ right hand side makes it possible to guarantee uniqueness since\n   no two hosts\
    \ should be using the same domain name or IP address at\n   the same time. Though\
    \ other algorithms will work, it is RECOMMENDED\n   that the right hand side contain\
    \ some domain identifier (either of\n   the host itself or otherwise) such that\
    \ the generator of the message\n   identifier can guarantee the uniqueness of\
    \ the left hand side within\n   the scope of that domain.\n   This is the method\
    \ for correlating scheduling messages with the\n   referenced \"VEVENT\", \"VTODO\"\
    , or \"VJOURNAL\" calendar component.\n   The full range of calendar components\
    \ specified by a recurrence set\n   is referenced by referring to just the \"\
    UID\" property value\n   corresponding to the calendar component. The \"RECURRENCE-ID\"\
    \ property\n   allows the reference to an individual instance within the recurrence\n\
    \   set.\n   This property is an important method for group scheduling\n   applications\
    \ to match requests with later replies, modifications or\n   deletion requests.\
    \ Calendaring and scheduling applications MUST\n   generate this property in \"\
    VEVENT\", \"VTODO\" and \"VJOURNAL\" calendar\n   components to assure interoperability\
    \ with other group scheduling\n   applications. This identifier is created by\
    \ the calendar system that\n   generates an iCalendar object.\n   Implementations\
    \ MUST be able to receive and persist values of at\n   least 255 characters for\
    \ this property.\n   Format Definition: The property is defined by the following\
    \ notation:\n     uid        = \"UID\" uidparam \":\" text CRLF\n     uidparam\
    \   = *(\";\" xparam)\n   Example: The following is an example of this property:\n\
    \     UID:19960401T080045Z-4000F192713-0052@host1.com\n"
- title: 4.8.5 Recurrence Component Properties
  contents:
  - "4.8.5 Recurrence Component Properties\n   The following properties specify recurrence\
    \ information in calendar\n   components.\n"
- title: 4.8.5.1 Exception Date/Times
  contents:
  - "4.8.5.1 Exception Date/Times\n   Property Name: EXDATE\n   Purpose: This property\
    \ defines the list of date/time exceptions for a\n   recurring calendar component.\n\
    \   Value Type: The default value type for this property is DATE-TIME.\n   The\
    \ value type can be set to DATE.\n   Property Parameters: Non-standard, value\
    \ data type and time zone\n   identifier property parameters can be specified\
    \ on this property.\n   Conformance: This property can be specified in an iCalendar\
    \ object\n   that includes a recurring calendar component.\n   Description: The\
    \ exception dates, if specified, are used in computing\n   the recurrence set.\
    \ The recurrence set is the complete set of\n   recurrence instances for a calendar\
    \ component. The recurrence set is\n   generated by considering the initial \"\
    DTSTART\" property along with\n   the \"RRULE\", \"RDATE\", \"EXDATE\" and \"\
    EXRULE\" properties contained\n   within the iCalendar object. The \"DTSTART\"\
    \ property defines the first\n   instance in the recurrence set. Multiple instances\
    \ of the \"RRULE\" and\n   \"EXRULE\" properties can also be specified to define\
    \ more\n   sophisticated recurrence sets. The final recurrence set is generated\n\
    \   by gathering all of the start date-times generated by any of the\n   specified\
    \ \"RRULE\" and \"RDATE\" properties, and then excluding any\n   start date and\
    \ times which fall within the union of start date and\n   times generated by any\
    \ specified \"EXRULE\" and \"EXDATE\" properties.\n   This implies that start\
    \ date and times within exclusion related\n   properties (i.e., \"EXDATE\" and\
    \ \"EXRULE\") take precedence over those\n   specified by inclusion properties\
    \ (i.e., \"RDATE\" and \"RRULE\"). Where\n   duplicate instances are generated\
    \ by the \"RRULE\" and \"RDATE\"\n   properties, only one recurrence is considered.\
    \ Duplicate instances\n   are ignored.\n   The \"EXDATE\" property can be used\
    \ to exclude the value specified in\n   \"DTSTART\". However, in such cases the\
    \ original \"DTSTART\" date MUST\n   still be maintained by the calendaring and\
    \ scheduling system because\n   the original \"DTSTART\" value has inherent usage\
    \ dependencies by other\n   properties such as the \"RECURRENCE-ID\".\n   Format\
    \ Definition: The property is defined by the following notation:\n     exdate\
    \     = \"EXDATE\" exdtparam \":\" exdtval *(\",\" exdtval) CRLF\n     exdtparam\
    \  = *(\n                ; the following are optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" \"VALUE\" \"=\" (\"DATE-TIME\"\
    \ / \"DATE\")) /\n                (\";\" tzidparam) /\n                ; the following\
    \ is optional,\n                ; and MAY occur more than once\n             \
    \   (\";\" xparam)\n                )\n     exdtval    = date-time / date\n  \
    \   ;Value MUST match value type\n   Example: The following is an example of this\
    \ property:\n     EXDATE:19960402T010000Z,19960403T010000Z,19960404T010000Z\n"
- title: 4.8.5.2 Exception Rule
  contents:
  - "4.8.5.2 Exception Rule\n   Property Name: EXRULE\n   Purpose: This property defines\
    \ a rule or repeating pattern for an\n   exception to a recurrence set.\n   Value\
    \ Type: RECUR\n   Property Parameters: Non-standard property parameters can be\n\
    \   specified on this property.\n   Conformance: This property can be specified\
    \ in \"VEVENT\", \"VTODO\" or\n   \"VJOURNAL\" calendar components.\n   Description:\
    \ The exception rule, if specified, is used in computing\n   the recurrence set.\
    \ The recurrence set is the complete set of\n   recurrence instances for a calendar\
    \ component. The recurrence set is\n   generated by considering the initial \"\
    DTSTART\" property along with\n   the \"RRULE\", \"RDATE\", \"EXDATE\" and \"\
    EXRULE\" properties contained\n   within the iCalendar object. The \"DTSTART\"\
    \ defines the first instance\n   in the recurrence set. Multiple instances of\
    \ the \"RRULE\" and \"EXRULE\"\n   properties can also be specified to define\
    \ more sophisticated\n   recurrence sets. The final recurrence set is generated\
    \ by gathering\n   all of the start date-times generated by any of the specified\
    \ \"RRULE\"\n   and \"RDATE\" properties, and excluding any start date and times\
    \ which\n   fall within the union of start date and times generated by any\n \
    \  specified \"EXRULE\" and \"EXDATE\" properties. This implies that start\n \
    \  date and times within exclusion related properties (i.e., \"EXDATE\"\n   and\
    \ \"EXRULE\") take precedence over those specified by inclusion\n   properties\
    \ (i.e., \"RDATE\" and \"RRULE\"). Where duplicate instances are\n   generated\
    \ by the \"RRULE\" and \"RDATE\" properties, only one recurrence\n   is considered.\
    \ Duplicate instances are ignored.\n   The \"EXRULE\" property can be used to\
    \ exclude the value specified in\n   \"DTSTART\". However, in such cases the original\
    \ \"DTSTART\" date MUST\n   still be maintained by the calendaring and scheduling\
    \ system because\n   the original \"DTSTART\" value has inherent usage dependencies\
    \ by other\n   properties such as the \"RECURRENCE-ID\".\n   Format Definition:\
    \ The property is defined by the following notation:\n     exrule     = \"EXRULE\"\
    \ exrparam \":\" recur CRLF\n     exrparam   = *(\";\" xparam)\n   Example: The\
    \ following are examples of this property. Except every\n   other week, on Tuesday\
    \ and Thursday for 4 occurrences:\n     EXRULE:FREQ=WEEKLY;COUNT=4;INTERVAL=2;BYDAY=TU,TH\n\
    \   Except daily for 10 occurrences:\n     EXRULE:FREQ=DAILY;COUNT=10\n   Except\
    \ yearly in June and July for 8 occurrences:\n     EXRULE:FREQ=YEARLY;COUNT=8;BYMONTH=6,7\n"
- title: 4.8.5.3 Recurrence Date/Times
  contents:
  - "4.8.5.3 Recurrence Date/Times\n   Property Name: RDATE\n   Purpose: This property\
    \ defines the list of date/times for a\n   recurrence set.\n   Value Type: The\
    \ default value type for this property is DATE-TIME.\n   The value type can be\
    \ set to DATE or PERIOD.\n   Property Parameters: Non-standard, value data type\
    \ and time zone\n   identifier property parameters can be specified on this property.\n\
    \   Conformance: The property can be specified in \"VEVENT\", \"VTODO\",\n   \"\
    VJOURNAL\" or \"VTIMEZONE\" calendar components.\n   Description: This property\
    \ can appear along with the \"RRULE\" property\n   to define an aggregate set\
    \ of repeating occurrences. When they both\n   appear in an iCalendar object,\
    \ the recurring events are defined by\n   the union of occurrences defined by\
    \ both the \"RDATE\" and \"RRULE\".\n   The recurrence dates, if specified, are\
    \ used in computing the\n   recurrence set. The recurrence set is the complete\
    \ set of recurrence\n   instances for a calendar component. The recurrence set\
    \ is generated\n   by considering the initial \"DTSTART\" property along with\
    \ the \"RRULE\",\n   \"RDATE\", \"EXDATE\" and \"EXRULE\" properties contained\
    \ within the\n   iCalendar object. The \"DTSTART\" property defines the first\
    \ instance\n   in the recurrence set. Multiple instances of the \"RRULE\" and\
    \ \"EXRULE\"\n   properties can also be specified to define more sophisticated\n\
    \   recurrence sets. The final recurrence set is generated by gathering\n   all\
    \ of the start date/times generated by any of the specified \"RRULE\"\n   and\
    \ \"RDATE\" properties, and excluding any start date/times which fall\n   within\
    \ the union of start date/times generated by any specified\n   \"EXRULE\" and\
    \ \"EXDATE\" properties. This implies that start date/times\n   within exclusion\
    \ related properties (i.e., \"EXDATE\" and \"EXRULE\")\n   take precedence over\
    \ those specified by inclusion properties (i.e.,\n   \"RDATE\" and \"RRULE\").\
    \ Where duplicate instances are generated by the\n   \"RRULE\" and \"RDATE\" properties,\
    \ only one recurrence is considered.\n   Duplicate instances are ignored.\n  \
    \ Format Definition: The property is defined by the following notation:\n    \
    \ rdate      = \"RDATE\" rdtparam \":\" rdtval *(\",\" rdtval) CRLF\n     rdtparam\
    \   = *(\n                ; the following are optional,\n                ; but\
    \ MUST NOT occur more than once\n                (\";\" \"VALUE\" \"=\" (\"DATE-TIME\"\
    \ / \"DATE\" / \"PERIOD\")) /\n                (\";\" tzidparam) /\n         \
    \       ; the following is optional,\n                ; and MAY occur more than\
    \ once\n                (\";\" xparam)\n                )\n     rdtval     = date-time\
    \ / date / period\n     ;Value MUST match value type\n   Example: The following\
    \ are examples of this property:\n     RDATE:19970714T123000Z\n     RDATE;TZID=US-EASTERN:19970714T083000\n\
    \     RDATE;VALUE=PERIOD:19960403T020000Z/19960403T040000Z,\n      19960404T010000Z/PT3H\n\
    \     RDATE;VALUE=DATE:19970101,19970120,19970217,19970421\n      19970526,19970704,19970901,19971014,19971128,19971129,19971225\n"
- title: 4.8.5.4 Recurrence Rule
  contents:
  - "4.8.5.4 Recurrence Rule\n   Property Name: RRULE\n   Purpose: This property defines\
    \ a rule or repeating pattern for\n   recurring events, to-dos, or time zone definitions.\n\
    \   Value Type: RECUR\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified one or more times in\n   recurring \"VEVENT\", \"VTODO\" and \"VJOURNAL\"\
    \ calendar components. It\n   can also be specified once in each STANDARD or DAYLIGHT\
    \ sub-component\n   of the \"VTIMEZONE\" calendar component.\n   Description:\
    \ The recurrence rule, if specified, is used in computing\n   the recurrence set.\
    \ The recurrence set is the complete set of\n   recurrence instances for a calendar\
    \ component. The recurrence set is\n   generated by considering the initial \"\
    DTSTART\" property along with\n   the \"RRULE\", \"RDATE\", \"EXDATE\" and \"\
    EXRULE\" properties contained\n   within the iCalendar object. The \"DTSTART\"\
    \ property defines the first\n   instance in the recurrence set. Multiple instances\
    \ of the \"RRULE\" and\n   \"EXRULE\" properties can also be specified to define\
    \ more\n   sophisticated recurrence sets. The final recurrence set is generated\n\
    \   by gathering all of the start date/times generated by any of the\n   specified\
    \ \"RRULE\" and \"RDATE\" properties, and excluding any start\n   date/times which\
    \ fall within the union of start date/times generated\n   by any specified \"\
    EXRULE\" and \"EXDATE\" properties. This implies that\n   start date/times within\
    \ exclusion related properties (i.e., \"EXDATE\"\n   and \"EXRULE\") take precedence\
    \ over those specified by inclusion\n   properties (i.e., \"RDATE\" and \"RRULE\"\
    ). Where duplicate instances are\n   generated by the \"RRULE\" and \"RDATE\"\
    \ properties, only one recurrence\n   is considered. Duplicate instances are ignored.\n\
    \   The \"DTSTART\" and \"DTEND\" property pair or \"DTSTART\" and \"DURATION\"\
    \n   property pair, specified within the iCalendar object defines the\n   first\
    \ instance of the recurrence. When used with a recurrence rule,\n   the \"DTSTART\"\
    \ and \"DTEND\" properties MUST be specified in local time\n   and the appropriate\
    \ set of \"VTIMEZONE\" calendar components MUST be\n   included. For detail on\
    \ the usage of the \"VTIMEZONE\" calendar\n   component, see the \"VTIMEZONE\"\
    \ calendar component definition.\n   Any duration associated with the iCalendar\
    \ object applies to all\n   members of the generated recurrence set. Any modified\
    \ duration for\n   specific recurrences MUST be explicitly specified using the\
    \ \"RDATE\"\n   property.\n   Format Definition: This property is defined by the\
    \ following\n   notation:\n     rrule      = \"RRULE\" rrulparam \":\" recur CRLF\n\
    \     rrulparam  = *(\";\" xparam)\n   Example: All examples assume the Eastern\
    \ United States time zone.\n   Daily for 10 occurrences:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=DAILY;COUNT=10\n     ==> (1997 9:00 AM EDT)September 2-11\n \
    \  Daily until December 24, 1997:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=DAILY;UNTIL=19971224T000000Z\n     ==> (1997 9:00 AM EDT)September\
    \ 2-30;October 1-25\n         (1997 9:00 AM EST)October 26-31;November 1-30;December\
    \ 1-23\n   Every other day - forever:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=DAILY;INTERVAL=2\n     ==> (1997 9:00 AM EDT)September2,4,6,8...24,26,28,30;\n\
    \          October 2,4,6...20,22,24\n         (1997 9:00 AM EST)October 26,28,30;November\
    \ 1,3,5,7...25,27,29;\n          Dec 1,3,...\n   Every 10 days, 5 occurrences:\n\
    \     DTSTART;TZID=US-Eastern:19970902T090000\n     RRULE:FREQ=DAILY;INTERVAL=10;COUNT=5\n\
    \     ==> (1997 9:00 AM EDT)September 2,12,22;October 2,12\n   Everyday in January,\
    \ for 3 years:\n     DTSTART;TZID=US-Eastern:19980101T090000\n     RRULE:FREQ=YEARLY;UNTIL=20000131T090000Z;\n\
    \      BYMONTH=1;BYDAY=SU,MO,TU,WE,TH,FR,SA\n     or\n     RRULE:FREQ=DAILY;UNTIL=20000131T090000Z;BYMONTH=1\n\
    \     ==> (1998 9:00 AM EDT)January 1-31\n         (1999 9:00 AM EDT)January 1-31\n\
    \         (2000 9:00 AM EDT)January 1-31\n   Weekly for 10 occurrences\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=WEEKLY;COUNT=10\n     ==> (1997 9:00 AM EDT)September 2,9,16,23,30;October\
    \ 7,14,21\n         (1997 9:00 AM EST)October 28;November 4\n   Weekly until December\
    \ 24, 1997\n     DTSTART;TZID=US-Eastern:19970902T090000\n     RRULE:FREQ=WEEKLY;UNTIL=19971224T000000Z\n\
    \     ==> (1997 9:00 AM EDT)September 2,9,16,23,30;October 7,14,21\n         (1997\
    \ 9:00 AM EST)October 28;November 4,11,18,25;\n                           December\
    \ 2,9,16,23\n   Every other week - forever:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=WEEKLY;INTERVAL=2;WKST=SU\n     ==> (1997 9:00 AM EDT)September\
    \ 2,16,30;October 14\n         (1997 9:00 AM EST)October 28;November 11,25;December\
    \ 9,23\n         (1998 9:00 AM EST)January 6,20;February\n     ...\n   Weekly\
    \ on Tuesday and Thursday for 5 weeks:\n    DTSTART;TZID=US-Eastern:19970902T090000\n\
    \    RRULE:FREQ=WEEKLY;UNTIL=19971007T000000Z;WKST=SU;BYDAY=TU,TH\n    or\n  \
    \  RRULE:FREQ=WEEKLY;COUNT=10;WKST=SU;BYDAY=TU,TH\n    ==> (1997 9:00 AM EDT)September\
    \ 2,4,9,11,16,18,23,25,30;October 2\n   Every other week on Monday, Wednesday\
    \ and Friday until December 24,\n   1997, but starting on Tuesday, September 2,\
    \ 1997:\n     DTSTART;TZID=US-Eastern:19970902T090000\n     RRULE:FREQ=WEEKLY;INTERVAL=2;UNTIL=19971224T000000Z;WKST=SU;\n\
    \      BYDAY=MO,WE,FR\n     ==> (1997 9:00 AM EDT)September 2,3,5,15,17,19,29;October\n\
    \     1,3,13,15,17\n         (1997 9:00 AM EST)October 27,29,31;November 10,12,14,24,26,28;\n\
    \                           December 8,10,12,22\n   Every other week on Tuesday\
    \ and Thursday, for 8 occurrences:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=8;WKST=SU;BYDAY=TU,TH\n     ==> (1997\
    \ 9:00 AM EDT)September 2,4,16,18,30;October 2,14,16\n   Monthly on the 1st Friday\
    \ for ten occurrences:\n     DTSTART;TZID=US-Eastern:19970905T090000\n     RRULE:FREQ=MONTHLY;COUNT=10;BYDAY=1FR\n\
    \     ==> (1997 9:00 AM EDT)September 5;October 3\n         (1997 9:00 AM EST)November\
    \ 7;Dec 5\n         (1998 9:00 AM EST)January 2;February 6;March 6;April 3\n \
    \        (1998 9:00 AM EDT)May 1;June 5\n   Monthly on the 1st Friday until December\
    \ 24, 1997:\n     DTSTART;TZID=US-Eastern:19970905T090000\n     RRULE:FREQ=MONTHLY;UNTIL=19971224T000000Z;BYDAY=1FR\n\
    \     ==> (1997 9:00 AM EDT)September 5;October 3\n         (1997 9:00 AM EST)November\
    \ 7;December 5\n   Every other month on the 1st and last Sunday of the month for\
    \ 10\n   occurrences:\n     DTSTART;TZID=US-Eastern:19970907T090000\n     RRULE:FREQ=MONTHLY;INTERVAL=2;COUNT=10;BYDAY=1SU,-1SU\n\
    \     ==> (1997 9:00 AM EDT)September 7,28\n         (1997 9:00 AM EST)November\
    \ 2,30\n         (1998 9:00 AM EST)January 4,25;March 1,29\n         (1998 9:00\
    \ AM EDT)May 3,31\n   Monthly on the second to last Monday of the month for 6\
    \ months:\n     DTSTART;TZID=US-Eastern:19970922T090000\n     RRULE:FREQ=MONTHLY;COUNT=6;BYDAY=-2MO\n\
    \     ==> (1997 9:00 AM EDT)September 22;October 20\n         (1997 9:00 AM EST)November\
    \ 17;December 22\n         (1998 9:00 AM EST)January 19;February 16\n   Monthly\
    \ on the third to the last day of the month, forever:\n     DTSTART;TZID=US-Eastern:19970928T090000\n\
    \     RRULE:FREQ=MONTHLY;BYMONTHDAY=-3\n     ==> (1997 9:00 AM EDT)September 28\n\
    \         (1997 9:00 AM EST)October 29;November 28;December 29\n         (1998\
    \ 9:00 AM EST)January 29;February 26\n     ...\n   Monthly on the 2nd and 15th\
    \ of the month for 10 occurrences:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=MONTHLY;COUNT=10;BYMONTHDAY=2,15\n     ==> (1997 9:00 AM EDT)September\
    \ 2,15;October 2,15\n         (1997 9:00 AM EST)November 2,15;December 2,15\n\
    \         (1998 9:00 AM EST)January 2,15\n   Monthly on the first and last day\
    \ of the month for 10 occurrences:\n     DTSTART;TZID=US-Eastern:19970930T090000\n\
    \     RRULE:FREQ=MONTHLY;COUNT=10;BYMONTHDAY=1,-1\n     ==> (1997 9:00 AM EDT)September\
    \ 30;October 1\n         (1997 9:00 AM EST)October 31;November 1,30;December 1,31\n\
    \         (1998 9:00 AM EST)January 1,31;February 1\n   Every 18 months on the\
    \ 10th thru 15th of the month for 10\n   occurrences:\n     DTSTART;TZID=US-Eastern:19970910T090000\n\
    \     RRULE:FREQ=MONTHLY;INTERVAL=18;COUNT=10;BYMONTHDAY=10,11,12,13,14,\n   \
    \   15\n     ==> (1997 9:00 AM EDT)September 10,11,12,13,14,15\n         (1999\
    \ 9:00 AM EST)March 10,11,12,13\n   Every Tuesday, every other month:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=MONTHLY;INTERVAL=2;BYDAY=TU\n     ==> (1997 9:00 AM EDT)September\
    \ 2,9,16,23,30\n         (1997 9:00 AM EST)November 4,11,18,25\n         (1998\
    \ 9:00 AM EST)January 6,13,20,27;March 3,10,17,24,31\n     ...\n   Yearly in June\
    \ and July for 10 occurrences:\n     DTSTART;TZID=US-Eastern:19970610T090000\n\
    \     RRULE:FREQ=YEARLY;COUNT=10;BYMONTH=6,7\n     ==> (1997 9:00 AM EDT)June\
    \ 10;July 10\n         (1998 9:00 AM EDT)June 10;July 10\n         (1999 9:00\
    \ AM EDT)June 10;July 10\n         (2000 9:00 AM EDT)June 10;July 10\n       \
    \  (2001 9:00 AM EDT)June 10;July 10\n     Note: Since none of the BYDAY, BYMONTHDAY\
    \ or BYYEARDAY components\n     are specified, the day is gotten from DTSTART\n\
    \   Every other year on January, February, and March for 10 occurrences:\n   \
    \  DTSTART;TZID=US-Eastern:19970310T090000\n     RRULE:FREQ=YEARLY;INTERVAL=2;COUNT=10;BYMONTH=1,2,3\n\
    \     ==> (1997 9:00 AM EST)March 10\n         (1999 9:00 AM EST)January 10;February\
    \ 10;March 10\n         (2001 9:00 AM EST)January 10;February 10;March 10\n  \
    \       (2003 9:00 AM EST)January 10;February 10;March 10\n   Every 3rd year on\
    \ the 1st, 100th and 200th day for 10 occurrences:\n     DTSTART;TZID=US-Eastern:19970101T090000\n\
    \     RRULE:FREQ=YEARLY;INTERVAL=3;COUNT=10;BYYEARDAY=1,100,200\n     ==> (1997\
    \ 9:00 AM EST)January 1\n         (1997 9:00 AM EDT)April 10;July 19\n       \
    \  (2000 9:00 AM EST)January 1\n         (2000 9:00 AM EDT)April 9;July 18\n \
    \        (2003 9:00 AM EST)January 1\n         (2003 9:00 AM EDT)April 10;July\
    \ 19\n         (2006 9:00 AM EST)January 1\n   Every 20th Monday of the year,\
    \ forever:\n     DTSTART;TZID=US-Eastern:19970519T090000\n     RRULE:FREQ=YEARLY;BYDAY=20MO\n\
    \     ==> (1997 9:00 AM EDT)May 19\n         (1998 9:00 AM EDT)May 18\n      \
    \   (1999 9:00 AM EDT)May 17\n     ...\n   Monday of week number 20 (where the\
    \ default start of the week is\n   Monday), forever:\n     DTSTART;TZID=US-Eastern:19970512T090000\n\
    \     RRULE:FREQ=YEARLY;BYWEEKNO=20;BYDAY=MO\n     ==> (1997 9:00 AM EDT)May 12\n\
    \         (1998 9:00 AM EDT)May 11\n         (1999 9:00 AM EDT)May 17\n     ...\n\
    \   Every Thursday in March, forever:\n     DTSTART;TZID=US-Eastern:19970313T090000\n\
    \     RRULE:FREQ=YEARLY;BYMONTH=3;BYDAY=TH\n     ==> (1997 9:00 AM EST)March 13,20,27\n\
    \         (1998 9:00 AM EST)March 5,12,19,26\n         (1999 9:00 AM EST)March\
    \ 4,11,18,25\n     ...\n   Every Thursday, but only during June, July, and August,\
    \ forever:\n     DTSTART;TZID=US-Eastern:19970605T090000\n     RRULE:FREQ=YEARLY;BYDAY=TH;BYMONTH=6,7,8\n\
    \     ==> (1997 9:00 AM EDT)June 5,12,19,26;July 3,10,17,24,31;\n            \
    \           August 7,14,21,28\n         (1998 9:00 AM EDT)June 4,11,18,25;July\
    \ 2,9,16,23,30;\n                       August 6,13,20,27\n         (1999 9:00\
    \ AM EDT)June 3,10,17,24;July 1,8,15,22,29;\n                       August 5,12,19,26\n\
    \     ...\n   Every Friday the 13th, forever:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     EXDATE;TZID=US-Eastern:19970902T090000\n     RRULE:FREQ=MONTHLY;BYDAY=FR;BYMONTHDAY=13\n\
    \     ==> (1998 9:00 AM EST)February 13;March 13;November 13\n         (1999 9:00\
    \ AM EDT)August 13\n         (2000 9:00 AM EDT)October 13\n     ...\n   The first\
    \ Saturday that follows the first Sunday of the month,\n    forever:\n     DTSTART;TZID=US-Eastern:19970913T090000\n\
    \     RRULE:FREQ=MONTHLY;BYDAY=SA;BYMONTHDAY=7,8,9,10,11,12,13\n     ==> (1997\
    \ 9:00 AM EDT)September 13;October 11\n         (1997 9:00 AM EST)November 8;December\
    \ 13\n         (1998 9:00 AM EST)January 10;February 7;March 7\n         (1998\
    \ 9:00 AM EDT)April 11;May 9;June 13...\n     ...\n   Every four years, the first\
    \ Tuesday after a Monday in November,\n   forever (U.S. Presidential Election\
    \ day):\n     DTSTART;TZID=US-Eastern:19961105T090000\n     RRULE:FREQ=YEARLY;INTERVAL=4;BYMONTH=11;BYDAY=TU;BYMONTHDAY=2,3,4,\n\
    \      5,6,7,8\n     ==> (1996 9:00 AM EST)November 5\n         (2000 9:00 AM\
    \ EST)November 7\n         (2004 9:00 AM EST)November 2\n     ...\n   The 3rd\
    \ instance into the month of one of Tuesday, Wednesday or\n   Thursday, for the\
    \ next 3 months:\n     DTSTART;TZID=US-Eastern:19970904T090000\n     RRULE:FREQ=MONTHLY;COUNT=3;BYDAY=TU,WE,TH;BYSETPOS=3\n\
    \     ==> (1997 9:00 AM EDT)September 4;October 7\n         (1997 9:00 AM EST)November\
    \ 6\n   The 2nd to last weekday of the month:\n     DTSTART;TZID=US-Eastern:19970929T090000\n\
    \     RRULE:FREQ=MONTHLY;BYDAY=MO,TU,WE,TH,FR;BYSETPOS=-2\n     ==> (1997 9:00\
    \ AM EDT)September 29\n         (1997 9:00 AM EST)October 30;November 27;December\
    \ 30\n         (1998 9:00 AM EST)January 29;February 26;March 30\n     ...\n \
    \  Every 3 hours from 9:00 AM to 5:00 PM on a specific day:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=19970902T170000Z\n     ==> (September\
    \ 2, 1997 EDT)09:00,12:00,15:00\n   Every 15 minutes for 6 occurrences:\n    \
    \ DTSTART;TZID=US-Eastern:19970902T090000\n     RRULE:FREQ=MINUTELY;INTERVAL=15;COUNT=6\n\
    \     ==> (September 2, 1997 EDT)09:00,09:15,09:30,09:45,10:00,10:15\n   Every\
    \ hour and a half for 4 occurrences:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=MINUTELY;INTERVAL=90;COUNT=4\n     ==> (September 2, 1997 EDT)09:00,10:30;12:00;13:30\n\
    \   Every 20 minutes from 9:00 AM to 4:40 PM every day:\n     DTSTART;TZID=US-Eastern:19970902T090000\n\
    \     RRULE:FREQ=DAILY;BYHOUR=9,10,11,12,13,14,15,16;BYMINUTE=0,20,40\n     or\n\
    \     RRULE:FREQ=MINUTELY;INTERVAL=20;BYHOUR=9,10,11,12,13,14,15,16\n     ==>\
    \ (September 2, 1997 EDT)9:00,9:20,9:40,10:00,10:20,\n                       \
    \         ... 16:00,16:20,16:40\n         (September 3, 1997 EDT)9:00,9:20,9:40,10:00,10:20,\n\
    \                               ...16:00,16:20,16:40\n     ...\n   An example\
    \ where the days generated makes a difference because of\n   WKST:\n     DTSTART;TZID=US-Eastern:19970805T090000\n\
    \     RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=MO\n     ==> (1997\
    \ EDT)Aug 5,10,19,24\n     changing only WKST from MO to SU, yields different\
    \ results...\n     DTSTART;TZID=US-Eastern:19970805T090000\n     RRULE:FREQ=WEEKLY;INTERVAL=2;COUNT=4;BYDAY=TU,SU;WKST=SU\n\
    \     ==> (1997 EDT)August 5,17,19,31\n"
- title: 4.8.6 Alarm Component Properties
  contents:
  - "4.8.6 Alarm Component Properties\n   The following properties specify alarm information\
    \ in calendar\n   components.\n"
- title: 4.8.6.1 Action
  contents:
  - "4.8.6.1 Action\n   Property Name: ACTION\n   Purpose: This property defines the\
    \ action to be invoked when an alarm\n   is triggered.\n   Value Type: TEXT\n\
    \   Property Parameters: Non-standard property parameters can be\n   specified\
    \ on this property.\n   Conformance: This property MUST be specified once in a\
    \ \"VALARM\"\n   calendar component.\n   Description: Each \"VALARM\" calendar\
    \ component has a particular type\n   of action associated with it. This property\
    \ specifies the type of\n   action\n   Format Definition: The property is defined\
    \ by the following notation:\n     action     = \"ACTION\" actionparam \":\" actionvalue\
    \ CRLF\n     actionparam        = *(\";\" xparam)\n     actionvalue        = \"\
    AUDIO\" / \"DISPLAY\" / \"EMAIL\" / \"PROCEDURE\"\n                        / iana-token\
    \ / x-name\n   Example: The following are examples of this property in a \"VALARM\"\
    \n   calendar component:\n     ACTION:AUDIO\n     ACTION:DISPLAY\n     ACTION:PROCEDURE\n"
- title: 4.8.6.2 Repeat Count
  contents:
  - "4.8.6.2 Repeat Count\n   Property Name: REPEAT\n   Purpose: This property defines\
    \ the number of time the alarm should be\n   repeated, after the initial trigger.\n\
    \   Value Type: INTEGER\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property can be\
    \ specified in a \"VALARM\" calendar\n   component.\n   Description: If the alarm\
    \ triggers more than once, then this property\n   MUST be specified along with\
    \ the \"DURATION\" property.\n   Format Definition: The property is defined by\
    \ the following notation:\n     repeatcnt  = \"REPEAT\" repparam \":\" integer\
    \ CRLF\n     ;Default is \"0\", zero.\n     repparam   = *(\";\" xparam)\n   Example:\
    \ The following is an example of this property for an alarm\n   that repeats 4\
    \ additional times with a 5 minute delay after the\n   initial triggering of the\
    \ alarm:\n     REPEAT:4\n     DURATION:PT5M\n"
- title: 4.8.6.3 Trigger
  contents:
  - "4.8.6.3 Trigger\n   Property Name: TRIGGER\n   Purpose: This property specifies\
    \ when an alarm will trigger.\n   Value Type: The default value type is DURATION.\
    \ The value type can be\n   set to a DATE-TIME value type, in which case the value\
    \ MUST specify a\n   UTC formatted DATE-TIME value.\n   Property Parameters: Non-standard,\
    \ value data type, time zone\n   identifier or trigger relationship property parameters\
    \ can be\n   specified on this property. The trigger relationship property\n \
    \  parameter MUST only be specified when the value type is DURATION.\n   Conformance:\
    \ This property MUST be specified in the \"VALARM\" calendar\n   component.\n\
    \   Description: Within the \"VALARM\" calendar component, this property\n   defines\
    \ when the alarm will trigger. The default value type is\n   DURATION, specifying\
    \ a relative time for the trigger of the alarm.\n   The default duration is relative\
    \ to the start of an event or to-do\n   that the alarm is associated with. The\
    \ duration can be explicitly set\n   to trigger from either the end or the start\
    \ of the associated event\n   or to-do with the \"RELATED\" parameter. A value\
    \ of START will set the\n   alarm to trigger off the start of the associated event\
    \ or to-do. A\n   value of END will set the alarm to trigger off the end of the\n\
    \   associated event or to-do.\n   Either a positive or negative duration may\
    \ be specified for the\n   \"TRIGGER\" property. An alarm with a positive duration\
    \ is triggered\n   after the associated start or end of the event or to-do. An\
    \ alarm\n   with a negative duration is triggered before the associated start\
    \ or\n   end of the event or to-do.\n   The \"RELATED\" property parameter is\
    \ not valid if the value type of\n   the property is set to DATE-TIME (i.e., for\
    \ an absolute date and time\n   alarm trigger). If a value type of DATE-TIME is\
    \ specified, then the\n   property value MUST be specified in the UTC time format.\
    \ If an\n   absolute trigger is specified on an alarm for a recurring event or\n\
    \   to-do, then the alarm will only trigger for the specified absolute\n   date/time,\
    \ along with any specified repeating instances.\n   If the trigger is set relative\
    \ to START, then the \"DTSTART\" property\n   MUST be present in the associated\
    \ \"VEVENT\" or \"VTODO\" calendar\n   component. If an alarm is specified for\
    \ an event with the trigger set\n   relative to the END, then the \"DTEND\" property\
    \ or the \"DSTART\" and\n   \"DURATION' properties MUST be present in the associated\
    \ \"VEVENT\"\n   calendar component. If the alarm is specified for a to-do with\
    \ a\n   trigger set relative to the END, then either the \"DUE\" property or\n\
    \   the \"DSTART\" and \"DURATION' properties MUST be present in the\n   associated\
    \ \"VTODO\" calendar component.\n   Alarms specified in an event or to-do which\
    \ is defined in terms of a\n   DATE value type will be triggered relative to 00:00:00\
    \ UTC on the\n   specified date. For example, if \"DTSTART:19980205, then the\
    \ duration\n   trigger will be relative to19980205T000000Z.\n   Format Definition:\
    \ The property is defined by the following notation:\n     trigger    = \"TRIGGER\"\
    \ (trigrel / trigabs)\n     trigrel    = *(\n                ; the following are\
    \ optional,\n                ; but MUST NOT occur more than once\n           \
    \       (\";\" \"VALUE\" \"=\" \"DURATION\") /\n                  (\";\" trigrelparam)\
    \ /\n                ; the following is optional,\n                ; and MAY occur\
    \ more than once\n                  (\";\" xparam)\n                  ) \":\"\
    \  dur-value\n     trigabs    = 1*(\n                ; the following is REQUIRED,\n\
    \                ; but MUST NOT occur more than once\n                  (\";\"\
    \ \"VALUE\" \"=\" \"DATE-TIME\") /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                  (\";\" xparam)\n\
    \                  ) \":\" date-time\n   Example: A trigger set 15 minutes prior\
    \ to the start of the event or\n   to-do.\n     TRIGGER:-P15M\n   A trigger set\
    \ 5 minutes after the end of the event or to-do.\n     TRIGGER;RELATED=END:P5M\n\
    \   A trigger set to an absolute date/time.\n     TRIGGER;VALUE=DATE-TIME:19980101T050000Z\n"
- title: 4.8.7 Change Management Component Properties
  contents:
  - "4.8.7 Change Management Component Properties\n   The following properties specify\
    \ change management information in\n   calendar components.\n"
- title: 4.8.7.1 Date/Time Created
  contents:
  - "4.8.7.1 Date/Time Created\n   Property Name: CREATED\n   Purpose: This property\
    \ specifies the date and time that the calendar\n   information was created by\
    \ the calendar user agent in the calendar\n   store.\n        Note: This is analogous\
    \ to the creation date and time for a file\n        in the file system.\n   Value\
    \ Type: DATE-TIME\n   Property Parameters: Non-standard property parameters can\
    \ be\n   specified on this property.\n   Conformance: The property can be specified\
    \ once in \"VEVENT\", \"VTODO\"\n   or \"VJOURNAL\" calendar components.\n   Description:\
    \ The date and time is a UTC value.\n   Format Definition: The property is defined\
    \ by the following notation:\n     created    = \"CREATED\" creaparam \":\" date-time\
    \ CRLF\n     creaparam  = *(\";\" xparam)\n   Example: The following is an example\
    \ of this property:\n     CREATED:19960329T133000Z\n"
- title: 4.8.7.2 Date/Time Stamp
  contents:
  - "4.8.7.2 Date/Time Stamp\n   Property Name: DTSTAMP\n   Purpose: The property\
    \ indicates the date/time that the instance of\n   the iCalendar object was created.\n\
    \   Value Type: DATE-TIME\n   Property Parameters: Non-standard property parameters\
    \ can be\n   specified on this property.\n   Conformance: This property MUST be\
    \ included in the \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VFREEBUSY\" calendar\
    \ components.\n   Description: The value MUST be specified in the UTC time format.\n\
    \   This property is also useful to protocols such as [IMIP] that have\n   inherent\
    \ latency issues with the delivery of content. This property\n   will assist in\
    \ the proper sequencing of messages containing iCalendar\n   objects.\n   This\
    \ property is different than the \"CREATED\" and \"LAST-MODIFIED\"\n   properties.\
    \ These two properties are used to specify when the\n   particular calendar data\
    \ in the calendar store was created and last\n   modified. This is different than\
    \ when the iCalendar object\n   representation of the calendar service information\
    \ was created or\n   last modified.\n   Format Definition: The property is defined\
    \ by the following notation:\n     dtstamp    = \"DTSTAMP\" stmparam \":\" date-time\
    \ CRLF\n     stmparam   = *(\";\" xparam)\n   Example:\n     DTSTAMP:19971210T080000Z\n"
- title: 4.8.7.3 Last Modified
  contents:
  - "4.8.7.3 Last Modified\n   Property Name: LAST-MODIFIED\n   Purpose: The property\
    \ specifies the date and time that the\n   information associated with the calendar\
    \ component was last revised\n   in the calendar store.\n        Note: This is\
    \ analogous to the modification date and time for a\n        file in the file\
    \ system.\n   Value Type: DATE-TIME\n   Property Parameters: Non-standard property\
    \ parameters can be\n   specified on this property.\n   Conformance: This property\
    \ can be specified in the \"EVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VTIMEZONE\"\
    \ calendar components.\n   Description: The property value MUST be specified in\
    \ the UTC time\n   format.\n   Format Definition: The property is defined by the\
    \ following notation:\n     last-mod   = \"LAST-MODIFIED\" lstparam \":\" date-time\
    \ CRLF\n     lstparam   = *(\";\" xparam)\n   Example: The following is are examples\
    \ of this property:\n     LAST-MODIFIED:19960817T133000Z\n"
- title: 4.8.7.4 Sequence Number
  contents:
  - "4.8.7.4 Sequence Number\n   Property Name: SEQUENCE\n   Purpose: This property\
    \ defines the revision sequence number of the\n   calendar component within a\
    \ sequence of revisions.\n   Value Type: integer\n   Property Parameters: Non-standard\
    \ property parameters can be\n   specified on this property.\n   Conformance:\
    \ The property can be specified in \"VEVENT\", \"VTODO\" or\n   \"VJOURNAL\" calendar\
    \ component.\n   Description: When a calendar component is created, its sequence\n\
    \   number is zero (US-ASCII decimal 48). It is monotonically incremented\n  \
    \ by the \"Organizer's\" CUA each time the \"Organizer\" makes a\n   significant\
    \ revision to the calendar component. When the \"Organizer\"\n   makes changes\
    \ to one of the following properties, the sequence number\n   MUST be incremented:\n\
    \     .  \"DTSTART\"\n     .  \"DTEND\"\n     .  \"DUE\"\n     .  \"RDATE\"\n\
    \     .  \"RRULE\"\n     .  \"EXDATE\"\n     .  \"EXRULE\"\n     .  \"STATUS\"\
    \n   In addition, changes made by the \"Organizer\" to other properties can\n\
    \   also force the sequence number to be incremented. The \"Organizer\" CUA\n\
    \   MUST increment the sequence number when ever it makes changes to\n   properties\
    \ in the calendar component that the \"Organizer\" deems will\n   jeopardize the\
    \ validity of the participation status of the\n   \"Attendees\". For example,\
    \ changing the location of a meeting from one\n   locale to another distant locale\
    \ could effectively impact the\n   participation status of the \"Attendees\".\n\
    \   The \"Organizer\" includes this property in an iCalendar object that it\n\
    \   sends to an \"Attendee\" to specify the current version of the calendar\n\
    \   component.\n   The \"Attendee\" includes this property in an iCalendar object\
    \ that it\n   sends to the \"Organizer\" to specify the version of the calendar\n\
    \   component that the \"Attendee\" is referring to.\n   A change to the sequence\
    \ number is not the mechanism that an\n   \"Organizer\" uses to request a response\
    \ from the \"Attendees\". The\n   \"RSVP\" parameter on the \"ATTENDEE\" property\
    \ is used by the\n   \"Organizer\" to indicate that a response from the \"Attendees\"\
    \ is\n   requested.\n   Format Definition: This property is defined by the following\n\
    \   notation:\n     seq = \"SEQUENCE\" seqparam \":\" integer CRLF\n     ; Default\
    \ is \"0\"\n     seqparam   = *(\";\" xparam)\n   Example: The following is an\
    \ example of this property for a calendar\n   component that was just created\
    \ by the \"Organizer\".\n     SEQUENCE:0\n   The following is an example of this\
    \ property for a calendar component\n   that has been revised two different times\
    \ by the \"Organizer\".\n     SEQUENCE:2\n"
- title: 4.8.8 Miscellaneous Component Properties
  contents:
  - "4.8.8 Miscellaneous Component Properties\n   The following properties specify\
    \ information about a number of\n   miscellaneous features of calendar components.\n"
- title: 4.8.8.1 Non-standard Properties
  contents:
  - "4.8.8.1 Non-standard Properties\n   Property Name: Any property name with a \"\
    X-\" prefix\n   Purpose: This class of property provides a framework for defining\n\
    \   non-standard properties.\n   Value Type: TEXT\n   Property Parameters: Non-standard\
    \ and language property parameters\n   can be specified on this property.\n  \
    \ Conformance: This property can be specified in any calendar\n   component.\n\
    \   Description: The MIME Calendaring and Scheduling Content Type\n   provides\
    \ a \"standard mechanism for doing non-standard things\". This\n   extension support\
    \ is provided for implementers to \"push the envelope\"\n   on the existing version\
    \ of the memo. Extension properties are\n   specified by property and/or property\
    \ parameter names that have the\n   prefix text of \"X-\" (the two character sequence:\
    \ LATIN CAPITAL LETTER\n   X character followed by the HYPEN-MINUS character).\
    \ It is recommended\n   that vendors concatenate onto this sentinel another short\
    \ prefix text\n   to identify the vendor. This will facilitate readability of\
    \ the\n   extensions and minimize possible collision of names between different\n\
    \   vendors. User agents that support this content type are expected to\n   be\
    \ able to parse the extension properties and property parameters but\n   can ignore\
    \ them.\n   At present, there is no registration authority for names of extension\n\
    \   properties and property parameters. The data type for this property\n   is\
    \ TEXT. Optionally, the data type can be any of the other valid data\n   types.\n\
    \   Format Definition: The property is defined by the following notation:\n  \
    \   x-prop     = x-name *(\";\" xparam) [\";\" languageparam] \":\" text CRLF\n\
    \        ; Lines longer than 75 octets should be folded\n   Example: The following\
    \ might be the ABC vendor's extension for an\n   audio-clip form of subject property:\n\
    \     X-ABC-MMSUBJ;X-ABC-MMSUBJTYPE=wave:http://load.noise.org/mysubj.wav\n"
- title: 4.8.8.2 Request Status
  contents:
  - "4.8.8.2 Request Status\n   Property Name: REQUEST-STATUS\n   Purpose: This property\
    \ defines the status code returned for a\n   scheduling request.\n   Value Type:\
    \ TEXT\n   Property Parameters: Non-standard and language property parameters\n\
    \   can be specified on this property.\n   Conformance: The property can be specified\
    \ in \"VEVENT\", \"VTODO\",\n   \"VJOURNAL\" or \"VFREEBUSY\" calendar component.\n\
    \   Description: This property is used to return status code information\n   related\
    \ to the processing of an associated iCalendar object. The data\n   type for this\
    \ property is TEXT.\n   The value consists of a short return status component,\
    \ a longer\n   return status description component, and optionally a status-specific\n\
    \   data component. The components of the value are separated by the\n   SEMICOLON\
    \ character (US-ASCII decimal 59).\n   The short return status is a PERIOD character\
    \ (US-ASCII decimal 46)\n   separated 3-tuple of integers. For example, \"3.1.1\"\
    . The successive\n   levels of integers provide for a successive level of status\
    \ code\n   granularity.\n   The following are initial classes for the return status\
    \ code.\n   Individual iCalendar object methods will define specific return\n\
    \   status codes for these classes. In addition, other classes for the\n   return\
    \ status code may be defined using the registration process\n   defined later\
    \ in this memo.\n     |==============+===============================================|\n\
    \     | Short Return | Longer Return Status Description              |\n     |\
    \ Status Code  |                                               |\n     |==============+===============================================|\n\
    \     |    1.xx      | Preliminary success. This class of status     |\n     |\
    \              | of status code indicates that the request has |\n     |     \
    \         | request has been initially processed but that |\n     |          \
    \    | completion is pending.                        |\n     |==============+===============================================|\n\
    \     |    2.xx      | Successful. This class of status code         |\n     |\
    \              | indicates that the request was completed      |\n     |     \
    \         | successfuly. However, the exact status code   |\n     |          \
    \    | can indicate that a fallback has been taken.  |\n     |==============+===============================================|\n\
    \     |    3.xx      | Client Error. This class of status code       |\n     |\
    \              | indicates that the request was not successful.|\n     |     \
    \         | The error is the result of either a syntax or |\n     |          \
    \    | a semantic error in the client formatted      |\n     |              |\
    \ request. Request should not be retried until  |\n     |              | the condition\
    \ in the request is corrected.    |\n     |==============+===============================================|\n\
    \     |    4.xx      | Scheduling Error. This class of status code   |\n     |\
    \              | indicates that the request was not successful.|\n     |     \
    \         | Some sort of error occurred within the        |\n     |          \
    \    | calendaring and scheduling service, not       |\n     |              |\
    \ directly related to the request itself.       |\n     |==============+===============================================|\n\
    \   Format Definition: The property is defined by the following notation:\n  \
    \   rstatus    = \"REQUEST-STATUS\" rstatparam \":\"\n                  statcode\
    \ \";\" statdesc [\";\" extdata]\n     rstatparam = *(\n                ; the\
    \ following is optional,\n                ; but MUST NOT occur more than once\n\
    \                (\";\" languageparm) /\n                ; the following is optional,\n\
    \                ; and MAY occur more than once\n                (\";\" xparam)\n\
    \                )\n     statcode   = 1*DIGIT *(\".\" 1*DIGIT)\n     ;Hierarchical,\
    \ numeric return status code\n     statdesc   = text\n     ;Textual status description\n\
    \     extdata    = text\n     ;Textual exception data. For example, the offending\
    \ property\n     ;name and value or complete property line.\n   Example: The following\
    \ are some possible examples of this property.\n   The COMMA and SEMICOLON separator\
    \ characters in the property value\n   are BACKSLASH character escaped because\
    \ they appear in a  text value.\n     REQUEST-STATUS:2.0;Success\n     REQUEST-STATUS:3.1;Invalid\
    \ property value;DTSTART:96-Apr-01\n     REQUEST-STATUS:2.8; Success\\, repeating\
    \ event ignored. Scheduled\n      as a single event.;RRULE:FREQ=WEEKLY\\;INTERVAL=2\n\
    \     REQUEST-STATUS:4.1;Event conflict. Date/time is busy.\n     REQUEST-STATUS:3.7;Invalid\
    \ calendar user;ATTENDEE:\n      MAILTO:jsmith@host.com\n"
- title: 5 iCalendar Object Examples
  contents:
  - "5 iCalendar Object Examples\n   The following examples are provided as an informational\
    \ source of\n   illustrative iCalendar objects consistent with this content type.\n\
    \   The following example specifies a three-day conference that begins at\n  \
    \ 8:00 AM EDT, September 18, 1996 and end at 6:00 PM EDT, September 20,\n   1996.\n\
    \     BEGIN:VCALENDAR PRODID:-//xyz Corp//NONSGML PDA Calendar Verson\n     1.0//EN\
    \ VERSION:2.0 BEGIN:VEVENT DTSTAMP:19960704T120000Z\n     UID:uid1@host.com ORGANIZER:MAILTO:jsmith@host.com\n\
    \     DTSTART:19960918T143000Z DTEND:19960920T220000Z STATUS:CONFIRMED\n     CATEGORIES:CONFERENCE\
    \ SUMMARY:Networld+Interop Conference\n     DESCRIPTION:Networld+Interop Conference\n\
    \       and Exhibit\\nAtlanta World Congress Center\\n\n      Atlanta, Georgia\
    \ END:VEVENT END:VCALENDAR\n   The following example specifies a group scheduled\
    \ meeting that begin\n   at 8:30 AM EST on March 12, 1998 and end at 9:30 AM EST\
    \ on March 12,\n   1998. The \"Organizer\" has scheduled the meeting with one\
    \ or more\n   calendar users in a group. A time zone specification for Eastern\n\
    \   United States has been specified.\n     BEGIN:VCALENDAR\n     PRODID:-//RDU\
    \ Software//NONSGML HandCal//EN\n     VERSION:2.0\n     BEGIN:VTIMEZONE\n    \
    \ TZID:US-Eastern\n     BEGIN:STANDARD\n     DTSTART:19981025T020000\n     RDATE:19981025T020000\n\
    \     TZOFFSETFROM:-0400\n     TZOFFSETTO:-0500\n     TZNAME:EST\n     END:STANDARD\n\
    \     BEGIN:DAYLIGHT\n     DTSTART:19990404T020000\n     RDATE:19990404T020000\n\
    \     TZOFFSETFROM:-0500\n     TZOFFSETTO:-0400\n     TZNAME:EDT\n     END:DAYLIGHT\n\
    \     END:VTIMEZONE\n     BEGIN:VEVENT\n     DTSTAMP:19980309T231000Z\n     UID:guid-1.host1.com\n\
    \     ORGANIZER;ROLE=CHAIR:MAILTO:mrbig@host.com\n     ATTENDEE;RSVP=TRUE;ROLE=REQ-PARTICIPANT;CUTYPE=GROUP:\n\
    \      MAILTO:employee-A@host.com\n     DESCRIPTION:Project XYZ Review Meeting\n\
    \     CATEGORIES:MEETING\n     CLASS:PUBLIC\n     CREATED:19980309T130000Z\n \
    \    SUMMARY:XYZ Project Review\n     DTSTART;TZID=US-Eastern:19980312T083000\n\
    \     DTEND;TZID=US-Eastern:19980312T093000\n     LOCATION:1CP Conference Room\
    \ 4350\n     END:VEVENT\n     END:VCALENDAR\n   The following is an example of\
    \ an iCalendar object passed in a MIME\n   message with a single body part consisting\
    \ of a \"text/calendar\"\n   Content Type.\n     TO:jsmith@host1.com\n     FROM:jdoe@host1.com\n\
    \     MIME-VERSION:1.0\n     MESSAGE-ID:<id3@host1.com>\n     CONTENT-TYPE:text/calendar\n\
    \     BEGIN:VCALENDAR\n     METHOD:xyz\n     VERSION:2.0\n     PRODID:-//ABC Corporation//NONSGML\
    \ My Product//EN\n     BEGIN:VEVENT\n     DTSTAMP:19970324T1200Z\n     SEQUENCE:0\n\
    \     UID:uid3@host1.com\n     ORGANIZER:MAILTO:jdoe@host1.com\n     ATTENDEE;RSVP=TRUE:MAILTO:jsmith@host1.com\n\
    \     DTSTART:19970324T123000Z\n     DTEND:19970324T210000Z\n     CATEGORIES:MEETING,PROJECT\n\
    \     CLASS:PUBLIC\n     SUMMARY:Calendaring Interoperability Planning Meeting\n\
    \     DESCRIPTION:Discuss how we can test c&s interoperability\\n\n      using\
    \ iCalendar and other IETF standards.\n     LOCATION:LDB Lobby\n     ATTACH;FMTTYPE=application/postscript:ftp://xyzCorp.com/pub/\n\
    \      conf/bkgrnd.ps\n     END:VEVENT\n     END:VCALENDAR\n   The following is\
    \ an example of a to-do due on April 15, 1998. An\n   audio alarm has been specified\
    \ to remind the calendar user at noon,\n   the day before the to-do is expected\
    \ to be completed and repeat\n   hourly, four additional times. The to-do definition\
    \ has been modified\n   twice since it was initially created.\n     BEGIN:VCALENDAR\n\
    \     VERSION:2.0\n     PRODID:-//ABC Corporation//NONSGML My Product//EN\n  \
    \   BEGIN:VTODO\n     DTSTAMP:19980130T134500Z\n     SEQUENCE:2\n     UID:uid4@host1.com\n\
    \     ORGANIZER:MAILTO:unclesam@us.gov\n     ATTENDEE;PARTSTAT=ACCEPTED:MAILTO:jqpublic@host.com\n\
    \     DUE:19980415T235959\n     STATUS:NEEDS-ACTION\n     SUMMARY:Submit Income\
    \ Taxes\n     BEGIN:VALARM\n     ACTION:AUDIO\n     TRIGGER:19980403T120000\n\
    \     ATTACH;FMTTYPE=audio/basic:http://host.com/pub/audio-\n      files/ssbanner.aud\n\
    \     REPEAT:4\n     DURATION:PT1H\n     END:VALARM\n     END:VTODO\n     END:VCALENDAR\n\
    \   The following is an example of a journal entry.\n     BEGIN:VCALENDAR\n  \
    \   VERSION:2.0\n     PRODID:-//ABC Corporation//NONSGML My Product//EN\n    \
    \ BEGIN:VJOURNAL\n     DTSTAMP:19970324T120000Z\n     UID:uid5@host1.com\n   \
    \  ORGANIZER:MAILTO:jsmith@host.com\n     STATUS:DRAFT\n     CLASS:PUBLIC\n  \
    \   CATEGORY:Project Report, XYZ, Weekly Meeting\n     DESCRIPTION:Project xyz\
    \ Review Meeting Minutes\\n\n      Agenda\\n1. Review of project version 1.0 requirements.\\\
    n2.\n     Definition\n      of project processes.\\n3. Review of project schedule.\\\
    n\n      Participants: John Smith, Jane Doe, Jim Dandy\\n-It was\n       decided\
    \ that the requirements need to be signed off by\n       product marketing.\\\
    n-Project processes were accepted.\\n\n      -Project schedule needs to account\
    \ for scheduled holidays\n       and employee vacation time. Check with HR for\
    \ specific\n       dates.\\n-New schedule will be distributed by Friday.\\n-\n\
    \      Next weeks meeting is cancelled. No meeting until 3/23.\n     END:VJOURNAL\n\
    \     END:VCALENDAR\n   The following is an example of published busy time information.\
    \ The\n   iCalendar object might be placed in the network resource\n   www.host.com/calendar/busytime/jsmith.ifb.\n\
    \     BEGIN:VCALENDAR\n     VERSION:2.0\n     PRODID:-//RDU Software//NONSGML\
    \ HandCal//EN\n     BEGIN:VFREEBUSY\n     ORGANIZER:MAILTO:jsmith@host.com\n \
    \    DTSTART:19980313T141711Z\n     DTEND:19980410T141711Z\n     FREEBUSY:19980314T233000Z/19980315T003000Z\n\
    \     FREEBUSY:19980316T153000Z/19980316T163000Z\n     FREEBUSY:19980318T030000Z/19980318T040000Z\n\
    \     URL:http://www.host.com/calendar/busytime/jsmith.ifb\n     END:VFREEBUSY\n\
    \     END:VCALENDAR\n"
- title: 6 Recommended Practices
  contents:
  - "6 Recommended Practices\n   These recommended practices should be followed in\
    \ order to assure\n   consistent handling of the following cases for an iCalendar\
    \ object.\n   1.  Content lines longer than 75 octets SHOULD be folded.\n   2.\
    \  A calendar entry with a \"DTSTART\" property but no \"DTEND\"\n       property\
    \ does not take up any time. It is intended to represent\n       an event that\
    \ is associated with a given calendar date and time\n       of day, such as an\
    \ anniversary. Since the event does not take up\n       any time, it MUST NOT\
    \ be used to record busy time no matter what\n       the value for the \"TRANSP\"\
    \ property.\n   3.  When the \"DTSTART\" and \"DTEND\", for \"VEVENT\", \"VJOURNAL\"\
    \ and\n       \"VFREEBUSY\" calendar components, and \"DTSTART\" and \"DUE\",\
    \ for\n       \"VTODO\" calendar components, have the same value data type (e.g.,\n\
    \       DATE-TIME), they SHOULD specify values in the same time format\n     \
    \  (e.g., UTC time format).\n   4.  When the combination of the \"RRULE\" and\
    \ \"RDATE\" properties on an\n       iCalendar object produces multiple instances\
    \ having the same\n       start date/time, they should be collapsed to, and considered\
    \ as,\n       a single instance.\n   5.  When a calendar user receives multiple\
    \ requests for the same\n       calendar component (e.g., REQUEST for a \"VEVENT\"\
    \ calendar\n       component) as a result of being on multiple mailing lists\n\
    \       specified by \"ATTENDEE\" properties in the request, they SHOULD\n   \
    \    respond to only one of the requests. The calendar user SHOULD\n       also\
    \ specify (using the \"MEMBER\" parameter of the \"ATTENDEE\"\n       property)\
    \ which mailing list they are a member of.\n   6.  An implementation can truncate\
    \ a \"SUMMARY\" property value to 255\n       characters.\n   7.  If seconds of\
    \ the minute are not supported by an implementation,\n       then a value of \"\
    00\" SHOULD be specified for the seconds\n       component in a time value.\n\
    \   8.  If the value type parameter (VALUE=) contains an unknown value\n     \
    \  type, it SHOULD be treated as TEXT.\n   9.  TZURL values SHOULD NOT be specified\
    \ as a FILE URI type. This URI\n       form can be useful within an organization,\
    \ but is problematic in\n       the Internet.\n   10.  Some possible English values\
    \ for CATEGORIES property include\n        \"ANNIVERSARY\", \"APPOINTMENT\", \"\
    BUSINESS\", \"EDUCATION\",\n        \"HOLIDAY\", \"MEETING\", \"MISCELLANEOUS\"\
    , \"NON-WORKING HOURS\", \"NOT\n        IN OFFICE\", \"PERSONAL\", \"PHONE CALL\"\
    , \"SICK DAY\", \"SPECIAL\n        OCCASION\", \"TRAVEL\", \"VACATION\". Categories\
    \ can be specified in\n        any registered language.\n   11.  Some possible\
    \ English values for RESOURCES property include\n        \"CATERING\", \"CHAIRS\"\
    , \"COMPUTER PROJECTOR\", \"EASEL\", \"OVERHEAD\n        PROJECTOR\", \"SPEAKER\
    \ PHONE\", \"TABLE\", \"TV\", \"VCR\", \"VIDEO\n        PHONE\", \"VEHICLE\".\
    \ Resources can be specified in any registered\n        language.\n"
- title: 7 Registration of Content Type Elements
  contents:
  - "7 Registration of Content Type Elements\n   This section provides the process\
    \ for registration of MIME\n   Calendaring and Scheduling Content Type iCalendar\
    \ object methods and\n   new or modified properties.\n"
- title: 7.1 Registration of New and Modified iCalendar Object Methods
  contents:
  - "7.1 Registration of New and Modified iCalendar Object Methods\n   New MIME Calendaring\
    \ and Scheduling Content Type iCalendar object\n   methods are registered by the\
    \ publication of an IETF Request for\n   Comments (RFC). Changes to an iCalendar\
    \ object method are registered\n   by the publication of a revision of the RFC\
    \ defining the method.\n"
- title: 7.2 Registration of New Properties
  contents:
  - "7.2 Registration of New Properties\n   This section defines procedures by which\
    \ new properties or enumerated\n   property values for the MIME Calendaring and\
    \ Scheduling Content Type\n   can be registered with the IANA. Non-IANA properties\
    \ can be used by\n   bilateral agreement, provided the associated properties names\
    \ follow\n   the \"X-\" convention.\n   The procedures defined here are designed\
    \ to allow public comment and\n   review of new properties, while posing only\
    \ a small impediment to the\n   definition of new properties.\n   Registration\
    \ of a new property is accomplished by the following\n   steps.\n"
- title: 7.2.1 Define the property
  contents:
  - "7.2.1 Define the property\n   A property is defined by completing the following\
    \ template.\n     To: ietf-calendar@imc.org\n     Subject: Registration of text/calendar\
    \ MIME property XXX\n     Property name:\n     Property purpose:\n     Property\
    \ value type(s):\n     Property parameter (s):\n     Conformance:\n     Description:\n\
    \     Format definition:\n     Examples:\n   The meaning of each field in the\
    \ template is as follows.\n   Property name: The name of the property, as it will\
    \ appear in the\n   body of an text/calendar MIME Content-Type \"property: value\"\
    \ line to\n   the left of the colon \":\".\n   Property purpose: The purpose of\
    \ the property (e.g., to indicate a\n   delegate for the event or to-do, etc.).\
    \ Give a short but clear\n   description.\n   Property value type (s): Any of\
    \ the valid value types for the\n   property value needs to be specified. The\
    \ default value type also\n   needs to be specified. If a new value type is specified,\
    \ it needs to\n   be declared in this section.\n   Property parameter (s): Any\
    \ of the valid property parameters for the\n   property needs to be specified.\n\
    \   Conformance: The calendar components that the property can appear in\n   needs\
    \ to be specified.\n   Description: Any special notes about the property, how\
    \ it is to be\n   used, etc.\n   Format definition: The ABNF for the property\
    \ definition needs to be\n   specified.\n   Examples: One or more examples of\
    \ instances of the property needs to\n   be specified.\n"
- title: 7.2.2 Post the Property definition
  contents:
  - "7.2.2 Post the Property definition\n   The property description MUST be posted\
    \ to the new property\n   discussion list, ietf-calendar@imc.org.\n"
- title: 7.2.3   Allow a comment period
  contents:
  - "7.2.3   Allow a comment period\n   Discussion on the new property MUST be allowed\
    \ to take place on the\n   list for a minimum of two weeks. Consensus MUST be\
    \ reached on the\n   property before proceeding to the next step.\n"
- title: 7.2.4 Submit the property for approval
  contents:
  - "7.2.4 Submit the property for approval\n   Once the two-week comment period has\
    \ elapsed, and the proposer is\n   convinced consensus has been reached on the\
    \ property, the\n   registration application should be submitted to the Method\
    \ Reviewer\n   for approval. The Method Reviewer is appointed to the Application\n\
    \   Area Directors and can either accept or reject the property\n   registration.\
    \ An accepted registration should be passed on by the\n   Method Reviewer to the\
    \ IANA for inclusion in the official IANA method\n   registry. The registration\
    \ can be rejected for any of the following\n   reasons. 1) Insufficient comment\
    \ period; 2) Consensus not reached; 3)\n   Technical deficiencies raised on the\
    \ list or elsewhere have not been\n   addressed. The Method Reviewer's decision\
    \ to reject a property can be\n   appealed by the proposer to the IESG, or the\
    \ objections raised can be\n   addressed by the proposer and the property resubmitted.\n"
- title: 7.3 Property Change Control
  contents:
  - "7.3 Property Change Control\n   Existing properties can be changed using the\
    \ same process by which\n   they were registered.\n        1.           Define\
    \ the change\n        2.           Post the change\n        3.           Allow\
    \ a comment period\n        4.           Submit the property for approval\n  \
    \ Note that the original author or any other interested party can\n   propose\
    \ a change to an existing property, but that such changes\n   should only be proposed\
    \ when there are serious omissions or errors in\n   the published memo. The Method\
    \ Reviewer can object to a change if it\n   is not backward compatible, but is\
    \ not required to do so.\n   Property definitions can never be deleted from the\
    \ IANA registry, but\n   properties which are no longer believed to be useful\
    \ can be declared\n   OBSOLETE by a change to their \"intended use\" field.\n"
- title: 8 References
  contents:
  - "8 References\n   [IMIP]     Dawson, F., Mansour, S. and S. Silverberg, \"iCalendar\n\
    \              Message-based Interoperability Protocol (IMIP)\", RFC 2447,\n \
    \             November 1998.\n   [ITIP]     Silverberg, S., Mansour, S., Dawson,\
    \ F. and R. Hopson,\n              \"iCalendar Transport-Independent Interoperability\
    \ Protocol\n              (iTIP) : Scheduling Events, Busy Time, To-dos and Journal\n\
    \              Entries\", RFC 2446, November 1998.\n   [ISO 8601] ISO 8601, \"\
    Data elements and interchange formats-\n              Information interchange--Representation\
    \ of dates and\n              times\", International Organization for Standardization,\n\
    \              June, 1988.\n   [ISO 9070] ISO/IEC 9070, \"Information Technology_SGML\
    \ Support\n              Facilities--Registration Procedures for Public Text Owner\n\
    \              Identifiers\", Second Edition, International Organization\n   \
    \           for Standardization, April 1991.\n   [RFC 822]  Crocker, D., \"Standard\
    \ for the Format of ARPA Internet\n              Text Messages\", STD 11, RFC\
    \ 822, August 1982.\n   [RFC 1738] Berners-Lee, T., Masinter, L. and M. McCahill,\
    \ \"Uniform\n              Resource Locators (URL)\", RFC 1738, December 1994.\n\
    \   [RFC 1766] Alvestrand, H., \"Tags for the Identification of\n            \
    \  Languages\", RFC 1766, March 1995.\n   [RFC 2045] Freed, N. and N. Borenstein,\
    \ \" Multipurpose Internet Mail\n              Extensions (MIME) - Part One: Format\
    \ of Internet Message\n              Bodies\", RFC 2045, November 1996.\n   [RFC\
    \ 2046] Freed, N. and N. Borenstein, \" Multipurpose Internet Mail\n         \
    \     Extensions (MIME) - Part Two: Media Types\", RFC 2046,\n              November\
    \ 1996.\n   [RFC 2048] Freed, N., Klensin, J. and J. Postel, \"Multipurpose\n\
    \              Internet Mail Extensions (MIME) - Part Four: Registration\n   \
    \           Procedures\", RFC 2048, January 1997.\n   [RFC 2119] Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC 2234] Crocker, D. and P. Overell, \"\
    Augmented BNF for Syntax\n              Specifications: ABNF\", RFC 2234, November\
    \ 1997.\n   [RFC 2279] Yergeau, F., \"UTF-8, a transformation format of ISO\n\
    \              10646\", RFC 2279, January 1998.\n   [RFC 2425] Howes, T., Smith,\
    \ M. and F. Dawson, \"A MIME Content-Type\n              for Directory Information\"\
    , RFC 2425, September 1998.\n   [RFC 2426] Dawson, F. and T. Howes, \"vCard MIME\
    \ Directory Profile\",\n              RFC 2426, September 1998.\n   [TZ]     \
    \  Olson, A.D., et al, Time zone code and data,\n              ftp://elsie.nci.nih.gov/pub/,\
    \ updated periodically.\n   [VCAL]     Internet Mail Consortium, \"vCalendar -\
    \ The Electronic\n              Calendaring and Scheduling Exchange Format\",\n\
    \              http://www.imc.org/pdi/vcal-10.txt, September 18, 1996.\n"
- title: 9 Acknowledgments
  contents:
  - "9 Acknowledgments\n   A hearty thanks to the IETF Calendaring and Scheduling\
    \ Working Group\n   and also the following individuals who have participated in\
    \ the\n   drafting, review and discussion of this memo:\n   Roland Alden, Harald\
    \ T. Alvestrand, Eric Berman, Denis Bigorgne, John\n   Binici, Bill Bliss, Philippe\
    \ Boucher, Steve Carter, Andre\n   Courtemanche, Dave Crocker, David Curley, Alec\
    \ Dun, John Evans, Ross\n   Finlayson, Randell Flint, Ned Freed, Patrik Faltstrom,\
    \ Chuck\n   Grandgent, Mark Handley, Steve Hanna, Paul B. Hill, Paul Hoffman,\n\
    \   Ross Hopson, Mark Horton, Daryl Huff, Bruce Kahn, C. Harald Koch,\n   Ryan\
    \ Jansen, Don Lavange, Antoine Leca, Theodore Lorek, Steve\n   Mansour, Skip Montanaro,\
    \ Keith Moore, Cecil Murray, Chris Newman,\n   John Noerenberg, Ralph Patterson,\
    \ Pete Resnick, Keith Rhodes, Robert\n   Ripberger, John Rose, Doug Royer, Andras\
    \ Salamar, Ted Schuh, Vinod\n   Seraphin, Derrick Shadel, Ken Shan, Andrew Shuman,\
    \ Steve Silverberg,\n   William P. Spencer, John Sun, Mark Towfiq, Yvonne Tso,\
    \ Robert Visnov,\n   James L. Weiner, Mike Weston, William Wyatt.\n"
- title: 10 Authors' and Chairs' Addresses
  contents:
  - "10 Authors' and Chairs' Addresses\n   The following address information is provided\
    \ in a MIME-VCARD,\n   Electronic Business Card, format.\n   The authors of this\
    \ memo are:\n   BEGIN:VCARD\n   VERSION:3.0\n   N:Dawson;Frank\n   FN:Frank Dawson\n\
    \   ORG:Lotus Development Corporation\n   ADR;TYPE=WORK,POSTAL,PARCEL:;;6544 Battleford\
    \ Drive;\n    Raleigh;NC;27613-3502;USA\n   TEL;TYPE=WORK,MSG:+1-919-676-9515\n\
    \   TEL;TYPE=WORK,FAX:+1-919-676-9564\n   EMAIL;TYPE=PREF,INTERNET:Frank_Dawson@Lotus.com\n\
    \   EMAIL;TYPE=INTERNET:fdawson@earthlink.net\n   URL:http://home.earthlink.net/~fdawson\n\
    \   END:VCARD\n   BEGIN:VCARD\n   VERSION:3.0\n   N:Stenerson;Derik\n   FN:Derik\
    \ Stenerson\n   ORG:Microsoft Corporation\n   ADR;TYPE=WORK,POSTAL,PARCEL:;;One\
    \ Microsoft Way;\n    Redmond;WA;98052-6399;USA\n   TEL;TYPE=WORK,MSG:+1-425-936-5522\n\
    \   TEL;TYPE=WORK,FAX:+1-425-936-7329\n   EMAIL;TYPE=INTERNET:deriks@Microsoft.com\n\
    \   END:VCARD\n   The iCalendar object is a result of the work of the Internet\n\
    \   Engineering Task Force Calendaring and Scheduling Working Group. The\n   chairmen\
    \ of that working group are:\n   BEGIN:VCARD\n   VERSION:3.0\n   N:Ganguly;Anik\n\
    \   FN:Anik Ganguly\n   ORG: Open Text Inc.\n   ADR;TYPE=WORK,POSTAL,PARCEL:;Suite\
    \ 101;38777 West Six Mile Road;\n    Livonia;MI;48152;USA\n   TEL;TYPE=WORK,MSG:+1-734-542-5955\n\
    \   EMAIL;TYPE=INTERNET:ganguly@acm.org\n   END:VCARD\n   The co-chairman of that\
    \ working group is:\n   BEGIN:VCARD\n   VERSION:3.0\n   N:Moskowitz;Robert\n \
    \  FN:Robert Moskowitz\n   EMAIL;TYPE=INTERNET:rgm-ietf@htt-consult.com\n   END:VCARD\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (1998).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
