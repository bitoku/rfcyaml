- title: __initial_text__
  contents:
  - '                Transmission of Syslog Messages over TCP

    '
- title: Abstract
  contents:
  - "Abstract\n   There have been many implementations and deployments of legacy syslog\n\
    \   over TCP for many years.  That protocol has evolved without being\n   standardized\
    \ and has proven to be quite interoperable in practice.\n   This memo describes\
    \ how TCP has been used as a transport for syslog\n   messages.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for the historical record.\n   This document defines a Historic\
    \ Document for the Internet community.\n   This document is a product of the Internet\
    \ Engineering Task Force\n   (IETF).  It represents the consensus of the IETF\
    \ community.  It has\n   received public review and has been approved for publication\
    \ by the\n   Internet Engineering Steering Group (IESG).  Not all documents\n\
    \   approved by the IESG are a candidate for any level of Internet\n   Standard;\
    \ see Section 2 of RFC 5741.\n   Information about the current status of this\
    \ document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6587.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The IESG does not recommend implementing or deploying syslog over\n\
    \   plain tcp, which is described in this document, because it lacks the\n   ability\
    \ to enable strong security [RFC3365].\n   Implementation of the TLS transport\
    \ [RFC5425] is recommended so that\n   appropriate security features are available\
    \ to operators who want to\n   deploy secure syslog.  Similarly, those security\
    \ features can be\n   turned off for those who do not want them.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Conventions Used in This Document ...............................5\n  \
    \ 3. Message Transmission ............................................5\n    \
    \  3.1. Character Encoding Scheme ..................................5\n      3.2.\
    \ Session ....................................................6\n      3.3. Session\
    \ Initiation .........................................6\n      3.4. Message Transfer\
    \ ...........................................6\n           3.4.1. Octet Counting\
    \ ......................................7\n           3.4.2. Non-Transparent-Framing\
    \ .............................7\n           3.4.3. Method Change .......................................8\n\
    \      3.5. Session Closure ............................................8\n  \
    \ 4. Applicability Statement .........................................8\n   5.\
    \ Security Considerations .........................................9\n   6. Acknowledgments\
    \ .................................................9\n   7. References .....................................................10\n\
    \      7.1. Normative References ......................................10\n  \
    \    7.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Standards-Track documents in the syslog series recommend\
    \ using\n   the syslog protocol [RFC5424] with the TLS transport [RFC5425] for\n\
    \   all event messages.  The authors of this document wholeheartedly\n   support\
    \ that position and only offer this document to describe what\n   has been observed\
    \ with legacy syslog over TCP, which appears to still\n   be widely used.\n  \
    \ Two primary format options have been observed with legacy syslog\n   being transported\
    \ over TCP.  These have been called \"non-transparent-\n   framing\" and \"octet-counting\"\
    .  The non-transparent-framing mechanism\n   has some inherent problems.\n   Diagram\
    \ 1 shows how all of these syslog transports relate to each\n   other.  In this\
    \ diagram, three originators are seen, labeled A, B,\n   and C, along with one\
    \ collector.  Originator A is using the TCP\n   transport that is described in\
    \ this document.  Originator B is using\n   the UDP transport, which is described\
    \ in [RFC5426].  Originator C is\n   using the TLS transport, which is described\
    \ in [RFC5425].  The\n   collector is shown with the capability to accept all\
    \ three\n   transports.\n    +---------------------+\n    | Originator A     \
    \   |\n    |---------------------|\n    |  syslog application |\n    |       \
    \              |\n    |---------------------|\n    |  syslog transport   |\n \
    \   |        TCP          |\n    |---------------------|\n              v\n  \
    \            |\n             /                            +---------------------+\n\
    \            /                             | Originator B        |\n         \
    \  /                              |---------------------|\n          /   +----------------------+\
    \    |  syslog application |\n         /    | Collector            |    |    \
    \                 |\n        |     |----------------------|    |---------------------|\n\
    \        |     |  syslog application  |    |  syslog transport   |\n        |\
    \     |                      |    |        UDP          |\n        |     |----------------------|\
    \    |---------------------|\n        |     |  syslog transport    |         \
    \     v\n        |     |  TCP |  TLS  |  UDP  |              |\n        |    \
    \ |----------------------|              |\n        |         ^      ^       ^\
    \                  |\n        |         |      |       |                  |\n\
    \        \\         /      |       \\                  /\n         --------- \
    \      |        ------------------\n                         |\n             \
    \            |\n                         |     +---------------------+\n     \
    \                    |     | Originator C        |\n                         |\
    \     |---------------------|\n                         |     |  syslog application\
    \ |\n                         |     |                     |\n                \
    \         |     |---------------------|\n                         |     |  syslog\
    \ transport   |\n                         |     |        TLS          |\n    \
    \                     |     |---------------------|\n                        \
    \ |               v\n                         \\               /\n           \
    \               ---------------\n                Diagram 1.  Syslog Layers\n"
- title: 2.  Conventions Used in This Document
  contents:
  - "2.  Conventions Used in This Document\n   The terminology defined in Section\
    \ 3 of [RFC5424] is used throughout\n   this specification.  The reader should\
    \ be familiar with that to\n   follow this discussion.\n   This document also\
    \ references devices that use the syslog message\n   format as described in [RFC3164].\
    \  Devices that continue to use that\n   message format (regardless of transport)\
    \ will be described as \"legacy\n   syslog devices\".  Similarly, devices that\
    \ use the message format as\n   described in [RFC5424] will be described as \"\
    standardized syslog\n   devices\".\n"
- title: 3.  Message Transmission
  contents:
  - "3.  Message Transmission\n   Syslog is simplex in nature.  It has been observed\
    \ that\n   implementations of syslog over TCP also do not use any back-channel\n\
    \   mechanism to convey information to the transport sender and,\n   consequently,\
    \ do not use any application-level acknowledgement for\n   syslog signaling from\
    \ receiver to sender.  Message receipt\n   acknowledgement, reliability, and flow\
    \ control are provided by the\n   capabilities of TCP.\n"
- title: 3.1.  Character Encoding Scheme
  contents:
  - "3.1.  Character Encoding Scheme\n   Syslog over TCP messages contain no indication\
    \ of the coded character\n   set (e.g., [US-ASCII] or [UNICODE] ) or character\
    \ encoding scheme\n   (e.g., so-called \"7-bit ASCII\" or UTF-8 [RFC3629]) in\
    \ use.  In these\n   messages, the predominant approach has been to include characters\n\
    \   only from the ASCII repertoire (i.e., %d32 to %d126 inclusive) using\n   the\
    \ \"Network Virtual Terminal\" (NVT) encoding [RFC5198].\n   The message header\
    \ usually contains characters only from the ASCII\n   repertoire, in the NVT encoding.\
    \  This has been observed even in\n   cases where a different encoding (e.g.,\
    \ UTF-8) has been used for the\n   MSG part.  However, characters outside the\
    \ ASCII range have been seen\n   inside the header.  In that case, some syslog\
    \ applications have been\n   known to experience problems processing those messages.\n\
    \   In some cases, it has been observed that characters outside of the\n   ASCII\
    \ range are often being transformed by receivers in an effort to\n   \"escape\
    \ control characters\".  Some receiver implementations simply\n   drop those characters.\
    \  This is considered to be a poor practice, as\n   it causes problems with coded\
    \ character sets other than ASCII and\n   character encodings other than NVT,\
    \ most notably the UTF-8 encoding\n   of Unicode.\n   It has also been observed\
    \ that relays will forward messages using the\n   character encoding schemes of\
    \ messages they receive.  In the case\n   where two different senders are using\
    \ different character encoding\n   schemes, the relay will forward each message\
    \ to a collector in that\n   character encoding.  The collector of these messages\
    \ will have to be\n   prepared to receive messages from the same relay with different\n\
    \   encodings.\n"
- title: 3.2.  Session
  contents:
  - "3.2.  Session\n   Like most other protocols, the syslog transport sender is the\
    \ TCP\n   host that initiates the TCP session.  After initiation, messages are\n\
    \   sent from the transport sender to the transport receiver.  No\n   application-level\
    \ data is transmitted from the transport receiver to\n   the transport sender.\
    \  The roles of transport sender and receiver\n   seem to be fixed once the session\
    \ is established.\n   When it has been observed, if an error occurs that cannot\
    \ be\n   corrected by TCP, the host detecting the error gracefully closes the\n\
    \   TCP session.  There have been no application-level messages seen that\n  \
    \ were sent to notify the other host about the state of the host syslog\n   application.\n"
- title: 3.3.  Session Initiation
  contents:
  - "3.3.  Session Initiation\n   The TCP host acting as a syslog transport receiver\
    \ listens to a TCP\n   port.  The TCP transport sender initiates a TCP session\
    \ to the syslog\n   transport receiver as specified in [RFC0793].\n   This protocol\
    \ has no standardized port assignment.  In practice,\n   network administrators\
    \ generally choose something that they feel will\n   not conflict with anything\
    \ else active in their networks.  This has\n   most often been either TCP/514,\
    \ which is actually allocated to\n   another protocol, or some variant of adding\
    \ 514 to a multiple of\n   1000.  Please see Section 4 for more information.\n"
- title: 3.4.  Message Transfer
  contents:
  - "3.4.  Message Transfer\n   Syslog over TCP has been around for a number of years.\
    \  Just like\n   legacy syslog over UDP, different implementations exist.  The\
    \ older\n   method of non-transparent-framing has problems.  The newer method\
    \ of\n   octet-counting is reliable and has not been seen to cause problems\n\
    \   noted with the non-transparent-framing method.\n   In both of these methods,\
    \ during the message transfer phase, the\n   syslog transport sender sends a stream\
    \ of messages to the transport\n   receiver.  These are sent in sequence and one\
    \ message is encapsulated\n   inside each TCP frame.  Either of the TCP hosts\
    \ may initiate session\n   closure at any time as specified in Section 3.5 of\
    \ [RFC0793].  In\n   practice, this is often seen after a prolonged period of\
    \ inactivity.\n"
- title: 3.4.1.  Octet Counting
  contents:
  - "3.4.1.  Octet Counting\n   This framing allows for the transmission of all characters\
    \ inside a\n   syslog message and is similar to the method used in [RFC5425].\
    \  A\n   transport receiver uses the defined message length to delimit a\n   syslog\
    \ message.  As noted in [RFC3164], the upper limit for a legacy\n   syslog message\
    \ length is 1024 octets.  That length has been expanded\n   for standardized syslog.\n\
    \   It can be assumed that octet-counting framing is used if a syslog\n   frame\
    \ starts with a digit.\n   All syslog messages can be considered to be TCP \"\
    data\" as per the\n   Transmission Control Protocol [RFC0793].  The syslog message\
    \ stream\n   has the following ABNF [RFC5234] definition:\n       TCP-DATA = *SYSLOG-FRAME\n\
    \       SYSLOG-FRAME = MSG-LEN SP SYSLOG-MSG   ; Octet-counting\n            \
    \                                  ; method\n       MSG-LEN = NONZERO-DIGIT *DIGIT\n\
    \       NONZERO-DIGIT = %d49-57\n       SYSLOG-MSG is defined in the syslog protocol\
    \ [RFC5424] and may\n                  also be considered to be the payload in\
    \ [RFC3164]\n   MSG-LEN is the octet count of the SYSLOG-MSG in the SYSLOG-FRAME.\n"
- title: 3.4.2.  Non-Transparent-Framing
  contents:
  - "3.4.2.  Non-Transparent-Framing\n   The non-transparent-framing method inserts\
    \ a syslog message into a\n   frame and terminates it with a TRAILER character.\
    \  The TRAILER has\n   usually been a single character and most often is ASCII\
    \ LF (%d10).\n   However, other characters have also been seen, with ASCII NUL\
    \ (%d00)\n   being a prominent example.  Some devices have also been seen to emit\n\
    \   a two-character TRAILER, which is usually CR and LF.\n   The problem with\
    \ non-transparent-framing comes from the use of a\n   TRAILER character.  In that,\
    \ the traditional TRAILER character is not\n   escaped within the message, which\
    \ causes problems for the receiver.\n   For example, a message in the style of\
    \ [RFC3164] containing one or\n   more LF characters may be misinterpreted as\
    \ multiple messages by the\n   receiving syslog application.\n   The ABNF for\
    \ this is shown here:\n       TCP-DATA = *SYSLOG-FRAME\n       SYSLOG-FRAME =\
    \ SYSLOG-MSG TRAILER  ; non-transparent-framing\n                            \
    \              ; method\n       TRAILER = LF / APP-DEFINED\n       APP-DEFINED\
    \ = 1*2OCTET\n       SYSLOG-MSG is defined in the syslog protocol [RFC5424] and\
    \ may\n                  also be considered to be the payload in [RFC3164]\n \
    \  A transport receiver can assume that non-transparent-framing is used\n   if\
    \ a syslog frame starts with the ASCII character \"<\" (%d60).\n"
- title: 3.4.3.  Method Change
  contents:
  - "3.4.3.  Method Change\n   In legacy implementations, it has been observed that\
    \ the framing may\n   change on a frame-by-frame basis.  This is probably not\
    \ a good idea,\n   but it's been seen.\n"
- title: 3.5.  Session Closure
  contents:
  - "3.5.  Session Closure\n   The syslog session is closed when one of the TCP hosts\
    \ decides to do\n   so.  It then initiates a local TCP session closure.  Following\
    \ TCP\n   [RFC0793], it doesn't need to notify the remote TCP host of its\n  \
    \ intention to close the session, nor does it accept any messages that\n   are\
    \ still in transit.\n"
- title: 4.  Applicability Statement
  contents:
  - "4.  Applicability Statement\n   Again it must be emphasized that the Standards-Track\
    \ documents in the\n   syslog series recommend using the TLS transport [RFC5425]\
    \ to\n   transport syslog messages.  This document does not recommend that new\n\
    \   implementations or deployments use syslog over TCP except for the\n   explicit\
    \ purpose of interoperating with existing deployments.\n   One of the major problems\
    \ with interoperability with this protocol is\n   that there is no consistent\
    \ TCP port assigned.  Most of the\n   successful implementations have made the\
    \ selection of a port a user-\n   configurable option.  The most frequently observed\
    \ port for this has\n   been TCP/514, which is actually assigned to the Shell\
    \ protocol.\n   Operators must carefully select which port to use in their deployment\n\
    \   and be prepared to encounter different default port assignments in\n   implementations.\n\
    \   There are several advantages to using TCP: flow control, error\n   recovery,\
    \ and reliability, to name a few.  These reasons, and the\n   ease of programming,\
    \ have led people to use this transmission\n   protocol to transmit syslog.\n\
    \   One potential disadvantage is the buffering mechanism used by TCP.\n   Ordinarily,\
    \ TCP decides when enough data has been received from the\n   application to form\
    \ a segment for transmission.  This may be adjusted\n   through timers; but still,\
    \ some application data may wait in a buffer\n   for a relatively long time. \
    \ Syslog data is not normally time-\n   sensitive, but if this delay is a concern,\
    \ the syslog transport\n   sender may utilize the PUSH Flag as described in [RFC0793]\
    \ to have\n   the sending TCP immediately send all buffered data.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This protocol makes no meaningful provisions\
    \ for security.  It lacks\n   authentication, integrity checking, and privacy.\
    \  It makes no\n   provision for flow control or end-to-end confirmation of receipt,\n\
    \   relying instead on the underlying TCP implementations to approximate\n   these\
    \ functions.  It should not be used if deployment of [RFC5425] on\n   the systems\
    \ in question is feasible.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors wish to thank David Harrington, Tom Petch,\
    \ Richard\n   Graveman, and all other people who commented on various versions\
    \ of\n   this proposal.  We would also like to thank Peter Saint-Andre for\n \
    \  clarifying character encodings.\n   The authors would also like to thank Randy\
    \ Presuhn for being our\n   reviewer and document shepherd, and a special thanks\
    \ to Dan Romascanu\n   for his support and guidance.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC0793]   Postel, J., \"Transmission Control\
    \ Protocol\", STD 7,\n               RFC 793, September 1981.\n   [RFC3365]  \
    \ Schiller, J., \"Strong Security Requirements for Internet\n               Engineering\
    \ Task Force Standard Protocols\", BCP 61,\n               RFC 3365, August 2002.\n\
    \   [RFC5198]   Klensin, J. and M. Padlipsky, \"Unicode Format for Network\n \
    \              Interchange\", RFC 5198, March 2008.\n   [RFC5234]   Crocker, D.\
    \ and P. Overell, \"Augmented BNF for Syntax\n               Specifications: ABNF\"\
    , STD 68, RFC 5234, January 2008.\n   [RFC5424]   Gerhards, R., \"The Syslog Protocol\"\
    , RFC 5424,\n               March 2009.\n   [RFC5425]   Miao, F., Ma, Y., and\
    \ J. Salowey, \"Transport Layer\n               Security (TLS) Transport Mapping\
    \ for Syslog\", RFC 5425,\n               March 2009.\n   [US-ASCII]  ANSI, \"\
    Coded Character Set -- 7-bit American Standard\n               Code for Information\
    \ Interchange, ANSI X3.4-1986\", 1986.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC3164]   Lonvick, C., \"The BSD Syslog Protocol\"\
    , RFC 3164,\n               August 2001.\n   [RFC3629]   Yergeau, F., \"UTF-8,\
    \ a transformation format of ISO\n               10646\", STD 63, RFC 3629, November\
    \ 2003.\n   [RFC5426]   Okmianski, A., \"Transmission of Syslog Messages over\n\
    \               UDP\", RFC 5426, March 2009.\n   [UNICODE]   The Unicode Consortium.\
    \ The Unicode Standard, Version\n               6.0.0, (Mountain View, CA: The\
    \ Unicode Consortium,\n               2011. ISBN 978-1-936213-01-6),\n       \
    \        <http://www.unicode.org/versions/Unicode6.0.0/>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Rainer Gerhards\n   Adiscon GmbH\n   Mozartstrasse 21\n\
    \   Grossrinderfeld, BW  97950\n   Germany\n   EMail: rgerhards@adiscon.com\n\
    \   Chris Lonvick\n   Cisco Systems, Inc.\n   12515 Research Blvd.\n   Austin,\
    \ TX  78759\n   USA\n   EMail: clonvick@cisco.com\n"
