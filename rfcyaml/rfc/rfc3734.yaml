- title: __initial_text__
  contents:
  - '       Extensible Provisioning Protocol (EPP) Transport Over TCP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how an Extensible Provisioning Protocol\
    \ (EPP)\n   session is mapped onto a single Transmission Control Protocol (TCP)\n\
    \   connection.  This mapping requires use of the Transport Layer\n   Security\
    \ (TLS) protocol to protect information exchanged between an\n   EPP client and\
    \ an EPP server.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n       1.1.  Conventions Used In This Document. . . . . . .\
    \ . . . . .  2\n   2.  Session Management . . . . . . . . . . . . . . . . . .\
    \ . . . .  2\n   3.  Message Exchange . . . . . . . . . . . . . . . . . . . .\
    \ . . .  3\n   4.  Data Unit Format . . . . . . . . . . . . . . . . . . . . .\
    \ . .  5\n   5.  Transport Considerations . . . . . . . . . . . . . . . . . .\
    \ .  5\n   6.  Internationalization Considerations. . . . . . . . . . . . . .\
    \  6\n   7.  IANA Considerations. . . . . . . . . . . . . . . . . . . . . .  6\n\
    \   8.  Security Considerations. . . . . . . . . . . . . . . . . . . .  6\n  \
    \ 9.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . .  7\n   10.\
    \ References . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n       10.1.\
    \  Normative References. . . . . . . . . . . . . . . . . .  7\n       10.2.  Informative\
    \ References. . . . . . . . . . . . . . . . .  8\n   11. Author's Address . .\
    \ . . . . . . . . . . . . . . . . . . . . .  8\n   12. Full Copyright Statement\
    \ . . . . . . . . . . . . . . . . . . .  9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes how the Extensible Provisioning\
    \ Protocol\n   (EPP) is mapped onto a single client-server TCP connection.  Security\n\
    \   services beyond those defined in EPP are provided by the Transport\n   Layer\
    \ Security (TLS) Protocol [RFC2246].  EPP is described in\n   [RFC3730].  TCP\
    \ is described in [RFC793].\n"
- title: 1.1.  Conventions Used In This Document
  contents:
  - "1.1.  Conventions Used In This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  Session Management
  contents:
  - "2.  Session Management\n   Mapping EPP session management facilities onto the\
    \ TCP service is\n   straight forward.  An EPP session first requires creation\
    \ of a TCP\n   connection between two peers, one that initiates the connection\n\
    \   request and one that responds to the connection request.  The\n   initiating\
    \ peer is called the \"client\", and the responding peer is\n   called the \"\
    server\".  An EPP server MUST listen for TCP connection\n   requests on a standard\
    \ TCP port assigned by IANA.\n   The client MUST issue an active OPEN call, specifying\
    \ the TCP port\n   number on which the server is listening for EPP connection\
    \ attempts.\n   The server MUST respond with a passive OPEN call, which the client\n\
    \   MUST acknowledge to establish the connection.  The EPP server MUST\n   return\
    \ an EPP <greeting> to the client after the TCP session has been\n   established.\n\
    \   An EPP session is normally ended by the client issuing an EPP\n   <logout>\
    \ command.  A server receiving an EPP <logout> command MUST\n   end the EPP session\
    \ and close the TCP connection through an active\n   CLOSE call.  The client MUST\
    \ respond with a passive CLOSE call.\n   A client MAY end an EPP session by issuing\
    \ an active CLOSE call.  A\n   server SHOULD respond with a passive CLOSE call.\n\
    \   A server MAY limit the life span of an established TCP connection.\n   EPP\
    \ sessions that are inactive for more than a server-defined period\n   MAY be\
    \ ended by a server issuing an active CLOSE call.  A server MAY\n   also close\
    \ TCP connections that have been open and active for longer\n   than a server-defined\
    \ period.\n   Peers SHOULD respond to an active CLOSE call with a passive CLOSE\n\
    \   call.  The closing peer MAY issue an ABORT call if the responding\n   peer\
    \ does not respond to the active CLOSE call.\n"
- title: 3.  Message Exchange
  contents:
  - "3.  Message Exchange\n   With the exception of the EPP server greeting, EPP messages\
    \ are\n   initiated by the EPP client in the form of EPP commands.  An EPP\n \
    \  server MUST return an EPP response to an EPP command on the same TCP\n   connection\
    \ that carried the command.  If the TCP connection is closed\n   after a server\
    \ receives and successfully processes a command but\n   before the response can\
    \ be returned to the client, the server MAY\n   attempt to undo the effects of\
    \ the command to ensure a consistent\n   state between the client and the server.\
    \  EPP commands are\n   idempotent, so processing a command more than once produces\
    \ the same\n   net effect on the repository as successfully processing the command\n\
    \   once.\n   An EPP client streams EPP commands to an EPP server on an established\n\
    \   TCP connection.  A client MAY but SHOULD NOT establish multiple TCP\n   connections\
    \ to create multiple command exchange channels.  A server\n   SHOULD limit a client\
    \ to a maximum number of TCP connections based on\n   server capabilities and\
    \ operational load.\n   EPP describes client-server interaction as a command-response\n\
    \   exchange where the client sends one command to the server and the\n   server\
    \ returns one response to the client.  A client might be able to\n   realize a\
    \ slight performance gain by pipelining (sending more than\n   one command before\
    \ a response for the first command is received)\n   commands with TCP transport,\
    \ but this feature does not change the\n   basic single command, single response\
    \ operating mode of the core\n   protocol.  The amount of data that can be outstanding\
    \ is limited to\n   the current TCP window size.\n   Each EPP data unit MUST contain\
    \ a single EPP message.  Commands MUST\n   be processed independently and in the\
    \ same order as sent from the\n   client.\n   A server SHOULD impose a limit on\
    \ the amount of time required for a\n   client to issue a well-formed EPP command.\
    \  A server SHOULD end an\n   EPP session and close an open TCP connection if\
    \ a well-formed command\n   is not received within the time limit.\n   A general\
    \ state machine for an EPP server is described in section 2\n   of [RFC3730].\
    \  General client-server message exchange using TCP\n   transport is illustrated\
    \ in Figure 1.\n                       Client                  Server\n      \
    \            |                                     |\n                  |    \
    \            Connect              |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |             Send Greeting           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |             Send <login>            |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |             Send Response           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |             Send Command            |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |             Send Response           |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \     |            Send Command X           |\n                  | >>------------------------------->>\
    \ |\n                  |                                     |\n             \
    \     |    Send Command Y                   |\n                  | >>---------------+\
    \                  |\n                  |                  |                 \
    \ |\n                  |                  |                  |\n             \
    \     |            Send Response X          |\n                  | <<---------------(---------------<<\
    \ |\n                  |                  |                  |\n             \
    \     |                  |                  |\n                  |           \
    \       +--------------->> |\n                  |                            \
    \         |\n                  |            Send Response Y          |\n     \
    \             | <<-------------------------------<< |\n                  |   \
    \                                  |\n                  |             Send <logout>\
    \           |\n                  | >>------------------------------->> |\n   \
    \               |                                     |\n                  | \
    \    Send Response & Disconnect      |\n                  | <<-------------------------------<<\
    \ |\n                  |                                     |\n             \
    \  Figure 1: TCP Client-Server Message Exchange\n"
- title: 4.  Data Unit Format
  contents:
  - "4.  Data Unit Format\n   The data field of the TCP header MUST contain an EPP\
    \ data unit.  The\n   EPP data unit contains two fields: a 32-bit header that\
    \ describes the\n   total length of the data unit, and the EPP XML instance.\n\
    \   EPP Data Unit Format (one tick mark represents one bit position):\n      \
    \ 0                   1                   2                   3\n       0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                           Total Length                        |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                         EPP XML Instance                      |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+//-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Total Length (32 bits): The total length of the EPP data unit\n   measured\
    \ in octets in network (big endian) byte order.  The octets\n   contained in this\
    \ field MUST be included in the total length\n   calculation.\n   EPP XML Instance\
    \ (variable length): The EPP XML instance carried in\n   the data unit.\n"
- title: 5.  Transport Considerations
  contents:
  - "5.  Transport Considerations\n   Section 2.1 of the EPP core protocol specification\
    \ [RFC3730]\n   describes considerations to be addressed by protocol transport\n\
    \   mappings.  This mapping addresses each of the considerations using a\n   combination\
    \ of features described in this document and features\n   provided by TCP as follows:\n\
    \   -  TCP includes features to provide reliability, flow control,\n      ordered\
    \ delivery, and congestion control.  Section 1.5 of RFC 793\n      [RFC793] describes\
    \ these features in detail; congestion control\n      principles are described\
    \ further in RFC 2581 [RFC2581] and RFC\n      2914 [RFC2914].  TCP is a connection-oriented\
    \ protocol, and\n      Section 2 of this mapping describes how EPP sessions are\
    \ mapped to\n      TCP connections.\n   -  Sections 2 and 3 of this mapping describe\
    \ how the stateful nature\n      of EPP is preserved through managed sessions\
    \ and controlled\n      message exchanges.\n   -  Section 3 of this mapping notes\
    \ that command pipelining is\n      possible with TCP, though batch-oriented processing\
    \ (combining\n      multiple EPP commands in a single data unit) is not permitted.\n\
    \   -  Section 4 of this mapping describes features to frame data units\n    \
    \  by explicitly specifying the number of octets used to represent a\n      data\
    \ unit.\n"
- title: 6.  Internationalization Considerations
  contents:
  - "6.  Internationalization Considerations\n   This mapping does not introduce or\
    \ present any internationalization\n   or localization issues.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   System port number 700 has been assigned by the IANA\
    \ for mapping EPP\n   onto TCP.\n   User port number 3121 (which was used for\
    \ development and test\n   purposes) has been reclaimed by the IANA.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   EPP as-is provides only simple client authentication\
    \ services using\n   identifiers and plain text passwords.  A passive attack is\
    \ sufficient\n   to recover client identifiers and passwords, allowing trivial\
    \ command\n   forgery.  Protection against most other common attacks MUST be\n\
    \   provided by other layered protocols.\n   EPP provides protection against replay\
    \ attacks through command\n   idempotency.  A replayed or repeated command will\
    \ not change the\n   state of any object in any way, though denial of service\
    \ through\n   consumption of connection resources is a possibility.\n   When layered\
    \ over TCP, the Transport Layer Security (TLS) Protocol\n   described in [RFC2246]\
    \ MUST be used to prevent eavesdropping,\n   tampering, and command forgery attacks.\
    \  Implementations of TLS often\n   contain a US-exportable cryptographic mode\
    \ that SHOULD NOT be used to\n   protect EPP.  Clients and servers desiring high\
    \ security SHOULD\n   instead use TLS with cryptographic algorithms that are less\n\
    \   susceptible to compromise.\n   Mutual client and server authentication using\
    \ the TLS Handshake\n   Protocol is REQUIRED.  Signatures on the complete certificate\
    \ chain\n   for both client machine and server machine MUST be validated as part\n\
    \   of the TLS handshake.  Information included in the client and server\n   certificates,\
    \ such as validity periods and machine names, MUST also\n   be validated.  EPP\
    \ service MUST NOT be granted until successful\n   completion of a TLS handshake\
    \ and certificate validation, ensuring\n   that both the client machine and the\
    \ server machine have been\n   authenticated and cryptographic protections are\
    \ in place.\n   Authentication using the TLS Handshake Protocol confirms the identity\n\
    \   of the client and server machines.  EPP uses an additional client\n   identifier\
    \ and password to identify and authenticate the client's\n   user identity to\
    \ the server, supplementing the machine authentication\n   provided by TLS.  The\
    \ identity described in the client certificate\n   and the identity described\
    \ in the EPP client identifier can differ,\n   as a server can assign multiple\
    \ user identities for use from any\n   particular client machine.\n   EPP TCP\
    \ servers are vulnerable to common TCP denial of service\n   attacks including\
    \ TCP SYN flooding.  Servers SHOULD take steps to\n   minimize the impact of a\
    \ denial of service attack using combinations\n   of easily implemented solutions,\
    \ such as deployment of firewall\n   technology and border router filters to restrict\
    \ inbound server\n   access to known, trusted clients.\n"
- title: 9.  Acknowledgements
  contents:
  - "9.  Acknowledgements\n   This document was originally written as an individual\
    \ submission\n   Internet-Draft.  The provreg working group later adopted it as\
    \ a\n   working group document and provided many invaluable comments and\n   suggested\
    \ improvements.  The author wishes to acknowledge the efforts\n   of WG chairs\
    \ Edward Lewis and Jaap Akkerhuis for their process and\n   editorial contributions.\n\
    \   Specific suggestions that have been incorporated into this document\n   were\
    \ provided by Chris Bason, Randy Bush, Patrik Faltstrom, Ned\n   Freed, James\
    \ Gould, Dan Manley, and John Immordino.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC793]   Postel, J., \"Transmission Control\
    \ Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC2119]  Bradner,\
    \ S., \"Key Words for Use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119, March 1997.\n   [RFC2246]  Dierks, T. and C. Allen, \"The\
    \ TLS Protocol Version 1.0\",\n              RFC 2246, January 1999.\n   [RFC2581]\
    \  Allman, M., Paxson, V. and W. Stevens, \"TCP Congestion\n              Control\"\
    , RFC 2581, April 1999.\n   [RFC2914]  Floyd, S., \"Congestion Control Principles\"\
    , BCP 41, RFC\n              2914, September 2000.\n   [RFC3730]  Hollenbeck,\
    \ S., \"Extensible Provisioning Protocol (EPP)\",\n              RFC 3730, March\
    \ 2004.\n"
- title: 10.2. Informative References
  contents:
  - "10.2. Informative References\n   None\n"
- title: 11.  Author's Address
  contents:
  - "11.  Author's Address\n   Scott Hollenbeck\n   VeriSign Global Registry Services\n\
    \   21345 Ridgetop Circle\n   Dulles, VA 20166-6503\n   USA\n   EMail: shollenbeck@verisign.com\n"
- title: 12.  Full Copyright Statement
  contents:
  - "12.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\
    \  This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78 and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
