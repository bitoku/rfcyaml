for Encapsulating Security Payload (ESP) and Authentication Header (AH)
This document replaces RFC 7321, "Cryptographic Algorithm Implementation Requirements and Usage Guidance for Encapsulating Security Payload (ESP) and Authentication Header (AH)".
The goal of this document is to enable ESP and AH to benefit from cryptography that is up to date while making IPsec interoperable.
The Encapsulating Security Payload (ESP)
[RFC4303] and the Authentication Header (AH)
[RFC4302] are the mechanisms for applying cryptographic protection to data being sent over an IPsec Security Association (SA) [RFC4301].
This document provides guidance and recommendations so that ESP and AH can be used with cryptographic algorithms that are up to date.
The challenge of such documents is making sure that, over time, IPsec implementations can use secure and up to date cryptographic algorithms while keeping IPsec interoperable.
Updating Algorithm Implementation Requirements and Usage Guidance
The field of cryptography evolves continuously: new, stronger algorithms appear, and existing algorithms are found to be less secure than originally thought.
Therefore, algorithm implementation requirements and usage guidance need to be updated from time to time to reflect the new reality.
The choices for algorithms must be conservative to minimize the risk of algorithm compromise.
Algorithms need to be suitable for a wide variety of CPU architectures and device deployments ranging from high end bulk encryption devices to small, low power Internet of Things (IoT) devices.
The algorithm implementation requirements and usage guidance may need to change over time to adapt to the changing world.
For this reason, the selection of mandatory to implement algorithms was removed from the main Internet Key Exchange Protocol Version 2
(IKEv2) specification [RFC7296] and placed in a separate document.
The mandatory to implement algorithm of tomorrow should already be available in most implementations of AH/ESP by the time it is made mandatory.
This document attempts to identify and introduce those algorithms for future mandatory to implement status.
There is no guarantee that the algorithms in use today may become mandatory in the future.
Published algorithms are continuously subjected to cryptographic attack and may become too weak or could become completely broken before this document is updated.
This document only provides recommendations for the mandatory to  implement algorithms and "too weak" algorithms that are recommended not to be implemented.
As a result, any algorithm listed at the IPsec IANA registry that is not mentioned in this document MAY be implemented.
It is expected that this document will be updated over time and future versions will only mention algorithms that have evolved in status.
For clarification, when an algorithm has been mentioned in [RFC7321], this document states explicitly the update of the status.
Although this document updates the algorithms to keep the AH/ESP communication secure over time, it also aims at providing recommendations so that AH/ESP implementations remain interoperable.
AH/ESP interoperability is addressed by an incremental introduction or deprecation of algorithms.
In addition, this document also considers the new use cases for AH/ESP deployment, such as IoT. It is expected that deprecation of an algorithm be performed gradually.
This provides time for various implementations to update their implemented algorithms while remaining interoperable.
Unless there are strong security reasons, an algorithm is expected to be downgraded from MUST to MUST  or SHOULD, instead of MUST NOT (see Section 2).
Similarly, an algorithm that has not been mentioned as mandatory to implement is expected to be introduced with a SHOULD instead of a MUST.
The current trend toward IoT and its adoption of AH/ESP requires this specific use case to be taken into account as well.
IoT devices are resource constrained devices, and their choice of algorithms is motivated by minimizing the footprint of the code, the computation effort, and the size of the messages to send.
This document indicates "(IoT)" when a specified algorithm is specifically listed for IoT devices.
Requirement levels that are marked as "IoT" apply to IoT devices and to server side implementations that might presumably need to interoperate with them, including any general  purpose VPN gateways.
The recommendations of this document mostly target AH/ESP implementers as implementations need to meet both high security expectations as well as high interoperability between various vendors and with different versions.
Interoperability requires a smooth move to more secure cipher suites.
This may differ from a user point of view that may deploy and configure AH/ESP with only the safest cipher suite.
This document does not give any recommendations for the use of algorithms, it only gives recommendations for implementations.
The use of algorithms by a specific user is dictated by their own security policy requirements, which are outside the scope of this document.
The algorithms considered here are listed by IANA as part of the IKEv2 parameters.
IKEv1 is out of scope of this document.
IKEv1 is deprecated; the recommendations of this document must not be considered for IKEv1, nor may IKEv1 parameters be considered by this document.
The IANA registry for "Internet Key Exchange Version 2 (IKEv2) Parameters" contains some entries that are not for use with ESP or AH.
This document does not modify the status of those algorithms.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
We define some additional terms here: SHOULD    This term means the same as SHOULD.
However, it is likely that an algorithm marked as SHOULD  will be promoted at some future time to be a MUST.
This term means the same as SHOULD.
However, an algorithm marked as SHOULD  may be deprecated to a MAY in a future version of this document.
This term means the same as MUST.
However, we expect at some point that this algorithm will no longer be a MUST in a future document.
Although its status will be determined at a later time, it is reasonable to expect that if a future revision of a document alters the status of a MUST  algorithm, it will remain at least a SHOULD or a SHOULD  level.
Manual Keying Manual keying SHOULD NOT be used, as it is inherently dangerous.
Without any secure keying protocol, such as IKE, IPsec does not offer Perfect Forward Secrecy (PFS) protection; there is no entity to ensure the refreshing of session keys, the tracking of Security Parameter Index (SPI) uniqueness, and the single use of nonces, Initialization Vectors (IVs), and counters.
This document was written for deploying ESP/AH using IKE [RFC7296] and assumes that keying happens using IKEv2 or higher.
If manual keying is used regardless, Counter Mode algorithms such as ENCR AES CTR, ENCR AES CCM, ENCR AES GCM, and ENCR
POLY1305 MUST NOT be used, as it is incompatible with a secure and persistent handling of the counter (as explained in the Security Considerations section of [RFC3686]).
This particularly applies to IoT devices that have no state across reboots.
At the time of writing, ENCR AES CBC is the only mandatory to implement encryption algorithm suitable for manual keying.
Encryption Must Be Authenticated Encryption without authentication is not effective and MUST NOT be used.
IPsec offers three ways to provide both encryption and authentication:  ESP with an Authenticated Encryption with Associated Data (AEAD) cipher  ESP with a non AEAD cipher   authentication  ESP with a non AEAD cipher   AH with authentication
The fastest and most modern method is to use ESP with a combined mode cipher, such as an AEAD cipher, that handles encryption/decryption and authentication in a single step.
In this case, the AEAD cipher is set as the encryption algorithm, and the authentication algorithm is set to none.
Examples of this are ENCR AES GCM 16 and ENCR
A more traditional approach is to use ESP with an encryption and an authentication algorithm.
This approach is slower, as the data has to be processed twice: once for encryption/decryption and once for authentication.
An example of this is
ENCR AES CBC combined with AUTH HMAC SHA2 512 256.
The last method that can be used is ESP AH.
This method is NOT RECOMMENDED.
It is the slowest method and also takes up more octets due to the double header of ESP AH.
This results in a smaller effective MTU for the encrypted data.
With this method, ESP is only used for confidentiality without an authentication algorithm, and a second IPsec protocol of type AH is used for authentication.
An example of this is ESP with ENCR AES CBC with AH with AUTH HMAC SHA2 512 256.
This requirement level is for 128 bit and 256 bit keys.
192 bit keys remain at the MAY level.
This requirement is for interoperability with IoT.
Only 128 bit keys are at the given level.
IPsec sessions may have very long lifetime and carry multiple packets, so there is a need to move to 256 bit keys in the long term.
For that purpose, the requirement level for 128 bit keys and 256 bit keys is MUST (when applicable).
In that sense, the status for 256 bit keys has been raised from MAY in [RFC7321] to MUST.
IANA has allocated codes for cryptographic algorithms that have not been specified by the IETF.
Such algorithms are noted as UNSPECIFIED.
Usually, the use of these algorithms is limited to specific cases, and the absence of specification makes interoperability difficult for IPsec communications.
These algorithms were not mentioned in [RFC7321], and this document clarifies that such algorithms MUST NOT be implemented for IPsec communications.
Similarly, IANA also allocated code points for algorithms that are not expected to be used to secure IPsec communications.
Such algorithms are noted as non IPsec.
As a result, these algorithms MUST NOT be implemented.
Various ciphers that are older, not well tested, and never widely implemented have been changed to MUST NOT.
ENCR 3DES status has been downgraded from MAY in [RFC7321] to SHOULD NOT.
CHACHA20 POLY1305 is a more modern approach and alternative for ENCR 3DES than ENCR AES CBC, and so it is expected to be favored to replace ENCR 3DES.
ENCR BLOWFISH has been downgraded to MUST NOT as it has been deprecated for years by TWOFISH, which is not standardized for ESP and therefore not listed in this document.
Some implementations support TWOFISH using a private range number.
ENCR NULL status was set to MUST in [RFC7321] and remains a MUST to enable the use of ESP with only authentication, which is preferred over AH due to NAT traversal.
ENCR NULL is expected to remain MUST by protocol requirements.
ENCR AES CBC status remains at MUST.
AES CBC MUST be implemented in order to enable interoperability between implementations that followed [RFC7321].
However, there is a trend for the industry to move to AEAD encryption, and the overhead of ENCR AES CBC remains quite large, so it is expected to be replaced by AEAD algorithms in the long term.
ENCR AES CCM 8 status was set to MAY in [RFC7321] and has been raised from MAY to SHOULD in order to interact with IoT devices.
As this case is not a general use case for VPNs, its status is expected to remain as SHOULD.
AES GCM 16 status has been updated from SHOULD  to MUST in order to favor the use of authenticated encryption and AEAD algorithms.
ENCR AES GCM 16 has been widely implemented for ESP due to its increased performance and key longevity compared to ENCR AES CBC.
POLY1305 was not ready to be considered at the time of [RFC7321].
It has been recommended by the Crypto Forum Research Group (CFRG) and others as an alternative to AES CBC and AES GCM.
At the time of writing, there are not enough ESP implementations of ENCR CHACHA20 POLY1305 to be able to introduce it at the SHOULD  level.
Its status has been set to SHOULD and is expected to become MUST in the long term.
ESP and AH Authentication Algorithms Authentication algorithm recommendations in this section are targeting two types of communications:  Authenticated only communications without encryption, such as ESP with NULL encryption or AH communications.
Communications that are encrypted with a non AEAD algorithm that MUST be combined with an authentication algorithm.
This requirement is for interoperability with IoT. AUTH NONE has been downgraded from MAY in [RFC7321] to MUST NOT.
The only case where AUTH NONE is acceptable is when authenticated encryption algorithms are selected from Section 5.
In all other cases, AUTH NONE MUST NOT be selected.
As ESP and AH both provide authentication, one may be tempted to combine these protocols to provide authentication.
As mentioned by [RFC7321], it is NOT RECOMMENDED to use ESP with NULL authentication (with non  authenticated encryption) in conjunction with AH; some configurations of this combination of services have been shown to be insecure [PD10].
In addition, AUTH NONE authentication cannot be combined with ESP NULL encryption.
AUTH HMAC MD5 96 and AUTH KPDK MD5 were not mentioned in [RFC7321].
As MD5 is known to be vulnerable to collisions, these algorithms MUST NOT be used.
AUTH HMAC SHA1 96 has been downgraded from MUST in [RFC7321] to MUST  as there is an industry wide trend to deprecate its usage.
AUTH DES MAC was not mentioned in [RFC7321].
As DES is known to be vulnerable, it MUST NOT be used.
AES XCBC 96 is set as SHOULD only in the scope of IoT, as IoT deployments tend to prefer AES based Hashed Message Authentication Code (HMAC) functions in order to avoid implementing SHA2.
For the wide VPN deployment, as it has not been widely adopted, it has been downgraded from SHOULD to MAY.
AES 128 GMAC status has been downgraded from SHOULD  to MAY.
Along with AUTH AES 192 GMAC and AUTH AES 256 GMAC, these algorithms should only be used for AH and not for ESP.
If using ENCR NULL, AUTH HMAC SHA2 256 128 is recommended for integrity.
If using AES  GMAC in ESP without authentication, ENCR NULL AUTH AES GMAC is recommended.
Therefore, these algorithms are kept at MAY.
AUTH HMAC SHA2 256 128 was not mentioned in [RFC7321], as no SHA2 based authentication was mentioned.
MUST be implemented in order to replace AUTH HMAC SHA1 96.
Note that due to a long standing common implementation bug of this algorithm that truncates the hash at 96 bits instead of 128 bits, it is recommended that implementations prefer AUTH HMAC SHA2 512 256 over AUTH HMAC
SHA2 256 128 if they implement AUTH HMAC
512 256 SHOULD be implemented as a future replacement of AUTH HMAC SHA2 256 128 or when stronger security is required.
This value has been preferred to AUTH HMAC SHA2 384, as the additional overhead of AUTH HMAC SHA2 512 is negligible.
Compression was not mentioned in [RFC7321].
As it is not widely deployed, it remains optional and at the MAY level.
Summary of Changes from RFC 7321
The following table summarizes the changes from RFC 7321.
This document does not require any IANA actions.
The security of a system that uses cryptography depends on both the strength of the cryptographic algorithms chosen and the strength of the keys used with those algorithms.
The security also depends on the engineering and administration of the protocol used by the system to ensure that there are no non cryptographic ways to bypass the security of the overall system.
This document concerns itself with the selection of cryptographic algorithms for the use of ESP and AH, specifically with the selection of mandatory to implement algorithms.
The algorithms identified in this document as "MUST implement" or "SHOULD implement" are not known to be broken at the current time, and cryptographic research to date leads us to believe that they will likely remain secure into the foreseeable future.
However, this is not necessarily forever.
Therefore, we expect that revisions of that document will be issued from time to time to reflect the current best practice in this area.
