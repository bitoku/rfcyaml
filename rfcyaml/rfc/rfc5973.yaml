- title: __initial_text__
  contents:
  - '           NAT/Firewall NSIS Signaling Layer Protocol (NSLP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo defines the NSIS Signaling Layer Protocol (NSLP) for\n\
    \   Network Address Translators (NATs) and firewalls.  This NSLP allows\n   hosts\
    \ to signal on the data path for NATs and firewalls to be\n   configured according\
    \ to the needs of the application data flows.  For\n   instance, it enables hosts\
    \ behind NATs to obtain a publicly reachable\n   address and hosts behind firewalls\
    \ to receive data traffic.  The\n   overall architecture is given by the framework\
    \ and requirements\n   defined by the Next Steps in Signaling (NSIS) working group.\
    \  The\n   network scenarios, the protocol itself, and examples for path-coupled\n\
    \   signaling are given in this memo.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5973.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  5\n     1.1.  Scope and Background . . . . . . . . . . . . . .\
    \ . . . . .  5\n     1.2.  Terminology and Abbreviations  . . . . . . . . . .\
    \ . . . .  8\n     1.3.  Notes on the Experimental Status . . . . . . . . . .\
    \ . . . 10\n     1.4.  Middleboxes  . . . . . . . . . . . . . . . . . . . . .\
    \ . . 10\n     1.5.  General Scenario for NATFW Traversal . . . . . . . . . .\
    \ . 11\n   2.  Network Deployment Scenarios Using the NATFW NSLP  . . . . . .\
    \ 13\n     2.1.  Firewall Traversal . . . . . . . . . . . . . . . . . . . . 13\n\
    \     2.2.  NAT with Two Private Networks  . . . . . . . . . . . . . . 14\n  \
    \   2.3.  NAT with Private Network on Sender Side  . . . . . . . . . 15\n    \
    \ 2.4.  NAT with Private Network on Receiver Side Scenario . . . . 15\n     2.5.\
    \  Both End Hosts behind Twice-NATs . . . . . . . . . . . . . 16\n     2.6.  Both\
    \ End Hosts behind Same NAT . . . . . . . . . . . . . . 17\n     2.7.  Multihomed\
    \ Network with NAT  . . . . . . . . . . . . . . . 18\n     2.8.  Multihomed Network\
    \ with Firewall . . . . . . . . . . . . . 18\n   3.  Protocol Description . .\
    \ . . . . . . . . . . . . . . . . . . . 19\n     3.1.  Policy Rules . . . . .\
    \ . . . . . . . . . . . . . . . . . . 19\n     3.2.  Basic Protocol Overview \
    \ . . . . . . . . . . . . . . . . . 20\n       3.2.1.  Signaling for Outbound\
    \ Traffic . . . . . . . . . . . . 20\n       3.2.2.  Signaling for Inbound Traffic\
    \  . . . . . . . . . . . . 22\n       3.2.3.  Signaling for Proxy Mode . . . .\
    \ . . . . . . . . . . . 23\n       3.2.4.  Blocking Traffic . . . . . . . . .\
    \ . . . . . . . . . . 24\n       3.2.5.  State and Error Maintenance  . . . .\
    \ . . . . . . . . . 24\n       3.2.6.  Message Types  . . . . . . . . . . . .\
    \ . . . . . . . . 25\n       3.2.7.  Classification of RESPONSE Messages  . .\
    \ . . . . . . . 25\n       3.2.8.  NATFW NSLP Signaling Sessions  . . . . . .\
    \ . . . . . . 26\n     3.3.  Basic Message Processing . . . . . . . . . . . .\
    \ . . . . . 27\n     3.4.  Calculation of Signaling Session Lifetime  . . . .\
    \ . . . . 27\n     3.5.  Message Sequencing . . . . . . . . . . . . . . . . .\
    \ . . . 31\n     3.6.  Authentication, Authorization, and Policy Decisions  .\
    \ . . 32\n     3.7.  Protocol Operations  . . . . . . . . . . . . . . . . . .\
    \ . 32\n       3.7.1.  Creating Signaling Sessions  . . . . . . . . . . . . .\
    \ 32\n       3.7.2.  Reserving External Addresses . . . . . . . . . . . . . 35\n\
    \       3.7.3.  NATFW NSLP Signaling Session Refresh . . . . . . . . . 43\n  \
    \     3.7.4.  Deleting Signaling Sessions  . . . . . . . . . . . . . 45\n    \
    \   3.7.5.  Reporting Asynchronous Events  . . . . . . . . . . . . 46\n      \
    \ 3.7.6.  Proxy Mode of Operation  . . . . . . . . . . . . . . . 48\n     3.8.\
    \  Demultiplexing at NATs . . . . . . . . . . . . . . . . . . 53\n     3.9.  Reacting\
    \ to Route Changes  . . . . . . . . . . . . . . . . 54\n     3.10. Updating Policy\
    \ Rules  . . . . . . . . . . . . . . . . . . 55\n   4.  NATFW NSLP Message Components\
    \  . . . . . . . . . . . . . . . . 55\n     4.1.  NSLP Header  . . . . . . . .\
    \ . . . . . . . . . . . . . . . 56\n     4.2.  NSLP Objects . . . . . . . . .\
    \ . . . . . . . . . . . . . . 57\n       4.2.1.  Signaling Session Lifetime Object\
    \  . . . . . . . . . . 58\n       4.2.2.  External Address Object  . . . . . .\
    \ . . . . . . . . . 58\n       4.2.3.  External Binding Address Object  . . .\
    \ . . . . . . . . 59\n       4.2.4.  Extended Flow Information Object . . . .\
    \ . . . . . . . 59\n       4.2.5.  Information Code Object  . . . . . . . . .\
    \ . . . . . . 60\n       4.2.6.  Nonce Object . . . . . . . . . . . . . . . .\
    \ . . . . . 64\n       4.2.7.  Message Sequence Number Object . . . . . . . .\
    \ . . . . 64\n       4.2.8.  Data Terminal Information Object . . . . . . . .\
    \ . . . 64\n       4.2.9.  ICMP Types Object  . . . . . . . . . . . . . . . .\
    \ . . 66\n     4.3.  Message Formats  . . . . . . . . . . . . . . . . . . . .\
    \ . 67\n       4.3.1.  CREATE . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 67\n       4.3.2.  EXTERNAL . . . . . . . . . . . . . . . . . . . . . . . 68\n\
    \       4.3.3.  RESPONSE . . . . . . . . . . . . . . . . . . . . . . . 68\n  \
    \     4.3.4.  NOTIFY . . . . . . . . . . . . . . . . . . . . . . . . 69\n   5.\
    \  Security Considerations  . . . . . . . . . . . . . . . . . . . 69\n     5.1.\
    \  Authorization Framework  . . . . . . . . . . . . . . . . . 70\n       5.1.1.\
    \  Peer-to-Peer Relationship  . . . . . . . . . . . . . . 70\n       5.1.2.  Intra-Domain\
    \ Relationship  . . . . . . . . . . . . . . 71\n       5.1.3.  End-to-Middle Relationship\
    \ . . . . . . . . . . . . . . 72\n     5.2.  Security Framework for the NAT/Firewall\
    \ NSLP . . . . . . . 73\n       5.2.1.  Security Protection between Neighboring\
    \ NATFW NSLP\n               Nodes  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . 73\n       5.2.2.  Security Protection between Non-Neighboring NATFW\n\
    \               NSLP Nodes . . . . . . . . . . . . . . . . . . . . . . 74\n  \
    \   5.3.  Implementation of NATFW NSLP Security  . . . . . . . . . . 75\n   6.\
    \  IAB Considerations on UNSAF  . . . . . . . . . . . . . . . . . 76\n   7.  IANA\
    \ Considerations  . . . . . . . . . . . . . . . . . . . . . 77\n     7.1.  NATFW\
    \ NSLP Message Type Registry . . . . . . . . . . . . . 77\n     7.2.  NATFW NSLP\
    \ Header Flag Registry  . . . . . . . . . . . . . 77\n     7.3.  NSLP Message\
    \ Object Registry . . . . . . . . . . . . . . . 78\n     7.4.  NSLP Response Code\
    \ Registry  . . . . . . . . . . . . . . . 78\n     7.5.  NSLP IDs and Router Alert\
    \ Option Values  . . . . . . . . . 78\n   8.  Acknowledgments  . . . . . . . .\
    \ . . . . . . . . . . . . . . . 78\n   9.  References . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . . 79\n     9.1.  Normative References . . . . . .\
    \ . . . . . . . . . . . . . 79\n     9.2.  Informative References . . . . . .\
    \ . . . . . . . . . . . . 79\n   Appendix A.  Selecting Signaling Destination\
    \ Addresses for\n                EXTERNAL  . . . . . . . . . . . . . . . . . .\
    \ . . . . 81\n   Appendix B.  Usage of External Binding Addresses . . . . . .\
    \ . . . 82\n   Appendix C.  Applicability Statement on Data Receivers behind\n\
    \                Firewalls . . . . . . . . . . . . . . . . . . . . . . 83\n  \
    \ Appendix D.  Firewall and NAT Resources  . . . . . . . . . . . . . 84\n    \
    \ D.1.  Wildcarding of Policy Rules  . . . . . . . . . . . . . . . 84\n     D.2.\
    \  Mapping to Firewall Rules  . . . . . . . . . . . . . . . . 84\n     D.3.  Mapping\
    \ to NAT Bindings  . . . . . . . . . . . . . . . . . 85\n     D.4.  NSLP Handling\
    \ of Twice-NAT . . . . . . . . . . . . . . . . 85\n   Appendix E.  Example for\
    \ Receiver Proxy Case . . . . . . . . . . . 86\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Scope and Background
  contents:
  - "1.1.  Scope and Background\n   Firewalls and Network Address Translators (NATs)\
    \ have both been used\n   throughout the Internet for many years, and they will\
    \ remain present\n   for the foreseeable future.  Firewalls are used to protect\
    \ networks\n   against certain types of attacks from internal networks and the\n\
    \   Internet, whereas NATs provide a virtual extension of the IP address\n   space.\
    \  Both types of devices may be obstacles to some applications,\n   since they\
    \ only allow traffic created by a limited set of\n   applications to traverse\
    \ them, typically those that use protocols\n   with relatively predetermined and\
    \ static properties (e.g., most HTTP\n   traffic, and other client/server applications).\
    \  Other applications,\n   such as IP telephony and most other peer-to-peer applications,\
    \ which\n   have more dynamic properties, create traffic that is unable to\n \
    \  traverse NATs and firewalls without assistance.  In practice, the\n   traffic\
    \ of many applications cannot traverse autonomous firewalls or\n   NATs, even\
    \ when they have additional functionality that attempts to\n   restore the transparency\
    \ of the network.\n   Several solutions to enable applications to traverse such\
    \ entities\n   have been proposed and are currently in use.  Typically, application-\n\
    \   level gateways (ALGs) have been integrated with the firewall or NAT\n   to\
    \ configure the firewall or NAT dynamically.  Another approach is\n   middlebox\
    \ communication (MIDCOM).  In this approach, ALGs external to\n   the firewall\
    \ or NAT configure the corresponding entity via the MIDCOM\n   protocol [RFC3303].\
    \  Several other work-around solutions are\n   available, such as Session Traversal\
    \ Utilities for NAT (STUN)\n   [RFC5389].  However, all of these approaches introduce\
    \ other problems\n   that are generally hard to solve, such as dependencies on\
    \ the type of\n   NAT implementation (full-cone, symmetric, etc.), or dependencies\
    \ on\n   certain network topologies.\n   NAT and firewall (NATFW) signaling shares\
    \ a property with Quality-of-\n   Service (QoS) signaling -- each must reach any\
    \ device that is on the\n   data path and is involved in (respectively) NATFW\
    \ or QoS treatment of\n   data packets.  This means that for both NATFW and QoS\
    \ it is\n   convenient if signaling travels path-coupled, i.e., the signaling\n\
    \   messages follow exactly the same path that the data packets take.\n   The\
    \ Resource Reservation Protocol (RSVP) [RFC2205] is an example of a\n   current\
    \ QoS signaling protocol that is path-coupled. [rsvp-firewall]\n   proposes the\
    \ use of RSVP as a firewall signaling protocol but does\n   not include NATs.\n\
    \   This memo defines a path-coupled signaling protocol for NAT and\n   firewall\
    \ configuration within the framework of NSIS, called the NATFW\n   NSIS Signaling\
    \ Layer Protocol (NSLP).  The general requirements for\n   NSIS are defined in\
    \ [RFC3726] and the general framework of NSIS is\n   outlined in [RFC4080].  It\
    \ introduces the split between an NSIS\n   transport layer and an NSIS signaling\
    \ layer.  The transport of NSLP\n   messages is handled by an NSIS Network Transport\
    \ Layer Protocol\n   (NTLP, with General Internet Signaling Transport (GIST) [RFC5971]\n\
    \   being the implementation of the abstract NTLP).  The signaling logic\n   for\
    \ QoS and NATFW signaling is implemented in the different NSLPs.\n   The QoS NSLP\
    \ is defined in [RFC5974].\n   The NATFW NSLP is designed to request the dynamic\
    \ configuration of\n   NATs and/or firewalls along the data path.  Dynamic configuration\n\
    \   includes enabling data flows to traverse these devices without being\n   obstructed,\
    \ as well as blocking of particular data flows at inbound\n   firewalls.  Enabling\
    \ data flows requires the loading of firewall\n   rules with an action that allows\
    \ the data flow packets to be\n   forwarded and NAT bindings to be created.  The\
    \ blocking of data flows\n   requires the loading of firewall rules with an action\
    \ that will deny\n   forwarding of the data flow packets.  A simplified example\
    \ for\n   enabling data flows: a source host sends a NATFW NSLP signaling\n  \
    \ message towards its data destination.  This message follows the data\n   path.\
    \  Every NATFW NSLP-enabled NAT/firewall along the data path\n   intercepts this\
    \ message, processes it, and configures itself\n   accordingly.  Thereafter, the\
    \ actual data flow can traverse all these\n   configured firewalls/NATs.\n   It\
    \ is necessary to distinguish between two different basic scenarios\n   when operating\
    \ the NATFW NSLP, independent of the type of the\n   middleboxes to be configured.\n\
    \   1.  Both the data sender and data receiver are NSIS NATFW NSLP aware.\n  \
    \     This includes the cases in which the data sender is logically\n       decomposed\
    \ from the initiator of the NSIS signaling (the so-\n       called NSIS initiator)\
    \ or the data receiver logically decomposed\n       from the receiver of the NSIS\
    \ signaling (the so-called NSIS\n       receiver), but both sides support NSIS.\
    \  This scenario assumes\n       deployment of NSIS all over the Internet, or\
    \ at least at all NATs\n       and firewalls.  This scenario is used as a base\
    \ assumption, if\n       not otherwise noted.\n   2.  Only one end host or region\
    \ of the network is NSIS NATFW NSLP\n       aware, either the data receiver or\
    \ data sender.  This scenario is\n       referred to as proxy mode.\n   The NATFW\
    \ NSLP has two basic signaling messages that are sufficient\n   to cope with the\
    \ various possible scenarios likely to be encountered\n   before and after widespread\
    \ deployment of NSIS:\n      CREATE message: Sent by the data sender for configuring\
    \ a path\n      outbound from a data sender to a data receiver.\n      EXTERNAL\
    \ message: Used by a data receiver to locate inbound NATs/\n      firewalls and\
    \ prime them to expect inbound signaling and used at\n      NATs to pre-allocate\
    \ a public address.  This is used for data\n      receivers behind these devices\
    \ to enable their reachability.\n   CREATE and EXTERNAL messages are sent by the\
    \ NSIS initiator (NI)\n   towards the NSIS responder (NR).  Both types of message\
    \ are\n   acknowledged by a subsequent RESPONSE message.  This RESPONSE message\n\
    \   is generated by the NR if the requested configuration can be\n   established;\
    \ otherwise, the NR or any of the NSLP forwarders (NFs)\n   can also generate\
    \ such a message if an error occurs.  NFs and the NR\n   can also generate asynchronous\
    \ messages to notify the NI, the so-\n   called NOTIFY messages.\n   If the data\
    \ receiver resides in a private addressing realm or behind\n   a firewall, and\
    \ it needs to preconfigure the edge-NAT/edge-firewall\n   to provide a (publicly)\
    \ reachable address for use by the data sender,\n   a combination of EXTERNAL\
    \ and CREATE messages is used.\n   During the introduction of NSIS, it is likely\
    \ that one or the other\n   of the data sender and receiver will not be NSIS aware.\
    \  In these\n   cases, the NATFW NSLP can utilize NSIS-aware middleboxes on the\
    \ path\n   between the data sender and data receiver to provide proxy NATFW NSLP\n\
    \   services (i.e., the proxy mode).  Typically, these boxes will be at\n   the\
    \ boundaries of the realms in which the end hosts are located.\n   The CREATE\
    \ and EXTERNAL messages create NATFW NSLP and NTLP state in\n   NSIS entities.\
    \  NTLP state allows signaling messages to travel in the\n   forward (outbound)\
    \ and the reverse (inbound) direction along the path\n   between a NAT/firewall\
    \ NSLP sender and a corresponding receiver.\n   This state is managed using a\
    \ soft-state mechanism, i.e., it expires\n   unless it is refreshed from time\
    \ to time.  The NAT bindings and\n   firewall rules being installed during the\
    \ state setup are bound to\n   the particular signaling session.  However, the\
    \ exact local\n   implementation of the NAT bindings and firewall rules are NAT/\n\
    \   firewall specific and it is out of the scope of this memo.\n   This memo is\
    \ structured as follows.  Section 2 describes the network\n   environment for\
    \ NATFW NSLP signaling.  Section 3 defines the NATFW\n   signaling protocol and\
    \ Section 4 defines the message components and\n   the overall messages used in\
    \ the protocol.  The remaining parts of\n   the main body of the document cover\
    \ security considerations\n   Section 5, IAB considerations on UNilateral Self-Address\
    \ Fixing\n   (UNSAF) [RFC3424] in Section 6, and IANA considerations in Section\
    \ 7.\n   Please note that readers familiar with firewalls and NATs and their\n\
    \   possible location within networks can safely skip Section 2.\n"
- title: 1.2.  Terminology and Abbreviations
  contents:
  - "1.2.  Terminology and Abbreviations\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   This document uses a number of terms defined in [RFC3726]\
    \ and\n   [RFC4080].  The following additional terms are used:\n   o  Policy rule:\
    \ A policy rule is \"a basic building block of a policy-\n      based system.\
    \  It is the binding of a set of actions to a set of\n      conditions - where\
    \ the conditions are evaluated to determine\n      whether the actions are performed\"\
    \ [RFC3198].  In the context of\n      NSIS NATFW NSLP, the conditions are the\
    \ specification of a set of\n      packets to which the rule is applied.  The\
    \ set of actions always\n      contains just a single element per rule, and is\
    \ limited to either\n      action \"deny\" or action \"allow\".\n   o  Reserved\
    \ policy rule: A policy rule stored at NATs or firewalls\n      for activation\
    \ by a later, different signaling exchange.  This\n      type of policy rule is\
    \ kept in the NATFW NSLP and is not loaded\n      into the firewall or NAT engine,\
    \ i.e., it does not affect the data\n      flow handling.\n   o  Installed policy\
    \ rule: A policy rule in operation at NATs or\n      firewalls.  This type of\
    \ rule is kept in the NATFW NSLP and is\n      loaded into the firewall or NAT\
    \ engine, i.e., it is affecting the\n      data flow.\n   o  Remembered policy\
    \ rule: A policy rule stored at NATs and firewalls\n      for immediate use, as\
    \ soon as the signaling exchange is\n      successfully completed.\n   o  Firewall:\
    \ A packet filtering device that matches packets against a\n      set of policy\
    \ rules and applies the actions.\n   o  Network Address Translator: Network Address\
    \ Translation is a\n      method by which IP addresses are mapped from one IP\
    \ address realm\n      to another, in an attempt to provide transparent routing\
    \ between\n      hosts (see [RFC2663]).  Network Address Translators are devices\n\
    \      that perform this work by modifying packets passing through them.\n   o\
    \  Data Receiver (DR): The node in the network that is receiving the\n      data\
    \ packets of a flow.\n   o  Data Sender (DS): The node in the network that is\
    \ sending the data\n      packets of a flow.\n   o  NATFW NSLP peer (or simply\
    \ \"peer\"): An NSIS NATFW NSLP node with\n      which an NTLP adjacency has been\
    \ created as defined in [RFC5971].\n   o  NATFW NSLP signaling session (or simply\
    \ \"signaling session\"): A\n      signaling session defines an association between\
    \ the NI, NFs, and\n      the NR related to a data flow.  All the NATFW NSLP peers\
    \ on the\n      path, including the NI and the NR, use the same identifier to\n\
    \      refer to the state stored for the association.  The same NI and NR\n  \
    \    may have more than one signaling session active at any time.  The\n     \
    \ state for the NATFW NSLP consists of NSLP state and associated\n      policy\
    \ rules at a middlebox.\n   o  Edge-NAT: An edge-NAT is a NAT device with a globally\
    \ routable IP\n      address that is reachable from the public Internet.\n   o\
    \  Edge-firewall: An edge-firewall is a firewall device that is\n      located\
    \ on the borderline of an administrative domain.\n   o  Public Network: \"A Global\
    \ or Public Network is an address realm\n      with unique network addresses assigned\
    \ by Internet Assigned\n      Numbers Authority (IANA) or an equivalent address\
    \ registry.  This\n      network is also referred as external network during NAT\n\
    \      discussions\" [RFC2663].\n   o  Private/Local Network: \"A private network\
    \ is an address realm\n      independent of external network addresses.  Private\
    \ network may\n      also be referred alternately as Local Network.  Transparent\n\
    \      routing between hosts in private realm and external realm is\n      facilitated\
    \ by a NAT router\" [RFC2663].\n   o  Public/Global IP address: An IP address\
    \ located in the public\n      network according to Section 2.7 of [RFC2663].\n\
    \   o  Private/Local IP address: An IP address located in the private\n      network\
    \ according to Section 2.8 of [RFC2663].\n   o  Signaling Destination Address\
    \ (SDA): An IP address generally taken\n      from the public/global IP address\
    \ range, although, the SDA may, in\n      certain circumstances, be part of the\
    \ private/local IP address\n      range.  This address is used in EXTERNAL signaling\
    \ message\n      exchanges, if the data receiver's IP address is unknown.\n"
- title: 1.3.  Notes on the Experimental Status
  contents:
  - "1.3.  Notes on the Experimental Status\n   The same deployment issues and extensibility\
    \ considerations described\n   in [RFC5971] and [RFC5978] also apply to this document.\n"
- title: 1.4.  Middleboxes
  contents:
  - "1.4.  Middleboxes\n   The term \"middlebox\" covers a range of devices and is\
    \ well-defined in\n   [RFC3234]: \"A middlebox is defined as any intermediary\
    \ device\n   performing functions other than the normal, standard functions of\
    \ an\n   IP router on the datagram path between a source host and a\n   destination\
    \ host\".  As such, middleboxes fall into a number of\n   categories with a wide\
    \ range of functionality, not all of which is\n   pertinent to the NATFW NSLP.\
    \  Middlebox categories in the scope of\n   this memo are firewalls that filter\
    \ data packets against a set of\n   filter rules, and NATs that translate packet\
    \ addresses from one\n   address realm to another address realm.  Other categories\
    \ of\n   middleboxes, such as QoS traffic shapers, are out of the scope of\n \
    \  this memo.\n   The term \"NAT\" used in this document is a placeholder for\
    \ a range of\n   different NAT flavors.  We consider the following types of NATs:\n\
    \   o  Traditional NAT (basic NAT and NAPT)\n   o  Bi-directional NAT\n   o  Twice-NAT\n\
    \   o  Multihomed NAT\n   For definitions and a detailed discussion about the\
    \ characteristics\n   of each NAT type, please see [RFC2663].\n   All types of\
    \ middleboxes under consideration here use policy rules to\n   make a decision\
    \ on data packet treatment.  Policy rules consist of a\n   flow identifier that\
    \ selects the packets to which the policy applies\n   and an associated action;\
    \ data packets matching the flow identifier\n   are subjected to the policy rule\
    \ action.  A typical flow identifier\n   is the 5-tuple selector that matches\
    \ the following fields of a packet\n   to configured values:\n   o  Source and\
    \ destination IP addresses\n   o  Transport protocol number\n   o  Transport source\
    \ and destination port numbers\n   Actions for firewalls are usually one or more\
    \ of:\n   o  Allow: forward data packet\n   o  Deny: block data packet and discard\
    \ it\n   o  Other actions such as logging, diverting, duplicating, etc.\n   Actions\
    \ for NATs include (amongst many others):\n   o  Change source IP address and\
    \ transport port number to a globally\n      routable IP address and associated\
    \ port number.\n   o  Change destination IP address and transport port number\
    \ to a\n      private IP address and associated port number.\n   It should be\
    \ noted that a middlebox may contain two logical\n   representations of the policy\
    \ rule.  The policy rule has a\n   representation within the NATFW NSLP, comprising\
    \ the message routing\n   information (MRI) of the NTLP and NSLP information (such\
    \ as the rule\n   action).  The other representation is the implementation of\
    \ the NATFW\n   NSLP policy rule within the NAT and firewall engine of the particular\n\
    \   device.  Refer to Appendix D for further details.\n"
- title: 1.5.  General Scenario for NATFW Traversal
  contents:
  - "1.5.  General Scenario for NATFW Traversal\n   The purpose of NSIS NATFW signaling\
    \ is to enable communication\n   between endpoints across networks, even in the\
    \ presence of NAT and\n   firewall middleboxes that have not been specially engineered\
    \ to\n   facilitate communication with the application protocols used.  This\n\
    \   removes the need to create and maintain application layer gateways\n   for\
    \ specific protocols that have been commonly used to provide\n   transparency\
    \ in previous generations of NAT and firewall middleboxes.\n   It is assumed that\
    \ these middleboxes will be statically configured in\n   such a way that NSIS\
    \ NATFW signaling messages themselves are allowed\n   to reach the locally installed\
    \ NATFW NSLP daemon.  NSIS NATFW NSLP\n   signaling is used to dynamically install\
    \ additional policy rules in\n   all NATFW middleboxes along the data path that\
    \ will allow\n   transmission of the application data flow(s).  Firewalls are\n\
    \   configured to forward data packets matching the policy rule provided\n   by\
    \ the NSLP signaling.  NATs are configured to translate data packets\n   matching\
    \ the policy rule provided by the NSLP signaling.  An\n   additional capability,\
    \ that is an exception to the primary goal of\n   NSIS NATFW signaling, is that\
    \ the NATFW nodes can request blocking of\n   particular data flows instead of\
    \ enabling these flows at inbound\n   firewalls.\n   The basic high-level picture\
    \ of NSIS usage is that end hosts are\n   located behind middleboxes, meaning\
    \ that there is at least one\n   middlebox on the data path from the end host\
    \ in a private network to\n   the external network (NATFW in Figure 1).  Applications\
    \ located at\n   these end hosts try to establish communication with corresponding\n\
    \   applications on other such end hosts.  This communication\n   establishment\
    \ may require that the applications contact an\n   application server that serves\
    \ as a rendezvous point between both\n   parties to exchange their IP address\
    \ and port(s).  The local\n   applications trigger the NSIS entity at the local\
    \ host to control\n   provisioning for middlebox traversal along the prospective\
    \ data path\n   (e.g., via an API call).  The NSIS entity, in turn, uses NSIS\
    \ NATFW\n   NSLP signaling to establish policy rules along the data path,\n  \
    \ allowing the data to travel from the sender to the receiver without\n   obstruction.\n\
    \   Application          Application Server (0, 1, or more)   Application\n  \
    \ +----+                        +----+                        +----+\n   |   \
    \ +------------------------+    +------------------------+    |\n   +-+--+   \
    \                     +----+                        +-+--+\n     |           \
    \                                                |\n     |         NSIS Entities\
    \                      NSIS Entities  |\n   +-+--+        +----+             \
    \               +-----+     +-+--+\n   |    +--------+    +----------------------------+\
    \     +-----+    |\n   +-+--+        +-+--+                            +--+--+\
    \     +-+--+\n     |             |               ------             |        \
    \  |\n     |             |           ////      \\\\\\\\\\        |          |\n\
    \   +-+--+        +-+--+      |/               |     +-+--+     +-+--+\n   | \
    \   |        |    |     |     Internet     |    |    |     |    |\n   |    +--------+\
    \    +-----+                  +----+    +-----+    |\n   +----+        +----+\
    \      |\\               |     +----+     +----+\n                           \
    \    \\\\\\\\      /////\n   sender    NATFW (1+)            ------          NATFW\
    \ (1+) receiver\n   Note that 1+ refers to one or more NATFW nodes.\n        \
    \ Figure 1: Generic View of NSIS with NATs and/or Firewalls\n   For end-to-end\
    \ NATFW signaling, it is necessary that each firewall\n   and each NAT along the\
    \ path between the data sender and the data\n   receiver implements the NSIS NATFW\
    \ NSLP.  There might be several NATs\n   and FWs in various possible combinations\
    \ on a path between two hosts.\n   Section 2 presents a number of likely scenarios\
    \ with different\n   combinations of NATs and firewalls.  However, the scenarios\
    \ given in\n   the following sections are only examples and should not be treated\
    \ as\n   limiting the scope of the NATFW NSLP.\n"
- title: 2.  Network Deployment Scenarios Using the NATFW NSLP
  contents:
  - "2.  Network Deployment Scenarios Using the NATFW NSLP\n   This section introduces\
    \ several scenarios for middlebox placement\n   within IP networks.  Middleboxes\
    \ are typically found at various\n   different locations, including at enterprise\
    \ network borders, within\n   enterprise networks, as mobile phone network gateways,\
    \ etc.  Usually,\n   middleboxes are placed more towards the edge of networks\
    \ than in\n   network cores.  Firewalls and NATs may be found at these locations\n\
    \   either alone or combined; other categories of middleboxes may also be\n  \
    \ found at such locations, possibly combined with the NATs and/or\n   firewalls.\n\
    \   NSIS initiators (NI) send NSIS NATFW NSLP signaling messages via the\n   regular\
    \ data path to the NSIS responder (NR).  On the data path,\n   NATFW NSLP signaling\
    \ messages reach different NSIS nodes that\n   implement the NATFW NSLP.  Each\
    \ NATFW NSLP node processes the\n   signaling messages according to Section 3\
    \ and, if necessary, installs\n   policy rules for subsequent data packets.\n\
    \   Each of the following sub-sections introduces a different scenario\n   for\
    \ a different set of middleboxes and their ordering within the\n   topology. \
    \ It is assumed that each middlebox implements the NSIS\n   NATFW NSLP signaling\
    \ protocol.\n"
- title: 2.1.  Firewall Traversal
  contents:
  - "2.1.  Firewall Traversal\n   This section describes a scenario with firewalls\
    \ only; NATs are not\n   involved.  Each end host is behind a firewall.  The firewalls\
    \ are\n   connected via the public Internet.  Figure 2 shows the topology.  The\n\
    \   part labeled \"public\" is the Internet connecting both firewalls.\n     \
    \             +----+    //----\\\\       +----+\n          NI -----| FW |---|\
    \        |------| FW |--- NR\n                  +----+    \\\\----//       +----+\n\
    \                 private     public        private\n             FW: Firewall\n\
    \             NI: NSIS Initiator\n             NR: NSIS Responder\n          \
    \         Figure 2: Firewall Traversal Scenario\n   Each firewall on the data\
    \ path must provide traversal service for\n   NATFW NSLP in order to permit the\
    \ NSIS message to reach the other end\n   host.  All firewalls process NSIS signaling\
    \ and establish appropriate\n   policy rules, so that the required data packet\
    \ flow can traverse\n   them.\n   There are several very different ways to place\
    \ firewalls in a network\n   topology.  To distinguish firewalls located at network\
    \ borders, such\n   as administrative domains, from others located internally,\
    \ the term\n   edge-firewall is used.  A similar distinction can be made for NATs,\n\
    \   with an edge-NAT fulfilling the equivalent role.\n"
- title: 2.2.  NAT with Two Private Networks
  contents:
  - "2.2.  NAT with Two Private Networks\n   Figure 3 shows a scenario with NATs at\
    \ both ends of the network.\n   Therefore, each application instance, the NSIS\
    \ initiator and the NSIS\n   responder, are behind NATs.  The outermost NAT, known\
    \ as the edge-NAT\n   (MB2 and MB3), at each side is connected to the public Internet.\
    \  The\n   NATs are generically labeled as MBX (for middlebox No. X), since\n\
    \   those devices certainly implement NAT functionality, but can\n   implement\
    \ firewall functionality as well.\n   Only two middleboxes (MBs) are shown in\
    \ Figure 3 at each side, but in\n   general, any number of MBs on each side must\
    \ be considered.\n           +----+     +----+    //----\\\\    +----+     +----+\n\
    \      NI --| MB1|-----| MB2|---|        |---| MB3|-----| MB4|--- NR\n       \
    \    +----+     +----+    \\\\----//    +----+     +----+\n                private\
    \          public          private\n             MB: Middlebox\n             NI:\
    \ NSIS Initiator\n             NR: NSIS Responder\n             Figure 3: NAT\
    \ with two Private Networks Scenario\n   Signaling traffic from the NI to the\
    \ NR has to traverse all the\n   middleboxes on the path (MB1 to MB4, in this\
    \ order), and all the\n   middleboxes must be configured properly to allow NSIS\
    \ signaling to\n   traverse them.  The NATFW signaling must configure all middleboxes\n\
    \   and consider any address translation that will result from this\n   configuration\
    \ in further signaling.  The sender (NI) has to know the\n   IP address of the\
    \ receiver (NR) in advance, otherwise it will not be\n   possible to send any\
    \ NSIS signaling messages towards the responder.\n   Note that this IP address\
    \ is not the private IP address of the\n   responder but the NAT's public IP address\
    \ (here MB3's IP address).\n   Instead, a NAT binding (including a public IP address)\
    \ has to be\n   previously installed on the NAT MB3.  This NAT binding subsequently\n\
    \   allows packets reaching the NAT to be forwarded to the receiver\n   within\
    \ the private address realm.  The receiver might have a number\n   of ways to\
    \ learn its public IP address and port number (including the\n   NATFW NSLP) and\
    \ might need to signal this information to the sender\n   using an application-level\
    \ signaling protocol.\n"
- title: 2.3.  NAT with Private Network on Sender Side
  contents:
  - "2.3.  NAT with Private Network on Sender Side\n   This scenario shows an application\
    \ instance at the sending node that\n   is behind one or more NATs (shown as generic\
    \ MB, see discussion in\n   Section 2.2).  The receiver is located in the public\
    \ Internet.\n             +----+     +----+    //----\\\\\n        NI --| MB |-----|\
    \ MB |---|        |--- NR\n             +----+     +----+    \\\\----//\n    \
    \              private          public\n             MB: Middlebox\n         \
    \    NI: NSIS Initiator\n             NR: NSIS Responder\n             Figure\
    \ 4: NAT with Private Network on Sender Side\n   The traffic from NI to NR has\
    \ to traverse middleboxes only on the\n   sender's side.  The receiver has a public\
    \ IP address.  The NI sends\n   its signaling message directly to the address\
    \ of the NSIS responder.\n   Middleboxes along the path intercept the signaling\
    \ messages and\n   configure accordingly.\n   The data sender does not necessarily\
    \ know whether or not the receiver\n   is behind a NAT; hence, it is the receiving\
    \ side that has to detect\n   whether or not it is behind a NAT.\n"
- title: 2.4.  NAT with Private Network on Receiver Side Scenario
  contents:
  - "2.4.  NAT with Private Network on Receiver Side Scenario\n   The application\
    \ instance receiving data is behind one or more NATs\n   shown as MB (see discussion\
    \ in Section 2.2).\n               //----\\\\    +----+     +----+\n        NI\
    \ ---|        |---| MB |-----| MB |--- NR\n               \\\\----//    +----+\
    \     +----+\n                public          private\n             MB: Middlebox\n\
    \             NI: NSIS Initiator\n             NR: NSIS Responder\n          Figure\
    \ 5: NAT with Private Network on Receiver Scenario\n   Initially, the NSIS responder\
    \ must determine its publicly reachable\n   IP address at the external middlebox\
    \ and notify the NSIS initiator\n   about this address.  One possibility is that\
    \ an application-level\n   protocol is used, meaning that the public IP address\
    \ is signaled via\n   this protocol to the NI.  Afterwards, the NI can start its\
    \ signaling\n   towards the NR and therefore establish the path via the middleboxes\n\
    \   in the receiver side private network.\n   This scenario describes the use\
    \ case for the EXTERNAL message of the\n   NATFW NSLP.\n"
- title: 2.5.  Both End Hosts behind Twice-NATs
  contents:
  - "2.5.  Both End Hosts behind Twice-NATs\n   This is a special case, where the\
    \ main problem arises from the need\n   to detect that both end hosts are logically\
    \ within the same address\n   space, but are also in two partitions of the address\
    \ realm on either\n   side of a twice-NAT (see [RFC2663] for a discussion of twice-NAT\n\
    \   functionality).\n   Sender and receiver are both within a single private address\
    \ realm,\n   but the two partitions potentially have overlapping IP address\n\
    \   ranges.  Figure 6 shows the arrangement of NATs.\n                       \
    \            public\n             +----+     +----+    //----\\\\\n        NI\
    \ --| MB |--+--| MB |---|        |\n             +----+  |  +----+    \\\\----//\n\
    \                     |\n                     |  +----+\n                    \
    \ +--| MB |------------ NR\n                        +----+\n                 \
    \  private\n             MB: Middlebox\n             NI: NSIS Initiator\n    \
    \         NR: NSIS Responder\n     Figure 6: NAT to Public, Sender and Receiver\
    \ on Either Side of a\n                            Twice-NAT Scenario\n   The\
    \ middleboxes shown in Figure 6 are twice-NATs, i.e., they map IP\n   addresses\
    \ and port numbers on both sides, meaning the mapping of\n   source and destination\
    \ IP addresses at the private and public\n   interfaces.\n   This scenario requires\
    \ the assistance of application-level entities,\n   such as a DNS server.  The\
    \ application-level entities must handle\n   requests that are based on symbolic\
    \ names and configure the\n   middleboxes so that data packets are correctly forwarded\
    \ from NI to\n   NR.  The configuration of those middleboxes may require other\n\
    \   middlebox communication protocols, such as MIDCOM [RFC3303].  NSIS\n   signaling\
    \ is not required in the twice-NAT only case, since\n   middleboxes of the twice-NAT\
    \ type are normally configured by other\n   means.  Nevertheless, NSIS signaling\
    \ might be useful when there are\n   also firewalls on the path.  In this case,\
    \ NSIS will not configure\n   any policy rule at twice-NATs, but will configure\
    \ policy rules at the\n   firewalls on the path.  The NSIS signaling protocol\
    \ must be at least\n   robust enough to survive this scenario.  This requires\
    \ that twice-\n   NATs must implement the NATFW NSLP also and participate in NATFW\n\
    \   signaling sessions, but they do not change the configuration of the\n   NAT,\
    \ i.e., they only read the address mapping information out of the\n   NAT and\
    \ translate the Message Routing Information (MRI, [RFC5971])\n   within the NSLP\
    \ and NTLP accordingly.  For more information, see\n   Appendix D.4.\n"
- title: 2.6.  Both End Hosts behind Same NAT
  contents:
  - "2.6.  Both End Hosts behind Same NAT\n   When the NSIS initiator and NSIS responder\
    \ are behind the same NAT\n   (thus, being in the same address realm, see Figure\
    \ 7), they are most\n   likely not aware of this fact.  As in Section 2.4, the\
    \ NSIS responder\n   must determine its public IP address in advance and transfer\
    \ it to\n   the NSIS initiator.  Afterwards, the NSIS initiator can start sending\n\
    \   the signaling messages to the responder's public IP address.  During\n   this\
    \ process, a public IP address will be allocated for the NSIS\n   initiator at\
    \ the same middlebox as for the responder.  Now, the NSIS\n   signaling and the\
    \ subsequent data packets will traverse the NAT\n   twice: from initiator to public\
    \ IP address of responder (first time)\n   and from public IP address of responder\
    \ to responder (second time).\n               NI              public\n       \
    \         \\  +----+     //----\\\\\n                 +-| MB |----|        |\n\
    \                /  +----+     \\\\----//\n               NR\n               \
    \    private\n             MB: Middlebox\n             NI: NSIS Initiator\n  \
    \           NR: NSIS Responder\n            Figure 7: NAT to Public, Both Hosts\
    \ behind Same NAT\n"
- title: 2.7.  Multihomed Network with NAT
  contents:
  - "2.7.  Multihomed Network with NAT\n   The previous sub-sections sketched network\
    \ topologies where several\n   NATs and/or firewalls are ordered sequentially\
    \ on the path.  This\n   section describes a multihomed scenario with two NATs\
    \ placed on\n   alternative paths to the public network.\n             +----+\
    \    //---\\\\\n   NI -------| MB |---|       |\n      \\      +----+    \\\\\
    -+-//\n       \\                  |\n        \\                 +----- NR\n  \
    \       \\                |\n          \\  +----+    //-+-\\\\\n           --|\
    \ MB |---|       |\n             +----+    \\\\---//\n        private        \
    \  public\n             MB: Middlebox\n             NI: NSIS Initiator\n     \
    \        NR: NSIS Responder\n                Figure 8: Multihomed Network with\
    \ Two NATs\n   Depending on the destination, either one or the other middlebox\
    \ is\n   used for the data flow.  Which middlebox is used, depends on local\n\
    \   policy or routing decisions.  NATFW NSLP must be able to handle this\n   situation\
    \ properly, see Section 3.7.2 for an extended discussion of\n   this topic with\
    \ respect to NATs.\n"
- title: 2.8.  Multihomed Network with Firewall
  contents:
  - "2.8.  Multihomed Network with Firewall\n   This section describes a multihomed\
    \ scenario with two firewalls\n   placed on alternative paths to the public network\
    \ (Figure 9).  The\n   routing in the private and public networks decides which\
    \ firewall is\n   being taken for data flows.  Depending on the data flow's direction,\n\
    \   either outbound or inbound, a different firewall could be traversed.\n   This\
    \ is a challenge for the EXTERNAL message of the NATFW NSLP where\n   the NSIS\
    \ responder is located behind these firewalls within the\n   private network.\
    \  The EXTERNAL message is used to block a particular\n   data flow on an inbound\
    \ firewall.  NSIS must route the EXTERNAL\n   message inbound from NR to NI probably\
    \ without knowing which path the\n   data traffic will take from NI to NR (see\
    \ also Appendix C).\n             +----+\n   NR -------| FW |\\\n       \\   \
    \  +----+ \\  //---\\\\\n        \\            -|       |-- NI\n         \\  \
    \           \\\\---//\n          \\  +----+       |\n           --| FW |-------+\n\
    \             +----+\n             private\n        private          public\n\
    \             FW: Firewall\n             NI: NSIS Initiator\n             NR:\
    \ NSIS Responder\n              Figure 9: Multihomed Network with Two Firewalls\n"
- title: 3.  Protocol Description
  contents:
  - "3.  Protocol Description\n   This section defines messages, objects, and protocol\
    \ semantics for\n   the NATFW NSLP.\n"
- title: 3.1.  Policy Rules
  contents:
  - "3.1.  Policy Rules\n   Policy rules, bound to a NATFW NSLP signaling session,\
    \ are the\n   building blocks of middlebox devices considered in the NATFW NSLP.\n\
    \   For firewalls, the policy rule usually consists of a 5-tuple and an\n   action\
    \ such as allow or deny.  The information contained in the tuple\n   includes\
    \ source/destination IP addresses, transport protocol, and\n   source/destination\
    \ port numbers.  For NATs, the policy rule consists\n   of the action 'translate\
    \ this address' and further mapping\n   information, that might be, in the simplest\
    \ case, internal IP address\n   and external IP address.\n   The NATFW NSLP carries,\
    \ in conjunction with the NTLP's Message\n   Routing Information (MRI), the policy\
    \ rules to be installed at NATFW\n   peers.  This policy rule is an abstraction\
    \ with respect to the real\n   policy rule to be installed at the respective firewall\
    \ or NAT.  It\n   conveys the initiator's request and must be mapped to the possible\n\
    \   configuration on the particular used NAT and/or firewall in use.  For\n  \
    \ pure firewalls, one or more filter rules must be created, and for\n   pure NATs,\
    \ one or more NAT bindings must be created.  In mixed\n   firewall and NAT boxes,\
    \ the policy rule must be mapped to filter\n   rules and bindings observing the\
    \ ordering of the firewall and NAT\n   engine.  Depending on the ordering, NAT\
    \ before firewall or vice\n   versa, the firewall rules must carry public or private\
    \ IP addresses.\n   However, the exact mapping depends on the implementation of\
    \ the\n   firewall or NAT that is possibly different for each implementation.\n\
    \   The policy rule at the NATFW NSLP level comprises the message routing\n  \
    \ information (MRI) part, carried in the NTLP, and the information\n   available\
    \ in the NATFW NSLP.  The information provided by the NSLP is\n   stored in the\
    \ 'extend flow information' (NATFW_EFI) and 'data\n   terminal information' (NATFW_DTINFO)\
    \ objects, and the message type.\n   Additional information, such as the external\
    \ IP address and port\n   number, stored in the NAT or firewall, will be used\
    \ as well.  The MRI\n   carries the filter part of the NAT/firewall-level policy\
    \ rule that is\n   to be installed.\n   The NATFW NSLP specifies two actions for\
    \ the policy rules: deny and\n   allow.  A policy rule with action set to deny\
    \ will result in all\n   packets matching this rule to be dropped.  A policy rule\
    \ with action\n   set to allow will result in all packets matching this rule to\
    \ be\n   forwarded.\n"
- title: 3.2.  Basic Protocol Overview
  contents:
  - "3.2.  Basic Protocol Overview\n   The NSIS NATFW NSLP is carried over the General\
    \ Internet Signaling\n   Transport (GIST, the implementation of the NTLP) defined\
    \ in\n   [RFC5971].  NATFW NSLP messages are initiated by the NSIS initiator\n\
    \   (NI), handled by NSLP forwarders (NFs) and received by the NSIS\n   responder\
    \ (NR).  It is required that at least NI and NR implement\n   this NSLP, intermediate\
    \ NFs only implement this NSLP when they\n   provide relevant middlebox functions.\
    \  NSLP forwarders that do not\n   have any NATFW NSLP functions just forward\
    \ these packets as they have\n   no interest in them.\n"
- title: 3.2.1.  Signaling for Outbound Traffic
  contents:
  - "3.2.1.  Signaling for Outbound Traffic\n   A data sender (DS), intending to send\
    \ data to a data receiver (DR),\n   has to start NATFW NSLP signaling.  This causes\
    \ the NI associated\n   with the DS to launch NSLP signaling towards the address\
    \ of the DR\n   (see Figure 10).  Although it is expected that the DS and the\
    \ NATFW\n   NSLP NI will usually reside on the same host, this specification does\n\
    \   not rule out scenarios where the DS and NI reside on different hosts,\n  \
    \ the so-called proxy mode (see Section 3.7.6).\n             +-------+    +-------+\
    \    +-------+    +-------+\n             | DS/NI |<~~~| MB1/  |<~~~| MB2/  |<~~~|\
    \ DR/NR |\n             |       |--->| NF1   |--->| NF2   |--->|       |\n   \
    \          +-------+    +-------+    +-------+    +-------+\n                \
    \ ========================================>\n                    Data Traffic\
    \ Direction (outbound)\n                  --->  : NATFW NSLP request signaling\n\
    \                  ~~~>  : NATFW NSLP response signaling\n                  DS/NI\
    \ : Data sender and NSIS initiator\n                  DR/NR : Data receiver and\
    \ NSIS responder\n                  MB1   : Middlebox 1 and NSLP forwarder 1\n\
    \                  MB2   : Middlebox 2 and NSLP forwarder 2\n                \
    \     Figure 10: General NSIS Signaling\n   The following list shows the normal\
    \ sequence of NSLP events without\n   detailing the interaction with the NTLP\
    \ and the interactions on the\n   NTLP level.\n   o  NSIS initiators generate\
    \ request messages (which are either CREATE\n      or EXTERNAL messages) and send\
    \ these towards the NSIS responder.\n      This request message is the initial\
    \ message that creates a new\n      NATFW NSLP signaling session.  The NI and\
    \ the NR will most likely\n      already share an application session before they\
    \ start the NATFW\n      NSLP signaling session.  Note well the difference between\
    \ both\n      sessions.\n   o  NSLP request messages are processed each time an\
    \ NF with NATFW\n      NSLP support is traversed.  Each NF that is intercepting\
    \ a request\n      message and is accepting it for further treatment is joining\
    \ the\n      particular NATFW NSLP signaling session.  These nodes process the\n\
    \      message, check local policies for authorization and\n      authentication,\
    \ possibly create policy rules, and forward the\n      signaling message to the\
    \ next NSIS node.  The request message is\n      forwarded until it reaches the\
    \ NSIS responder.\n   o  NSIS responders will check received messages and process\
    \ them if\n      applicable.  NSIS responders generate RESPONSE messages and send\n\
    \      them hop-by-hop back to the NI via the same chain of NFs\n      (traversal\
    \ of the same NF chain is guaranteed through the\n      established reverse message\
    \ routing state in the NTLP).  The NR is\n      also joining the NATFW NSLP signaling\
    \ session if the request\n      message is accepted.\n   o  The RESPONSE message\
    \ is processed at each NF that has been\n      included in the prior NATFW NSLP\
    \ signaling session setup.\n   o  If the NI has received a successful RESPONSE\
    \ message and if the\n      signaling NATFW NSLP session started with a CREATE\
    \ message, the\n      data sender can start sending its data flow to the data\
    \ receiver.\n      If the NI has received a successful RESPONSE message and if\
    \ the\n      signaling NATFW NSLP session started with an EXTERNAL message, the\n\
    \      data receiver is ready to receive further CREATE messages.\n   Because\
    \ NATFW NSLP signaling follows the data path from DS to DR,\n   this immediately\
    \ enables communication between both hosts for\n   scenarios with only firewalls\
    \ on the data path or NATs on the sender\n   side.  For scenarios with NATs on\
    \ the receiver side, certain problems\n   arise, as described in Section 2.4.\n"
- title: 3.2.2.  Signaling for Inbound Traffic
  contents:
  - "3.2.2.  Signaling for Inbound Traffic\n   When the NR and the NI are located\
    \ in different address realms and\n   the NR is located behind a NAT, the NI cannot\
    \ signal to the NR\n   address directly.  The DR/NR is not reachable from other\
    \ NIs using\n   the private address of the NR and thus NATFW signaling messages\n\
    \   cannot be sent to the NR/DR's address.  Therefore, the NR must first\n   obtain\
    \ a NAT binding that provides an address that is reachable for\n   the NI.  Once\
    \ the NR has acquired a public IP address, it forwards\n   this information to\
    \ the DS via a separate protocol.  This\n   application-layer signaling, which\
    \ is out of the scope of the NATFW\n   NSLP, may involve third parties that assist\
    \ in exchanging these\n   messages.\n   The same holds partially true for NRs\
    \ located behind firewalls that\n   block all traffic by default.  In this case,\
    \ NR must tell its inbound\n   firewalls of inbound NATFW NSLP signaling and corresponding\
    \ data\n   traffic.  Once the NR has informed the inbound firewalls, it can\n\
    \   start its application-level signaling to initiate communication with\n   the\
    \ NI.  This mechanism can be used by machines hosting services\n   behind firewalls\
    \ as well.  In this case, the NR informs the inbound\n   firewalls as described,\
    \ but does not need to communicate this to the\n   NIs.\n   NATFW NSLP signaling\
    \ supports this scenario by using the EXTERNAL\n   message.\n   1.  The DR acquires\
    \ a public address by signaling on the reverse path\n       (DR towards DS) and\
    \ thus making itself available to other hosts.\n       This process of acquiring\
    \ public addresses is called reservation.\n       During this process the DR reserves\
    \ publicly reachable addresses\n       and ports suitable for further usage in\
    \ application-level\n       signaling and the publicly reachable address for further\
    \ NATFW\n       NSLP signaling.  However, the data traffic will not be allowed\
    \ to\n       use this address/port initially (see next point).  In the process\n\
    \       of reservation, the DR becomes the NI for the messages necessary\n   \
    \    to obtain the publicly reachable IP address, i.e., the NI for\n       this\
    \ specific NATFW NSLP signaling session.\n   2.  Now on the side of the DS, the\
    \ NI creates a new NATFW NSLP\n       signaling session and signals directly to\
    \ the public IP address\n       of the DR.  This public IP address is used as\
    \ NR's address, as\n       the NI would do if there is no NAT in between, and\
    \ creates policy\n       rules at middleboxes.  Note, that the reservation will\
    \ only allow\n       forwarding of signaling messages, but not data flow packets.\n\
    \       Policy rules allowing forwarding of data flow packets set up by\n    \
    \   the prior EXTERNAL message signaling will be activated when the\n       signaling\
    \ from NI towards NR is confirmed with a positive\n       RESPONSE message.  The\
    \ EXTERNAL message is described in\n       Section 3.7.2.\n"
- title: 3.2.3.  Signaling for Proxy Mode
  contents:
  - "3.2.3.  Signaling for Proxy Mode\n                    administrative domain\n\
    \               ----------------------------------\\\n                       \
    \                          |\n             +-------+    +-------+    +-------+\
    \ |  +-------+\n             | DS/NI |<~~~| MB1/  |<~~~| MB2/  | |  |   DR  |\n\
    \             |       |--->| NF1   |--->| NR    | |  |       |\n             +-------+\
    \    +-------+    +-------+ |  +-------+\n                                   \
    \              |\n               ----------------------------------/\n       \
    \          ========================================>\n                    Data\
    \ Traffic Direction (outbound)\n                  --->  : NATFW NSLP request signaling\n\
    \                  ~~~>  : NATFW NSLP response signaling\n                  DS/NI\
    \ : Data sender and NSIS initiator\n                  DR/NR : Data receiver and\
    \ NSIS responder\n                  MB1   : Middlebox 1 and NSLP forwarder 1\n\
    \                  MB2   : Middlebox 2 and NSLP responder\n              Figure\
    \ 11: Proxy Mode Signaling for Data Sender\n   The above usage assumes that both\
    \ ends of a communication support\n   NSIS, but fails when NSIS is only deployed\
    \ at one end of the path.\n   In this case, only one of the sending side (see\
    \ Figure 11) or\n   receiving side (see Figure 12) is NSIS aware and not both\
    \ at the same\n   time.  NATFW NSLP supports both scenarios (i.e., either the\
    \ DS or DR\n   does not support NSIS) by using a proxy mode, as described in\n\
    \   Section 3.7.6.\n                               administrative domain\n   \
    \                     / ----------------------------------\n                 \
    \       |\n             +-------+  | +-------+    +-------+    +-------+\n   \
    \          |   DS  |  | | MB2/  |~~~>|  MB1/ |~~~>|   DR  |\n             |  \
    \     |  | | NR    |<---|  NF1  |<---|       |\n             +-------+  | +-------+\
    \    +-------+    +-------+\n                        |\n                     \
    \   \\----------------------------------\n                 ========================================>\n\
    \                    Data Traffic Direction (inbound)\n                  --->\
    \  : NATFW NSLP request signaling\n                  ~~~>  : NATFW NSLP response\
    \ signaling\n                  DS/NI : Data sender and NSIS initiator\n      \
    \            DR/NR : Data receiver and NSIS responder\n                  MB1 \
    \  : Middlebox 1 and NSLP forwarder 1\n                  MB2   : Middlebox 2 and\
    \ NSLP responder\n             Figure 12: Proxy Mode Signaling for Data Receiver\n"
- title: 3.2.4.  Blocking Traffic
  contents:
  - "3.2.4.  Blocking Traffic\n   The basic functionality of the NATFW NSLP provides\
    \ for opening\n   firewall pin holes and creating NAT bindings to enable data\
    \ flows to\n   traverse these devices.  Firewalls are normally expected to work\
    \ on a\n   \"deny-all\" policy, meaning that traffic not explicitly matching any\n\
    \   firewall filter rule will be blocked.  Similarly, the normal behavior\n  \
    \ of NATs is to block all traffic that does not match any already\n   configured/installed\
    \ binding or NATFW NSLP session.  However, some\n   scenarios require support\
    \ of firewalls having \"allow-all\" policies,\n   allowing data traffic to traverse\
    \ the firewall unless it is blocked\n   explicitly.  Data receivers can utilize\
    \ NATFW NSLP's EXTERNAL message\n   with action set to \"deny\" to install policy\
    \ rules at inbound\n   firewalls to block unwanted traffic.\n"
- title: 3.2.5.  State and Error Maintenance
  contents:
  - "3.2.5.  State and Error Maintenance\n   The protocol works on a soft-state basis,\
    \ meaning that whatever state\n   is installed or reserved on a middlebox will\
    \ expire, and thus be\n   uninstalled or forgotten after a certain period of time.\
    \  To prevent\n   premature removal of state that is needed for ongoing communication,\n\
    \   the NATFW NI involved will have to specifically request a NATFW NSLP\n   signaling\
    \ session extension.  An explicit NATFW NSLP state deletion\n   capability is\
    \ also provided by the protocol.\n   If the actions requested by a NATFW NSLP\
    \ message cannot be carried\n   out, NFs and the NR must return a failure, such\
    \ that appropriate\n   actions can be taken.  They can do this either during the\
    \ request\n   message handling (synchronously) by sending an error RESPONSE message\n\
    \   or at any time (asynchronously) by sending a NOTIFY notification\n   message.\n\
    \   The next sections define the NATFW NSLP message types and formats,\n   protocol\
    \ operations, and policy rule operations.\n"
- title: 3.2.6.  Message Types
  contents:
  - "3.2.6.  Message Types\n   The protocol uses four messages types:\n   o  CREATE:\
    \ a request message used for creating, changing, refreshing,\n      and deleting\
    \ NATFW NSLP signaling sessions, i.e., open the data\n      path from DS to DR.\n\
    \   o  EXTERNAL: a request message used for reserving, changing,\n      refreshing,\
    \ and deleting EXTERNAL NATFW NSLP signaling sessions.\n      EXTERNAL messages\
    \ are forwarded to the edge-NAT or edge-firewall\n      and allow inbound CREATE\
    \ messages to be forwarded to the NR.\n      Additionally, EXTERNAL messages reserve\
    \ an external address and,\n      if applicable, port number at an edge-NAT.\n\
    \   o  NOTIFY: an asynchronous message used by NATFW peers to alert other\n  \
    \    NATFW peers about specific events (especially failures).\n   o  RESPONSE:\
    \ used as a response to CREATE and EXTERNAL request\n      messages.\n"
- title: 3.2.7.  Classification of RESPONSE Messages
  contents:
  - "3.2.7.  Classification of RESPONSE Messages\n   RESPONSE messages will be generated\
    \ synchronously to CREATE and\n   EXTERNAL messages by NSLP forwarders and responders\
    \ to report success\n   or failure of operations or some information relating\
    \ to the NATFW\n   NSLP signaling session or a node.  RESPONSE messages MUST NOT\
    \ be\n   generated for any other message, such as NOTIFY and RESPONSE.\n   All\
    \ RESPONSE messages MUST carry a NATFW_INFO object that contains an\n   error\
    \ class code and a response code (see Section 4.2.5).  This\n   section defines\
    \ terms for groups of RESPONSE messages depending on\n   the error class.\n  \
    \ o  Successful RESPONSE: Messages carrying NATFW_INFO with error class\n    \
    \  'Success' (2).\n   o  Informational RESPONSE: Messages carrying NATFW_INFO\
    \ with error\n      class 'Informational' (1) (only used with NOTIFY messages).\n\
    \   o  Error RESPONSE: Messages carrying NATFW_INFO with error class\n      other\
    \ than 'Success' or 'Informational'.\n"
- title: 3.2.8.  NATFW NSLP Signaling Sessions
  contents:
  - "3.2.8.  NATFW NSLP Signaling Sessions\n   A NATFW NSLP signaling session defines\
    \ an association between the NI,\n   NFs, and the NR related to a data flow. \
    \ This association is created\n   when the initial CREATE or EXTERNAL message\
    \ is successfully received\n   at the NFs or the NR.  There is signaling NATFW\
    \ NSLP session state\n   stored at the NTLP layer and at the NATFW NSLP level.\
    \  The NATFW NSLP\n   signaling session state for the NATFW NSLP comprises NSLP\
    \ state and\n   the associated policy rules at a middlebox.\n   The NATFW NSLP\
    \ signaling session is identified by the session ID\n   (plus other information\
    \ at the NTLP level).  The session ID is\n   generated by the NI before the initial\
    \ CREATE or EXTERNAL message is\n   sent.  The value of the session ID MUST be\
    \ generated as a\n   cryptographically random number (see [RFC4086]) by the NI,\
    \ i.e., the\n   output MUST NOT be easily guessable by third parties.  The session\
    \ ID\n   is not stored in any NATFW NSLP message but passed on to the NTLP.\n\
    \   A NATFW NSLP signaling session has several conceptual states that\n   describe\
    \ in what state a signaling session is at a given time.  The\n   signaling session\
    \ can have these states at a node:\n   o  Pending: The NATFW NSLP signaling session\
    \ has been created and the\n      node is waiting for a RESPONSE message to the\
    \ CREATE or EXTERNAL\n      message.  A NATFW NSLP signaling session in state\
    \ 'Pending' MUST\n      be marked as 'Dead' if no corresponding RESPONSE message\
    \ has been\n      received within the time of the locally granted NATFW NSLP\n\
    \      signaling session lifetime of the forwarded CREATE or EXTERNAL\n      message\
    \ (as described in Section 3.4).\n   o  Established: The NATFW NSLP signaling\
    \ session is established, i.e,\n      the signaling has been successfully performed\
    \ and the lifetime of\n      NATFW NSLP signaling session is counted from now\
    \ on.  A NATFW NSLP\n      signaling session in state 'Established' MUST be marked\
    \ as 'Dead'\n      if no refresh message has been received within the time of\
    \ the\n      locally granted NATFW NSLP signaling session lifetime of the\n  \
    \    RESPONSE message (as described in Section 3.4).\n   o  Dead: Either the NATFW\
    \ NSLP signaling session is timed out or the\n      node has received an error\
    \ RESPONSE message for the NATFW NSLP\n      signaling session and the NATFW NSLP\
    \ signaling session can be\n      deleted.\n   o  Transitory: The node has received\
    \ an asynchronous message, i.e., a\n      NOTIFY, and can delete the NATFW NSLP\
    \ signaling session if needed\n      after some time.  When a node has received\
    \ a NOTIFY message, it\n      marks the signaling session as 'Transitory'.  This\
    \ signaling\n      session SHOULD NOT be deleted before a minimum hold time of\
    \ 30\n      seconds, i.e., it can be removed after 30 seconds or more.  This\n\
    \      hold time ensures that the existing signaling session can be\n      reused\
    \ by the NI, e.g., a part of a signaling session that is not\n      affected by\
    \ the route change can be reused once the updating\n      request message is received.\n"
- title: 3.3.  Basic Message Processing
  contents:
  - "3.3.  Basic Message Processing\n   All NATFW messages are subject to some basic\
    \ message processing when\n   received at a node, independent of the message type.\
    \  Initially, the\n   syntax of the NSLP message is checked and a RESPONSE message\
    \ with an\n   appropriate error of class 'Protocol error' (3) code is generated\
    \ if\n   a non-recoverable syntax error is detected.  A recoverable error is,\n\
    \   for instance, when a node receives a message with reserved flags set\n   to\
    \ values other than zero.  This also refers to unknown NSLP objects\n   and their\
    \ handling, according to Section 4.2.  If a message is\n   delivered to the NATFW\
    \ NSLP, this implies that the NTLP layer has\n   been able to correlate it with\
    \ the session ID (SID) and MRI entries\n   in its database.  There is therefore\
    \ enough information to identify\n   the source of the message and routing information\
    \ to route the\n   message back to the NI through an established chain of NTLP\
    \ messaging\n   associations.  The message is not further forwarded if any error\
    \ in\n   the syntax is detected.  The specific response codes stemming from\n\
    \   the processing of objects are described in the respective object\n   definition\
    \ section (see Section 4).  After passing this check, the\n   NATFW NSLP node\
    \ performs authentication- and authorization-related\n   checks, described in\
    \ Section 3.6.  Further processing is executed\n   only if these tests have been\
    \ successfully passed; otherwise, the\n   processing stops and an error RESPONSE\
    \ is returned.\n   Further message processing stops whenever an error RESPONSE\
    \ message\n   is generated, and the EXTERNAL or CREATE message is discarded.\n"
- title: 3.4.  Calculation of Signaling Session Lifetime
  contents:
  - "3.4.  Calculation of Signaling Session Lifetime\n   NATFW NSLP signaling sessions,\
    \ and the corresponding policy rules\n   that may have been installed, are maintained\
    \ via a soft-state\n   mechanism.  Each signaling session is assigned a signaling\
    \ session\n   lifetime and the signaling session is kept alive as long as the\n\
    \   lifetime is valid.  After the expiration of the signaling session\n   lifetime,\
    \ signaling sessions and policy rules MUST be removed\n   automatically and resources\
    \ bound to them MUST be freed as well.\n   Signaling session lifetime is handled\
    \ at every NATFW NSLP node.  The\n   NSLP forwarders and NSLP responder MUST NOT\
    \ trigger signaling session\n   lifetime extension refresh messages (see Section\
    \ 3.7.3): this is the\n   task of the NSIS initiator.\n   The NSIS initiator MUST\
    \ choose a NATFW NSLP signaling session\n   lifetime value (expressed in seconds)\
    \ before sending any message,\n   including the initial message that creates the\
    \ NATFW NSLP signaling\n   session, to other NSLP nodes.  It is RECOMMENDED that\
    \ the NATFW NSLP\n   signaling session lifetime value is calculated based on:\n\
    \   o  the number of lost refresh messages with which NFs should cope;\n   o \
    \ the end-to-end delay between the NI and NR;\n   o  network vulnerability due\
    \ to NATFW NSLP signaling session\n      hijacking ([RFC4081]), NATFW NSLP signaling\
    \ session hijacking is\n      made easier when the NI does not explicitly remove\
    \ the NATFW NSLP\n      signaling session;\n   o  the user application's data\
    \ exchange duration, in terms of time\n      and networking needs.  This duration\
    \ is modeled as R, with R the\n      message refresh period (in seconds);\n  \
    \ o  the load on the signaling plane.  Short lifetimes imply more\n      frequent\
    \ signaling messages;\n   o  the acceptable time for a NATFW NSLP signaling session\
    \ to be\n      present after it is no longer actually needed.  For example, if\n\
    \      the existence of the NATFW NSLP signaling session implies a\n      monetary\
    \ cost and teardown cannot be guaranteed, shorter lifetimes\n      would be preferable;\n\
    \   o  the lease time of the NI's IP address.  The lease time of the IP\n    \
    \  address must be longer than the chosen NATFW NSLP signaling\n      session\
    \ lifetime; otherwise, the IP address can be re-assigned to\n      a different\
    \ node.  This node may receive unwanted traffic,\n      although it never has\
    \ requested a NAT/firewall configuration,\n      which might be an issue in environments\
    \ with mobile hosts.\n   The RSVP specification [RFC2205] provides an appropriate\
    \ algorithm\n   for calculating the NATFW NSLP signaling session lifetime as well\
    \ as\n   a means to avoid refresh message synchronization between NATFW NSLP\n\
    \   signaling sessions.  [RFC2205] recommends:\n   1.  The refresh message timer\
    \ to be randomly set to a value in the\n       range [0.5R, 1.5R].\n   2.  To\
    \ avoid premature loss of state, lt (with lt being the NATFW\n       NSLP signaling\
    \ session lifetime) must satisfy lt >= (K +\n       0.5)*1.5*R, where K is a small\
    \ integer.  Then, in the worst case,\n       K-1 successive messages may be lost\
    \ without state being deleted.\n       Currently, K = 3 is suggested as the default.\
    \  However, it may be\n       necessary to set a larger K value for hops with\
    \ high loss rate.\n       Other algorithms could be used to define the relation\
    \ between the\n       NATFW NSLP signaling session lifetime and the refresh message\n\
    \       period; the algorithm provided is only given as an example.\n   It is\
    \ RECOMMENDED to use a refresh timer of 300 s (5 minutes), unless\n   the NI or\
    \ the requesting application at the NI has other requirements\n   (e.g., flows\
    \ lasting a very short time).\n   This requested NATFW NSLP signaling session\
    \ lifetime value lt is\n   stored in the NATFW_LT object of the NSLP message.\n\
    \   NSLP forwarders and the NSLP responder can execute the following\n   behavior\
    \ with respect to the requested lifetime handling:\n   Requested signaling session\
    \ lifetime acceptable:\n      No changes to the NATFW NSLP signaling session lifetime\
    \ values are\n      needed.  The CREATE or EXTERNAL message is forwarded, if\n\
    \      applicable.\n   Signaling session lifetime can be lowered:\n      An NSLP\
    \ forwarded or the NSLP responder MAY also lower the\n      requested NATFW NSLP\
    \ signaling session lifetime to an acceptable\n      value (based on its local\
    \ policies).  If an NF changes the NATFW\n      NSLP signaling session lifetime\
    \ value, it MUST store the new value\n      in the NATFW_LT object.  The CREATE\
    \ or EXTERNAL message is\n      forwarded.\n   Requested signaling session lifetime\
    \ is too big:\n      An NSLP forwarded or the NSLP responder MAY reject the requested\n\
    \      NATFW NSLP signaling session lifetime value as being too big and\n    \
    \  MUST generate an error RESPONSE message of class 'Signaling\n      session\
    \ failure' (7) with response code 'Requested lifetime is too\n      big' (0x02)\
    \ upon rejection.  Lowering the lifetime is preferred\n      instead of generating\
    \ an error message.\n   Requested signaling session lifetime is too small:\n \
    \     An NSLP forwarded or the NSLP responder MAY reject the requested\n     \
    \ NATFW NSLP signaling session lifetime value as being to small and\n      MUST\
    \ generate an error RESPONSE message of class 'Signaling\n      session failure'\
    \ (7) with response code 'Requested lifetime is too\n      small' (0x10) upon\
    \ rejection.\n   NFs or the NR MUST NOT increase the NATFW NSLP signaling session\n\
    \   lifetime value.  Messages can be rejected on the basis of the NATFW\n   NSLP\
    \ signaling session lifetime being too long when a NATFW NSLP\n   signaling session\
    \ is first created and also on refreshes.\n   The NSLP responder generates a successful\
    \ RESPONSE for the received\n   CREATE or EXTERNAL message, sets the NATFW NSLP\
    \ signaling session\n   lifetime value in the NATFW_LT object to the above granted\
    \ lifetime\n   and sends the message back towards NSLP initiator.\n   Each NSLP\
    \ forwarder processes the RESPONSE message and reads and\n   stores the granted\
    \ NATFW NSLP signaling session lifetime value.  The\n   forwarders MUST accept\
    \ the granted NATFW NSLP signaling session\n   lifetime, if the lifetime value\
    \ is within the acceptable range.  The\n   acceptable value refers to the value\
    \ accepted by the NSLP forwarder\n   when processing the CREATE or EXTERNAL message.\
    \  For received values\n   greater than the acceptable value, NSLP forwarders\
    \ MUST generate a\n   RESPONSE message of class 'Signaling session failure' (7)\
    \ with\n   response code 'Modified lifetime is too big' (0x11), including a\n\
    \   Signaling Session Lifetime object that carries the maximum acceptable\n  \
    \ signaling session lifetime for this node.  For received values lower\n   than\
    \ the values acceptable by the node local policy, NSLP forwarders\n   MUST generate\
    \ a RESPONSE message of class 'Signaling session failure'\n   (7) with response\
    \ code 'Modified lifetime is too small' (0x12),\n   including a Signaling Session\
    \ Lifetime object that carries the\n   minimum acceptable signaling session lifetime\
    \ for this node.  In both\n   cases, either 'Modified lifetime is too big' (0x11)\
    \ or 'Modified\n   lifetime is too small' (0x12), the NF MUST generate a NOTIFY\
    \ message\n   and send it outbound with the error class set to 'Informational'\
    \ (1)\n   and with the response code set to 'NATFW signaling session\n   terminated'\
    \ (0x05).\n   Figure 13 shows the procedure with an example, where an initiator\n\
    \   requests 60 seconds lifetime in the CREATE message and the lifetime\n   is\
    \ shortened along the path by the forwarder to 20 seconds and by the\n   responder\
    \ to 15 seconds.  When the NSLP forwarder receives the\n   RESPONSE message with\
    \ a NATFW NSLP signaling session lifetime value\n   of 15 seconds it checks whether\
    \ this value is lower or equal to the\n   acceptable value.\n   +-------+ CREATE(lt=60s)\
    \  +-------------+ CREATE(lt=20s)  +--------+\n   |       |---------------->|\
    \     NSLP    |---------------->|        |\n   |  NI   |                 |  forwarder\
    \  |                 |  NR    |\n   |       |<----------------| check 15<20 |<----------------|\
    \        |\n   +-------+ RESPONSE(lt=15s)+-------------+ RESPONSE(lt=15s)+--------+\n\
    \      lt  = lifetime\n           Figure 13: Signaling Session Lifetime Setting\
    \ Example\n"
- title: 3.5.  Message Sequencing
  contents:
  - "3.5.  Message Sequencing\n   NATFW NSLP messages need to carry an identifier\
    \ so that all nodes\n   along the path can distinguish messages sent at different\
    \ points in\n   time.  Messages can be lost along the path or duplicated.  So,\
    \ all\n   NATFW NSLP nodes should be able to identify messages that have been\n\
    \   received before (duplicated) or lost before (loss).  For message\n   replay\
    \ protection, it is necessary to keep information about messages\n   that have\
    \ already been received and requires every NATFW NSLP message\n   to carry a message\
    \ sequence number (MSN), see also Section 4.2.7.\n   The MSN MUST be set by the\
    \ NI and MUST NOT be set or modified by any\n   other node.  The initial value\
    \ for the MSN MUST be generated randomly\n   and MUST be unique only within the\
    \ NATFW NSLP signaling session for\n   which it is used.  The NI MUST increment\
    \ the MSN by one for every\n   message sent.  Once the MSN has reached the maximum\
    \ value, the next\n   value it takes is zero.  All NATFW NSLP nodes MUST use the\
    \ algorithm\n   defined in [RFC1982] to detect MSN wrap-arounds.\n   NSLP forwarders\
    \ and the responder store the MSN from the initial\n   CREATE or EXTERNAL packet\
    \ that creates the NATFW NSLP signaling\n   session as the start value for the\
    \ NATFW NSLP signaling session.  NFs\n   and NRs MUST include the received MSN\
    \ value in the corresponding\n   RESPONSE message that they generate.\n   When\
    \ receiving a CREATE or EXTERNAL message, a NATFW NSLP node uses\n   the MSN given\
    \ in the message to determine whether the state being\n   requested is different\
    \ from the state already installed.  The message\n   MUST be discarded if the\
    \ received MSN value is equal to or lower than\n   the stored MSN value.  Such\
    \ a received MSN value can indicate a\n   duplicated and delayed message or replayed\
    \ message.  If the received\n   MSN value is greater than the already stored MSN\
    \ value, the NATFW\n   NSLP MUST update its stored state accordingly, if permitted\
    \ by all\n   security checks (see Section 3.6), and store the updated MSN value\n\
    \   accordingly.\n"
- title: 3.6.  Authentication, Authorization, and Policy Decisions
  contents:
  - "3.6.  Authentication, Authorization, and Policy Decisions\n   NATFW NSLP nodes\
    \ receiving signaling messages MUST first check\n   whether this message is authenticated\
    \ and authorized to perform the\n   requested action.  NATFW NSLP nodes requiring\
    \ more information than\n   provided MUST generate an error RESPONSE of class\
    \ 'Permanent failure'\n   (0x5) with response code 'Authentication failed' (0x01)\
    \ or with\n   response code 'Authorization failed' (0x02).\n   The NATFW NSLP\
    \ is expected to run in various environments, such as\n   IP-based telephone systems,\
    \ enterprise networks, home networks, etc.\n   The requirements on authentication\
    \ and authorization are quite\n   different between these use cases.  While a\
    \ home gateway, or an\n   Internet cafe, using NSIS may well be happy with a \"\
    NATFW signaling\n   coming from inside the network\" policy for authorization\
    \ of\n   signaling, enterprise networks are likely to require more strongly\n\
    \   authenticated/authorized signaling.  This enterprise scenario may\n   require\
    \ the use of an infrastructure and administratively assigned\n   identities to\
    \ operate the NATFW NSLP.\n   Once the NI is authenticated and authorized, another\
    \ step is\n   performed.  The requested policy rule for the NATFW NSLP signaling\n\
    \   session is checked against a set of policy rules, i.e., whether the\n   requesting\
    \ NI is allowed to request the policy rule to be loaded in\n   the device.  If\
    \ this fails, the NF or NR must send an error RESPONSE\n   of class 'Permanent\
    \ failure' (5) and with response code\n   'Authorization failed' (0x02).\n"
- title: 3.7.  Protocol Operations
  contents:
  - "3.7.  Protocol Operations\n   This section defines the protocol operations including\
    \ how to create\n   NATFW NSLP signaling sessions, maintain them, delete them,\
    \ and how to\n   reserve addresses.\n   This section requires a good knowledge\
    \ of the NTLP [RFC5971] and the\n   message routing method mechanism and the associated\
    \ message routing\n   information (MRI).  The NATFW NSLP uses information from\
    \ the MRI,\n   e.g., the destination and source ports, and the NATFW NSLP to\n\
    \   construct the policy rules used on the NATFW NSLP level.  See also\n   Appendix\
    \ D for further information about this.\n"
- title: 3.7.1.  Creating Signaling Sessions
  contents:
  - "3.7.1.  Creating Signaling Sessions\n   Allowing two hosts to exchange data even\
    \ in the presence of\n   middleboxes is realized in the NATFW NSLP by the use\
    \ of the CREATE\n   message.  The NI (either the data sender or a proxy) generates\
    \ a\n   CREATE message as defined in Section 4.3.1 and hands it to the NTLP.\n\
    \   The NTLP forwards the whole message on the basis of the message\n   routing\
    \ information (MRI) towards the NR.  Each NSLP forwarder along\n   the path that\
    \ implements NATFW NSLP processes the NSLP message.\n   Forwarding is done hop-by-hop\
    \ but may pass transparently through NSLP\n   forwarders that do not contain NATFW\
    \ NSLP functionality and non-NSIS-\n   aware routers between NSLP hop way points.\
    \  When the message reaches\n   the NR, the NR can accept the request or reject\
    \ it.  The NR generates\n   a response to CREATE and this response is transported\
    \ hop-by-hop\n   towards the NI.  NATFW NSLP forwarders may reject requests at\
    \ any\n   time.  Figure 14 sketches the message flow between the NI (DS in this\n\
    \   example), an NF (e.g., NAT), and an NR (DR in this example).\n       NI  \
    \    Private Network        NF    Public Internet        NR\n       |        \
    \                      |                            |\n       | CREATE       \
    \                |                            |\n       |----------------------------->|\
    \                            |\n       |                              |      \
    \                      |\n       |                              |            \
    \                |\n       |                              | CREATE           \
    \          |\n       |                              |--------------------------->|\n\
    \       |                              |                            |\n      \
    \ |                              | RESPONSE                   |\n       |    RESPONSE\
    \                  |<---------------------------|\n       |<-----------------------------|\
    \                            |\n       |                              |      \
    \                      |\n       |                              |            \
    \                |\n           Figure 14: CREATE Message Flow with Success RESPONSE\n\
    \   There are several processing rules for a NATFW peer when generating\n   and\
    \ receiving CREATE messages, since this message type is used for\n   creating\
    \ new NATFW NSLP signaling sessions, updating existing ones,\n   and extending\
    \ the lifetime and deleting NATFW NSLP signaling\n   sessions.  The three latter\
    \ functions operate in the same way for all\n   kinds of CREATE messages, and\
    \ are therefore described in separate\n   sections:\n   o  Extending the lifetime\
    \ of NATFW NSLP signaling sessions is\n      described in Section 3.7.3.\n   o\
    \  Deleting NATFW NSLP signaling sessions is described in\n      Section 3.7.4.\n\
    \   o  Updating policy rules is described in Section 3.10.\n   For an initial\
    \ CREATE message creating a new NATFW NSLP signaling\n   session, the processing\
    \ of CREATE messages is different for every\n   NATFW node type:\n   o  NSLP initiator:\
    \ An NI only generates CREATE messages and hands\n      them over to the NTLP.\
    \  The NI should never receive CREATE\n      messages and MUST discard them.\n\
    \   o  NATFW NSLP forwarder: NFs that are unable to forward the CREATE\n     \
    \ message to the next hop MUST generate an error RESPONSE of class\n      'Permanent\
    \ failure' (5) with response code 'Did not reach the NR'\n      (0x07).  This\
    \ case may occur if the NTLP layer cannot find a NATFW\n      NSLP peer, either\
    \ another NF or the NR, and returns an error via\n      the GIST API (a timeout\
    \ error reported by GIST).  The NSLP message\n      processing at the NFs depends\
    \ on the middlebox type:\n      *  NAT: When the initial CREATE message is received\
    \ at the public\n         side of the NAT, it looks for a reservation made in\
    \ advance, by\n         using an EXTERNAL message (see Section 3.7.2).  The matching\n\
    \         process considers the received MRI information and the stored\n    \
    \     MRI information, as described in Section 3.8.  If no matching\n        \
    \ reservation can be found, i.e., no reservation has been made in\n         advance,\
    \ the NSLP MUST return an error RESPONSE of class\n         'Signaling session\
    \ failure' (7) with response code 'No\n         reservation found matching the\
    \ MRI of the CREATE request'\n         (0x03).  If there is a matching reservation,\
    \ the NSLP stores\n         the data sender's address (and if applicable port\
    \ number) as\n         part of the source IP address of the policy rule ('the\n\
    \         remembered policy rule') to be loaded, and forwards the message\n  \
    \       with the destination IP address set to the internal (private in\n    \
    \     most cases) address of the NR.  When the initial CREATE message\n      \
    \   is received at the private side, the NAT binding is allocated,\n         but\
    \ not activated (see also Appendix D.3).  An error RESPONSE\n         message\
    \ is generated, if the requested policy rule cannot be\n         reserved right\
    \ away, of class 'Signaling session failure' (7)\n         with response code\
    \ 'Requested policy rule denied due to policy\n         conflict' (0x4).  The\
    \ MRI information is updated to reflect the\n         address, and if applicable\
    \ port, translation.  The NSLP message\n         is forwarded towards the NR with\
    \ source IP address set to the\n         NAT's external address from the newly\
    \ remembered binding.\n      *  Firewall: When the initial CREATE message is received,\
    \ the NSLP\n         just remembers the requested policy rule, but does not install\n\
    \         any policy rule.  Afterwards, the message is forwarded towards\n   \
    \      the NR.  If the requested policy rule cannot be reserved right\n      \
    \   away, an error RESPONSE message is generated, of class\n         'Signaling\
    \ session failure' (7) with response code 'Requested\n         policy rule denied\
    \ due to policy conflict' (0x4).\n      *  Combined NAT and firewall: Processing\
    \ at combined firewall and\n         NAT middleboxes is the same as in the NAT\
    \ case.  No policy\n         rules are installed.  Implementations MUST take into\
    \ account\n         the order of packet processing in the firewall and NAT\n \
    \        functions within the device.  This will be referred to as\n         \"\
    order of functions\" and is generally different depending on\n         whether\
    \ the packet arrives at the external or internal side of\n         the middlebox.\n\
    \   o  NSLP receiver: NRs receiving initial CREATE messages MUST reply\n     \
    \ with a success RESPONSE of class 'Success' (2) with response code\n      set\
    \ to 'All successfully processed' (0x01), if they accept the\n      CREATE message.\
    \  Otherwise, they MUST generate a RESPONSE message\n      with a suitable response\
    \ code.  RESPONSE messages are sent back\n      NSLP hop-by-hop towards the NI,\
    \ irrespective of the response\n      codes, either success or error.\n   Remembered\
    \ policy rules at middleboxes MUST be only installed upon\n   receiving a corresponding\
    \ successful RESPONSE message with the same\n   SID as the CREATE message that\
    \ caused them to be remembered.  This is\n   a countermeasure to several problems,\
    \ for example, wastage of\n   resources due to loading policy rules at intermediate\
    \ NFs when the\n   CREATE message does not reach the final NR for some reason.\n\
    \   Processing of a RESPONSE message is different for every NSIS node\n   type:\n\
    \   o  NSLP initiator: After receiving a successful RESPONSE, the data\n     \
    \ path is configured and the DS can start sending its data to the\n      DR. \
    \ After receiving an error RESPONSE message, the NI MAY try to\n      generate\
    \ the CREATE message again or give up and report the\n      failure to the application,\
    \ depending on the error condition.\n   o  NSLP forwarder: NFs install the remembered\
    \ policy rules, if a\n      successful RESPONSE message with matching SID is received.\
    \  If an\n      ERROR RESPONSE message with matching SID is received, the NATFW\n\
    \      NSLP session is marked as 'Dead', no policy rule is installed and\n   \
    \   the remembered rule is discarded.\n   o  NSIS responder: The NR should never\
    \ receive RESPONSE messages and\n      MUST silently drop any such messages received.\n\
    \   NFs and the NR can also tear down the CREATE session at any time by\n   generating\
    \ a NOTIFY message with the appropriate response code set.\n"
- title: 3.7.2.  Reserving External Addresses
  contents:
  - "3.7.2.  Reserving External Addresses\n   NSIS signaling is intended to travel\
    \ end-to-end, even in the presence\n   of NATs and firewalls on-path.  This works\
    \ well in cases where the\n   data sender is itself behind a NAT or a firewall\
    \ as described in\n   Section 3.7.1.  For scenarios where the data receiver is\
    \ located\n   behind a NAT or a firewall and it needs to receive data flows from\n\
    \   outside its own network (usually referred to as inbound flows, see\n   Figure\
    \ 5), the problem is more troublesome.\n   NSIS signaling, as well as subsequent\
    \ data flows, are directed to a\n   particular destination IP address that must\
    \ be known in advance and\n   reachable.  Data receivers must tell the local NSIS\
    \ infrastructure\n   (i.e., the inbound firewalls/NATs) about incoming NATFW NSLP\n\
    \   signaling and data flows before they can receive these flows.  It is\n   necessary\
    \ to differentiate between data receivers behind NATs and\n   behind firewalls\
    \ to understand the further NATFW procedures.  Data\n   receivers that are only\
    \ behind firewalls already have a public IP\n   address and they need only to\
    \ be reachable for NATFW signaling.\n   Unlike data receivers that are only behind\
    \ firewalls, data receivers\n   behind NATs do not have public IP addresses; consequently,\
    \ they are\n   not reachable for NATFW signaling by entities outside their\n \
    \  addressing realm.\n   The preceding discussion addresses the situation where\
    \ a DR node that\n   wants to be reachable is unreachable because the NAT lacks\
    \ a suitable\n   rule with the 'allow' action that would forward inbound data.\n\
    \   However, in certain scenarios, a node situated behind inbound\n   firewalls\
    \ that do not block inbound data traffic (firewalls with\n   \"default to allow\"\
    ) unless requested might wish to prevent traffic\n   being sent to it from specified\
    \ addresses.  In this case, NSIS NATFW\n   signaling can be used to achieve this\
    \ by installing a policy rule\n   with its action set to 'deny' using the same\
    \ mechanisms as for\n   'allow' rules.\n   The required result is obtained by\
    \ sending an EXTERNAL message in the\n   inbound direction of the intended data\
    \ flow.  When using this\n   functionality, the NSIS initiator for the 'Reserve\
    \ External Address'\n   signaling is typically the node that will become the DR\
    \ for the\n   eventual data flow.  To distinguish this initiator from the usual\n\
    \   case where the NI is associated with the DS, the NI is denoted by NI+\n  \
    \ and the NSIS responder is similarly denoted by NR+.\n       Public Internet\
    \                Private Address\n                                           Space\n\
    \                    Edge\n    NI(DS)         NAT/FW                  NAT    \
    \               NR(DR)\n    NR+                                              \
    \            NI+\n    |               |                       |              \
    \         |\n    |               |                       |                   \
    \    |\n    |               |                       |                       |\n\
    \    |               |  EXTERNAL[(DTInfo)]   |  EXTERNAL[(DTInfo)]   |\n    |\
    \               |<----------------------|<----------------------|\n    |     \
    \          |                       |                       |\n    |          \
    \     |RESPONSE[Success/Error]|RESPONSE[Success/Error]|\n    |               |---------------------->|---------------------->|\n\
    \    |               |                       |                       |\n    |\
    \               |                       |                       |\n      ============================================================>\n\
    \                        Data Traffic Direction\n     Figure 15: Reservation Message\
    \ Flow for DR behind NAT or Firewall\n   Figure 15 shows the EXTERNAL message\
    \ flow for enabling inbound NATFW\n   NSLP signaling messages.  In this case,\
    \ the roles of the different\n   NSIS entities are:\n   o  The data receiver (DR)\
    \ for the anticipated data traffic is the\n      NSIS initiator (NI+) for the\
    \ EXTERNAL message, but becomes the\n      NSIS responder (NR) for following CREATE\
    \ messages.\n   o  The actual data sender (DS) will be the NSIS initiator (NI)\
    \ for\n      later CREATE messages and may be the NSIS target of the signaling\n\
    \      (NR+).\n   o  It may be necessary to use a signaling destination address\
    \ (SDA)\n      as the actual target of the EXTERNAL message (NR+) if the DR is\n\
    \      located behind a NAT and the address of the DS is unknown.  The\n     \
    \ SDA is an arbitrary address in the outermost address realm on the\n      other\
    \ side of the NAT from the DR.  Typically, this will be a\n      suitable public\
    \ IP address when the 'outside' realm is the public\n      Internet.  This choice\
    \ of address causes the EXTERNAL message to\n      be routed through the NATs\
    \ towards the outermost realm and would\n      force interception of the message\
    \ by the outermost NAT in the\n      network at the boundary between the private\
    \ address and the public\n      address realm (the edge-NAT).  It may also be\
    \ intercepted by other\n      NATs and firewalls on the path to the edge-NAT.\n\
    \   Basically, there are two different signaling scenarios.  Either\n   1.  the\
    \ DR behind the NAT/firewall knows the IP address of the DS in\n       advance,\
    \ or\n   2.  the address of the DS is not known in advance.\n   Case 1 requires\
    \ the NATFW NSLP to request the path-coupled message\n   routing method (PC-MRM)\
    \ from the NTLP.  The EXTERNAL message MUST be\n   sent with PC-MRM (see Section\
    \ 5.8.1 in [RFC5971]) with the direction\n   set to 'upstream' (inbound).  The\
    \ handling of case 2 depends on the\n   situation of the DR: if the DR is solely\
    \ located behind a firewall,\n   the EXTERNAL message MUST be sent with the PC-MRM,\
    \ direction\n   'upstream' (inbound), and the data flow source IP address set\
    \ to\n   'wildcard'.  If the DR is located behind a NAT, the EXTERNAL message\n\
    \   MUST be sent with the loose-end message routing method (LE-MRM, see\n   Section\
    \ 5.8.2 in [RFC5971]), the destination-address set to the\n   signaling destination\
    \ IP address (SDA, see also Appendix A).  For\n   scenarios with the DR behind\
    \ a firewall, special conditions apply\n   (see applicability statement in Appendix\
    \ C).  The data receiver is\n   challenged to determine whether it is solely located\
    \ behind firewalls\n   or NATs in order to choose the right message routing method.\
    \  This\n   decision can depend on a local configuration parameter, possibly\n\
    \   given through DHCP, or it could be discovered through other non-NSLP\n   related\
    \ testing of the network configuration.  The use of the PC-MRM\n   with the known\
    \ data sender's IP address is RECOMMENDED.  This gives\n   GIST the best possible\
    \ handle to route the message 'upstream'\n   (outbound).  The use of the LE-MRM,\
    \ if and only if the data sender's\n   IP address is not known and the data receiver\
    \ is behind a NAT, is\n   RECOMMENDED.\n   For case 2 with NAT, the NI+ (which\
    \ could be on the data receiver DR\n   or on any other host within the private\
    \ network) sends the EXTERNAL\n   message targeted to the signaling destination\
    \ IP address.  The\n   message routing for the EXTERNAL message is in the reverse\
    \ direction\n   of the normal message routing used for path-coupled signaling\
    \ where\n   the signaling is sent outbound (as opposed to inbound in this case).\n\
    \   When establishing NAT bindings (and a NATFW NSLP signaling session),\n   the\
    \ signaling direction does not matter since the data path is\n   modified through\
    \ route pinning due to the external IP address at the\n   NAT.  Subsequent NSIS\
    \ messages (and also data traffic) will travel\n   through the same NAT boxes.\
    \  However, this is only valid for the NAT\n   boxes, but not for any intermediate\
    \ firewall.  That is the reason for\n   having a separate CREATE message enabling\
    \ the reservations made with\n   EXTERNAL at the NATs and either enabling prior\
    \ reservations or\n   creating new pinholes at the firewalls that are encountered\
    \ on the\n   outbound path depending on whether the inbound and outbound routes\n\
    \   coincide.\n   The EXTERNAL signaling message creates an NSIS NATFW signaling\n\
    \   session at any intermediate NSIS NATFW peer(s) encountered,\n   independent\
    \ of the message routing method used.  Furthermore, it has\n   to be ensured that\
    \ the edge-NAT or edge-firewall device is discovered\n   as part of this process.\
    \  The end host cannot be assumed to know this\n   device -- instead the NAT or\
    \ firewall box itself is assumed to know\n   that it is located at the outer perimeter\
    \ of the network.  Forwarding\n   of the EXTERNAL message beyond this entity is\
    \ not necessary, and MUST\n   be prohibited as it may provide information on the\
    \ capabilities of\n   internal hosts.  It should be noted, that it is the outermost\
    \ NAT or\n   firewall that is the edge-device that must be found during this\n\
    \   discovery process.  For instance, when there are a NAT and\n   (afterwards)\
    \ a firewall on the outbound path at the network border,\n   the firewall is the\
    \ edge-firewall.  All messages must be forwarded to\n   the topology-wise outermost\
    \ edge-device to ensure that this device\n   knows about the NATFW NSLP signaling\
    \ sessions for incoming CREATE\n   messages.  However, the NAT is still the edge-NAT\
    \ because it has a\n   public globally routable IP address on its public side:\
    \ this is not\n   affected by any firewall between the edge-NAT and the public\
    \ network.\n   Possible edge arrangements are:\n          Public Net   -----------------\
    \  Private net  --------------\n        | Public Net|--|Edge-FW|--|FW|...|FW|--|DR|\n\
    \        | Public Net|--|Edge-FW|--|Edge-NAT|...|NAT or FW|--|DR|\n        | Public\
    \ Net|--|Edge-NAT|--|NAT or FW|...|NAT or FW|--|DR|\n   The edge-NAT or edge-firewall\
    \ device closest to the public realm\n   responds to the EXTERNAL request message\
    \ with a successful RESPONSE\n   message.  An edge-NAT includes a NATFW_EXTERNAL_IP\
    \ object (see\n   Section 4.2.2), carrying the publicly reachable IP address,\
    \ and if\n   applicable, a port number.\n   The NI+ can request each intermediate\
    \ NAT (i.e., a NAT that is not\n   the edge-NAT) to include the external binding\
    \ address (and if\n   applicable port number) in the external binding address\
    \ object.  The\n   external binding address object stores the external IP address\
    \ (and\n   port) at the particular NAT.  The NI+ has to include the external\n\
    \   binding address (see Section 4.2.3) object in the request message, if\n  \
    \ it wishes to obtain the information.\n   There are several processing rules\
    \ for a NATFW peer when generating\n   and receiving EXTERNAL messages, since\
    \ this message type is used for\n   creating new reserve NATFW NSLP signaling\
    \ sessions, updating\n   existing, extending the lifetime, and deleting NATFW\
    \ NSLP signaling\n   session.  The three latter functions operate in the same\
    \ way for all\n   kinds of CREATE and EXTERNAL messages, and are therefore described\
    \ in\n   separate sections:\n   o  Extending the lifetime of NATFW NSLP signaling\
    \ sessions is\n      described in Section 3.7.3.\n   o  Deleting NATFW NSLP signaling\
    \ sessions is described in\n      Section 3.7.4.\n   o  Updating policy rules\
    \ is described in Section 3.10.\n   The NI+ MUST always include a NATFW_DTINFO\
    \ object in the EXTERNAL\n   message.  Especially, the LE-MRM does not include\
    \ enough information\n   for some types of NATs (basically, those NATs that also\
    \ translate\n   port numbers) to perform the address translation.  This information\n\
    \   is provided in the NATFW_DTINFO (see Section 4.2.8).  This\n   information\
    \ MUST include at least the 'dst port number' and\n   'protocol' fields, in the\
    \ NATFW_DTINFO object as these may be\n   required by NATs that are en route,\
    \ depending on the type of the NAT.\n   All other fields MAY be set by the NI+\
    \ to restrict the set of\n   possible NIs.  An edge-NAT will use the information\
    \ provided in the\n   NATFW_DTINFO object to allow only a NATFW CREATE message\
    \ with a\n   matching MRI to be forwarded.  The MRI of the NATFW CREATE message\n\
    \   has to use the parameters set in NATFW_DTINFO object ('src IPv4/v6\n   address',\
    \ 'src port number', 'protocol') as the source IP address/\n   port of the flow\
    \ from DS to DR.  A NAT requiring information carried\n   in the NATFW_DTINFO\
    \ can generate a number of error RESPONSE messages\n   of class 'Signaling session\
    \ failure' (7):\n   o  'Requested policy rule denied due to policy conflict' (0x04)\n\
    \   o  'Unknown policy rule action' (0x05)\n   o  'Requested rule action not applicable'\
    \ (0x06)\n   o  'NATFW_DTINFO object is required' (0x07)\n   o  'Requested value\
    \ in sub_ports field in NATFW_EFI not permitted'\n      (0x08)\n   o  'Requested\
    \ IP protocol not supported' (0x09)\n   o  'Plain IP policy rules not permitted\
    \ -- need transport layer\n      information' (0x0A)\n   o  'Source IP address\
    \ range is too large' (0x0C)\n   o  'Destination IP address range is too large'\
    \ (0x0D)\n   o  'Source L4-port range is too large' (0x0E)\n   o  'Destination\
    \ L4-port range is too large' (0x0F)\n   Processing of EXTERNAL messages is specific\
    \ to the NSIS node type:\n   o  NSLP initiator: NI+ only generate EXTERNAL messages.\
    \  When the\n      data sender's address information is known in advance, the\
    \ NI+ can\n      include a NATFW_DTINFO object in the EXTERNAL message, if not\n\
    \      anyway required to do so (see above).  When the data sender's IP\n    \
    \  address is not known, the NI+ MUST NOT include an IP address in\n      the\
    \ NATFW_DTINFO object.  The NI should never receive EXTERNAL\n      messages and\
    \ MUST silently discard it.\n   o  NSLP forwarder: The NSLP message processing\
    \ at NFs depends on the\n      middlebox type:\n      *  NAT: NATs check whether\
    \ the message is received at the external\n         (public in most cases) address\
    \ or at the internal (private)\n         address.  If received at the external\
    \ address, an NF MUST\n         generate an error RESPONSE of class 'Protocol\
    \ error' (3) with\n         response code 'Received EXTERNAL request message on\
    \ external\n         side' (0x0B).  If received at the internal (private address)\n\
    \         and the NATFW_EFI object contains the action 'deny', an error\n    \
    \     RESPONSE of class 'Protocol error' (3) with response code\n         'Requested\
    \ rule action not applicable' (0x06) MUST be\n         generated.  If received\
    \ at the internal address, an IP address,\n         and if applicable, one or\
    \ more ports, are reserved.  If the\n         NATFW_EXTERNAL_BINDING object is\
    \ present in the message, any\n         NAT that is not an edge-NAT MUST include\
    \ the allocated external\n         IP address, and if applicable one or more ports,\
    \ (the external\n         binding address) in the NATFW_EXTERNAL_BINDING object.\
    \  If it\n         is an edge-NAT and there is no edge-firewall beyond, the NSLP\n\
    \         message is not forwarded any further and a successful RESPONSE\n   \
    \      message is generated containing a NATFW_EXTERNAL_IP object\n         holding\
    \ the translated address, and if applicable, port\n         information from the\
    \ binding reserved as a result of the\n         EXTERNAL message.  The edge-NAT\
    \ MUST copy the\n         NATFW_EXTERNAL_BINDING object to response message, if\
    \ the\n         object is included in the EXTERNAL message.  The RESPONSE\n  \
    \       message is sent back towards the NI+.  If it is not an edge-\n       \
    \  NAT, the NSLP message is forwarded further using the translated\n         IP\
    \ address as signaling source IP address in the LE-MRM and\n         translated\
    \ port in the NATFW_DTINFO object in the field 'DR\n         port number', i.e.,\
    \ the NATFW_DTINFO object is updated to\n         reflect the translated port\
    \ number.  The edge-NAT or any other\n         NAT MUST reject EXTERNAL messages\
    \ not carrying a NATFW_DTINFO\n         object or if the address information within\
    \ this object is\n         invalid or is not compliant with local policies (e.g.,\
    \ the\n         information provided relates to a range of addresses\n       \
    \  ('wildcarded') but the edge-NAT requires exact information\n         about\
    \ DS's IP address and port) with the above mentioned\n         response codes.\n\
    \      *  Firewall: Non edge-firewalls remember the requested policy\n       \
    \  rule, keep NATFW NSLP signaling session state, and forward the\n         message.\
    \  Edge-firewalls stop forwarding the EXTERNAL message.\n         The policy rule\
    \ is immediately loaded if the action in the\n         NATFW_EFI object is set\
    \ to 'deny' and the node is an edge-\n         firewall.  The policy rule is remembered,\
    \ but not activated, if\n         the action in the NATFW_EFI object is set to\
    \ 'allow'.  In both\n         cases, a successful RESPONSE message is generated.\
    \  If the\n         action is 'allow', and the NATFW_DTINFO object is included,\
    \ and\n         the MRM is set to LE-MRM in the request, additionally a\n    \
    \     NATFW_EXTERNAL_IP object is included in the RESPONSE message,\n        \
    \ holding the translated address, and if applicable port,\n         information.\
    \  This information is obtained from the\n         NATFW_DTINFO object's 'DR port\
    \ number' and the source-address\n         of the LE-MRM.  The edge-firewall MUST\
    \ copy the\n         NATFW_EXTERNAL_BINDING object to response message, if the\n\
    \         object is included in the EXTERNAL message.\n      *  Combined NAT and\
    \ firewall: Processing at combined firewall and\n         NAT middleboxes is the\
    \ same as in the NAT case.\n   o  NSLP receiver: This type of message should never\
    \ be received by\n      any NR+, and it MUST generate an error RESPONSE message\
    \ of class\n      'Permanent failure' (5) with response code 'No edge-device here'\n\
    \      (0x06).\n   Processing of a RESPONSE message is different for every NSIS\
    \ node\n   type:\n   o  NSLP initiator: Upon receiving a successful RESPONSE message,\
    \ the\n      NI+ can rely on the requested configuration for future inbound\n\
    \      NATFW NSLP signaling sessions.  If the response contains a\n      NATFW_EXTERNAL_IP\
    \ object, the NI can use IP address and port pairs\n      carried for further\
    \ application signaling.  After receiving an\n      error RESPONSE message, the\
    \ NI+ MAY try to generate the EXTERNAL\n      message again or give up and report\
    \ the failure to the\n      application, depending on the error condition.\n \
    \  o  NSLP forwarder: NFs simply forward this message as long as they\n      keep\
    \ state for the requested reservation, if the RESPONSE message\n      contains\
    \ NATFW_INFO object with class set to 'Success' (2).  If\n      the RESPONSE message\
    \ contains NATFW_INFO object with class set not\n      to 'Success' (2), the NATFW\
    \ NSLP signaling session is marked as\n      'Dead'.\n   o  NSIS responder: This\
    \ type of message should never be received by\n      any NR+.  The NF should never\
    \ receive response messages and MUST\n      silently discard it.\n   NFs and the\
    \ NR can also tear down the EXTERNAL session at any time by\n   generating a NOTIFY\
    \ message with the appropriate response code set.\n   Reservations with action\
    \ 'allow' made with EXTERNAL MUST be enabled\n   by a subsequent CREATE message.\
    \  A reservation made with EXTERNAL\n   (independent of selected action) is kept\
    \ alive as long as the NI+\n   refreshes the particular NATFW NSLP signaling session\
    \ and it can be\n   reused for multiple, different CREATE messages.  An NI+ may\
    \ decide to\n   tear down a reservation immediately after receiving a CREATE message.\n\
    \   This implies that a new NATFW NSLP signaling session must be created\n   for\
    \ each new CREATE message.  The CREATE message does not re-use the\n   NATFW NSLP\
    \ signaling session created by EXTERNAL.\n   Without using CREATE (see Section\
    \ 3.7.1) or EXTERNAL in proxy mode\n   (see Section 3.7.6) no data traffic will\
    \ be forwarded to the DR\n   beyond the edge-NAT or edge-firewall.  The only function\
    \ of EXTERNAL\n   is to ensure that subsequent CREATE messages traveling towards\
    \ the NR\n   will be forwarded across the public-private boundary towards the\
    \ DR.\n   Correlation of incoming CREATE messages to EXTERNAL reservation\n  \
    \ states is described in Section 3.8.\n"
- title: 3.7.3.  NATFW NSLP Signaling Session Refresh
  contents:
  - "3.7.3.  NATFW NSLP Signaling Session Refresh\n   NATFW NSLP signaling sessions\
    \ are maintained on a soft-state basis.\n   After a specified timeout, sessions\
    \ and corresponding policy rules\n   are removed automatically by the middlebox,\
    \ if they are not\n   refreshed.  Soft-state is created by CREATE and EXTERNAL\
    \ and the\n   maintenance of this state must be done by these messages.  State\n\
    \   created by CREATE must be maintained by CREATE, state created by\n   EXTERNAL\
    \ must be maintained by EXTERNAL.  Refresh messages, are\n   messages carrying\
    \ the same session ID as the initial message and a\n   NATFW_LT lifetime object\
    \ with a lifetime greater than zero.  Messages\n   with the same SID but which\
    \ carry a different MRI are treated as\n   updates of the policy rules and are\
    \ processed as defined in\n   Section 3.10.  Every refresh CREATE or EXTERNAL\
    \ message MUST be\n   acknowledged by an appropriate response message generated\
    \ by the NR.\n   Upon reception by each NSLP forwarder, the state for the given\n\
    \   session ID is extended by the NATFW NSLP signaling session refresh\n   period,\
    \ a period of time calculated based on a proposed refresh\n   message period.\
    \  The new (extended) lifetime of a NATFW NSLP\n   signaling session is calculated\
    \ as current local time plus proposed\n   lifetime value (NATFW NSLP signaling\
    \ session refresh period).\n   Section 3.4 defines the process of calculating\
    \ lifetimes in detail.\n   NI      Public Internet        NAT    Private address\
    \       NR\n      |                              |          space            \
    \ |\n      | CREATE[lifetime > 0]         |                            |\n   \
    \   |----------------------------->|                            |\n      |   \
    \                           |                            |\n      |          \
    \                    |                            |\n      |                 \
    \             |  CREATE[lifetime > 0]      |\n      |                        \
    \      |--------------------------->|\n      |                              |\
    \                            |\n      |                              |   RESPONSE[Success/Error]\
    \  |\n      |   RESPONSE[Success/Error]    |<---------------------------|\n  \
    \    |<-----------------------------|                            |\n      |  \
    \                            |                            |\n      |         \
    \                     |                            |\n       Figure 16: Successful\
    \ Refresh Message Flow, CREATE as Example\n   Processing of NATFW NSLP signaling\
    \ session refresh CREATE and\n   EXTERNAL messages is different for every NSIS\
    \ node type:\n   o  NSLP initiator: The NI/NI+ can generate NATFW NSLP signaling\n\
    \      session refresh CREATE/EXTERNAL messages before the NATFW NSLP\n      signaling\
    \ session times out.  The rate at which the refresh\n      CREATE/EXTERNAL messages\
    \ are sent and their relation to the NATFW\n      NSLP signaling session state\
    \ lifetime is discussed further in\n      Section 3.4.\n   o  NSLP forwarder:\
    \ Processing of this message is independent of the\n      middlebox type and is\
    \ as described in Section 3.4.\n   o  NSLP responder: NRs accepting a NATFW NSLP\
    \ signaling session\n      refresh CREATE/EXTERNAL message generate a successful\
    \ RESPONSE\n      message, including the granted lifetime value of Section 3.4\
    \ in a\n      NATFW_LT object.\n"
- title: 3.7.4.  Deleting Signaling Sessions
  contents:
  - "3.7.4.  Deleting Signaling Sessions\n   NATFW NSLP signaling sessions can be\
    \ deleted at any time.  NSLP\n   initiators can trigger this deletion by using\
    \ a CREATE or EXTERNAL\n   messages with a lifetime value set to 0, as shown in\
    \ Figure 17.\n   Whether a CREATE or EXTERNAL message type is use depends on how\
    \ the\n   NATFW NSLP signaling session was created.\n      NI      Public Internet\
    \        NAT    Private address       NR\n      |                            \
    \  |          space             |\n      |    CREATE[lifetime=0]        |    \
    \                        |\n      |----------------------------->|           \
    \                 |\n      |                              |                  \
    \          |\n      |                              | CREATE[lifetime=0]      \
    \   |\n      |                              |--------------------------->|\n \
    \     |                              |                            |\n        \
    \     Figure 17: Delete message flow, CREATE as Example\n   NSLP nodes receiving\
    \ this message delete the NATFW NSLP signaling\n   session immediately.  Policy\
    \ rules associated with this particular\n   NATFW NSLP signaling session MUST\
    \ be also deleted immediately.  This\n   message is forwarded until it reaches\
    \ the final NR.  The CREATE/\n   EXTERNAL message with a lifetime value of 0,\
    \ does not generate any\n   response, either positive or negative, since there\
    \ is no NSIS state\n   left at the nodes along the path.\n   NSIS initiators can\
    \ use CREATE/EXTERNAL message with lifetime set to\n   zero in an aggregated way,\
    \ such that a single CREATE or EXTERNAL\n   message is terminating multiple NATFW\
    \ NSLP signaling sessions.  NIs\n   can follow this procedure if they like to\
    \ aggregate NATFW NSLP\n   signaling session deletion requests: the NI uses the\
    \ CREATE or\n   EXTERNAL message with the session ID set to zero and the MRI's\n\
    \   source-address set to its used IP address.  All other fields of the\n   respective\
    \ NATFW NSLP signaling sessions to be terminated are set as\n   well; otherwise,\
    \ these fields are completely wildcarded.  The NSLP\n   message is transferred\
    \ to the NTLP requesting 'explicit routing' as\n   described in Sections 5.2.1\
    \ and 7.1.4. in [RFC5971].\n   The outbound NF receiving such an aggregated CREATE\
    \ or EXTERNAL\n   message MUST reject it with an error RESPONSE of class 'Permanent\n\
    \   failure' (5) with response code 'Authentication failed' (0x01) if the\n  \
    \ authentication fails and with an error RESPONSE of class 'Permanent\n   failure'\
    \ (5) with response code 'Authorization failed' (0x02) if the\n   authorization\
    \ fails.  Proof of ownership of NATFW NSLP signaling\n   sessions, as it is defined\
    \ in this memo (see Section 5.2.1), is not\n   possible when using this aggregation\
    \ for multiple session\n   termination.  However, the outbound NF can use the\
    \ relationship\n   between the information of the received CREATE or EXTERNAL\
    \ message\n   and the GIST messaging association where the request has been\n\
    \   received.  The outbound NF MUST only accept this aggregated CREATE or\n  \
    \ EXTERNAL message through already established GIST messaging\n   associations\
    \ with the NI.  The outbound NF MUST NOT propagate this\n   aggregated CREATE\
    \ or EXTERNAL message but it MAY generate and forward\n   per NATFW NSLP signaling\
    \ session CREATE or EXTERNAL messages.\n"
- title: 3.7.5.  Reporting Asynchronous Events
  contents:
  - "3.7.5.  Reporting Asynchronous Events\n   NATFW NSLP forwarders and NATFW NSLP\
    \ responders must have the ability\n   to report asynchronous events to other\
    \ NATFW NSLP nodes, especially\n   to allow reporting back to the NATFW NSLP initiator.\
    \  Such\n   asynchronous events may be premature NATFW NSLP signaling session\n\
    \   termination, changes in local policies, route change or any other\n   reason\
    \ that indicates change of the NATFW NSLP signaling session\n   state.\n   NFs\
    \ and NRs may generate NOTIFY messages upon asynchronous events,\n   with a NATFW_INFO\
    \ object indicating the reason for event.  These\n   reasons can be carried in\
    \ the NATFW_INFO object (class MUST be set to\n   'Informational' (1)) within\
    \ the NOTIFY message.  This list shows the\n   response codes and the associated\
    \ actions to take at NFs and the NI:\n   o  'Route change: Possible route change\
    \ on the outbound path' (0x01):\n      Follow instructions in Section 3.9.  This\
    \ MUST be sent inbound and\n      outbound, if the signaling session is any state\
    \ except\n      'Transitory'.  The NOTIFY message for signaling sessions in state\n\
    \      Transitory MUST be discarded, as the signaling session is anyhow\n    \
    \  Transitory.  The outbound NOTIFY message MUST be sent with\n      explicit\
    \ routing by providing the SII-Handle to the NTLP.\n   o  'Re-authentication required'\
    \ (0x02): The NI should re-send the\n      authentication.  This MUST be sent\
    \ inbound.\n   o  'NATFW node is going down soon' (0x03): The NI and other NFs\n\
    \      should be prepared for a service interruption at any time.  This\n    \
    \  message MAY be sent inbound and outbound.\n   o  'NATFW signaling session lifetime\
    \ expired' (0x04): The NATFW\n      signaling session has expired and the signaling\
    \ session is invalid\n      now.  NFs MUST mark the signaling session as 'Dead'.\
    \  This message\n      MAY be sent inbound and outbound.\n   o  'NATFW signaling\
    \ session terminated' (0x05): The NATFW signaling\n      session has been terminated\
    \ for some reason and the signaling\n      session is invalid now.  NFs MUST mark\
    \ the signaling session as\n      'Dead'.  This message MAY be sent inbound and\
    \ outbound.\n   NOTIFY messages are always sent hop-by-hop inbound towards NI\
    \ until\n   they reach NI or outbound towards the NR as indicated in the list\n\
    \   above.\n   The initial processing when receiving a NOTIFY message is the same\n\
    \   for all NATFW nodes: NATFW nodes MUST only accept NOTIFY messages\n   through\
    \ already established NTLP messaging associations.  The further\n   processing\
    \ is different for each NATFW NSLP node type and depends on\n   the events notified:\n\
    \   o  NSLP initiator: NIs analyze the notified event and behave\n      appropriately\
    \ based on the event type.  NIs MUST NOT generate\n      NOTIFY messages.\n  \
    \ o  NSLP forwarder: NFs analyze the notified event and behave based on\n    \
    \  the above description per response code.  NFs SHOULD generate\n      NOTIFY\
    \ messages upon asynchronous events and forward them inbound\n      towards the\
    \ NI or outbound towards the NR, depending on the\n      received direction, i.e.,\
    \ inbound messages MUST be forwarded\n      further inbound and outbound messages\
    \ MUST be forwarded further\n      outbound.  NFs MUST silently discard NOTIFY\
    \ messages that have\n      been received outbound but are only allowed to be\
    \ sent inbound,\n      e.g., 'Re-authentication required' (0x02).\n   o  NSLP\
    \ responder: NRs SHOULD generate NOTIFY messages upon\n      asynchronous events\
    \ including a response code based on the\n      reported event.  The NR MUST silently\
    \ discard NOTIFY messages that\n      have been received outbound but are only\
    \ allowed to be sent\n      inbound, e.g., 'Re-authentication required' (0x02).\n\
    \   NATFW NSLP forwarders, keeping multiple NATFW NSLP signaling sessions\n  \
    \ at the same time, can experience problems when shutting down service\n   suddenly.\
    \  This sudden shutdown can be as a result of local node\n   failure, for instance,\
    \ due to a hardware failure.  This NF generates\n   NOTIFY messages for each of\
    \ the NATFW NSLP signaling sessions and\n   tries to send them inbound.  Due to\
    \ the number of NOTIFY messages to\n   be sent, the shutdown of the node may be\
    \ unnecessarily prolonged,\n   since not all messages can be sent at the same\
    \ time.  This case can\n   be described as a NOTIFY storm, if a multitude of NATFW\
    \ NSLP\n   signaling sessions is involved.\n   To avoid the need for generating\
    \ per NATFW NSLP signaling session\n   NOTIFY messages in such a scenario described\
    \ or similar cases, NFs\n   SHOULD follow this procedure: the NF uses the NOTIFY\
    \ message with the\n   session ID in the NTLP set to zero, with the MRI completely\n\
    \   wildcarded, using the 'explicit routing' as described in Sections\n   5.2.1\
    \ and 7.1.4 of [RFC5971].  The inbound NF receiving this type of\n   NOTIFY immediately\
    \ regards all NATFW NSLP signaling sessions from\n   that peer matching the MRI\
    \ as void.  This message will typically\n   result in multiple NOTIFY messages\
    \ at the inbound NF, i.e., the NF\n   can generate per terminated NATFW NSLP signaling\
    \ session a NOTIFY\n   message.  However, an NF MAY also aggregate the NOTIFY\
    \ messages as\n   described here.\n"
- title: 3.7.6.  Proxy Mode of Operation
  contents:
  - "3.7.6.  Proxy Mode of Operation\n   Some migration scenarios need specialized\
    \ support to cope with cases\n   where NSIS is only deployed in some areas of\
    \ the Internet.  End-to-\n   end signaling is going to fail without NSIS support\
    \ at or near both\n   data sender and data receiver terminals.  A proxy mode of\
    \ operation\n   is needed.  This proxy mode of operation must terminate the NATFW\n\
    \   NSLP signaling topologically-wise as close as possible to the\n   terminal\
    \ for which it is proxying and proxy all messages.  This NATFW\n   NSLP node doing\
    \ the proxying of the signaling messages becomes either\n   the NI or the NR for\
    \ the particular NATFW NSLP signaling session,\n   depending on whether it is\
    \ the DS or DR that does not support NSIS.\n   Typically, the edge-NAT or the\
    \ edge-firewall would be used to proxy\n   NATFW NSLP messages.\n   This proxy\
    \ mode operation does not require any new CREATE or EXTERNAL\n   message type,\
    \ but relies on extended CREATE and EXTERNAL message\n   types.  They are called,\
    \ respectively, CREATE-PROXY and EXTERNAL-\n   PROXY and are distinguished by\
    \ setting the P flag in the NSLP header\n   to P=1.  This flag instructs edge-NATs\
    \ and edge-firewalls receiving\n   them to operate in proxy mode for the NATFW\
    \ NSLP signaling session in\n   question.  The semantics of the CREATE and EXTERNAL\
    \ message types are\n   not changed and the behavior of the various node types\
    \ is as defined\n   in Sections 3.7.1 and 3.7.2, except for the proxying node.\
    \  The\n   following paragraphs describe the proxy mode operation for data\n \
    \  receivers behind middleboxes and data senders behind middleboxes.\n"
- title: 3.7.6.1.  Proxying for a Data Sender
  contents:
  - "3.7.6.1.  Proxying for a Data Sender\n   The NATFW NSLP gives the NR the ability\
    \ to install state on the\n   inbound path towards the data sender for outbound\
    \ data packets, even\n   when only the receiving side is running NSIS (as shown\
    \ in Figure 18).\n   The goal of the method described is to trigger the edge-NAT/\n\
    \   edge-firewall to generate a CREATE message on behalf of the data\n   receiver.\
    \  In this case, an NR can signal towards the network border\n   as it is performed\
    \ in the standard EXTERNAL message handling scenario\n   as in Section 3.7.2.\
    \  The message is forwarded until the edge-NAT/\n   edge-firewall is reached.\
    \  A public IP address and port number is\n   reserved at an edge-NAT/edge-firewall.\
    \  As shown in Figure 18, unlike\n   the standard EXTERNAL message handling case,\
    \ the edge-NAT/\n   edge-firewall is triggered to send a CREATE message on a new\
    \ reverse\n   path that traverse several firewalls or NATs.  The new reverse path\n\
    \   for CREATE is necessary to handle routing asymmetries between the\n   edge-NAT/edge-firewall\
    \ and the DR.  It must be stressed that the\n   semantics of the CREATE and EXTERNAL\
    \ messages are not changed, i.e.,\n   each is processed as described earlier.\n\
    \      DS       Public Internet     NAT/FW    Private address      DR\n     No\
    \ NI                            NF         space            NR\n      NR+    \
    \                                                     NI+\n      |           \
    \                    |  EXTERNAL-PROXY[(DTInfo)] |\n      |                  \
    \             |<------------------------- |\n      |                         \
    \      |  RESPONSE[Error/Success]  |\n      |                               |\
    \ ---------------------- >  |\n      |                               |   CREATE\
    \                  |\n      |                               | ------------------------>\
    \ |\n      |                               |  RESPONSE[Error/Success]  |\n   \
    \   |                               | <----------------------   |\n      |   \
    \                            |                           |\n         Figure 18:\
    \ EXTERNAL Triggering Sending of CREATE Message\n   A NATFW_NONCE object, carried\
    \ in the EXTERNAL and CREATE message, is\n   used to build the relationship between\
    \ received CREATEs at the\n   message initiator.  An NI+ uses the presence of\
    \ the NATFW_NONCE\n   object to correlate it to the particular EXTERNAL-PROXY.\
    \  The absence\n   of a NONCE object indicates a CREATE initiated by the DS and\
    \ not by\n   the edge-NAT.  The two signaling sessions, i.e., the session for\n\
    \   EXTERNAL-PROXY and the session for CREATE, are not independent.  The\n   primary\
    \ session is the EXTERNAL-PROXY session.  The CREATE session is\n   secondary\
    \ to the EXTERNAL-PROXY session, i.e., the CREATE session is\n   valid as long\
    \ as the EXTERNAL-PROXY session is the signaling states\n   'Established' or 'Transitory'.\
    \  There is no CREATE session in any\n   other signaling state of the EXTERNAL-PROXY,\
    \ i.e., 'Pending' or\n   'Dead'.  This ensures fate-sharing between the two signaling\n\
    \   sessions.\n   These processing rules of EXTERNAL-PROXY messages are added\
    \ to the\n   regular EXTERNAL processing:\n   o  NSLP initiator (NI+): The NI+\
    \ MUST take the session ID (SID) value\n      of the EXTERNAL-PROXY session as\
    \ the nonce value of the\n      NATFW_NONCE object.\n   o  NSLP forwarder being\
    \ either edge-NAT or edge-firewall: When the NF\n      accepts an EXTERNAL-PROXY\
    \ message, it generates a successful\n      RESPONSE message as if it were the\
    \ NR, and it generates a CREATE\n      message as defined in Section 3.7.1 and\
    \ includes a NATFW_NONCE\n      object having the same value as of the received\
    \ NATFW_NONCE\n      object.  The NF MUST NOT generate a CREATE-PROXY message.\
    \  The NF\n      MUST refresh the CREATE message signaling session only if an\n\
    \      EXTERNAL-PROXY refresh message has been received first.  This also\n  \
    \    includes tearing down signaling sessions, i.e., the NF must tear\n      down\
    \ the CREATE signaling session only if an EXTERNAL-PROXY\n      message with lifetime\
    \ set to 0 has been received first.\n   The scenario described in this section\
    \ challenges the data receiver\n   because it must make a correct assumption about\
    \ the data sender's\n   ability to use NSIS NATFW NSLP signaling.  It is possible\
    \ for the DR\n   to make the wrong assumption in two different ways:\n      a)\
    \ the DS is NSIS unaware but the DR assumes the DS to be NSIS\n         aware,\
    \ and\n      b) the DS is NSIS aware but the DR assumes the DS to be NSIS\n  \
    \       unaware.\n   Case a) will result in middleboxes blocking the data traffic,\
    \ since\n   the DS will never send the expected CREATE message.  Case b) will\n\
    \   result in the DR successfully requesting proxy mode support by the\n   edge-NAT\
    \ or edge-firewall.  The edge-NAT/edge-firewall will send\n   CREATE messages\
    \ and DS will send CREATE messages as well.  Both\n   CREATE messages are handled\
    \ as separated NATFW NSLP signaling\n   sessions and therefore the common rules\
    \ per NATFW NSLP signaling\n   session apply; the NATFW_NONCE object is used to\
    \ differentiate CREATE\n   messages generated by the edge-NAT/edge-firewall from\
    \ the NI-\n   initiated CREATE messages.  It is the NR's responsibility to decide\n\
    \   whether to tear down the EXTERNAL-PROXY signaling sessions in the\n   case\
    \ where the data sender's side is NSIS aware, but was incorrectly\n   assumed\
    \ not to be so by the DR.  It is RECOMMENDED that a DR behind\n   NATs use the\
    \ proxy mode of operation by default, unless the DR knows\n   that the DS is NSIS\
    \ aware.  The DR MAY cache information about data\n   senders that it has found\
    \ to be NSIS aware in past NATFW NSLP\n   signaling sessions.\n   There is a possible\
    \ race condition between the RESPONSE message to\n   the EXTERNAL-PROXY and the\
    \ CREATE message generated by the edge-NAT.\n   The CREATE message can arrive\
    \ earlier than the RESPONSE message.  An\n   NI+ MUST accept CREATE messages generated\
    \ by the edge-NAT even if the\n   RESPONSE message to the EXTERNAL-PROXY was not\
    \ received.\n"
- title: 3.7.6.2.  Proxying for a Data Receiver
  contents:
  - "3.7.6.2.  Proxying for a Data Receiver\n   As with data receivers behind middleboxes,\
    \ data senders behind\n   middleboxes can require proxy mode support.  The issue\
    \ here is that\n   there is no NSIS support at the data receiver's side and, by\
    \ default,\n   there will be no response to CREATE messages.  This scenario requires\n\
    \   the last NSIS NATFW NSLP-aware node to terminate the forwarding and\n   to\
    \ proxy the response to the CREATE message, meaning that this node\n   is generating\
    \ RESPONSE messages.  This last node may be an edge-NAT/\n   edge-firewall, or\
    \ any other NATFW NSLP peer, that detects that there\n   is no NR available (probably\
    \ as a result of GIST timeouts but there\n   may be other triggers).\n      DS\
    \       Private Address      NAT/FW   Public Internet      NR\n      NI      \
    \     Space              NF                         no NR\n      |           \
    \                    |                           |\n      |         CREATE-PROXY\
    \          |                           |\n      |------------------------------>|\
    \                           |\n      |                               |       \
    \                    |\n      |   RESPONSE[SUCCESS/ERROR]     |              \
    \             |\n      |<------------------------------|                     \
    \      |\n      |                               |                           |\n\
    \                 Figure 19: Proxy Mode CREATE Message Flow\n   The processing\
    \ of CREATE-PROXY messages and RESPONSE messages is\n   similar to Section 3.7.1,\
    \ except that forwarding is stopped at the\n   edge-NAT/edge-firewall.  The edge-NAT/edge-firewall\
    \ responds back to\n   NI according to the situation (error/success) and will\
    \ be the NR for\n   future NATFW NSLP communication.\n   The NI can choose the\
    \ proxy mode of operation although the DR is NSIS\n   aware.  The CREATE-PROXY\
    \ mode would not configure all NATs and\n   firewalls along the data path, since\
    \ it is terminated at the edge-\n   device.  Any device beyond this point will\
    \ never receive any NATFW\n   NSLP signaling for this flow.\n"
- title: 3.7.6.3.  Incremental Deployment Using the Proxy Mode
  contents:
  - "3.7.6.3.  Incremental Deployment Using the Proxy Mode\n   The above sections\
    \ described the proxy mode for cases where the NATFW\n   NSLP is solely deployed\
    \ at the network edges.  However, the NATFW\n   NSLP might be incrementally deployed\
    \ first in some network edges, but\n   later on also in other parts of the network.\
    \  Using the proxy mode\n   only would prevent the NI from determining whether\
    \ the other parts of\n   the network have also been upgraded to use the NATFW\
    \ NSLP.  One way\n   of determining whether the path from the NI to the NR is\
    \ NATFW-NSLP-\n   capable is to use the regular CREATE message and to wait for\
    \ a\n   successful response or an error response.  This will lead to extra\n \
    \  messages being sent, as a CREATE message, in addition to the CREATE-\n   PROXY\
    \ message (which is required anyhow), is sent from the NI.\n   The NATFW NSLP\
    \ allows the usage of the proxy-mode and a further\n   probing of the path by\
    \ the edge-NAT or edge-firewall.  The NI can\n   request proxy-mode handling as\
    \ described, and can set the E flag (see\n   Figure 20) to request the edge-NAT\
    \ or edge-firewall to probe the\n   further path for NATFW NSLP enabled NFs or\
    \ an NR.\n   The edge-NAT or edge-firewall MUST continue to send the CREATE-PROXY\n\
    \   or EXTERNAL-proxy towards the NR, if the received proxy-mode message\n   has\
    \ the E flag set, in addition to the regular proxy mode handling.\n   The edge-NAT\
    \ or edge-firewall relies on NTLP measures to determine\n   whether or not there\
    \ is another NATFW NSLP reachable towards the NR.\n   A failed attempt to forward\
    \ the request message to the NR will be\n   silently discarded.  A successful\
    \ attempt of forwarding the request\n   message to the NR will be acknowledged\
    \ by the NR with a successful\n   response message, which is subject to the regular\
    \ behavior described\n   in the proxy-mode sections.\n"
- title: 3.7.6.4.  Deployment Considerations for Edge-Devices
  contents:
  - "3.7.6.4.  Deployment Considerations for Edge-Devices\n   The proxy mode assumes\
    \ that the edge-NAT or edge-firewall are\n   properly configured by network operator,\
    \ i.e., the edge-device is\n   really the final NAT or firewall of that particular\
    \ network.  There\n   is currently no known way of letting the NATFW NSLP automatically\n\
    \   detect which of the NAT or firewalls are the actual edge of a\n   network.\
    \  Therefore, it is important for the network operator to\n   configure the edge-NAT\
    \ or edge-firewall and also to re-configure\n   these devices if they are not\
    \ at the edge anymore.  For instance, an\n   edge-NAT is located within an ISP\
    \ and the ISP chooses to place\n   another NAT in front of this edge-NAT.  In\
    \ this case, the ISP needs\n   to reconfigure the old edge-NAT to be a regular\
    \ NATFW NLSP NAT and to\n   configure the newly installed NAT to be the edge-NAT.\n"
- title: 3.8.  Demultiplexing at NATs
  contents:
  - "3.8.  Demultiplexing at NATs\n   Section 3.7.2 describes how NSIS nodes behind\
    \ NATs can obtain a\n   publicly reachable IP address and port number at a NAT\
    \ and how the\n   resulting mapping rule can be activated by using CREATE messages\
    \ (see\n   Section 3.7.1).  The information about the public IP address/port\n\
    \   number can be transmitted via an application-level signaling protocol\n  \
    \ and/or third party to the communication partner that would like to\n   send\
    \ data toward the host behind the NAT.  However, NSIS signaling\n   flows are\
    \ sent towards the address of the NAT at which this\n   particular IP address\
    \ and port number is allocated and not directly\n   to the allocated IP address\
    \ and port number.  The NATFW NSLP\n   forwarder at this NAT needs to know how\
    \ the incoming NSLP CREATE\n   messages are related to reserved addresses, meaning\
    \ how to\n   demultiplex incoming NSIS CREATE messages.\n   The demultiplexing\
    \ method uses information stored at the local NATFW\n   NSLP node and in the policy\
    \ rule.  The policy rule uses the LE-MRM\n   MRI source-address (see [RFC5971])\
    \ as the flow destination IP address\n   and the network-layer-version (IP-ver)\
    \ as IP version.  The external\n   IP address at the NAT is stored as the external\
    \ flow destination IP\n   address.  All other parameters of the policy rule other\
    \ than the flow\n   destination IP address are wildcarded if no NATFW_DTINFO object\
    \ is\n   included in the EXTERNAL message.  The LE-MRM MRI destination-address\n\
    \   MUST NOT be used in the policy rule, since it is solely a signaling\n   destination\
    \ address.\n   If the NATFW_DTINFO object is included in the EXTERNAL message,\
    \ the\n   policy rule is filled with further information.  The 'dst port\n   number'\
    \ field of the NATFW_DTINFO is stored as the flow destination\n   port number.\
    \  The 'protocol' field is stored as the flow protocol.\n   The 'src port number'\
    \ field is stored as the flow source port number.\n   The 'data sender's IPv4\
    \ address' is stored as the flow source IP\n   address.  Note that some of these\
    \ fields can contain wildcards.\n   When receiving a CREATE message at the NATFW\
    \ NSLP, the NATFW NSLP\n   uses the flow information stored in the MRI to do the\
    \ matching\n   process.  This table shows the parameters to be compared against\
    \ each\n   other.  Note that not all parameters need be present in an MRI at the\n\
    \   same time.\n    +-------------------------------+--------------------------------+\n\
    \    |  Flow parameter (Policy Rule) | MRI parameter (CREATE message) |\n    +-------------------------------+--------------------------------+\n\
    \    |           IP version          |      network-layer-version     |\n    |\
    \            Protocol           |           IP-protocol          |\n    |    \
    \ source IP address (w)     |       source-address (w)       |\n    |      external\
    \ IP address      |       destination-address      |\n    |  destination IP address\
    \ (n/u) |               N/A              |\n    |     source port number (w) \
    \   |       L4-source-port (w)       |\n    |    external port number (w)   |\
    \     L4-destination-port (w)    |\n    | destination port number (n/u) |    \
    \           N/A              |\n    |           IPsec-SPI           |        \
    \    ipsec-SPI           |\n    +-------------------------------+--------------------------------+\n\
    \            Table entries marked with (w) can be wildcarded and\n         entries\
    \ marked with (n/u) are not used for the matching.\n                         \
    \         Table 1\n   It should be noted that the Protocol/IP-protocol entries\
    \ in Table 1\n   refer to the 'Protocol' field in the IPv4 header or the 'next\
    \ header'\n   entry in the IPv6 header.\n"
- title: 3.9.  Reacting to Route Changes
  contents:
  - "3.9.  Reacting to Route Changes\n   The NATFW NSLP needs to react to route changes\
    \ in the data path.\n   This assumes the capability to detect route changes, to\
    \ perform NAT\n   and firewall configuration on the new path and possibly to tear\
    \ down\n   NATFW NSLP signaling session state on the old path.  The detection\
    \ of\n   route changes is described in Section 7 of [RFC5971], and the NATFW\n\
    \   NSLP relies on notifications about route changes by the NTLP.  This\n   notification\
    \ will be conveyed by the API between NTLP and NSLP, which\n   is out of the scope\
    \ of this memo.\n   A NATFW NSLP node other than the NI or NI+ detecting a route\
    \ change,\n   by means described in the NTLP specification or others, generates\
    \ a\n   NOTIFY message indicating this change and sends this inbound towards\n\
    \   NI and outbound towards the NR (see also Section 3.7.5).\n   Intermediate\
    \ NFs on the way to the NI can use this information to\n   decide later if their\
    \ NATFW NSLP signaling session can be deleted\n   locally, if they do not receive\
    \ an update within a certain time\n   period, as described in Section 3.2.8. \
    \ It is important to consider\n   the transport limitations of NOTIFY messages\
    \ as mandated in\n   Section 3.7.5.\n   The NI receiving this NOTIFY message MAY\
    \ generate a new CREATE or\n   EXTERNAL message and send it towards the NATFW\
    \ NSLP signaling\n   session's NI as for the initial message using the same session\
    \ ID.\n   All the remaining processing and message forwarding, such as NSLP\n\
    \   next-hop discovery, is subject to regular NSLP processing as\n   described\
    \ in the particular sections.  Normal routing will guide the\n   new CREATE or\
    \ EXTERNAL message to the correct NFs along the changed\n   route.  NFs that were\
    \ on the original path receiving these new CREATE\n   or EXTERNAL messages (see\
    \ also Section 3.10), can use the session ID\n   to update the existing NATFW\
    \ NSLP signaling session; whereas NFs that\n   were not on the original path will\
    \ create new state for this NATFW\n   NSLP signaling session.  The next section\
    \ describes how policy rules\n   are updated.\n"
- title: 3.10.  Updating Policy Rules
  contents:
  - "3.10.  Updating Policy Rules\n   NSIS initiators can request an update of the\
    \ installed/reserved\n   policy rules at any time within a NATFW NSLP signaling\
    \ session.\n   Updates to policy rules can be required due to node mobility (NI\
    \ is\n   moving from one IP address to another), route changes (this can\n   result\
    \ in a different NAT mapping at a different NAT device), or the\n   wish of the\
    \ NI to simply change the rule.  NIs can update policy\n   rules in existing NATFW\
    \ NSLP signaling sessions by sending an\n   appropriate CREATE or EXTERNAL message\
    \ (similar to Section 3.4) with\n   modified message routing information (MRI)\
    \ as compared with that\n   installed previously, but using the existing session\
    \ ID to identify\n   the intended target of the update.  With respect to authorization\
    \ and\n   authentication, this update CREATE or EXTERNAL message is treated in\n\
    \   exactly the same way as any initial message.  Therefore, any node\n   along\
    \ in the NATFW NSLP signaling session can reject the update with\n   an error\
    \ RESPONSE message, as defined in the previous sections.\n   The message processing\
    \ and forwarding is executed as defined in the\n   particular sections.  An NF\
    \ or the NR receiving an update simply\n   replaces the installed policy rules\
    \ installed in the firewall/NAT.\n   The local procedures on how to update the\
    \ MRI in the firewall/NAT is\n   out of the scope of this memo.\n"
- title: 4.  NATFW NSLP Message Components
  contents:
  - "4.  NATFW NSLP Message Components\n   A NATFW NSLP message consists of an NSLP\
    \ header and one or more\n   objects following the header.  The NSLP header is\
    \ carried in all\n   NATFW NSLP messages and objects are Type-Length-Value (TLV)\
    \ encoded\n   using big endian (network ordered) binary data representations.\n\
    \   Header and objects are aligned to 32-bit boundaries and object\n   lengths\
    \ that are not multiples of 32 bits must be padded to the next\n   higher 32-bit\
    \ multiple.\n   The whole NSLP message is carried as payload of a NTLP message.\n\
    \   Note that the notation 0x is used to indicate hexadecimal numbers.\n"
- title: 4.1.  NSLP Header
  contents:
  - "4.1.  NSLP Header\n   All GIST NSLP-Data objects for the NATFW NSLP MUST contain\
    \ this\n   common header as the first 32 bits of the object (this is not the\n\
    \   same as the GIST Common Header).  It contains two fields, the NSLP\n   message\
    \ type and the P Flag, plus two reserved fields.  The total\n   length is 32 bits.\
    \  The layout of the NSLP header is defined by\n   Figure 20.\n      0       \
    \            1                   2                   3\n      0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | Message type  |P|E| reserved  |       reserved                |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \               Figure 20: Common NSLP Header\n   The reserved field MUST be set\
    \ to zero in the NATFW NSLP header\n   before sending and MUST be ignored during\
    \ processing of the header.\n   The defined messages types are:\n   o  0x1: CREATE\n\
    \   o  0x2: EXTERNAL\n   o  0x3: RESPONSE\n   o  0x4: NOTIFY\n   If a message\
    \ with another type is received, an error RESPONSE of\n   class 'Protocol error'\
    \ (3) with response code 'Illegal message type'\n   (0x01) MUST be generated.\n\
    \   The P flag indicates the usage of proxy mode.  If the proxy mode is\n   used,\
    \ it MUST be set to 1.  Proxy mode MUST only be used in\n   combination with the\
    \ message types CREATE and EXTERNAL.  The P flag\n   MUST be ignored when processing\
    \ messages with type RESPONSE or\n   NOTIFY.\n   The E flag indicates, in proxy\
    \ mode, whether the edge-NAT or edge-\n   firewall MUST continue sending the message\
    \ to the NR, i.e., end-to-\n   end.  The E flag can only be set to 1 if the P\
    \ flag is set;\n   otherwise, it MUST be ignored.  The E flag MUST only be used\
    \ in\n   combination with the message types CREATE and EXTERNAL.  The E flag\n\
    \   MUST be ignored when processing messages with type RESPONSE or\n   NOTIFY.\n"
- title: 4.2.  NSLP Objects
  contents:
  - "4.2.  NSLP Objects\n   NATFW NSLP objects use a common header format defined\
    \ by Figure 21.\n   The object header contains these fields: two flags, two reserved\n\
    \   bits, the NSLP object type, a reserved field of 4 bits, and the\n   object\
    \ length.  Its total length is 32 bits.\n      0                   1         \
    \          2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |A|B|r|r|   Object Type         |r|r|r|r|   Object Length       |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \           Figure 21: Common NSLP Object Header\n   The object length field contains\
    \ the total length of the object\n   without the object header.  The unit is a\
    \ word, consisting of 4\n   octets.  The particular values of type and length\
    \ for each NSLP\n   object are listed in the subsequent sections that define the\
    \ NSLP\n   objects.  An error RESPONSE of class 'Protocol error' (3) with\n  \
    \ response code 'Wrong object length' (0x07) MUST be generated if the\n   length\
    \ given in the object header is inconsistent with the type of\n   object specified\
    \ or the message is shorter than implied by the object\n   length.  The two leading\
    \ bits of the NSLP object header are used to\n   signal the desired treatment\
    \ for objects whose treatment has not been\n   defined in this memo (see [RFC5971],\
    \ Appendix A.2.1), i.e., the\n   Object Type has not been defined.  NATFW NSLP\
    \ uses a subset of the\n   categories defined in GIST:\n   o  AB=00 (\"Mandatory\"\
    ): If the object is not understood, the entire\n      message containing it MUST\
    \ be rejected with an error RESPONSE of\n      class 'Protocol error' (3) with\
    \ response code 'Unknown object\n      present' (0x06).\n   o  AB=01 (\"Optional\"\
    ): If the object is not understood, it should be\n      deleted and then the rest\
    \ of the message processed as usual.\n   o  AB=10 (\"Forward\"): If the object\
    \ is not understood, it should be\n      retained unchanged in any message forwarded\
    \ as a result of message\n      processing, but not stored locally.\n   The combination\
    \ AB=11 MUST NOT be used and an error RESPONSE of class\n   'Protocol error' (3)\
    \ with response code 'Invalid Flag-Field\n   combination' (0x09) MUST be generated.\n\
    \   The following sections do not repeat the common NSLP object header,\n   they\
    \ just list the type and the length.\n"
- title: 4.2.1.  Signaling Session Lifetime Object
  contents:
  - "4.2.1.  Signaling Session Lifetime Object\n   The signaling session lifetime\
    \ object carries the requested or\n   granted lifetime of a NATFW NSLP signaling\
    \ session measured in\n   seconds.\n      Type: NATFW_LT (0x00C)\n      Length:\
    \ 1\n      0                   1                   2                   3\n   \
    \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |          NATFW NSLP signaling session lifetime                |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \       Figure 22: Signaling Session Lifetime Object\n"
- title: 4.2.2.  External Address Object
  contents:
  - "4.2.2.  External Address Object\n   The external address object can be included\
    \ in RESPONSE messages\n   (Section 4.3.3) only.  It carries the publicly reachable\
    \ IP address,\n   and if applicable port number, at an edge-NAT.\n      Type:\
    \ NATFW_EXTERNAL_IP (0x00D)\n      Length: 2\n      0                   1    \
    \               2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |         port number           |IP-Ver |   reserved            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         IPv4 address                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \           Figure 23: External Address Object for IPv4 Addresses\n   Please note\
    \ that the field 'port number' MUST be set to 0 if only an\n   IP address has\
    \ been reserved, for instance, by a traditional NAT.  A\n   port number of 0 MUST\
    \ be ignored in processing this object.\n   IP-Ver (4 bits): The IP version number.\
    \  This field MUST be set to 4.\n"
- title: 4.2.3.  External Binding Address Object
  contents:
  - "4.2.3.  External Binding Address Object\n   The external binding address object\
    \ can be included in RESPONSE\n   messages (Section 4.3.3) and EXTERNAL (Section\
    \ 3.7.2) messages.  It\n   carries one or multiple external binding addresses,\
    \ and if applicable\n   port number, for multi-level NAT deployments (for an example,\
    \ see\n   Section 2.5).  The utilization of the information carried in this\n\
    \   object is described in Appendix B.\n      Type: NATFW_EXTERNAL_BINDING (0x00E)\n\
    \      Length: 1 + number of IPv4 addresses\n      0                   1     \
    \              2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |         port number           |IP-Ver |   reserved            |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         IPv4 address #1                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     //                           . . .                             //\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                         IPv4 address  #n                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 24: External Binding Address Object\n   Please note that\
    \ the field 'port number' MUST be set to 0 if only an\n   IP address has been\
    \ reserved, for instance, by a traditional NAT.  A\n   port number of 0 MUST be\
    \ ignored in processing this object.\n   IP-Ver (4 bits): The IP version number.\
    \  This field MUST be set to 4.\n"
- title: 4.2.4.  Extended Flow Information Object
  contents:
  - "4.2.4.  Extended Flow Information Object\n   In general, flow information is\
    \ kept in the message routing\n   information (MRI) of the NTLP.  Nevertheless,\
    \ some additional\n   information may be required for NSLP operations.  The 'extended\
    \ flow\n   information' object carries this additional information about the\n\
    \   action of the policy rule for firewalls/NATs and a potential\n   contiguous\
    \ port.\n      Type: NATFW_EFI (0x00F)\n      Length: 1\n      0             \
    \      1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |           rule action         |           sub_ports           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \           Figure 25: Extended Flow Information\n   This object has two fields,\
    \ 'rule action' and 'sub_ports'.  The 'rule\n   action' field has these meanings:\n\
    \   o  0x0001: Allow: A policy rule with this action allows data traffic\n   \
    \   to traverse the middlebox and the NATFW NSLP MUST allow NSLP\n      signaling\
    \ to be forwarded.\n   o  0x0002: Deny: A policy rule with this action blocks\
    \ data traffic\n      from traversing the middlebox and the NATFW NSLP MUST NOT\
    \ allow\n      NSLP signaling to be forwarded.\n   If the 'rule action' field\
    \ contains neither 0x0001 nor 0x0002, an\n   error RESPONSE of class 'Signaling\
    \ session failure' (7) with response\n   code 'Unknown policy rule action' (0x05)\
    \ MUST be generated.\n   The 'sub_ports' field contains the number of contiguous\
    \ transport\n   layer ports to which this rule applies.  The default value of\
    \ this\n   field is 0, i.e., only the port specified in the NTLP's MRM or\n  \
    \ NATFW_DTINFO object is used for the policy rule.  A value of 1\n   indicates\
    \ that additionally to the port specified in the NTLP's MRM\n   (port1), a second\
    \ port (port2) is used.  This value of port 2 is\n   calculated as: port2 = port1\
    \ + 1.  Other values than 0 or 1 MUST NOT\n   be used in this field and an error\
    \ RESPONSE of class 'Signaling\n   session failure' (7) with response code 'Requested\
    \ value in sub_ports\n   field in NATFW_EFI not permitted' (0x08) MUST be generated.\
    \  These\n   two contiguous numbered ports can be used by legacy voice over IP\n\
    \   equipment.  This legacy equipment assumes two adjacent port numbers\n   for\
    \ its RTP/RTCP flows, respectively.\n"
- title: 4.2.5.  Information Code Object
  contents:
  - "4.2.5.  Information Code Object\n   This object carries the response code in\
    \ RESPONSE messages, which\n   indicates either a successful or failed CREATE\
    \ or EXTERNAL message\n   depending on the value of the 'response code' field.\
    \  This object is\n   also carried in a NOTIFY message to specify the reason for\
    \ the\n   notification.\n      Type: NATFW_INFO (0x010)\n      Length: 1\n   \
    \   0                   1                   2                   3\n      0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | Resv. | Class | Response Code |r|r|r|r|     Object Type       |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \            Figure 26: Information Code Object\n   The field 'resv.' is reserved\
    \ for future extensions and MUST be set\n   to zero when generating such an object\
    \ and MUST be ignored when\n   receiving.  The 'Object Type' field contains the\
    \ type of the object\n   causing the error.  The value of 'Object Type' is set\
    \ to 0, if no\n   object is concerned.  The leading fours bits marked with 'r'\
    \ are\n   always set to zero and ignored.  The 4-bit class field contains the\n\
    \   error class.  The following classes are defined:\n   o  0: Reserved\n   o\
    \  1: Informational (NOTIFY only)\n   o  2: Success\n   o  3: Protocol error\n\
    \   o  4: Transient failure\n   o  5: Permanent failure\n   o  7: Signaling session\
    \ failure\n   Within each error class a number of responses codes are defined\
    \ as\n   follows.\n   o  Informational:\n      *  0x01: Route change: possible\
    \ route change on the outbound path.\n      *  0x02: Re-authentication required.\n\
    \      *  0x03: NATFW node is going down soon.\n      *  0x04: NATFW signaling\
    \ session lifetime expired.\n      *  0x05: NATFW signaling session terminated.\n\
    \   o  Success:\n      *  0x01: All successfully processed.\n   o  Protocol error:\n\
    \      *  0x01: Illegal message type: the type given in the Message Type\n   \
    \      field of the NSLP header is unknown.\n      *  0x02: Wrong message length:\
    \ the length given for the message in\n         the NSLP header does not match\
    \ the length of the message data.\n      *  0x03: Bad flags value: an undefined\
    \ flag or combination of\n         flags was set in the NSLP header.\n      *\
    \  0x04: Mandatory object missing: an object required in a message\n         of\
    \ this type was missing.\n      *  0x05: Illegal object present: an object was\
    \ present that must\n         not be used in a message of this type.\n      *\
    \  0x06: Unknown object present: an object of an unknown type was\n         present\
    \ in the message.\n      *  0x07: Wrong object length: the length given for the\
    \ object in\n         the object header did not match the length of the object\
    \ data\n         present.\n      *  0x08: Unknown object field value: a field\
    \ in an object had an\n         unknown value.\n      *  0x09: Invalid Flag-Field\
    \ combination: An object contains an\n         invalid combination of flags and/or\
    \ fields.\n      *  0x0A: Duplicate object present.\n      *  0x0B: Received EXTERNAL\
    \ request message on external side.\n   o  Transient failure:\n      *  0x01:\
    \ Requested resources temporarily not available.\n   o  Permanent failure:\n \
    \     *  0x01: Authentication failed.\n      *  0x02: Authorization failed.\n\
    \      *  0x04: Internal or system error.\n      *  0x06: No edge-device here.\n\
    \      *  0x07: Did not reach the NR.\n   o  Signaling session failure:\n    \
    \  *  0x01: Session terminated asynchronously.\n      *  0x02: Requested lifetime\
    \ is too big.\n      *  0x03: No reservation found matching the MRI of the CREATE\n\
    \         request.\n      *  0x04: Requested policy rule denied due to policy\
    \ conflict.\n      *  0x05: Unknown policy rule action.\n      *  0x06: Requested\
    \ rule action not applicable.\n      *  0x07: NATFW_DTINFO object is required.\n\
    \      *  0x08: Requested value in sub_ports field in NATFW_EFI not\n        \
    \ permitted.\n      *  0x09: Requested IP protocol not supported.\n      *  0x0A:\
    \ Plain IP policy rules not permitted -- need transport\n         layer information.\n\
    \      *  0x0B: ICMP type value not permitted.\n      *  0x0C: Source IP address\
    \ range is too large.\n      *  0x0D: Destination IP address range is too large.\n\
    \      *  0x0E: Source L4-port range is too large.\n      *  0x0F: Destination\
    \ L4-port range is too large.\n      *  0x10: Requested lifetime is too small.\n\
    \      *  0x11: Modified lifetime is too big.\n      *  0x12: Modified lifetime\
    \ is too small.\n"
- title: 4.2.6.  Nonce Object
  contents:
  - "4.2.6.  Nonce Object\n   This object carries the nonce value as described in\
    \ Section 3.7.6.\n      Type: NATFW_NONCE (0x011)\n      Length: 1\n      0  \
    \                 1                   2                   3\n      0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                         nonce                                 |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \                  Figure 27: Nonce Object\n"
- title: 4.2.7.  Message Sequence Number Object
  contents:
  - "4.2.7.  Message Sequence Number Object\n   This object carries the MSN value\
    \ as described in Section 3.5.\n      Type: NATFW_MSN (0x012)\n      Length: 1\n\
    \      0                   1                   2                   3\n      0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |                    message sequence number                    |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \         Figure 28: Message Sequence Number Object\n"
- title: 4.2.8.  Data Terminal Information Object
  contents:
  - "4.2.8.  Data Terminal Information Object\n   The 'data terminal information'\
    \ object carries additional information\n   that MUST be included the EXTERNAL\
    \ message.  EXTERNAL messages are\n   transported by the NTLP using the Loose-End\
    \ message routing method\n   (LE-MRM).  The LE-MRM contains only the DR's IP address\
    \ and a\n   signaling destination address (destination IP address).  This\n  \
    \ destination IP address is used for message routing only and is not\n   necessarily\
    \ reflecting the address of the data sender.  This object\n   contains information\
    \ about (if applicable) DR's port number (the\n   destination port number), the\
    \ DS's port number (the source port\n   number), the used transport protocol,\
    \ the prefix length of the IP\n   address, and DS's IP address.\n      Type: NATFW_DTINFO\
    \ (0x013)\n      Length: variable.  Maximum 3.\n      0                   1  \
    \                 2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |I|P|S|    reserved             | sender prefix |    protocol   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     :  \
    \    DR port number           |       DS port number          :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     :                            IPsec-SPI                          :\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                data sender's IPv4 address                   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \               Figure 29: Data Terminal IPv4 Address Object\n   The flags are:\n\
    \   o  I: I=1 means that 'protocol' should be interpreted.\n   o  P: P=1 means\
    \ that 'dst port number' and 'src port number' are\n      present and should be\
    \ interpreted.\n   o  S: S=1 means that SPI is present and should be interpreted.\n\
    \   The SPI field is only present if S is set.  The port numbers are only\n  \
    \ present if P is set.  The flags P and S MUST NOT be set at the same\n   time.\
    \  An error RESPONSE of class 'Protocol error' (3) with response\n   code 'Invalid\
    \ Flag-Field combination' (0x09) MUST be generated if\n   they are both set. \
    \ If either P or S is set, I MUST be set as well\n   and the protocol field MUST\
    \ carry the particular protocol.  An error\n   RESPONSE of class 'Protocol error'\
    \ (3) with response code 'Invalid\n   Flag-Field combination' (0x09) MUST be generated\
    \ if S or P is set but\n   I is not set.\n   The fields MUST be interpreted according\
    \ to these rules:\n   o  (data) sender prefix: This parameter indicates the prefix\
    \ length\n      of the 'data sender's IP address' in bits.  For instance, a full\n\
    \      IPv4 address requires 'sender prefix' to be set to 32.  A value of\n  \
    \    0 indicates an IP address wildcard.\n   o  protocol: The IP protocol field.\
    \  This field MUST be interpreted\n      if I=1; otherwise, it MUST be set to\
    \ 0 and MUST be ignored.\n   o  DR port number: The port number at the data receiver\
    \ (DR), i.e.,\n      the destination port.  A value of 0 indicates a port wildcard,\n\
    \      i.e., the destination port number is not known.  Any other value\n    \
    \  indicates the destination port number.\n   o  DS port number: The port number\
    \ at the data sender (DS), i.e., the\n      source port.  A value of 0 indicates\
    \ a port wildcard, i.e., the\n      source port number is not known.  Any other\
    \ value indicates the\n      source port number.\n   o  data sender's IPv4 address:\
    \ The source IP address of the data\n      sender.  This field MUST be set to\
    \ zero if no IP address is\n      provided, i.e., a complete wildcard is desired\
    \ (see the dest\n      prefix field above).\n"
- title: 4.2.9.  ICMP Types Object
  contents:
  - "4.2.9.  ICMP Types Object\n   The 'ICMP types' object contains additional information\
    \ needed to\n   configure a NAT of firewall with rules to control ICMP traffic.\
    \  The\n   object contains a number of values of the ICMP Type field for which\
    \ a\n   filter action should be set up:\n      Type: NATFW_ICMP_TYPES (0x014)\n\
    \      Length: Variable = ((Number of Types carried + 1) + 3) DIV 4\n   Where\
    \ DIV is an integer division.\n      0                   1                   2\
    \                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    Count      |     Type      |      Type     |    ........   |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |  \
    \                     ................                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     |    ........   |     Type      |           (Padding)           |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n        \
    \               Figure 30: ICMP Types Object\n   The fields MUST be interpreted\
    \ according to these rules:\n      count: 8-bit integer specifying the number\
    \ of 'Type' entries in\n      the object.\n      type: 8-bit field specifying\
    \ an ICMP Type value to which this rule\n      applies.\n      padding: Sufficient\
    \ 0 bits to pad out the last word so that the\n      total size of the object\
    \ is an even multiple of words.  Ignored on\n      reception.\n"
- title: 4.3.  Message Formats
  contents:
  - "4.3.  Message Formats\n   This section defines the content of each NATFW NSLP\
    \ message type.\n   The message types are defined in Section 4.1.\n   Basically,\
    \ each message is constructed of an NSLP header and one or\n   more NSLP objects.\
    \  The order of objects is not defined, meaning that\n   objects may occur in\
    \ any sequence.  Objects are marked either with\n   mandatory (M) or optional\
    \ (O).  Where (M) implies that this\n   particular object MUST be included within\
    \ the message and where (O)\n   implies that this particular object is OPTIONAL\
    \ within the message.\n   Objects defined in this memo always carry the flag combination\
    \ AB=00\n   in the NSLP object header.  An error RESPONSE message of class\n \
    \  'Protocol error' (3) with response code 'Mandatory object missing'\n   (0x04)\
    \ MUST be generated if a mandatory declared object is missing.\n   An error RESPONSE\
    \ message of class 'Protocol error' (3) with response\n   code 'Illegal object\
    \ present' (0x05) MUST be generated if an object\n   was present that must not\
    \ be used in a message of this type.  An\n   error RESPONSE message of class 'Protocol\
    \ error' (3) with response\n   code 'Duplicate object present' (0x0A) MUST be\
    \ generated if an object\n   appears more than once in a message.\n   Each section\
    \ elaborates the required settings and parameters to be\n   set by the NSLP for\
    \ the NTLP, for instance, how the message routing\n   information is set.\n"
- title: 4.3.1.  CREATE
  contents:
  - "4.3.1.  CREATE\n   The CREATE message is used to create NATFW NSLP signaling\
    \ sessions\n   and to create policy rules.  Furthermore, CREATE messages are used\
    \ to\n   refresh NATFW NSLP signaling sessions and to delete them.\n   The CREATE\
    \ message carries these objects:\n   o  Signaling Session Lifetime object (M)\n\
    \   o  Extended flow information object (M)\n   o  Message sequence number object\
    \ (M)\n   o  Nonce object (M) if P flag set to 1 in the NSLP header, otherwise\n\
    \      (O)\n   o  ICMP Types Object (O)\n   The message routing information in\
    \ the NTLP MUST be set to DS as\n   source IP address and DR as destination IP\
    \ address.  All other\n   parameters MUST be set according to the required policy\
    \ rule.  CREATE\n   messages MUST be transported by using the path-coupled MRM\
    \ with the\n   direction set to 'downstream' (outbound).\n"
- title: 4.3.2.  EXTERNAL
  contents:
  - "4.3.2.  EXTERNAL\n   The EXTERNAL message is used to a) reserve an external IP\
    \ address/\n   port at NATs, b) to notify firewalls about NSIS capable DRs, or\
    \ c) to\n   block incoming data traffic at inbound firewalls.\n   The EXTERNAL\
    \ message carries these objects:\n   o  Signaling Session Lifetime object (M)\n\
    \   o  Message sequence number object (M)\n   o  Extended flow information object\
    \ (M)\n   o  Data terminal information object (M)\n   o  Nonce object (M) if P\
    \ flag set to 1 in the NSLP header, otherwise\n      (O)\n   o  ICMP Types Object\
    \ (O)\n   o  External binding address object (O)\n   The selected message routing\
    \ method of the EXTERNAL message depends\n   on a number of considerations.  Section\
    \ 3.7.2 describes exhaustively\n   how to select the correct method.  EXTERNAL\
    \ messages can be\n   transported via the path-coupled message routing method\
    \ (PC-MRM) or\n   via the loose-end message routing method (LE-MRM).  In the case\
    \ of\n   PC-MRM, the source-address is set to the DS's address and the\n   destination-address\
    \ is set to the DR's address, the direction is set\n   to inbound.  In the case\
    \ of LE-MRM, the destination-address is set to\n   the DR's address or to the\
    \ signaling destination IP address.  The\n   source-address is set to the DS's\
    \ address.\n"
- title: 4.3.3.  RESPONSE
  contents:
  - "4.3.3.  RESPONSE\n   RESPONSE messages are responses to CREATE and EXTERNAL messages.\n\
    \   RESPONSE messages MUST NOT be generated for any other message, such\n   as\
    \ NOTIFY and RESPONSE.\n   The RESPONSE message for the class 'Success' (2) carries\
    \ these\n   objects:\n   o  Signaling Session Lifetime object (M)\n   o  Message\
    \ sequence number object (M)\n   o  Information code object (M)\n   o  External\
    \ address object (O)\n   o  External binding address object (O)\n   The RESPONSE\
    \ message for other classes than 'Success' (2) carries\n   these objects:\n  \
    \ o  Message sequence number object (M)\n   o  Information code object (M)\n \
    \  o  Signaling Session Lifetime object (O)\n   This message is routed towards\
    \ the NI hop-by-hop, using existing NTLP\n   messaging associations.  The MRM\
    \ used for this message MUST be the\n   same as MRM used by the corresponding\
    \ CREATE or EXTERNAL message.\n"
- title: 4.3.4.  NOTIFY
  contents:
  - "4.3.4.  NOTIFY\n   The NOTIFY messages is used to report asynchronous events\
    \ happening\n   along the signaled path to other NATFW NSLP nodes.\n   The NOTIFY\
    \ message carries this object:\n   o  Information code object (M)\n   The NOTIFY\
    \ message is routed towards the next NF, NI, or NR hop-by-\n   hop using the existing\
    \ inbound or outbound node messaging association\n   entry within the node's Message\
    \ Routing State table.  The MRM used\n   for this message MUST be the same as\
    \ MRM used by the corresponding\n   CREATE or EXTERNAL message.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Security is of major concern particularly in\
    \ the case of firewall\n   traversal.  This section provides security considerations\
    \ for the\n   NAT/firewall traversal and is organized as follows.\n   In Section\
    \ 5.1, we describe how the participating entities relate to\n   each other from\
    \ a security point of view.  That subsection also\n   motivates a particular authorization\
    \ model.\n   Security threats that focus on NSIS in general are described in\n\
    \   [RFC4081] and they are applicable to this document as well.\n   Finally, we\
    \ illustrate how the security requirements that were\n   created based on the\
    \ security threats can be fulfilled by specific\n   security mechanisms.  These\
    \ aspects will be elaborated in\n   Section 5.2.\n"
- title: 5.1.  Authorization Framework
  contents:
  - "5.1.  Authorization Framework\n   The NATFW NSLP is a protocol that may involve\
    \ a number of NSIS nodes\n   and is, as such, not a two-party protocol.  Figures\
    \ 1 and 2 of\n   [RFC4081] already depict the possible set of communication patterns.\n\
    \   In this section, we will re-evaluate these communication patterns\n   with\
    \ respect to the NATFW NSLP protocol interaction.\n   The security solutions for\
    \ providing authorization have a direct\n   impact on the treatment of different\
    \ NSLPs.  As it can be seen from\n   the QoS NSLP [RFC5974] and the corresponding\
    \ Diameter QoS work\n   [RFC5866], accounting and charging seems to play an important\
    \ role\n   for QoS reservations, whereas monetary aspects might only indirectly\n\
    \   effect authorization decisions for NAT and firewall signaling.\n   Hence,\
    \ there are differences in the semantics of authorization\n   handling between\
    \ QoS and NATFW signaling.  A NATFW-aware node will\n   most likely want to authorize\
    \ the entity (e.g., user or machine)\n   requesting the establishment of pinholes\
    \ or NAT bindings.  The\n   outcome of the authorization decision is either allowed\
    \ or\n   disallowed, whereas a QoS authorization decision might indicate that\n\
    \   a different set of QoS parameters is authorized (see [RFC5866] as an\n   example).\n"
- title: 5.1.1.  Peer-to-Peer Relationship
  contents:
  - "5.1.1.  Peer-to-Peer Relationship\n   Starting with the simplest scenario, it\
    \ is assumed that neighboring\n   nodes are able to authenticate each other and\
    \ to establish keying\n   material to protect the signaling message communication.\
    \  The nodes\n   will have to authorize each other, additionally to the\n   authentication.\
    \  We use the term 'Security Context' as a placeholder\n   for referring to the\
    \ entire security procedure, the necessary\n   infrastructure that needs to be\
    \ in place in order for this to work\n   (e.g., key management) and the established\
    \ security-related state.\n   The required long-term keys (symmetric or asymmetric\
    \ keys) used for\n   authentication either are made available using an out-of-band\n\
    \   mechanism between the two NSIS NATFW nodes or are dynamically\n   established\
    \ using mechanisms not further specified in this document.\n   Note that the deployment\
    \ environment will most likely have an impact\n   on the choice of credentials\
    \ being used.  The choice of these\n   credentials used is also outside the scope\
    \ of this document.\n   +------------------------+              +-------------------------+\n\
    \   |Network A               |              |                Network B|\n   |\
    \              +---------+              +---------+               |\n   |    \
    \    +-///-+ Middle- +---///////----+ Middle- +-///-+         |\n   |        |\
    \     |  box 1  | Security     |  box 2  |     |         |\n   |        |    \
    \ +---------+ Context      +---------+     |         |\n   |        | Security\
    \      |              |  Security     |         |\n   |        | Context     \
    \  |              |  Context      |         |\n   |        |               | \
    \             |               |         |\n   |     +--+---+           |     \
    \         |            +--+---+     |\n   |     | Host |           |         \
    \     |            | Host |     |\n   |     |  A   |           |             \
    \ |            |  B   |     |\n   |     +------+           |              |  \
    \          +------+     |\n   +------------------------+              +-------------------------+\n\
    \                   Figure 31: Peer-to-Peer Relationship\n   Figure 31 shows a\
    \ possible relationship between participating NSIS-\n   aware nodes.  Host A might\
    \ be, for example, a host in an enterprise\n   network that has keying material\
    \ established (e.g., a shared secret)\n   with the company's firewall (Middlebox\
    \ 1).  The network administrator\n   of Network A (company network) has created\
    \ access control lists for\n   Host A (or whatever identifiers a particular company\
    \ wants to use).\n   Exactly the same procedure might also be used between Host\
    \ B and\n   Middlebox 2 in Network B.  For the communication between Middlebox\
    \ 1\n   and Middlebox 2 a security context is also assumed in order to allow\n\
    \   authentication, authorization, and signaling message protection to be\n  \
    \ successful.\n"
- title: 5.1.2.  Intra-Domain Relationship
  contents:
  - "5.1.2.  Intra-Domain Relationship\n   In larger corporations, for example, a\
    \ middlebox is used to protect\n   individual departments.  In many cases, the\
    \ entire enterprise is\n   controlled by a single (or a small number of) security\
    \ department(s),\n   which give instructions to the department administrators.\
    \  In such a\n   scenario, the previously discussed peer-to-peer relationship\
    \ might be\n   prevalent.  Sometimes it might be necessary to preserve\n   authentication\
    \ and authorization information within the network.  As\n   a possible solution,\
    \ a centralized approach could be used, whereby an\n   interaction between the\
    \ individual middleboxes and a central entity\n   (for example, a policy decision\
    \ point - PDP) takes place.  As an\n   alternative, individual middleboxes exchange\
    \ the authorization\n   decision with another middlebox within the same trust\
    \ domain.\n   Individual middleboxes within an administrative domain may exploit\n\
    \   their relationship instead of requesting authentication and\n   authorization\
    \ of the signaling initiator again and again.  Figure 32\n   illustrates a network\
    \ structure that uses a centralized entity.\n       +-----------------------------------------------------------+\n\
    \       |                                               Network A   |\n      \
    \ |                      +---------+                +---------+\n       |    \
    \  +----///--------+ Middle- +------///------++ Middle- +---\n       |      |\
    \ Security      |  box 2  | Security       |  box 2  |\n       |      | Context\
    \       +----+----+ Context        +----+----+\n       | +----+----+         \
    \      |                          |    |\n       | | Middle- +--------+      +---------+\
    \                |    |\n       | |  box 1  |        |                |      \
    \          |    |\n       | +----+----+        |                |            \
    \    |    |\n       |      | Security    |           +----+-----+          | \
    \   |\n       |      | Context     |           | Policy   |          |    |\n\
    \       |   +--+---+         +-----------+ Decision +----------+    |\n      \
    \ |   | Host |                     | Point    |               |\n       |   |\
    \  A   |                     +----------+               |\n       |   +------+\
    \                                                |\n       +-----------------------------------------------------------+\n\
    \                   Figure 32: Intra-Domain Relationship\n   The interaction between\
    \ individual middleboxes and a policy decision\n   point (or AAA server) is outside\
    \ the scope of this document.\n"
- title: 5.1.3.  End-to-Middle Relationship
  contents:
  - "5.1.3.  End-to-Middle Relationship\n   The peer-to-peer relationship between\
    \ neighboring NSIS NATFW NSLP\n   nodes might not always be sufficient.  Network\
    \ B might require\n   additional authorization of the signaling message initiator\
    \ (in\n   addition to the authorization of the neighboring node).  If\n   authentication\
    \ and authorization information is not attached to the\n   initial signaling message\
    \ then the signaling message arriving at\n   Middlebox 2 would result in an error\
    \ message being created, which\n   indicates the additional authorization requirement.\
    \  In many cases,\n   the signaling message initiator might already be aware of\
    \ the\n   additionally required authorization before the signaling message\n \
    \  exchange is executed.\n   Figure 33 shows this scenario.\n       +--------------------+\
    \              +---------------------+\n       |          Network A |        \
    \      |Network B            |\n       |                    |   Security   | \
    \                    |\n       |          +---------+   Context    +---------+\
    \           |\n       |    +-///-+ Middle- +---///////----+ Middle- +-///-+  \
    \   |\n       |    |     |  box 1  |      +-------+  box 2  |     |     |\n  \
    \     |    |     +---------+      |       +---------+     |     |\n       |  \
    \  |Security       |      |       | Security      |     |\n       |    |Context\
    \        |      |       | Context       |\n       |    |               |     \
    \ |       |               |     |\n       | +--+---+           |      |      \
    \ |            +--+---+ |\n       | | Host +----///----+------+       |      \
    \      | Host | |\n       | |  A   |           |   Security   |            | \
    \ B   | |\n       | +------+           |   Context    |            +------+ |\n\
    \       +--------------------+              +---------------------+\n        \
    \           Figure 33: End-to-Middle Relationship\n"
- title: 5.2.  Security Framework for the NAT/Firewall NSLP
  contents:
  - "5.2.  Security Framework for the NAT/Firewall NSLP\n   The following list of\
    \ security requirements has been created to\n   ensure proper secure operation\
    \ of the NATFW NSLP.\n"
- title: 5.2.1.  Security Protection between Neighboring NATFW NSLP Nodes
  contents:
  - "5.2.1.  Security Protection between Neighboring NATFW NSLP Nodes\n   Based on\
    \ the analyzed threats, it is RECOMMENDED to provide, between\n   neighboring\
    \ NATFW NSLP nodes, the following mechanisms:\n   o  data origin authentication,\n\
    \   o  replay protection,\n   o  integrity protection, and,\n   o  optionally,\
    \ confidentiality protection\n   It is RECOMMENDED to use the authentication and\
    \ key exchange security\n   mechanisms provided in [RFC5971] between neighboring\
    \ nodes when\n   sending NATFW signaling messages.  The proposed security mechanisms\n\
    \   of GIST provide support for authentication and key exchange in\n   addition\
    \ to denial-of-service protection.  Depending on the chosen\n   security protocol,\
    \ support for multiple authentication protocols\n   might be provided.  If security\
    \ between neighboring nodes is desired,\n   then the usage of C-MODE with a secure\
    \ transport protocol for the\n   delivery of most NSIS messages with the usage\
    \ of D-MODE only to\n   discover the next NATFW NSLP-aware node along the path\
    \ is highly\n   RECOMMENDED.  See [RFC5971] for the definitions of C-MODE and\
    \ D-MODE.\n   Almost all security threats at the NATFW NSLP-layer can be prevented\n\
    \   by using a mutually authenticated Transport Layer secured connection\n   and\
    \ by relying on authorization by the neighboring NATFW NSLP\n   entities.\n  \
    \ The NATFW NSLP relies on an established security association between\n   neighboring\
    \ peers to prevent unauthorized nodes from modifying or\n   deleting installed\
    \ state.  Between non-neighboring nodes the session\n   ID (SID) carried in the\
    \ NTLP is used to show ownership of a NATFW\n   NSLP signaling session.  The session\
    \ ID MUST be generated in a random\n   way and thereby prevents an off-path adversary\
    \ from mounting targeted\n   attacks.  Hence, an adversary would have to learn\
    \ the randomly\n   generated session ID to perform an attack.  In a mobility environment\n\
    \   a former on-path node that is now off-path can perform an attack.\n   Messages\
    \ for a particular NATFW NSLP signaling session are handled by\n   the NTLP to\
    \ the NATFW NSLP for further processing.  Messages carrying\n   a different session\
    \ ID not associated with any NATFW NSLP are subject\n   to the regular processing\
    \ for new NATFW NSLP signaling sessions.\n"
- title: 5.2.2.  Security Protection between Non-Neighboring NATFW NSLP Nodes
  contents:
  - "5.2.2.  Security Protection between Non-Neighboring NATFW NSLP Nodes\n   Based\
    \ on the security threats and the listed requirements, it was\n   noted that some\
    \ threats also demand authentication and authorization\n   of a NATFW signaling\
    \ entity (including the initiator) towards a non-\n   neighboring node.  This\
    \ mechanism mainly demands entity\n   authentication.  The most important information\
    \ exchanged at the\n   NATFW NSLP is information related to the establishment\
    \ for firewall\n   pinholes and NAT bindings.  This information can, however,\
    \ not be\n   protected over multiple NSIS NATFW NSLP hops since this information\n\
    \   might change depending on the capability of each individual NATFW\n   NSLP\
    \ node.\n   Some scenarios might also benefit from the usage of authorization\n\
    \   tokens.  Their purpose is to associate two different signaling\n   protocols\
    \ (e.g., SIP and NSIS) and their authorization decision.\n   These tokens are\
    \ obtained by non-NSIS protocols, such as SIP or as\n   part of network access\
    \ authentication.  When a NAT or firewall along\n   the path receives the token\
    \ it might be verified locally or passed to\n   the AAA infrastructure.  Examples\
    \ of authorization tokens can be\n   found in RFC 3520 [RFC3520] and RFC 3521\
    \ [RFC3521].  Figure 34 shows\n   an example of this protocol interaction.\n \
    \  An authorization token is provided by the SIP proxy, which acts as\n   the\
    \ assertion generating entity and gets delivered to the end host\n   with proper\
    \ authentication and authorization.  When the NATFW\n   signaling message is transmitted\
    \ towards the network, the\n   authorization token is attached to the signaling\
    \ messages to refer to\n   the previous authorization decision.  The assertion-verifying\
    \ entity\n   needs to process the token or it might be necessary to interact with\n\
    \   the assertion-granting entity using HTTP (or other protocols).  As a\n   result\
    \ of a successfully authorization by a NATFW NSLP node, the\n   requested action\
    \ is executed and later a RESPONSE message is\n   generated.\n    +----------------+\
    \   Trust Relationship    +----------------+\n    | +------------+ |<.......................>|\
    \ +------------+ |\n    | | Protocol   | |                         | | Assertion\
    \  | |\n    | | requesting | |    HTTP, SIP Request    | | Granting   | |\n  \
    \  | | authz      | |------------------------>| | Entity     | |\n    | | assertions\
    \ | |<------------------------| +------------+ |\n    | +------------+ |    Artifact/Assertion\
    \   |  Entity Cecil  |\n    |       ^        |                         +----------------+\n\
    \    |       |        |                          ^     ^|\n    |       |     \
    \   |                          .     || HTTP,\n    |       |        |        \
    \      Trust       .     || other\n    |   API Access   |              Relationship.\
    \     || protocols\n    |       |        |                          .     ||\n\
    \    |       |        |                          .     ||\n    |       |     \
    \   |                          v     |v\n    |       v        |              \
    \           +----------------+\n    | +------------+ |                       \
    \  | +------------+ |\n    | | Protocol   | |  NSIS NATFW CREATE +    | | Assertion\
    \  | |\n    | | using authz| |  Assertion/Artifact     | | Verifying  | |\n  \
    \  | | assertion  | | ----------------------- | | Entity     | |\n    | +------------+\
    \ |                         | +------------+ |\n    |  Entity Alice  | <----------------------\
    \ |  Entity Bob    |\n    +----------------+   RESPONSE              +----------------+\n\
    \                   Figure 34: Authorization Token Usage\n   Threats against the\
    \ usage of authorization tokens have been mentioned\n   in [RFC4081].  Hence,\
    \ it is required to provide confidentiality\n   protection to avoid allowing an\
    \ eavesdropper to learn the token and\n   to use it in another NATFW NSLP signaling\
    \ session (replay attack).\n   The token itself also needs to be protected against\
    \ tempering.\n"
- title: 5.3.  Implementation of NATFW NSLP Security
  contents:
  - "5.3.  Implementation of NATFW NSLP Security\n   The prior sections describe how\
    \ to secure the NATFW NSLP in the\n   presence of established trust between the\
    \ various players and the\n   particular relationships (e.g., intra-domain, end-to-middle,\
    \ or peer-\n   to-peer).  However, in typical Internet deployments there is no\n\
    \   established trust, other than granting access to a network, but not\n   between\
    \ various sites in the Internet.  Furthermore, the NATFW NSLP\n   may be incrementally\
    \ deployed with a widely varying ability to be\n   able to use authentication\
    \ and authorization services.\n   The NATFW NSLP offers a way to keep the authentication\
    \ and\n   authorization at the \"edge\" of the network.  The local edge network\n\
    \   can deploy and use any type of Authentication and Authorization (AA)\n   scheme\
    \ without the need to have AA technology match with other edges\n   in the Internet\
    \ (assuming that firewalls and NATs are deployed at the\n   edges of the network\
    \ and not somewhere in the cores).\n   Each network edge that has the NATFW NSLP\
    \ deployed can use the\n   EXTERNAL request message to allow a secure access to\
    \ the network.\n   Using the EXTERNAL request message does allow the DR to open\
    \ the\n   firewall/NAT on the receiver's side.  However, the edge-devices\n  \
    \ should not allow the firewall/NAT to be opened up completely (i.e.,\n   should\
    \ not apply an allow-all policy), but should let DRs reserve\n   very specific\
    \ policies.  For instance, a DR can request reservation\n   of an 'allow' policy\
    \ rule for an incoming TCP connection for a Jabber\n   file transfer.  This reserved\
    \ policy (see Figure 15) rule must be\n   activated by matching the CREATE request\
    \ message (see Figure 15).\n   This mechanism allows for the authentication and\
    \ authorization issues\n   to be managed locally at the particular edge-network.\
    \  In the reverse\n   direction, the CREATE request message can be handled independently\
    \ on\n   the DS side with respect to authentication and authorization.\n   The\
    \ usage described in the above paragraph is further simplified for\n   an incremental\
    \ deployment: there is no requirement to activate a\n   reserved policy rule with\
    \ a CREATE request message.  This is\n   completely handled by the EXTERNAL-PROXY\
    \ request message and the\n   associated CREATE request message.  Both of them\
    \ are handled by the\n   local authentication and authorization scheme.\n"
- title: 6.  IAB Considerations on UNSAF
  contents:
  - "6.  IAB Considerations on UNSAF\n   UNilateral Self-Address Fixing (UNSAF) is\
    \ described in [RFC3424] as a\n   process at originating endpoints that attempts\
    \ to determine or fix\n   the address (and port) by which they are known to another\
    \ endpoint.\n   UNSAF proposals, such as STUN [RFC5389] are considered as a general\n\
    \   class of workarounds for NAT traversal and as solutions for scenarios\n  \
    \ with no middlebox communication.\n   This memo specifies a path-coupled middlebox\
    \ communication protocol,\n   i.e., the NSIS NATFW NSLP.  NSIS in general and\
    \ the NATFW NSLP are\n   not intended as a short-term workaround, but more as\
    \ a long-term\n   solution for middlebox communication.  In NSIS, endpoints are\n\
    \   involved in allocating, maintaining, and deleting addresses and ports\n  \
    \ at the middlebox.  However, the full control of addresses and ports\n   at the\
    \ middlebox is at the NATFW NSLP daemon located at the\n   respective NAT.\n \
    \  Therefore, this document addresses the UNSAF considerations in\n   [RFC3424]\
    \ by proposing a long-term alternative solution.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This section provides guidance to the Internet Assigned\
    \ Numbers\n   Authority (IANA) regarding registration of values related to the\n\
    \   NATFW NSLP, in accordance with BCP 26, RFC 5226 [RFC5226].\n   The NATFW NSLP\
    \ requires IANA to create a number of new registries:\n   o  NATFW NSLP Message\
    \ Types\n   o  NATFW NSLP Header Flags\n   o  NSLP Response Codes\n   It also\
    \ requires registration of new values in a number of\n   registries:\n   o  NSLP\
    \ Message Objects\n   o  NSLP Identifiers (under GIST Parameters)\n   o  Router\
    \ Alert Option Values (IPv4 and IPv6)\n"
- title: 7.1.  NATFW NSLP Message Type Registry
  contents:
  - "7.1.  NATFW NSLP Message Type Registry\n   The NATFW NSLP Message Type is an\
    \ 8-bit value.  The allocation of\n   values for new message types requires IETF\
    \ Review.  Updates and\n   deletion of values from the registry are not possible.\
    \  This\n   specification defines four NATFW NSLP message types, which form the\n\
    \   initial contents of this registry.  IANA has added these four NATFW\n   NSLP\
    \ Message Types: CREATE (0x1), EXTERNAL (0x2), RESPONSE (0x3), and\n   NOTIFY\
    \ (0x4). 0x0 is Reserved.  Each registry entry consists of\n   value, description,\
    \ and reference.\n"
- title: 7.2.  NATFW NSLP Header Flag Registry
  contents:
  - "7.2.  NATFW NSLP Header Flag Registry\n   NATFW NSLP messages have a message-specific\
    \ 8-bit flags/reserved\n   field in their header.  The registration of flags is\
    \ subject to IANA\n   registration.  The allocation of values for flag types requires\
    \ IETF\n   Review.  Updates and deletion of values from the registry are not\n\
    \   possible.  This specification defines only two flags in Section 4.1,\n   the\
    \ P flag (bit 8) and the E flag (bit 9).  Each registry entry\n   consists of\
    \ value, bit position, description (containing the section\n   number), and reference.\n"
- title: 7.3.  NSLP Message Object Registry
  contents:
  - "7.3.  NSLP Message Object Registry\n   In Section 4.2 this document defines 9\
    \ objects for the NATFW NSLP:\n   NATFW_LT, NATFW_EXTERNAL_IP, NATFW_EXTERNAL_BINDING,\
    \ NATFW_EFI,\n   NATFW_INFO, NATFW_NONCE, NATFW_MSN, NATFW_DTINFO, NATFW_ICMP_TYPES.\n\
    \   IANA has assigned values for them from the NSLP Message Objects\n   registry.\n"
- title: 7.4.  NSLP Response Code Registry
  contents:
  - "7.4.  NSLP Response Code Registry\n   In addition, this document defines a number\
    \ of Response Codes for the\n   NATFW NSLP.  These can be found in Section 4.2.5\
    \ and have been\n   assigned values from the NSLP Response Code registry.  The\
    \ allocation\n   of new values for Response Codes requires IETF Review.  IANA\
    \ has\n   assigned values for them as given in Section 4.2.5 for the error\n \
    \  class and also for the number of responses values per error class.\n   Each\
    \ registry entry consists of response code, value, description,\n   and reference.\n"
- title: 7.5.  NSLP IDs and Router Alert Option Values
  contents:
  - "7.5.  NSLP IDs and Router Alert Option Values\n   GIST NSLPID\n   This specification\
    \ defines an NSLP for use with GIST and thus\n   requires an assigned NSLP identifier.\
    \  IANA has added one new value\n   (33) to the NSLP Identifiers (NSLPID) registry\
    \ defined in [RFC5971]\n   for the NATFW NSLP.\n   IPv4 and IPv6 Router Alert\
    \ Option (RAO) value\n   The GIST specification also requires that each NSLP-ID\
    \ be associated\n   with specific Router Alert Option (RAO) value.  For the purposes\
    \ of\n   the NATFW NSLP, a single IPv4 RAO value (65) and a single IPv6 RAO\n\
    \   value (68) have been allocated.\n"
- title: 8.  Acknowledgments
  contents:
  - "8.  Acknowledgments\n   We would like to thank the following individuals for\
    \ their\n   contributions to this document at different stages:\n   o  Marcus\
    \ Brunner and Henning Schulzrinne for their work on IETF\n      documents that\
    \ led us to start with this document;\n   o  Miquel Martin for his large contribution\
    \ on the initial version of\n      this document and one of the first prototype\
    \ implementations;\n   o  Srinath Thiruvengadam and Ali Fessi work for their work\
    \ on the\n      NAT/firewall threats document;\n   o  Henning Peters for his comments\
    \ and suggestions;\n   o  Ben Campbell as Gen-ART reviewer;\n   o  and the NSIS\
    \ working group.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC5971]  Schulzrinne, H. and R. Hancock, \"GIST: General Internet\n\
    \              Signalling Transport\", RFC 5971, October 2010.\n   [RFC1982] \
    \ Elz, R. and R. Bush, \"Serial Number Arithmetic\", RFC 1982,\n             \
    \ August 1996.\n   [RFC4086]  Eastlake, D., Schiller, J., and S. Crocker, \"Randomness\n\
    \              Requirements for Security\", BCP 106, RFC 4086, June 2005.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC4080]  Hancock, R., Karagiannis, G., Loughney,\
    \ J., and S. Van den\n              Bosch, \"Next Steps in Signaling (NSIS): Framework\"\
    ,\n              RFC 4080, June 2005.\n   [RFC3726]  Brunner, M., \"Requirements\
    \ for Signaling Protocols\",\n              RFC 3726, April 2004.\n   [RFC5974]\
    \  Manner, J., Karagiannis, G., and A. McDonald, \"NSIS\n              Signaling\
    \ Layer Protocol (NSLP) for Quality-of-Service\n              Signaling\", RFC\
    \ 5974, October 2010.\n   [RFC5866]  Sun, D., McCann, P., Tschofenig, H., Tsou,\
    \ T., Doria, A.,\n              and G. Zorn, \"Diameter Quality-of-Service Application\"\
    ,\n              RFC 5866, May 2010.\n   [RFC5978]  Manner, J., Bless, R., Loughney,\
    \ J., and E. Davies, \"Using\n              and Extending the NSIS Protocol Family\"\
    , RFC 5978,\n              October 2010.\n   [RFC3303]  Srisuresh, P., Kuthan,\
    \ J., Rosenberg, J., Molitor, A., and\n              A. Rayhan, \"Middlebox communication\
    \ architecture and\n              framework\", RFC 3303, August 2002.\n   [RFC4081]\
    \  Tschofenig, H. and D. Kroeselberg, \"Security Threats for\n              Next\
    \ Steps in Signaling (NSIS)\", RFC 4081, June 2005.\n   [RFC2663]  Srisuresh,\
    \ P. and M. Holdrege, \"IP Network Address\n              Translator (NAT) Terminology\
    \ and Considerations\",\n              RFC 2663, August 1999.\n   [RFC3234]  Carpenter,\
    \ B. and S. Brim, \"Middleboxes: Taxonomy and\n              Issues\", RFC 3234,\
    \ February 2002.\n   [RFC2205]  Braden, B., Zhang, L., Berson, S., Herzog, S.,\
    \ and S.\n              Jamin, \"Resource ReSerVation Protocol (RSVP) -- Version\
    \ 1\n              Functional Specification\", RFC 2205, September 1997.\n   [RFC3424]\
    \  Daigle, L. and IAB, \"IAB Considerations for UNilateral\n              Self-Address\
    \ Fixing (UNSAF) Across Network Address\n              Translation\", RFC 3424,\
    \ November 2002.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for\
    \ Writing an\n              IANA Considerations Section in RFCs\", BCP 26, RFC\
    \ 5226,\n              May 2008.\n   [RFC5389]  Rosenberg, J., Mahy, R., Matthews,\
    \ P., and D. Wing,\n              \"Session Traversal Utilities for NAT (STUN)\"\
    , RFC 5389,\n              October 2008.\n   [RFC3198]  Westerinen, A., Schnizlein,\
    \ J., Strassner, J., Scherling,\n              M., Quinn, B., Herzog, S., Huynh,\
    \ A., Carlson, M., Perry,\n              J., and S. Waldbusser, \"Terminology\
    \ for Policy-Based\n              Management\", RFC 3198, November 2001.\n   [RFC3520]\
    \  Hamer, L-N., Gage, B., Kosinski, B., and H. Shieh,\n              \"Session\
    \ Authorization Policy Element\", RFC 3520,\n              April 2003.\n   [RFC3521]\
    \  Hamer, L-N., Gage, B., and H. Shieh, \"Framework for\n              Session\
    \ Set-up with Media Authorization\", RFC 3521,\n              April 2003.\n  \
    \ [rsvp-firewall]\n              Roedig, U., Goertz, M., Karten, M., and R. Steinmetz,\n\
    \              \"RSVP as firewall Signalling Protocol\", Proceedings of the\n\
    \              6th IEEE Symposium on Computers and Communications,\n         \
    \     Hammamet, Tunisia, pp. 57 to 62, IEEE Computer Society\n              Press,\
    \ July 2001.\n"
- title: Appendix A.  Selecting Signaling Destination Addresses for EXTERNAL
  contents:
  - "Appendix A.  Selecting Signaling Destination Addresses for EXTERNAL\n   As with\
    \ all other message types, EXTERNAL messages need a reachable\n   IP address of\
    \ the data sender on the GIST level.  For the path-\n   coupled MRM, the source-address\
    \ of GIST is the reachable IP address\n   (i.e., the real IP address of the data\
    \ sender, or a wildcard).  While\n   this is straightforward, it is not necessarily\
    \ so for the loose-end\n   MRM.  Many applications do not provide the IP address\
    \ of the\n   communication counterpart, i.e., either the data sender or both a\n\
    \   data sender and receiver.  For the EXTERNAL messages, the case of\n   data\
    \ sender is of interest only.  The rest of this section gives\n   informational\
    \ guidance about determining a good destination-address\n   of the LE-MRM in GIST\
    \ for EXTERNAL messages.\n   This signaling destination address (SDA, the destination-address\
    \ in\n   GIST) can be the data sender, but for applications that do not\n   provide\
    \ an address upfront, the destination IP address has to be\n   chosen independently,\
    \ as it is unknown at the time when the NATFW\n   NSLP signaling has to start.\
    \  Choosing the 'correct' destination IP\n   address may be difficult and it is\
    \ possible that there is no 'right\n   answer' for all applications relying on\
    \ the NATFW NSLP.\n   Whenever possible, it is RECOMMENDED to chose the data sender's\
    \ IP\n   address as the SDA.  It is necessary to differentiate between the\n \
    \  received IP addresses on the data sender.  Some application-level\n   signaling\
    \ protocols (e.g., SIP) have the ability to transfer multiple\n   contact IP addresses\
    \ of the data sender.  For instance, private IP\n   addresses, public IP addresses\
    \ at a NAT, and public IP addresses at a\n   relay.  It is RECOMMENDED to use\
    \ all non-private IP addresses as\n   SDAs.\n   A different SDA must be chosen,\
    \ if the IP address of the data sender\n   is unknown.  This can have multiple\
    \ reasons: the application-level\n   signaling protocol cannot determine any data\
    \ sender IP address at\n   this point in time or the data receiver is server behind\
    \ a NAT, i.e.,\n   accepting inbound packets from any host.  In this case, the\
    \ NATFW\n   NSLP can be instructed to use the public IP address of an application\n\
    \   server or any other node.  Choosing the SDA in this case is out of\n   the\
    \ scope of the NATFW NSLP and depends on the application's choice.\n   The local\
    \ network can provide a network-SDA, i.e., an SDA that is\n   only meaningful\
    \ to the local network.  This will ensure that GIST\n   packets with destination-address\
    \ set to this network-SDA are going to\n   be routed to an edge-NAT or edge-firewall.\n"
- title: Appendix B.  Usage of External Binding Addresses
  contents:
  - "Appendix B.  Usage of External Binding Addresses\n   The NATFW_EXTERNAL_BINDING\
    \ object carries information, which has a\n   different utility to the information\
    \ carried within the\n   NATFW_EXTERNAL_IP object.  The NATFW_EXTERNAL_IP object\
    \ has the\n   public IP address and potentially port numbers that can be used\
    \ by\n   the application at the NI to be reachable via the public Internet.\n\
    \   However, there are cases in which various NIs are located behind the\n   same\
    \ public NAT, but are subject to a multi-level NAT deployment, as\n   shown in\
    \ Figure 35.  They can use their public IP address port\n   assigned to them to\
    \ communicate between each other (e.g., NI with NR1\n   and NR2) but they are\
    \ forced to send their traffic through the edge-\n   NAT, even though there is\
    \ a shorter way possible.\n       NI --192.168.0/24-- NAT1--10.0.0.0/8--NAT2 Internet\
    \ (public IP)\n                                |\n       NR1--192.168.0/24-- NAT3--\n\
    \                                |\n                                NR2 10.1.2.3\n\
    \                    Figure 35: Multi-Level NAT Scenario\n   Figure 35 shows an\
    \ example that is explored here:\n   1.  NI -> NR1: Both NI and NR1 send EXTERNAL\
    \ messages towards NAT2\n       and get an external address+port binding.  Then,\
    \ they exchange\n       that external binding and all traffic gets pinned to NAT2\
    \ instead\n       of taking the shortest path by NAT1 to NAT3 directly.  However,\n\
    \       to do that, NR1 and NI both need to be aware that they also have\n   \
    \    the address on the external side of NAT1 and NAT3, respectively.\n      \
    \ If ICE is deployed and there is actually a STUN server in the\n       10/8 network\
    \ configured, it is possible to get the shorter path\n       to work.  The NATFW\
    \ NSLP provides all external addresses in the\n       NATFW_EXTERNAL_BINDING towards\
    \ the public network it could allow\n       for optimizations.\n   2.  For the\
    \ case NI -> NR2 is even more obvious.  Pinning this to\n       NAT2 is an important\
    \ fallback, but allowing for trying for a\n       direct path between NAT1 and\
    \ NAT3 might be worth it.\n   Please note that if there are overlapping address\
    \ domains between NR\n   and the public Internet, the regular routing will not\
    \ necessary allow\n   sending the packet to the right domain.\n"
- title: Appendix C.  Applicability Statement on Data Receivers behind Firewalls
  contents:
  - "Appendix C.  Applicability Statement on Data Receivers behind Firewalls\n   Section\
    \ 3.7.2 describes how data receivers behind middleboxes can\n   instruct inbound\
    \ firewalls/NATs to forward NATFW NSLP signaling\n   towards them.  Finding an\
    \ inbound edge-NAT in an address environment\n   with NAT'ed addresses is quite\
    \ easy.  It is only required to find\n   some edge-NAT, as the data traffic will\
    \ be route-pinned to the NAT.\n   Locating the appropriate edge-firewall with\
    \ the PC-MRM sent inbound\n   is difficult.  For cases with a single, symmetric\
    \ route from the\n   Internet to the data receiver, it is quite easy; simply follow\
    \ the\n   default route in the inbound direction.\n                          \
    \   +------+                  Data Flow\n                     +-------| EFW1 +----------+\
    \     <===========\n                     |       +------+       ,--+--.\n    \
    \              +--+--+                  /       \\\n          NI+-----| FW1 |\
    \                 (Internet )----NR+/NI/DS\n          NR      +--+--+        \
    \          \\       /\n                     |       +------+       `--+--'\n \
    \                    +-------| EFW2 +----------+\n                           \
    \  +------+\n           ~~~~~~~~~~~~~~~~~~~~~>\n             Signaling Flow\n\
    \            Figure 36: Data Receiver behind Multiple Firewalls\n            \
    \                Located in Parallel\n   When a data receiver, and thus NR, is\
    \ located in a network site that\n   is multihomed with several independently\
    \ firewalled connections to\n   the public Internet (as shown in Figure 36), the\
    \ specific firewall\n   through which the data traffic will be routed has to be\
    \ ascertained.\n   NATFW NSLP signaling messages sent from the NI+/NR during the\n\
    \   EXTERNAL message exchange towards the NR+ must be routed by the NTLP\n   to\
    \ the edge-firewall that will be passed by the data traffic as well.\n   The NTLP\
    \ would need to be aware about the routing within the Internet\n   to determine\
    \ the path between the DS and DR.  Out of this, the NTLP\n   could determine which\
    \ of the edge-firewalls, either EFW1 or EFW2,\n   must be selected to forward\
    \ the NATFW NSLP signaling.  Signaling to\n   the wrong edge-firewall, as shown\
    \ in Figure 36, would install the\n   NATFW NSLP policy rules at the wrong device.\
    \  This causes either a\n   blocked data flow (when the policy rule is 'allow')\
    \ or an ongoing\n   attack (when the policy rule is 'deny').  Requiring the NTLP\
    \ to know\n   all about the routing within the Internet is definitely a tough\n\
    \   challenge and usually not possible.  In a case as described, the NTLP\n  \
    \ must basically give up and return an error to the NSLP level,\n   indicating\
    \ that the next hop discovery is not possible.\n"
- title: Appendix D.  Firewall and NAT Resources
  contents:
  - "Appendix D.  Firewall and NAT Resources\n   This section gives some examples\
    \ on how NATFW NSLP policy rules could\n   be mapped to real firewall or NAT resources.\
    \  The firewall rules and\n   NAT bindings are described in a natural way, i.e.,\
    \ in a way that one\n   will find in common implementations.\n"
- title: D.1.  Wildcarding of Policy Rules
  contents:
  - "D.1.  Wildcarding of Policy Rules\n   The policy rule/MRI to be installed can\
    \ be wildcarded to some degree.\n   Wildcarding applies to IP address, transport\
    \ layer port numbers, and\n   the IP payload (or next header in IPv6).  Processing\
    \ of wildcarding\n   splits into the NTLP and the NATFW NSLP layer.  The processing\
    \ at the\n   NTLP layer is independent of the NSLP layer processing and per-layer\n\
    \   constraints apply.  For wildcarding in the NTLP, see Section 5.8 of\n   [RFC5971].\n\
    \   Wildcarding at the NATFW NSLP level is always a node local policy\n   decision.\
    \  A signaling message carrying a wildcarded MRI (and thus\n   policy rule) arriving\
    \ at an NSLP node can be rejected if the local\n   policy does not allow the request.\
    \  For instance, take an MRI with IP\n   addresses set (not wildcarded), transport\
    \ protocol TCP, and TCP port\n   numbers completely wildcarded.  If the local\
    \ policy allows only\n   requests for TCP with all ports set and not wildcarded,\
    \ the request\n   is going to be rejected.\n"
- title: D.2.  Mapping to Firewall Rules
  contents:
  - "D.2.  Mapping to Firewall Rules\n   This section describes how a NSLP policy\
    \ rule signaled with a CREATE\n   message is mapped to a firewall rule.  The MRI\
    \ is set as follows:\n   o  network-layer-version=IPv4\n   o  source-address=192.0.2.100,\
    \ prefix-length=32\n   o  destination-address=192.0.50.5, prefix-length=32\n \
    \  o  IP-protocol=UDP\n   o  L4-source-port=34543, L4-destination-port=23198\n\
    \   The NATFW_EFI object is set to action=allow and sub_ports=0.\n   The resulting\
    \ policy rule (firewall rule) to be installed might look\n   like: allow udp from\
    \ 192.0.2.100 port=34543 to 192.0.50.5 port=23198.\n"
- title: D.3.  Mapping to NAT Bindings
  contents:
  - "D.3.  Mapping to NAT Bindings\n   This section describes how a NSLP policy rule\
    \ signaled with an\n   EXTERNAL message is mapped to a NAT binding.  It is assumed\
    \ that the\n   EXTERNAL message is sent by a NI+ located behind a NAT and does\n\
    \   contain a NATFW_DTINFO object.  The MRI is set following using the\n   signaling\
    \ destination address, since the IP address of the real data\n   sender is not\
    \ known:\n   o  network-layer-version=IPv4\n   o  source-address= 192.168.5.100\n\
    \   o  destination-address=SDA\n   o  IP-protocol=UDP\n   The NATFW_EFI object\
    \ is set to action=allow and sub_ports=0.  The\n   NATFW_DTINFO object contains\
    \ these parameters:\n   o  P=1\n   o  dest prefix=0\n   o  protocol=UDP\n   o\
    \  dst port number = 20230, src port number=0\n   o  src IP=0.0.0.0\n   The edge-NAT\
    \ allocates the external IP 192.0.2.79 and port 45000.\n   The resulting policy\
    \ rule (NAT binding) to be installed could look\n   like: translate udp from any\
    \ to 192.0.2.79 port=45000 to\n   192.168.5.100 port=20230.\n"
- title: D.4.  NSLP Handling of Twice-NAT
  contents:
  - "D.4.  NSLP Handling of Twice-NAT\n   The dynamic configuration of twice-NATs\
    \ requires application-level\n   support, as stated in Section 2.5.  The NATFW\
    \ NSLP cannot be used for\n   configuring twice-NATs if application-level support\
    \ is needed.\n   Assuming application-level support performing the configuration\
    \ of\n   the twice-NAT and the NATFW NSLP being installed at this devices, the\n\
    \   NATFW NSLP must be able to traverse it.  The NSLP is probably able to\n  \
    \ traverse the twice-NAT, as is any other data traffic, but the flow\n   information\
    \ stored in the NTLP's MRI will be invalidated through the\n   translation of\
    \ source and destination IP addresses.  The NATFW NSLP\n   implementation on the\
    \ twice-NAT MUST intercept NATFW NSLP and NTLP\n   signaling messages as any other\
    \ NATFW NSLP node does.  For the given\n   signaling flow, the NATFW NSLP node\
    \ MUST look up the corresponding IP\n   address translation and modify the NTLP/NSLP\
    \ signaling accordingly.\n   The modification results in an updated MRI with respect\
    \ to the source\n   and destination IP addresses.\n"
- title: Appendix E.  Example for Receiver Proxy Case
  contents:
  - "Appendix E.  Example for Receiver Proxy Case\n   This section gives an example\
    \ on how to use the NATFW NLSP for a\n   receiver behind a NAT, where only the\
    \ receiving side is NATFW NSLP\n   enabled.  We assume FTP as the application\
    \ to show a working example.\n   An FTP server is located behind a NAT, as shown\
    \ in Figure 5, and uses\n   the NATFW NSLP to allocate NAT bindings for the control\
    \ and data\n   channel of the FTP protocol.  The information about where to reach\n\
    \   the server is communicated by a separate protocol (e.g., email, chat)\n  \
    \ to the DS side.\n                   Public Internet                 Private\
    \ Address\n                                                        Space\n   \
    \   FTP Client                                            FTP Server\n       DS\
    \                          NAT                         NI+\n       |         \
    \                  |                            |\n       |                  \
    \         |  EXTERNAL                  |\n       |                           |<---------------------------|(1)\n\
    \       |                           |                            |\n       | \
    \                          |RESPONSE[Success]           |\n       |          \
    \                 |--------------------------->|(2)\n       |                \
    \           |CREATE                      |\n       |                         \
    \  |--------------------------->|(3)\n       |                           |RESPONSE[Success]\
    \           |\n       |                           |<---------------------------|(4)\n\
    \       |                           |                            |\n       | \
    \                          | <Use port=XYZ, IP=a.b.c.d> |\n       |<=======================================================|(5)\n\
    \       |FTP control port=XYZ       | FTP control port=21        |\n       |~~~~~~~~~~~~~~~~~~~~~~~~~~>|~~~~~~~~~~~~~~~~~~~~~~~~~~~>|(6)\n\
    \       |                           |                            |\n       | \
    \ FTP control/get X        |   FTP control/get X        |\n       |~~~~~~~~~~~~~~~~~~~~~~~~~~>|~~~~~~~~~~~~~~~~~~~~~~~~~~~>|(7)\n\
    \       |                           |  EXTERNAL                  |\n       | \
    \                          |<---------------------------|(8)\n       |       \
    \                    |                            |\n       |                \
    \           |RESPONSE[Success]           |\n       |                         \
    \  |--------------------------->|(9)\n       |                           |CREATE\
    \                      |\n       |                           |--------------------------->|(10)\n\
    \       |                           |RESPONSE[Success]           |\n       | \
    \                          |<---------------------------|(11)\n       |      \
    \                     |                            |\n       | Use port=FOO, IP=a.b.c.d\
    \  |  Use port=FOO, IP=a.b.c.d  |\n       |<~~~~~~~~~~~~~~~~~~~~~~~~~~|<~~~~~~~~~~~~~~~~~~~~~~~~~~~|(12)\n\
    \       |                           |                            |\n       |FTP\
    \ data to port=FOO       | FTP data to port=20        |\n       |~~~~~~~~~~~~~~~~~~~~~~~~~~>|~~~~~~~~~~~~~~~~~~~~~~~~~~~>|(13)\n\
    \                           Figure 37: Flow Chart\n   1.   EXTERNAL request message\
    \ sent to NAT, with these objects:\n        signaling session lifetime, extended\
    \ flow information object\n        (rule action=allow, sub_ports=0), message sequence\
    \ number\n        object, nonce object (carrying nonce for CREATE), and the data\n\
    \        terminal information object (I/P-flags set, sender prefix=0,\n      \
    \  protocol=TCP, DR port number = 21, DS's IP address=0); using the\n        LE-MRM.\
    \  This is used to allocate the external binding for the\n        FTP control\
    \ channel (TCP, port 21).\n   2.   Successful RESPONSE sent to NI+, with these\
    \ objects: signaling\n        session lifetime, message sequence number object,\
    \ information\n        code object ('Success':2), external address object (port=XYZ,\n\
    \        IPv4 addr=a.b.c.d).\n   3.   The NAT sends a CREATE towards NI+, with\
    \ these objects:\n        signaling session lifetime, extended flow information\
    \ object\n        (rule action=allow, sub_ports=0), message sequence number\n\
    \        object, nonce object (with copied value from (1)); using the PC-\n  \
    \      MRM (src-IP=a.b.c.d, src-port=XYZ, dst-IP=NI+, dst-port=21,\n        downstream).\n\
    \   4.   Successful RESPONSE sent to NAT, with these objects: signaling\n    \
    \    session lifetime, message sequence number object, information\n        code\
    \ object ('Success':2).\n   5.   The application at NI+ sends external NAT binding\
    \ information to\n        the other end, i.e., the FTP client at the DS.\n   6.\
    \   The FTP client connects the FTP control channel to port=XYZ,\n        IP=a.b.c.d.\n\
    \   7.   The FTP client sends a get command for file X.\n   8.   EXTERNAL request\
    \ message sent to NAT, with these objects:\n        signaling session lifetime,\
    \ extended flow information object\n        (rule action=allow, sub_ports=0),\
    \ message sequence number\n        object, nonce object (carrying nonce for CREATE),\
    \ and the data\n        terminal information object (I/P-flags set, sender prefix=32,\n\
    \        protocol=TCP, DR port number = 20, DS's IP address=DS-IP); using\n  \
    \      the LE-MRM.  This is used to allocate the external binding for\n      \
    \  the FTP data channel (TCP, port 22).\n   9.   Successful RESPONSE sent to NI+,\
    \ with these objects: signaling\n        session lifetime, message sequence number\
    \ object, information\n        code object ('Success':2), external address object\
    \ (port=FOO,\n        IPv4 addr=a.b.c.d).\n   10.  The NAT sends a CREATE towards\
    \ NI+, with these objects:\n        signaling session lifetime, extended flow\
    \ information object\n        (rule action=allow, sub_ports=0), message sequence\
    \ number\n        object, nonce object (with copied value from (1)); using the\
    \ PC-\n        MRM (src-IP=a.b.c.d, src-port=FOO, dst-IP=NI+, dst-port=20,\n \
    \       downstream).\n   11.  Successful RESPONSE sent to NAT, with these objects:\
    \ signaling\n        session lifetime, message sequence number object, information\n\
    \        code object ('Success':2).\n   12.  The FTP server responses with port=FOO\
    \ and IP=a.b.c.d.\n   13.  The FTP clients connects the data channel to port=FOO\
    \ and\n        IP=a.b.c.d.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Martin Stiemerling\n   NEC Europe Ltd. and University\
    \ of Goettingen\n   Kurfuersten-Anlage 36\n   Heidelberg  69115\n   Germany\n\
    \   Phone: +49 (0) 6221 4342 113\n   EMail: Martin.Stiemerling@neclab.eu\n   URI:\
    \   http://www.stiemerling.org\n   Hannes Tschofenig\n   Nokia Siemens Networks\n\
    \   Linnoitustie 6\n   Espoo  02600\n   Finland\n   Phone: +358 (50) 4871445\n\
    \   EMail: Hannes.Tschofenig@nsn.com\n   URI:   http://www.tschofenig.priv.at\n\
    \   Cedric Aoun\n   Consultant\n   Paris, France\n   EMail: cedaoun@yahoo.fr\n\
    \   Elwyn Davies\n   Folly Consulting\n   Soham\n   UK\n   Phone: +44 7889 488\
    \ 335\n   EMail: elwynd@dial.pipex.com\n"
