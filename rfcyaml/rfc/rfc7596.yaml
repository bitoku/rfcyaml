- contents:
  - '  Lightweight 4over6: An Extension to the Dual-Stack Lite Architecture

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Dual-Stack Lite (DS-Lite) (RFC 6333) describes an architecture for\n
    \  transporting IPv4 packets over an IPv6 network.  This document\n   specifies
    an extension to DS-Lite called \"Lightweight 4over6\", which\n   moves the Network
    Address and Port Translation (NAPT) function from\n   the centralized DS-Lite
    tunnel concentrator to the tunnel client\n   located in the Customer Premises
    Equipment (CPE).  This removes the\n   requirement for a Carrier Grade NAT function
    in the tunnel\n   concentrator and reduces the amount of centralized state that
    must be\n   held to a per-subscriber level.  In order to delegate the NAPT\n   function
    and make IPv4 address sharing possible, port-restricted IPv4\n   addresses are
    allocated to the CPEs.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7596.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Conventions .....................................................4\n   3.
    Terminology .....................................................5\n   4. Lightweight
    4over6 Architecture .................................6\n   5. Lightweight B4 Behavior
    .........................................7\n      5.1. Lightweight B4 Provisioning
    with DHCPv6 ....................7\n      5.2. Lightweight B4 Data-Plane Behavior
    ........................10\n           5.2.1. Fragmentation Behavior .............................11\n
    \  6. Lightweight AFTR Behavior ......................................12\n      6.1.
    Binding Table Maintenance .................................12\n      6.2. lwAFTR
    Data-Plane Behavior ................................13\n   7. Additional IPv4
    Address and Port-Set Provisioning Mechanisms ...14\n   8. ICMP Processing ................................................14\n
    \     8.1. ICMPv4 Processing by the lwAFTR ...........................15\n      8.2.
    ICMPv4 Processing by the lwB4 .............................15\n   9. Security
    Considerations ........................................15\n   10. References ....................................................16\n
    \     10.1. Normative References .....................................16\n      10.2.
    Informative References ...................................17\n   Acknowledgements
    ..................................................19\n   Contributors ......................................................19\n
    \  Authors' Addresses ................................................21\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Dual-Stack Lite (DS-Lite) [RFC6333] defines a model for
    providing\n   IPv4 access over an IPv6 network using two well-known technologies:\n
    \  IP in IP [RFC2473] and Network Address Translation (NAT).  The\n   DS-Lite
    architecture defines two major functional elements as\n   follows:\n   Basic Bridging
    BroadBand (B4) element:  A function implemented on a\n      dual-stack-capable
    node (either a directly connected device or a\n      CPE) that creates an IPv4-in-IPv6
    tunnel to an AFTR.\n   Address Family Transition Router (AFTR) element:  The combination
    of\n      an IPv4-in-IPv6 tunnel endpoint and an IPv4-IPv4 NAT implemented\n      on
    the same node.\n   As the AFTR performs the centralized NAT44 function, it dynamically\n
    \  assigns public IPv4 addresses and ports to a requesting host's\n   traffic
    (as described in [RFC3022]).  To achieve this, the AFTR must\n   dynamically maintain
    per-flow state in the form of active NAPT\n   sessions.  For service providers
    with a large number of B4 clients,\n   the size and associated costs for scaling
    the AFTR can quickly become\n   prohibitive.  Maintaining per-flow state can also
    place a large NAPT\n   logging overhead on the service provider in countries where
    logging\n   is a legal requirement.\n   This document describes a mechanism called
    \"Lightweight 4over6\"\n   (lw4o6), which provides a solution for these problems.
    \ By relocating\n   the NAPT functionality from the centralized AFTR to the distributed\n
    \  B4s, a number of benefits can be realized:\n   o  NAPT44 functionality is already
    widely supported and used in\n      today's CPE devices.  lw4o6 uses this to provide
    private<->public\n      NAPT44, meaning that the service provider does not need
    a\n      centralized NAT44 function.\n   o  The amount of state that must be maintained
    centrally in the AFTR\n      can be reduced from per-flow to per-subscriber.  This
    reduces\n      the amount of resources (memory and processing power) necessary
    in\n      the AFTR.\n   o  The reduction of maintained state results in a greatly
    reduced\n      logging overhead on the service provider.\n   Operators' IPv6 and
    IPv4 addressing architectures remain independent\n   of each other.  Therefore,
    flexible IPv4/IPv6 addressing schemes can\n   be deployed.\n   Lightweight 4over6
    is a solution designed specifically for complete\n   independence between IPv6
    subnet prefixes and IPv4 addresses with or\n   without IPv4 address sharing.  This
    is accomplished by maintaining\n   state for each softwire (per-subscriber state)
    in the central lwAFTR\n   and a hub-and-spoke forwarding architecture.  \"Mapping
    of Address and\n   Port with Encapsulation (MAP-E)\" [RFC7597] also offers these\n
    \  capabilities or, alternatively, allows for a reduction of the amount\n   of
    centralized state using rules to express IPv4/IPv6 address\n   mappings.  This
    introduces an algorithmic relationship between the\n   IPv6 subnet and IPv4 address.
    \ This relationship also allows the\n   option of direct, meshed connectivity
    between users.\n   The tunneling mechanism remains the same for DS-Lite and Lightweight\n
    \  4over6.  This document describes the changes to DS-Lite that are\n   necessary
    to implement Lightweight 4over6.  These changes mainly\n   concern the configuration
    parameters and provisioning method\n   necessary for the functional elements.\n
    \  One of the features of Lightweight 4over6 is to keep per-subscriber\n   state
    in the service provider's network.  This technique is\n   categorized as a \"binding
    approach\" [Unified-v4-in-v6] that defines a\n   unified IPv4-in-IPv6 softwire
    CPE.\n   This document extends the mechanism defined in [RFC7040] by allowing\n
    \  address sharing.  The solution in this document is also a variant of\n   Address
    plus Port (A+P) called \"Binding Table Mode\" (see Section 4.4\n   of [RFC6346]).\n
    \  This document focuses on architectural considerations, particularly\n   on
    the expected behavior of the involved functional elements and\n   their interfaces.
    \ Deployment-specific issues such as redundancy and\n   provisioning policy are
    out of scope for this document.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Conventions
- contents:
  - "3.  Terminology\n   This document defines the following terms:\n   Lightweight
    4over6 (lw4o6):   An IPv4-over-IPv6 hub-and-spoke\n                                 mechanism
    that extends DS-Lite by\n                                 moving the IPv4 translation
    (NAPT44)\n                                 function from the AFTR to the B4.\n
    \  Lightweight B4 (lwB4):        A B4 element [RFC6333] that supports\n                                 Lightweight
    4over6 extensions.  An lwB4\n                                 is a function implemented
    on a\n                                 dual-stack-capable node -- either a\n                                 directly
    connected device or a CPE --\n                                 that supports port-restricted
    IPv4\n                                 address allocation, implements NAPT44\n
    \                                functionality, and creates a tunnel to\n                                 an
    lwAFTR.\n   Lightweight AFTR (lwAFTR):    An AFTR element [RFC6333] that supports\n
    \                                the Lightweight 4over6 extension.  An\n                                 lwAFTR
    is an IPv4-in-IPv6 tunnel\n                                 endpoint that maintains
    per-subscriber\n                                 address binding only and does
    not\n                                 perform a NAPT44 function.\n   Restricted
    port set:          A non-overlapping range of allowed\n                                 external
    ports allocated to the lwB4 to\n                                 use for NAPT44.
    \ Source ports of IPv4\n                                 packets sent by the B4
    must belong to\n                                 the assigned port set.  The port
    set is\n                                 used for all port-aware IP protocols\n
    \                                (TCP, UDP, the Stream Control\n                                 Transmission
    Protocol (SCTP), etc.).\n   Port-restricted IPv4 address: A public IPv4 address
    with a restricted\n                                 port set.  In Lightweight
    4over6,\n                                 multiple B4s may share the same IPv4\n
    \                                address; however, their port sets must\n                                 be
    non-overlapping.\n   Throughout the remainder of this document, the terms \"B4\"
    and \"AFTR\"\n   should be understood to refer specifically to a DS-Lite\n   implementation.
    \ The terms \"lwB4\" and \"lwAFTR\" refer to a Lightweight\n   4over6 implementation.\n"
  title: 3.  Terminology
- contents:
  - "4.  Lightweight 4over6 Architecture\n   The Lightweight 4over6 architecture is
    functionally similar to\n   DS-Lite.  lwB4s and an lwAFTR are connected through
    an IPv6-enabled\n   network.  Both approaches use an IPv4-in-IPv6 encapsulation
    scheme to\n   deliver IPv4 connectivity.  The following figure shows the data
    plane\n   with the main functional change between DS-Lite and lw4o6:\n   +--------+
    \  +---------+  IPv4-in-IPv6  +---------+   +-------------+\n   |IPv4 LAN|---|
    \   B4   |================|AFTR/NAPT|---|IPv4 Internet|\n   +--------+   +---------+
    \               +---------+   +-------------+\n                  DS-Lite NAPT
    model: all state in the AFTR\n   +--------+   +---------+  IPv4-in-IPv6  +------+
    \  +-------------+\n   |IPv4 LAN|---|lwB4/NAPT|================|lwAFTR|---|IPv4
    Internet|\n   +--------+   +---------+                +------+   +-------------+\n
    \                          lw4o6 NAPT model:\n           subscriber state in the
    lwAFTR, NAPT state in the lwB4\n     Figure 1: Comparison of DS-Lite and Lightweight
    4over6 Data Plane\n   There are three main components in the Lightweight 4over6\n
    \  architecture:\n   o  The lwB4, which performs the NAPT function and IPv4/IPv6\n
    \     encapsulation/decapsulation.\n   o  The lwAFTR, which performs the IPv4/IPv6
    encapsulation/\n      decapsulation.\n   o  The provisioning system, which tells
    the lwB4 which IPv4 address\n      and port set to use.\n   The lwB4 differs from
    a regular B4 in that it now performs the NAPT\n   functionality.  This means that
    it needs to be provisioned with the\n   public IPv4 address and port set it is
    allowed to use.  This\n   information is provided through a provisioning mechanism
    such as\n   DHCP, the Port Control Protocol (PCP) [RFC6887], or the Broadband\n
    \  Forum's TR-69 specification [TR069].\n   The lwAFTR needs to know the binding
    between the IPv6 address of\n   each subscriber as well as the IPv4 address and
    port set allocated to\n   each subscriber.  This information is used to perform
    ingress\n   filtering upstream and encapsulation downstream.  Note that this is\n
    \  per-subscriber state, as opposed to per-flow state in the regular\n   AFTR
    case.\n   The consequence of this architecture is that the information\n   maintained
    by the provisioning mechanism and the one maintained by\n   the lwAFTR MUST be
    synchronized (see Figure 2).  The precise\n   mechanism whereby this synchronization
    occurs is out of scope for\n   this document.\n   The solution specified in this
    document allows the assignment of\n   either a full or a shared IPv4 address to
    requesting CPEs.  [RFC7040]\n   provides a mechanism for assigning a full IPv4
    address only.\n                             +------------+\n                     /-------|Provisioning|<-----\\\n
    \                    |       +------------+      |\n                     |                           |\n
    \                    V                           V\n   +--------+   +---------+
    \   IPv4/IPv6     +------+    +-------------+\n   |IPv4 LAN|---|lwB4/NAPT|==================|lwAFTR|----|IPv4
    Internet|\n   +--------+   +---------+                  +------+    +-------------+\n
    \        Figure 2: Lightweight 4over6 Provisioning Synchronization\n"
  title: 4.  Lightweight 4over6 Architecture
- contents:
  - '5.  Lightweight B4 Behavior

    '
  - contents:
    - "5.1.  Lightweight B4 Provisioning with DHCPv6\n   With DS-Lite, the B4 element
      only needs to be configured with a\n   single DS-Lite-specific parameter so
      that it can set up the softwire\n   (the IPv6 address of the AFTR).  Its IPv4
      address can be taken from\n   the well-known range 192.0.0.0/29.\n   In lw4o6,
      a number of lw4o6-specific configuration parameters must be\n   provisioned
      to the lwB4.  These are:\n   o  IPv6 address for the lwAFTR\n   o  IPv4 external
      (public) address for NAPT44\n   o  Restricted port set to use for NAPT44\n   o
      \ IPv6 binding prefix\n   The lwB4 MUST implement DHCPv6-based configuration
      using\n   OPTION_S46_CONT_LW as described in Section 5.3 of [RFC7598].  This\n
      \  means that the lifetime of the softwire and the derived configuration\n   information
      (e.g., IPv4 shared address, IPv4 address) are bound to\n   the lifetime of the
      DHCPv6 lease.  If stateful IPv4 configuration or\n   additional IPv4 configuration
      information is required, DHCP 4o6\n   [RFC7341] MUST be used.\n   Although it
      would be possible to extend lw4o6 to have more than one\n   active lw4o6 tunnel
      configured simultaneously, this document is only\n   concerned with the use
      of a single tunnel.\n   The IPv6 binding prefix field is provisioned so that
      the Customer\n   Edge (CE) can identify the correct prefix to use as the tunnel\n
      \  source.  On receipt of the necessary configuration parameters listed\n   above,
      the lwB4 performs a longest-prefix match between the IPv6\n   binding prefix
      and its currently active IPv6 prefixes.  The result\n   forms the subnet to
      be used for sourcing the lw4o6 tunnel.  The full\n   /128 address is then constructed
      in the same manner as [RFC7597].\n    0                   1                   2
      \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                  Operator Assigned Prefix                     |\n   .                        (64
      bits)                              .\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |         Zero Padding          |         IPv4 Address          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |       IPv4 Addr cont.         |             PSID              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \             Figure 3: Construction of the lw4o6 /128 Prefix\n   Operator Assigned
      Prefix:\n                 IPv6 prefix allocated to the client.  If the prefix\n
      \                length is less than 64, it is right-padded with zeros\n                 to
      64 bits.\n   Padding:      Padding (all zeros).\n   IPv4 Address: Public IPv4
      address allocated to the client.\n   PSID:         Port Set ID.  Allocated to
      the client; left-padded with\n                 zeros to 16 bits.  If no PSID
      is provisioned, all\n                 zeros.\n   In the event that the lwB4's
      IPv6 encapsulation source address is\n   changed for any reason (such as the
      DHCPv6 lease expiring), the\n   lwB4's dynamic provisioning process MUST be
      re-initiated.  When the\n   lwB4's public IPv4 address or Port Set ID is changed
      for any reason,\n   the lwB4 MUST flush its NAPT table.\n   An lwB4 MUST support
      dynamic port-restricted IPv4 address\n   provisioning.  The port-set algorithm
      for provisioning this is\n   described in Section 5.1 of [RFC7597].  For lw4o6,
      the number of\n   a-bits SHOULD be 0, thus allocating a single contiguous port
      set to\n   each lwB4.\n   Provisioning of the lwB4 using DHCPv6 as described
      here allocates a\n   single PSID to the client.  In the event that the client
      is\n   concurrently using all of the provisioned L4 ports, it may be unable\n
      \  to initiate any additional outbound connections.  DHCPv6-based\n   provisioning
      does not provide a mechanism for the client to request\n   more L4 port numbers.
      \ Other provisioning mechanisms (e.g., PCP-based\n   provisioning [PCP-PORT_SET])
      provide this function.  Issues relevant\n   to IP address sharing are discussed
      in more detail in [RFC6269].\n   Unless an lwB4 is being allocated a full IPv4
      address, it is\n   RECOMMENDED that PSIDs containing the system ports (0-1023)
      not be\n   allocated to lwB4s.  The reserved ports are more likely to be\n   reserved
      by middleware, and therefore we recommend that they not be\n   issued to clients
      other than as a deliberate assignment.\n   Section 5.2.2 of [RFC6269] provides
      analysis of allocating system\n   ports to clients with IPv4 address sharing.\n
      \  In the event that the lwB4 receives an ICMPv6 error message (Type 1,\n   Code
      5) originating from the lwAFTR, the lwB4 interprets this to mean\n   that no
      matching entry in the lwAFTR's binding table has been found,\n   so the IPv4
      payload is not being forwarded by the lwAFTR.  The lwB4\n   MAY then re-initiate
      the dynamic port-restricted provisioning\n   process.  The lwB4's re-initiation
      policy SHOULD be configurable.\n   On receipt of such an ICMP error message,
      the lwB4 MUST validate the\n   source address to be the same as the lwAFTR address
      that is\n   configured.  In the event that these addresses do not match, the
      lwB4\n   MUST discard the ICMP error message.\n   In order to prevent forged
      ICMP messages (using the spoofed lwAFTR\n   address as the source) from being
      sent to lwB4s, the operator can\n   implement network ingress filtering as described
      in [RFC2827].\n   The DNS considerations described in Sections 5.5 and 6.4 of
      [RFC6333]\n   apply to Lightweight 4over6; lw4o6 implementations MUST comply
      with\n   all requirements stated there.\n"
    title: 5.1.  Lightweight B4 Provisioning with DHCPv6
  - contents:
    - "5.2.  Lightweight B4 Data-Plane Behavior\n   Several sections of [RFC6333]
      provide background information on the\n   B4's data-plane functionality and
      MUST be implemented by the lwB4, as\n   they are common to both solutions.  The
      relevant sections are:\n   5.2 Encapsulation                 Covering encapsulation
      and\n                                     decapsulation of tunneled traffic\n
      \  5.3 Fragmentation and Reassembly  Covering MTU and fragmentation\n                                     considerations
      (referencing\n                                     [RFC2473])\n   7.1 Tunneling
      \                    Covering tunneling and Traffic\n                                     Class
      mapping between IPv4 and IPv6\n                                     (referencing
      [RFC2473]).  Also see\n                                     [RFC2983]\n   The
      lwB4 element performs IPv4 address translation (NAPT44) as well\n   as encapsulation
      and decapsulation.  It runs standard NAPT44\n   [RFC3022] using the allocated
      port-restricted address as its external\n   IPv4 address and range of source
      ports.\n   The working flow of the lwB4 is illustrated in Figure 4.\n                        +-------------+\n
      \                       |     lwB4    |\n      +--------+  IPv4  |------+------|
      IPv4-in-IPv6  +----------+\n      |IPv4 LAN|------->|      |Encap.|-------------->|Configured|\n
      \     |        |<-------| NAPT |  or  |<--------------|  lwAFTR  |\n      +--------+
      \       |      |Decap.|               +----------+\n                        +------+------+\n
      \                   Figure 4: Working Flow of the lwB4\n   Hosts connected to
      the customer's network behind the lwB4 source IPv4\n   packets with an [RFC1918]
      address.  When the lwB4 receives such an\n   IPv4 packet, it performs a NAPT44
      function on the source address and\n   port by using the public IPv4 address
      and a port number from the\n   allocated port set.  Then, it encapsulates the
      packet with an IPv6\n   header.  The destination IPv6 address is the lwAFTR's
      IPv6 address,\n   and the source IPv6 address is the lwB4's IPv6 tunnel endpoint\n
      \  address.  Finally, the lwB4 forwards the encapsulated packet to the\n   configured
      lwAFTR.\n   When the lwB4 receives an IPv4-in-IPv6 packet from the lwAFTR, it\n
      \  decapsulates the IPv4 packet from the IPv6 packet.  Then, it performs\n   NAPT44
      translation on the destination address and port, based on the\n   available
      information in its local NAPT44 table.\n   If the IPv6 source address does not
      match the configured lwAFTR\n   address, then the packet MUST be discarded.
      \ If the decapsulated IPv4\n   packet does not match the lwB4's configuration
      (i.e., invalid\n   destination IPv4 address or port), then the packet MUST be
      dropped.\n   An ICMPv4 error message (Type 3, Code 13 -- Destination Unreachable,\n
      \  Communication Administratively Prohibited) MAY be sent back to the\n   lwAFTR.
      \ The ICMP policy SHOULD be configurable.\n   The lwB4 is responsible for performing
      Application Layer Gateway\n   (ALG) functions (e.g., SIP, FTP) and other NAPT
      traversal mechanisms\n   (e.g., Universal Plug and Play (UPnP) IGD (Internet
      Gateway Device),\n   the NAT Port Mapping Protocol (NAT-PMP), manual binding\n
      \  configuration, PCP) for the internal hosts, if necessary.  This\n   requirement
      is typical for NAPT44 gateways available today.\n   It is possible that an lwB4
      is co-located in a host.  In this case,\n   the functions of NAPT44 and encapsulation/decapsulation
      are\n   implemented inside the host.\n"
    - contents:
      - "5.2.1.  Fragmentation Behavior\n   For TCP and UDP traffic, the NAPT44 implemented
        in the lwB4 MUST\n   conform to the behavior and best current practices documented
        in\n   [RFC4787], [RFC5508], and [RFC5382].  If the lwB4 supports the\n   Datagram
        Congestion Control Protocol (DCCP), then the requirements in\n   [RFC5597]
        MUST be implemented.\n   The NAPT44 in the lwB4 MUST implement ICMP message
        handling behavior\n   conforming to the best current practice documented in
        [RFC5508].  If\n   the lwB4 receives an ICMP error (for errors detected inside
        the IPv6\n   tunnel), the node relays the ICMP error message to the original\n
        \  source (the lwAFTR).  This behavior SHOULD be implemented conforming\n
        \  to Section 8 of [RFC2473].\n   If IPv4 hosts behind different lwB4s sharing
        the same IPv4 address\n   send fragments to the same IPv4 destination host
        outside the\n   Lightweight 4over6 domain, those hosts may use the same IPv4\n
        \  fragmentation identifier, resulting in incorrect reassembly of the\n   fragments
        at the destination host.  Given that the IPv4 fragmentation\n   identifier
        is a 16-bit field, it could be used similarly to port\n   ranges: An lwB4
        could rewrite the IPv4 fragmentation identifier to be\n   within its allocated
        port set, if the resulting fragment identifier\n   space is large enough related
        to the rate at which fragments are\n   sent.  However, splitting the identifier
        space in this fashion would\n   increase the probability of reassembly collision
        for all connections\n   through the lwB4.  See also Section 5.3.1 of [RFC6864].\n"
      title: 5.2.1.  Fragmentation Behavior
    title: 5.2.  Lightweight B4 Data-Plane Behavior
  title: 5.  Lightweight B4 Behavior
- contents:
  - '6.  Lightweight AFTR Behavior

    '
  - contents:
    - "6.1.  Binding Table Maintenance\n   The lwAFTR maintains an address binding
      table containing the binding\n   between the lwB4's IPv6 address, the allocated
      IPv4 address, and the\n   restricted port set.  Unlike the DS-Lite extended
      binding table,\n   which is a 5-tuple NAPT table and is defined in Section 6.6
      of\n   [RFC6333], each entry in the Lightweight 4over6 binding table\n   contains
      the following 3-tuples:\n   o  IPv6 address for a single lwB4\n   o  Public
      IPv4 address\n   o  Restricted port set\n   The entry has two functions: the
      IPv6 encapsulation of inbound\n   IPv4 packets destined to the lwB4 and the
      validation of outbound\n   IPv4-in-IPv6 packets received from the lwB4 for decapsulation.\n
      \  The lwAFTR does not perform NAPT and so does not need session\n   entries.\n
      \  The lwAFTR MUST synchronize the binding information with the\n   port-restricted
      address provisioning process.  If the lwAFTR does not\n   participate in the
      port-restricted address provisioning process, the\n   binding MUST be synchronized
      through other methods (e.g., out-of-band\n   static update).\n   If the lwAFTR
      participates in the port-restricted provisioning\n   process, then its binding
      table MUST be created as part of this\n   process.\n   For all provisioning
      processes, the lifetime of binding table entries\n   MUST be synchronized with
      the lifetime of address allocations.\n"
    title: 6.1.  Binding Table Maintenance
  - contents:
    - "6.2.  lwAFTR Data-Plane Behavior\n   Several sections of [RFC6333] provide
      background information on\n   the AFTR's data-plane functionality and MUST be
      implemented by the\n   lwAFTR, as they are common to both solutions.  The relevant\n
      \  sections are:\n   6.2 Encapsulation                 Covering encapsulation
      and\n                                     decapsulation of tunneled traffic\n
      \  6.3 Fragmentation and Reassembly  Fragmentation and reassembly\n                                     considerations
      (referencing\n                                     [RFC2473])\n   7.1 Tunneling
      \                    Covering tunneling and Traffic\n                                     Class
      mapping between IPv4 and IPv6\n                                     (referencing
      [RFC2473]).  Also see\n                                     [RFC2983]\n   When
      the lwAFTR receives an IPv4-in-IPv6 packet from an lwB4, it\n   decapsulates
      the IPv6 header and verifies the source addresses and\n   port in the binding
      table.  If both the source IPv4 and IPv6\n   addresses match a single entry
      in the binding table and the source\n   port is in the allowed port set for
      that entry, the lwAFTR forwards\n   the packet to the IPv4 destination.\n   If
      no match is found (e.g., no matching IPv4 address entry, port out\n   of range),
      the lwAFTR MUST discard or implement a policy (such as\n   redirection) on the
      packet.  An ICMPv6 Type 1, Code 5 (Destination\n   Unreachable, source address
      failed ingress/egress policy) error\n   message MAY be sent back to the requesting
      lwB4.  The ICMP policy\n   SHOULD be configurable.\n   When the lwAFTR receives
      an inbound IPv4 packet, it uses the IPv4\n   destination address and port to
      look up the destination lwB4's IPv6\n   address in its binding table.  If a
      match is found, the lwAFTR\n   encapsulates the IPv4 packet.  The source is
      the lwAFTR's IPv6\n   address, and the destination is the lwB4's IPv6 address
      from the\n   matched entry.  Then, the lwAFTR forwards the packet to the lwB4\n
      \  natively over the IPv6 network.\n   If no match is found, the lwAFTR MUST
      discard the packet.  An ICMPv4\n   Type 3, Code 1 (Destination Unreachable,
      Host Unreachable) error\n   message MAY be sent back.  The ICMP policy SHOULD
      be configurable.\n   The lwAFTR MUST support hairpinning of traffic between
      two lwB4s, by\n   performing decapsulation and re-encapsulation of packets from
      one\n   lwB4 that need to be sent to another lwB4 associated with the same\n
      \  AFTR.  The hairpinning policy MUST be configurable.\n"
    title: 6.2.  lwAFTR Data-Plane Behavior
  title: 6.  Lightweight AFTR Behavior
- contents:
  - "7.  Additional IPv4 Address and Port-Set Provisioning Mechanisms\n   In addition
    to the DHCPv6-based mechanism described in Section 5.1,\n   several other IPv4
    provisioning protocols have been suggested.  These\n   protocols MAY be implemented.
    \ These alternatives include:\n   o  DHCPv4 over DHCPv6: [RFC7341] describes implementing
    DHCPv4\n      messages over an IPv6-only service provider's network.  This\n      enables
    leasing of IPv4 addresses and makes DHCPv4 options\n      available to the DHCPv4-over-DHCPv6
    client.  An lwB4 MAY implement\n      [RFC7341] and [Dyn-Shared-v4Alloc] to retrieve
    a shared IPv4\n      address with a set of ports.\n   o  PCP [RFC6887]: an lwB4
    MAY use [PCP-PORT_SET] to retrieve a\n      restricted IPv4 address and a set
    of ports.\n   In a Lightweight 4over6 domain, the binding information MUST be\n
    \  synchronized across the lwB4s, the lwAFTRs, and the provisioning\n   server.\n
    \  To prevent interworking complexity, it is RECOMMENDED that an\n   operator
    use a single provisioning mechanism / protocol for their\n   implementation.  In
    the event that more than one provisioning\n   mechanism / protocol needs to be
    used (for example, during a\n   migration to a new provisioning mechanism), the
    operator SHOULD\n   ensure that each provisioning mechanism has a discrete set
    of\n   resources (e.g., IPv4 address/PSID pools, as well as lwAFTR tunnel\n   addresses
    and binding tables).\n"
  title: 7.  Additional IPv4 Address and Port-Set Provisioning Mechanisms
- contents:
  - "8.  ICMP Processing\n   For both the lwAFTR and the lwB4, ICMPv6 MUST be handled
    as described\n   in [RFC2473].\n   ICMPv4 does not work in an address-sharing
    environment without\n   special handling [RFC6269].  Due to the port-set style
    of address\n   sharing, Lightweight 4over6 requires specific ICMP message handling\n
    \  not required by DS-Lite.\n"
  - contents:
    - "8.1.  ICMPv4 Processing by the lwAFTR\n   For inbound ICMP messages, the following
      behavior SHOULD be\n   implemented by the lwAFTR to provide ICMP error handling
      and basic\n   remote IPv4 service diagnostics for a port-restricted CPE:\n   1.
      \ Check the ICMP Type field.\n   2.  If the ICMP Type field is set to 0 or 8
      (echo reply or request),\n       then the lwAFTR MUST take the value of the
      ICMP Identifier field\n       as the source port and use this value to look
      up the binding\n       table for an encapsulation destination.  If a match is
      found, the\n       lwAFTR forwards the ICMP packet to the IPv6 address stored
      in the\n       entry; otherwise, it MUST discard the packet.\n   3.  If the
      ICMP Type field is set to any other value, then the lwAFTR\n       MUST use
      the method described in REQ-3 of [RFC5508] to locate the\n       source port
      within the transport-layer header in the ICMP\n       packet's data field.  The
      destination IPv4 address and source\n       port extracted from the ICMP packet
      are then used to make a\n       lookup in the binding table.  If a match is
      found, it MUST\n       forward the ICMP reply packet to the IPv6 address stored
      in the\n       entry; otherwise, it MUST discard the packet.\n   Otherwise,
      the lwAFTR MUST discard all inbound ICMPv4 messages.\n   The ICMP policy SHOULD
      be configurable.\n"
    title: 8.1.  ICMPv4 Processing by the lwAFTR
  - contents:
    - "8.2.  ICMPv4 Processing by the lwB4\n   The lwB4 MUST implement the requirements
      defined in [RFC5508] for\n   ICMP forwarding.  For ICMP echo request packets
      originating from the\n   private IPv4 network, the lwB4 SHOULD implement the
      method described\n   in [RFC6346] and use an available port from its port set
      as the ICMP\n   identifier.\n"
    title: 8.2.  ICMPv4 Processing by the lwB4
  title: 8.  ICMP Processing
- contents:
  - "9.  Security Considerations\n   As the port space for a subscriber shrinks due
    to address sharing,\n   the randomness for the port numbers of the subscriber
    is decreased\n   significantly.  This means that it is much easier for an attacker
    to\n   guess the port number used, which could result in attacks ranging\n   from
    throughput reduction to broken connections or data corruption.\n   The port set
    for a subscriber can be a set of contiguous ports or\n   non-contiguous ports.
    \ Contiguous port sets do not reduce this\n   threat.  However, with non-contiguous
    port sets (which may be\n   generated in a pseudorandom way [RFC6431]), the randomness
    of the\n   port number is improved, provided that the attacker is outside the\n
    \  Lightweight 4over6 domain and hence does not know the port-set\n   generation
    algorithm.\n   The lwAFTR MUST rate-limit ICMPv6 error messages (see Section 5.1)
    to\n   defend against DoS attacks generated by an abuse user.\n   More considerations
    about IP address sharing are discussed in\n   Section 13 of [RFC6269], which is
    applicable to this solution.\n   This document describes a number of different
    protocols that may be\n   used for the provisioning of lw4o6.  In each case, the
    security\n   considerations relevant to the provisioning protocol are also\n   relevant
    to the provisioning of lw4o6 using that protocol.  lw4o6\n   does not add any
    other security considerations specific to these\n   provisioning protocols.\n"
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,
      D., de Groot, G.,\n              and E. Lear, \"Address Allocation for Private
      Internets\",\n              BCP 5, RFC 1918, DOI 10.17487/RFC1918, February
      1996,\n              <http://www.rfc-editor.org/info/rfc1918>.\n   [RFC2119]
      \ Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2473]  Conta,
      A. and S. Deering, \"Generic Packet Tunneling in\n              IPv6 Specification\",
      RFC 2473, DOI 10.17487/RFC2473,\n              December 1998, <http://www.rfc-editor.org/info/rfc2473>.\n
      \  [RFC4787]  Audet, F., Ed., and C. Jennings, \"Network Address\n              Translation
      (NAT) Behavioral Requirements for Unicast\n              UDP\", BCP 127, RFC
      4787, DOI 10.17487/RFC4787,\n              January 2007, <http://www.rfc-editor.org/info/rfc4787>.\n
      \  [RFC5382]  Guha, S., Ed., Biswas, K., Ford, B., Sivakumar, S., and P.\n              Srisuresh,
      \"NAT Behavioral Requirements for TCP\", BCP 142,\n              RFC 5382, DOI
      10.17487/RFC5382, October 2008,\n              <http://www.rfc-editor.org/info/rfc5382>.\n
      \  [RFC5508]  Srisuresh, P., Ford, B., Sivakumar, S., and S. Guha, \"NAT\n              Behavioral
      Requirements for ICMP\", BCP 148, RFC 5508,\n              DOI 10.17487/RFC5508,
      April 2009,\n              <http://www.rfc-editor.org/info/rfc5508>.\n   [RFC5597]
      \ Denis-Courmont, R., \"Network Address Translation (NAT)\n              Behavioral
      Requirements for the Datagram Congestion\n              Control Protocol\",
      BCP 150, RFC 5597,\n              DOI 10.17487/RFC5597, September 2009,\n              <http://www.rfc-editor.org/info/rfc5597>.\n
      \  [RFC6333]  Durand, A., Droms, R., Woodyatt, J., and Y. Lee,\n              \"Dual-Stack
      Lite Broadband Deployments Following IPv4\n              Exhaustion\", RFC 6333,
      DOI 10.17487/RFC6333, August 2011,\n              <http://www.rfc-editor.org/info/rfc6333>.\n
      \  [RFC7598]  Mrugalski, T., Troan, O., Farrer, I., Perreault, S., Dec,\n              W.,
      Bao, C., Yeh, L., and X. Deng, \"DHCPv6 Options for\n              Configuration
      of Softwire Address and Port-Mapped\n              Clients\", RFC 7598, DOI
      10.17487/RFC7598, July 2015,\n              <http://www.rfc-editor.org/info/rfc7598>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [B4-Trans-DSLite]\n              Cui, Y.,
      Sun, Q., Boucadair, M., Tsou, T., Lee, Y., and\n              I. Farrer, \"Lightweight
      4over6: An Extension to the\n              DS-Lite Architecture\", Work in Progress,\n
      \             draft-cui-softwire-b4-translated-ds-lite-11,\n              February
      2013.\n   [DSLite-LW-Ext]\n              Deng, X., Boucadair, M., and C. Zhou,
      \"NAT offload\n              extension to Dual-Stack lite\", Work in Progress,\n
      \             draft-zhou-softwire-b4-nat-04, October 2011.\n   [Dyn-Shared-v4Alloc]\n
      \             Cui, Y., Sun, Q., Farrer, I., Lee, Y., Sun, Q., and\n              M.
      Boucadair, \"Dynamic Allocation of Shared IPv4\n              Addresses\", Work
      in Progress,\n              draft-ietf-dhc-dynamic-shared-v4allocation-09, May
      2015.\n   [PCP-PORT_SET]\n              Sun, Q., Boucadair, M., Sivakumar, S.,
      Zhou, C., Tsou, T.,\n              and S. Perreault, \"Port Control Protocol
      (PCP) Extension\n              for Port Set Allocation\", Work in Progress,\n
      \             draft-ietf-pcp-port-set-09, May 2015.\n   [RFC2827]  Ferguson,
      P. and D. Senie, \"Network Ingress Filtering:\n              Defeating Denial
      of Service Attacks which employ IP Source\n              Address Spoofing\",
      BCP 38, RFC 2827, DOI 10.17487/RFC2827,\n              May 2000, <http://www.rfc-editor.org/info/rfc2827>.\n
      \  [RFC2983]  Black, D., \"Differentiated Services and Tunnels\",\n              RFC
      2983, DOI 10.17487/RFC2983, October 2000,\n              <http://www.rfc-editor.org/info/rfc2983>.\n
      \  [RFC3022]  Srisuresh, P. and K. Egevang, \"Traditional IP Network\n              Address
      Translator (Traditional NAT)\", RFC 3022,\n              DOI 10.17487/RFC3022,
      January 2001,\n              <http://www.rfc-editor.org/info/rfc3022>.\n   [RFC6269]
      \ Ford, M., Ed., Boucadair, M., Durand, A., Levis, P., and\n              P.
      Roberts, \"Issues with IP Address Sharing\", RFC 6269,\n              DOI 10.17487/RFC6269,
      June 2011,\n              <http://www.rfc-editor.org/info/rfc6269>.\n   [RFC6346]
      \ Bush, R., Ed., \"The Address plus Port (A+P) Approach to\n              the
      IPv4 Address Shortage\", RFC 6346,\n              DOI 10.17487/RFC6346, August
      2011,\n              <http://www.rfc-editor.org/info/rfc6346>.\n   [RFC6431]
      \ Boucadair, M., Levis, P., Bajko, G., Savolainen, T., and\n              T.
      Tsou, \"Huawei Port Range Configuration Options for PPP\n              IP Control
      Protocol (IPCP)\", RFC 6431,\n              DOI 10.17487/RFC6431, November 2011,\n
      \             <http://www.rfc-editor.org/info/rfc6431>.\n   [RFC6864]  Touch,
      J., \"Updated Specification of the IPv4 ID Field\",\n              RFC 6864,
      DOI 10.17487/RFC6864, February 2013,\n              <http://www.rfc-editor.org/info/rfc6864>.\n
      \  [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n              P.
      Selkirk, \"Port Control Protocol (PCP)\", RFC 6887,\n              DOI 10.17487/RFC6887,
      April 2013,\n              <http://www.rfc-editor.org/info/rfc6887>.\n   [RFC7040]
      \ Cui, Y., Wu, J., Wu, P., Vautrin, O., and Y. Lee, \"Public\n              IPv4-over-IPv6
      Access Network\", RFC 7040,\n              DOI 10.17487/RFC7040, November 2013,\n
      \             <http://www.rfc-editor.org/info/rfc7040>.\n   [RFC7341]  Sun,
      Q., Cui, Y., Siodelski, M., Krishnan, S., and I.\n              Farrer, \"DHCPv4-over-DHCPv6
      (DHCP 4o6) Transport\",\n              RFC 7341, DOI 10.17487/RFC7341, August
      2014,\n              <http://www.rfc-editor.org/info/rfc7341>.\n   [RFC7597]
      \ Troan, O., Ed., Dec, W., Li, X., Bao, C., Matsushima, S.,\n              Murakami,
      T., and T. Taylor, Ed., \"Mapping of Address and\n              Port with Encapsulation
      (MAP-E)\", RFC 7597,\n              DOI 10.17487/RFC7597, July 2015,\n              <http://www.rfc-editor.org/info/rfc7597>.\n
      \  [Stateless-DS-Lite]\n              Penno, R., Durand, A., Clauberg, A., and
      L. Hoffmann,\n              \"Stateless DS-Lite\", Work in Progress,\n              draft-penno-softwire-sdnat-02,
      March 2012.\n   [TR069]    Broadband Forum TR-069, \"CPE WAN Management Protocol\",\n
      \             Amendment 5, CWMP Version: 1.4, November 2013,\n              <https://www.broadband-forum.org>.\n
      \  [Unified-v4-in-v6]\n              Boucadair, M., Farrer, I., Perreault, S.,
      Ed., and S.\n              Sivakumar, Ed., \"Unified IPv4-in-IPv6 Softwire CPE\",
      Work\n              in Progress, draft-ietf-softwire-unified-cpe-01, May 2013.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Ole Troan, Ralph Droms,
    and Suresh\n   Krishnan for their comments and feedback.\n   This document is
    a merge of three documents: [B4-Trans-DSLite],\n   [DSLite-LW-Ext], and [Stateless-DS-Lite].\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following individuals contributed to this effort:\n   Jianping
    Wu\n   Tsinghua University\n   Department of Computer Science, Tsinghua University\n
    \  Beijing  100084\n   China\n   Phone: +86-10-62785983\n   Email: jianping@cernet.edu.cn\n
    \  Peng Wu\n   Tsinghua University\n   Department of Computer Science, Tsinghua
    University\n   Beijing  100084\n   China\n   Phone: +86-10-62785822\n   Email:
    pengwu.thu@gmail.com\n   Qi Sun\n   Tsinghua University\n   Beijing  100084\n
    \  China\n   Phone: +86-10-62785822\n   Email: sunqi@csnet1.cs.tsinghua.edu.cn\n
    \  Chongfeng Xie\n   China Telecom\n   Room 708, No. 118, Xizhimennei Street\n
    \  Beijing  100035\n   China\n   Phone: +86-10-58552116\n   Email: xiechf@ctbri.com.cn\n
    \  Xiaohong Deng\n   The University of New South Wales\n   Sydney  NSW 2052\n
    \  Australia\n   Email: dxhbupt@gmail.com\n   Cathy Zhou\n   Huawei Technologies\n
    \  Section B, Huawei Industrial Base, Bantian Longgang\n   Shenzhen  518129\n
    \  China\n   Email: cathyzhou@huawei.com\n   Alain Durand\n   Juniper Networks\n
    \  1194 North Mathilda Avenue\n   Sunnyvale, CA  94089-1206\n   United States\n
    \  Email: adurand@juniper.net\n   Reinaldo Penno\n   Cisco Systems, Inc.\n   170
    West Tasman Drive\n   San Jose, CA  95134\n   United States\n   Email: repenno@cisco.com\n
    \  Axel Clauberg\n   Deutsche Telekom AG\n   CTO-ATI\n   Landgrabenweg 151\n   Bonn
    \ 53227\n   Germany\n   Email: axel.clauberg@telekom.de\n   Lionel Hoffmann\n
    \  Bouygues Telecom\n   TECHNOPOLE\n   13/15 Avenue du Marechal Juin\n   Meudon
    \ 92360\n   France\n   Email: lhoffman@bouyguestelecom.fr\n   Maoke Chen (a.k.a.
    Noriyuki Arai)\n   BBIX, Inc.\n   Tokyo Shiodome Building, Higashi-Shimbashi 1-9-1\n
    \  Minato-ku, Tokyo  105-7310\n   Japan\n   Email: maoke@bbix.net\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Yong Cui\n   Tsinghua University\n   Beijing  100084\n
    \  China\n   Phone: +86-10-62603059\n   Email: yong@csnet1.cs.tsinghua.edu.cn\n
    \  Qiong Sun\n   China Telecom\n   Room 708, No. 118, Xizhimennei Street\n   Beijing
    \ 100035\n   China\n   Phone: +86-10-58552936\n   Email: sunqiong@ctbri.com.cn\n
    \  Mohamed Boucadair\n   France Telecom\n   Rennes  35000\n   France\n   Email:
    mohamed.boucadair@orange.com\n   Tina Tsou\n   Huawei Technologies\n   2330 Central
    Expressway\n   Santa Clara, CA  95050\n   United States\n   Phone: +1-408-330-4424\n
    \  Email: tena@huawei.com\n   Yiu L. Lee\n   Comcast\n   One Comcast Center\n
    \  Philadelphia, PA  19103\n   United States\n   Email: yiu_lee@cable.comcast.com\n
    \  Ian Farrer\n   Deutsche Telekom AG\n   CTO-ATI, Landgrabenweg 151\n   Bonn,
    NRW  53227\n   Germany\n   Email: ian.farrer@telekom.de\n"
  title: Authors' Addresses
