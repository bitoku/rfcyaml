- contents:
  - '                    IPv6 Host-to-Router Load Sharing

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The original IPv6 conceptual sending algorithm does not do load\n
    \  sharing among equivalent IPv6 routers, and suggests schemes that can\n   be
    problematic in practice.  This document updates the conceptual\n   sending algorithm
    in RFC 2461 so that traffic to different\n   destinations can be distributed among
    routers in an efficient\n   fashion.\n"
  title: Abstract
- contents:
  - "1.  Introduction\n   In the conceptual sending algorithm in [ND] and in the optional\n
    \  extension in [ROUTERSEL], a next hop is chosen when no destination\n   cache
    entry exists for an off-link destination or when communication\n   through an
    existing router is failing.  Normally, a router is\n   selected the first time
    traffic is sent to a specific destination IP\n   address.  Subsequent traffic
    to the same destination address\n   continues to use the same router unless there
    is some reason to\n   change to a different router (e.g., a redirect message is
    received,\n   or the router is found to be unreachable).\n   In addition, as described
    in [ADDRSEL], the choice of next hop may\n   also affect the choice of source
    address, and hence indirectly (and\n   to a lesser extent) may affect the router
    used for inbound traffic as\n   well.\n   In both the base sending algorithm and
    in the optional extension,\n   sometimes a host has a choice of multiple equivalent
    routers for a\n   destination.  That is, all other factors are equal and a host
    must\n   break a tie via some implementation-specific means.\n   It is often desirable
    when there is more than one equivalent router\n   that hosts distribute their
    outgoing traffic among these routers.\n   This shares the load among multiple
    routers and provides better\n   performance for the host's traffic.\n   On the
    other hand, load sharing can be undesirable in situations\n   where sufficient
    capacity is available through a single router and\n   the traffic patterns could
    be more predictable by using a single\n   router; in particular, this helps to
    diagnose connectivity problems\n   beyond the first-hop routers.\n   [ND] does
    not require any particular behavior in this respect.  It\n   specifies that an
    implementation may always choose the same router\n   (e.g., the first in the list)
    or may cycle through the routers in a\n   round-robin manner.  Both of these suggestions
    are problematic.\n   Clearly, always choosing the same router does not provide
    load\n   sharing.  Some problems with load sharing using naive tie-breaking\n
    \  techniques such as round-robin and random are discussed in\n   [MULTIPATH].
    \ While the destination cache provides some stability\n   since the determination
    is not per packet, cache evictions or\n   timeouts can still result in unstable
    or unpredictable paths over\n   time, lowering the performance and making it harder
    to diagnose\n   problems.  Round-robin selection may also result in synchronization\n
    \  issues among hosts, where in the worst case the load is concentrated\n   on
    one router at a time.\n   In the remainder of this document, the key words \"MUST\",
    \"MUST NOT\",\n   \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD
    NOT\",\n   \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as\n
    \  described in [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  Load Sharing\n   When a host chooses from multiple equivalent routers, it
    SHOULD\n   support choosing using some method that distributes load for\n   different
    destinations among the equivalent routers rather than\n   always choosing the
    same router (e.g., the first in the list).  This\n   memo takes no stance on whether
    the support for load sharing should\n   be turned on or off by default.  Furthermore,
    a host that does\n   attempt to distribute load among routers SHOULD use a hash-based\n
    \  scheme that takes (at least) the destination IP address into account,\n   such
    as those described in [MULTIPATH], for choosing a router to use.\n   Note that
    traffic for a given destination address will use the same\n   router as long as
    the Destination Cache Entry for the destination\n   address is not deleted.  With
    a hash-based scheme, traffic for a\n   given destination address will use the
    same router over time even if\n   the Destination Cache Entry is deleted, as long
    as the list of\n   equivalent routers remains the same.\n"
  title: 2.  Load Sharing
- contents:
  - "3.  Security Considerations\n   As mentioned in [MULTIPATH], when next-hop selection
    is predictable,\n   an application can synthesize traffic that will all hash the
    same,\n   making it possible to launch a denial-of-service attack against the\n
    \  load-sharing algorithm, and overload a particular router.  This can\n   even
    be done by a remote application that can cause a host to respond\n   to a given
    destination address.  A special case of this is when the\n   same (single) next-hop
    is always selected, such as in the algorithm\n   allowed by [ND].  Introducing
    hashing can make such an attack more\n   difficult; the more unpredictable the
    hash is, the harder it becomes\n   to conduct a denial-of-service attack against
    any single router.\n   However, a malicious local application can bypass the algorithm
    for\n   its own traffic by using mechanisms such as raw sockets, and remote\n
    \  attackers can still overload the routers directly.  Hence, the\n   mechanisms
    discussed herein have no significant incremental impact on\n   Internet infrastructure
    security.\n"
  title: 3.  Security Considerations
- contents:
  - "4.  Acknowledgements\n   The authors of this document would like to thank Erik
    Nordmark, Brian\n   Haberman, Steve Deering, Aron Silverton, Christian Huitema,
    and Pekka\n   Savola.\n"
  title: 4.  Acknowledgements
- contents:
  - "5.  Normative References\n   [ND]         Narten, T., Nordmark, E., and W. Simpson,
    \"Neighbor\n                Discovery for IP Version 6 (IPv6)\", RFC 2461, December\n
    \               1998.\n   [RFC2119]    Bradner, S., \"Key words for use in RFCs
    to Indicate\n                Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [ADDRSEL]    Draves, R., \"Default Address Selection for Internet\n                Protocol
    version 6 (IPv6)\", RFC 3484, February 2003.\n   [ROUTERSEL]  Draves, R. and D.
    Thaler, \"Default Router Preferences\n                and More-Specific Routes\",
    RFC 4191, November 2005.\n"
  title: 5.  Normative References
- contents:
  - "6.  Informative References\n   [MULTIPATH]  Thaler, D. and C. Hopps, \"Multipath
    Issues in Unicast\n                and Multicast Next-Hop Selection\", RFC 2991,
    November\n                2000.\n"
  title: 6.  Informative References
- contents:
  - "Authors' Addresses\n   Robert Hinden\n   Nokia\n   313 Fairchild Drive\n   Mountain
    View, CA  94043\n   Phone: +1 650 625-2004\n   EMail: bob.hinden@nokia.com\n   Dave
    Thaler\n   Microsoft Corporation\n   One Microsoft Way\n   Redmond, WA  98052\n
    \  Phone: +1 425 703 8835\n   EMail: dthaler@microsoft.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
