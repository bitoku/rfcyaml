Abstract The Presence Information Data Format (PIDF) defines a basic format for representing presence information for a presentity.
This format defines a textual note, an indication of availability (open or closed) and a Uniform Resource Identifier (URI) for communication.
The Rich Presence Information Data format (RPID) described here is an extension that adds optional elements to the Presence Information Data Format (PIDF).
These extensions provide additional information about the presentity and its contacts.
The information is designed so that much of it can be derived automatically, e.g., from calendar files or user activity.
This extension includes information about what the person is doing, a grouping identifier for a tuple, when a service or device was last used, the type of place a person is in, what media communications might remain private, the relationship of a service tuple to another presentity, the person's mood, the time zone it is located in, the type of service it offers, an icon reflecting the presentity's status, and the overall role of the presentity.
These extensions include presence information for persons, services (tuples), and devices.
The Presence Information Data Format (PIDF) definition [8] describes a basic presence information data format, encoded as an Extensible Markup Language (XML)
(SCHEMA 2 [11]), for exchanging presence information in systems compliant with the common model for presence and instant messaging [5].
It consists of a <presence> root element, zero or more <
tuple> elements carrying presence information including a Uniform Resource Identifier (URI) for communication, zero or more <note> elements, and zero or more extension elements from other name spaces.
Each tuple defines a basic status of either "open" or "closed".
However, it is frequently useful to convey additional information about a user that needs to be interpreted by an automata, and is therefore not appropriate to be placed in the <note> element of the PIDF document, which is typically intended for the human observer.
Therefore, this specification defines extensions to the PIDF document format for conveying richer presence information.
Generally, the extensions have been chosen to provide features common in existing presence systems at the time of writing, in addition to elements that could readily be derived automatically from existing sources of presence, such as calendaring systems or communication devices, or sources describing the user's current physical environment.
The presence data model [16] defines the concepts of service, device, and person as the data elements that are used to model the state of a presentity.
(The term "presentity" is defined in RFC 2778 [5] and abbreviates presence entity.
A presentity provides presence information to a presence service.)
Services are encoded using the <tuple> element, defined in PIDF; devices and persons are represented by the <device> and <person> XML elements, respectively, defined in the data model [16].
However, neither PIDF nor the data model defines presence attributes beyond the <basic> status element.
This specification defines additional presence attributes to describe person, service, and device data elements, summarized as "Rich Presence Information Data format for presence" (RPID).
These attributes are specified by XML elements that extend the PIDF <tuple> element and the <device> and <person> elements defined in the data model.
This extension has two main goals: 1.
Provide rich presence information that is at least as powerful as common commercial presence systems.
Such feature parity simplifies transition to systems complying with the Common Profile for Instant Messaging (CPIM)
[14], both in terms of user acceptance and protocol conversion.
Maintain backward compatibility with PIDF, so that PIDF only watchers and gateways can continue to function properly, naturally without access to the functionality described here.
We make no assumptions as to how the information in the RPID elements is generated.
Experience has shown that users are not always diligent about updating their presence status.
Thus, we want to make it as easy as possible to derive RPID information from other information sources, such as personal calendars, the status of communication devices such as telephones, typing activity, and physical presence detectors as commonly found in energy management systems.
Many of the elements correspond to data commonly found in personal calendars.
Thus, we attempted to align some of the extensions with the usage found in calendar formats such as iCal [13].
The information in a presence document can be generated by a single entity or can be composed from information published by multiple entities.
Note that PIDF documents and this extension can be used in two different contexts, namely, by the presentity to publish its presence status and by the presence server to notify some set of watchers.
The presence server MAY compose, translate, or filter the published presence state before delivering customized presence information to the watcher.
For example, it may merge presence information from multiple presence user agents, remove whole elements, translate values in elements, or remove information from elements.
Mechanisms that filter calls and other communications to the presentity can subscribe to this presence information just like a regular watcher and in turn generate automated rules, such as scripts [15], that govern the actual communications behavior of the presentity.
Details are described in the data model document.
Since RPID is a PIDF XML document, it also uses the content type application/pidf xml. 2.
This memo makes use of the vocabulary defined in the IMPP model document [5].
Terms such as CLOSED, INSTANT MESSAGE, OPEN, PRESENCE SERVICE, PRESENTITY, WATCHER, and WATCHER USER AGENT in the memo are used in the same meaning as defined therein.
The key words MUST, MUST NOT, REQUIRED, SHOULD, SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be interpreted as described in BCP 14, RFC 2119 [1].
Some of the RPID elements describe services, some devices, and some the person.
As such, they either extend <tuple>, <device>, or <person>, respectively.
Below, we summarize the RPID elements.
The next sections will then provide more detailed descriptions.
The <activities> status element enumerates what the person is doing.
An identifier that groups similar person elements, devices, or services.
A device identifier in a tuple references a <device> element, indicating that this device contributes to the service described by the tuple.
The <mood> status element indicates the mood of the person.
place is:  The <place is> status element reports on the properties of the place the presentity is currently at, such as the levels of light and noise.
> status elements reports the type of place the person is located in, such as 'classroom' or 'home'.
> element distinguishes whether the communication service is likely to be observable by other parties.
When a service is likely to reach a user besides the person associated with the presentity, the relationship indicates how that user relates to the person.
The <service class> element describes whether the service is delivered electronically, is a postal or delivery service, or describes in person communications.
> element characterizes the overall current role of the presentity.
> element depicts the current status of the person or service.
The <time offset> status element quantifies the time zone the person is in, expressed as the number of minutes away from UTC.
> element records the user input or usage state of the service or device, based on human user input.
column in Table 1 indicates by an 'x' that the element can take 'from' and 'until' attributes.
An 'x' in the 'Note?'
column marks elements that can include a <note> element.
The usage of these elements within the <person>, <tuple>, and <device> elements is shown in columns 4 through 6.
An 'x' in the respective column indicates that the RPID element MAY appear as a child of that element.
In general, it is unlikely that a presentity will publish or announce all of these elements at the same time.
Rather, these elements were chosen to give the presentity maximum flexibility in deriving this information from existing sources, such as calendaring tools, device activity sensors, or location trackers, as well as to manually configure this information.
In either case, there is no guarantee that the information is accurate, as users forget to update calendars or may not always adjust the presence information manually.
The namespace URIs for these elements defined by this specification are URNs [2], using the namespace identifier 'ietf' defined by [4] and extended by [6]:
rpid The elements marked with the value '
x' in column 2 of Table 1 MAY be qualified with the 'from' and 'until' attributes to describe the absolute time when the element assumed this value and the absolute time until which this element is expected to be valid.
Note that there can be multiple elements of the same type, whose time ranges SHOULD NOT overlap.
Elements MAY contain an 'id' attribute that allows to uniquely reference the element.
Enumerations can be extended by elements from other namespaces, as described in Section 6.
The <activities>, <mood>, and <place type> elements can also take <other> elements containing text, for custom free text values specific to an application.
All elements described in this document are optional within PIDF documents.
> element describes what the person is currently doing, expressed as an enumeration of activity describing elements.
A person can be engaged in multiple activities at the same time, e.g., traveling and having a meal.
> element can be quite helpful to the watcher in judging how appropriate a communication attempt is and which means of communications is most likely to succeed and not annoy the person.
The activity indications correspond roughly to the category field in calendar entries, such as Section 4.8.1.2 of RFC 2445 [13].
An activities enumeration consists of one or more elements using elements drawn from the list below, a string enclosed in the <other> element, or IANA registered values from other namespaces (Section 7).
If a person publishes an activity of "permanent absence", it is likely that all services will report a status of CLOSED.
In general, services MAY advertise either service status for any activity value.
Activities such as <appointment>, <breakfast>, <dinner>, <holiday>, <lunch>, <meal>, <meeting>, <performance>, <travel>, or <vacation> can often be derived from calendar information.
The person has a calendar appointment, without specifying exactly of what type.
This activity is indicated if more detailed information is not available or the person chooses not to reveal more information.
away:  The person is physically away from all interactive communication devices.
This activity element was included since it can often be derived automatically from security systems, energy management systems, or entry badge systems.
Although this activity would typically be associated with a status of CLOSED across all services, a person may declare himself or herself away to discourage communication, but indicate that he or she still can be reached if needed.
However, communication attempts might reach an answering service, for example.
The person is eating the first meal of the day, usually eaten in the morning.
The person is busy, without further details.
Although this activity would typically be associated with a status of CLOSED across all services, a person may declare himself or herself busy to discourage communication, but indicate that he or she still can be reached if needed.
The person is having his or her main meal of the day, eaten in the evening or at midday.
This is a scheduled national or local holiday.
in transit:  The person is riding in a vehicle, such as a car, but not steering.
> element provides more specific information about the type of conveyance the person is using.
looking for work:  The presentity is looking for (paid) work.
The person is eating his or her midday meal.
The person is scheduled for a meal, without specifying whether it is breakfast, lunch, or dinner, or some other meal.
The person is in an assembly or gathering of people, as for a business, social, or religious purpose.
A meeting is a sub  class of an appointment.
on the phone:  The person is talking on the telephone.
This activity is included since it can often be derived automatically.
The person is engaged in an activity with no defined representation as an <activities> element.
The enclosed string describes the activity in plain text.
A performance is a sub class of an appointment and includes musical, theatrical, and cinematic performances as well as lectures.
It is distinguished from a meeting by the fact that the person may either be lecturing or be in the audience, with a potentially large number of other people, making interruptions particularly noticeable.
The person will not return for the foreseeable future, e.g., because it is no longer working for the company.
This activity is associated with a status of CLOSED across all services.
The person is occupying himself or herself in amusement, sport, or other recreation.
The person is giving a presentation, lecture, or participating in a formal round table discussion.
The person is visiting stores in search of goods or services.
This activity category can often be generated automatically from a calendar, local time information, or biometric data.
The person is observing an event, such as a sports event.
The person is controlling a vehicle, watercraft, or plane.
The person is on a business or personal trip, but not necessarily in transit.
The person is watching television.
The activity of the person is unknown.
This element is generally not used together with other activities.
A period of time devoted to pleasure, rest, or relaxation.
The presentity is engaged in, typically paid, labor, as part of a profession or job.
The presentity is participating in religious rites.
The <activities> element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1.
The <class> element describes the class of the service, device, or person.
Multiple elements can have the same class name within a presence document, but each person, service, or device can only have one class label.
The naming of classes is left to the presentity.
The presentity can use this information to group similar services, devices, or person elements or to convey information that the presence agent can use for filtering or authorization.
This information is not generally presented to the watcher user interface.
The <class> element MUST NOT be qualified with the 'from' and 'until' attributes as described in Section 3.1.
The <deviceID> element in the <tuple> element references the device that provides a particular service.
The element is defined syntactically in the data model [16] schema.
One service can be provided by multiple devices, so that each service tuple may contain zero or more <deviceID> elements.
There is no significance in the order of these elements.
The <deviceID> element MUST NOT be qualified with the 'from' and 'until' attributes as described in Section 3.1.
> element describes the mood of the presentity.
The mood values are enumerated chosen by the presentity.
The user MAY also specify a natural language description of, or reason for, the mood in the <note> child of the <mood> element, which is OPTIONAL.
(This definition follows the Jabber Extension JEP 107.)
It is RECOMMENDED that an implementation support the mood values proposed in Jabber Extension JEP 0107, which in turn are a superset of the Wireless Village [18] mood values and the values enumerated in the Affective Knowledge Representation that has been defined by Lisetti [17]: A mood enumeration consists of one or more elements using elements drawn from the list below, a string enclosed in the <other> element, or IANA registered values from other namespaces (Section 7).
The <mood> element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1.
impressed  in awe  in love
other  playful  proud  relieved  remorseful  restless  sad  sarcastic  serious
stressed  surprised  thirsty  unknown  worried Example:
<mood> <note>I'm ready for the bar
The <place is> element describes properties of the place the person is currently at.
This offers the watcher an indication of what kind of communication is likely to be successful.
Each major media type has its own set of attributes.
Omitting the element indicates that the property is unknown.
For audio, we define the following attributes:
The person is in a place with a level of background noise that makes audio communications difficult.
The environmental conditions are suitable for audio communications.
The person is in a place such as a library, restaurant, place of worship, or theater that discourages noise, conversation, and other distractions.
The place attributes for audio are unknown.
For video, we define the following attributes:
The person is in a bright place, sufficient for good rendering on video.
The environmental conditions are suitable for video.
The person is in a dark place, and thus the camera may not be able to capture a good image.
The place attributes for video are unknown.
For text (real time text and instant messaging), we define uncomfortable:  Typing or other text entry is uncomfortable.
Typing or other text entry is inappropriate, e.g., since the user is in a vehicle or house of worship.
The environmental conditions are suitable for text based communications.
The place attributes for text are unknown.
This list can be augmented by free text values in a note or additional IANA registered values (Section 7).
The <place is> element contains other elements, e.g., <place is> <audio>
The <place is> element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1. 3.7.
> element describes the type of place the person is currently at.
This offers the watcher an indication of what kind of communication is likely to be appropriate.
The initial set of values is contained in RFC 4589 [12].
This list can be augmented by free text values or additional IANA  registered values as described in RFC 4589.
The <place type> element is a choice of elements, as in <place type> <pt:
element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1. 3.8.
> element indicates which types of communication third parties in the vicinity of the presentity are unlikely to be able to intercept accidentally or intentionally.
This does not in any way describe the privacy properties of the electronic communication channel, e.g., properties of the encryption algorithm or the network protocol used.
Inappropriate individuals are not likely to overhear audio communications.
Inappropriate individuals are not likely to see text communications.
Inappropriate individuals are not likely to see video communications.
The <privacy> element can be used by logic executing on the watcher or by a composer to filter, sort and label tuples.
For example, a composer may have rules that limit the publication of tuples labeled "private" to a select subset of the watchers.
The <privacy> element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1.
> element extends <tuple> and designates the type of relationship an alternate contact has with the presentity.
This element is provided only if the tuple refers to somebody other than the presentity.
Relationship values include "family", "friend", "associate" (e.g., for a colleague), "assistant", "supervisor", "self", and "unknown".
If a relationship is indicated, the URI in the <contact> element refers to the entity, such as the assistant, that has a relationship to the presentity, not the presentity itself.
Like tuples without a <relationship
element for tuples labeled with a relationship can contain either a communication URI such as "im", "sip", "sips", "h323", "tel", or "mailto", or a presence URI, such as "pres" or "sip".
element extends <tuple> and designates the type of service offered.
Delivery of information by electronic means, i.e., without delivering physical objects.
Examples include telephone, fax, email, instant messaging, and SMS.
Delivery by the postal service, e.g., as a letter, parcel, or postcard.
Delivery could be to a post office box or central mailroom rather than the presentity's office location, for example.
Delivery by messenger, overnight delivery, or courier.
Courier delivered messages are usually delivered to a receptionist rather than, say, a mailroom or receiving department.
Delivery by freight carrier, typically of larger objects that are not sent by postal mail or courier.
The recipient is often the shipping department or a loading dock.
in person:  Describes the coordinates for visits in person, as by a visitor, i.e., usually somebody's office or residence.
The type of service is unknown.
Electronic service is implied if omitted.
The service types 'postal', 'courier', 'freight', and 'in person' MUST NOT be used unless the contact URI is empty.
Additional data elements defined elsewhere describe the physical service delivery address for the in  person, postal, or delivery services.
Such addresses might be specified in geospatial coordinates, civic addresses, or some specialized address format, e.g., for interstellar addresses or a company specific delivery system.
Example: <service class><postal/></service class> 3.11.
> element designates the current state and role that the person plays.
For example, it might describe whether the person is in a work mode, at home, or participating in activities related to some other organization such as the IETF or a church.
This document does not define names for these spheres except for two common ones, "work" and "home", as well as "unknown".
Spheres allow the person to easily turn on or off certain rules that depend on what groups of people should be made aware of the person's status.
For example, if the person is a Boy Scout leader, he might set the sphere to "scouting" and then have a rule set that allows other scout masters in his troop to see his presence status.
As soon as he switches his status to "work", "home", or some other sphere, the fellow scouts would lose access.
> element MAY be qualified with the 'from' and 'until' attributes as described in Section 3.1.
element includes a URI pointing to an image
(icon) representing the current status of the person or service.
The watcher MAY use this information to represent the status in a graphical user interface.
Presentities SHOULD provide images of sizes and aspect ratios that are appropriate for rendering as an icon.
Support for JPEG, PNG, and GIF formats is RECOMMENDED.
Watchers resolving the URI MUST validate whether the local copy of the icon is current when receiving a notification, using the standard cache control mechanism in the URI identified retrieval protocol.
The <time offset> element describes the number of minutes of offset from UTC at the person's current location.
A positive number indicates that the local time of day is ahead (i.e., east of)
Universal Time, while a negative number indicates that the local time of day is behind (i.e., west of)
Transitions into and out of daylight savings time may temporarily cause a difference between the true offset from UTC and the time offset element.
An optional attribute, description, can be used to describe the offset, e.g., by labeling the time zone.
This description is meant for human consumption.
Publishers on mobile devices SHOULD NOT publish this information unless they know the time offset information to reflect the current location.
(For example, many laptop users do not update their time zone when traveling.)
Publishers SHOULD update the information whenever they discover that their UTC offset has changed.
Example: <time offset description "America/New York"
> element records the user input or usage state of the service or device, based on human user input, e.g., keyboard, pointing device, or voice.
If contained in a <person> element, it summarizes any user input activity across all services and devices operated by the presentity.
The mechanism for such aggregation is beyond the scope of this document, but generally reflects the most recent user input across all devices and services.
The element can assume one of two values, namely, 'active' or 'idle', with an optional 'last input' attribute that records when the last user input was received.
An optional 'idle threshold' element records how long the presentity will wait before reporting the service or device to be idle, measured in seconds.
(A two state model was chosen since it would otherwise be necessary to send repeated last input updates during continuous activity.)
A service that wants to indicate user input activity sends a <user  input
> 'active' indication when the user has provided user input within a configurable interval of time, the idle threshold.
If the user ceases to provide input and the idle threshold has elapsed, the tuple is marked with a <user input
> 'idle' indication instead, optionally including the time of last activity in the 'last input' attribute.
An example is below: <user input idle threshold "600" last input "2004 10
Depending on device or service capabilities, user input may be detected only for a particular application, i.e., when the application has user focus or when a user has sent a message or placed a call, or can be based on user input across all applications running on one end system.
> element may be used by a watcher, typically in combination with other data, to estimate how likely a user is to answer when contacting the service.
A tuple that has not been used in a while may still be OPEN, but a watcher may choose to first contact a URI in a tuple that is both OPEN and has been used more recently.
> attribute can be omitted if the presentity wants to indicate that the device has not been used for a while, but does not want to reveal the precise duration, as in the following: <user input
Configuration MUST include the option to omit the 'last input' attribute.
The example below describes the presentity 'pres:someone@example.com', which has a SIP contact, 'sip:someone@example.com', representing a service.
It also has a device contact, as an email box.
The presentity is in a meeting, in a public office setting.
The 'until' information indicates that he will be there until 5:30 pm local time.
The presentity also has an assistant, sip:secretary@example.com, who happens to be available for communications.
xml version "1.0" encoding "UTF 8"?
en">Don't Disturb Please!</note> <note xml:lang "fr">Ne derangez pas,
<tuple id "eg92n8"> <status> <basic
<note>I'll be in Tokyo next
> <rpid:user input idle threshold
"600" last input "2004 10
<rpid:activities from "2005 05 30T12:00:00 05:00" until "2005 05 30T17:00:00 05:00"> <rpid:note>Far
> <rpid:other>brooding</rpid:other> </rpid:mood> <rpid:place is> <rpid:
The RPID schema is shown below.
Due to limitations in composing schemas, not all XML documents that validate against the schema below are semantically valid RPID documents.
In particular, the schema allows each element to appear anyhere in PIDF or data model elements; Table 1 restricts where these elements can appear for semantically valid RPID documents.
Elements that do not have from/until parameters MUST NOT appear more than once in each <person>, <tuple>, or <device
xml version "1.0" encoding "UTF 8"?
pidf:data model" xmlns:xs "http://www.w3.org/2001/XMLSchema" elementFormDefault "qualified
" attributeFormDefault "unqualified"> <xs:simpleType name
"activeIdle"> <xs:restriction base "xs:string"> <xs:enumeration value "active"/>
Describes what the person is currently doing, expressed as an enumeration of activity describing elements.
A person can be engaged in multiple activities at the same time, e.g., traveling and having a meal.
<xs:element name "note" type "Note t" minOccurs "0
element name "unknown" type "empty" minOccurs "
<xs:element name "appointment" type "empty" /
element name "busy" type "empty" /
element name "in transit" type "empty" /
element name "looking for work" type "empty" /
> <xs:element name "meal" type "empty" /
element name "permanent absence" type "empty" /
element name "presentation" type "empty" /
element name "sleeping" type "empty" /
> <xs:element name "spectator" type "empty" /
<xs:element name "steering" type "empty" /
<xs:element name "travel" type "empty" /
element name "tv" type "empty" /
<xs:element name "vacation" type "empty" /
<xs:element name "working" type "empty" /
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
element name "class" type "xs:token"> <xs:
Describes the class of the service, device or person.
Describes the mood of the presentity.
<xs:element name "note" type "Note t" minOccurs "0
element name "unknown" type "empty"/>
element name "amazed" type "empty"/>
element name "anxious" type "empty" /
element name "brave" type "empty" /
element name "calm" type "empty" /
<xs:element name "cold" type "empty" /
<xs:element name "confused" type "empty" /
element name "curious" type "empty" /
<xs:element name "depressed" type "empty" /
> <xs:element name "disappointed" type "empty" /
<xs:element name "disgusted" type "empty" /
element name "embarrassed" type "empty" /
element name "flirtatious" type "empty" /
element name "grumpy" type "empty" /
<xs:element name "guilty" type "empty" /
<xs:element name "happy" type "empty" /
<xs:element name "hot" type "empty" /
<xs:element name "humbled" type "empty" /
<xs:element name "humiliated" type "empty" /
element name "hungry" type "empty" /
<xs:element name "hurt" type "empty" /
element name "in awe" type "empty" /
element name "in love" type "empty" /
<xs:element name "indignant" type "empty" /
element name "interested" type "empty" /
<xs:element name "lonely" type "empty" /
<xs:element name "mean" type "empty" /
element name "moody" type "empty" /
element name "nervous" type "empty" /
<xs:element name "neutral" type "empty" /
element name "offended" type "empty" /
element name "playful" type "empty" /
<xs:element name "proud" type "empty" /
<xs:element name "relieved" type "empty" /
element name "remorseful" type "empty" /
<xs:element name "restless" type "empty" /
element name "sad" type "empty" /
<xs:element name "sarcastic" type "empty" /
<xs:element name "serious" type "empty" /
<xs:element name "sick" type "empty" /
<xs:element name "sleepy" type "empty" /
element name "stressed" type "empty" /
element name "other" type "Note t" /
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
element name "place is"> <xs:
<xs:element name "note" type "Note t" minOccurs "0
element name "audio" minOccurs "0"
<xs:element name "noisy" type "empty" /
element name "ok" type "empty" /
<xs:element name "quiet" type "empty" /
element name "unknown" type "empty" /
complexType> </xs:element> <xs:element name "video" minOccurs "0"
element name "dark" type "empty" /
element name "unknown" type "empty" /
complexType> </xs:element> <xs:element name "text" minOccurs "0"
element name "ok" type "empty" /
element name "unknown" type "empty" /
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
Describes the type of place the person is currently at.
<xs:element name "note" type "Note t" minOccurs "0
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
which type of communication third parties in the vicinity of the presentity are unlikely to be able to intercept accidentally or intentionally.
<xs:element name "note" type "Note t" minOccurs "0
element name "unknown" type "empty"/>
element name "audio" type "empty" minOccurs "
:element name "text" type "empty" minOccurs "0"/
:element name "video" type "empty" minOccurs "0"/
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
element name "relationship"> <xs:annotation> <xs:documentation> Designates the type of relationship an alternate contact has with the presentity.
<xs:element name "note" type "Note t" minOccurs "0
element name "assistant" type "empty" /
<xs:element name "associate" type "empty" /
element name "other" type "Note t" minOccurs "0" /
element name "self" type "empty" /
complexType> </xs:element> <xs:element name "service class">
Designates the type of service offered.
<xs:element name "note" type "Note t" minOccurs "0
<xs:element name "courier" type "empty" /
element name "electronic" type "empty" /
<xs:element name "freight" type "empty" /
element name "in person" type "empty" /
<xs:element name "postal" type "empty" /
element name "unknown" type "empty" /
complexType> </xs:element> <xs:element name "sphere">
Designates the current state and role that the person plays.
complexType> <xs:choice minOccurs "0"> <xs:
element name "home" type "empty" /
element name "work" type "empty" /
element name "unknown" type "empty" /
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
> </xs:element> <xs:element name "status icon">
A URI pointing to an image
(icon) representing the current status of the person or service.
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
complexType> </xs:element> <xs:element name "time offset">
Describes the number of minutes of offset from UTC at the user's current location.
<xs:attribute name "description" type "xs:
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
complexType> </xs:element> <xs:element name "user input">
Records the user input or usage state of the service or device.
attribute name "idle threshold" type "
<xs:attribute name "last input" type "xs:
attribute name "id" type "xs:ID"/
anyAttribute namespace "##any" processContents "lax"/
Any developer can introduce their own element names, avoiding conflict by choosing an appropriate namespace URI.
To add new standardized elements to the enumerations <activities>, <mood>, <privacy>, <relationship> and <service class>, the extension process described in PIDF [9] is followed, i.e., such extensions would use namespace designators such as urn:ietf:params:xml:ns:
pidf:ext, where 'ext' is the name of the extension.
Any new values for the <place  type
> element are assigned according to [12] and are given a namespace designator at their time of registration.
To avoid the unnecessary proliferation of XML namespaces containing a single element, groups of element registrations for each of these enumerations, such as <privacy>, SHOULD be bundled into a single namespace rather than assigning a new namespace to each new element.
URN Sub Namespace Registration for 'urn
This is the XML namespace for XML elements defined by RFC 4480 to describe rich presence information extensions for the status element in the PIDF presence document format in the application/pidf xml content type.
Registrant Contact:  IETF, SIMPLE working group, simple@ietf.org, Henning Schulzrinne, hgs@cs.columbia.edu XML: BEGIN <?
" "http://www.w3.org/TR/xhtml basic/xhtml basic10.dtd"> <html xmlns "http://www.w3.org/1999/xhtml <head> <meta http equiv "content type" content "text/
Rich Presence Extensions to the Presence Information Data Format (PIDF)</title> </head
> <body> <h1>Namespace for rich presence extension</h1> <h2
Schema Registration for Schema 'urn:ietf:params:xml:ns:
See Section 5 Note that this document does not need a new content type.
It inherits the content type from [8], namely, application/pidf xml.
Internationalization Considerations RPID contains mostly tokens that are meant for consumption by programs, not directly by humans.
Programs are expected to translate those tokens into language appropriate text strings according to the preferences of the watcher.
Some elements may contain <note> and <other> elements that can contain free text.
These elements SHOULD be labeled with the 'xml:
lang' attribute to indicate their language and script.
The specification allows multiple occurrences of these elements so that the presentity can convey <note> and <other> elements in multiple scripts and languages.
If no 'xml:lang' attribute is provided, the default value is "i default" [3].
Since RPID is represented in XML, it provides native support for encoding information using the Unicode character set and its more compact representations including UTF 8.
Conformant XML processors recognize both UTF 8 and UTF 16.
Though XML includes provisions to identify and use other character encodings through use of an "encoding" attribute in an <?
> declaration, use of UTF 8 is RECOMMENDED in environments where parser encoding support incompatibility exists.
A description of time zone considerations can be found in Section 3.13.
The security considerations in [8] apply, as well as [7].
Compared to PIDF, this presence document format reveals additional information about presentities that can be highly sensitive.
Beyond traditional security measures to protect confidentiality and integrity, systems should offer a means to selectively reveal information to particular watchers and to inspect the information that is being published, particularly if it is generated automatically from other sources, such as calendars or sensors.
Like any reference to an external object, the <status icon> may allow the presentity to induce the watcher to retrieve data from a third party (content indirection attack), thus either retrieving harmful content or adding to the server load of the referenced resource.
