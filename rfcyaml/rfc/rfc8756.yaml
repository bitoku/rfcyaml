- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        M. Jenkins
  contents:
  - "Independent Submission                                        M. Jenkins\n  \
    \   Commercial National Security Algorithm (CNSA) Suite Profile of\n         \
    \           Certificate Management over CMS\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a profile of the Certificate Management\
    \ over\n   CMS (CMC) protocol for managing X.509 public key certificates in\n\
    \   applications that use the Commercial National Security Algorithm\n   (CNSA)\
    \ Suite published by the United States Government.\n   The profile applies to\
    \ the capabilities, configuration, and operation\n   of all components of US National\
    \ Security Systems that manage X.509\n   public key certificates over CMS.  It\
    \ is also appropriate for all\n   other US Government systems that process high-value\
    \ information.\n   The profile is made publicly available here for use by developers\
    \ and\n   operators of these and any other system deployments.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8756.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Terminology\n   2.  The Commercial\
    \ National Security Algorithm Suite\n   3.  Requirements and Assumptions\n   4.\
    \  Client Requirements: Generating PKI Requests\n     4.1.  Tagged Certification\
    \ Request\n     4.2.  Certificate Request Message\n   5.  RA Requirements\n  \
    \   5.1.  RA Processing of Requests\n     5.2.  RA-Generated PKI Requests\n  \
    \   5.3.  RA-Generated PKI Responses\n   6.  CA Requirements\n     6.1.  CA Processing\
    \ of PKI Requests\n     6.2.  CA-Generated PKI Responses\n   7.  Client Requirements:\
    \ Processing PKI Responses\n   8.  Shared-Secrets\n   9.  Security Considerations\n\
    \   10. IANA Considerations\n   11. References\n     11.1.  Normative References\n\
    \     11.2.  Informative References\n   Appendix A.  Scenarios\n     A.1.  Initial\
    \ Enrollment\n     A.2.  Rekey\n   Authors' Addresses\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies a profile of the Certificate Management\
    \ over\n   CMS (CMC) protocol to comply with the United States National Security\n\
    \   Agency's Commercial National Security Algorithm (CNSA) Suite [CNSA].\n   The\
    \ profile applies to the capabilities, configuration, and operation\n   of all\
    \ components of US National Security Systems [SP80059].  It is\n   also appropriate\
    \ for all other US Government systems that process\n   high-value information.\
    \  It is made publicly available for use by\n   developers and operators of these\
    \ and any other system deployments.\n   This document does not define any new\
    \ cryptographic algorithm suites;\n   instead, it defines a CNSA-compliant profile\
    \ of CMC.  CMC is defined\n   in [RFC5272], [RFC5273], and [RFC5274] and is updated\
    \ by [RFC6402].\n   This document profiles CMC to manage X.509 public key certificates\
    \ in\n   compliance with the CNSA Suite Certificate and Certificate Revocation\n\
    \   List (CRL) profile [RFC8603].  This document specifically focuses on\n   defining\
    \ CMC interactions for both the initial enrollment and rekey\n   of CNSA Suite\
    \ public key certificates between a client and a\n   Certification Authority (CA).\
    \  One or more Registration Authorities\n   (RAs) may act as intermediaries between\
    \ the client and the CA.  This\n   profile may be further tailored by specific\
    \ communities to meet their\n   needs.  Specific communities will also define\
    \ certificate policies\n   that implementations need to comply with.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n   The terminology in [RFC5272], Section\
    \ 2.1 applies to this profile.\n   The term \"certificate request\" is used to\
    \ refer to a single PKCS #10\n   or Certificate Request Message Format (CRMF)\
    \ structure.  All PKI\n   Requests are Full PKI Requests, and all PKI Responses\
    \ are Full PKI\n   Responses; the respective set of terms should be interpreted\n\
    \   synonymously in this document.\n"
- title: 2.  The Commercial National Security Algorithm Suite
  contents:
  - "2.  The Commercial National Security Algorithm Suite\n   The National Security\
    \ Agency (NSA) profiles commercial cryptographic\n   algorithms and protocols\
    \ as part of its mission to support secure,\n   interoperable communications for\
    \ US Government National Security\n   Systems.  To this end, it publishes guidance\
    \ both to assist with the\n   US Government transition to new algorithms and to\
    \ provide vendors --\n   and the Internet community in general -- with information\
    \ concerning\n   their proper use and configuration within the scope of US Government\n\
    \   National Security Systems.\n   Recently, cryptographic transition plans have\
    \ become overshadowed by\n   the prospect of the development of a cryptographically\
    \ relevant\n   quantum computer.  The NSA has established the Commercial National\n\
    \   Security Algorithm (CNSA) Suite to provide vendors and IT users near-\n  \
    \ term flexibility in meeting their cybersecurity interoperability\n   requirements.\
    \  The purpose behind this flexibility is to avoid having\n   vendors and customers\
    \ make two major transitions in a relatively\n   short timeframe, as we anticipate\
    \ a need to shift to quantum-\n   resistant cryptography in the near future.\n\
    \   The NSA is authoring a set of RFCs, including this one, to provide\n   updated\
    \ guidance concerning the use of certain commonly available\n   commercial algorithms\
    \ in IETF protocols.  These RFCs can be used in\n   conjunction with other RFCs\
    \ and cryptographic guidance (e.g., NIST\n   Special Publications) to properly\
    \ protect Internet traffic and data-\n   at-rest for US Government National Security\
    \ Systems.\n"
- title: 3.  Requirements and Assumptions
  contents:
  - "3.  Requirements and Assumptions\n   Elliptic Curve Digital Signature Algorithm\
    \ (ECDSA) and Elliptic Curve\n   Diffie-Hellman (ECDH) key pairs are on the P-384\
    \ curve.  FIPS 186-4\n   [FIPS186], Appendix B.4 provides useful guidance for\
    \ elliptic curve\n   key pair generation that SHOULD be followed by systems that\
    \ conform\n   to this document.\n   RSA key pairs (public, private) are identified\
    \ by the modulus size\n   expressed in bits; RSA-3072 and RSA-4096 are computed\
    \ using moduli of\n   3072 bits and 4096 bits, respectively.\n   RSA signature\
    \ key pairs used in CNSA Suite-compliant implementations\n   are either RSA-3072\
    \ or RSA-4096.  The RSA exponent e MUST satisfy\n   2^(16) < e < 2^(256) and be\
    \ odd per [FIPS186].\n   It is recognized that, while the vast majority of RSA\
    \ signatures are\n   currently made using the RSASSA-PKCS1-v1_5 algorithm, the\
    \ preferred\n   RSA signature scheme for new applications is RSASSA-PSS.  CNSA\
    \ Suite-\n   compliant X.509 certificates will be issued in accordance with\n\
    \   [RFC8603], and while those certificates must be signed and validated\n   using\
    \ RSASSA-PKCS1-v1_5, the subject's private key can be used to\n   generate signatures\
    \ of either signing scheme.  Where use of RSASSA-\n   PSS is indicated in this\
    \ document, the following parameters apply:\n   *  The hash algorithm MUST be\
    \ id-sha384 as defined in [RFC8017];\n   *  The mask generation function MUST\
    \ use the algorithm identifier\n      mfg1SHA384Identifier as defined in [RFC4055];\n\
    \   *  The salt length MUST be 48 octets; and\n   *  The trailerField MUST have\
    \ value 1.\n   These parameters will not appear in a certificate and MUST be\n\
    \   securely communicated with the signature, as required by Section 2.2\n   of\
    \ [RFC4056].  Application developers are obliged to ensure that the\n   chosen\
    \ signature scheme is appropriate for the application and will\n   be interoperable\
    \ within the intended operating scope of the\n   application.\n   This document\
    \ assumes that the required trust anchors have been\n   securely provisioned to\
    \ the client and, when applicable, to any RAs.\n   All requirements in [RFC5272],\
    \ [RFC5273], [RFC5274], and [RFC6402]\n   apply, except where overridden by this\
    \ profile.\n   This profile was developed with the scenarios described in Appendix\
    \ A\n   in mind.  However, use of this profile is not limited to just those\n\
    \   scenarios.\n   The term \"client\" in this profile typically refers to an\
    \ end-entity.\n   However, it may instead refer to a third party acting on the\
    \ end-\n   entity's behalf.  The client may or may not be the entity that\n  \
    \ actually generates the key pair, but it does perform the CMC protocol\n   interactions\
    \ with the RA and/or CA.  For example, the client may be a\n   token management\
    \ system that communicates with a cryptographic token\n   through an out-of-band\
    \ secure protocol.\n   This profile uses the term \"rekey\" in the same manner\
    \ as CMC does\n   (defined in Section 2 of [RFC5272]).  The profile makes no specific\n\
    \   statements about the ability to do \"renewal\" operations; however, the\n\
    \   statements applicable to \"rekey\" should be applied to \"renewal\" as\n \
    \  well.\n   This profile may be used to manage RA and/or CA certificates.  In\n\
    \   that case, the RA and/or CA whose certificate is being managed is\n   considered\
    \ to be the end-entity.\n   This profile does not discuss key establishment certification\n\
    \   requests from cryptographic modules that cannot generate a one-time\n   signature\
    \ with a key establishment key for proof-of-possession\n   purposes.  In that\
    \ case, a separate profile would be needed to define\n   the use of another proof-of-possession\
    \ technique.\n"
- title: '4.  Client Requirements: Generating PKI Requests'
  contents:
  - "4.  Client Requirements: Generating PKI Requests\n   This section specifies the\
    \ conventions employed when a client\n   requests a certificate from a Public\
    \ Key Infrastructure (PKI).\n   The Full PKI Request MUST be used; it MUST be\
    \ encapsulated in a\n   SignedData; and the SignedData MUST be constructed in\
    \ accordance with\n   [RFC8755].  The PKIData content type defined in [RFC5272]\
    \ is used\n   with the following additional requirements:\n   *  controlSequence\
    \ SHOULD be present.\n      -  TransactionId and SenderNonce SHOULD be included.\
    \  Other CMC\n         controls MAY be included.\n      -  If the request is being\
    \ authenticated using a shared-secret,\n         then Identity Proof Version 2\
    \ control MUST be included with the\n         following constraints:\n       \
    \  o  hashAlgId MUST be id-sha384 for all certification requests\n           \
    \ (algorithm OIDs are defined in [RFC5754]).\n         o  macAlgId MUST be HMAC-SHA384\
    \ (the Hashed Message\n            Authentication Code (HMAC) algorithm is defined\
    \ in\n            [RFC4231]).\n      -  If the subject name included in the certification\
    \ request is\n         NULL or otherwise does not uniquely identify the end-entity,\n\
    \         then the POP Link Random control MUST be included, and the POP\n   \
    \      Link Witness Version 2 control MUST be included in the inner\n        \
    \ PKCS #10 [RFC2986] or Certificate Request Message Format (CRMF)\n         [RFC4211]\
    \ request as described in Sections 4.1 and 4.2.\n   *  reqSequence MUST be present.\
    \  It MUST include at least one tcr\n      (see Section 4.1) or crm (see Section\
    \ 4.2) TaggedRequest.  Support\n      for the orm choice is OPTIONAL.\n   The\
    \ private signing key used to generate the encapsulating SignedData\n   MUST correspond\
    \ to the public key of an existing signature\n   certificate unless an appropriate\
    \ signature certificate does not yet\n   exist, such as during initial enrollment.\n\
    \   The encapsulating SignedData MUST be generated using SHA-384 and\n   either\
    \ ECDSA on P-384 or RSA using either RSASSA-PKCS1-v1_5 or\n   RSASSA-PSS with\
    \ an RSA-3072 or RSA-4096 key.\n   If an appropriate signature certificate does\
    \ not yet exist and if a\n   Full PKI Request includes one or more certification\
    \ requests and is\n   authenticated using a shared-secret (because no appropriate\n\
    \   certificate exists yet to authenticate the request), the Full PKI\n   Request\
    \ MUST be signed using the private key corresponding to the\n   public key of\
    \ one of the requested certificates.  When necessary\n   (i.e., because there\
    \ is no existing signature certificate and there\n   is no signature certification\
    \ request included), a Full PKI Request\n   MAY be signed using a key pair intended\
    \ for use in a key\n   establishment certificate.  However, servers are not required\
    \ to\n   allow this behavior.\n"
- title: 4.1.  Tagged Certification Request
  contents:
  - "4.1.  Tagged Certification Request\n   The reqSequence tcr choice conveys PKCS\
    \ #10 [RFC2986] syntax.  The\n   CertificateRequest MUST comply with [RFC5272],\
    \ Section 3.2.1.2.1,\n   with the following additional requirements:\n   *  certificationRequestInfo:\n\
    \      -  subjectPublicKeyInfo MUST be set as defined in Section 5.4 of\n    \
    \     [RFC8603].\n      -  Attributes:\n         o  The ExtensionReq attribute\
    \ MUST be included with its\n            contents as follows:\n            + \
    \ The keyUsage extension MUST be included, and it MUST be\n               set\
    \ as defined in [RFC8603].\n            +  For rekey requests, the SubjectAltName\
    \ extension MUST be\n               included and set equal to the SubjectAltName\
    \ of the\n               certificate that is being used to sign the SignedData\n\
    \               encapsulating the request (i.e., not the certificate\n       \
    \        being rekeyed) if the subject field of the certificate\n            \
    \   being used to generate the signature is NULL.\n            +  Other extension\
    \ requests MAY be included as desired.\n         o  The ChangeSubjectName attribute,\
    \ as defined in [RFC6402],\n            MUST be included if the Full PKI Request\
    \ encapsulating this\n            Tagged Certification Request is being signed\
    \ by a key for\n            which a certificate currently exists and the existing\n\
    \            certificate's subject field or SubjectAltName extension does\n  \
    \          not match the desired subject name or SubjectAltName\n            extension\
    \ of this certification request.\n         o  The POP Link Witness Version 2 attribute\
    \ MUST be included if\n            the request is being authenticated using a\
    \ shared-secret and\n            the subject name in the certification request\
    \ is NULL or\n            otherwise does not uniquely identify the end-entity.\
    \  In the\n            POP Link Witness Version 2 attribute, keyGenAlgorithm MUST\n\
    \            be id-sha384 for certification requests, as defined in\n        \
    \    [RFC5754]; macAlgorithm MUST be HMAC-SHA384, as defined in\n            [RFC4231].\n\
    \      -  signatureAlgorithm MUST be ecdsa-with-sha384 for P-384\n         certification\
    \ requests and sha384WithRSAEncryption or id-\n         RSASSA-PSS for RSA-3072\
    \ and RSA-4096 certification requests.\n      -  signature MUST be generated using\
    \ the private key corresponding\n         to the public key in the CertificationRequestInfo\
    \ for both\n         signature and key establishment certification requests. \
    \ The\n         signature provides proof-of-possession of the private key to\n\
    \         the CA.\n"
- title: 4.2.  Certificate Request Message
  contents:
  - "4.2.  Certificate Request Message\n   The reqSequence crm choice conveys Certificate\
    \ Request Message Format\n   (CRMF) [RFC4211] syntax.  The CertReqMsg MUST comply\
    \ with [RFC5272],\n   Section 3.2.1.2.2, with the following additional requirements:\n\
    \   *  popo MUST be included using the signature (POPOSigningKey) proof-\n   \
    \   of-possession choice and be set as defined in [RFC4211],\n      Section 4.1\
    \ for both signature and key establishment certification\n      requests.  The\
    \ POPOSigningKey poposkInput field MUST be omitted.\n      The POPOSigningKey\
    \ algorithmIdentifier MUST be ecdsa-with-sha384\n      for P-384 certification\
    \ requests and sha384WithRSAEncryption or\n      id-RSASSA-PSS for RSA-3072 and\
    \ RSA-4096 certification requests.\n      The signature MUST be generated using\
    \ the private key\n      corresponding to the public key in the CertTemplate.\n\
    \   The CertTemplate MUST comply with [RFC5272], Section 3.2.1.2.2, with\n   the\
    \ following additional requirements:\n   *  If version is included, it MUST be\
    \ set to 2 as defined in\n      Section 5.3 of [RFC8603].\n   *  publicKey MUST\
    \ be set as defined in Section 5.4 of [RFC8603].\n   *  Extensions:\n      - \
    \ The keyUsage extension MUST be included, and it MUST be set as\n         defined\
    \ in [RFC8603].\n      -  For rekey requests, the SubjectAltName extension MUST\
    \ be\n         included and set equal to the SubjectAltName of the certificate\n\
    \         that is being used to sign the SignedData encapsulating the\n      \
    \   request (i.e., not the certificate being rekeyed) if the\n         subject\
    \ name of the certificate being used to generate the\n         signature is NULL.\n\
    \      -  Other extension requests MAY be included as desired.\n   *  Controls:\n\
    \      -  The ChangeSubjectName attribute, as defined in [RFC6402], MUST\n   \
    \      be included if the Full PKI Request encapsulating this Tagged\n       \
    \  Certification Request is being signed by a key for which a\n         certificate\
    \ currently exists and the existing certificate's\n         subject name or SubjectAltName\
    \ extension does not match the\n         desired subject name or SubjectAltName\
    \ extension of this\n         certification request.\n      -  The POP Link Witness\
    \ Version 2 attribute MUST be included if\n         the request is being authenticated\
    \ using a shared-secret and\n         the subject name in the certification request\
    \ is NULL or\n         otherwise does not uniquely identify the end-entity.  In\
    \ the\n         POP Link Witness Version 2 attribute, keyGenAlgorithm MUST be\n\
    \         id-sha384 for certification requests; macAlgorithm MUST be\n       \
    \  HMAC-SHA384 when keyGenAlgorithm is id-sha384.\n"
- title: 5.  RA Requirements
  contents:
  - "5.  RA Requirements\n   This section addresses the optional case where one or\
    \ more RAs act as\n   intermediaries between clients and a CA as described in\
    \ Section 7 of\n   [RFC5272].  In this section, the term \"client\" refers to\
    \ the entity\n   from which the RA received the PKI Request.  This section is\
    \ only\n   applicable to RAs.\n"
- title: 5.1.  RA Processing of Requests
  contents:
  - "5.1.  RA Processing of Requests\n   RAs conforming to this document MUST ensure\
    \ that only the permitted\n   signature, hash, and MAC algorithms described throughout\
    \ this profile\n   are used in requests; if they are not, the RA MUST reject those\n\
    \   requests.  The RA SHOULD return a CMCFailInfo with the value of\n   badAlg\
    \ [RFC5272].\n   When processing end-entity-generated SignedData objects, RAs\
    \ MUST NOT\n   perform Cryptographic Message Syntax (CMS) Content Constraints\
    \ (CCC)\n   certificate extension processing [RFC6010].\n   Other RA processing\
    \ is performed as described in [RFC5272].\n"
- title: 5.2.  RA-Generated PKI Requests
  contents:
  - "5.2.  RA-Generated PKI Requests\n   RAs mediate the certificate request process\
    \ by collecting client\n   requests in batches.  The RA MUST encapsulate client-generated\
    \ PKI\n   Requests in a new RA-signed PKI Request, it MUST create a Full PKI\n\
    \   Request encapsulated in a SignedData, and the SignedData MUST be\n   constructed\
    \ in accordance with [RFC8755].  The PKIData content type\n   complies with [RFC5272]\
    \ with the following additional requirements:\n   *  controlSequence MUST be present.\
    \  It MUST include the following\n      CMC controls: Transaction ID, Sender Nonce,\
    \ and Batch Requests.\n      Other appropriate CMC controls MAY be included.\n\
    \   *  cmsSequence MUST be present.  It contains the original, unmodified\n  \
    \    request(s) received from the client.\n         SignedData (applied by the\
    \ RA)\n           PKIData\n             controlSequence (Transaction ID, Sender\
    \ Nonce,\n             cmsSequence\n               SignedData (applied by client)\n\
    \                 PKIData\n                   controlSequence (Transaction ID,\
    \ Sender Nonce)\n                   reqSequence\n                     TaggedRequest\n\
    \                     {TaggedRequest}\n               {SignedData     (second\
    \ client request)\n                 PKIData...}\n   Authorization to sign RA-generated\
    \ Full PKI Requests SHOULD be\n   indicated in the RA certificate by inclusion\
    \ of the id-kp-cmcRA\n   Extended Key Usage (EKU) from [RFC6402].  The RA certificate\
    \ MAY also\n   include the CCC certificate extension [RFC6010], or it MAY indicate\n\
    \   authorization through inclusion of the CCC certificate extension\n   alone.\
    \  The RA certificate may also be authorized through the local\n   configuration.\n\
    \   If the RA is authorized via the CCC extension, then the CCC extension\n  \
    \ MUST include the object identifier for the PKIData content type.  CCC\n   SHOULD\
    \ be included if constraints are to be placed on the content\n   types generated.\n\
    \   The outer SignedData MUST be generated using SHA-384 and either ECDSA\n  \
    \ on P-384 or RSA using RSASSA-PKCS1-v1_5 or RSASSA-PSS with an\n   RSA-3072 or\
    \ RSA-4096 key.\n   If the Full PKI Response is a successful response to a PKI\
    \ Request\n   that only contained a Get Certificate or Get CRL control, then the\n\
    \   algorithm used in the response MUST match the algorithm used in the\n   request.\n"
- title: 5.3.  RA-Generated PKI Responses
  contents:
  - "5.3.  RA-Generated PKI Responses\n   In order for an RA certificate using the\
    \ CCC certificate extension to\n   be authorized to generate responses, the object\
    \ identifier for the\n   PKIResponse content type must be present in the CCC certificate\n\
    \   extension.\n"
- title: 6.  CA Requirements
  contents:
  - "6.  CA Requirements\n   This section specifies the requirements for CAs that\
    \ receive PKI\n   Requests and generate PKI Responses.\n"
- title: 6.1.  CA Processing of PKI Requests
  contents:
  - "6.1.  CA Processing of PKI Requests\n   CAs conforming to this document MUST\
    \ ensure that only the permitted\n   signature, hash, and MAC algorithms described\
    \ throughout this profile\n   are used in requests; if they are not, the CA MUST\
    \ reject those\n   requests.  The CA SHOULD return a CMCStatusInfoV2 control with\
    \ a\n   CMCStatus of failed and a CMCFailInfo with the value of badAlg\n   [RFC5272].\n\
    \   For requests involving an RA (i.e., batched requests), the CA MUST\n   verify\
    \ the RA's authorization.  The following certificate fields MUST\n   NOT be modifiable\
    \ using the Modify Certification Request control:\n   publicKey and the keyUsage\
    \ extension.  The request MUST be rejected\n   if an attempt to modify those certification\
    \ request fields is\n   present.  The CA SHOULD return a CMCStatusInfoV2 control\
    \ with a\n   CMCStatus of failed and a CMCFailInfo with a value of badRequest.\n\
    \   When processing end-entity-generated SignedData objects, CAs MUST NOT\n  \
    \ perform CCC certificate extension processing [RFC6010].\n   If a client-generated\
    \ PKI Request includes the ChangeSubjectName\n   attribute as described in Section\
    \ 4.1 or 4.2 above, the CA MUST\n   ensure that name change is authorized.  The\
    \ mechanism for ensuring\n   that the name change is authorized is out of scope.\
    \  A CA that\n   performs this check and finds that the name change is not authorized\n\
    \   MUST reject the PKI Request.  The CA SHOULD return an Extended CMC\n   Status\
    \ Info control (CMCStatusInfoV2) with a CMCStatus of failed.\n   Other processing\
    \ of PKIRequests is performed as described in\n   [RFC5272].\n"
- title: 6.2.  CA-Generated PKI Responses
  contents:
  - "6.2.  CA-Generated PKI Responses\n   CAs send PKI Responses to both client-generated\
    \ requests and RA-\n   generated requests.  If a Full PKI Response is returned\
    \ in direct\n   response to a client-generated request, it MUST be encapsulated\
    \ in a\n   SignedData, and the SignedData MUST be constructed in accordance with\n\
    \   [RFC8755].\n   If the PKI Response is in response to an RA-generated PKI Request,\n\
    \   then the above PKI Response is encapsulated in another CA-generated\n   PKI\
    \ Response.  That PKI Response MUST be encapsulated in a\n   SignedData, and the\
    \ SignedData MUST be constructed in accordance with\n   [RFC8755].  The above\
    \ PKI Response is placed in the encapsulating PKI\n   Response cmsSequence field.\
    \  The other fields are as above with the\n   addition of the batch response control\
    \ in controlSequence.  The\n   following illustrates a successful CA response\
    \ to an RA-encapsulated\n   PKI Request, both of which include Transaction IDs\
    \ and Nonces:\n         SignedData (applied by the CA)\n           PKIResponse\n\
    \             controlSequence (Transaction ID, Sender Nonce, Recipient\n     \
    \                         Nonce, Batch Response)\n             cmsSequence\n \
    \              SignedData (applied by CA and includes returned\n             \
    \              certificates)\n                 PKIResponse\n                 \
    \  controlSequence (Transaction ID, Sender Nonce,\n   The same private key used\
    \ to sign certificates MUST NOT be used to\n   sign Full PKI Response messages.\
    \  Instead, a separate certificate\n   indicating authorization to sign CMC responses\
    \ MUST be used.\n   Authorization to sign Full PKI Responses SHOULD be indicated\
    \ in the\n   CA certificate by inclusion of the id-kp-cmcCA EKU from [RFC6402].\n\
    \   The CA certificate MAY also include the CCC certificate extension\n   [RFC6010],\
    \ or it MAY indicate authorization through inclusion of the\n   CCC certificate\
    \ extension alone.  The CA certificate may also be\n   authorized through local\
    \ configuration.\n   In order for a CA certificate using the CCC certificate extension\
    \ to\n   be authorized to generate responses, the object identifier for the\n\
    \   PKIResponse content type must be present in the CCC certificate\n   extension.\
    \  CCC SHOULD be included if constraints are to be placed on\n   the content types\
    \ generated.\n   Signatures applied to individual certificates are as required\
    \ in\n   [RFC8603].\n   The signature on the SignedData of a successful response\
    \ to a client-\n   generated request, or each individual inner SignedData on the\n\
    \   successful response to an RA-generated request, MUST be generated\n   using\
    \ SHA-384 and either ECDSA on P-384 or RSA using RSASSA-\n   PKCS1-v1_5 or RSASSA-PSS\
    \ with an RSA-3072 or RSA-4096 key.  An\n   unsuccessful response MUST be signed\
    \ using the same key type and\n   algorithm that signed the request.\n   The outer\
    \ SignedData on the Full PKI Response to any RA-generated PKI\n   Request MUST\
    \ be signed with the same key type and algorithm that\n   signed the request.\n\
    \   The SignedData on a successful Full PKI Response to a PKI Request\n   that\
    \ only contained a Get Certificate or Get CRL control MUST be\n   signed with\
    \ the same key type and algorithm that signed the request.\n"
- title: '7.  Client Requirements: Processing PKI Responses'
  contents:
  - "7.  Client Requirements: Processing PKI Responses\n   Clients conforming to this\
    \ document MUST ensure that only the\n   permitted signature, hash, and MAC algorithms\
    \ described throughout\n   this profile are used in responses; if they are not,\
    \ the client MUST\n   reject those responses.\n   Clients MUST authenticate all\
    \ Full PKI Responses.  This includes\n   verifying that the PKI Response is signed\
    \ by an authorized CA or RA\n   whose certificate validates back to a trust anchor.\
    \  The authorized\n   CA certificate MUST include the id-kp-cmcCA EKU and/or a\
    \ CCC\n   extension that includes the object identifier for the PKIResponse\n\
    \   content type.  Otherwise, the CA is determined to be authorized to\n   sign\
    \ responses through an implementation-specific mechanism.  The PKI\n   Response\
    \ can be signed by an RA if it is an error message, if it is a\n   response to\
    \ a Get Certificate or Get CRL request, or if the PKI\n   Response contains an\
    \ inner PKI Response signed by a CA.  In the last\n   case, each layer of PKI\
    \ Response MUST still contain an authorized,\n   valid signature signed by an\
    \ entity with a valid certificate that\n   verifies back to an acceptable trust\
    \ anchor.  The authorized RA\n   certificate MUST include the id-kp-cmcRA EKU\
    \ and/or include a CCC\n   extension that includes the object identifier for the\
    \ PKIResponse\n   content type.  Otherwise, the RA is determined to be authorized\
    \ to\n   sign responses through local configuration.\n   When a newly issued certificate\
    \ is included in the PKI Response, the\n   client MUST verify that the newly issued\
    \ certificate's public key\n   matches the public key that the client requested.\
    \  The client MUST\n   also ensure that the certificate's signature is valid and\
    \ that the\n   signature validates back to an acceptable trust anchor.\n   Clients\
    \ MUST reject PKI Responses that do not pass these tests.\n   Local policy will\
    \ determine whether the client returns a Full PKI\n   Response with an Extended\
    \ CMC Status Info control (CMCStatusInfoV2)\n   with the CMCStatus set to failed\
    \ to a user console, error log, or the\n   server.\n   If the Full PKI Response\
    \ contains an Extended CMC Status Info control\n   with a CMCStatus set to failed,\
    \ then local policy will determine\n   whether the client resends a duplicate\
    \ certification request back to\n   the server or an error state is returned to\
    \ a console or error log.\n"
- title: 8.  Shared-Secrets
  contents:
  - "8.  Shared-Secrets\n   When the Identity Proof V2 and POP Link Witness V2 controls\
    \ are used,\n   the shared-secret MUST be randomly generated and securely\n  \
    \ distributed.  The shared-secret MUST provide at least 192 bits of\n   strength.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Protocol security considerations are found in\
    \ [RFC2986], [RFC4211],\n   [RFC8755], [RFC5272], [RFC5273], [RFC5274], [RFC8603],\
    \ and [RFC6402].\n   When CCC is used to authorize RA and CA certificates, then\
    \ the\n   security considerations in [RFC6010] also apply.  Algorithm security\n\
    \   considerations are found in [RFC8755].\n   Compliant with NIST Special Publication\
    \ 800-57 [SP80057], this\n   profile defines proof-of-possession of a key establishment\
    \ private\n   key by performing a digital signature.  Except for one-time proof-of-\n\
    \   possession, a single key pair MUST NOT be used for both signature and\n  \
    \ key establishment.\n   This specification requires implementations to generate\
    \ key pairs and\n   other random values.  The use of inadequate pseudorandom number\n\
    \   generators (PRNGs) can result in little or no security.  The\n   generation\
    \ of quality random numbers is difficult.  NIST Special\n   Publication 800-90A\
    \ [SP80090A], FIPS 186-3 [FIPS186], and [RFC4086]\n   offer random number generation\
    \ guidance.\n   When RAs are used, the list of authorized RAs MUST be securely\n\
    \   distributed out of band to CAs.\n   Presence of the POP Link Witness Version\
    \ 2 and POP Link Random\n   attributes protects against substitution attacks.\n\
    \   The certificate policy for a particular environment will specify\n   whether\
    \ expired certificates can be used to sign certification\n   requests.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [CNSA]     Committee on National Security Systems,\
    \ \"Use of Public\n              Standards for Secure Information Sharing\", CNSS\
    \ Policy 15,\n              October 2016,\n              <https://www.cnss.gov/CNSS/issuances/Policies.cfm>.\n\
    \   [FIPS186]  National Institute of Standards and Technology, \"Digital\n   \
    \           Signature Standard (DSS)\", DOI 10.6028/NIST.FIPS.186-4,\n       \
    \       FIPS PUB 186-4, July 2013,\n              <http://nvlpubs.nist.gov/nistpubs/FIPS/\n\
    \              NIST.FIPS.186-4.pdf>.\n   [RFC2119]  Bradner, S., \"Key words for\
    \ use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n\
    \              DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2986]  Nystrom, M. and B. Kaliski, \"PKCS #10: Certification\n       \
    \       Request Syntax Specification Version 1.7\", RFC 2986,\n              DOI\
    \ 10.17487/RFC2986, November 2000,\n              <https://www.rfc-editor.org/info/rfc2986>.\n\
    \   [RFC4055]  Schaad, J., Kaliski, B., and R. Housley, \"Additional\n       \
    \       Algorithms and Identifiers for RSA Cryptography for use in\n         \
    \     the Internet X.509 Public Key Infrastructure Certificate\n             \
    \ and Certificate Revocation List (CRL) Profile\", RFC 4055,\n              DOI\
    \ 10.17487/RFC4055, June 2005,\n              <https://www.rfc-editor.org/info/rfc4055>.\n\
    \   [RFC4056]  Schaad, J., \"Use of the RSASSA-PSS Signature Algorithm in\n  \
    \            Cryptographic Message Syntax (CMS)\", RFC 4056,\n              DOI\
    \ 10.17487/RFC4056, June 2005,\n              <https://www.rfc-editor.org/info/rfc4056>.\n\
    \   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n             \
    \ \"Randomness Requirements for Security\", BCP 106, RFC 4086,\n             \
    \ DOI 10.17487/RFC4086, June 2005,\n              <https://www.rfc-editor.org/info/rfc4086>.\n\
    \   [RFC4211]  Schaad, J., \"Internet X.509 Public Key Infrastructure\n      \
    \        Certificate Request Message Format (CRMF)\", RFC 4211,\n            \
    \  DOI 10.17487/RFC4211, September 2005,\n              <https://www.rfc-editor.org/info/rfc4211>.\n\
    \   [RFC4231]  Nystrom, M., \"Identifiers and Test Vectors for HMAC-SHA-\n   \
    \           224, HMAC-SHA-256, HMAC-SHA-384, and HMAC-SHA-512\",\n           \
    \   RFC 4231, DOI 10.17487/RFC4231, December 2005,\n              <https://www.rfc-editor.org/info/rfc4231>.\n\
    \   [RFC5272]  Schaad, J. and M. Myers, \"Certificate Management over CMS\n  \
    \            (CMC)\", RFC 5272, DOI 10.17487/RFC5272, June 2008,\n           \
    \   <https://www.rfc-editor.org/info/rfc5272>.\n   [RFC5273]  Schaad, J. and M.\
    \ Myers, \"Certificate Management over CMS\n              (CMC): Transport Protocols\"\
    , RFC 5273,\n              DOI 10.17487/RFC5273, June 2008,\n              <https://www.rfc-editor.org/info/rfc5273>.\n\
    \   [RFC5274]  Schaad, J. and M. Myers, \"Certificate Management Messages\n  \
    \            over CMS (CMC): Compliance Requirements\", RFC 5274,\n          \
    \    DOI 10.17487/RFC5274, June 2008,\n              <https://www.rfc-editor.org/info/rfc5274>.\n\
    \   [RFC5754]  Turner, S., \"Using SHA2 Algorithms with Cryptographic\n      \
    \        Message Syntax\", RFC 5754, DOI 10.17487/RFC5754, January\n         \
    \     2010, <https://www.rfc-editor.org/info/rfc5754>.\n   [RFC6010]  Housley,\
    \ R., Ashmore, S., and C. Wallace, \"Cryptographic\n              Message Syntax\
    \ (CMS) Content Constraints Extension\",\n              RFC 6010, DOI 10.17487/RFC6010,\
    \ September 2010,\n              <https://www.rfc-editor.org/info/rfc6010>.\n\
    \   [RFC6402]  Schaad, J., \"Certificate Management over CMS (CMC)\n         \
    \     Updates\", RFC 6402, DOI 10.17487/RFC6402, November 2011,\n            \
    \  <https://www.rfc-editor.org/info/rfc6402>.\n   [RFC8017]  Moriarty, K., Ed.,\
    \ Kaliski, B., Jonsson, J., and A. Rusch,\n              \"PKCS #1: RSA Cryptography\
    \ Specifications Version 2.2\",\n              RFC 8017, DOI 10.17487/RFC8017,\
    \ November 2016,\n              <https://www.rfc-editor.org/info/rfc8017>.\n \
    \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n      \
    \        2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n         \
    \     May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8603]  Jenkins,\
    \ M. and L. Zieglar, \"Commercial National Security\n              Algorithm (CNSA)\
    \ Suite Certificate and Certificate\n              Revocation List (CRL) Profile\"\
    , RFC 8603,\n              DOI 10.17487/RFC8603, May 2019,\n              <https://www.rfc-editor.org/info/rfc8603>.\n\
    \   [RFC8755]  Jenkins, M., \"Using Commercial National Security Algorithm\n \
    \             Suite Algorithms in Secure/Multipurpose Internet Mail\n        \
    \      Extensions\", RFC 8755, DOI 10.17487/RFC8755, March 2020,\n           \
    \   <https://www.rfc-editor.org/info/rfc8755>.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [SP80057]  National Institute of Standards\
    \ and Technology,\n              \"Recommendation for Key Management, Part 1:\
    \ General\",\n              DOI 10.6028/NIST.SP.800-57pt1r4, Special\n       \
    \       Publication 800-57, Part 1, Revision 4, January 2016,\n              <http://doi.org/10.6028/NIST.SP.800-57pt1r4>.\n\
    \   [SP80059]  National Institute of Standards and Technology, \"Guideline\n \
    \             for Identifying an Information System as a National\n          \
    \    Security System\", DOI 10.6028/NIST.SP.800-59, Special\n              Publication\
    \ 800-59, August 2003,\n              <https://csrc.nist.gov/publications/detail/sp/800-59/\n\
    \              final>.\n   [SP80090A] National Institute of Standards and Technology,\n\
    \              \"Recommendation for Random Number Generation Using\n         \
    \     Deterministic Random Bit Generators\",\n              DOI 10.6028/NIST.SP.800-90Ar1,\
    \ Special Publication\n              800-90A Revision 1, June 2015,\n        \
    \      <http://doi.org/10.6028/NIST.SP.800-90Ar1>.\n"
- title: Appendix A.  Scenarios
  contents:
  - "Appendix A.  Scenarios\n   This section illustrates several potential certificate\
    \ enrollment and\n   rekey scenarios supported by this profile.  This section\
    \ does not\n   intend to place any limits or restrictions on the use of CMC.\n"
- title: A.1.  Initial Enrollment
  contents:
  - "A.1.  Initial Enrollment\n   This section describes three scenarios for authenticating\
    \ initial\n   enrollment requests:\n   1.  Previously certified signature key-pair\
    \ (e.g., Manufacturer\n       Installed Certificate).\n   2.  Shared-secret distributed\
    \ securely out of band.\n   3.  RA authentication.\n"
- title: A.1.1.  Previously Certified Signature Key-Pair
  contents:
  - "A.1.1.  Previously Certified Signature Key-Pair\n   In this scenario, the end-entity\
    \ has a private signing key and a\n   corresponding public key certificate obtained\
    \ from a cryptographic\n   module manufacturer recognized by the CA.  The end-entity\
    \ signs a\n   Full PKI Request with the private key that corresponds to the subject\n\
    \   public key of the previously installed signature certificate.  The CA\n  \
    \ will verify the authorization of the previously installed certificate\n   and\
    \ issue an appropriate new certificate to the end-entity.\n"
- title: A.1.2.  Shared-Secret Distributed Securely Out of Band
  contents:
  - "A.1.2.  Shared-Secret Distributed Securely Out of Band\n   In this scenario,\
    \ the CA distributes a shared-secret out of band to\n   the end-entity that the\
    \ end-entity uses to authenticate its\n   certification request.  The end-entity\
    \ signs the Full PKI Request\n   with the private key for which the certification\
    \ is being requested.\n   The end-entity includes the Identity Proof Version 2\
    \ control to\n   authenticate the request using the shared-secret.  The CA uses\
    \ either\n   the Identification control or the subject name in the end-entity's\n\
    \   enclosed PKCS #10 [RFC2986] or CRMF [RFC4211] certification request\n   message\
    \ to identify the request.  The end-entity performs either the\n   POP Link Witness\
    \ Version 2 mechanism as described in [RFC5272],\n   Section 6.3.1.1 or the shared-secret/subject\
    \ distinguished name\n   linking mechanism as described in [RFC5272], Section\
    \ 6.3.2.  The\n   subject name in the enclosed PKCS #10 [RFC2986] or CRMF [RFC4211]\n\
    \   certification request does not necessarily match the issued\n   certificate,\
    \ as it may be used just to help identify the request (and\n   the corresponding\
    \ shared-secret) to the CA.\n"
- title: A.1.3.  RA Authentication
  contents:
  - "A.1.3.  RA Authentication\n   In this scenario, the end-entity does not automatically\
    \ authenticate\n   its enrollment request to the CA, either because the end-entity\
    \ has\n   nothing to authenticate the request with or because the\n   organizational\
    \ policy requires an RA's involvement.  The end-entity\n   creates a Full PKI\
    \ Request and sends it to an RA.  The RA verifies\n   the authenticity of the\
    \ request.  If the request is approved, the RA\n   encapsulates and signs the\
    \ request as described in Section 4.2,\n   forwarding the new request on to the\
    \ CA.  The subject name in the\n   PKCS #10 [RFC2986] or CRMF [RFC4211] certification\
    \ request is not\n   required to match the issued certificate; it may be used\
    \ just to help\n   identify the request to the RA and/or CA.\n"
- title: A.2.  Rekey
  contents:
  - "A.2.  Rekey\n   There are two scenarios to support the rekey of certificates\
    \ that are\n   already enrolled.  One addresses the rekey of signature certificates,\n\
    \   and the other addresses the rekey of key establishment certificates.\n   Typically,\
    \ organizational policy will require certificates to be\n   currently valid to\
    \ be rekeyed, and it may require initial enrollment\n   to be repeated when rekey\
    \ is not possible.  However, some\n   organizational policies might allow a grace\
    \ period during which an\n   expired certificate could be used to rekey.\n"
- title: A.2.1.  Rekey of Signature Certificates
  contents:
  - "A.2.1.  Rekey of Signature Certificates\n   When a signature certificate is rekeyed,\
    \ the PKCS #10 [RFC2986] or\n   CRMF [RFC4211] certification request message enclosed\
    \ in the Full PKI\n   Request will include the same subject name as the current\
    \ signature\n   certificate.  The Full PKI Request will be signed by the current\n\
    \   private key corresponding to the current signature certificate.\n"
- title: A.2.2.  Rekey of Key Establishment Certificates
  contents:
  - "A.2.2.  Rekey of Key Establishment Certificates\n   When a key establishment\
    \ certificate is rekeyed, the Full PKI Request\n   will generally be signed by\
    \ the current private key corresponding to\n   the current signature certificate.\
    \  If there is no current signature\n   certificate, one of the initial enrollment\
    \ options in Appendix A.1\n   may be used.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael Jenkins\n   National Security Agency\n   Email:\
    \ mjjenki@nsa.gov\n   Lydia Zieglar\n"
