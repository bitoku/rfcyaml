- title: __initial_text__
  contents:
  - "   Additional Deployment Guidelines for NAT64/464XLAT in Operator and\n     \
    \                     Enterprise Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes how Network Address and Protocol Translation\n\
    \   from IPv6 Clients to IPv4 Servers (NAT64) (including 464XLAT) can be\n   deployed\
    \ in an IPv6 network -- whether it's cellular ISP, broadband\n   ISP, or enterprise\
    \ -- and the possible optimizations.  This document\n   also discusses issues\
    \ to be considered when having IPv6-only\n   connectivity, such as: a) DNS64,\
    \ b) applications or devices that use\n   literal IPv4 addresses or non-IPv6-compliant\
    \ APIs, and c) IPv4-only\n   hosts or applications.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8683.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Requirements Language\n   3. \
    \ NAT64 Deployment Scenarios\n     3.1.  Known to Work\n       3.1.1.  Service\
    \ Provider NAT64 with DNS64\n       3.1.2.  Service Provider Offering 464XLAT\
    \ Using DNS64\n       3.1.3.  Service Provider Offering 464XLAT, without Using\
    \ DNS64\n     3.2.  Known to Work under Special Conditions\n       3.2.1.  Service\
    \ Provider NAT64 without DNS64\n       3.2.2.  Service-Provider NAT64; DNS64 in\
    \ IPv6 Hosts\n       3.2.3.  Service-Provider NAT64; DNS64 in the IPv4-Only Remote\n\
    \               Network\n     3.3.  Comparing the Scenarios\n   4.  Issues to\
    \ be Considered\n     4.1.  DNSSEC Considerations and Possible Approaches\n  \
    \     4.1.1.  Not Using DNS64\n       4.1.2.  DNSSEC Validator Aware of DNS64\n\
    \       4.1.3.  Stub Validator\n       4.1.4.  CLAT with DNS Proxy and Validator\n\
    \       4.1.5.  ACL of Clients\n       4.1.6.  Mapping Out IPv4 Addresses\n  \
    \   4.2.  DNS64 and Reverse Mapping\n     4.3.  Using 464XLAT with/without DNS64\n\
    \     4.4.  Foreign DNS\n       4.4.1.  Manual Configuration of DNS\n       4.4.2.\
    \  DNS Privacy/Encryption Mechanisms\n       4.4.3.  Split DNS and VPNs\n    \
    \ 4.5.  Well-Known Prefix (WKP) vs. Network-Specific Prefix (NSP)\n     4.6. \
    \ IPv4 Literals and Non-IPv6-Compliant APIs\n     4.7.  IPv4-Only Hosts or Applications\n\
    \     4.8.  CLAT Translation Considerations\n     4.9.  EAM Considerations\n \
    \    4.10. Incoming Connections\n   5.  Summary of Deployment Recommendations\
    \ for NAT64/464XLAT\n   6.  Deployment of 464XLAT/NAT64 in Enterprise Networks\n\
    \   7.  Security Considerations\n   8.  IANA Considerations\n   9.  References\n\
    \     9.1.  Normative References\n     9.2.  Informative References\n   Appendix\
    \ A.  Example of Broadband Deployment with 464XLAT\n   Appendix B.  CLAT Implementation\n\
    \   Appendix C.  Benchmarking\n   Acknowledgements\n   Author's Address\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Stateful NAT64 [RFC6146] describes a stateful IPv6-to-IPv4\n\
    \   translation mechanism that allows IPv6-only hosts to communicate with\n  \
    \ IPv4-only servers using unicast UDP, TCP, or ICMP by means of IPv4\n   public\
    \ address sharing among multiple IPv6-only hosts.  Unless\n   otherwise stated,\
    \ references to NAT64 (function) in this document\n   should be interpreted as\
    \ Stateful NAT64.\n   The translation of the packet headers is done using the\
    \ IP/ICMP\n   translation algorithm defined in [RFC7915]; algorithmically\n  \
    \ translating the IPv4 addresses to IPv6 addresses, and vice versa, is\n   done\
    \ following [RFC6052].\n   DNS64 [RFC6147] is in charge of the synthesis of AAAA\
    \ records from\n   the A records, so it only works for applications making use\
    \ of DNS.\n   It was designed to avoid changes in both the IPv6-only hosts and\
    \ the\n   IPv4-only server, so they can use a NAT64 function.  As discussed in\n\
    \   Section 5.5 of [RFC6147], a security-aware and validating host has to\n  \
    \ perform the DNS64 function locally.\n   However, the use of NAT64 and/or DNS64\
    \ presents three drawbacks:\n   1.  Because DNS64 [RFC6147] modifies DNS answers,\
    \ and DNSSEC is\n       designed to detect such modifications, DNS64 [RFC6147]\
    \ may\n       potentially break DNSSEC, depending on a number of factors such\n\
    \       as the location of the DNS64 function (at a DNS server or\n       validator,\
    \ at the end host, ...), how it has been configured, if\n       the end hosts\
    \ are validating, etc.\n   2.  Because of the need to use DNS64 [RFC6147] or an\
    \ alternative\n       \"host/application built-in\" mechanism for address synthesis,\n\
    \       there may be an issue for NAT64 [RFC6146] because it doesn't work\n  \
    \     when IPv4 literal addresses or non-IPv6-compliant APIs are being\n     \
    \  used.\n   3.  NAT64 alone was not designed to provide a solution for IPv4-only\n\
    \       hosts or applications that are located within a network and\n       connected\
    \ to a service provider IPv6-only access link, as it was\n       designed for\
    \ a very specific scenario (see Section 2.1 of\n       [RFC6144]).\n   The drawbacks\
    \ discussed above may come into play if part of an\n   enterprise network is connected\
    \ to other parts of the same network or\n   to third-party networks by means of\
    \ IPv6-only connectivity.  This is\n   just an example that may apply to many\
    \ other similar cases.  All of\n   them are deployment specific.\n   Accordingly,\
    \ the use of \"operator\", \"operator network\", \"service\n   provider\", and\
    \ similar terms in this document are interchangeable\n   with equivalent cases\
    \ of enterprise networks; other cases may be\n   similar as well.  This may be\
    \ also the case for \"managed end-user\n   networks\".\n   Note that if all the\
    \ hosts in a network were performing address\n   synthesis, as described in Section\
    \ 7.2 of [RFC6147], some of the\n   drawbacks may not apply.  However, it is unrealistic\
    \ to expect that\n   in today's world, considering the high number of devices\
    \ and\n   applications that aren't yet IPv6 enabled.  In this document, the\n\
    \   case in which all hosts provide synthesis will be considered only for\n  \
    \ specific scenarios that can guarantee it.\n   An analysis of stateful IPv4/IPv6\
    \ mechanisms is provided in\n   [RFC6889].\n   This document looks into different\
    \ possible NAT64 [RFC6146]\n   deployment scenarios, including IPv4-IPv6-IPv4\
    \ (464 for short) and\n   similar ones that were not documented in [RFC6144],\
    \ such as 464XLAT\n   [RFC6877] in operator (broadband and cellular) and enterprise\n\
    \   networks; it provides guidelines to avoid operational issues.\n   This document\
    \ also explores the possible NAT64 deployment scenarios\n   (split in \"known\
    \ to work\" and \"known to work under special\n   conditions\"), providing a quick\
    \ and generic comparison table among\n   them.  Then, the document describes the\
    \ issues that an operator needs\n   to understand, which will allow the best approach/scenario\
    \ to be\n   defined for each specific network case.  A summary provides some\n\
    \   recommendations and decision points.  A section with clarifications\n   on\
    \ the usage of this document for enterprise networks is also\n   provided.  Finally,\
    \ Appendix A provides an example of a broadband\n   deployment using 464XLAT and\
    \ hints for a customer-side translator\n   (CLAT) implementation.\n   [RFC7269]\
    \ already provides information about NAT64 deployment options\n   and experiences.\
    \  This document and [RFC7269] are complementary; they\n   both look into different\
    \ deployment considerations.  Furthermore,\n   this document considers the updated\
    \ deployment experience and newer\n   standards.\n   The target deployment scenarios\
    \ in this document may also be covered\n   by other IPv4-as-a-Service (IPv4aaS)\
    \ transition mechanisms.  Note\n   that this is true only for broadband networks;\
    \ in the case of\n   cellular networks, the only supported solution is the use\
    \ of\n   NAT64/464XLAT.  So, it is out of scope of this document to provide a\n\
    \   comparison among the different IPv4aaS transition mechanisms, which\n   are\
    \ analyzed in [IPv6-TRANSITION].\n   Consequently, this document should not be\
    \ used as a guide for an\n   operator or enterprise to decide which IPv4aaS is\
    \ the best one for\n   its own network.  Instead, it should be used as a tool\
    \ for\n   understanding all the implications, including relevant documents (or\n\
    \   even specific parts of them) for the deployment of NAT64/464XLAT and\n   for\
    \ facilitating the decision process regarding specific deployment\n   details.\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n"
- title: 3.  NAT64 Deployment Scenarios
  contents:
  - "3.  NAT64 Deployment Scenarios\n   DNS64 (see Section 7 of [RFC6147]) provides\
    \ three deployment\n   scenarios, depending on the location of the DNS64 function.\
    \  However,\n   since the publication of that document, other deployment scenarios\n\
    \   and NAT64 use cases need to be considered in actual networks, despite\n  \
    \ the fact that some of them were specifically ruled out by the\n   original NAT64/DNS64\
    \ work.\n   Consequently, the perspective in this document is to broaden those\n\
    \   scenarios and include a few new ones.  However, in order to reduce\n   the\
    \ number of possible cases, we work under the assumption that the\n   service\
    \ provider wants to make sure that all the customers have a\n   service without\
    \ failures.  This means considering the following\n   assumptions for the worst\
    \ possible case:\n   a.  There are hosts that will be validating DNSSEC.\n   b.\
    \  IPv4 literal addresses and non-IPv6-compliant APIs are being\n       used.\n\
    \   c.  There are IPv4-only hosts or applications beyond the IPv6-only\n     \
    \  link (e.g., tethering in cellular networks).\n   This document uses a common\
    \ set of possible \"participant entities\":\n   1.  An IPv6-only access network\
    \ (IPv6).\n   2.  An IPv4-only remote network/server/service (IPv4).\n   3.  A\
    \ NAT64 function (NAT64) in the service provider.\n   4.  A DNS64 function (DNS64)\
    \ in the service provider.\n   5.  An external service provider offering the NAT64\
    \ function and/or\n       the DNS64 function (extNAT64/extDNS64).\n   6.  A 464XLAT\
    \ customer-side translator (CLAT).\n   Note that the nomenclature used in parentheses\
    \ is the one that, for\n   short, will be used in the figures.  Note: for simplicity,\
    \ the boxes\n   in the figures don't mean they are actually a single device; they\n\
    \   represent one or more functions as located in that part of the\n   network\
    \ (i.e., a single box with NAT64 and DNS64 functions can\n   actually be several\
    \ devices, not just one).\n   The possible scenarios are split in two general\
    \ categories:\n   1.  Known to work.\n   2.  Known to work under special conditions.\n"
- title: 3.1.  Known to Work
  contents:
  - "3.1.  Known to Work\n   The scenarios in this category are known to work, as\
    \ there are well-\n   known existing deployments from different operators using\
    \ them.  Each\n   one may have different pros and cons, and in some cases, the\
    \ trade-\n   offs may be acceptable for some operators.\n"
- title: 3.1.1.  Service Provider NAT64 with DNS64
  contents:
  - "3.1.1.  Service Provider NAT64 with DNS64\n   In this scenario (Figure 1), the\
    \ service provider offers both the\n   NAT64 and DNS64 functions.\n   This is\
    \ the most common scenario as originally considered by the\n   designers of NAT64\
    \ [RFC6146] and DNS64 [RFC6147]; however, it may\n   also have the implications\
    \ related to the DNSSEC.\n   This scenario may also fail to solve the issues of\
    \ IPv4 literal\n   addresses, non-IPv6-compliant APIs, or IPv4-only hosts or\n\
    \   applications behind the IPv6-only access network.\n           |   IPv6   +--------+\
    \    +     +--------+   IPv4   |\n                         Figure 1: NAT64 with\
    \ DNS64\n   A similar scenario (Figure 2) exists if the service provider offers\n\
    \   only the DNS64 function; the NAT64 function is provided by an\n   outsourcing\
    \ agreement with an external provider.  All the\n   considerations in the previous\
    \ paragraphs of this section are the\n   same for this sub-case.\n           |\
    \   IPv6   +--------+  DNS64   +\n              Figure 2: NAT64 in an External\
    \ Service Provider\n   This is equivalent to the scenario (Figure 3) where the\
    \ outsourcing\n   agreement with the external provider is to provide both the\
    \ NAT64 and\n   DNS64 functions.  Once more, all the considerations in the previous\n\
    \   paragraphs of this section are the same for this sub-case.\n            |\
    \   IPv6   +-------------+\n            |          |\n            +----------+\n\
    \             Figure 3: NAT64 and DNS64 in an External Provider\n   One additional\
    \ equivalent scenario (Figure 4) exists if the service\n   provider only offers\
    \ the NAT64 function; the DNS64 function is from\n   an external provider with\
    \ or without a specific agreement among them.\n   This is a common scenario today,\
    \ as several \"global\" service\n   providers provide free DNS/DNS64 services,\
    \ and users often configure\n   their DNS manually.  This will only work if both\
    \ the NAT64 and DNS64\n   functions are using the Well-Known Prefix (WKP) or the\
    \ same Network-\n   Specific Prefix (NSP).  All the considerations in the previous\n\
    \   paragraphs of this section are the same for this sub-case.\n   Of course,\
    \ if the external DNS64 function is agreed with the service\n   provider, then\
    \ this case is similar to the ones already depicted in\n   this scenario.\n  \
    \         |   IPv6   +--------+  NAT64   +--------+   IPv4   |\n             \
    \  Figure 4: NAT64; DNS64 by an External Provider\n"
- title: 3.1.2.  Service Provider Offering 464XLAT Using DNS64
  contents:
  - "3.1.2.  Service Provider Offering 464XLAT Using DNS64\n   464XLAT [RFC6877] describes\
    \ an architecture that provides IPv4\n   connectivity across a network, or part\
    \ of it, when it is only\n   natively transporting IPv6.  The need to support\
    \ the CLAT function in\n   order to ensure the IPv4 service continuity in IPv6-only\
    \ cellular\n   deployments has been suggested in [RFC7849].\n   In order to do\
    \ that, 464XLAT [RFC6877] relies on the combination of\n   existing protocols:\n\
    \   1.  The CLAT is a stateless IPv4-to-IPv6 translator (NAT46) [RFC7915]\n  \
    \     implemented in the end-user device or Customer Edge Router (CE),\n     \
    \  located at the \"customer edge\" of the network.\n   2.  The provider-side\
    \ translator (PLAT) is a stateful NAT64\n       [RFC6146], implemented typically\
    \ in the operator network.\n   3.  Optionally, DNS64 [RFC6147] may allow an optimization:\
    \ a single\n       translation at the NAT64, instead of two translations\n   \
    \    (NAT46+NAT64), when the application at the end-user device\n       supports\
    \ IPv6 DNS (uses AAAA Resource Records).\n   Note that even if the provider-side\
    \ translator is referred to as PLAT\n   in the 464XLAT terminology [RFC6877],\
    \ for simplicity and uniformity\n   across this document, it is always referred\
    \ to as NAT64 (function).\n   In this scenario (Figure 5), the service provider\
    \ deploys 464XLAT\n   with a DNS64 function.\n   As a consequence, the DNSSEC\
    \ issues remain, unless the host is doing\n   the address synthesis.\n   464XLAT\
    \ [RFC6877] is a very simple approach to cope with the major\n   NAT64+DNS64 drawback:\
    \ not working with applications or devices that\n   use literal IPv4 addresses\
    \ or non-IPv6-compliant APIs.\n   464XLAT [RFC6877] has been used mainly in IPv6-only\
    \ cellular\n   networks.  By supporting a CLAT function, end-user device\n   applications\
    \ can access IPv4-only end networks / applications,\n   despite the fact that\
    \ those applications or devices use literal IPv4\n   addresses or non-IPv6-compliant\
    \ APIs.\n   In addition, in the cellular network example above, if the User\n\
    \   Equipment (UE) provides tethering, other devices behind it will be\n   presented\
    \ with a traditional Network Address Translation from IPv4 to\n   IPv4 (NAT44),\
    \ in addition to the native IPv6 support, so clearly it\n   allows IPv4-only hosts\
    \ behind the IPv6-only access network.\n   Furthermore, as discussed in [RFC6877],\
    \ 464XLAT can be used in\n   broadband IPv6 network architectures, by implementing\
    \ the CLAT\n   function at the CE.\n   The support of this scenario in a network\
    \ offers two additional\n   advantages:\n   *  DNS load optimization: A CLAT should\
    \ implement a DNS proxy (per\n      [RFC5625]) so that only IPv6-native queries\
    \ and AAAA records are\n      sent to the DNS64 server.  Otherwise, doubling the\
    \ number of\n      queries may impact the DNS infrastructure.\n   *  Connection\
    \ establishment delay optimization: If the UE/CE\n      implementation is detecting\
    \ the presence of a DNS64 function, it\n      may issue only the AAAA query, instead\
    \ of both the AAAA and A\n      queries.\n   In order to understand all the communication\
    \ possibilities, let's\n   assume the following representation of two dual-stack\
    \ (DS) peers:\n       .-----.     | Res./ |   /  IPv6-  \\     .-----.     / \
    \ IPv4-  \\\n      / Local \\    | SOHO  +--(   only    )---( NAT64 )---(   only\
    \    )\n    (   Dual-   )--+ IPv6  |    \\       /  \\              / \\     \
    \  /\n     \\  Stack  /   |  CE   |     `--+--'    \\   .-----.  /   `--+--'\n\
    \      \\ Peer  /    | with  |        |        \\ / Remote\\/       |\n      \
    \ `-----'     | CLAT  |    +---+----+    /         \\    +---+----+\n      Figure\
    \ A: Representation of 464XLAT among Two Peers with DNS64\n   In this case, the\
    \ possible communication paths, among the IPv4/IPv6\n   stacks of both peers,\
    \ are as follows:\n   a.  Local-IPv6 to Remote-IPv6: Regular DNS and native IPv6\
    \ among\n       peers.\n   b.  Local-IPv6 to Remote-IPv4: DNS64 and NAT64 translation.\n\
    \   c.  Local-IPv4 to Remote-IPv6: Not possible unless the CLAT\n       implements\
    \ Explicit Address Mappings (EAMs) as indicated by\n       Section 4.9.  In principle,\
    \ it is not expected that services are\n       deployed in the Internet when using\
    \ IPv6 only, unless there is\n       certainty that peers will also be IPv6 capable.\n\
    \   d.  Local-IPv4 to Remote-IPv4: DNS64, CLAT, and NAT64 translations.\n   e.\
    \  Local-IPv4 to Remote-dual-stack using EAM optimization: If the\n       CLAT\
    \ implements EAM as indicated by Section 4.9, instead of using\n       the path\
    \ d. above, NAT64 translation is avoided, and the flow\n       will use IPv6 from\
    \ the CLAT to the destination.\n   The rest of the figures in this section show\
    \ different choices for\n   placing the different elements.\n           |   IPv6\
    \   |        |  NAT64   |        |          |\n           |   CLAT   |       \
    \ |  DNS64   |        |          |\n                        Figure 5: 464XLAT\
    \ with DNS64\n   A similar scenario (Figure 6) exists if the service provider\
    \ only\n   offers the DNS64 function; the NAT64 function is provided by an\n \
    \  outsourcing agreement with an external provider.  All the\n   considerations\
    \ in the previous paragraphs of this section are the\n   same for this sub-case.\n\
    \           |   IPv6   |        |          |\n           |   CLAT   |        |\
    \          |\n        Figure 6: 464XLAT with DNS64; NAT64 in an External Provider\n\
    \   In addition, it is equivalent to the scenario (Figure 7) where the\n   outsourcing\
    \ agreement with the external provider is to provide both\n   the NAT64 and DNS64\
    \ functions.  Once more, all the considerations in\n   the previous paragraphs\
    \ of this section are the same for this sub-\n   case.\n           |   IPv6  \
    \ |             |\n           |   CLAT   |\n           +----------+\n   Figure\
    \ 7: 464XLAT with DNS64; NAT64 and DNS64 in an External Provider\n"
- title: 3.1.3.  Service Provider Offering 464XLAT, without Using DNS64
  contents:
  - "3.1.3.  Service Provider Offering 464XLAT, without Using DNS64\n   The major\
    \ advantage of this scenario (Figure 8), using 464XLAT\n   without DNS64, is that\
    \ the service provider ensures that DNSSEC is\n   never broken, even if the user\
    \ modifies the DNS configuration.\n   Nevertheless, some CLAT implementations\
    \ or applications may impose an\n   extra delay, which is induced by the dual\
    \ A/AAAA queries (and the\n   wait for both responses), unless Happy Eyeballs\
    \ v2 [RFC8305] is also\n   present.\n   A possible variation of this scenario\
    \ is when DNS64 is used only for\n   the discovery of the NAT64 prefix.  In the\
    \ rest of the document, it\n   is not considered a different scenario because\
    \ once the prefix has\n   been discovered, the DNS64 function is not used, so\
    \ it behaves as if\n   the DNS64 synthesis function is not present.\n   In this\
    \ scenario, as in the previous one, there are no issues related\n   to IPv4-only\
    \ hosts (or IPv4-only applications) behind the IPv6-only\n   access network, as\
    \ neither are related to the usage of IPv4 literals\n   or non-IPv6-compliant\
    \ APIs.\n   The support of this scenario in a network offers one advantage:\n\
    \   *  DNS load optimization: A CLAT should implement a DNS proxy (per\n     \
    \ [RFC5625]) so that only IPv6 native queries are sent to the DNS64\n      server.\
    \  Otherwise, doubling the number of queries may impact the\n      DNS infrastructure.\n\
    \   As indicated earlier, the connection establishment delay optimization\n  \
    \ is achieved only in the case of devices, Operating Systems, or\n   applications\
    \ that use Happy Eyeballs v2 [RFC8305], which is very\n   common.\n   As in the\
    \ previous case, let's assume the representation of two dual-\n   stack peers:\n\
    \       .-----.     | Res./ |   /  IPv6-  \\     .-----.     /  IPv4-  \\\n  \
    \    / Local \\    | SOHO  +--(   only    )---( NAT64 )---(   only    )\n    (\
    \   Dual-   )--+ IPv6  |    \\       /  \\              / \\       /\n     \\\
    \  Stack  /   |  CE   |     `--+--'    \\   .-----.  /   `--+--'\n      \\ Peer\
    \  /    | with  |        |        \\ / Remote\\/       |\n       `-----'     |\
    \ CLAT  |    +---+----+    /         \\    +---+----+\n     Figure B: Representation\
    \ of 464XLAT among Two Peers without DNS64\n   In this case, the possible communication\
    \ paths, among the IPv4/IPv6\n   stacks of both peers, are as follows:\n   a.\
    \  Local-IPv6 to Remote-IPv6: Regular DNS and native IPv6 among\n       peers.\n\
    \   b.  Local-IPv6 to Remote-IPv4: Regular DNS, CLAT, and NAT64\n       translations.\n\
    \   c.  Local-IPv4 to Remote-IPv6: Not possible unless the CLAT\n       implements\
    \ EAM as indicated by Section 4.9.  In principle, it is\n       not expected that\
    \ services are deployed in the Internet using\n       IPv6 only, unless there\
    \ is certainty that peers will also be\n       IPv6-capable.\n   d.  Local-IPv4\
    \ to Remote-IPv4: Regular DNS, CLAT, and NAT64\n       translations.\n   e.  Local-IPv4\
    \ to Remote-dual-stack using EAM optimization: If the\n       CLAT implements\
    \ EAM as indicated by Section 4.9, instead of using\n       the path d. above,\
    \ NAT64 translation is avoided, and the flow\n       will use IPv6 from the CLAT\
    \ to the destination.\n   Notice that this scenario works while the local hosts/applications\n\
    \   are dual stack (which is the current situation) because the\n   connectivity\
    \ from a local IPv6 to a remote IPv4 is not possible\n   without a AAAA synthesis.\
    \  This aspect is important only when there\n   are IPv6-only hosts in the LANs\
    \ behind the CLAT and they need to\n   communicate with remote IPv4-only hosts.\
    \  However, it is not a\n   sensible approach from an Operating System or application\
    \ vendor\n   perspective to provide IPv6-only support unless, similar to case\
    \ c\n   above, there is certainty of peers supporting IPv6 as well.  An\n   approach\
    \ to a solution for this is also presented in [OPT-464XLAT].\n   The following\
    \ figures show different choices for placing the\n   different elements.\n   \
    \        |   IPv6   |        |          |        |          |\n           |  \
    \ CLAT   |        |          |        |          |\n                      Figure\
    \ 8: 464XLAT without DNS64\n   This is equivalent to the scenario (Figure 9) where\
    \ there is an\n   outsourcing agreement with an external provider for the NAT64\n\
    \   function.  All the considerations in the previous paragraphs of this\n   section\
    \ are the same for this sub-case.\n           |   IPv6   |             |\n   \
    \        |   CLAT   |\n           +----------+\n       Figure 9: 464XLAT without\
    \ DNS64; NAT64 in an External Provider\n"
- title: 3.2.  Known to Work under Special Conditions
  contents:
  - "3.2.  Known to Work under Special Conditions\n   The scenarios in this category\
    \ are known not to work unless\n   significant effort is devoted to solving the\
    \ issues or they are\n   intended to solve problems across \"closed\" networks\
    \ instead of as a\n   general Internet access usage.  Even though some of the\
    \ different\n   pros, cons, and trade-offs may be acceptable, operators have\n\
    \   implementation difficulties, as their expectations of NAT64/DNS64 are\n  \
    \ beyond the original intent.\n"
- title: 3.2.1.  Service Provider NAT64 without DNS64
  contents:
  - "3.2.1.  Service Provider NAT64 without DNS64\n   In this scenario (Figure 10),\
    \ the service provider offers a NAT64\n   function; however, there is no DNS64\
    \ function support at all.\n   As a consequence, an IPv6 host in the IPv6-only\
    \ access network will\n   not be able to detect the presence of DNS64 by means\
    \ of [RFC7050] or\n   learn the IPv6 prefix to be used for the NAT64 function.\n\
    \   This can be sorted out as indicated in Section 4.1.1.\n   Regardless, because\
    \ of the lack of the DNS64 function, the IPv6 host\n   will not be able to obtain\
    \ AAAA synthesized records, so the NAT64\n   function becomes useless.\n   An\
    \ exception to this \"useless\" scenario is to manually configure\n   mappings\
    \ between the A records of each of the IPv4-only remote hosts\n   and the corresponding\
    \ AAAA records with the WKP or NSP used by the\n   service-provider NAT64 function,\
    \ as if they were synthesized by a\n   DNS64 function.\n   This mapping could\
    \ be done by several means, typically at the\n   authoritative DNS server or at\
    \ the service-provider resolvers by\n   means of DNS Response Policy Zones (RPZs)\
    \ [DNS-RPZ] or equivalent\n   functionality.  DNS RPZ may have implications in\
    \ DNSSEC if the zone\n   is signed.  Also, if the service provider is using an\
    \ NSP, having the\n   mapping at the authoritative server may create troubles\
    \ for other\n   parties trying to use a different NSP or WKP, unless multiple\
    \ DNS\n   \"views\" (split-DNS) are also being used at the authoritative servers.\n\
    \   Generally, the mappings alternative will only make sense if a few\n   sets\
    \ of IPv4-only remote hosts need to be accessed by a single\n   network (or a\
    \ small number of them), which supports IPv6 only in the\n   access.  This will\
    \ require some kind of mutual agreement for using\n   this procedure; this should\
    \ not be a problem because it won't\n   interfere with Internet use (which is\
    \ a \"closed service\").\n   In any case, this scenario doesn't solve the issue\
    \ of IPv4 literal\n   addresses, non-IPv6-compliant APIs, or IPv4-only hosts within\
    \ that\n   IPv6-only access network.\n           |   IPv6   +--------+  NAT64\
    \   +--------+   IPv4   |\n                       Figure 10: NAT64 without DNS64\n"
- title: 3.2.2.  Service-Provider NAT64; DNS64 in IPv6 Hosts
  contents:
  - "3.2.2.  Service-Provider NAT64; DNS64 in IPv6 Hosts\n   In this scenario (Figure\
    \ 11), the service provider offers the NAT64\n   function but not the DNS64 function.\
    \  However, the IPv6 hosts have a\n   built-in DNS64 function.\n   This may become\
    \ common if the DNS64 function is implemented in all\n   the IPv6 hosts/stacks.\
    \  This is not common at the time of writing but\n   may become more common in\
    \ the near future.  This way, the DNSSEC\n   validation is performed on the A\
    \ record, and then the host can use\n   the DNS64 function in order to use the\
    \ NAT64 function without any\n   DNSSEC issues.\n   This scenario fails to solve\
    \ the issue of IPv4 literal addresses or\n   non-IPv6-compliant APIs, unless the\
    \ IPv6 hosts also support Happy\n   Eyeballs v2 (Section 7.1 of [RFC8305]).\n\
    \   Moreover, this scenario also fails to solve the problem of IPv4-only\n   hosts\
    \ or applications behind the IPv6-only access network.\n           |   IPv6  \
    \ |        |          |        |          |\n           |   DNS64  |        |\
    \          |        |          |\n                   Figure 11: NAT64; DNS64 in\
    \ IPv6 Hosts\n"
- title: 3.2.3.  Service-Provider NAT64; DNS64 in the IPv4-Only Remote Network
  contents:
  - "3.2.3.  Service-Provider NAT64; DNS64 in the IPv4-Only Remote Network\n   In\
    \ this scenario (Figure 12), the service provider offers the NAT64\n   function\
    \ only.  The IPv4-only remote network offers the DNS64\n   function.\n   This\
    \ is not common, and it doesn't make sense that a remote network,\n   not deploying\
    \ IPv6, is providing a DNS64 function.  Like the scenario\n   depicted in Section\
    \ 3.2.1, it will only work if both sides are using\n   the WKP or the same NSP,\
    \ so the same considerations apply.  It can\n   also be tuned to behave as in\
    \ Section 3.1.1.\n   This scenario fails to solve the issue of IPv4 literal addresses\
    \ or\n   non-IPv6-compliant APIs.\n   Moreover, this scenario also fails to solve\
    \ the problem of IPv4-only\n   hosts or applications behind the IPv6-only access\
    \ network.\n           |   IPv6   +--------+  NAT64   +--------+     +    |\n\
    \                 Figure 12: NAT64; DNS64 in IPv4-Only Hosts\n"
- title: 3.3.  Comparing the Scenarios
  contents:
  - "3.3.  Comparing the Scenarios\n   This section compares the different scenarios,\
    \ including possible\n   variations (each one represented in the previous sections\
    \ by a\n   different figure), while considering the following criteria:\n   a.\
    \  DNSSEC: Are there hosts validating DNSSEC?\n   b.  Literal/APIs: Are there\
    \ applications using IPv4 literals or non-\n       IPv6-compliant APIs?\n   c.\
    \  IPv4 only: Are there hosts or applications using IPv4 only?\n   d.  Foreign\
    \ DNS: Does the scenario survive if the user, Operating\n       System, applications,\
    \ or devices change the DNS?\n   e.  DNS load opt. (DNS load optimization): Are\
    \ there extra queries\n       that may impact the DNS infrastructure?\n   f. \
    \ Connect. opt. (connection establishment delay optimization): Is\n       the\
    \ UE/CE only issuing the AAAA query or also the A query and\n       waiting for\
    \ both responses?\n   In the table below, the columns represent each of the scenarios\
    \ from\n   the previous sections by the figure number.  The possible values are\n\
    \   as follows:\n      \"-\"   means the scenario is \"bad\" for that criterion.\n\
    \      \"+\"   means the scenario is \"good\" for that criterion.\n      \"*\"\
    \   means the scenario is \"bad\" for that criterion; however, it\n          \
    \  is typically resolved with the support of Happy Eyeballs v2\n            [RFC8305].\n\
    \   In some cases, \"countermeasures\", alternative or special\n   configurations,\
    \ may be available for the criterion designated as\n   \"bad\".  So, this comparison\
    \ is considering a generic case as a quick\n   comparison guide.  In some cases,\
    \ a \"bad\" criterion is not\n   necessarily a negative aspect; it all depends\
    \ on the specific needs/\n   characteristics of the network where the deployment\
    \ will take place.\n   For instance, in a network that only has IPv6-only hosts\
    \ and apps\n   using DNS and IPv6-compliant APIs, there is no impact using only\n\
    \   NAT64 and DNS64, but if the hosts validate DNSSEC, that criterion is\n   still\
    \ relevant.\n   | Item / Figure | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11\
    \ | 12 |\n   | DNSSEC        | - | - | - | - | - | - | - | + | + | +  | +  | +\
    \  |\n   | Literal/APIs  | - | - | - | - | + | + | + | + | + | -  | -  | -  |\n\
    \   | IPv4-only     | - | - | - | - | + | + | + | + | + | -  | -  | -  |\n   |\
    \ Foreign DNS   | - | - | - | - | + | + | + | + | + | -  | +  | -  |\n   | DNS\
    \ load opt. | + | + | + | + | + | + | + | + | + | +  | +  | +  |\n   | Connect.\
    \ opt. | + | + | + | + | + | + | + | * | * | +  | +  | +  |\n                \
    \       Table 1: Scenario Comparison\n   As a general conclusion, we should note\
    \ if the network must support\n   applications using any of the following:\n \
    \  *  IPv4 literals\n   *  non-IPv6-compliant APIs\n   *  IPv4-only hosts or applications\n\
    \   Then, only the scenarios with 464XLAT, a CLAT function, or equivalent\n  \
    \ built-in local address synthesis features will provide a valid\n   solution.\
    \  Furthermore, those scenarios will also keep working if the\n   DNS configuration\
    \ is modified.  Clearly, depending on if DNS64 is\n   used or not, DNSSEC may\
    \ be broken for those hosts doing DNSSEC\n   validation.\n   All the scenarios\
    \ are good in terms of DNS load optimization, and in\n   the case of 464XLAT,\
    \ it may provide an extra degree of optimization.\n   Finally, all of the scenarios\
    \ are also good in terms of connection\n   establishment delay optimization. \
    \ However, in the case of 464XLAT\n   without DNS64, the usage of Happy Eyeballs\
    \ v2 is required.  This is\n   not an issue as it is commonly available in actual\
    \ Operating Systems.\n"
- title: 4.  Issues to be Considered
  contents:
  - "4.  Issues to be Considered\n   This section reviews the different issues that\
    \ an operator needs to\n   consider for a NAT64/464XLAT deployment, as they may\
    \ develop specific\n   decision points about how to approach that deployment.\n"
- title: 4.1.  DNSSEC Considerations and Possible Approaches
  contents:
  - "4.1.  DNSSEC Considerations and Possible Approaches\n   As indicated in the security\
    \ considerations for DNS64 (see Section 8\n   of [RFC6147]) because DNS64 modifies\
    \ DNS answers and DNSSEC is\n   designed to detect such modifications, DNS64 may\
    \ break DNSSEC.\n   When a device connected to an IPv6-only access network queries\
    \ for a\n   domain name in a signed zone, by means of a recursive name server\n\
    \   that supports DNS64, the result may be a synthesized AAAA record.  In\n  \
    \ that case, if the recursive name server is configured to perform\n   DNSSEC\
    \ validation and has a valid chain of trust to the zone in\n   question, it will\
    \ cryptographically validate the negative response\n   from the authoritative\
    \ name server.  This is the expected DNS64\n   behavior: the recursive name server\
    \ actually \"lies\" to the client\n   device.  However, in most of the cases,\
    \ the client will not notice\n   it, because generally, they don't perform validation\
    \ themselves;\n   instead, they rely on the recursive name servers.\n   In fact,\
    \ a validating DNS64 resolver increases the confidence on the\n   synthetic AAAA,\
    \ as it has validated that a non-synthetic AAAA doesn't\n   exist.  However, if\
    \ the client device is oblivious to NAT64 (the most\n   common case) and performs\
    \ DNSSEC validation on the AAAA record, it\n   will fail as it is a synthesized\
    \ record.\n   The best possible scenario from a DNSSEC point of view is when the\n\
    \   client requests that the DNS64 server perform the DNSSEC validation\n   (by\
    \ setting the DNSSEC OK (DO) bit to 1 and the CD bit to 0).  In\n   this case,\
    \ the DNS64 server validates the data; thus, tampering may\n   only happen inside\
    \ the DNS64 server (which is considered as a trusted\n   part, thus, its likelihood\
    \ is low) or between the DNS64 server and\n   the client.  All other parts of\
    \ the system (including transmission\n   and caching) are protected by DNSSEC\
    \ [Threat-DNS64].\n   Similarly, if the client querying the recursive name server\
    \ is\n   another name server configured to use it as a forwarder, and it is\n\
    \   performing DNSSEC validation, it will also fail on any synthesized\n   AAAA\
    \ record.\n   All those considerations are extensively covered in Sections 3,\
    \ 5.5,\n   and 6.2 of [RFC6147].\n   DNSSEC issues could be avoided if all the\
    \ signed zones provide IPv6\n   connectivity together with the corresponding AAAA\
    \ records.  However,\n   this is out of the control of the operator needing to\
    \ deploy a NAT64\n   function.  This has been proposed already in [DNS-DNSSEC].\n\
    \   An alternative solution, which was considered while developing\n   [RFC6147],\
    \ is that the validators will be DNS64 aware.  Then, they\n   can perform the\
    \ necessary discovery and do their own synthesis.\n   Since that was standardized\
    \ sufficiently early in the validator\n   deployment curve, the expectation was\
    \ that it would be okay to break\n   certain DNSSEC assumptions for networks that\
    \ were stuck and really\n   needing NAT64/DNS64.\n   As already indicated, the\
    \ scenarios in the previous section are\n   simplified to look at the worst possible\
    \ case and for the most\n   perfect approach.  A DNSSEC breach will not happen\
    \ if the end host is\n   not doing validation.\n   The figures in previous studies\
    \ indicate that DNSSEC broken by using\n   DNS64 makes up about 1.7% [About-DNS64]\
    \ of the cases.  However, we\n   can't negate that this may increase as DNSSEC\
    \ deployment grows.\n   Consequently, a decision point for the operator must depend\
    \ on the\n   following question: Do I really care about that percentage of cases\n\
    \   and the impact on my help desk, or can I provide alternative\n   solutions\
    \ for them?  Some possible solutions may be exist, as\n   depicted in the next\
    \ sections.\n"
- title: 4.1.1.  Not Using DNS64
  contents:
  - "4.1.1.  Not Using DNS64\n   One solution is to avoid using DNS64, but as already\
    \ indicated, this\n   is not possible in all the scenarios.\n   The use of DNS64\
    \ is a key component for some networks, in order to\n   comply with traffic performance\
    \ metrics, monitored by some\n   governmental bodies and other institutions [FCC]\
    \ [ARCEP].\n   One drawback of not having a DNS64 on the network side is that\
    \ it's\n   not possible to heuristically discover NAT64 [RFC7050].\n   Consequently,\
    \ an IPv6 host behind the IPv6-only access network will\n   not be able to detect\
    \ the presence of the NAT64 function, nor learn\n   the IPv6 prefix to be used\
    \ for it, unless it is configured by\n   alternative means.\n   The discovery\
    \ of the IPv6 prefix could be solved, as described in\n   [RFC7050], by means\
    \ of adding the relevant AAAA records to the\n   ipv4only.arpa. zone of the service-provider\
    \ recursive servers, i.e.,\n   if using the WKP (64:ff9b::/96):\n            \
    \   ipv4only.arpa.  SOA     . . 0 0 0 0 0\n               ipv4only.arpa.  NS \
    \     .\n               ipv4only.arpa.  AAAA    64:ff9b::192.0.0.170\n       \
    \        ipv4only.arpa.  AAAA    64:ff9b::192.0.0.171\n               ipv4only.arpa.\
    \  A       192.0.0.170\n               ipv4only.arpa.  A       192.0.0.171\n \
    \  An alternative option is the use of DNS RPZ [DNS-RPZ] or equivalent\n   functionalities.\
    \  Note that this may impact DNSSEC if the zone is\n   signed.\n   Another alternative,\
    \ only valid in environments with support from the\n   Port Control Protocol (PCP)\
    \ (for both the hosts or CEs and for the\n   service-provider network), is to\
    \ follow \"Discovering NAT64 IPv6\n   Prefixes Using the Port Control Protocol\
    \ (PCP)\" [RFC7225].\n   Other alternatives may be available in the future.  All\
    \ them are\n   extensively discussed in [RFC7051]; however, due to the deployment\n\
    \   evolution, many considerations from that document have changed.  New\n   options\
    \ are being documented, such as using Router Advertising\n   [PREF64] or DHCPv6\
    \ options [DHCPv6-OPTIONS].\n   Simultaneous support of several of the possible\
    \ approaches is\n   convenient and will ensure that clients with different ways\
    \ to\n   configure the NAT64 prefix successfully obtain it.  This is also\n  \
    \ convenient even if DNS64 is being used.\n   Also of special relevance to this\
    \ section is [IPV4ONLY-ARPA].\n"
- title: 4.1.2.  DNSSEC Validator Aware of DNS64
  contents:
  - "4.1.2.  DNSSEC Validator Aware of DNS64\n   In general, by default, DNS servers\
    \ with DNS64 function will not\n   synthesize AAAA responses if the DO flag was\
    \ set in the query.\n   In this case, since only an A record is available, if\
    \ a CLAT function\n   is present, the CLAT will, as in the case of literal IPv4\
    \ addresses,\n   keep that traffic flow end to end as IPv4 so DNSSEC is not broken.\n\
    \   However, this will not work if a CLAT function is not present because\n  \
    \ the hosts will not be able to use IPv4 (which is the case for all the\n   scenarios\
    \ without 464XLAT).\n"
- title: 4.1.3.  Stub Validator
  contents:
  - "4.1.3.  Stub Validator\n   If the DO flag is set and the client device performs\
    \ DNSSEC\n   validation, and the Checking Disabled (CD) flag is set for a query,\n\
    \   the DNS64 recursive server will not synthesize AAAA responses.  In\n   this\
    \ case, the client could perform the DNSSEC validation with the A\n   record and\
    \ then synthesize the AAAA responses [RFC6052].  For that to\n   be possible,\
    \ the client must have learned the NAT64 prefix beforehand\n   using any of the\
    \ available methods (see [RFC7050], [RFC7225],\n   [PREF64], and [DHCPv6-OPTIONS]).\
    \  This allows the client device to\n   avoid using the DNS64 function and still\
    \ use NAT64 even with DNSSEC.\n   If the end host is IPv4 only, this will not\
    \ work if a CLAT function\n   is not present (which is the case for all scenarios\
    \ without 464XLAT).\n   Instead of a CLAT, some devices or Operating Systems may\
    \ implement an\n   equivalent function by using Bump-in-the-Host [RFC6535] as\
    \ part of\n   Happy Eyeballs v2 (see Section 7.1 of [RFC8305]).  In this case,\
    \ the\n   considerations in the above paragraphs are also applicable.\n"
- title: 4.1.4.  CLAT with DNS Proxy and Validator
  contents:
  - "4.1.4.  CLAT with DNS Proxy and Validator\n   If a CE includes CLAT support and\
    \ also a DNS proxy, as indicated in\n   Section 6.4 of [RFC6877], the CE could\
    \ behave as a stub validator on\n   behalf of the client devices.  Then, following\
    \ the same approach\n   described in Section 4.1.3, the DNS proxy will actually\
    \ \"lie\" to the\n   client devices, which, in most cases, will not be noticed\
    \ unless they\n   perform validation by themselves.  Again, this allows the client\n\
    \   devices to avoid the use of the DNS64 function but to still use NAT64\n  \
    \ with DNSSEC.\n   Once more, this will not work without a CLAT function (which\
    \ is the\n   case for all scenarios without 464XLAT).\n"
- title: 4.1.5.  ACL of Clients
  contents:
  - "4.1.5.  ACL of Clients\n   In cases of dual-stack clients, AAAA queries typically\
    \ take\n   preference over A queries.  If DNS64 is enabled for those clients,\
    \ it\n   will never get A records, even for IPv4-only servers.\n   As a consequence,\
    \ in cases where there are IPv4-only servers, and\n   those are located in the\
    \ path before the NAT64 function, the clients\n   will not be able to reach them.\
    \  If DNSSEC is being used for all\n   those flows, specific addresses or prefixes\
    \ can be left out of the\n   DNS64 synthesis by means of Access Control Lists\
    \ (ACLs).\n   Once more, this will not work without a CLAT function (which is\
    \ the\n   case for all scenarios without 464XLAT).\n"
- title: 4.1.6.  Mapping Out IPv4 Addresses
  contents:
  - "4.1.6.  Mapping Out IPv4 Addresses\n   If there are well-known specific IPv4\
    \ addresses or prefixes using\n   DNSSEC, they can be mapped out of the DNS64\
    \ synthesis.\n   Even if this is not related to DNSSEC, this \"mapping-out\" feature\
    \ is\n   quite commonly used to ensure that addresses [RFC1918] (for example,\n\
    \   used by LAN servers) are not synthesized to AAAA.\n   Once more, this will\
    \ not work without a CLAT function (which is the\n   case for all scenarios without\
    \ 464XLAT).\n"
- title: 4.2.  DNS64 and Reverse Mapping
  contents:
  - "4.2.  DNS64 and Reverse Mapping\n   When a client device using DNS64 tries to\
    \ reverse-map a synthesized\n   IPv6 address, the name server responds with a\
    \ CNAME record that\n   points the domain name used to reverse-map the synthesized\
    \ IPv6\n   address (the one under ip6.arpa) to the domain name corresponding to\n\
    \   the embedded IPv4 address (under in-addr.arpa).\n   This is the expected behavior,\
    \ so no issues need to be considered\n   regarding DNS reverse mapping.\n"
- title: 4.3.  Using 464XLAT with/without DNS64
  contents:
  - "4.3.  Using 464XLAT with/without DNS64\n   In case the client device is IPv6\
    \ only (either because the stack or\n   application is IPv6 only or because it\
    \ is connected via an IPv6-only\n   LAN) and the remote server is IPv4 only (either\
    \ because the stack is\n   IPv4 only or because it is connected via an IPv4-only\
    \ LAN), only\n   NAT64 combined with DNS64 will be able to provide access between\n\
    \   both.  Because DNS64 is then required, DNSSEC validation will only be\n  \
    \ possible if the recursive name server is validating the negative\n   response\
    \ from the authoritative name server, and the client is not\n   performing validation.\n\
    \   Note that at this stage of the transition, it is not expected that\n   applications,\
    \ devices, or Operating Systems are IPv6 only.  It will\n   not be a sensible\
    \ decision for a developer to work on that direction,\n   unless it is clear that\
    \ the deployment scenario fully supports it.\n   On the other hand, an end user\
    \ or enterprise network may decide to\n   run IPv6 only in the LANs.  In case\
    \ there is any chance for\n   applications to be IPv6 only, the Operating System\
    \ may be responsible\n   for either doing a local address synthesis or setting\
    \ up some kind of\n   on-demand VPN (IPv4-in-IPv6), which needs to be supported\
    \ by that\n   network.  This may become very common in enterprise networks, where\n\
    \   \"Unique IPv6 Prefix per Host\" [RFC8273] is supported.\n   However, when\
    \ the client device is dual stack and/or connected in a\n   dual-stack LAN by\
    \ means of a CLAT function (or has a built-in CLAT\n   function), DNS64 is an\
    \ option.\n   1.  With DNS64: If DNS64 is used, most of the IPv4 traffic (except\
    \ if\n       using literal IPv4 addresses or non-IPv6-compliant APIs) will not\n\
    \       use the CLAT and will instead use the IPv6 path, so only one\n       translation\
    \ will be done at the NAT64.  This may break DNSSEC,\n       unless measures as\
    \ described in the previous sections are taken.\n   2.  Without DNS64: If DNS64\
    \ is not used, all the IPv4 traffic will\n       make use of the CLAT, so two\
    \ translations are required (NAT46 at\n       the CLAT and NAT64 at the PLAT),\
    \ which adds some overhead in\n       terms of the extra NAT46 translation.  However,\
    \ this avoids the\n       AAAA synthesis and consequently will never break DNSSEC.\n\
    \   Note that the extra translation, when DNS64 is not used, takes place\n   at\
    \ the CLAT, which means no extra overhead for the operator.\n   However, it adds\
    \ potential extra delays to establish the connections\n   and has no perceptible\
    \ impact for a CE in a broadband network, but it\n   may have some impact on a\
    \ battery-powered device.  The cost for a\n   battery-powered device is possibly\
    \ comparable to the cost when the\n   device is doing a local address synthesis\
    \ (see Section 7.1 of\n   [RFC8305]).\n"
- title: 4.4.  Foreign DNS
  contents:
  - "4.4.  Foreign DNS\n   Clients, devices, or applications in a service-provider\
    \ network may\n   use DNS servers from other networks.  This may be the case if\n\
    \   individual applications use their own DNS server, the Operating\n   System\
    \ itself or even the CE, or combinations of the above.\n   Those \"foreign\" DNS\
    \ servers may not support DNS64; as a consequence,\n   those scenarios that require\
    \ a DNS64 may not work.  However, if a\n   CLAT function is available, the considerations\
    \ in Section 4.3 will\n   apply.\n   If the foreign DNS supports the DNS64 function,\
    \ incorrect\n   configuration parameters may be provided that, for example, cause\
    \ WKP\n   or NSP to become unmatched or result in a case such as the one\n   described\
    \ in Section 3.2.3.\n   Having a CLAT function, even if using foreign DNS without\
    \ a DNS64\n   function, ensures that everything will work, so the CLAT must be\n\
    \   considered to be an advantage despite user configuration errors.  As\n   a\
    \ result, all the traffic will use a double translation (NAT46 at the\n   CLAT\
    \ and NAT64 at the operator network), unless there is support for\n   EAM (Section\
    \ 4.9).\n   An exception is the case where there is a CLAT function at the CE\n\
    \   that is not able to obtain the correct configuration parameters\n   (again,\
    \ causing WKP or NSP to become unmatched).\n   However, it needs to be emphasized\
    \ that if there is no CLAT function\n   (which is the case for all scenarios without\
    \ 464XLAT), an external\n   DNS without DNS64 support will disallow any access\
    \ to IPv4-only\n   destination networks and will not guarantee the correct DNSSEC\n\
    \   validation, so it will behave as in Section 3.2.1.\n   In summary, the consequences\
    \ of using foreign DNS depends on each\n   specific case.  However, in general,\
    \ if a CLAT function is present,\n   most of the time there will not be any issues.\
    \  In the other cases,\n   the access to IPv6-enabled services is still guaranteed\
    \ for\n   IPv6-enabled hosts, but it is not guaranteed for IPv4-only hosts nor\n\
    \   is the access to IPv4-only services for any hosts in the network.\n   The\
    \ causes of \"foreign DNS\" could be classified in three main\n   categories,\
    \ as depicted in the following subsections.\n"
- title: 4.4.1.  Manual Configuration of DNS
  contents:
  - "4.4.1.  Manual Configuration of DNS\n   It is becoming increasingly common that\
    \ end users, or even devices or\n   applications, configure alternative DNS in\
    \ their Operating Systems\n   and sometimes in CEs.\n"
- title: 4.4.2.  DNS Privacy/Encryption Mechanisms
  contents:
  - "4.4.2.  DNS Privacy/Encryption Mechanisms\n   Clients or applications may use\
    \ mechanisms for DNS privacy/\n   encryption, such as DNS over TLS (DoT) [RFC7858],\
    \ DNS over DTLS\n   [RFC8094], DNS queries over HTTPS (DoH) [RFC8484], or DNS\
    \ over QUIC\n   (DoQ) [QUIC-CONNECTIONS].\n   Currently, those DNS privacy/encryption\
    \ options are typically\n   provided by the applications, not the Operating System\
    \ vendors.  At\n   the time this document was written, the DoT and DoH standards\
    \ have\n   declared DNS64 (and consequently NAT64) out of their scope, so an\n\
    \   application using them may break NAT64, unless a correctly configured\n  \
    \ CLAT function is used.\n"
- title: 4.4.3.  Split DNS and VPNs
  contents:
  - "4.4.3.  Split DNS and VPNs\n   When networks or hosts use \"split-DNS\" (also\
    \ called Split Horizon,\n   DNS views, or private DNS), the successful use of\
    \ DNS64 is not\n   guaranteed.  This case is analyzed in Section 4 of [RFC6950].\n\
    \   A similar situation may happen with VPNs that force all the DNS\n   queries\
    \ through the VPN and ignore the operator DNS64 function.\n"
- title: 4.5.  Well-Known Prefix (WKP) vs. Network-Specific Prefix (NSP)
  contents:
  - "4.5.  Well-Known Prefix (WKP) vs. Network-Specific Prefix (NSP)\n   Section 3\
    \ of \"IPv6 Addressing of IPv4/IPv6 Translator\" [RFC6052]\n   discusses some\
    \ considerations that are useful to an operator when\n   deciding if a WKP or\
    \ an NSP should be used.\n   Considering that discussion and other issues, we\
    \ can summarize the\n   possible decision points to as follows:\n   a.  The WKP\
    \ MUST NOT be used to represent non-global IPv4 addresses.\n       If this is\
    \ required because the network to be translated uses\n       non-global addresses,\
    \ then an NSP is required.\n   b.  The WKP MAY appear in interdomain routing tables,\
    \ if the operator\n       provides a NAT64 function to peers.  However, in this\
    \ case,\n       special considerations related to BGP filtering are required,\
    \ and\n       IPv4-embedded IPv6 prefixes longer than the WKP MUST NOT be\n  \
    \     advertised (or accepted) in BGP.  An NSP may be a more\n       appropriate\
    \ option in those cases.\n   c.  If several NAT64s use the same prefix, packets\
    \ from the same flow\n       may be routed to a different NAT64 in case of routing\
    \ changes.\n       This can be avoided by either using different prefixes for\
    \ each\n       NAT64 function or ensuring that all the NAT64s coordinate their\n\
    \       state.  Using an NSP could simplify that.\n   d.  If DNS64 is required\
    \ and users, devices, Operating Systems, or\n       applications may change their\
    \ DNS configuration and deliberately\n       choose an alternative DNS64 function,\
    \ the alternative DNS64 will\n       most likely use the WKP by default.  In that\
    \ case, if an NSP is\n       used by the NAT64 function, clients will not be able\
    \ to use the\n       operator NAT64 function, which will break connectivity to\n\
    \       IPv4-only destinations.\n"
- title: 4.6.  IPv4 Literals and Non-IPv6-Compliant APIs
  contents:
  - "4.6.  IPv4 Literals and Non-IPv6-Compliant APIs\n   A host or application using\
    \ literal IPv4 addresses or older APIs,\n   which aren't IPv6 compliant, behind\
    \ a network with IPv6-only access\n   will not work unless any of the following\
    \ alternatives are provided:\n   *  CLAT (or an equivalent function).\n   *  Happy\
    \ Eyeballs v2 (Section 7.1 of [RFC8305]).\n   *  Bump-in-the-Host [RFC6535] with\
    \ a DNS64 function.\n   Those alternatives will solve the problem for an end host.\
    \  However,\n   if the end host is providing \"tethering\" or an equivalent service\
    \ to\n   other hosts, that needs to be considered as well.  In other words, in\n\
    \   a cellular network, these alternatives resolve the issue for the UE\n   itself,\
    \ but this may not be the case for hosts connected via the\n   tethering.\n  \
    \ Otherwise, the support of 464XLAT is the only valid and complete\n   approach\
    \ to resolve this issue.\n"
- title: 4.7.  IPv4-Only Hosts or Applications
  contents:
  - "4.7.  IPv4-Only Hosts or Applications\n   IPv4-only hosts or an application behind\
    \ a network with IPv6-only\n   access will not work unless a CLAT function is\
    \ present.\n   464XLAT is the only valid approach to resolve this issue.\n"
- title: 4.8.  CLAT Translation Considerations
  contents:
  - "4.8.  CLAT Translation Considerations\n   As described in \"IPv6 Prefix Handling\"\
    \ (see Section 6.3 of\n   [RFC6877]), if the CLAT function can be configured with\
    \ a dedicated\n   /64 prefix for the NAT46 translation, then it will be possible\
    \ to do\n   a more efficient stateless translation.\n   Otherwise, if this dedicated\
    \ prefix is not available, the CLAT\n   function will need to do a stateful translation,\
    \ for example, perform\n   stateful NAT44 for all the IPv4 LAN packets so they\
    \ appear as coming\n   from a single IPv4 address; in turn, the CLAT function\
    \ will perform a\n   stateless translation to a single IPv6 address.\n   A possible\
    \ setup, in order to maximize the CLAT performance, is to\n   configure the dedicated\
    \ translation prefix.  This can be easily\n   achieved automatically, if the broadband\
    \ CE or end-user device is\n   able to obtain a shorter prefix by means of DHCPv6-PD\
    \ [RFC8415] or\n   other alternatives.  The CE can then use a specific /64 for\
    \ the\n   translation.  This is also possible when broadband is provided by a\n\
    \   cellular access.\n   The above recommendation is often not possible for cellular\
    \ networks,\n   when connecting smartphones (as UEs): generally they don't use\n\
    \   DHCPv6-PD [RFC8415].  Instead, a single /64 is provided for each\n   Packet\
    \ Data Protocol (PDP) context, and prefix sharing [RFC6877] is\n   used.  In this\
    \ case, the UEs typically have a build-in CLAT function\n   that is performing\
    \ a stateful NAT44 translation before the stateless\n   NAT46.\n"
- title: 4.9.  EAM Considerations
  contents:
  - "4.9.  EAM Considerations\n   \"Explicit Address Mappings for Stateless IP/ICMP\
    \ Translation\"\n   [RFC7757] provides a way to configure explicit mappings between\
    \ IPv4\n   and IPv6 prefixes of any length.  When this is used, for example, in\n\
    \   a CLAT function, it may provide a simple mechanism in order to avoid\n   traffic\
    \ flows between IPv4-only nodes or applications and dual-stack\n   destinations\
    \ to be translated twice (NAT46 and NAT64), by creating\n   mapping entries with\
    \ the Global Unicast Address (GUA) of the\n   IPv6-reachable destination.  This\
    \ optimization of NAT64 usage is very\n   useful in many scenarios, including\
    \ Content Delivery Networks (CDNs)\n   and caches, as described in [OPT-464XLAT].\n\
    \   In addition, it may also provide a way for IPv4-only nodes or\n   applications\
    \ to communicate with IPv6-only destinations.\n"
- title: 4.10.  Incoming Connections
  contents:
  - "4.10.  Incoming Connections\n   The use of NAT64, in principle, disallows IPv4\
    \ incoming connections,\n   which may still be needed for IPv4-only peer-to-peer\
    \ applications.\n   However, there are several alternatives that resolve this\
    \ issue:\n   a.  Session Traversal Utilities for NAT (STUN) [RFC5389], Traversal\n\
    \       Using Relays around NAT (TURN) [RFC5766], and Interactive\n       Connectivity\
    \ Establishment (ICE) [RFC8445] are commonly used by\n       peer-to-peer applications\
    \ in order to allow incoming connections\n       with IPv4 NAT.  In the case of\
    \ NAT64, they work as well.\n   b.  The Port Control Protocol (PCP) [RFC6887]\
    \ allows a host to\n       control how incoming IPv4 and IPv6 packets are translated\
    \ and\n       forwarded.  A NAT64 may implement PCP to allow this service.\n \
    \  c.  EAM [RFC7757] may also be used in order to configure explicit\n       mappings\
    \ for customers that require them.  This is used, for\n       example, by Stateless\
    \ IP/ICMP Translation for IPv6 Data Center\n       Environments (SIIT-DC) [RFC7755]\
    \ and SIIT-DC Dual Translation\n       Mode (SIIT-DC-DTM) [RFC7756].\n"
- title: 5.  Summary of Deployment Recommendations for NAT64/464XLAT
  contents:
  - "5.  Summary of Deployment Recommendations for NAT64/464XLAT\n   It has been demonstrated\
    \ that NAT64/464XLAT is a valid choice in\n   several scenarios (IPv6-IPv4 and\
    \ IPv4-IPv6-IPv4), being the\n   predominant mechanism in the majority of the\
    \ cellular networks, which\n   account for hundreds of millions of users [ISOC].\
    \  NAT64/464XLAT\n   offer different choices of deployment, depending on each\
    \ network\n   case, needs, and requirements.  Despite that, this document is not\
    \ an\n   explicit recommendation for using this choice versus other IPv4aaS\n\
    \   transition mechanisms.  Instead, this document is a guide that\n   facilitates\
    \ evaluating a possible implementation of NAT64/464XLAT and\n   key decision points\
    \ about specific design considerations for its\n   deployment.\n   Depending on\
    \ the specific requirements of each deployment case, DNS64\n   may be a required\
    \ function, while in other cases, the adverse effects\n   may be counterproductive.\
    \  Similarly, in some cases, a NAT64\n   function, together with a DNS64 function,\
    \ may be a valid solution\n   when there is a certainty that IPv4-only hosts or\
    \ applications do not\n   need to be supported (see Sections 4.6 and 4.7).  However,\
    \ in other\n   cases (i.e., IPv4-only devices or applications that need to be\n\
    \   supported), the limitations of NAT64/DNS64 may indicate that the\n   operator\
    \ needs to look into 464XLAT as a more complete solution.\n   For broadband-managed\
    \ networks (where the CE is provided or\n   suggested/supported by the operator),\
    \ in order to fully support the\n   actual user's needs (i.e., IPv4-only devices\
    \ and applications and the\n   usage of IPv4 literals and non-IPv6-compliant APIs),\
    \ the 464XLAT\n   scenario should be considered.  In that case, it must support\
    \ a CLAT\n   function.\n   If the operator provides DNS services, they may support\
    \ a DNS64\n   function to avoid, as much as possible, breaking DNSSEC.  This will\n\
    \   also increase performance, by reducing the double translation for all\n  \
    \ the IPv4 traffic.  In this case, if the DNS service is offering\n   DNSSEC validation,\
    \ then it must be in such a way that it is aware of\n   the DNS64.  This is considered\
    \ the simpler and safer approach, and it\n   may be combined with other recommendations\
    \ described in this\n   document:\n   *  DNS infrastructure MUST be aware of DNS64\
    \ (Section 4.1.2).\n   *  Devices running CLAT SHOULD follow the indications in\
    \ \"Stub\n      Validator\" (see Section 4.1.3).  However, this may be out of\
    \ the\n      control of the operator.\n   *  CEs SHOULD include a DNS proxy and\
    \ validator (Section 4.1.4).\n   *  \"ACL of Clients\" (see Section 4.1.5) and\
    \ \"Mapping Out IPv4\n      Addresses\" (see Section 4.1.6) MAY be considered\
    \ by operators,\n      depending on their own infrastructure.\n   This \"increased\
    \ performance\" approach has the disadvantage of\n   potentially breaking DNSSEC\
    \ for a small percentage of validating end\n   hosts versus the small impact of\
    \ a double translation taking place in\n   the CE.  If CE performance is not an\
    \ issue, which is the most\n   frequent case, then a much safer approach is to\
    \ not use DNS64 at all,\n   and consequently, ensure that all the IPv4 traffic\
    \ is translated at\n   the CLAT (Section 4.3).\n   If DNS64 is not used, at least\
    \ one of the alternatives described in\n   Section 4.1.1 must be followed in order\
    \ to learn the NAT64 prefix.\n   The operator needs to consider that if the DNS\
    \ configuration is\n   modified (see Sections 4.4, 4.4.2, and 4.4.3), which most\
    \ likely\n   cannot be avoided, a foreign non-DNS64 could be used instead of\n\
    \   configuring a DNS64.  In a scenario with only a NAT64 function, an\n   IPv4-only\
    \ remote host will no longer be accessible.  Instead, it will\n   continue to\
    \ work in the case of 464XLAT.\n   Similar considerations need to be made regarding\
    \ the usage of a NAT64\n   WKP vs. NSP (Section 4.5), as they must match the configuration\
    \ of\n   DNS64.  When using foreign DNS, they may not match.  If there is a\n\
    \   CLAT and the configured foreign DNS is not a DNS64, the network will\n   keep\
    \ working only if other means of learning the NAT64 prefix are\n   available.\n\
    \   For broadband networks, as described in Section 4.8, the CEs\n   supporting\
    \ a CLAT function SHOULD support DHCPv6-PD [RFC8415] or\n   alternative means\
    \ for configuring a shorter prefix.  The CE SHOULD\n   internally reserve one\
    \ /64 for the stateless NAT46 translation.  The\n   operator must ensure that\
    \ the customers are allocated prefixes\n   shorter than /64 in order to support\
    \ this optimization.  One way or\n   another, this is not impacting the performance\
    \ of the operator\n   network.\n   Operators may follow \"Deployment Considerations\"\
    \ (Section 7 of\n   [RFC6877]) for suggestions on how to take advantage of traffic-\n\
    \   engineering requirements.\n   For cellular networks, the considerations regarding\
    \ DNSSEC may appear\n   to be out of scope because UEs' Operating Systems commonly\
    \ don't\n   support DNSSEC.  However, applications running on them may, or it\
    \ may\n   be an Operating System \"built-in\" support in the future.  Moreover,\n\
    \   if those devices offer tethering, other client devices behind the UE\n   may\
    \ be doing the validation; hence, proper DNSSEC support by the\n   operator network\
    \ is relevant.\n   Furthermore, cellular networks supporting 464XLAT [RFC6877]\
    \ and\n   \"Discovery of the IPv6 Prefix Used for IPv6 Address Synthesis\"\n \
    \  [RFC7050] allow a progressive IPv6 deployment, with a single Access\n   Point\
    \ Name (APN) supporting all types of PDP context (IPv4, IPv6, and\n   IPv4v6).\
    \  This approach allows the network to automatically serve\n   every possible\
    \ combination of UEs.\n   If the operator chooses to provide validation for the\
    \ DNS64 prefix\n   discovery, it must follow the advice from \"Validation of Discovered\n\
    \   Pref64::/n\" (see Section 3.1 of [RFC7050]).\n   One last consideration is\
    \ that many networks may have a mix of\n   different complex scenarios at the\
    \ same time; for example, customers\n   that require 464XLAT and those that don't,\
    \ customers that require\n   DNS64 and those that don't, etc.  In general, the\
    \ different issues\n   and the approaches described in this document can be implemented\
    \ at\n   the same time for different customers or parts of the network.  That\n\
    \   mix of approaches doesn't present any problem or incompatibility;\n   they\
    \ work well together as a matter of appropriate and differentiated\n   provisioning.\
    \  In fact, the NAT64/464XLAT approach facilitates an\n   operator offering both\
    \ cellular and broadband services to have a\n   single IPv4aaS for both networks\
    \ while differentiating the deployment\n   key decisions to optimize each case.\
    \  It's even possible to use\n   hybrid CEs that have a main broadband access\
    \ link and a backup via\n   the cellular network.\n   In an ideal world, we could\
    \ safely use DNS64 if the approach proposed\n   in [DNS-DNSSEC] were followed,\
    \ avoiding the cases where DNSSEC may be\n   broken.  However, this will not solve\
    \ the issues related to DNS\n   privacy and split DNS.\n   The only 100% safe\
    \ solution that also resolves all the issues is, in\n   addition to having a CLAT\
    \ function, not using a DNS64 but instead\n   making sure that the hosts have\
    \ a built-in address synthesis feature.\n   Operators could manage to provide\
    \ CEs with the CLAT function;\n   however, the built-in address synthesis feature\
    \ is out of their\n   control.  If the synthesis is provided by either the Operating\
    \ System\n   (via its DNS resolver API) or the application (via its own DNS\n\
    \   resolver) in such way that the prefix used for the NAT64 function is\n   reachable\
    \ for the host, the problem goes away.\n   Whenever feasible, using EAM [RFC7757]\
    \ as indicated in Section 4.9\n   provides a very relevant optimization, avoiding\
    \ double translations.\n   Applications that require incoming connections typically\
    \ provide a\n   means for that already.  However, PCP and EAM, as indicated in\n\
    \   Section 4.10, are valid alternatives, even for creating explicit\n   mappings\
    \ for customers that require them.\n"
- title: 6.  Deployment of 464XLAT/NAT64 in Enterprise Networks
  contents:
  - "6.  Deployment of 464XLAT/NAT64 in Enterprise Networks\n   The recommendations\
    \ in this document can also be used in enterprise\n   networks, campuses, and\
    \ other similar scenarios (including managed\n   end-user networks).\n   This\
    \ includes scenarios where the NAT64 function (and DNS64 function,\n   if available)\
    \ are under the control of that network (or can be\n   configured manually according\
    \ to that network's specific\n   requirements), and there is a need to provide\
    \ IPv6-only access to any\n   part of that network, or it is IPv6 only connected\
    \ to third-party\n   networks.\n   An example is the IETF meeting network itself,\
    \ where both NAT64 and\n   DNS64 functions are provided, presenting in this case\
    \ the same issues\n   as per Section 3.1.1.  If there is a CLAT function in the\
    \ IETF\n   network, then there is no need to use DNS64, and it falls under the\n\
    \   considerations of Section 3.1.3.  Both scenarios have been tested and\n  \
    \ verified already in the IETF network.\n   The following figures represent a\
    \ few of the possible scenarios.\n   Figure 13 provides an example of an IPv6-only\
    \ enterprise network\n   connected with a dual stack to the Internet using local\
    \ NAT64 and\n   DNS64 functions.\n          |       Enterprise Network       \
    \  |\n          | |   IPv6-  |        |  NAT64   | |       |   IPv4   |\n    \
    \      | |   only   +--------+    +     | +-------+     +    |\n          | |\
    \   LANs   |        |  DNS64   | |       |   IPv6   |\n            Figure 13:\
    \ IPv6-Only Enterprise with NAT64 and DNS64\n   Figure 14 provides an example\
    \ of a DS enterprise network connected\n   with DS to the Internet using a CLAT\
    \ function, without a DNS64\n   function.\n          |       Enterprise Network\
    \         |\n          | |   IPv6   |        |          | |       |   IPv4   |\n\
    \          | |   CLAT   |        |          | |       |   IPv6   |\n       Figure\
    \ 14: DS Enterprise with CLAT, DS Internet, without DNS64\n   Finally, Figure\
    \ 15 provides an example of an IPv6-only provider with\n   a NAT64 function, and\
    \ a DS enterprise network by means of their own\n   CLAT function, without a DNS64\
    \ function.\n         |       Enterprise Network         |\n         | |   IPv6\
    \   |        |          | |  IPv6  |          |\n         | |   IPv4   |     \
    \   |          | |  only  |          |\n      Figure 15: DS Enterprise with CLAT\
    \ and IPv6-Only Access, without\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not have new specific security\
    \ considerations\n   beyond those already reported by each of the documents cited.\
    \  For\n   example, DNS64 [RFC6147] already describes the DNSSEC issues.\n   As\
    \ already described in Section 4.4, note that there may be\n   undesirable interactions,\
    \ especially if using VPNs or DNS privacy,\n   which may impact the correct performance\
    \ of DNS64/NAT64.\n   Note that the use of a DNS64 function has privacy considerations\
    \ that\n   are equivalent to regular DNS, and they are located in either the\n\
    \   service provider or an external service provider.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC1918]  Rekhter, Y., Moskowitz, B., Karrenberg,\
    \ D., de Groot, G.\n              J., and E. Lear, \"Address Allocation for Private\n\
    \              Internets\", BCP 5, RFC 1918, DOI 10.17487/RFC1918,\n         \
    \     February 1996, <https://www.rfc-editor.org/info/rfc1918>.\n   [RFC2119]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement\
    \ Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n\
    \              <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC5389]  Rosenberg,\
    \ J., Mahy, R., Matthews, P., and D. Wing,\n              \"Session Traversal\
    \ Utilities for NAT (STUN)\", RFC 5389,\n              DOI 10.17487/RFC5389, October\
    \ 2008,\n              <https://www.rfc-editor.org/info/rfc5389>.\n   [RFC5625]\
    \  Bellis, R., \"DNS Proxy Implementation Guidelines\",\n              BCP 152,\
    \ RFC 5625, DOI 10.17487/RFC5625, August 2009,\n              <https://www.rfc-editor.org/info/rfc5625>.\n\
    \   [RFC5766]  Mahy, R., Matthews, P., and J. Rosenberg, \"Traversal Using\n \
    \             Relays around NAT (TURN): Relay Extensions to Session\n        \
    \      Traversal Utilities for NAT (STUN)\", RFC 5766,\n              DOI 10.17487/RFC5766,\
    \ April 2010,\n              <https://www.rfc-editor.org/info/rfc5766>.\n   [RFC6052]\
    \  Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n              Li,\
    \ \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052,\n              DOI 10.17487/RFC6052,\
    \ October 2010,\n              <https://www.rfc-editor.org/info/rfc6052>.\n  \
    \ [RFC6144]  Baker, F., Li, X., Bao, C., and K. Yin, \"Framework for\n       \
    \       IPv4/IPv6 Translation\", RFC 6144, DOI 10.17487/RFC6144,\n           \
    \   April 2011, <https://www.rfc-editor.org/info/rfc6144>.\n   [RFC6146]  Bagnulo,\
    \ M., Matthews, P., and I. van Beijnum, \"Stateful\n              NAT64: Network\
    \ Address and Protocol Translation from IPv6\n              Clients to IPv4 Servers\"\
    , RFC 6146, DOI 10.17487/RFC6146,\n              April 2011, <https://www.rfc-editor.org/info/rfc6146>.\n\
    \   [RFC6147]  Bagnulo, M., Sullivan, A., Matthews, P., and I. van\n         \
    \     Beijnum, \"DNS64: DNS Extensions for Network Address\n              Translation\
    \ from IPv6 Clients to IPv4 Servers\", RFC 6147,\n              DOI 10.17487/RFC6147,\
    \ April 2011,\n              <https://www.rfc-editor.org/info/rfc6147>.\n   [RFC6535]\
    \  Huang, B., Deng, H., and T. Savolainen, \"Dual-Stack Hosts\n              Using\
    \ \"Bump-in-the-Host\" (BIH)\", RFC 6535,\n              DOI 10.17487/RFC6535,\
    \ February 2012,\n              <https://www.rfc-editor.org/info/rfc6535>.\n \
    \  [RFC6877]  Mawatari, M., Kawashima, M., and C. Byrne, \"464XLAT:\n        \
    \      Combination of Stateful and Stateless Translation\",\n              RFC\
    \ 6877, DOI 10.17487/RFC6877, April 2013,\n              <https://www.rfc-editor.org/info/rfc6877>.\n\
    \   [RFC6887]  Wing, D., Ed., Cheshire, S., Boucadair, M., Penno, R., and\n  \
    \            P. Selkirk, \"Port Control Protocol (PCP)\", RFC 6887,\n        \
    \      DOI 10.17487/RFC6887, April 2013,\n              <https://www.rfc-editor.org/info/rfc6887>.\n\
    \   [RFC7050]  Savolainen, T., Korhonen, J., and D. Wing, \"Discovery of\n   \
    \           the IPv6 Prefix Used for IPv6 Address Synthesis\",\n             \
    \ RFC 7050, DOI 10.17487/RFC7050, November 2013,\n              <https://www.rfc-editor.org/info/rfc7050>.\n\
    \   [RFC7225]  Boucadair, M., \"Discovering NAT64 IPv6 Prefixes Using the\n  \
    \            Port Control Protocol (PCP)\", RFC 7225,\n              DOI 10.17487/RFC7225,\
    \ May 2014,\n              <https://www.rfc-editor.org/info/rfc7225>.\n   [RFC7757]\
    \  Anderson, T. and A. Leiva Popper, \"Explicit Address\n              Mappings\
    \ for Stateless IP/ICMP Translation\", RFC 7757,\n              DOI 10.17487/RFC7757,\
    \ February 2016,\n              <https://www.rfc-editor.org/info/rfc7757>.\n \
    \  [RFC7915]  Bao, C., Li, X., Baker, F., Anderson, T., and F. Gont,\n       \
    \       \"IP/ICMP Translation Algorithm\", RFC 7915,\n              DOI 10.17487/RFC7915,\
    \ June 2016,\n              <https://www.rfc-editor.org/info/rfc7915>.\n   [RFC8174]\
    \  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119\
    \ Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,\
    \ <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8273]  Brzozowski, J. and\
    \ G. Van de Velde, \"Unique IPv6 Prefix\n              per Host\", RFC 8273, DOI\
    \ 10.17487/RFC8273, December 2017,\n              <https://www.rfc-editor.org/info/rfc8273>.\n\
    \   [RFC8305]  Schinazi, D. and T. Pauly, \"Happy Eyeballs Version 2:\n      \
    \        Better Connectivity Using Concurrency\", RFC 8305,\n              DOI\
    \ 10.17487/RFC8305, December 2017,\n              <https://www.rfc-editor.org/info/rfc8305>.\n\
    \   [RFC8375]  Pfister, P. and T. Lemon, \"Special-Use Domain\n              'home.arpa.'\"\
    , RFC 8375, DOI 10.17487/RFC8375, May 2018,\n              <https://www.rfc-editor.org/info/rfc8375>.\n\
    \   [RFC8415]  Mrugalski, T., Siodelski, M., Volz, B., Yourtchenko, A.,\n    \
    \          Richardson, M., Jiang, S., Lemon, T., and T. Winters,\n           \
    \   \"Dynamic Host Configuration Protocol for IPv6 (DHCPv6)\",\n             \
    \ RFC 8415, DOI 10.17487/RFC8415, November 2018,\n              <https://www.rfc-editor.org/info/rfc8415>.\n\
    \   [RFC8445]  Keranen, A., Holmberg, C., and J. Rosenberg, \"Interactive\n  \
    \            Connectivity Establishment (ICE): A Protocol for Network\n      \
    \        Address Translator (NAT) Traversal\", RFC 8445,\n              DOI 10.17487/RFC8445,\
    \ July 2018,\n              <https://www.rfc-editor.org/info/rfc8445>.\n   [RFC8484]\
    \  Hoffman, P. and P. McManus, \"DNS Queries over HTTPS\n              (DoH)\"\
    , RFC 8484, DOI 10.17487/RFC8484, October 2018,\n              <https://www.rfc-editor.org/info/rfc8484>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [About-DNS64]\n              Linkova, J., \"\
    Let's talk about IPv6 DNS64 & DNSSEC\", June\n              2016, <https://blog.apnic.net/2016/06/09/lets-talk-\n\
    \              ipv6-dns64-dnssec/>.\n   [ARCEP]    ARCEP, \"Service client des\
    \ operateurs : les mesures de\n              qualite de service\", April 2018,\
    \ <https://www.arcep.fr/\n              cartes-et-donnees/nos-publications-chiffrees/service-\n\
    \              client-des-operateurs-mesures-de-la-qualite-de-service/\n     \
    \         service-client-des-operateurs-les-mesures-de-qualite-de-\n         \
    \     service.html>.\n   [DHCPv6-OPTIONS]\n              Li, L., Cui, Y., Liu,\
    \ C., Wu, J., Baker, F., and J. Palet,\n              \"DHCPv6 Options for Discovery\
    \ NAT64 Prefixes\", Work in\n              Progress, Internet-Draft, draft-li-intarea-nat64-prefix-\n\
    \              dhcp-option-02, 20 April 2019,\n              <https://tools.ietf.org/html/draft-li-intarea-nat64-\n\
    \              prefix-dhcp-option-02>.\n   [DNS-DNSSEC]\n              Byrne,\
    \ C. and J. Palet, \"IPv6-Ready DNS/DNSSSEC\n              Infrastructure\", Work\
    \ in Progress, Internet-Draft, draft-\n              bp-v6ops-ipv6-ready-dns-dnssec-00,\
    \ 10 October 2018,\n              <https://tools.ietf.org/html/draft-bp-v6ops-ipv6-ready-\n\
    \              dns-dnssec-00>.\n   [DNS-RPZ]  Vixie, P. and V. Schryver, \"DNS\
    \ Response Policy Zones\n              (RPZ)\", Work in Progress, Internet-Draft,\
    \ draft-vixie-\n              dnsop-dns-rpz-00, 23 June 2018,\n              <https://tools.ietf.org/html/draft-vixie-dnsop-dns-rpz-\n\
    \              00>.\n   [DNS64-Benchm]\n              Lencse, G. and Y. Kadobayashi,\
    \ \"Benchmarking DNS64\n              Implementations: Theory and Practice\",\
    \ pp. 61-74, no. 1,\n              vol. 127, Computer Communications,\n      \
    \        DOI 10.1016/j.comcom.2018.05.005, September 2018,\n              <https://www.sciencedirect.com/science/article/pii/\n\
    \              S0140366418302184?via%3Dihub>.\n   [DNS64-BM-Meth]\n          \
    \    Lencse, G., Georgescu, M., and Y. Kadobayashi,\n              \"Benchmarking\
    \ Methodology for DNS64 Servers\", pp. 162-175,\n              no. 1, vol. 109,\
    \ Computer Communications,\n              DOI 10.1016/j.comcom.2017.06.004, September\
    \ 2017,\n              <https://www.sciencedirect.com/science/article/pii/\n \
    \             S0140366416305904?via%3Dihub>.\n   [FCC]      FCC, \"Measuring Broadband\
    \ America Mobile 2013-2018\n              Coarsened Data\", December 2018, <https://www.fcc.gov/\n\
    \              reports-research/reports/measuring-broadband-america/\n       \
    \       measuring-broadband-america-mobile-2013-2018>.\n   [IPV4ONLY-ARPA]\n \
    \             Cheshire, S. and D. Schinazi, \"Special Use Domain Name\n      \
    \        'ipv4only.arpa'\", Work in Progress, Internet-Draft, draft-\n       \
    \       cheshire-sudn-ipv4only-dot-arpa-14, 3 November 2018,\n              <https://tools.ietf.org/html/draft-cheshire-sudn-ipv4only-\n\
    \              dot-arpa-14>.\n   [IPv6-TRANSITION]\n              Lencse, G.,\
    \ Palet, J., Howard, L., Patterson, R., and I.\n              Farrer, \"Pros and\
    \ Cons of IPv6 Transition Technologies for\n              IPv4aaS\", Work in Progress,\
    \ Internet-Draft, draft-lmhp-\n              v6ops-transition-comparison-03, 6\
    \ July 2019,\n              <https://tools.ietf.org/html/draft-lmhp-v6ops-transition-\n\
    \              comparison-03>.\n   [ISOC]     ISOC, \"State of IPv6 Deployment\
    \ 2018\", June 2018,\n              <https://www.internetsociety.org/resources/2018/state-of-\n\
    \              ipv6-deployment-2018/>.\n   [OPT-464XLAT]\n              Palet,\
    \ J. and A. D'Egidio, \"464XLAT Optimization\", Work in\n              Progress,\
    \ Internet-Draft, draft-palet-v6ops-464xlat-opt-\n              cdn-caches-03,\
    \ 8 July 2019, <https://tools.ietf.org/html/\n              draft-palet-v6ops-464xlat-opt-cdn-caches-03>.\n\
    \   [PREF64]   Colitti, L. and J. Linkova, \"Discovering PREF64 in Router\n  \
    \            Advertisements\", Work in Progress, Internet-Draft, draft-\n    \
    \          ietf-6man-ra-pref64-06, 3 October 2019,\n              <https://tools.ietf.org/html/draft-ietf-6man-ra-\n\
    \              pref64-06>.\n   [QUIC-CONNECTIONS]\n              Huitema, C.,\
    \ Shore, M., Mankin, A., Dickinson, S., and J.\n              Iyengar, \"Specification\
    \ of DNS over Dedicated QUIC\n              Connections\", Work in Progress, Internet-Draft,\
    \ draft-\n              huitema-quic-dnsoquic-07, 7 September 2019,\n        \
    \      <https://tools.ietf.org/html/draft-huitema-quic-dnsoquic-\n           \
    \   07>.\n   [RFC6889]  Penno, R., Saxena, T., Boucadair, M., and S. Sivakumar,\n\
    \              \"Analysis of Stateful 64 Translation\", RFC 6889,\n          \
    \    DOI 10.17487/RFC6889, April 2013,\n              <https://www.rfc-editor.org/info/rfc6889>.\n\
    \   [RFC6950]  Peterson, J., Kolkman, O., Tschofenig, H., and B. Aboba,\n    \
    \          \"Architectural Considerations on Application Features in\n       \
    \       the DNS\", RFC 6950, DOI 10.17487/RFC6950, October 2013,\n           \
    \   <https://www.rfc-editor.org/info/rfc6950>.\n   [RFC7051]  Korhonen, J., Ed.\
    \ and T. Savolainen, Ed., \"Analysis of\n              Solution Proposals for\
    \ Hosts to Learn NAT64 Prefix\",\n              RFC 7051, DOI 10.17487/RFC7051,\
    \ November 2013,\n              <https://www.rfc-editor.org/info/rfc7051>.\n \
    \  [RFC7269]  Chen, G., Cao, Z., Xie, C., and D. Binet, \"NAT64\n            \
    \  Deployment Options and Experience\", RFC 7269,\n              DOI 10.17487/RFC7269,\
    \ June 2014,\n              <https://www.rfc-editor.org/info/rfc7269>.\n   [RFC7755]\
    \  Anderson, T., \"SIIT-DC: Stateless IP/ICMP Translation for\n              IPv6\
    \ Data Center Environments\", RFC 7755,\n              DOI 10.17487/RFC7755, February\
    \ 2016,\n              <https://www.rfc-editor.org/info/rfc7755>.\n   [RFC7756]\
    \  Anderson, T. and S. Steffann, \"Stateless IP/ICMP\n              Translation\
    \ for IPv6 Internet Data Center Environments\n              (SIIT-DC): Dual Translation\
    \ Mode\", RFC 7756,\n              DOI 10.17487/RFC7756, February 2016,\n    \
    \          <https://www.rfc-editor.org/info/rfc7756>.\n   [RFC7849]  Binet, D.,\
    \ Boucadair, M., Vizdal, A., Chen, G., Heatley,\n              N., Chandler, R.,\
    \ Michaud, D., Lopez, D., and W. Haeffner,\n              \"An IPv6 Profile for\
    \ 3GPP Mobile Devices\", RFC 7849,\n              DOI 10.17487/RFC7849, May 2016,\n\
    \              <https://www.rfc-editor.org/info/rfc7849>.\n   [RFC7858]  Hu, Z.,\
    \ Zhu, L., Heidemann, J., Mankin, A., Wessels, D.,\n              and P. Hoffman,\
    \ \"Specification for DNS over Transport\n              Layer Security (TLS)\"\
    , RFC 7858, DOI 10.17487/RFC7858, May\n              2016, <https://www.rfc-editor.org/info/rfc7858>.\n\
    \   [RFC8094]  Reddy, T., Wing, D., and P. Patil, \"DNS over Datagram\n      \
    \        Transport Layer Security (DTLS)\", RFC 8094,\n              DOI 10.17487/RFC8094,\
    \ February 2017,\n              <https://www.rfc-editor.org/info/rfc8094>.\n \
    \  [RFC8219]  Georgescu, M., Pislaru, L., and G. Lencse, \"Benchmarking\n    \
    \          Methodology for IPv6 Transition Technologies\", RFC 8219,\n       \
    \       DOI 10.17487/RFC8219, August 2017,\n              <https://www.rfc-editor.org/info/rfc8219>.\n\
    \   [RFC8585]  Palet Martinez, J., Liu, H. M.-H., and M. Kawashima,\n        \
    \      \"Requirements for IPv6 Customer Edge Routers to Support\n            \
    \  IPv4-as-a-Service\", RFC 8585, DOI 10.17487/RFC8585, May\n              2019,\
    \ <https://www.rfc-editor.org/info/rfc8585>.\n   [RIPE-690] RIPE, \"Best Current\
    \ Operational Practice for Operators:\n              IPv6 prefix assignment for\
    \ end-users - persistent vs non-\n              persistent, and what size to choose\"\
    , October 2017,\n              <https://www.ripe.net/publications/docs/ripe-690>.\n\
    \   [Threat-DNS64]\n              Lencse, G. and Y. Kadobayashi, \"Methodology\
    \ for the\n              identification of potential security issues of different\n\
    \              IPv6 transition technologies: Threat analysis of DNS64 and\n  \
    \            stateful NAT64\", pp. 397-411, no. 1, vol. 77, Computers &\n    \
    \          Security, DOI 10.1016/j.cose.2018.04.012, August 2018,\n          \
    \    <https://www.sciencedirect.com/science/article/pii/\n              S0167404818303663?via%3Dihub>.\n"
- title: Appendix A.  Example of Broadband Deployment with 464XLAT
  contents:
  - "Appendix A.  Example of Broadband Deployment with 464XLAT\n   This section summarizes\
    \ how an operator may deploy an IPv6-only\n   network for residential/SOHO customers,\
    \ supporting IPv6 inbound\n   connections, and IPv4-as-a-Service (IPv4aaS) by\
    \ using 464XLAT.\n   Note that an equivalent setup could also be provided for\
    \ enterprise\n   customers.  If they need to support IPv4 inbound connections,\
    \ several\n   mechanisms, depending on specific customer needs, allow it; see\n\
    \   [RFC7757].\n   Conceptually, most of the operator network could be IPv6 only\n\
    \   (represented in the next figures as \"IPv6-only flow\"), or even if\n   part\
    \ of the network is actually dual stack, only IPv6 access is\n   available for\
    \ some customers (i.e., residential customers).  This\n   part of the network\
    \ connects the IPv6-only subscribers (by means of\n   IPv6-only access links)\
    \ to the IPv6 upstream providers and to the\n   IPv4-Internet by means of NAT64\
    \ (PLAT in the 464XLAT terminology).\n   The traffic flow from and back to the\
    \ CE to services available in the\n   IPv6 Internet (or even dual-stack remote\
    \ services, when IPv6 is being\n   used) is purely native IPv6 traffic, so there\
    \ are no special\n   considerations about it.\n   From the DNS perspective, there\
    \ are remote networks with IPv4 only\n   that will typically have only IPv4 DNS\
    \ (DNS/IPv4) or will at least be\n   seen as IPv4 DNS from the CE perspective.\
    \  On the operator side, the\n   DNS, as seen from the CE, is only IPv6 (DNS/IPv6),\
    \ and it also has a\n   DNS64 function.\n   On the customer LANs side, there is\
    \ actually one network, which of\n   course could be split into different segments.\
    \  The most common setup\n   will be dual-stack segments, using global IPv6 addresses\
    \ and\n   [RFC1918] for IPv4, in any regular residential / Small Office, Home\n\
    \   Office (SOHO) IPv4 network.  In the figure below, it is represented\n   as\
    \ tree segments to show that the three possible setups are valid\n   (IPv6 only,\
    \ IPv4 only, and dual stack).\n        / IPv6- \\   |       |    /       \\  \
    \               /       \\\n       (  only   )--+ Res./ |   /  IPv6-  \\    .-----.\
    \    /  IPv4-  \\\n        \\ LANs  /   | SOHO  +--(   only    )--( NAT64 )--(\
    \   only    )\n         .-----.    | IPv6  |    \\       /                 \\\
    \       /\n        / IPv4- \\   |  CE   |     `--+--'                   `--+--'\n\
    \       (  only   )--+ with  |        |                         |\n        \\\
    \ LANs  /   | CLAT  |    +---+----+                +---+----+\n        / Dual-\
    \ \\       |        | DNS64  |\n       (  Stack  )------|        +--------+\n\
    \        \\ LANs  /\n         `-----'\n             Figure 16: CE Setup with Built-In\
    \ CLAT, with DNS64\n   In addition to the regular CE setup, which typically will\
    \ be access-\n   technology dependent, the steps for the CLAT function configuration\n\
    \   can be summarized as follows:\n   1.  Discovery of the PLAT (NAT64) prefix:\
    \ It may be done using\n       [RFC7050], [RFC7225] in those networks where PCP\
    \ is supported, or\n       other alternatives that may be available in the future,\
    \ such as\n       Router Advertising [PREF64] or DHCPv6 options [DHCPv6-OPTIONS].\n\
    \   2.  If the CLAT function allows stateless NAT46 translation, a /64\n     \
    \  from the pool typically provided to the CE by means of DHCPv6-PD\n       [RFC8415]\
    \ needs to be set aside for that translation.  Otherwise,\n       the CLAT is\
    \ forced to perform an intermediate stateful NAT44\n       before the stateless\
    \ NAT46, as described in Section 4.8.\n   A more detailed configuration approach\
    \ is described in [RFC8585].\n   The operator network needs to ensure that the\
    \ correct responses are\n   provided for the discovery of the PLAT prefix.  It\
    \ is highly\n   recommended that [RIPE-690] be followed in order to ensure that\n\
    \   multiple /64s are available, including the one needed for the NAT46\n   stateless\
    \ translation.\n   The operator needs to understand other issues, as described\n\
    \   throughout this document, in order to make relevant decisions.  For\n   example,\
    \ if several NAT64 functions are needed in the context of\n   scalability / high\
    \ availability, an NSP should be considered (see\n   Section 4.5).\n   More complex\
    \ scenarios are possible, for example, if a network offers\n   multiple NAT64\
    \ prefixes, destination-based NAT64 prefixes, etc.\n   If the operator decides\
    \ not to provide a DNS64 function, then this\n   setup will be the same as the\
    \ following figure.  This will also be\n   the setup that will be seen from the\
    \ perspective of the CE, if a\n   foreign DNS is used and consequently is not\
    \ the operator-provided\n   DNS64 function.\n        / IPv6- \\   |       |  \
    \  /       \\                 /       \\\n       (  only   )--+ Res./ |   /  IPv6-\
    \  \\    .-----.    /  IPv4-  \\\n        \\ LANs  /   | SOHO  +--(   only   \
    \ )--( NAT64 )--(   only    )\n         .-----.    | IPv6  |    \\       /   \
    \              \\       /\n        / IPv4- \\   |  CE   |     `--+--'        \
    \           `--+--'\n       (  only   )--+ with  |        |                  \
    \       |\n        \\ LANs  /   | CLAT  |    +---+----+                +---+----+\n\
    \        / Dual- \\       |\n       (  Stack  )------|\n        \\ LANs  /\n \
    \        `-----'\n           Figure 17: CE Setup with Built-In CLAT, without DNS64\n\
    \   In this case, the discovery of the PLAT prefix needs to be arranged\n   as\
    \ indicated in Section 4.1.1.\n   In addition, if the CE doesn't have a built-in\
    \ CLAT function, the\n   customer can choose to set up the IPv6 operator-managed\
    \ CE in bridge\n   mode (and optionally use an external router).  Or, for example,\
    \ if\n   there is an access technology that requires some kind of media\n   converter\
    \ (Optical Network Termination (ONT) for fiber to the home\n   (FTTH), Cable Modem\
    \ for Data-Over-Cable Service Interface\n   Specification (DOCSIS), etc.), the\
    \ complete setup will look like\n   Figure 18.  Obviously, there will be some\
    \ intermediate configuration\n   steps for the bridge, depending on the specific\
    \ access technology/\n   protocols, which should not modify the steps already\
    \ described in the\n   previous cases for the CLAT function configuration.\n \
    \                   | Res./ |   /  IPv6-  \\    .-----.    /  IPv4-  \\\n    \
    \                | SOHO  +--(   only    )--( NAT64 )--(   only    )\n        \
    \            | IPv6  |    \\       /                 \\       /\n            \
    \        |  CE   |     `--+--'                   `--+--'\n                   \
    \ | Bridge|        |                         |\n                        |\n  \
    \       .-----.    +---+---+\n        / IPv6- \\   |       |\n       (  only \
    \  )--+ IPv6  |\n        \\ LANs  /   | Router|\n         `-----'    |       |\n\
    \         .-----.    | with  |\n        / IPv4- \\   | CLAT  |\n       (  only\
    \   )--+       |\n        \\ LANs  /   |       |\n         `-----'    |      \
    \ |\n         .-----.    +---+---+\n        / Dual- \\       |\n       (  Stack\
    \  )------|\n        \\ LANs  /\n         `-----'\n            Figure 18: CE Setup\
    \ with Bridged CLAT, without DNS64\n   Several routers (i.e., the operator-provided\
    \ CE and the downstream\n   user-provided router) that enable simultaneous routing\
    \ and/or CLAT\n   should be avoided to ensure that multiple NAT44 and NAT46 levels\
    \ are\n   not used and that the operation of multiple IPv6 subnets is correct.\n\
    \   In those cases, the use of the Home Networking Control Protocol\n   (HNCP)\
    \ [RFC8375] is suggested.\n   Note that the procedure described here for the CE\
    \ setup can be\n   simplified if the CE follows [RFC8585].\n"
- title: Appendix B.  CLAT Implementation
  contents:
  - "Appendix B.  CLAT Implementation\n   In addition to the regular set of features\
    \ for a CE, a CLAT CE\n   implementation requires support for:\n   *  [RFC7915]\
    \ for the NAT46 function.\n   *  [RFC7050] for the PLAT prefix discovery.\n  \
    \ *  [RFC7225] for the PLAT prefix discovery if PCP is supported.\n   *  [PREF64]\
    \ for the PLAT prefix discovery by means of Router\n      Advertising.\n   * \
    \ [DHCPv6-OPTIONS] for the PLAT prefix discovery by means of DHCP.\n   *  If stateless\
    \ NAT46 is supported, a mechanism to ensure that\n      multiple /64 are available,\
    \ such as DHCPv6-PD [RFC8415], must be\n      used.\n   There are several Open\
    \ Source implementations of CLAT, such as:\n   *  Android: https://github.com/ddrown/android_external_android-clat\n\
    \   *  Jool: https://www.jool.mx\n   *  Linux: https://github.com/toreanderson/clatd\n\
    \   *  OpenWRT: https://git.openwrt.org/?p=openwrt%2Fopenwrt.git&a=search\n  \
    \    &h=refs%2Ftags%2Fv19.07.0-rc1&st=commit&s=464xlat\n   *  VPP: https://git.fd.io/vpp/tree/src/plugins/nat\n"
- title: Appendix C.  Benchmarking
  contents:
  - "Appendix C.  Benchmarking\n   A benchmarking methodology for IPv6 transition\
    \ technologies has been\n   defined in [RFC8219].  NAT64 and 464XLAT are addressed\
    \ among the\n   single- and double-translation technologies, respectively.  DNS64\
    \ is\n   addressed in Section 9, and the methodology is elaborated in\n   [DNS64-BM-Meth]\
    \ of that document.\n   Several documents provide references to benchmarking results,\
    \ for\n   example, for DNS64 [DNS64-Benchm].\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The author would like to acknowledge the inputs of Gabor\
    \ Lencse,\n   Andrew Sullivan, Lee Howard, Barbara Stark, Fred Baker, Mohamed\n\
    \   Boucadair, Alejandro D'Egidio, Dan Wing, Mikael Abrahamsson, and Eric\n  \
    \ Vyncke.\n   Conversations with Marcelo Bagnulo, one of the coauthors of NAT64\
    \ and\n   DNS64, and email correspondence via the IETF mailing lists with Mark\n\
    \   Andrews have been very useful for this work.\n   Work on this document was\
    \ inspired by Christian Huitema, who\n   suggested that DNS64 should never be\
    \ used when deploying CLAT in the\n   IETF network.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jordi Palet Martinez\n   The IPv6 Company\n   Molino de\
    \ la Navata, 75\n   28420 La Navata - Galapagar Madrid\n   Spain\n"
