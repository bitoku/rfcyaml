- title: __initial_text__
  contents:
  - '       Common Misbehavior Against DNS Queries for IPv6 Addresses

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   There is some known misbehavior of DNS authoritative servers when\n\
    \   they are queried for AAAA resource records.  Such behavior can block\n   IPv4\
    \ communication that should actually be available, cause a\n   significant delay\
    \ in name resolution, or even make a denial of\n   service attack.  This memo\
    \ describes details of known cases and\n   discusses their effects.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Many existing DNS clients (resolvers) that support IPv6\
    \ first search\n   for AAAA Resource Records (RRs) of a target host name, and\
    \ then for A\n   RRs of the same name.  This fallback mechanism is based on the\
    \ DNS\n   specifications, which if not obeyed by authoritative servers, can\n\
    \   produce unpleasant results.  In some cases, for example, a web\n   browser\
    \ fails to connect to a web server it could otherwise reach.\n   In the following\
    \ sections, this memo describes some typical cases of\n   such misbehavior and\
    \ its (bad) effects.\n   Note that the misbehavior is not specific to AAAA RRs.\
    \  In fact, all\n   known examples also apply to the cases of queries for MX,\
    \ NS, and SOA\n   RRs.  The authors believe this can be generalized for all types\
    \ of\n   queries other than those for A RRs.  In this memo, however, we\n   concentrate\
    \ on the case for AAAA queries, since the problem is\n   particularly severe for\
    \ resolvers that support IPv6, which thus\n   affects many end users.  Resolvers\
    \ at end users normally send A\n   and/or AAAA queries only, so the problem for\
    \ the other cases is\n   relatively minor.\n"
- title: 2.  Network Model
  contents:
  - "2.  Network Model\n   In this memo, we assume a typical network model of name\
    \ resolution\n   environment using DNS.  It consists of three components: stub\n\
    \   resolvers, caching servers, and authoritative servers.  A stub\n   resolver\
    \ issues a recursive query to a caching server, which then\n   handles the entire\
    \ name resolution procedure recursively.  The\n   caching server caches the result\
    \ of the query and sends the result to\n   the stub resolver.  The authoritative\
    \ servers respond to queries for\n   names for which they have the authority,\
    \ normally in a non-recursive\n   manner.\n"
- title: 3.  Expected Behavior
  contents:
  - "3.  Expected Behavior\n   Suppose that an authoritative server has an A RR but\
    \ has no AAAA RR\n   for a host name.  Then, the server should return a response\
    \ to a\n   query for an AAAA RR of the name with the response code (RCODE) being\n\
    \   0 (indicating no error) and with an empty answer section (see\n   Sections\
    \ 4.3.2 and 6.2.4 of [1]).  Such a response indicates that\n   there is at least\
    \ one RR of a different type than AAAA for the\n   queried name, and the stub\
    \ resolver can then look for A RRs.\n   This way, the caching server can cache\
    \ the fact that the queried name\n   has no AAAA RR (but may have other types\
    \ of RRs), and thus improve\n   the response time to further queries for an AAAA\
    \ RR of the name.\n"
- title: 4.  Problematic Behaviors
  contents:
  - "4.  Problematic Behaviors\n   There are some known cases at authoritative servers\
    \ that do not\n   conform to the expected behavior.  This section describes those\n\
    \   problematic cases.\n"
- title: 4.1.  Ignore Queries for AAAA
  contents:
  - "4.1.  Ignore Queries for AAAA\n   Some authoritative servers seem to ignore queries\
    \ for an AAAA RR,\n   causing a delay at the stub resolver to fall back to a query\
    \ for an A\n   RR.  This behavior may cause a fatal timeout at the resolver or\
    \ at\n   the application that calls the resolver.  Even if the resolver\n   eventually\
    \ falls back, the result can be an unacceptable delay for\n   the application\
    \ user, especially with interactive applications like\n   web browsing.\n"
- title: 4.2.  Return "Name Error"
  contents:
  - "4.2.  Return \"Name Error\"\n   This type of server returns a response with RCODE\
    \ 3 (\"Name Error\") to\n   a query for an AAAA RR, indicating that it does not\
    \ have any RRs of\n   any type for the queried name.\n   With this response, the\
    \ stub resolver may immediately give up and\n   never fall back.  Even if the\
    \ resolver retries with a query for an A\n   RR, the negative response for the\
    \ name has been cached in the caching\n   server, and the caching server will\
    \ simply return the negative\n   response.  As a result, the stub resolver considers\
    \ this to be a\n   fatal error in name resolution.\n   Several examples of this\
    \ behavior are known to the authors.  As of\n   this writing, all have been fixed.\n"
- title: 4.3.  Return Other Erroneous Codes
  contents:
  - "4.3.  Return Other Erroneous Codes\n   Other authoritative servers return a response\
    \ with erroneous response\n   codes other than RCODE 3 (\"Name Error\").  One\
    \ such RCODE is 4 (\"Not\n   Implemented\"), indicating that the servers do not\
    \ support the\n   requested type of query.\n   These cases are less harmful than\
    \ the previous one; if the stub\n   resolver falls back to querying for an A RR,\
    \ the caching server will\n   process the query correctly and return an appropriate\
    \ response.\n   However, these can still cause a serious effect.  There was an\n\
    \   authoritative server implementation that returned RCODE 2 (\"Server\n   failure\"\
    ) to queries for AAAA RRs.  One widely deployed mail server\n   implementation\
    \ with a certain type of resolver library interpreted\n   this result as an indication\
    \ of retry and did not fall back to\n   queries for A RRs, causing message delivery\
    \ failure.\n   If the caching server receives a response with these response codes,\n\
    \   it does not cache the fact that the queried name has no AAAA RR,\n   resulting\
    \ in redundant queries for AAAA RRs in the future.  The\n   behavior will waste\
    \ network bandwidth and increase the load of the\n   authoritative server.\n \
    \  Using RCODE 1 (\"Format error\") would cause a similar effect, though\n   the\
    \ authors have not seen such implementations yet.\n"
- title: 4.4.  Return a Broken Response
  contents:
  - "4.4.  Return a Broken Response\n   Another type of authoritative servers returns\
    \ broken responses to\n   AAAA queries.  Returning a response whose RR type is\
    \ AAAA with the\n   length of the RDATA being 4 bytes is a known behavior of this\n\
    \   category.  The 4-byte data looks like the IPv4 address of the queried\n  \
    \ host name.\n   That is, the RR in the answer section would be described as follows:\n\
    \     www.bad.example. 600 IN AAAA 192.0.2.1\n   which is, of course, bogus (or\
    \ at least meaningless).\n   A widely deployed caching server implementation transparently\
    \ returns\n   the broken response (and caches it) to the stub resolver.  Another\n\
    \   known server implementation parses the response by itself, and sends\n   a\
    \ separate response with RCODE 2 (\"Server failure\").\n   In either case, the\
    \ broken response does not affect queries for an A\n   RR of the same name.  If\
    \ the stub resolver falls back to A queries,\n   it will get an appropriate response.\n\
    \   The latter case, however, causes the same bad effect as that\n   described\
    \ in the previous section: redundant queries for AAAA RRs.\n"
- title: 4.5.  Make Lame Delegation
  contents:
  - "4.5.  Make Lame Delegation\n   Some authoritative servers respond to AAAA queries\
    \ in a way that\n   causes lame delegation.  In this case, the parent zone specifies\
    \ that\n   the authoritative server should have the authority of a zone, but the\n\
    \   server should not return an authoritative response for AAAA queries\n   within\
    \ the zone (i.e., the AA bit in the response is not set).  On\n   the other hand,\
    \ the authoritative server returns an authoritative\n   response for A queries.\n\
    \   When a caching server asks the server for AAAA RRs in the zone, it\n   recognizes\
    \ the delegation is lame, and returns a response with RCODE\n   2 (\"Server failure\"\
    ) to the stub resolver.\n   Furthermore, some caching servers record the authoritative\
    \ server as\n   lame for the zone and will not use it for a certain period of\
    \ time.\n   With this type of caching server, even if the stub resolver falls\n\
    \   back to querying for an A RR, the caching server will simply return a\n  \
    \ response with RCODE 2, since all the servers are known to be \"lame.\"\n   There\
    \ is also an implementation that relaxes the behavior a little\n   bit.  It tries\
    \ to avoid using the lame server, but continues to try\n   it as a last resort.\
    \  With this type of caching server, the stub\n   resolver will get a correct\
    \ response if it falls back after Server\n   failure.  However, this still causes\
    \ redundant AAAA queries, as\n   explained in the previous sections.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The CERT/CC pointed out that the response with\
    \ RCODE 3 (\"Name\n   Error\"), described in Section 4.2, can be used for a denial\
    \ of\n   service attack [2].  The same argument applies to the case of \"lame\n\
    \   delegation\", described in Section 4.5, with a certain type of caching\n \
    \  server.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   Erik Nordmark encouraged the authors to publish this\
    \ document as an\n   RFC.  Akira Kato and Paul Vixie reviewed a preliminary version\
    \ of\n   this document.  Pekka Savola carefully reviewed a previous version\n\
    \   and provided detailed comments.  Bill Fenner, Scott Hollenbeck,\n   Thomas\
    \ Narten, and Alex Zinin reviewed and helped improve the\n   document at the last\
    \ stage for publication.\n"
- title: 7.  Informative References
  contents:
  - "7.  Informative References\n   [1]  Mockapetris, P., \"Domain names - concepts\
    \ and facilities\", STD\n        13, RFC 1034, November 1987.\n   [2]  The CERT\
    \ Coordination Center, \"Incorrect NXDOMAIN responses from\n        AAAA queries\
    \ could cause denial-of-service conditions\",\n        March 2003, <http://www.kb.cert.org/vuls/id/714121>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   MORISHITA Orange Yasuhiro\n   Research and Development\
    \ Department, Japan Registry Services Co.,Ltd.\n   Chiyoda First Bldg. East 13F,\
    \ 3-8-1 Nishi-Kanda\n   Chiyoda-ku, Tokyo  101-0065\n   Japan\n   EMail: yasuhiro@jprs.co.jp\n\
    \   JINMEI Tatuya\n   Corporate Research & Development Center, Toshiba Corporation\n\
    \   1 Komukai Toshiba-cho, Saiwai-ku\n   Kawasaki-shi, Kanagawa  212-8582\n  \
    \ Japan\n   EMail: jinmei@isl.rdc.toshiba.co.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
