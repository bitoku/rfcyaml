- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                 M. Kucherawy, Ed.
  contents:
  - 'Independent Submission                                 M. Kucherawy, Ed.

    '
- title: Domain-based Message Authentication, Reporting, and Conformance (DMARC)
  contents:
  - 'Domain-based Message Authentication, Reporting, and Conformance (DMARC)

    '
- title: Abstract
  contents:
  - "Abstract\n   Domain-based Message Authentication, Reporting, and Conformance\n\
    \   (DMARC) is a scalable mechanism by which a mail-originating\n   organization\
    \ can express domain-level policies and preferences for\n   message validation,\
    \ disposition, and reporting, that a mail-receiving\n   organization can use to\
    \ improve mail handling.\n   Originators of Internet Mail need to be able to associate\
    \ reliable\n   and authenticated domain identifiers with messages, communicate\n\
    \   policies about messages that use those identifiers, and report about\n   mail\
    \ using those identifiers.  These abilities have several benefits:\n   Receivers\
    \ can provide feedback to Domain Owners about the use of\n   their domains; this\
    \ feedback can provide valuable insight about the\n   management of internal operations\
    \ and the presence of external domain\n   name abuse.\n   DMARC does not produce\
    \ or encourage elevated delivery privilege of\n   authenticated email.  DMARC\
    \ is a mechanism for policy distribution\n   that enables increasingly strict\
    \ handling of messages that fail\n   authentication checks, ranging from no action,\
    \ through altered\n   delivery, up to message rejection.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7489.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements ....................................................5\n  \
    \    2.1. High-Level Goals ...........................................5\n    \
    \  2.2. Out of Scope ...............................................6\n      2.3.\
    \ Scalability ................................................6\n      2.4. Anti-Phishing\
    \ ..............................................7\n   3. Terminology and Definitions\
    \ .....................................7\n      3.1. Identifier Alignment .......................................8\n\
    \      3.2. Organizational Domain .....................................11\n  \
    \ 4. Overview .......................................................12\n    \
    \  4.1. Authentication Mechanisms .................................12\n      4.2.\
    \ Key Concepts ..............................................12\n      4.3. Flow\
    \ Diagram ..............................................13\n   5. Use of RFC5322.From\
    \ ............................................15\n   6. Policy .........................................................15\n\
    \      6.1. DMARC Policy Record .......................................16\n  \
    \    6.2. DMARC URIs ................................................16\n    \
    \  6.3. General Record Format .....................................17\n      6.4.\
    \ Formal Definition .........................................21\n      6.5. Domain\
    \ Owner Actions ......................................22\n      6.6. Mail Receiver\
    \ Actions .....................................23\n      6.7. Policy Enforcement\
    \ Considerations .........................27\n   7. DMARC Feedback .................................................28\n\
    \      7.1. Verifying External Destinations ...........................28\n  \
    \    7.2. Aggregate Reports .........................................30\n    \
    \  7.3. Failure Reports ...........................................36\n   8. Minimum\
    \ Implementations ........................................37\n   9. Privacy Considerations\
    \ .........................................38\n      9.1. Data Exposure Considerations\
    \ ..............................38\n      9.2. Report Recipients .........................................39\n\
    \   10. Other Topics ..................................................39\n  \
    \    10.1. Issues Specific to SPF ...................................39\n    \
    \  10.2. DNS Load and Caching .....................................40\n      10.3.\
    \ Rejecting Messages .......................................40\n      10.4. Identifier\
    \ Alignment Considerations ......................41\n      10.5. Interoperability\
    \ Issues ..................................41\n   11. IANA Considerations ...........................................42\n\
    \      11.1. Authentication-Results Method Registry Update ............42\n  \
    \    11.2. Authentication-Results Result Registry Update ............42\n    \
    \  11.3. Feedback Report Header Fields Registry Update ............44\n      11.4.\
    \ DMARC Tag Registry .......................................44\n      11.5. DMARC\
    \ Report Format Registry .............................45\n   12. Security Considerations\
    \ .......................................46\n      12.1. Authentication Methods\
    \ ...................................46\n      12.2. Attacks on Reporting URIs\
    \ ................................46\n      12.3. DNS Security .............................................47\n\
    \      12.4. Display Name Attacks .....................................47\n  \
    \    12.5. External Reporting Addresses .............................48\n    \
    \  12.6. Secure Protocols .........................................48\n   13.\
    \ References ....................................................49\n      13.1.\
    \ Normative References .....................................49\n      13.2. Informative\
    \ References ...................................50\n   Appendix A. Technology\
    \ Considerations .............................52\n     A.1. S/MIME .....................................................52\n\
    \     A.2. Method Exclusion ...........................................53\n  \
    \   A.3. Sender Header Field ........................................53\n    \
    \ A.4. Domain Existence Test ......................................54\n     A.5.\
    \ Issues with ADSP in Operation ..............................54\n     A.6. Organizational\
    \ Domain Discovery Issues .....................55\n   Appendix B. Examples ..............................................56\n\
    \     B.1. Identifier Alignment Examples ..............................56\n  \
    \   B.2. Domain Owner Example .......................................58\n    \
    \ B.3. Mail Receiver Example  .....................................63\n     B.4.\
    \ Utilization of Aggregate Feedback: Example .................64\n     B.5. mailto\
    \ Transport Example ...................................65\n   Appendix C. DMARC\
    \ XML Schema ......................................66\n   Acknowledgements ..................................................73\n\
    \   Authors' Addresses ................................................73\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Sender Policy Framework ([SPF]) and DomainKeys Identified\
    \ Mail\n   ([DKIM]) provide domain-level authentication.  They enable\n   cooperating\
    \ email receivers to detect mail authorized to use the\n   domain name, which\
    \ can permit differential handling.  (A detailed\n   discussion of the threats\
    \ these systems attempt to address can be\n   found in [DKIM-THREATS].)  However,\
    \ there has been no single widely\n   accepted or publicly available mechanism\
    \ to communication of\n   domain-specific message-handling policies for receivers,\
    \ or to\n   request reporting of authentication and disposition of received mail.\n\
    \   Absent the ability to obtain feedback reports, originators who have\n   implemented\
    \ email authentication have difficulty determining how\n   effective their authentication\
    \ is.  As a consequence, use of\n   authentication failures to filter mail typically\
    \ does not succeed.\n   Over time, one-on-one relationships were established between\
    \ select\n   senders and receivers with privately communicated means to assert\n\
    \   policy and receive message traffic and authentication disposition\n   reporting.\
    \  Although these ad hoc practices have been generally\n   successful, they require\
    \ significant manual coordination between\n   parties, and this model does not\
    \ scale for general use on the\n   Internet.\n   This document defines Domain-based\
    \ Message Authentication, Reporting,\n   and Conformance (DMARC), a mechanism\
    \ by which email operators\n   leverage existing authentication and policy advertisement\n\
    \   technologies to enable both message-stream feedback and enforcement\n   of\
    \ policies against unauthenticated email.\n   DMARC allows Domain Owners and receivers\
    \ to collaborate by:\n   1.  Providing receivers with assertions about Domain\
    \ Owners' policies\n   2.  Providing feedback to senders so they can monitor authentication\n\
    \       and judge threats\n   The basic outline of DMARC is as follows:\n   1.\
    \  Domain Owners publish policy assertions about domains via the\n       DNS.\n\
    \   2.  Receivers compare the RFC5322.From address in the mail to the SPF\n  \
    \     and DKIM results, if present, and the DMARC policy in DNS.\n   3.  These\
    \ receivers can use these results to determine how the mail\n       should be\
    \ handled.\n   4.  The receiver sends reports to the Domain Owner or its designee\n\
    \       about mail claiming to be from their domain.\n   Security terms used in\
    \ this document are defined in [SEC-TERMS].\n   DMARC differs from previous approaches\
    \ to policy advertisement (e.g.,\n   [SPF] and [ADSP]) in that:\n   o  Authentication\
    \ technologies are:\n      1.  decoupled from any technology-specific policy mechanisms,\
    \ and\n      2.  used solely to establish reliable per-message domain-level\n\
    \          identifiers.\n   o  Multiple authentication technologies are used to:\n\
    \      1.  reduce the impact of transient authentication errors\n      2.  reduce\
    \ the impact of site-specific configuration errors and\n          deployment gaps\n\
    \      3.  enable more use cases than any individual technology supports\n   \
    \       alone\n   o  Receiver-generated feedback is supported, allowing senders\
    \ to\n      establish confidence in authentication practices.\n   o  The domain\
    \ name extracted from a message's RFC5322.From field is\n      the primary identifier\
    \ in the DMARC mechanism.  This identifier is\n      used in conjunction with\
    \ the results of the underlying\n      authentication technologies to evaluate\
    \ results under DMARC.\n   Experience with DMARC has revealed some issues of interoperability\n\
    \   with email in general that require due consideration before\n   deployment,\
    \ particularly with configurations that can cause mail to\n   be rejected.  These\
    \ are discussed in Section 10.\n"
- title: 2.  Requirements
  contents:
  - "2.  Requirements\n   Specification of DMARC is guided by the following high-level\
    \ goals,\n   security dependencies, detailed requirements, and items that are\n\
    \   documented as out of scope.\n"
- title: 2.1.  High-Level Goals
  contents:
  - "2.1.  High-Level Goals\n   DMARC has the following high-level goals:\n   o  Allow\
    \ Domain Owners to assert the preferred handling of\n      authentication failures,\
    \ for messages purporting to have\n      authorship within the domain.\n   o \
    \ Allow Domain Owners to verify their authentication deployment.\n   o  Minimize\
    \ implementation complexity for both senders and receivers,\n      as well as\
    \ the impact on handling and delivery of legitimate\n      messages.\n   o  Reduce\
    \ the amount of successfully delivered spoofed email.\n   o  Work at Internet\
    \ scale.\n"
- title: 2.2.  Out of Scope
  contents:
  - "2.2.  Out of Scope\n   Several topics and issues are specifically out of scope\
    \ for the\n   initial version of this work.  These include the following:\n  \
    \ o  different treatment of messages that are not authenticated versus\n     \
    \ those that fail authentication;\n   o  evaluation of anything other than RFC5322.From;\n\
    \   o  multiple reporting formats;\n   o  publishing policy other than via the\
    \ DNS;\n   o  reporting or otherwise evaluating other than the last-hop IP\n \
    \     address;\n   o  attacks in the RFC5322.From field, also known as \"display\
    \ name\"\n      attacks;\n   o  authentication of entities other than domains,\
    \ since DMARC is\n      built upon SPF and DKIM, which authenticate domains; and\n\
    \   o  content analysis.\n"
- title: 2.3.  Scalability
  contents:
  - "2.3.  Scalability\n   Scalability is a major issue for systems that need to operate\
    \ in a\n   system as widely deployed as current SMTP email.  For this reason,\n\
    \   DMARC seeks to avoid the need for third parties or pre-sending\n   agreements\
    \ between senders and receivers.  This preserves the\n   positive aspects of the\
    \ current email infrastructure.\n   Although DMARC does not introduce third-party\
    \ senders (namely\n   external agents authorized to send on behalf of an operator)\
    \ to the\n   email-handling flow, it also does not preclude them.  Such third\n\
    \   parties are free to provide services in conjunction with DMARC.\n"
- title: 2.4.  Anti-Phishing
  contents:
  - "2.4.  Anti-Phishing\n   DMARC is designed to prevent bad actors from sending\
    \ mail that claims\n   to come from legitimate senders, particularly senders of\n\
    \   transactional email (official mail that is about business\n   transactions).\
    \  One of the primary uses of this kind of spoofed mail\n   is phishing (enticing\
    \ users to provide information by pretending to\n   be the legitimate service\
    \ requesting the information).  Thus, DMARC\n   is significantly informed by ongoing\
    \ efforts to enact large-scale,\n   Internet-wide anti-phishing measures.\n  \
    \ Although DMARC can only be used to combat specific forms of exact-\n   domain\
    \ spoofing directly, the DMARC mechanism has been found to be\n   useful in the\
    \ creation of reliable and defensible message streams.\n   DMARC does not attempt\
    \ to solve all problems with spoofed or\n   otherwise fraudulent email.  In particular,\
    \ it does not address the\n   use of visually similar domain names (\"cousin domains\"\
    ) or abuse of\n   the RFC5322.From human-readable <display-name>.\n"
- title: 3.  Terminology and Definitions
  contents:
  - "3.  Terminology and Definitions\n   This section defines terms used in the rest\
    \ of the document.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [KEYWORDS].\n   Readers are encouraged to be familiar with the contents of\n\
    \   [EMAIL-ARCH].  In particular, that document defines various roles in\n   the\
    \ messaging infrastructure that can appear the same or separate in\n   various\
    \ contexts.  For example, a Domain Owner could, via the\n   messaging security\
    \ mechanisms on which DMARC is based, delegate the\n   ability to send mail as\
    \ the Domain Owner to a third party with\n   another role.  This document does\
    \ not address the distinctions among\n   such roles; the reader is encouraged\
    \ to become familiar with that\n   material before continuing.\n   The following\
    \ terms are also used:\n   Authenticated Identifiers:  Domain-level identifiers\
    \ that are\n      validated using authentication technologies are referred to\
    \ as\n      \"Authenticated Identifiers\".  See Section 4.1 for details about\n\
    \      the supported mechanisms.\n   Author Domain:  The domain name of the apparent\
    \ author, as extracted\n      from the RFC5322.From field.\n   Domain Owner: \
    \ An entity or organization that owns a DNS domain.  The\n      term \"owns\"\
    \ here indicates that the entity or organization being\n      referenced holds\
    \ the registration of that DNS domain.  Domain\n      Owners range from complex,\
    \ globally distributed organizations, to\n      service providers working on behalf\
    \ of non-technical clients, to\n      individuals responsible for maintaining\
    \ personal domains.  This\n      specification uses this term as analogous to\
    \ an Administrative\n      Management Domain as defined in [EMAIL-ARCH].  It can\
    \ also refer\n      to delegates, such as Report Receivers, when those are outside\
    \ of\n      their immediate management domain.\n   Identifier Alignment:  When\
    \ the domain in the RFC5322.From address\n      matches a domain validated by\
    \ SPF or DKIM (or both), it has\n      Identifier Alignment.\n   Mail Receiver:\
    \  The entity or organization that receives and\n      processes email.  Mail\
    \ Receivers operate one or more Internet-\n      facing Mail Transport Agents\
    \ (MTAs).\n   Organizational Domain:  The domain that was registered with a domain\n\
    \      name registrar.  In the absence of more accurate methods,\n      heuristics\
    \ are used to determine this, since it is not always the\n      case that the\
    \ registered domain name is simply a top-level DNS\n      domain plus one component\
    \ (e.g., \"example.com\", where \"com\" is a\n      top-level domain).  The Organizational\
    \ Domain is determined by\n      applying the algorithm found in Section 3.2.\n\
    \   Report Receiver:  An operator that receives reports from another\n      operator\
    \ implementing the reporting mechanism described in this\n      document.  Such\
    \ an operator might be receiving reports about its\n      own messages, or reports\
    \ about messages related to another\n      operator.  This term applies collectively\
    \ to the system components\n      that receive and process these reports and the\
    \ organizations that\n      operate them.\n"
- title: 3.1.  Identifier Alignment
  contents:
  - "3.1.  Identifier Alignment\n   Email authentication technologies authenticate\
    \ various (and\n   disparate) aspects of an individual message.  For example,\
    \ [DKIM]\n   authenticates the domain that affixed a signature to the message,\n\
    \   while [SPF] can authenticate either the domain that appears in the\n   RFC5321.MailFrom\
    \ (MAIL FROM) portion of [SMTP] or the RFC5321.EHLO/\n   HELO domain, or both.\
    \  These may be different domains, and they are\n   typically not visible to the\
    \ end user.\n   DMARC authenticates use of the RFC5322.From domain by requiring\
    \ that\n   it match (be aligned with) an Authenticated Identifier.  The\n   RFC5322.From\
    \ domain was selected as the central identity of the DMARC\n   mechanism because\
    \ it is a required message header field and therefore\n   guaranteed to be present\
    \ in compliant messages, and most Mail User\n   Agents (MUAs) represent the RFC5322.From\
    \ field as the originator of\n   the message and render some or all of this header\
    \ field's content to\n   end users.\n   Thus, this field is the one used by end\
    \ users to identify the source\n   of the message and therefore is a prime target\
    \ for abuse.  Many\n   high-profile email sources, such as email service providers,\
    \ require\n   that the sending agent have authenticated before email can be\n\
    \   generated.  Thus, for these mailboxes, the mechanism described in\n   this\
    \ document provides recipient end users with strong evidence that\n   the message\
    \ was indeed originated by the agent they associate with\n   that mailbox, if\
    \ the end user knows that these various protections\n   have been provided.\n\
    \   Domain names in this context are to be compared in a case-insensitive\n  \
    \ manner, per [DNS-CASE].\n   It is important to note that Identifier Alignment\
    \ cannot occur with a\n   message that is not valid per [MAIL], particularly one\
    \ with a\n   malformed, absent, or repeated RFC5322.From field, since in that\
    \ case\n   there is no reliable way to determine a DMARC policy that applies to\n\
    \   the message.  Accordingly, DMARC operation is predicated on the input\n  \
    \ being a valid RFC5322 message object, and handling of such\n   non-compliant\
    \ cases is outside of the scope of this specification.\n   Further discussion\
    \ of this can be found in Section 6.6.1.\n   Each of the underlying authentication\
    \ technologies that DMARC takes\n   as input yields authenticated domains as their\
    \ outputs when they\n   succeed.  From the perspective of DMARC, each can be operated\
    \ in a\n   \"strict\" mode or a \"relaxed\" mode.  A Domain Owner would normally\n\
    \   select strict mode if it wanted Mail Receivers to apply DMARC\n   processing\
    \ only to messages bearing an RFC5322.From domain exactly\n   matching the domains\
    \ those mechanisms will verify.  Relaxed mode can\n   be used when the operator\
    \ also wishes to affect message flows bearing\n   subdomains of the verified domains.\n"
- title: 3.1.1.  DKIM-Authenticated Identifiers
  contents:
  - "3.1.1.  DKIM-Authenticated Identifiers\n   DMARC permits Identifier Alignment,\
    \ based on the result of a DKIM\n   authentication, to be strict or relaxed. \
    \ (Note that these are not\n   related to DKIM's \"simple\" and \"relaxed\" canonicalization\
    \ modes.)\n   In relaxed mode, the Organizational Domains of both the [DKIM]-\n\
    \   authenticated signing domain (taken from the value of the \"d=\" tag in\n\
    \   the signature) and that of the RFC5322.From domain must be equal if\n   the\
    \ identifiers are to be considered aligned.  In strict mode, only\n   an exact\
    \ match between both of the Fully Qualified Domain Names\n   (FQDNs) is considered\
    \ to produce Identifier Alignment.\n   To illustrate, in relaxed mode, if a validated\
    \ DKIM signature\n   successfully verifies with a \"d=\" domain of \"example.com\"\
    , and the\n   RFC5322.From address is \"alerts@news.example.com\", the DKIM \"\
    d=\"\n   domain and the RFC5322.From domain are considered to be \"in\n   alignment\"\
    .  In strict mode, this test would fail, since the \"d=\"\n   domain does not\
    \ exactly match the FQDN of the address.\n   However, a DKIM signature bearing\
    \ a value of \"d=com\" would never\n   allow an \"in alignment\" result, as \"\
    com\" should appear on all public\n   suffix lists (see Appendix A.6.1) and therefore\
    \ cannot be an\n   Organizational Domain.\n   Identifier Alignment is required\
    \ because a message can bear a valid\n   signature from any domain, including\
    \ domains used by a mailing list\n   or even a bad actor.  Therefore, merely bearing\
    \ a valid signature is\n   not enough to infer authenticity of the Author Domain.\n\
    \   Note that a single email can contain multiple DKIM signatures, and it\n  \
    \ is considered to be a DMARC \"pass\" if any DKIM signature is aligned\n   and\
    \ verifies.\n"
- title: 3.1.2.  SPF-Authenticated Identifiers
  contents:
  - "3.1.2.  SPF-Authenticated Identifiers\n   DMARC permits Identifier Alignment,\
    \ based on the result of an SPF\n   authentication, to be strict or relaxed.\n\
    \   In relaxed mode, the [SPF]-authenticated domain and RFC5322.From\n   domain\
    \ must have the same Organizational Domain.  In strict mode,\n   only an exact\
    \ DNS domain match is considered to produce Identifier\n   Alignment.\n   Note\
    \ that the RFC5321.HELO identity is not typically used in the\n   context of DMARC\
    \ (except when required to \"fake\" an otherwise null\n   reverse-path), even\
    \ though a \"pure SPF\" implementation according to\n   [SPF] would check that\
    \ identifier.\n   For example, if a message passes an SPF check with an\n   RFC5321.MailFrom\
    \ domain of \"cbg.bounces.example.com\", and the address\n   portion of the RFC5322.From\
    \ field contains \"payments@example.com\",\n   the Authenticated RFC5321.MailFrom\
    \ domain identifier and the\n   RFC5322.From domain are considered to be \"in\
    \ alignment\" in relaxed\n   mode, but not in strict mode.\n"
- title: 3.1.3.  Alignment and Extension Technologies
  contents:
  - "3.1.3.  Alignment and Extension Technologies\n   If in the future DMARC is extended\
    \ to include the use of other\n   authentication mechanisms, the extensions will\
    \ need to allow for\n   domain identifier extraction so that alignment with the\
    \ RFC5322.From\n   domain can be verified.\n"
- title: 3.2.  Organizational Domain
  contents:
  - "3.2.  Organizational Domain\n   The Organizational Domain is determined using\
    \ the following\n   algorithm:\n   1.  Acquire a \"public suffix\" list, i.e.,\
    \ a list of DNS domain names\n       reserved for registrations.  Some country\
    \ Top-Level Domains\n       (TLDs) make specific registration requirements, e.g.,\
    \ the United\n       Kingdom places company registrations under \".co.uk\"; other\
    \ TLDs\n       such as \".com\" appear in the IANA registry of top-level DNS\n\
    \       domains.  A public suffix list is the union of all of these.\n       Appendix\
    \ A.6.1 contains some discussion about obtaining a public\n       suffix list.\n\
    \   2.  Break the subject DNS domain name into a set of \"n\" ordered\n      \
    \ labels.  Number these labels from right to left; e.g., for\n       \"example.com\"\
    , \"com\" would be label 1 and \"example\" would be\n       label 2.\n   3.  Search\
    \ the public suffix list for the name that matches the\n       largest number\
    \ of labels found in the subject DNS domain.  Let\n       that number be \"x\"\
    .\n   4.  Construct a new DNS domain name using the name that matched from\n \
    \      the public suffix list and prefixing to it the \"x+1\"th label from\n \
    \      the subject domain.  This new name is the Organizational Domain.\n   Thus,\
    \ since \"com\" is an IANA-registered TLD, a subject domain of\n   \"a.b.c.d.example.com\"\
    \ would have an Organizational Domain of\n   \"example.com\".\n   The process\
    \ of determining a suffix is currently a heuristic one.  No\n   list is guaranteed\
    \ to be accurate or current.\n"
- title: 4.  Overview
  contents:
  - "4.  Overview\n   This section provides a general overview of the design and operation\n\
    \   of the DMARC environment.\n"
- title: 4.1.  Authentication Mechanisms
  contents:
  - "4.1.  Authentication Mechanisms\n   The following mechanisms for determining\
    \ Authenticated Identifiers\n   are supported in this version of DMARC:\n   o\
    \  [DKIM], which provides a domain-level identifier in the content of\n      the\
    \ \"d=\" tag of a validated DKIM-Signature header field.\n   o  [SPF], which can\
    \ authenticate both the domain found in an [SMTP]\n      HELO/EHLO command (the\
    \ HELO identity) and the domain found in an\n      SMTP MAIL command (the MAIL\
    \ FROM identity).  DMARC uses the result\n      of SPF authentication of the MAIL\
    \ FROM identity.  Section 2.4 of\n      [SPF] describes MAIL FROM processing for\
    \ cases in which the MAIL\n      command has a null path.\n"
- title: 4.2.  Key Concepts
  contents:
  - "4.2.  Key Concepts\n   DMARC policies are published by the Domain Owner, and\
    \ retrieved by\n   the Mail Receiver during the SMTP session, via the DNS.\n \
    \  DMARC's filtering function is based on whether the RFC5322.From field\n   domain\
    \ is aligned with (matches) an authenticated domain name from\n   SPF or DKIM.\
    \  When a DMARC policy is published for the domain name\n   found in the RFC5322.From\
    \ field, and that domain name is not\n   validated through SPF or DKIM, the disposition\
    \ of that message can be\n   affected by that DMARC policy when delivered to a\
    \ participating\n   receiver.\n   It is important to note that the authentication\
    \ mechanisms employed\n   by DMARC authenticate only a DNS domain and do not authenticate\
    \ the\n   local-part of any email address identifier found in a message, nor do\n\
    \   they validate the legitimacy of message content.\n   DMARC's feedback component\
    \ involves the collection of information\n   about received messages claiming\
    \ to be from the Organizational Domain\n   for periodic aggregate reports to the\
    \ Domain Owner.  The parameters\n   and format for such reports are discussed\
    \ in later sections of this\n   document.\n   A DMARC-enabled Mail Receiver might\
    \ also generate per-message reports\n   that contain information related to individual\
    \ messages that fail SPF\n   and/or DKIM.  Per-message failure reports are a useful\
    \ source of\n   information when debugging deployments (if messages can be determined\n\
    \   to be legitimate even though failing authentication) or in analyzing\n   attacks.\
    \  The capability for such services is enabled by DMARC but\n   defined in other\
    \ referenced material such as [AFRF].\n   A message satisfies the DMARC checks\
    \ if at least one of the supported\n   authentication mechanisms:\n   1.  produces\
    \ a \"pass\" result, and\n   2.  produces that result based on an identifier that\
    \ is in alignment,\n       as defined in Section 3.\n"
- title: 4.3.  Flow Diagram
  contents:
  - "4.3.  Flow Diagram\n    +---------------+\n    | Author Domain |< . . . . . .\
    \ . . . . . . . . . . . . . . . . .\n    +---------------+                   \
    \     .           .         .\n        |                                    .\
    \           .         .\n        V                                    V      \
    \     V         .\n    +-----------+     +--------+       +----------+ +----------+\
    \   .\n    |   MSA     |<***>|  DKIM  |       |   DKIM   | |    SPF   |   .\n\
    \    |  Service  |     | Signer |       | Verifier | | Verifier |   .\n    +-----------+\
    \     +--------+       +----------+ +----------+   .\n        |              \
    \                      ^            ^        .\n        |                    \
    \                **************        .\n        V                          \
    \                       *        .\n     +------+        (~~~~~~~~~~~~)      +------+\
    \         *        .\n     | sMTA |------->( other MTAs )----->| rMTA |      \
    \   *        .\n     +------+        (~~~~~~~~~~~~)      +------+         *  \
    \      .\n                                            |             * ........\n\
    \                                            |             * .\n             \
    \                               V             * .\n                          \
    \           +-----------+        V V\n                       +---------+   | \
    \   MDA    |     +----------+\n                       |  User   |<--| Filtering\
    \ |<***>|  DMARC   |\n                       | Mailbox |   |  Engine   |     |\
    \ Verifier |\n                       +---------+   +-----------+     +----------+\n\
    \     MSA = Mail Submission Agent\n     MDA = Mail Delivery Agent\n   The above\
    \ diagram shows a simple flow of messages through a DMARC-\n   aware system. \
    \ Solid lines denote the actual message flow, dotted\n   lines involve DNS queries\
    \ used to retrieve message policy related to\n   the supported message authentication\
    \ schemes, and asterisk lines\n   indicate data exchange between message-handling\
    \ modules and message\n   authentication modules.  \"sMTA\" is the sending MTA,\
    \ and \"rMTA\" is the\n   receiving MTA.\n   In essence, the steps are as follows:\n\
    \   1.   Domain Owner constructs an SPF policy and publishes it in its\n     \
    \   DNS database as per [SPF].  Domain Owner also configures its\n        system\
    \ for DKIM signing as described in [DKIM].  Finally, Domain\n        Owner publishes\
    \ via the DNS a DMARC message-handling policy.\n   2.   Author generates a message\
    \ and hands the message to Domain\n        Owner's designated mail submission\
    \ service.\n   3.   Submission service passes relevant details to the DKIM signing\n\
    \        module in order to generate a DKIM signature to be applied to\n     \
    \   the message.\n   4.   Submission service relays the now-signed message to\
    \ its\n        designated transport service for routing to its intended\n    \
    \    recipient(s).\n   5.   Message may pass through other relays but eventually\
    \ arrives at\n        a recipient's transport service.\n   6.   Recipient delivery\
    \ service conducts SPF and DKIM authentication\n        checks by passing the\
    \ necessary data to their respective\n        modules, each of which requires\
    \ queries to the Author Domain's\n        DNS data (when identifiers are aligned;\
    \ see below).\n   7.   The results of these are passed to the DMARC module along\
    \ with\n        the Author's domain.  The DMARC module attempts to retrieve a\n\
    \        policy from the DNS for that domain.  If none is found, the\n       \
    \ DMARC module determines the Organizational Domain and repeats\n        the attempt\
    \ to retrieve a policy from the DNS.  (This is\n        described in further detail\
    \ in Section 6.6.3.)\n   8.   If a policy is found, it is combined with the Author's\
    \ domain\n        and the SPF and DKIM results to produce a DMARC policy result\
    \ (a\n        \"pass\" or \"fail\") and can optionally cause one of two kinds\
    \ of\n        reports to be generated (not shown).\n   9.   Recipient transport\
    \ service either delivers the message to the\n        recipient inbox or takes\
    \ other local policy action based on the\n        DMARC result (not shown).\n\
    \   10.  When requested, Recipient transport service collects data from\n    \
    \    the message delivery session to be used in providing feedback\n        (see\
    \ Section 7).\n"
- title: 5.  Use of RFC5322.From
  contents:
  - "5.  Use of RFC5322.From\n   One of the most obvious points of security scrutiny\
    \ for DMARC is the\n   choice to focus on an identifier, namely the RFC5322.From\
    \ address,\n   which is part of a body of data that has been trivially forged\n\
    \   throughout the history of email.\n   Several points suggest that it is the\
    \ most correct and safest thing\n   to do in this context:\n   o  Of all the identifiers\
    \ that are part of the message itself, this\n      is the only one guaranteed\
    \ to be present.\n   o  It seems the best choice of an identifier on which to\
    \ focus, as\n      most MUAs display some or all of the contents of that field\
    \ in a\n      manner strongly suggesting those data as reflective of the true\n\
    \      originator of the message.\n   The absence of a single, properly formed\
    \ RFC5322.From field renders\n   the message invalid.  Handling of such a message\
    \ is outside of the\n   scope of this specification.\n   Since the sorts of mail\
    \ typically protected by DMARC participants\n   tend to only have single Authors,\
    \ DMARC participants generally\n   operate under a slightly restricted profile\
    \ of RFC5322 with respect\n   to the expected syntax of this field.  See Section\
    \ 6.6 for details.\n"
- title: 6.  Policy
  contents:
  - "6.  Policy\n   DMARC policies are published by Domain Owners and applied by Mail\n\
    \   Receivers.\n   A Domain Owner advertises DMARC participation of one or more\
    \ of its\n   domains by adding a DNS TXT record (described in Section 6.1) to\n\
    \   those domains.  In doing so, Domain Owners make specific requests of\n   Mail\
    \ Receivers regarding the disposition of messages purporting to be\n   from one\
    \ of the Domain Owner's domains and the provision of feedback\n   about those\
    \ messages.\n   A Domain Owner may choose not to participate in DMARC evaluation\
    \ by\n   Mail Receivers.  In this case, the Domain Owner simply declines to\n\
    \   advertise participation in those schemes.  For example, if the\n   results\
    \ of path authorization checks ought not be considered as part\n   of the overall\
    \ DMARC result for a given Author Domain, then the\n   Domain Owner does not publish\
    \ an SPF policy record that can produce\n   an SPF pass result.\n   A Mail Receiver\
    \ implementing the DMARC mechanism SHOULD make a\n   best-effort attempt to adhere\
    \ to the Domain Owner's published DMARC\n   policy when a message fails the DMARC\
    \ test.  Since email streams can\n   be complicated (due to forwarding, existing\
    \ RFC5322.From\n   domain-spoofing services, etc.), Mail Receivers MAY deviate\
    \ from a\n   Domain Owner's published policy during message processing and SHOULD\n\
    \   make available the fact of and reason for the deviation to the Domain\n  \
    \ Owner via feedback reporting, specifically using the \"PolicyOverride\"\n  \
    \ feature of the aggregate report (see Section 7.2).\n"
- title: 6.1.  DMARC Policy Record
  contents:
  - "6.1.  DMARC Policy Record\n   Domain Owner DMARC preferences are stored as DNS\
    \ TXT records in\n   subdomains named \"_dmarc\".  For example, the Domain Owner\
    \ of\n   \"example.com\" would post DMARC preferences in a TXT record at\n   \"\
    _dmarc.example.com\".  Similarly, a Mail Receiver wishing to query\n   for DMARC\
    \ preferences regarding mail with an RFC5322.From domain of\n   \"example.com\"\
    \ would issue a TXT query to the DNS for the subdomain of\n   \"_dmarc.example.com\"\
    .  The DNS-located DMARC preference data will\n   hereafter be called the \"DMARC\
    \ record\".\n   DMARC's use of the Domain Name Service is driven by DMARC's use\
    \ of\n   domain names and the nature of the query it performs.  The query\n  \
    \ requirement matches with the DNS, for obtaining simple parametric\n   information.\
    \  It uses an established method of storing the\n   information, associated with\
    \ the target domain name, namely an\n   isolated TXT record that is restricted\
    \ to the DMARC context.  Use of\n   the DNS as the query service has the benefit\
    \ of reusing an extremely\n   well-established operations, administration, and\
    \ management\n   infrastructure, rather than creating a new one.\n   Per [DNS],\
    \ a TXT record can comprise several \"character-string\"\n   objects.  Where this\
    \ is the case, the module performing DMARC\n   evaluation MUST concatenate these\
    \ strings by joining together the\n   objects in order and parsing the result\
    \ as a single string.\n"
- title: 6.2.  DMARC URIs
  contents:
  - "6.2.  DMARC URIs\n   [URI] defines a generic syntax for identifying a resource.\
    \  The DMARC\n   mechanism uses this as the format by which a Domain Owner specifies\n\
    \   the destination for the two report types that are supported.\n   The place\
    \ such URIs are specified (see Section 6.3) allows a list of\n   these to be provided.\
    \  A report is normally sent to each listed URI\n   in the order provided by the\
    \ Domain Owner.  Receivers MAY impose a\n   limit on the number of URIs to which\
    \ they will send reports but MUST\n   support the ability to send to at least\
    \ two.  The list of URIs is\n   separated by commas (ASCII 0x2C).\n   Each URI\
    \ can have associated with it a maximum report size that may\n   be sent to it.\
    \  This is accomplished by appending an exclamation\n   point (ASCII 0x21), followed\
    \ by a maximum-size indication, before a\n   separating comma or terminating semicolon.\n\
    \   Thus, a DMARC URI is a URI within which any commas or exclamation\n   points\
    \ are percent-encoded per [URI], followed by an OPTIONAL\n   exclamation point\
    \ and a maximum-size specification, and, if there are\n   additional reporting\
    \ URIs in the list, a comma and the next URI.\n   For example, the URI \"mailto:reports@example.com!50m\"\
    \ would request\n   that a report be sent via email to \"reports@example.com\"\
    \ so long as\n   the report payload does not exceed 50 megabytes.\n   A formal\
    \ definition is provided in Section 6.4.\n"
- title: 6.3.  General Record Format
  contents:
  - "6.3.  General Record Format\n   DMARC records follow the extensible \"tag-value\"\
    \ syntax for DNS-based\n   key records defined in DKIM [DKIM].\n   Section 11\
    \ creates a registry for known DMARC tags and registers the\n   initial set defined\
    \ in this document.  Only tags defined in this\n   document or in later extensions,\
    \ and thus added to that registry, are\n   to be processed; unknown tags MUST\
    \ be ignored.\n   The following tags are introduced as the initial valid DMARC\
    \ tags:\n   adkim:  (plain-text; OPTIONAL; default is \"r\".)  Indicates whether\n\
    \      strict or relaxed DKIM Identifier Alignment mode is required by\n     \
    \ the Domain Owner.  See Section 3.1.1 for details.  Valid values\n      are as\
    \ follows:\n      r: relaxed mode\n      s: strict mode\n   aspf:  (plain-text;\
    \ OPTIONAL; default is \"r\".)  Indicates whether\n      strict or relaxed SPF\
    \ Identifier Alignment mode is required by the\n      Domain Owner.  See Section\
    \ 3.1.2 for details.  Valid values are as\n      follows:\n      r: relaxed mode\n\
    \      s: strict mode\n   fo:  Failure reporting options (plain-text; OPTIONAL;\
    \ default is \"0\")\n      Provides requested options for generation of failure\
    \ reports.\n      Report generators MAY choose to adhere to the requested options.\n\
    \      This tag's content MUST be ignored if a \"ruf\" tag (below) is not\n  \
    \    also specified.  The value of this tag is a colon-separated list\n      of\
    \ characters that indicate failure reporting options as follows:\n      0: Generate\
    \ a DMARC failure report if all underlying\n         authentication mechanisms\
    \ fail to produce an aligned \"pass\"\n         result.\n      1: Generate a DMARC\
    \ failure report if any underlying\n         authentication mechanism produced\
    \ something other than an\n         aligned \"pass\" result.\n      d: Generate\
    \ a DKIM failure report if the message had a signature\n         that failed evaluation,\
    \ regardless of its alignment.  DKIM-\n         specific reporting is described\
    \ in [AFRF-DKIM].\n      s: Generate an SPF failure report if the message failed\
    \ SPF\n         evaluation, regardless of its alignment.  SPF-specific\n     \
    \    reporting is described in [AFRF-SPF].\n   p: Requested Mail Receiver policy\
    \ (plain-text; REQUIRED for policy\n      records).  Indicates the policy to be\
    \ enacted by the Receiver at\n      the request of the Domain Owner.  Policy applies\
    \ to the domain\n      queried and to subdomains, unless subdomain policy is explicitly\n\
    \      described using the \"sp\" tag.  This tag is mandatory for policy\n   \
    \   records only, but not for third-party reporting records (see\n      Section\
    \ 7.1).  Possible values are as follows:\n      none:  The Domain Owner requests\
    \ no specific action be taken\n         regarding delivery of messages.\n    \
    \  quarantine:  The Domain Owner wishes to have email that fails the\n       \
    \  DMARC mechanism check be treated by Mail Receivers as\n         suspicious.\
    \  Depending on the capabilities of the Mail\n         Receiver, this can mean\
    \ \"place into spam folder\", \"scrutinize\n         with additional intensity\"\
    , and/or \"flag as suspicious\".\n      reject:  The Domain Owner wishes for Mail\
    \ Receivers to reject\n         email that fails the DMARC mechanism check.  Rejection\
    \ SHOULD\n         occur during the SMTP transaction.  See Section 10.3 for some\n\
    \         discussion of SMTP rejection methods and their implications.\n   pct:\
    \  (plain-text integer between 0 and 100, inclusive; OPTIONAL;\n      default\
    \ is 100).  Percentage of messages from the Domain Owner's\n      mail stream\
    \ to which the DMARC policy is to be applied.  However,\n      this MUST NOT be\
    \ applied to the DMARC-generated reports, all of\n      which must be sent and\
    \ received unhindered.  The purpose of the\n      \"pct\" tag is to allow Domain\
    \ Owners to enact a slow rollout\n      enforcement of the DMARC mechanism.  The\
    \ prospect of \"all or\n      nothing\" is recognized as preventing many organizations\
    \ from\n      experimenting with strong authentication-based mechanisms.  See\n\
    \      Section 6.6.4 for details.  Note that random selection based on\n     \
    \ this percentage, such as the following pseudocode, is adequate:\n       if (random\
    \ mod 100) < pct then\n         selected = true\n       else\n         selected\
    \ = false\n   rf:  Format to be used for message-specific failure reports (colon-\n\
    \      separated plain-text list of values; OPTIONAL; default is \"afrf\").\n\
    \      The value of this tag is a list of one or more report formats as\n    \
    \  requested by the Domain Owner to be used when a message fails both\n      [SPF]\
    \ and [DKIM] tests to report details of the individual\n      failure.  The values\
    \ MUST be present in the registry of reporting\n      formats defined in Section\
    \ 11; a Mail Receiver observing a\n      different value SHOULD ignore it or MAY\
    \ ignore the entire DMARC\n      record.  For this version, only \"afrf\" (the\
    \ auth-failure report\n      type defined in [AFRF]) is presently supported. \
    \ See Section 7.3\n      for details.  For interoperability, the Authentication\
    \ Failure\n      Reporting Format (AFRF) MUST be supported.\n   ri:  Interval\
    \ requested between aggregate reports (plain-text 32-bit\n      unsigned integer;\
    \ OPTIONAL; default is 86400).  Indicates a\n      request to Receivers to generate\
    \ aggregate reports separated by no\n      more than the requested number of seconds.\
    \  DMARC implementations\n      MUST be able to provide daily reports and SHOULD\
    \ be able to\n      provide hourly reports when requested.  However, anything\
    \ other\n      than a daily report is understood to be accommodated on a best-\n\
    \      effort basis.\n   rua:  Addresses to which aggregate feedback is to be\
    \ sent (comma-\n      separated plain-text list of DMARC URIs; OPTIONAL).  A comma\
    \ or\n      exclamation point that is part of such a DMARC URI MUST be encoded\n\
    \      per Section 2.1 of [URI] so as to distinguish it from the list\n      delimiter\
    \ or an OPTIONAL size limit.  Section 7.1 discusses\n      considerations that\
    \ apply when the domain name of a URI differs\n      from that of the domain advertising\
    \ the policy.  See Section 12.5\n      for additional considerations.  Any valid\
    \ URI can be specified.  A\n      Mail Receiver MUST implement support for a \"\
    mailto:\" URI, i.e.,\n      the ability to send a DMARC report via electronic\
    \ mail.  If not\n      provided, Mail Receivers MUST NOT generate aggregate feedback\n\
    \      reports.  URIs not supported by Mail Receivers MUST be ignored.\n     \
    \ The aggregate feedback report format is described in Section 7.2.\n   ruf: \
    \ Addresses to which message-specific failure information is to\n      be reported\
    \ (comma-separated plain-text list of DMARC URIs;\n      OPTIONAL).  If present,\
    \ the Domain Owner is requesting Mail\n      Receivers to send detailed failure\
    \ reports about messages that\n      fail the DMARC evaluation in specific ways\
    \ (see the \"fo\" tag\n      above).  The format of the message to be generated\
    \ MUST follow the\n      format specified for the \"rf\" tag.  Section 7.1 discusses\n\
    \      considerations that apply when the domain name of a URI differs\n     \
    \ from that of the domain advertising the policy.  A Mail Receiver\n      MUST\
    \ implement support for a \"mailto:\" URI, i.e., the ability to\n      send a\
    \ DMARC report via electronic mail.  If not provided, Mail\n      Receivers MUST\
    \ NOT generate failure reports.  See Section 12.5 for\n      additional considerations.\n\
    \   sp:  Requested Mail Receiver policy for all subdomains (plain-text;\n    \
    \  OPTIONAL).  Indicates the policy to be enacted by the Receiver at\n      the\
    \ request of the Domain Owner.  It applies only to subdomains of\n      the domain\
    \ queried and not to the domain itself.  Its syntax is\n      identical to that\
    \ of the \"p\" tag defined above.  If absent, the\n      policy specified by the\
    \ \"p\" tag MUST be applied for subdomains.\n      Note that \"sp\" will be ignored\
    \ for DMARC records published on\n      subdomains of Organizational Domains due\
    \ to the effect of the\n      DMARC policy discovery mechanism described in Section\
    \ 6.6.3.\n   v: Version (plain-text; REQUIRED).  Identifies the record retrieved\n\
    \      as a DMARC record.  It MUST have the value of \"DMARC1\".  The value\n\
    \      of this tag MUST match precisely; if it does not or it is absent,\n   \
    \   the entire retrieved record MUST be ignored.  It MUST be the first\n     \
    \ tag in the list.\n   A DMARC policy record MUST comply with the formal specification\
    \ found\n   in Section 6.4 in that the \"v\" and \"p\" tags MUST be present and\
    \ MUST\n   appear in that order.  Unknown tags MUST be ignored.  Syntax errors\n\
    \   in the remainder of the record SHOULD be discarded in favor of\n   default\
    \ values (if any) or ignored outright.\n   Note that given the rules of the previous\
    \ paragraph, addition of a\n   new tag into the registered list of tags does not\
    \ itself require a\n   new version of DMARC to be generated (with a corresponding\
    \ change to\n   the \"v\" tag's value), but a change to any existing tags does\
    \ require\n   a new version of DMARC.\n"
- title: 6.4.  Formal Definition
  contents:
  - "6.4.  Formal Definition\n   The formal definition of the DMARC format, using\
    \ [ABNF], is as\n   follows:\n     dmarc-uri       = URI [ \"!\" 1*DIGIT [ \"\
    k\" / \"m\" / \"g\" / \"t\" ] ]\n                       ; \"URI\" is imported\
    \ from [URI]; commas (ASCII\n                       ; 0x2C) and exclamation points\
    \ (ASCII 0x21)\n                       ; MUST be encoded; the numeric portion\
    \ MUST fit\n                       ; within an unsigned 64-bit integer\n     dmarc-record\
    \    = dmarc-version dmarc-sep\n                       [dmarc-request]\n     \
    \                  [dmarc-sep dmarc-srequest]\n                       [dmarc-sep\
    \ dmarc-auri]\n                       [dmarc-sep dmarc-furi]\n               \
    \        [dmarc-sep dmarc-adkim]\n                       [dmarc-sep dmarc-aspf]\n\
    \                       [dmarc-sep dmarc-ainterval]\n                       [dmarc-sep\
    \ dmarc-fo]\n                       [dmarc-sep dmarc-rfmt]\n                 \
    \      [dmarc-sep dmarc-percent]\n                       [dmarc-sep]\n       \
    \                ; components other than dmarc-version and\n                 \
    \      ; dmarc-request may appear in any order\n     dmarc-version   = \"v\" *WSP\
    \ \"=\" *WSP %x44 %x4d %x41 %x52 %x43 %x31\n     dmarc-sep       = *WSP %x3b *WSP\n\
    \     dmarc-request   = \"p\" *WSP \"=\" *WSP\n                       ( \"none\"\
    \ / \"quarantine\" / \"reject\" )\n     dmarc-srequest  = \"sp\" *WSP \"=\" *WSP\n\
    \                       ( \"none\" / \"quarantine\" / \"reject\" )\n     dmarc-auri\
    \      = \"rua\" *WSP \"=\" *WSP\n                       dmarc-uri *(*WSP \",\"\
    \ *WSP dmarc-uri)\n     dmarc-furi      = \"ruf\" *WSP \"=\" *WSP\n          \
    \             dmarc-uri *(*WSP \",\" *WSP dmarc-uri)\n     dmarc-adkim     = \"\
    adkim\" *WSP \"=\" *WSP\n                       ( \"r\" / \"s\" )\n     dmarc-aspf\
    \      = \"aspf\" *WSP \"=\" *WSP\n                       ( \"r\" / \"s\" )\n\
    \     dmarc-ainterval = \"ri\" *WSP \"=\" *WSP 1*DIGIT\n     dmarc-fo        =\
    \ \"fo\" *WSP \"=\" *WSP\n                       ( \"0\" / \"1\" / \"d\" / \"\
    s\" )\n                       *(*WSP \":\" *WSP ( \"0\" / \"1\" / \"d\" / \"s\"\
    \ ))\n     dmarc-rfmt      = \"rf\"  *WSP \"=\" *WSP Keyword *(*WSP \":\" Keyword)\n\
    \                       ; registered reporting formats only\n     dmarc-percent\
    \   = \"pct\" *WSP \"=\" *WSP\n                       1*3DIGIT\n   \"Keyword\"\
    \ is imported from Section 4.1.2 of [SMTP].\n   A size limitation in a dmarc-uri,\
    \ if provided, is interpreted as a\n   count of units followed by an OPTIONAL\
    \ unit size (\"k\" for kilobytes,\n   \"m\" for megabytes, \"g\" for gigabytes,\
    \ \"t\" for terabytes).  Without a\n   unit, the number is presumed to be a basic\
    \ byte count.  Note that the\n   units are considered to be powers of two; a kilobyte\
    \ is 2^10, a\n   megabyte is 2^20, etc.\n"
- title: 6.5.  Domain Owner Actions
  contents:
  - "6.5.  Domain Owner Actions\n   To implement the DMARC mechanism, the only action\
    \ required of a\n   Domain Owner is the creation of the DMARC policy record in\
    \ the DNS.\n   However, in order to make meaningful use of DMARC, a Domain Owner\n\
    \   must at minimum either establish an address to receive reports, or\n   deploy\
    \ authentication technologies and ensure Identifier Alignment.\n   Most Domain\
    \ Owners will want to do both.\n   DMARC reports will be of significant size,\
    \ and the addresses that\n   receive them are publicly visible, so we encourage\
    \ Domain Owners to\n   set up dedicated email addresses to receive and process\
    \ reports, and\n   to deploy abuse countermeasures on those email addresses as\n\
    \   appropriate.\n   Authentication technologies are discussed in [DKIM] (see\
    \ also\n   [DKIM-OVERVIEW] and [DKIM-DEPLOYMENT]) and [SPF].\n"
- title: 6.6.  Mail Receiver Actions
  contents:
  - "6.6.  Mail Receiver Actions\n   This section describes receiver actions in the\
    \ DMARC environment.\n"
- title: 6.6.1.  Extract Author Domain
  contents:
  - "6.6.1.  Extract Author Domain\n   The domain in the RFC5322.From field is extracted\
    \ as the domain to be\n   evaluated by DMARC.  If the domain is encoded with UTF-8,\
    \ the domain\n   name must be converted to an A-label, as described in Section\
    \ 2.3 of\n   [IDNA], for further processing.\n   In order to be processed by DMARC,\
    \ a message typically needs to\n   contain exactly one RFC5322.From domain (a\
    \ single From: field with a\n   single domain in it).  Not all messages meet this\
    \ requirement, and\n   handling of them is outside of the scope of this document.\
    \  Typical\n   exceptions, and the way they have been historically handled by\
    \ DMARC\n   participants, are as follows:\n   o  Messages with multiple RFC5322.From\
    \ fields are typically rejected,\n      since that form is forbidden under RFC\
    \ 5322 [MAIL];\n   o  Messages bearing a single RFC5322.From field containing\
    \ multiple\n      addresses (and, thus, multiple domain names to be evaluated)\
    \ are\n      typically rejected because the sorts of mail normally protected by\n\
    \      DMARC do not use this format;\n   o  Messages that have no RFC5322.From\
    \ field at all are typically\n      rejected, since that form is forbidden under\
    \ RFC 5322 [MAIL];\n   o  Messages with an RFC5322.From field that contains no\
    \ meaningful\n      domains, such as RFC 5322 [MAIL]'s \"group\" syntax, are typically\n\
    \      ignored.\n   The case of a syntactically valid multi-valued RFC5322.From\
    \ field\n   presents a particular challenge.  The process in this case is to\n\
    \   apply the DMARC check using each of those domains found in the\n   RFC5322.From\
    \ field as the Author Domain and apply the most strict\n   policy selected among\
    \ the checks that fail.\n"
- title: 6.6.2.  Determine Handling Policy
  contents:
  - "6.6.2.  Determine Handling Policy\n   To arrive at a policy for an individual\
    \ message, Mail Receivers MUST\n   perform the following actions or their semantic\
    \ equivalents.\n   Steps 2-4 MAY be done in parallel, whereas steps 5 and 6 require\n\
    \   input from previous steps.\n   The steps are as follows:\n   1.  Extract the\
    \ RFC5322.From domain from the message (as above).\n   2.  Query the DNS for a\
    \ DMARC policy record.  Continue if one is\n       found, or terminate DMARC evaluation\
    \ otherwise.  See\n       Section 6.6.3 for details.\n   3.  Perform DKIM signature\
    \ verification checks.  A single email could\n       contain multiple DKIM signatures.\
    \  The results of this step are\n       passed to the remainder of the algorithm\
    \ and MUST include the\n       value of the \"d=\" tag from each checked DKIM\
    \ signature.\n   4.  Perform SPF validation checks.  The results of this step\
    \ are\n       passed to the remainder of the algorithm and MUST include the\n\
    \       domain name used to complete the SPF check.\n   5.  Conduct Identifier\
    \ Alignment checks.  With authentication checks\n       and policy discovery performed,\
    \ the Mail Receiver checks to see\n       if Authenticated Identifiers fall into\
    \ alignment as described in\n       Section 3.  If one or more of the Authenticated\
    \ Identifiers align\n       with the RFC5322.From domain, the message is considered\
    \ to pass\n       the DMARC mechanism check.  All other conditions (authentication\n\
    \       failures, identifier mismatches) are considered to be DMARC\n       mechanism\
    \ check failures.\n   6.  Apply policy.  Emails that fail the DMARC mechanism\
    \ check are\n       disposed of in accordance with the discovered DMARC policy\
    \ of the\n       Domain Owner.  See Section 6.3 for details.\n   Heuristics applied\
    \ in the absence of use by a Domain Owner of either\n   SPF or DKIM (e.g., [Best-Guess-SPF])\
    \ SHOULD NOT be used, as it may be\n   the case that the Domain Owner wishes a\
    \ Message Receiver not to\n   consider the results of that underlying authentication\
    \ protocol at\n   all.\n   DMARC evaluation can only yield a \"pass\" result after\
    \ one of the\n   underlying authentication mechanisms passes for an aligned\n\
    \   identifier.  If neither passes and one or both of them fail due to a\n   temporary\
    \ error, the Receiver evaluating the message is unable to\n   conclude that the\
    \ DMARC mechanism had a permanent failure; they\n   therefore cannot apply the\
    \ advertised DMARC policy.  When otherwise\n   appropriate, Receivers MAY send\
    \ feedback reports regarding temporary\n   errors.\n   Handling of messages for\
    \ which SPF and/or DKIM evaluation encounter a\n   permanent DNS error is left\
    \ to the discretion of the Mail Receiver.\n"
- title: 6.6.3.  Policy Discovery
  contents:
  - "6.6.3.  Policy Discovery\n   As stated above, the DMARC mechanism uses DNS TXT\
    \ records to\n   advertise policy.  Policy discovery is accomplished via a method\n\
    \   similar to the method used for SPF records.  This method, and the\n   important\
    \ differences between DMARC and SPF mechanisms, are discussed\n   below.\n   To\
    \ balance the conflicting requirements of supporting wildcarding,\n   allowing\
    \ subdomain policy overrides, and limiting DNS query load, the\n   following DNS\
    \ lookup scheme is employed:\n   1.  Mail Receivers MUST query the DNS for a DMARC\
    \ TXT record at the\n       DNS domain matching the one found in the RFC5322.From\
    \ domain in\n       the message.  A possibly empty set of records is returned.\n\
    \   2.  Records that do not start with a \"v=\" tag that identifies the\n    \
    \   current version of DMARC are discarded.\n   3.  If the set is now empty, the\
    \ Mail Receiver MUST query the DNS for\n       a DMARC TXT record at the DNS domain\
    \ matching the Organizational\n       Domain in place of the RFC5322.From domain\
    \ in the message (if\n       different).  This record can contain policy to be\
    \ asserted for\n       subdomains of the Organizational Domain.  A possibly empty\
    \ set of\n       records is returned.\n   4.  Records that do not start with a\
    \ \"v=\" tag that identifies the\n       current version of DMARC are discarded.\n\
    \   5.  If the remaining set contains multiple records or no records,\n      \
    \ policy discovery terminates and DMARC processing is not applied\n       to this\
    \ message.\n   6.  If a retrieved policy record does not contain a valid \"p\"\
    \ tag, or\n       contains an \"sp\" tag that is not valid, then:\n       1. \
    \ if a \"rua\" tag is present and contains at least one\n           syntactically\
    \ valid reporting URI, the Mail Receiver SHOULD\n           act as if a record\
    \ containing a valid \"v\" tag and \"p=none\"\n           was retrieved, and continue\
    \ processing;\n       2.  otherwise, the Mail Receiver applies no DMARC processing\
    \ to\n           this message.\n   If the set produced by the mechanism above\
    \ contains no DMARC policy\n   record (i.e., any indication that there is no such\
    \ record as opposed\n   to a transient DNS error), Mail Receivers SHOULD NOT apply\
    \ the DMARC\n   mechanism to the message.\n   Handling of DNS errors when querying\
    \ for the DMARC policy record is\n   left to the discretion of the Mail Receiver.\
    \  For example, to ensure\n   minimal disruption of mail flow, transient errors\
    \ could result in\n   delivery of the message (\"fail open\"), or they could result\
    \ in the\n   message being temporarily rejected (i.e., an SMTP 4yx reply), which\n\
    \   invites the sending MTA to try again after the condition has possibly\n  \
    \ cleared, allowing a definite DMARC conclusion to be reached (\"fail\n   closed\"\
    ).\n"
- title: 6.6.4.  Message Sampling
  contents:
  - "6.6.4.  Message Sampling\n   If the \"pct\" tag is present in the policy record,\
    \ the Mail Receiver\n   MUST NOT enact the requested policy (\"p\" tag or \"sp\"\
    \ tag\") on more\n   than the stated percent of the totality of affected messages.\n\
    \   However, regardless of whether or not the \"pct\" tag is present, the\n  \
    \ Mail Receiver MUST include all relevant message data in any reports\n   produced.\n\
    \   If email is subject to the DMARC policy of \"quarantine\", the Mail\n   Receiver\
    \ SHOULD quarantine the message.  If the email is not subject\n   to the \"quarantine\"\
    \ policy (due to the \"pct\" tag), the Mail Receiver\n   SHOULD apply local message\
    \ classification as normal.\n   If email is subject to the DMARC policy of \"\
    reject\", the Mail\n   Receiver SHOULD reject the message (see Section 10.3).\
    \  If the email\n   is not subject to the \"reject\" policy (due to the \"pct\"\
    \ tag), the\n   Mail Receiver SHOULD treat the email as though the \"quarantine\"\
    \n   policy applies.  This behavior allows Domain Owners to experiment\n   with\
    \ progressively stronger policies without relaxing existing\n   policy.\n   Mail\
    \ Receivers implement \"pct\" via statistical mechanisms that\n   achieve a close\
    \ approximation to the requested percentage and provide\n   a representative sample\
    \ across a reporting period.\n"
- title: 6.6.5.  Store Results of DMARC Processing
  contents:
  - "6.6.5.  Store Results of DMARC Processing\n   The results of Mail Receiver-based\
    \ DMARC processing should be stored\n   for eventual presentation back to the\
    \ Domain Owner in the form of\n   aggregate feedback reports.  Sections 6.3 and\
    \ 7.2 discuss aggregate\n   feedback.\n"
- title: 6.7.  Policy Enforcement Considerations
  contents:
  - "6.7.  Policy Enforcement Considerations\n   Mail Receivers MAY choose to reject\
    \ or quarantine email even if email\n   passes the DMARC mechanism check.  The\
    \ DMARC mechanism does not\n   inform Mail Receivers whether an email stream is\
    \ \"good\".  Mail\n   Receivers are encouraged to maintain anti-abuse technologies\
    \ to\n   combat the possibility of DMARC-enabled criminal campaigns.\n   Mail\
    \ Receivers MAY choose to accept email that fails the DMARC\n   mechanism check\
    \ even if the Domain Owner has published a \"reject\"\n   policy.  Mail Receivers\
    \ need to make a best effort not to increase\n   the likelihood of accepting abusive\
    \ mail if they choose not to comply\n   with a Domain Owner's reject, against\
    \ policy.  At a minimum, addition\n   of the Authentication-Results header field\
    \ (see [AUTH-RESULTS]) is\n   RECOMMENDED when delivery of failing mail is done.\
    \  When this is\n   done, the DNS domain name thus recorded MUST be encoded as\
    \ an\n   A-label.\n   Mail Receivers are only obligated to report reject or quarantine\n\
    \   policy actions in aggregate feedback reports that are due to DMARC\n   policy.\
    \  They are not required to report reject or quarantine actions\n   that are the\
    \ result of local policy.  If local policy information is\n   exposed, abusers\
    \ can gain insight into the effectiveness and delivery\n   rates of spam campaigns.\n\
    \   Final disposition of a message is always a matter of local policy.\n   An\
    \ operator that wishes to favor DMARC policy over SPF policy, for\n   example,\
    \ will disregard the SPF policy, since enacting an\n   SPF-determined rejection\
    \ prevents evaluation of DKIM; DKIM might\n   otherwise pass, satisfying the DMARC\
    \ evaluation.  There is a\n   trade-off to doing so, namely acceptance and processing\
    \ of the entire\n   message body in exchange for the enhanced protection DMARC\
    \ provides.\n   DMARC-compliant Mail Receivers typically disregard any mail-handling\n\
    \   directive discovered as part of an authentication mechanism (e.g.,\n   Author\
    \ Domain Signing Practices (ADSP), SPF) where a DMARC record is\n   also discovered\
    \ that specifies a policy other than \"none\".  Deviating\n   from this practice\
    \ introduces inconsistency among DMARC operators in\n   terms of handling of the\
    \ message.  However, such deviation is not\n   proscribed.\n   To enable Domain\
    \ Owners to receive DMARC feedback without impacting\n   existing mail processing,\
    \ discovered policies of \"p=none\" SHOULD NOT\n   modify existing mail disposition\
    \ processing.\n   Mail Receivers SHOULD also implement reporting instructions\
    \ of DMARC,\n   even in the absence of a request for DKIM reporting [AFRF-DKIM]\
    \ or\n   SPF reporting [AFRF-SPF].  Furthermore, the presence of such requests\n\
    \   SHOULD NOT affect DMARC reporting.\n"
- title: 7.  DMARC Feedback
  contents:
  - "7.  DMARC Feedback\n   Providing Domain Owners with visibility into how Mail\
    \ Receivers\n   implement and enforce the DMARC mechanism in the form of feedback\
    \ is\n   critical to establishing and maintaining accurate authentication\n  \
    \ deployments.  When Domain Owners can see what effect their policies\n   and\
    \ practices are having, they are better willing and able to use\n   quarantine\
    \ and reject policies.\n"
- title: 7.1.  Verifying External Destinations
  contents:
  - "7.1.  Verifying External Destinations\n   It is possible to specify destinations\
    \ for the different reports that\n   are outside the authority of the Domain Owner\
    \ making the request.\n   This allows domains that do not operate mail servers\
    \ to request\n   reports and have them go someplace that is able to receive and\n\
    \   process them.\n   Without checks, this would allow a bad actor to publish\
    \ a DMARC\n   policy record that requests that reports be sent to a victim address,\n\
    \   and then send a large volume of mail that will fail both DKIM and SPF\n  \
    \ checks to a wide variety of destinations; the victim will in turn be\n   flooded\
    \ with unwanted reports.  Therefore, a verification mechanism\n   is included.\n\
    \   When a Mail Receiver discovers a DMARC policy in the DNS, and the\n   Organizational\
    \ Domain at which that record was discovered is not\n   identical to the Organizational\
    \ Domain of the host part of the\n   authority component of a [URI] specified\
    \ in the \"rua\" or \"ruf\" tag,\n   the following verification steps are to be\
    \ taken:\n   1.  Extract the host portion of the authority component of the URI.\n\
    \       Call this the \"destination host\", as it refers to a Report\n       Receiver.\n\
    \   2.  Prepend the string \"_report._dmarc\".\n   3.  Prepend the domain name\
    \ from which the policy was retrieved,\n       after conversion to an A-label\
    \ if needed.\n   4.  Query the DNS for a TXT record at the constructed name. \
    \ If the\n       result of this request is a temporary DNS error of some kind\n\
    \       (e.g., a timeout), the Mail Receiver MAY elect to temporarily\n      \
    \ fail the delivery so the verification test can be repeated later.\n   5.  For\
    \ each record returned, parse the result as a series of\n       \"tag=value\"\
    \ pairs, i.e., the same overall format as the policy\n       record (see Section\
    \ 6.4).  In particular, the \"v=DMARC1\" tag is\n       mandatory and MUST appear\
    \ first in the list.  Discard any that do\n       not pass this test.\n   6. \
    \ If the result includes no TXT resource records that pass basic\n       parsing,\
    \ a positive determination of the external reporting\n       relationship cannot\
    \ be made; stop.\n   7.  If at least one TXT resource record remains in the set\
    \ after\n       parsing, then the external reporting arrangement was authorized\n\
    \       by the Report Receiver.\n   8.  If a \"rua\" or \"ruf\" tag is thus discovered,\
    \ replace the\n       corresponding value extracted from the domain's DMARC policy\n\
    \       record with the one found in this record.  This permits the\n       Report\
    \ Receiver to override the report destination.  However, to\n       prevent loops\
    \ or indirect abuse, the overriding URI MUST use the\n       same destination\
    \ host from the first step.\n   For example, if a DMARC policy query for \"blue.example.com\"\
    \ contained\n   \"rua=mailto:reports@red.example.net\", the host extracted from\
    \ the\n   latter (\"red.example.net\") does not match \"blue.example.com\", so\
    \ this\n   procedure is enacted.  A TXT query for\n   \"blue.example.com._report._dmarc.red.example.net\"\
    \ is issued.  If a\n   single reply comes back containing a tag of \"v=DMARC1\"\
    , then the\n   relationship between the two is confirmed.  Moreover,\n   \"red.example.net\"\
    \ has the opportunity to override the report\n   destination requested by \"blue.example.com\"\
    \ if needed.\n   Where the above algorithm fails to confirm that the external\n\
    \   reporting was authorized by the Report Receiver, the URI MUST be\n   ignored\
    \ by the Mail Receiver generating the report.  Further, if the\n   confirming\
    \ record includes a URI whose host is again different than\n   the domain publishing\
    \ that override, the Mail Receiver generating the\n   report MUST NOT generate\
    \ a report to either the original or the\n   override URI.\n   A Report Receiver\
    \ publishes such a record in its DNS if it wishes to\n   receive reports for other\
    \ domains.\n   A Report Receiver that is willing to receive reports for any domain\n\
    \   can use a wildcard DNS record.  For example, a TXT resource record at\n  \
    \ \"*._report._dmarc.example.com\" containing at least \"v=DMARC1\"\n   confirms\
    \ that example.com is willing to receive DMARC reports for any\n   domain.\n \
    \  If the Report Receiver is overcome by volume, it can simply remove\n   the\
    \ confirming DNS record.  However, due to positive caching, the\n   change could\
    \ take as long as the time-to-live (TTL) on the record to\n   go into effect.\n\
    \   A Mail Receiver might decide not to enact this procedure if, for\n   example,\
    \ it relies on a local list of domains for which external\n   reporting addresses\
    \ are permitted.\n"
- title: 7.2.  Aggregate Reports
  contents:
  - "7.2.  Aggregate Reports\n   The DMARC aggregate feedback report is designed to\
    \ provide Domain\n   Owners with precise insight into:\n   o  authentication results,\n\
    \   o  corrective action that needs to be taken by Domain Owners, and\n   o  the\
    \ effect of Domain Owner DMARC policy on email streams processed\n      by Mail\
    \ Receivers.\n   Aggregate DMARC feedback provides visibility into real-world\
    \ email\n   streams that Domain Owners need to make informed decisions regarding\n\
    \   the publication of DMARC policy.  When Domain Owners know what\n   legitimate\
    \ mail they are sending, what the authentication results are\n   on that mail,\
    \ and what forged mail receivers are getting, they can\n   make better decisions\
    \ about the policies they need and the steps they\n   need to take to enable those\
    \ policies.  When Domain Owners set\n   policies appropriately and understand\
    \ their effects, Mail Receivers\n   can act on them confidently.\n   Visibility\
    \ comes in the form of daily (or more frequent) Mail\n   Receiver-originated feedback\
    \ reports that contain aggregate data on\n   message streams relevant to the Domain\
    \ Owner.  This information\n   includes data about messages that passed DMARC\
    \ authentication as well\n   as those that did not.\n   The format for these reports\
    \ is defined in Appendix C.\n   The report SHOULD include the following data:\n\
    \   o  The DMARC policy discovered and applied, if any\n   o  The selected message\
    \ disposition\n   o  The identifier evaluated by SPF and the SPF result, if any\n\
    \   o  The identifier evaluated by DKIM and the DKIM result, if any\n   o  For\
    \ both DKIM and SPF, an indication of whether the identifier was\n      in alignment\n\
    \   o  Data for each Domain Owner's subdomain separately from mail from\n    \
    \  the sender's Organizational Domain, even if there is no explicit\n      subdomain\
    \ policy\n   o  Sending and receiving domains\n   o  The policy requested by the\
    \ Domain Owner and the policy actually\n      applied (if different)\n   o  The\
    \ number of successful authentications\n   o  The counts of messages based on\
    \ all messages received, even if\n      their delivery is ultimately blocked by\
    \ other filtering agents\n   Note that Domain Owners or their agents may change\
    \ the published\n   DMARC policy for a domain or subdomain at any time.  From\
    \ a Mail\n   Receiver's perspective, this will occur during a reporting period\
    \ and\n   may be noticed during that period, at the end of that period when\n\
    \   reports are generated, or during a subsequent reporting period, all\n   depending\
    \ on the Mail Receiver's implementation.  Under these\n   conditions, it is possible\
    \ that a Mail Receiver could do any of the\n   following:\n   o  generate for\
    \ such a reporting period a single aggregate report\n      that includes message\
    \ dispositions based on the old policy, or a\n      mix of the two policies, even\
    \ though the report only contains a\n      single \"policy_published\" element;\n\
    \   o  generate multiple reports for the same period, one for each\n      published\
    \ policy occurring during the reporting period;\n   o  generate a report whose\
    \ end time occurs when the updated policy\n      was detected, regardless of any\
    \ requested report interval.\n   Such policy changes are expected to be infrequent\
    \ for any given\n   domain, whereas more stringent policy monitoring requirements\
    \ on the\n   Mail Receiver would produce a very large burden at Internet scale.\n\
    \   Therefore, it is the responsibility of report consumers and Domain\n   Owners\
    \ to be aware of this situation and allow for such mixed reports\n   during the\
    \ propagation of the new policy to Mail Receivers.\n   Aggregate reports are most\
    \ useful when they all cover a common time\n   period.  By contrast, correlation\
    \ of these reports from multiple\n   generators when they cover incongruent time\
    \ periods is difficult or\n   impossible.  Report generators SHOULD, wherever\
    \ possible, adhere to\n   hour boundaries for the reporting period they are using.\
    \  For\n   example, starting a per-day report at 00:00; starting per-hour\n  \
    \ reports at 00:00, 01:00, 02:00; etc.  Report generators using a\n   24-hour\
    \ report period are strongly encouraged to begin that period at\n   00:00 UTC,\
    \ regardless of local timezone or time of report production,\n   in order to facilitate\
    \ correlation.\n   A Mail Receiver discovers reporting requests when it looks\
    \ up a DMARC\n   policy record that corresponds to an RFC5322.From domain on received\n\
    \   mail.  The presence of the \"rua\" tag specifies where to send\n   feedback.\n"
- title: 7.2.1.  Transport
  contents:
  - "7.2.1.  Transport\n   Where the URI specified in a \"rua\" tag does not specify\
    \ otherwise, a\n   Mail Receiver generating a feedback report SHOULD employ a\
    \ secure\n   transport mechanism.\n   The Mail Receiver, after preparing a report,\
    \ MUST evaluate the\n   provided reporting URIs in the order given.  Any reporting\
    \ URI that\n   includes a size limitation exceeded by the generated report (after\n\
    \   compression and after any encoding required by the particular\n   transport\
    \ mechanism) MUST NOT be used.  An attempt MUST be made to\n   deliver an aggregate\
    \ report to every remaining URI, up to the\n   Receiver's limits on supported\
    \ URIs.\n   If transport is not possible because the services advertised by the\n\
    \   published URIs are not able to accept reports (e.g., the URI refers\n   to\
    \ a service that is unreachable, or all provided URIs specify size\n   limits\
    \ exceeded by the generated record), the Mail Receiver SHOULD\n   send a short\
    \ report (see Section 7.2.2) indicating that a report is\n   available but could\
    \ not be sent.  The Mail Receiver MAY cache that\n   data and try again later,\
    \ or MAY discard data that could not be sent.\n"
- title: 7.2.1.1.  Email
  contents:
  - "7.2.1.1.  Email\n   The message generated by the Mail Receiver MUST be a [MAIL]\
    \ message\n   formatted per [MIME].  The aggregate report itself MUST be included\n\
    \   in one of the parts of the message.  A human-readable portion MAY be\n   included\
    \ as a MIME part (such as a text/plain part).\n   The aggregate data MUST be an\
    \ XML file that SHOULD be subjected to\n   GZIP compression.  Declining to apply\
    \ compression can cause the\n   report to be too large for a receiver to process\
    \ (a commonly observed\n   receiver limit is ten megabytes); doing the compression\
    \ increases the\n   chances of acceptance of the report at some compute cost.\
    \  The\n   aggregate data SHOULD be present using the media type \"application/\n\
    \   gzip\" if compressed (see [GZIP]), and \"text/xml\" otherwise.  The\n   filename\
    \ is typically constructed using the following ABNF:\n     filename = receiver\
    \ \"!\" policy-domain \"!\" begin-timestamp\n                \"!\" end-timestamp\
    \ [ \"!\" unique-id ] \".\" extension\n     unique-id = 1*(ALPHA / DIGIT)\n  \
    \   receiver = domain\n                ; imported from [MAIL]\n     policy-domain\
    \   = domain\n     begin-timestamp = 1*DIGIT\n                       ; seconds\
    \ since 00:00:00 UTC January 1, 1970\n                       ; indicating start\
    \ of the time range contained\n                       ; in the report\n     end-timestamp\
    \ = 1*DIGIT\n                     ; seconds since 00:00:00 UTC January 1, 1970\n\
    \                     ; indicating end of the time range contained\n         \
    \            ; in the report\n     extension = \"xml\" / \"xml.gz\"\n   The extension\
    \ MUST be \"xml\" for a plain XML file, or \"xml.gz\" for an\n   XML file compressed\
    \ using GZIP.\n   \"unique-id\" allows an optional unique ID generated by the\
    \ Mail\n   Receiver to distinguish among multiple reports generated\n   simultaneously\
    \ by different sources within the same Domain Owner.\n   For example, this is\
    \ a possible filename for the gzip file of a\n   report to the Domain Owner \"\
    example.com\" from the Mail Receiver\n   \"mail.receiver.example\":\n     mail.receiver.example!example.com!1013662812!1013749130.gz\n\
    \   No specific MIME message structure is required.  It is presumed that\n   the\
    \ aggregate reporting address will be equipped to extract MIME\n   parts with\
    \ the prescribed media type and filename and ignore the\n   rest.\n   Email streams\
    \ carrying DMARC feedback data MUST conform to the DMARC\n   mechanism, thereby\
    \ resulting in an aligned \"pass\" (see Section 3.1).\n   This practice minimizes\
    \ the risk of report consumers processing\n   fraudulent reports.\n   The RFC5322.Subject\
    \ field for individual report submissions SHOULD\n   conform to the following\
    \ ABNF:\n     dmarc-subject = %x52.65.70.6f.72.74 1*FWS       ; \"Report\"\n \
    \                    %x44.6f.6d.61.69.6e.3a 1*FWS    ; \"Domain:\"\n         \
    \            domain-name 1*FWS               ; from RFC 6376\n               \
    \      %x53.75.62.6d.69.74.74.65.72.3a ; \"Submitter:\"\n                    \
    \ 1*FWS domain-name 1*FWS\n                     %x52.65.70.6f.72.74.2d.49.44.3a\
    \ ; \"Report-ID:\"\n                     msg-id                          ; from\
    \ RFC 5322\n   The first domain-name indicates the DNS domain name about which\
    \ the\n   report was generated.  The second domain-name indicates the DNS\n  \
    \ domain name representing the Mail Receiver generating the report.\n   The purpose\
    \ of the Report-ID: portion of the field is to enable the\n   Domain Owner to\
    \ identify and ignore duplicate reports that might be\n   sent by a Mail Receiver.\n\
    \   For instance, this is a possible Subject field for a report to the\n   Domain\
    \ Owner \"example.com\" from the Mail Receiver\n   \"mail.receiver.example\".\
    \  It is line-wrapped as allowed by [MAIL]:\n     Subject: Report Domain: example.com\n\
    \         Submitter: mail.receiver.example\n         Report-ID: <2002.02.15.1>\n\
    \   This transport mechanism potentially encounters a problem when\n   feedback\
    \ data size exceeds maximum allowable attachment sizes for\n   either the generator\
    \ or the consumer.  See Section 7.2.2 for further\n   discussion.\n"
- title: 7.2.1.2.  Other Methods
  contents:
  - "7.2.1.2.  Other Methods\n   The specification as written allows for the addition\
    \ of other\n   registered URI schemes to be supported in later versions.\n"
- title: 7.2.2.  Error Reports
  contents:
  - "7.2.2.  Error Reports\n   When a Mail Receiver is unable to complete delivery\
    \ of a report via\n   any of the URIs listed by the Domain Owner, the Mail Receiver\
    \ SHOULD\n   generate an error message.  An attempt MUST be made to send this\n\
    \   report to all listed \"mailto\" URIs, and it MAY also be sent to any or\n\
    \   all other listed URIs.\n   The error report MUST be formatted per [MIME].\
    \  A text/plain part\n   MUST be included that contains field-value pairs such\
    \ as those found\n   in Section 2 of [DSN].  The fields required, which may appear\
    \ in any\n   order, are as follows:\n   Report-Date:  A [MAIL]-formatted date\
    \ expression indicating when the\n      transport failure occurred.\n   Report-Domain:\
    \  The domain-name about which the failed report was\n      generated.\n   Report-ID:\
    \  The Report-ID: that the report tried to use.\n   Report-Size:  The size, in\
    \ bytes, of the report that was unable to be\n      sent.  This MUST represent\
    \ the number of bytes that the Mail\n      Receiver attempted to send.  Where\
    \ more than one transport system\n      was attempted, the sizes may be different;\
    \ in such cases, separate\n      error reports MUST be generated so that this\
    \ value matches the\n      actual attempt that was made.\n   Submitter:  The domain-name\
    \ representing the Mail Receiver that\n      generated, but was unable to submit,\
    \ the report.\n   Submitting-URI:  The URI(s) to which the Mail Receiver tried,\
    \ but\n      failed, to submit the report.\n   An additional text/plain part MAY\
    \ be included that gives a human-\n   readable explanation of the above and MAY\
    \ also include a URI that can\n   be used to seek assistance.\n"
- title: 7.3.  Failure Reports
  contents:
  - "7.3.  Failure Reports\n   Failure reports are normally generated and sent almost\
    \ immediately\n   after the Mail Receiver detects a DMARC failure.  Rather than\
    \ waiting\n   for an aggregate report, these reports are useful for quickly\n\
    \   notifying the Domain Owners when there is an authentication failure.\n   Whether\
    \ the failure is due to an infrastructure problem or the\n   message is inauthentic,\
    \ failure reports also provide more information\n   about the failed message than\
    \ is available in an aggregate report.\n   These reports SHOULD include any URI(s)\
    \ from the message that failed\n   authentication.  These reports SHOULD include\
    \ as much of the message\n   and message header as is reasonable to support the\
    \ Domain Owner's\n   investigation into what caused the message to fail authentication\
    \ and\n   track down the sender.\n   When a Domain Owner requests failure reports\
    \ for the purpose of\n   forensic analysis, and the Mail Receiver is willing to\
    \ provide such\n   reports, the Mail Receiver generates and sends a message using\
    \ the\n   format described in [AFRF]; this document updates that reporting\n \
    \  format, as described in Section 7.3.1.\n   The destination(s) and nature of\
    \ the reports are defined by the \"ruf\"\n   and \"fo\" tags as defined in Section\
    \ 6.3.\n   Where multiple URIs are selected to receive failure reports, the\n\
    \   report generator MUST make an attempt to deliver to each of them.\n   An obvious\
    \ consideration is the denial-of-service attack that can be\n   perpetrated by\
    \ an attacker who sends numerous messages purporting to\n   be from the intended\
    \ victim Domain Owner but that fail both SPF and\n   DKIM; this would cause participating\
    \ Mail Receivers to send failure\n   reports to the Domain Owner or its delegate\
    \ in potentially huge\n   volumes.  Accordingly, participating Mail Receivers\
    \ are encouraged to\n   aggregate these reports as much as is practical, using\
    \ the Incidents\n   field of the Abuse Reporting Format ([ARF]).  Various aggregation\n\
    \   techniques are possible, including the following:\n   o  only send a report\
    \ to the first recipient of multi-recipient\n      messages;\n   o  store reports\
    \ for a period of time before sending them, allowing\n      detection, collection,\
    \ and reporting of like incidents;\n   o  apply rate limiting, such as a maximum\
    \ number of reports per\n      minute that will be generated (and the remainder\
    \ discarded).\n"
- title: 7.3.1.  Reporting Format Update
  contents:
  - "7.3.1.  Reporting Format Update\n   Operators implementing this specification\
    \ also implement an augmented\n   version of [AFRF] as follows:\n   1.  A DMARC\
    \ failure report includes the following ARF header fields,\n       with the indicated\
    \ normative requirement levels:\n       *  Identity-Alignment (REQUIRED; defined\
    \ below)\n       *  Delivery-Result (OPTIONAL)\n       *  DKIM-Domain, DKIM-Identity,\
    \ DKIM-Selector (REQUIRED if the\n          message was signed by DKIM)\n    \
    \   *  DKIM-Canonicalized-Header, DKIM-Canonicalized-Body (OPTIONAL\n        \
    \  if the message was signed by DKIM)\n       *  SPF-DNS (REQUIRED)\n   2.  The\
    \ \"Identity-Alignment\" field is defined to contain a comma-\n       separated\
    \ list of authentication mechanism names that produced an\n       aligned identity,\
    \ or the keyword \"none\" if none did.  ABNF:\n     id-align     = \"Identity-Alignment:\"\
    \ [CFWS]\n                    ( \"none\" /\n                      dmarc-method\
    \ *( [CFWS] \",\" [CFWS] dmarc-method ) )\n                    [CFWS]\n     dmarc-method\
    \ = ( \"dkim\" / \"spf\" )\n                    ; each may appear at most once\
    \ in an id-align\n   3.  Authentication Failure Type \"dmarc\" is defined, which\
    \ is to be\n       used when a failure report is generated because some or all\
    \ of\n       the authentication mechanisms failed to produce aligned\n       identifiers.\
    \  Note that a failure report generator MAY also\n       independently produce\
    \ an AFRF message for any or all of the\n       underlying authentication methods.\n"
- title: 8.  Minimum Implementations
  contents:
  - "8.  Minimum Implementations\n   A minimum implementation of DMARC has the following\
    \ characteristics:\n   o  Is able to send and/or receive reports at least daily;\n\
    \   o  Is able to send and/or receive reports using \"mailto\" URIs;\n   o  Other\
    \ than in exceptional circumstances such as resource\n      exhaustion, can generate\
    \ or accept a report up to ten megabytes in\n      size;\n   o  If acting as a\
    \ Mail Receiver, fully implements the provisions of\n      Section 6.6.\n"
- title: 9.  Privacy Considerations
  contents:
  - "9.  Privacy Considerations\n   This section discusses security issues specific\
    \ to private data that\n   may be included in the interactions that are part of\
    \ DMARC.\n"
- title: 9.1.  Data Exposure Considerations
  contents:
  - "9.1.  Data Exposure Considerations\n   Aggregate reports are limited in scope\
    \ to DMARC policy and\n   disposition results, to information pertaining to the\
    \ underlying\n   authentication mechanisms, and to the identifiers involved in\
    \ DMARC\n   validation.\n   Failed-message reporting provides message-specific\
    \ details pertaining\n   to authentication failures.  Individual reports can contain\
    \ message\n   content as well as trace header fields.  Domain Owners are able\
    \ to\n   analyze individual reports and attempt to determine root causes of\n\
    \   authentication mechanism failures, gain insight into\n   misconfigurations\
    \ or other problems with email and network\n   infrastructure, or inspect messages\
    \ for insight into abusive\n   practices.\n   Both report types may expose sender\
    \ and recipient identifiers (e.g.,\n   RFC5322.From addresses), and although the\
    \ [AFRF] format used for\n   failed-message reporting supports redaction, failed-message\
    \ reporting\n   is capable of exposing the entire message to the report recipient.\n\
    \   Domain Owners requesting reports will receive information about mail\n   claiming\
    \ to be from them, which includes mail that was not, in fact,\n   from them. \
    \ Information about the final destination of mail where it\n   might otherwise\
    \ be obscured by intermediate systems will therefore be\n   exposed.\n   When\
    \ message-forwarding arrangements exist, Domain Owners requesting\n   reports\
    \ will also receive information about mail forwarded to domains\n   that were\
    \ not originally part of their messages' recipient lists.\n   This means that\
    \ destination domains previously unknown to the Domain\n   Owner may now become\
    \ visible.\n   Disclosure of information about the messages is being requested\
    \ by\n   the entity generating the email in the first place, i.e., the Domain\n\
    \   Owner and not the Mail Receiver, so this may not fit squarely within\n   existing\
    \ privacy policy provisions.  For some providers, aggregate\n   reporting and\
    \ failed-message reporting are viewed as a function\n   similar to complaint reporting\
    \ about spamming or phishing and are\n   treated similarly under the privacy policy.\
    \  Report generators (i.e.,\n   Mail Receivers) are encouraged to review their\
    \ reporting limitations\n   under such policies before enabling DMARC reporting.\n"
- title: 9.2.  Report Recipients
  contents:
  - "9.2.  Report Recipients\n   A DMARC record can specify that reports should be\
    \ sent to an\n   intermediary operating on behalf of the Domain Owner.  This is\
    \ done\n   when the Domain Owner contracts with an entity to monitor mail\n  \
    \ streams for abuse and performance issues.  Receipt by third parties\n   of such\
    \ data may or may not be permitted by the Mail Receiver's\n   privacy policy,\
    \ terms of use, or other similar governing document.\n   Domain Owners and Mail\
    \ Receivers should both review and understand if\n   their own internal policies\
    \ constrain the use and transmission of\n   DMARC reporting.\n   Some potential\
    \ exists for report recipients to perform traffic\n   analysis, making it possible\
    \ to obtain metadata about the Receiver's\n   traffic.  In addition to verifying\
    \ compliance with policies,\n   Receivers need to consider that before sending\
    \ reports to a third\n   party.\n"
- title: 10.  Other Topics
  contents:
  - "10.  Other Topics\n   This section discusses some topics regarding choices made\
    \ in the\n   development of DMARC, largely to commit the history to record.\n"
- title: 10.1.  Issues Specific to SPF
  contents:
  - "10.1.  Issues Specific to SPF\n   Though DMARC does not inherently change the\
    \ semantics of an SPF\n   policy record, historically lax enforcement of such\
    \ policies has led\n   many to publish extremely broad records containing many\
    \ large network\n   ranges.  Domain Owners are strongly encouraged to carefully\
    \ review\n   their SPF records to understand which networks are authorized to\
    \ send\n   on behalf of the Domain Owner before publishing a DMARC record.\n \
    \  Some receiver architectures might implement SPF in advance of any\n   DMARC\
    \ operations.  This means that a \"-\" prefix on a sender's SPF\n   mechanism,\
    \ such as \"-all\", could cause that rejection to go into\n   effect early in\
    \ handling, causing message rejection before any DMARC\n   processing takes place.\
    \  Operators choosing to use \"-all\" should be\n   aware of this.\n"
- title: 10.2.  DNS Load and Caching
  contents:
  - "10.2.  DNS Load and Caching\n   DMARC policies are communicated using the DNS\
    \ and therefore inherit a\n   number of considerations related to DNS caching.\
    \  The inherent\n   conflict between freshness and the impact of caching on the\
    \ reduction\n   of DNS-lookup overhead should be considered from the Mail Receiver's\n\
    \   point of view.  Should Domain Owners publish a DNS record with a very\n  \
    \ short TTL, Mail Receivers can be provoked through the injection of\n   large\
    \ volumes of messages to overwhelm the Domain Owner's DNS.\n   Although this is\
    \ not a concern specific to DMARC, the implications of\n   a very short TTL should\
    \ be considered when publishing DMARC policies.\n   Conversely, long TTLs will\
    \ cause records to be cached for long\n   periods of time.  This can cause a critical\
    \ change to DMARC\n   parameters advertised by a Domain Owner to go unnoticed\
    \ for the\n   length of the TTL (while waiting for DNS caches to expire).  Avoiding\n\
    \   this problem can mean shorter TTLs, with the potential problems\n   described\
    \ above.  A balance should be sought to maintain\n   responsiveness of DMARC preference\
    \ changes while preserving the\n   benefits of DNS caching.\n"
- title: 10.3.  Rejecting Messages
  contents:
  - "10.3.  Rejecting Messages\n   This proposal calls for rejection of a message\
    \ during the SMTP\n   session under certain circumstances.  This is preferable\
    \ to\n   generation of a Delivery Status Notification ([DSN]), since\n   fraudulent\
    \ messages caught and rejected using DMARC would then result\n   in annoying generation\
    \ of such failure reports that go back to the\n   RFC5321.MailFrom address.\n\
    \   This synchronous rejection is typically done in one of two ways:\n   o  Full\
    \ rejection, wherein the SMTP server issues a 5xy reply code as\n      an indication\
    \ to the SMTP client that the transaction failed; the\n      SMTP client is then\
    \ responsible for generating notification that\n      delivery failed (see Section\
    \ 4.2.5 of [SMTP]).\n   o  A \"silent discard\", wherein the SMTP server returns\
    \ a 2xy reply\n      code implying to the client that delivery (or, at least,\
    \ relay)\n      was successfully completed, but then simply discarding the message\n\
    \      with no further action.\n   Each of these has a cost.  For instance, a\
    \ silent discard can help to\n   prevent backscatter, but it also effectively\
    \ means that the SMTP\n   server has to be programmed to give a false result,\
    \ which can\n   confound external debugging efforts.\n   Similarly, the text portion\
    \ of the SMTP reply may be important to\n   consider.  For example, when rejecting\
    \ a message, revealing the\n   reason for the rejection might give an attacker\
    \ enough information to\n   bypass those efforts on a later attempt, though it\
    \ might also assist\n   a legitimate client to determine the source of some local\
    \ issue that\n   caused the rejection.\n   In the latter case, when doing an SMTP\
    \ rejection, providing a clear\n   hint can be useful in resolving issues.  A\
    \ receiver might indicate in\n   plain text the reason for the rejection by using\
    \ the word \"DMARC\"\n   somewhere in the reply text.  Many systems are able to\
    \ scan the SMTP\n   reply text to determine the nature of the rejection.  Thus,\
    \ providing\n   a machine-detectable reason for rejection allows the problems\
    \ causing\n   rejections to be properly addressed by automated systems.  For\n\
    \   example:\n       550 5.7.1 Email rejected per DMARC policy for example.com\n\
    \   If a Mail Receiver elects to defer delivery due to inability to\n   retrieve\
    \ or apply DMARC policy, this is best done with a 4xy SMTP\n   reply code.\n"
- title: 10.4.  Identifier Alignment Considerations
  contents:
  - "10.4.  Identifier Alignment Considerations\n   The DMARC mechanism allows both\
    \ DKIM and SPF-authenticated\n   identifiers to authenticate email on behalf of\
    \ a Domain Owner and,\n   possibly, on behalf of different subdomains.  If malicious\
    \ or unaware\n   users can gain control of the SPF record or DKIM selector records\
    \ for\n   a subdomain, the subdomain can be used to generate DMARC-passing\n \
    \  email on behalf of the Organizational Domain.\n   For example, an attacker\
    \ who controls the SPF record for\n   \"evil.example.com\" can send mail with\
    \ an RFC5322.From field\n   containing \"foo@example.com\" that can pass both\
    \ authentication and\n   the DMARC check against \"example.com\".\n   The Organizational\
    \ Domain administrator should be careful not to\n   delegate control of subdomains\
    \ if this is an issue, and to consider\n   using the \"strict\" Identifier Alignment\
    \ option if appropriate.\n"
- title: 10.5.  Interoperability Issues
  contents:
  - "10.5.  Interoperability Issues\n   DMARC limits which end-to-end scenarios can\
    \ achieve a \"pass\" result.\n   Because DMARC relies on [SPF] and/or [DKIM] to\
    \ achieve a \"pass\",\n   their limitations also apply.\n   Additional DMARC constraints\
    \ occur when a message is processed by\n   some Mediators, such as mailing lists.\
    \  Transiting a Mediator often\n   causes either the authentication to fail or\
    \ Identifier Alignment to\n   be lost.  These transformations may conform to standards\
    \ but will\n   still prevent a DMARC \"pass\".\n   In addition to Mediators, mail\
    \ that is sent by authorized,\n   independent third parties might not be sent\
    \ with Identifier\n   Alignment, also preventing a \"pass\" result.\n   Issues\
    \ specific to the use of policy mechanisms alongside DKIM are\n   further discussed\
    \ in [DKIM-LISTS], particularly Section 5.2.\n"
- title: 11.  IANA Considerations
  contents:
  - "11.  IANA Considerations\n   This section describes actions completed by IANA.\n"
- title: 11.1.  Authentication-Results Method Registry Update
  contents:
  - "11.1.  Authentication-Results Method Registry Update\n   IANA has added the following\
    \ to the \"Email Authentication Methods\"\n   registry:\n   Method:  dmarc\n \
    \  Defined:  RFC 7489\n   ptype:  header\n   Property:  from\n   Value:  the domain\
    \ portion of the RFC5322.From field\n   Status:  active\n   Version:  1\n"
- title: 11.2.  Authentication-Results Result Registry Update
  contents:
  - "11.2.  Authentication-Results Result Registry Update\n   IANA has added the following\
    \ in the \"Email Authentication Result\n   Names\" registry:\n   Code:  none\n\
    \   Existing/New Code:  existing\n   Defined:  [AUTH-RESULTS]\n   Auth Method:\
    \  dmarc (added)\n   Meaning:  No DMARC policy record was published for the aligned\n\
    \      identifier, or no aligned identifier could be extracted.\n   Status:  active\n\
    \   Code:  pass\n   Existing/New Code:  existing\n   Defined:  [AUTH-RESULTS]\n\
    \   Auth Method:  dmarc (added)\n   Meaning:  A DMARC policy record was published\
    \ for the aligned\n      identifier, and at least one of the authentication mechanisms\n\
    \      passed.\n   Status:  active\n   Code:  fail\n   Existing/New Code:  existing\n\
    \   Defined:  [AUTH-RESULTS]\n   Auth Method:  dmarc (added)\n   Meaning:  A DMARC\
    \ policy record was published for the aligned\n      identifier, and none of the\
    \ authentication mechanisms passed.\n   Status:  active\n   Code:  temperror\n\
    \   Existing/New Code:  existing\n   Defined:  [AUTH-RESULTS]\n   Auth Method:\
    \  dmarc (added)\n   Meaning:  A temporary error occurred during DMARC evaluation.\
    \  A\n      later attempt might produce a final result.\n   Status:  active\n\
    \   Code:  permerror\n   Existing/New Code:  existing\n   Defined:  [AUTH-RESULTS]\n\
    \   Auth Method:  dmarc (added)\n   Meaning:  A permanent error occurred during\
    \ DMARC evaluation, such as\n      encountering a syntactically incorrect DMARC\
    \ record.  A later\n      attempt is unlikely to produce a final result.\n   Status:\
    \  active\n"
- title: 11.3.  Feedback Report Header Fields Registry Update
  contents:
  - "11.3.  Feedback Report Header Fields Registry Update\n   The following has been\
    \ added to the \"Feedback Report Header Fields\"\n   registry:\n   Field Name:\
    \  Identity-Alignment\n   Description:  indicates whether the message about which\
    \ a report is\n      being generated had any identifiers in alignment as defined\
    \ in\n      RFC 7489\n   Multiple Appearances:  No\n   Related \"Feedback-Type\"\
    :  auth-failure\n   Reference:  RFC 7489\n   Status:  current\n"
- title: 11.4.  DMARC Tag Registry
  contents:
  - "11.4.  DMARC Tag Registry\n   A new registry tree called \"Domain-based Message\
    \ Authentication,\n   Reporting, and Conformance (DMARC) Parameters\" has been\
    \ created.\n   Within it, a new sub-registry called the \"DMARC Tag Registry\"\
    \ has\n   been created.\n   Names of DMARC tags must be registered with IANA in\
    \ this new\n   sub-registry.  New entries are assigned only for values that have\n\
    \   been documented in a manner that satisfies the terms of Specification\n  \
    \ Required, per [IANA-CONSIDERATIONS].  Each registration must include\n   the\
    \ tag name; the specification that defines it; a brief description;\n   and its\
    \ status, which must be one of \"current\", \"experimental\", or\n   \"historic\"\
    .  The Designated Expert needs to confirm that the provided\n   specification\
    \ adequately describes the new tag and clearly presents\n   how it would be used\
    \ within the DMARC context by Domain Owners and\n   Mail Receivers.\n   To avoid\
    \ version compatibility issues, tags added to the DMARC\n   specification are\
    \ to avoid changing the semantics of existing records\n   when processed by implementations\
    \ conforming to prior specifications.\n   The initial set of entries in this registry\
    \ is as follows:\n    +----------+-------------+---------+------------------------------+\n\
    \    | Tag Name | Reference   | Status  | Description                  |\n   \
    \ +----------+-------------+---------+------------------------------+\n    | \
    \ adkim   |  RFC 7489   | current | DKIM alignment mode          |\n    +----------+-------------+---------+------------------------------+\n\
    \    |   aspf   |  RFC 7489   | current | SPF alignment mode           |\n   \
    \ +----------+-------------+---------+------------------------------+\n    | \
    \   fo    |  RFC 7489   | current | Failure reporting options    |\n    +----------+-------------+---------+------------------------------+\n\
    \    |     p    |  RFC 7489   | current | Requested handling policy    |\n   \
    \ +----------+-------------+---------+------------------------------+\n    | \
    \   pct   |  RFC 7489   | current | Sampling rate                |\n    +----------+-------------+---------+------------------------------+\n\
    \    |    rf    |  RFC 7489   | current | Failure reporting format(s)  |\n   \
    \ +----------+-------------+---------+------------------------------+\n    | \
    \   ri    |  RFC 7489   | current | Aggregate Reporting interval |\n    +----------+-------------+---------+------------------------------+\n\
    \    |    rua   |  RFC 7489   | current | Reporting URI(s) for         |\n   \
    \ |          |             |         | aggregate data               |\n    +----------+-------------+---------+------------------------------+\n\
    \    |    ruf   |  RFC 7489   | current | Reporting URI(s) for         |\n   \
    \ |          |             |         | failure data                 |\n    +----------+-------------+---------+------------------------------+\n\
    \    |    sp    |  RFC 7489   | current | Requested handling policy    |\n   \
    \ |          |             |         | for subdomains               |\n    +----------+-------------+---------+------------------------------+\n\
    \    |     v    |  RFC 7489   | current | Specification version        |\n   \
    \ +----------+-------------+---------+------------------------------+\n"
- title: 11.5.  DMARC Report Format Registry
  contents:
  - "11.5.  DMARC Report Format Registry\n   Also within \"Domain-based Message Authentication,\
    \ Reporting, and\n   Conformance (DMARC) Parameters\", a new sub-registry called\
    \ \"DMARC\n   Report Format Registry\" has been created.\n   Names of DMARC failure\
    \ reporting formats must be registered with IANA\n   in this registry.  New entries\
    \ are assigned only for values that\n   satisfy the definition of Specification\
    \ Required, per\n   [IANA-CONSIDERATIONS].  In addition to a reference to a permanent\n\
    \   specification, each registration must include the format name; a\n   brief\
    \ description; and its status, which must be one of \"current\",\n   \"experimental\"\
    , or \"historic\".  The Designated Expert needs to\n   confirm that the provided\
    \ specification adequately describes the\n   report format and clearly presents\
    \ how it would be used within the\n   DMARC context by Domain Owners and Mail\
    \ Receivers.\n   The initial entry in this registry is as follows:\n    +--------+-------------+---------+-----------------------------+\n\
    \    | Format | Reference   | Status  | Description                 |\n    | \
    \ Name  |             |         |                             |\n    +--------+-------------+---------+-----------------------------+\n\
    \    | afrf   |  RFC 7489   | current | Authentication Failure      |\n    | \
    \       |             |         | Reporting Format (see       |\n    |       \
    \ |             |         | [AFRF])                     |\n    +--------+-------------+---------+-----------------------------+\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   This section discusses security issues and possible\
    \ remediations\n   (where available) for DMARC.\n"
- title: 12.1.  Authentication Methods
  contents:
  - "12.1.  Authentication Methods\n   Security considerations from the authentication\
    \ methods used by DMARC\n   are incorporated here by reference.\n"
- title: 12.2.  Attacks on Reporting URIs
  contents:
  - "12.2.  Attacks on Reporting URIs\n   URIs published in DNS TXT records are well-understood\
    \ possible\n   targets for attack.  Specifications such as [DNS] and [ROLES] either\n\
    \   expose or cause the exposure of email addresses that could be flooded\n  \
    \ by an attacker, for example; MX, NS, and other records found in the\n   DNS\
    \ advertise potential attack destinations; common DNS names such as\n   \"www\"\
    \ plainly identify the locations at which particular services can\n   be found,\
    \ providing destinations for targeted denial-of-service or\n   penetration attacks.\n\
    \   Thus, Domain Owners will need to harden these addresses against\n   various\
    \ attacks, including but not limited to:\n   o  high-volume denial-of-service\
    \ attacks;\n   o  deliberate construction of malformed reports intended to identify\n\
    \      or exploit parsing or processing vulnerabilities;\n   o  deliberate construction\
    \ of reports containing false claims for the\n      Submitter or Reported-Domain\
    \ fields, including the possibility of\n      false data from compromised but\
    \ known Mail Receivers.\n"
- title: 12.3.  DNS Security
  contents:
  - "12.3.  DNS Security\n   The DMARC mechanism and its underlying technologies (SPF,\
    \ DKIM)\n   depend on the security of the DNS.  To reduce the risk of subversion\n\
    \   of the DMARC mechanism due to DNS-based exploits, serious\n   consideration\
    \ should be given to the deployment of DNSSEC in parallel\n   with the deployment\
    \ of DMARC by both Domain Owners and Mail\n   Receivers.\n   Publication of data\
    \ using DNSSEC is relevant to Domain Owners and\n   third-party Report Receivers.\
    \  DNSSEC-aware resolution is relevant to\n   Mail Receivers and Report Receivers.\n"
- title: 12.4.  Display Name Attacks
  contents:
  - "12.4.  Display Name Attacks\n   A common attack in messaging abuse is the presentation\
    \ of false\n   information in the display-name portion of the RFC5322.From field.\n\
    \   For example, it is possible for the email address in that field to be\n  \
    \ an arbitrary address or domain name, while containing a well-known\n   name\
    \ (a person, brand, role, etc.) in the display name, intending to\n   fool the\
    \ end user into believing that the name is used legitimately.\n   The attack is\
    \ predicated on the notion that most common MUAs will\n   show the display name\
    \ and not the email address when both are\n   available.\n   Generally, display\
    \ name attacks are out of scope for DMARC, as\n   further exploration of possible\
    \ defenses against these attacks needs\n   to be undertaken.\n   There are a few\
    \ possible mechanisms that attempt mitigation of these\n   attacks, such as the\
    \ following:\n   o  If the display name is found to include an email address (as\n\
    \      specified in [MAIL]), execute the DMARC mechanism on the domain\n     \
    \ name found there rather than the domain name discovered\n      originally. \
    \ However, this addresses only a very specific attack\n      space, and spoofers\
    \ can easily circumvent it by simply not using\n      an email address in the\
    \ display name.  There are also known cases\n      of legitimate uses of an email\
    \ address in the display name with a\n      domain different from the one in the\
    \ address portion, e.g.,\n        From: \"user@example.org via Bug Tracker\" <support@example.com>\n\
    \   o  In the MUA, only show the display name if the DMARC mechanism\n      succeeds.\
    \  This too is easily defeated, as an attacker could\n      arrange to pass the\
    \ DMARC tests while fraudulently using another\n      domain name in the display\
    \ name.\n   o  In the MUA, only show the display name if the DMARC mechanism\n\
    \      passes and the email address thus validated matches one found in\n    \
    \  the receiving user's list of known addresses.\n"
- title: 12.5.  External Reporting Addresses
  contents:
  - "12.5.  External Reporting Addresses\n   To avoid abuse by bad actors, reporting\
    \ addresses generally have to\n   be inside the domains about which reports are\
    \ requested.  In order to\n   accommodate special cases such as a need to get\
    \ reports about domains\n   that cannot actually receive mail, Section 7.1 describes\
    \ a DNS-based\n   mechanism for verifying approved external reporting.\n   The\
    \ obvious consideration here is an increased DNS load against\n   domains that\
    \ are claimed as external recipients.  Negative caching\n   will mitigate this\
    \ problem, but only to a limited extent, mostly\n   dependent on the default TTL\
    \ in the domain's SOA record.\n   Where possible, external reporting is best achieved\
    \ by having the\n   report be directed to domains that can receive mail and simply\
    \ having\n   it automatically forwarded to the desired external destination.\n\
    \   Note that the addresses shown in the \"ruf\" tag receive more\n   information\
    \ that might be considered private data, since it is\n   possible for actual email\
    \ content to appear in the failure reports.\n   The URIs identified there are\
    \ thus more attractive targets for\n   intrusion attempts than those found in\
    \ the \"rua\" tag.  Moreover,\n   attacking the DNS of the subject domain to cause\
    \ failure data to be\n   routed fraudulently to an attacker's systems may be an\
    \ attractive\n   prospect.  Deployment of [DNSSEC] is advisable if this is a concern.\n\
    \   The verification mechanism presented in Section 7.1 is currently not\n   mandatory\
    \ (\"MUST\") but strongly recommended (\"SHOULD\").  It is\n   possible that it\
    \ would be elevated to a \"MUST\" by later security\n   review.\n"
- title: 12.6.  Secure Protocols
  contents:
  - "12.6.  Secure Protocols\n   This document encourages use of secure transport\
    \ mechanisms to\n   prevent loss of private data to third parties that may be\
    \ able to\n   monitor such transmissions.  Unencrypted mechanisms should be\n\
    \   avoided.\n   In particular, a message that was originally encrypted or otherwise\n\
    \   secured might appear in a report that is not sent securely, which\n   could\
    \ reveal private information.\n"
- title: 13.  References
  contents:
  - '13.  References

    '
- title: 13.1.  Normative References
  contents:
  - "13.1.  Normative References\n   [ABNF]     Crocker, D., Ed., and P. Overell,\
    \ \"Augmented BNF for\n              Syntax Specifications: ABNF\", STD 68, RFC\
    \ 5234,\n              January 2008, <http://www.rfc-editor.org/info/rfc5234>.\n\
    \   [AFRF]     Fontana, H., \"Authentication Failure Reporting Using the\n   \
    \           Abuse Reporting Format\", RFC 6591, April 2012,\n              <http://www.rfc-editor.org/info/rfc6591>.\n\
    \   [AFRF-DKIM]\n              Kucherawy, M., \"Extensions to DomainKeys Identified\
    \ Mail\n              (DKIM) for Failure Reporting\", RFC 6651, June 2012,\n \
    \             <http://www.rfc-editor.org/info/rfc6651>.\n   [AFRF-SPF] Kitterman,\
    \ S., \"Sender Policy Framework (SPF)\n              Authentication Failure Reporting\
    \ Using the Abuse Reporting\n              Format\", RFC 6652, June 2012,\n  \
    \            <http://www.rfc-editor.org/info/rfc6652>.\n   [DKIM]     Crocker,\
    \ D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,\n              \"DomainKeys\
    \ Identified Mail (DKIM) Signatures\", STD 76,\n              RFC 6376, September\
    \ 2011, <http://www.rfc-editor.org/\n              info/rfc6376>.\n   [DNS]  \
    \    Mockapetris, P., \"Domain names - implementation and\n              specification\"\
    , STD 13, RFC 1035, November 1987,\n              <http://www.rfc-editor.org/info/rfc1035>.\n\
    \   [DNS-CASE] Eastlake 3rd, D., \"Domain Name System (DNS) Case\n           \
    \   Insensitivity Clarification\", RFC 4343, January 2006,\n              <http://www.rfc-editor.org/info/rfc4343>.\n\
    \   [GZIP]     Levine, J., \"The 'application/zlib' and 'application/gzip'\n \
    \             Media Types\", RFC 6713, August 2012,\n              <http://www.rfc-editor.org/info/rfc6713>.\n\
    \   [IDNA]     Klensin, J., \"Internationalized Domain Names for\n           \
    \   Applications (IDNA): Definitions and Document Framework\",\n             \
    \ RFC 5890, August 2010,\n              <http://www.rfc-editor.org/info/rfc5890>.\n\
    \   [KEYWORDS] Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [MAIL]     Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n    \
    \          October 2008, <http://www.rfc-editor.org/info/rfc5322>.\n   [MIME]\
    \     Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n            \
    \  Extensions (MIME) Part One: Format of Internet Message\n              Bodies\"\
    , RFC 2045, November 1996,\n              <http://www.rfc-editor.org/info/rfc2045>.\n\
    \   [SEC-TERMS]\n              Shirey, R., \"Internet Security Glossary, Version\
    \ 2\",\n              FYI 36, RFC 4949, August 2007,\n              <http://www.rfc-editor.org/info/rfc4949>.\n\
    \   [SMTP]     Klensin, J., \"Simple Mail Transfer Protocol\", RFC 5321,\n   \
    \           October 2008, <http://www.rfc-editor.org/info/rfc5321>.\n   [SPF]\
    \      Kitterman, S., \"Sender Policy Framework (SPF) for\n              Authorizing\
    \ Use of Domains in Email, Version 1\", RFC 7208,\n              April 2014, <http://www.rfc-editor.org/info/rfc7208>.\n\
    \   [URI]      Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n   \
    \           Resource Identifier (URI): Generic Syntax\", STD 66,\n           \
    \   RFC 3986, January 2005,\n              <http://www.rfc-editor.org/info/rfc3986>.\n"
- title: 13.2.  Informative References
  contents:
  - "13.2.  Informative References\n   [ADSP]     Allman, E., Fenton, J., Delany,\
    \ M., and J. Levine,\n              \"DomainKeys Identified Mail (DKIM) Author\
    \ Domain Signing\n              Practices (ADSP)\", RFC 5617, August 2009,\n \
    \             <http://www.rfc-editor.org/info/rfc5617>.\n   [ARF]      Shafranovich,\
    \ Y., Levine, J., and M. Kucherawy, \"An\n              Extensible Format for\
    \ Email Feedback Reports\", RFC 5965,\n              August 2010, <http://www.rfc-editor.org/info/rfc5965>.\n\
    \   [AUTH-RESULTS]\n              Kucherawy, M., \"Message Header Field for Indicating\n\
    \              Message Authentication Status\", RFC 7001, September 2013,\n  \
    \            <http://www.rfc-editor.org/info/rfc7001>.\n   [Best-Guess-SPF]\n\
    \              Kitterman, S., \"Sender Policy Framework: Best guess record\n \
    \             (FAQ entry)\", May 2010,\n              <http://www.openspf.org/FAQ/Best_guess_record>.\n\
    \   [DKIM-DEPLOYMENT]\n              Hansen, T., Siegel, E., Hallam-Baker, P.,\
    \ and D. Crocker,\n              \"DomainKeys Identified Mail (DKIM) Development,\n\
    \              Deployment, and Operations\", RFC 5863, May 2010,\n           \
    \   <http://www.rfc-editor.org/info/rfc5863>.\n   [DKIM-LISTS]\n             \
    \ Kucherawy, M., \"DomainKeys Identified Mail (DKIM) and\n              Mailing\
    \ Lists\", BCP 167, RFC 6377, September 2011,\n              <http://www.rfc-editor.org/info/rfc6377>.\n\
    \   [DKIM-OVERVIEW]\n              Hansen, T., Crocker, D., and P. Hallam-Baker,\
    \ \"DomainKeys\n              Identified Mail (DKIM) Service Overview\", RFC 5585,\n\
    \              July 2009, <http://www.rfc-editor.org/info/rfc5585>.\n   [DKIM-THREATS]\n\
    \              Fenton, J., \"Analysis of Threats Motivating DomainKeys\n     \
    \         Identified Mail (DKIM)\", RFC 4686, September 2006,\n              <http://www.rfc-editor.org/info/rfc4686>.\n\
    \   [DNSSEC]   Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"DNS Security Introduction and Requirements\",\n            \
    \  RFC 4033, March 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n\
    \   [DSN]      Moore, K. and G. Vaudreuil, \"An Extensible Message Format\n  \
    \            for Delivery Status Notifications\", RFC 3464,\n              January\
    \ 2003, <http://www.rfc-editor.org/info/rfc3464>.\n   [EMAIL-ARCH]\n         \
    \     Crocker, D., \"Internet Mail Architecture\", RFC 5598,\n              July\
    \ 2009, <http://www.rfc-editor.org/info/rfc5598>.\n   [IANA-CONSIDERATIONS]\n\
    \              Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n   \
    \           IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n       \
    \       May 2008, <http://www.rfc-editor.org/info/rfc5226>.\n   [ROLES]    Crocker,\
    \ D., \"Mailbox Names for Common Services, Roles and\n              Functions\"\
    , RFC 2142, May 1997,\n              <http://www.rfc-editor.org/info/rfc2142>.\n"
- title: Appendix A.  Technology Considerations
  contents:
  - "Appendix A.  Technology Considerations\n   This section documents some design\
    \ decisions that were made in the\n   development of DMARC.  Specifically, addressed\
    \ here are some\n   suggestions that were considered but not included in the design.\n\
    \   This text is included to explain why they were considered and not\n   included\
    \ in this version.\n"
- title: A.1.  S/MIME
  contents:
  - "A.1.  S/MIME\n   S/MIME, or Secure Multipurpose Internet Mail Extensions, is\
    \ a\n   standard for encryption and signing of MIME data in a message.  This\n\
    \   was suggested and considered as a third security protocol for\n   authenticating\
    \ the source of a message.\n   DMARC is focused on authentication at the domain\
    \ level (i.e., the\n   Domain Owner taking responsibility for the message), while\
    \ S/MIME is\n   really intended for user-to-user authentication and encryption.\
    \  This\n   alone appears to make it a bad fit for DMARC's goals.\n   S/MIME also\
    \ suffers from the heavyweight problem of Public Key\n   Infrastructure, which\
    \ means that distribution of keys used to verify\n   signatures needs to be incorporated.\
    \  In many instances, this alone\n   is a showstopper.  There have been consistent\
    \ promises that PKI\n   usability and deployment will improve, but these have\
    \ yet to\n   materialize.  DMARC can revisit this choice after those barriers\
    \ are\n   addressed.\n   S/MIME has extensive deployment in specific market segments\n\
    \   (government, for example) but does not enjoy similar widespread\n   deployment\
    \ over the general Internet, and this shows no signs of\n   changing.  DKIM and\
    \ SPF both are deployed widely over the general\n   Internet, and their adoption\
    \ rates continue to be positive.\n   Finally, experiments have shown that including\
    \ S/MIME support in the\n   initial version of DMARC would neither cause nor enable\
    \ a substantial\n   increase in the accuracy of the overall mechanism.\n"
- title: A.2.  Method Exclusion
  contents:
  - "A.2.  Method Exclusion\n   It was suggested that DMARC include a mechanism by\
    \ which a Domain\n   Owner could tell Message Receivers not to attempt validation\
    \ by one\n   of the supported methods (e.g., \"check DKIM, but not SPF\").\n \
    \  Specifically, consider a Domain Owner that has deployed one of the\n   technologies,\
    \ and that technology fails for some messages, but such\n   failures don't cause\
    \ enforcement action.  Deploying DMARC would cause\n   enforcement action for\
    \ policies other than \"none\", which would appear\n   to exclude participation\
    \ by that Domain Owner.\n   The DMARC development team evaluated the idea of policy\
    \ exception\n   mechanisms on several occasions and invariably concluded that\
    \ there\n   was not a strong enough use case to include them.  The specific\n\
    \   target audience for DMARC does not appear to have concerns about the\n   failure\
    \ modes of one or the other being a barrier to DMARC's\n   adoption.\n   In the\
    \ scenario described above, the Domain Owner has a few options:\n   1.  Tighten\
    \ up its infrastructure to minimize the failure modes of\n       the single deployed\
    \ technology.\n   2.  Deploy the other supported authentication mechanism, to\
    \ offset\n       the failure modes of the first.\n   3.  Deploy DMARC in a reporting-only\
    \ mode.\n"
- title: A.3.  Sender Header Field
  contents:
  - "A.3.  Sender Header Field\n   It has been suggested in several message authentication\
    \ efforts that\n   the Sender header field be checked for an identifier of interest,\
    \ as\n   the standards indicate this as the proper way to indicate a\n   re-mailing\
    \ of content such as through a mailing list.  Most recently,\n   it was a protocol-level\
    \ option for DomainKeys, but on evolution to\n   DKIM, this property was removed.\n\
    \   The DMARC development team considered this and decided not to include\n  \
    \ support for doing so, for the following reasons:\n   1.  The main user protection\
    \ approach is to be concerned with what\n       the user sees when a message is\
    \ rendered.  There is no consistent\n       behavior among MUAs regarding what\
    \ to do with the content of the\n       Sender field, if present.  Accordingly,\
    \ supporting checking of\n       the Sender identifier would mean applying policy\
    \ to an identifier\n       the end user might never actually see, which can create\
    \ a vector\n       for attack against end users by simply forging a Sender field\n\
    \       containing some identifier that DMARC will like.\n   2.  Although it is\
    \ certainly true that this is what the Sender field\n       is for, its use in\
    \ this way is also unreliable, making it a poor\n       candidate for inclusion\
    \ in the DMARC evaluation algorithm.\n   3.  Allowing multiple ways to discover\
    \ policy introduces unacceptable\n       ambiguity into the DMARC evaluation algorithm\
    \ in terms of which\n       policy is to be applied and when.\n"
- title: A.4.  Domain Existence Test
  contents:
  - "A.4.  Domain Existence Test\n   A common practice among MTA operators, and indeed\
    \ one documented in\n   [ADSP], is a test to determine domain existence prior\
    \ to any more\n   expensive processing.  This is typically done by querying the\
    \ DNS for\n   MX, A, or AAAA resource records for the name being evaluated and\n\
    \   assuming that the domain is nonexistent if it could be determined\n   that\
    \ no such records were published for that domain name.\n   The original pre-standardization\
    \ version of this protocol included a\n   mandatory check of this nature.  It\
    \ was ultimately removed, as the\n   method's error rate was too high without\
    \ substantial manual tuning\n   and heuristic work.  There are indeed use cases\
    \ this work needs to\n   address where such a method would return a negative result\
    \ about a\n   domain for which reporting is desired, such as a registered domain\n\
    \   name that never sends legitimate mail and thus has none of these\n   records\
    \ present in the DNS.\n"
- title: A.5.  Issues with ADSP in Operation
  contents:
  - "A.5.  Issues with ADSP in Operation\n   DMARC has been characterized as a \"\
    super-ADSP\" of sorts.\n   Contributors to DMARC have compiled a list of issues\
    \ associated with\n   ADSP, gained from operational experience, that have influenced\
    \ the\n   direction of DMARC:\n   1.  ADSP has no support for subdomains, i.e.,\
    \ the ADSP record for\n       example.com does not explicitly or implicitly apply\
    \ to\n       subdomain.example.com.  If wildcarding is not applied, then\n   \
    \    spammers can trivially bypass ADSP by sending from a subdomain\n       with\
    \ no ADSP record.\n   2.  Nonexistent subdomains are explicitly out of scope in\
    \ ADSP.\n       There is nothing in ADSP that states receivers should simply\n\
    \       reject mail from NXDOMAINs regardless of ADSP policy (which of\n     \
    \  course allows spammers to trivially bypass ADSP by sending email\n       from\
    \ nonexistent subdomains).\n   3.  ADSP has no operational advice on when to look\
    \ up the ADSP\n       record.\n   4.  ADSP has no support for using SPF as an\
    \ auxiliary mechanism to\n       DKIM.\n   5.  ADSP has no support for a slow\
    \ rollout, i.e., no way to configure\n       a percentage of email on which the\
    \ receiver should apply the\n       policy.  This is important for large-volume\
    \ senders.\n   6.  ADSP has no explicit support for an intermediate phase where\
    \ the\n       receiver quarantines (e.g., sends to the recipient's \"spam\"\n\
    \       folder) rather than rejects the email.\n   7.  The binding between the\
    \ \"From\" header domain and DKIM is too\n       tight for ADSP; they must match\
    \ exactly.\n"
- title: A.6.  Organizational Domain Discovery Issues
  contents:
  - "A.6.  Organizational Domain Discovery Issues\n   Although protocols like ADSP\
    \ are useful for \"protecting\" a specific\n   domain name, they are not helpful\
    \ at protecting subdomains.  If one\n   wished to protect \"example.com\" by requiring\
    \ via ADSP that all mail\n   bearing an RFC5322.From domain of \"example.com\"\
    \ be signed, this would\n   \"protect\" that domain; however, one could then craft\
    \ an email whose\n   RFC5322.From domain is \"security.example.com\", and ADSP\
    \ would not\n   provide any protection.  One could use a DNS wildcard, but this\
    \ can\n   undesirably interfere with other DNS activity; one could add ADSP\n\
    \   records as fraudulent domains are discovered, but this solution does\n   not\
    \ scale and is a purely reactive measure against abuse.\n   The DNS does not provide\
    \ a method by which the \"domain of record\", or\n   the domain that was actually\
    \ registered with a domain registrar, can\n   be determined given an arbitrary\
    \ domain name.  Suggestions have been\n   made that attempt to glean such information\
    \ from SOA or NS resource\n   records, but these too are not fully reliable, as\
    \ the partitioning of\n   the DNS is not always done at administrative boundaries.\n\
    \   When seeking domain-specific policy based on an arbitrary domain\n   name,\
    \ one could \"climb the tree\", dropping labels off the left end of\n   the name\
    \ until the root is reached or a policy is discovered, but\n   then one could\
    \ craft a name that has a large number of nonsense\n   labels; this would cause\
    \ a Mail Receiver to attempt a large number of\n   queries in search of a policy\
    \ record.  Sending many such messages\n   constitutes an amplified denial-of-service\
    \ attack.\n   The Organizational Domain mechanism is a necessary component to\
    \ the\n   goals of DMARC.  The method described in Section 3.2 is far from\n \
    \  perfect but serves this purpose reasonably well without adding undue\n   burden\
    \ or semantics to the DNS.  If a method is created to do so that\n   is more reliable\
    \ and secure than the use of a public suffix list,\n   DMARC should be amended\
    \ to use that method as soon as it is generally\n   available.\n"
- title: A.6.1.  Public Suffix Lists
  contents:
  - "A.6.1.  Public Suffix Lists\n   A public suffix list for the purposes of determining\
    \ the\n   Organizational Domain can be obtained from various sources.  The most\n\
    \   common one is maintained by the Mozilla Foundation and made public at\n  \
    \ <http://publicsuffix.org>.  License terms governing the use of that\n   list\
    \ are available at that URI.\n   Note that if operators use a variety of public\
    \ suffix lists,\n   interoperability will be difficult or impossible to guarantee.\n"
- title: Appendix B.  Examples
  contents:
  - "Appendix B.  Examples\n   This section illustrates both the Domain Owner side\
    \ and the Mail\n   Receiver side of a DMARC exchange.\n"
- title: B.1.  Identifier Alignment Examples
  contents:
  - "B.1.  Identifier Alignment Examples\n   The following examples illustrate the\
    \ DMARC mechanism's use of\n   Identifier Alignment.  For brevity's sake, only\
    \ message headers are\n   shown, as message bodies are not considered when conducting\
    \ DMARC\n   checks.\n"
- title: B.1.1.  SPF
  contents:
  - "B.1.1.  SPF\n   The following SPF examples assume that SPF produces a passing\
    \ result.\n   Example 1: SPF in alignment:\n        MAIL FROM: <sender@example.com>\n\
    \        From: sender@example.com\n        Date: Fri, Feb 15 2002 16:54:30 -0800\n\
    \        To: receiver@example.org\n        Subject: here's a sample\n   In this\
    \ case, the RFC5321.MailFrom parameter and the RFC5322.From\n   field have identical\
    \ DNS domains.  Thus, the identifiers are in\n   alignment.\n   Example 2: SPF\
    \ in alignment (parent):\n        MAIL FROM: <sender@child.example.com>\n    \
    \    From: sender@example.com\n        Date: Fri, Feb 15 2002 16:54:30 -0800\n\
    \        To: receiver@example.org\n        Subject: here's a sample\n   In this\
    \ case, the RFC5322.From parameter includes a DNS domain that\n   is a parent\
    \ of the RFC5321.MailFrom domain.  Thus, the identifiers\n   are in alignment\
    \ if relaxed SPF mode is requested by the Domain\n   Owner, and not in alignment\
    \ if strict SPF mode is requested.\n   Example 3: SPF not in alignment:\n    \
    \    MAIL FROM: <sender@example.net>\n        From: sender@child.example.com\n\
    \        Date: Fri, Feb 15 2002 16:54:30 -0800\n        To: receiver@example.org\n\
    \        Subject: here's a sample\n   In this case, the RFC5321.MailFrom parameter\
    \ includes a DNS domain\n   that is neither the same as nor a parent of the RFC5322.From\
    \ domain.\n   Thus, the identifiers are not in alignment.\n"
- title: B.1.2.  DKIM
  contents:
  - "B.1.2.  DKIM\n   The examples below assume that the DKIM signatures pass verification.\n\
    \   Alignment cannot exist with a DKIM signature that does not verify.\n   Example\
    \ 1: DKIM in alignment:\n        DKIM-Signature: v=1; ...; d=example.com; ...\n\
    \        From: sender@example.com\n        Date: Fri, Feb 15 2002 16:54:30 -0800\n\
    \        To: receiver@example.org\n        Subject: here's a sample\n   In this\
    \ case, the DKIM \"d=\" parameter and the RFC5322.From field have\n   identical\
    \ DNS domains.  Thus, the identifiers are in alignment.\n   Example 2: DKIM in\
    \ alignment (parent):\n        DKIM-Signature: v=1; ...; d=example.com; ...\n\
    \        From: sender@child.example.com\n        Date: Fri, Feb 15 2002 16:54:30\
    \ -0800\n        To: receiver@example.org\n        Subject: here's a sample\n\
    \   In this case, the DKIM signature's \"d=\" parameter includes a DNS\n   domain\
    \ that is a parent of the RFC5322.From domain.  Thus, the\n   identifiers are\
    \ in alignment for relaxed mode, but not for strict\n   mode.\n   Example 3: DKIM\
    \ not in alignment:\n        DKIM-Signature: v=1; ...; d=sample.net; ...\n   \
    \     From: sender@child.example.com\n        Date: Fri, Feb 15 2002 16:54:30\
    \ -0800\n        To: receiver@example.org\n        Subject: here's a sample\n\
    \   In this case, the DKIM signature's \"d=\" parameter includes a DNS\n   domain\
    \ that is neither the same as nor a parent of the RFC5322.From\n   domain.  Thus,\
    \ the identifiers are not in alignment.\n"
- title: B.2.  Domain Owner Example
  contents:
  - "B.2.  Domain Owner Example\n   A Domain Owner that wants to use DMARC should\
    \ have already deployed\n   and tested SPF and DKIM.  The next step is to publish\
    \ a DNS record\n   that advertises a DMARC policy for the Domain Owner's Organizational\n\
    \   Domain.\n"
- title: B.2.1.  Entire Domain, Monitoring Only
  contents:
  - "B.2.1.  Entire Domain, Monitoring Only\n   The owner of the domain \"example.com\"\
    \ has deployed SPF and DKIM on\n   its messaging infrastructure.  The owner wishes\
    \ to begin using DMARC\n   with a policy that will solicit aggregate feedback\
    \ from receivers\n   without affecting how the messages are processed, in order\
    \ to:\n   o  Confirm that its legitimate messages are authenticating correctly\n\
    \   o  Verify that all authorized message sources have implemented\n      authentication\
    \ measures\n   o  Determine how many messages from other sources would be affected\n\
    \      by a blocking policy\n   The Domain Owner accomplishes this by constructing\
    \ a policy record\n   indicating that:\n   o  The version of DMARC being used\
    \ is \"DMARC1\" (\"v=DMARC1\")\n   o  Receivers should not alter how they treat\
    \ these messages because\n      of this DMARC policy record (\"p=none\")\n   o\
    \  Aggregate feedback reports should be sent via email to the address\n      \"\
    dmarc-feedback@example.com\"\n      (\"rua=mailto:dmarc-feedback@example.com\"\
    )\n   o  All messages from this Organizational Domain are subject to this\n  \
    \    policy (no \"pct\" tag present, so the default of 100% applies)\n   The DMARC\
    \ policy record might look like this when retrieved using a\n   common command-line\
    \ tool:\n     % dig +short TXT _dmarc.example.com.\n     \"v=DMARC1; p=none; rua=mailto:dmarc-feedback@example.com\"\
    \n   To publish such a record, the DNS administrator for the Domain Owner\n  \
    \ creates an entry like the following in the appropriate zone file\n   (following\
    \ the conventional zone file format):\n     ; DMARC record for the domain example.com\n\
    \     _dmarc  IN TXT ( \"v=DMARC1; p=none; \"\n                      \"rua=mailto:dmarc-feedback@example.com\"\
    \ )\n"
- title: B.2.2.  Entire Domain, Monitoring Only, Per-Message Reports
  contents:
  - "B.2.2.  Entire Domain, Monitoring Only, Per-Message Reports\n   The Domain Owner\
    \ from the previous example has used the aggregate\n   reporting to discover some\
    \ messaging systems that had not yet\n   implemented DKIM correctly, but they\
    \ are still seeing periodic\n   authentication failures.  In order to diagnose\
    \ these intermittent\n   problems, they wish to request per-message failure reports\
    \ when\n   authentication failures occur.\n   Not all Receivers will honor such\
    \ a request, but the Domain Owner\n   feels that any reports it does receive will\
    \ be helpful enough to\n   justify publishing this record.  The default per-message\
    \ report\n   format ([AFRF]) meets the Domain Owner's needs in this scenario.\n\
    \   The Domain Owner accomplishes this by adding the following to its\n   policy\
    \ record from Appendix B.2:\n   o  Per-message failure reports should be sent\
    \ via email to the\n      address \"auth-reports@example.com\"\n      (\"ruf=mailto:auth-reports@example.com\"\
    )\n   The DMARC policy record might look like this when retrieved using a\n  \
    \ common command-line tool (the output shown would appear on a single\n   line\
    \ but is wrapped here for publication):\n     % dig +short TXT _dmarc.example.com.\n\
    \     \"v=DMARC1; p=none; rua=mailto:dmarc-feedback@example.com;\n      ruf=mailto:auth-reports@example.com\"\
    \n   To publish such a record, the DNS administrator for the Domain Owner\n  \
    \ might create an entry like the following in the appropriate zone file\n   (following\
    \ the conventional zone file format):\n    ; DMARC record for the domain example.com\n\
    \    _dmarc  IN TXT ( \"v=DMARC1; p=none; \"\n                     \"rua=mailto:dmarc-feedback@example.com;\
    \ \"\n                     \"ruf=mailto:auth-reports@example.com\" )\n"
- title: B.2.3.  Per-Message Failure Reports Directed to Third Party
  contents:
  - "B.2.3.  Per-Message Failure Reports Directed to Third Party\n   The Domain Owner\
    \ from the previous example is maintaining the same\n   policy but now wishes\
    \ to have a third party receive and process the\n   per-message failure reports.\
    \  Again, not all Receivers will honor\n   this request, but those that do may\
    \ implement additional checks to\n   validate that the third party wishes to receive\
    \ the failure reports\n   for this domain.\n   The Domain Owner needs to alter\
    \ its policy record from Appendix B.2.2\n   as follows:\n   o  Per-message failure\
    \ reports should be sent via email to the\n      address \"auth-reports@thirdparty.example.net\"\
    \n      (\"ruf=mailto:auth-reports@thirdparty.example.net\")\n   The DMARC policy\
    \ record might look like this when retrieved using a\n   common command-line tool\
    \ (the output shown would appear on a single\n   line but is wrapped here for\
    \ publication):\n     % dig +short TXT _dmarc.example.com.\n     \"v=DMARC1; p=none;\
    \ rua=mailto:dmarc-feedback@example.com;\n      ruf=mailto:auth-reports@thirdparty.example.net\"\
    \n   To publish such a record, the DNS administrator for the Domain Owner\n  \
    \ might create an entry like the following in the appropriate zone file\n   (following\
    \ the conventional zone file format):\n     ; DMARC record for the domain example.com\n\
    \     _dmarc IN TXT ( \"v=DMARC1; p=none; \"\n                     \"rua=mailto:dmarc-feedback@example.com;\
    \ \"\n                     \"ruf=mailto:auth-reports@thirdparty.example.net\"\
    \ )\n   Because the address used in the \"ruf\" tag is outside the\n   Organizational\
    \ Domain in which this record is published, conforming\n   Receivers will implement\
    \ additional checks as described in\n   Section 7.1 of this document.  In order\
    \ to pass these additional\n   checks, the third party will need to publish an\
    \ additional DNS record\n   as follows:\n   o  Given the DMARC record published\
    \ by the Domain Owner at\n      \"_dmarc.example.com\", the DNS administrator\
    \ for the third party\n      will need to publish a TXT resource record at\n \
    \     \"example.com._report._dmarc.thirdparty.example.net\" with the value\n \
    \     \"v=DMARC1\".\n   The resulting DNS record might look like this when retrieved\
    \ using a\n   common command-line tool (the output shown would appear on a single\n\
    \   line but is wrapped here for publication):\n     % dig +short TXT example.com._report._dmarc.thirdparty.example.net\n\
    \     \"v=DMARC1\"\n   To publish such a record, the DNS administrator for example.net\
    \ might\n   create an entry like the following in the appropriate zone file\n\
    \   (following the conventional zone file format):\n     ; zone file for thirdparty.example.net\n\
    \     ; Accept DMARC failure reports on behalf of example.com\n     example.com._report._dmarc\
    \   IN   TXT    \"v=DMARC1\"\n   Intermediaries and other third parties should\
    \ refer to Section 7.1\n   for the full details of this mechanism.\n"
- title: B.2.4.  Subdomain, Sampling, and Multiple Aggregate Report URIs
  contents:
  - "B.2.4.  Subdomain, Sampling, and Multiple Aggregate Report URIs\n   The Domain\
    \ Owner has implemented SPF and DKIM in a subdomain used for\n   pre-production\
    \ testing of messaging services.  It now wishes to\n   request that participating\
    \ receivers act to reject messages from this\n   subdomain that fail to authenticate.\n\
    \   As a first step, it will ask that a portion (1/4 in this example) of\n   failing\
    \ messages be quarantined, enabling examination of messages\n   sent to mailboxes\
    \ hosted by participating receivers.  Aggregate\n   feedback reports will be sent\
    \ to a mailbox within the Organizational\n   Domain, and to a mailbox at a third\
    \ party selected and authorized to\n   receive same by the Domain Owner.  Aggregate\
    \ reports sent to the\n   third party are limited to a maximum size of ten megabytes.\n\
    \   The Domain Owner will accomplish this by constructing a policy record\n  \
    \ indicating that:\n   o  The version of DMARC being used is \"DMARC1\" (\"v=DMARC1\"\
    )\n   o  It is applied only to this subdomain (record is published at\n      \"\
    _dmarc.test.example.com\" and not \"_dmarc.example.com\")\n   o  Receivers should\
    \ quarantine messages from this Organizational\n      Domain that fail to authenticate\
    \ (\"p=quarantine\")\n   o  Aggregate feedback reports should be sent via email\
    \ to the\n      addresses \"dmarc-feedback@example.com\" and\n      \"example-tld-test@thirdparty.example.net\"\
    , with the latter\n      subjected to a maximum size limit (\"rua=mailto:dmarc-feedback@\n\
    \      example.com,mailto:tld-test@thirdparty.example.net!10m\")\n   o  25% of\
    \ messages from this Organizational Domain are subject to\n      action based\
    \ on this policy (\"pct=25\")\n   The DMARC policy record might look like this\
    \ when retrieved using a\n   common command-line tool (the output shown would\
    \ appear on a single\n   line but is wrapped here for publication):\n     % dig\
    \ +short TXT _dmarc.test.example.com\n     \"v=DMARC1; p=quarantine; rua=mailto:dmarc-feedback@example.com,\n\
    \      mailto:tld-test@thirdparty.example.net!10m; pct=25\"\n   To publish such\
    \ a record, the DNS administrator for the Domain Owner\n   might create an entry\
    \ like the following in the appropriate zone\n   file:\n     ; DMARC record for\
    \ the domain example.com\n     _dmarc IN  TXT  ( \"v=DMARC1; p=quarantine; \"\n\
    \                       \"rua=mailto:dmarc-feedback@example.com,\"\n         \
    \              \"mailto:tld-test@thirdparty.example.net!10m; \"\n            \
    \           \"pct=25\" )\n"
- title: B.3.  Mail Receiver Example
  contents:
  - "B.3.  Mail Receiver Example\n   A Mail Receiver that wants to use DMARC should\
    \ already be checking\n   SPF and DKIM, and possess the ability to collect relevant\
    \ information\n   from various email-processing stages to provide feedback to\
    \ Domain\n   Owners (possibly via Report Receivers).\n"
- title: B.3.1.  Processing of SMTP Time
  contents:
  - "B.3.1.  Processing of SMTP Time\n   An optimal DMARC-enabled Mail Receiver performs\
    \ authentication and\n   Identifier Alignment checking during the [SMTP] conversation.\n\
    \   Prior to returning a final reply to the DATA command, the Mail\n   Receiver's\
    \ MTA has performed:\n   1.  An SPF check to determine an SPF-authenticated Identifier.\n\
    \   2.  DKIM checks that yield one or more DKIM-authenticated\n       Identifiers.\n\
    \   3.  A DMARC policy lookup.\n   The presence of an Author Domain DMARC record\
    \ indicates that the Mail\n   Receiver should continue with DMARC-specific processing\
    \ before\n   returning a reply to the DATA command.\n   Given a DMARC record and\
    \ the set of Authenticated Identifiers, the\n   Mail Receiver checks to see if\
    \ the Authenticated Identifiers align\n   with the Author Domain (taking into\
    \ consideration any strict versus\n   relaxed options found in the DMARC record).\n\
    \   For example, the following sample data is considered to be from a\n   piece\
    \ of email originating from the Domain Owner of \"example.com\":\n     Author\
    \ Domain: example.com\n     SPF-authenticated Identifier: mail.example.com\n \
    \    DKIM-authenticated Identifier: example.com\n     DMARC record:\n       \"\
    v=DMARC1; p=reject; aspf=r;\n        rua=mailto:dmarc-feedback@example.com\"\n\
    \   In the above sample, both the SPF-authenticated Identifier and the\n   DKIM-authenticated\
    \ Identifier align with the Author Domain.  The Mail\n   Receiver considers the\
    \ above email to pass the DMARC check, avoiding\n   the \"reject\" policy that\
    \ is to be applied to email that fails to pass\n   the DMARC check.\n   If no\
    \ Authenticated Identifiers align with the Author Domain, then\n   the Mail Receiver\
    \ applies the DMARC-record-specified policy.\n   However, before this action is\
    \ taken, the Mail Receiver can consult\n   external information to override the\
    \ Domain Owner's policy.  For\n   example, if the Mail Receiver knows that this\
    \ particular email came\n   from a known and trusted forwarder (that happens to\
    \ break both SPF\n   and DKIM), then the Mail Receiver may choose to ignore the\
    \ Domain\n   Owner's policy.\n   The Mail Receiver is now ready to reply to the\
    \ DATA command.  If the\n   DMARC check yields that the message is to be rejected,\
    \ then the Mail\n   Receiver replies with a 5xy code to inform the sender of failure.\
    \  If\n   the DMARC check cannot be resolved due to transient network errors,\n\
    \   then the Mail Receiver replies with a 4xy code to inform the sender\n   as\
    \ to the need to reattempt delivery later.  If the DMARC check\n   yields a passing\
    \ message, then the Mail Receiver continues on with\n   email processing, perhaps\
    \ using the result of the DMARC check as an\n   input to additional processing\
    \ modules such as a domain reputation\n   query.\n   Before exiting DMARC-specific\
    \ processing, the Mail Receiver checks to\n   see if the Author Domain DMARC record\
    \ requests AFRF-based reporting.\n   If so, then the Mail Receiver can emit an\
    \ AFRF to the reporting\n   address supplied in the DMARC record.\n   At the exit\
    \ of DMARC-specific processing, the Mail Receiver captures\n   (through logging\
    \ or direct insertion into a data store) the result of\n   DMARC processing. \
    \ Captured information is used to build feedback for\n   Domain Owner consumption.\
    \  This is not necessary if the Domain Owner\n   has not requested aggregate reports,\
    \ i.e., no \"rua\" tag was found in\n   the policy record.\n"
- title: 'B.4.  Utilization of Aggregate Feedback: Example'
  contents:
  - "B.4.  Utilization of Aggregate Feedback: Example\n   Aggregate feedback is consumed\
    \ by Domain Owners to verify a Domain\n   Owner's understanding of how the Domain\
    \ Owner's domain is being\n   processed by the Mail Receiver.  Aggregate reporting\
    \ data on emails\n   that pass all DMARC-supporting authentication checks is used\
    \ by\n   Domain Owners to verify that authentication practices remain\n   accurate.\
    \  For example, if a third party is sending on behalf of a\n   Domain Owner, the\
    \ Domain Owner can use aggregate report data to\n   verify ongoing authentication\
    \ practices of the third party.\n   Data on email that only partially passes underlying\
    \ authentication\n   checks provides visibility into problems that need to be\
    \ addressed by\n   the Domain Owner.  For example, if either SPF or DKIM fails\
    \ to pass,\n   the Domain Owner is provided with enough information to either\n\
    \   directly correct the problem or understand where authentication-\n   breaking\
    \ changes are being introduced in the email transmission path.\n   If authentication-breaking\
    \ changes due to email transmission path\n   cannot be directly corrected, then\
    \ the Domain Owner at least\n   maintains an understanding of the effect of DMARC-based\
    \ policies upon\n   the Domain Owner's email.\n   Data on email that fails all\
    \ underlying authentication checks\n   provides baseline visibility on how the\
    \ Domain Owner's domain is\n   being received at the Mail Receiver.  Based on\
    \ this visibility, the\n   Domain Owner can begin deployment of authentication\
    \ technologies\n   across uncovered email sources.  Additionally, the Domain Owner\
    \ may\n   come to an understanding of how its domain is being misused.\n"
- title: B.5.  mailto Transport Example
  contents:
  - "B.5.  mailto Transport Example\n   A DMARC record can contain a \"mailto\" reporting\
    \ address, such as:\n     mailto:dmarc-feedback@example.com\n   A sample aggregate\
    \ report from the Mail Receiver at\n   mail.receiver.example follows:\n     DKIM-Signature:\
    \ v=1; ...; d=mail.receiver.example; ...\n     From: dmarc-reporting@mail.receiver.example\n\
    \     Date: Fri, Feb 15 2002 16:54:30 -0800\n     To: dmarc-feedback@example.com\n\
    \     Subject: Report Domain: example.com\n         Submitter: mail.receiver.example\n\
    \         Report-ID: <2002.02.15.1>\n     MIME-Version: 1.0\n     Content-Type:\
    \ multipart/alternative;\n         boundary=\"----=_NextPart_000_024E_01CC9B0A.AFE54C00\"\
    \n     Content-Language: en-us\n     This is a multipart message in MIME format.\n\
    \     ------=_NextPart_000_024E_01CC9B0A.AFE54C00\n     Content-Type: text/plain;\
    \ charset=\"us-ascii\"\n     Content-Transfer-Encoding: 7bit\n     This is an\
    \ aggregate report from mail.receiver.example.\n     ------=_NextPart_000_024E_01CC9B0A.AFE54C00\n\
    \     Content-Type: application/gzip\n     Content-Transfer-Encoding: base64\n\
    \     Content-Disposition: attachment;\n         filename=\"mail.receiver.example!example.com!\n\
    \                   1013662812!1013749130.gz\"\n     <gzipped content of report>\n\
    \     ------=_NextPart_000_024E_01CC9B0A.AFE54C00--\n   Not shown in the above\
    \ example is that the Mail Receiver's feedback\n   should be authenticated using\
    \ SPF.  Also, the value of the \"filename\"\n   MIME parameter is wrapped for\
    \ printing in this specification but\n   would normally appear as one continuous\
    \ string.\n"
- title: Appendix C.  DMARC XML Schema
  contents:
  - "Appendix C.  DMARC XML Schema\n   The following is the proposed initial schema\
    \ for producing\n   XML-formatted aggregate reports as described in this document.\n\
    \   NOTE: Per the definition of XML, unless otherwise specified in the\n   schema\
    \ below, the minOccurs and maxOccurs values for each element are\n   set to 1.\n\
    \   <?xml version=\"1.0\"?>\n   <xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
    \n     targetNamespace=\"http://dmarc.org/dmarc-xml/0.1\">\n   <!-- The time range\
    \ in UTC covered by messages in this report,\n        specified in seconds since\
    \ epoch. -->\n   <xs:complexType name=\"DateRangeType\">\n     <xs:all>\n    \
    \   <xs:element name=\"begin\" type=\"xs:integer\"/>\n       <xs:element name=\"\
    end\" type=\"xs:integer\"/>\n     </xs:all>\n   </xs:complexType>\n   <!-- Report\
    \ generator metadata. -->\n   <xs:complexType name=\"ReportMetadataType\">\n \
    \    <xs:sequence>\n       <xs:element name=\"org_name\" type=\"xs:string\"/>\n\
    \       <xs:element name=\"email\" type=\"xs:string\"/>\n       <xs:element name=\"\
    extra_contact_info\" type=\"xs:string\"\n                   minOccurs=\"0\"/>\n\
    \       <xs:element name=\"report_id\" type=\"xs:string\"/>\n       <xs:element\
    \ name=\"date_range\" type=\"DateRangeType\"/>\n       <xs:element name=\"error\"\
    \ type=\"xs:string\" minOccurs=\"0\"\n                   maxOccurs=\"unbounded\"\
    />\n     </xs:sequence>\n   </xs:complexType>\n   <!-- Alignment mode (relaxed\
    \ or strict) for DKIM and SPF. -->\n   <xs:simpleType name=\"AlignmentType\">\n\
    \     <xs:restriction base=\"xs:string\">\n       <xs:enumeration value=\"r\"\
    />\n       <xs:enumeration value=\"s\"/>\n     </xs:restriction>\n   </xs:simpleType>\n\
    \   <!-- The policy actions specified by p and sp in the\n        DMARC record.\
    \ -->\n   <xs:simpleType name=\"DispositionType\">\n     <xs:restriction base=\"\
    xs:string\">\n       <xs:enumeration value=\"none\"/>\n       <xs:enumeration\
    \ value=\"quarantine\"/>\n       <xs:enumeration value=\"reject\"/>\n     </xs:restriction>\n\
    \   </xs:simpleType>\n   <!-- The DMARC policy that applied to the messages in\n\
    \        this report. -->\n   <xs:complexType name=\"PolicyPublishedType\">\n\
    \     <xs:all>\n       <!-- The domain at which the DMARC record was found. -->\n\
    \       <xs:element name=\"domain\" type=\"xs:string\"/>\n       <!-- The DKIM\
    \ alignment mode. -->\n       <xs:element name=\"adkim\" type=\"AlignmentType\"\
    \n                   minOccurs=\"0\"/>\n       <!-- The SPF alignment mode. -->\n\
    \       <xs:element name=\"aspf\" type=\"AlignmentType\"\n                   minOccurs=\"\
    0\"/>\n       <!-- The policy to apply to messages from the domain. -->\n    \
    \   <xs:element name=\"p\" type=\"DispositionType\"/>\n       <!-- The policy\
    \ to apply to messages from subdomains. -->\n       <xs:element name=\"sp\" type=\"\
    DispositionType\"/>\n       <!-- The percent of messages to which policy applies.\
    \ -->\n       <xs:element name=\"pct\" type=\"xs:integer\"/>\n       <!-- Failure\
    \ reporting options in effect. -->\n       <xs:element name=\"fo\" type=\"xs:string\"\
    />\n     </xs:all>\n   </xs:complexType>\n   <!-- The DMARC-aligned authentication\
    \ result. -->\n   <xs:simpleType name=\"DMARCResultType\">\n     <xs:restriction\
    \ base=\"xs:string\">\n       <xs:enumeration value=\"pass\"/>\n       <xs:enumeration\
    \ value=\"fail\"/>\n     </xs:restriction>\n   </xs:simpleType>\n   <!-- Reasons\
    \ that may affect DMARC disposition or execution\n        thereof. -->\n   <xs:simpleType\
    \ name=\"PolicyOverrideType\">\n     <xs:restriction base=\"xs:string\">\n   \
    \    <xs:enumeration value=\"forwarded\"/>\n       <xs:enumeration value=\"sampled_out\"\
    />\n       <xs:enumeration value=\"trusted_forwarder\"/>\n       <xs:enumeration\
    \ value=\"mailing_list\"/>\n       <xs:enumeration value=\"local_policy\"/>\n\
    \       <xs:enumeration value=\"other\"/>\n     </xs:restriction>\n   </xs:simpleType>\n\
    \   <!-- How do we allow report generators to include new\n        classes of\
    \ override reasons if they want to be more\n        specific than \"other\"? -->\n\
    \   <xs:complexType name=\"PolicyOverrideReason\">\n     <xs:all>\n       <xs:element\
    \ name=\"type\" type=\"PolicyOverrideType\"/>\n       <xs:element name=\"comment\"\
    \ type=\"xs:string\"\n                   minOccurs=\"0\"/>\n     </xs:all>\n \
    \  </xs:complexType>\n   <!-- Taking into account everything else in the record,\n\
    \        the results of applying DMARC. -->\n   <xs:complexType name=\"PolicyEvaluatedType\"\
    >\n     <xs:sequence>\n       <xs:element name=\"disposition\" type=\"DispositionType\"\
    />\n       <xs:element name=\"dkim\" type=\"DMARCResultType\"/>\n       <xs:element\
    \ name=\"spf\" type=\"DMARCResultType\"/>\n       <xs:element name=\"reason\"\
    \ type=\"PolicyOverrideReason\"\n                   minOccurs=\"0\" maxOccurs=\"\
    unbounded\"/>\n     </xs:sequence>\n   </xs:complexType>\n   <!-- Credit to Roger\
    \ L. Costello for IPv4 regex\n        http://mailman.ic.ac.uk/pipermail/xml-dev/1999-December/\n\
    \             018018.html -->\n   <!-- Credit to java2s.com for IPv6 regex\n \
    \       http://www.java2s.com/Code/XML/XML-Schema/\n             IPv6addressesareeasiertodescribeusingasimpleregex.htm\
    \ -->\n   <xs:simpleType name=\"IPAddress\">\n     <xs:restriction base=\"xs:string\"\
    >\n       <xs:pattern value=\"((1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).){3}\n    \
    \               (1?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])|\n                   ([A-Fa-f0-9]{1,4}:){7}[A-Fa-f0-9]{1,4}\"\
    />\n     </xs:restriction>\n   </xs:simpleType>\n   <xs:complexType name=\"RowType\"\
    >\n     <xs:all>\n       <!-- The connecting IP. -->\n       <xs:element name=\"\
    source_ip\" type=\"IPAddress\"/>\n       <!-- The number of matching messages.\
    \ -->\n       <xs:element name=\"count\" type=\"xs:integer\"/>\n       <!-- The\
    \ DMARC disposition applying to matching\n            messages. -->\n       <xs:element\
    \ name=\"policy_evaluated\"\n                   type=\"PolicyEvaluatedType\"\n\
    \                   minOccurs=\"1\"/>\n     </xs:all>\n   </xs:complexType>\n\
    \   <xs:complexType name=\"IdentifierType\">\n     <xs:all>\n       <!-- The envelope\
    \ recipient domain. -->\n       <xs:element name=\"envelope_to\" type=\"xs:string\"\
    \n                   minOccurs=\"0\"/>\n       <!-- The RFC5321.MailFrom domain.\
    \ -->\n       <xs:element name=\"envelope_from\" type=\"xs:string\"\n        \
    \           minOccurs=\"1\"/>\n       <!-- The RFC5322.From domain. -->\n    \
    \   <xs:element name=\"header_from\" type=\"xs:string\"\n                   minOccurs=\"\
    1\"/>\n     </xs:all>\n   </xs:complexType>\n   <!-- DKIM verification result,\
    \ according to RFC 7001\n        Section 2.6.1. -->\n   <xs:simpleType name=\"\
    DKIMResultType\">\n     <xs:restriction base=\"xs:string\">\n       <xs:enumeration\
    \ value=\"none\"/>\n       <xs:enumeration value=\"pass\"/>\n       <xs:enumeration\
    \ value=\"fail\"/>\n       <xs:enumeration value=\"policy\"/>\n       <xs:enumeration\
    \ value=\"neutral\"/>\n       <xs:enumeration value=\"temperror\"/>\n       <xs:enumeration\
    \ value=\"permerror\"/>\n     </xs:restriction>\n   </xs:simpleType>\n   <xs:complexType\
    \ name=\"DKIMAuthResultType\">\n     <xs:all>\n       <!-- The \"d=\" parameter\
    \ in the signature. -->\n       <xs:element name=\"domain\" type=\"xs:string\"\
    \n                   minOccurs=\"1\"/>\n       <!-- The \"s=\" parameter in the\
    \ signature. -->\n       <xs:element name=\"selector\" type=\"xs:string\"\n  \
    \                 minOccurs=\"0\"/>\n       <!-- The DKIM verification result.\
    \ -->\n       <xs:element name=\"result\" type=\"DKIMResultType\"\n          \
    \         minOccurs=\"1\"/>\n       <!-- Any extra information (e.g., from\n \
    \           Authentication-Results). -->\n       <xs:element name=\"human_result\"\
    \ type=\"xs:string\"\n                   minOccurs=\"0\"/>\n     </xs:all>\n \
    \  </xs:complexType>\n   <!-- SPF domain scope. -->\n   <xs:simpleType name=\"\
    SPFDomainScope\">\n     <xs:restriction base=\"xs:string\">\n       <xs:enumeration\
    \ value=\"helo\"/>\n       <xs:enumeration value=\"mfrom\"/>\n     </xs:restriction>\n\
    \   </xs:simpleType>\n   <!-- SPF result. -->\n   <xs:simpleType name=\"SPFResultType\"\
    >\n     <xs:restriction base=\"xs:string\">\n       <xs:enumeration value=\"none\"\
    />\n       <xs:enumeration value=\"neutral\"/>\n       <xs:enumeration value=\"\
    pass\"/>\n       <xs:enumeration value=\"fail\"/>\n       <xs:enumeration value=\"\
    softfail\"/>\n       <!-- \"TempError\" commonly implemented as \"unknown\". -->\n\
    \       <xs:enumeration value=\"temperror\"/>\n       <!-- \"PermError\" commonly\
    \ implemented as \"error\". -->\n       <xs:enumeration value=\"permerror\"/>\n\
    \     </xs:restriction>\n   </xs:simpleType>\n   <xs:complexType name=\"SPFAuthResultType\"\
    >\n     <xs:all>\n       <!-- The checked domain. -->\n       <xs:element name=\"\
    domain\" type=\"xs:string\" minOccurs=\"1\"/>\n       <!-- The scope of the checked\
    \ domain. -->\n       <xs:element name=\"scope\" type=\"SPFDomainScope\" minOccurs=\"\
    1\"/>\n       <!-- The SPF verification result. -->\n       <xs:element name=\"\
    result\" type=\"SPFResultType\"\n                   minOccurs=\"1\"/>\n     </xs:all>\n\
    \   </xs:complexType>\n   <!-- This element contains DKIM and SPF results, uninterpreted\n\
    \        with respect to DMARC. -->\n   <xs:complexType name=\"AuthResultType\"\
    >\n     <xs:sequence>\n       <!-- There may be no DKIM signatures, or multiple\
    \ DKIM\n            signatures. -->\n       <xs:element name=\"dkim\" type=\"\
    DKIMAuthResultType\"\n         minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n   \
    \    <!-- There will always be at least one SPF result. -->\n       <xs:element\
    \ name=\"spf\" type=\"SPFAuthResultType\" minOccurs=\"1\"\n                  \
    \ maxOccurs=\"unbounded\"/>\n     </xs:sequence>\n   </xs:complexType>\n   <!--\
    \ This element contains all the authentication results that\n        were evaluated\
    \ by the receiving system for the given set of\n        messages. -->\n   <xs:complexType\
    \ name=\"RecordType\">\n     <xs:sequence>\n       <xs:element name=\"row\" type=\"\
    RowType\"/>\n       <xs:element name=\"identifiers\" type=\"IdentifierType\"/>\n\
    \       <xs:element name=\"auth_results\" type=\"AuthResultType\"/>\n     </xs:sequence>\n\
    \   </xs:complexType>\n   <!-- Parent -->\n   <xs:element name=\"feedback\">\n\
    \     <xs:complexType>\n       <xs:sequence>\n         <xs:element name=\"version\"\
    \n                     type=\"xs:decimal\"/>\n         <xs:element name=\"report_metadata\"\
    \n                     type=\"ReportMetadataType\"/>\n         <xs:element name=\"\
    policy_published\"\n                     type=\"PolicyPublishedType\"/>\n    \
    \     <xs:element name=\"record\" type=\"RecordType\"\n                     maxOccurs=\"\
    unbounded\"/>\n       </xs:sequence>\n     </xs:complexType>\n   </xs:element>\n\
    \   </xs:schema>\n   Descriptions of the PolicyOverrideTypes:\n   forwarded: \
    \ The message was relayed via a known forwarder, or local\n      heuristics identified\
    \ the message as likely having been forwarded.\n      There is no expectation\
    \ that authentication would pass.\n   local_policy:  The Mail Receiver's local\
    \ policy exempted the message\n      from being subjected to the Domain Owner's\
    \ requested policy\n      action.\n   mailing_list:  Local heuristics determined\
    \ that the message arrived\n      via a mailing list, and thus authentication\
    \ of the original\n      message was not expected to succeed.\n   other:  Some\
    \ policy exception not covered by the other entries in\n      this list occurred.\
    \  Additional detail can be found in the\n      PolicyOverrideReason's \"comment\"\
    \ field.\n   sampled_out:  The message was exempted from application of policy\
    \ by\n      the \"pct\" setting in the DMARC policy record.\n   trusted_forwarder:\
    \  Message authentication failure was anticipated by\n      other evidence linking\
    \ the message to a locally maintained list of\n      known and trusted forwarders.\n\
    \   The \"version\" for reports generated per this specification MUST be\n   the\
    \ value 1.0.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   DMARC and the draft version of this document submitted to\
    \ the\n   Independent Submission Editor were the result of lengthy efforts by\n\
    \   an informal industry consortium: DMARC.org (see <http://dmarc.org>).\n   Participating\
    \ companies included Agari, American Greetings, AOL, Bank\n   of America, Cloudmark,\
    \ Comcast, Facebook, Fidelity Investments,\n   Google, JPMorgan Chase & Company,\
    \ LinkedIn, Microsoft, Netease,\n   PayPal, ReturnPath, The Trusted Domain Project,\
    \ and Yahoo!.  Although\n   the contributors and supporters are too numerous to\
    \ mention, notable\n   individual contributions were made by J. Trent Adams, Michael\
    \ Adkins,\n   Monica Chew, Dave Crocker, Tim Draegen, Steve Jones, Franck Martin,\n\
    \   Brett McDowell, and Paul Midgen.  The contributors would also like to\n  \
    \ recognize the invaluable input and guidance that was provided early\n   on by\
    \ J.D. Falk.\n   Additional contributions within the IETF context were made by\
    \ Kurt\n   Anderson, Michael Jack Assels, Les Barstow, Anne Bennett, Jim Fenton,\n\
    \   J. Gomez, Mike Jones, Scott Kitterman, Eliot Lear, John Levine,\n   S. Moonesamy,\
    \ Rolf Sonneveld, Henry Timmes, and Stephen J. Turnbull.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Murray S. Kucherawy (editor)\n   EMail: superuser@gmail.com\n\
    \   Elizabeth Zwicky (editor)\n   Yahoo!\n   EMail: zwicky@yahoo-inc.com\n"
