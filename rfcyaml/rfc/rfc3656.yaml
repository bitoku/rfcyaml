- title: __initial_text__
  contents:
  - "                     The Mailbox Update (MUPDATE)\n                 Distributed\
    \ Mailbox Database Protocol\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2003).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   As the demand for high-performance mail delivery agents increases,\
    \ it\n   becomes apparent that single-machine solutions are inadequate to the\n\
    \   task, both because of capacity limits and that the failure of the\n   single\
    \ machine means a loss of mail delivery for all users.  It is\n   preferable to\
    \ allow many machines to share the responsibility of mail\n   delivery.\n   The\
    \ Mailbox Update (MUPDATE) protocol allows a group of Internet\n   Message Access\
    \ Protocol (IMAP) or Post Office Protocol - Version 3\n   (POP3) servers to function\
    \ with a unified mailbox namespace.  This\n   document is intended to serve as\
    \ a reference guide to that protocol.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Protocol Overview . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n       2.1.  Atoms . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n       2.2.  Strings . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   4\n   3.  Server Responses  . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n       3.1.  Response: OK  . . . . . . . . . . . . . . . . . . . . .\
    \   5\n       3.2.  Response: NO  . . . . . . . . . . . . . . . . . . . . .  \
    \ 5\n       3.3.  Response: BAD . . . . . . . . . . . . . . . . . . . . .   5\n\
    \       3.4.  Response: BYE . . . . . . . . . . . . . . . . . . . . .   6\n  \
    \     3.5.  Response: RESERVE . . . . . . . . . . . . . . . . . . .   6\n    \
    \   3.6.  Response: MAILBOX . . . . . . . . . . . . . . . . . . .   6\n      \
    \ 3.7.  Response: DELETE  . . . . . . . . . . . . . . . . . . .   7\n       3.8.\
    \  Server Capability Response. . . . . . . . . . . . . . .   7\n   4.  Client\
    \ Commands . . . . . . . . . . . . . . . . . . . . . . .   8\n       4.1.  Command:\
    \ ACTIVATE . . . . . . . . . . . . . . . . . . .   8\n       4.2.  Command: AUTHENTICATE\
    \ . . . . . . . . . . . . . . . . .   8\n       4.3.  Command: DEACTIVATE . .\
    \ . . . . . . . . . . . . . . . .   9\n       4.4.  Command: DELETE . . . . .\
    \ . . . . . . . . . . . . . . .   9\n       4.5.  Command: FIND . . . . . . .\
    \ . . . . . . . . . . . . . .   9\n       4.6.  Command: LIST . . . . . . . .\
    \ . . . . . . . . . . . . .  10\n       4.7.  Command: LOGOUT . . . . . . . .\
    \ . . . . . . . . . . . .  10\n       4.8.  Command: NOOP . . . . . . . . . .\
    \ . . . . . . . . . . .  10\n       4.9.  Command: RESERVE. . . . . . . . . .\
    \ . . . . . . . . . .  10\n       4.10. Command: STARTTLS . . . . . . . . . .\
    \ . . . . . . . . .  11\n       4.11. Command: UPDATE . . . . . . . . . . . .\
    \ . . . . . . . .  12\n   5.  MUPDATE Formal Syntax . . . . . . . . . . . . .\
    \ . . . . . . .  12\n   6.  MUPDATE URL Scheme. . . . . . . . . . . . . . . .\
    \ . . . . . .  14\n       6.1.  MUPDATE URL Scheme Registration Form. . . . .\
    \ . . . . .  14\n   7.  Security Considerations . . . . . . . . . . . . . . .\
    \ . . . .  15\n   8.  IANA Considerations . . . . . . . . . . . . . . . . . .\
    \ . . .  16\n   9.  Intellectual Property Rights. . . . . . . . . . . . . . .\
    \ . .  16\n   10. References. . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  17\n       10.1. Normative References. . . . . . . . . . . . . . . . . .\
    \  17\n       10.2. Informative References. . . . . . . . . . . . . . . . .  17\n\
    \   11. Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  18\n  \
    \ 12. Author's Address. . . . . . . . . . . . . . . . . . . . . . .  18\n   13.\
    \ Full Copyright Statement. . . . . . . . . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In order to support an architecture where there are multiple\
    \ [IMAP,\n   POP3] servers sharing a common mailbox database, it is necessary\
    \ to\n   be able to provide atomic mailbox operations, as well as offer\n   sufficient\
    \ guarantees about database consistency.\n   The primary goal of the MUPDATE protocol\
    \ is to be simple to implement\n   yet allow for database consistency between\
    \ participants.\n   The key words \"MUST, \"MUST NOT\", \"REQUIRED\", \"SHOULD\"\
    , \"SHOULD NOT\",\n   \"RECOMMENDED\", and \"MAY\" in this document are to be\
    \ interpreted as\n   defined in BCP 14, RFC 2119 [KEYWORDS].\n   In examples,\
    \ \"C:\" and \"S:\" indicate lines sent by the client and\n   server respectively.\n"
- title: 2.  Protocol Overview
  contents:
  - "2.  Protocol Overview\n   The MUPDATE protocol assumes a reliable data stream\
    \ such as a TCP\n   network connection.  IANA has registered port 3905 with a\
    \ short name\n   of \"mupdate\" for this purpose.\n   In the current implementation\
    \ of the MUPDATE protocol there are three\n   types of participants: a single\
    \ master server, slave (or replica)\n   servers, and clients.  The master server\
    \ maintains an authoritative\n   copy of the mailbox database.  Slave servers\
    \ connect to the MUPDATE\n   master server as clients, and function as replicas\
    \ from the point of\n   view of end clients.  End clients may connect to either\
    \ the master or\n   any slave and perform searches against the database, however\n\
    \   operations that change the database can only be performed against the\n  \
    \ master.  For the purposes of protocol discussion we will consider a\n   slave's\
    \ connection to the master identical to that of any other\n   client.\n   After\
    \ connection, all commands from a client to server must have an\n   associated\
    \ unique tag which is an alphanumeric string.  Commands MAY\n   be pipelined from\
    \ the client to the server (that is, the client need\n   not wait for the response\
    \ before sending the next command).  The\n   server MUST execute the commands\
    \ in the order they were received,\n   however.\n   If the server supports an\
    \ inactivity login timeout, it MUST be at\n   least 15 minutes.\n   MUPDATE uses\
    \ data formats similar to those used in [ACAP].  That is,\n   atoms and strings.\
    \  All commands and tags in the protocol are\n   transmitted as atoms.  All other\
    \ data is considered to a string, and\n   must be quoted or transmitted as a literal.\n\
    \   Outside of a literal, both clients and servers MUST support line\n   lengths\
    \ of at least 1024 octets (including the trailing CR and LF\n   characters). \
    \ If a line of a longer length must be transmitted,\n   implementations MUST make\
    \ use of literals to do so.\n"
- title: 2.1.  Atoms
  contents:
  - "2.1.  Atoms\n   An atom consists of one or more alphanumeric characters.  Atoms\
    \ MUST\n   be less than 15 octets in length.\n"
- title: 2.2.  Strings
  contents:
  - "2.2.  Strings\n   As in [ACAP], a string may be either literal or a quoted string.\
    \  A\n   literal is a sequence of zero or more octets (including CR and LF),\n\
    \   prefix-quoted with an octet count in the form of an open brace (\"{\"),\n\
    \   the number of octets, an optional plus sign to indicate that the data\n  \
    \ follows immediately (a non-synchronized literal), a close brace\n   (\"}\"),\
    \ and a CRLF sequence.  If the plus sign is omitted (a\n   synchronized literal),\
    \ then the receiving side MUST send a \"+ go\n   ahead\" response, and the sending\
    \ side MUST wait for this response.\n   Servers MUST support literals of atleast\
    \ 4096 octets.\n   Strings that are sent from server to client SHOULD NOT be in\
    \ the\n   synchronized literal format.\n   A quoted string is a sequence of zero\
    \ or more 7-bit characters,\n   excluding CR, LF, and the double quote (<\">),\
    \ with double quote\n   characters at each end.\n   The empty string is represented\
    \ as either \"\" (a quoted string with\n   zero characters between double quotes)\
    \ or as {0} followed by CRLF (a\n   literal with an octet count of 0).\n"
- title: 3.  Server Responses
  contents:
  - "3.  Server Responses\n   Every client command in the MUPDATE protocol may receive\
    \ one or more\n   tagged responses from the server.  Each response is preceded\
    \ by the\n   same tag as the command that elicited the response from the server.\n"
- title: '3.1.  Response: OK'
  contents:
  - "3.1.  Response: OK\n   A tagged OK response indicates that the operation completed\n\
    \   successfully.  There is a mandatory implementation-defined string\n   after\
    \ the OK response.  This response also indicates the beginning of\n   the streaming\
    \ update mode when given in response to an UPDATE\n   command.\n   Example:\n"
- title: 'C: N01 NOOP'
  contents:
  - 'C: N01 NOOP

    '
- title: 'S: N01 OK "NOOP Complete"'
  contents:
  - 'S: N01 OK "NOOP Complete"

    '
- title: '3.2.  Response: NO'
  contents:
  - "3.2.  Response: NO\n   A tagged NO response indicates that the operation was\
    \ explicitly\n   denied by the server or otherwise failed.  There is a mandatory\n\
    \   implementation-defined string after the NO response that SHOULD\n   explain\
    \ the reason for denial.\n   Example:\n"
- title: 'C: A01 AUTHENTICATE "PLAIN"'
  contents:
  - 'C: A01 AUTHENTICATE "PLAIN"

    '
- title: 'S: A01 NO "PLAIN is not a supported SASL mechanism"'
  contents:
  - 'S: A01 NO "PLAIN is not a supported SASL mechanism"

    '
- title: '3.3.  Response: BAD'
  contents:
  - "3.3.  Response: BAD\n   A tagged BAD response indicates that the command from\
    \ the client\n   could not be parsed or understood.  There is a mandatory\n  \
    \ implementation-defined string after the BAD response to provide\n   additional\
    \ information about the error.  Note that untagged BAD\n   responses are allowed\
    \ if it is unclear what the tag for a given\n   command is (for example, if a\
    \ blank line is received by the mupdate\n   server, it can generate an untagged\
    \ BAD response).  In the case of an\n   untagged response, the tag should be replaced\
    \ with a \"*\".\n   Example:\n"
- title: 'C: C01 SELECT "INBOX"'
  contents:
  - 'C: C01 SELECT "INBOX"

    '
- title: 'S: C01 BAD "This is not an IMAP server"'
  contents:
  - 'S: C01 BAD "This is not an IMAP server"

    '
- title: 'C:'
  contents:
  - 'C:

    '
- title: 'S: * BAD "Need Command"'
  contents:
  - 'S: * BAD "Need Command"

    '
- title: '3.4.  Response: BYE'
  contents:
  - "3.4.  Response: BYE\n   A tagged BYE response indicates that the server has decided\
    \ to close\n   the connection.  There is a mandatory implementation-defined string\n\
    \   after the BYE response that SHOULD explain the reason for closing the\n  \
    \ connection.  The server MUST close the connection immediately after\n   transmitting\
    \ the BYE response.\n   Example:\n"
- title: 'C: L01 LOGOUT'
  contents:
  - 'C: L01 LOGOUT

    '
- title: 'S: L01 BYE "User Logged Out"'
  contents:
  - 'S: L01 BYE "User Logged Out"

    '
- title: '3.5.  Response: RESERVE'
  contents:
  - "3.5.  Response: RESERVE\n   A tagged RESERVE response may only be given in response\
    \ to a FIND,\n   LIST, or UPDATE command.  It includes two parameters: the name\
    \ of the\n   mailbox that is being reserved (in mUTF-7 encoding, as specified\
    \ in\n   [IMAP]) and a location string whose contents is defined by the\n   clients\
    \ that are using the database, though it is RECOMMENDED that\n   the format of\
    \ this string be the hostname of the server which is\n   storing the mailbox.\n\
    \   This response indicates that the given name is no longer available in\n  \
    \ the namespace, though it does not indicate that the given mailbox is\n   available\
    \ to clients at the current time.\n   Example:\n"
- title: 'S: U01 RESERVE "internet.bugtraq" "mail2.example.org"'
  contents:
  - 'S: U01 RESERVE "internet.bugtraq" "mail2.example.org"

    '
- title: '3.6.  Response: MAILBOX'
  contents:
  - "3.6.  Response: MAILBOX\n   A tagged MAILBOX response may only be given in response\
    \ to a FIND,\n   LIST, or UPDATE command.  It includes three parameters: the name\
    \ of\n   the mailbox, a location string (as with RESERVE), and a client-\n   defined\
    \ string that specifies the IMAP ACL [IMAP-ACL] of the mailbox.\n   This message\
    \ indicates that the given mailbox is ready to be accessed\n   by clients.\n \
    \  Example:\n"
- title: 'S: U01 MAILBOX "internet.bugtraq" "mail2.example.org" "anyone rls"'
  contents:
  - 'S: U01 MAILBOX "internet.bugtraq" "mail2.example.org" "anyone rls"

    '
- title: '3.7.  Response: DELETE'
  contents:
  - "3.7.  Response: DELETE\n   A tagged DELETE response may only be given in response\
    \ to an UPDATE\n   command, and MUST NOT be given before the OK response to the\
    \ UPDATE\n   command is given.  It contains a single parameter, that of the\n\
    \   mailbox that should be deleted from the slave's database.  This\n   response\
    \ indicates that the given mailbox no longer exists in the\n   namespace of the\
    \ database, and may be given for any mailbox name,\n   active, reserved, or nonexistent.\
    \  (Though implementations SHOULD NOT\n   issue DELETE responses for nonexistent\
    \ mailboxes).\n   Example:\n"
- title: 'S: U01 DELETE "user.rjs3.sent-mail-jan-2002"'
  contents:
  - 'S: U01 DELETE "user.rjs3.sent-mail-jan-2002"

    '
- title: 3.8.  Server Capability Response
  contents:
  - "3.8.  Server Capability Response\n   Upon connection of the client to the server,\
    \ and directly following a\n   successful STARTTLS command, the server MUST issue\
    \ a capabilities\n   banner, of the following format:\n   The banner MUST contain\
    \ a line that begins with \"* AUTH\" and contain\n   a space-separated list of\
    \ SASL mechanisms that the server will accept\n   for authentication.  The mechanism\
    \ names are transmitted as atoms.\n   Servers MAY advertise no available mechanisms\
    \ (to indicate that\n   STARTTLS must be completed before authentication may occur).\
    \  If\n   STARTTLS is not supported by the server, then the line MUST contain\n\
    \   at least one mechanism.\n   If the banner is being issued without a TLS layer,\
    \ and the server\n   supports the STARTTLS command, the banner MUST contain the\
    \ line \"*\n   STARTTLS\".  If the banner is being issued under a TLS layer (or\
    \ the\n   server does not support STARTTLS), the banner MUST NOT contain this\n\
    \   line.\n   The last line of the banner MUST start with \"* OK MUPDATE\" and\
    \ be\n   followed by four strings: the server's hostname, an implementation-\n\
    \   defined string giving the name of the implementation, an\n   implementation-defined\
    \ string giving the version of the\n   implementation, and a string that indicates\
    \ if the server is a master\n   or a slave.  The master/slave indication MUST\
    \ be either \"(master)\" or\n   an MUPDATE URL that defines where the master can\
    \ be contacted.\n   Any unrecognized responses before the \"* OK MUPDATE\" response\
    \ MUST be\n   ignored by the client.\n   Example:\n"
- title: 'S: * AUTH KERBEROS_V4 GSSAPI'
  contents:
  - 'S: * AUTH KERBEROS_V4 GSSAPI

    '
- title: 'S: * STARTTLS'
  contents:
  - 'S: * STARTTLS

    '
- title: 'S: * OK MUPDATE "mupdate.example.org" "Cyrus" "v2.1.2" "(master)"'
  contents:
  - 'S: * OK MUPDATE "mupdate.example.org" "Cyrus" "v2.1.2" "(master)"

    '
- title: 4.  Client Commands
  contents:
  - "4.  Client Commands\n   The following are valid commands that a client may send\
    \ to the\n   MUPDATE server: AUTHENTICATE, ACTIVATE, DEACTIVATE, DELETE, FIND,\n\
    \   LIST, LOGOUT, NOOP, RESERVE, STARTTLS, and UPDATE.\n   Before a successful\
    \ AUTHENTICATE command has occurred, the server\n   MUST NOT accept any commands\
    \ except for AUTHENTICATE, STARTTLS, and\n   LOGOUT (and SHOULD reply with a NO\
    \ response for all other commands).\n"
- title: '4.1.  Command: ACTIVATE'
  contents:
  - "4.1.  Command: ACTIVATE\n   The ACTIVATE command has 3 parameters: the mailbox\
    \ name, its\n   location, and its ACL.  This command MUST NOT not be issued to\
    \ a\n   slave server.\n   This command can also be used to update the ACL or location\n\
    \   information of a mailbox.  Note that it is not a requirement for a\n   mailbox\
    \ to be reserved (or even exist in the database) for an\n   ACTIVATE command to\
    \ succeed, implementations MUST allow this behavior\n   as it facilitates synchronization\
    \ of the database with the current\n   state of the mailboxes.\n"
- title: '4.2.  Command: AUTHENTICATE'
  contents:
  - "4.2.  Command: AUTHENTICATE\n   The AUTHENTICATE command initiates a [SASL] negotiation\
    \ session\n   between the client and the server.  It has two parameters.  The\
    \ first\n   parameter is mandatory, and is a string indicating the desired [SASL]\n\
    \   mechanism.  The second is a string containing an optional BASE64\n   encoded\
    \ (as defined in section 6.8 of [MIME]) client first send.\n   All of the remaining\
    \ SASL blobs that are sent MUST be sent across the\n   wire must be in BASE64\
    \ encoded format, and followed by a CR and LF\n   combination.  They MUST NOT\
    \ be encoded as strings.\n   Clients may cancel authentication by sending a *\
    \ followed by a CR and\n   LF.\n   The [SASL] service name for the MUPDATE protocol\
    \ is \"mupdate\".\n   Implementations are REQUIRED to implement the GSSAPI [SASL]\n\
    \   mechanism, though they SHOULD implement as many mechanisms as\n   possible.\n\
    \   If a security layer is negotiated, it should be used directly\n   following\
    \ the CR and LF combination at the end of the server's OK\n   response (i.e.,\
    \ beginning with the client's next command) Only one\n   successful AUTHENTICATE\
    \ command may be issued per session.\n"
- title: '4.3.  Command: DEACTIVATE'
  contents:
  - "4.3.  Command: DEACTIVATE\n   The DEACTIVATE command takes two parameters, the\
    \ mailbox name and\n   location data.  The mailbox MUST already exist and be activated\
    \ on\n   the MUPDATE server.  If the server responds OK, then the mailbox name\n\
    \   has been moved to the RESERVE state.  If the server responds NO, then\n  \
    \ the mailbox name has not been moved (for example, the mailbox was not\n   already\
    \ active).  Any ACL information that is known about the mailbox\n   MAY be lost\
    \ when a DEACTIVATE succeeds.  This command MUST NOT be\n   issued to a slave.\n\
    \   Example:\n"
- title: 'C: A01 DEACTIVATE "user.rjs3.new" "mail3.example.org!u4"'
  contents:
  - 'C: A01 DEACTIVATE "user.rjs3.new" "mail3.example.org!u4"

    '
- title: 'S: A01 OK "Mailbox Reserved."'
  contents:
  - 'S: A01 OK "Mailbox Reserved."

    '
- title: '4.4.  Command: DELETE'
  contents:
  - "4.4.  Command: DELETE\n   The DELETE command takes only a single parameter, the\
    \ mailbox name to\n   be removed from the database's namespace.  The server SHOULD\
    \ give a\n   NO response if the mailbox does not exist.  This command MUST NOT\
    \ be\n   issued to a slave server.\n"
- title: '4.5.  Command: FIND'
  contents:
  - "4.5.  Command: FIND\n   The FIND command takes a single parameter, a mailbox\
    \ name.  The\n   server then responds with the current record for the given mailbox,\n\
    \   if any, and an OK response.\n   Example (mailbox does not exist):\n"
- title: 'C: F01 FIND "user.rjs3.xyzzy"'
  contents:
  - 'C: F01 FIND "user.rjs3.xyzzy"

    '
- title: 'S: F01 OK "Search Complete"'
  contents:
  - "S: F01 OK \"Search Complete\"\n   Example (mailbox is reserved):\n"
- title: 'C: F01 FIND "user.rjs3"'
  contents:
  - 'C: F01 FIND "user.rjs3"

    '
- title: 'S: F01 RESERVE "user.rjs3" "mail4.example.org"'
  contents:
  - 'S: F01 RESERVE "user.rjs3" "mail4.example.org"

    '
- title: 'S: F01 OK "Search Complete"'
  contents:
  - 'S: F01 OK "Search Complete"

    '
- title: '4.6.  Command: LIST'
  contents:
  - "4.6.  Command: LIST\n   The LIST command is similar to running FIND across the\
    \ entire\n   database.  The LIST command takes a single optional parameter, which\n\
    \   is a prefix to try to match against the location field of the\n   records.\
    \  Without the parameter, LIST returns every record in the\n   database.\n   For\
    \ each mailbox that matches, either a MAILBOX or a RESERVE response\n   (as applicable)\
    \ is sent to the client.  When all responses are\n   complete, an OK response\
    \ is issued.\n   Example:\n"
- title: 'C: L01 LIST'
  contents:
  - 'C: L01 LIST

    '
- title: 'S: L01 RESERVE "user.rjs3" "mail4.example.org!u2"'
  contents:
  - 'S: L01 RESERVE "user.rjs3" "mail4.example.org!u2"

    '
- title: 'S: L01 MAILBOX "user.leg" "mail2.example.org!u1" "leg lrswipcda"'
  contents:
  - 'S: L01 MAILBOX "user.leg" "mail2.example.org!u1" "leg lrswipcda"

    '
- title: 'S: L01 OK "List Complete"'
  contents:
  - 'S: L01 OK "List Complete"

    '
- title: 'C: L02 LIST "mail4.example.org!"'
  contents:
  - 'C: L02 LIST "mail4.example.org!"

    '
- title: 'S: L02 RESERVE "user.rjs3" "mail4.example.org!u2"'
  contents:
  - 'S: L02 RESERVE "user.rjs3" "mail4.example.org!u2"

    '
- title: 'S: L02 OK "List Complete"'
  contents:
  - 'S: L02 OK "List Complete"

    '
- title: '4.7.  Command: LOGOUT'
  contents:
  - "4.7.  Command: LOGOUT\n   The LOGOUT command tells the server to close the connection.\
    \  Its\n   only valid response is the BYE response.  The LOGOUT command takes\
    \ no\n   parameters.\n"
- title: '4.8.  Command: NOOP'
  contents:
  - "4.8.  Command: NOOP\n   The NOOP command takes no parameters.  Provided the client\
    \ is\n   authenticated, its only acceptable response is an OK.  Any idle\n   timeouts\
    \ that the server may have on the connection SHOULD be reset\n   upon receipt\
    \ of this command.\n   If this command is issued after an UPDATE command has been\
    \ issued,\n   then the OK response also indicates that all pending database updates\n\
    \   have been sent to the client.  That is, the slave can guarantee that\n   its\
    \ local database is up to date as of a certain time by issuing a\n   NOOP and\
    \ waiting for the OK.  The OK MUST NOT return until all\n   updates that were\
    \ pending at the time of the NOOP have been sent.\n"
- title: '4.9.  Command: RESERVE'
  contents:
  - "4.9.  Command: RESERVE\n   The RESERVE command takes two parameters (just like\
    \ the RESERVE\n   response), the mailbox name to reserve and location data.  If\
    \ the\n   server responds OK, then the mailbox name has been reserved.  If the\n\
    \   server responds NO, then the mailbox name has not been reserved (for\n   example,\
    \ another server has reserved it already).  This command MUST\n   NOT be issued\
    \ to a slave.\n   The typical sequence for mailbox creation is:\n"
- title: 'C: R01 RESERVE "user.rjs3.new" "mail3.example.org!u4"'
  contents:
  - 'C: R01 RESERVE "user.rjs3.new" "mail3.example.org!u4"

    '
- title: 'S: R01 OK "Mailbox Reserved."'
  contents:
  - 'S: R01 OK "Mailbox Reserved."

    '
- title: <client does local mailbox create operations>
  contents:
  - '<client does local mailbox create operations>

    '
- title: 'C: A01 ACTIVATE "user.rjs3.new" "mail3.example.org!u4" "rjs3 lrswipcda"'
  contents:
  - 'C: A01 ACTIVATE "user.rjs3.new" "mail3.example.org!u4" "rjs3 lrswipcda"

    '
- title: 'S: A01 OK "Mailbox Activated."'
  contents:
  - 'S: A01 OK "Mailbox Activated."

    '
- title: '4.10.  Command: STARTTLS'
  contents:
  - "4.10.  Command: STARTTLS\n   The STARTTLS command requests the commencement of\
    \ a [TLS]\n   negotiation.  The negotiation begins immediately after the CRLF\
    \ in\n   the OK response.  After a client issues a STARTTLS command, it MUST\n\
    \   NOT issue further commands until a server response is seen and the\n   [TLS]\
    \ negotiation is complete.\n   The STARTTLS command is only valid in non-authenticated\
    \ state.  The\n   server remains in non-authenticated state, even if client credentials\n\
    \   are supplied during the [TLS] negotiation.  The [SASL] EXTERNAL\n   mechanism\
    \ MAY be used to authenticate once [TLS] client credentials\n   are successfully\
    \ exchanged.  Note that servers are not required to\n   support the EXTERNAL mechanism.\n\
    \   After the [TLS] layer is established, the server MUST re-issue the\n   initial\
    \ response banner (see Section 3.8).  This is necessary to\n   protect against\
    \ man-in-the-middle attacks which alter the\n   capabilities list prior to STARTTLS,\
    \ as well as to advertise any new\n   SASL mechanisms (or other capabilities)\
    \ that may be available under\n   the layer.  The client MUST discard cached capability\
    \ information and\n   replace it with the new information.\n   After the a successful\
    \ STARTTLS command, the server SHOULD return a\n   NO response to additional STARTTLS\
    \ commands.\n   Servers MAY choose to not implement STARTTLS.  In this case, they\n\
    \   MUST NOT advertise STARTTLS in their capabilities banner, and SHOULD\n   return\
    \ a BAD response to the STARTTLS command, if it is issued.\n   Example:\n"
- title: 'C: S01 STARTTLS'
  contents:
  - 'C: S01 STARTTLS

    '
- title: 'S: S01 OK "Begin TLS negotiation now"'
  contents:
  - 'S: S01 OK "Begin TLS negotiation now"

    '
- title: <TLS negotiation, further commands are under TLS layer>
  contents:
  - '<TLS negotiation, further commands are under TLS layer>

    '
- title: 'S: * AUTH KERBEROS_V4 GSSAPI PLAIN'
  contents:
  - 'S: * AUTH KERBEROS_V4 GSSAPI PLAIN

    '
- title: 'S: * OK MUPDATE "mupdate.example.org" "Cyrus" "v2.1.2" "(master)"'
  contents:
  - 'S: * OK MUPDATE "mupdate.example.org" "Cyrus" "v2.1.2" "(master)"

    '
- title: '4.11.  Command: UPDATE'
  contents:
  - "4.11.  Command: UPDATE\n   The UPDATE command is how a slave initializes an update\
    \ stream from\n   the master (though it is also valid to issue this command to\
    \ a\n   slave).  In response to the command, the server returns a list of all\n\
    \   mailboxes in its database (the same results as a parameterless LIST\n   command)\
    \ followed by an OK response.  From this point forward,\n   whenever an update\
    \ occurs to the master database, it MUST stream the\n   update to the slave within\
    \ 30 seconds.  That is, it will send\n   RESERVE, MAILBOX, or DELETE responses\
    \ as they are applicable.\n   After a client has issued an UPDATE command, it\
    \ may only issue NOOP\n   and LOGOUT commands for the remainder of the session.\n\
    \   Example:\n"
- title: 'C: U01 UPDATE'
  contents:
  - 'C: U01 UPDATE

    '
- title: 'S: U01 MAILBOX "user.leg" "mail2.example.org!u1" "leg lrswipcda"'
  contents:
  - 'S: U01 MAILBOX "user.leg" "mail2.example.org!u1" "leg lrswipcda"

    '
- title: 'S: U01 MAILBOX "user.rjs3" "mail3.example.org!u4" "rjs3 lrswipcda"'
  contents:
  - 'S: U01 MAILBOX "user.rjs3" "mail3.example.org!u4" "rjs3 lrswipcda"

    '
- title: 'S: U01 RESERVE "internet.bugtraq" "mail1.example.org!u5" "anyone lrs"'
  contents:
  - 'S: U01 RESERVE "internet.bugtraq" "mail1.example.org!u5" "anyone lrs"

    '
- title: 'S: U01 OK "Streaming Begins"'
  contents:
  - 'S: U01 OK "Streaming Begins"

    '
- title: <some time goes by, and another client creates a new mailbox>
  contents:
  - '<some time goes by, and another client creates a new mailbox>

    '
- title: 'S: U01 RESERVE "user.leg.new" "mail2.example.org!u1"'
  contents:
  - 'S: U01 RESERVE "user.leg.new" "mail2.example.org!u1"

    '
- title: <some more time passes, and the create succeeds>
  contents:
  - '<some more time passes, and the create succeeds>

    '
- title: 'S: U01 MAILBOX "user.leg.new" "mail2.example.org!u1" "leg lrswipcda"'
  contents:
  - 'S: U01 MAILBOX "user.leg.new" "mail2.example.org!u1" "leg lrswipcda"

    '
- title: <much more time passes, and the slave decides to send a NOOP to reset
  contents:
  - '<much more time passes, and the slave decides to send a NOOP to reset

    '
- title: its inactivity timer>
  contents:
  - 'its inactivity timer>

    '
- title: 'C: N01 NOOP'
  contents:
  - 'C: N01 NOOP

    '
- title: 'S: U01 DELETE "user.leg.new"'
  contents:
  - 'S: U01 DELETE "user.leg.new"

    '
- title: 'S: N01 OK "NOOP Complete"'
  contents:
  - 'S: N01 OK "NOOP Complete"

    '
- title: 5.  MUPDATE Formal Syntax
  contents:
  - "5.  MUPDATE Formal Syntax\n   The following syntax specification uses the Augmented\
    \ Backus-Naur\n   Form (ABNF) notation as specified in [ABNF].  This uses the\
    \ ABNF core\n   rules as specified in Appendix A of [ABNF].\n   Except as noted\
    \ otherwise, all alphabetic characters are case-\n   insensitive.  The use of\
    \ upper or lower case characters to define\n   token strings is for editorial\
    \ clarity only.  Implementations MUST\n   accept these strings in a case-insensitive\
    \ fashion.\n   Note that this specification also uses some terminals from section\
    \ 8\n   of [ACAP].\n   cmd-activate = \"ACTIVATE\" SP string SP string SP string\n\
    \   cmd-authenticate = \"AUTHENTICATE\" SP sasl-mech [ SP string ]\n   cmd-delete\
    \ = \"DELETE\" SP string\n   cmd-find = \"FIND\" SP string\n   cmd-list = \"LIST\"\
    \ [ SP string ]\n   cmd-logout = \"LOGOUT\"\n   cmd-noop = \"NOOP\"\n   cmd-reserve\
    \ = \"RESERVE\" SP string SP string\n   cmd-starttls = \"STARTTLS\"\n   cmd-update\
    \ = \"UPDATE\"\n   command = tag SP command-type CRLF\n   command-type = cmd-activate\
    \ / cmd-authenticate / cmd-delete /\n                  cmd-find / cmd-list / cmd-logout\
    \ / cmd-noop /\n                  cmd-reserve / cmd-starttls / cmd-update\n  \
    \ response = tag SP response-type CRLF\n   response-type = rsp-ok / rsp-no / rsp-bad\
    \ / rsp-bye / rsp-mailbox /\n                   rsp-reserve / rsp-delete\n   rsp-bad\
    \ = \"BAD\" SP string\n   rsp-bye = \"BYE\" SP string\n   rsp-mailbox = \"MAILBOX\"\
    \ SP string SP string SP string\n   rsp-no = \"NO\" SP string\n   rsp-ok = \"\
    OK\" SP string\n   rsp-reserve = \"RESERVE\" SP string SP string\n   rsp-delete\
    \ = \"DELETE\" SP string\n   sasl-mech = 1*ATOM-CHAR\n      ; ATOM-CHAR is defined\
    \ in [ACAP]\n   string = quoted / literal\n      ; quoted and literal are defined\
    \ in [ACAP]\n   tag = 1*ATOM-CHAR\n      ; ATOM-CHAR is defined in [ACAP]\n"
- title: 6.  MUPDATE URL Scheme
  contents:
  - "6.  MUPDATE URL Scheme\n   This document defines the a URL scheme for the purposes\
    \ of\n   referencing MUPDATE resources, according to the requirements in\n   [RFC2717].\
    \  This includes both MUPDATE servers as a whole, along with\n   individual mailbox\
    \ entries on a given MUPDATE server.\n   There is no MIME type associated with\
    \ these resources.  It is\n   intended that a URL consumer would either retrieve\
    \ the MUPDATE record\n   in question, or simply connect to the MUPDATE server\
    \ running on the\n   specified host.  Note that the consumer will need to have\n\
    \   authentication credentials for the specified host.\n   The MUPDATE URL scheme\
    \ is similar to the IMAP URL scheme [IMAP-URL].\n   However, it only takes one\
    \ of two possible forms:\n      mupdate://<iserver>/\n      mupdate://<iserver>/<mailbox>\n\
    \   The first form refers to a MUPDATE server as a whole, the second form\n  \
    \ indicates both the server and a mailbox to run a FIND against once\n   authenticated\
    \ to the server.  Note that part of <iserver> may include\n   username and authentication\
    \ information along with a hostname and\n   port.\n"
- title: 6.1.  MUPDATE URL Scheme Registration Form
  contents:
  - "6.1.  MUPDATE URL Scheme Registration Form\n   URL scheme name: \"mupdate\"\n\
    \   URL scheme syntax:\n      This defines the MUPDATE URL Scheme in [ABNF]. \
    \ Terminals from the\n      BNF of IMAP URLs [IMAP-URL] are also used.\n     \
    \    mupdateurl = \"mupdate://\" iserver \"/\" [ enc_mailbox ]\n            ;\
    \ iserver and enc_mailbox are as defined in [IMAP-URL]\n   Character encoding\
    \ considerations:\n      Identical to those described in [IMAP-URL] for the appropriate\n\
    \      terminals.\n   Intended Usage:\n      The form of the URL without an associated\
    \ mailbox is intended to\n      designate a MUPDATE server only.  If a mailbox\
    \ name is included in\n      the URL, then the consumer is expected to execute\
    \ a FIND command\n      for that mailbox on the specified server.\n   Applications\
    \ and/or protocols which use this URL scheme name:\n      The protocol described\
    \ in this document.\n   Interoperability Considerations:\n      None.\n   Security\
    \ Considerations:\n      Users of the MUPDATE URL Scheme should review the security\n\
    \      considerations that are discussed in [IMAP-URL].  In particular,\n    \
    \  the consequences of including authentication mechanism information\n      in\
    \ a URL should be reviewed.\n   Relevant Publications:\n      This document and\
    \ [IMAP-URL].\n   Author, Change Controller, and Contact for Further Information:\n\
    \      Author of this document.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   While no unauthenticated users may make modifications\
    \ or even perform\n   searches on the database, it is important to note that this\n\
    \   specification assumes no protections of any type for authenticated\n   users.\n\
    \   All authenticated users have complete access to the database.  For\n   this\
    \ reason it is important to ensure that accounts that are making\n   use of the\
    \ database are well secured.\n   A more secure deployment might have all read\
    \ only access go through a\n   slave, and only have accounts which need write\
    \ access use the master.\n   This has the disadvantage of a marginally longer\
    \ time for updates to\n   reach the clients.\n   The protocol assumes that all\
    \ authenticated users are cooperating to\n   maintain atomic operations.  Therefore,\
    \ all new mailboxes SHOULD be\n   RESERVEd before they are ACTIVATEd, despite\
    \ the fact that the\n   protocol does not require this, and it is therefore possible\
    \ for a\n   set of participants which do not obey the provided locking to create\n\
    \   an inconsistent database.  RESERVEing the mailbox first is not\n   required\
    \ to perform an activate because this behavior simplifies\n   synchronization\
    \ with the actual location of the mailboxes.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   The IANA has assigned TCP port number 3905 to \"\
    mupdate\".\n   The IANA has registered a URL scheme for the MUPDATE protocol,\
    \ as\n   defined in section 6.1 of this document.\n   IANA has registered a GSSAPI\
    \ service name of \"mupdate\" for the\n   MUPDATE protocol in the registry maintained\
    \ at:\n   http://www.iana.org/assignments/gssapi-service-names\n"
- title: 9.  Intellectual Property Rights
  contents:
  - "9.  Intellectual Property Rights\n   The IETF takes no position regarding the\
    \ validity or scope of any\n   intellectual property or other rights that might\
    \ be claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; neither does it represent that it\n   has\
    \ made any effort to identify any such rights.  Information on the\n   IETF's\
    \ procedures with respect to rights in standards-track and\n   standards-related\
    \ documentation can be found in BCP-11.  Copies of\n   claims of rights made available\
    \ for publication and any assurances of\n   licenses to be made available, or\
    \ the result of an attempt made to\n   obtain a general license or permission\
    \ for the use of such\n   proprietary rights by implementors or users of this\
    \ specification can\n   be obtained from the IETF Secretariat.\n   The IETF invites\
    \ any interested party to bring to its attention any\n   copyrights, patents or\
    \ patent applications, or other proprietary\n   rights which may cover technology\
    \ that may be required to practice\n   this standard.  Please address the information\
    \ to the IETF Executive\n   Director.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [KEYWORDS]  Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n   [IMAP]      Crispin, M., \"Internet Message Access Protocol\
    \ - Version\n               4\", RFC 3501, March 2003.\n   [ABNF]      Crocker,\
    \ D., Ed. and P. Overell, \"Augmented BNF for\n               Syntax Specifications:\
    \ ABNF\", RFC 2234, November 1997.\n   [MIME]      Freed, N. and N. Bornstein,\
    \ \"Multipurpose Internet Mail\n               Extensions (MIME) Part One: Format\
    \ of Internet Message\n               Bodies\", RFC 2045, November 1996.\n   [IMAP-ACL]\
    \  Myers, J., \"IMAP4 ACL extension\", RFC 2086, January 1997.\n   [SASL]    \
    \  Myers, J., \"Simple Authentication and Security Layer\n               (SASL)\"\
    , RFC 2222, October 1997.\n   [IMAP-URL]  Newman, C., \"IMAP URL Scheme\", RFC\
    \ 2192, September 1997.\n   [ACAP]      Newman, C. and J. Myers, \"ACAP -- Application\n\
    \               Configuration Access Protocol\", RFC 2244, November 1997.\n  \
    \ [TLS]       Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\",\n   \
    \            RFC 2246, January 1999.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [POP3]      Myers, J. and M. Rose, \"Post Office\
    \ Protocol - Version\n               3\", STD 53, RFC 1939, May 1996.\n   [RFC2717]\
    \   Petke, R. and I. King, \"Registration Procedures for URL\n               Scheme\
    \ Names\", BCP 35, RFC 2717, November 1999.\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   Lawrence Greenfield and Ken Murchison, for a great deal\
    \ of input on\n   both the protocol and the text of the documents.\n"
- title: 12.  Author's  Address
  contents:
  - "12.  Author's  Address\n   Robert Siemborski\n   Carnegie Mellon, Andrew Systems\
    \ Group\n   Cyert Hall 207\n   5000 Forbes Avenue\n   Pittsburgh, PA  15213\n\
    \   Phone: (412) 268-7456\n   EMail: rjs3+@andrew.cmu.edu\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (2003).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assignees.\n\
    \   This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
