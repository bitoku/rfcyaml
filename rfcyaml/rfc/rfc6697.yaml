- title: __initial_text__
  contents:
  - '              Handover Keying (HOKEY) Architecture Design

    '
- title: Abstract
  contents:
  - "Abstract\n   The Handover Keying (HOKEY) Working Group seeks to minimize handover\n\
    \   delay due to authentication when a peer moves from one point of\n   attachment\
    \ to another.  Work has progressed on two different\n   approaches to reduce handover\
    \ delay: early authentication (so that\n   authentication does not need to be\
    \ performed during handover), and\n   reuse of cryptographic material generated\
    \ during an initial\n   authentication to save time during re-authentication.\
    \  A basic\n   assumption is that the mobile host or \"peer\" is initially\n \
    \  authenticated using the Extensible Authentication Protocol (EAP),\n   executed\
    \ between the peer and an EAP server as defined in RFC 3748.\n   This document\
    \ defines the HOKEY architecture.  Specifically, it\n   describes design objectives,\
    \ the functional environment within which\n   handover keying operates, the functions\
    \ to be performed by the HOKEY\n   architecture itself, and the assignment of\
    \ those functions to\n   architectural components.  It goes on to illustrate the\
    \ operation of\n   the architecture within various deployment scenarios that are\n\
    \   described more fully in other documents produced by the HOKEY Working\n  \
    \ Group.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6697.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................6\n  \
    \ 3. Design Goals ....................................................6\n    \
    \  3.1. Reducing Signaling Overhead ................................7\n      \
    \     3.1.1. Minimized Communications with Home Servers ..........7\n        \
    \   3.1.2. Minimized User Interaction for Authentication .......7\n      3.2.\
    \ Integrated Local Domain Name (LDN) Discovery ...............7\n      3.3. Fault-Tolerant\
    \ Re-Authentication ...........................8\n      3.4. Improved Deployment\
    \ Scalability ............................8\n   4. Required Functionality ..........................................8\n\
    \      4.1. Authentication Subsystem Functional Overview ...............8\n  \
    \    4.2. Pre-Authentication Function (Direct or Indirect) ...........9\n    \
    \  4.3. EAP Re-Authentication Function .............................9\n      4.4.\
    \ EAP Authentication Function ...............................10\n      4.5. Authenticated\
    \ Anticipatory Keying (AAK) Function ..........10\n      4.6. Management of EAP-Based\
    \ Handover Keys .....................10\n   5. Components of the HOKEY Architecture\
    \ ...........................11\n      5.1. Functions of the Peer .....................................12\n\
    \      5.2. Functions of the Serving Authenticator ....................13\n  \
    \    5.3. Functions of the Candidate Authenticator ..................14\n    \
    \  5.4. Functions of the EAP Server ...............................15\n      5.5.\
    \ Functions of the ER Server ................................16\n   6. Usage Scenarios\
    \ ................................................16\n      6.1. Simple Re-Authentication\
    \ ..................................16\n      6.2. Intra-Domain Handover .....................................17\n\
    \      6.3. Inter-Domain Handover .....................................17\n  \
    \    6.4. Inter-Technology Handover .................................17\n   7.\
    \ AAA Considerations .............................................17\n      7.1.\
    \ Authorization .............................................17\n      7.2. Transport\
    \ Aspect ..........................................18\n   8. Security Considerations\
    \ ........................................18\n   9. Acknowledgments ................................................18\n\
    \   10. References ....................................................18\n  \
    \    10.1. Normative References .....................................18\n    \
    \  10.2. Informative References ...................................19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Extensible Authentication Protocol (EAP) [RFC3748] is\
    \ an\n   authentication framework that supports different types of\n   authentication\
    \ methods.  Originally designed for dial-up connections,\n   EAP is now commonly\
    \ used for authentication in a variety of access\n   networks.\n   When a host\
    \ (or \"peer\", the term used from this point onward) changes\n   its point of\
    \ attachment to the network, it must be re-authenticated.\n   If a full EAP authentication\
    \ must be repeated, several message round\n   trips between the peer and the home\
    \ EAP server may be involved.  The\n   resulting delay will result in degradation\
    \ -- or, in the worst case,\n   loss of any service session in progress -- if\
    \ communication is\n   suspended while re-authentication is carried out.  The\
    \ delay is worse\n   if the new point of attachment is in a visited network rather\
    \ than\n   the peer's home network because of the extra procedural steps\n   involved\
    \ as well as the probable increase in round-trip time.\n   Clancy, et al. [RFC5169]\
    \ describe this problem more fully and\n   establish design goals for solutions\
    \ to reduce re-authentication\n   delay for transfers within a single administrative\
    \ domain.  They also\n   suggest a number of ways to achieve a solution:\n   o\
    \  specification of a method-independent, efficient re-authentication\n      protocol\
    \ based upon EAP;\n   o  reuse of keying material from the initial EAP authentication;\n\
    \   o  deployment of re-authentication servers local to the peer to\n      reduce\
    \ round-trip delay; and\n   o  specification of the additional protocol needed\
    \ to allow the EAP\n      server to pass authentication information to the local\n\
    \      re-authentication servers.\n   Salowey, et al. [RFC5295] tackle the problem\
    \ of the reuse of keying\n   material by specifying how to derive a hierarchy\
    \ of cryptographically\n   independent purpose-specific keys from the results\
    \ of the original\n   EAP authentication, while Cao, et al. [RFC6696] specify\
    \ a method-\n   independent re-authentication protocol (the EAP Re-authentication\n\
    \   Protocol (ERP)) applicable to two specific deployment scenarios:\n   o  where\
    \ the peer's home EAP server also performs re-authentication;\n      and\n   o\
    \  where a local re-authentication server exists but is co-located\n      with\
    \ an Authentication, Authorization, and Accounting (AAA) proxy\n      within the\
    \ domain.\n   Other work provides further pieces of the solution or insight into\n\
    \   the problem.  For the purpose of this memo, Hoeper, et al. [RFC5749]\n   provide\
    \ an abstract mechanism for distribution of keying material\n   from the EAP server\
    \ to re-authentication servers.  Ohba,\n   et al. [RFC5836] contrast the EAP Re-authentication\
    \ (ER) strategy\n   provided by ERP with an alternative strategy called \"early\n\
    \   authentication\".  RFC 5836 defines EAP early authentication as the\n   use\
    \ of EAP by a mobile peer to establish authenticated keying\n   material on a\
    \ target attachment point prior to its arrival.  Hence,\n   the goal of EAP early\
    \ authentication is to complete all EAP-related\n   communications, including\
    \ AAA signaling, in preparation for the\n   handover, before the mobile device\
    \ actually moves.  Early\n   authentication includes direct and indirect pre-authentication\
    \ as\n   well as Authenticated Anticipatory Keying (AAK).  All three early\n \
    \  authentication mechanisms provide means to securely establish\n   authenticated\
    \ keying material on a Candidate Attachment Point (CAP)\n   while still being\
    \ connected to the Serving Attachment Point (SAP) but\n   vary in their respective\
    \ system assumptions and communication paths.\n   In particular, direct pre-authentication\
    \ assumes that clients are\n   capable of discovering CAPs and all communications\
    \ are routed through\n   the SAP.  On the other hand, indirect pre-authentication\
    \ assumes an\n   existing relationship between the SAP and CAP, whereas the discovery\n\
    \   and selection of CAPs is outside the scope of AAK.  Furthermore, both\n  \
    \ direct and indirect pre-authentication require a full EAP execution\n   to occur\
    \ before the handover of the peer takes place, while AAK\n   techniques (like\
    \ ERP [RFC6696]) use keys derived from the initial EAP\n   authentication.\n \
    \  Both EAP re-authentication and early authentication enable faster\n   inter-authenticator\
    \ handovers.  However, it is currently unclear how\n   the necessary handover\
    \ infrastructure can be deployed and integrated\n   into existing EAP infrastructures.\
    \  In particular, previous work has\n   not described how ER servers that act\
    \ as endpoints in the\n   re-authentication process should be integrated into\
    \ local and home\n   domain networks.  Furthermore, how EAP infrastructure can\
    \ support the\n   timely triggering of early authentications and aid with the\
    \ selection\n   of CAPs is currently unspecified.\n   This document proposes a\
    \ general HOKEY architecture and demonstrates\n   how it can be adapted to different\
    \ deployment scenarios.  To begin\n   with, Section 3 recalls the design objectives\
    \ for the HOKEY\n   architecture.  Section 4 reviews the functions that must be\
    \ supported\n   within the architecture.  Section 5 describes the components of\
    \ the\n   HOKEY architecture.  Section 6 describes the different deployment\n\
    \   scenarios that the HOKEY Working Group has addressed and the\n   information\
    \ flows that must occur within those scenarios, by\n   reference to the documents\
    \ summarized above where possible and\n   otherwise within this document itself.\
    \  Finally, Section 7 provides\n   an analysis of how AAA protocols can be applied\
    \ in the HOKEY\n   architecture.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document reuses terms defined in Section 2 of Ohba,\n\
    \   et al. [RFC5836] and Section 2 of Cao, et al. [RFC6696].  In\n   addition,\
    \ it defines the following:\n   DS-rRK\n      Domain-Specific re-authentication\
    \ Root Key.\n   pMSK\n      pre-established Master Session Key.\n   EAP Early\
    \ Authentication\n      The use of EAP by a mobile peer to establish authenticated\
    \ keying\n      material on a target attachment point prior to its arrival; see\n\
    \      Ohba, et al. [RFC5836].\n   ER Key Management\n      An instantiation of\
    \ the mechanism described in Hoeper,\n      et al. [RFC5749] for creating and\
    \ delivering root keys from an EAP\n      server to an ER server.\n   EAP Re-authentication\
    \ (ER)\n      The use of keying material derived from an initial EAP\n      authentication\
    \ to enable single-round-trip re-authentication of a\n      mobile peer.  For\
    \ a detailed description of the keying material,\n      see Section 4 of Cao,\
    \ et al. [RFC6696].\n   ER Server\n      A component of the HOKEY architecture\
    \ that terminates the EAP\n      re-authentication exchange with the peer.\n"
- title: 3.  Design Goals
  contents:
  - "3.  Design Goals\n   This section investigates the design goals for the HOKEY\n\
    \   architecture.  These include reducing the signaling overhead for\n   re-authentication\
    \ and early authentication, integrating local domain\n   name discovery, enabling\
    \ fault-tolerant re-authentication, and\n   improving deployment scalability.\
    \  These goals supplement those\n   discussed in Section 4 of RFC 5169.  Note\
    \ that the identification and\n   selection of CAPs is not a goal of the architecture,\
    \ since those\n   operations are generally specific to the lower layer in use.\n"
- title: 3.1.  Reducing Signaling Overhead
  contents:
  - '3.1.  Reducing Signaling Overhead

    '
- title: 3.1.1.  Minimized Communications with Home Servers
  contents:
  - "3.1.1.  Minimized Communications with Home Servers\n   ERP [RFC6696] requires\
    \ only one round trip; however, this round trip\n   may require communication\
    \ between a peer and its home ER and/or home\n   AAA server in explicit bootstrapping\
    \ and communication between local\n   servers and the home server in implicit\
    \ bootstrapping even if the\n   peer is currently attached to a visited (local)\
    \ network.  As a\n   result, even this one round trip may introduce long delays\
    \ because\n   the home ER and home AAA servers may be distant from the peer and\
    \ the\n   network to which it is attached.  To lower signaling overhead,\n   communication\
    \ with the home ER server and home AAA server should be\n   minimized.  Ideally,\
    \ a peer should only need to communicate with\n   local servers and other local\
    \ entities.\n"
- title: 3.1.2.  Minimized User Interaction for Authentication
  contents:
  - "3.1.2.  Minimized User Interaction for Authentication\n   When the peer is initially\
    \ attached to the network or moves between\n   heterogeneous networks, full EAP\
    \ authentication between the peer and\n   EAP server occurs and user interaction\
    \ may be needed, e.g., a dialog\n   to prompt the user for credentials.  To reduce\
    \ latency, user\n   interaction for authentication at each handover should be\
    \ minimized.\n   Ideally, user involvement should take place only during initial\n\
    \   authentication and subsequent re-authentication should occur\n   transparently.\n"
- title: 3.2.  Integrated Local Domain Name (LDN) Discovery
  contents:
  - "3.2.  Integrated Local Domain Name (LDN) Discovery\n   ERP bootstrapping must\
    \ occur before (implicit) or during (explicit) a\n   handover to transport the\
    \ necessary keys to the local ER server\n   involved.  Implicit bootstrapping\
    \ is preferable because it does not\n   require communication with the home ER\
    \ server during handover, but it\n   requires that the peer know the domain name\
    \ of the ER server before\n   the subsequent local ERP exchange happens in order\
    \ to derive the\n   necessary re-authentication keying material.  ERP [RFC6696]\
    \ does not\n   specify such a domain name discovery mechanism and suggests that\
    \ the\n   peer may learn the domain name through the EAP-Initiate/Re-auth-Start\n\
    \   message or via lower-layer announcements.  However, domain name\n   discovery\
    \ happens after the implicit bootstrapping completes, which\n   may introduce\
    \ extra latency.  To allow more efficient handovers, a\n   HOKEY architecture\
    \ should support an efficient domain name discovery\n   mechanism (for example,\
    \ see Zorn, Wu & Wang [RFC6440]) and allow its\n   integration with ERP implicit\
    \ bootstrapping.  Even in the case of\n   explicit bootstrapping, LDN discovery\
    \ should be optimized such that\n   it does not require contacting the home AAA\
    \ server, as is currently\n   the case.\n"
- title: 3.3.  Fault-Tolerant Re-Authentication
  contents:
  - "3.3.  Fault-Tolerant Re-Authentication\n   If all authentication services depend\
    \ upon a remote server, a network\n   partition can result in the denial of service\
    \ to valid users.\n   However, if for example an ER server exists in the local\
    \ network,\n   previously authenticated users can re-authenticate even though\
    \ a link\n   to the home or main authentication server doesn't exist.\n"
- title: 3.4.  Improved Deployment Scalability
  contents:
  - "3.4.  Improved Deployment Scalability\n   To provide better deployment scalability,\
    \ there should be no\n   requirement for the co-location of entities providing\
    \ handover keying\n   services (e.g., ER servers) and AAA servers or proxies.\
    \  Separation\n   of these entities may cause problems with routing but allows\
    \ greater\n   flexibility in deployment and implementation.\n"
- title: 4.  Required Functionality
  contents:
  - '4.  Required Functionality

    '
- title: 4.1.  Authentication Subsystem Functional Overview
  contents:
  - "4.1.  Authentication Subsystem Functional Overview\n   The operation of the authentication\
    \ subsystem provided by HOKEY also\n   depends on the availability of a number\
    \ of discovery functions:\n   o  discovery of CAPs by the peer, by the SAP, or\
    \ by some other\n      entity;\n   o  discovery of the authentication services\
    \ supported at a given CAP;\n   o  discovery of the required server in the home\
    \ domain when a CAP is\n      not in the same domain as the SAP, or no local server\
    \ is\n      available;\n   o  peer discovery of the LDN when EAP re-authentication\
    \ is used with\n      a local server.\n   It is assumed that these functions are\
    \ provided by the environment\n   within which the authentication subsystem operates\
    \ and are outside\n   the scope of the authentication subsystem itself.  LDN discovery\
    \ is a\n   possible exception.\n   The major functions comprising the authentication\
    \ subsystem and their\n   interdependencies are discussed in greater detail below.\n\
    \   o  When AAA is invoked to authorize network access, it uses one of\n     \
    \ two services offered by the authentication subsystem: full EAP\n      authentication\
    \ or EAP re-authentication.  Note that although AAA\n      may perform authentication\
    \ directly in some cases, when EAP is\n      utilized AAA functions only as a\
    \ transport for EAP messages and\n      the encryption keys (if any) resulting\
    \ from successful EAP\n      authentication.\n   o  Pre-authentication triggers\
    \ AAA network access authorization at\n      each CAP, which in turn causes full\
    \ EAP authentication to be\n      invoked.\n   o  EAP re-authentication invokes\
    \ ER key management at the time of\n      authentication to create and distribute\
    \ keying material to ER\n      servers.\n   o  AAK relies on ER key management\
    \ to establish keying material on\n      ER/AAK servers but uses an extension\
    \ to ER key management to\n      derive and establish keying material on candidate\
    \ authenticators.\n      AAK uses an extension to EAP re-authentication to communicate\
    \ with\n      ER/AAK servers.\n   EAP authentication, EAP re-authentication, and\
    \ handover key\n   distribution depend on the routing and secure transport service\n\
    \   provided by AAA.  Discovery functions and the function of\n   authentication\
    \ and authorization of network entities (access points,\n   ER servers) are not\
    \ shown.  As stated above, these are external to\n   the authentication subsystem.\n"
- title: 4.2.  Pre-Authentication Function (Direct or Indirect)
  contents:
  - "4.2.  Pre-Authentication Function (Direct or Indirect)\n   The pre-authentication\
    \ function is responsible for discovery of CAPs\n   and completion of network\
    \ access authentication and authorization at\n   each CAP in advance of handover.\
    \  The operation of this function is\n   described in general terms in Ohba, et\
    \ al. [RFC5836].  No document is\n   yet available to describe the implementation\
    \ of pre-authentication in\n   terms of specific protocols; pre-authentication\
    \ support for the\n   Protocol for Carrying Authentication for Network Access\
    \ (PANA)\n   [RFC5873] could be part of the solution.\n"
- title: 4.3.  EAP Re-Authentication Function
  contents:
  - "4.3.  EAP Re-Authentication Function\n   The EAP re-authentication function is\
    \ responsible for authenticating\n   the peer at a specific access point using\
    \ keying material derived\n   from a prior full EAP authentication.  RFC 5169\
    \ [RFC5169] provides\n   the design objectives for an implementation of this function.\
    \  ERP\n   [RFC6696] describes a protocol to implement EAP re-authentication.\n"
- title: 4.4.  EAP Authentication Function
  contents:
  - "4.4.  EAP Authentication Function\n   The EAP authentication function is responsible\
    \ for authenticating the\n   peer at a specific access point using a full EAP\
    \ exchange.  Aboba,\n   et al. [RFC3748] define the associated protocol, while\
    \ Ohba,\n   et al. [RFC5836] describe the use of EAP as part of\n   pre-authentication.\
    \  Note that the HOKEY Working Group has not\n   specified the non-AAA protocol\
    \ required to transport EAP frames over\n   IP that is shown in Figures 3 and\
    \ 5 of Ohba, et al. [RFC5836],\n   although PANA [RFC5873] is a candidate.\n"
- title: 4.5.  Authenticated Anticipatory Keying (AAK) Function
  contents:
  - "4.5.  Authenticated Anticipatory Keying (AAK) Function\n   The AAK function is\
    \ responsible for pre-placing keying material\n   derived from an initial full\
    \ EAP authentication on CAPs.  The\n   operation is carried out in two steps:\
    \ ER key management (with\n   trigger not currently specified) places root keys\
    \ derived from\n   initial EAP authentication onto an ER/AAK server associated\
    \ with the\n   peer.  When requested by the peer, the ER/AAK server derives and\n\
    \   pushes predefined master session keys to one or more CAPs.  The\n   operation\
    \ of the AAK function is described in very general terms in\n   Ohba, et al. [RFC5836].\
    \  A protocol specification exists (see Cao,\n   et al. [RFC6630]).\n"
- title: 4.6.  Management of EAP-Based Handover Keys
  contents:
  - "4.6.  Management of EAP-Based Handover Keys\n   Handover key management consists\
    \ of EAP method-independent key\n   derivation and distribution and comprises\
    \ the following specific\n   functions:\n   o  handover key derivation\n   o \
    \ handover key distribution\n   The derivation of handover keys is specified in\
    \ Salowey,\n   et al. [RFC5295], and AAA-based key distribution is specified in\n\
    \   Hoeper, Nakhjiri & Ohba [RFC5749].\n"
- title: 5.  Components of the HOKEY Architecture
  contents:
  - "5.  Components of the HOKEY Architecture\n   This section describes the components\
    \ of the HOKEY architecture in\n   terms of the functions they perform.  The components\
    \ cooperate as\n   described in this section to carry out the functions described\
    \ in the\n   previous section.  Section 6 describes the different deployment\n\
    \   scenarios that are possible using these functions.\n   The components of the\
    \ HOKEY architecture are as follows:\n   o  the peer;\n   o  the authenticator,\
    \ which is a part of the SAP and CAPs;\n   o  the EAP server;\n   o  the ER server;\
    \ and\n   o  the ER/AAK server [RFC6630], either in the home domain or local to\n\
    \      the authenticator.\n"
- title: 5.1.  Functions of the Peer
  contents:
  - "5.1.  Functions of the Peer\n   The peer participates in the functions described\
    \ in Section 4, as\n   shown in Table 1.\n   +--------------------+----------------------------------------------+\n\
    \   | Function           | Peer Role                                    |\n  \
    \ +--------------------+----------------------------------------------+\n   |\
    \ EAP authentication | Determines that full EAP authentication is   |\n   |  \
    \                  | needed based on context (e.g., initial       |\n   |    \
    \                | authentication), prompting from the          |\n   |      \
    \              | authenticator, or discovery that only EAP    |\n   |        \
    \            | authentication is supported.  Participates   |\n   |          \
    \          | in the EAP exchange with the EAP server.     |\n   | -          \
    \        | -                                            |\n   | Direct       \
    \      | Discovers CAPs.  Initiates                   |\n   | pre-authentication\
    \ | pre-authentication with each, followed by    |\n   |                    |\
    \ EAP authentication as above, but using IP    |\n   |                    | rather\
    \ than L2 transport for the EAP frames. |\n   | -                  | -       \
    \                                     |\n   | Indirect           | Enters into\
    \ a full EAP exchange when         |\n   | pre-authentication | triggered, using\
    \ either L2 or L3 transport   |\n   |                    | for the frames.   \
    \                           |\n   | -                  | -                   \
    \                         |\n   | EAP                | Determines that EAP re-authentication\
    \ is     |\n   | re-authentication  | possible based on discovery or authenticator\
    \ |\n   |                    | prompting.  Participates in ERP exchange     |\n\
    \   |                    | with the ER server.                          |\n  \
    \ | -                  | -                                            |\n   |\
    \ AAK                | Determines that AAK is possible based on     |\n   |  \
    \                  | discovery or serving authenticator           |\n   |    \
    \                | prompting.  Discovers CAPs.  Participates in |\n   |      \
    \              | ERP/AAK exchange, requesting distribution of |\n   |        \
    \            | keying material to the CAPs.                 |\n   | -        \
    \          | -                                            |\n   | ER key management\
    \  | No role.                                     |\n   +--------------------+----------------------------------------------+\n\
    \                      Table 1: Functions of the Peer\n"
- title: 5.2.  Functions of the Serving Authenticator
  contents:
  - "5.2.  Functions of the Serving Authenticator\n   The serving authenticator participates\
    \ in the functions described in\n   Section 4, as shown in Table 2.\n   +--------------------+----------------------------------------------+\n\
    \   | Function           | Serving Authenticator Role                   |\n  \
    \ +--------------------+----------------------------------------------+\n   |\
    \ EAP authentication | No role.                                     |\n   | -\
    \                  | -                                            |\n   | Direct\
    \             | No role.                                     |\n   | pre-authentication\
    \ |                                              |\n   | -                  |\
    \ -                                            |\n   | Indirect           | Discovers\
    \ CAPs.  Initiates an EAP exchange   |\n   | pre-authentication | between the\
    \ peer and the EAP server through  |\n   |                    | each candidate\
    \ authenticator.  Mediates      |\n   |                    | between L2 transport\
    \ of EAP frames on the    |\n   |                    | peer side and a non-AAA\
    \ protocol over IP     |\n   |                    | toward the CAP.          \
    \                    |\n   | -                  | -                          \
    \                  |\n   | EAP                | No role.                     \
    \                |\n   | re-authentication  |                                \
    \              |\n   | -                  | -                                \
    \            |\n   | AAK                | Mediates between L2 transport of AAK\
    \ frames  |\n   |                    | on the peer side and AAA transport toward\
    \    |\n   |                    | the ER/AAK server.                         \
    \  |\n   | -                  | -                                            |\n\
    \   | ER key management  | No role.                                     |\n  \
    \ +--------------------+----------------------------------------------+\n    \
    \          Table 2: Functions of the Serving Authenticator\n"
- title: 5.3.  Functions of the Candidate Authenticator
  contents:
  - "5.3.  Functions of the Candidate Authenticator\n   The candidate authenticator\
    \ participates in the functions described\n   in Section 4, as shown in Table\
    \ 3.\n   +--------------------+----------------------------------------------+\n\
    \   | Function           | Candidate Authenticator Role                 |\n  \
    \ +--------------------+----------------------------------------------+\n   |\
    \ EAP authentication | Invokes AAA network access authentication    |\n   |  \
    \                  | and authorization upon handover/initial      |\n   |    \
    \                | attachment.  Mediates between L2 transport   |\n   |      \
    \              | of EAP frames on the peer link and AAA       |\n   |        \
    \            | transport toward the EAP server.             |\n   | -        \
    \          | -                                            |\n   | Direct     \
    \        | Invokes AAA network access authentication    |\n   | pre-authentication\
    \ | and authorization when the peer initiates    |\n   |                    |\
    \ authentication.  Mediates between non-AAA L3 |\n   |                    | transport\
    \ of EAP frames on the peer side and |\n   |                    | AAA transport\
    \ toward the EAP server.         |\n   | -                  | -              \
    \                              |\n   | Indirect           | Same as direct pre-authentication,\
    \ except    |\n   | pre-authentication | that it communicates with the serving\
    \        |\n   |                    | authenticator rather than the peer.    \
    \      |\n   | -                  | -                                        \
    \    |\n   | EAP                | Invokes AAA network access authentication  \
    \  |\n   | re-authentication  | and authorization upon handover.  Discovers  |\n\
    \   |                    | or is configured with the address of the ER  |\n  \
    \ |                    | server.  Mediates between L2 transport of    |\n   |\
    \                    | ERP frames on the peer side and AAA          |\n   |  \
    \                  | transport toward the ER server.              |\n   | -  \
    \                | -                                            |\n   | AAK  \
    \              | Receives and saves the pMSK.                 |\n   | -      \
    \            | -                                            |\n   | ER key management\
    \  | No role.                                     |\n   +--------------------+----------------------------------------------+\n\
    \             Table 3: Functions of the Candidate Authenticator\n"
- title: 5.4.  Functions of the EAP Server
  contents:
  - "5.4.  Functions of the EAP Server\n   The EAP server participates in the functions\
    \ described in Section 4,\n   as shown in Table 4.\n   +--------------------+----------------------------------------------+\n\
    \   | Function           | EAP Server Role                              |\n  \
    \ +--------------------+----------------------------------------------+\n   |\
    \ EAP authentication | Terminates EAP signaling between it and the  |\n   |  \
    \                  | peer via the candidate authenticator.        |\n   |    \
    \                | Determines whether network access            |\n   |      \
    \              | authentication succeeds or fails.  Provides  |\n   |        \
    \            | the MSK to the authenticator (via AAA).      |\n   | -        \
    \          | -                                            |\n   | Direct     \
    \        | Same as for EAP authentication.              |\n   | pre-authentication\
    \ |                                              |\n   | -                  |\
    \ -                                            |\n   | Indirect           | Same\
    \ as for EAP authentication.              |\n   | pre-authentication |       \
    \                                       |\n   | -                  | -       \
    \                                     |\n   | EAP                | Provides an\
    \ rRK or DS-rRK to the ER server   |\n   | re-authentication  | (via AAA).   \
    \                                |\n   | -                  | -              \
    \                              |\n   | AAK                | Same as for EAP re-authentication.\
    \           |\n   | -                  | -                                   \
    \         |\n   | ER key management  | Creates an rRK or DS-rRK and distributes\
    \ it  |\n   |                    | to the ER server requesting the information.\
    \ |\n   +--------------------+----------------------------------------------+\n\
    \                   Table 4: Functions of the EAP Server\n"
- title: 5.5.  Functions of the ER Server
  contents:
  - "5.5.  Functions of the ER Server\n   The ER server participates in the functions\
    \ described in Section 4,\n   as shown in Table 5.\n   +--------------------+----------------------------------------------+\n\
    \   | Function           | ER Server Role                               |\n  \
    \ +--------------------+----------------------------------------------+\n   |\
    \ EAP authentication | No role.                                     |\n   | -\
    \                  | -                                            |\n   | Direct\
    \             | No role.                                     |\n   | pre-authentication\
    \ |                                              |\n   | -                  |\
    \ -                                            |\n   | Indirect           | No\
    \ role.                                     |\n   | pre-authentication |     \
    \                                         |\n   | -                  | -     \
    \                                       |\n   | EAP                | Acquires\
    \ an rRK or DS-rRK as applicable when |\n   | re-authentication  | necessary.\
    \  Terminates ERP signaling between |\n   |                    | it and the peer\
    \ via the candidate            |\n   |                    | authenticator.  Determines\
    \ whether network   |\n   |                    | access authentication succeeds\
    \ or fails.     |\n   |                    | Provides an MSK to the authenticator.\
    \        |\n   | -                  | -                                      \
    \      |\n   | AAK                | Acquires an rRK or DS-rRK as applicable when\
    \ |\n   |                    | necessary.  Derives pMSKs and passes them to |\n\
    \   |                    | the CAPs.                                    |\n  \
    \ | -                  | -                                            |\n   |\
    \ ER key management  | Receives and saves an rRK or DS-rRK as       |\n   |  \
    \                  | applicable.                                  |\n   +--------------------+----------------------------------------------+\n\
    \                    Table 5: Functions of the ER Server\n"
- title: 6.  Usage Scenarios
  contents:
  - "6.  Usage Scenarios\n   Depending upon whether a change in a domain or access\
    \ technology is\n   involved, we have the following usage scenarios.\n"
- title: 6.1.  Simple Re-Authentication
  contents:
  - "6.1.  Simple Re-Authentication\n   The peer remains stationary and re-authenticates\
    \ to the original\n   access point.  Note that in this case, the SAP takes the\
    \ role of the\n   CAP in the discussion above.\n"
- title: 6.2.  Intra-Domain Handover
  contents:
  - "6.2.  Intra-Domain Handover\n   The peer moves between two authenticators in\
    \ the same domain.  In\n   this scenario, the peer communicates with the ER server\
    \ via the ER\n   authenticator within the same network.\n"
- title: 6.3.  Inter-Domain Handover
  contents:
  - "6.3.  Inter-Domain Handover\n   The peer moves between two different domains.\
    \  In this scenario, the\n   peer communicates with more than one ER server via\
    \ one or two\n   different ER authenticators.  One ER server is located in the\
    \ current\n   network as the peer, and one is located in the previous network\
    \ from\n   which the peer moves.  Another ER server is located in the home\n \
    \  network to which the peer belongs.\n"
- title: 6.4.  Inter-Technology Handover
  contents:
  - "6.4.  Inter-Technology Handover\n   The peer moves between two heterogeneous\
    \ networks.  In this scenario,\n   the peer needs to support at least two access\
    \ technologies.  The\n   coverage of two access technologies usually is overlapped\
    \ during\n   handover.  In this case, only authentication corresponding to\n \
    \  intra-domain handover is required; i.e., the peer can communicate\n   with\
    \ the same local ER server to complete authentication and obtain\n   keying material\
    \ corresponding to the peer.\n"
- title: 7.  AAA Considerations
  contents:
  - "7.  AAA Considerations\n   This section provides an analysis of how the AAA protocol\
    \ can be\n   applied in the HOKEY architecture in accordance with Section 4.1\n\
    \   (\"Authentication Subsystem Functional Overview\").\n"
- title: 7.1.  Authorization
  contents:
  - "7.1.  Authorization\n   Authorization is a major issue in deployments.  Wherever\
    \ the peer\n   moves around, the home AAA server provides authorization for the\
    \ peer\n   during its handover.  However, it is unnecessary to couple\n   authorization\
    \ with authentication at every handover, since\n   authorization is only needed\
    \ when the peer is initially attached to\n   the network or moves between two\
    \ different AAA domains.  The EAP key\n   management document [RFC5247] discusses\
    \ several vulnerabilities that\n   are common to handover mechanisms.  One important\
    \ issue arises from\n   the way that the authorization decisions might be handled\
    \ at the AAA\n   server during network access authentication.  For example, if\
    \ AAA\n   proxies are involved, they may also influence authorization\n   decisions.\
    \  Furthermore, the reasons for choosing a particular\n   decision are not communicated\
    \ to the AAA clients.  In fact, the AAA\n   client only knows the final authorization\
    \ result.  Another issue\n   relates to session management.  In some circumstances,\
    \ when the peer\n   moves from one authenticator to another, the peer may be\n\
    \   authenticated by the different authenticator during a period of time,\n  \
    \ and the authenticator to which the peer is currently attached needs\n   to create\
    \ a new AAA user session; however, the AAA server should not\n   view these handoffs\
    \ as different sessions.  Otherwise, this may\n   affect user experience and also\
    \ cause accounting or logging issues.\n   For example, session ID creation, in\
    \ most cases, is done by each\n   authenticator to which the peer attaches.  In\
    \ this sense, the new\n   authenticator acting as AAA client needs to create a\
    \ new AAA user\n   session from scratch, which forces its corresponding AAA server\
    \ to\n   terminate the existing user session with the previous authenticator\n\
    \   and set up a new user session with the new authenticator.  This may\n   complicate\
    \ the setup and maintenance of the AAA user session.\n"
- title: 7.2.  Transport Aspect
  contents:
  - "7.2.  Transport Aspect\n   The existing AAA protocols can be used to carry EAP\
    \ and ERP messages\n   between the AAA server and AAA clients.  AAA transport\
    \ of ERP\n   messages is specified in Hoeper, Nakhjiri & Ohba [RFC5749] and\n\
    \   Bournelle, et al. [DIAMETER-ERP].  AAA transport of EAP messages is\n   specified\
    \ in [RFC4072].  Key transport also can be performed through\n   a AAA protocol.\
    \  Zorn, Wu & Cakulev [DIAMETER-AVP] specify a set of\n   Attribute-Value Pairs\
    \ (AVPs) providing native Diameter support of\n   cryptographic key delivery.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This document does not introduce any new security\
    \ vulnerabilities.\n"
- title: 9.  Acknowledgments
  contents:
  - "9.  Acknowledgments\n   The authors would like to thank Mark Jones, Zhen Cao,\
    \ Semyon\n   Mizikovsky, Stephen Farrell, Ondrej Sury, Richard Barnes, Jari Arkko,\n\
    \   and Lionel Morand for their reviews and comments.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC3748]  Aboba, B., Blunk, L., Vollbrecht,\
    \ J., Carlson, J., and H.\n              Levkowetz, Ed., \"Extensible Authentication\
    \ Protocol\n              (EAP)\", RFC 3748, June 2004.\n   [RFC5169]  Clancy,\
    \ T., Nakhjiri, M., Narayanan, V., and L. Dondeti,\n              \"Handover Key\
    \ Management and Re-Authentication Problem\n              Statement\", RFC 5169,\
    \ March 2008.\n   [RFC5836]  Ohba, Y., Ed., Wu, Q., Ed., and G. Zorn, Ed., \"\
    Extensible\n              Authentication Protocol (EAP) Early Authentication Problem\n\
    \              Statement\", RFC 5836, April 2010.\n   [RFC6696]  Cao, Z., He,\
    \ B., Shi, Y., Wu, Q., Ed., and G. Zorn, Ed.,\n              \"EAP Extensions\
    \ for the EAP Re-authentication Protocol\n              (ERP)\", RFC 6696, July\
    \ 2012.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [DIAMETER-AVP]\n              Zorn, G., Wu,\
    \ Q., and V. Cakulev, \"Diameter Attribute-\n              Value Pairs for Cryptographic\
    \ Key Transport\", Work\n              in Progress, August 2011.\n   [DIAMETER-ERP]\n\
    \              Bournelle, J., Morand, L., Decugis, S., Wu, Q., and G.\n      \
    \        Zorn, \"Diameter Support for the EAP Re-authentication\n            \
    \  Protocol (ERP)\", Work in Progress, June 2012.\n   [RFC4072]  Eronen, P., Ed.,\
    \ Hiller, T., and G. Zorn, \"Diameter\n              Extensible Authentication\
    \ Protocol (EAP) Application\",\n              RFC 4072, August 2005.\n   [RFC5247]\
    \  Aboba, B., Simon, D., and P. Eronen, \"Extensible\n              Authentication\
    \ Protocol (EAP) Key Management Framework\",\n              RFC 5247, August 2008.\n\
    \   [RFC5295]  Salowey, J., Dondeti, L., Narayanan, V., and M. Nakhjiri,\n   \
    \           \"Specification for the Derivation of Root Keys from an\n        \
    \      Extended Master Session Key (EMSK)\", RFC 5295,\n              August 2008.\n\
    \   [RFC5749]  Hoeper, K., Ed., Nakhjiri, M., and Y. Ohba, Ed.,\n            \
    \  \"Distribution of EAP-Based Keys for Handover and\n              Re-Authentication\"\
    , RFC 5749, March 2010.\n   [RFC5873]  Ohba, Y. and A. Yegin, \"Pre-Authentication\
    \ Support for the\n              Protocol for Carrying Authentication for Network\
    \ Access\n              (PANA)\", RFC 5873, May 2010.\n   [RFC6440]  Zorn, G.,\
    \ Wu, Q., and Y. Wang, \"The EAP Re-authentication\n              Protocol (ERP)\
    \ Local Domain Name DHCPv6 Option\", RFC 6440,\n              December 2011.\n\
    \   [RFC6630]  Cao, Z., Deng, H., Wu, Q., and G. Zorn, Ed., \"EAP\n          \
    \    Re-authentication Protocol Extensions for Authenticated\n              Anticipatory\
    \ Keying (ERP/AAK)\", RFC 6630, June 2012.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Glen Zorn (editor)\n   Network Zen\n   227/358 Thanon\
    \ Sanphawut\n   Bang Na, Bangkok  10260\n   Thailand\n   Phone: +66 (0) 909 201060\n\
    \   EMail: glenzorn@gmail.com\n   Qin Wu\n   Huawei Technologies Co., Ltd.\n \
    \  101 Software Avenue, Yuhua District\n   Nanjing, JiangSu  210012\n   China\n\
    \   Phone: +86-25-84565892\n   EMail: bill.wu@huawei.com\n   Tom Taylor\n   Huawei\
    \ Technologies Co., Ltd.\n   Ottawa, Ontario\n   Canada\n   EMail: tom.taylor.stds@gmail.com\n\
    \   Yoav Nir\n   Check Point\n   5 Hasolelim St.\n   Tel Aviv  67897\n   Israel\n\
    \   EMail: ynir@checkpoint.com\n   Katrin Hoeper\n   Motorola Solutions, Inc.\n\
    \   1301 E. Algonquin Road\n   Schaumburg, IL  60196\n   USA\n   EMail: khoeper@motorolasolutions.com>\n\
    \   Sebastien Decugis\n   INSIDE Secure\n   41 Parc Club du Golf\n   Aix-en-Provence\
    \  13856\n   France\n   Phone: +33 (0)4 42 39 63 00\n   EMail: sdecugis@freediameter.net\n"
