- contents:
  - '       Definitions of Managed Objects for Extensible SNMP Agents

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes objects managing SNMP agents that use the\n   Agent Extensibility
    (AgentX) Protocol.\n   This memo specifies a MIB module in a manner that is both
    compliant\n   to the SMIv2, and semantically identical to the peer SMIv1\n   definitions.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. The SNMP Management Framework ...............................
    \  2\n   2. Introduction ................................................   3\n
    \  3. AgentX MIB Overview .........................................   3\n   4.
    Managed Object Definitions for AgentX .......................   4\n   5. Intellectual
    Property .......................................  15\n   6. Acknowledgements ............................................
    \ 16\n   7. Security Considerations .....................................  16\n
    \  8. References ..................................................  17\n   9.
    Authors' and Editor's Addresses .............................  19\n   10. Full
    Copyright Statement ...................................  20\n"
  title: Table of Contents
- contents:
  - "1.  The SNMP Management Framework\n   The SNMP Management Framework presently
    consists of five major\n   components:\n   -  An overall architecture, described
    in RFC 2571 [1].\n   -  Mechanisms for describing and naming objects and events
    for the\n      purpose of management. The first version of this Structure of\n
    \     Management Information (SMI) is called SMIv1 and described in STD\n      16,
    RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4]. The\n      second version,
    called SMIv2, is described in STD 58, RFC 2578\n      [5], STD 58, RFC 2579 [6]
    and STD 58, RFC 2580 [7].\n   -  Message protocols for transferring management
    information. The\n      first version of the SNMP message protocol is called SNMPv1
    and\n      described in STD 15, RFC 1157 [8]. A second version of the SNMP\n      message
    protocol, which is not an Internet standards track\n      protocol, is called
    SNMPv2c and described in RFC 1901 [9] and RFC\n      1906 [10].  The third version
    of the message protocol is called\n      SNMPv3 and described in RFC 1906 [10],
    RFC 2572 [11] and RFC 2574\n      [12].\n   -  Protocol operations for accessing
    management information. The\n      first set of protocol operations and associated
    PDU formats is\n      described in STD 15, RFC 1157 [8]. A second set of protocol\n
    \     operations and associated PDU formats is described in RFC 1905\n      [13].\n
    \  -  A set of fundamental applications described in RFC 2573 [14] and\n      the
    view-based access control mechanism described in RFC 2575\n      [15].\n   A more
    detailed introduction to the current SNMP Management Framework\n   can be found
    in RFC 2570 [16].\n   Managed objects are accessed via a virtual information store,
    termed\n   the Management Information Base or MIB.  Objects in the MIB are\n   defined
    using the mechanisms defined in the SMI.\n   This memo specifies a MIB module
    that is compliant to the SMIv2. A\n   MIB conforming to the SMIv1 can be produced
    through the appropriate\n   translations. The resulting translated MIB must be
    semantically\n   equivalent, except where objects or events are omitted because
    no\n   translation is possible (use of Counter64). Some machine readable\n   information
    in SMIv2 will be converted into textual descriptions in\n   SMIv1 during the translation
    process. However, this loss of machine\n   readable information is not considered
    to change the semantics of the\n   MIB.\n"
  title: 1.  The SNMP Management Framework
- contents:
  - "2.  Introduction\n   The SNMP Agent Extensibility Protocol (AgentX) is a protocol
    used to\n   distribute the implementation of an SNMP agent amongst a single\n
    \  \"master agent\" and multiple \"subagents\". See [17] for details about\n   the
    AgentX protocol.\n   The goals of the AgentX MIB are:\n   -  List the set of subagent
    connections that currently have logical\n      sessions open with the master agent.\n
    \  -  Identify each subagent connection transport address and type.\n   -  Identify
    each subagent session vendor, AgentX protocol version,\n      and other characteristics.\n
    \  -  Identify the set of MIB objects each session implements, the\n      context
    in which the objects are registered, and the priority of\n      the registration.\n
    \  -  Determine protocol operational parameters such as the timeout\n      interval
    for responses from a session and the priority at which a\n      session registers
    a particular MIB region.\n   -  Allow (but do not require) managers to explicitly
    close subagent\n      sessions with the master agent.\n"
  title: 2.  Introduction
- contents:
  - "3.  AgentX MIB Overview\n   This MIB is organized into four groups.  The agentxGeneral
    group\n   provides information describing the master agent's AgentX support,\n
    \  including the protocol version supported.  The agentxConnection group\n   provides
    information describing the current set of connections\n   capable of carrying
    AgentX sessions.  The agentxSession group\n   provides information describing
    the current set of AgentX sessions.\n   The agentxRegistration group provides
    information describing the\n   current set of registrations.\n   Three tables
    form the heart of this mib.  These are the connection,\n   session, and registration
    tables.\n   Entries in the registration table exist in a many-to-one relationship\n
    \  with entries in the session table.  This relationship is expressed\n   through
    the two common indices, agentxSessionIndex and\n   agentxConnIndex.  Entries in
    the registration table also exist in a\n   many-to-one relationship with entries
    in the connection table.  This\n   relationship is expressed through the common
    index, agentxConnIndex.\n   Entries in the session table exist in a many-to-one
    relationship with\n   entries in the connection table.  This relationship is expressed\n
    \  through the common index, agentxConnIndex.\n"
  title: 3.  AgentX MIB Overview
- contents:
  - '4.  Managed Object Definitions for AgentX

    '
  - 'AGENTX-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n MODULE-IDENTITY, OBJECT-TYPE, Unsigned32, mib-2\n    FROM SNMPv2-SMI\n
    SnmpAdminString\n    FROM SNMP-FRAMEWORK-MIB\n MODULE-COMPLIANCE, OBJECT-GROUP\n
    \   FROM SNMPv2-CONF\n TEXTUAL-CONVENTION, TimeStamp, TruthValue, TDomain\n    FROM
    SNMPv2-TC;\n"
  - "agentxMIB MODULE-IDENTITY\n LAST-UPDATED \"200001100000Z\" -- Midnight 10 January
    2000\n ORGANIZATION \"AgentX Working Group\"\n CONTACT-INFO \"WG-email:   agentx@dorothy.bmc.com\n
    \              Subscribe:  agentx-request@dorothy.bmc.com\n               WG-email
    Archive:  ftp://ftp.peer.com/pub/agentx/archives\n               FTP repository:
    \ ftp://ftp.peer.com/pub/agentx\n               http://www.ietf.org/html.charters/agentx-charter.html\n
    \              Chair:      Bob Natale\n                           ACE*COMM Corporation\n
    \              Email:      bnatale@acecomm.com\n               WG editor:  Mark
    Ellison\n                           Ellison Software Consulting, Inc.\n               Email:
    \     ellison@world.std.com\n               Co-author:  Lauren Heintz\n                           Cisco
    Systems,\n               EMail:      lheintz@cisco.com\n               Co-author:
    \ Smitha Gudur\n                           Independent Consultant\n               Email:
    \     sgudur@hotmail.com\n              \"\n DESCRIPTION    \"This is the MIB
    module for the SNMP Agent Extensibility\n     Protocol (AgentX).  This MIB module
    will be implemented by\n     the master agent.\n    \"\n  REVISION     \"200001100000Z\"
    -- Midnight 10 January 2000\n DESCRIPTION\n    \"Initial version published as
    RFC 2742.\"\n  ::= { mib-2  74 }\n -- Textual Conventions\n AgentxTAddress ::=
    TEXTUAL-CONVENTION\n   STATUS       current\n   DESCRIPTION\n     \"Denotes a
    transport service address.  This is identical to\n      the TAddress textual convention
    (SNMPv2-SMI) except that\n      zero-length values are permitted.\n     \"\n   SYNTAX
    \      OCTET STRING (SIZE (0..255))\n -- Administrative assignments\n agentxObjects
    OBJECT IDENTIFIER      ::= { agentxMIB 1 }\n agentxGeneral OBJECT IDENTIFIER      ::=
    { agentxObjects 1 }\n agentxConnection OBJECT IDENTIFIER   ::= { agentxObjects
    2 }\n agentxSession OBJECT IDENTIFIER      ::= { agentxObjects 3 }\n agentxRegistration
    OBJECT IDENTIFIER ::= { agentxObjects 4 }\n agentxDefaultTimeout OBJECT-TYPE\n
    \ SYNTAX      INTEGER (0..255)\n  UNITS       \"seconds\"\n  MAX-ACCESS  read-only\n
    \ STATUS      current\n  DESCRIPTION\n     \"The default length of time, in seconds,
    that the master\n      agent should allow to elapse after dispatching a message\n
    \     to a session before it regards the subagent as not\n      responding.  This
    is a system-wide value that may\n      override the timeout value associated with
    a particular\n      session (agentxSessionTimeout) or a particular registered\n
    \     MIB region (agentxRegTimeout).  If the associated value of\n      agentxSessionTimeout
    and agentxRegTimeout are zero, or\n      impractical in accordance with implementation-specific\n
    \     procedure of the master agent, the value represented by\n      this object
    will be the effective timeout value for the\n      master agent to await a response
    to a dispatch from a\n      given subagent.\n     \"\n  DEFVAL      { 5 }\n  ::=
    { agentxGeneral 1 }\n agentxMasterAgentXVer OBJECT-TYPE\n  SYNTAX      INTEGER
    (1..255)\n  MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n     \"The
    AgentX protocol version supported by this master agent.\n      The current protocol
    version is 1.  Note that the master agent\n      must also allow interaction with
    earlier version subagents.\n     \"\n  ::= { agentxGeneral 2 }\n --      The AgentX
    Subagent Connection Group\n agentxConnTableLastChange OBJECT-TYPE\n  SYNTAX      TimeStamp\n
    \ MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n     \"The value
    of sysUpTime when the last row creation or deletion\n      occurred in the agentxConnectionTable.\n
    \    \"\n  ::= { agentxConnection 1 }\n agentxConnectionTable OBJECT-TYPE\n   SYNTAX
    \     SEQUENCE OF AgentxConnectionEntry\n   MAX-ACCESS  not-accessible\n   STATUS
    \     current\n   DESCRIPTION\n     \"The agentxConnectionTable tracks all current
    AgentX transport\n      connections.  There may be zero, one, or more AgentX sessions\n
    \     carried on a given AgentX connection.\n     \"\n   ::= { agentxConnection
    2 }\n agentxConnectionEntry OBJECT-TYPE\n   SYNTAX      AgentxConnectionEntry\n
    \  MAX-ACCESS  not-accessible\n   STATUS      current\n   DESCRIPTION\n     \"An
    agentxConnectionEntry contains information describing a\n      single AgentX transport
    connection.  A connection may be\n      used to support zero or more AgentX sessions.
    \ An entry is\n      created when a new transport connection is established,\n
    \     and is destroyed when the transport connection is terminated.\n     \"\n
    \  INDEX { agentxConnIndex }\n   ::= { agentxConnectionTable 1 }\n AgentxConnectionEntry
    ::= SEQUENCE {\n          agentxConnIndex            Unsigned32,\n          agentxConnOpenTime
    \        TimeStamp,\n          agentxConnTransportDomain  TDomain,\n          agentxConnTransportAddress
    AgentxTAddress }\n agentxConnIndex OBJECT-TYPE\n   SYNTAX       Unsigned32 (1..4294967295)\n
    \  MAX-ACCESS   not-accessible\n   STATUS       current\n   DESCRIPTION\n     \"agentxConnIndex
    contains the value that uniquely identifies\n      an open transport connection
    used by this master agent\n      to provide AgentX service.  Values of this index
    should\n      not be re-used.  The value assigned to a given transport\n      connection
    is constant for the lifetime of that connection.\n     \"\n   ::= { agentxConnectionEntry
    1 }\n agentxConnOpenTime OBJECT-TYPE\n   SYNTAX       TimeStamp\n   MAX-ACCESS
    \  read-only\n   STATUS       current\n   DESCRIPTION\n     \"The value of sysUpTime
    when this connection was established\n      and, therefore, its value when this
    entry was added to the table.\n     \"\n   ::= { agentxConnectionEntry 2 }\n agentxConnTransportDomain
    OBJECT-TYPE\n   SYNTAX       TDomain\n   MAX-ACCESS   read-only\n   STATUS       current\n
    \  DESCRIPTION\n     \"The transport protocol in use for this connection to the\n
    \     subagent.\n     \"\n   ::= { agentxConnectionEntry 3 }\n agentxConnTransportAddress
    OBJECT-TYPE\n   SYNTAX       AgentxTAddress\n   MAX-ACCESS   read-only\n   STATUS
    \      current\n   DESCRIPTION\n     \"The transport address of the remote (subagent)
    end of this\n      connection to the master agent.  This object may be zero-length\n
    \     for unix-domain sockets (and possibly other types of transport\n      addresses)
    since the subagent need not bind a filename to its\n      local socket.\n     \"\n
    \  ::= { agentxConnectionEntry 4 }\n -- The AgentX Subagent Session Group\n agentxSessionTableLastChange
    OBJECT-TYPE\n  SYNTAX      TimeStamp\n  MAX-ACCESS  read-only\n  STATUS      current\n
    \ DESCRIPTION\n     \"The value of sysUpTime when the last row creation or deletion\n
    \     occurred in the agentxSessionTable.\n     \"\n  ::= { agentxSession 1 }\n
    agentxSessionTable OBJECT-TYPE\n  SYNTAX      SEQUENCE OF AgentxSessionEntry\n
    \ MAX-ACCESS  not-accessible\n  STATUS      current\n  DESCRIPTION\n     \"A table
    of AgentX subagent sessions currently in effect.\n     \"\n  ::= { agentxSession
    2 }\n agentxSessionEntry OBJECT-TYPE\n  SYNTAX      AgentxSessionEntry\n  MAX-ACCESS
    \ not-accessible\n  STATUS      current\n  DESCRIPTION\n     \"Information about
    a single open session between the AgentX\n      master agent and a subagent is
    contained in this entry.  An\n      entry is created when a new session is successfully
    established\n      and is destroyed either when the subagent transport connection\n
    \     has terminated or when the subagent session is closed.\n     \"\n  INDEX
    \      { agentxConnIndex, agentxSessionIndex }\n  ::= { agentxSessionTable 1 }\n
    AgentxSessionEntry ::= SEQUENCE {\n  agentxSessionIndex         Unsigned32,\n
    \ agentxSessionObjectID      OBJECT IDENTIFIER,\n  agentxSessionDescr         SnmpAdminString,\n
    \ agentxSessionAdminStatus   INTEGER,\n  agentxSessionOpenTime      TimeStamp,\n
    \ agentxSessionAgentXVer     INTEGER,\n  agentxSessionTimeout       INTEGER\n
    }\n agentxSessionIndex OBJECT-TYPE\n  SYNTAX      Unsigned32 (0..4294967295)\n
    \ MAX-ACCESS  not-accessible\n  STATUS      current\n  DESCRIPTION\n     \"A unique
    index for the subagent session.  It is the same as\n      h.sessionID defined
    in the agentx header.  Note that if\n      a subagent's session with the master
    agent is closed for\n      any reason its index should not be re-used.\n      A
    value of zero(0) is specifically allowed in order\n      to be compatible with
    the definition of h.sessionId.\n     \"\n  ::= { agentxSessionEntry 1 }\n agentxSessionObjectID
    OBJECT-TYPE\n  SYNTAX      OBJECT IDENTIFIER\n  MAX-ACCESS  read-only\n  STATUS
    \     current\n  DESCRIPTION\n     \"This is taken from the o.id field of the
    agentx-Open-PDU.\n      This attribute will report a value of '0.0' for subagents\n
    \     not supporting the notion of an AgentX session object\n      identifier.\n
    \    \"\n  ::= { agentxSessionEntry 2 }\n agentxSessionDescr OBJECT-TYPE\n  SYNTAX
    \     SnmpAdminString\n  MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n
    \    \"A textual description of the session.  This is analogous to\n      sysDescr
    defined in the SNMPv2-MIB in RFC 1907 [19] and is\n      taken from the o.descr
    field of the agentx-Open-PDU.\n      This attribute will report a zero-length
    string value for\n      subagents not supporting the notion of a session description.\n
    \    \"\n  ::= { agentxSessionEntry 3 }\n agentxSessionAdminStatus OBJECT-TYPE\n
    \ SYNTAX      INTEGER {\n                 up(1),\n                 down(2)\n              }\n
    \ MAX-ACCESS  read-write\n  STATUS      current\n  DESCRIPTION\n     \"The administrative
    (desired) status of the session.  Setting\n      the value to 'down(2)' closes
    the subagent session (with c.reason\n      set to 'reasonByManager').\n     \"\n
    \ ::= { agentxSessionEntry 4 }\n agentxSessionOpenTime OBJECT-TYPE\n  SYNTAX      TimeStamp\n
    \ MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n     \"The value
    of sysUpTime when this session was opened and,\n      therefore, its value when
    this entry was added to the table.\n     \"\n  ::= { agentxSessionEntry 5 }\n
    agentxSessionAgentXVer OBJECT-TYPE\n  SYNTAX      INTEGER (1..255)\n  MAX-ACCESS
    \ read-only\n  STATUS      current\n  DESCRIPTION\n     \"The version of the AgentX
    protocol supported by the\n      session.  This must be less than or equal to
    the value of\n      agentxMasterAgentXVer.\n     \"\n  ::= { agentxSessionEntry
    6 }\n agentxSessionTimeout OBJECT-TYPE\n  SYNTAX     INTEGER (0..255)\n  UNITS
    \     \"seconds\"\n  MAX-ACCESS read-only\n  STATUS     current\n  DESCRIPTION\n
    \    \"The length of time, in seconds, that a master agent should\n      allow
    to elapse after dispatching a message to this session\n      before it regards
    the subagent as not responding.  This value\n      is taken from the o.timeout
    field of the agentx-Open-PDU.\n      This is a session-specific value that may
    be overridden by\n      values associated with the specific registered MIB regions\n
    \     (see agentxRegTimeout). A value of zero(0) indicates that\n      the master
    agent's default timeout value should be used\n      (see agentxDefaultTimeout).\n
    \    \"\n  ::= { agentxSessionEntry 7 }\n -- The AgentX Registration Group\n agentxRegistrationTableLastChange
    OBJECT-TYPE\n  SYNTAX      TimeStamp\n  MAX-ACCESS  read-only\n  STATUS      current\n
    \ DESCRIPTION\n     \"The value of sysUpTime when the last row creation or deletion\n
    \     occurred in the agentxRegistrationTable.\n     \"\n  ::= { agentxRegistration
    1 }\n agentxRegistrationTable OBJECT-TYPE\n  SYNTAX      SEQUENCE OF AgentxRegistrationEntry\n
    \ MAX-ACCESS  not-accessible\n  STATUS      current\n  DESCRIPTION\n     \"A table
    of registered regions.\n     \"\n  ::= { agentxRegistration 2 }\n agentxRegistrationEntry
    OBJECT-TYPE\n  SYNTAX      AgentxRegistrationEntry\n  MAX-ACCESS  not-accessible\n
    \ STATUS      current\n  DESCRIPTION\n     \"Contains information for a single
    registered region.  An\n      entry is created when a session  successfully registers
    a\n      region and is destroyed for any of three reasons: this region\n      is
    unregistered by the session, the session is closed,\n      or the subagent connection
    is closed.\n     \"\n  INDEX       { agentxConnIndex, agentxSessionIndex, agentxRegIndex
    }\n  ::= { agentxRegistrationTable 1 }\n AgentxRegistrationEntry ::= SEQUENCE
    {\n  agentxRegIndex           Unsigned32,\n  agentxRegContext         OCTET STRING,\n
    \ agentxRegStart           OBJECT IDENTIFIER,\n  agentxRegRangeSubId      Unsigned32,\n
    \ agentxRegUpperBound      Unsigned32,\n  agentxRegPriority        Unsigned32,\n
    \ agentxRegTimeout         INTEGER,\n  agentxRegInstance        TruthValue }\n
    agentxRegIndex OBJECT-TYPE\n  SYNTAX      Unsigned32 (1..4294967295)\n  MAX-ACCESS
    \ not-accessible\n  STATUS      current\n  DESCRIPTION\n     \"agentxRegIndex
    uniquely identifies a registration entry.\n      This value is constant for the
    lifetime of an entry.\n     \"\n  ::= { agentxRegistrationEntry 1 }\n agentxRegContext
    OBJECT-TYPE\n  SYNTAX      OCTET STRING\n  MAX-ACCESS  read-only\n  STATUS      current\n
    \ DESCRIPTION\n     \"The context in which the session supports the objects in
    this\n      region.  A zero-length context indicates the default context.\n     \"\n
    \ ::= { agentxRegistrationEntry 2 }\n agentxRegStart OBJECT-TYPE\n  SYNTAX      OBJECT
    IDENTIFIER\n  MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n     \"The
    starting OBJECT IDENTIFIER of this registration entry.  The\n      session identified
    by agentxSessionIndex implements objects\n      starting at this value (inclusive).
    \ Note that this value could\n      identify an object type, an object instance,
    or a partial object\n      instance.\n     \"\n  ::= { agentxRegistrationEntry
    3 }\n agentxRegRangeSubId OBJECT-TYPE\n  SYNTAX      Unsigned32\n  MAX-ACCESS
    \ read-only\n  STATUS      current\n  DESCRIPTION\n     \"agentxRegRangeSubId
    is used to specify the range.  This is\n      taken from r.region_subid in the
    registration PDU.  If the value\n      of this object is zero, no range is specified.
    \ If it is non-zero,\n      it identifies the `nth' sub-identifier in r.region
    for which\n      this entry's agentxRegUpperBound value is substituted in the\n
    \     OID for purposes of defining the region's upper bound.\n     \"\n  ::= {
    agentxRegistrationEntry 4 }\n agentxRegUpperBound OBJECT-TYPE\n  SYNTAX      Unsigned32\n
    \ MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n    \"agentxRegUpperBound
    represents the upper-bound sub-identifier in\n     a registration.  This is taken
    from the r.upper_bound in the\n     registration PDU.  If agentxRegRangeSubid
    (r.region_subid) is\n     zero, this value is also zero and is not used to define
    an upper\n     bound for this registration.\n    \"\n  ::= { agentxRegistrationEntry
    5 }\n agentxRegPriority OBJECT-TYPE\n  SYNTAX      Unsigned32\n  MAX-ACCESS  read-only\n
    \ STATUS      current\n  DESCRIPTION\n     \"The registration priority.  Lower
    values have higher priority.\n      This value is taken from r.priority in the
    register PDU.\n      Sessions should use the value of 127 for r.priority if a\n
    \     default value is desired.\n     \"\n  ::= { agentxRegistrationEntry 6 }\n
    agentxRegTimeout OBJECT-TYPE\n  SYNTAX      INTEGER (0..255)\n  UNITS       \"seconds\"\n
    \ MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n     \"The timeout
    value, in seconds, for responses to\n      requests associated with this registered
    MIB region.\n      A value of zero(0) indicates the default value (indicated\n
    \     by by agentxSessionTimeout or agentxDefaultTimeout) is to\n      be used.
    \ This value is taken from the r.timeout field of\n      the agentx-Register-PDU.\n
    \    \"\n  ::= { agentxRegistrationEntry 7 }\n agentxRegInstance OBJECT-TYPE\n
    \ SYNTAX      TruthValue\n  MAX-ACCESS  read-only\n  STATUS      current\n  DESCRIPTION\n
    \    \"The value of agentxRegInstance is `true' for\n      registrations for which
    the INSTANCE_REGISTRATION\n      was set, and is `false' for all other registrations.\n
    \    \"\n  ::= { agentxRegistrationEntry 8 }\n -- Conformance Statements for AgentX\n
    agentxConformance     OBJECT IDENTIFIER ::= { agentxMIB 2 }\n agentxMIBGroups
    \      OBJECT IDENTIFIER ::= { agentxConformance 1 }\n agentxMIBCompliances  OBJECT
    IDENTIFIER ::= { agentxConformance 2 }\n -- Compliance Statements for AgentX\n
    agentxMIBCompliance MODULE-COMPLIANCE\n  STATUS      current\n  DESCRIPTION\n
    \    \"The compliance statement for SNMP entities that implement the\n      AgentX
    protocol.  Note that a compliant agent can implement all\n      objects in this
    MIB module as read-only.\n     \"\n  MODULE -- this module\n     MANDATORY-GROUPS
    \ { agentxMIBGroup }\n     OBJECT agentxSessionAdminStatus\n        MIN-ACCESS
    read-only\n        DESCRIPTION\n           \"Write access is not required.\n           \"\n
    \ ::= { agentxMIBCompliances 1 }\n agentxMIBGroup OBJECT-GROUP\n  OBJECTS {\n
    \    agentxDefaultTimeout,\n     agentxMasterAgentXVer,\n     agentxConnTableLastChange,\n
    \    agentxConnOpenTime,\n     agentxConnTransportDomain,\n     agentxConnTransportAddress,\n
    \    agentxSessionTableLastChange,\n     agentxSessionTimeout,\n     agentxSessionObjectID,\n
    \    agentxSessionDescr,\n     agentxSessionAdminStatus,\n     agentxSessionOpenTime,\n
    \    agentxSessionAgentXVer,\n     agentxRegistrationTableLastChange,\n     agentxRegContext,\n
    \    agentxRegStart,\n     agentxRegRangeSubId,\n     agentxRegUpperBound,\n     agentxRegPriority,\n
    \    agentxRegTimeout,\n     agentxRegInstance\n    }\n  STATUS      current\n
    \ DESCRIPTION\n     \"All accessible objects in the AgentX MIB.\n     \"\n  ::=
    { agentxMIBGroups 1 }\n END\n"
  title: 4.  Managed Object Definitions for AgentX
- contents:
  - "5.  Intellectual Property\n   The IETF takes no position regarding the validity
    or scope of any\n   intellectual property or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; neither does it represent that it\n   has made any effort to
    identify any such rights.  Information on the\n   IETF's procedures with respect
    to rights in standards-track and\n   standards-related documentation can be found
    in BCP-11.  Copies of\n   claims of rights made available for publication and
    any assurances of\n   licenses to be made available, or the result of an attempt
    made to\n   obtain a general license or permission for the use of such\n   proprietary
    rights by implementors or users of this specification can\n   be obtained from
    the IETF Secretariat.\n   The IETF invites any interested party to bring to its
    attention any\n   copyrights, patents or patent applications, or other proprietary\n
    \  rights which may cover technology that may be required to practice\n   this
    standard.  Please address the information to the IETF Executive\n   Director.\n"
  title: 5.  Intellectual Property
- contents:
  - "6.  Acknowledgements\n   This document is the result of the efforts of the IETF
    AgentX Working\n   Group (WG).\n   This MIB is an evolution of the Subagent MIB
    by Bert Wijnen\n   (wijnen@vnet.ibm.com) which in turn was derived from the SMUX-MIB
    by\n   Marshall Rose [18].\n   Thanks are in order to the following AgentX WG
    members:\n       Mike Daniele (Compaq Computer Corporation)\n       Dale Francisco
    (Cisco Systems)\n       Bob Natale (ACE*COMM Corporation)\n       Randy Presuhn
    (BMC Software, Inc.)\n       Shawn Routhier (Epilogue)\n       Mike Thatcher (Independent
    Consultant)\n   Special acknowledgement is made to:\n       Maria Greene (Xedia)\n
    \  Special acknowledgement is also made to the following individuals for\n   participating
    in the 1998 AgentX testing summit (bakeoff) held in\n   Sunnyvale, California:\n
    \      Jeff Case (SNMP Research, Inc.)\n       Mike Daniele (Compaq Computer Corporation)\n
    \      Mark Ellison (Ellison Software Consulting, Inc.)\n       Lauren Heintz
    (BMC Software, Inc.)\n       Verne Hyde (Independent Consultant)\n       Bob Natale
    (ACE*COMM Corporation)\n       Shawn Routhier (Epilogue)\n       Mike Thatcher
    (Independent Consultant)\n       Bert Wijnen (IBM T. J. Watson Research Center)\n"
  title: 6.  Acknowledgements
- contents:
  - "7.  Security Considerations\n   There is a single management object defined in
    this MIB that has a\n   MAX-ACCESS clause of read-write.  This object may be considered\n
    \  sensitive or vulnerable in some network environments.  The support\n   for
    SET operations in a non-secure environment without proper\n   protection can have
    a negative effect on network operations.\n   There is a single managed object
    in this MIB that may contain\n   sensitive information. This object is agentxSessionAdminStatus.\n
    \  Setting agentxSessionAdminStatus to an inappropriate value can\n   effectively
    prevent access to management information, or provide\n   access to inappropriate
    information.\n   It is thus important to control even GET access to these objects
    and\n   possibly to even encrypt the values of these objects when sending\n   them
    over the network via SNMP.  Not all versions of SNMP provide\n   features for
    such a secure environment.\n   SNMPv1 by itself is not a secure environment.  Even
    if the network\n   itself is secure (for example by using IPSec), even then, there
    is no\n   control as to who on the secure network is allowed to access and\n   GET/SET
    (read/change/create/delete) the objects in this MIB.\n   It is recommended that
    the implementers consider the security\n   features as provided by the SNMPv3
    framework.  Specifically, the use\n   of the User-based Security Model RFC 2574
    [12] and the View-based\n   Access Control Model RFC 2575 [15] is recommended.\n
    \  It is then a customer/user responsibility to ensure that the SNMP\n   entity
    giving access to an instance of this MIB, is properly\n   configured to give access
    to the objects only to those principals\n   (users) that have legitimate rights
    to indeed GET or SET\n   (change/delete) them.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  References\n   [1]  Harrington, D., Presuhn, R. and B. Wijnen, \"An Architecture
    for\n        Describing SNMP Management Frameworks\", RFC 2571, April 1999.\n
    \  [2]  Rose, M. and K. McCloghrie, \"Structure and Identification of\n        Management
    Information for TCP/IP-based Internets\", STD 16, RFC\n        1155, May 1990.\n
    \  [3]  Rose, M. and K. McCloghrie, \"Concise MIB Definitions\", STD 16,\n        RFC
    1212, March 1991.\n   [4]  Rose, M., \"A Convention for Defining Traps for use
    with the\n        SNMP\", RFC 1215, March 1991.\n   [5]  McCloghrie, K., Perkins,
    D., Schoenwaelder, J., Case, J., Rose,\n        M. and S. Waldbusser, \"Structure
    of Management Information\n        Version 2 (SMIv2)\", STD 58, RFC 2578, April
    1999.\n   [6]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,  J.,\n        Rose,
    M. and S. Waldbusser, \"Textual Conventions for SMIv2\", STD\n        58, RFC
    2579, April 1999.\n   [7]  McCloghrie, K., Perkins, D., Schoenwaelder, J., Case,
    J., Rose,\n        M. and S. Waldbusser, \"Conformance Statements for SMIv2\",
    STD\n        58, RFC 2580, April 1999.\n   [8]  Case, J., Fedor, M., Schoffstall,
    M. and J. Davin, \"Simple\n        Network Management Protocol\", STD 15, RFC
    1157, May 1990.\n   [9]  Case, J., McCloghrie, K., Rose, M. and S. Waldbusser,\n
    \       \"Introduction to Community-based SNMPv2\", RFC 1901, January\n        1996.\n
    \  [10] Case, J., McCloghrie, K., Rose, M.  and S.  Waldbusser,\n        \"Transport
    Mappings for Version 2 of the Simple Network\n        Management Protocol (SNMPv2)\",
    RFC 1906, January 1996.\n   [11] Case, J., Harrington D., Presuhn R. and B. Wijnen,
    \"Message\n        Processing and Dispatching for the Simple Network Management\n
    \       Protocol (SNMP)\", RFC 2572, April 1999.\n   [12] Blumenthal, U. and B.
    Wijnen, \"User-based Security Model (USM)\n        for version 3 of the Simple
    Network Management Protocol\n        (SNMPv3)\", RFC 2574, April 1999.\n   [13]
    Case, J., McCloghrie, K., Rose, M. and S. Waldbusser, \"Protocol\n        Operations
    for Version 2 of the Simple Network Management\n        Protocol (SNMPv2)\", RFC
    1905, January 1996.\n   [14] Levi, D., Meyer, P. and B. Stewart, \"SNMP Applications\",
    RFC\n        2573, April 1999.\n   [15] Wijnen, B., Presuhn, R. and K. McCloghrie,
    \"View-based Access\n        Control Model (VACM) for the Simple Network Management
    Protocol\n        (SNMP)\", RFC 2575, April 1999.\n   [16] Case, J., Mundy, R.,
    Partain, D. and B. Stewart, \"Introduction\n        to Version 3 of the Internet-standard
    Network Management\n        Framework\", RFC 2570, April 1999.\n   [17] Daniele,
    M., Wijnen, B., Ellison, M. and D. Francisco, \"Agent\n        Extensibility (AgentX)
    Protocol, Version 1\", RFC 2741, January\n        2000.\n   [18] Rose, M., \"SNMP
    MUX Protocol and MIB\", RFC 1227, May 1991.\n   [19] Case, J., McCloghrie, K.,
    Rose, M. and S. Waldbusser,\n        \"Management Information Base for Version
    2 of the Simple Network\n        Management Protocol (SNMPv2)\", RFC 1907, January
    1996.\n"
  title: 8.  References
- contents:
  - "9.  Authors' and Editor's Addresses\n   Lauren Heintz\n   Cisco Systems\n   1450
    North McDowell Blvd.\n   Petaluma, CA 94954-6515\n   USA\n   Phone:      +1 707-793-1714\n
    \  EMail:      lheintz@cisco.com\n   Smitha Gudur\n   Independent Consultant\n
    \  EMail:      sgudur@hotmail.com\n   Mark Ellison (WG editor)\n   Ellison Software
    Consulting, Inc.\n   38 Salem Road\n   Atkinso, NH 03811\n   USA\n   Phone:       +1
    603-362-9270\n   Email:       ellison@world.std.com\n"
  title: 9.  Authors' and Editor's Addresses
- contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (2000).
    \ All Rights Reserved.\n   This document and translations of it may be copied
    and furnished to\n   others, and derivative works that comment on or otherwise
    explain it\n   or assist in its implementation may be prepared, copied, published\n
    \  and distributed, in whole or in part, without restriction of any\n   kind,
    provided that the above copyright notice and this paragraph are\n   included on
    all such copies and derivative works.  However, this\n   document itself may not
    be modified in any way, such as by removing\n   the copyright notice or references
    to the Internet Society or other\n   Internet organizations, except as needed
    for the purpose of\n   developing Internet standards in which case the procedures
    for\n   copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: 10.  Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
