- title: __initial_text__
  contents:
  - '            Point-to-Point Protocol Extensions for Bridging

    '
- title: 1.  Status of this Memo
  contents:
  - "1.  Status of this Memo\n   This document defines an extension of the Internet\
    \ Point-to-Point\n   Protocol (PPP) described in RFC 1171, targeting the use of\
    \ Point-to-\n   Point lines for Remote Bridging.  It is a product of the Point-to-\n\
    \   Point Protocol Extensions Working Group of the Internet Engineering\n   Task\
    \ Force (IETF).\n   This RFC specifies an IAB standards track protocol for the\
    \ Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: 2.  Historical Perspective
  contents:
  - "2.  Historical Perspective\n   Two basic algorithms are ambient in the industry\
    \ for Bridging of\n   Local Area Networks.  The more common algorithm is called\n\
    \   \"Transparent Bridging\" and has been standardized for Extended LAN\n   configurations\
    \ by IEEE 802.1.  IEEE 802.5 has proposed an alternative\n   approach, called\
    \ \"Source Routing\", and is in the process of\n   standardizing that approach\
    \ for IEEE 802.5 extended networks.\n   Although there is a subcommittee of IEEE\
    \ 802.1 addressing remote\n   bridging, neither standard directly defines Remote\
    \ Bridging per se,\n   as that would technically be beyond the IEEE 802 committee's\
    \ charter.\n   Both allow for it, however, modeling the line as an unspecified\n\
    \   interface between half-bridges.\n   This document assumes that the devices\
    \ at either end of a serial link\n      - have agreed to utilize the RFC 1171\
    \ line discipline in some form.\n      - may have agreed, by some other means,\
    \ to exchange other\n        protocols on the line interspersed with each other\
    \ and with any\n        bridged PDUs.\n      - may be willing to use the link\
    \ as a vehicle for Remote Bridging.\n      - may have multiple point-to-point\
    \ links that are configured in\n        parallel to simulate a single line of\
    \ higher speed or\n        reliability, but message sequence issues are solved\
    \ by the\n        transmitting end.\n"
- title: 3.  General Considerations
  contents:
  - '3.  General Considerations

    '
- title: 3.1.  Link Quality Monitoring
  contents:
  - "3.1.  Link Quality Monitoring\n   It is strongly recommended that Point-to-Point\
    \ Bridge Protocol\n   implementations utilize Magic Number Loopback Detection\
    \ and Link-\n   Quality-Monitoring.  This is because the 802.1 Spanning Tree\n\
    \   protocol, which is integral to both Transparent Bridging and Source\n   Routing\
    \ (as standardized), is unidirectional during normal operation,\n   with HELLO\
    \ PDUs emanating from the Root System in the general\n   direction of the leaves,\
    \ without any reverse traffic except in\n   response to network events.\n"
- title: 3.2.  Message Sequence
  contents:
  - "3.2.  Message Sequence\n   The multiple link case requires consideration of message\n\
    \   sequentiality.  The transmitting station must determine either that\n   the\
    \ protocol being bridged requires transmissions to arrive in the\n   order of\
    \ their original transmission, and enqueue all transmissions\n   on a given conversation\
    \ onto the same link to force order\n   preservation, or that the protocol does\
    \ NOT require transmissions to\n   arrive in the order of their original transmission,\
    \ and use that\n   knowledge to optimize the utilization of the several links,\
    \ enqueuing\n   traffic to links to minimize delay.\n   In the absence of such\
    \ a determination, the transmitting station must\n   act as though all protocols\
    \ require order preservation; many\n   protocols designed primarily for use on\
    \ a single LAN in fact do.  A\n   protocol could be described to maintain message\
    \ sequentiality across\n   multiple links, either by sequence numbering or by\
    \ fragmentation and\n   re-assembly, but this is neither elegant nor absolutely\
    \ necessary.\n"
- title: 3.3.  Maximum Receive Unit Considerations
  contents:
  - "3.3.  Maximum Receive Unit Considerations\n   Please note that the negotiated\
    \ MRU must be large enough to support\n   the MAC Types that are negotiated for\
    \ support, there being no\n   fragmentation and re-assembly.  Even Ethernet frames\
    \ are larger than\n   the default MRU of 1500 octets.\n"
- title: 3.4.  Separation of Spanning Tree Domains
  contents:
  - "3.4.  Separation of Spanning Tree Domains\n   It is conceivable that a network\
    \ manager might wish to inhibit the\n   exchange of BPDUs on a link in order to\
    \ logically divide two regions\n   into separate Spanning Trees with different\
    \ Roots (and potentially\n   different Spanning Tree implementations or algorithms).\
    \  In order to\n   do that, he must configure both ends to not exchange BPDUs\
    \ on a link.\n   For the sake of robustness, a bridge which is so configured must\n\
    \   silently discard the BPDU of its neighbor, should it receive one.\n"
- title: 4.  IEEE 802.1 Transparent Bridging
  contents:
  - '4.  IEEE 802.1 Transparent Bridging

    '
- title: 4.1.  Overview of IEEE 802.1 Transparent Bridging
  contents:
  - "4.1.  Overview of IEEE 802.1 Transparent Bridging\n   As a favor to the uninitiated,\
    \ let us first describe Transparent\n   Bridging.  Essentially, the bridges in\
    \ a network operate as isolated\n   entities, largely unaware of each others'\
    \ presence.  A Transparent\n   Bridge maintains a Forwarding Database consisting\
    \ of\n            {address, interface}\n   records by saving the Source Address\
    \ of each LAN transmission that it\n   receives along with the interface identifier\
    \ for the interface it was\n   received on.  It goes on to check whether the Destination\
    \ Address is\n   in the database, and if so, either discards the message (if the\n\
    \   destination and source are located at the same interface) or forwards\n  \
    \ the message to the indicated interface.  A message whose Destination\n   Address\
    \ is not found in the table is forwarded to all interfaces\n   except the one\
    \ it was received on; this describes Broadcast/Multicast\n   behavior as well.\n\
    \   The obvious fly in the ointment is that redundant paths in the\n   network\
    \ cause indeterminate (nay, all too determinate) forwarding\n   behavior to occur.\
    \  To prevent this, a protocol called the IEEE\n   802.1(d) Spanning Tree Protocol\
    \ is executed between the bridges to\n   detect and logically remove redundant\
    \ paths from the network.\n   One system is elected as the \"Root\", which periodically\
    \ emits a\n   message called a Bridge Hello Protocol Data Unit, or BPDU, heard\
    \ by\n   all of its neighboring bridges.  Each of these modifies and passes\n\
    \   the BPDU on to its neighbors, and they to theirs, until it arrives at\n  \
    \ the leaf LAN segments in the network (where it dies, having no\n   further neighbors\
    \ to pass it along) or until the message is stopped\n   by a bridge which has\
    \ a superior path to the \"Root\".  In this latter\n   case, the interface the\
    \ BPDU was received on is ignored (i.e., it is\n   placed in a Hot Standby status,\
    \ no traffic is emitted onto it except\n   the BPDU, and all traffic received\
    \ from it is discarded) until a\n   topology change forces a recalculation of\
    \ the network.\n"
- title: 4.2.  IEEE 802.1 Remote Bridging Activity
  contents:
  - "4.2.  IEEE 802.1 Remote Bridging Activity\n   There exist two basic sorts of\
    \ bridges - ones that interconnect LANs\n   directly, called Local Bridges, and\
    \ ones that interconnect LANs via\n   an intermediate medium such as a leased\
    \ line, called Remote Bridges.\n   The Point-to-Point Protocol might be used by\
    \ a Remote Bridge.\n   There is more than one proposal within the IEEE 802.1 Interworking\n\
    \   Committee for modeling the Remote Bridge.  In one model, the\n   interconnecting\
    \ serial link(s) are treated in the same way that a LAN\n   is, having a standard\
    \ IEEE 802.1 Link State; in another, the serial\n   links operate in a mode quite\
    \ different from the LANs that they\n   interconnect.  For the sake of simplicity\
    \ of specification, the first\n   model is adopted, although some of the good\
    \ ideas from proponents of\n   the second model are included or allowed for.\n\
    \   Therefore, given that transparent bridging is configured on a line or\n  \
    \ set of lines, the specifics of the link state with respect to the\n   bridge\
    \ is defined by IEEE 802.1(d).  The Bridge Protocol Data Unit,\n   or BPDU, is\
    \ defined there, as well as the algorithms for its use.\n   It is assumed that,\
    \ if a Point-to-Point Link neighbor receives IEEE\n   802.1 BPDUs without rejecting\
    \ them with the RFC 1171 Protocol-Reject\n   LCP PDU, Transparent Bridging is\
    \ permitted on the link.\n"
- title: 4.3.  IEEE 802.5 Source Routing
  contents:
  - "4.3.  IEEE 802.5 Source Routing\n   The IEEE 802.5 Committee has defined a different\
    \ approach to bridging\n   for use on the Token Ring, called Source Routing. \
    \ In this approach,\n   the originating system has the responsibility of indicating\
    \ what path\n   that the message should follow.  It does this, if the message\
    \ is\n   directed off the local ring, by including a variable length MAC\n   header\
    \ extension called the Routing Information Field, or RIF.  The\n   RIF consists\
    \ of one 16 bit word of flags and parameters followed by\n   zero or more ring-and-bridge\
    \ identifiers.  Each bridge en route\n   determines from this \"source route list\"\
    \ whether it should receive\n   the message and how to forward it.\n   The algorithm\
    \ for Source Routing requires the bridge to be able to\n   identify any interface\
    \ by its ring-and-bridge identifier, and to be\n   able to identify any of its\
    \ OTHER interfaces likewise.  When a packet\n   is received which has the Routing\
    \ Information Field (RIF) present, a\n   boolean in the RIF is inspected to determine\
    \ whether the ring-and-\n   bridge identifiers are to be inspected in \"forward\"\
    \ or \"reverse\"\n   sense.  In a \"forward\" search, the bridge looks for the\
    \ ring-and-\n   bridge identifier of the interface the packet was received on,\
    \ and\n   forwards the packet toward the ring identified in the ring-and-bridge\n\
    \   identifier that follows it.  In a \"reverse\" search, the bridge looks\n \
    \  for the ring-and-bridge identifier of the OTHER INTERFACE, and\n   delivers\
    \ the packet to the indicated interface if such is found.\n   The algorithms for\
    \ handling multicasts (\"Functional Addresses\" and\n   \"Group Addresses\") have\
    \ been the subject of much discussion in 802.5,\n   and are likely to be the most\
    \ troublesome for bridge implementations.\n   Fortunately, they are beyond the\
    \ scope of this document.\n"
- title: 4.4.  IEEE 802.5 Remote Bridging Activity
  contents:
  - "4.4.  IEEE 802.5 Remote Bridging Activity\n   There is no Remote Bridge proposal\
    \ in IEEE 802.5 at this time,\n   although IBM ships a remote Source Routing Bridge.\
    \  Simplicity would\n   dictate that we choose the same model for IEEE 802.5 Source\
    \ Routing\n   that was selected for IEEE 802.1, but necessity requires a ring\n\
    \   number for the line in some cases.  We allow for both models.\n   Given that\
    \ source routing is configured on a line or set of lines,\n   the specifics of\
    \ the link state with respect to the bridge is defined\n   by the IEEE 802.5 Addendum\
    \ on Source Routing.  The requisite PDUs for\n   calculating the spanning tree\
    \ (used for assuring that each ring will\n   receive at most one copy of a multicast)\
    \ are defined there, as well\n   as the algorithms for their use.  MAC PDUs (Beacon,\
    \ Ring Management,\n   etc) are specific to the MAU technology and are not exchanged\
    \ on the\n   line.\n"
- title: 4.5.  Source Routing to Transparent Bridge Translation
  contents:
  - "4.5.  Source Routing to Transparent Bridge Translation\n   IEEE 802 also has\
    \ a subcommittee looking at the interoperation of\n   Transparent Bridging and\
    \ Source Routing.  For the purposes of this\n   standard, such a device is both\
    \ a transparent and a source routing\n   bridge, and will act on the line in both\
    \ ways, just as it does on the\n   LAN.\n"
- title: 5.  Traffic Services
  contents:
  - "5.  Traffic Services\n   Several services are provided for the benefit of different\
    \ system\n   types and user configurations.  These include LAN Frame Checksum\n\
    \   Preservation, LAN Frame Checksum Generation, Tinygram Compression,\n   and\
    \ the identification of closed sets of LANs.\n"
- title: 5.1.  LAN Frame Checksum Preservation
  contents:
  - "5.1.  LAN Frame Checksum Preservation\n   IEEE 802.1 stipulates that the Extended\
    \ LAN must enjoy the same\n   probability of undetected error that an individual\
    \ LAN enjoys.\n   Although there has been considerable debate concerning the algorithm,\n\
    \   no other algorithm has been proposed than having the LAN Frame\n   Checksum\
    \ received by the ultimate receiver be the same value\n   calculated by the original\
    \ transmitter.  Achieving this requires, of\n   course, that the line protocols\
    \ preserve the LAN Frame Checksum from\n   end to end.  The protocol is optimized\
    \ towards this approach.\n"
- title: 5.2.  Traffic having no LAN Frame Checksum
  contents:
  - "5.2.  Traffic having no LAN Frame Checksum\n   The fact that the protocol is\
    \ optimized towards LAN Frame Checksum\n   preservation raises twin questions:\
    \ \"What is the approach to be used\n   by systems which, for whatever reason,\
    \ cannot easily support Frame\n   Checksum preservation?\" and \"What is the approach\
    \ to be used when the\n   system originates a message, which therefore has no\
    \ Frame Checksum\n   precalculated?\".\n   Surely, one approach would be to require\
    \ stations to calculate the\n   Frame Checksum in software if hardware support\
    \ were unavailable; this\n   would meet with profound dismay, and would raise\
    \ serious questions of\n   interpretation in a Bridge/Router.\n   However, stations\
    \ which implement LAN Frame Checksum preservation\n   must already solve this\
    \ problem, as they do originate traffic.\n   Therefore, the solution adopted is\
    \ that messages which have no Frame\n   Checksum are tagged and carried across\
    \ the line.\n   When a system which does not implement LAN Frame Checksum\n  \
    \ preservation receives a frame having an embedded FCS, it converts it\n   for\
    \ its own use by removing the trailing four octets.  When any\n   system forwards\
    \ a frame which contains no embedded FCS to a LAN, it\n   forwards it in a way\
    \ which causes the FCS to be calculated.\n"
- title: 5.3.  Tinygram Compression
  contents:
  - "5.3.  Tinygram Compression\n   An issue in remote Ethernet bridging is that the\
    \ protocols that are\n   most attractive to bridge are prone to problems on low\
    \ speed (64 KBPS\n   and below) lines.  This can be partially alleviated by observing\
    \ that\n   the vendors defining these protocols often fill the PDU with octets\n\
    \   of ZERO.  Thus, an Ethernet or IEEE 802.3 PDU received from a line\n   that\
    \ is (1) smaller than the minimum PDU size, and (2) has a LAN\n   Frame Checksum\
    \ present, must be padded by inserting zeroes between\n   the last four octets\
    \ and the rest of the PDU before transmitting it\n   on a LAN.  These protocols\
    \ are frequently used for interactive\n   sessions, and therefore are frequently\
    \ this small.\n   To prevent ambiguity, PDUs requiring padding are explicitly\
    \ tagged.\n   Compression is at the option of the transmitting station, and is\n\
    \   probably performed only on low speed lines, perhaps under\n   configuration\
    \ control.\n   The pseudo-code in Figure 1 describes the algorithms.\n"
- title: 5.4.  LAN Identification
  contents:
  - "5.4.  LAN Identification\n   In some applications, it is useful to tag traffic\
    \ by the user\n   community it is a part of, and guarantee that it will be only\
    \ emitted\n   onto a LAN which is of the same community.  The user community is\n\
    \   defined by a LAN ID.  Systems which choose to not implement this\n   feature\
    \ must assume that any frame received having a LAN ID is from a\n   different\
    \ community than theirs, and discard it.\n"
- title: 'Figure 1: Tinygram Compression Pseudo-Code'
  contents:
  - 'Figure 1: Tinygram Compression Pseudo-Code

    '
- title: 'PPP Transmitter:'
  contents:
  - 'PPP Transmitter:

    '
- title: if (ZeroPadCompressionEnabled &&
  contents:
  - "if (ZeroPadCompressionEnabled &&\n    BridgedProtocolHeaderFormat == IEEE8023\
    \ &&\n    PacketLength == Minimum8023PacketLength) {\n /*\n  * Remove any continuous\
    \ run of zero octets preceding,\n  * but not including, the LAN FCS, but not extending\n\
    \  * into the MAC header.\n  */\n    Set (ZeroCompressionFlag);            /*\
    \ Signal receiver */\n    if (is_Set (LAN_FCS_Present)) {\n        FCS = TrailingOctets\
    \ (PDU, 4);    /* Store FCS */\n        RemoveTrailingOctets (PDU, 4);    /* Remove\
    \ FCS */\n        while (PacketLength > 14 &&       /* Stop at MAC header */\n\
    \               TrailingOctet (PDU) == 0)  /*  or last non-zero octet */\n   \
    \         RemoveTrailingOctets (PDU, 1);/* Remove zero octet */\n        Appendbuf\
    \ (PDU, 4, FCS);          /* Restore FCS */\n    }\n    else {\n        while\
    \ (PacketLength > 14 &&       /* Stop at MAC header */\n               TrailingOctet\
    \ (PDU) == 0)  /*  or last zero octet */\n            RemoveTrailingOctets (PDU,\
    \ 1);/* Remove zero octet */\n    }\n"
- title: '}'
  contents:
  - '}

    '
- title: 'PPP Receiver:'
  contents:
  - 'PPP Receiver:

    '
- title: if (ZeroCompressionFlag) {                /* Flag set in header? */
  contents:
  - "if (ZeroCompressionFlag) {                /* Flag set in header? */\n /* Restoring\
    \ packet to minimum 802.3 length */\n    Clear (ZeroCompressionFlag);\n    if\
    \ (is_Set (LAN_FCS_Present)) {\n        FCS = TrailingOctets (PDU, 4);   /* Store\
    \ FCS */\n        RemoveTrailingOctets (PDU, 4);   /* Remove FCS */\n        Appendbuf\
    \ (PDU, 60 - PacketLength, zeroes);/* Add zeroes */\n        Appendbuf (PDU, 4,\
    \ FCS);         /* Restore FCS */\n    }\n    else {\n        Appendbuf (PDU,\
    \ 60 - PacketLength, zeroes);/* Add zeroes */\n    }\n"
- title: '}'
  contents:
  - '}

    '
- title: 6.  Protocol Data Unit Formats
  contents:
  - '6.  Protocol Data Unit Formats

    '
- title: 6.1.  Common LAN Traffic
  contents:
  - "6.1.  Common LAN Traffic\n   Figure 2: 802.3 Frame format\n    0            \
    \       1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1\
    \ 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+\n   |   HDLC FLAG\
    \   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0xFF     |      0x03     |      0x00     |      0x31     +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |F|I|Z|0| Count |    MAC Type   |  LAN ID high word (optional)  +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   LAN ID low word (optional)  |      Destination MAC Address  +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Destination MAC Address                 +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Source MAC Address                      +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source MAC Address        |      Length/Type              +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               LLC data                                        +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              ...                              +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                   LAN FCS (optional)                          +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                potential line protocol pad                    +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           HDLC CRC            |   HDLC FLAG   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   For Bridging LAN traffic, the format of the frame on the line is as\n   shown\
    \ in Figures 2 or 3.  This conforms to RFC 1171 section 3.1\n   \"Frame Format\"\
    .  It also allows for RFC 1172 [2] negotiation of\n   Protocol Field Compression\
    \ and Address and Control Field Compression.\n   It is recommended that devices\
    \ which use controllers that require\n   even memory addresses negotiate to NOT\
    \ USE Protocol Field Compression\n   on other than low speed links.\n   Figure\
    \ 3: 802.4/802.5/FDDI Frame format\n    0                   1                \
    \   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+\n   |   HDLC FLAG   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0xFF     |      0x03     |      0x00     |      0x31     +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |F|I|Z|0| Count |    MAC Type   |  LAN ID high word (optional)  +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   LAN ID low word (optional)  |   Pad Byte    | Frame Control +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Destination MAC Address                 +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Destination MAC Address   |  Source MAC Address           +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Source MAC Address                      +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |               LLC data                                        +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              ...                              +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       FCS (optional)                          +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              optional Data Link Layer padding                 +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           HDLC CRC            |   HDLC FLAG   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 'The fields of this message are as follows:'
  contents:
  - 'The fields of this message are as follows:

    '
- title: 'Address Field and Control Field:'
  contents:
  - "Address Field and Control Field:\n     As defined by RFC 1171\n"
- title: 'Protocol Field:'
  contents:
  - "Protocol Field:\n     0x0031\n"
- title: 'Flags:'
  contents:
  - "Flags:\n     bits 0-3: length of the line protocol pad field.\n     bit 4:  Reserved,\
    \ Set to Zero\n     bit 5:  Set if IEEE 802.3 Pad must be zero filled to minimum\
    \ size\n     bit 6:  Set if the LAN ID Field is present\n     bit 7:  Set if the\
    \ LAN FCS Field is present\n     The \"number of trailing \"pad\" octets is a\
    \ deference to the fact\n     that any point-to-point frame may have padding at\
    \ the end.  This\n     number tells the receiving system how many octets to strip\
    \ off the\n     end.\n"
- title: 'MAC Type:'
  contents:
  - "MAC Type:\n     0: Reserved\n     1: IEEE 802.3/Ethernet\n     2: IEEE 802.4\n\
    \     3: IEEE 802.5\n     4: FDDI\n     other:  Assigned by the Internet Assigned\
    \ Numbers Authority\n"
- title: 'LAN ID:'
  contents:
  - "LAN ID:\n     This optional 32 bit field identifies the Community of LANs which\n\
    \     may be interested to receive this frame, as described in section\n     5.4.\
    \  If the LAN ID flag is not set, then this field is not\n     present, and the\
    \ PDU is four octets shorter.\n"
- title: 'Frame Control:'
  contents:
  - "Frame Control:\n     On 802.4, 802.5, and FDDI LANs, there are a few octets preceding\n\
    \     the Destination MAC Address, one of which is protected by the FCS.\n   \
    \  Since the MAC Type field defines the bit ordering, these are sent\n     in\
    \ MAC order.  A pad octet is present to avoid odd machine address\n     boundary\
    \ problems.\n"
- title: 'Destination MAC Address:'
  contents:
  - "Destination MAC Address:\n     As defined by the IEEE.  Since the MAC Type field\
    \ defines the bit\n     ordering, this is sent in MAC order.\n"
- title: 'Source MAC Address:'
  contents:
  - "Source MAC Address:\n     As defined by the IEEE.  Since the MAC Type field defines\
    \ the bit\n     ordering, this is sent in MAC order.\n"
- title: 'LLC data:'
  contents:
  - "LLC data:\n     This is the remainder of the MAC frame.  This is that portion\
    \ of\n     the frame which is (or would be were it present) protected by the\n\
    \     LAN FCS; for example, the 802.5 Access Control field, and Status\n     Trailer\
    \ are not meaningful to transmit to another ring, and are\n     omitted.\n"
- title: 'LAN Frame Checksum:'
  contents:
  - "LAN Frame Checksum:\n     If present, this is the LAN FCS which was calculated\
    \ by (or which\n     appears to have been calculated by) the originating station.\
    \  If\n     the FCS Present flag is not set, then this field is not present,\n\
    \     and the PDU is four octets shorter.\n"
- title: Optional Data Link Layer Padding
  contents:
  - "Optional Data Link Layer Padding\n     RFC 1171 specifies that an arbitrary pad\
    \ can be added after the\n     data intended for transmission.  The \"Count\"\
    \ portion of the flag\n     field contains the length of this pad, which may not\
    \ exceed 15\n     octets.\n"
- title: CRC-CCITT
  contents:
  - "CRC-CCITT\n     Mentioned primarily for clarity.  The CRC used on the PPP link\
    \ is\n     separate from and unrelated to the LAN FCS.\n"
- title: 6.2.  IEEE 802.1 Bridge
  contents:
  - "6.2.  IEEE 802.1 Bridge\n   This is the BPDU as defined by IEEE 802.1(d), without\
    \ any MAC or\n   802.2 LLC header (these being functionally equivalent to the\
    \ Address,\n   Control, and Protocol Fields).  The LAN Pad and Frame Checksum\
    \ fields\n   are likewise superfluous and absent. The Address and Control Fields\n\
    \   are optional, subject to the Address and Control Field Compression\n   negotiation.\n\
    \   Figure 4: Bridge \"Hello\" PDU\n    0                   1                \
    \   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+\n   |   HDLC FLAG   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      0xFF     |      0x03     |      0x02     |      0x01     +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              BPDU data                                        +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              ...                              +\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           HDLC CRC            |   HDLC FLAG   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   The fields of this message are as follows:\n   Address Field and Control Field:\n\
    \        As defined by RFC 1171\n   Protocol Field:\n        0x0201\n   MAC Frame:\n\
    \        802.1(d) BPDU\n"
- title: 6.3.  IEEE 802 Network Control Protocol
  contents:
  - "6.3.  IEEE 802 Network Control Protocol\n   The Bridge Network Control Protocol\
    \ is responsible for configuring,\n   enabling, and disabling the bridges on both\
    \ ends of the point-to-\n   point link.  As with the Link Control Protocol, this\
    \ is accomplished\n   through an exchange of packets.  BNCP packets may not be\
    \ exchanged\n   until LCP has reached the network-layer Protocol Configuration\n\
    \   Negotiation phase.  Likewise, LAN traffic may not be exchanged until\n   BNCP\
    \ has first opened the connection.\n   The Bridge Network Control Protocol is\
    \ exactly the same as the Point-\n   to-Point Link Control Protocol with the following\
    \ exceptions:\n   Data Link Layer Protocol Field\n        Exactly one Bridge Network\
    \ Control Protocol packet is encapsulated\n        in the Information field of\
    \ PPP Data Link Layer frames where the\n        Protocol field indicates type\
    \ hex 8031 (BNCP).\n   Code field\n        Only Codes 1 through 7 (Configure-Request,\
    \ Configure-Ack,\n        Configure-Nak, Configure-Reject, Terminate-Request,\n\
    \        Terminate-Ack and Code-Reject) are used.  Other Codes should\n      \
    \  be treated as unrecognized and should result in Code-Rejects.\n   Timeouts\n\
    \        BNCP packets may not be exchanged until the Link Control\n        Protocol\
    \ has reached the network-layer Protocol Configuration\n        Negotiation phase.\
    \  An implementation should be prepared to wait\n        for Link Quality testing\
    \ to finish before timing out waiting\n        for Configure-Ack or other response.\n\
    \   Configuration Option Types\n        The Bridge Network Control Protocol has\
    \ a separate set of\n        Configuration Options.  These permit the negotiation\
    \ of the\n        following items:\n             - MAC Types supported\n     \
    \        - Tinygram Compression support\n             - LAN Identification support\n\
    \             - Ring and Bridge Identification\n"
- title: 6.4.  IEEE 802.5 Remote Ring Identification Option
  contents:
  - "6.4.  IEEE 802.5 Remote Ring Identification Option\n   Since the Remote Bridges\
    \ are modeled as normal Bridges with a strange\n   internal interface, each bridge\
    \ needs to know the ring/bridge numbers\n   of the bridges it is adjacent to.\
    \  This is the subject of a Link\n   Negotiation.  The exchange of ring-and-bridge\
    \ identifiers is done\n   using this option on the Network Control Protocol.\n\
    \   The Token Ring Ring-and-Bridge Identifier, and its use, is specified\n   by\
    \ the IEEE 802.5 Addendum on Source Routing.  It identifies the ring\n   that\
    \ the interface is attached to by its configured ring number, and\n   itself by\
    \ bridge number on the ring.\n   Figure 5: Remote Ring Identification Option\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     type=1    |length = 4     | ring number           |bridge#|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type 1 = IEEE 802.5 Source Routing Ring/Bridge Identifier\n   Length\n   \
    \     4 Octets\n   Ring Number\n        A 12 bit number identifying the token\
    \ ring, as defined in the\n        IEEE 802.5 Source Routing Specification.\n\
    \   Bridge Number\n        A 4 bit number identifying the bridge on the token\
    \ ring, as\n        defined in the IEEE 802.5 Source Routing Specification.\n"
- title: 6.5.  IEEE 802.5 Line Identification Option
  contents:
  - "6.5.  IEEE 802.5 Line Identification Option\n   This option permits the systems\
    \ to treat the line as a visible \"Token\n   Ring\", in accordance with the Source\
    \ Routing algorithm.  The bridges\n   exchange ring-and-bridge identifiers using\
    \ this option on the Network\n   Control Protocol.  The configured ring numbers\
    \ must be identical in\n   normal operation.\n   The Token Ring Ring-and-Bridge\
    \ Identifier, and its use, is specified\n   by the IEEE 802.5 Addendum on Source\
    \ Routing.  It identifies the ring\n   that the interface is attached to by its\
    \ configured ring number, and\n   itself by bridge number on the ring.\n   Figure\
    \ 6: Line Identification Option\n    0                   1                   2\
    \                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     type=2    |length = 4     | ring number           |bridge#|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type 2 = IEEE 802.5 Line \"Ring/Bridge\" Identifier\n   Length\n        4\
    \ Octets\n   Ring Number\n        A 12 bit number identifying the line, as defined\
    \ in the\n        IEEE 802.5 Source Routing Specification.\n   Bridge Number\n\
    \        A 4 bit number identifying the bridge on the token ring, as\n       \
    \ defined in the IEEE 802.5 Source Routing Specification.\n"
- title: 6.6.  MAC Type Support Selection
  contents:
  - "6.6.  MAC Type Support Selection\n   The MAC Type Selection Option is provided\
    \ to permit nodes to\n   advertise what sort of traffic they are prepared to convey.\
    \  A device\n   negotiating a 1600 octet MRU, for example, may not be willing\
    \ to\n   support 802.5 (although it might, with certain changes necessary in\n\
    \   the RIFs it passes, and given that the hosts it supports implement\n   the\
    \ 802.5 Maximum Frame Size correctly), and is definitely not\n   prepared to support\
    \ 802.4 or FDDI.\n   A system which does not announce the MAC Types that it supports\
    \ may\n   be assumed to support all MAC Types; it will discard those that it\n\
    \   does not understand.  A system which chooses to announce MAC Types is\n  \
    \ advising its neighbor that all unspecified MAC Types will be\n   discarded.\
    \  Announcement of multiple MAC Types is accomplished by\n   placing multiple\
    \ options in the Configure Request.\n   The Rejection of a MAC Type Announcement\
    \ (in a Configure-Reject) is\n   essentially a statement that traffic appropriate\
    \ to the MAC Type, if\n   encountered, will be forwarded on the link even though\
    \ the receiving\n   system has indicated it will discard it.\n   Figure 7: MAC\
    \ Type Selection Option\n    0                   1                   2\n    0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     type=3    |length = 3     | MAC Type      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type 3 = MAC Type Selector\n   Length\n        3 Octets\n   MAC Type Selector\n\
    \        One of the values of the PDU's MAC Type Field that this system is\n \
    \       prepared to receive and service.\n"
- title: 6.7.  Tinygram Compression
  contents:
  - "6.7.  Tinygram Compression\n   Not all systems are prepared to make modifications\
    \ to messages in\n   transit; on high speed lines, it is probably not worth the\
    \ effort.\n   This option permits the system to negotiate compression.\n   Consistent\
    \ with the behavior of other compression options in the\n   Internet Point-to-Point\
    \ set of protocols, no negotiation implies no\n   compression.  The systems need\
    \ not agree on the setting of this\n   parameter; one may be willing to decompress\
    \ and the other not.  A\n   system which does not negotiate, or negotiates this\
    \ option to be\n   disabled, should never receive a compressed packet, however.\n\
    \   Figure 8: Tinygram Compression Option\n    0                   1         \
    \          2\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     type=4    |length = 3     | Compression   |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type 4 = Tinygram Compression Support Option\n   Length\n        3 Octets\n\
    \   Compression Enable/Disable\n        If the value is 1, Tinygram Compression\
    \ is enabled.  If the\n        value is 2, Tinygram Compression is disabled, and\
    \ no\n        decompression will occur.\n"
- title: 6.8.  LAN Identification Support
  contents:
  - "6.8.  LAN Identification Support\n   Not all systems are prepared to make use\
    \ of the LAN Identification\n   field.  This option enables the systems to negotiate\
    \ its use.\n   The parameter is advisory; if the value is \"enabled\", then there\
    \ may\n   exist labeled LANs beyond the system, and the system is prepared to\n\
    \   service traffic to it.  if the value is \"disabled\", then there are no\n\
    \   labeled LANs beyond the system, and all such traffic will by\n   definition\
    \ be dropped.  Therefore, a system which is advised that his\n   peer does not\
    \ service LAN Identifications need not forward such\n   traffic on the link.\n\
    \   The default value is that LAN Identification disabled.\n   Figure 9: LAN Identification\
    \ Option\n    0                   1                   2\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     type=5    |length = 3     | Identification|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type 5 = LAN Identification Support Option\n   Length\n        3 Octets\n\
    \   Identification Enable/Disable\n        If the value is 1, LAN Identification\
    \ is enabled.  If the value\n        is 2, LAN Identification is disabled.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   This document is a product of the Point-to-Point Protocol\
    \ Extensions\n   Working Group.  Special thanks go to Steve Senum of Network Systems,\n\
    \   Dino Farinacci of 3COM, and Rick Szmauz of Digital Equipment\n   Corporation.\n"
- title: 8.  Bibliography
  contents:
  - "8.  Bibliography\n   [1] Perkins, D., \"The Point-to-Point Protocol for the Transmission\
    \ of\n       Multi-Protocol Datagrams Over Point-to-Point Links\", RFC 1171,\n\
    \       CMU, July 1990.\n   [2] Hobby R., and D. Perkins, \"The Point-to-Point\
    \ Protocol (PPP)\n       Initial Configuration Options\", RFC 1172, CMU, UC Davis,\
    \ July\n       1990.\n   [3] IEEE Draft Standard P802.1d/D9 MAC Bridges, Institute\
    \ of\n       Electrical and Electronic Engineers.  Also Published as ISO DIS\n\
    \       10038, July 1989.\n   [4] IEEE Draft Standard P802.5d/D13 Draft Addendum\
    \ to ANSI/IEEE Std\n       802.5-1988 Token Ring MAC and PHY Specification Enhancement\
    \ for\n       Multiple-Ring Networks, Institute of Electrical and Electronic\n\
    \       Engineers, May 1989.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 10.  Author's Address
  contents:
  - "10.  Author's Address\n   Fred Baker\n   Advanced Computer Communications\n \
    \  720 Santa Barbara Street\n   Santa Barbara, CA 93101\n   Phone: (805) 963-9431\n\
    \   EMail: fbaker@ACC.COM\n   Or send comments to: ietf-ppp@ucdavis.edu\n"
