- title: __initial_text__
  contents:
  - '           Telnet Environment Option Interoperability Issues

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   RFC 1408 [1], the specification for the Telnet Environment Option,\n\
    \   specifies definitions for VAR and VALUE that are reversed from the\n   BSD\
    \ implementation of the Telnet Environment option.  Since the BSD\n   implementation\
    \ was the reference implementation that the RFC was\n   supposed to document,\
    \ and is the base for many existing\n   implementations, there exists an interoperability\
    \ problem between\n   implementations with conflicting definitions for VAR and\
    \ VALUE.\n   This document describes a method for allowing implementors to ensure\n\
    \   that their implementation of the Environment option will be\n   interoperable\
    \ with as many other implementations as possible, by\n   providing a set of heuristics\
    \ that can be used to help identify which\n   definitions for VAR and VALUE are\
    \ being used by the other side of the\n   connection.\n"
- title: '2.  Client Telnet: Parsing a SEND'
  contents:
  - "2.  Client Telnet: Parsing a SEND\n   The SEND suboption should only contain\
    \ VAR and USERVAR commands.  It\n   should never contain a VALUE.  If while parsing\
    \ a SEND suboption, a\n   VALUE is encountered, the client should assume that\
    \ the server has\n   reversed values for VAR and VALUE, and from that point on\
    \ the client\n   should reverse those values, both in parsing the rest of the\
    \ SEND\n   suboption, and when generating an IS or INFO suboption.  If both\n\
    \   VALUE and VAR commands are encountered, the SEND command is not well\n   formed,\
    \ and it is implementation dependent as to what will happen.\n   If there are\
    \ not VAR or VALUE commands in the SEND suboption, then\n   the client cannot\
    \ know what values the server is expecting for VAR\n   and VALUE.  In this case,\
    \ it should just assume that the server has\n   the correct definitions, and use\
    \ the correct values for VAR and\n   VALUE.\n"
- title: '3.  Server Telnet: Parsing an IS or INFO'
  contents:
  - "3.  Server Telnet: Parsing an IS or INFO\n   The IS or INFO in a suboption can\
    \ only be legally followed by either\n   a VAR or a USERVAR.  If an IS or INFO\
    \ is immediately followed by a\n   VAR, then it can be assumed that the client\
    \ has the correct\n   definitions for VAR and VALUE.  If the IS or INFO is immediately\n\
    \   followed by a VALUE, then it can be assumed that the client has\n   reversed\
    \ definitions for VAR and VALUE, and from that point on the\n   server should\
    \ assume that the VALUE and VAR definitions are reversed.\n   If the IS or INFO\
    \ is immediately followed by a USERVAR, further\n   hueristics must be applied\
    \ to determine what are the client\n   definitions for VAR and VALUE. This is\
    \ because it is legal for a\n   USERVAR to be followed by either a VAR or a VALUE.\
    \  A VALUE after a\n   USERVAR gives the value for the USERVER.  A VAR after a\
    \ USERVAR\n   implies that the USERVAR is undefined.\n   The next thing to do\
    \ is to scan the entire suboption, looking for two\n   consecutive instances of\
    \ VAR or VALUE, or for a VAR or VALUE that is\n   empty.  It is not legal for\
    \ a suboption to contain two VALUEs without\n   an intervening VAR or USERVAR,\
    \ and it is also not legal for a\n   suboption to contain an empty VAR.  Thus,\
    \ if two consecutive VARs or\n   an empty VALUE can be found, it can be assumed\
    \ that the client that\n   generated the suboption uses the correct definitions\
    \ for VAR and\n   VALUE.  If two consecutive VALUEs or an empty VAR can be found,\
    \ then\n   it can be assumed that the client that generated the suboption has\n\
    \   reversed definitions for VAR and VALUE, and from that point on the\n   server\
    \ should assume that the VAR and VALUE definitions are reversed.\n   If things\
    \ are still in doubt, the next test that can be applied is to\n   count up how\
    \ many VARs, USERVARs and VALUEs were received.\n   (Consecutive USERVARs without\
    \ an intervening VALUE or VAR should only\n   be counted as one.) Because a VALUE\
    \ can only follow a VAR or a\n   USERVAR, there can never be more VALUEs than\
    \ the sum of VARs and\n   USERVARs, and if all VARs and USERVARs have values,\
    \ then there will\n   be exactly as many VALUEs as there are VARs and USERVARs.\
    \  If the\n   number of VARs and USERVARs is the same as the total number of\n\
    \   VALUEs, then the client has correct definitions for VAR and VALUE.\n   If\
    \ the number of VALUEs and USERVARs is the same as the total number\n   of VARs,\
    \ then the client has reversed definitions for VAR and VALUE.\n   If the number\
    \ of VALUEs is more than the sum of VARs and USERVARs, it\n   can be assumed that\
    \ the client has reversed definitions of VAR and\n   VALUE, and if there are more\
    \ VARs than USERVARs and VALUEs, then it\n   can be assumed that the client has\
    \ the correct definitions for VAR\n   and VALUE.  However, in order to get to\
    \ this step, it has already\n   been determined that there are no consecutive\
    \ VARs and VALUEs.  A\n   little math will show that this means that the number\
    \ of VALUEs will\n   never exceed the sum of VARs and USERVARs, and the number\
    \ of VARs\n   will never exceed the sum of VALUEs and USERVARs.  Hence, this check\n\
    \   is redundant and can be skipped.\n   If things are still in doubt, the values\
    \ of the VAR commands can be\n   checked to see if they do indeed specify well\
    \ known variables.  If\n   any of them do, then the client is probably using the\
    \ correct\n   definitions for VAR and VALUE.  Otherwise, if any of the VALUEs\n\
    \   contain well know variable names, then the client probably has\n   reversed\
    \ definitions for VAR and VALUE.\n   If all the above heuristics fail, then the\
    \ server has done all it can\n   to determine what type of client it is, and it\
    \ should just be assumed\n   that the client is using the correct definitions\
    \ for VAR and VALUe.\n"
- title: 4.  Client Summary
  contents:
  - "4.  Client Summary\n       The SEND suboption contains only VAR and USERVAR commands.\n\
    \           The server is ok.\n       The SEND suboption contains VALUE commands.\n\
    \           The server is reversed.\n       No VAR or VALUE commands are found.\n\
    \           Assume the server is ok.\n"
- title: 5.  Server Summary
  contents:
  - "5.  Server Summary\n       IS/INFO is followed by VAR.\n           The client\
    \ is ok.\n       IS/INFO is followed by VALUE.\n           The client is reversed.\n\
    \       There are two consecutive VARs.\n           The client is ok.\n      \
    \ There are consecutive VALUEs.\n           The client is reversed.\n       There\
    \ is an empty VALUE.\n           The client is ok.\n       There is an empty VAR.\n\
    \           The client is reversed.\n       The number of USERVARs and VARs is\
    \ equal to the number of VALUEs.\n           Assume the client is ok.\n      \
    \ The number of USERVARs and VALUEs is equal to the number of VARs.\n        \
    \   Assume the client is reversed.\n       There are VARs with names that are\
    \ well known.\n           Assume the client is ok.\n       There are VALUEs with\
    \ names that are well known.\n           Assume the client is reversed.\n    \
    \   Anything else.\n           Assume the client is ok.\n"
- title: References
  contents:
  - "References\n   [1] Borman, D., Editor, \"Telnet Environment Option\", RFC 1408,\
    \ Cray\n       Research, Inc., January 1993.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memeo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David A. Borman\n   Cray Research, Inc.\n   655F Lone Oak\
    \ Drive\n   Eagan, MN 55123\n   Phone: (612) 452-6650\n   EMail: dab@CRAY.COM\n\
    \   Telnet Working Group Mailing List: telnet-ietf@CRAY.COM\n"
