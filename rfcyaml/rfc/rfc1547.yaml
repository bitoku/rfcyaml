- title: __initial_text__
  contents:
  - '     Requirements for an Internet Standard Point-to-Point Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses the evaluation criteria for an Internet\n\
    \   Standard Data Link Layer protocol to be used with point-to-point\n   links.\
    \  Although many industry standard protocols and ad hoc\n   protocols already\
    \ exist for the data link layer, none are both\n   complete and sufficiently versatile\
    \ to be accepted as an Internet\n   Standard.  In preparation to designing such\
    \ a protocol, the features\n   necessary to qualify a point-to-point protocol\
    \ as an Internet\n   Standard are discussed in detail.  An analysis of the strengths\
    \ and\n   weaknesses of several existing protocols on the basis of these\n   requirements\
    \ demonstrates the failure of each to address key issues.\n      Historical Note:\
    \ This was the design requirements document dated\n      June 1989, which was\
    \ followed for RFC-1134 through the present.\n      It is now published for completeness\
    \ and future guidance.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.    Introduction ................................................3\n\
    \   1.1   Definitions of Terms ........................................4\n   2.\
    \    Required Features ...........................................6\n   2.1  \
    \ Simplicity ..................................................7\n   2.2   Transparency\
    \ ................................................7\n   2.3   Packet Framing ..............................................7\n\
    \   2.4   Bandwidth Efficiency ........................................8\n   2.5\
    \   Protocol Processing Efficiency ..............................8\n   2.6   Protocol\
    \ Multiplexing .......................................8\n   2.7   Multiple Physical\
    \ and Data Link Layer Protocols..............8\n   2.8   Error Detection .............................................9\n\
    \   2.9   Standardized Maximum Packet Length (MTU) ....................9\n   2.10\
    \  Switched and Non-Switched Media .............................9\n   2.11  Symmetry\
    \ ....................................................9\n   2.12  Connection Liveness\
    \ .........................................10\n   2.13  Loopback Detection ..........................................10\n\
    \   2.14  Misconfiguration Detection ..................................11\n  \
    \ 2.15  Network Layer Address Negotiation ...........................11\n   2.16\
    \  Data Compression Negotiation ................................11\n   2.17  Extensibility\
    \ and Option Negotiation ........................12\n   3.    Features Not Required\
    \ .......................................12\n   3.1   Error Correction ............................................12\n\
    \   3.2   Flow Control ................................................13\n  \
    \ 3.3   Sequencing ..................................................13\n   3.4\
    \   Backward Compatibility ......................................13\n   3.5  \
    \ Multi-Point Links ...........................................13\n   3.6   Half-Duplex\
    \ or Simplex Links ................................14\n   3.7   7-bit Asynchronous\
    \ RS-232 Links .............................14\n   4.    Prior Work On PPP Protocols\
    \ .................................14\n   4.1   Internet Protocols ..........................................14\n\
    \   4.1.1 RFC 891 - DCN Local-Network Protocols, Appendix A............14\n  \
    \ 4.1.2 RFC 914 - Thinwire Protocols ................................14\n   4.1.3\
    \ RFC 916 - Reliable Asynchronous Transfer Protocol............15\n   4.1.4 RFC\
    \ 935 - Reliable Link Layer Protocols .....................15\n   4.1.5 RFC 1009\
    \ - Requirements for Internet Gateways ...............15\n   4.1.6 RFC 1055 -\
    \ Serial Line IP ...................................16\n   4.2   International\
    \ Protocols .....................................16\n   4.2.1 ISO 3309 - HDLC\
    \ Frame Structure .............................16\n   4.2.2 ISO 6256 - HDLC Balanced\
    \ Class of Procedures.................16\n   4.2.3 CCITT X.25 and X.25 LAPB ....................................17\n\
    \   4.2.4 CCITT I.441 LAPD ............................................17\n  \
    \ 4.3   Other Protocols .............................................17\n   4.3.1\
    \ Cisco Systems point-to-point protocols ......................17\n   4.3.2 MIT\
    \ PC/IP framing protocol ..................................18\n   4.3.3 Proteon\
    \ p4200 point-to-point protocol .......................18\n   4.3.4 Ungermann\
    \ Bass point-to-point protocol ......................18\n   4.3.5 Wellfleet point-to-point\
    \ protocol ...........................19\n   4.3.6 XNS Synchronous Point-to-Point\
    \ Protocol .....................19\n   REFERENCES ........................................................20\n\
    \   SECURITY CONSIDERATION.............................................21\n  \
    \ CHAIR'S ADDRESS ...................................................21\n   AUTHOR'S\
    \ ADDRESS ..................................................21\n   EDITOR'S ADDRESS\
    \ ..................................................21\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Internet has seen explosive growth in the number of hosts\n\
    \   supporting IP [1].  The vast majority of these hosts are connected to\n  \
    \ Local Area Networks (LANs) of various types, Ethernet being the most\n   common.\
    \  Most of the other hosts are connected through Wide Area\n   Networks (WANs),\
    \ such as X.25 style Public Data Networks (PDNs).\n   In the past, relatively\
    \ few of these hosts were connected with simple\n   point-to-point links.  Yet,\
    \ point-to-point serial links are among the\n   oldest methods of data communications,\
    \ and almost every host supports\n   point-to-point connections.  For example,\
    \ asynchronous RS-232\n   interfaces are essentially ubiquitous.\n   One reason\
    \ for the small number of point-to-point IP links was the\n   lack of a single\
    \ established encapsulation protocol.  There were\n   plenty of non-standard (and\
    \ at least one de facto standard)\n   encapsulation protocols available, but there\
    \ was not one which was\n   agreed upon as an Internet Standard.\n   A number\
    \ of protocols have been proposed to the Internet community,\n   but no consensus\
    \ was reached as to which protocol should be adopted\n   as a standard.  The reason\
    \ may be that these proposals often\n   addressed specific problems rather than\
    \ providing general purpose\n   service.\n   For example, one of the most successful\
    \ protocols to-date was Rick\n   Adam's SLIP protocol for BSD UNIX [9].  SLIP\
    \ provides only the most\n   rudimentary support for sending IP datagrams over\
    \ asynchronous serial\n   lines, and ignores issues such as the use of protocols\
    \ other than IP\n   and the use of synchronous links.\n   This document proposes\
    \ a set of requirements for an Internet Standard\n   point-to-point protocol (ISPPP).\
    \  Its purpose is not to propose any\n   one design for the standard; any solutions\
    \ outlined in the text are\n   intended only as examples, and do not preclude\
    \ other implementations.\n   The document is divided into four major sections.\
    \  The first section\n   defines a number of technical terms used in this document.\
    \  The\n   second section lists the proposed requirements and details some\n \
    \  issues that are ignored by other protocols.  The third section\n   attempts\
    \ to clarify a number of non-requirements.  The fourth section\n   analyzes existing\
    \ protocols in light of the proposed requirements and\n   discusses the failure\
    \ of each to address key issues.\n"
- title: 1.1 Definitions of Terms
  contents:
  - "1.1 Definitions of Terms\n   This section defines many of the terms which will\
    \ be used in further\n   sections of this document.  The terms \"layer\" and \"\
    level\" are used\n   extensively and refer to protocol layers as defined by the\n\
    \   International Organization For Standardization's Reference Model\n   (ISORM)\
    \ standard.  In particular, the terms Physical Layer, Data Link\n   Layer and\
    \ Network Layer refer to layers one, two and three\n   respectively of the ISORM.\
    \  A \"higher layer\" refers to one with a\n   numerically larger layer number.\n\
    \    datagram\n      The unit of transmission in the network layer (such as IP).\
    \  A\n      datagram may be encapsulated in one or more packets (q.v.) passed\n\
    \      to the data link layer.\n    data link layer\n      Layer two in the ISO\
    \ reference model.  Defines how bits\n      transmitted and received by the physical\
    \ layer are recognized as\n      bytes and frames.  May also define procedures\
    \ for error detection\n      and correction, sequencing and flow control.\n  \
    \  fragment\n      The result of fragmentation.  Fragmentation at the network\
    \ layer\n      breaks large datagrams into multiple parts less than or equal to\n\
    \      the size of the packets passed to the data link layer.\n      Fragmentation\
    \ at the data link layer breaks large packets into\n      multiple frames.\n \
    \   frame\n      The unit of transmission at the data link layer.  A frame may\n\
    \      include a header and/or a trailer along with some number of units\n   \
    \   of data.\n    framing protocol\n      A protocol at the data link level for\
    \ marking the beginning and\n      end of a frame transmitted across a link.\n\
    \    internet\n      An interconnected system of networks tied together by a common\n\
    \      \"internet protocol\" providing a common and consistent network\n     \
    \ address structure.\n    Internet\n      Specifically refers to the IP Internet.\n\
    \    Internet Standard Point-to-Point Protocol (ISPPP)\n      A point-to-point\
    \ protocol which is declared an official Internet\n      Standard.  This protocol\
    \ does not yet exist, but its proposed\n      characteristics are presented in\
    \ this paper.\n    Maximum Transmission Unit (MTU)\n      The maximum allowable\
    \ length for a packet (q.v.) transmitted over\n      a point-to-point link without\
    \ incurring network layer\n      fragmentation.\n    network layer\n      Layer\
    \ three in the ISO reference model.  Responsible for routing\n      packets (q.v)\
    \ between physical networks.\n    octet\n      A unit of transmission consisting\
    \ of 8 bits.  On most machines an\n      octet is the same as a byte or a character,\
    \ but this need not be\n      true.\n    packet\n      The unit of transmission\
    \ passed across the interface between the\n      network layer and the data link\
    \ layer.  A packet is usually mapped\n      to a frame (q.v); the exception is\
    \ when data link layer\n      fragmentation is being performed.\n    physical\
    \ layer\n      The first layer in the ISO reference model.  Describes electrical,\n\
    \      mechanical and timing characteristics of a link.\n    point-to-point protocol\
    \ (ppp)\n      A data link layer protocol for the transmission of packets (q.v.)\n\
    \      over a point-to-point link.  In the following discussion, the\n      acronym\
    \ \"ppp\" refers to any generic point-to-point protocol.\n    serial line IP (slip)\n\
    \      Often incorrectly used as a synonym for \"point-to-point protocol\",\n\
    \      \"slip\" specifically refers to any protocol for the transmission of\n\
    \      IP datagrams over a serial point-to-point line.\n    SLIP\n      Although\
    \ many proposed protocols are named \"SLIP\", this document\n      will use SLIP\
    \ (uppercase) to refer to Rick Adam's slip (q.v.) for\n      BSD UNIX [9].\n"
- title: 2. Required Features
  contents:
  - "2. Required Features\n   In order for a point-to-point protocol to be accepted\
    \ by the Internet\n   community it must adequately address many requirements.\
    \  This section\n   itemizes and discusses the proposed requirements.  Although\
    \ the main\n   emphasis of the discussion is on protocol architecture requirements,\n\
    \   implementation requirements are sometimes discussed as well.\n   These particular\
    \ requirements were chosen to assure that the ISPPP\n   adequately serves the\
    \ needs of its users.  Some of these needs are\n   universal and dictate clear\
    \ requirements for the protocol; for\n   example, a packet framing protocol is\
    \ a fundamental necessity.  Other\n   needs are more specific and may even be\
    \ conflicting.  Connection\n   liveness determination is very important on some\
    \ links but can be\n   very expensive on others.  A standard protocol must address\
    \ all of\n   these needs; in particular, it must be able to resolve conflicts\n\
    \   effectively.\n   Resolving these conflicts requires that a protocol feature\
    \ have both\n   enabled and disabled modes and that these modes must be compatible\n\
    \   with each other.  The enabled mode allows the protocol to solve\n   problems\
    \ in environments where they exist.  The disabled mode allows\n   problems to\
    \ be ignored in environments where they do not exist.  To\n   assure interoperabilty,\
    \ implementations are required to support both\n   modes and allow the user (not\
    \ necessarily human) to dynamically\n   choose which is appropriate.\n   This\
    \ is essentially the same solution used in the User Datagram\n   Protocol (UDP)\
    \ [2].  The UDP datagram checksum may be computed\n   (enabled mode) or it may\
    \ not (disabled mode).  Compatibility is\n   maintained by requiring the checksum\
    \ to be transmitted as zero in\n   disabled mode and ignored when received as\
    \ zero in either mode.\n   Implementations of UDP are generally encouraged to\
    \ support both modes\n   but allow the application to choose modes.\n"
- title: 2.1 Simplicity
  contents:
  - "2.1 Simplicity\n   The ISPPP must be simple.  The Internet architecture very\
    \ carefully\n   places the most complexity in the transport layer (that is, TCP).\n\
    \   The internetwork layer (IP) is a fairly simple, almost stateless\n   protocol\
    \ providing an unreliable datagram service.  The data link\n   layer need provide\
    \ no more capability than the IP protocol; no error\n   correction, sequencing\
    \ or flow control is necessary.  Including these\n   would in most cases needlessly\
    \ duplicate the capabilities of the\n   transport layer, and might possibly decrease\
    \ efficiency.  This is not\n   to say that these capabilities must never be included;\
    \ there are some\n   cases which may warrant them.  For instance, very noisy links\
    \ may be\n   more efficiently handled using a more complex data link layer\n \
    \  protocol such as CCITT's LAPB.  Nevertheless, the watchword for a\n   point-to-point\
    \ protocol should be simplicity.\n   A simple design also decreases the incidence\
    \ of programming errors,\n   thereby increasing the likelihood of interoperability\
    \ among different\n   implementations.  Since interoperability is a primary goal\
    \ of\n   standardization, this is another strong argument for simplicity.\n"
- title: 2.2 Transparency
  contents:
  - "2.2 Transparency\n   The ISPPP must be transparent to higher layers.  The protocol\
    \ must\n   not place any constraints on transmitted data.  All ISPPP data,\n \
    \  including higher level headers as well as data, must be transported\n   unmodified\
    \ end-to-end.  No restrictions are placed on how the ISPPP\n   accomplishes this.\
    \  For example, if the ISPPP uses a particular\n   character for framing, it must\
    \ also provide some way of\n   disambiguating higher level data containing that\
    \ character from a\n   framing character (such as escaping or bit-stuffing). \
    \ This is mainly\n   an issue for the data link and physical layer protocols incorporated\n\
    \   into the ISPPP.\n"
- title: 2.3 Packet Framing
  contents:
  - "2.3 Packet Framing\n   The ISPPP must be able to correctly and efficiently frame\
    \ packets.  A\n   receiver must be able to locate correctly the beginning and\
    \ end of\n   each transmitted packet.  Within each packet, the receiver must be\n\
    \   able to identify the boundaries of each octet.  Finally, within each\n   octet,\
    \ each bit must be located and identified.  No restrictions\n   other than those\
    \ specified in this document are placed on the packet\n   framing protocol.\n"
- title: 2.4 Bandwidth Efficiency
  contents:
  - "2.4 Bandwidth Efficiency\n   The ISPPP must make efficient use of available bandwidth.\
    \  At most,\n   the ppp overhead may impose a few percent reduction in raw link\n\
    \   bandwidth.\n"
- title: 2.5 Protocol Processing Efficiency
  contents:
  - "2.5 Protocol Processing Efficiency\n   The processing of the ISPPP headers must\
    \ typically be very fast and\n   efficient.  The format for data packets should\
    \ be very simple in the\n   normal case, without complex field checking.\n"
- title: 2.6 Protocol Multiplexing
  contents:
  - "2.6 Protocol Multiplexing\n   The ISPPP must support multiplexing of many higher\
    \ level protocols.\n   Although the Internet community is interested mainly in\
    \ IP, co-\n   existence of other protocols is frequently required.  IP networks\n\
    \   must often support additional protocols such as AppleTalk, DECnet,\n   IPX,\
    \ and XNS.  For point-to-point links to connect gateways on\n   geographically\
    \ separated Local Area Networks (LANs), the ISPPP must\n   simultaneously support\
    \ all protocols implemented on both the LANs and\n   the gateways.  This suggests\
    \ that the ISPPP must include a protocol\n   type field or other multiplexing\
    \ scheme.  Given the large number of\n   protocols, the potential use of the protocol\
    \ type field as a data\n   compression aid, and the experimental nature of the\
    \ Internet, eight\n   bits of type field are not sufficient.  Sixteen bits of\
    \ type field\n   are suggested, although twelve bits (4096 protocols) should suffice.\n"
- title: 2.7 Multiple Physical and Data Link Layer Protocols
  contents:
  - "2.7 Multiple Physical and Data Link Layer Protocols\n   The ISPPP must support\
    \ a multiplicity of physical and data link layer\n   protocols.  Many types of\
    \ point-to-point links exist.  Links can be\n   serial or parallel, synchronous\
    \ or asynchronous, low speed or high\n   speed, electrical or optical.  Standards\
    \ are required for the\n   transmission of IP datagrams over each type of commonly\
    \ used link.\n   The ISPPP must not inhibit the use of any type of link.  This\n\
    \   includes, but is not limited to, asynchronous, bit-oriented\n   synchronous\
    \ (HDLC [10] and X.25 LAPB [11]), and byte-oriented\n   synchronous (BISYNC and\
    \ DDCMP [15]) links.\n   The ISPPP must initially provide support for at least\
    \ the following\n   types of links:\n      Full duplex asynchronous RS-232 [3]\
    \ links with 8 bits of data and\n      no parity, ranging in speeds from 300 to\
    \ 19.2k bps or more.\n      Full duplex bit-oriented synchronous links including\
    \ RS-422, RS-\n      423, V.35 and T1.\n      Other links should be standardized\
    \ as the need arises.\n"
- title: 2.8 Error Detection
  contents:
  - "2.8 Error Detection\n      The ISPPP must provide some form of basic error detection.\
    \  Most\n      network and transport layer protocols provide mechanisms to detect\n\
    \      corrupted packets.  However, some network protocols expect error\n    \
    \  free transmission and either provide error detection only on a\n      conditional\
    \ basis or do not provide it at all.  It is the\n      consensus of the Internet\
    \ community that error correction should\n      always be implemented in the end-to-end\
    \ transport, but that link\n      error detection in the form of a checksum, Cyclic\
    \ Redundancy Check\n      (CRC) or other frame check mechanism is useful to prevent\
    \ wasted\n      bandwidth from propagation of corrupted packets.  Link level error\n\
    \      correction is not required.\n"
- title: 2.9 Standardized Maximum Packet Length (MTU)
  contents:
  - "2.9 Standardized Maximum Packet Length (MTU)\n      The ISPPP must have a standardized\
    \ default maximum packet length\n      for each type of point-to-point link. \
    \ This standardization helps\n      to promote interoperable implementations.\
    \  Higher layer protocols\n      must not attempt to transmit packets longer than\
    \ the MTU.  If a\n      higher layer protocol does try to transmit a packet which\
    \ is too\n      long, the ISPPP must drop the packet and return an error.  The\
    \ MTU\n      may potentially be changed from the default via some sort of\n  \
    \    explicit negotiation or private agreement, but the default must be\n    \
    \  enforced in all other cases.  The default should be at least 1500\n      bytes,\
    \ to efficiently carry common LAN traffic.\n"
- title: 2.10 Switched and Non-Switched Media
  contents:
  - "2.10 Switched and Non-Switched Media\n      The ISPPP must be able to support\
    \ both switched (dynamic) and non-\n      switched (static) point-to-point links.\
    \  A common example of a\n      non- switched link is a 3-wire asynchronous RS-232\
    \ cable which\n      might connect a host to a particular gateway.  Switched media\
    \ may\n      be exemplified by connections over a standard voice network or an\n\
    \      Integrated Services Digital Network (ISDN).  Links over ISDN are\n    \
    \  currently rare, but are expected to become increasingly\n      commonplace.\
    \  To be a viable standard, the ISPPP must be able to\n      effectively support\
    \ both types of links.  Procedures for\n      establishing switched connections\
    \ are beyond the scope of this\n      document.\n"
- title: 2.11 Symmetry
  contents:
  - "2.11 Symmetry\n      The ISPPP should operate symmetrically to maximize flexibility.\n\
    \      The ISPPP must allow communications among any combination of\n      gateways\
    \ and hosts.  One host may need to communicate directly\n      with another host,\
    \ or it may be connected to a gateway to gain\n      access to a whole network.\
    \  A gateway may establish a connection\n      to a single host in order to deliver\
    \ a packet, or it may connect\n      to another gateway on a permanent or transient\
    \ basis.  Symmetry is\n      destroyed by pre-assigned static roles, such as master\
    \ and slave\n      or gateway and host.  If necessary, roles may be dynamically\n\
    \      determined on a per connection basis.\n"
- title: 2.12 Connection Liveness
  contents:
  - "2.12 Connection Liveness\n      The ISPPP must include a mechanism to automatically\
    \ determine when\n      a link is functioning properly and when it is defunct.\
    \  This\n      mechanism should be enabled by default, but the protocol and all\n\
    \      implementations must allow this mechanism to be disabled.\n      When enabled,\
    \ this mechanism should discover changes in a link's\n      status in a timely\
    \ fashion -- no more than a few minutes.\n      Continuing to utilize a link which\
    \ is down often causes routing\n      problems commonly referred to as \"black\
    \ holes\".  These problems\n      can be hard to find and diagnose.  By automatically\
    \ detecting a\n      failing link, a point-to-point protocol can avoid such problems,\n\
    \      and also provide a powerful tool for a network manager trying to\n    \
    \  locate and remedy the fault.\n      When a point-to-point connection is not\
    \ functioning properly, it\n      must be declared \"down\" for the purposes of\
    \ routing packets for\n      higher level protocols.  In order to certify a link\
    \ \"up\", the\n      systems on either end of the link must be able to successfully\n\
    \      exchange packets.  In other words, the systems at both ends must\n    \
    \  be able both to transmit and to receive packets, and the link must\n      be\
    \ able to transport packets in both directions.  Links are\n      defined to be\
    \ \"down\" at initialization, their liveness must be\n      verified before they\
    \ may be declared \"up\".\n      This feature may be disabled in situations where\
    \ connection status\n      determination is \"expensive\".  For example, a link\
    \ may traverse a\n      Public Data Network (such as TELENET or TYMNET) which\
    \ accounts for\n      bandwidth utilization.  Constant pinging would result in\
    \ charges\n      being accrued even in the absence of useful communications.\n"
- title: 2.13 Loopback Detection
  contents:
  - "2.13 Loopback Detection\n   The ISPPP must be capable of automatically detecting\
    \ a looped-back\n   link without operator assistance.  Modems and other communications\n\
    \   gear are often placed in a loopback mode to aid in diagnosis of\n   circuit\
    \ failures.  Detection of this condition must take no longer\n   than one period\
    \ of the liveness protocol.  While the link is in\n   loopback mode, each end\
    \ of the link must declare the other end to be\n   unreachable.  However, to aid\
    \ in diagnosis, each end of the link may\n   declare itself reachable for any\
    \ higher-level protocol which\n   distinguishes between the two ends of the link.\n"
- title: 2.14 Misconfiguration Detection
  contents:
  - "2.14 Misconfiguration Detection\n   The ISPPP must be able to quickly detect\
    \ misconfigured point-to-point\n   connections.  A connection which is misconfigured\
    \ must never be\n   declared to be up.  Many systems, gateways in particular,\
    \ have more\n   than one point-to-point connection.  When many cables terminate\n\
    \   within a small area, the possibility for confusion abounds.  It\n   becomes\
    \ very easy to mistakenly plug a cable into the wrong\n   connector, or even to\
    \ swap cables.  The protocol should do its best\n   to provide protection against\
    \ these errors by verifying the remote\n   end's identity whenever possible before\
    \ marking an interface as\n   operational.  The purpose of this verification is\
    \ not rigorous\n   authentication but the detection of simple errors.\n"
- title: 2.15 Network Layer Address Negotiation
  contents:
  - "2.15 Network Layer Address Negotiation\n   The ISPPP must allow network layer\
    \ (such as IP) addresses to be\n   negotiated.  The negotiation algorithm should\
    \ be as simple as\n   possible and must be guaranteed to terminate in all cases.\
    \  Many\n   network layer protocols and implementations are required to know the\n\
    \   addresses at both ends of a point-to-point link before packets may be\n  \
    \ routed.  These addresses may be statically configured, but it may\n   sometimes\
    \ be necessary or convenient for these addresses be\n   dynamically ascertained\
    \ at connection establishment.  This is\n   especially important when switched\
    \ media are used.  For example, a\n   dial-up IP gateway must know the IP address\
    \ of its peer before\n   packets can be successfully routed.  This address can\
    \ be either\n   statically or dynamically configured.  In the former case, the\n\
    \   gateway's peer must therefore learn the static address (static with\n   respect\
    \ to the gateway).  In the latter situation, the gateway must\n   dynamically\
    \ learn the address used by its peer.\n"
- title: 2.16 Data Compression Negotiation
  contents:
  - "2.16 Data Compression Negotiation\n   The ISPPP must provide a way to negotiate\
    \ the use of data compression\n   algorithms.  This mechanism should be as simple\
    \ as possible and must\n   be guaranteed to terminate in all cases.  The protocol\
    \ is not\n   required to standardize any data compression algorithms; conforming\n\
    \   implementations of the protocol therefore may refuse to do data\n   compression\
    \ when negotiating (refusal to do data compression always\n   takes precedence\
    \ over an offer to do it).  However, to allow the use\n   of data compression\
    \ between consenting systems, the point-to-point\n   protocol must not impede\
    \ the use of data compression.  In fact, it\n   should be possible to use multiple,\
    \ independent data compression\n   schemes simultaneously.  Because data compression\
    \ algorithms are\n   still very experimental in the Internet environment, it is\
    \ likely\n   that many different algorithms will be tried.  The negotiation\n\
    \   protocol must distinguish between these different algorithms to\n   ensure\
    \ that data compression is not enabled unless the same algorithm\n   or algorithms\
    \ are used at both ends of the connection.  The number of\n   such supported algorithms\
    \ must be easily extensible.\n"
- title: 2.17 Extensibility and Option Negotiation
  contents:
  - "2.17 Extensibility and Option Negotiation\n   The ISPPP must allow for future\
    \ extensions in a flexible way.  The\n   Internet will never cease to evolve.\
    \  Changes in technology and user\n   demands create new requirements.  To function\
    \ effectively as a\n   standard, the protocol must have the ability to evolve\
    \ along with its\n   environment.\n   To accomplish this, the ISPPP should be\
    \ designed to be as extensible\n   as possible and to allow for experimentation\
    \ within the guidelines of\n   the other requirements presented in this document.\
    \  A proposed\n   solution is to specify an option negotiation protocol.  The\
    \ option\n   negotiation protocol could be used for the negotiation of network\n\
    \   layer addresses, data compression schemes, MTU, encryption, etc.  The\n  \
    \ option negotiation protocol must itself be extensible; it should\n   allow the\
    \ negotiation of a large number of future options and it\n   should allow the\
    \ use of other types of point-to-point links and\n   encapsulation schemes.\n"
- title: 3.  Features Not Required
  contents:
  - "3.  Features Not Required\n   This section discusses functionality which is explicitly\
    \ not\n   required.  These functions may potentially be included in\n   implementations\
    \ as long as the inclusion does not violate any of the\n   requirements itemized\
    \ in the previous section.\n"
- title: 3.1 Error Correction
  contents:
  - "3.1 Error Correction\n   As discussed above in the sections on Simplicity and\
    \ Error Detection,\n   error correction is the responsibility of the transport\
    \ layer and is\n   not required in a point-to-point protocol.  However, on links\
    \ with\n   high error rates, performance may be increased by adding error\n  \
    \ correction at the data link level.  Therefore, the ISPPP must not\n   prevent\
    \ the addition of error correction by private agreement, even\n   though such\
    \ mechanisms are not required in the basic implementation.\n"
- title: 3.2 Flow Control
  contents:
  - "3.2 Flow Control\n   Flow control (such as XON/XOFF) is not required.  Any implementation\n\
    \   of the ISPPP is expected to be capable of receiving packets at the\n   full\
    \ rate possible for the particular data link and physical layers\n   used in the\
    \ implementation.  If higher layers cannot receive packets\n   at the full rate\
    \ possible, it is up to those layers to discard\n   packets or invoke flow control\
    \ procedures.  As discussed above, end-\n   to-end flow control is the responsibility\
    \ of the transport layer.\n   Including flow control within a point-to-point protocol\
    \ often causes\n   violation of the simplicity requirement.\n"
- title: 3.3 Sequencing
  contents:
  - "3.3 Sequencing\n   Sequencing of packets is not required.  The ISPPP need provide\
    \ no\n   more service than the IP protocol, an unreliable datagram service\n \
    \  which is free to reorder packets.  In fact, it is specifically\n   allowed\
    \ to reorder packets based upon some type-of-service criteria\n   implemented\
    \ in higher-level protocols.\n"
- title: 3.4 Backward Compatibility
  contents:
  - "3.4 Backward Compatibility\n   There is no requirement for the ISPPP to provide\
    \ backward\n   compatibility with any other point-to-point protocol.  First, there\n\
    \   are no official Internet Standards with which backward compatibility\n   must\
    \ be maintained.  Second, attempting to maintain backward\n   compatibility may\
    \ lead to needless restrictions on the new protocol.\n   However, there is no\
    \ need for the designers of the ISPPP to go out of\n   their way to inhibit backward\
    \ compatibility.\n"
- title: 3.5 Multi-Point Links
  contents:
  - "3.5 Multi-Point Links\n   There is no requirement for supporting multi-point\
    \ links.  Many\n   features which are required are only valid between two peers.\
    \  These\n   links are sufficiently rare that the benefits of supporting them\
    \ are\n   outweighed by the added complexity their support would introduce into\n\
    \   the ISPPP.\n      Historical Note: The original rationale also stated: \"\
    Furthermore,\n      it is unlikely that many new types of multi-point links will\
    \ be\n      introduced in the foreseeable future.\"  Since this was written,\n\
    \      considerable effort has been expended in new multi-point links,\n     \
    \ including Switched Multimegabit Data Service, Frame Relay, and\n      Asynchronous\
    \ Transfer Mode.  However, it is clear that these are\n      considerably more\
    \ complex than ISPPP.\n"
- title: 3.6 Half-Duplex or Simplex Links
  contents:
  - "3.6 Half-Duplex or Simplex Links\n   Support for half-duplex or simplex links\
    \ is not required.  These\n   types of links are not in common use in the current\
    \ Internet.  Half-\n   duplex links require some method of turning the line around.\
    \  The\n   ISPPP need not have an explicit mechanism for handling line turn-\n\
    \   around.  Such support might possibly be added in the future via the\n   required\
    \ extension mechanism.\n"
- title: 3.7  7-bit Asynchronous RS-232 Links
  contents:
  - "3.7  7-bit Asynchronous RS-232 Links\n   The use of asynchronous RS-232 need\
    \ not support 7-bit links.  8-bit\n   links are predominant in the Internet environment\
    \ and supporting 7-\n   bit links introduces unnecessary complexity.\n"
- title: 4.  Prior Work On PPP Protocols
  contents:
  - "4.  Prior Work On PPP Protocols\n   This section reviews a number of existing\
    \ point-to-point and data\n   link layer protocols and points out which of our\
    \ requirements are not\n   satisfied.\n"
- title: 4.1 Internet Protocols
  contents:
  - '4.1 Internet Protocols

    '
- title: 4.1.1 RFC 891 - DCN Local-Network Protocols, Appendix A
  contents:
  - "4.1.1 RFC 891 - DCN Local-Network Protocols, Appendix A\n   In Appendix A of\
    \ RFC 891, \"DCN Local-Network Protocols\" [4], D.L.\n   Mills describes the data\
    \ link layer packet formats used by the\n   Fuzzball system for asynchronous,\
    \ character-oriented synchronous,\n   DDCMP, HDLC, ARPANET 1822, X.25 LAPB and\
    \ ethernet links.  These\n   protocols meet the stated requirements for simplicity,\
    \ transparency,\n   packet framing and efficiency, but fall short of many of the\
    \ others.\n   Most of these protocols assume the use of the IP protocol, and do\
    \ not\n   include any type of protocol demultiplexing field.  No error\n   detection\
    \ mechanism is provided except when necessary to comply with\n   another standard\
    \ such as ethernet.  RFC 891 does not mention the MTU\n   used for any of these\
    \ links.  Other requirements such as loopback\n   detection and misconfiguration\
    \ detection are not discussed.  Finally,\n   no option negotiation scheme is defined;\
    \ without a protocol\n   demultiplexing field it would be difficult or impossible\
    \ to include\n   one.\n"
- title: 4.1.2 RFC 914 - Thinwire Protocols
  contents:
  - "4.1.2 RFC 914 - Thinwire Protocols\n   RFC 914, \"Thinwire Protocols\" [5], discusses\
    \ the use of low speed\n   links in the Internet.  This document places its main\
    \ emphasis on\n   decreasing round-trip delay and increasing link efficiency with\
    \ the\n   help of header compression (vs. data compression) techniques.  Three\n\
    \   \"Thinwire\" protocols are discussed, Thinwire I, Thinwire II and\n   Thinwire\
    \ III.  The latter two protocols require the use of a reliable\n   data link layer\
    \ protocol; one such protocol, \"SLIP\" (not to be\n   confused with Rick Adams'\
    \ SLIP), is proposed in Appendix D of the\n   RFC.  As proposed, \"SLIP\" does\
    \ not meet many of the stated\n   requirements.  Although not terribly complex,\
    \ as a reliable, error\n   detecting and correcting protocol, it is not \"simple\"\
    .  The 32 octet\n   packet size makes it inefficient for large or uncompressed\
    \ packets,\n   requiring complex fragmentation and reassembly.  The use of other\n\
    \   than asynchronous links is not mentioned.  The entire reliable link\n   layer\
    \ would be redundant over LAPB links.  There is no mechanism for\n   option negotiation\
    \ or future extensibility.\n"
- title: 4.1.3 RFC 916 - Reliable Asynchronous Transfer Protocol
  contents:
  - "4.1.3 RFC 916 - Reliable Asynchronous Transfer Protocol\n   RFC 916 [6] presents\
    \ RATP, the Reliable Asynchronous Transfer\n   Protocol.  RATP provides error\
    \ detection and correction, sequencing\n   and flow control across a point-to-point\
    \ connection.  It is directed\n   towards full duplex RS-232 links although it\
    \ is useful for other\n   point-to-point links.  Although the author claims that\
    \ RATP is not as\n   complex as some other protocols, it is far from simple. \
    \ RATP solves\n   many of the problems which we have labeled non-requirements\
    \ and fails\n   to solve many of our stated requirements.  Specifically, RATP\
    \ does\n   not support option negotiation and has no mechanism for future\n  \
    \ extensibility.  Since RFC 916 was published, no consensus has emerged\n   advocating\
    \ RATP.  For these reasons RATP is not recommended as the\n   ISPPP.\n"
- title: 4.1.4 RFC 935 - Reliable Link Layer Protocols
  contents:
  - "4.1.4 RFC 935 - Reliable Link Layer Protocols\n   RFC 935 [7] is a rebuttal to\
    \ the protocols proposed in RFCs 914 and\n   916.  J. Robinson discusses existing\
    \ and widely-used national and\n   international standards which meet the needs\
    \ addressed by the two\n   prior RFCs.  The standards reviewed include character-oriented\n\
    \   asynchronous and synchronous (bisynch) protocols and bit-oriented\n   synchronous\
    \ protocols.  RFC 935 does not present any higher level\n   issues such as option\
    \ negotiation or extensibility.\n"
- title: 4.1.5 RFC 1009 - Requirements for Internet Gateways
  contents:
  - "4.1.5 RFC 1009 - Requirements for Internet Gateways\n   Section 3 of RFC 1009,\
    \ \"Constituent Network Interfaces\" [8], briefly\n   discusses requirements for\
    \ transmission of IP datagrams over a number\n   of types of point-to-point links\
    \ including X.25 LAPB, HDLC framed\n   synchronous links, Xerox Synchronous Point-to-Point\
    \ synchronous lines\n   and the MIT Serial Line Framing Protocol for asynchronous\
    \ lines.  RFC\n   1009 merely mentions these as reasonable candidates and does\
    \ not go\n   into depth on any of them.  All are discussed further in this\n \
    \  document.\n"
- title: 4.1.6 RFC 1055 - Serial Line IP
  contents:
  - "4.1.6 RFC 1055 - Serial Line IP\n   Rick Adams' Serial Line IP (SLIP) protocol\
    \ [9] has become something\n   of a de facto standard due to the popularity of\
    \ the 4.2 and 4.3BSD\n   UNIX operating systems.  SLIP is easily added to 4.2\
    \ systems and is\n   included with 4.3.  Many other TCP/IP implementation have\
    \ added SLIP\n   implementations in order to be compatible.  Yet SLIP is not a\
    \ real\n   standard; the protocol was only recently published in RFC form.\n \
    \  Before RFC 1055 it was specified in the SLIP source code.  SLIP does\n   not\
    \ meet most of the requirements set forth above.  SLIP certainly\n   meets the\
    \ requirement for simplicity, and also meets the requirements\n   for transparency\
    \ and bandwidth efficiency.  But SLIP only provides\n   for sending IP packets\
    \ over asynchronous serial lines.  Since it\n   provides no higher level protocol\
    \ field for demultiplexing, SLIP\n   cannot support multiple concurrent higher\
    \ level protocols.  Providing\n   only a framing protocol, SLIP would be entirely\
    \ redundant when used\n   with a LAPB synchronous link.  SLIP includes absolutely\
    \ no mechanism\n   for error detection, not even parity.  Again due to its lack\
    \ of a\n   protocol type field, SLIP does not support any type of option\n   negotiation\
    \ or extensibility.\n"
- title: 4.2 International Protocols
  contents:
  - '4.2 International Protocols

    '
- title: 4.2.1 ISO 3309 - HDLC Frame Structure
  contents:
  - "4.2.1 ISO 3309 - HDLC Frame Structure\n   ISO 3309 [10], the HDLC frame structure,\
    \ is a simple data link layer\n   protocol which provides framing of packets transmitted\
    \ over bit-\n   oriented synchronous links.  Special flag sequences mark the\n\
    \   beginning and end of frames and bit stuffing allows data containing\n   flag\
    \ characters to be transmitted.  A 16-bit Frame Check Sequence\n   provides error\
    \ detection.\n   By itself, the HDLC frame structure does not meet most of the\n\
    \   requirements.  HDLC does not provide protocol multiplexing, standard\n   MTUs,\
    \ fault detection or option negotiation.  There is no mechanism\n   for future\
    \ extensibility.\n   Given the HDLC frame structure's wide acceptance and simplicity,\
    \ it\n   may be an ideal building block for the ISPPP.\n"
- title: 4.2.2 ISO 6256 - HDLC Balanced Class of Procedures
  contents:
  - "4.2.2 ISO 6256 - HDLC Balanced Class of Procedures\n   ISO 6256, the HDLC Balanced\
    \ Class of Procedures, specifies a data\n   link layer protocol which provides\
    \ error correction, sequencing and\n   flow control.  ISO 6256 builds on ISO 3309\
    \ and ISO 4335, HDLC\n   Elements of Procedures.\n   As far as meeting our requirements\
    \ is concerned, ISO 6256 does not\n   provide any more utility than does ISO 3309.\
    \  The capabilities that\n   are provided are all considered unnecessary and overly\
    \ complex.\n"
- title: 4.2.3 CCITT X.25 and X.25 LAPB
  contents:
  - "4.2.3 CCITT X.25 and X.25 LAPB\n   CCITT recommendation X.25 [11] describes a\
    \ network layer protocol\n   providing error-free, sequenced, flow controlled\
    \ virtual circuits.\n   X.25 includes a data link layer, X.25 LAPB, which uses\
    \ ISO 3309, 4335\n   and 6256.  Neither X.25 LAPB or full LAPB meet any more of\
    \ our\n   requirements than the ISO protocols.\n"
- title: 4.2.4 CCITT I.441 LAPD
  contents:
  - "4.2.4 CCITT I.441 LAPD\n   CCITT I.441 LAPD [12] defines the Link Access Procedure\
    \ on the ISDN\n   D-Channel.  The data link layer of LAPD is very similar to that\
    \ of\n   LAPB and fails to meet the same requirements.\n"
- title: 4.3 Other Protocols
  contents:
  - '4.3 Other Protocols

    '
- title: 4.3.1 Cisco Systems point-to-point protocols
  contents:
  - "4.3.1 Cisco Systems point-to-point protocols\n   The Cisco Systems gateway supports\
    \ both asynchronous links using SLIP\n   and synchronous links using either simple\
    \ HDLC framing, X.25 LAPB or\n   full X.25.  The HDLC framing procedure includes\
    \ a four byte header.\n   The first octet (address) is either 0x0F (unicast intent)\
    \ or 0x8F\n   (multicast intent).  The second octet (control byte) is left zero\
    \ and\n   is not checked on reception.  The third and fourth octets contain a\n\
    \   standard 16 bit Ethernet protocol type code.\n   A \"keepalive\" or \"beaconing\"\
    \ protocol is used to ensure the two-way\n   connectivity of the serial line.\
    \  Each end of the link periodically\n   sends two 32 bit sequence numbers to\
    \ the other side.  One sequence\n   number is the local side's sequence number,\
    \ the other is the sequence\n   number received from the other side.  Hearing\
    \ the local sequence\n   number from the other side indicates that the link is\
    \ working in both\n   directions.\n   The keepalive protocol is extensible.  One\
    \ extension is used to\n   default IP addresses on serial lines of systems without\
    \ non-volatile\n   memory.  A request for address is sent to the remote side.\
    \  The\n   remote side responds with its own IP address and a subnet mask.  When\n\
    \   the querying side receives the reply, it checks if the host portion\n   of\
    \ the remote address is either 1 or 2.  If so, the opposite address\n   is chosen\
    \ for the local address.  If not, the protocol cannot be used\n   and we must\
    \ rely on other address resolution means.  This protocol\n   assumes that each\
    \ serial link uses one subnet or network number.\n   LAPB assuming IP is another\
    \ possible encapsulation.  A multi-protocol\n   extension of LAPB (multi-LAPB)\
    \ includes a 16 bit Ethernet type code\n   after the address and control bytes\
    \ and in front of the actual\n   protocol data.  DDN X.25 and Commercial X.25\
    \ encapsulations are also\n   supported.  Multiple protocols are supported by\
    \ making protocol\n   dependent CALL REQUEST's.\n"
- title: 4.3.2 MIT PC/IP framing protocol
  contents:
  - "4.3.2 MIT PC/IP framing protocol\n   The MIT PC/IP framing protocol [13] provides\
    \ a mechanism for the\n   transmission of IP datagrams over asynchronous links.\
    \  The low-level\n   protocol (LLP) sublayer provides encapsulation while the\
    \ local net\n   protocol provides multiplexing of IP datagrams and IP address\
    \ request\n   packets.  The protocol only allows host-to-gateway connections.\n\
    \   Host-to-gateway flow control is provided by requiring the host to\n   transmit\
    \ request packets to the gateway until an acknowledgment is\n   received.  Rudimentary\
    \ IP address negotiation requires the host to\n   ascertain its IP address from\
    \ the gateway.\n   The protocol does not implement error detection, connection\
    \ status\n   determination, fault detection or option negotiation.  Only\n   asynchronous\
    \ links are supported.\n"
- title: 4.3.3 Proteon p4200 point-to-point protocol
  contents:
  - "4.3.3 Proteon p4200 point-to-point protocol\n   The Proteon p4200 multi-protocol\
    \ router supports transmission of\n   packets over bit-oriented synchronous links\
    \ with a wide range of\n   speeds (zero to 2 Mb/sec).  The p4200 point-to-point\
    \ protocol\n   encapsulates packets inside HDLC frames but does not use the HDLC\n\
    \   address or control fields; these two octets are instead used for a\n   16-bit\
    \ type field.  The p4200 does use the HDLC frame check sequence\n   trailer. \
    \ Protocol type numbers are ad hoc and do not correspond to\n   any existing standard.\
    \  A simple liveness protocol detects dead\n   connections.\n   Although the Proteon\
    \ protocol does meet many of our requirements, it\n   does not meet our requirements\
    \ for option negotiation.\n"
- title: 4.3.4 Ungermann Bass point-to-point protocol
  contents:
  - "4.3.4 Ungermann Bass point-to-point protocol\n   The Ungermann Bass router supports\
    \ synchronous links using simple\n   HDLC framing.  Neither the HDLC address or\
    \ control field are used, IP\n   datagrams are placed immediately after the HDLC\
    \ flag.\n   The U-B protocol does not meet any of our requirements for fault\n\
    \   detection or option negotiation.  No mechanism for future\n   extensibility\
    \ is currently defined.\n"
- title: 4.3.5 Wellfleet point-to-point protocol
  contents:
  - "4.3.5 Wellfleet point-to-point protocol\n   The Wellfleet router supports synchronous\
    \ links using simple HDLC\n   framing.  The HDLC framing procedure uses the HDLC\
    \ address and places\n   the Unnumbered Information (UI) command in all frames.\
    \  A simple\n   header following the UI command provides a two octet type field\
    \ using\n   the same values as Ethernet.\n   The Wellfleet protocol does not meet\
    \ any of our requirements for\n   fault detection or option negotiation.  No mechanism\
    \ for future\n   extensibility is currently defined, although one could be added.\n"
- title: 4.3.6 XNS Synchronous Point-to-Point Protocol
  contents:
  - "4.3.6 XNS Synchronous Point-to-Point Protocol\n   The Xerox Network Systems Synchronous\
    \ Point-to-Point protocol (XNS\n   PPP) [14] was designed to address most of the\
    \ same issues that an\n   ISPPP must address.  In particular, it addresses the\
    \ issues of\n   simplicity, transparency, efficiency, packet framing, protocol\n\
    \   multiplexing, error detection, standard MTUs, symmetry, switched and\n   non-switched\
    \ media, connection status, network address negotiation\n   and future extensibility.\
    \  However, the XNS SPPP does not meet our\n   requirements for multiple data\
    \ link layer protocols, fault detection\n   and data compression negotiation.\
    \  Although protocol multiplexing is\n   provided, the packet type field has only\
    \ 8 bits which is too few.\n"
- title: References
  contents:
  - "References\n   [1]  Postel, J., \"Internet Protocol\", STD 5, RFC 791, USC/Information\n\
    \        Sciences Institute, September 1981.\n   [2]  Postel, J., \"User Datagram\
    \ Protocol\", STD 6, RFC768, USC/Information\n        Sciences Institute, August\
    \ 1980.\n   [3]  Electronic Industries Association, EIA Standard RS-232-C,\n \
    \       \"Interface Between Data Terminal Equipment and Data\n        Communications\
    \ Equipment Employing Serial Binary Data\n        Interchange\", August 1969.\n\
    \   [4]  Mills, D. L., \"DCN Local-Network Protocols\", STD 44, RFC 891,\n   \
    \     University of Delaware, December 1983.\n   [5]  Farber, David J., Delp,\
    \ Gary S., and Conte, Thomas M., \"A\n        Thinwire Protocol for Connecting\
    \ Personal Computers to the\n        Internet\", RFC 914, University of Delaware,\
    \ September 1984.\n   [6]  Finn, G., \"Reliable Asynchronous Transfer Protocol\
    \ (RATP)\",\n        RFC 916, USC/Information Sciences Institute, October 1984.\n\
    \   [7]  Robinson, J., \"Reliable Link Layer Protocols\", RFC 935, BBN,\n    \
    \    January 1985.\n   [8]  Braden, R., and J. Postel, \"Requirements for Internet\n\
    \        Gateways\", STD 4, RFC1009, USC/Information Sciences Institute,\n   \
    \     June 1987.\n   [9]  Romkey, J., \"A Nonstandard for the Transmission of\
    \ IP Datagrams\n        Over Serial Lines: SLIP\", STD 47, RFC 1055, June 1988.\
    \  STD\n        4, RFC 1009, June 1987.\n   [10] ISO International Standard (IS)\
    \ 3309, \"Data Communications -\n        High-level Data Link Control Procedures\
    \ - Frame Structure\",\n        1979.\n   [11] CCITT Recommendation X.25, \"Interface\
    \ Between Data Terminal\n        Equipment (DTE) and Data Circuit Terminating\
    \ Equipment (DCE)\n        for Terminals Operating in the Packet Mode on Public\
    \ Data\n        Networks\", Vol. VIII, Fascicle VIII.2, Rec. X.25.\n   [12] CCITT\
    \ Recommendation Q.921 \"ISDN User-Network Interface Data\n        Link Layer\
    \ Specification\".\n   [13] Romkey, J.L., \"PC/IP Programmer's Manual\", Massachussetts\n\
    \        Institute of Technology Laboratory for Computer Science,\n        January\
    \ 1986.\n   [14] Xerox Corporation, \"Synchronous Point-to-Point Protocol\", Xerox\n\
    \        System Integration Standard, Stamford, Connecticut, XSIS\n        158412,\
    \ December 1984.\n   [15] \"Digital Data Communications Message Protocol\", Digital\n\
    \        Equipment Corporation.\n"
- title: Security Consideration
  contents:
  - "Security Consideration\n   Security issues are not discussed in this memo.\n"
- title: Chair's Address
  contents:
  - "Chair's Address\n   The working group can be contacted via the current chair:\n\
    \      Fred Baker\n      Advanced Computer Communications\n      315 Bollay Drive\n\
    \      Santa Barbara, California  93117\n      EMail: fbaker@acc.com\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Questions about this memo can also be directed to:\n   \
    \   Drew Perkins\n      4015 Holiday Park Drive\n      Murrysville, PA  15668\n\
    \      EMail: perkins+@cmu.edu\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Typographic revision and historical notes by:\n      William\
    \ Allen Simpson\n      1384 Fontaine\n      Madison Heights, Michigan  48071\n\
    \      EMail: Bill.Simpson@um.cc.umich.edu\n"
