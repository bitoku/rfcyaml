Abstract This memo describes a proposed Management Information Base (MIB) for the PSTN/Internet Interworking (PINT) Services Architecture.
Introduction PINT services are an emerging set of new Internet based applications where voice (and fax) requests to the PSTN (Public Switched Telephone Network) are carried over the Internet.
[1] gives a good introduction to the (pre standard) PINT architecture and services.
It also has examples of some of the early implementations of pre  PINT.
This document defines a MIB which contains the elements for monitoring the performance of a PINT based service.
The MIB consists of details of the four basic PINT services and their performance statistics measured under various criteria.
It is not the purpose of this MIB to enable management of the PINT networking elements.
We are concerned only with the PINT specific performance parameters.
While it is understood that PINT service performance is closely related to host and network performance, they are not addressed here.
The SNMP Management Framework presently consists of five major components:   An overall architecture, described in RFC 2571 [2].
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [3], STD 16, RFC 1212 [4] and RFC 1215 [5].
The second version, called SMIv2, is described in STD 58, RFC 2578 [6], RFC 2579 [7] and RFC 2580 [8].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [9].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [10] and RFC 1906 [11].
The third version of the message protocol is called SNMPv3 and described in RFC 1906 [11], RFC 2572 [12] and RFC 2574 [13].
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [9].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [14].
A set of fundamental applications described in RFC 2573 [15] and the view based access control mechanism described in RFC 2575 [16].
A more detailed introduction to the current SNMP Management Framework can be found in RFC 2570 [17].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
The need for PINT services monitoring
MIB Traditionally voice (and fax) requests originate and terminate inside a PSTN network.
This network is well known for robust handling of the requests, in terms of availability and security.
However when the requests originate from the Internet there is a concern both on the part of the user as well as the provider about issues like reliable forwarding of the call requests to the PINT gateway under various network conditions, user/host authentication, secure handling of the user information etc.
Performance and security management becomes all the more important where PINT services cross multiple administrative domains (or providers).
This MIB is an attempt to list the parameters that need to be monitored on an user, PINT client, PINT server and PINT gateway basis.
(PINT services, their invocation methods/protocols and security issues associated with the PINT architecture are discussed in detail in [18]).
Following is a list of some explanations on the MIB definitions that we have chosen to construct.
The basic purpose of this MIB is to monitor the access to PINT services both from the performance and security point of view.
Information may pertain to a certain user or his/her system (PINT client) or
the system providing the PINT services (PINT server) or the PINT gateway that forwards the call to the PSTN network.
We chose to build the configuration table as an extension of the Application MIB RFC 2287 [19] using the augments construct.
Server location and contact might be retrieved from the standard MIB II sysLocation and sysContact objects.
There is no need to replicate this information in the PINT MIB.
However, the PINT administrator may be a different person than the sysadmin with global responsibilities, thus a pintSysContact object is defined.
We chose to monitor the gateway connections from the PINT server.
While the agent runs in the PINT servers, the connections to the gateways might need to be monitored in order to understand what goes on.
We placed them in a separate MIB group, and by using MODULE COMPLIANCE clauses, agents that cannot implement this stuff will not be mandated to do it.
There is no traps definition in this MIB module.
Note that thresholding on counters is always possible by using a standard mechanism defined by the Remote Monitoring MIB, that can be referenced here.
In some MIBs, like the Remote Monitoring (RMON) MIBs, control mechanisms were built in order to activate those statistics on demand.
If needed, a sorting ('topN') mechanism can be designed, so that a sorted view of clients or users is presented for the high level debugging.
We built a time distribution trying to cover both short lived, as well as longer sessions (1 10 secs, 10 secs 1 min., 1 15 min., 15 mins 24 hours, longer).
PintServerClientAddress is defined as a SnmpAdminString.
It may include an IpAddress and/or name, but we preferred to minimize the number of indices at this stage, and keep a human readable format at the same time.
We define pintServerUserIdName as the UserId.
This UserId needs to be unique across multiple PINT servers and gateways (depending on the architecture) and is mapped to the SessionId.
One way to achieve this uniqueness is by appending clientId to the UserId string before sending to the PINT server.
The SessionId could then be a combination of this new UserId and a timestamp.
IMPORTS OBJECT TYPE, Counter32, MODULE IDENTITY, mib 2 FROM   SNMPv2
SMI TEXTUAL CONVENTION FROM SNMPv2
[2] pintMib MODULE IDENTITY LAST UPDATED
"200102010000Z"   1 Feb 2001 ORGANIZATION "
IETF PINT Working Group" CONTACT INFO " Chairs:
Murali Krishnaswamy Postal: 20 Corporate Place South Piscataway, NJ 08854
Dan Romascanu Postal: Atidim Technology Park, Bldg 3 Tel Aviv,
972 3 6458414 E mail:
In Body: subscribe your email addres
http://www.bell labs.com/mailing lists/pint/ " DESCRIPTION "
This MIB defines the objects necessary to monitor PINT Services"
"This TC describes the type of a PINT service."
"This TC describes the statistics period of time.
Note that the values of the counters indexed with a value SinceReboot(4)
can be potentially affected by a counter rollover.
It is the responsibility of the application using this object to take into account that the counter has been zeroed each time it reached a value of (2  32 1)."
read only STATUS current DESCRIPTION "
An indication of version of the PINT protocol supported by this agent."
MAX ACCESS read write STATUS current DESCRIPTION
"Contact information related to the administration of the PINT services."
current DESCRIPTION "Table describing the PINT applications that are installed."
current DESCRIPTION "Entries per PINT Application."
"Textual description of the installed PINT application."
current DESCRIPTION "Table describing the registered gateway applications."
{ pintServerConfig 4 } pintRegisteredGatewayEntry OBJECT TYPE SYNTAX
current DESCRIPTION "Entries per Registered Gateway Application."
current DESCRIPTION "Table displaying the monitored global server statistics."
current DESCRIPTION "Entries in the global statistics table.
One entry is defined for each monitored service type and performance statistics collection period.
} pintServerServiceTypeIndex OBJECT TYPE SYNTAX
MAX ACCESS not accessible STATUS
The unique identifier of the monitored service."
MAX ACCESS not accessible STATUS
current DESCRIPTION "Time period for which the performance statistics are requested from the pint server."
current DESCRIPTION "Table displaying the monitored server client statistics."
current DESCRIPTION "Entries in the client server statistics table.
One entry is defined for each client identified by name, monitored service type and performance statistics collection period.
MAX ACCESS not accessible STATUS
The unique identifier of the monitored client identified by its address represented as as a string."
current DESCRIPTION "Table displaying the monitored Pint service user statistics."
} pintServerUserIdStatsEntry OBJECT TYPE SYNTAX
current DESCRIPTION "Entries in the user statistics table.
One entry is defined for each user identified by name, each monitored service type and performance statistics collection period.
It is assumed that the capabilities of the pint server are enough to accommodate the number of entries in this table.
It is a local server implementation issue if an aging mechanism Is implemented in order to avoid scalability problems.
MAX ACCESS not accessible STATUS
The unique identifier of the monitored user identified by its name."
pintServerUserIdStatsEntry 2 } pintServerUserIdSuccessfulCalls OBJECT TYPE SYNTAX
SEQUENCE OF PintServerGatewayStatsEntry MAX ACCESS
current DESCRIPTION "Table displaying the monitored gateway statistics."
current DESCRIPTION "Entries in the gateway table.
One entry is defined for each gateway identified by name, each monitored service type and performance statistics collection period.
MODULE COMPLIANCE STATUS  current DESCRIPTION
"Describes the requirements for conformance to the PINT MIB.
pintServerGlobalCallsReceived, pintServerGlobalSuccessfulCalls, pintServerGlobalDisconnectedCalls, pintServerGlobalDisCUAutFCalls, pintServerGlobalDisServProbCalls, pintServerGlobalDisGatProbCalls,
pintServerClientCallsReceived, pintServerClientSuccessfulCalls, pintServerClientDisconnectedCalls, pintServerClientDisCAutFCalls, pintServerClientDisEFProbCalls,
pintServerUserIdName, pintServerUserIdCallsReceived, pintServerUserIdSuccessfulCalls, pintServerUserIdDisconnectedCalls, pintServerUserIdDiscUIdAFailCalls, pintServerUserIdEFProbCalls, pintServerGatewayCallsReceived, pintServerGatewaySuccessfulCalls, pintServerGatewayDisconnectedCalls } STATUS  current DESCRIPTION
There is only one management object defined in this MIB that has a MAX ACCESS clause of read write (pintSysContact).
There are no read create objects.
This read write object may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
There are a number of managed objects in this MIB that may contain information that may be sensitive from a business perspective.
One could be the customer identification (UserIdName).
Also information on PINT services performance might itself be need to be guarded.
It is thus important to control even GET access to these objects and possibly to even encrypt the values of these object when sending them over the network via SNMP.
Not all versions of SNMP provide features for such a secure environment.
by itself is not a secure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2574 [13] and the View based Access Control Model RFC 2575
It is then a customer/user responsibility to ensure that the SNMP entity giving access to an instance of this MIB, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
All extensions to the values listed in this MIB must be done through Standards Action processes as defined in RFC 2434 [20].
