- contents:
  - "      Session Initiation Protocol (SIP) Via Header Field Parameter\n                       to
    Indicate Received Realm\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This specification defines a new Session Initiation Protocol (SIP)\n
    \  Via header field parameter, 'received-realm', which allows a SIP\n   entity
    acting as an entry point to a transit network to indicate from\n   which adjacent
    upstream network a SIP request is received by using a\n   network realm value
    associated with the adjacent network.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc8055.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  General . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n     1.2.  Use Case: Transit Network Application Services  . . . .
    .   3\n     1.3.  Use Case: Transit Network Routing . . . . . . . . . . . .   4\n
    \  2.  Applicability . . . . . . . . . . . . . . . . . . . . . . . .   4\n   3.
    \ Conventions . . . . . . . . . . . . . . . . . . . . . . . . .   4\n   4.  Definitions
    . . . . . . . . . . . . . . . . . . . . . . . . .   5\n   5.  Via 'received-realm'
    Header Field Parameter . . . . . . . . .   5\n     5.1.  General . . . . . . .
    . . . . . . . . . . . . . . . . . .   5\n     5.2.  Operator Identifier . . .
    . . . . . . . . . . . . . . . .   5\n     5.3.  JWS Header  . . . . . . . . .
    . . . . . . . . . . . . . .   6\n     5.4.  JWS Payload . . . . . . . . . . .
    . . . . . . . . . . . .   6\n     5.5.  JWS Serialization . . . . . . . . . .
    . . . . . . . . . .   7\n     5.6.  Syntax  . . . . . . . . . . . . . . . . .
    . . . . . . . .   8\n       5.6.1.  General . . . . . . . . . . . . . . . . .
    . . . . . .   8\n       5.6.2.  ABNF  . . . . . . . . . . . . . . . . . . . .
    . . . .   8\n     5.7.  Example: SIP Via Header Field . . . . . . . . . . . .
    . .   8\n   6.  User Agent and Proxy Behavior . . . . . . . . . . . . . . . .
    \  8\n     6.1.  General . . . . . . . . . . . . . . . . . . . . . . . . .   8\n
    \    6.2.  Behavior of a SIP Entity Acting as a Network Entry Point    8\n     6.3.
    \ Behavior of a SIP Entity Consuming the 'received-realm'\n           Value .
    . . . . . . . . . . . . . . . . . . . . . . . . .   9\n   7.  Example: SIP INVITE
    Request and Response  . . . . . . . . . .   9\n   8.  IANA Considerations . .
    . . . . . . . . . . . . . . . . . . .  10\n     8.1.  'received-realm' Via Header
    Field Parameter . . . . . . .  10\n     8.2.  JSON Web Token Claims Registration
    \ . . . . . . . . . . .  10\n   9.  Security Considerations . . . . . . . . .
    . . . . . . . . . .  11\n   10. References  . . . . . . . . . . . . . . . . .
    . . . . . . . .  11\n     10.1.  Normative References . . . . . . . . . . . .
    . . . . . .  11\n     10.2.  Informative References . . . . . . . . . . . . .
    . . . .  12\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .
    . .  13\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .
    \ 14\n"
  title: Table of Contents
- contents:
  - '1.  Introduction

    '
  - contents:
    - "1.1.  General\n   When Session Initiation Protocol (SIP) [RFC3261] sessions
      are\n   established between networks belonging to different operators or\n   between
      interconnected networks belonging to the same operator (or\n   enterprise),
      the SIP requests associated with the session might\n   traverse transit networks.\n
      \  Such transit networks might provide different kinds of services.  In\n   order
      to provide such services, a transit network often needs to know\n   to which
      operator (or enterprise) the adjacent upstream network from\n   which the SIP
      session initiation request is received belongs.\n   This specification defines
      a new SIP Via header field parameter,\n   'received-realm', which allows a SIP
      entity acting as an entry point\n   to a transit network to indicate from which
      adjacent upstream network\n   a SIP request is received by using a network realm
      value associated\n   with the adjacent network.\n   NOTE: As the adjacent network
      can be an enterprise network, an Inter\n   Operator Identifier (IOI) cannot
      be used to identify the network\n   because IOIs are not defined for enterprise
      networks.\n   The following sections describe use cases where the information
      is\n   needed.\n"
    title: 1.1.  General
  - contents:
    - "1.2.  Use Case: Transit Network Application Services\n   The Third Generation
      Partnership Project (3GPP) TS 23.228\n   [TS.3GPP.23.228] specifies how an IP
      Multimedia Subsystem (IMS)\n   network can be used to provide transit functionality.
      \ An operator\n   can use its IMS network to provide transit functionality,
      e.g., to\n   non-IMS customers, to enterprise networks, and to other network\n
      \  operators.\n   The transit network operator can provide application services
      to the\n   networks for which it is providing transit functionality.  Transit\n
      \  application services are typically not provided on a per user basis,\n   as
      the transit network does not have access to the user profiles of\n   the networks
      for which the application services are provided.\n   Instead, the application
      services are provided per served network.\n   When a SIP entity that provides
      application services (e.g., an\n   Application Server) within a transit network
      receives a SIP request,\n   in order to apply the correct services, it needs
      to know the adjacent\n   upstream network from which the SIP request is received.\n"
    title: '1.2.  Use Case: Transit Network Application Services'
  - contents:
    - "1.3.  Use Case: Transit Network Routing\n   A transit network operator normally
      interconnects to many different\n   operators, including other transit network
      operators, and provides\n   transit routing of SIP requests received from one
      operator network\n   towards the destination.  The destination can be within
      an operator\n   network to which the transit network operator has a direct\n
      \  interconnect or within an operator network that only can be reached\n   via
      one or more interconnected transit operators.\n   For each customer (i.e., interconnected
      network operator) for which\n   the transit network operator routes SIP requests
      towards the\n   requested destination, a set of transit routing policies are
      defined.\n   These policies are used to determine how a SIP request shall be\n
      \  routed towards the requested destination to meet the agreement the\n   transit
      network operator has with its customer.\n   When a SIP entity that performs
      the transit routing functionality\n   receives a SIP request, in order to apply
      the correct set of transit\n   routing policies, it needs to know from which
      of its customers (i.e.,\n   adjacent upstream network) the SIP request is received.\n"
    title: '1.3.  Use Case: Transit Network Routing'
  title: 1.  Introduction
- contents:
  - "2.  Applicability\n   The mechanism defined in this specification MUST only be
    used by SIP\n   entities that are able to verify from which adjacent upstream
    network\n   a SIP request is received.\n   The mechanism for verifying from which
    adjacent upstream network a\n   SIP request is received is outside the scope of
    this specification.\n   Such a mechanism might be based on, for instance, receiving
    the SIP\n   request on an authenticated Virtual Private Network (VPN), on a\n
    \  specific IP address, or on a specific network access.\n"
  title: 2.  Applicability
- contents:
  - "3.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in BCP 14, RFC 2119\n
    \  [RFC2119].\n"
  title: 3.  Conventions
- contents:
  - "4.  Definitions\n   SIP entity: A SIP User Agent (UA), or SIP proxy, as defined
    in RFC\n   3261.\n   Adjacent upstream SIP network: The adjacent SIP network in
    the\n   direction from which a SIP request is received.\n   Network entry point:
    A SIP entity on the border of the network, which\n   receives SIP requests from
    adjacent upstream networks.\n   Inter Operator Identifier (IOI): A globally unique
    identifier to\n   correlate billing information generated within the IP Multimedia\n
    \  Subsystem (IMS).\n   JWS: A JSON Web Signature, as defined in [RFC7515].\n"
  title: 4.  Definitions
- contents:
  - '5.  Via ''received-realm'' Header Field Parameter

    '
  - contents:
    - "5.1.  General\n   The Via 'received-realm' header field parameter value is
      represented\n   as a combination of an operator identifier whose value represents
      the\n   adjacent network and a serialized JSON Web Signature (JWS) [RFC7515].\n
      \  The JWS Payload consists of the operator identifier and other SIP\n   information
      element values.\n   The procedures for encoding the JWS and calculating the
      signature are\n   defined in [RFC7515].  As the JWS Payload information is found
      in\n   other SIP information elements, the JWS Payload is detached from the\n
      \  serialized JWS conveyed in the header field parameter, as described\n   in
      Appendix F of [RFC7515].  The operator identifier and the\n   serialized JWS
      are separated using a colon character.\n"
    title: 5.1.  General
  - contents:
    - "5.2.  Operator Identifier\n   The operator identifier is a token value that
      represents the adjacent\n   operator.  The scope of the value is only within
      the network that\n   inserts the value.\n   The operator identifier value is
      case insensitive.\n"
    title: 5.2.  Operator Identifier
  - contents:
    - "5.3.  JWS Header\n   The following header parameters MUST be included in the
      JWS.\n   o  The \"typ\" parameter MUST have a \"JWT\" value.\n   o  The \"alg\"
      parameter MUST have the value of the algorithm used to\n      calculate the
      JWS.\n   NOTE: Operators need to agree on the set of supported algorithms for\n
      \  calculating the JWT signature.\n   NOTE: The \"alg\" parameter values for
      specific algorithms are listed\n   in the IANA JSON Web Signature and Encryption
      Algorithms sub-registry\n   of the JSON Object Signing and Encryption (JOSE)
      registry.  Operators\n   need to use algorithms for which an associated \"alg\"
      parameter value\n   has been registered.  The procedures for defining new values
      are\n   defined in [RFC7518].\n   Example:\n   {\n           \"typ\":\"JWT\",\n
      \          \"alg\":\"HS256\"\n   }\n"
    title: 5.3.  JWS Header
  - contents:
    - "5.4.  JWS Payload\n   The following claims MUST be included in the JWS Payload:\n
      \  o  The \"sip_from_tag\" claim has the value of the From 'tag' header\n      field
      parameter of the SIP message.\n   o  The \"sip_date\" claim has the value of
      the Date header field in the\n      SIP message, encoded in JSON NumericDate
      format [RFC7519].\n   o  The \"sip_callid\" claim has the value of the Call-ID
      header field\n      in the SIP message.\n   o  The \"sip_cseq_num\" claim has
      the numeric value of the CSeq header\n      field in the SIP message.\n   o
      \ The \"sip_via_branch\" claim has the value of the Via branch header\n      field
      parameter of the Via header field, in the SIP message, to\n      which the 'received-realm'
      header field parameter is attached.\n   o  The \"sip_via_opid\" claim has the
      value of the operator identifier\n      part of the Via 'received-realm' header
      field parameter of the Via\n      header field, in the SIP message, to which
      the 'received-realm'\n      header field parameter is attached.\n   Example:\n
      \  {\n           \"sip_from_tag\":\"1928301774\",\n           \"sip_date\":1472815523,\n
      \          \"sip_callid\":\"a84b4c76e66710@pc33.atlanta.com\",\n           \"sip_cseq_num\":\"314159\",\n
      \          \"sip_via_branch\":\"z9hG4bK776asdhds\",\n           \"sip_via_opid\":\"myoperator\"\n
      \  }\n"
    title: 5.4.  JWS Payload
  - contents:
    - "5.5.  JWS Serialization\n   As the JWS Payload is not carried in the 'received-realm'
      parameter,\n   in order to make sure that the sender and the receiver construct
      the\n   JWS Payload object in the same way, the JSON representation of the\n
      \  JWS Payload object MUST be computed as follows:\n   o  All claims MUST be
      encoded using lowercase characters.\n   o  The claims MUST be in the same order
      as listed in Section 5.4.\n   o  All claims except \"sip_date\" MUST be encoded
      as StringOrURI JSON\n      string value [RFC7519].\n   o  The \"sip_date\" claim
      MUST be encoded as a JSON NumericDate value\n      [RFC7519].\n   o  The JWS
      Payload MUST follow the rules for the construction of the\n      thumbprint
      of a JSON Web Key (JWK) as defined in Section 3, Step 1\n      only, of [RFC7638].\n
      \  Example:\n   {\"sip_from_tag\":\"1928301774\",\"sip_date\":1472815523,\n
      \  \"sip_callid\":\"a84b4c76e66710@pc33.atlanta.com\",\n   \"sip_cseq_num\":\"314159\",\"sip_via_branch\":\"z9hG4bK776asdhds\",\n
      \  \"sip_via_opid\":\"myoperator\"}\n   NOTE: Line breaks are for display purposes
      only.\n"
    title: 5.5.  JWS Serialization
  - contents:
    - '5.6.  Syntax

      '
    - contents:
      - "5.6.1.  General\n   This section describes the syntax extensions to the ABNF
        syntax\n   defined in [RFC3261] by defining a new Via header field parameter,\n
        \  'received-realm'.  The ABNF defined in this specification is\n   conformant
        to RFC 5234 [RFC5234].  \"EQUAL\", \"LDQUOT\", \"RDQUOT\", and\n   \"ALPHA\"
        are defined in [RFC3261].  \"DIGIT\" is defined in [RFC5234].\n"
      title: 5.6.1.  General
    - contents:
      - "5.6.2.  ABNF\n   via-params     =/ received-realm\n   received-realm = \"received-realm\"
        EQUAL LDQUOT op-id COLON jws RDQUOT\n   op-id          = token\n   jws            =
        header \"..\" signature\n   header         = 1*base64-char\n   signature      =
        1*base64-char\n   base64-char    = ALPHA / DIGIT / \"/\" / \"+\"\n   EQUAL,
        COLON, token, LDQUOT, RDQUOT, ALPHA, and DIGIT are as defined\n   in [RFC3261].\n
        \  NOTE: The two adjacent dots in the 'jws' part are due to the detached\n
        \  payload being replaced by an empty string [RFC7515].\n"
      title: 5.6.2.  ABNF
    title: 5.6.  Syntax
  - contents:
    - "5.7.  Example: SIP Via Header Field\n   Via: SIP/2.0/UDP pc33.example.com;branch=z9hG4bK776;\n
      \  received-realm=\"myoperator:eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1N..\n   dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\"\n
      \  NOTE: Line breaks are for display purposes only.\n"
    title: '5.7.  Example: SIP Via Header Field'
  title: 5.  Via 'received-realm' Header Field Parameter
- contents:
  - '6.  User Agent and Proxy Behavior

    '
  - contents:
    - "6.1.  General\n   This section describes how a SIP entity, acting as an entry
      point to\n   a network, uses the 'received-realm' Via header field parameter.\n"
    title: 6.1.  General
  - contents:
    - "6.2.  Behavior of a SIP Entity Acting as a Network Entry Point\n   When a SIP
      entity acting as a network entry point forwards a SIP\n   request or initiates
      a SIP request on its own (e.g., a Public\n   Switched Telephone Network (PSTN)
      gateway), the SIP entity adds a Via\n   header field to the SIP request, according
      to the procedures in RFC\n   3261 [RFC3261].  In addition, if the SIP entity
      is able to assert the\n   adjacent upstream network and if the SIP entity is
      aware of a network\n   realm value defined for that network, the SIP entity
      can add a\n   'received-realm' Via header field parameter conveying the network\n
      \  realm value as the operator identifier (Section 5.2) part of the\n   header
      field parameter, to the Via header field added to the SIP\n   request.\n   In
      addition, the SIP entity MUST also calculate a JWS (Section 5.4)\n   and add
      the calculated JWS Header and JWS Signature as the 'jws' part\n   of the Via
      header field parameter.\n"
    title: 6.2.  Behavior of a SIP Entity Acting as a Network Entry Point
  - contents:
    - "6.3.  Behavior of a SIP Entity Consuming the 'received-realm' Value\n   When
      a SIP entity receives a Via 'received-realm' header field\n   parameter and
      intends to perform actions based on the header field\n   parameter value, it
      MUST first recalculate the JWS and check whether\n   the result matches the
      JWS received.  If there is not a match, the\n   SIP entity MUST discard the
      received 'received-realm' header field\n   parameter.  The SIP entity MAY also
      take additional actions (e.g.,\n   rejecting the SIP request) based on local
      policy.\n"
    title: 6.3.  Behavior of a SIP Entity Consuming the 'received-realm' Value
  title: 6.  User Agent and Proxy Behavior
- contents:
  - "7.  Example: SIP INVITE Request and Response\n   This section shows an example
    of a SIP INVITE request and the\n   associated response, which contains a Via
    header field (inserted into\n   the request and removed from the response by the
    T_EP SIP proxy) with\n   a 'received-realm' header field parameter.\n   Operator
    1    T_EP                                 T_AS\n   - INVITE ------>\n     Via:
    SIP/2.0/UDP IP_UA\n                 -- INVITE ---------------------------->\n
    \                   Via: SIP/2.0/UDP IP_TEP;branch=z9hG4bK776;\n                     received-realm=\"myoperator:eyJ0eXAiOiJKV1QiLA0KICJh\n
    \                    bGciOiJIUzI1N..dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW\n                     1gFWFOEjXk\"\n
    \                   Via: SIP/2.0/UDP IP_UA; received=IP_UA\n                 <-
    200 OK ----------------------------\n                    Via: SIP/2.0/UDP IP_TEP;branch=z9hG4bK776;\n
    \                    received-realm=\"myoperator:eyJ0eXAiOiJKV1QiLA0KICJh\n                     bGciOiJIUzI1N..dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW\n
    \                    1gFWFOEjXk\"\n                    Via: SIP/2.0/UDP IP_UA;
    received=IP_UA\n   <- 200 OK------\n      Via: SIP/2.0/UDP IP_UA; received=IP_UA\n"
  title: '7.  Example: SIP INVITE Request and Response'
- contents:
  - '8.  IANA Considerations

    '
  - contents:
    - "8.1.  'received-realm' Via Header Field Parameter\n   This specification defines
      a new Via header field parameter called\n   'received-realm' in the \"Header
      Field Parameters and Parameter\n   Values\" sub-registry created by [RFC3968].
      \ The syntax is defined in\n   Section 5.6.  The required information is:\n
      \                                                 Predefined\n   Header Field
      \           Parameter Name         Values      Reference\n   ----------------------
      \ ---------------------  ----------  ---------\n   Via                     received-realm
      \        No          RFC 8055\n"
    title: 8.1.  'received-realm' Via Header Field Parameter
  - contents:
    - "8.2.  JSON Web Token Claims Registration\n   This specification defines new
      JSON Web Token claims in the \"JSON Web\n   Token Claims\" sub-registry created
      by [RFC7519].\n      Claim Name: sip_from_tag\n      Claim Description: SIP
      From tag header field parameter value\n      Change Controller: IESG\n      Reference:
      RFC 8055, RFC 3261\n      Claim Name: sip_date\n      Claim Description: SIP
      Date header field value\n      Change Controller: IESG\n      Reference: RFC
      8055, RFC 3261\n      Claim Name: sip_callid\n      Claim Description: SIP Call-Id
      header field value\n      Change Controller: IESG\n      Reference: RFC 8055,
      RFC 3261\n      Claim Name: sip_cseq_num\n      Claim Description: SIP CSeq
      numeric header field parameter value\n      Change Controller: IESG\n      Reference:
      RFC 8055, RFC 3261\n      Claim Name: sip_via_branch\n      Claim Description:
      SIP Via branch header field parameter value\n      Change Controller: IESG\n
      \     Reference: RFC 8055, RFC 3261\n"
    title: 8.2.  JSON Web Token Claims Registration
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   As the 'received-realm' Via header field parameter
    can be used to\n   trigger applications, it is important to ensure that the parameter\n
    \  has not been added to the SIP message by an unauthorized SIP entity.\n   The
    'received-realm' Via header field parameter is inserted, signed,\n   verified,
    and consumed within an operator network.  The operator MUST\n   discard parameters
    received from another network, and the parameter\n   MUST only be inserted by
    SIP entities that are able to verify from\n   which adjacent upstream network
    a SIP request is received.\n   The operator also needs to take great care in ensuring
    that the key\n   used to calculate the JWS Signature value is only known by the\n
    \  network entities signing and adding the JWS Signature to the\n   'received-realm'
    Via header field parameter of a SIP message and to\n   network entities verifying
    and consuming the parameter value.\n   The operator MUST use a key management
    policy that protects against\n   unauthorized access to the stored keys within
    nodes where the keys\n   associated with the JWS Signature are stored and that
    protects\n   against cryptoanalysis attacks using captured data sent on the wire.\n
    \  A SIP entity MUST NOT use the adjacent network information if there\n   is
    a mismatch between the JWS Signature received in the SIP header\n   field and
    the JWS Signature calculated by the receiving entity.\n   Generic security considerations
    for JWS are defined in [RFC7515].\n"
  title: 9.  Security Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston,\n              A.,
      Peterson, J., Sparks, R., Handley, M., and E.\n              Schooler, \"SIP:
      Session Initiation Protocol\", RFC 3261,\n              DOI 10.17487/RFC3261,
      June 2002,\n              <http://www.rfc-editor.org/info/rfc3261>.\n   [RFC5234]
      \ Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234, January 2008,\n
      \             <http://www.rfc-editor.org/info/rfc5234>.\n   [RFC7515]  Jones,
      M., Bradley, J., and N. Sakimura, \"JSON Web\n              Signature (JWS)\",
      RFC 7515, DOI 10.17487/RFC7515, May\n              2015, <http://www.rfc-editor.org/info/rfc7515>.\n
      \  [RFC7519]  Jones, M., Bradley, J., and N. Sakimura, \"JSON Web Token\n              (JWT)\",
      RFC 7519, DOI 10.17487/RFC7519, May 2015,\n              <http://www.rfc-editor.org/info/rfc7519>.\n
      \  [RFC7638]  Jones, M. and N. Sakimura, \"JSON Web Key (JWK)\n              Thumbprint\",
      RFC 7638, DOI 10.17487/RFC7638, September\n              2015, <http://www.rfc-editor.org/info/rfc7638>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3968]  Camarillo, G., \"The Internet
      Assigned Number Authority\n              (IANA) Header Field Parameter Registry
      for the Session\n              Initiation Protocol (SIP)\", BCP 98, RFC 3968,\n
      \             DOI 10.17487/RFC3968, December 2004,\n              <http://www.rfc-editor.org/info/rfc3968>.\n
      \  [RFC7518]  Jones, M., \"JSON Web Algorithms (JWA)\", RFC 7518,\n              DOI
      10.17487/RFC7518, May 2015,\n              <http://www.rfc-editor.org/info/rfc7518>.\n
      \  [TS.3GPP.23.228]\n              3GPP, \"IP Multimedia Subsystem (IMS); Stage
      2\", 3GPP\n              TS 23.228 14.1.0, September 2016,\n              <http://www.3gpp.org/ftp/Specs/html-info/23228.htm>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Acknowledgements\n   Thanks to Adam Roach and Richard Barnes for providing comments
    and\n   feedback on the document.  Francis Dupoint performed the Gen-ART\n   review.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Christer Holmberg\n   Ericsson\n   Hirsalantie 11\n   Jorvas
    \ 02420\n   Finland\n   Email: christer.holmberg@ericsson.com\n   Yi Jiang\n   China
    Mobile\n   No.32 Xuanwumen West Street\n   Beijing  Xicheng District 100053\n
    \  China\n   Email: jiangyi@chinamobile.com\n"
  title: Authors' Addresses
