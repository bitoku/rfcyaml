- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                         J. Gilger
  contents:
  - "Independent Submission                                         J. Gilger\n  \
    \           Report from the Smart Object Security Workshop\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a summary of a workshop on 'Smart Object\n\
    \   Security' that took place in Paris on March 23, 2012.  The main goal\n   of\
    \ the workshop was to allow participants to share their thoughts\n   about the\
    \ ability to utilize existing and widely deployed security\n   mechanisms for\
    \ smart objects.\n   This report summarizes the discussions and lists the conclusions\
    \ and\n   recommendations to the Internet Engineering Task Force (IETF)\n   community.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7397.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Workshop Structure ..............................................3\n    \
    \  3.1. Requirements and Use Cases .................................4\n      3.2.\
    \ Implementation Experience ..................................7\n      3.3. Authorization\
    \ .............................................10\n      3.4. Provisioning of\
    \ Credentials ...............................12\n   4. Summary ........................................................14\n\
    \   5. Security Considerations ........................................15\n  \
    \ 6. References .....................................................16\n    \
    \  6.1. Normative References ......................................16\n      6.2.\
    \ Informative References ....................................16\n   Appendix A.\
    \ Program Committee .....................................18\n   Appendix B. Published\
    \ Workshop Material ...........................18\n   Appendix C. Accepted Position\
    \ Papers ..............................18\n   Appendix D. Workshop Participants\
    \ .................................21\n   Acknowledgements ..................................................22\n\
    \   Authors' Addresses ................................................23\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In early 2011, the Internet Architecture Board (IAB) solicited\n\
    \   position statements for a workshop on 'Interconnecting Smart Objects\n   with\
    \ the Internet', aiming to get feedback from the wider Internet\n   community\
    \ on their experience with deploying IETF protocols in\n   constrained environments.\
    \  The workshop took place in Prague on March\n   25, 2011.  During the workshop,\
    \ a range of topics were discussed,\n   including architecture, routing, energy\
    \ efficiency, and security.\n   RFC 6574 [RFC6574] summarizes the discussion and\
    \ suggests several\n   next steps.\n   During the months following the workshop,\
    \ new IETF initiatives were\n   started, such as the Light-Weight Implementation\
    \ Guidance (LWIG)\n   working group, and hackathons were organized at IETF 80\
    \ and IETF 81\n   to better facilitate the exchange of ideas.\n   Contributions\
    \ regarding security from the IETF Constrained RESTful\n   Environments (CoRE)\
    \ working group and the IETF Transport Layer\n   Security (TLS) working group\
    \ made it clear that further discussions\n   on security were necessary and that\
    \ those would have to incorporate\n   implementation and deployment experience\
    \ as well as a shared\n   understanding of how various building blocks fit into\
    \ a larger\n   architecture.\n   The workshop on 'Smart Object Security' was organized\
    \ to bring\n   together various disconnected discussions about smart object\n\
    \   security happening in different IETF working groups and industry\n   fora.\
    \  It was a one-day workshop held prior to the IETF 83 in Paris\n   on March 23,\
    \ 2012.\n   The workshop organizers were particularly interested in getting input\n\
    \   on the following topics, as outlined in the call for position papers:\n  \
    \ o  What techniques for issuing credentials have been deployed?\n   o  What extensions\
    \ are useful to make existing security protocols\n      more suitable for smart\
    \ objects?\n   o  What type of credentials are frequently used?\n   o  What experience\
    \ has been gained when implementing and deploying\n      application-layer, transport-layer,\
    \ network-layer, and link-layer\n      security mechanisms (or a mixture of all\
    \ of them)?\n   o  How can \"clever\" implementations make security protocols\
    \ a better\n      fit for constrained devices?\n   o  Are there lessons we can\
    \ learn from existing deployments?\n   This document lists some of the recurring\
    \ discussion topics at the\n   workshop.  It also offers recommendations from\
    \ the workshop\n   participants.\n   Note that this document is a report on the\
    \ proceedings of the\n   workshop.  The views and positions documented in this\
    \ report are\n   those of the workshop participants and do not necessarily reflect\
    \ the\n   views of the authors or the Internet Architecture Board (IAB).\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses security terminology from [RFC4949] and\
    \ terms\n   related to smart objects from [RFC6574].\n"
- title: 3.  Workshop Structure
  contents:
  - "3.  Workshop Structure\n   With 35 accepted position papers, there was a wealth\
    \ of topics to\n   talk about during the one-day workshop.  The program committee\n\
    \   decided to divide the discussion into four topic areas (\"Requirements\n \
    \  and Use Cases\", \"Implementation Experience\", \"Authorization\", and\n  \
    \ \"Providing Credentials\"), with two or three invited talks per slot to\n  \
    \ get a discussion started.  This section will summarize the points\n   raised\
    \ by the invited speakers as well as the essence of the ensuing\n   discussions.\n"
- title: 3.1.  Requirements and Use Cases
  contents:
  - "3.1.  Requirements and Use Cases\n   To design a security solution, an initial\
    \ starting point is to\n   understand the communication relationships, the constraints,\
    \ and the\n   security threats.  The typical IETF Security Considerations section\n\
    \   describes security threats, security requirements, and security\n   solutions\
    \ at the level of a single protocol or a single document.  To\n   offer a meaningful\
    \ solution for a smart object deployment, it is,\n   however, necessary to go\
    \ beyond this limited view to the analysis of\n   the larger ecosystem.  The security\
    \ analysis documented in [RFC3552]\n   and in [RFC4101] still provides valuable\
    \ guidance.\n   Typical questions that arise are:\n   1.  Who are the involved\
    \ actors?\n       Some usage scenarios look very simple at first but then, after\
    \ a\n       longer investigation, turn out to be quite complex.  The smart\n \
    \      meter deployment, for example, certainly belongs to one of the\n      \
    \ more complex deployments due to the history of the energy sector\n       (see\
    \ [RFC6272]).\n   2.  Who provisions credentials?\n       Credentials may, for\
    \ example, be provisioned by the end user, the\n       hardware manufacturer,\
    \ an application service provider, or other\n       parties.  With security provided\
    \ at multiple layers, credentials\n       from multiple parties may need to be\
    \ provisioned.\n   3.  What constraints are imposed on the design?\n       For\
    \ example, a constraint can be the need to interwork with\n       existing infrastructure.\
    \  From an architectural point of view, an\n       important question is whether\
    \ security is terminated at the\n       border router (or proxy server) at the\
    \ customer's premise or if\n       end-to-end security to servers in the Internet\
    \ is required.  A\n       more detailed discussion can be found at [SMART-OBJECT].\n\
    \   4.  What type of authorization is required by the identified actors?\n   \
    \    This may, for example, be authorization to get access to the\n       network\
    \ or authorization at the application layer.  Authorization\n       decisions\
    \ may be binary or may consist of complex, role-based\n       access control policies.\n\
    \   5.  What tasks are expected by the customer who deploys the solution?\n  \
    \     An end customer may, for example, be expected to enter short PIN\n     \
    \  codes to pair devices, need to update the firmware, or need to\n       connect\
    \ to an appliance via a web browser to make more\n       sophisticated configuration\
    \ settings.  The familiarity of end\n       users with Internet-based devices\
    \ certainly increases constantly,\n       but user-interface challenges contribute\
    \ to a large number of\n       security weaknesses of the Internet and therefore\
    \ have to be\n       taken into account.\n   To illustrate the differences, consider\
    \ a mass-market deployment for\n   end customers in comparison to a deployment\
    \ that is targeting\n   enterprise customers.  In the latter case, enterprise\
    \ system\n   administrators are likely to utilize different management systems\
    \ to\n   provision security and other system-relevant parameters.\n   Paul Chilton\
    \ illustrated the security and usability requirements in a\n   typical end-user\
    \ scenario for small-scale smart lighting systems\n   [PaulChilton].  These systems\
    \ present a substantial challenge for\n   providing usable and secure communication\
    \ because they are supposed\n   to be cheap and very easy to set up, ideally as\
    \ easy as their \"dumb\"\n   predecessors.  The example of IP-enabled light bulbs\
    \ shows that the\n   more constrained devices are, the more difficult it is to\
    \ get\n   security right.  For this reason, and the required usability, light\n\
    \   bulbs might just be the perfect example for examining the viability\n   of\
    \ security solutions.\n   Rudolf van der Berg focused on large-scale deployments\
    \ of smart\n   objects, such as eBook readers, smart meters, and automobiles.\
    \  The\n   use of mobile cellular networks is attractive because they are\n  \
    \ networks with adequate coverage and capacity on a global scale.  In\n   order\
    \ to make use of mobile networks, you need to make use of\n   authentication based\
    \ on Subscriber Identity Modules (SIMs).  However,\n   at this moment, the SIM\
    \ is controlled by the network operator.  These\n   companies could also use EAP-SIM\
    \ (Extensible Authentication Protocol\n   SIM) [RFC4186] authentication in, for\
    \ example, wireless LANs.\n   The end-user interaction may differ depending on\
    \ the credentials\n   being used: for a light bulb deployed in the user's home,\
    \ it is\n   expected that the user somehow configures devices so that only, for\n\
    \   example, family members can turn them on and off.  Smart objects that\n  \
    \ are equipped with SIM-based credential infrastructure do not require\n   credential\
    \ management by the end user since credential management by\n   the operator can\
    \ be assumed.  Switching cellular operators may,\n   however, pose challenges\
    \ for these devices.\n   Furthermore, we have a technology that will be both deployed\
    \ by end\n   users and large enterprise customers.  While the protocol building\n\
    \   blocks may be the same, there is certainly a big difference between\n   deployments\
    \ for large-scale industrial applications and deployments\n   for regular end\
    \ users in terms of the architecture.  Between these\n   two, the security requirements\
    \ differ significantly, as do the\n   threats.  It is difficult, if not impossible,\
    \ to develop a single\n   security architecture that fulfills the needs of all\
    \ users while at\n   the same time meeting the constraints of all kinds of smart\
    \ objects.\n   In the consumer market, security should not incur any overhead\
    \ during\n   installation.  If an end user has to invest more time or effort to\n\
    \   secure a smart object network, he or she will likely not do it.\n   Consumer\
    \ products will often be retrofitted into the existing\n   infrastructure, bought,\
    \ and installed by consumers themselves.  This\n   means that devices will have\
    \ to come pre-installed to some extent and\n   will most likely interoperate only\
    \ with the infrastructure provided\n   by the vendor, i.e., the devices will be\
    \ able to connect to the\n   Internet but will only interoperate with the servers\
    \ provided by the\n   vendor selling the device.\n   Closed systems (one bulb,\
    \ one switch) typically work out of the box,\n   as they have been extensively\
    \ tested and often come with factory-\n   configured security credentials.  Problems\
    \ do arise when additional\n   devices are added or when these closed systems\
    \ get connected to the\n   Internet.  It is still very common to ship devices\
    \ with default\n   passwords.  It is, however, not acceptable that a device is\
    \ in a\n   vulnerable, but Internet-connected, state before it has been\n   correctly\
    \ configured by a consumer.  It is easy to conceive that many\n   consumers do\
    \ not configure their devices properly and may therefore\n   make it easy for\
    \ an adversary to take control of the device by, for\n   example, using the default\
    \ password or outdated firmware.\n   Once security threats for a specific deployment\
    \ scenario have been\n   identified, an assessment takes place to decide what\
    \ security\n   requirements can be identified and what security properties are\n\
    \   desirable for the solution.  As part of this process, a conscious\n   decision\
    \ needs to take place about which countermeasures will be used\n   to mitigate\
    \ certain threats.  For some security threats, the\n   assessment may also lead\
    \ to the conclusion that the threat is\n   considered out-of-scope and, therefore,\
    \ no technical protection is\n   applied.  Different businesses are likely to\
    \ come to different\n   conclusions about the priorities for protection and what\
    \ security\n   requirements will be derived.\n   Which security threats are worthwhile\
    \ to protect against is certainly\n   in the eye of the beholder and remains an\
    \ entertaining discussion\n   even among security specialists.  For some of the\
    \ workshop\n   participants, the security threats against a smart lighting system\n\
    \   were considered relatively minor compared to other smart home\n   appliances.\
    \  Clearly, the threats depend on the specific application\n   domain, but there\
    \ is a certain danger that deployments of vulnerable\n   smart objects will increase.\
    \  As the systems evolve and become more\n   pervasive, additional security features\
    \ may be required and may be\n   difficult to incorporate into the already installed\
    \ base,\n   particularly if smart objects have no software update mechanism\n\
    \   incorporated in their initial design.  Smart objects that require\n   human\
    \ interaction to perform software updates will likely be\n   problematic in the\
    \ future.  This is particularly true for devices\n   that are expected to have\
    \ service schedules of five to twenty-five\n   years.  Experience shows that security\
    \ breaches that are considered\n   pranks usually evolve very rapidly to become\
    \ destructive attacks.\n   Apart from the security requirements of individual\
    \ households and\n   users, it is also important to look at the implications of\n\
    \   vulnerabilities in large-scale smart object deployments, for example,\n  \
    \ in smart meters and the power grid.\n   Finally, there is the usual wealth of\
    \ other requirements that need to\n   be taken into account, such as ability for\
    \ remote configuration and\n   software updates, the ability to deal with transfer\
    \ of ownership of a\n   device, avoidance of operator or vendor lock-in, crypto\
    \ agility,\n   minimal production, license and IPR costs, etc.\n"
- title: 3.2.  Implementation Experience
  contents:
  - "3.2.  Implementation Experience\n   The second slot of the workshop was dedicated\
    \ to reports from first-\n   hand implementation experience.  Various participants\
    \ had provided\n   position papers exploring different security protocols and\n\
    \   cryptographic primitives.  There were three invited talks that\n   covered\
    \ tiny implementations of the Constrained Application Protocol\n   (CoAP) protected\
    \ by Datagram Transport Layer Security (DTLS), a TLS\n   implementation using\
    \ raw public keys, and general experience with\n   implementing public key cryptography\
    \ on smart object devices.\n   All three presenters demonstrated that implementations\
    \ of IETF\n   security protocols on various constraint devices are feasible. \
    \ This\n   was confirmed by other workshop participants as well.  The overall\n\
    \   code size and performance of finished implementations will depend on\n   the\
    \ chosen feature set.  It is fairly obvious that more features\n   translate to\
    \ a more complex outcome.  Luckily, IETF security\n   protocols in general (and\
    \ TLS/DTLS is no exception) can be customized\n   in a variety of ways to fit\
    \ a specific deployment environment.  As\n   such, an engineer will have to decide\
    \ which features are important\n   for a given deployment scenario and what trade-offs\
    \ can be made.\n   There was also the belief that IETF security protocols offer\
    \ useful\n   customization features (such as different ciphersuites in TLS/DTLS)\n\
    \   to select the desired combination of algorithms and cryptographic\n   primitives.\
    \  The need to optimize available security protocols\n   further or to even develop\
    \ new cryptographic primitives for smart\n   objects was questioned and not seen\
    \ as worthwhile by many\n   participants.\n   The three common constraints for\
    \ security implementations on smart\n   objects are code size, energy consumption,\
    \ and bandwidth.  The\n   importance of tailoring a solution to one of these constraints\n\
    \   depends on the specific deployment environment.  It might be\n   difficult\
    \ to develop a solution that addresses all constraints at the\n   same time. \
    \ For example, minimizing memory use may lead to increased\n   communication overhead.\n\
    \   Waiting for the next generation of hardware typically does not\n   magically\
    \ lift the constraints faced today.  The workshop\n   participants again reinforced\
    \ the message that was made at the\n   earlier smart object workshop [RFC6574]\
    \ regarding future developments\n   in the smart object space:\n      While there\
    \ are constantly improvements being made, Moore's law\n      tends to be less\
    \ effective in the embedded system space than in\n      personal computing devices:\
    \ gains made available by increases in\n      transistor count and density are\
    \ more likely to be invested in\n      reductions of cost and power requirements\
    \ than into continual\n      increases in computing power.\n   The above statement\
    \ is applicable to smart object designs in general,\n   not only for security.\
    \  Thus, it is expected that designers will\n   continue having to deal with various\
    \ constraints of smart objects in\n   the future.  A short description of the\
    \ different classes of smart\n   objects can be found in [RFC7228], which also\
    \ provides security-\n   related guidance.  The workshop participants noted that\
    \ making\n   security protocols suitable for smart objects must not water down\n\
    \   their effectiveness.  Security functionality will demand some portion\n  \
    \ of the overall code size.  It will have an impact on the performance\n   of\
    \ communication interactions, lead to higher energy consumption, and\n   certainly\
    \ make the entire product more complex.  Still, omitting\n   security functionality\
    \ because of various constraints is not an\n   option.  The experience with implementing\
    \ available security\n   protocols was encouraging even though the need to make\
    \ various\n   architectural design decisions for selecting the right set of\n\
    \   protocols and protocol extensions that everyone must agree on was\n   pointed\
    \ out.  Sometimes, the leading constraint is energy\n   consumption, and in other\
    \ cases, it is main memory, CPU performance,\n   or bandwidth.  In any case, for\
    \ an optimization, it is important to\n   look at the entire system rather than\
    \ a single protocol or even a\n   specific algorithm.\n   Equally important to\
    \ the code size of the protocols being used in a\n   deployed product are various\
    \ other design decisions, such as the\n   communication model, the number of communication\
    \ partners, the\n   interoperability requirements, and the threats that are being\
    \ dealt\n   with.  Mohit Sethi noted that even the execution time for relatively\n\
    \   expensive operations like asymmetric signature generation and\n   verification\
    \ are within acceptable limits for very constrained\n   devices, like an Arduino\
    \ UNO.  In either case, public key\n   cryptography will likely only be used for\
    \ the initial communication\n   setup to establish symmetric session keys.  Perhaps\
    \ surprisingly, the\n   energy cost of transmitting data wirelessly dwarfs even\
    \ expensive\n   computations like public key cryptography.  Since wireless reception\n\
    \   is actually the most power-consuming task on a smart object,\n   protocols\
    \ have to be designed accordingly.\n   The workshop participants shared the view\
    \ that the complexity of\n   security protocols is a result of desired features.\
    \  Redesigning a\n   protocol with the same set of features will, quite likely,\
    \ lead to a\n   similar outcome in terms of code size, memory consumption, and\n\
    \   performance.  It was, however, also acknowledged that the security\n   properties\
    \ offered by DTLS/TLS/IKEv2-IPsec may not be needed for all\n   deployment environments.\
    \  DTLS, for example, offers an authentication\n   and key exchange framework\
    \ combined with channel security offering\n   data-origin authentication, integrity\
    \ protection, and (optionally)\n   confidentiality protection.\n   The biggest\
    \ optimization in terms of code size can be gained when\n   looking at the complete\
    \ protocol stack, rather than only\n   cryptographic algorithms.  This also includes\
    \ software update\n   mechanisms and configuration mechanisms, all of which have\
    \ to work\n   together.  What may not have been investigated enough is the\n \
    \  potential of performing cross-layer and cross-protocol optimization.\n   We\
    \ also need to think about how many protocols for security setup we\n   want to\
    \ have.  Due to the desire to standardize generic building\n   blocks, the ability\
    \ to optimize for specific deployment environments\n   has been reduced.\n   Finally,\
    \ it was noted that scalability of security protocols does not\n   imply usability.\
    \  This means that while smart object technology might\n   currently be developed\
    \ in large-scale industrial environments, it\n   should be equally usable for\
    \ consumers who want to equip their home\n   with just a few light bulbs.\n  \
    \ For details about the investigated protocol implementations, please\n   consult\
    \ the position papers, such as the ones by Bergmann et al.,\n   Perelman et al.,\
    \ Tschofenig, and Raza et al. (see Appendix C).\n"
- title: 3.3.  Authorization
  contents:
  - "3.3.  Authorization\n   The discussion slot on authorization was meant to provide\
    \ an idea of\n   what kind of authorization decisions are common in smart object\n\
    \   networks.  Authorization is defined as an \"approval that is granted\n   to\
    \ a system entity to access a system resource\" [RFC4949].\n   Authorization requires\
    \ a view on the entire smart object lifecycle to\n   determine when and how a\
    \ device was added to a specific environment,\n   what permissions have been granted\
    \ for this device, and how users are\n   allowed to interact with it.  On a high\
    \ level, there are two types of\n   authorization schemes.  First, there are those\
    \ systems that utilize\n   an authenticated identifier and match it against an\
    \ access control\n   list.  Second, there are trait-based authorization mechanisms\
    \ that\n   separate the authenticated identifier from the authorization rights\n\
    \   and utilize roles and other attributes to determine whether to grant\n   or\
    \ deny access to a protected resource.\n   Richard Barnes looked at earlier communication\
    \ security work and\n   argued that the model that dominates the web today will\
    \ not be enough\n   for the smart object environment.  Simply identifying users\
    \ by their\n   credentials and servers via certificates is not something that\n\
    \   translates well to smart object networks because it binds all the\n   capabilities\
    \ to the credentials.  The evolution in access control is\n   moving in the direction\
    \ of granting third parties certain\n   capabilities, with OAuth [RFC6749] being\
    \ an example of a currently\n   deployed technology.  Access to a resource using\
    \ OAuth can be done\n   purely based on the capabilities rather than on the authenticated\n\
    \   identifier.\n   At the time of the workshop, OAuth was very much focused on\n\
    \   HTTP-based protocols with early efforts to integrate OAuth into the\n   Simple\
    \ Authentication and Security Layer (SASL) and the Generic\n   Security Service\
    \ Application Program Interface (GSS-API)\n   [SASL-OAUTH].  Further investigations\
    \ need to be done to determine\n   the suitability of OAuth as a protocol for\
    \ the smart object\n   environment.\n   Richard believed that it is important\
    \ to separate authentication from\n   authorization right from the beginning and\
    \ to consider how users are\n   supposed to interact with these devices to introduce\
    \ them into their\n   specific usage environment (and to provision them with credentials)\n\
    \   and to manage access from different parties.\n   The relationship between\
    \ the policy enforcement point and the policy\n   decision point plays an important\
    \ role regarding the standardization\n   needs and the type of information that\
    \ needs to be conveyed between\n   these two entities.\n   For example, in an\
    \ Authentication, Authorization, and Accounting\n   (AAA) context, the authorization\
    \ decision happens at the AAA server\n   (after the user requesting access to\
    \ a network or some application-\n   level services had been authenticated). \
    \ Then, the decision about\n   granting access (or rejecting it) is communicated\
    \ from the AAA server\n   to the AAA client at the end of the network access authentication\n\
    \   procedure.  The AAA client then typically enforces the authorization\n   decision\
    \ over the lifetime of the granted user session.  The dynamic\n   authorization\
    \ extension [RFC5176] to the RADIUS protocol, for\n   example, also allows the\
    \ RADIUS server to make dynamic changes to a\n   previously granted user session.\
    \  This includes support for\n   disconnecting users and changing authorizations\
    \ applicable to a user\n   session.\n   The authorization decisions can range\
    \ from 'only devices with\n   passwords can use the network' to very detailed\
    \ application-specific\n   authorization policies.  The decisions are likely to\
    \ be more\n   sophisticated in those use cases where ownership of devices may\
    \ be\n   transferred from one person to another one, group membership concepts\n\
    \   may be needed, access rights may be revocable, and fine-grained\n   access\
    \ rights have to be used.  The authorization decisions may also\n   take environmental\
    \ factors into account, such as proximity of devices\n   to each other, physical\
    \ location of the device asking access, or the\n   level of authentication.  With\
    \ the configuration of authorization\n   policies, questions arise regarding who\
    \ will create them and where\n   these policies are stored.  This immediately\
    \ raises questions about\n   how devices are identified and who is allowed to\
    \ create these\n   policies.\n   Since smart objects may be limited in terms of\
    \ code size, persistent\n   storage, and Internet connectivity, established authorization\
    \ schemes\n   may not be well suited for such devices.  Obviously, delegating\
    \ every\n   authorization decision to another node in the network incurs a\n \
    \  certain network overhead, while storing sophisticated access control\n   policies\
    \ directly on the smart object might be prohibitive because of\n   the size of\
    \ such a ruleset.  Jan Janak presented one approach to\n   distribute access control\
    \ policies to smart objects within a single\n   administrative domain.\n   In\
    \ those cases where access control decisions are bound to the\n   identifiers\
    \ of devices and humans need to either create or verify\n   these access control\
    \ policies, the choice of identifier matters for\n   readability and accessibility\
    \ purposes.\n   A single mechanism will likely not help with solving the wide\
    \ range\n   of authorization tasks.  From the discussions, it was not clear\n\
    \   whether there is a need for new authorization mechanisms or whether\n   existing\
    \ mechanisms can be reused.  Examples of available protocols\n   with built-in\
    \ authorization mechanisms are Kerberos, OAuth, EAP/AAA,\n   attribute certificates,\
    \ etc.  In many cases, it is even conceivable\n   that the authorization decisions\
    \ are internal to the system and that\n   there is no need to standardize any\
    \ additional authorization\n   mechanisms or protocols at all.  In fact, many\
    \ of the authentication\n   and key exchange protocols have authorization mechanisms\
    \ built in.\n"
- title: 3.4.  Provisioning of Credentials
  contents:
  - "3.4.  Provisioning of Credentials\n   When a smart object is to be introduced\
    \ into an environment, like a\n   home or an enterprise network, it usually has\
    \ to be provisioned with\n   some credentials first.  The credentials that are\
    \ configured at the\n   smart object and at some entity in the network are often\
    \ an implicit\n   authorization to access the network or some other resource.\
    \  The\n   provisioned information at the smart object will include some\n   identifier\
    \ of the smart object, keying material, and other\n   configuration information\
    \ (e.g., specific servers it has to interact\n   with).\n   Some devices will\
    \ be pre-configured with default security codes or\n   passwords, or will have\
    \ per-device or per-user credentials\n   pre-configured, when they are bought\
    \ or when they arrive at the\n   customer.\n   There is a limited set of solutions\
    \ available (based on the available\n   interface support).  The solutions for\
    \ imprinting vary between the\n   enterprise and the consumer household scenarios.\
    \  For large-scale\n   deployments, the time needed to pair two objects further\
    \ excludes\n   other schemes that rely on manual steps.\n   Johannes Gilger dealt\
    \ with the very basic ideas behind pairing\n   schemes, including the kinds of\
    \ out-of-band channels that could be\n   employed and their limitations.  Imprinting\
    \ and pairing protocols\n   usually establish a security association between two\
    \ equal devices,\n   such as Bluetooth-equipped cell phones.  To deal with man-in-the-\n\
    \   middle attacks during this phase, various forms of additional\n   verification\
    \ checks exist.  For example, devices with a display allow\n   numeric values\
    \ to be shown on each device and let the user verify\n   whether they match. \
    \ For other devices that have a keypad, a PIN may\n   need to be entered by the\
    \ user.  Where and how a smart object is to\n   be paired with other devices in\
    \ the network can differ substantially\n   from the specific use cases and the\
    \ hardware capabilities of devices.\n   Note that pairing is not necessarily something\
    \ that is only done once\n   during the lifetime of a device.  Is group pairing\
    \ something to be\n   looked at?  Or can any group key establishment be reduced\
    \ to pairwise\n   pairing with a central master device?\n   Cullen Jennings presented\
    \ a model for smart objects based on a\n   deployment used for IP phones.  The\
    \ idea was that the smart object\n   \"phones home\", i.e., contacts a server\
    \ offered by the manufacturer,\n   when it is first switched on.  This initial\
    \ interaction can then be\n   used for managing the device and provisioning keying\
    \ material for\n   further use.  Proof of ownership could be done by identifying\
    \ the\n   user who purchased the device.  This is an approach that is\n   increasingly\
    \ being done today.  Another option is some kind of secret\n   information enclosed\
    \ in the packaging.\n   For interface-constrained devices, the solution of using\
    \ (semi)-\n   public information in combination with an online manufacturer during\n\
    \   imprinting seems like a possible solution.  This solution approach\n   created\
    \ a lot of discussion among the participants, as it assumes an\n   Internet connection\
    \ and means that the manufacturer effectively knows\n   about the trust relationships\
    \ of all the devices it sells.\n   A few questions did arise with such a model:\
    \ Will there be third\n   parties that have a business interest in providing something\
    \ like key\n   distribution and key escrow over the lifetime of a smart object?\
    \  For\n   constrained devices, will it always be possible to fall back to the\n\
    \   existing security associations between device and manufacturer to\n   create\
    \ new associations?  Obviously, we do not want the lifetime of a\n   smart object\
    \ limited by the manufacturer product support lifespan.\n   What happens if a\
    \ manufacturer goes bankrupt, changes its business\n   scope, or gets bought by\
    \ another company?  Will end customers not be\n   able to use their smart objects\
    \ anymore in such a case, or will they\n   lose the ability to resell their devices\
    \ because the ownership can no\n   longer be transferred?\n   One important design\
    \ decision is that the compromise of the\n   manufacturer must not have any impact\
    \ on the smart objects, which\n   have already been imprinted to their new owners.\
    \  Furthermore, the\n   question arises of how to transfer ownership, e.g., when\
    \ reselling a\n   device.  While this may not be a requirement for all devices,\
    \ there\n   will likely be classes of large or expensive devices where support\n\
    \   for transferring the ownership is an absolute necessity.\n   Industrial users\
    \ are comfortable when they have to rely on the\n   manufacturer during the imprinting\
    \ phase, but they want to be in\n   exclusive control over their devices afterwards.\n\
    \   There are many classes of devices where we could assume online\n   connectivity\
    \ to be present; otherwise, these devices would not make\n   sense in the first\
    \ place.  But, there are also other devices that\n   need to be imprinted completely\
    \ offline.\n   Is it important to worry about security vulnerabilities, such as\n\
    \   man-in-the-middle attacks, during the very short imprinting phase?\n   Is\
    \ it realistic that an adversary is in close proximity to mount an\n   attack?\
    \  Especially for devices with limited capabilities, such as\n   light bulbs,\
    \ the concerns seemed rather small.\n   What happens if such a device is not enrolled\
    \ by the customer but\n   still connected in a \"naked\" state?  How does this\
    \ impact security,\n   and is it possible for an attacker to perform a \"drive-by\"\
    \ enrollment\n   procedure of many devices?  How should a device behave in this\n\
    \   situation?  The safest option (for the user at least) would be to not\n  \
    \ allow the device to work with full functionality if it has not been\n   enrolled.\
    \  This concern is particularly applicable for cases where\n   smart objects are\
    \ sold with default passwords or passwords using\n   semi-public information;\
    \ an example is Raspberry Pi computers with\n   Linux images that use a default\
    \ password [RaspberryPi].\n"
- title: 4.  Summary
  contents:
  - "4.  Summary\n   Designing for a smart object environment is about making an\n\
    \   optimization decision that needs to take technical aspects, usage\n   scenarios,\
    \ security threats, and business models into account.  Some\n   design constraints\
    \ may be considered fixed while others are flexible.\n   Compromises will need\
    \ to be made, but they should not be made at the\n   expense of security functionality.\n\
    \   Designing a software update mechanism into the system is crucial to\n   ensure\
    \ that functionality can be enhanced and vulnerabilities can be\n   fixed.  Also,\
    \ security threats are perceived differently over time.\n   For example, many\
    \ people considered pervasive monitoring less\n   important prior to the Snowden\
    \ revelations.\n   New research and standardization on cryptographic algorithms\
    \ (like\n   encryption algorithms, hash functions, keyed message digests, and\n\
    \   public key crypto systems) that are tailored to smart object\n   environments\
    \ was not seen as worthwhile by the participants.  A huge\n   range of algorithms\
    \ already exist, and standardized authentication\n   and key exchange protocols\
    \ can be customized to use almost any\n   selection of algorithms available today.\n\
    \   The integration of various building blocks into a complete system was\n  \
    \ considered important, and this document highlights a number of those\n   areas\
    \ in Section 3.  Searching for a single, universally applicable\n   smart object\
    \ security architecture was seen as a hopeless journey\n   given the large number\
    \ of use cases, business models, and\n   constraints.\n   In response to the workshop,\
    \ follow-up work happened in a number of\n   areas (and standardization activities\
    \ are still ongoing).  Here are a\n   few examples:\n   o  The Light-Weight Implementation\
    \ Guidance (LWIG) working group was\n      created to offer a venue to collect\
    \ experiences from implementers\n      of IP stacks, including security protocols,\
    \ in constrained\n      devices.  The ability to tune IETF protocols via extensions\
    \ and\n      parameter choices gives implementers a lot of flexibility to meet\n\
    \      the constraints of a smart object environment.\n   o  The DTLS In Constrained\
    \ Environments (DICE) working group was\n      formed to define a DTLS profile\
    \ that is suitable for Internet of\n      Things applications and is reasonably\
    \ implementable on many\n      constrained devices, and to define how the DTLS\
    \ record layer can\n      be used to transmit multicast messages securely.  DTLS\
    \ is seen as\n      an important enabling technology for securing communication\n\
    \      interactions by smart objects.\n   o  A new working group has been formed\
    \ to standardize an\n      authentication and authorization protocol for constrained\n\
    \      environments offering a dynamic and fine-grained access control\n     \
    \ mechanism where clients and resource servers are constrained and\n      therefore\
    \ have to make use of a trusted third party.  At the time\n      of writing this\
    \ document, the Authentication and Authorization for\n      Constrained Environments\
    \ (ACE) working group has just been\n      started.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This whole document is a report on the 'Smart\
    \ Object Security\n   Workshop'.  The focus of this workshop was on security only;\
    \ privacy\n   was not part of the workshop agenda.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC6574]  Tschofenig, H. and J. Arkko, \"Report\
    \ from the Smart Object\n              Workshop\", RFC 6574, April 2012,\n   \
    \           <http://www.rfc-editor.org/info/rfc6574>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [PaulChilton]\n              Chilton, P., \"\
    Experiences and Challenges in using\n              constrained Smart Objects\"\
    , March 2012,\n              <http://www.lix.polytechnique.fr/hipercom/\n    \
    \          SmartObjectSecurity/papers/PaulChilton.pdf>.\n   [RFC3552]  Rescorla,\
    \ E. and B. Korver, \"Guidelines for Writing RFC\n              Text on Security\
    \ Considerations\", BCP 72, RFC 3552,\n              July 2003, <http://www.rfc-editor.org/info/rfc3552>.\n\
    \   [RFC4101]  Rescorla, E. and IAB, \"Writing Protocol Models\", RFC 4101,\n\
    \              June 2005, <http://www.rfc-editor.org/info/rfc4101>.\n   [RFC4186]\
    \  Haverinen, H. and J. Salowey, \"Extensible Authentication\n              Protocol\
    \ Method for Global System for Mobile\n              Communications (GSM) Subscriber\
    \ Identity Modules\n              (EAP-SIM)\", RFC 4186, January 2006,\n     \
    \         <http://www.rfc-editor.org/info/rfc4186>.\n   [RFC4949]  Shirey, R.,\
    \ \"Internet Security Glossary, Version 2\",\n              RFC 4949, August 2007,\n\
    \              <http://www.rfc-editor.org/info/rfc4949>.\n   [RFC5176]  Chiba,\
    \ M., Dommety, G., Eklund, M., Mitton, D., and B.\n              Aboba, \"Dynamic\
    \ Authorization Extensions to Remote\n              Authentication Dial In User\
    \ Service (RADIUS)\", RFC 5176,\n              January 2008, <http://www.rfc-editor.org/info/rfc5176>.\n\
    \   [RFC6272]  Baker, F. and D. Meyer, \"Internet Protocols for the Smart\n  \
    \            Grid\", RFC 6272, June 2011,\n              <http://www.rfc-editor.org/info/rfc6272>.\n\
    \   [RFC6749]  Hardt, D., \"The OAuth 2.0 Authorization Framework\",\n       \
    \       RFC 6749, October 2012,\n              <http://www.rfc-editor.org/info/rfc6749>.\n\
    \   [RFC7228]  Bormann, C., Ersue, M., and A. Keranen, \"Terminology for\n   \
    \           Constrained-Node Networks\", RFC 7228, May 2014,\n              <http://www.rfc-editor.org/info/rfc7228>.\n\
    \   [RaspberryPi]\n              Raspberry Pi Foundation, \"Raspberry Pi\", February\
    \ 2013,\n              <http://www.raspberrypi.org>.\n   [SASL-OAUTH]\n      \
    \        Mills, W., Showalter, T., and H. Tschofenig, \"A set of\n           \
    \   SASL Mechanisms for OAuth\", Work in Progress,\n              draft-ietf-kitten-sasl-oauth-18,\
    \ November 2014.\n   [SMART-OBJECT]\n              Tschofenig, H., Arkko, J.,\
    \ Thaler, D., and D. McPherson,\n              \"Architectural Considerations\
    \ in Smart Object Networking\",\n              Work in Progress, draft-iab-smart-object-architecture-06,\n\
    \              October 2014.\n"
- title: Appendix A.  Program Committee
  contents:
  - "Appendix A.  Program Committee\n   The workshop was organized by the following\
    \ individuals:\n   o  Hannes Tschofenig\n   o  Jari Arkko\n   o  Carsten Bormann\n\
    \   o  Peter Friess\n   o  Cullen Jennings\n   o  Antonio Skarmeta\n   o  Zach\
    \ Shelby\n   o  Thomas Heide Clausen\n"
- title: Appendix B.  Published Workshop Material
  contents:
  - "Appendix B.  Published Workshop Material\n   o  Main Workshop Page\n      <http://www.lix.polytechnique.fr/hipercom/SmartObjectSecurity>\n\
    \   o  Position Papers\n      <http://www.lix.polytechnique.fr/hipercom/SmartObjectSecurity/\n\
    \      papers>\n   o  Slides\n      <http://www.lix.polytechnique.fr/hipercom/SmartObjectSecurity/\n\
    \      slides>\n"
- title: Appendix C.  Accepted Position Papers
  contents:
  - "Appendix C.  Accepted Position Papers\n   1.   Michael Richardson, \"Challenges\
    \ in Smart Object Security: too\n        many layers, not enough ram\"\n   2.\
    \   Mitsuru Kanda, Yoshihiro Ohba, Subir Das, Stephen Chasko, \"PANA\n       \
    \ applicability in constrained environments\"\n   3.   Randy Bush, \"An Operational\
    \ View of Trust Needs of Moving\n        Objects\"\n   4.   Andrei Gurtov, Ilya\
    \ Nikolaevsky, Andrey Lukyanenko, \"Using HIP\n        DEX for Key Management\
    \ and Access Control in Smart Objects\"\n   5.   Jens-Matthias Bohli, \"Access\
    \ Tokens for the IoT\"\n   6.   Martina Brachmann, Oscar Garcia-Morchon, Sye-Loong\
    \ Keoh, Sandeep\n        S. Kumar, \"Security Considerations around End-to-End\
    \ Security in\n        the IP-based Internet of Things\"\n   7.   Kazunori Miyazawa,\
    \ \"Convergence of Smart Objects in industrial\n        wireless sensor network\"\
    \n   8.   Thomas Bartzsch, Dirk Burggraf, Laura Cristina Gheorghe, Alexis\n  \
    \      Olivereau, Nouha Oualha, Emil Slusanschi, Dan Tudose, Markus\n        Wehner,\
    \ Sven Zeisberg, \"AAA-based Infrastructure for Industrial\n        Wireless Sensor\
    \ Networks\"\n   9.   Fida Khattak, Philip Ginzboorg, Valtteri Niemi, Jan-Erik\
    \ Ekberg,\n        \"Role of Border Router in 6LoWPAN Security\"\n   10.  Thomas\
    \ Fossati, Angelo Castellani, Salvatore Loreto,\n        \"(Un)trusted Intermediaries\
    \ in CoAP\"\n   11.  Rene Hummen, Christian Roeller, Klaus Wehrle, \"Modeling\
    \ User-\n        defined Trust Overlays for the IP-based Internet of Things\"\n\
    \   12.  Sam Hartman, Margaret Wasserman, \"Federation, ABFAB and Smart\n    \
    \    Devices\"\n   13.  Cary Bran, Joseph Stachula, \"Device Pairing: Lessons\
    \ Learned\"\n   14.  Jan Janak, Hyunwoo Nam, Henning Schulzrinne, \"On Access\
    \ Control\n        in the Internet of Things\"\n   15.  Rene Struik, \"Cryptography\
    \ and Security for Highly Constrained\n        Networks\"\n   16.  Zhen Cao, Hui\
    \ Deng, Judy Zhu, \"The Architecture of Open Security\n        Capability\"\n\
    \   17.  Sujing Zhou, Zhenhua Xie, \"On Cryptographic Approaches to\n        Internet-Of-Things\
    \ Security\"\n   18.  Nancy Cam-Winget, Monique Morrow, \"Security Implications\
    \ to\n        Smart Addressable Objects\"\n   19.  Jouni Korhonen, \"Applying\
    \ Generic Bootstrapping Architecture for\n        use with Constrained Devices\"\
    \n   20.  Olaf Bergmann, Stefanie Gerdes, Carsten Bormann, \"Simple Keys\n   \
    \     for Simple Smart Objects\"\n   21.  Mohit Sethi, Jari Arkko, Ari Keranen,\
    \ Heidi-Maria Rissanen,\n        \"Practical Considerations and Implementation\
    \ Experiences in\n        Securing Smart Object Networks\"\n   22.  Paul Chilton,\
    \ \"Experiences and Challenges in using constrained\n        Smart Objects\"\n\
    \   23.  Vladislav Perelman, Mehmet Ersue, \"TLS with PSK for Constrained\n  \
    \      Devices\"\n   24.  Richard Barnes, \"Security for Smart Objects beyond\
    \ COMSEC:\n        Principals and Principles\"\n   25.  Rudolf van der Berg, \"\
    OECD Publication on Machine-to-Machine\n        Communications: Connecting Billions\
    \ of Devices\", OECD Digital\n        Economy Papers, No. 192, OECD Publishing\n\
    \   26.  Cullen Jennings, \"Transitive Trust Enrollment for Constrained\n    \
    \    Devices\"\n   27.  Barbara Fraser, Paul Duffy, Maik Seewald, \"Smart Objects:\n\
    \        Security Challenges from the Power Sector\"\n   28.  Hannes Tschofenig,\
    \ \"Smart Object Security: Considerations for\n        Transport Layer Security\
    \ Implementations\"\n   29.  Johannes Gilger, Ulrike Meyer, \"Secure Pairing &\
    \ Context\n        Management\"\n   30.  Klaas Wierenga, \"Scalable Authentication\
    \ for Smart Objects\"\n   31.  Dirk Stegemann, Jamshid Shokrollahi, \"Security\
    \ in the Internet\n        of Things - Experiences from Use Cases\"\n   32.  Alper\
    \ Yegin, \"Credentials for Smart Objects: A Challenge for the\n        Industry\"\
    \n   33.  Shahid Raza, Thiemo Voigt, Vilhelm Jutvik, \"Lightweight IKEv2: A\n\
    \        Key Management Solution for both the Compressed IPsec and the\n     \
    \   IEEE 802.15.4 Security\"\n   34.  Eric Rescorla, \"A Brief Survey of Imprinting\
    \ Options for\n        Constrained Devices\"\n   35.  Fred Baker, \"Security in\
    \ distributed telemetry and control\n        networks\"\n"
- title: Appendix D.  Workshop Participants
  contents:
  - "Appendix D.  Workshop Participants\n   We would like to thank the following participants\
    \ for attending the\n   workshop:\n   o  Jari Arkko\n   o  Carsten Bormann\n \
    \  o  Cullen Jennings\n   o  Antonio Skarmeta\n   o  Sean Turner\n   o  Thomas\
    \ Heide Clausen\n   o  Hannes Tschofenig\n   o  Michael Richardson\n   o  Yoshihiro\
    \ Ohba\n   o  Subir Das\n   o  Randy Bush\n   o  Andrei Gurtov\n   o  Ilya Nikolaevsky\n\
    \   o  Andrey Lukyanenko\n   o  Jens-Matthias Bohli\n   o  Kazunori Miyazawa\n\
    \   o  Philip Ginzboorg\n   o  Fida Khattak\n   o  Angelo Castellani\n   o  Salvatore\
    \ Loreto\n   o  Rene Hummen\n   o  Klaus Wehrle\n   o  Sam Hartman\n   o  Margaret\
    \ Wasserman\n   o  Cary Bran\n   o  Jan Janak\n   o  Rene Struik\n   o  Zhen Cao\n\
    \   o  Hui Deng\n   o  Zhou Sujing\n   o  Xie Zhenhua\n   o  Monique Morrow\n\
    \   o  Nancy Cam-Winget\n   o  Jouni Korhonen\n   o  Ari Keranen\n   o  Paul Chilton\n\
    \   o  Vladislav Perelman\n   o  Mehmet Ersue\n   o  Richard Barnes\n   o  Rudolf\
    \ van der Berg\n   o  Barbara Fraser\n   o  Johannes Gilger\n   o  Sye Loong Keoh\n\
    \   o  Olaf Bergmann\n   o  Stefanie Gerdes\n   o  Klaus Hartke\n   o  Oualha\
    \ Nouha\n   o  Alexis Olivereau\n   o  Alper Yegin\n   o  Klaas Wierenga\n   o\
    \  Jiazi Yi\n   o  Juan Antonio Cordero Fuertes\n   o  Antonin Bas\n   o  David\
    \ Schinazi\n   o  Valerie Lecomte\n   o  Ulrich Herberg\n   o  Shahid Raza\n \
    \  o  Stephen Farrell\n   o  Eric Rescorla\n   o  Thomas Fossati\n   o  Mohit\
    \ Sethi\n   o  Alan Duric\n   o  Guido Moritz\n   o  Sebstian Unger\n   o  Hans\
    \ Loehr\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   We would like to thank the participants and the authors\
    \ of the\n   position papers for their input.\n   Special thanks go to Thomas\
    \ Heide Clausen and Ecole Polytechnique\n   (Paris) for providing the venue and\
    \ organization.\n   Finally, we would like to thank Rudolf van der Berg for his\
    \ review\n   comments.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Johannes Gilger\n   Mies-van-der-Rohe-Str. 15\n   Aachen\
    \  52074\n   Germany\n   Phone: +49 (0)241 80 20 781\n   EMail: Gilger@ITSec.RWTH-Aachen.de\n\
    \   Hannes Tschofenig\n   Hall in Tirol  6060\n   Austria\n   EMail: Hannes.tschofenig@gmx.net\n\
    \   URI:   http://www.tschofenig.priv.at\n"
