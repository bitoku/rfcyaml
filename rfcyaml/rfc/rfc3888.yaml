- title: __initial_text__
  contents:
  - '                Message Tracking Model and Requirements

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: Abstract
  contents:
  - "Abstract\n   Customers buying enterprise message systems often ask: Can I track\n\
    \   the messages?  Message tracking is the ability to find out the path\n   that\
    \ a particular message has taken through a messaging system and\n   the current\
    \ routing status of that message.  This document provides a\n   model of message\
    \ tracking that can be used for understanding the\n   Internet-wide message infrastructure\
    \ and to further enhance those\n   capabilities to include message tracking, as\
    \ well as requirements for\n   proposed message tracking solutions.\n"
- title: 1.  Problem Statement
  contents:
  - "1.  Problem Statement\n   Consider sending a package through a package delivery\
    \ company.  Once\n   you've sent a package, you would like to be able to find\
    \ out if the\n   package has been delivered or not, and if not, where that package\n\
    \   currently is and what its status is.  Note that the status of a\n   package\
    \ may not include whether it was delivered to its addressee,\n   but just the\
    \ destination.  Many package carriers provide such\n   services today, often via\
    \ a web interface.\n   Message tracking extends that capability to the Internet-wide\
    \ message\n   infrastructure, analogous to the service provided by package\n \
    \  carriers:  the ability to quickly locate where a message (package)\n   is,\
    \ and to determine whether or not the message (package) has been\n   delivered\
    \ to its final destination.  An Internet-standard approach\n   will allow the\
    \ development of message tracking applications that can\n   operate in a multi-vendor\
    \ messaging environment, and will encourage\n   the operation of the function\
    \ across administrative boundaries.\n   The key words \"MUST\", \"MUST NOT\",\
    \ \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [RFC-KEYWORDS].\n"
- title: 2.  Definitions
  contents:
  - "2.  Definitions\n   The following terms are relevant to message tracking.  The\
    \ terms\n   Tracking User Agent and Tracking Server are new, while all other\n\
    \   terms have been collected here from other sources.\n   Originating Mail User\
    \ Agent (MUA)\n             The originating mail user agent is the software used\
    \ to\n             compose and originate a message.  It is the software\n    \
    \         sitting on a person's desktop.\n   Originating Mail Submission Agent\
    \ (MSA)\n             The Mail Submission Agent accepts a message from a User\n\
    \             Agent, adds or modifies it as required for Internet\n          \
    \   standards and/or site policy, and injects the message into\n             the\
    \ network.  The MSA may be the initial MTA or may hand\n             off the message\
    \ to an MTA.\n   Message Transfer Agent (MTA)\n             A Message Transfer\
    \ Agent accepts a message and moves it\n             forward towards its destination.\
    \  That destination may be\n             local or reached via another MTA.  It\
    \ may use a local queue\n             to store the message before transferring\
    \ it further.  Any\n             MTA may generate a Non-Delivery Notification.\n\
    \   Intermediate Message Transfer Agent (MTA)\n             An Intermediate MTA\
    \ is an MTA that accepts a message for\n             transfer somewhere else.\n\
    \   Final Message Transfer Agent (MTA)\n             A Final MTA is an MTA that\
    \ accepts a message for local\n             delivery.  It is the final place that\
    \ a message is\n             accepted.  The final MTA is what sends any Delivery\
    \ Status\n             Notifications (DSNs).  (Intermediate MTA's may also send\
    \ a\n             DSN if it relays to a non-DSN aware MTA.)\n   Foreign Message\
    \ Transfer Agent\n             A foreign MTA provides delivery of messages using\
    \ other\n             protocols than those specified for Internet mail, such as\n\
    \             an X.400 mail system.\n   Gateway Message Transfer Agent (GW-MTA)\n\
    \             A gateway MTA accepts a message for transfer to a foreign\n    \
    \         MTA outside of the Internet protocol space.\n   Local Delivery Agent\
    \ (LDA)\n             The local Delivery Agent delivers the message to the local\n\
    \             message store.  (The MTA and LDA are often combined into\n     \
    \        the same program.)\n   Delivery Status Notification (DSN)\n         \
    \    A Delivery Status Notification [RFC-DSN] is produced by an\n            \
    \ MTA when a message is unsuccessfully delivered, either to\n             its\
    \ next hop or the final message store, or when it is\n             successfully\
    \ delivered, either to a foreign MTA, to a local\n             delivery agent,\
    \ or a non-DSN aware MTA.  Positive\n             notifications are only performed\
    \ [RFC-ESMTP-DSN] when\n             specifically requested.\n   Non-Delivery\
    \ Notification (NDN)\n             A non-delivery notification is a special form\
    \ of DSN\n             indicating unsuccessful delivery.\n   Message Disposition\
    \ Notification (MDN)\n             A Message Disposition Notification is used\
    \ to report the\n             disposition of a message after it has been successfully\n\
    \             delivered to a recipient.\n   Tracking User Agent (TUA)\n      \
    \       A tracking user agent wants to find information on a\n             message\
    \ on the behalf of a user.  It is the requestor or\n             initiator of\
    \ such a request.  (The MUA and TUA could be\n             combined into the same\
    \ program.)\n   Tracking Server\n             A tracking server provides tracking\
    \ information to a\n             tracking client.  It is the repository of the\
    \ information\n             about a message for the traversal through a particular\
    \ MTA.\n             (The tracking server and MTA may run on the same system.)\n"
- title: 3.  Entities
  contents:
  - "3.  Entities\n   The entities involved in message tracking are: message user\
    \ agents,\n   message submission agents, message transfer agents, tracking user\n\
    \   agents and tracking servers.\n"
- title: 4.  Requirements
  contents:
  - "4.  Requirements\n   These are requirements that any message tracking solution\
    \ must be\n   able to satisfy:\n   The message tracking solution:\n   **   MUST\
    \ scale to the internet.\n   **   MUST be easy to deploy.\n   **   SHOULD maximize\
    \ the reuse of existing, already deployed\n        technology and infrastructure.\n\
    \   **   If possible, SHOULD extend existing protocols and not invent new\n  \
    \      ones.\n   **   SHOULD have a low implementation cost.  (This makes it easy\
    \ to\n        incorporate into existing products.)\n   **   MUST restrict tracking\
    \ of a message to the originator of the\n        message (or a delegate).\n  \
    \ **   MUST be able to do authentication.\n   **   MAY allow an originator to\
    \ delegate this responsibility to a\n        third party.\n   **   SHOULD have\
    \ the property that they would allow per-message\n        delegation of the tracking\
    \ responsibility.\n   **   MUST require a tracking user agent to prove that they\
    \ are\n        permitted to request the tracking information.\n   **   MUST be\
    \ able to uniquely identify messages.\n   **   MUST require every message to have\
    \ unique identification.\n"
- title: 5.  Interaction Models
  contents:
  - "5.  Interaction Models\n   There are several models by which tracking of messages\
    \ can be\n   enabled, by which messages can be tracked, and by which information\n\
    \   can be requested and gathered.\n"
- title: 5.1.  Tracking Enabling Models
  contents:
  - "5.1.  Tracking Enabling Models\n   Either the envelope or message header must\
    \ contain enough information\n   to track a message and securely retrieve information\
    \ about the\n   message.  Any message that does not have enough information to\
    \ track\n   it is by definition not trackable.\n   If there is not enough information\
    \ available in current standard\n   envelopes or message headers, then the current\
    \ standards will need to\n   be extended.  Either the MUA or MSA must determine\
    \ the additional\n   information and enable the tracking by adding the additional\n\
    \   information to either the envelope or header.\n   This leads to two tracking\
    \ enabling models: passive enabling and\n   active enabling.\n"
- title: 5.1.1.  Passive Enabling Model
  contents:
  - "5.1.1.  Passive Enabling Model\n   The \"passive enabling\" model assumes that\
    \ there is sufficient\n   information available.  No UA or MSA interaction occurs\
    \ to turn\n   tracking on; it is on by default.\n"
- title: 5.1.2.  Active Enabling Model
  contents:
  - "5.1.2.  Active Enabling Model\n   The \"active enabling\" model requires that\
    \ the MUA and MSA exchange\n   information when the message is submitted.  This\
    \ exchange indicates\n   that logging of the message's traversal should be performed,\
    \ as well\n   as providing enough additional information to allow the message\
    \ to be\n   tracked.  This information will need to be passed on to subsequent\n\
    \   MTAs as needed.\n"
- title: 5.2.  Tracking Request Models
  contents:
  - "5.2.  Tracking Request Models\n   There are several models by which tracking\
    \ information may be\n   requested.\n"
- title: 5.2.1.  Passive Request Model
  contents:
  - "5.2.1.  Passive Request Model\n   The \"passive request\" model requires active\
    \ enabling to indicate that\n   some form of tracking is to be performed.  The\
    \ tracking information\n   can be sent back immediately (as a form of telemetry)\
    \ or sent to a\n   3rd party for later retrieval.\n"
- title: 5.2.2.  Passive Request Tracking Information
  contents:
  - "5.2.2.  Passive Request Tracking Information\n   Forms of passive tracking information\
    \ that could potentially be\n   requested are as follows.  Note that mechanisms\
    \ already exist for\n   requesting the information marked with a (+).  The references\
    \ for\n   such mechanisms are listed at the end of each such entry.\n   **   send\
    \ a DSN of a message arriving at an intermediate MTA\n   **   (+) send a DSN of\
    \ a message being rejected while at an\n        intermediate MTA [RFC-DSN]\n \
    \  **   (+) send a DSN of a message leaving an intermediate MTA and\n        going\
    \ to another MTA [RFC-DELIVER-BY]\n   **   send a DSN of a message arriving at\
    \ a final MTA\n   **   (+) send a DSN of a message being rejected while at a final\
    \ MTA\n        [RFC-DSN]\n   **   (+) send a DSN of a message being delivered\
    \ to a user's message\n        store [RFC-DSN]\n   **   (+) send a DSN of a message\
    \ being delivered to a foreign MTA\n        [RFC-DSN]\n   **   (+) send an MDN\
    \ of a message being read by an end user [RFC-MDN]\n"
- title: 5.3.  Active Request Model
  contents:
  - "5.3.  Active Request Model\n   The \"active request\" model requires an active\
    \ query by a user's user\n   agent to the MSA, intermediate MTAs and final MTA,\
    \ or to a third\n   party, to find the message's status as known by that MTA.\
    \  Active\n   request will work with either passive enabling or active enabling.\n"
- title: 5.3.1.  Server Chaining vs. Server Referrals
  contents:
  - "5.3.1.  Server Chaining vs. Server Referrals\n   When a tracking server has been\
    \ asked for tracking information, and\n   the message has been passed on to another\
    \ MTA of which this tracking\n   server has no tracking knowledge, there are two\
    \ modelling choices:\n   **   the first tracking server will contact the next\
    \ tracking server\n        to query for status and pass back the combined status\
    \ (server\n        chaining), or\n   **   the first tracking server will return\
    \ the address of the next\n        MTA and the tracking client has the responsibility\
    \ of contacting\n        the next tracking server (server referrals).\n"
- title: 5.3.2.  Active Request Tracking Information
  contents:
  - "5.3.2.  Active Request Tracking Information\n   Forms of active tracking information\
    \ that could potentially be\n   requested are as follows.  (Note that no mechanisms\
    \ currently exist\n   for requesting such information.)\n   **   the message has\
    \ been queued for later delivery\n   **   the message was delivered locally\n\
    \   **   the message was delivered to another MTA,\n   **   the message was delivered\
    \ to a foreign MTA\n   **   ask a different tracking server,\n   **   I know but\
    \ can't tell you,\n   **   I don't know.\n"
- title: 5.4.  Combining DSN and MDN Information with Message Tracking
  contents:
  - "5.4.  Combining DSN and MDN Information with Message Tracking\n      Information\n\
    \   The information that would be retrieved by message tracking and the\n   information\
    \ that is returned for DSN and MDN requests all attempt to\n   answer the question\
    \ of \"what happened to message XX\"?  The\n   information provided by each is\
    \ complimentary in nature, but similar.\n   A tracking user agent could use all\
    \ three possible information\n   sources  to present a total view of the status\
    \ of a message.\n   Both DSN and MDN notifications utilize the formats defined\
    \ by RFC\n   3462 [RFC-REPORT].  This suggests that the information returned by\n\
    \   message tracking solutions should also be similar.\n"
- title: 6.  Security Considerations
  contents:
  - '6.  Security Considerations

    '
- title: 6.1.  Security Considerations Summary
  contents:
  - "6.1.  Security Considerations Summary\n   Security vulnerabilities are detailed\
    \ in [RFC-MTRK-ESMTP], [RFC-\n   MTRK-TSN] and [RFC-MTRK-MTQP].  These considerations\
    \ include:\n   **   vulnerability to snooping or replay attacks when using\n \
    \       unencrypted sessions\n   **   a dependency on the randomness of the per-message\
    \ secret\n   **   reliance on TLS\n   **   man-in-the-middle attacks\n   **  \
    \ reliance on the server maintaining the security level when it\n        performs\
    \ chaining\n   **   denial of service\n   **   confidentiality concerns\n   **\
    \   forgery by malicious servers\n"
- title: 6.2.  Message Identification and Authentication
  contents:
  - "6.2.  Message Identification and Authentication\n   This is a security model\
    \ for message identification and\n   authentication that could be deployed.  (There\
    \ may be others.)\n   A Tracking User Agent must prove that they are permitted\
    \ to request\n   tracking information about a message.  Every [RFC-822]-compliant\n\
    \   message is supposed to contain a Message-Id header.  One possible\n   mechanism\
    \ is for the originator to calculate a one-way hash A from\n   the message ID\
    \ + time stamp + a per-user secret.  The user then\n   calculates another one-way\
    \ hash B to be the hash of A.  The user\n   includes B in the submitted message,\
    \ and retains A.  Later, when the\n   user makes a message tracking request to\
    \ the messaging system or\n   tracking entity, it submits A in the tracking request.\
    \  The entity\n   receiving the tracking request then uses A to calculate B, since\
    \ it\n   was already provided B, verifying that the requestor is authentic.\n\
    \   In summary,\n      A = H(message ID + time stamp + secret)\n      B = H(A)\n\
    \   Another possible mechanism for A is to ignore the message ID and time\n  \
    \ stamp and just use a one-way hash from a large (>128 bits) random\n   number.\
    \  B would be calculated as before.  In summary,\n      A = H(large-random-number)\n\
    \      B = H(A)\n   This is similar in technique to the methods used for One-Time\n\
    \   Passwords [RFC-OTP].  The success of these techniques is dependent on\n  \
    \ the randomness of the per-user secret or the large random number,\n   which\
    \ can be incredibly difficult in some environments.\n   If the originator of a\
    \ message were to delegate his or her tracking\n   request to a third party by\
    \ sending it A, this would be vulnerable to\n   snooping over unencrypted sessions.\
    \  The user can decide on a\n   message-by-message basis if this risk is acceptable.\n"
- title: 7.  Informational References
  contents:
  - "7.  Informational References\n   [RFC-822]          Crocker, D., \"Standard for\
    \ the format of ARPA\n                      Internet text messages\", STD 11,\
    \ RFC 822, August\n                      1982.\n   [RFC-DELIVER-BY]   Newman,\
    \ D., \"Deliver By SMTP Service Extension\",\n                      RFC 2852,\
    \ June 2000.\n   [RFC-DSN]          Moore, K., and G. Vaudreuil, \"An Extensible\n\
    \                      Message Format for Delivery Status Notifications\",\n \
    \                     RFC 3464, January 2003.\n   [RFC-ESMTP-DSN]    Moore, K.,\
    \ \"Simple Mail Transfer Protocol (SMTP)\n                      Service Extension\
    \ for Delivery Status\n                      Notifications (DSNs)\", RFC 3461,\
    \ January 2003.\n   [RFC-KEYWORDS]     Bradner, S., \"Key words for use in RFCs\
    \ to\n                      Indicate Requirement Levels\", BCP 14, RFC 2119,\n\
    \                      March 1997.\n   [RFC-MDN]          Hansen, T. and G. Vaudreuil,\
    \ Eds., \"Message\n                      Disposition Notifications\", RFC 3798,\
    \ May 2004.\n   [RFC-OTP]          Haller, N., Metz, C., Nesser, P. and M. Straw,\
    \ \"A\n                      One-Time Password System\", STD 61, RFC 2289,\n \
    \                     February 1998.\n   [RFC-REPORT]       Vaudreuil, G., \"\
    The Multipart/Report Content Type\n                      for the Reporting of\
    \ Mail System Administrative\n                      Messages\", RFC 3462, January\
    \ 2003.\n   [RFC-MTRK-ESMTP]   Allman, E. and T. Hansen, \"SMTP Service Extension\n\
    \                      for Message Tracking\", RFC 3885, September 2004.\n   [RFC-MTRK-TSN]\
    \     Allman, E., \"The Message/Tracking-Status MIME\n                      Extension\"\
    , RFC 3886, September 2004.\n   [RFC-MTRK-MTQP]    Hansen, T., \"Message Tracking\
    \ Query Protocol\", RFC\n                      3887, September 2004.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   This document is the product of input from many people\
    \ and many\n   sources, including all of the members of the Message Tracking Working\n\
    \   Group: Philip Hazel, Alexey Melnikov, Lyndon Nerenberg, Chris Newman,\n  \
    \ and Gregory Neil Shapiro.  It owes much to earlier work by Gordon\n   Jones,\
    \ Bruce Ernst, and Greg Vaudreuil.  In particular, I'd like to\n   also thank\
    \ Ken Lin for his considerable contributions to the early\n   versions of the\
    \ document.\n"
- title: 9.  Author's Address
  contents:
  - "9.  Author's Address\n   Tony Hansen\n   AT&T Laboratories\n   Middletown, NJ\
    \ 07748\n   USA\n   Phone: +1.732.420.8934\n   EMail: tony+msgtrk@maillennium.att.com\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n\
    \   This document is subject to the rights, licenses and restrictions\n   contained\
    \ in BCP 78, and except as set forth therein, the authors\n   retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/S HE\n  \
    \ REPRESENTS OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET\
    \ ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING\
    \ BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL\
    \ NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR\
    \ FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ IETF's procedures with respect to rights in IETF Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
