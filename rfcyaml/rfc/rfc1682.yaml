- title: __initial_text__
  contents:
  - '                 IPng BSD Host Implementation Analysis

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document was submitted to the IETF IPng area in response to\
    \ RFC\n   1550.  Publication of this document does not imply acceptance by the\n\
    \   IPng area of any ideas expressed within.  Comments should be\n   submitted\
    \ to the big-internet@munnari.oz.au mailing list.\n"
- title: Overview
  contents:
  - "Overview\n   This IPng white paper, IPng BSD Host Implementation Analysis,\n\
    \   was submitted to the IPng Directorate to provide a BSD host point of\n   reference\
    \ to assist with the engineering considerations during the\n   IETF process to\
    \ select an IPng proposal.  The University of\n   California Berkeley Software\
    \ Distribution (BSD) TCP/IP (4.3 + 4.4)\n   system implementation on a host is\
    \ used as a point of reference for\n   the paper.\n   This document only reflects\
    \ the author's personal analysis based on\n   research and implementation experience\
    \ for IPng, and does not\n   represent any product or future product from any\
    \ host vendor.  Nor\n   should it be construed that it is promoting any specific\
    \ IPng at this\n   time.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The author would like to acknowledge the many host implementation\n\
    \   discussions and inherent knowledge gained from discussions with the\n   following\
    \ persons within Digital over the past year: Peter Grehan,\n   Eric Rosen, Dave\
    \ Oran, Jeff Mogul, Bill Duane, Tony Lauck, Bill Hawe,\n   Jesse Walker, John\
    \ Dustin, Alex Conta, and Fred Glover.  The author\n   would also like to acknowledge\
    \ like discussions from outside his\n   company with Bob Hinden (SUN), Bob Gilligan\
    \ (SUN), Dave Crocker\n   (SGI), Dave Piscitello (Core Competence), Tracy Mallory\
    \ (3Comm), Rob\n   Ullmann (Lotus), Greg Minshall (Novell), J Allard (Microsoft),\
    \ Ramesh\n   Govinden (Bellcore), Sue Thompson (Bellcore), John Curran (NEARnet),\n\
    \   Christian Huitema (INRIA), and Werner Volgels (INESC).  The author\n   would\
    \ also like to thank Digital Equipment Corporation for the\n   opportunity to\
    \ work on IPng within the IETF as part of his job.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   A host in the context of this white paper is a system that\
    \ contains\n   an operating system supporting a network subsystem as one of its\n\
    \   parts, and an interprocess communications facility to access that\n   network\
    \ subsystem.  These hosts are often referenced as a\n   Workstation, Server, PC,\
    \ Super Computer, Mainframe, or an Embedded\n   System (Realtime Devices).\n \
    \  IPng will require changes to a hosts network software architecture.\n   Those\
    \ changes should be as transparent as possible to the existing\n   IPv4 applications\
    \ executing on hosts.\n   After discussing the network software architecture for\
    \ a BSD host the\n   paper will discuss the perceived network software alterations,\n\
    \   extended capabilities, transition software, and a deployment\n   consideration\
    \ for IPng hosts.\n   The inclusive OR of all IPng proposals was used to develop\
    \ the\n   engineering considerations discussed in this paper.\n"
- title: 2. Network Software Architecture
  contents:
  - "2. Network Software Architecture\n   The BSD host network software architecture\
    \ consists essentially of\n   three components: the interprocess communications\
    \ facility, the\n   network communications subsystem, and the network protocols\n\
    \   supported. These three components are tightly coupled and must be\n   integrated\
    \ in a way that affords high performance for the\n   applications that are dependent\
    \ on these components to interoperate\n   efficiently.  A BSD host implementation\
    \ view of the TCP/IP protocol\n   suite is depicted in the following network architecture\
    \ diagram.\n   +-----------------------------------------------------------------+\n\
    \   |                        Application Layer                        |\n   |\
    \                                                                 |\n   |    \
    \            Socket and Network Library APIs                  |\n   |        \
    \                                                         |\n   |  BIND DNS  \
    \                                                     |\n   |  SNMP Management\
    \                                                |\n   |                     \
    \     User Space                             |\n   +-----------------------------------------------------------------+\n\
    \   |                         Kernel Space          AF_INET           |\n   |\
    \                                        Communications Domain    |\n   |  Socket\
    \ Layer                                                   |\n   |            \
    \                                                     |\n   |                \
    \     Transport Layer TCP & UDP                   |\n   |                    \
    \                           Queues/Control    |\n   |                        \
    \                         Blocks          |\n   |                        Network\
    \ Layer                            |\n   |              +-----------------------------------+\
    \              |\n   |              | IPv4 Modules  Discovery Multicast |    \
    \          |\n   |              |                ICMP       IGMP    |        \
    \      |\n   |              |                   Routing         |   Routing  \
    \  |\n   |              |                RIP        EGP     |   Tables     |\n\
    \   |              |                OSPF       BGP     |              |\n   |\
    \              |                I-IS-IS    IDRP    |              |\n   |    \
    \          +-----------------------------------+              |\n   |        \
    \             Link Dependent Layer                        |\n   |            \
    \  +-----------------------------------+              |\n   |              | ARP,\
    \ RARP, InARP, NCPs, Addr Tbls |              |\n   |              +-----------------------------------+\
    \              |\n   |  Discovery & Interface                                \
    \          |\n   |      Cache                                                \
    \      |\n   |                     Data Link Layer                           \
    \  |\n   |              +-----------------------------------+              |\n\
    \   |              | Ethernet, FDDI, ATM, HIPPI, PPP   |              |\n   |\
    \              +-----------------------------------+              |\n   +-----------------------------------------------------------------+\n"
- title: 2.1 Interprocess Communications Facility
  contents:
  - "2.1 Interprocess Communications Facility\n   The interprocess communications\
    \ (IPC) facilities includes three\n   critical parts:\n      1.  The IPC mechanism\
    \ to the network communications subsystem.\n      2.  The ability to access a\
    \ network protocol set within that\n          subsystem.\n      3.  The structures\
    \ supporting the network communications\n          subsystem.\n   The IPC facility\
    \ has two implementation parts.  The part in user\n   space and the part in kernel\
    \ space within the operating system. This\n   is often not differentiated and\
    \ why in the previous network\n   architecture diagram you will see sockets in\
    \ both user and kernel\n   space.  An IPC supports in user space an application\
    \ program\n   interface (API) which application developers use to access the\n\
    \   network communications features of the host. These APIs have\n   corresponding\
    \ functions in the kernel space which execute the\n   functions requested by the\
    \ user space requests through the APIs.\n   The sockets paradigm on a BSD host\
    \ defines the data structure of the\n   network address within a selected protocol\
    \ family (communications\n   domain) in the network subsystem.  This data structure\
    \ consists of an\n   address family, a port for the protocol selected, and a network\n\
    \   address.\n   The IPC facility on a host is dependent upon its interface to\
    \ the\n   BIND DNS application which is the defacto method when using TCP/IP to\n\
    \   retrieve network addresses.\n   Other interfaces that may be required by applications\
    \ to properly set\n   up the network connection within the IPC facility include:\n\
    \   setting/getting options for the protocols used, obtaining/accessing\n   information\
    \ about networks, protocols, and network services, and\n   sending/transmitting\
    \ datagrams.\n"
- title: 2.2 Network Communications Subsystem
  contents:
  - "2.2 Network Communications Subsystem\n   The network communications subsystem\
    \ consists of the following\n   generic parts as depicted in the previous network\
    \ architecture\n   diagram: transport layer, network layer, link dependent layer,\
    \ and\n   data link layer.  These may not be implemented as true distinct\n  \
    \ layers on a BSD host, but they are referenced in this white paper in\n   that\
    \ manner for purposes of discussion.\n   The transport layer supports the application\
    \ interface into the\n   network communications subsystem and sets up the parametric\
    \ pieces to\n   initiate and accept connections.  The transport layer performs\
    \ these\n   functions through requests to the lower layers of the network\n  \
    \ communications subsystem.  The transport layer also supports the\n   queues\
    \ and protocol control blocks for specific network connections.\n   The network\
    \ layer supports the modules to build and extend the\n   network layer datagram,\
    \ the control protocol datagrams, and the\n   routing abstraction on the host.\
    \  This layer of the network\n   communications subsystem on a BSD host is often\
    \ extended to provide\n   both interior and exterior routing functionality.\n\
    \   The link dependent layer supports the modules that provide an\n   interface\
    \ for the network communications subsystem to map network\n   addresses to physical\
    \ addresses, and build the necessary cache so\n   this information is available\
    \ to the host network software.\n   On a BSD host the network layer and link dependent\
    \ layer together\n   provide system discovery for hosts and routers.\n   The data\
    \ link layer supports the modules that define the structures\n   for communicating\
    \ with the hardware media used by the host on the\n   local network.\n"
- title: 2.3 Network Protocols
  contents:
  - "2.3 Network Protocols\n   The TCP/IP protocol suite as defined by the IETF RFC\
    \ specifications\n   are the set of network protocols used by this white paper\
    \ for\n   reference.\n"
- title: 3. Network Software Alterations
  contents:
  - "3. Network Software Alterations\n   The IPng network software alterations to\
    \ a BSD host perceived at this\n   time are as follows:\n      1.  Applications\
    \ Embedding IPv4 Addresses.\n      2.  Transport Interfaces and Network APIs.\n\
    \      3.  Socket Layer and Structures.\n      4.  Transport Layer.\n      5.\
    \  Network Layer Components.\n      6.  Link dependent Layer.\n"
- title: 3.1 Applications Embedding IPv4 Addresses
  contents:
  - "3.1 Applications Embedding IPv4 Addresses\n   Internet style applications in\
    \ this white paper are the set of\n   protocols defined for an end user using\
    \ TCP/IP to exchange messages,\n   transfer files, and establish remote login\
    \ sessions.\n   Applications use the sockets network APIs to maintain an opaque\
    \ view\n   of the network addresses used to support connections across a\n   network.\
    \ Opaque in this context means that the application determines\n   the network\
    \ address for the connection and then binds that address to\n   a socket.  The\
    \ application then uses the reference defined for that\n   socket to receive and\
    \ transmit data across a network.\n   An application that embeds an IPv4 network\
    \ address within its\n   datagram has made an underlying assumption that the format\
    \ of that\n   address is permanent.  This will cause a great problem when IPng\n\
    \   causes addresses to change.  Thus far only one Internet style\n   application\
    \ has been determined to cause this problem and that is FTP\n   [1,2].\n"
- title: 3.2 Transport Interfaces and Network APIs
  contents:
  - "3.2 Transport Interfaces and Network APIs\n   The transport interface and network\
    \ API enhancements that must take\n   place on a BSD host because of IPng are\
    \ alterations that affect the\n   size of the network address used by the socket\
    \ data structure.\n   Depending on how this is implemented on the host, supporting\
    \ both\n   IPv4 and IPng could require existing IPv4 applications to be\n   recompiled.\
    \  In the worst case it could require modifications to the\n   existing IPv4 applications\
    \ software that accesses the network\n   communications subsystem.\n   There will\
    \ have to be enhancements to the network APIs that an\n   application uses to\
    \ retrieve BIND DNS records to differentiate\n   between IPv4 and IPng address\
    \ requests.\n   The network API enhancements and how they are implemented will\
    \ affect\n   the capability of any IPng proposal on a BSD host to be able to\n\
    \   interoperate between an IPv4 only, an IPng only, and an IPng-IPv4\n   host\
    \ system.\n   Depending on the IPng proposal selected the network options,\n \
    \  services, and management objects will have to be extended at the\n   transport\
    \ interface so those features can be accessed by applications\n   software.\n"
- title: 3.3 Socket Layer and Structures
  contents:
  - "3.3 Socket Layer and Structures\n   The socket layer and structures will require\
    \ changes to support any\n   IPng proposals network address.  In addition new\
    \ or removed options\n   and services will need to be incorporated into the socket\
    \ abstraction\n   within the network communications subsystem.\n"
- title: 3.4 Transport Layer
  contents:
  - "3.4 Transport Layer\n   The transport layer will need to be modified to support\
    \ any new or\n   removed services proposed by an IPng solution set.  The transport\n\
    \   layer will become more overloaded to support the binding of either\n   the\
    \ IPv4 or IPng network layer components to differentiate the\n   services and\
    \ structures available to a host application.  The\n   overload will also take\
    \ place to support functionality removed in the\n   network layer and moved to\
    \ the transport layer if proposed by an IPng\n   solution.\n   It will also take\
    \ some design thought to implement IPng so the\n   hundreds of man years invested\
    \ in performance improvements in the\n   host transport layer are maintained.\
    \   This must be analyzed in depth\n   and should be part of the operational testing\
    \ of any IPng proposal.\n"
- title: 3.5 Network Layer Components
  contents:
  - "3.5 Network Layer Components\n   The network layer components for IPng will require\
    \ the greatest\n   alterations on a host.  In addition a host will be required\
    \ to\n   maintain an integrated network layer below the transport layer\n   software\
    \ to support either the IPng or IPv4 network layer and\n   associated components.\n\
    \   Depending on the IPng selected the host alterations to the network\n   layer\
    \ components will range from complete replacement with new\n   protocols to extensions\
    \ to existing IPv4 network layer protocols to\n   support IPng.\n   All IPng proposals\
    \ will affect the BSD host routing abstraction to\n   maintain host software that\
    \ supports interior and exterior routing.\n   Depending on the proposal selected\
    \ those changes can cause either a\n   complete new paradigm or an update to the\
    \ existing IPv4 paradigm.\n   System discovery of nodes on the local subnetwork\
    \ or across an\n   internetwork path in all IPng proposals will require changes\
    \ to the\n   BSD host software network layer component.\n"
- title: 3.6 Link dependent Layer
  contents:
  - "3.6 Link dependent Layer\n   The link dependent layer on a host will need to\
    \ accommodate new IPng\n   addresses and the system discovery models of any IPng\
    \ proposal.\n"
- title: 4. Extended Capabilities with IPng
  contents:
  - "4. Extended Capabilities with IPng\n   Extended capabilities that could be implemented\
    \ by BSD hosts are\n   listed below.  Many of these capabilities exist today with\
    \ IPv4, but\n   may require changes with the implementation of IPng.  Some of\
    \ them\n   will be new capabilities.\n"
- title: 4.1 Autoconfiguration and Autoregistration
  contents:
  - "4.1 Autoconfiguration and Autoregistration\n   Today hosts can provide autoconfiguration\
    \ with DHCP using IPv4\n   addresses. IPng hosts will be faced with having to\
    \ provide support\n   for existing IPv4 addresses and the new IPng addresses.\
    \  In addition\n   the boot-strap protocol BOOTP used to boot minimal BSD host\n\
    \   configurations (e.g., diskless nodes) will need to be supported by\n   IPng\
    \ hosts.\n"
- title: 4.2 PATH MTU Discovery
  contents:
  - "4.2 PATH MTU Discovery\n   PATH MTU discovery appears to be something each proposal\
    \ is\n   considering.  Alterations to the existing implementation of PATH MTU\n\
    \   are perceived because changes are expected in system discovery.\n"
- title: 4.3 Multicast
  contents:
  - "4.3 Multicast\n   Each proposal has depicted alterations to Multicast that will\
    \ affect\n   present BSD host implementations of IPv4 Multicast.  In addition\
    \ it\n   appears that the IPv4 unicast broadcast will be replaced by a\n   multicast\
    \ broadcast.\n"
- title: 4.4 Flow Specification and Handling
  contents:
  - "4.4 Flow Specification and Handling\n   This will be an extended capability proposed\
    \ by all IPngs'.\n"
- title: 4.5 System Discovery
  contents:
  - "4.5 System Discovery\n   Each proposal has depicted a new model for IPng system\
    \ discovery of a\n   host.\n"
- title: 4.6 Translation and Encapsulation
  contents:
  - "4.6 Translation and Encapsulation\n   The routing abstraction in a BSD host will\
    \ have to deal with the\n   affect of any translation or encapsulation of network\
    \ layer\n   datagrams, if they are required by an IPng.\n"
- title: 4.7 Network Layer Security
  contents:
  - "4.7 Network Layer Security\n   It is perceived that network layer security will\
    \ be required at the\n   network layer component of IPng and this will have to\
    \ be implemented\n   by a BSD host.\n"
- title: 4.8 Socket Address Structure
  contents:
  - "4.8 Socket Address Structure\n   The network kernel socket address structure\
    \ will change because of\n   IPng.\n"
- title: 4.9 Network APIs
  contents:
  - "4.9 Network APIs\n   The network APIs for a BSD host will have to be enhanced\
    \ to support\n   IPng.  In addition any new options available to the applications\n\
    \   because of the IPng network service will have to be added as an\n   option\
    \ to the APIs.\n"
- title: 4.10 Network Management
  contents:
  - "4.10 Network Management\n   Network management for IPng will have to support\
    \ new network objects\n   as defined by the IPng proposal.  In addition the data\
    \ structures in\n   the BSD host network kernel used as information to display\
    \ network\n   topology will be altered by a new network layer datagram and\n \
    \  associated components.\n"
- title: 5. Transition Software
  contents:
  - "5. Transition Software\n   Transition software in this white paper references\
    \ the network\n   software alterations on a host to support both IPv4 and IPng\
    \ for\n   applications and the hosts operating system network kernel.  It is\n\
    \   the subject of another set of papers to identify the transition\n   software\
    \ required by network managers to transition their users from\n   IPv4 to IPng.\n\
    \   Transition software on a host will be required to maintain\n   compatibility\
    \ between IPv4 and IPng, and to manage both the existing\n   IPv4 and IPng environments\
    \ as follows:\n      1.  BIND DNS record updates and handling by the application.\n\
    \      2.  SNMP management interface and monitoring of host network\n        \
    \  structures.\n      3.  APIs supporting IPv4 and IPng differentiation for the\n\
    \          application.\n      4.  Defacto network tools altered (e.g., tcpdump,\
    \ traceroute,\n          netstat).\n      5.  ARP to new system discovery.\n \
    \     6.  BOOTP diskless node support for IPng.\n      7.  DHCP integration with\
    \ IPng Autoconfiguration.\n      8.  Routing table configuration on the BSD host\
    \ (e.g., routed,\n          ifconfig).\n      9.  Selection of the network layer\
    \ (IPv4 or IPng) at the\n          transport layer.\n      10.  New options and\
    \ services provided by an IPng protocol.\n      11.  IPv4 and IPng routing protocols\
    \ in the network layer.\n      12.  IPv4 and IPng system discovery in the network\
    \ layer.\n   These are only the highlights of the transition software that a host\n\
    \   will have to deal with in its implementation of IPng.  The host\n   network\
    \ architecture diagram depicted previously will require\n   software enhancements\
    \ to each label in the diagram.\n   It is very important that each IPng proposal\
    \ provide a specification\n   for a transition plan from IPv4 to IPng and their\
    \ technical criteria\n   for the interoperation between IPv4 and IPng.\n   It\
    \ should also be a requirement that existing IPv4 applications not\n   have to\
    \ be recompiled when a host has implemented both an IPv4 and an\n   IPng network\
    \ layer and associated components.\n   It is very desirable that when a host implements\
    \ both an IPv4 and an\n   IPng network layer and associated components that there\
    \ is no\n   performance degradation on the host compared to the performance of\
    \ an\n   existing IPv4 only host.\n   It should not be a requirement by IPng that\
    \ a host must support both\n   an IPv4 and an IPng network layer.\n"
- title: 6. A Deployment Consideration
  contents:
  - "6. A Deployment Consideration\n   Complete and extensive technical specifications\
    \ must be available for\n   any IPng proposal, and a selection of any proposal\
    \ must accommodate\n   multiple implementations. The IPng Directorate should review\
    \ proposed\n   specifications for completeness.\n   It is important that the IPng\
    \ Directorate determine how long the CIDR\n   IPv4 address plan can extend the\
    \ life of IPv4 addresses on the\n   Internet.  This variable can affect the time\
    \ we have to deploy IPng\n   and the proposed transition plans.\n"
- title: References
  contents:
  - "References\n   [1] Gilligan, B., et. al., \"IPAE: The SIPP Interoperability and\n\
    \       Transition Mechanism\", Work in Progress.\n   [2] Piscitello, D., \"FTP\
    \ Operation Over Big Address Records\n       (FOOBAR)\", RFC 1639, Core Competence,\
    \ Inc., June 1994.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 4.7.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Jim Bound\n   Digital Equipment Corporation\n   110 Spitbrook\
    \ Road ZK3-3/U14\n   Nashua, NH 03062-2698\n   Phone: +1 603 881 0400\n   EMail:\
    \ bound@zk3.dec.com\n"
