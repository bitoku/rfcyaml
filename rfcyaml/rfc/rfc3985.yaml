- title: __initial_text__
  contents:
  - '         Pseudo Wire Emulation Edge-to-Edge (PWE3) Architecture

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes an architecture for Pseudo Wire Emulation\n\
    \   Edge-to-Edge (PWE3).  It discusses the emulation of services such as\n   Frame\
    \ Relay, ATM, Ethernet, TDM, and SONET/SDH over packet switched\n   networks (PSNs)\
    \ using IP or MPLS.  It presents the architectural\n   framework for pseudo wires\
    \ (PWs), defines terminology, and specifies\n   the various protocol elements\
    \ and their functions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction. . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n        1.1.  Pseudo Wire Definition. . . . . . . . . . . .\
    \ . . . . .  2\n        1.2.  PW Service Functionality. . . . . . . . . . . .\
    \ . . . .  3\n        1.3.  Non-Goals of This Document. . . . . . . . . . . .\
    \ . . .  4\n        1.4.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n   2.   PWE3 Applicability. . . . . . . . . . . . . . . . . . . . .\
    \ .  6\n   3.   Protocol Layering Model . . . . . . . . . . . . . . . . . . .\
    \  6\n        3.1.  Protocol Layers . . . . . . . . . . . . . . . . . . . .  7\n\
    \        3.2.  Domain of PWE3. . . . . . . . . . . . . . . . . . . . .  8\n  \
    \      3.3.  Payload Types . . . . . . . . . . . . . . . . . . . . .  8\n   4.\
    \   Architecture of Pseudo Wires. . . . . . . . . . . . . . . . . 11\n       \
    \ 4.1.  Network Reference Model . . . . . . . . . . . . . . . . 12\n        4.2.\
    \  PWE3 Pre-processing . . . . . . . . . . . . . . . . . . 12\n        4.3.  Maintenance\
    \ Reference Model . . . . . . . . . . . . . . 16\n        4.4.  Protocol Stack\
    \ Reference Model. . . . . . . . . . . . . 17\n        4.5.  Pre-processing Extension\
    \ to Protocol Stack Reference\n              Model . . . . . . . . . . . . . .\
    \ . . . . . . . . . . . 17\n   5.   PW Encapsulation. . . . . . . . . . . . .\
    \ . . . . . . . . . . 18\n        5.1.  Payload Convergence Layer . . . . . .\
    \ . . . . . . . . . 19\n        5.2.  Payload-independent PW Encapsulation Layers\
    \ . . . . . . 21\n        5.3.  Fragmentation . . . . . . . . . . . . . . . .\
    \ . . . . . 24\n        5.4.  Instantiation of the Protocol Layers. . . . . .\
    \ . . . . 24\n   6.   PW Demultiplexer Layer and PSN Requirements . . . . . .\
    \ . . . 27\n        6.1.  Multiplexing. . . . . . . . . . . . . . . . . . . .\
    \ . . 27\n        6.2.  Fragmentation . . . . . . . . . . . . . . . . . . . .\
    \ . 28\n        6.3.  Length and Delivery . . . . . . . . . . . . . . . . . .\
    \ 28\n        6.4.  PW-PDU Validation . . . . . . . . . . . . . . . . . . . 28\n\
    \        6.5.  Congestion Considerations . . . . . . . . . . . . . . . 28\n  \
    \ 7.   Control Plane . . . . . . . . . . . . . . . . . . . . . . . . 29\n    \
    \    7.1.  Set-up or Teardown of Pseudo Wires. . . . . . . . . . . 29\n      \
    \  7.2.  Status Monitoring . . . . . . . . . . . . . . . . . . . 30\n        7.3.\
    \  Notification of Pseudo Wire Status Changes. . . . . . . 30\n        7.4.  Keep-alive.\
    \ . . . . . . . . . . . . . . . . . . . . . . 31\n        7.5.  Handling Control\
    \ Messages of the Native Services. . . . 32\n   8.   Management and Monitoring\
    \ . . . . . . . . . . . . . . . . . . 32\n        8.1.  Status and Statistics\
    \ . . . . . . . . . . . . . . . . . 32\n        8.2.  PW SNMP MIB Architecture.\
    \ . . . . . . . . . . . . . . . 33\n        8.3.  Connection Verification and\
    \ Traceroute. . . . . . . . . 36\n   9.   IANA Considerations . . . . . . . .\
    \ . . . . . . . . . . . . . 37\n   10.  Security Considerations . . . . . . .\
    \ . . . . . . . . . . . . 37\n   11.  Acknowledgements. . . . . . . . . . . .\
    \ . . . . . . . . . . . 38\n   12.  References. . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 38\n        12.1.  Normative References . . . . . . . .\
    \ . . . . . . . . . 38\n        12.2.  Informative References . . . . . . . .\
    \ . . . . . . . . 39\n   13.  Co-Authors. . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . 40\n   14.  Editors' Addresses. . . . . . . . . . . . . . . .\
    \ . . . . . . 41\n        Full Copyright Statement. . . . . . . . . . . . . .\
    \ . . . . . 42\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes an architecture for Pseudo Wire\
    \ Emulation\n   Edge-to-Edge (PWE3) in support of [RFC3916].  It discusses the\n\
    \   emulation of services such as Frame Relay, ATM, Ethernet, TDM, and\n   SONET/SDH\
    \ over packet switched networks (PSNs) using IP or MPLS.  It\n   presents the\
    \ architectural framework for pseudo wires (PWs), defines\n   terminology, and\
    \ specifies the various protocol elements and their\n   functions.\n"
- title: 1.1.  Pseudo Wire Definition
  contents:
  - "1.1.  Pseudo Wire Definition\n   PWE3 is a mechanism that emulates the essential\
    \ attributes of a\n   telecommunications service (such as a T1 leased line or\
    \ Frame Relay)\n   over a PSN.  PWE3 is intended to provide only the minimum necessary\n\
    \   functionality to emulate the wire with the required degree of\n   faithfulness\
    \ for the given service definition.  Any required\n   switching functionality\
    \ is the responsibility of a forwarder function\n   (FWRD).  Any translation or\
    \ other operation needing knowledge of the\n   payload semantics is carried out\
    \ by native service processing (NSP)\n   elements.  The functional definition\
    \ of any FWRD or NSP elements is\n   outside the scope of PWE3.\n   The required\
    \ functions of PWs include encapsulating service-specific\n   bit streams, cells,\
    \ or PDUs arriving at an ingress port and carrying\n   them across an IP path\
    \ or MPLS tunnel.  In some cases it is necessary\n   to perform other operations\
    \ such as managing their timing and order,\n   to emulate the behavior and characteristics\
    \ of the service to the\n   required degree of faithfulness.\n   From the perspective\
    \ of Customer Edge Equipment (CE), the PW is\n   characterized as an unshared\
    \ link or circuit of the chosen service.\n   In some cases, there may be deficiencies\
    \ in the PW emulation that\n   impact the traffic carried over a PW and therefore\
    \ limit the\n   applicability of this technology.  These limitations must be fully\n\
    \   described in the appropriate service-specific documentation.\n   For each\
    \ service type, there will be one default mode of operation\n   that all PEs offering\
    \ that service type must support.  However,\n   optional modes may be defined\
    \ to improve the faithfulness of the\n   emulated service, if it can be clearly\
    \ demonstrated that the\n   additional complexity associated with the optional\
    \ mode is offset by\n   the value it offers to PW users.\n"
- title: 1.2.  PW Service Functionality
  contents:
  - "1.2.  PW Service Functionality\n   PWs provide the following functions in order\
    \ to emulate the behavior\n   and characteristics of the native service.\n   \
    \    o Encapsulation of service-specific PDUs or circuit data arriving\n     \
    \    at the PE-bound port (logical or physical).\n       o Carriage of the encapsulated\
    \ data across a PSN tunnel.\n       o Establishment of the PW, including the exchange\
    \ and/or\n         distribution of the PW identifiers used by the PSN tunnel\n\
    \         endpoints.\n       o Managing the signaling, timing, order, or other\
    \ aspects of the\n         service at the boundaries of the PW.\n       o Service-specific\
    \ status and alarm management.\n"
- title: 1.3.  Non-Goals of This Document
  contents:
  - "1.3.  Non-Goals of This Document\n   The following are non-goals for this document:\n\
    \      o  The on-the-wire specification of PW encapsulations.\n      o  The detailed\
    \ definition of the protocols involved in PW setup\n         and maintenance.\n\
    \   The following are outside the scope of PWE3:\n      o  Any multicast service\
    \ not native to the emulated medium.  Thus,\n         Ethernet transmission to\
    \ a \"multicast\" IEEE-48 address is in\n         scope, but multicast services\
    \ such as MARS [RFC2022] that are\n         implemented on top of the medium are\
    \ not.\n      o  Methods to signal or control the underlying PSN.\n"
- title: 1.4.  Terminology
  contents:
  - "1.4.  Terminology\n   This document uses the following definitions of terms.\
    \  These terms\n   are illustrated in context in Figure 2.\n   Attachment Circuit\
    \   The physical or virtual circuit attaching\n   (AC)                 a CE to\
    \ a PE. An attachment Circuit may be, for\n                        example, a\
    \ Frame Relay DLCI, an ATM VPI/VCI, an\n                        Ethernet port,\
    \ a VLAN, a PPP connection on a\n                        physical interface, a\
    \ PPP session from an L2TP\n                        tunnel, or an MPLS LSP.  If\
    \ both physical and\n                        virtual ACs are of the same technology\
    \ (e.g.,\n                        both ATM, both Ethernet, both Frame Relay),\
    \ the\n                        PW is said to provide \"homogeneous transport\"\
    ;\n                        otherwise, it is said to provide \"heterogeneous\n\
    \                        transport\".\n   CE-bound             The traffic direction\
    \ in which PW-PDUs are\n                        received on a PW via the PSN,\
    \ processed, and\n                        then sent to the destination CE.\n \
    \  CE Signaling         Messages sent and received by the CE's control\n     \
    \                   plane.  It may be desirable or even necessary\n          \
    \              for the PE to participate in or to monitor this\n             \
    \           signaling in order to emulate the service\n                      \
    \  effectively.\n   Control Word (CW)    A four-octet header used in some encapsulations\n\
    \                        to carry per-packet information when the PSN is\n   \
    \                     MPLS.\n   Customer Edge (CE)   A device where one end of\
    \ a service originates\n                        and/or terminates.  The CE is\
    \ not aware that it\n                        is using an emulated service rather\
    \ than a\n                        native service.\n   Forwarder (FWRD)     A PE\
    \ subsystem that selects the PW to use in\n                        order to transmit\
    \ a payload received on an AC.\n   Fragmentation        The action of dividing\
    \ a single PDU into\n                        multiple PDUs before transmission\
    \ with the\n                        intent of the original PDU being reassembled\n\
    \                        elsewhere in the network.  Packets may undergo\n    \
    \                    fragmentation if they are larger than the MTU of\n      \
    \                  the network they will traverse.\n   Maximum Transmission The\
    \ packet size (excluding data link header)\n   unit (MTU)           that an interface\
    \ can transmit without needing\n                        to fragment.\n   Native\
    \ Service       Processing of the data received by the PE\n   Processing (NSP)\
    \     from the CE before presentation to the PW for\n                        transmission\
    \ across the core, or processing of\n                        the data received\
    \ from a PW by a PE before it is\n                        output on the AC.  NSP\
    \ functionality is defined\n                        by standards bodies other\
    \ than the IETF, such as\n                        ITU-T,ANSI, or ATMF.)\n   Packet\
    \ Switched      Within the context of PWE3, this is a\n   Network (PSN)      \
    \  network using IP or MPLS as the mechanism for\n                        packet\
    \ forwarding.\n   PE-Bound             The traffic direction in which information\
    \ from\n                        a CE is adapted to a PW, and PW-PDUs are sent\n\
    \                        into the PSN.\n   PE/PW Maintenance    Used by the PEs\
    \ to set up, maintain, and tear\n                        down the PW.  It may\
    \ be coupled with CE\n                        Signaling in order to manage the\
    \ PW effectively.\n   Protocol Data        The unit of data output to, or received\n\
    \   Unit (PDU)           from, the network by a protocol layer.\n   Provider Edge\
    \ (PE)   A device that provides PWE3 to a CE.\n   Pseudo Wire (PW)     A mechanism\
    \ that carries the essential elements\n                        of an emulated\
    \ service from one PE to one or\n                        more other PEs over a\
    \ PSN.\n   Pseudo Wire          A mechanism that emulates the essential\n   Emulation\
    \ Edge to    attributes of service (such as a T1 leased\n   Edge (PWE3)      \
    \    line or Frame Relay) over a PSN.\n   Pseudo Wire PDU      A PDU sent on the\
    \ PW that contains all of\n   (PW-PDU)             the data and control information\
    \ necessary to\n                        emulate the desired service.\n   PSN Tunnel\
    \           A tunnel across a PSN, inside which one or more\n                \
    \        PWs can be carried.\n   PSN Tunnel           Used to set up, maintain,\
    \ and tear down the\n   Signaling            underlying PSN tunnel.\n   PW Demultiplexer\
    \     Data-plane method of identifying a PW\n                        terminating\
    \ at a PE.\n   Time Domain          Time Division Multiplexing.  Frequently used\n\
    \   Multiplexing (TDM)   to refer to the synchronous bit streams at rates\n  \
    \                      defined by G.702.\n   Tunnel               A method of\
    \ transparently carrying information\n                        over a network.\n"
- title: 2.  PWE3 Applicability
  contents:
  - "2.  PWE3 Applicability\n   The PSN carrying a PW will subject payload packets\
    \ to loss, delay,\n   delay variation, and re-ordering.  During a network transient\
    \ there\n   may be a sustained period of impaired service.  The applicability\
    \ of\n   PWE3 to a particular service depends on the sensitivity of that\n   service\
    \ (or the CE implementation) to these effects, and on the\n   ability of the adaptation\
    \ layer to mask them.  Some services, such as\n   IP over FR over PWE3, may prove\
    \ quite resilient to IP and MPLS PSN\n   characteristics.  Other services, such\
    \ as the interconnection of PBX\n   systems via PWE3, will require more careful\
    \ consideration of the PSN\n   and adaptation layer characteristics.  In some\
    \ instances, traffic\n   engineering of the underlying PSN will be required, and\
    \ in some cases\n   the constraints may make the required service guarantees impossible\n\
    \   to provide.\n"
- title: 3.  Protocol Layering Model
  contents:
  - "3.  Protocol Layering Model\n   The PWE3 protocol-layering model is intended\
    \ to minimize the\n   differences between PWs operating over different PSN types.\
    \  The\n   design of the protocol-layering model has the goals of making each\
    \ PW\n   definition independent of the underlying PSN, and of maximizing the\n\
    \   reuse of IETF protocol definitions and their implementations.\n"
- title: 3.1.  Protocol Layers
  contents:
  - "3.1.  Protocol Layers\n   The logical protocol-layering model required to support\
    \ a PW is shown\n   in Figure 1.\n          +---------------------------+\n  \
    \        |         Payload           |\n          +---------------------------+\n\
    \          |      Encapsulation        | <==== may be empty\n          +---------------------------+\n\
    \          |     PW Demultiplexer      |\n          +---------------------------+\n\
    \          |     PSN Convergence       | <==== may be empty\n          +---------------------------+\n\
    \          |           PSN             |\n          +---------------------------+\n\
    \          |         Data-Link         |\n          +---------------------------+\n\
    \          |          Physical         |\n          +---------------------------+\n\
    \                    Figure 1.  Logical Protocol Layering Model\n   The payload\
    \ is transported over the Encapsulation Layer.  The\n   Encapsulation Layer carries\
    \ any information, not already present\n   within the payload itself, that is\
    \ needed by the PW CE-bound PE\n   interface to send the payload to the CE via\
    \ the physical interface.\n   If no further information is needed in the payload\
    \ itself, this layer\n   is empty.\n   The Encapsulation Layer also provides support\
    \ for real-time\n   processing, and if needed for sequencing.\n   The PW Demultiplexer\
    \ layer provides the ability to deliver multiple\n   PWs over a single PSN tunnel.\
    \  The PW demultiplexer value used to\n   identify the PW in the data plane may\
    \ be unique per PE, but this is\n   not a PWE3 requirement.  It must, however,\
    \ be unique per tunnel\n   endpoint.  If it is necessary to identify a particular\
    \ tunnel, then\n   that is the responsibility of the PSN layer.\n   The PSN Convergence\
    \ layer provides the enhancements needed to make\n   the PSN conform to the assumed\
    \ PSN service requirement.  Therefore,\n   this layer provides a consistent interface\
    \ to the PW, making the PW\n   independent of the PSN type.  If the PSN already\
    \ meets the service\n   requirements, this layer is empty.\n   The PSN header,\
    \ MAC/Data-Link, and Physical Layer definitions are\n   outside the scope of this\
    \ document.  The PSN can be IPv4, IPv6, or\n   MPLS.\n"
- title: 3.2.  Domain of PWE3
  contents:
  - "3.2.  Domain of PWE3\n   PWE3 defines the Encapsulation Layer, the method of\
    \ carrying various\n   payload types, and the interface to the PW Demultiplexer\
    \ Layer.  It\n   is expected that the other layers will be provided by tunneling\n\
    \   methods such as L2TP or MPLS over the PSN.\n"
- title: 3.3.  Payload Types
  contents:
  - "3.3.  Payload Types\n   The payload is classified into the following generic\
    \ types of native\n   data units:\n       o Packet\n       o Cell\n       o Bit\
    \ stream\n       o Structured bit stream\n   Within these generic types there\
    \ are specific service types:\n       Generic Payload Type    PW Service\n   \
    \    --------------------    ----------\n       Packet                  Ethernet\
    \ (all types), HDLC framing,\n                               Frame Relay, ATM\
    \ AAL5 PDU.\n       Cell                    ATM.\n       Bit stream          \
    \    Unstructured E1, T1, E3, T3.\n       Structured bit stream   SONET/SDH (e.g.,\
    \ SPE, VT, NxDS0).\n"
- title: 3.3.1.  Packet Payload
  contents:
  - "3.3.1.  Packet Payload\n   A packet payload is a variable-size data unit delivered\
    \ to the PE via\n   the AC.  A packet payload may be large compared to the PSN\
    \ MTU.  The\n   delineation of the packet boundaries is encapsulation specific.\
    \  HDLC\n   or Ethernet PDUs can be considered examples of packet payloads.\n\
    \   Typically, a packet will be stripped of transmission overhead such as\n  \
    \ HDLC flags and stuffing bits before transmission over the PW.\n   A packet payload\
    \ would normally be relayed across the PW as a single\n   unit.  However, there\
    \ will be cases where the combined size of the\n   packet payload and its associated\
    \ PWE3 and PSN headers exceeds the\n   PSN path MTU.  In these cases, some fragmentation\
    \ methodology has to\n   be applied.  This may, for example, be the case when\
    \ a user provides\n   the service and attaches to the service provider via Ethernet,\
    \ or\n   when nested pseudo-wires are involved.  Fragmentation is discussed in\n\
    \   more detail in section 5.3.\n   A packet payload may need sequencing and real-time\
    \ support.\n   In some situations, the packet payload may be selected from the\n\
    \   packets presented on the emulated wire on the basis of some sub-\n   multiplexing\
    \ technique.  For example, one or more Frame Relay PDUs\n   may be selected for\
    \ transport over a particular pseudo wire based on\n   the Frame Relay Data-Link\
    \ Connection Identifier (DLCI), or, in the\n   case of Ethernet payloads, by using\
    \ a suitable MAC bridge filter.\n   This is a forwarder function, and this selection\
    \ would therefore be\n   made before the packet was presented to the PW Encapsulation\
    \ Layer.\n"
- title: 3.3.2.  Cell Payload
  contents:
  - "3.3.2.  Cell Payload\n   A cell payload is created by capturing, transporting,\
    \ and replaying\n   groups of octets presented on the wire in a fixed-size format.\
    \  The\n   delineation of the group of bits that comprise the cell is specific\n\
    \   to the encapsulation type.  Two common examples of cell payloads are\n   ATM\
    \ 53-octet cells, and the larger 188-octet MPEG Transport Stream\n   packets [DVB].\n\
    \   To reduce per-PSN packet overhead, multiple cells may be concatenated\n  \
    \ into a single payload.  The Encapsulation Layer may consider the\n   payload\
    \ complete on the expiry of a timer, after a fixed number of\n   cells have been\
    \ received or when a significant cell (e.g., an ATM OAM\n   cell) has been received.\
    \  The benefit of concatenating multiple PDUs\n   should be weighed against a\
    \ possible increase in packet delay\n   variation and the larger penalty incurred\
    \ by packet loss.  In some\n   cases, it may be appropriate for the Encapsulation\
    \ Layer to perform\n   some type of compression, such as silence suppression or\
    \ voice\n   compression.\n   The generic cell payload service will normally need\
    \ sequence number\n   support and may also need real-time support.  The generic\
    \ cell\n   payload service would not normally require fragmentation.\n   The Encapsulation\
    \ Layer may apply some form of compression to some of\n   these sub-types (e.g.,\
    \ idle cells may be suppressed).\n   In some instances, the cells to be incorporated\
    \ in the payload may be\n   selected by filtering them from the stream of cells\
    \ presented on the\n   wire.  For example, an ATM PWE3 service may select cells\
    \ based on\n   their VCI or VPI fields.  This is a forwarder function, and the\n\
    \   selection would therefore be made before the packet was presented to\n   the\
    \ PW Encapsulation Layer.\n"
- title: 3.3.3.  Bit Stream
  contents:
  - "3.3.3.  Bit Stream\n   A bit stream payload is created by capturing, transporting,\
    \ and\n   replaying the bit pattern on the emulated wire, without taking\n   advantage\
    \ of any structure that, on inspection, may be visible within\n   the relayed\
    \ traffic (i.e., the internal structure has no effect on\n   the fragmentation\
    \ into packets).\n   In some instances it is possible to apply suppression to\
    \ bit streams.\n   For example, E1 and T1 send \"all-ones\" to indicate failure.\
    \  This\n   condition can be detected without any knowledge of the structure of\n\
    \   the bit stream, and transmission of packetized can be data\n   suppressed.\n\
    \   This service will require sequencing and real-time support.\n"
- title: 3.3.4.  Structured Bit Stream
  contents:
  - "3.3.4.  Structured Bit Stream\n   A structured bit stream payload is created\
    \ by using some knowledge of\n   the underlying structure of the bit stream to\
    \ capture, transport, and\n   replay the bit pattern on the emulated wire.\n \
    \  Two important points distinguish structured and unstructured bit\n   streams:\n\
    \       o Some parts of the original bit stream may be stripped in the\n     \
    \    PSN-bound direction by an NSP block.  For example, in\n         Structured\
    \ SONET the section and line overhead (and possibly\n         more) may be stripped.\
    \  A framer is required to enable such\n         stripping.  It is also required\
    \ for frame/payload alignment for\n         fractional T1/E1 applications.\n \
    \      o The PW must preserve the structure across the PSN so that the\n     \
    \    CE-bound NSP block can insert it correctly into the\n         reconstructed\
    \ unstructured bit stream.  The stripped\n         information (such as SONET\
    \ pointer justifications) may appear\n         in the encapsulation layer to facilitate\
    \ this reconstitution.\n   As an option, the Encapsulation Layer may also perform\
    \ silence/idle\n   suppression or similar compression on a structured bit stream.\n\
    \   Structured bit streams are distinguished from cells in that the\n   structures\
    \ may be too long to be carried in a single packet.  Note\n   that \"short\" structures\
    \ are indistinguishable from cells and may\n   benefit from the use of methods\
    \ described in section 3.3.2.\n   This service requires sequencing and real-time\
    \ support.\n"
- title: 3.3.5.  Principle of Minimum Intervention
  contents:
  - "3.3.5.  Principle of Minimum Intervention\n   To minimize the scope of information,\
    \ and to improve the efficiency\n   of data flow through the Encapsulation Layer,\
    \ the payload should be\n   transported as received, with as few modifications\
    \ as possible\n   [RFC1958].\n   This minimum intervention approach decouples\
    \ payload development from\n   PW development and requires fewer translations\
    \ at the NSP in a system\n   with similar CE interfaces at each end.  It also\
    \ prevents unwanted\n   side effects due to subtle misrepresentation of the payload\
    \ in the\n   intermediate format.\n   An approach that does intervene can be more\
    \ wire efficient in some\n   cases and may result in fewer translations at the\
    \ NSP whereby the CE\n   interfaces are of different types.  Any intermediate\
    \ format\n   effectively becomes a new framing type, requiring documentation and\n\
    \   assured interoperability.  This increases the amount of work for\n   handling\
    \ the protocol that the intermediate format carries and is\n   undesirable.\n"
- title: 4.  Architecture of Pseudo Wires
  contents:
  - "4.  Architecture of Pseudo Wires\n   This section describes the PWE3 architectural\
    \ model.\n"
- title: 4.1.  Network Reference Model
  contents:
  - "4.1.  Network Reference Model\n   Figure 2 illustrates the network reference\
    \ model for point-to-point\n   PWs.\n            |<-------------- Emulated Service\
    \ ---------------->|\n            |                                          \
    \        |\n            |          |<------- Pseudo Wire ------>|          |\n\
    \            |          |                            |          |\n          \
    \  |          |    |<-- PSN Tunnel -->|    |          |\n            |       \
    \   V    V                  V    V          |\n            V    AC    +----+ \
    \                 +----+     AC   V\n      +-----+    |     | PE1|==================|\
    \ PE2|     |    +-----+\n      |     |----------|............PW1.............|----------|\
    \     |\n      | CE1 |    |     |    |                  |    |     |    | CE2\
    \ |\n      |     |----------|............PW2.............|----------|     |\n\
    \      +-----+  ^ |     |    |==================|    |     | ^  +-----+\n    \
    \        ^  |       +----+                  +----+     | |  ^\n            | \
    \ |   Provider Edge 1         Provider Edge 2  |  |\n            |  |        \
    \                                    |  |\n      Customer |                  \
    \                          | Customer\n      Edge 1   |                      \
    \                      | Edge 2\n               |                            \
    \                |\n               |                                         \
    \   |\n         Native service                               Native service\n\
    \                   Figure 2.  PWE3 Network Reference Model\n   The two PEs (PE1\
    \ and PE2) have to provide one or more PWs on behalf\n   of their client CEs (CE1\
    \ and CE2) to enable the client CEs to\n   communicate over the PSN.  A PSN tunnel\
    \ is established to provide a\n   data path for the PW.  The PW traffic is invisible\
    \ to the core\n   network, and the core network is transparent to the CEs.  Native\
    \ data\n   units (bits, cells, or packets) arrive via the AC, are encapsulated\n\
    \   in a PW-PDU, and are carried across the underlying network via the\n   PSN\
    \ tunnel.  The PEs perform the necessary encapsulation and\n   decapsulation of\
    \ PW-PDUs and handle any other functions required by\n   the PW service, such\
    \ as sequencing or timing.\n"
- title: 4.2.  PWE3 Pre-processing
  contents:
  - "4.2.  PWE3 Pre-processing\n   Some applications have to perform operations on\
    \ the native data units\n   received from the CE (including both payload and signaling\
    \ traffic)\n   before they are transmitted across the PW by the PE.  Examples\n\
    \   include Ethernet bridging, SONET cross-connect, translation of\n   locally-significant\
    \ identifiers such as VCI/VPI, or translation to\n   another service type.  These\
    \ operations could be carried out in\n   external equipment, and the processed\
    \ data could be sent to the PE\n   over one or more physical interfaces.  In most\
    \ cases, could be in\n   undertaking these operations within the PE provides cost\
    \ and\n   operational benefits.  Processed data is then presented to the PW via\n\
    \   a virtual interface within the PE.  These pre-processing operations\n   are\
    \ included in the PWE3 reference model to provide a common\n   reference point,\
    \ but the detailed description of these operations is\n   outside the scope of\
    \ the PW definition given here.\n                       PW\n                 \
    \   End Service\n                        |\n                        |<-------\
    \ Pseudo Wire ------>|\n                        |                            |\n\
    \                        |    |<-- PSN Tunnel -->|    |\n                    \
    \    V    V                  V    V     PW\n                  +-----+----+   \
    \               +----+ End Service\n       +-----+    |PREP | PE1|==================|\
    \ PE2|     |    +-----+\n       |     |    |     |............PW1.............|----------|\
    \     |\n       | CE1 |----|     |    |                  |    |     |    | CE2\
    \ |\n       |     | ^  |     |............PW2.............|----------|     |\n\
    \       +-----+ |  |     |    |==================|    |     | ^  +-----+\n   \
    \            |  +-----+----+                  +----+     | |\n               |\
    \        ^                                  | |\n               |        |   \
    \                               | |\n               |        |<------- Emulated\
    \ Service ------->| |\n               |        |                             \
    \       |\n               | Virtual physical                            |\n  \
    \             |  termination                                |\n              \
    \ |        ^                                    |\n          CE1 native    | \
    \                               CE2 native\n           service      |        \
    \                        service\n                        |\n                \
    \   CE2 native\n                    service\n       Figure 3.  Pre-processing\
    \ within the PWE3 Network Reference Model\n   Figure 3 shows the interworking\
    \ of one PE with pre-processing (PREP),\n   and a second without this functionality.\
    \  This reference point\n   emphasizes that the functional interface between PREP\
    \ and the PW is\n   that represented by a physical interface carrying the service.\
    \  This\n   effectively defines the necessary inter-working specification.\n \
    \  The operation of a system in which both PEs include PREP\n   functionality\
    \ is also supported.\n   The required pre-processing can be divided into two components:\n\
    \       o Forwarder (FWRD)\n       o Native Service Processing (NSP)\n"
- title: 4.2.1.  Forwarders
  contents:
  - "4.2.1.  Forwarders\n   Some applications have to forward payload elements selectively\
    \ from\n   one or more ACs to one or more PWs.  In such cases, there will also\
    \ be\n   a need to perform the inverse function on PWE3-PDUs received by a PE\n\
    \   from the PSN.  This is the function of the forwarder.\n   The forwarder selects\
    \ the PW based on, for example, the incoming AC,\n   the contents of the payload,\
    \ or some statically and/or dynamically\n   configured forwarding information.\n\
    \               +----------------------------------------+\n               | \
    \               PE Device               |\n               +----------------------------------------+\n\
    \        Single |                 |                      |\n        AC     | \
    \                |        Single        | PW Instance\n       <------>o   Forwarder\
    \     +      PW Instance     X<===========>\n               |                \
    \ |                      |\n               +----------------------------------------+\n\
    \                   Figure 4a.  Simple Point-to-Point Service\n              \
    \ +----------------------------------------+\n               |               \
    \ PE Device               |\n               +----------------------------------------+\n\
    \       Multiple|                 |        Single        | PW Instance\n     \
    \  AC      |                 +      PW Instance     X<===========>\n       <------>o\
    \                 |                      |\n               |                 |----------------------|\n\
    \       <------>o                 |        Single        | PW Instance\n     \
    \          |    Forwarder    +      PW Instance     X<===========>\n       <------>o\
    \                 |                      |\n               |                 |----------------------|\n\
    \       <------>o                 |        Single        | PW Instance\n     \
    \          |                 +      PW Instance     X<===========>\n       <------>o\
    \                 |                      |\n               +----------------------------------------+\n\
    \               Figure 4b.  Multiple AC to Multiple PW Forwarding\n   Figure 4a\
    \ shows a simple forwarder that performs some type of\n   filtering operation.\
    \  Because the forwarder has a single input and a\n   single output interface,\
    \ filtering is the only type of forwarding\n   operation that applies.  Figure\
    \ 4b shows a more general forwarding\n   situation where payloads are extracted\
    \ from one or more ACs and\n   directed to one or more PWs.  In this case filtering,\
    \ direction, and\n   combination operations may be performed on the payloads.\
    \  For\n   example, if the AC were Frame Relay, the forwarder might perform\n\
    \   Frame Relay switching and the PW instances might be the inter-switch\n   links.\n"
- title: 4.2.2.  Native Service Processing
  contents:
  - "4.2.2.  Native Service Processing\n   Some applications required some form of\
    \ data or address translation,\n   or some other operation requiring knowledge\
    \ of the semantics of the\n   payload.  This is the function of the Native Service\
    \ Processor (NSP).\n   The use of the NSP approach simplifies the design of the\
    \ PW by\n   restricting a PW to homogeneous operation.  NSP is included in the\n\
    \   reference model to provide a defined interface to this functionality.\n  \
    \ The specification of the various types of NSP is outside the scope of\n   PWE3.\n\
    \                +----------------------------------------+\n                |\
    \                PE Device               |\n        Multiple+----------------------------------------+\n\
    \        AC      |      |          |        Single        | PW Instance\n    \
    \    <------>o  NSP #          +      PW Instance     X<===========>\n       \
    \         |      |          |                      |\n                |------|\
    \          |----------------------|\n                |      |          |     \
    \   Single        | PW Instance\n        <------>o  NSP #Forwarder +      PW Instance\
    \     X<===========>\n                |      |          |                    \
    \  |\n                |------|          |----------------------|\n           \
    \     |      |          |        Single        | PW Instance\n        <------>o\
    \  NSP #          +      PW Instance     X<===========>\n                |   \
    \   |          |                      |\n                +----------------------------------------+\n\
    \          Figure 5.  NSP in a Multiple AC to Multiple PW Forwarding PE\n   Figure\
    \ 5 illustrates the relationship between NSP, forwarder, and PWs\n   in a PE.\
    \  The NSP function may apply any transformation operation\n   (modification,\
    \ injection, etc.) on the payloads as they pass between\n   the physical interface\
    \ to the CE and the virtual interface to the\n   forwarder.  These transformation\
    \ operations will, of course, be\n   limited to those that have been implemented\
    \ in the data path, and\n   that are enabled by the PE configuration.  A PE device\
    \ may contain\n   more than one forwarder.\n   This model also supports the operation\
    \ of a system in which the NSP\n   functionality includes terminating the data-link,\
    \ and the application\n   of Network Layer processing to the payload.\n"
- title: 4.3.  Maintenance Reference Model
  contents:
  - "4.3.  Maintenance Reference Model\n   Figure 6 illustrates the maintenance reference\
    \ model for PWs.\n             |<------- CE (end-to-end) Signaling ------>|\n\
    \             |     |<---- PW/PE Maintenance ----->|     |\n             |   \
    \  |     |<-- PSN Tunnel -->|     |     |\n             |     |     |    Signaling\
    \     |     |     |\n             |     V     V  (out of scope)  V     V     |\n\
    \             v     +-----+                  +-----+     v\n       +-----+   \
    \  | PE1 |==================| PE2 |     +-----+\n       |     |-----|.............PW1..............|-----|\
    \     |\n       | CE1 |     |     |                  |     |     | CE2 |\n   \
    \    |     |-----|.............PW2..............|-----|     |\n       +-----+\
    \     |     |==================|     |     +-----+\n                   +-----+\
    \                  +-----+\n       Customer   Provider                 Provider\
    \     Customer\n        Edge 1     Edge 1                   Edge 2       Edge\
    \ 2\n                  Figure 6.  PWE3 Maintenance Reference Model\n   The following\
    \ signaling mechanisms are required:\n       o The CE (end-to-end) signaling is\
    \ between the CEs.  This\n         signaling could be Frame Relay PVC status signaling,\
    \ ATM SVC\n         signaling, TDM CAS signaling, etc.\n       o The PW/PE Maintenance\
    \ is used between the PEs (or NSPs) to set\n         up, maintain, and tear down\
    \ PWs, including any required\n         coordination of parameters.\n       o\
    \ The PSN Tunnel signaling controls the PW multiplexing and some\n         elements\
    \ of the underlying PSN.  Examples are L2TP control\n         protocol, MPLS LDP,\
    \ and RSVP-TE.  The definition of the\n         information that PWE3 needs signaled\
    \ is within the scope of\n         PWE3, but the signaling protocol itself is\
    \ not.\n"
- title: 4.4.  Protocol Stack Reference Model
  contents:
  - "4.4.  Protocol Stack Reference Model\n   Figure 7 illustrates the protocol stack\
    \ reference model for PWs.\n    +-----------------+                          \
    \ +-----------------+\n    |Emulated Service |                           |Emulated\
    \ Service |\n    |(e.g., TDM, ATM) |<==== Emulated Service ===>|(e.g., TDM, ATM)\
    \ |\n    +-----------------+                           +-----------------+\n \
    \   |    Payload      |                           |    Payload      |\n    | \
    \ Encapsulation  |<====== Pseudo Wire ======>|  Encapsulation  |\n    +-----------------+\
    \                           +-----------------+\n    |PW Demultiplexer |     \
    \                      |PW Demultiplexer |\n    |   PSN Tunnel,   |<======= PSN\
    \ Tunnel ======>|  PSN Tunnel,    |\n    | PSN & Physical  |                 \
    \          | PSN & Physical  |\n    |     Layers      |                      \
    \     |    Layers       |\n    +-------+---------+        ___________        +---------+-------+\n\
    \            |                /             \\                |\n            +===============/\
    \     PSN       \\===============+\n                            \\           \
    \    /\n                             \\_____________/\n               Figure 7.\
    \  PWE3 Protocol Stack Reference Model\n   The PW provides the CE with an emulated\
    \ physical or virtual\n   connection to its peer at the far end.  Native service\
    \ PDUs from the\n   CE are passed through an Encapsulation Layer at the sending\
    \ PE and\n   then sent over the PSN.  The receiving PE removes the encapsulation\n\
    \   and restores the payload to its native format for transmission to the\n  \
    \ destination CE.\n"
- title: 4.5.  Pre-processing Extension to Protocol Stack Reference Model
  contents:
  - "4.5.  Pre-processing Extension to Protocol Stack Reference Model\n   Figure 8\
    \ illustrates how the protocol stack reference model is\n   extended to include\
    \ the provision of pre-processing (forwarding and\n   NSP).  This shows the placement\
    \ of the physical interface relative to\n   the CE.\n     /======================================\\\
    \n     H             Forwarder                H<----Pre-processing\n     H----------------======================/\n\
    \     H Native Service H   |                 |\n     H  Processing    H   |  \
    \               |\n     \\================/   |                 |\n     |    \
    \            |   | Emulated        |\n     | Service        |   | Service    \
    \     |\n     | Interface      |   | (TDM, ATM,      |\n     | (TDM, ATM,    \
    \ |   | Ethernet,       |<== Emulated Service ==\n     | Ethernet,      |   |\
    \ Frame Relay,    |\n     | Frame Relay,   |   | etc.)           |\n     | etc.)\
    \          |   +-----------------+\n     |                |   |    Payload   \
    \   |\n     |                |   | Encapsulation   |<=== Pseudo Wire ======\n\
    \     |                |   +-----------------+\n     |                |   |PW\
    \ Demultiplexer |\n     |                |   |  PSN Tunnel,    |\n     |     \
    \           |   | PSN & Physical  |<=== PSN Tunnel =======\n     |           \
    \     |   |    Headers      |\n     +----------------+   +-----------------+\n\
    \     |   Physical     |   |   Physical      |\n     +-------+--------+   +-------+---------+\n\
    \             |                    |\n             |                    |\n  \
    \           |                    |\n             |                    |\n    \
    \         |                    |\n             |                    |\n   To CE\
    \ <---+                    +---> To PSN\n       Figure 8.  Protocol Stack Reference\
    \ Model with Pre-processing\n"
- title: 5.  PW Encapsulation
  contents:
  - "5.  PW Encapsulation\n   The PW Encapsulation Layer provides the necessary infrastructure\
    \ to\n   adapt the specific payload type being transported over the PW to the\n\
    \   PW Demultiplexer Layer used to carry the PW over the PSN.\n   The PW Encapsulation\
    \ Layer consists of three sub-layers:\n       o Payload Convergence\n       o\
    \ Timing\n       o Sequencing\n   The PW Encapsulation sub-layering and its context\
    \ with the protocol\n   stack are shown in Figure 9.\n          +---------------------------+\n\
    \          |         Payload           |\n          /===========================\\\
    \ <------ Encapsulation\n          H    Payload Convergence    H         Layer\n\
    \          H---------------------------H\n          H          Timing        \
    \   H\n          H---------------------------H\n          H        Sequencing\
    \         H\n          \\===========================/\n          |     PW Demultiplexer\
    \      |\n          +---------------------------+\n          |     PSN Convergence\
    \       |\n          +---------------------------+\n          |           PSN\
    \             |\n          +---------------------------+\n          |        \
    \ Data-Link         |\n          +---------------------------+\n          |  \
    \        Physical         |\n          +---------------------------+\n       \
    \           Figure 9.  PWE3 Encapsulation Layer in Context\n   The Payload Convergence\
    \ sub-layer is highly tailored to the specific\n   payload type.  However grouping\
    \ a number of target payload types into\n   a generic class, and then providing\
    \ a single convergence sub-layer\n   type common to the group, reduces the number\
    \ of payload convergence\n   sub-layer types.  This decreases implementation complexity.\
    \  The\n   provision of per-packet signaling and other out-of-band information\n\
    \   (other than sequencing or timing) is undertaken by this layer.\n   The Timing\
    \ and Sequencing Layers provide generic services to the\n   Payload Convergence\
    \ Layer for all payload types that require them.\n"
- title: 5.1.  Payload Convergence Layer
  contents:
  - '5.1.  Payload Convergence Layer

    '
- title: 5.1.1.  Encapsulation
  contents:
  - "5.1.1.  Encapsulation\n   The primary task of the Payload Convergence Layer is\
    \ the\n   encapsulation of the payload in PW-PDUs.  The native data units to be\n\
    \   encapsulated may contain an L2 header or L1 overhead.  This is\n   service\
    \ specific.  The Payload Convergence header carries the\n   additional information\
    \ needed to replay the native data units at the\n   CE-bound physical interface.\
    \  The PW Demultiplexer header is not\n   considered part of the PW header.\n\
    \   Not all the additional information needed to replay the native data\n   units\
    \ have to be carried in the PW header of the PW PDUs.  Some\n   information (e.g.,\
    \ service type of a PW) may be stored as state\n   information at the destination\
    \ PE during PW set up.\n"
- title: 5.1.2.  PWE3 Channel Types
  contents:
  - "5.1.2.  PWE3 Channel Types\n   The PW Encapsulation Layer and its associated\
    \ signaling require one\n   or more of the following types of channels from its\
    \ underlying PW\n   Demultiplexer and PSN Layers (channel type 1 plus one or more\
    \ of\n   channel types 2 through 4):\n   1. A reliable control channel for signaling\
    \ line events, status\n      indications, and, in exceptional cases, CE-CE events\
    \ that must be\n      translated and sent reliably between PEs.  PWE3 may need\
    \ this type\n      of control channel to provide faithful emulation of complex\
    \ data-\n      link protocols.\n   2. A high-priority, unreliable, sequenced channel.\
    \  A typical use is\n      for CE-to-CE signaling.  \"High priority\" may simply\
    \ be indicated\n      via the DSCP bits for IP or the EXP bits for MPLS, giving\
    \ the\n      packet priority during transit.  This channel type could also use\n\
    \      a bit in the tunnel header itself to indicate that packets\n      received\
    \ at the PE should be processed with higher priority\n      [RFC2474].\n   3.\
    \ A sequenced channel for data traffic that is sensitive to packet\n      reordering\
    \ (one classification for use could be for any non-IP\n      traffic).\n   4.\
    \ An unsequenced channel for data traffic insensitive to packet\n      order.\n\
    \   The data channels (2, 3, and 4 above) should be carried \"in band\"\n   with\
    \ one another to as much of a degree as is reasonably possible on\n   a PSN.\n\
    \   Where end-to-end connectivity may be disrupted by address translation\n  \
    \ [RFC3022], access-control lists, firewalls, etc., the control channel\n   may\
    \ be able to pass traffic and setup the PW, while the PW data\n   traffic is blocked\
    \ by one or more of these mechanisms.  In these\n   cases unless the control channel\
    \ is also carried \"in band\", the\n   signaling to set up the PW will not confirm\
    \ the existence of an end-\n   to-end data path.  In some cases there is a need\
    \ to synchronize CE\n   events with the data carried over a PW.  This is especially\
    \ the case\n   with TDM circuits (e.g., the on-hook/off-hook events in PSTN switches\n\
    \   might be carried over a reliable control channel whereas the\n   associated\
    \ bit stream is carried over a sequenced data channel).\n   PWE3 channel types\
    \ that are not needed by the supported PWs need not\n   be included in such an\
    \ implementation.\n"
- title: 5.1.3.  Quality of Service Considerations
  contents:
  - "5.1.3.  Quality of Service Considerations\n   Where possible, it is desirable\
    \ to employ mechanisms to provide PW\n   Quality of Service (QoS) support over\
    \ PSNs.\n"
- title: 5.2.  Payload-Independent PW Encapsulation Layers
  contents:
  - "5.2.  Payload-Independent PW Encapsulation Layers\n   Two PWE3 Encapsulation\
    \ sub-layers provide common services to all\n   payload types: Sequencing and\
    \ Timing.  These services are optional\n   and are only used if a particular PW\
    \ instance needs them.  If the\n   service is not needed, the associated header\
    \ may be omitted in order\n   to conserve processing and network resources.\n\
    \   Sometimes a specific payload type will require transport with or\n   without\
    \ sequence and/or real-time support.  For example, an invariant\n   of Frame Relay\
    \ transport is the preservation of packet order.  Some\n   Frame Relay applications\
    \ expect delivery in order and may not cope\n   with reordering of the frames.\
    \  However, where the Frame Relay\n   service is itself only being used to carry\
    \ IP, it may be desirable to\n   relax this constraint to reduce per-packet processing\
    \ cost.\n   The guiding principle is that, when possible, an existing IETF\n \
    \  protocol should be used to provide these services.  When a suitable\n   protocol\
    \ is not available, the existing protocol should be extended\n   or modified to\
    \ meet the PWE3 requirements, thereby making that\n   protocol available for other\
    \ IETF uses.  In the particular case of\n   timing, more than one general method\
    \ may be necessary to provide for\n   the full scope of payload timing requirements.\n"
- title: 5.2.1.  Sequencing
  contents:
  - "5.2.1.  Sequencing\n   The sequencing function provides three services: frame\
    \ ordering,\n   frame duplication detection, and frame loss detection.  These\n\
    \   services allow the emulation of the invariant properties of a\n   physical\
    \ wire.  Support for sequencing depends on the payload type\n   and may be omitted\
    \ if it is not needed.\n   The size of the sequence-number space depends on the\
    \ speed of the\n   emulated service, and on the maximum time of the transient\
    \ conditions\n   in the PSN.  A sequence number space greater than 2^16 may therefore\n\
    \   be needed to prevent the sequence number space from wrapping during\n   the\
    \ transient.\n"
- title: 5.2.1.1.  Frame Ordering
  contents:
  - "5.2.1.1.  Frame Ordering\n   When packets carrying the PW-PDUs traverse a PSN,\
    \ they may arrive out\n   of order at the destination PE.  For some services,\
    \ the frames\n   (control frames, data frames, or both) must be delivered in order.\n\
    \   For these services, some mechanism must be provided for ensuring in-\n   order\
    \ delivery.  Providing a sequence number in the sequence sub-\n   layer header\
    \ for each packet is one possible approach.\n   Alternatively, it can be noted\
    \ that sequencing is a subset of the\n   problem of delivering timed packets,\
    \ and that a single combined\n   mechanism such as [RFC3550] may be employed.\n\
    \   There are two possible misordering strategies:\n       o Drop misordered PW\
    \ PDUs.\n       o Try to sort PW PDUs into the correct order.\n   The choice of\
    \ strategy will depend on\n       o how critical the loss of packets is to the\
    \ operation of the PW\n         (e.g., the acceptable bit error rate),\n     \
    \  o the speeds of the PW and PSN,\n       o the acceptable delay (as delay must\
    \ be introduced to reorder),\n         and\n       o the expected incidence of\
    \ misordering.\n"
- title: 5.2.1.2.  Frame Duplication Detection
  contents:
  - "5.2.1.2.  Frame Duplication Detection\n   In rare cases, packets traversing a\
    \ PW may be duplicated by the\n   underlying PSN.  For some services, frame duplication\
    \ is not\n   acceptable.  For these services, some mechanism must be provided\
    \ to\n   ensure that duplicated frames will not be delivered to the\n   destination\
    \ CE.  The mechanism may be the same as that used to ensure\n   in-order frame\
    \ delivery.\n"
- title: 5.2.1.3.  Frame Loss Detection
  contents:
  - "5.2.1.3.  Frame Loss Detection\n   A destination PE can determine whether a frame\
    \ has been lost by\n   tracking the sequence numbers of the PW PDUs received.\n\
    \   In some instances, if a PW PDU fails to arrive within a certain time,\n  \
    \ a destination PE will have to presume that it is lost.  If a PW-PDU\n   that\
    \ has been processed as lost subsequently arrives, the destination\n   PE must\
    \ discard it.\n"
- title: 5.2.2.  Timing
  contents:
  - "5.2.2.  Timing\n   A number of native services have timing expectations based\
    \ on the\n   characteristics of the networks they were designed to travel over.\n\
    \   The emulated service may have to duplicate these network\n   characteristics\
    \ as closely as possible: e.g., in delivering native\n   traffic with bitrate,\
    \ jitter, wander, and delay characteristics\n   similar to those received at the\
    \ sending PE.\n   In such cases, the receiving PE has to play out the native traffic\
    \ as\n   it was received at the sending PE.  This relies on timing information\n\
    \   either sent between the two PEs, or in some cases received from an\n   external\
    \ reference.\n   Therefore, Timing Sub-layer must support two timing functions:\
    \  clock\n   recovery and timed payload delivery.  A particular payload type may\n\
    \   require either or both of these services.\n"
- title: 5.2.2.1.  Clock Recovery
  contents:
  - "5.2.2.1.  Clock Recovery\n   Clock recovery is the extraction of output transmission\
    \ bit timing\n   information from the delivered packet stream, and it requires\
    \ a\n   suitable mechanism.  A physical wire carries the timing information\n\
    \   natively, but extracting timing from a highly jittered source, such\n   as\
    \ packet stream, is a relatively complex task.  Therefore, it is\n   desirable\
    \ that an existing real-time protocol such as [RFC3550] be\n   used for this purpose,\
    \ unless it can be shown that this is unsuitable\n   or unnecessary for a particular\
    \ payload type.\n"
- title: 5.2.2.2.  Timed Delivery
  contents:
  - "5.2.2.2.  Timed Delivery\n   Timed delivery is the delivery of non-contiguous\
    \ PW PDUs to the PW\n   output interface with a constant phase relative to the\
    \ input\n   interface.  The timing of the delivery may be relative to a clock\n\
    \   derived from the packet stream received over the PSN clock recovery,\n   or\
    \ to an external clock.\n"
- title: 5.3.  Fragmentation
  contents:
  - "5.3.  Fragmentation\n   Ideally, a payload would be relayed across the PW as\
    \ a single unit.\n   However, there will be cases where the combined size of the\
    \ payload\n   and its associated PWE3 and PSN headers will exceed the PSN path\
    \ MTU.\n   When a packet size exceeds the MTU of a given network, fragmentation\n\
    \   and reassembly have to be performed for the packet to be delivered.\n   Since\
    \ fragmentation and reassembly generally consume considerable\n   network resources,\
    \ as compared to simply switching a packet in its\n   entirety, the need for fragmentation\
    \ and reassembly throughout a\n   network should be reduced or eliminated to the\
    \ extent possible.  Of\n   particular concern for fragmentation and reassembly\
    \ are aggregation\n   points where large numbers of PWs are processed (e.g., at\
    \ the PE).\n   Ideally, the equipment originating the traffic sent over the PW\
    \ will\n   have adaptive measures in place (e.g., [RFC1191], [RFC1981]) that\n\
    \   ensure that packets needing to be fragmented are not sent.  When this\n  \
    \ fails, the point closest to the sending host with fragmentation and\n   reassembly\
    \ capabilities should attempt to reduce the size of packets\n   to satisfy the\
    \ PSN MTU.  Thus, in the reference model for PWE3\n   (Figure 3), fragmentation\
    \ should first be performed at the CE if\n   possible.  Only if the CE cannot\
    \ adhere to an acceptable MTU size for\n   the PW should the PE attempt its own\
    \ fragmentation method.\n   In cases where MTU management fails to limit the payload\
    \ to a size\n   suitable for transmission of the PW, the PE may fall back to either\
    \ a\n   generic PW fragmentation method or, if available, the fragmentation\n\
    \   service of the underlying PSN.\n   It is acceptable for a PE implementation\
    \ not to support\n   fragmentation.  A PE that does not will drop packets that\
    \ exceed the\n   PSN MTU, and the management plane of the encapsulating PE may\
    \ be\n   notified.\n   If the length of a L2/L1 frame, restored from a PW PDU,\
    \ exceeds the\n   MTU of the destination AC, it must be dropped.  In this case,\
    \ the\n   management plane of the destination PE may be notified.\n"
- title: 5.4.  Instantiation of the Protocol Layers
  contents:
  - "5.4.  Instantiation of the Protocol Layers\n   This document does not address\
    \ the detailed mapping of the Protocol\n   Layering model to existing or future\
    \ IETF standards.  The\n   instantiation of the logical Protocol Layering model\
    \ is shown in\n   Figure 9.\n"
- title: 5.4.1.  PWE3 over an IP PSN
  contents:
  - "5.4.1.  PWE3 over an IP PSN\n   The protocol definition of PWE3 over an IP PSN\
    \ should employ existing\n   IETF protocols where possible.\n       +---------------------+\
    \              +-------------------------+\n       |      Payload        |------------->|\
    \ Raw payload if possible |\n       /=====================\\              +-------------------------+\n\
    \       H Payload Convergence H-----------+->|     Flags, seq #, etc.  |\n   \
    \    H---------------------H          /   +-------------------------+\n      \
    \ H       Timing        H---------/--->|            RTP          |\n       H---------------------H\
    \        /     +-------------+           |\n       H     Sequencing      H----one\
    \ of    |             |\n       \\=====================/        \\     |     \
    \        +-----------+\n       |  PW Demultiplexer   |---------+--->|     L2TP,\
    \ MPLS, etc.    |\n       +---------------------+              +-------------------------+\n\
    \       |  PSN Convergence    |------------->|       Not needed        |\n   \
    \    +---------------------+              +-------------------------+\n      \
    \ |        PSN          |------------->|            IP           |\n       +---------------------+\
    \              +-------------------------+\n       |      Data-Link      |------------->|\
    \         Data-link       |\n       +---------------------+              +-------------------------+\n\
    \       |       Physical      |------------->|          Physical       |\n   \
    \    +---------------------+              +-------------------------+\n      \
    \                  Figure 10.  PWE3 over an IP PSN\n   Figure 10 shows the protocol\
    \ layering for PWE3 over an IP PSN.  As a\n   rule, the payload should be carried\
    \ as received from the NSP, with\n   the Payload Convergence Layer provided when\
    \ needed.  However, in\n   certain circumstances it may be justifiable to transmit\
    \ the payload\n   in some processed form.  The reasons for this must be documented\
    \ in\n   the Encapsulation Layer definition for that payload type.\n   Where appropriate,\
    \ explicit timing is provided by RTP [RFC3550],\n   which, when used, also provides\
    \ a sequencing service.  When the PSN\n   is UDP/IP, the RTP header follows the\
    \ UDP header and precedes the PW\n   control field.  For all other cases the RTP\
    \ header follows the PW\n   control header.\n   The encapsulation layer may additionally\
    \ carry a sequence number.\n   Sequencing is to be provided either by RTP or by\
    \ the PW encapsulation\n   layer, but not by both.\n   PW Demultiplexing is provided\
    \ by the PW label, which may take the\n   form specified in a number of IETF protocols;\
    \  e.g., an MPLS label\n   [MPLSIP], an L2TP session ID [RFC3931], or a UDP port\
    \ number\n   [RFC768].  When PWs are carried over IP, the PSN Convergence Layer\n\
    \   will not be needed.\n   As a special case, if the PW Demultiplexer is an MPLS\
    \ label, the\n   protocol architecture of section 5.4.2 can be used instead of\
    \ the\n   protocol architecture of this section.\n"
- title: 5.4.2.  PWE3 over an MPLS PSN
  contents:
  - "5.4.2.  PWE3 over an MPLS PSN\n   The MPLS ethos places importance on wire efficiency.\
    \  By using a\n   control word, some components of the PWE3 protocol layers can\
    \ be\n   compressed to increase this efficiency.\n   +---------------------+\n\
    \   |      Payload        |\n   /=====================\\\n   H Payload Convergence\
    \ H--+\n   H---------------------H  |       +--------------------------------+\n\
    \   H       Timing        H--------->|              RTP               |\n   H---------------------H\
    \  |       +--------------------------------+\n   H     Sequencing      H--+------>|\
    \ Flags, Frag, Len, Seq #, etc   |\n   \\=====================/  |       +--------------------------------+\n\
    \   |  PW Demultiplexer   |--------->|           PW Label             |\n   +---------------------+\
    \  |       +--------------------------------+\n   |  PSN Convergence    |--+ \
    \ +--->| Outer Label or MPLS-in-IP encap|\n   +---------------------+     |  \
    \  +--------------------------------+\n   |        PSN          |-----+\n   +---------------------+\n\
    \   |      Data-Link      |\n   +---------------------+\n   |       Physical \
    \     |\n   +---------------------+\n          Figure 11.  PWE3 over an MPLS PSN\
    \ Using a Control Word\n   Figure 11 shows the protocol layering for PWE3 over\
    \ an MPLS PSN.  An\n   inner MPLS label is used to provide the PW demultiplexing\
    \ function.\n   A control word is used to carry most of the information needed\
    \ by the\n   PWE3 Encapsulation Layer and the PSN Convergence Layer in a compact\n\
    \   format.  The flags in the control word provide the necessary payload\n   convergence.\
    \  A sequence field provides support for both in-order\n   payload delivery and\
    \ a PSN fragmentation service within the PSN\n   Convergence Layer (supported\
    \ by a fragmentation control method).\n   Ethernet pads all frames to a minimum\
    \ size of 64 bytes.  The MPLS\n   header does not include a length indicator.\
    \  Therefore, to allow PWE3\n   to be carried in MPLS to pass correctly over an\
    \ Ethernet data-link, a\n   length correction field is needed in the control word.\
    \  As with an IP\n   PSN, where appropriate, timing is provided by RTP [RFC3550].\n\
    \   In some networks, it may be necessary to carry PWE3 over MPLS over\n   IP.\
    \  In these circumstances, the PW is encapsulated for carriage over\n   MPLS as\
    \ described in this section, and then a method of carrying MPLS\n   over an IP\
    \ PSN (such as GRE [RFC2784], [RFC2890]) is applied to the\n   resultant PW-PDU.\n"
- title: 5.4.3.  PW-IP Packet Discrimination
  contents:
  - "5.4.3.  PW-IP Packet Discrimination\n   For MPLS PSNs, there is an additional\
    \ constraint on the PW packet\n   format.  Some label switched routers detect\
    \ IP packets based on the\n   initial four bits of the packet content.  To facilitate\
    \ proper\n   functioning, these bits in PW packets must not be the same as an\
    \ IP\n   version number in current use.\n"
- title: 6.  PW Demultiplexer Layer and PSN Requirements
  contents:
  - "6.  PW Demultiplexer Layer and PSN Requirements\n   PWE3 places three service\
    \ requirements on the protocol layers used to\n   carry it across the PSN:\n \
    \      o Multiplexing\n       o Fragmentation\n       o Length and Delivery\n"
- title: 6.1.  Multiplexing
  contents:
  - "6.1.  Multiplexing\n   The purpose of the PW Demultiplexer Layer is to allow\
    \ multiple PWs to\n   be carried in a single tunnel.  This minimizes complexity\
    \ and\n   conserves resources.\n   Some types of native service are capable of\
    \ grouping multiple\n   circuits into a \"trunk\"; e.g., multiple ATM VCs in a\
    \ VP, multiple\n   Ethernet VLANs on a physical media, or multiple DS0 services\
    \ within a\n   T1 or E1.  A PW may interconnect two end-trunks.  That trunk would\n\
    \   have a single multiplexing identifier.\n   When a MPLS label is used as a\
    \ PW Demultiplexer, setting of the TTL\n   value [RFC3032] in the PW label is\
    \ application specific.\n"
- title: 6.2.  Fragmentation
  contents:
  - "6.2.  Fragmentation\n   If the PSN provides a fragmentation and reassembly service\
    \ of\n   adequate performance, it may be used to obtain an effective MTU that\n\
    \   is large enough to transport the PW PDUs.  See section 5.3 for a full\n  \
    \ discussion of the PW fragmentation issues.\n"
- title: 6.3.  Length and Delivery
  contents:
  - "6.3.  Length and Delivery\n   PDU delivery to the egress PE is the function of\
    \ the PSN Layer.\n   If the underlying PSN does not provide all the information\
    \ necessary\n   to determine the length of a PW-PDU, the Encapsulation Layer must\n\
    \   provide it.\n"
- title: 6.4.  PW-PDU Validation
  contents:
  - "6.4.  PW-PDU Validation\n   It is a common practice to use an error detection\
    \ mechanism such as a\n   CRC or similar mechanism to ensure end-to-end integrity\
    \ of frames.\n   The PW service-specific mechanisms must define whether the packet's\n\
    \   checksum shall be preserved across the PW or be removed from PE-bound\n  \
    \ PDUs and then be recalculated for insertion in CE-bound data.\n   The former\
    \ approach saves work, whereas the latter saves bandwidth.\n   For a given implementation,\
    \ the choice may be dictated by hardware\n   restrictions, which may not allow\
    \ the preservation of the checksum.\n   For protocols such as ATM and FR, the\
    \ scope of the checksum is\n   restricted to a single link.  This is because the\
    \ circuit identifiers\n   (e.g., FR DLCI or ATM VPI/VCI) only have local significance\
    \ and are\n   changed on each hop or span.  If the circuit identifier (and thus\n\
    \   checksum) were going to change as part of the PW emulation, it would\n   be\
    \ more efficient to strip and recalculate the checksum.\n   The service-specific\
    \ document for each protocol must describe the\n   validation scheme to be used.\n"
- title: 6.5.  Congestion Considerations
  contents:
  - "6.5.  Congestion Considerations\n   The PSN carrying the PW may be subject to\
    \ congestion.  The congestion\n   characteristics will vary with the PSN type,\
    \ the network architecture\n   and configuration, and the loading of the PSN.\n\
    \   If the traffic carried over the PW is known to be TCP friendly (by,\n   for\
    \ example, packet inspection), packet discard in the PSN will\n   trigger the\
    \ necessary reduction in offered load, and no additional\n   congestion avoidance\
    \ action is necessary.\n   If the PW is operating over a PSN that provides enhanced\
    \ delivery,\n   the PEs should monitor packet loss to ensure that the requested\n\
    \   service is actually being delivered.  If it is not, then the PE\n   should\
    \ assume that the PSN is providing a best-effort service and\n   should use the\
    \ best-effort service congestion avoidance measures\n   described below.\n   If\
    \ best-effort service is being used and the traffic is not known to\n   be TCP\
    \ friendly, the PEs should monitor packet loss to ensure that\n   the loss rate\
    \ is within acceptable parameters.  Packet loss is\n   considered acceptable if\
    \ a TCP flow across the same network path and\n   experiencing the same network\
    \ conditions would achieve an average\n   throughput, measured on a reasonable\
    \ timescale, not less than that\n   which the PW flow is achieving.  This condition\
    \ can be satisfied by\n   implementing a rate-limiting measure in the NSP, or\
    \ by shutting down\n   one or more PWs.  The choice of which approach to use depends\
    \ upon\n   the type of traffic being carried.  Where congestion is avoided by\n\
    \   shutting down a PW, a suitable mechanism must be provided to prevent\n   it\
    \ from immediately returning to service and causing a series of\n   congestion\
    \ pulses.\n   The comparison to TCP cannot be specified exactly but is intended\
    \ as\n   an \"order-of-magnitude\" comparison in timescale and throughput.  The\n\
    \   timescale on which TCP throughput is measured is the round-trip time\n   of\
    \ the connection.  In essence, this requirement states that it is\n   not acceptable\
    \ to deploy an application (using PWE3 or any other\n   transport protocol) on\
    \ the best-effort Internet, which consumes\n   bandwidth arbitrarily and does\
    \ not compete fairly with TCP within an\n   order of magnitude.  One method of\
    \ determining an acceptable PW\n   bandwidth is described in [RFC3448].\n"
- title: 7.  Control Plane
  contents:
  - "7.  Control Plane\n   This section describes PWE3 control plane services.\n"
- title: 7.1.  Setup or Teardown of Pseudo Wires
  contents:
  - "7.1.  Setup or Teardown of Pseudo Wires\n   A PW must be set up before an emulated\
    \ service can be established and\n   must be torn down when an emulated service\
    \ is no longer needed.\n   Setup or teardown of a PW can be triggered by an operator\
    \ command,\n   from the management plane of a PE, by signaling set-up or teardown\
    \ of\n   an AC (e.g., an ATM SVC), or by an auto-discovery mechanism.\n   During\
    \ the setup process, the PEs have to exchange information (e.g.,\n   learn each\
    \ other's capabilities).  The tunnel signaling protocol may\n   be extended to\
    \ provide mechanisms that enable the PEs to exchange all\n   necessary information\
    \ on behalf of the PW.\n   Manual configuration of PWs can be considered a special\
    \ kind of\n   signaling and is allowed.\n"
- title: 7.2.  Status Monitoring
  contents:
  - "7.2.  Status Monitoring\n   Some native services have mechanisms for status monitoring.\
    \  For\n   example, ATM supports OAM for this purpose.  For these services, the\n\
    \   corresponding emulated services must specify how to perform status\n   monitoring.\n"
- title: 7.3.  Notification of Pseudo Wire Status Changes
  contents:
  - '7.3.  Notification of Pseudo Wire Status Changes

    '
- title: 7.3.1.  Pseudo Wire Up/Down Notification
  contents:
  - "7.3.1.  Pseudo Wire Up/Down Notification\n   If a native service requires bi-directional\
    \ connectivity, the\n   corresponding emulated service can only be signaled as\
    \ being up when\n   the PW and PSN tunnels (if used), are functional in both directions.\n\
    \   Because the two CEs of an emulated service are not adjacent, a\n   failure\
    \ may occur at a place so that one or both physical links\n   between the CEs\
    \ and PEs remain up.  For example, in Figure 2, if the\n   physical link between\
    \ CE1 and PE1 fails, the physical link between\n   CE2 and PE2 will not be affected\
    \ and will remain up.  Unless CE2 is\n   notified about the remote failure, it\
    \ will continue to send traffic\n   over the emulated service to CE1.  Such traffic\
    \ will be discarded at\n   PE1.  Some native services have failure notification\
    \ so that when the\n   services fail, both CEs will be notified.  For these native\
    \ services,\n   the corresponding PWE3 service must provide a failure notification\n\
    \   mechanism.\n   Similarly, if a native service has notification mechanisms\
    \ so that\n   all the affected services will change status from \"Down\" to \"\
    Up\" when\n   a network failure is fixed, the corresponding emulated service must\n\
    \   provide a similar mechanism for doing so.\n   These mechanisms may already\
    \ be built into the tunneling protocol.\n   For example, the L2TP control protocol\
    \ [RFC2661] [RFC3931] has this\n   capability, and LDP has the ability to withdraw\
    \ the corresponding\n   MPLS label.\n"
- title: 7.3.2.  Misconnection and Payload Type Mismatch
  contents:
  - "7.3.2.  Misconnection and Payload Type Mismatch\n   With PWE3, misconnection\
    \ and payload type mismatch can occur.\n   Misconnection can breach the integrity\
    \ of the system.  Payload\n   mismatch can disrupt the customer network.  In both\
    \ instances, there\n   are security and operational concerns.\n   The services\
    \ of the underlying tunneling mechanism and its associated\n   control protocol\
    \ can be used to mitigate this.  As part of the PW\n   setup, a PW-TYPE identifier\
    \ is exchanged.  This is then used by the\n   forwarder and the NSP to verify\
    \ the compatibility of the ACs.\n"
- title: 7.3.3.  Packet Loss, Corruption, and Out-of-Order Delivery
  contents:
  - "7.3.3.  Packet Loss, Corruption, and Out-of-Order Delivery\n   A PW can incur\
    \ packet loss, corruption, and out-of-order delivery on\n   the PSN path between\
    \ the PEs.  This can affect the working condition\n   of an emulated service.\
    \  For some payload types, packet loss,\n   corruption, and out-of-order delivery\
    \ can be mapped either to a bit\n   error burst, or to loss of carrier on the\
    \ PW.  If a native service\n   has some mechanism to deal with bit error, the\
    \ corresponding PWE3\n   service should provide a similar mechanism.\n"
- title: 7.3.4.  Other Status Notification
  contents:
  - "7.3.4.  Other Status Notification\n   A PWE3 approach may provide a mechanism\
    \ for other status\n   notifications, if any are needed.\n"
- title: 7.3.5.  Collective Status Notification
  contents:
  - "7.3.5.  Collective Status Notification\n   The status of a group of emulated\
    \ services may be affected\n   identically by a single network incident.  For\
    \ example, when the\n   physical link (or sub-network) between a CE and a PE fails,\
    \ all the\n   emulated services that go through that link (or sub-network) will\n\
    \   fail.  It is likely that a group of emulated services all terminate\n   at\
    \ a remote CE.  There may also be multiple such CEs affected by the\n   failure.\
    \  Therefore, it is desirable that a single notification\n   message be used to\
    \ notify failure of the whole group of emulated\n   services.\n   A PWE3 approach\
    \ may provide a mechanism for notifying status changes\n   of a group of emulated\
    \ circuits.  One possible method is to associate\n   each emulated service with\
    \ a group ID when the PW for that emulated\n   service is set up.  Multiple emulated\
    \ services can then be grouped by\n   associating them with the same group ID.\
    \  In status notification,\n   this group ID can be used to refer all the emulated\
    \ services in that\n   group.  The group ID mechanism should be a mechanism provided\
    \ by the\n   underlying tunnel signaling protocol.\n"
- title: 7.4.  Keep-Alive
  contents:
  - "7.4.  Keep-Alive\n   If a native service has a keep-alive mechanism, the corresponding\n\
    \   emulated service must provide a mechanism to propagate it across the\n   PW.\
    \  Transparently transporting keep-alive messages over the PW would\n   follow\
    \ the principle of minimum intervention.  However, to reproduce\n   the semantics\
    \ of the native mechanism accurately, some PWs may\n   require an alternative\
    \ approach, such as piggy-backing on the PW\n   signaling mechanism.\n"
- title: 7.5.  Handling Control Messages of the Native Services
  contents:
  - "7.5.  Handling Control Messages of the Native Services\n   Some native services\
    \ use control messages for circuit maintenance.\n   These control messages may\
    \ be in-band (e.g., Ethernet flow control,\n   ATM performance management, or\
    \ TDM tone signaling) or out-of-band,\n   (e.g., the signaling VC of an ATM VP,\
    \ or TDM CCS signaling).\n   Given the principle of minimum intervention, it is\
    \ desirable that the\n   PEs participate as little as possible in the signaling\
    \ and\n   maintenance of the native services.  This principle should not,\n  \
    \ however, override the need to emulate the native service\n   satisfactorily.\n\
    \   If control messages are passed through, it may be desirable to send\n   them\
    \ by using either a higher priority or a reliable channel provided\n   by the\
    \ PW Demultiplexer layer.  See Section 5.1.2, PWE3 Channel\n   Types.\n"
- title: 8.  Management and Monitoring
  contents:
  - "8.  Management and Monitoring\n   This section describes the management and monitoring\
    \ architecture for\n   PWE3.\n"
- title: 8.1.  Status and Statistics
  contents:
  - "8.1.  Status and Statistics\n   The PE should report the status of the interface\
    \ and tabulate\n   statistics that help monitor the state of the network and help\n\
    \   measure service-level agreements (SLAs).  Typical counters include\n   the\
    \ following:\n       o Counts of PW-PDUs sent and received, with and without errors.\n\
    \       o Counts of sequenced PW-PDUs lost.\n       o Counts of service PDUs sent\
    \ and received over the PSN, with and\n         without errors (non-TDM).\n  \
    \     o Service-specific interface counts.\n       o One-way delay and delay variation.\n\
    \   These counters would be contained in a PW-specific MIB, and they\n   should\
    \ not replicate existing MIB counters.\n"
- title: 8.2.  PW SNMP MIB Architecture
  contents:
  - "8.2.  PW SNMP MIB Architecture\n   This section describes the general architecture\
    \ for SNMP MIBs used to\n   manage PW services and the underlying PSN.  The intent\
    \ here is to\n   provide a clear picture of how all the pertinent MIBs fit together\
    \ to\n   form a cohesive management framework for deploying PWE3 services.\n \
    \  Note that the names of MIB modules used below are suggestions and do\n   not\
    \ necessarily require that the actual modules used to realize the\n   components\
    \ in the architecture be named exactly so.\n"
- title: 8.2.1.  MIB Layering
  contents:
  - "8.2.1.  MIB Layering\n   The SNMP MIBs created for PWE3 should fit the architecture\
    \ shown in\n   Figure 12.  The architecture provides a layered modular model into\n\
    \   which any supported emulated service can be connected to any\n   supported\
    \ PSN type.  This model fosters reuse of as much\n   functionality as possible.\
    \  For instance, the emulated service layer\n   MIB modules do not redefine the\
    \ existing emulated service MIB module;\n   rather, they only associate it with\
    \ the pseudo wires used to carry\n   the emulated service over the configured\
    \ PSN.  In this way, the PWE3\n   MIB architecture follows the overall PWE3 architecture.\n\
    \   The architecture does allow for the joining of unsupported emulated\n   service\
    \ or PSN types by simply defining additional MIB modules to\n   associate new\
    \ types with existing ones.  These new modules can\n   subsequently be standardized.\
    \  Note that there is a separate MIB\n   module for each emulated service, as\
    \ well as one for each underlying\n   PSN.  These MIB modules may be used in various\
    \ combinations as\n   needed.\n       Native\n    Service MIBs    ...        \
    \   ...               ...\n                     |             |              \
    \   |\n               +-----------+ +-----------+     +-----------+\n     Service\
    \   |    CEP    | | Ethernet  |     |    ATM    |\n      Layer    |Service MIB|\
    \ |Service MIB| ... |Service MIB|\n               +-----------+ +-----------+\
    \     +-----------+\n                       \\           |             /\n   \
    \                      \\         |           /\n   - - - - - - - - - - - - \\\
    \ - - - | - - - - / - - - - - - -\n                             \\     |     \
    \  /\n               +-------------------------------------------+\n    Generic\
    \ PW |            Generic PW MIBs                |\n      Layer    +-------------------------------------------+\n\
    \                            /             \\\n   - - - - - - - - - - - - / -\
    \ - - - - - - - \\ - - - - - - -\n                         /                 \
    \    \\\n                       /                         \\\n               +--------------+\
    \             +----------------+\n     PSN VC    |L2TP VC MIB(s)|            \
    \ | MPLS VC MIB(s) |\n      Layer    +--------------+             +----------------+\n\
    \                      |                              |\n     Native     +-----------+\
    \                  +-----------+\n      PSN       |L2TP MIB(s)|              \
    \    |MPLS MIB(s)|\n      MIBs      +-----------+                  +-----------+\n\
    \               Figure 12.  MIB Module Layering Relationship\n   Figure 13 shows\
    \ an example for a SONET PW carried over MPLS Traffic\n   Engineering Tunnel and\
    \ an LDP-signaled LSP.\n                            +-----------------+\n    \
    \                        |    SONET MIB    |  RFC3592\n                      \
    \      +-----------------+\n                                     |\n         \
    \              +------------------------------+\n            Service    | Circuit\
    \ Emulation Service MIB|\n             Layer     +------------------------------+\n\
    \           - - - - - - - - - - - - - | - - - - - - - - - - - - -\n          \
    \                  +-----------------+\n           Generic PW       | Generic\
    \ PW MIB  |\n             Layer          +-----------------+\n           - - -\
    \ - - - - - - - - - - | - - - - - - - - - - - - -\n                          \
    \  +-----------------+\n             PSN VC         |   MPLS VC MIBs  |\n    \
    \         Layer          +-----------------+\n                               |\
    \           |\n                  +-----------------+  +------------------+\n \
    \                 | MPLS-TE-STD-MIB |  | MPLS-LSR-STD-MIB |\n                \
    \  +-----------------+  +------------------+\n            Figure 13.  SONET PW\
    \ over MPLS PSN Service-Specific Example\n"
- title: 8.2.2.  Service Layer MIB Modules
  contents:
  - "8.2.2.  Service Layer MIB Modules\n   This conceptual layer in the model contains\
    \ MIB modules used to\n   represent the relationship between emulated PWE3 services\
    \ such as\n   Ethernet, ATM, or Frame Relay and the pseudo-wire used to carry\
    \ that\n   service across the PSN.  This layer contains corresponding MIB\n  \
    \ modules used to mate or adapt those emulated services to the generic\n   pseudo-wire\
    \ representation these are represented in the \"Generic PW\n   MIB\" functional\
    \ block in Figure 13 above.  This working group should\n   not produce any MIB\
    \ modules for managing the general service; rather,\n   it should produce just\
    \ those modules used to interface or adapt the\n   emulated service onto the PWE3\
    \ management framework as shown above.\n   For example, the standard SONET-MIB\
    \ [RFC3592] is designed and\n   maintained by another working group.  The SONET-MIB\
    \ is designed to\n   manage the native service without PW emulation.  However,\
    \ the PWE3\n   working group is chartered to produce standards that show how to\n\
    \   emulate existing technologies such as SONET/SDH over pseudo-wires\n   rather\
    \ than reinvent those modules.\n"
- title: 8.2.3.  Generic PW MIB Modules
  contents:
  - "8.2.3.  Generic PW MIB Modules\n   The middle layer in the architecture is referred\
    \ to as the Generic PW\n   Layer.  MIBs in this layer are responsible for providing\
    \ pseudo-wire\n   specific counters and service models used for monitoring and\n\
    \   configuration of PWE3 services over any supported PSN service.  That\n   is,\
    \ this layer provides a general model of PWE3 abstraction for\n   management purposes.\
    \  This MIB is used to interconnect the MIB\n   modules residing in the Service\
    \ Layer to the PSN VC Layer MIBs (see\n   section 8.2.4).\n"
- title: 8.2.4.  PSN VC Layer MIB Modules
  contents:
  - "8.2.4.  PSN VC Layer MIB Modules\n   The third layer in the PWE3 management architecture\
    \ is referred to as\n   the PSN VC Layer.  It is composed of MIBs that are specifically\n\
    \   designed to associate pseudo-wires onto those underlying PSN\n   transport\
    \ technologies that carry the pseudo-wire payloads across the\n   PSN.  In general,\
    \ this means that the MIB module provides a mapping\n   between the emulated service\
    \ that is mapped to the pseudo-wire via\n   the Service Layer and the Generic\
    \ PW MIB Layer onto the native PSN\n   service.  For example, in the case of MPLS,\
    \ for example, it is\n   required that the general VC service be mapped into MPLS\
    \ LSPs via the\n   MPLS-LSR-STD-MIB [RFC3813] or Traffic-Engineered (TE) Tunnels\
    \ via the\n   MPLS-TE-STD-MIB [RFC3812].  In addition, the MPLS-LDP-STD-MIB\n\
    \   [RFC3815] may be used to reveal the MPLS labels that are distributed\n   over\
    \ the MPLS PSN in order to maintain the PW service.  As with the\n   native service\
    \ MIB modules described earlier, the MIB modules used to\n   manage the native\
    \ PSN services are produced by other working groups\n   that design and specify\
    \ the native PSN services.  These MIBs should\n   contain the appropriate mechanisms\
    \ for monitoring and configuring the\n   PSN service that the emulated PWE3 service\
    \ will function correctly.\n"
- title: 8.3.  Connection Verification and Traceroute
  contents:
  - "8.3.  Connection Verification and Traceroute\n   A connection verification mechanism\
    \ should be supported by PWs.\n   Connection verification and other alarm mechanisms\
    \ can alert the\n   operator that a PW has lost its remote connection.  The opaque\
    \ nature\n   of a PW means that it is not possible to specify a generic connection\n\
    \   verification or traceroute mechanism that passes this status to the\n   CEs\
    \ over the PW.  If connection verification status of the PW is\n   needed by the\
    \ CE, it must be mapped to the native connection status\n   method.\n   For troubleshooting\
    \ purposes, it is sometimes desirable to know the\n   exact functional path of\
    \ a PW between PEs.  This is provided by the\n   traceroute service of the underlying\
    \ PSN.  The opaque nature of the\n   PW means that this traceroute information\
    \ is only available within\n   the provider network; e.g., at the PEs.\n"
- title: 9.  IANA Considerations
  contents:
  - "9.  IANA Considerations\n   IANA considerations will be identified in the PWE3\
    \ documents that\n   define the PWE3 encapsulation, control, and management protocols.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   PWE3 provides no means of protecting the integrity,\
    \ confidentiality,\n   or delivery of the native data units.  The use of PWE3\
    \ can therefore\n   expose a particular environment to additional security threats.\n\
    \   Assumptions that might be appropriate when all communicating systems\n   are\
    \ interconnected via a point-to-point or circuit-switched network\n   may no longer\
    \ hold when they are interconnected with an emulated wire\n   carried over some\
    \ types of PSN.  It is outside the scope of this\n   specification to fully analyze\
    \ and review the risks of PWE3,\n   particularly as these risks will depend on\
    \ the PSN.  An example\n   should make the concern clear.  A number of IETF standards\
    \ employ\n   relatively weak security mechanisms when communicating nodes are\n\
    \   expected to be connected to the same local area network.  The Virtual\n  \
    \ Router Redundancy Protocol [RFC3768] is one instance.  The relatively\n   weak\
    \ security mechanisms represent a greater vulnerability in an\n   emulated Ethernet\
    \ connected via a PW.\n   Exploitation of vulnerabilities from within the PSN\
    \ may be directed\n   to the PW Tunnel end point so that PW Demultiplexer and\
    \ PSN tunnel\n   services are disrupted.  Controlling PSN access to the PW Tunnel\
    \ end\n   point is one way to protect against this.  By restricting PW Tunnel\n\
    \   end point access to legitimate remote PE sources of traffic, the PE\n   may\
    \ reject traffic that would interfere with the PW Demultiplexing\n   and PSN tunnel\
    \ services.\n   Protection mechanisms must also address the spoofing of tunneled\
    \ PW\n   data.  The validation of traffic addressed to the PW Demultiplexer\n\
    \   end-point is paramount in ensuring integrity of PW encapsulation.\n   Security\
    \ protocols such as IPSec [RFC2401] may be used by the PW\n   Demultiplexer Layer\
    \ in order provide authentication and data\n   integrity of the data between the\
    \ PW Demultiplexer End-points.\n   IPSec may provide authentication, integrity,\
    \ and confidentiality, of\n   data transferred between two PEs.  It cannot provide\
    \ the equivalent\n   services to the native service.\n   Based on the type of\
    \ data being transferred, the PW may indicate to\n   the PW Demultiplexer Layer\
    \ that enhanced security services are\n   required.  The PW Demultiplexer Layer\
    \ may define multiple protection\n   profiles based on the requirements of the\
    \ PW emulated service.  CE-\n   to-CE signaling and control events emulated by\
    \ the PW and some data\n   types may require additional protection mechanisms.\
    \  Alternatively,\n   the PW Demultiplexer Layer may use peer authentication for\
    \ every PSN\n   packet to prevent spoofed native data units from being sent to\
    \ the\n   destination CE.\n   The unlimited transformation capability of the NSP\
    \ may be perceived\n   as a security risk.  In practice the type of operation\
    \ that the NSP\n   may perform will be limited to those that have been implemented\
    \ in\n   the data path.  A PE designed and managed to best current practice\n\
    \   will have controls in place that protect and validate its\n   configuration,\
    \ and these will be sufficient to ensure that the NSP\n   behaves as expected.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   We thank Sasha Vainshtein for his work on Native Service\
    \ Processing\n   and advice on bit stream over PW services and Thomas K. Johnson\
    \ for\n   his work on the background and motivation for PWs.\n   We also thank\
    \ Ron Bonica, Stephen Casner, Durai Chinnaiah, Jayakumar\n   Jayakumar, Ghassem\
    \ Koleyni, Danny McPherson, Eric Rosen, John\n   Rutemiller, Scott Wainner, and\
    \ David Zelig for their comments and\n   contributions.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC3931]   Lau, J., Townsley, M., and I. Goyret,\
    \ \"Layer Two\n               Tunneling Protocol - Version 3 (L2TPv3), RFC 3931,\
    \ March\n               2005.\n   [RFC768]    Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n               August 1980.\n   [RFC2401]   Kent, S. and R.\
    \ Atkinson, \"Security Architecture for the\n               Internet Protocol\"\
    , RFC 2401, November 1998.\n   [RFC2474]   Nichols, K., Blake, S., Baker, F.,\
    \ and D. Black,\n               \"Definition of the Differentiated Services Field\
    \ (DS\n               Field) in the IPv4 and IPv6 Headers\", RFC 2474, December\n\
    \               1998.\n   [RFC3592]   Tesink, K., \"Definitions of Managed Objects\
    \ for the\n               Synchronous Optical Network/Synchronous Digital Hierarchy\n\
    \               (SONET/SDH) Interface Type\", RFC 3592, September 2003.\n   [RFC2661]\
    \   Townsley, W., Valencia, A., Rubens, A., Pall, G., Zorn,\n               G.,\
    \ and B. Palter, \"Layer Two Tunneling Protocol \"L2TP\"\",\n               RFC\
    \ 2661, August 1999.\n   [RFC2784]   Farinacci, D., Li, T., Hanks, S., Meyer,\
    \ D., and P.\n               Traina, \"Generic Routing Encapsulation (GRE)\",\
    \ RFC 2784,\n               March 2000.\n   [RFC2890]   Dommety, G., \"Key and\
    \ Sequence Number Extensions to GRE\",\n               RFC 2890, September 2000.\n\
    \   [RFC3032]   Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n          \
    \     Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n              \
    \ Encoding\", RFC 3032, January 2001.\n   [RFC3550]   Schulzrinne, H.,  Casner,\
    \ S., Frederick, R., and V.\n               Jacobson, \"RTP: A Transport Protocol\
    \ for Real-Time\n               Applications\", STD 64, RFC 3550, July 2003.\n"
- title: 12.2. Informative References
  contents:
  - "12.2. Informative References\n   [DVB]       EN 300 744 Digital Video Broadcasting\
    \ (DVB); Framing\n               structure, channel coding and modulation for\
    \ digital\n               terrestrial television (DVB-T), European\n         \
    \      Telecommunications Standards Institute (ETSI).\n   [RFC3815]   Cucchiara,\
    \ J., Sjostrand, H., and J. Luciani,\n               \"Definitions of Managed\
    \ Objects for the Multiprotocol\n               Label Switching (MPLS), Label\
    \ Distribution Protocol\n               (LDP)\", RFC 3815, June 2004.\n   [RFC3813]\
    \   Srinivasan, C., Viswanathan, A., and T. Nadeau,\n               \"Multiprotocol\
    \ Label Switching (MPLS) Label Switching\n               Router (LSR) Management\
    \ Information Base (MIB)\", RFC\n               3813, June 2004.\n   [MPLSIP]\
    \    Rosen et al, \"Encapsulating MPLS in IP or Generic Routing\n            \
    \   Encapsulation (GRE)\", Work in Progress, March 2004.\n   [RFC1191]   Mogul,\
    \ J. and S. Deering, \"Path MTU discovery\", RFC 1191,\n               November\
    \ 1990.\n   [RFC1958]   Carpenter, B., \"Architectural Principles of the\n   \
    \            Internet\", RFC 1958, June 1996.\n   [RFC1981]   McCann, J., Deering,\
    \ S., and J. Mogul, \"Path MTU\n               Discovery for IP version 6\", RFC\
    \ 1981, August 1996.\n   [RFC2022]   Armitage, G., \"Support for Multicast over\
    \ UNI 3.0/3.1\n               based ATM Networks\", RFC 2022, November 1996.\n\
    \   [RFC3768]   Hinden, R., \"Virtual Router Redundancy Protocol (VRRP)\",\n \
    \              RFC 3768, April 2004.\n   [RFC3022]   Srisuresh, P. and K. Egevang,\
    \ \"Traditional IP Network\n               Address Translator (Traditional NAT)\"\
    , RFC 3022, January\n               2001.\n   [RFC3448]   Handley, M., Floyd,\
    \ S., Padhye, J., and J. Widmer, \"TCP\n               Friendly Rate Control (TFRC):\
    \ Protocol Specification\",\n               RFC 3448, January 2003.\n   [RFC3812]\
    \   Srinivasan, C., Viswanathan, A., and T. Nadeau,\n               \"Multiprotocol\
    \ Label Switching (MPLS) Traffic Engineering\n               (TE) Management Information\
    \ Base (MIB)\", RFC 3812, June\n               2004.\n   [RFC3916]   Xiao, X.,\
    \ McPherson, D., and P. Pate, Eds, \"Requirements\n               for Pseudo-Wire\
    \ Emulation Edge-to-Edge (PWE3)\", RFC 3916,\n               September 2004.\n"
- title: 13.  Co-Authors
  contents:
  - "13.  Co-Authors\n   The following are co-authors of this document:\n   Thomas\
    \ K. Johnson\n   Litchfield Communications\n   Kireeti Kompella\n   Juniper Networks,\
    \ Inc.\n   Andrew G. Malis\n   Tellabs\n   Thomas D. Nadeau\n   Cisco Systems\n\
    \   Tricci So\n   Caspian Networks\n   W. Mark Townsley\n   Cisco Systems\n  \
    \ Craig White\n   Level 3 Communications, LLC.\n   Lloyd Wood\n   Cisco Systems\n"
- title: 14.  Editors' Addresses
  contents:
  - "14.  Editors' Addresses\n   Stewart Bryant\n   Cisco Systems\n   250, Longwater\n\
    \   Green Park\n   Reading, RG2 6GB,\n   United Kingdom\n   EMail: stbryant@cisco.com\n\
    \   Prayson Pate\n   Overture Networks, Inc.\n   507 Airport Boulevard\n   Morrisville,\
    \ NC, USA 27560\n   EMail: prayson.pate@overturenetworks.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
