- title: __initial_text__
  contents:
  - '         An Analysis of Scaling Issues in MPLS-TE Core Networks

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ (http://trustee.ietf.org/\n   license-info) in effect on the date of publication\
    \ of this document.\n   Please review these documents carefully, as they describe\
    \ your rights\n   and restrictions with respect to this document.\n"
- title: Abstract
  contents:
  - "Abstract\n   Traffic engineered Multiprotocol Label Switching (MPLS-TE) is\n\
    \   deployed in providers' core networks.  As providers plan to grow\n   these\
    \ networks, they need to understand whether existing protocols\n   and implementations\
    \ can support the network sizes that they are\n   planning.\n   This document\
    \ presents an analysis of some of the scaling concerns\n   for the number of Label\
    \ Switching Paths (LSPs) in MPLS-TE core\n   networks, and examines the value\
    \ of two techniques (LSP hierarchies\n   and multipoint-to-point LSPs) for improving\
    \ scaling.  The intention\n   is to motivate the development of appropriate deployment\
    \ techniques\n   and protocol extensions to enable the application of MPLS-TE\
    \ in large\n   networks.\n   This document only considers the question of achieving\
    \ scalability\n   for the support of point-to-point MPLS-TE LSPs.  Point-to-multipoint\n\
    \   MPLS-TE LSPs are for future study.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Overview ...................................................3\n  \
    \    1.2. Glossary of Notation .......................................5\n   2.\
    \ Issues of Concern for Scaling ...................................5\n      2.1.\
    \ LSP State ..................................................5\n      2.2. Processing\
    \ Overhead ........................................6\n      2.3. RSVP-TE Implications\
    \ .......................................6\n      2.4. Management .................................................7\n\
    \   3. Network Topologies ..............................................8\n  \
    \    3.1. The Snowflake Network Topology .............................9\n    \
    \  3.2. The Ladder Network Topology ...............................11\n      3.3.\
    \ Commercial Drivers for Selected Configurations ............14\n      3.4. Other\
    \ Network Topologies ..................................15\n   4. Required Network\
    \ Sizes .........................................16\n      4.1. Practical Numbers\
    \ .........................................16\n   5. Scaling in Flat Networks\
    \ .......................................16\n      5.1. Snowflake Networks ........................................17\n\
    \      5.2. Ladder Networks ...........................................18\n  \
    \ 6. Scaling Snowflake Networks with Forwarding Adjacencies .........22\n    \
    \  6.1. Two-Layer Hierarchy .......................................22\n      \
    \     6.1.1. Tuning the Network Topology to Suit the\n                  Two-Layer\
    \ Hierarchy ................................23\n      6.2. Alternative Two-Layer\
    \ Hierarchy ...........................24\n      6.3. Three-Layer Hierarchy .....................................25\n\
    \      6.4. Issues with Hierarchical LSPs .............................26\n  \
    \ 7. Scaling Ladder Networks with Forwarding Adjacencies ............27\n    \
    \  7.1. Two-Layer Hierarchy .......................................27\n      7.2.\
    \ Three-Layer Hierarchy .....................................28\n      7.3. Issues\
    \ with Hierarchical LSPs .............................29\n   8. Scaling Improvements\
    \ through Multipoint-to-Point LSPs ..........30\n      8.1. Overview of MP2P LSPs\
    \ .....................................30\n      8.2. LSP State: A Better Measure\
    \ of Scalability ................31\n      8.3. Scaling Improvements for Snowflake\
    \ Networks ...............32\n           8.3.1. Comparison with Other Scenarios\
    \ ....................33\n      8.4. Scaling Improvements for Ladder Networks\
    \ ..................34\n           8.4.1. Comparison with Other Scenarios ....................36\n\
    \           8.4.2. LSP State Compared with LSP Numbers ................37\n  \
    \    8.5. Issues with MP2P LSPs .....................................37\n   9.\
    \ Combined Models ................................................39\n   10. An\
    \ Alternate Solution .........................................39\n      10.1.\
    \ Pros and Cons of the Alternate Solution ..................40\n   11. Management\
    \ Considerations .....................................42\n   12. Security Considerations\
    \ .......................................42\n   13. Recommendations ...............................................42\n\
    \   14. Acknowledgements ..............................................43\n  \
    \ 15. Normative References ..........................................43\n   16.\
    \ Informative References ........................................43\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network operators and service providers are examining scaling\
    \ issues\n   as they look to deploy ever-larger traffic engineered Multiprotocol\n\
    \   Label Switching (MPLS-TE) networks.  Concerns have been raised about\n   the\
    \ number of Label Switched Paths (LSPs) that need to be supported\n   at the edge\
    \ and at the core of the network.  The impact on control\n   plane and management\
    \ plane resources threatens to outweigh the\n   benefits and popularity of MPLS-TE,\
    \ while the physical limitations of\n   the routers may constrain the deployment\
    \ options.\n   Historically, it has been assumed that all MPLS-TE scaling issues\
    \ can\n   be addressed using hierarchical LSP [RFC4206].  However, analysis\n\
    \   shows that the improvement gained by LSP hierarchies is not as\n   significant\
    \ in all topologies and at all points in the network as\n   might have been presumed.\
    \  Further, additional management issues are\n   introduced to determine the end-points\
    \ of the hierarchical LSPs and\n   to operate them.  Although this does not invalidate\
    \ the benefits of\n   LSP hierarchies, it does indicate that additional techniques\
    \ may be\n   desirable in order to fully scale MPLS-TE networks.\n   This document\
    \ examines the scaling properties of two generic MPLS-TE\n   network topologies\
    \ and investigates the benefits of two scaling\n   techniques.\n"
- title: 1.1.  Overview
  contents:
  - "1.1.  Overview\n   Physical topology scaling concerns are addressed by building\
    \ networks\n   that are not fully meshed.  Network topologies tend to be meshed\
    \ in\n   the core but tree-shaped at the edges, giving rise to a snowflake\n \
    \  design.  Alternatively, the core may be more of a ladder shape with\n   tree-shaped\
    \ edges.\n   MPLS-TE, however, establishes a logical full mesh between all edge\n\
    \   points in the network, and this is where the scaling problems arise\n   since\
    \ the structure of the network tends to focus a large number of\n   LSPs within\
    \ the core of the network.\n   This document presents two generic network topologies\
    \ (the snowflake\n   and the ladder) and attempts to parameterize the networks\
    \ by making\n   some generalities.  It introduces terminology for the different\n\
    \   scaling parameters and examines how many LSPs might be required to be\n  \
    \ carried within the core of a network.\n   Two techniques (hierarchical LSPs\
    \ and multipoint-to-point LSPs) are\n   introduced and an examination is made\
    \ of the scaling benefits that\n   they offer as well as of some of the concerns\
    \ with using these\n   techniques.\n   Of necessity, this document makes many\
    \ generalizations.  Not least\n   among these is a set of assumptions about the\
    \ symmetry and\n   connectivity of the physical network.  It is hoped that these\n\
    \   generalizations will not impinge on the usefulness of the overview of\n  \
    \ the scaling properties that this document attempts to give.  Indeed,\n   the\
    \ symmetry of the example topologies tends to highlight the scaling\n   issues\
    \ of the different solution models, and this may be useful in\n   exposing the\
    \ worst case scenarios.\n   Although protection mechanisms like Fast Reroute (FRR)\
    \ [RFC4090] are\n   briefly discussed, the main body of this document considers\
    \ stable\n   network cases.  It should be noted that make-before-break\n   re-optimisation\
    \ after link failure may result in a significant number\n   of 'duplicate' LSPs.\
    \  This issue is not addressed in this document.\n   It should also be understood\
    \ that certain deployment models where\n   separate traffic engineered LSPs are\
    \ used to provide different\n   services (such as layer 3 Virtual Private Networks\
    \ (VPNs) [RFC4110]\n   or pseudowires [RFC3985]) or different classes of service\
    \ [RFC3270]\n   may result in 'duplicate' or 'parallel' LSPs running between any\
    \ pair\n   of provider edge nodes (PEs).  This scaling factor is also not\n  \
    \ considered in this document, but may be easily applied as a linear\n   factor\
    \ by the reader.\n   The operation of security mechanisms in MPLS-TE networks\
    \ [MPLS-SEC]\n   may have an impact on the ability of the network to scale.  For\n\
    \   example, they may increase both the size and number of control plane\n   messages.\
    \  Additionally, they may increase the processing overhead as\n   control plane\
    \ messages are subject to processing algorithms (such as\n   encryption), and\
    \ security keys need to be managed.  Deployers will\n   need to consider the trade-offs\
    \ between scaling objectives and\n   security objectives in their networks, and\
    \ should resist the\n   temptation to respond to a degradation of scaling performance\
    \ by\n   turning off security techniques that have previously been deemed as\n\
    \   necessary.  Further analysis of the effects of security measures on\n   scalability\
    \ are not considered further in this document.\n   This document is designed to\
    \ help service providers discover whether\n   existing protocols and implementations\
    \ can support the network sizes\n   that they are planning.  To do this, it presents\
    \ an analysis of some\n   of the scaling concerns for MPLS-TE core networks and\
    \ examines the\n   value of two techniques for improving scaling.  This should\
    \ motivate\n   the development of appropriate deployment techniques and protocol\n\
    \   extensions to enable the application of MPLS-TE in large networks.\n   This\
    \ document only considers the question of achieving scalability\n   for the support\
    \ of point-to-point MPLS-TE LSPs.  Point-to-multipoint\n   MPLS-TE LSPs are for\
    \ future study.\n"
- title: 1.2.  Glossary of Notation
  contents:
  - "1.2.  Glossary of Notation\n   This document applies consistent notation to define\
    \ various\n   parameters of the networks that are analyzed.  These terms are\n\
    \   defined as they are introduced throughout the document, but are\n   grouped\
    \ together here for quick reference.  Refer to the full\n   definitions in the\
    \ text for detailed explanations.\n   n      A network level.  n = 1 is the core\
    \ of the network.\n          See Section 3 for more details on the definition\
    \ of a level.\n   P(n)   A node at level n in the network.\n   S(n)   The number\
    \ of nodes at level n.  That is, the number of P(n)\n          nodes.\n   L(n)\
    \   The number of LSPs seen by a P(n) node.\n   X(n)   The number of LSP segment\
    \ states held by a P(n) node.\n   M(n)   The number of P(n+1) nodes subtended\
    \ to a P(n) node.\n   R      The number of rungs in a ladder network.\n   E  \
    \    The number of edge nodes (PEs) subtended below (directly or\n          indirectly)\
    \ a spar-node in a ladder network.\n   K      The cost-effectiveness of the network\
    \ expressed in terms of\n          the ratio of the number of PEs to the number\
    \ of network nodes.\n"
- title: 2.  Issues of Concern for Scaling
  contents:
  - "2.  Issues of Concern for Scaling\n   This section presents some of the issues\
    \ associated with the support\n   of LSPs at a Label Switching Router (LSR) or\
    \ within the network.\n   These issues may mean that there is a limit to the number\
    \ of LSPs\n   that can be supported.\n"
- title: 2.1.  LSP State
  contents:
  - "2.1.  LSP State\n   LSP state is the data (information) that must be stored at\
    \ an LSR in\n   order to maintain an LSP.  Here, we refer to the information that\
    \ is\n   necessary to maintain forwarding plane state and the additional\n   information\
    \ required when LSPs are established through control plane\n   protocols.  While\
    \ the size of the LSP state is implementation-\n   dependent, it is clear that\
    \ any implementation will require some data\n   in order to maintain LSP state.\n\
    \   Thus, LSP state becomes a scaling concern because as the number of\n   LSPs\
    \ at an LSR increases, so the amount of memory required to\n   maintain the LSPs\
    \ increases in direct proportion.  Since the memory\n   capacity of an LSR is\
    \ limited, there is a related limit placed on the\n   number LSPs that can be\
    \ supported.\n   Note that techniques to reduce the memory requirements (such\
    \ as data\n   compression) may serve to increase the number of LSPs that can be\n\
    \   supported, but this will only achieve a moderate multiplier and may\n   significantly\
    \ decrease the ability to process the state rapidly.\n   In this document, we\
    \ define X(n) as \"the number of LSP segment states\n   held by a P(n) node.\"\
    \  This definition observes that an LSR at the\n   end of an LSP only has to maintain\
    \ state in one direction (i.e., into\n   the network), while a transit LSR must\
    \ maintain state in both\n   directions (i.e., toward both ends of the LSP). \
    \ Furthermore, in\n   multipoint-to-point (MP2P) LSPs (see Section 8), a transit\
    \ LSR may\n   need to maintain LSP state for one downstream segment (toward the\n\
    \   destination) and multiple upstream segments (from multiple sources).\n   That\
    \ is, we define LSP segment state as the state necessary to\n   maintain an LSP\
    \ in one direction to one adjacent node.\n"
- title: 2.2.  Processing Overhead
  contents:
  - "2.2.  Processing Overhead\n   Depending largely on implementation issues, the\
    \ number of LSPs\n   passing through an LSR may impact the processing speed for\
    \ each LSP.\n   For example, control block search times can increase with the\
    \ number\n   of control blocks to be searched, and even excellent implementations\n\
    \   cannot completely mitigate this fact.  Thus, since CPU power is\n   constrained\
    \ in any LSR, there may be a practical limit to the number\n   of LSPs that can\
    \ be supported.\n   Further processing overhead considerations depend on issues\
    \ specific\n   to the control plane protocols, and are discussed in the next\n\
    \   section.\n"
- title: 2.3.  RSVP-TE Implications
  contents:
  - "2.3.  RSVP-TE Implications\n   Like many connection-oriented signaling protocols,\
    \ RSVP-TE (Resource\n   Reservation Protocol - Traffic Engineering) requires that\
    \ state is\n   held within the network in order to maintain LSPs.  The impact\
    \ of\n   this is described in Section 2.1.  Note that RSVP-TE requires that\n\
    \   separate information is maintained for upstream and downstream\n   relationships,\
    \ but does not require any specific implementation of\n   that state.\n   RSVP-TE\
    \ is a soft-state protocol, which means that protocol messages\n   (refresh messages)\
    \ must be regularly exchanged between signaling\n   neighbors in order to maintain\
    \ the state for each LSP that runs\n   between the neighbors.  A common period\
    \ for the transmission (and\n   receipt) of refresh messages is 30 seconds, meaning\
    \ that each LSR\n   must send and receive one message in each direction (upstream\
    \ and\n   downstream) every 30 seconds for every LSP it supports.  This has the\n\
    \   potential to be a significant constraint on the scaling of the\n   network,\
    \ but various improvements [RFC2961] mean that this refresh\n   processing can\
    \ be significantly reduced, allowing an implementation\n   to be optimized to\
    \ remove nearly all concerns about soft-state\n   scaling in a stable network.\n\
    \   Observations of existing implementations indicate that there may be a\n  \
    \ threshold of around 50,000 LSPs above which an LSR struggles to\n   achieve\
    \ sufficient processing to maintain LSP state.  Although\n   refresh reduction\
    \ [RFC2961] may substantially improve this situation,\n   it has also been observed\
    \ that under these circumstances the size of\n   the Srefresh may become very\
    \ large, and the processing required may\n   still cause significant disruption\
    \ to an LSR.\n   Another approach is to increase the refresh time.  There is a\n\
    \   correlation between the percentage increase in refresh time and the\n   improvement\
    \ in performance for the LSR.  However, it should be noted\n   that RSVP-TE's\
    \ soft-state nature depends on regular refresh messages;\n   thus, a degree of\
    \ functionality is lost by increasing the refresh\n   time.  This loss may be\
    \ partially mitigated by the use of the RSVP-TE\n   Hello message, and can also\
    \ be reduced by the use of various GMPLS\n   extensions [RFC3473], such as the\
    \ use of [RFC2961] message\n   acknowledgements on all messages.\n   RSVP-TE also\
    \ requires that signaling adjacencies be maintained\n   through the use of Hello\
    \ message exchanges.  Although [RFC3209]\n   suggests that Hello messages should\
    \ be retransmitted every 5 ms, in\n   practice, values of around 3 seconds are\
    \ more common.  Nevertheless,\n   the support of Hello messages can represent\
    \ a scaling limitation on\n   an RSVP-TE implementation since one message must\
    \ be sent and received\n   to/from each signaling adjacency every time period.\
    \  This can impose\n   limits on the number of neighbors (physical or logical)\
    \ that an LSR\n   supports, but does not impact the number of LSPs that the LSR\
    \ can\n   handle.\n"
- title: 2.4.  Management
  contents:
  - "2.4.  Management\n   Another practical concern for the scalability of large MPLS-TE\n\
    \   networks is the ability to manage the network.  This may be\n   constrained\
    \ by the available tools, the practicality of managing\n   large numbers of LSPs,\
    \ and the management protocols in use.\n   Management tools are software implementations.\
    \  Although such\n   implementations should not constrain the control plane protocols,\
    \ it\n   is realistic to appreciate that network deployments will be limited\n\
    \   by the scalability of the available tools.  In practice, most\n   existing\
    \ tools have a limit to the number of LSPs that they can\n   support.  While a\
    \ Network Management System (NMS) may be able to\n   support a large number of\
    \ LSPs, the number that can be supported by\n   an Element Management System (EMS)\
    \ (or the number supported by an NMS\n   per-LSR) is more likely to be limited.\n\
    \   Similarly, practical constraints may be imposed by the operation of\n   management\
    \ protocols.  For example, an LSR may be swamped by\n   management protocol requests\
    \ to read information about the LSPs that\n   it supports, and this might impact\
    \ its ability to sustain those LSPs\n   in the control plane.  OAM (Operations,\
    \ Administration, and\n   Management), alarms, and notifications can further add\
    \ to the burden\n   placed on an LSR and limit the number of LSPs it can support.\n\
    \   All of these considerations encourage a reduction in the number of\n   LSPs\
    \ supported within the network and at any particular LSR.\n"
- title: 3.  Network Topologies
  contents:
  - "3.  Network Topologies\n   In order to provide some generic analysis of the potential\
    \ scaling\n   issues for MPLS-TE networks, this document explores two network\n\
    \   topology models.  These topologies are selected partly because of\n   their\
    \ symmetry, which makes them more tractable to a formulaic\n   approach, and partly\
    \ because they represent generalizations of real\n   deployment models.  Section\
    \ 3.3 provides a discussion of the\n   commercial drivers for deployed topologies\
    \ and gives more analysis of\n   why it is reasonable to consider these two topologies.\n\
    \   The first topology is the snowflake model.  In this type of network,\n   only\
    \ the very core of the network is meshed.  The edges of the\n   network are formed\
    \ as trees rooted in the core.\n   The second network topology considered is the\
    \ ladder model.  In this\n   type of network, the core of the network is shaped\
    \ and meshed in the\n   form of a ladder and trees are attached rooted to the\
    \ edge of the\n   ladder.\n   The sections that follow examine these topologies\
    \ in detail in order\n   to parameterize them.\n"
- title: 3.1.  The Snowflake Network Topology
  contents:
  - "3.1.  The Snowflake Network Topology\n   The snowflake topologies considered\
    \ in this document are based on a\n   hierarchy of connectivity within the core\
    \ network.  PE nodes have\n   connectivity to P-nodes as shown in Figure 1.  There\
    \ is no direct\n   connectivity between the PEs.  Dual homing of PEs to multiple\
    \ P-nodes\n   is not considered in this document, although it may be a valuable\n\
    \   addition to a network configuration.\n            P\n           /|\\\n   \
    \       / | \\\n         /  |  \\\n        /   |   \\\n      PE    PE   PE\n \
    \     Figure 1 : PE to P-Node Connectivity\n   The relationship between P-nodes\
    \ is also structured in a hierarchical\n   way.  Thus, as shown in Figure 2, multiple\
    \ P-nodes at one level are\n   connected to a P-node at a higher level.  We number\
    \ the levels such\n   that level 1 is the top level (top in our figure, and nearest\
    \ to the\n   core of the network) and level (n) is immediately above level (n+1);\n\
    \   we denote a P-node at level n as a P(n).\n   As with PEs, there is no direct\
    \ connectivity between P(n+1) nodes.\n   Again, dual homing of P(n+1) nodes to\
    \ multiple P(n) nodes is not\n   considered in this document, although it may\
    \ be a valuable addition\n   to a network configuration.\n              P(n)\n\
    \              /|\\\n             / | \\\n            /  |  \\\n           / \
    \  |   \\\n      P(n+1) P(n+1) P(n+1)\n      Figure 2 : Relationship between P-Nodes\n\
    \   At the top level, P(1) nodes are connected in a full mesh.  In\n   reality,\
    \ the level 1 part of the network may be slightly less well-\n   connected than\
    \ this, but assuming a full mesh provides for\n   generality.  Thus, the snowflake\
    \ topology comprises a clique with\n   topologically equivalent trees subtended\
    \ from each node in the\n   clique.\n   The key multipliers for scalability are\
    \ the number of P(1) nodes and\n   the multiplier relationship between P(n) and\
    \ P(n+1) at each level,\n   down to and including PEs.\n   We define the multiplier\
    \ M(n) as the number of P(n+1) nodes at level\n   (n+1) attached to any one P(n).\
    \  Assume that M(n) is constant for all\n   nodes at level n.  Since nodes at\
    \ the same level are not\n   interconnected (except at the top level), and since\
    \ each P(n+1) node\n   is connected to precisely one P(n) node, M(n) is one less\
    \ than the\n   degree of the node at level n (that is, the P(n) node is attached\
    \ to\n   M(n) nodes at level (n+1) and to 1 node at level (n-1)).\n   We define\
    \ S(n) as the number of nodes at level (n).\n   Thus:\n      S(n) = S(1)*M(1)*M(2)*...*M(n-1)\n\
    \   So the number of PEs can be expressed as:\n      S(PE) = S(1)*M(1)*M(2)*...*M(n)\n\
    \   where the network has (n) layers of P-nodes.\n   Thus, we may depict an example\
    \ snowflake network as shown in Figure\n   3.  In this case:\n      S(1) = 3\n\
    \      M(1) = 3\n      S(2) = S(1)*M(1) = 9\n      M(2) = 2\n      S(PE) = S(1)*M(1)*M(2)\
    \ = 18\n        PE      PE  PE     PE  PE      PE\n           \\      \\/    \
    \     \\/       /\n        PE--P(2)  P(2)      P(2)  P(2)--PE\n              \
    \  \\ |            | /\n                 \\|            |/\n       PE--P(2)---P(1)------P(1)---P(2)--PE\n\
    \          /           \\    /           \\\n        PE             \\  /    \
    \         PE\n                        \\/\n                        P(1)\n    \
    \                    /|\\\n                       / | \\\n                   \
    \   /  |  \\\n              PE--P(2)  P(2) P(2)--PE\n                  /     \
    \ /\\      \\\n                PE     PE  PE     PE\n      Figure 3 : An Example\
    \ Snowflake Network\n"
- title: 3.2.  The Ladder Network Topology
  contents:
  - "3.2.  The Ladder Network Topology\n   The ladder networks considered in this\
    \ section are based on an\n   arrangement of routers in the core network that\
    \ resembles a ladder.\n   Ladder networks typically have long and thin cores that\
    \ are arranged\n   as conventional ladders.  That is, they have one or more spars\n\
    \   connected by rungs.  Each node on a spar may have:\n   - connection to one\
    \ or more other spars,\n   - connection to a tree of other core nodes,\n   - connection\
    \ to customer nodes.\n   Figure 4 shows a simplified example of a ladder network.\
    \  A core of\n   twelve nodes makes up two spars connected by six rungs.\n   \
    \             PE    PE           PE   PE\n       PE PE PE | PE  | PE  PE  PE |\
    \  PE | PE\n         \\|    \\|/    |/    |     \\|    \\|/\n       PE-P-----P-----P-----P------P-----P--PE\n\
    \          |     |     |     |      |     |\\\n          |     |     |     | \
    \     |     | PE\n          |     |     |     |      |     |\n       PE-P-----P-----P-----P------P-----P\n\
    \         /|    /|\\    |\\    |\\     |\\     \\\n       PE PE PE | PE  | PE\
    \  | PE   | PE    PE\n                PE    PE    PE     PE\n      Figure 4 :\
    \ A Simplified Ladder Network\n   In practice, not all nodes on a spar (call them\
    \ spar-nodes) need to\n   have subtended PEs.  That is, they can exist simply\
    \ to give\n   connectivity along the spar to other spar-nodes, or across a rung\
    \ to\n   another spar.  Similarly, the connectivity between spars can be more\n\
    \   complex with multiple connections from one spar-node to another spar.\n  \
    \ Lastly, the network may be complicated by the inclusion of more than\n   two\
    \ spars (or simplified by reduction to a single spar).\n   These variables make\
    \ the ladder network non-trivial to model.  For\n   the sake of simplicity, we\
    \ will make the following restrictions:\n   - There are precisely two spars in\
    \ the core network.\n   - Every spar-node connects to precisely one spar-node\
    \ on the other\n     spar.  That is, each spar-node is attached to precisely one\
    \ rung.\n   - Each spar-node connects to either one (end-spar) or two (core-spar)\n\
    \     other spar-nodes on the same spar.\n   - Every spar-node has the same number\
    \ of PEs subtended.  This does\n     not mean that there are no P-nodes subtended\
    \ to the spar-nodes, but\n     does mean that the edge tree subtended to each\
    \ spar-node is\n     identical.\n   From these restrictions, we are able to quantify\
    \ a ladder network as\n   follows:\n      R    - The number of rungs.  That is,\
    \ the number of spar-nodes on\n             each spar.\n      S(1) - The number\
    \ of spar-nodes in the network.  S(1)=2*R.\n      E    - The number of subtended\
    \ edge nodes (PEs) to each spar-node.\n   The number of rungs may vary considerably.\
    \  A number less than 3 is\n   unlikely (since that would not be a significantly\
    \ connected network),\n   and a number greater than 100 seems improbable (because\
    \ that would\n   represent a very long, thin network).\n   E can be treated as\
    \ for the snowflake network.  That is, we can\n   consider a number of levels\
    \ of attachment from P(1) nodes, which are\n   the spar-nodes, through P(i) down\
    \ to P(n), which are the PEs.\n   Practically, we need to only consider n=2 (PEs\
    \ attached direct to the\n   spar-nodes) and n=3 (one level of P-nodes between\
    \ the PEs and the\n   spar-nodes).\n   Let M(i) be the ratio of P(i) nodes to\
    \ P(i-1) nodes, i.e., the\n   connectivity between levels of P-node as defined\
    \ for the snowflake\n   topology.  Hence, the number of nodes at any level (n)\
    \ is:\n      S(n) = S(1)*M(1)*M(2)*...*M(n-1)\n   So the number of PEs subtended\
    \ to a spar-node is:\n      E = M(1)*M(2)*...*M(n)\n   And the number of PEs can\
    \ be expressed as:\n      S(PE) = S(1)*M(1)*M(2)*...*M(n)\n            = S(1)*E\n\
    \   Thus, we may depict an example ladder network as shown in Figure 5.\n   In\
    \ this case:\n     R = 5\n     S(1) = 10\n     M(1) = 2\n     S(2) = S(1)*M(1)\
    \ = 20\n     M(2) = 2\n     E = M(1)*M(2) = 4\n     S(PE) = S(1)*E = 40\n    \
    \  PE PE  PE PE PE PE PE PE PE PE PE PE PE PE  PE PE\n        \\|     \\|    \\\
    |    \\|   |/    |/    |/     |/\n         P(2)   P(2) P(2) P(2) P(2) P(2) P(2)\
    \     P(2)\n             \\      \\  |   \\    /    |  /        /\n      PE  \
    \    \\      \\ |    \\  /     | /        /       PE\n        \\      \\     \
    \ \\|     \\/      |/        /       /\n      PE-P(2)---P(1)---P(1)---P(1)---P(1)---P(1)---P(2)-PE\n\
    \                |      |      |      |      |\n                |      |     \
    \ |      |      |\n                |      |      |      |      |\n      PE-P(2)---P(1)---P(1)---P(1)---P(1)---P(1)---P(2)-PE\n\
    \        /      /     / |     /\\      |\\        \\       \\\n      PE      /\
    \     /  |    /  \\     | \\        \\       PE\n             /     /   |   /\
    \    \\    |  \\        \\\n         P(2)   P(2) P(2) P(2) P(2) P(2) P(2)    \
    \ P(2)\n        /|     /|    /|    /|   |\\    |\\    |\\     |\\\n      PE PE\
    \  PE PE PE PE PE PE PE PE PE PE PE PE  PE PE\n      Figure 5 : An Example Ladder\
    \ Network\n"
- title: 3.3.  Commercial Drivers for Selected Configurations
  contents:
  - "3.3.  Commercial Drivers for Selected Configurations\n   It is reasonable to\
    \ ask why these two particular network topologies\n   have been chosen.\n   The\
    \ most important consideration is physical scalability.  Each node\n   (Label\
    \ Switching Router - LSR) is only able to support a limited\n   number of physical\
    \ interfaces.  This necessarily reduces the ability\n   to fully mesh a network\
    \ and leads to the tree-like structure of the\n   network toward the PEs.\n  \
    \ A realistic commercial consideration for an operator is the fact that\n   the\
    \ only revenue-generating nodes in the network are the PEs.  Other\n   nodes are\
    \ needed only to support connectivity and scalability.\n   Therefore, there is\
    \ a desire to maximize S(PE) while minimizing the\n   sum of S(n) for all values\
    \ of (n).  This could be achieved by\n   minimizing the number of levels and maximizing\
    \ the connectivity at\n   each layer, M(n).  Ultimately, however, this would produce\
    \ a network\n   of just interconnected PEs, which is clearly in conflict with\
    \ the\n   physical scaling situation.\n   Therefore, the solution calls for a\
    \ \"few\" levels with \"relatively\n   large\" connectivity at each level.  We\
    \ might say that the cost-\n   effectiveness of the network can be stated as:\n\
    \   K = S(PE)/(S(1)+S(2) + ... + S(n)) where n is the level above the PEs\n  \
    \ We should observe, however, that this equation may be naive in that\n   the\
    \ cost of a network is not actually a function of the number of\n   routers (since\
    \ a router chassis is often free or low cost), but is\n   really a function of\
    \ the cost of the line cards, which is, itself, a\n   product of the capacity\
    \ of the line cards.  Thus, the relatively high\n   connectivity decreases the\
    \ cost-effectiveness, while a topology that\n   tends to channel data through\
    \ a network core tends to demand higher\n   capacity (and so, more expensive)\
    \ line cards.\n   A further consideration is the availability of connectivity\
    \ (usually\n   fibers) between LSR sites.  Although it is always possible to lay\
    \ new\n   fiber, this may not be cost-effective or timely.  The physical shape\n\
    \   and topography of the country in which the network is laid is likely\n   to\
    \ be as much of a problem.  If the country is 'long and thin', then\n   a ladder\
    \ network is likely to be used.\n   This document examines the implications for\
    \ control plane and data\n   plane scalability of this type of network when MPLS-TE\
    \ LSPs are used\n   to provide full connectivity between all PEs.\n"
- title: 3.4.  Other Network Topologies
  contents:
  - "3.4.  Other Network Topologies\n   As explained in Section 1, this document is\
    \ using two symmetrical and\n   generalized network topologies for simplicity\
    \ of modelling.  In\n   practice, there are two other topological considerations.\n\
    \   a. Multihoming\n      It is relatively common for a node at level (n) to be\
    \ attached to\n      more than one node at level (n-1).  This is particularly\
    \ common at\n      PEs that may be connected to more than one P(n).\n   b. Meshing\
    \ within a level\n      A level in the network will often include links between\
    \ P-nodes at\n      the same level, including the possibility of links between\
    \ PEs.\n      This may result in a network that looks like a series of\n     \
    \ concentric circles with spokes.\n   Both of these features are likely to have\
    \ some impact on the scaling\n   of the networks.  However, for the purposes of\
    \ establishing the\n   ground rules for scaling, this document restricts itself\
    \ to the\n   consideration of the symmetrical networks described in Sections 2.1\n\
    \   and 2.2.  Discussion of other network formats is for future study.\n"
- title: 4.  Required Network Sizes
  contents:
  - "4.  Required Network Sizes\n   An important question for this evaluation and\
    \ analysis is the size of\n   the network that operators require.  How many PEs\
    \ are required?  What\n   ratio of P to PE is acceptable?  How many ports do devices\
    \ have for\n   physical connectivity?  What type of MPLS-TE connectivity between\
    \ PEs\n   is required?\n   Although presentation of figures for desired network\
    \ sizes must be\n   treated with caution because history shows that networks grow\
    \ beyond\n   all projections, it is useful to set some acceptable lower bounds.\n\
    \   That is, we can state that we are interested in networks of at least\n   a\
    \ certain size.\n   The most important features are:\n   - The network should\
    \ have at least 1000 PEs.\n   - Each pair of PEs should be connected by at least\
    \ one LSP in each\n     direction.\n"
- title: 4.1.  Practical Numbers
  contents:
  - "4.1.  Practical Numbers\n   In practice, reasonable target numbers are as follows.\n\
    \   S(PE) >= 1000\n   Number of levels is 3.  That is: 1, 2, and PE.\n   M(2)\
    \ <= 20\n   M(1) <= 20\n   S(1) <= 100\n"
- title: 5.  Scaling in Flat Networks
  contents:
  - "5.  Scaling in Flat Networks\n   Before proceeding to examine potential scaling\
    \ improvements, we need\n   to examine how well the flat networks described in\
    \ the previous\n   sections scale.\n   Consider the requirement for a full mesh\
    \ of LSPs linking all PEs.\n   That is, each PE has an LSP to and from every other\
    \ LSP.  Thus, if\n   there are S(PE) PEs in the network, there are S(PE)*(S(PE)\
    \ - 1) LSPs.\n   Define L(n) as the number of LSPs handled by a level (n) LSR.\n\
    \   L(PE) = 2*(S(PE) - 1)\n"
- title: 5.1.  Snowflake Networks
  contents:
  - "5.1.  Snowflake Networks\n   There are a total of S(PE) PEs in the network and,\
    \ since each PE\n   establishes an LSP with every other PE, it would be expected\
    \ that\n   there are S(PE) - 1 LSPs incoming to each PE and the same number of\n\
    \   LSPs outgoing from the same PE, giving a total of 2(S(PE) - 1) on the\n  \
    \ incident link.  Hence, in a snowflake topology (see Figure 3), since\n   there\
    \ are M(2) PEs attached to each P(2) node, it may tempting to\n   think that L(2)\
    \ (the number of LSPs traversing each P(2) node) is\n   simply 2*(S(PE) - 1)*M(2).\
    \  However, it should be noted that of the\n   S(PE) - 1 LSPs incoming to each\
    \ PE, M(2) - 1 originated from nodes\n   attached to the same P(2) node, and so\
    \ this value would count the\n   LSPs between the M(2) PEs attached to each P(2)\
    \ node twice: once when\n   outgoing from the M(2) - 1 other nodes and once when\
    \ incoming into a\n   particular PE.\n   There are a total of M(2)*(M(2) - 1)\
    \ LSPs between these M(2) PEs and,\n   since this value is erroneously included\
    \ twice in 2*(S(PE) - 1)*M(2),\n   the correct value is:\n   L(2) = 2*M(2)*(S(PE)\
    \ - 1) - M(2)*(M(2) - 1)\n        = M(2)*(2*S(PE) - M(2) - 1)\n   An alternative\
    \ way of looking at this, that proves extensible for the\n   calculation of L(1),\
    \ is to observe that each PE subtended to a P(2)\n   node has an LSP in each direction\
    \ to all S(PE) - M(2) PEs in the rest\n   of the system, and there are M(2) such\
    \ locally subtended PEs; thus,\n   2*M(2)*(S(PE) - M(2)).  Additionally, there\
    \ are M(2)*(M(2) - 1) LSPs\n   between the locally subtended PEs.  So:\n   L(2)\
    \ = 2*M(2)*(S(PE) - M(2)) + M(2)*(M(2) - 1)\n        = M(2)*(2*S(PE) - M(2) -\
    \ 1)\n   L(1) can be computed in the same way as this second evaluation of\n \
    \  L(2).  Each PE subtended below a P(1) node has an LSP in each\n   direction\
    \ to all PEs not below the P(1) node.  There are M(1)*M(2)\n   PEs below the P(1)\
    \ node, so this accounts for 2*M(1)*M(2)*(S(PE) -\n   M(1)*M(2)) LSPs.  To this,\
    \ we need to add the number of LSPs that\n   pass through the P(1) node and that\
    \ run between the PEs subtended\n   below the P(1).  Consider each P(2): it has\
    \ M(2) PEs, each of which\n   has an LSP going to all of the PEs subtended to\
    \ the other P(2) nodes\n   subtended to the P(1).  There are M(1) - 1 such other\
    \ P(2) nodes, and\n   so M(2)*(M(1) - 1) other such PEs.  So the number of LSPs\
    \ from the\n   PEs below a P(2) node is M(2)*M(2)*(M(1) - 1).  And there are M(1)\n\
    \   P(2) nodes below the P(1), giving rise to a total of\n   M(2)*M(2)*M(1)*(M(1)\
    \ - 1) LSPs.  Thus:\n   L(1) = 2*M(1)*M(2)*(S(PE) - M(1)*M(2)) + M(2)*M(2)*M(1)*(M(1)\
    \ - 1)\n        = M(1)*M(2)*(2*S(PE) - M(2)*(M(1) + 1))\n   So, for example, with\
    \ S(1) = 5, M(1) = 10, and M(2) = 20, we see:\n      S(PE) = 1000\n      L(PE)\
    \ = 1998\n      L(2)  = 39580\n      L(1)  = 356000\n   Alternatively, with S(1)\
    \ = 10, M(1) = 10, and M(2) = 20, we see:\n      S(PE) = 2000\n      L(PE) = 3998\n\
    \      L(2)  = 79580\n      L(1)  = 756000\n   In both examples, the number of\
    \ LSPs at the core (P(1)) nodes is\n   probably unacceptably large, even though\
    \ there are only a relatively\n   modest number of PEs.  In fact, L(2) may even\
    \ be too large in the\n   second example.\n"
- title: 5.2.  Ladder Networks
  contents:
  - "5.2.  Ladder Networks\n   In ladder networks, L(PE) remains the same at 2*(S(PE)\
    \ - 1).\n   L(2) can be computed using the same mechanism as for the snowflake\n\
    \   topology because the subtended tree is the same format.  Hence,\n   L(2) =\
    \ 2*M(2)*(S(PE) - 1) - M(2)*(M(2) - 1)\n   But L(1) requires a different computation\
    \ because each P(1) not only\n   sees LSPs for the subtended PEs, but is also\
    \ a transit node for some\n   of the LSPs that cross the core (the core is not\
    \ fully meshed).\n   Each P(1) sees:\n   o  all of the LSPs between locally attached\
    \ PEs,\n   o  less those LSPs between locally attached PEs that can be served\n\
    \      exclusively by the attached P(2) nodes,\n   o  all LSPs between locally\
    \ attached PEs and remote PEs, and\n   o  LSPs in transit that pass through the\
    \ P(1).\n   The first three numbers are easily determined and match what we have\n\
    \   seen from the snowflake network.  They are:\n   o  E*(E-1)\n   o  M(1)*M(2)*(M(2)-1)\
    \ = E*(M(2) - 1)\n   o  2*E*E*(S(1) - 1)\n   The number of LSPs in transit is\
    \ more complicated to compute.  It is\n   simplified by not considering the ends\
    \ of the ladders but by\n   examining an arbitrary segment of the middle of the\
    \ ladder, such as\n   shown in Figure 6.  We look to compute and generalize the\
    \ number of\n   LSPs traversing each core link (labeled a and b in Figure 6) and\
    \ so\n   determine the number of transit LSPs seen by each P(1).\n         : \
    \   :    :    :    :    :\n         :    :    :    :    :    :\n       P(2) P(2)\
    \ P(2) P(2) P(2) P(2)\n           \\  |   \\    /    |  /\n            \\ |  \
    \  \\  /     | /\n             \\|     \\/      |/\n        ......P(1)---P(1)---P(1)......\n\
    \              |   a  |      |\n              |      |b     |\n              |\
    \      |      |\n        ......P(1)---P(1)---P(1)......\n             /|     /\\\
    \      |\\\n            / |    /  \\     | \\\n           /  |   /    \\    |\
    \  \\\n       P(2) P(2) P(2) P(2) P(2) P(2)\n         :    :    :    :    :  \
    \  :\n         :    :    :    :    :    :\n      Figure 6 : An Arbitrary Section\
    \ of a Ladder Network\n   Of course, the number of LSPs carried on links a and\
    \ b in Figure 6\n   depends on how LSPs are routed through the core network. \
    \ But if we\n   assume a symmetrical routing policy and an even distribution of\
    \ LSPs\n   across all shortest paths, the result is the same.\n   Now we can see\
    \ that each P(1) sees half of 2a+b LSPs (since each LSP\n   would otherwise be\
    \ counted twice as it passed through the P(1)),\n   except that some of the LSPs\
    \ are locally terminated and so are only\n   included once in the sum 2a+b.\n\
    \   So L(1) = a + b/2 -\n             (locally terminated transit LSPs)/2 +\n\
    \             (locally contained LSPs)\n   Thus:\n   L(1) = a + b/2 -\n      \
    \    2*E*E*(S(1) - 1)/2 +\n          E*(E-1) - E*(M(2) - 1)\n        = a + b/2\
    \ +\n          E*E*(2 - S(1)) - E*M(2)\n   So all we have to do is work out a\
    \ and b.\n   Recall that the ladder length R = S(1)/2, and define X = E*E.\n \
    \  Consider the contribution made by all of the LSPs that make n hops on\n   the\
    \ ladder to the totals of each of a and b.  If the ladder was\n   unbounded, then\
    \ we could say that in the case of a, there are n*2X\n   LSPs along the spar only,\
    \ and n(n-1)*2X/n = 2X(n-1) LSPs use a rung\n   and the spar.  Thus, the LSPs\
    \ that make n hops on the ladder\n   contribute (4n-2)X LSPs to a.  Note that\
    \ the edge cases are special\n   because LSPs that make only one hop on the ladder\
    \ cannot transit a\n   P(1) but only start or end there.\n   So with a ladder\
    \ of length R = S(1)/2, we could say:\n         R\n   a = SUM[(4i-2)*X] + 2RX\n\
    \       i=2\n     = 2*X*R*(R+1)\n   And similarly, considering b in an unbounded\
    \ ladder, the LSPs that\n   only travel one hop on the LSP are a special case,\
    \ contributing 2X\n   LSPs, and every other LSP that traverses n hops on the ladder\n\
    \   contributes 2n*2X/n = 4X LSPs.  So:\n            R+1\n   b = 2X + SUM[4X]\n\
    \            i=2\n     = 2*X + 4*X*R\n   In fact, the ladders are bounded, and\
    \ so the number of LSPs is\n   reduced because of the effect of the ends of the\
    \ ladders.  The links\n   that see the most LSPs are in the middle of the ladder.\
    \  Consider a\n   ladder of length R; a node in the middle of the ladder is R/2\
    \ hops\n   away from the end of the ladder.  So we see that the formula for the\n\
    \   contribution to the count of spar-only LSPs for a is only valid up to\n  \
    \ n=R/2, and for spar-and-rung LSPs, up to n=1+R/2.  Above these\n   limits, the\
    \ contribution made by spar-only LSPs decays as (n-R/2)*2X.\n   However, for a\
    \ first-order approximation, we will use the values of a\n   and b as computed\
    \ above.  This gives us an upper bound of the number\n   of LSPs without using\
    \ a more complex formula for the reduction made\n   by the effect of the ends\
    \ of the ladder.\n   From this:\n   L(1) = a + b/2 +\n          E*E*(2 - S(1))\
    \ - E*M(2)\n        = 2*X*R*(R+1) +\n          X + 2*X*R +\n          E*E*(2 -\
    \ S(1)) - E*M(2)\n        = E*E*S(1)*(1 + S(1)/2) +\n          E*E + E*E*S(1)\
    \ +\n          2*E+E - E*E*S(1) - E*M(2)\n        = E*E*S(1)*(1 + S(1)/2) + 3*E+E\
    \ - E*M(2)\n        = E*E*S(1)*S(1)/2 + E*E*S(1) + 3*E*E - E*M(2)\n   So, for\
    \ example, with S(1) = 6, M(1) = 10, and M(2) = 17, we see:\n      E     = 170\n\
    \      S(PE) = 1020\n      L(PE) = 2038\n      L(2)  = 34374\n      L(1)  = 777410\n\
    \   Alternatively, with S(1) = 10, M(1) = 10, and M(2) = 20, we see:\n      E\
    \     = 200\n      S(PE) = 2000\n      L(PE) = 3998\n      L(2)  = 79580\n   \
    \   L(1)  = 2516000\n   In both examples, the number of LSPs at the core (P(1))\
    \ nodes is\n   probably unacceptably large, even though there are only a relatively\n\
    \   modest number of PEs.  In fact, L(2) may even be too large in the\n   second\
    \ example.\n   Compare the L(1) values with the total number of LSPs in the system\n\
    \   S(PE)*(S(PE) - 1), which is 1039380 and 3998000, respectively.\n"
- title: 6.  Scaling Snowflake Networks with Forwarding Adjacencies
  contents:
  - "6.  Scaling Snowflake Networks with Forwarding Adjacencies\n   One of the purposes\
    \ of LSP hierarchies [RFC4206] is to improve the\n   scaling properties of MPLS-TE\
    \ networks.  LSP tunnels (sometimes known\n   as Forwarding Adjacencies (FAs))\
    \ may be established to provide\n   connectivity over the core of the network,\
    \ and multiple edge-to-edge\n   LSPs may be tunneled down a single FA LSP.\n \
    \  In our network we consider a mesh of FA LSPs between all core nodes\n   at\
    \ the same level.  We consider two possibilities here.  In the\n   first, all\
    \ P(2) nodes are connected to all other P(2) nodes by LSP\n   tunnels, and the\
    \ PE-to-PE LSPs are tunneled across the core of the\n   network.  In the second,\
    \ an extra layer of LSP hierarchy is\n   introduced by connecting all P(1) nodes\
    \ in an LSP mesh and tunneling\n   the P(2)-to-P(2) tunnels through these.\n"
- title: 6.1.  Two-Layer Hierarchy
  contents:
  - "6.1.  Two-Layer Hierarchy\n   In this hierarchy model, the P(2) nodes are connected\
    \ by a mesh of\n   tunnels.  This means that the P(1) nodes do not see the PE-to-PE\n\
    \   LSPs.\n   It remains the case that:\n      L(PE) = 2*(S(PE) - 1)\n   L(2)\
    \ is slightly increased.  It can be computed as the sum of all\n   LSPs for all\
    \ attached PEs, including the LSPs between the attached PE\n   (this figure is\
    \ unchanged from Section 5.1, i.e., M(2)*(2*S(PE) -\n   M(2) - 1)), plus the number\
    \ of FA LSPs providing a mesh to the other\n   P(2) nodes.  Since the number of\
    \ P(2) nodes is S(2), each P(2) node\n   sees 2*(S(2) - 1) FA LSPs.  Thus:\n \
    \     L(2) = M(2)*(2*S(PE) - M(2) - 1) + 2*(S(2) - 1)\n   L(1), however, is significantly\
    \ reduced and can be computed as the\n   sum of the number of FA LSPs to and from\
    \ each attached P(2) to each\n   other P(2) in the network, including (but counting\
    \ only once) the FA\n   LSPs between attached P(2) nodes.  In fact, the problem\
    \ is identical\n   to the L(2) computation in Section 5.1.  So:\n   L(1) = M(1)*(2*S(2)\
    \ - M(1) - 1)\n   So, for example, with S(1) = 5, M(1) = 10, and M(2) = 20, we\
    \ see:\n      S(PE) = 1000\n      S(2)  = 50\n      L(PE) = 1998\n      L(2) \
    \ = 39678\n      L(1)  = 890\n   Alternatively, with S(1) = 10, M(1) = 10, and\
    \ M(2) = 20, we see:\n      S(PE) = 2000\n      S(2)  = 100\n      L(PE) = 3998\n\
    \      L(2)  = 79778\n      L(1)  = 1890\n   So, in both examples, potential problems\
    \ at the core (P(1)) nodes\n   caused by an excessive number of LSPs can be avoided,\
    \ but any problem\n   with L(2) is made slightly worse, as can be seen from the\
    \ table\n   below.\n   Example| Count | Unmodified    | 2-Layer\n          | \
    \      | (Section 5.1) | Hierarchy\n   -------+-------+---------------+----------\n\
    \   A      | L(2)  |      39580    |   39678\n          | L(1)  |     356000 \
    \   |     890\n   -------+-------+---------------+----------\n   B      | L(2)\
    \  |      79580    |   79778\n          | L(1)  |     756000    |    1890\n"
- title: 6.1.1.  Tuning the Network Topology to Suit the Two-Layer Hierarchy
  contents:
  - "6.1.1.  Tuning the Network Topology to Suit the Two-Layer Hierarchy\n   Clearly,\
    \ we can reduce L(2) by selecting appropriate values of S(1),\n   M(1), and M(2).\
    \  We can do this without negative consequences, since\n   no change will affect\
    \ L(PE) and since a large percentage increase in\n   L(1) is sustainable now that\
    \ L(1) is so small.\n   Observe that:\n      L(2) = M(2)*(2*S(PE) - M(2) - 1)\
    \ + 2*(S(2) - 1)\n   where S(PE) = S(1)*M(1)*M(2) and S(2) = S(1)*M(1).  So L(2)\
    \ scales\n   with M(2)^2 and we can have the most impact by reducing M(2) while\n\
    \   keeping S(PE) constant.\n   For example, with S(1) = 10, M(1) = 10, and M(2)\
    \ = 10, we see:\n      S(PE) = 1000\n      S(2)  = 100\n      L(PE) = 1998\n \
    \     L(2)  = 20088\n      L(1)  = 1890\n   And similarly, with S(1) = 20, M(1)\
    \ = 20, and M(2) = 5, we see:\n      S(PE) = 2000\n      S(2)  = 400\n      L(PE)\
    \ = 3998\n      L(2)  = 20768\n      L(1)  = 15580\n   These considerable scaling\
    \ benefits must be offset against the cost-\n   effectiveness of the network.\
    \  Recall from Section 3.3 that:\n      K = S(PE)/(S(1)+S(2) ... + S(n))\n   where\
    \ n is the level above the PEs, so that for our network:\n      K = S(PE) / (S(1)\
    \ + S(2))\n   Thus, in the first example the cost-effectiveness has been halved\n\
    \   from 1000/55 to 1000/110.  In the second example, it has been reduced\n  \
    \ to roughly one quarter, changing from 2000/110 to 2000/420.\n   So, although\
    \ the tuning changes may be necessary to reach the desired\n   network size, they\
    \ come at a considerable cost to the operator.\n"
- title: 6.2.  Alternative Two-Layer Hierarchy
  contents:
  - "6.2.  Alternative Two-Layer Hierarchy\n   An alternative to the two-layer hierarchy\
    \ presented in Section 6.1 is\n   to provide a full mesh of FA LSPs between P(1)\
    \ nodes.  This technique\n   is only of benefit to any nodes in the core of the\
    \ level 1 network.\n   It makes no difference to the PE and P(2) nodes since they\
    \ continue\n   to see only the PE-to-PE LSPs.  Furthermore, this approach increases\n\
    \   the burden at the P(1) nodes since they have to support all of the\n   PE-to-PE\
    \ LSPs as in the flat model plus the additional 2*(S(1) - 1)\n   P(1)-to-P(1)\
    \ FA LSPs.  Thus, this approach should only be considered\n   where there is a\
    \ mesh of P-nodes within the ring of P(1) nodes, and\n   is not considered further\
    \ in this document.\n"
- title: 6.3.  Three-Layer Hierarchy
  contents:
  - "6.3.  Three-Layer Hierarchy\n   As demonstrated by Section 6.2, introducing a\
    \ mesh of FA LSPs at the\n   top level (P(1)) has no benefit, but if we introduce\
    \ an additional\n   level in the network (P(3) between P(2) and PE) to make a\
    \ four-level\n   snowflake, we can introduce a new layer of FA LSPs so that we\
    \ have a\n   full mesh of FA LSPs between all P(3) nodes to carry the PE-to-PE\n\
    \   LSPs, and a full mesh of FA LSPs between all P(2) nodes to carry the\n   P(3)-to-P(3)\
    \ LSPs.\n   The number of PEs is S(PE) = S(1)*M(1)*M(2)*M(3), and the number of\n\
    \   PE-to-PE LSPs at a PE remains L(PE) = 2*(S(PE) - 1).\n   The number of LSPs\
    \ at a P(3) can be deduced from Section 6.1.  It is\n   the sum of all LSPs for\
    \ all attached PEs, including the LSPs between\n   the attached PE, plus the number\
    \ of FA LSPs providing a mesh to the\n   other P(3) nodes.\n   L(3) = M(3)*(2*S(PE)\
    \ - M(3) - 1) + 2*(S(3) - 1)\n   The number of LSPs at P(2) can also be deduced\
    \ from Section 6.1 since\n   it is the sum of all LSPs for all attached P(3) nodes,\
    \ including the\n   LSPs between the attached PE plus the number of FA LSPs providing\
    \ a\n   mesh to the other P(2) nodes.\n   L(2) = M(2)*(2*S(3) - M(2) - 1) + 2*(S(2)\
    \ - 1)\n   Finally, L(1) can be copied straight from 6.1.\n   L(1) = M(1)*(2*S(2)\
    \ - M(1) - 1)\n   For example, with S(1) = 5, M(1) = 5, M(2) = 5, and M(3) = 8,\
    \ we see:\n      S(PE) = 1000\n      S(3)  = 125\n      S(2)  = 25\n      L(PE)\
    \ = 1998\n      L(3)  = 16176\n      L(2)  = 1268\n      L(1)  = 220\n   Similarly,\
    \ with S(1) = 5, M(1) = 5, M(2) = 8, and M(3) = 10, we see:\n      S(PE) = 2000\n\
    \      S(3)  = 200\n      S(2)  = 25\n      L(PE) = 3998\n      L(3)  = 40038\n\
    \      L(2)  = 3184\n      L(1)  = 220\n   Clearly, there are considerable scaling\
    \ improvements with this three-\n   layer hierarchy, and all of the numbers (even\
    \ L(3) in the second\n   example) are manageable.\n   Of course, the extra level\
    \ in the network tends to reduce the cost-\n   effectiveness of the networks with\
    \ values of K = 1000/155 and K =\n   2000/230 (from 1000/55 and 2000/110) for\
    \ the examples above.  That is\n   a reduction by a factor of 3 in the first case\
    \ and 2 in the second\n   case.  Such a change in cost-effectiveness has to be\
    \ weighed against\n   the desire to deploy such a large network.  If LSP hierarchies\
    \ are\n   the only scaling tool available, and networks this size are required,\n\
    \   the cost-effectiveness may need to be sacrificed.\n"
- title: 6.4.  Issues with Hierarchical LSPs
  contents:
  - "6.4.  Issues with Hierarchical LSPs\n   A basic observation for hierarchical\
    \ scaling techniques is that it is\n   hard to have any impact on the number of\
    \ LSPs that must be supported\n   by the level of P(n) nodes adjacent to the PEs\
    \ (for example, it is\n   hard to reduce L(3) in Section 6.3).  In fact, the only\
    \ way we can\n   change the number of LSPs supported by these nodes is to change\
    \ the\n   scaling ratio M(n) in the network -- in other words, to change the\n\
    \   number of PEs subtended to any P(n).  But such a change has a direct\n   effect\
    \ on the number of PEs in the network and so the cost-\n   effectiveness is impacted.\n\
    \   Another concern with the hierarchical approach is that it must be\n   configured\
    \ and managed.  This may not seem like a large burden, but\n   it must be recalled\
    \ that the P(n) nodes are not at the edge of the\n   network -- they are a set\
    \ of nodes that must be identified so that\n   the FA LSPs can be configured and\
    \ provisioned.  Effectively, the\n   operator must plan and construct a layered\
    \ network with a ring of\n   P(n) nodes giving access to the level (n) network.\
    \  This design\n   activity is open to considerable risk as failing to close the\
    \ ring\n   (i.e., allowing a node to be at both level (n+1) and at level (n))\n\
    \   may cause operational confusion.\n   Protocol techniques (such as IGP automesh\
    \ [RFC4972]) have been\n   developed to reduce the configuration necessary to\
    \ build this type of\n   multi-level network.  In the case of automesh, the routing\
    \ protocol\n   is used to advertise the membership of a 'mesh group', and all\n\
    \   members of the mesh group can discover each other and connect with\n   LSP\
    \ tunnels.  Thus, the P(n) nodes giving access to level (n) can\n   advertise\
    \ their existence to each other, and it is not necessary to\n   configure each\
    \ with information about all of the others.  Although\n   this process can help\
    \ to reduce the configuration overhead, it does\n   not eliminate it, as each\
    \ member of the mesh group must still be\n   planned and configured for membership.\n\
    \   An important consideration for the use of hierarchical LSPs is how\n   they\
    \ can be protected using MPLS Fast Reroute (FRR) [RFC4090].  FRR\n   may provide\
    \ link protection either by protecting the tunnels as they\n   traverse a broken\
    \ link or by treating each level (n) tunnel LSP as a\n   link in level (n+1) and\
    \ providing protection for the level (n+1) LSPs\n   (although in this model, fault\
    \ detection and propagation time may be\n   an issue).  Node protection may be\
    \ performed in a similar way, but\n   protection of the first and last nodes of\
    \ a hierarchical LSP is\n   particularly difficult.  Additionally, the whole notion\
    \ of scaling\n   with regard to FRR gives rise to separate concerns that are outside\n\
    \   the scope of this document as currently formulated.\n   Finally, observe that\
    \ we have been explaining these techniques using\n   conveniently symmetrical\
    \ networks.  Consider how we would arrange the\n   hierarchical LSPs in a network\
    \ where some PEs are connected closer to\n   the center of the network than others.\n"
- title: 7.  Scaling Ladder Networks with Forwarding Adjacencies
  contents:
  - '7.  Scaling Ladder Networks with Forwarding Adjacencies

    '
- title: 7.1.  Two-Layer Hierarchy
  contents:
  - "7.1.  Two-Layer Hierarchy\n   In Section 6.2, we observed that there is no value\
    \ to placing FA LSPs\n   between the P(1) nodes of our example snowflake topologies.\
    \  This is\n   because those LSPs would be just one hop long and would, in fact,\n\
    \   only serve to increase the burden at the P(1) nodes.  However, in the\n  \
    \ ladder model, there is value to this approach.  The P(1) nodes are\n   the spar-nodes\
    \ of the ladder, and they are not all mutually adjacent.\n   That is, the P(1)-to-P(1)\
    \ hierarchical LSPs can create a full mesh of\n   P(1) nodes where one does not\
    \ exist in the physical topology.\n   The number of LSPs seen by a P(1) node is\
    \ then:\n   o all of the tunnels terminating at the P(1) node,\n   o any transit\
    \ tunnels, and\n   o all of the LSPs due to subtended PEs.\n   This is a substantial\
    \ reduction; all of the transit LSPs are reduced\n   to just one per remote P(1)\
    \ that causes any transit LSP.  So:\n   L(1) = 2*(S(1) - 1) +\n          O(S(1)*S(1)/2)\
    \ +\n          2*E*E*(S(1) - 1) + E*(E-1) - E*(M(2) - 1)\n   where O(S(1)*S(1)/2)\
    \ gives an upper bound order of magnitude.  So:\n   L(1) = S(1)*S(1)/2 + 2*S(1)\
    \ + 2*E*E*(S(1) - 1) - E*M(2) - 2\n   So, in our two examples:\n   With S(1) =\
    \ 6, M(1) = 10, and M(2) = 17, we see:\n      E     = 170\n      S(PE) = 1020\n\
    \      L(PE) = 2038\n      L(2)  = 34374\n      L(1)  = 286138\n   Alternatively,\
    \ with S(1) = 10, M(1) = 10, and M(2) = 20, we see:\n      E     = 200\n     \
    \ S(PE) = 2000\n      L(PE) = 3998\n      L(2)  = 79580\n      L(1)  = 716060\n\
    \   Both of these show significant improvements over the previous L(1)\n   figures\
    \ of 777410 and 2516000.  But the numbers are still too large\n   to manage, and\
    \ there is no improvement in the L(2) figures.\n"
- title: 7.2.  Three-Layer Hierarchy
  contents:
  - "7.2.  Three-Layer Hierarchy\n   We can also apply the three-layer hierarchy to\
    \ the ladder model.  In\n   this case, the number of LSPs between P(1) nodes is\
    \ not reduced, but\n   tunnels are also set up between all P(2) nodes.  Thus,\
    \ the number of\n   LSPs seen by a P(1) node is:\n   o all of the tunnels terminating\
    \ at the P(1) node,\n   o any transit tunnels between P(1) nodes, and\n   o all\
    \ of the LSPs due to subtended P(2) nodes.\n   No PE-to-PE LSPs are seen at the\
    \ P(1) nodes.\n   L(1) = 2*(S(1) - 1) +\n          O(S(1)*S(1)/2) +\n        \
    \  2*(S(1) - 1)*M(1)*M(1) + M(1)*(M(1) - 1)\n   where O(S(1)*S(1)/2) gives an\
    \ upper bound order of magnitude.  So:\n   L(1) = S(1)*S(1)/2 + 2*S(1) + 2*M(1)*M(1)*S(1)\
    \ - M(1)(M(1) + 1) - 2\n   Unfortunately, there is a small increase in the number\
    \ of LSPs seen\n   by the P(2) nodes.  Each P(2) now sees all of the PE-to-PE\
    \ LSPs that\n   it saw before and is also an end-point for a set of P(2)-to-P(2)\n\
    \   tunnels.  Thus, L(2) increases to:\n   L(2) = 2*M(2)*(S(PE) - 1) - M(2)*(M(2)\
    \ - 1) + 2*(S(1)*M(1) - 1)\n   So, in our two examples:\n   With S(1) = 6, M(1)\
    \ = 10, and M(2) = 17, we see:\n      E     = 170\n      S(PE) = 1020\n      L(PE)\
    \ = 2038\n      L(2)  = 34492\n      L(1)  = 1118\n   Alternatively, with S(1)\
    \ = 10, M(1) = 10, and M(2) = 20, we see:\n      E     = 200\n      S(PE) = 2000\n\
    \      L(PE) = 3998\n      L(2)  = 79778\n      L(1)  = 1958\n   This represents\
    \ a very dramatic decrease in LSPs across the core.\n"
- title: 7.3.  Issues with Hierarchical LSPs
  contents:
  - "7.3.  Issues with Hierarchical LSPs\n   The same issues exist for hierarchical\
    \ LSPs as described in Section\n   6.4.  Although dramatic improvements can be\
    \ made to the scaling\n   numbers for the number of LSPs at core nodes, this can\
    \ only be done\n   at the cost of configuring P(2) to P(2) tunnels.  The mesh\
    \ of P(1)\n   tunnels is not enough.\n   But the sheer number of P(2) to P(2)\
    \ tunnels that must be configured\n   is a significant management burden that\
    \ can only be eased by using a\n   technique like automesh [RFC4972].\n   It is\
    \ significant, however, that the scaling problem at the P(2)\n   nodes cannot\
    \ be improved by using tunnels and that the only solution\n   to ease this in\
    \ the hierarchical approach would be to institute\n   another layer of hierarchy\
    \ (that is, P(3) nodes) between the P(2)\n   nodes and the PEs.  This is, of course,\
    \ a significant expense.\n"
- title: 8.  Scaling Improvements through Multipoint-to-Point LSPs
  contents:
  - "8.  Scaling Improvements through Multipoint-to-Point LSPs\n   An alternative\
    \ (or complementary) scaling technique has been proposed\n   using multipoint-to-point\
    \ (MP2P) LSPs.  The fundamental improvement\n   in this case is achieved by reducing\
    \ the number of LSPs toward the\n   destination as LSPs toward the same destination\
    \ are merged.\n   This section presents an overview of MP2P LSPs and describes\
    \ their\n   applicability and scaling benefits.\n"
- title: 8.1.  Overview of MP2P LSPs
  contents:
  - "8.1.  Overview of MP2P LSPs\n   Note that the MP2P LSPs discussed here are for\
    \ MPLS-TE and are not\n   the same concept familiar in the Label Distribution\
    \ Protocol (LDP)\n   described in [RFC5036].\n   Traffic flows generally converge\
    \ toward their destination and this\n   can be utilized by MPLS in constructing\
    \ an MP2P LSP.  With such an\n   LSP, the Label Forwarding Information Base (LFIB)\
    \ mappings at each\n   LSR are many-to-one so that multiple pairs {incoming interface,\n\
    \   incoming label} are mapped to a single pair {outgoing interface,\n   outgoing\
    \ label}.  Obviously, if per-platform labels are used, this\n   mapping may be\
    \ optimized within an implementation.\n   It is important to note that with MP2P\
    \ MPLS-TE LSPs, the traffic\n   flows are merged.  That is, some additional form\
    \ of identifier is\n   required if de-merging is required.  For example, if the\
    \ payload is\n   IP traffic belonging to the same client network, no additional\
    \ de-\n   merging information is required since the IP packet contains\n   sufficient\
    \ data.  On the other hand, if the data comes, for example,\n   from a variety\
    \ of VPN client networks, then the flows will need to be\n   labeled in their\
    \ own right as point-to-point (P2P) flows, so that\n   traffic can be disambiguated\
    \ at the egress of the MP2P LSPs.\n   Techniques for establishing MP2P MPLS-TE\
    \ LSPs and for assigning the\n   correct bandwidth downstream of LSP merge points\
    \ are out of the scope\n   of this document.\n"
- title: '8.2.  LSP State: A Better Measure of Scalability'
  contents:
  - "8.2.  LSP State: A Better Measure of Scalability\n   Consider the network topology\
    \ shown in Figure 3.  Suppose that we\n   establish MP2P LSP tunnels such that\
    \ there is one tunnel terminating\n   at each PE, and that that tunnel has every\
    \ other PE as an ingress.\n   Thus, a PE-to-PE MP2P LSP tunnel would have S(PE)-1\
    \ ingresses and one\n   egress, and there would be S(PE) such tunnels.\n   Note\
    \ that there still remain 2*(S(PE) - 1) PE-to-PE P2P LSPs that are\n   carried\
    \ through these tunnels.\n   Let's consider the number of LSPs handled at each\
    \ node in the\n   network.\n   The PEs continue to handle the same number of PE-to-PE\
    \ P2P LSPs, and\n   must also handle the MP2P LSPs.  So:\n   L(PE) = 2*(S(PE)\
    \ - 1) + S(PE)\n   But all P(n) nodes in the network only handle the MP2P LSP\
    \ tunnels.\n   Nominally, this means that L(n) = S(PE) for all values of n.  This\n\
    \   would appear to be a great success with the number of LSPs cut to\n   completely\
    \ manageable levels.\n   However, the number of LSPs is not the only issue (although\
    \ it may\n   have some impact for some of the scaling concerns listed in Section\n\
    \   4).  We are more interested in the amount of LSP state that is\n   maintained\
    \ by an LSR.  This reflects the amount of storage required\n   at the LSR, the\
    \ amount of protocol processing, and the amount of\n   information that needs\
    \ to be managed.\n   In fact, we were also interested in this measure of scalability\
    \ in\n   the earlier sections of this document, but in those cases we could\n\
    \   see a direct correlation between the number of LSPs and the amount of\n  \
    \ LSP state since transit LSPs had two pieces of state information (one\n   on\
    \ the incoming and one on the outgoing interface), and ingress or\n   egress LSPs\
    \ had just one piece of state.\n   We can quantify the amount of LSP state according\
    \ to the number of\n   LSP segments managed by an LSR.  So (as above), in the\
    \ case of a P2P\n   LSP, an ingress or egress has one segment to maintain, while\
    \ a\n   transit has two segments.  Similarly, for an MP2P LSP, an LSR must\n \
    \  maintain one set of state information for each upstream segment\n   (which,\
    \ we can assume, is in a one-to-one relationship with the\n   number of upstream\
    \ neighbors) and exactly one downstream segment --\n   ingresses obviously have\
    \ no upstream neighbors, and egresses have no\n   downstream segments.\n   So\
    \ we can start again on our examination of the scaling properties of\n   MP2P\
    \ LSPs using X(n) to represent the amount of LSP state held at\n   each P(n) node.\n"
- title: 8.3.  Scaling Improvements for Snowflake Networks
  contents:
  - "8.3.  Scaling Improvements for Snowflake Networks\n   At the PEs, there is only\
    \ connectivity to one other network node: the\n   P(2) node.  But note that if\
    \ P2P LSPs need to be used to allow\n   disambiguation of data at the MP2P LSP\
    \ egresses, then these P2P LSPs\n   are tunneled within the MP2P LSPs.  So X(PE)\
    \ is:\n   X(PE) = 2*(S(PE) - 1) if no disambiguation is required,\n   and\n  \
    \ X(PE) = 4*(S(PE) - 1) if disambiguation is required.\n   Each P(2) node has\
    \ M(2) downstream PEs.  The P(2) sees a single MP2P\n   LSP targeted at each downstream\
    \ PE with one downstream segment (to\n   that PE) and M(2) - 1 upstream segments\
    \ from the other subtended PEs.\n   Additionally, each of these LSPs has an upstream\
    \ segment from the one\n   upstream P(1).  This gives a total of M(2)*(1 + M(2))\
    \ LSP segments.\n   There are also LSPs running from the subtended PEs to every\
    \ other PE\n   in the network.  There are S(PE) - M(2) such PEs, and the P(2)\
    \ sees\n   one upstream segment for each of these from each subtended PE.  It\n\
    \   also has one downstream segment for each of these LSPs.  This gives\n   (M(2)\
    \ + 1)*(S(PE) - M(2)) LSP segments.\n   Thus:\n   X(2) = M(2)*(1 + M(2)) + (M(2)\
    \ + 1)*(S(PE) - M(2))\n        = S(PE)*(M(2) + 1)\n   Similarly, at each P(1)\
    \ node there are M(1) downstream P(2) nodes and\n   so a total of M(1)*M(2) downstream\
    \ PEs.  Each P(1) is connected in a\n   full mesh with the other P(1) nodes and\
    \ so has (S(1) - 1) neighbors.\n   The P(1) sees a single MP2P LSP targeted at\
    \ each downstream PE.  This\n   has one downstream segment (to the P(2) to which\
    \ the PE is connected)\n   and M(1) - 1 upstream segments from the other subtended\
    \ P(2) nodes.\n   Additionally, each of these LSPs has an upstream segment from\
    \ each of\n   the P(1) neighbors.  This gives a total number of LSP segments of\n\
    \   M(1)*M(2)*(M(1) + S(1) - 1).\n   There are also LSPs running from each of\
    \ the subtended PEs to every\n   other PE in the network.  There are S(PE) - M(1)M(2)\
    \ such PEs, and\n   the P(1) sees one upstream segment for each of these from\
    \ each\n   subtended P(2) (since the aggregation from the subtended PEs has\n\
    \   already happened at the P(2) nodes).  It also has one downstream\n   segment\
    \ to the appropriate next hop P(1) neighbor for each of these\n   LSPs.  This\
    \ gives (M(1) + 1)*(S(PE) - M(1)*M(2)) LSP segments.\n   Thus:\n   X(1) = M(1)*M(2)*(M(1)\
    \ + S(1) - 1) +\n          (M(1) + 1)*(S(PE) - M(1)*M(2))\n        = M(1)*M(2)*(S(1)\
    \ - 2) + S(PE)*(M(1) + 1)\n   So, for example, with S(1) = 10, M(1) = 10, and\
    \ M(2) = 10, we see:\n      S(PE) = 1000\n      S(2)  = 100\n      X(PE) = 3996\
    \   (or 1998)\n      X(2)  = 11000\n      X(1)  = 11800\n   And similarly, with\
    \ S(1) = 20, M(1) = 20, and M(2) = 5, we see:\n      S(PE) = 2000\n      S(2)\
    \  = 400\n      X(PE) = 5996   (or 2998)\n      X(2)  = 12000\n      X(1)  = 39800\n"
- title: 8.3.1.  Comparison with Other Scenarios
  contents:
  - "8.3.1.  Comparison with Other Scenarios\n   For comparison with the examples\
    \ in Sections 5 and 6, we need to\n   convert those LSP-based figures to our new\
    \ measure of LSP state.\n   Observe that each LSP in Sections 5 and 6 generates\
    \ two state units\n   at a transit LSR and one at an ingress or egress.  So we\
    \ can provide\n   conversions as follows:\n   Section 5 (flat snowflake network)\n\
    \     L(PE) = 2*(S(PE) - 1)\n     L(2)  = M(2)*(2*S(PE) - M(2) - 1)\n     L(1)\
    \  = M(1)*M(2)*(2*S(PE) - M(2)*(M(1) + 1))\n     X(PE) = 2*(S(PE) - 1)\n     X(2)\
    \  = 2*M(2)*(2*S(PE) - M(2) - 1)\n     X(1)  = 2*M(1)*M(2)*(2*S(PE) - M(2)*(M(1)\
    \ + 1))\n     For the example with S(1) = 10, M(1) = 10, and M(2) = 10, this\n\
    \     gives a comparison table as follows:\n        Count | Unmodified  |  MP2P\n\
    \        ------+-------------+----------\n        X(PE) |     1998    |   3996\n\
    \        X(2)  |    39780    |  11000\n        X(1)  |   378000    |  11800\n\
    \     Clearly, this technique is a significant improvement over the flat\n   \
    \  network within the core of the network, although the PEs are more\n     heavily\
    \ stressed if disambiguation is required.\n   Section 6.1 (two-layer hierarchy\
    \ snowflake network)\n     L(PE) = 2*(S(PE) - 1)\n     L(2)  = M(2)*(2*S(PE) -\
    \ M(2) - 1) + 2*(S(2) - 1)\n     L(1)  = M(1)*(2*S(2) - M(1) - 1)\n     X(PE)\
    \ = 2*(S(PE) - 1)\n     X(2)  = 2*M(2)*(2*S(PE) - M(2) - 1) + 2*(S(2) - 1)\n \
    \    X(1)  = 2*M(1)*(2*S(2) - M(1) - 1)\n     Note that in the computation of\
    \ X(2) the hierarchical LSPs only add\n     one state at each P(2) node.\n   \
    \  For the same example with S(1) = 10, M(1) = 10, and M(2) = 10, this\n     gives\
    \ a comparison table as follows:\n        Count |   2-Layer   |  MP2P\n      \
    \        |  Hierarchy  |\n        ------+-------------+----------\n        X(PE)\
    \ |     1998    |   3996\n        X(2)  |    39978    |  11000\n        X(1) \
    \ |     3780    |  11800\n     We can observe that the MP2P model is better at\
    \ P(2), but the\n     hierarchical model is better at P(1).\n   In fact, this\
    \ comparison can be generalized to observe that the MP2P\n   model produces its\
    \ best effects toward the edge of the network, while\n   the hierarchical model\
    \ makes most impression at the core.  However,\n   the requirement for disambiguation\
    \ of P2P LSPs tunneled within the\n   MP2P LSPs does cause a double burden at\
    \ the PEs.\n"
- title: 8.4.  Scaling Improvements for Ladder Networks
  contents:
  - "8.4.  Scaling Improvements for Ladder Networks\n   MP2P LSPs applied just within\
    \ the ladder will not make a significant\n   difference, but applying MP2P for\
    \ all LSPs and at all nodes makes a\n   very big difference without requiring\
    \ any further configuration.\n   LSP state at a spar-node may be divided into\
    \ those LSPs' segments\n   that enter or leave the spar-node due to subtended\
    \ PEs (local LSP\n   segments), and those that enter or leave the spar-node due\
    \ to remote\n   PEs (remote segments).\n   The local segments may be counted as:\n\
    \   o  E LSPs targeting local PEs\n   o  (S(1)-1)*E*M(1) LSPs targeting remote\
    \ PEs\n   The remote segments may be counted as:\n   o  (S(1)-1)*E outgoing LSPs\
    \ targeting remote PEs\n   o  <= 3*S(1)*E incoming LSPs targeting any PE (there\
    \ are precisely\n      P(1) nodes attached to any other P(1) node)\n   Hence,\
    \ using X(1) as a measure of LSP state rather than a count of\n   LSPs, we get:\n\
    \   X(1) <= E + (S(1)-1)*E*M(1) + (S(1)-1)*E + 3*S(1)*E\n        <= (4 + M(1))*S(1)*E\
    \ - M(1)*E\n   The number of LSPs at the P(2) nodes is also improved.  We may\
    \ also\n   count the LSP state in the same way so that there are:\n   o  M(2)\
    \ LSPs targeting local PEs,\n   o  M(2)*(S(1)*E) LSPs from local PEs to all other\
    \ PEs, and\n   o  S(1)*E - M(2) LSPs to remote PEs.\n   So using X(2) as a measure\
    \ of LSP state and not a count of LSPs, we\n   have:\n   X(2) = M(2) + M(2)*(S(1)*E)\
    \ + S(1)*E - M(2)\n        = (M(2) + 1)*S(1)*E\n   Our examples from Section 5.2\
    \ give us the following numbers:\n   With S(1) = 6, M(1) = 10, and M(2) = 17,\
    \ we see:\n      E     = 170\n      S(PE) = 1020\n      X(PE) = 2038\n      X(2)\
    \  = 18360\n      X(1) <= 12580\n   Alternatively, with S(1) = 10, M(1) = 10,\
    \ and M(2) = 20, we see:\n      E     = 200\n      S(PE) = 2000\n      X(PE) =\
    \ 3998\n      X(2)  = 42000\n      X(1) <= 26000\n"
- title: 8.4.1.  Comparison with Other Scenarios
  contents:
  - "8.4.1.  Comparison with Other Scenarios\n   The use of MP2P compares very favorably\
    \ with all scaling scenarios.\n   It is the only technique able to reduce the\
    \ value of X(2), and it\n   does this by a factor of almost two.  The impact on\
    \ X(1) is better\n   than everything except the three-level hierarchy.\n   The\
    \ following table provides a quick cross-reference for the figures\n   for the\
    \ example ladder networks.  Note that the previous figures are\n   modified to\
    \ provide counts of LSP state rather than LSP numbers.\n   Again, each LSP contributes\
    \ one state at its end points and two\n   states at transit nodes.\n   Thus, for\
    \ the all cases we have:\n     X(PE) = 2*(S(PE) - 1) or\n     X(PE) = 4*(S(PE)\
    \ - 1) if disambiguation is required.\n   In the unmodified (flat) case, we have:\n\
    \     X(2) = 2*(M(2)*(2*S(PE) - M(2) - 1))\n     X(1) = 2*(M(1)*M(2)*(2*S(PE)\
    \ - M(2)*(M(1) + 1)))\n   In the two-level hierarchy, we have:\n     X(2) = 2*(2*M(2)*(S(PE)\
    \ - 1) - M(2)*(M(2) - 1))\n     X(1) = S(1)*S(1) + 2*S(1) + 4*E*E*(S(1) - 1) -\
    \ 2*E*M(2) - 2\n   In the three-level hierarchy, we have:\n     X(2) = 2*(2*M(2)*(S(PE)\
    \ - 1) - M(2)*(M(2) - 1)) + 2*(S(1)*M(1) - 1)\n     X(1) = S(1)*S(1) + 2*S(1)\
    \ + 4*M(1)*M(1)*S(1) - 2*M(1)(M(1) + 1) - 2\n   Example A: S(1) = 6, M(1) = 10,\
    \ and M(2) = 17\n   Example B: S(1) = 10, M(1) = 10, and M(2) = 20\n   Example|\
    \ Count | Unmodified |  2-Level   |  3-Level    |  MP2P\n          |       | \
    \           | Hierarchy  | Hierarchy   |\n   -------+-------+------------+------------+-------------+-------\n\
    \   A      | X(2)  |     68748  |    68748   |    68866    |  18360\n        \
    \  | X(1)  |   1554820  |   572266   |     2226    |  12580\n   -------+-------+------------+------------+-------------+-------\n\
    \   B      | X(2)  |    159160  |   159160   |   159358    |  42000\n        \
    \  | X(1)  |   5032000  |  1433998   |     3898    |  26000\n"
- title: 8.4.2.  LSP State Compared with LSP Numbers
  contents:
  - "8.4.2.  LSP State Compared with LSP Numbers\n   Recall that in Section 8.3, the\
    \ true benefit of MP2P was analyzed\n   with respect to the LSP segment state\
    \ required, rather than the\n   actual number of LSPs.  This proved to be a more\
    \ accurate comparison\n   of the techniques because the MP2P LSPs require state\
    \ on each branch\n   of the LSP, so the saving is not linear with the reduced\
    \ number of\n   LSPs.\n   A similar analysis could be performed here for the ladder\
    \ network.\n   The net effect is that it increases the state by an order of two\
    \ for\n   all transit LSPs in the P2P models, and by a multiplier equal to the\n\
    \   degree of a node in the MP2P model.\n   A rough estimate shows that, as with\
    \ snowflake networks, MP2P\n   provides better scaling than the one-level hierarchical\
    \ model and is\n   considerably better at the core.  But MP2P compares less will\
    \ with\n   the two-level hierarchy especially in the core.\n"
- title: 8.5.  Issues with MP2P LSPs
  contents:
  - "8.5.  Issues with MP2P LSPs\n   The biggest challenges for MP2P LSPs are the\
    \ provision of support in\n   the control and data planes.  To some extent, support\
    \ must also be\n   provided in the management plane.\n   Control plane support\
    \ is just a matter of defining the protocols and\n   procedures [MP2P-RSVP], although\
    \ it must be clearly understood that\n   this will introduce some complexity to\
    \ the control plane.\n   Hardware issues may be a little more tricky.  For example,\
    \ the\n   capacity of the upstream segments must never (allowing for\n   statistical\
    \ over-subscription) exceed the capacity of the downstream\n   segment.  Similarly,\
    \ data planes must be equipped with sufficient\n   buffers to handle incoming\
    \ packet collisions.\n   The management plane will be impacted in several ways.\
    \  Firstly, the\n   management applications will need to handle LSPs with multiple\n\
    \   senders.  This means that, although the applications need to process\n   fewer\
    \ LSPs, they will be more complicated and will, in fact, need to\n   process the\
    \ same number of ingresses and egresses.  Other issues like\n   diagnostics and\
    \ OAM would also need to be enhanced to support MP2P,\n   but might be borrowed\
    \ heavily from LDP networks.\n   Lastly, note that when the MP2P solution is used,\
    \ the receiver (the\n   single egress PE of an MP2P tunnel) cannot use the incoming\
    \ label as\n   an indicator of the source of the data.  Contrast this with P2P\
    \ LSPs.\n   Depending on deployment, this might not be an issue since the PE-PE\n\
    \   connectivity may in any case be a tunnel with inner labels to\n   discriminate\
    \ the data flows.\n   In other deployments, it may be considered necessary to\
    \ include\n   additional PE-PE P2P LSPs and tunnel these through the MP2P LSPs.\n\
    \   This would require the PEs to support twice as many LSPs.  Since PEs\n   are\
    \ not usually as fully specified as P-routers, this may cause some\n   concern;\
    \ however, the use of penultimate hop popping on the MP2P LSPs\n   might help\
    \ to reduce this issue.\n   In all cases, care must be taken not to confuse the\
    \ reduction in the\n   number of LSPs with a reduction in the LSP state that is\
    \ required.\n   In fact, the discussion in Section 8.3 is slightly optimistic\
    \ since\n   LSP state toward the destination will probably need to include sender\n\
    \   information and so will increase depending on the number of senders\n   for\
    \ the MP2P LSP.  Section 8.4, on the other hand, counts LSP state\n   rather than\
    \ LSPs.  This issue is clearly dependent on the protocol\n   solution for MP2P\
    \ RSVP-TE, which is out of scope for this document.\n   MPLS Fast Reroute (FRR)\
    \ [RFC4090] is an attractive scheme for\n   providing rapid local protection from\
    \ node or link failures.  Such a\n   scheme has, however, not been designed for\
    \ MP2P at the time of\n   writing, so it remains to be seen how practical it could\
    \ be,\n   especially in the case of the failure of a merge node.  Initial\n  \
    \ examination of this case suggests that FRR would not be a problem for\n   MP2P,\
    \ given that each flow can be handled separately.\n   As a final note, observe\
    \ that the MP2P scenario presented in this\n   document may be optimistic.  MP2P\
    \ LSP merging may be hard to achieve\n   between LSPs with significantly different\
    \ traffic and Quality of\n   Service (QoS) parameters.  Therefore, it may be necessary\
    \ to increase\n   the number of MP2P LSPs arriving at an egress.\n"
- title: 9.  Combined Models
  contents:
  - "9.  Combined Models\n   There is nothing to prevent the combination of hierarchical\
    \ and MP2P\n   solutions within a network.\n   Note that if MP2P LSPs are tunneled\
    \ through P2P FA LSPs across the\n   core, none of the benefit of LSP merging\
    \ is seen for the hops during\n   which the MP2P LSPs are tunneled.\n   On the\
    \ other hand, it is possible to construct solutions where MP2P\n   FA LSPs are\
    \ constructed within the network, resulting in savings from\n   both modes of\
    \ operation.\n"
- title: 10.  An Alternate Solution
  contents:
  - "10.  An Alternate Solution\n   A simple solution to reducing the number of LSP\
    \ tunnels handled by\n   any node in the network has been proposed.  In this solution\
    \ it is\n   observed that part of the problem is caused purely by the total\n\
    \   number of LSP in the network, and that this is a function of the\n   number\
    \ of PEs since a full mesh of PE-PE LSPs is required.  The\n   conclusion of this\
    \ observation is to move the tunnel end-points\n   further into the network so\
    \ that, instead of having a full mesh of\n   PE-PE tunnels, we have only a full\
    \ mesh of P(n)-P(n) tunnels.\n   Obviously, there is no change in the physical\
    \ network topology, so\n   the PEs remain subtended to the P(n) nodes, and the\
    \ consequence is\n   that there is no TE on the links between PEs and P(n) nodes.\n\
    \   In this case, we have already done the hard work for computing the\n   number\
    \ of LSPs in the previous sections.  The power of the analysis\n   in the earlier\
    \ sections is demonstrated by its applicability to this\n   new model -- all we\
    \ need to do is make minor changes to the formulae.\n   This is most simply done\
    \ by removing a layer from the network.  We\n   introduce the term \"tunnel end-point\"\
    \ (TEP) and replace the P(n)\n   nodes with TEPs.  Thus, the example of a flat\
    \ snowflake network in\n   Figure 3 becomes as shown in Figure 7.  Corresponding\
    \ changes can be\n   made to all of the sample topologies.\n        PE    PE \
    \ PE     PE  PE     PE\n          \\     \\/         \\/      /\n       PE--TEP\
    \  TEP        TEP  TEP--PE\n              \\ |            | /\n              \
    \ \\|            |/\n      PE--TEP---P(1)------P(1)---TEP--PE\n         /    \
    \      \\    /          \\\n       PE            \\  /            PE\n       \
    \               \\/\n                      P(1)\n                      /|\\\n\
    \                     / | \\\n                    /  |  \\\n             PE--TEP\
    \  TEP  TEP--PE\n                /      /\\     \\\n              PE     PE  PE\
    \    PE\n      Figure 7 : An Example Snowflake Network with Tunnel End-Points\n\
    \   To perform the scaling calculations we need only replace the PE\n   counts\
    \ in the formulae with TEP counts, and observe that there is one\n   fewer layer\
    \ in the network.  For example, in the flat snowflake\n   network shown in Figure\
    \ 7, we can see that the number of LSPs seen at\n   a TEP is:\n   L(TEP) = 2*(S(TPE)\
    \ - 1)\n   In our sample networks, S(TPE) is typically of the order of 50 or 100\n\
    \   (the original values of S(2)), so L(TEP) is less than 200, which is\n   quite\
    \ manageable.\n   Similarly, the number of LSPs handled by a P(1) node can be\
    \ derived\n   from the original formula for the number of LSPs seen at a P(2)\
    \ node,\n   since all we have done is reduce n in P(n) from 2 to 1.  So our new\n\
    \   formula is:\n   L(1) = M(1)*(2*S(TEP) - M(1) - 1)\n   With figures for M(1)\
    \ = 10 and S(TEP) = 100, this gives us L(1) =\n   1890.  This is also very manageable.\n"
- title: 10.1.  Pros and Cons of the Alternate Solution
  contents:
  - "10.1.  Pros and Cons of the Alternate Solution\n   On the face of it, this alternate\
    \ solution seems very attractive.\n   Simply by contracting the edges of the tunnels\
    \ into the network, we\n   have shown a dramatic reduction in the number of tunnels\
    \ needed, and\n   there is no requirement to apply any additional scaling techniques.\n\
    \   But what of the PE-P(n) links?  In the earlier sections of this\n   document,\
    \ we have assumed that there was some requirement for PE-PE\n   LSPs with TE properties\
    \ that extended to the PE-P(n) links at both\n   ends of each LSP.  That means\
    \ that there was a requirement to provide\n   reservation-based QoS on those links,\
    \ to be able to discriminate\n   traffic flows for priority-based treatment, and\
    \ to be able to\n   distinguish applications and sources that send data based\
    \ on the LSPs\n   that carry the data.\n   It might be argued that, since the\
    \ PE-P(n) links do not offer any\n   routing options (each such link provides\
    \ the only access to the\n   network for a PE), most of the benefits of tunnels\
    \ are lost on these\n   peripheral links.  However, TE is not just about routing.\
    \  Just as\n   important are the abilities to make resource reservations, to\n\
    \   prioritize traffic, and to discriminate between traffic from\n   different\
    \ applications, customers, or VPNs.\n   Furthermore, in multihoming scenarios\
    \ where each PE is connected to\n   more than one P(n) or where a PE has multiple\
    \ links to a single P(n),\n   there may be a desire to pre-select the link to\
    \ be used and to direct\n   the traffic to that link using a PE-PE LSP.  Note\
    \ that multihoming\n   has not been considered in this document.\n   Operationally,\
    \ P(n)-P(n) LSPs offer the additional management\n   overhead that is seen for\
    \ hierarchical LSPs described in Section 6.\n   That is, the LSPs have to be configured\
    \ and established through\n   additional configuration or management operations\
    \ that are not\n   carried out at the PEs.  As described in Section 6, automesh\n\
    \   [RFC4972] could be used to ease this task.  But it must be noted\n   that,\
    \ as mentioned above, some of the key uses of tunnels require\n   that traffic\
    \ is classified and placed in an appropriate tunnel\n   according to its traffic\
    \ class, end-points, originating application,\n   and customer (such as client\
    \ VPN).  This information may not be\n   readily available for each packet at\
    \ the P(n) nodes since it is PE-\n   based information.  Of course, it is possible\
    \ to conceive of\n   techniques to make this information available, such as assigning\
    \ a\n   different label for each class of traffic, but this gives rise to the\n\
    \   original problem of larger numbers of LSPs.\n   Our conclusion is, therefore,\
    \ that this alternate technique may be\n   suitable for the general distribution\
    \ of traffic based solely on the\n   destination, or on a combination of the destination\
    \ and key fields\n   carried in the IP header.  In this case, it can provide a\
    \ very\n   satisfactory answer to the scaling issues in an MPLS-TE network.  But\n\
    \   if more sophisticated packet classification and discrimination is\n   required,\
    \ this technique will make the desired function hard to\n   achieve, and the trade-off\
    \ between scaling and feature-level will\n   swing too far towards solving the\
    \ scaling issue at the expense of\n   delivery of function to the customer.\n"
- title: 11.  Management Considerations
  contents:
  - "11.  Management Considerations\n   The management issues of the models presented\
    \ in this document have\n   been discussed in-line.  No one solution is without\
    \ its management\n   overhead.\n   Note, however, that scalability of management\
    \ tools is one of the\n   motivators for this work and that network scaling solutions\
    \ that\n   reduce the active management of LSPs at the cost of additional effort\n\
    \   to manage the more static elements of the network represent a\n   benefit.\
    \  That is, it is worth the additional effort to set up MP2P\n   or FA LSPs if\
    \ it means that the network can be scaled to a larger\n   size without being constrained\
    \ by the management tools.\n   The MP2P technique may prove harder to debug through\
    \ OAM methods than\n   the FA LSP approach.\n"
- title: 12.  Security Considerations
  contents:
  - "12.  Security Considerations\n   The techniques described in this document use\
    \ existing or yet-to-be-\n   defined signaling protocol extensions and are subject\
    \ to the security\n   provided by those extensions.  Note that we are talking\
    \ about\n   tunneling techniques used within the network and that both approaches\n\
    \   are vulnerable to the creation of bogus tunnels that deliver data to\n   an\
    \ egress or consume network resources.\n   The fact that the MP2P technique may\
    \ prove harder to debug through\n   OAM methods than the FA LSP approach is a\
    \ security concern since it\n   is important to be able to detect misconnections.\n\
    \   General issues of the relationship between scaling and security are\n   covered\
    \ in Section 1.1, but the details are beyond the scope of this\n   document. \
    \ Readers are referred to [MPLS-SEC] for details of MPLS\n   security techniques.\n"
- title: 13.  Recommendations
  contents:
  - "13.  Recommendations\n   The analysis in this document suggests that the ability\
    \ to signal\n   MP2P MPLS-TE LSPs is a desirable addition to the operator's MPLS-TE\n\
    \   toolkit.\n   At this stage, no further recommendations are made, but it would\
    \ be\n   valuable to consult more widely to discover:\n   - The concerns of other\
    \ service providers with respect to network\n     scalability.\n   - More opinions\
    \ on the realistic constraints to the network\n     parameters listed in Section\
    \ 4.\n   - Desirable values for the cost-effectiveness of the network\n     (parameter\
    \ K).\n   - The applicability, manageability, and support for the two\n     techniques\
    \ described.\n   - The feasibility of combining the two techniques, as discussed\
    \ in\n     Section 9.\n   - The level of concern over the loss of functionality\
    \ that would\n     occur if the alternate solution described in Section 10 was\n\
    \     adopted.\n"
- title: 14.  Acknowledgements
  contents:
  - "14.  Acknowledgements\n   The authors are grateful to Jean-Louis Le Roux for\
    \ discussions and\n   review input.  Thanks to Ben Niven-Jenkins, JP Vasseur,\
    \ Loa\n   Andersson, Anders Gavler, Ben Campbell, and Tim Polk for their\n   comments.\
    \  Thanks to Dave Allen for useful discussion of the math.\n"
- title: 15.  Normative References
  contents:
  - "15.  Normative References\n   [RFC4206]   Kompella, K. and Y. Rekhter, \"Label\
    \ Switched Paths (LSP)\n               Hierarchy with Generalized Multi-Protocol\
    \ Label Switching\n               (GMPLS) Traffic Engineering (TE)\", RFC 4206,\
    \ October\n               2005.\n"
- title: 16.  Informative References
  contents:
  - "16.  Informative References\n   [RFC2961]   Berger, L., Gan, D., Swallow, G.,\
    \ Pan, P., Tommasi, F.,\n               and S. Molendini, \"RSVP Refresh Overhead\
    \ Reduction\n               Extensions\", RFC 2961, April 2001.\n   [RFC3209]\
    \   Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              \
    \ and G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n               Tunnels\"\
    , RFC 3209, December 2001.\n   [RFC3270]   Le Faucheur, F., Wu, L., Davie, B.,\
    \ Davari, S., Vaananen,\n               P., Krishnan, R., Cheval, P., and J. Heinanen,\
    \ \"Multi-\n               Protocol Label Switching (MPLS) Support of Differentiated\n\
    \               Services\", RFC 3270, May 2002.\n   [RFC3473]   Berger, L., Ed.,\
    \ \"Generalized Multi-Protocol Label\n               Switching (GMPLS) Signaling\
    \ Resource ReserVation\n               Protocol-Traffic Engineering (RSVP-TE)\
    \ Extensions\", RFC\n               3473, January 2003.\n   [RFC3985]   Bryant,\
    \ S., Ed., and P. Pate, Ed., \"Pseudo Wire Emulation\n               Edge-to-Edge\
    \ (PWE3) Architecture\", RFC 3985, March 2005.\n   [RFC4090]   Pan, P., Ed., Swallow,\
    \ G., Ed., and A. Atlas, Ed., \"Fast\n               Reroute Extensions to RSVP-TE\
    \ for LSP Tunnels\", RFC 4090,\n               May 2005.\n   [RFC4110]   Callon,\
    \ R. and M. Suzuki, \"A Framework for Layer 3\n               Provider-Provisioned\
    \ Virtual Private Networks (PPVPNs)\",\n               RFC 4110, July 2005.\n\
    \   [RFC4972]   Vasseur, JP., Ed., Leroux, JL., Ed., Yasukawa, S.,\n         \
    \      Previdi, S., Psenak, P., and P. Mabbey, \"Routing\n               Extensions\
    \ for Discovery of Multiprotocol (MPLS) Label\n               Switch Router (LSR)\
    \ Traffic Engineering (TE) Mesh\n               Membership\", RFC 4972, July 2007.\n\
    \   [RFC5036]   Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n    \
    \           \"LDP Specification\", RFC 5036, October 2007.\n   [MP2P-RSVP] Yasukawa,\
    \ Y., \"Supporting Multipoint-to-Point Label\n               Switched Paths in\
    \ Multiprotocol Label Switching Traffic\n               Engineering\", Work in\
    \ Progress, October 2008.\n   [MPLS-SEC]  Fang, L., Ed., \"Security Framework\
    \ for MPLS and GMPLS\n               Networks\", Work in Progress, November 2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Seisho Yasukawa\n   NTT Corporation\n   9-11, Midori-Cho\
    \ 3-Chome\n   Musashino-Shi, Tokyo 180-8585 Japan\n   Phone: +81 422 59 4769\n\
    \   EMail: s.yasukawa@hco.ntt.co.jp\n   Adrian Farrel\n   Old Dog Consulting\n\
    \   EMail: adrian@olddog.co.uk\n   Olufemi Komolafe\n   Cisco Systems\n   96 Commercial\
    \ Street\n   Edinburgh\n   EH6 6LX\n   United Kingdom\n   EMail: femi@cisco.com\n"
