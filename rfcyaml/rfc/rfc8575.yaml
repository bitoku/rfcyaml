- contents:
  - '         YANG Data Model for the Precision Time Protocol (PTP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a YANG data model for the configuration of\n
    \  devices and clocks using the Precision Time Protocol (PTP) as\n   specified
    in IEEE Std 1588-2008.  It also defines the retrieval of\n   the configuration
    information, the data sets and the running states\n   of PTP clocks.  The YANG
    module in this document conforms to the\n   Network Management Datastore Architecture
    (NMDA).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8575.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Conventions Used in This Document . . . . . . . . .
    . . .   4\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . . . .
    .   4\n   2.  IEEE Std 1588-2008 YANG Data Model Hierarchy  . . . . . . . .   5\n
    \    2.1.  Interpretations from IEEE 1588 Working Group  . . . . . .   7\n     2.2.
    \ Configuration and State . . . . . . . . . . . . . . . . .   8\n   3.  IEEE Std
    1588-2008 YANG Module  . . . . . . . . . . . . . . .   9\n   4.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  21\n   5.  IANA Considerations . . . .
    . . . . . . . . . . . . . . . . .  22\n   6.  References  . . . . . . . . . .
    . . . . . . . . . . . . . . .  22\n     6.1.  Normative References  . . . . .
    . . . . . . . . . . . . .  22\n     6.2.  Informative References  . . . . . .
    . . . . . . . . . . .  23\n   Appendix A.  Transferring YANG Work to the IEEE
    1588 WG . . . . .  25\n     A.1.  Assumptions for the Transfer  . . . . . . .
    . . . . . . .  26\n     A.2.  Intellectual Property Considerations  . . . . .
    . . . . .  26\n     A.3.  Namespace and Module Name . . . . . . . . . . . . .
    . . .  27\n     A.4.  IEEE 1588 YANG Modules in ASCII Format  . . . . . . . .
    .  28\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . . .  29\n
    \  Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  30\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   As a synchronization protocol, IEEE Std 1588-2008 [IEEE1588]
    is\n   widely supported in the carrier networks, industrial networks,\n   automotive
    networks, and many other applications.  It can provide\n   high precision time
    synchronization as fine as nanoseconds.  The\n   protocol depends on a Precision
    Time Protocol (PTP) engine to decide\n   its own state automatically, and a PTP
    transportation layer to carry\n   the PTP timing and various quality messages.
    \ The configuration\n   parameters and state data sets of IEEE Std 1588-2008 are
    numerous.\n   According to the concepts described in [RFC3444], IEEE Std 1588-2008\n
    \  itself provides an information model in its normative specifications\n   for
    the data sets (in IEEE Std 1588-2008 clause 8).  Some\n   standardization organizations,
    including the IETF, have specified\n   data models in MIBs (Management Information
    Bases) for IEEE Std\n   1588-2008 data sets (e.g., [RFC8173] and [IEEE8021AS]).
    \ These MIBs\n   are typically focused on retrieval of state data using the Simple\n
    \  Network Management Protocol (SNMP); furthermore, configuration of PTP\n   data
    sets is not considered in [RFC8173].\n   Some service providers and applications
    require that the management\n   of the IEEE Std 1588-2008 synchronization network
    be flexible and\n   more Internet based (typically overlaid on their transport
    networks).\n   Software-Defined Networking (SDN) is another driving factor, which\n
    \  demands an improved configuration capability of synchronization\n   networks.\n
    \  YANG [RFC7950] is a data modeling language used to model\n   configuration
    and state data manipulated by network management\n   protocols like the Network
    Configuration Protocol (NETCONF)\n   [RFC6241].  A small set of built-in data
    types is defined in\n   [RFC7950]; a collection of common data types is also defined
    in\n   [RFC6991].  Advantages of YANG include Internet-based configuration\n   capabilities,
    validation, rollback, and so on.  All of these\n   characteristics make it attractive
    to become another candidate\n   modeling language for IEEE Std 1588-2008.\n   This
    document defines a YANG data model for the configuration of IEEE\n   Std 1588-2008
    devices and clocks as well as retrieval of the state\n   data of IEEE Std 1588-2008
    clocks.  The data model is based on the\n   PTP data sets as specified in [IEEE1588].
    \ The technology-specific\n   PTP information (e.g., those specifically implemented
    by a bridge, a\n   router, or a telecom profile) is out of scope of this document.\n
    \  The YANG module in this document conforms to the Network Management\n   Datastore
    Architecture (NMDA) [RFC8342].\n   When used in practice, network products in
    support of synchronization\n   typically conform to one or more IEEE Std 1588-2008
    profiles.  Each\n   profile specifies how IEEE Std 1588-2008 is used in a given
    industry\n   (e.g., telecom or automotive) and application.  A profile can require\n
    \  features that are optional in IEEE Std 1588-2008, and it can specify\n   new
    features that use IEEE Std 1588-2008 as a foundation.\n   The readers are assumed
    to be familiar with IEEE Std 1588-2008.  It\n   is expected that the IEEE Std
    1588-2008 YANG module will be used as\n   follows:\n   -  The IEEE Std 1588-2008
    YANG module can be used as is for products\n      that conform to one of the default
    profiles specified in IEEE Std\n      1588-2008.\n   -  When the IEEE Std 1588
    standard is revised (e.g., the IEEE Std\n      1588 revision in progress at the
    time of writing this document),\n      it will add some new optional features
    to its data sets.  The YANG\n      module of this document can be revised and
    extended to support\n      these new features.  Moreover, the YANG \"revision\"
    MUST be used to\n      indicate changes to the YANG module under such a circumstance.\n
    \  -  A profile standard based on IEEE Std 1588-2008 may create a\n      dedicated
    YANG module for its profile.  The profile's YANG module\n      SHOULD use YANG
    \"import\" to import the IEEE Std 1588-2008 YANG\n      module as its foundation.
    \ Then the profile's YANG module SHOULD\n      use YANG \"augment\" to add any
    profile-specific enhancements.\n   -  A product that conforms to a profile standard
    may also create its\n      own YANG module.  The product's YANG module SHOULD
    \"import\" the\n      profile's module, and then use YANG \"augment\" to add any
    product-\n      specific enhancements.\n"
  - contents:
    - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this
      document are to be interpreted as described in\n   BCP 14 [RFC2119] [RFC8174]
      when, and only when, they appear in all\n   capitals, as shown here.\n"
    title: 1.1.  Conventions Used in This Document
  - contents:
    - "1.2.  Terminology\n   Most terminology used in this document is extracted from
      [IEEE1588].\n   BC    Boundary Clock, see Section 3.1.3 of [IEEE1588]\n   DS
      \   Data Set, see Section 8.1.1 of [IEEE1588]\n   E2E   End-to-End, see Section
      3.2 of [IEEE1588]\n   IANA  Internet Assigned Numbers Authority\n   OC    Ordinary
      Clock, see Section 3.1.22 of [IEEE1588]\n   P2P   Peer-to-Peer, see Section
      3.2 of [IEEE1588]\n   PTP   Precision Time Protocol, see Section 3.1.28 of [IEEE1588]\n
      \  TAI   International Atomic Time, see Section 3.2 of [IEEE1588]\n   TC    Transparent
      Clock, see Section 3.1.46 of [IEEE1588]\n   UTC   Coordinated Universal Time,
      see Section 3.2 of [IEEE1588]\n   PTP data set\n         Structured attributes
      of clocks (an OC, BC, or TC) used for PTP\n         decisions and for providing
      values for PTP message fields; see\n         Section 8 of [IEEE1588].\n   PTP
      instance\n         A PTP implementation in the device (i.e., an OC or BC)\n
      \        represented by a specific PTP data set.\n"
    title: 1.2.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  IEEE Std 1588-2008 YANG Data Model Hierarchy\n   This section describes the
    hierarchy of a YANG module for IEEE Std\n   1588-2008; specifically, query and
    configuration of device-wide or\n   port-specific configuration information and
    clock data sets are\n   described.\n   Query and configuration of clock information
    include:\n   (Note: The attribute names are consistent with IEEE Std 1588-2008,\n
    \  but changed to the YANG style, i.e., using all lowercase, with dashes\n   between
    words.)\n   -  Clock data set attributes in a clock node, including the\n      following:
    current-ds, parent-ds, default-ds, time-properties-ds,\n      and transparent-clock-default-ds.\n
    \  -  Port-specific data set attributes, including the following:\n      port-ds
    and transparent-clock-port-ds.\n   As all PTP terminology and PTP data set attributes
    are described in\n   detail in IEEE Std 1588-2008, this document only outlines
    each of\n   them in the YANG module.\n   A simplified YANG tree diagram [RFC8340]
    representing the data model\n   is typically used by YANG modules.  This document
    uses the same tree\n   diagram syntax as described in [RFC8340].\n   module: ietf-ptp\n
    \    +--rw ptp\n        +--rw instance-list* [instance-number]\n        |  +--rw
    instance-number      uint32\n        |  +--rw default-ds\n        |  |  +--rw
    two-step-flag?    boolean\n        |  |  +--ro clock-identity?   clock-identity-type\n
    \       |  |  +--rw number-ports?     uint16\n        |  |  +--rw clock-quality\n
    \       |  |  |  +--rw clock-class?                  uint8\n        |  |  |  +--rw
    clock-accuracy?               uint8\n        |  |  |  +--rw offset-scaled-log-variance?
    \  uint16\n        |  |  +--rw priority1?        uint8\n        |  |  +--rw priority2?
    \       uint8\n        |  |  +--rw domain-number?    uint8\n        |  |  +--rw
    slave-only?       boolean\n        |  +--rw current-ds\n        |  |  +--rw steps-removed?
    \       uint16\n        |  |  +--rw offset-from-master?   time-interval-type\n
    \       |  |  +--rw mean-path-delay?      time-interval-type\n        |  +--rw
    parent-ds\n        |  |  +--rw parent-port-identity\n        |  |  |  +--rw clock-identity?
    \  clock-identity-type\n        |  |  |  +--rw port-number?      uint16\n        |
    \ |  +--rw parent-stats?                 boolean\n        |  |  +--rw observed-parent-offset-scaled-log-variance?
    uint16\n        |  |  +--rw observed-parent-clock-phase-change-rate?    int32\n
    \       |  |  +--rw grandmaster-identity?         clock-identity-type\n        |
    \ |  +--rw grandmaster-clock-quality\n        |  |  |  +--rw clock-class?                  uint8\n
    \       |  |  |  +--rw clock-accuracy?               uint8\n        |  |  |  +--rw
    offset-scaled-log-variance?   uint16\n        |  |  +--rw grandmaster-priority1?
    \          uint8\n        |  |  +--rw grandmaster-priority2?           uint8\n
    \       |  +--rw time-properties-ds\n        |  |  +--rw current-utc-offset-valid?
    \  boolean\n        |  |  +--rw current-utc-offset?         int16\n        |  |
    \ +--rw leap59?                     boolean\n        |  |  +--rw leap61?                     boolean\n
    \       |  |  +--rw time-traceable?             boolean\n        |  |  +--rw frequency-traceable?
    \       boolean\n        |  |  +--rw ptp-timescale?              boolean\n        |
    \ |  +--rw time-source?                uint8\n        |  +--rw port-ds-list* [port-number]\n
    \       |     +--rw port-number              uint16\n        |     +--rw port-state?
    \             port-state-enumeration\n        |     +--rw underlying-interface?
    \        if:interface-ref\n        |     +--rw log-min-delay-req-interval?   int8\n
    \       |     +--rw peer-mean-path-delay?         time-interval-type\n        |
    \    +--rw log-announce-interval?        int8\n        |     +--rw announce-receipt-timeout?
    \    uint8\n        |     +--rw log-sync-interval?            int8\n        |
    \    +--rw delay-mechanism?       delay-mechanism-enumeration\n        |     +--rw
    log-min-pdelay-req-interval?   int8\n        |     +--rw version-number?                uint8\n
    \       +--rw transparent-clock-default-ds\n        |  +--ro clock-identity?    clock-identity-type\n
    \       |  +--rw number-ports?      uint16\n        |  +--rw delay-mechanism?
    \  delay-mechanism-enumeration\n        |  +--rw primary-domain?    uint8\n        +--rw
    transparent-clock-port-ds-list* [port-number]\n           +--rw port-number                    uint16\n
    \          +--rw log-min-pdelay-req-interval?   int8\n           +--rw faulty-flag?
    \                  boolean\n           +--rw peer-mean-path-delay?          time-interval-type\n"
  - contents:
    - "2.1.  Interpretations from IEEE 1588 Working Group\n   The preceding model
      and the associated YANG module have some subtle\n   differences from the data
      set specifications of IEEE Std 1588-2008.\n   These differences are based on
      interpretation from the IEEE 1588\n   Working Group, and they are intended to
      provide compatibility with\n   future revisions of the IEEE Std 1588 standard.\n
      \  In IEEE Std 1588-2008, a physical product can implement multiple PTP\n   clocks
      (i.e., an ordinary, boundary, or transparent clock).  As\n   specified in IEEE
      Std 1588-2008 subclause 7.1, each of the multiple\n   clocks operates in an
      independent domain.  However, the organization\n   of multiple PTP domains was
      not clear in the data sets of IEEE Std\n   1588-2008.  This document introduces
      the concept of a PTP instance,\n   which is a PTP implementation in a device
      (i.e., an OC or BC)\n   represented by a specific PTP data set.  Each instance
      operates in\n   exactly one domain.  The instance concept is used exclusively
      to\n   allow for optional support of multiple domains.  The instance number\n
      \  has no usage within PTP messages.\n   Based on statements in IEEE Std 1588-2008
      subclauses 8.3.1 and 10.1,\n   most transparent clock products have interpreted
      the transparent\n   clock data sets to reside as a singleton at the root level
      of the\n   managed product, and this YANG data model reflects that location.\n"
    title: 2.1.  Interpretations from IEEE 1588 Working Group
  - contents:
    - "2.2.  Configuration and State\n   The information model of IEEE Std 1588-2008
      classifies each member in\n   PTP data sets as one of the following:\n   Configurable:
      \ Writable by management.\n   Dynamic:       Read-only to management, and the
      value is changed by\n                  PTP protocol operation.\n   Static:        Read-only
      to management, and the value typically does\n                  not change.\n
      \  For details on the classification of each PTP data set member, refer\n   to
      the specification of that member in IEEE Std 1588-2008.\n   Under certain circumstances,
      the classification of an IEEE Std 1588\n   data set member may change for a
      YANG implementation, for example, a\n   configurable member needs to be changed
      to read-only.  In such a\n   case, an implementation SHOULD choose to return
      a warning upon\n   writing to a read-only member or use the deviation mechanism
      to\n   develop a new deviation model as described in Section 7.20.3 of\n   [RFC7950].\n"
    title: 2.2.  Configuration and State
  title: 2.  IEEE Std 1588-2008 YANG Data Model Hierarchy
- contents:
  - "3.  IEEE Std 1588-2008 YANG Module\n   This module imports typedef \"interface-ref\"
    from [RFC8343].  Most\n   attributes are based on the information model defined
    in [IEEE1588],\n   but their names are adapted to the YANG style of naming.\n
    \ <CODE BEGINS> file \"ietf-ptp@2019-05-07.yang\"\n  module ietf-ptp {\n    yang-version
    1.1;\n    namespace \"urn:ietf:params:xml:ns:yang:ietf-ptp\";\n    prefix ptp;\n
    \   import ietf-interfaces {\n      prefix if;\n      reference\n        \"RFC
    8343: A YANG Data Model for Interface Management\";\n    }\n    organization\n
    \     \"IETF TICTOC Working Group\";\n    contact\n      \"WG Web:   https://datatracker.ietf.org/wg/tictoc/\n
    \      WG List:  <mailto:tictoc@ietf.org>\n       Editor:   Yuanlong Jiang\n                 <mailto:jiangyuanlong@huawei.com>\n
    \      Editor:   Rodney Cummings\n                 <mailto:rodney.cummings@ni.com>\";\n
    \   description\n      \"This YANG module defines a data model for the configuration\n
    \      of IEEE Std 1588-2008 clocks, and also for retrieval of the state\n       data
    of IEEE Std 1588-2008 clocks.\";\n    revision 2019-05-07 {\n      description\n
    \       \"Initial version\";\n      reference\n        \"RFC 8575: YANG Data Model
    for the Precision Time Protocol\";\n    }\n    typedef delay-mechanism-enumeration
    {\n      type enumeration {\n        enum e2e {\n          value 1;\n          description\n
    \           \"The port uses the delay request-response mechanism.\";\n        }\n
    \       enum p2p {\n          value 2;\n          description\n            \"The
    port uses the peer delay mechanism.\";\n        }\n        enum disabled {\n          value
    254;\n          description\n            \"The port does not implement any delay
    mechanism.\";\n        }\n      }\n      description\n        \"The propagation-delay
    measuring option used by the\n         port.  Values for this enumeration are
    specified\n         by the IEEE Std 1588 standard exclusively.\";\n      reference\n
    \       \"IEEE Std 1588-2008: 8.2.5.4.4\";\n    }\n    typedef port-state-enumeration
    {\n      type enumeration {\n        enum initializing {\n          value 1;\n
    \         description\n            \"The port is initializing its data sets, hardware,
    and\n             communication facilities.\";\n        }\n        enum faulty
    {\n          value 2;\n          description\n            \"The port is in the
    fault state.\";\n        }\n        enum disabled {\n          value 3;\n          description\n
    \           \"The port is disabled and is not communicating PTP\n             messages
    (other than possibly PTP management\n             messages).\";\n        }\n        enum
    listening {\n          value 4;\n          description\n            \"The port
    is listening for an Announce message.\";\n        }\n        enum pre-master {\n
    \         value 5;\n          description\n            \"The port is in the pre-master
    state.\";\n        }\n        enum master {\n          value 6;\n          description\n
    \           \"The port is behaving as a master port.\";\n        }\n        enum
    passive {\n          value 7;\n          description\n            \"The port is
    in the passive state.\";\n        }\n        enum uncalibrated {\n          value
    8;\n          description\n            \"A master port has been selected, but
    the port is still\n             in the uncalibrated state.\";\n        }\n        enum
    slave {\n          value 9;\n          description\n            \"The port is
    synchronizing to the selected master port.\";\n        }\n      }\n      description\n
    \       \"The current state of the protocol engine associated\n         with the
    port.  Values for this enumeration are specified\n         by the IEEE Std 1588
    standard exclusively.\";\n      reference\n        \"IEEE Std 1588-2008: 8.2.5.3.1,
    9.2.5\";\n    }\n    typedef time-interval-type {\n      type int64;\n      description\n
    \       \"Derived data type for time interval, represented in units of\n          nanoseconds
    and multiplied by 2^16\";\n      reference\n        \"IEEE Std 1588-2008: 5.3.2\";\n
    \   }\n    typedef clock-identity-type {\n      type binary {\n        length
    \"8\";\n      }\n      description\n        \"Derived data type to identify a
    clock\";\n      reference\n        \"IEEE Std 1588-2008: 5.3.4\";\n    }\n    grouping
    clock-quality-grouping {\n      description\n        \"Derived data type for quality
    of a clock, which contains\n         clockClass, clockAccuracy, and offsetScaledLogVariance.\";\n
    \     reference\n        \"IEEE Std 1588-2008: 5.3.7\";\n      leaf clock-class
    {\n        type uint8;\n        default \"248\";\n        description\n          \"The
    clockClass denotes the traceability of the time\n           or frequency distributed
    by the clock.\";\n      }\n      leaf clock-accuracy {\n        type uint8;\n
    \       description\n          \"The clockAccuracy indicates the expected accuracy\n
    \          of the clock.\";\n      }\n      leaf offset-scaled-log-variance {\n
    \       type uint16;\n        description\n          \"The offsetScaledLogVariance
    provides an estimate of\n           the variations of the clock from a linear
    timescale\n           when it is not synchronized to another clock\n           using
    the protocol.\";\n      }\n    }\n    container ptp {\n      description\n        \"The
    PTP struct containing all attributes of PTP data set,\n          other optional
    PTP attributes can be augmented as well.\";\n      list instance-list {\n        key
    \"instance-number\";\n        description\n          \"List of one or more PTP
    data sets in the device (see IEEE\n           Std 1588-2008 subclause 6.3).\n
    \          Each PTP data set represents a distinct instance of\n           PTP
    implementation in the device (i.e., distinct\n           Ordinary Clock or Boundary
    Clock).\";\n        leaf instance-number {\n          type uint32;\n          description\n
    \           \"The instance number of the current PTP instance.\n             This
    instance number is used for management purposes\n             only.  This instance
    number does not represent the PTP\n             domain number and is not used
    in PTP messages.\";\n        }\n        container default-ds {\n          description\n
    \           \"The default data set of the clock (see IEEE Std\n             1588-2008
    subclause 8.2.1).  This data set represents\n             the configuration/state
    required for operation\n             of Precision Time Protocol (PTP) state machines.\";\n
    \         reference\n            \"IEEE Std 1588-2008: 8.2.1\";\n          leaf
    two-step-flag {\n            type boolean;\n            description\n              \"When
    set to true, the clock is a two-step clock;\n               otherwise,the clock
    is a one-step clock.\";\n          }\n          leaf clock-identity {\n            type
    clock-identity-type;\n            config false;\n            description\n              \"The
    clockIdentity of the local clock.\";\n          }\n          leaf number-ports
    {\n            type uint16;\n            description\n              \"The number
    of PTP ports on the instance.\";\n          }\n          container clock-quality
    {\n            description\n              \"The clockQuality of the local clock.\";\n
    \           uses clock-quality-grouping;\n          }\n          leaf priority1
    {\n            type uint8;\n            description\n              \"The priority1
    attribute of the local clock.\";\n          }\n          leaf priority2 {\n            type
    uint8;\n            description\n              \"The priority2 attribute of the
    local clock.\";\n          }\n          leaf domain-number {\n            type
    uint8;\n            description\n              \"The domain number of the current
    syntonization\n               domain.\";\n          }\n          leaf slave-only
    {\n            type boolean;\n            description\n              \"When set
    to true, the clock is a slave-only clock.\";\n          }\n        }\n        container
    current-ds {\n          description\n            \"The current data set of the
    clock (see IEEE Std\n             1588-2008 subclause 8.2.2).  This data set represents\n
    \            local states learned from the exchange of\n             Precision
    Time Protocol (PTP) messages.\";\n          reference\n            \"IEEE Std
    1588-2008: 8.2.2\";\n          leaf steps-removed {\n            type uint16;\n
    \           default \"0\";\n            description\n              \"The number
    of communication paths traversed\n               between the local clock and the
    grandmaster clock.\";\n          }\n          leaf offset-from-master {\n            type
    time-interval-type;\n            description\n              \"The current value
    of the time difference between\n               a master and a slave clock as computed
    by the slave.\";\n          }\n          leaf mean-path-delay {\n            type
    time-interval-type;\n            description\n              \"The current value
    of the mean propagation time between\n               a master and a slave clock
    as computed by the slave.\";\n          }\n        }\n        container parent-ds
    {\n          description\n            \"The parent data set of the clock (see
    IEEE Std 1588-2008\n             subclause 8.2.3).\";\n          reference\n            \"IEEE
    Std 1588-2008: 8.2.3\";\n          container parent-port-identity {\n            description\n
    \             \"The portIdentity of the port on the master, it\n               contains
    two members: clockIdentity and portNumber.\";\n            reference\n              \"IEEE
    Std 1588-2008: 5.3.5\";\n            leaf clock-identity {\n              type
    clock-identity-type;\n              description\n                \"Identity of
    the clock.\";\n            }\n            leaf port-number {\n              type
    uint16;\n              description\n                \"Port number.\";\n            }\n
    \         }\n          leaf parent-stats {\n            type boolean;\n            default
    \"false\";\n            description\n              \"When set to true, the values
    of\n               observedParentOffsetScaledLogVariance and\n               observedParentClockPhaseChangeRate
    of parentDS\n               have been measured and are valid.\";\n          }\n
    \         leaf observed-parent-offset-scaled-log-variance {\n            type
    uint16;\n            default \"65535\";\n            description\n              \"An
    estimate of the parent clock's PTP variance\n               as observed by the
    slave clock.\";\n          }\n          leaf observed-parent-clock-phase-change-rate
    {\n            type int32;\n            description\n              \"An estimate
    of the parent clock's phase change rate\n               as observed by the slave
    clock.\";\n          }\n          leaf grandmaster-identity {\n            type
    clock-identity-type;\n            description\n              \"The clockIdentity
    attribute of the grandmaster clock.\";\n          }\n          container grandmaster-clock-quality
    {\n            description\n              \"The clockQuality of the grandmaster
    clock.\";\n            uses clock-quality-grouping;\n          }\n          leaf
    grandmaster-priority1 {\n            type uint8;\n            description\n              \"The
    priority1 attribute of the grandmaster clock.\";\n          }\n          leaf
    grandmaster-priority2 {\n            type uint8;\n            description\n              \"The
    priority2 attribute of the grandmaster clock.\";\n          }\n        }\n        container
    time-properties-ds {\n          description\n            \"The timeProperties
    data set of the clock (see\n             IEEE Std 1588-2008 subclause 8.2.4).\";\n
    \         reference\n            \"IEEE Std 1588-2008: 8.2.4\";\n          leaf
    current-utc-offset-valid {\n            type boolean;\n            description\n
    \             \"When set to true, the current UTC offset is valid.\";\n          }\n
    \         leaf current-utc-offset {\n            when \"../current-utc-offset-valid='true'\";\n
    \           type int16;\n            description\n              \"The offset between
    TAI and UTC when the epoch of the\n               PTP system is the PTP epoch
    in units of seconds, i.e.,\n               when ptp-timescale is TRUE; otherwise,
    the value has\n               no meaning.\";\n          }\n          leaf leap59
    {\n            type boolean;\n            description\n              \"When set
    to true, the last minute of the current UTC\n               day contains 59 seconds.\";\n
    \         }\n          leaf leap61 {\n            type boolean;\n            description\n
    \             \"When set to true, the last minute of the current UTC\n               day
    contains 61 seconds.\";\n          }\n          leaf time-traceable {\n            type
    boolean;\n            description\n              \"When set to true, the timescale
    and the\n               currentUtcOffset are traceable to a primary\n               reference.\";\n
    \         }\n          leaf frequency-traceable {\n            type boolean;\n
    \           description\n              \"When set to true, the frequency determining
    the\n               timescale is traceable to a primary reference.\";\n          }\n
    \         leaf ptp-timescale {\n            type boolean;\n            description\n
    \             \"When set to true, the clock timescale of the\n               grandmaster
    clock is PTP; otherwise, the timescale is\n               ARB (arbitrary).\";\n
    \         }\n          leaf time-source {\n            type uint8;\n            description\n
    \             \"The source of time used by the grandmaster clock.\";\n          }\n
    \       }\n        list port-ds-list {\n          key \"port-number\";\n          description\n
    \           \"List of port data sets of the clock (see IEEE Std\n             1588-2008
    subclause 8.2.5).\";\n          reference\n            \"IEEE Std 1588-2008: 8.2.5\";\n
    \         leaf port-number {\n            type uint16;\n            description\n
    \             \"Port number.\n               The data sets (i.e., information
    model) of IEEE Std\n               1588-2008 specify a member portDS.portIdentity,
    which\n               uses a typed struct with members clockIdentity and\n               portNumber.\n
    \              In this YANG data model, portIdentity is not modeled\n               in
    the port-ds-list.  However, its members are provided\n               as follows:\n
    \              portIdentity.portNumber is provided as this\n               port-number
    leaf in port-ds-list, and\n               portIdentity.clockIdentity is provided
    as the\n               clock-identity leaf in default-ds of the instance\n               (i.e.,
    ../../default-ds/clock-identity).\";\n          }\n          leaf port-state {\n
    \           type port-state-enumeration;\n            default \"initializing\";\n
    \           description\n              \"Current state associated with the port.\";\n
    \         }\n          leaf underlying-interface {\n            type if:interface-ref;\n
    \           description\n              \"Reference to the configured underlying
    interface that\n               is used by this PTP port (see RFC 8343).\";\n            reference\n
    \             \"RFC 8343: A YANG Data Model for Interface Management\";\n          }\n
    \         leaf log-min-delay-req-interval {\n            type int8;\n            description\n
    \             \"The base-2 logarithm of the minDelayReqInterval\n               (the
    minimum permitted mean time interval between\n               successive Delay_Req
    messages).\";\n          }\n          leaf peer-mean-path-delay {\n            type
    time-interval-type;\n            default \"0\";\n            description\n              \"An
    estimate of the current one-way propagation delay\n               on the link
    when the delayMechanism is P2P; otherwise,\n               it is zero.\";\n          }\n
    \         leaf log-announce-interval {\n            type int8;\n            description\n
    \             \"The base-2 logarithm of the mean\n               announceInterval
    (mean time interval between\n               successive Announce messages).\";\n
    \         }\n          leaf announce-receipt-timeout {\n            type uint8;\n
    \           description\n              \"The number of announceIntervals that
    have to pass\n               without receipt of an Announce message before the\n
    \              occurrence of the event ANNOUNCE_RECEIPT_TIMEOUT_\n               EXPIRES.\";\n
    \         }\n          leaf log-sync-interval {\n            type int8;\n            description\n
    \             \"The base-2 logarithm of the mean SyncInterval\n               for
    multicast messages.  The rates for unicast\n               transmissions are negotiated
    separately on a per-port\n               basis and are not constrained by this
    attribute.\";\n          }\n          leaf delay-mechanism {\n            type
    delay-mechanism-enumeration;\n            description\n              \"The propagation
    delay measuring option used by the\n               port in computing meanPathDelay.\";\n
    \         }\n          leaf log-min-pdelay-req-interval {\n            type int8;\n
    \           description\n              \"The base-2 logarithm of the\n               minPdelayReqInterval
    (minimum permitted mean time\n               interval between successive Pdelay_Req
    messages).\";\n          }\n          leaf version-number {\n            type
    uint8;\n            description\n              \"The PTP version in use on the
    port.\";\n          }\n        }\n      }\n      container transparent-clock-default-ds
    {\n        description\n          \"The members of the transparentClockDefault
    data set (see\n           IEEE Std 1588-2008 subclause 8.3.2).\";\n        reference\n
    \         \"IEEE Std 1588-2008: 8.3.2\";\n        leaf clock-identity {\n          type
    clock-identity-type;\n          config false;\n          description\n            \"The
    clockIdentity of the transparent clock.\";\n        }\n        leaf number-ports
    {\n          type uint16;\n          description\n            \"The number of
    PTP ports on the transparent clock.\";\n        }\n        leaf delay-mechanism
    {\n          type delay-mechanism-enumeration;\n          description\n            \"The
    propagation delay measuring option\n             used by the transparent clock.\";\n
    \       }\n        leaf primary-domain {\n          type uint8;\n          default
    \"0\";\n          description\n            \"The domainNumber of the primary syntonization
    domain (see\n             IEEE Std 1588-2008 subclause 10.1).\";\n          reference\n
    \           \"IEEE Std 1588-2008: 10.1\";\n        }\n      }\n      list transparent-clock-port-ds-list
    {\n        key \"port-number\";\n        description\n          \"List of transparentClockPort
    data sets of the transparent\n           clock (see IEEE Std 1588-2008 subclause
    8.3.3).\";\n        reference\n          \"IEEE Std 1588-2008: 8.3.3\";\n        leaf
    port-number {\n          type uint16;\n          description\n            \"Port
    number.\n             The data sets (i.e., information model) of IEEE Std\n             1588-2008
    specify a member\n             transparentClockPortDS.portIdentity, which uses
    a typed\n             struct with members clockIdentity and portNumber.\n             In
    this YANG data model, portIdentity is not modeled in\n             the transparent-clock-port-ds-list.
    \ However, its\n             members are provided as follows:\n             portIdentity.portNumber
    is provided as this leaf member\n             in transparent-clock-port-ds-list
    and\n             portIdentity.clockIdentity is provided as the\n             clock-identity
    leaf in transparent-clock-default-ds\n             (i.e., ../../transparent-clock-default-ds/clock-\n
    \            identity).\";\n        }\n        leaf log-min-pdelay-req-interval
    {\n          type int8;\n          description\n            \"The logarithm to
    the base 2 of the\n             minPdelayReqInterval (minimum permitted mean time\n
    \            interval between successive Pdelay_Req messages).\";\n        }\n
    \       leaf faulty-flag {\n          type boolean;\n          default \"false\";\n
    \         description\n            \"When set to true, the port is faulty.\";\n
    \       }\n        leaf peer-mean-path-delay {\n          type time-interval-type;\n
    \         default \"0\";\n          description\n            \"An estimate of
    the current one-way propagation delay\n             on the link when the delayMechanism
    is P2P; otherwise,\n             it is zero.\";\n        }\n      }\n    }\n  }\n
    \ <CODE ENDS>\n"
  title: 3.  IEEE Std 1588-2008 YANG Module
- contents:
  - "4.  Security Considerations\n   The YANG module specified in this document defines
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].  Furthermore,
    general security considerations of time\n   protocols are discussed in [RFC7384].\n
    \  The Network Configuration Access Control Model (NACM) [RFC8341]\n   provides
    the means to restrict access for particular NETCONF or\n   RESTCONF users to a
    preconfigured subset of all available NETCONF or\n   RESTCONF protocol operations
    and content.\n   There are a number of data nodes defined in this YANG module
    that are\n   writable, and the involved subtrees that are sensitive include:\n
    \  /ptp/instance-list specifies an instance (i.e., PTP data sets) for an\n   OC
    or BC.\n   /ptp/transparent-clock-default-ds specifies a default data set for
    a\n   TC.\n   /ptp/transparent-clock-port-ds-list specifies a list of port data\n
    \  sets for a TC.\n   Write operations (e.g., edit-config) to these data nodes
    without\n   proper protection can have a negative effect on network operations.\n
    \  Specifically, an inappropriate configuration of them may adversely\n   impact
    a PTP synchronization network.  For example, loss of\n   synchronization on a
    clock, accuracy degradation on a set of clocks,\n   or even break down of a whole
    synchronization network.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This document registers the following URI in the
    \"IETF XML Registry\"\n   [RFC3688]:\n   URI: urn:ietf:params:xml:ns:yang:ietf-ptp\n
    \  Registrant Contact: The IESG\n   XML: N/A; the requested URI is an XML namespace\n
    \  This document registers the following YANG module in the \"YANG Module\n   Names\"
    registry [RFC6020]:\n   Name:         ietf-ptp\n   Namespace:    urn:ietf:params:xml:ns:yang:ietf-ptp\n
    \  Prefix:       ptp\n   Reference:    RFC 8575\n"
  title: 5.  IANA Considerations
- contents:
  - '6.  References

    '
  - contents:
    - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]
      \ Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC6991]  Schoenwaelder, J., Ed., \"Common YANG Data Types\",\n              RFC
      6991, DOI 10.17487/RFC6991, July 2013,\n              <https://www.rfc-editor.org/info/rfc6991>.\n
      \  [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n
      \             RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n
      \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8341]  Bierman, A. and M.
      Bjorklund, \"Network Configuration\n              Access Control Model\", STD
      91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n
      \  [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and
      R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\",
      RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n
      \  [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n              Management\",
      RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n   [IEEE1588] IEEE,
      \"IEEE Standard for a Precision Clock Synchronization\n              Protocol
      for Networked Measurement and Control Systems\",\n              IEEE Std 1588-2008,
      DOI 10.1109/IEEESTD.2008.4579760, July\n              2008.\n"
    title: 6.1.  Normative References
  - contents:
    - "6.2.  Informative References\n   [IEEE8021AS]\n              IEEE, \"IEEE Standard
      for Local and Metropolitan Area\n              Networks - Timing and Synchronizations
      for Time-Sensitive\n              Applications in Bridged Local Area Networks\",
      IEEE\n              802.1AS-2001.\n   [RFC3444]  Pras, A. and J. Schoenwaelder,
      \"On the Difference between\n              Information Models and Data Models\",
      RFC 3444,\n              DOI 10.17487/RFC3444, January 2003,\n              <https://www.rfc-editor.org/info/rfc3444>.\n
      \  [RFC4663]  Harrington, D., \"Transferring MIB Work from IETF Bridge\n              MIB
      WG to IEEE 802.1 WG\", RFC 4663, DOI 10.17487/RFC4663,\n              September
      2006, <https://www.rfc-editor.org/info/rfc4663>.\n   [RFC7384]  Mizrahi, T.,
      \"Security Requirements of Time Protocols in\n              Packet Switched
      Networks\", RFC 7384, DOI 10.17487/RFC7384,\n              October 2014, <https://www.rfc-editor.org/info/rfc7384>.\n
      \  [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP
      215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n
      \  [RFC8173]  Shankarkumar, V., Montini, L., Frost, T., and G. Dowd,\n              \"Precision
      Time Protocol Version 2 (PTPv2) Management\n              Information Base\",
      RFC 8173, DOI 10.17487/RFC8173, June\n              2017, <https://www.rfc-editor.org/info/rfc8173>.\n"
    title: 6.2.  Informative References
  title: 6.  References
- contents:
  - "Appendix A.  Transferring YANG Work to the IEEE 1588 WG\n   This Appendix is
    informational.\n   This appendix describes a future plan to transition responsibility\n
    \  for IEEE Std 1588 YANG modules from the IETF TICTOC Working Group\n   (WG)
    to the IEEE 1588 WG, which develops the time synchronization\n   technology that
    the YANG modules are designed to manage.\n   This appendix is forward-looking
    with regard to future\n   standardization roadmaps in the IETF and IEEE.  Since
    those roadmaps\n   cannot be predicted with significant accuracy, this appendix
    is\n   informational, and it does not specify imperatives or normative\n   specifications
    of any kind.\n   The IEEE Std 1588-2008 YANG module of this standard represents
    a\n   cooperation between the IETF (for YANG) and IEEE (for 1588).  For the\n
    \  initial standardization of IEEE-1588 YANG modules, the information\n   model
    is relatively clear (i.e., IEEE Std 1588 data sets), but\n   expertise in YANG
    is required, making IETF an appropriate location\n   for the standards.  The TICTOC
    WG has expertise with IEEE Std 1588,\n   making it the appropriate location within
    the IETF.\n   The IEEE 1588 WG anticipates future changes to its standard on an\n
    \  ongoing basis.  As IEEE 1588 WG members gain practical expertise with\n   YANG,
    the IEEE 1588 WG will become more appropriate for\n   standardization of its YANG
    modules.  As the IEEE 1588 standard is\n   revised and/or amended, IEEE 1588 members
    can more effectively\n   synchronize the revision of this YANG module with future
    versions of\n   the IEEE 1588 standard.\n   This appendix is meant to establish
    some clear expectations between\n   IETF and IEEE about the future transfer of
    IEEE 1588 YANG modules to\n   the IEEE 1588 WG.  The goal is to assist in making
    the future\n   transfer as smooth as possible.  As the transfer takes place, some\n
    \  case-by-case situations are likely to arise, which can be handled by\n   discussion
    on the IETF TICTOC WG mailing lists and/or appropriate\n   liaisons.\n   This
    appendix obtained insight from [RFC4663], an informational memo\n   that described
    a similar transfer of MIB work from the IETF Bridge\n   MIB WG to the IEEE 802.1
    WG.\n"
  - contents:
    - "A.1.  Assumptions for the Transfer\n   For the purposes of discussion in this
      appendix, assume that the IESG\n   has approved the publication of an RFC containing
      a YANG module for a\n   published IEEE 1588 standard.  As of this writing, this
      is IEEE Std\n   1588-2008, but it is possible that YANG modules for subsequent
      1588\n   revisions could be published from the IETF TICTOC WG.  For discussion\n
      \  in this appendix, we use the phrase \"last IETF 1588 YANG\" to refer to\n
      \  the most recently published 1588 YANG module from the IETF TICTOC WG.\n   The
      IEEE-SA Standards Board New Standards Committee (NesCom) handles\n   new Project
      Authorization Requests (PARs) (see\n   <http://standards.ieee.org/board/nes/>).
      \ PARs are roughly the\n   equivalent of IETF Working Group Charters and include
      information\n   concerning the scope, purpose, and justification for standardization\n
      \  projects.\n   Assume that IEEE 1588 has an approved PAR that explicitly specifies\n
      \  development of a YANG module.  The transfer of YANG work will occur\n   in
      the context of this IEEE 1588 PAR.  For discussion in this\n   appendix, we
      use the phrase \"first IEEE 1588 YANG\" to refer to the\n   first IEEE 1588
      standard for YANG.\n   Assume that as part of the transfer of YANG work, the
      IETF TICTOC WG\n   agrees to cease all work on standard YANG modules for IEEE
      1588.\n   Assume that the IEEE 1588 WG has participated in the development of\n
      \  the last IETF 1588 YANG module, such that the first IEEE 1588 YANG\n   module
      will effectively be a revision of it.  In other words, the\n   transfer of YANG
      work will be relatively clean.\n   The actual conditions for the future transfer
      can be such that the\n   preceding assumptions do not hold.  Exceptions to the
      assumptions\n   will need to be addressed on a case-by-case basis at the time
      of the\n   transfer.  This appendix describes topics that can be addressed based\n
      \  on the preceding assumptions.\n"
    title: A.1.  Assumptions for the Transfer
  - contents:
    - "A.2.  Intellectual Property Considerations\n   During review of the legal issues
      associated with transferring Bridge\n   MIB WG documents to the IEEE 802.1 WG
      (Sections 3.1 and 9 of\n   [RFC4663]), it was concluded that the IETF does not
      have sufficient\n   legal authority to make the transfer to the IEEE without
      the consent\n   of the document authors.\n   If the last IETF 1588 YANG is published
      as an RFC, the work is\n   required to be transferred from the IETF to the IEEE,
      so that IEEE\n   1588 WG can begin working on the first IEEE 1588 YANG.\n   When
      work on the first IEEE YANG module begins in the IEEE 1588 WG,\n   that work
      derives from the last IETF YANG module of this RFC,\n   requiring a transfer
      of that work from the IETF to the IEEE.  In\n   order to avoid having the transfer
      of that work be dependent on the\n   availability of this RFC's authors at the
      time of its publication,\n   the IEEE Standards Association department of Risk
      Management and\n   Licensing provided the appropriate forms and mechanisms for
      this\n   document's authors to assign a non-exclusive license for IEEE to\n
      \  create derivative works from this document.  Those IEEE forms and\n   mechanisms
      will be updated as needed for any future IETF YANG modules\n   for IEEE 1588
      (the signed forms are held by the IEEE Standards\n   Association department
      of Risk Management and Licensing.).  This will\n   help to make the future transfer
      of work from the IETF to the IEEE\n   occur as smoothly as possible.\n   As
      stated in the initial \"Status of this Memo\", the YANG module in\n   this document
      conforms to the provisions of BCP 78.  The IETF will\n   retain all the rights
      granted at the time of publication in the\n   published RFCs.\n"
    title: A.2.  Intellectual Property Considerations
  - contents:
    - "A.3.  Namespace and Module Name\n   As specified in Section 5 \"IANA Considerations\",
      the YANG module in\n   this document uses IETF as the root of its URN namespace
      and YANG\n   module name.\n   Use of IETF as the root of these names implies
      that the YANG module\n   is standardized in a Working Group of IETF, using the
      IETF processes.\n   If the IEEE 1588 Working Group were to continue using these
      names\n   rooted in IETF, the IEEE 1588 YANG standardization would need to\n
      \  continue in the IETF.  The goal of transferring the YANG work is to\n   avoid
      this sort of dependency between standards organizations.\n   IEEE 802 has an
      active PAR (IEEE P802d) for creating a URN namespace\n   for IEEE use (see <http://standards.ieee.org/develop/\n
      \  project/802d.html>).  It is likely that this IEEE 802 PAR will be\n   approved
      and published prior to the transfer of YANG work to the IEEE\n   1588 WG.  If
      so, the IEEE 1588 WG can use the IEEE URN namespace for\n   the first IEEE 1588
      YANG module, such as:\n      urn:ieee:Std:1588:yang:ieee1588-ptp\n   where \"ieee1588-ptp\"
      is the registered YANG module name in the IEEE.\n   Under the assumptions of
      Appendix A.1, the first IEEE 1588 YANG\n   module's prefix will be the same
      as the last IETF 1588 YANG module's\n   prefix (i.e., \"ptp\").  Consequently,
      other YANG modules can preserve\n   the same import prefix \"ptp\" to access
      PTP nodes during the migration\n   from the last IETF 1588 YANG module to the
      first IEEE 1588 YANG\n   module.\n   The result of these name changes are that
      for complete compatibility,\n   a server (i.e., IEEE 1588 node) can choose to
      implement a YANG module\n   for the last IETF 1588 YANG module (with IETF root)
      as well as the\n   first IEEE 1588 YANG module (with IEEE root).  Since the
      content of\n   the YANG module transferred are the same, the server implementation\n
      \  is effectively common for both.\n   From a client's perspective, a client
      of the last IETF 1588 YANG\n   module (or earlier) looks for the IETF-rooted
      module name; and a\n   client of the first IEEE 1588 YANG module (or later)
      looks for the\n   IEEE-rooted module name.\n"
    title: A.3.  Namespace and Module Name
  - contents:
    - "A.4.  IEEE 1588 YANG Modules in ASCII Format\n   Although IEEE 1588 can certainly
      decide to publish YANG modules only\n   in the PDF format that they use for
      their standard documents, without\n   publishing an ASCII version, most network
      management systems cannot\n   import the YANG module directly from the PDF.
      \ Thus, not publishing\n   an ASCII version of the YANG module would negatively
      impact\n   implementers and deployers of YANG modules and would make potential\n
      \  IETF reviews of YANG modules more difficult.\n   This appendix recommends
      that the IEEE 1588 WG consider future plans\n   for:\n   -  Public availability
      of the ASCII YANG modules during project\n      development.  These ASCII files
      allow IETF participants to access\n      these documents for pre-standard review
      purposes.\n   -  Public availability of the YANG portion of published IEEE 1588\n
      \     standards, provided as an ASCII file for each YANG module.  These\n      ASCII
      files are intended for use of the published IEEE 1588\n      standard.\n   As
      an example of public availability during project development, IEEE\n   802 uses
      the same repository that IETF uses for YANG module\n   development (see <https://github.com/YangModels/yang>).
      \ IEEE\n   branches are provided for experimental work (i.e., pre-PAR) as well\n
      \  as standard work (post-PAR drafts).  IEEE-SA has approved use of this\n   repository
      for project development, but not for published standards.\n   As an example
      of public availability of YANG modules for published\n   standards, IEEE 802.1
      provides a public list of ASCII files for MIB\n   (see <http://www.ieee802.org/1/files/public/MIBs/>
      and\n   <http://www.ieee802.org/1/pages/MIBS.html>), and analogous lists are\n
      \  planned for IEEE 802.1 YANG files.\n"
    title: A.4.  IEEE 1588 YANG Modules in ASCII Format
  title: Appendix A.  Transferring YANG Work to the IEEE 1588 WG
- contents:
  - "Acknowledgments\n   The authors would like to thank Tom Petch, Radek Krejci,
    Mahesh\n   Jethanandani, Tal Mizrahi, Opher Ronen, Liang Geng, Alex Campbell,\n
    \  Joe Gwinn, John Fletcher, William Zhao, and Dave Thaler for their\n   valuable
    reviews and suggestions.  They would like to thank Benoit\n   Claise and Radek
    Krejci for their validation of the YANG module, and\n   thank Jingfei Lv and Zitao
    Wang for their discussions on IEEE 1588\n   and YANG, respectively.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Yuanlong Jiang (editor)\n   Huawei\n   Bantian, Longgang
    district\n   Shenzhen  518129\n   China\n   Email: jiangyuanlong@huawei.com\n
    \  Xian Liu\n   Independent\n   Shenzhen  518129\n   China\n   Email: lene.liuxian@foxmail.com\n
    \  Jinchun Xu\n   Huawei\n   Bantian, Longgang district\n   Shenzhen  518129\n
    \  China\n   Email: xujinchun@huawei.com\n   Rodney Cummings (editor)\n   National
    Instruments\n   11500 N. Mopac Expwy Bldg. C\n   Austin, TX  78759-3504\n   United
    States of America\n   Email: Rodney.Cummings@ni.com\n"
  title: Authors' Addresses
