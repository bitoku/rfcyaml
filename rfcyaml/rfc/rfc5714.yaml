- title: __initial_text__
  contents:
  - '                       IP Fast Reroute Framework

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides a framework for the development of IP fast-\n\
    \   reroute mechanisms that provide protection against link or router\n   failure\
    \ by invoking locally determined repair paths.  Unlike MPLS\n   fast-reroute,\
    \ the mechanisms are applicable to a network employing\n   conventional IP routing\
    \ and forwarding.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5714.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n   3.  Scope and Applicability  . . . . . . . . . . . . . . .\
    \ . . . .  5\n   4.  Problem Analysis . . . . . . . . . . . . . . . . . . . .\
    \ . . .  5\n   5.  Mechanisms for IP Fast-Reroute . . . . . . . . . . . . . .\
    \ . .  7\n     5.1.  Mechanisms for Fast Failure Detection  . . . . . . . . .\
    \ .  7\n     5.2.  Mechanisms for Repair Paths  . . . . . . . . . . . . . . .\
    \  8\n       5.2.1.  Scope of Repair Paths  . . . . . . . . . . . . . . . .  9\n\
    \       5.2.2.  Analysis of Repair Coverage  . . . . . . . . . . . . .  9\n  \
    \     5.2.3.  Link or Node Repair  . . . . . . . . . . . . . . . . . 10\n    \
    \   5.2.4.  Maintenance of Repair Paths  . . . . . . . . . . . . . 10\n      \
    \ 5.2.5.  Local Area Networks  . . . . . . . . . . . . . . . . . 11\n       5.2.6.\
    \  Multiple Failures and Shared Risk Link Groups  . . . . 11\n     5.3.  Mechanisms\
    \ for Micro-Loop Prevention . . . . . . . . . . . 12\n   6.  Management Considerations\
    \  . . . . . . . . . . . . . . . . . . 12\n   7.  Security Considerations  . .\
    \ . . . . . . . . . . . . . . . . . 13\n   8.  Acknowledgements . . . . . . .\
    \ . . . . . . . . . . . . . . . . 13\n   9.  Informative References . . . . .\
    \ . . . . . . . . . . . . . . . 14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   When a link or node failure occurs in a routed network,\
    \ there is\n   inevitably a period of disruption to the delivery of traffic until\n\
    \   the network re-converges on the new topology.  Packets for\n   destinations\
    \ that were previously reached by traversing the failed\n   component may be dropped\
    \ or may suffer looping.  Traditionally, such\n   disruptions have lasted for\
    \ periods of at least several seconds, and\n   most applications have been constructed\
    \ to tolerate such a quality of\n   service.\n   Recent advances in routers have\
    \ reduced this interval to under a\n   second for carefully configured networks\
    \ using link state IGPs.\n   However, new Internet services are emerging that\
    \ may be sensitive to\n   periods of traffic loss that are orders of magnitude\
    \ shorter than\n   this.\n   Addressing these issues is difficult because the\
    \ distributed nature\n   of the network imposes an intrinsic limit on the minimum\
    \ convergence\n   time that can be achieved.\n   However, there is an alternative\
    \ approach, which is to compute backup\n   routes that allow the failure to be\
    \ repaired locally by the router(s)\n   detecting the failure without the immediate\
    \ need to inform other\n   routers of the failure.  In this case, the disruption\
    \ time can be\n   limited to the small time taken to detect the adjacent failure\
    \ and\n   invoke the backup routes.  This is analogous to the technique\n   employed\
    \ by MPLS fast-reroute [RFC4090], but the mechanisms employed\n   for the backup\
    \ routes in pure IP networks are necessarily very\n   different.\n   This document\
    \ provides a framework for the development of this\n   approach.\n   Note that\
    \ in order to further minimize the impact on user\n   applications, it may be\
    \ necessary to design the network such that\n   backup paths with suitable characteristics\
    \ (for example, capacity\n   and/or delay) are available for the algorithms to\
    \ select.  Such\n   considerations are outside the scope of this document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This section defines words and acronyms used in this document\
    \ and\n   other documents discussing IP fast-reroute.\n   D                  \
    \ Used to denote the destination router under\n                       discussion.\n\
    \   Distance_opt(A,B)   The metric sum of the shortest path from A to B.\n   Downstream\
    \ Path     This is a subset of the loop-free alternates\n                    \
    \   where the neighbor N meets the following\n                       condition:\n\
    \                       Distance_opt(N, D) < Distance_opt(S,D)\n   E         \
    \          Used to denote the router that is the primary\n                   \
    \    neighbor to get from S to the destination D.\n                       Where\
    \ there is an ECMP set for the shortest path\n                       from S to\
    \ D, these are referred to as E_1, E_2,\n                       etc.\n   ECMP\
    \                Equal cost multi-path: Where, for a particular\n            \
    \           destination D, multiple primary next-hops are\n                  \
    \     used to forward traffic because there exist\n                       multiple\
    \ shortest paths from S via different\n                       output layer-3 interfaces.\n\
    \   FIB                 Forwarding Information Base.  The database used\n    \
    \                   by the packet forwarder to determine what actions\n      \
    \                 to perform on a packet.\n   IPFRR               IP fast-reroute.\n\
    \   Link(A->B)          A link connecting router A to router B.\n   LFA      \
    \           Loop-Free Alternate.  A neighbor N, that is not a\n              \
    \         primary neighbor E, whose shortest path to the\n                   \
    \    destination D does not go back through the router\n                     \
    \  S. The neighbor N must meet the following\n                       condition:\n\
    \                       Distance_opt(N, D) < Distance_opt(N, S) +\n          \
    \             Distance_opt(S, D)\n   Loop-Free Neighbor  A neighbor N_i, which\
    \ is not the particular\n                       primary neighbor E_k under discussion,\
    \ and whose\n                       shortest path to D does not traverse S. For\n\
    \                       example, if there are two primary neighbors E_1\n    \
    \                   and E_2, E_1 is a loop-free neighbor with regard\n       \
    \                to E_2, and vice versa.\n   Loop-Free Link-Protecting Alternate\n\
    \                       A path via a Loop-Free Neighbor N_i that reaches\n   \
    \                    destination D without going through the\n               \
    \        particular link of S that is being protected.  In\n                 \
    \      some cases, the path to D may go through the\n                       primary\
    \ neighbor E.\n   Loop-Free Node-Protecting Alternate\n                      \
    \ A path via a Loop-Free Neighbor N_i that reaches\n                       destination\
    \ D without going through the\n                       particular primary neighbor\
    \ (E) of S that is\n                       being protected.\n   N_i          \
    \       The ith neighbor of S.\n   Primary Neighbor    A neighbor N_i of S which\
    \ is one of the next hops\n                       for destination D in S's FIB\
    \ prior to any\n                       failure.\n   R_i_j               The jth\
    \ neighbor of N_i.\n   Repair Path         The path used by a repairing node to\
    \ send traffic\n                       that it is unable to send via the normal\
    \ path\n                       owing to a failure.\n   Routing Transition  The\
    \ process whereby routers converge on a new\n                       topology.\
    \  In conventional networks, this process\n                       frequently causes\
    \ some disruption to packet\n                       delivery.\n   RPF        \
    \         Reverse Path Forwarding, i.e., checking that a\n                   \
    \    packet is received over the interface that would\n                      \
    \ be used to send packets addressed to the source\n                       address\
    \ of the packet.\n   S                   Used to denote a router that is the source\
    \ of a\n                       repair that is computed in anticipation of the\n\
    \                       failure of a neighboring router denoted as E, or\n   \
    \                    of the link between S and E.  It is the viewpoint\n     \
    \                  from which IP fast-reroute is described.\n   SPF          \
    \       Shortest Path First, e.g., Dijkstra's algorithm.\n   SPT             \
    \    Shortest path tree\n   Upstream Forwarding Loop\n                       A\
    \ forwarding loop that involves a set of routers,\n                       none\
    \ of which is directly connected to the link\n                       that has\
    \ caused the topology change that\n                       triggered a new SPF\
    \ in any of the routers.\n"
- title: 3.  Scope and Applicability
  contents:
  - "3.  Scope and Applicability\n   The initial scope of this work is in the context\
    \ of link state IGPs.\n   Link state protocols provide ubiquitous topology information,\
    \ which\n   facilitates the computation of repairs paths.\n   Provision of similar\
    \ facilities in non-link state IGPs and BGP is a\n   matter for further study,\
    \ but the correct operation of the repair\n   mechanisms for traffic with a destination\
    \ outside the IGP domain is\n   an important consideration for solutions based\
    \ on this framework.\n   Complete protection against multiple unrelated failures\
    \ is out of\n   scope of this work.\n"
- title: 4.  Problem Analysis
  contents:
  - "4.  Problem Analysis\n   The duration of the packet delivery disruption caused\
    \ by a\n   conventional routing transition is determined by a number of factors:\n\
    \   1.  The time taken to detect the failure.  This may be of the order\n    \
    \   of a few milliseconds when it can be detected at the physical\n       layer,\
    \ up to several tens of seconds when a routing protocol\n       Hello is employed.\
    \  During this period, packets will be\n       unavoidably lost.\n   2.  The time\
    \ taken for the local router to react to the failure.\n       This will typically\
    \ involve generating and flooding new routing\n       updates, perhaps after some\
    \ hold-down delay, and re-computing the\n       router's FIB.\n   3.  The time\
    \ taken to pass the information about the failure to other\n       routers in\
    \ the network.  In the absence of routing protocol\n       packet loss, this is\
    \ typically between 10 milliseconds and 100\n       milliseconds per hop.\n  \
    \ 4.  The time taken to re-compute the forwarding tables.  This is\n       typically\
    \ a few milliseconds for a link state protocol using\n       Dijkstra's algorithm.\n\
    \   5.  The time taken to load the revised forwarding tables into the\n      \
    \ forwarding hardware.  This time is very implementation dependent\n       and\
    \ also depends on the number of prefixes affected by the\n       failure, but\
    \ may be several hundred milliseconds.\n   The disruption will last until the\
    \ routers adjacent to the failure\n   have completed steps 1 and 2, and until\
    \ all the routers in the\n   network whose paths are affected by the failure have\
    \ completed the\n   remaining steps.\n   The initial packet loss is caused by\
    \ the router(s) adjacent to the\n   failure continuing to attempt to transmit\
    \ packets across the failure\n   until it is detected.  This loss is unavoidable,\
    \ but the detection\n   time can be reduced to a few tens of milliseconds as described\
    \ in\n   Section 5.1.\n   In some topologies, subsequent packet loss may be caused\
    \ by the\n   \"micro-loops\" which may form as a result of temporary inconsistencies\n\
    \   between routers' forwarding tables [RFC5715].  These inconsistencies\n   are\
    \ caused by steps 3, 4, and 5 above, and in many routers it is step\n   5 that\
    \ is both the largest factor and that has the greatest variance\n   between routers.\
    \  The large variance arises from implementation\n   differences and from the\
    \ differing impact that a failure has on each\n   individual router.  For example,\
    \ the number of prefixes affected by\n   the failure may vary dramatically from\
    \ one router to another.\n   In order to reduce packet disruption times to a duration\
    \ commensurate\n   with the failure detection times, two mechanisms may be required:\n\
    \   a.  A mechanism for the router(s) adjacent to the failure to rapidly\n   \
    \    invoke a repair path, which is unaffected by any subsequent re-\n       convergence.\n\
    \   b.  In topologies that are susceptible to micro-loops, a micro-loop\n    \
    \   control mechanism may be required [RFC5715].\n   Performing the first task\
    \ without the second may result in the repair\n   path being starved of traffic\
    \ and hence being redundant.  Performing\n   the second without the first will\
    \ result in traffic being discarded\n   by the router(s) adjacent to the failure.\n\
    \   Repair paths may always be used in isolation where the failure is\n   short-lived.\
    \  In this case, the repair paths can be kept in place\n   until the failure is\
    \ repaired, therefore there is no need to\n   advertise the failure to other routers.\n\
    \   Similarly, micro-loop avoidance may be used in isolation to prevent\n   loops\
    \ arising from pre-planned management action.  In which case the\n   link or node\
    \ being shut down can remain in service for a short time\n   after its removal\
    \ has been announced into the network, and hence it\n   can function as its own\
    \ \"repair path\".\n   Note that micro-loops may also occur when a link or node\
    \ is restored\n   to service, and thus a micro-loop avoidance mechanism may be\
    \ required\n   for both link up and link down cases.\n"
- title: 5.  Mechanisms for IP Fast-Reroute
  contents:
  - "5.  Mechanisms for IP Fast-Reroute\n   The set of mechanisms required for an\
    \ effective solution to the\n   problem can be broken down into the sub-problems\
    \ described in this\n   section.\n"
- title: 5.1.  Mechanisms for Fast Failure Detection
  contents:
  - "5.1.  Mechanisms for Fast Failure Detection\n   It is critical that the failure\
    \ detection time is minimized.  A\n   number of well-documented approaches are\
    \ possible, such as:\n   1.  Physical detection; for example, loss of light.\n\
    \   2.  Protocol detection that is routing protocol independent; for\n       example,\
    \ the Bidirectional Failure Detection protocol [BFD].\n   3.  Routing protocol\
    \ detection; for example, use of \"fast Hellos\".\n   When configuring packet-based\
    \ failure detection mechanisms it is\n   important that consideration be given\
    \ to the likelihood and\n   consequences of false indications of failure.  The\
    \ incidence of false\n   indication of failure may be minimized by appropriately\
    \ prioritizing\n   the transmission, reception, and processing of the packets\
    \ used to\n   detect link or node failure.  Note that this is not an issue that\
    \ is\n   specific to IPFRR.\n"
- title: 5.2.  Mechanisms for Repair Paths
  contents:
  - "5.2.  Mechanisms for Repair Paths\n   Once a failure has been detected by one\
    \ of the above mechanisms,\n   traffic that previously traversed the failure is\
    \ transmitted over one\n   or more repair paths.  The design of the repair paths\
    \ should be such\n   that they can be pre-calculated in anticipation of each local\
    \ failure\n   and made available for invocation with minimal delay.  There are\n\
    \   three basic categories of repair paths:\n   1.  Equal cost multi-paths (ECMP).\
    \  Where such paths exist, and one\n       or more of the alternate paths do not\
    \ traverse the failure, they\n       may trivially be used as repair paths.\n\
    \   2.  Loop-free alternate paths.  Such a path exists when a direct\n       neighbor\
    \ of the router adjacent to the failure has a path to the\n       destination\
    \ that can be guaranteed not to traverse the failure.\n   3.  Multi-hop repair\
    \ paths.  When there is no feasible loop-free\n       alternate path it may still\
    \ be possible to locate a router, which\n       is more than one hop away from\
    \ the router adjacent to the\n       failure, from which traffic will be forwarded\
    \ to the destination\n       without traversing the failure.\n   ECMP and loop-free\
    \ alternate paths (as described in [RFC5286]) offer\n   the simplest repair paths\
    \ and would normally be used when they are\n   available.  It is anticipated that\
    \ around 80% of failures (see\n   Section 5.2.2) can be repaired using these basic\
    \ methods alone.\n   Multi-hop repair paths are more complex, both in the computations\n\
    \   required to determine their existence, and in the mechanisms required\n  \
    \ to invoke them.  They can be further classified as:\n   a.  Mechanisms where\
    \ one or more alternate FIBs are pre-computed in\n       all routers, and the\
    \ repaired packet is instructed to be\n       forwarded using a \"repair FIB\"\
    \ by some method of per-packet\n       signaling such as detecting a \"U-turn\"\
    \ [UTURN], [FIFR] or by\n       marking the packet [SIMULA].\n   b.  Mechanisms\
    \ functionally equivalent to a loose source route that\n       is invoked using\
    \ the normal FIB.  These include tunnels\n       [TUNNELS], alternative shortest\
    \ paths [ALT-SP], and label-based\n       mechanisms.\n   c.  Mechanisms employing\
    \ special addresses or labels that are\n       installed in the FIBs of all routers\
    \ with routes pre-computed to\n       avoid certain components of the network.\
    \  For example, see\n       [NOTVIA].\n   In many cases, a repair path that reaches\
    \ two hops away from the\n   router detecting the failure will suffice, and it\
    \ is anticipated that\n   around 98% of failures (see Section 5.2.2) can be repaired\
    \ by this\n   method.  However, to provide complete repair coverage, some use\
    \ of\n   longer multi-hop repair paths is generally necessary.\n"
- title: 5.2.1.  Scope of Repair Paths
  contents:
  - "5.2.1.  Scope of Repair Paths\n   A particular repair path may be valid for all\
    \ destinations which\n   require repair or may only be valid for a subset of destinations.\
    \  If\n   a repair path is valid for a node immediately downstream of the\n  \
    \ failure, then it will be valid for all destinations previously\n   reachable\
    \ by traversing the failure.  However, in cases where such a\n   repair path is\
    \ difficult to achieve because it requires a high order\n   multi-hop repair path,\
    \ it may still be possible to identify lower-\n   order repair paths (possibly\
    \ even loop-free alternate paths) that\n   allow the majority of destinations\
    \ to be repaired.  When IPFRR is\n   unable to provide complete repair, it is\
    \ desirable that the extent of\n   the repair coverage can be determined and reported\
    \ via network\n   management.\n   There is a trade-off between minimizing the\
    \ number of repair paths to\n   be computed, and minimizing the overheads incurred\
    \ in using higher-\n   order multi-hop repair paths for destinations for which\
    \ they are not\n   strictly necessary.  However, the computational cost of determining\n\
    \   repair paths on an individual destination basis can be very high.\n   It will\
    \ frequently be the case that the majority of destinations may\n   be repaired\
    \ using only the \"basic\" repair mechanism, leaving a\n   smaller subset of the\
    \ destinations to be repaired using one of the\n   more complex multi-hop methods.\
    \  Such a hybrid approach may go some\n   way to resolving the conflict between\
    \ completeness and complexity.\n   The use of repair paths may result in excessive\
    \ traffic passing over\n   a link, resulting in congestion discard.  This reduces\
    \ the\n   effectiveness of IPFRR.  Mechanisms to influence the distribution of\n\
    \   repaired traffic to minimize this effect are therefore desirable.\n"
- title: 5.2.2.  Analysis of Repair Coverage
  contents:
  - "5.2.2.  Analysis of Repair Coverage\n   The repair coverage obtained is dependent\
    \ on the repair strategy and\n   highly dependent on the detailed topology and\
    \ metrics.  Estimates of\n   the repair coverage quoted in this document are for\
    \ illustrative\n   purposes only and may not be always be achievable.\n   In some\
    \ cases the repair strategy will permit the repair of all\n   single link or node\
    \ failures in the network for all possible\n   destinations.  This can be defined\
    \ as 100% coverage.  However, where\n   the coverage is less than 100%, it is\
    \ important for the purposes of\n   comparisons between different proposed repair\
    \ strategies to define\n   what is meant by such a percentage.  There are four\
    \ possibilities:\n   1.  The percentage of links (or nodes) that can be fully\
    \ protected\n       (i.e., for all destinations).  This is appropriate where the\n\
    \       requirement is to protect all traffic, but some percentage of the\n  \
    \     possible failures may be identified as being un-protectable.\n   2.  The\
    \ percentage of destinations that can be protected for all link\n       (or node)\
    \ failures.  This is appropriate where the requirement is\n       to protect against\
    \ all possible failures, but some percentage of\n       destinations may be identified\
    \ as being un-protectable.\n   3.  For all destinations (d) and for all failures\
    \ (f), the percentage\n       of the total potential failure cases (d*f) that\
    \ are protected.\n       This is appropriate where the requirement is an overall\
    \ \"best-\n       effort\" protection.\n   4.  The percentage of packets normally\
    \ passing though the network\n       that will continue to reach their destination.\
    \  This requires a\n       traffic matrix for the network as part of the analysis.\n"
- title: 5.2.3.  Link or Node Repair
  contents:
  - "5.2.3.  Link or Node Repair\n   A repair path may be computed to protect against\
    \ failure of an\n   adjacent link, or failure of an adjacent node.  In general,\
    \ link\n   protection is simpler to achieve.  A repair which protects against\n\
    \   node failure will also protect against link failure for all\n   destinations\
    \ except those for which the adjacent node is a single\n   point of failure.\n\
    \   In some cases, it may be necessary to distinguish between a link or\n   node\
    \ failure in order that the optimal repair strategy is invoked.\n   Methods for\
    \ link/node failure determination may be based on\n   techniques such as BFD [BFD].\
    \  This determination may be made prior\n   to invoking any repairs, but this\
    \ will increase the period of packet\n   loss following a failure unless the determination\
    \ can be performed as\n   part of the failure detection mechanism itself.  Alternatively,\
    \ a\n   subsequent determination can be used to optimize an already invoked\n\
    \   default strategy.\n"
- title: 5.2.4.  Maintenance of Repair Paths
  contents:
  - "5.2.4.  Maintenance of Repair Paths\n   In order to meet the response-time goals,\
    \ it is expected (though not\n   required) that repair paths, and their associated\
    \ FIB entries, will\n   be pre-computed and installed ready for invocation when\
    \ a failure is\n   detected.  Following invocation, the repair paths remain in\
    \ effect\n   until they are no longer required.  This will normally be when the\n\
    \   routing protocol has re-converged on the new topology taking into\n   account\
    \ the failure, and traffic will no longer be using the repair\n   paths.\n   The\
    \ repair paths have the property that they are unaffected by any\n   topology\
    \ changes resulting from the failure that caused their\n   instantiation.  Therefore,\
    \ there is no need to re-compute them during\n   the convergence period.  They\
    \ may be affected by an unrelated\n   simultaneous topology change, but such events\
    \ are out of scope of\n   this work (see Section 5.2.6).\n   Once the routing\
    \ protocol has re-converged, it is necessary for all\n   repair paths to take\
    \ account of the new topology.  Various\n   optimizations may permit the efficient\
    \ identification of repair paths\n   that are unaffected by the change, and hence\
    \ do not require full re-\n   computation.  Since the new repair paths will not\
    \ be required until\n   the next failure occurs, the re-computation may be performed\
    \ as a\n   background task and be subject to a hold-down, but excessive delay\
    \ in\n   completing this operation will increase the risk of a new failure\n \
    \  occurring before the repair paths are in place.\n"
- title: 5.2.5.  Local Area Networks
  contents:
  - "5.2.5.  Local Area Networks\n   Protection against partial or complete failure\
    \ of LANs is more\n   complex than the point-to-point case.  In general, there\
    \ is a trade-\n   off between the simplicity of the repair and the ability to\
    \ provide\n   complete and optimal repair coverage.\n"
- title: 5.2.6.  Multiple Failures and Shared Risk Link Groups
  contents:
  - "5.2.6.  Multiple Failures and Shared Risk Link Groups\n   Complete protection\
    \ against multiple unrelated failures is out of\n   scope of this work.  However,\
    \ it is important that the occurrence of\n   a second failure while one failure\
    \ is undergoing repair should not\n   result in a level of service which is significantly\
    \ worse than that\n   which would have been achieved in the absence of any repair\
    \ strategy.\n   Shared Risk Link Groups (SRLGs) are an example of multiple related\n\
    \   failures, and the more complex aspects of their protection are a\n   matter\
    \ for further study.\n   One specific example of an SRLG that is clearly within\
    \ the scope of\n   this work is a node failure.  This causes the simultaneous\
    \ failure of\n   multiple links, but their closely defined topological relationship\n\
    \   makes the problem more tractable.\n"
- title: 5.3.  Mechanisms for Micro-Loop Prevention
  contents:
  - "5.3.  Mechanisms for Micro-Loop Prevention\n   Ensuring the absence of micro-loops\
    \ is important not only because\n   they can cause packet loss in traffic that\
    \ is affected by the\n   failure, but because by saturating a link with looping\
    \ packets micro-\n   loops can cause congestion.  This congestion can then lead\
    \ to routers\n   discarding traffic that would otherwise be unaffected by the\
    \ failure.\n   A number of solutions to the problem of micro-loop formation have\n\
    \   been proposed and are summarized in [RFC5715].  The following factors\n  \
    \ are significant in their classification:\n   1.  Partial or complete protection\
    \ against micro-loops.\n   2.  Convergence delay.\n   3.  Tolerance of multiple\
    \ failures (from node failures, and in\n       general).\n   4.  Computational\
    \ complexity (pre-computed or real time).\n   5.  Applicability to scheduled events.\n\
    \   6.  Applicability to link/node reinstatement.\n   7.  Topological constraints.\n"
- title: 6.  Management Considerations
  contents:
  - "6.  Management Considerations\n   While many of the management requirements will\
    \ be specific to\n   particular IPFRR solutions, the following general aspects\
    \ need to be\n   addressed:\n   1.  Configuration\n       A.  Enabling/disabling\
    \ IPFRR support.\n       B.  Enabling/disabling protection on a per-link or per-node\n\
    \           basis.\n       C.  Expressing preferences regarding the links/nodes\
    \ used for\n           repair paths.\n       D.  Configuration of failure detection\
    \ mechanisms.\n       E.  Configuration of loop-avoidance strategies\n   2.  Monitoring\
    \ and operational support\n       A.  Notification of links/nodes/destinations\
    \ that cannot be\n           protected.\n       B.  Notification of pre-computed\
    \ repair paths, and anticipated\n           traffic patterns.\n       C.  Counts\
    \ of failure detections, protection invocations, and\n           packets forwarded\
    \ over repair paths.\n       D.  Testing repairs.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This framework document does not itself introduce\
    \ any security\n   issues, but attention must be paid to the security implications\
    \ of\n   any proposed solutions to the problem.\n   Where the chosen solution\
    \ uses tunnels it is necessary to ensure that\n   the tunnel is not used as an\
    \ attack vector.  One method of addressing\n   this is to use a set of tunnel\
    \ endpoint addresses that are excluded\n   from use by user traffic.\n   There\
    \ is a compatibility issue between IPFRR and reverse path\n   forwarding (RPF)\
    \ checking.  Many of the solutions described in this\n   document result in traffic\
    \ arriving from a direction inconsistent\n   with a standard RPF check.  When\
    \ a network relies on RPF checking for\n   security purposes, an alternative security\
    \ mechanism will need to be\n   deployed in order to permit IPFRR to used.\n \
    \  Because the repair path will often be of a different length than the\n   pre-failure\
    \ path, security mechanisms that rely on specific Time to\n   Live (TTL) values\
    \ will be adversely affected.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The authors would like to acknowledge contributions\
    \ made by Alia\n   Atlas, Clarence Filsfils, Pierre Francois, Joel Halpern, Stefano\n\
    \   Previdi, and Alex Zinin.\n"
- title: 9.  Informative References
  contents:
  - "9.  Informative References\n   [ALT-SP]   Tian, A., \"Fast Reroute using Alternative\
    \ Shortest Paths\",\n              Work in Progress, July 2004.\n   [BFD]    \
    \  Katz, D. and D. Ward, \"Bidirectional Forwarding\n              Detection\"\
    , Work in Progress, January 2010.\n   [FIFR]     Nelakuditi, S., Lee, S., Lu,\
    \ Y., Zhang, Z., and C. Chuah,\n              \"Fast Local Rerouting for Handling\
    \ Transient Link\n              Failures\", IEEE/ACM Transactions on Networking,\
    \ Vol. 15,\n              No. 2, DOI 10.1109/TNET.2007.892851, available\n   \
    \           from http://www.ieeexplore.ieee.org, April 2007.\n   [NOTVIA]   Shand,\
    \ M., Bryant, S., and S. Previdi, \"IP Fast Reroute\n              Using Not-via\
    \ Addresses\", Work in Progress, July 2009.\n   [RFC4090]  Pan, P., Swallow, G.,\
    \ and A. Atlas, \"Fast Reroute\n              Extensions to RSVP-TE for LSP Tunnels\"\
    , RFC 4090,\n              May 2005.\n   [RFC5286]  Atlas, A. and A. Zinin, \"\
    Basic Specification for IP Fast\n              Reroute: Loop-Free Alternates\"\
    , RFC 5286, September 2008.\n   [RFC5715]  Shand, M. and S. Bryant, \"A Framework\
    \ for Loop-Free\n              Convergence\", RFC 5715, January 2010.\n   [SIMULA]\
    \   Kvalbein, A., Hansen, A., Cicic, T., Gjessing, S., and O.\n              Lysne,\
    \ \"Fast IP Network Recovery using Multiple Routing\n              Configurations\"\
    , Infocom 10.1109/INFOCOM.2006.227,\n              available from http://www.ieeexplore.ieee.org,\
    \ April 2006.\n   [TUNNELS]  Bryant, S., Filsfils, C., Previdi, S., and M. Shand,\
    \ \"IP\n              Fast Reroute using tunnels\", Work in Progress,\n      \
    \        November 2007.\n   [UTURN]    Atlas, A., \"U-turn Alternates for IP/LDP\
    \ Fast-Reroute\",\n              Work in Progress, February 2006.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Mike Shand\n   Cisco Systems\n   250, Longwater Avenue.\n\
    \   Reading, Berks  RG2 6GB\n   UK\n   EMail: mshand@cisco.com\n   Stewart Bryant\n\
    \   Cisco Systems\n   250, Longwater Avenue.\n   Reading, Berks  RG2 6GB\n   UK\n\
    \   EMail: stbryant@cisco.com\n"
