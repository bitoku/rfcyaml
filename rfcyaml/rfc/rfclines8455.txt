Abstract This document defines terminology for benchmarking a Software Defined Networking (SDN) controller's control plane performance.
It extends the terminology already defined in RFC 7426 for the purpose of benchmarking SDN Controllers.
The terms provided in this document help to benchmark an SDN Controller's performance independently of the controller's supported protocols and/or network services.
Introduction Software Defined Networking (SDN) is a networking architecture in which network control is decoupled from the underlying forwarding function and is placed in a centralized location called the SDN Controller.
The SDN Controller provides an abstraction of the underlying network and offers a global view of the overall network to applications and business logic.
Thus, an SDN Controller provides the flexibility to program, control, and manage network behavior dynamically through northbound and southbound interfaces.
Since the network controls are logically centralized, the need to benchmark the SDN Controller's performance becomes significant.
This document defines terms to benchmark various controller designs for performance, scalability, reliability, and security, independently of northbound and southbound protocols.
A mechanism for benchmarking the performance of SDN Controllers is defined in the companion methodology document [RFC8456].
These two documents provide methods for measuring and evaluating the performance of various controller implementations.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
The terms defined in this section are extensions to the terms defined in [RFC7426] ("Software Defined Networking (SDN):
Readers should refer to [RFC7426] before attempting to make use of this document.
The definition of "flow" is the same as the definition of "microflows" provided in Section 3.1.5 of [RFC4689].
A flow can be a set of packets having the same source address, destination address, source port, and destination port, or any combination of these items.
The definition of "northbound interface" is the same as the definition of "service interface" provided in [RFC7426].
The northbound interface allows SDN applications and orchestration systems to program and retrieve the network information through the SDN Controller.
The southbound interface is the application programming interface provided by the SDN Controller to interact with the SDN nodes.
The southbound interface enables the controller to interact with the SDN nodes in the network for dynamically defining the traffic forwarding behavior.
A controller Forwarding Table contains flow entries learned in one of two ways: first, entries can be learned from traffic received through the data plane, or second, these entries can be statically provisioned on the controller and distributed to devices via the southbound interface.
The controller Forwarding Table has an aging mechanism that will be applied only for dynamically learned entries.
Proactive Flow Provisioning Mode Definition:
Controller programming flows in Network Devices based on the flow entries provisioned through the controller's northbound interface.
Network orchestration systems and SDN applications can define the network forwarding behavior by programming the controller, using Proactive Flow Provisioning.
The controller can then program the Network Devices with the pre provisioned entries.
Reactive Flow Provisioning Mode Definition:
Controller programming flows in Network Devices based on the traffic received from Network Devices through the controller's southbound interface.
The SDN Controller dynamically decides the forwarding behavior based on the incoming traffic from the Network Devices.
The controller then programs the Network Devices, using Reactive Flow Provisioning.
Refer to Section 5 in [RFC2330].
Standalone Mode Definition: A single controller handles all control plane functionalities without redundancy, and it is unable to provide high availability and/or automatic failover.
In standalone mode, one controller manages one or more network domains.
In this mode, a group of two or more controllers handles all control plane functionalities.
In cluster mode, multiple controllers are teamed together for the purpose of load sharing and/or high availability.
The controllers in the group may operate in active/standby (master/slave) or active/active (equal) mode, depending on the intended purpose.
Any message from the Network Device that is generated for network events.
Control messages like flow setup request and response messages are classified as asynchronous messages.
The controller has to return a response message.
Note that the Network Device will not be in blocking mode and continues to send/receive other control messages.
The test traffic generator is an entity that generates/receives network traffic.
The test traffic generator typically connects with Network Devices to send/receive real time network traffic.
Leaf Spine Topology Definition: "Leaf Spine" is a two layered network topology, where a series of leaf switches that form the access layer are fully meshed to a series of spine switches that form the backbone layer.
In the Leaf Spine topology, every leaf switch is connected to each of the spine switches in the topology.
Number of Network Devices Definition:
The number of Network Devices present in the defined test topology.
The Network Devices defined in the test topology can be deployed using real hardware or can be emulated in hardware platforms.
Measurement Units: Number of Network Devices.
The number of times the test needs to be repeated.
The test needs to be repeated for multiple iterations to obtain a reliable metric.
It is recommended that this test SHOULD be performed for at least 10 iterations to increase confidence in the measured results.
Measurement Units: Number of trials.
: Defines the duration of test trials for each iteration.
The Trial Duration forms the basis for "stop" criteria for benchmarking tests.
Trials not completed within this time
Number of Cluster Nodes Definition: Defines the number of controllers present in the controller cluster.
This parameter is relevant when testing the controller's performance in clustering/teaming mode.
The number of nodes in the cluster MUST be greater than 1.
Measurement Units: Number of controller nodes.
This section defines metrics for benchmarking the SDN Controller.
The procedure for performing the defined metrics is defined in the companion methodology document [RFC8456].
Network Topology Discovery Time Definition:
The time taken by the controller(s) to determine the complete network topology, defined as the interval starting with the first discovery message from the controller(s) at its southbound interface and ending with all features of the static topology determined.
Network topology discovery is key for the SDN Controller to provision and manage the network, so it is important to measure how quickly the controller discovers the topology to learn the current network state.
This benchmark is obtained by presenting a network topology (tree, mesh, or linear) with a specified number of nodes to the controller and waiting for the discovery process to complete.
It is expected that the controller supports a network discovery mechanism and uses protocol messages for its discovery process.
Asynchronous Message Processing Time Definition:
The time taken by the controller(s) to process an asynchronous message, defined as the interval starting with an asynchronous message from a Network Device after the discovery of all the devices by the controller(s) and ending with a response message from the controller(s) at its southbound interface.
Discussion: For SDN to support dynamic network provisioning, it is important to measure how quickly the controller responds to an event triggered from the network.
The event can be any notification messages generated by a Network Device upon arrival of a new flow, link down, etc.
This benchmark is obtained by sending asynchronous messages from every connected Network Device one at a time for the defined Trial Duration.
This test assumes that the controller will respond to the received asynchronous messages.
Asynchronous Message Processing Rate Definition:
The number of responses to asynchronous messages per second (a new flow arrival notification message, link down, etc.)
for which the controller(s) performed processing and replied with a valid and productive (non trivial) response message.
Discussion: As SDN assures a flexible network and agile provisioning, it is important to measure how many network events (a new flow arrival notification message, link down, etc.)
the controller can handle at a time.
This benchmark is measured by sending asynchronous messages from every connected Network Device at the rate that the controller processes (without dropping them).
This test assumes that the controller responds to all the received asynchronous messages
(the messages can be designed to elicit individual responses).
When sending asynchronous messages to the controller(s) at high rates, some messages or responses may be discarded or corrupted and require retransmission to controller(s).
Therefore, a useful qualification on the Asynchronous Message Processing Rate is whether the incoming message count equals the response count in each trial.
This is called the Loss Free Asynchronous Message Processing Rate.
Note that several of the early controller benchmarking tools did not consider lost messages and instead report the maximum response rate.
This is called the Maximum Asynchronous Message Processing Rate.
To characterize both the Loss Free Asynchronous Message Processing Rate and the Maximum Asynchronous Message Processing Rate, a test can begin the first trial by sending asynchronous messages to the controller(s) at the maximum possible rate and can then record the message reply rate and the message loss rate.
The message sending rate is then decreased by the STEP size.
The message reply rate and the message loss rate are recorded.
The test ends with a trial where the controller(s) processes all of the asynchronous messages sent without loss.
This is the Loss Free Asynchronous Message Processing Rate.
The trial where the controller(s) produced the maximum response rate is the Maximum Asynchronous Message Processing Rate.
Of course, the first trial can begin at a low sending rate with zero lost responses and then increase the rate until the Loss Free Asynchronous Message Processing Rate and the Maximum Asynchronous Message Processing Rate are discovered.
Reactive Path Provisioning Time Definition:
The time taken by the controller to set up a path reactively between source and destination nodes, defined as the interval starting with the first flow provisioning request message received by the controller(s) and ending with the last flow provisioning response message sent from the controller(s) at its southbound interface.
Discussion: As SDN supports agile provisioning, it is important to measure how fast the controller provisions an end to end flow in the data plane.
The benchmark is obtained by sending traffic from a source endpoint to the destination endpoint and finding the time difference between the first and last flow provisioning message exchanged between the controller and the Network Devices for the traffic path.
Proactive Path Provisioning Time Definition:
The time taken by the controller to proactively set up a path between source and destination nodes, defined as the interval starting with the first proactive flow provisioned in the controller(s) at its northbound interface and ending with the last flow provisioning command message sent from the controller(s) at its southbound interface.
Discussion: For SDN to support pre provisioning of the traffic path from the application, it is important to measure how fast the controller provisions an end to end flow in the data plane.
The benchmark is obtained by provisioning a flow on the controller's northbound interface for the traffic to reach from a source to a destination endpoint and finding the time difference between the first and last flow provisioning message exchanged between the controller and the Network Devices for the traffic path.
Reactive Path Provisioning Rate Definition:
The maximum number of independent paths a controller can concurrently establish per second between source and destination nodes reactively, defined as the number of paths provisioned per second by the controller(s) at its southbound interface for the flow provisioning requests received for path provisioning at its southbound interface between the start of the trial and the expiry of the given Trial Duration.
For SDN to support agile traffic forwarding, it is important to measure how many end to end flows the controller can set up in the data plane.
This benchmark is obtained by sending each traffic flow with unique source and destination pairs from the source Network Device and determining the number of frames received at the destination Network Device.
Proactive Path Provisioning Rate Definition:
The maximum number of independent paths a controller can concurrently establish per second between source and destination nodes proactively, defined as the number of paths provisioned per second by the controller(s) at its southbound interface for the paths provisioned in its northbound interface between the start of the trial and the expiry of the given Trial Duration.
Discussion: For SDN to support pre provisioning of the traffic path for a larger network from the application, it is important to measure how many end to end flows the controller can set up in the data plane.
This benchmark is obtained by sending each traffic flow with unique source and destination pairs from the source Network Device.
the flows on the controller's northbound interface for traffic to reach from each of the unique source and destination pairs, and determine the number of frames received at the destination Network Device.
Network Topology Change Detection Time Definition:
The amount of time taken by the controller to detect any changes in the network topology, defined as the interval starting with the notification message received by the controller(s) at its southbound interface and ending with the first topology rediscovery messages sent from the controller(s) at its southbound interface.
In order for the controller to support fast network failure recovery, it is critical to measure how fast the controller is able to detect any network state change events.
This benchmark is obtained by triggering a topology change event and measuring the time the controller takes to detect and initiate a topology rediscovery process.
The maximum number of control sessions the controller can maintain, defined as the number of sessions that the controller can accept from Network Devices, starting with the first control session and ending with the last control session that the controller(s) accepts at its southbound interface.
Measuring the controller's Control Sessions Capacity is important for determining the controller's system and bandwidth resource requirements.
This benchmark is obtained by establishing a control session with the controller from each of the Network Devices until the controller fails.
The number of sessions that were successfully established will provide the Control Sessions Capacity.
Maximum number of control sessions.
The network size (number of nodes and links) that a controller can discover, defined as the size of a network that the controller(s) can discover, starting with a network topology provided by the user for discovery and ending with the number of nodes and links that the controller(s) can successfully discover.
Measuring the maximum network size that the controller can discover is key to optimal network planning.
This benchmark is obtained by presenting an initial set of Network Devices for discovery to the controller.
Based on the initial discovery, the number of Network Devices is increased or decreased to determine the maximum number of nodes and links that the controller can discover.
Maximum number of network nodes and links.
The maximum number of flow entries that a controller can manage in its Forwarding Table.
Discussion: It is important to measure the capacity of a controller's Forwarding Table to determine the number of flows that the controller can forward without flooding or dropping any traffic.
This benchmark is obtained by continuously presenting the controller with new flow entries through the Reactive Flow Provisioning mode or the Proactive Flow Provisioning mode until the Forwarding Table becomes full.
The maximum number of nodes that the controller can hold in its Forwarding Table will provide the Forwarding Table Capacity.
Maximum number of flow entries managed.
Exception Handling Definition: To determine the effect of handling error packets and notifications on performance tests.
This benchmark is to be performed after obtaining the baseline measurement results for the performance tests defined in Section 2.3.1.
This benchmark determines the deviation from the baseline performance due to the handling of error or failure messages from the connected Network Devices.
Measurement Units: Deviation from baseline metrics while handling Exceptions.
Handling Denial of Service Attacks Definition: To determine the effect of handling denial of service (DoS) attacks on performance and scalability tests.
This benchmark is to be performed after obtaining the baseline measurement results for the performance and scalability tests defined in Sections 2.3.1 and 2.3.2.
This benchmark determines the deviation from the baseline performance due to the handling of DoS attacks on the controller.
Measurement Units: Deviation from baseline metrics while handling DoS attacks.
The time taken to switch from an active controller to the backup controller when the controllers operate in redundancy mode and the active controller fails, defined as the interval starting when the active controller is brought down and ending with the first rediscovery message received from the new controller at its southbound interface.
This benchmark determines the impact of provisioning new flows when controllers are teamed together and the active controller fails.
The time taken by the controller to reroute traffic when there is a failure in existing traffic paths, defined as the interval starting with the first failure notification message received by the controller and ending with the last flow re provisioning message sent by the controller at its southbound interface.
This benchmark determines the controller's re provisioning ability upon network failures and makes the following assumptions: 1.
The network topology supports a redundant path between the source and destination endpoints.
The controller does not pre provision the redundant path.
This section provides common reference topologies that are referred to in individual tests defined in the companion methodology document [RFC8456].
This document has no IANA actions.
The benchmarking tests described in this document are limited to the performance characterization of controllers in a lab environment with isolated networks.
The benchmarking network topology will be an independent test setup and MUST NOT be connected to devices that may forward the test traffic into a production network or misroute traffic to the test management network.
Further, benchmarking is performed on a "black box" basis, relying solely on measurements observable external to the controller.
Special capabilities SHOULD NOT exist in the controller specifically for benchmarking purposes.
Any implications for network security arising from the controller SHOULD be identical in the lab and in production networks.
