- title: __initial_text__
  contents:
  - "                   Multiple Authentication Exchanges\n             in the Internet\
    \ Key Exchange (IKEv2) Protocol\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Internet Key Exchange (IKEv2) protocol supports several\n  \
    \ mechanisms for authenticating the parties, including signatures with\n   public-key\
    \ certificates, shared secrets, and Extensible\n   Authentication Protocol (EAP)\
    \ methods.  Currently, each endpoint uses\n   only one of these mechanisms to\
    \ authenticate itself.  This document\n   specifies an extension to IKEv2 that\
    \ allows the use of multiple\n   authentication exchanges, using either different\
    \ mechanisms or the\n   same mechanism.  This extension allows, for instance,\
    \ performing\n   certificate-based authentication of the client host followed\
    \ by an\n   EAP authentication of the user.  When backend authentication servers\n\
    \   are used, they can belong to different administrative domains, such\n   as\
    \ the network access provider and the service provider.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Usage Scenarios ............................................4\n  \
    \    1.2. Terminology ................................................5\n   2.\
    \ Solution ........................................................5\n      2.1.\
    \ Solution Overview ..........................................5\n      2.2. Example\
    \ 1: Multiple EAP Authentications ....................6\n      2.3. Example 2:\
    \ Mixed EAP and Certificate Authentications .......7\n      2.4. Example 3: Multiple\
    \ Initiator Certificates .................8\n      2.5. Example 4: Multiple Responder\
    \ Certificates .................8\n   3. Payload Formats .................................................9\n\
    \      3.1. MULTIPLE_AUTH_SUPPORTED Notify Payload .....................9\n  \
    \    3.2. ANOTHER_AUTH_FOLLOWS Notify Payload ........................9\n   4.\
    \ IANA Considerations .............................................9\n   5. Security\
    \ Considerations .........................................9\n   6. Acknowledgments\
    \ ................................................10\n   7. References .....................................................10\n\
    \      7.1. Normative References ......................................10\n  \
    \    7.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   IKEv2 [IKEv2] supports several mechanisms for parties involved\
    \ in the\n   IKE_SA (IKE security association).  These include signatures with\n\
    \   public-key certificates, shared secrets, and Extensible\n   Authentication\
    \ Protocol (EAP) methods.\n   Currently, each endpoint uses only one of these\
    \ mechanisms to\n   authenticate itself.  However, there are scenarios where making\
    \ the\n   authorization decision in IKEv2 (whether to allow access or not)\n \
    \  requires using several of these methods.\n   For instance, it may be necessary\
    \ to authenticate both the host\n   (machine) requesting access, and the user\
    \ currently using the host.\n   These two authentications would use two separate\
    \ sets of credentials\n   (such as certificates and associated private keys) and\
    \ might even use\n   different authentication mechanisms.\n   To take another\
    \ example, when an operator is hosting a Virtual\n   Private Network (VPN) gateway\
    \ service for a third party, it may be\n   necessary to authenticate the client\
    \ to both the operator (for\n   billing purposes) and the third party's Authentication,\n\
    \   Authorization, and Accounting (AAA) server (for authorizing access to\n  \
    \ the third party's internal network).\n   This document specifies an extension\
    \ to IKEv2 that allows the use of\n   multiple authentication exchanges, using\
    \ either different mechanisms\n   or the same mechanism.  This extension allows,\
    \ for instance,\n   performing certificate-based authentication of the client\
    \ host\n   followed by an EAP authentication of the user.\n   Each authentication\
    \ exchange requiring communication with backend AAA\n   servers may be directed\
    \ to different backend AAA servers, located\n   even in different administrative\
    \ domains.  However, details of the\n   communication between the IKEv2 gateway\
    \ and the backend\n   authentication servers are beyond the scope of this document.\
    \  In\n   particular, this document does not specify any changes to existing\n\
    \   AAA protocols, and it does not require the use of any particular AAA\n   protocol.\n\
    \   In case of several EAP authentications, it is important to notice\n   that\
    \ they are not a \"sequence\" (as described in Section 2.1 of\n   [EAP]), but\
    \ separate independent EAP conversations, which are usually\n   also terminated\
    \ in different EAP servers.  Multiple authentication\n   methods within a single\
    \ EAP conversation are still prohibited as\n   described in Section 2.1 of [EAP].\
    \  Using multiple independent EAP\n   conversations is similar to the separate\
    \ Network Access Provider\n   (NAP) and Internet Service Provider (ISP) authentication\
    \ exchanges\n   planned for [PANA].  The discovery of the appropriate EAP server\
    \ for\n   each EAP authentication conversation is based on AAA routing.\n"
- title: 1.1.  Usage Scenarios
  contents:
  - "1.1.  Usage Scenarios\n   Figure 1 shows an example architecture of an operator-hosted\
    \ VPN\n   scenario that could benefit from a two-phase authentication within\n\
    \   the IKEv2 exchange.  First, the client authenticates towards the\n   Network\
    \ Access Provider (NAP) and gets access to the NAP-hosted VPN\n   gateway.  The\
    \ first-phase authentication involves the backend AAA\n   server of the NAP. \
    \ After the first authentication, the client\n   initiates the second authentication\
    \ round that also involves the\n   Third Party's backend AAA server.  If both\
    \ authentications succeed,\n   the required IPsec tunnels are set up and the client\
    \ can access\n   protected networks behind the Third Party.\n       Client   \
    \                      *Network Access Provider*\n     +---------+           \
    \         +---------+              +-----+\n     |         |                 \
    \   |  NAP's  |              | NAP |\n     |Protected|     IPsec SAs      | Tunnel\
    \  | AAA Protocol | AAA |\n     |Endpoint |<------------------>|Endpoint |<------------>|Serv/|\n\
    \     |         |                    |         |              |Proxy|\n     +---------+\
    \                    +---------+              +-----+\n                      \
    \                 ^                        ^\n                            IPsec\
    \ or  /                  AAA    |\n                        Leased Line  /    \
    \             Protocol |\n                                    /              \
    \             |\n                                   v                        \
    \    |\n                           +---------+    *Third Party*         v\n  \
    \                         |3rd Party|                       +-----+\n        \
    \    Protected      | Tunnel  |                       | 3rd |\n              \
    \ Subnet <----|Endpoint |                       |Party|\n                    \
    \       |         |                       | AAA |\n                          \
    \ +---------+                       +-----+\n          Figure 1: Two-phase authentication\
    \ used to gain access to\n          the Third Party network via Network Access\
    \ Provider.  AAA\n          traffic goes through NAP's AAA server.\n   The NAP's\
    \ AAA server can be used to proxy the AAA traffic to the\n   Third Party's backend\
    \ AAA server.  Alternatively, the AAA traffic\n   from the NAP's tunnel endpoint\
    \ could go directly to the Third Party's\n   backend AAA servers.  However, this\
    \ is more or less an AAA routing\n   issue.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [KEYWORDS].\n   The terms and abbreviations \"authenticator\", \"backend authentication\n\
    \   server\", \"EAP server\", and \"peer\" in this document are to be\n   interpreted\
    \ as described in [EAP].\n   When messages containing IKEv2 payloads are described,\
    \ optional\n   payloads are shown in brackets (for instance, \"[FOO]\"), and a\
    \ plus\n   sign indicates that a payload can be repeated one or more times (for\n\
    \   instance, \"FOO+\").\n"
- title: 2.  Solution
  contents:
  - '2.  Solution

    '
- title: 2.1.  Solution Overview
  contents:
  - "2.1.  Solution Overview\n   The peers announce support for this IKEv2 extension\
    \ by including a\n   MULTIPLE_AUTH_SUPPORTED notification in the IKE_SA_INIT response\n\
    \   (responder) and the first IKE_AUTH request (initiator).\n   If both peers\
    \ support this extension, either of them can announce\n   that it wishes to have\
    \ a second authentication by including an\n   ANOTHER_AUTH_FOLLOWS notification\
    \ in any IKE_AUTH message that\n   contains an AUTH payload.  This indicates that\
    \ the peer sending the\n   ANOTHER_AUTH_FOLLOWS wishes to authenticate another\
    \ set of\n   credentials to the other peer.  The next IKE_AUTH message sent by\n\
    \   this peer will contain a second identity payload (IDi or IDr) and\n   starts\
    \ another authentication exchange.  The IKE_AUTH phase is\n   considered successful\
    \ only if all the individual authentication\n   exchanges complete successfully.\n\
    \   It is assumed that both peers know what credentials they want to\n   present;\
    \ there is no negotiation about, for instance, what type of\n   authentication\
    \ is to be done.  As in IKEv2, EAP-based authentication\n   is always requested\
    \ by the initiator (by omitting the AUTH payload).\n   The AUTH payloads are calculated\
    \ as specified in [IKEv2] Sections\n   2.15 and 2.16, where IDi' refers to the\
    \ latest IDi payload sent by\n   the initiator, and IDr' refers to the latest\
    \ IDr payload sent by the\n   responder.  If EAP methods that do not generate\
    \ shared keys are used,\n   it is possible that several AUTH payloads with identical\
    \ contents are\n   sent.  When such EAP methods are used, the purpose of the AUTH\n\
    \   payload is simply to delimit the authentication exchanges, and ensure\n  \
    \ that the IKE_SA_INIT request/response messages were not modified.\n"
- title: '2.2.  Example 1: Multiple EAP Authentications'
  contents:
  - "2.2.  Example 1: Multiple EAP Authentications\n   This example shows certificate-based\
    \ authentication of the responder\n   followed by an EAP authentication exchange\
    \ (messages 1-10).  When the\n   first EAP exchange is ending (the initiator is\
    \ sending its AUTH\n   payload), the initiator announces that it wishes to have\
    \ a second\n   authentication exchange by including an ANOTHER_AUTH_FOLLOWS\n\
    \   notification (message 9).\n   After this, a second authentication exchange\
    \ begins.  The initiator\n   sends a new IDi payload but no AUTH payload (message\
    \ 11), indicating\n   that EAP will be used.  After that, another EAP authentication\n\
    \   exchange follows (messages 12-18).\n      Initiator                   Responder\n\
    \     -----------                 -----------\n      1. HDR, SA, KE, Ni -->\n\
    \                             <--  2. HDR, SA, KE, Nr, [CERTREQ],\n          \
    \                                N(MULTIPLE_AUTH_SUPPORTED)\n      3. HDR, SK\
    \ { IDi, [CERTREQ+], [IDr],\n                   SA, TSi, TSr, N(MULTIPLE_AUTH_SUPPORTED)\
    \ }  -->\n                             <--  4. HDR, SK { IDr, [CERT+], AUTH,\n\
    \                                               EAP(Request) }\n      5. HDR,\
    \ SK { EAP(Response) }  -->\n                             <--  6. HDR, SK { EAP(Request)\
    \ }\n      7. HDR, SK { EAP(Response) }  -->\n                             <--\
    \  8. HDR, SK { EAP(Success) }\n      9. HDR, SK { AUTH,\n                   N(ANOTHER_AUTH_FOLLOWS)\
    \ }  -->\n                             <--  10. HDR, SK { AUTH }\n      11. HDR,\
    \ SK { IDi }  -->\n                             <--  12. HDR, SK { EAP(Request)\
    \ }\n      13. HDR, SK { EAP(Response) }  -->\n                             <--\
    \  14. HDR, SK { EAP(Request) }\n      15. HDR, SK { EAP(Response) }  -->\n  \
    \                           <--  16. HDR, SK { EAP(Success) }\n      17. HDR,\
    \ SK { AUTH }  -->\n                             <--  18. HDR, SK { AUTH, SA,\
    \ TSi, TSr }\n          Example 1: Certificate-based authentication of the\n \
    \         responder, followed by two EAP authentication exchanges.\n"
- title: '2.3.  Example 2: Mixed EAP and Certificate Authentications'
  contents:
  - "2.3.  Example 2: Mixed EAP and Certificate Authentications\n   Another example\
    \ is shown below: here both the initiator and the\n   responder are first authenticated\
    \ using certificates (or shared\n   secrets); this is followed by an EAP authentication\
    \ exchange.\n      Initiator                   Responder\n     -----------   \
    \              -----------\n      1. HDR, SA, KE, Ni -->\n                   \
    \          <--  2. HDR, SA, KE, Nr, [CERTREQ],\n                             \
    \             N(MULTIPLE_AUTH_SUPPORTED)\n      3. HDR, SK { IDi, [CERT+], [CERTREQ+],\
    \ [IDr], AUTH,\n                   SA, TSi, TSr, N(MULTIPLE_AUTH_SUPPORTED),\n\
    \                   N(ANOTHER_AUTH_FOLLOWS) }  -->\n                         \
    \    <--  4. HDR, SK { IDr, [CERT+], AUTH }\n      5. HDR, SK { IDi }  -->\n \
    \                            <--  6. HDR, SK { EAP(Request) }\n      7. HDR, SK\
    \ { EAP(Response) }  -->\n                             <--  8. HDR, SK { EAP(Request)\
    \ }\n      9. HDR, SK { EAP(Response) }  -->\n                             <--\
    \  10. HDR, SK { EAP(Success) }\n      11. HDR, SK { AUTH }  -->\n           \
    \                  <--  12. HDR, SK { AUTH, SA, TSi, TSr }\n             Example\
    \ 2: Certificate-based (or shared-secret-based)\n             authentication of\
    \ the initiator and the responder,\n             followed by an EAP authentication\
    \ exchange.\n"
- title: '2.4.  Example 3: Multiple Initiator Certificates'
  contents:
  - "2.4.  Example 3: Multiple Initiator Certificates\n   This example shows yet another\
    \ possibility: the initiator has two\n   different certificates (and associated\
    \ private keys), and\n   authenticates both of them to the responder.\n      Initiator\
    \                   Responder\n     -----------                 -----------\n\
    \      1. HDR, SA, KE, Ni -->\n                             <--  2. HDR, SA, KE,\
    \ Nr, [CERTREQ],\n                                          N(MULTIPLE_AUTH_SUPPORTED)\n\
    \      3. HDR, SK { IDi, [CERT+], [CERTREQ+], [IDr], AUTH,\n                 \
    \  SA, TSi, TSr, N(MULTIPLE_AUTH_SUPPORTED),\n                   N(ANOTHER_AUTH_FOLLOWS)\
    \ }  -->\n                             <--  4. HDR, SK { IDr, [CERT+], AUTH }\n\
    \      5. HDR, SK { IDi, [CERT+], AUTH }  -->\n                             <--\
    \  6. HDR, SK { SA, TSi, TSr }\n          Example 3: Two certificate-based authentications\
    \ of the\n          initiator, and one certificate-based authentication\n    \
    \      of the responder.\n"
- title: '2.5.  Example 4: Multiple Responder Certificates'
  contents:
  - "2.5.  Example 4: Multiple Responder Certificates\n   This example shows yet another\
    \ possibility: the responder has two\n   different certificates (and associated\
    \ private keys), and\n   authenticates both of them to the initiator.\n      Initiator\
    \                   Responder\n     -----------                 -----------\n\
    \      1. HDR, SA, KE, Ni -->\n                             <--  2. HDR, SA, KE,\
    \ Nr, [CERTREQ],\n                                          N(MULTIPLE_AUTH_SUPPORTED)\n\
    \      3. HDR, SK { IDi, [CERT+], [CERTREQ+], [IDr], AUTH,\n                 \
    \  SA, TSi, TSr, N(MULTIPLE_AUTH_SUPPORTED) }  -->\n                         \
    \    <--  4. HDR, SK { IDr, [CERT+], AUTH,\n                                 \
    \              N(ANOTHER_AUTH_FOLLOWS) }\n      5. HDR, SK { }  -->\n        \
    \                     <--  6. HDR, SK { IDr, [CERT+], AUTH,\n                \
    \                               SA, TSi, TSr }\n          Example 4: Two certificate-based\
    \ authentications of the\n          responder, and one certificate-based authentication\n\
    \          of the initiator.\n"
- title: 3.  Payload Formats
  contents:
  - '3.  Payload Formats

    '
- title: 3.1.  MULTIPLE_AUTH_SUPPORTED Notify Payload
  contents:
  - "3.1.  MULTIPLE_AUTH_SUPPORTED Notify Payload\n   The MULTIPLE_AUTH_SUPPORTED\
    \ notification is included in the\n   IKE_SA_INIT response or the first IKE_AUTH\
    \ request to indicate that\n   the peer supports this specification.  The Notify\
    \ Message Type is\n   MULTIPLE_AUTH_SUPPORTED (16404).  The Protocol ID and SPI\
    \ Size fields\n   MUST be set to zero, and there is no data associated with this\
    \ Notify\n   type.\n"
- title: 3.2.  ANOTHER_AUTH_FOLLOWS Notify Payload
  contents:
  - "3.2.  ANOTHER_AUTH_FOLLOWS Notify Payload\n   The ANOTHER_AUTH_FOLLOWS notification\
    \ payload is included in an\n   IKE_AUTH message containing an AUTH payload to\
    \ indicate that the peer\n   wants to continue with another authentication exchange.\
    \  The Notify\n   Message Type is ANOTHER_AUTH_FOLLOWS (16405).  The Protocol\
    \ ID and\n   SPI Size fields MUST be set to zero, and there is no data associated\n\
    \   with this Notify type.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   This document defines two new IKEv2 notifications,\n\
    \   MULTIPLE_AUTH_SUPPORTED and ANOTHER_AUTH_FOLLOWS, whose values are\n   allocated\
    \ from the \"IKEv2 Notify Message Types\" namespace defined in\n   [IKEv2].\n\
    \   This document does not define any new namespaces to be managed by\n   IANA.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Security considerations for IKEv2 are discussed\
    \ in [IKEv2].  The\n   reader is encouraged to pay special attention to considerations\n\
    \   relating to the use of EAP methods that do not generate shared keys.\n   However,\
    \ the use of multiple authentication exchanges results in at\n   least one new\
    \ security consideration.\n   In normal IKEv2, the responder authenticates the\
    \ initiator before\n   revealing its identity (except when EAP is used).  When\
    \ multiple\n   authentication exchanges are used to authenticate the initiator,\
    \ the\n   responder has to reveal its identity before all of the initiator\n \
    \  authentication exchanges have been completed.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The authors would like to thank Bernard Aboba, Jari Arkko,\
    \ Spencer\n   Dawkins, Lakshminath Dondeti, Henry Haverinen, Russ Housley, Mika\n\
    \   Joutsenvirta, Charlie Kaufman, Tero Kivinen, Yoav Nir, Magnus\n   Nystrom,\
    \ Mohan Parthasarathy, and Juha Savolainen for their valuable\n   comments.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [IKEv2]     Kaufman, C., \"Internet Key Exchange\
    \ (IKEv2) Protocol\",\n               RFC 4306, December 2005.\n   [KEYWORDS]\
    \  Bradner, S., \"Key words for use in RFCs to Indicate\n               Requirement\
    \ Levels\", RFC 2119, March 1997.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [EAP]       Aboba, B., Blunk, L., Vollbrecht,\
    \ J., Carlson, J., and H.\n               Levkowetz, \"Extensible Authentication\
    \ Protocol (EAP)\",\n               RFC 3748, June 2004.\n   [PANA]      Yegin,\
    \ A., Ohba, Y., Penno, R., Tsirtsis, G., and C.\n               Wang, \"Protocol\
    \ for Carrying Authentication for Network\n               Access (PANA) Requirements\"\
    , RFC 4058, May 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Pasi Eronen\n   Nokia Research Center\n   P.O. Box 407\n\
    \   FIN-00045 Nokia Group\n   Finland\n   EMail: pasi.eronen@nokia.com\n   Jouni\
    \ Korhonen\n   TeliaSonera\n   P.O. Box 970\n   FIN-00051 Sonera\n   Finland\n\
    \   EMail: jouni.korhonen@teliasonera.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
