Abstract This document describes the WITHIN extension to IMAP SEARCH.
IMAP SEARCH returns messages whose internal date is within or outside a specified interval.
The mechanism described here, OLDER and YOUNGER, differs from BEFORE and SINCE in that the client specifies an interval, rather than a date.
WITHIN is useful for persistent searches where either the device does not have the capacity to perform the search at regular intervals or the network
is of limited bandwidth and thus there is a desire to reduce network traffic from sending repeated requests and redundant responses.
This extension exposes two new search keys, OLDER and YOUNGER, each of which takes a non zero integer argument corresponding to a time interval in seconds.
The server calculates the time of interest by subtracting the time interval the client presents from the current date and time of the server.
The server then either returns messages older or younger than the resultant time and date, depending on the search key used.
Conventions Used in This Document
In examples, "C:" and "S:" indicate lines sent by the client and server, respectively.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
When describing the general syntax, we omit some definitions, as RFC 3501
An IMAP4 server that supports the capability described here MUST return "WITHIN" as one of the server supported capabilities in the CAPABILITY command.
For both the OLDER and YOUNGER search keys, the server calculates a target date and time by subtracting the interval, specified in seconds, from the current date and time of the server.
The server then compares the target time with the INTERNALDATE of the message, as specified in IMAP [RFC3501].
For OLDER, messages match if the INTERNALDATE is less recent than or equal to the target time.
For YOUNGER, messages match if the INTERNALDATE is more recent than or equal to the target time.
Both OLDER and YOUNGER searches always result in exact matching, to the resolution of a second.
However, if one is doing a dynamic evaluation, for example, in a context [CONTEXT], one needs to be aware that the server might perform the evaluation periodically.
Thus, the server may delay the updates.
Clients MUST be aware that dynamic search results may not reflect the current state of the mailbox.
If the client needs a search result that reflects the current state of the mailbox, we RECOMMEND that the client issue a new search.
The following syntax specification uses the Augmented Backus Naur Form (ABNF) notation.
Elements not defined here can be found in the formal syntax of ABNF [RFC4234] and IMAP [RFC3501].
This document extends RFC 3501
[RFC3501] with two new search keys:
SP nz number ; search key defined in RFC 3501 4.
a1 SEARCH UNSEEN YOUNGER 259200
a1   SEARCH 4 8 15
42 Search for all unseen messages within the past 3 days, or 259200 seconds, according to the server's current time.
The WITHIN extension does not raise any security considerations that are not present in the base protocol.
Considerations are the same as for IMAP [RFC3501].
IANA Considerations Per the IMAP RFC [RFC3501]
, registration of a new IMAP capability in the IMAP Capability registry requires the publication of a standards  track RFC or an IESG approved experimental RFC.
The registry is currently located at <http://www.iana.org/assignments/imap4 capabilities>.
This standards track document defines the WITHIN IMAP capability.
IANA has added this extension to the IANA IMAP Capability registry.
Contributors Stephane Maes and Ray Cromwell wrote the original version of this document as part of P IMAP, as well as the first versions for the IETF.
From an attribution perspective, they are clearly authors.
