- title: __initial_text__
  contents:
  - '                 Binary Lexical Octet Ad-hoc Transport

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2002).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a reformulation of IP and two transport layer\n\
    \   protocols (TCP and UDP) as XML applications.\n"
- title: 1.   Introduction
  contents:
  - '1.   Introduction

    '
- title: 1.1. Overview
  contents:
  - "1.1. Overview\n   This document describes the Binary Lexical Octet Ad-hoc Transport\n\
    \   (BLOAT): a reformulation of a widely-deployed network-layer protocol\n   (IP\
    \ [RFC791]), and two associated transport layer protocols (TCP\n   [RFC793] and\
    \ UDP [RFC768]) as XML [XML] applications.  It also\n   describes methods for\
    \ transporting BLOAT over Ethernet and IEEE 802\n   networks as well as encapsulating\
    \ BLOAT in IP for gatewaying BLOAT\n   across the public Internet.\n"
- title: 1.2. Motivation
  contents:
  - "1.2. Motivation\n   The wild popularity of XML as a basis for application-level\
    \ protocols\n   such as the Blocks Extensible Exchange Protocol [RFC3080], the\
    \ Simple\n   Object Access Protocol [SOAP], and Jabber [JABBER] prompted\n   investigation\
    \ into the possibility of extending the use of XML in the\n   protocol stack.\
    \  Using XML at both the transport and network layer in\n   addition to the application\
    \ layer would provide for an amazing amount\n   of power and flexibility while\
    \ removing dependencies on proprietary\n   and hard-to-understand binary protocols.\
    \  This protocol unification\n   would also allow applications to use a single\
    \ XML parser for all\n   aspects of their operation, eliminating developer time\
    \ spent figuring\n   out the intricacies of each new protocol, and moving the\
    \ hard work of\n   parsing to the XML toolset.  The use of XML also mitigates\
    \ concerns\n   over \"network vs. host\" byte ordering which is at the root of\
    \ many\n   network application bugs.\n"
- title: 1.3. Relation to Existing Protocols
  contents:
  - "1.3. Relation to Existing Protocols\n   The reformulations specified in this\
    \ RFC follow as closely as\n   possible the spirit of the RFCs on which they are\
    \ based, and so MAY\n   contain elements or attributes that would not be needed\
    \ in a pure\n   reworking (e.g. length attributes, which are implicit in XML.)\n\
    \   The layering of network and transport protocols are maintained in\n   this\
    \ RFC despite the optimizations that could be made if the line\n   were somewhat\
    \ blurred (i.e. merging TCP and IP into a single, larger\n   element in the DTD)\
    \ in order to foster future use of this protocol as\n   a basis for reformulating\
    \ other protocols (such as ICMP.)\n   Other than the encoding, the behavioral\
    \ aspects of each of the\n   existing protocols remain unchanged.  Routing, address\
    \ spaces, TCP\n   congestion control, etc. behave as specified in the extant standards.\n\
    \   Adapting to new standards and experimental algorithm heuristics for\n   improving\
    \ performance will become much easier once the move to BLOAT\n   has been completed.\n"
- title: 1.4. Requirement Levels
  contents:
  - "1.4. Requirement Levels\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [RFC2119].\n"
- title: 2.   IPoXML
  contents:
  - "2.   IPoXML\n   This protocol MUST be implemented to be compliant with this RFC.\n\
    \   IPoXML is the root protocol REQUIRED for effective use of TCPoXML\n   (section\
    \ 3.) and higher-level application protocols.\n   The DTD for this document type\
    \ can be found in section 7.1.\n   The routing of IPoXML can be easily implemented\
    \ on hosts with an XML\n   parser, as the regular structure lends itself handily\
    \ to parsing and\n   validation of the document/datagram and then processing the\n\
    \   destination address, TTL, and checksum before sending it on to its\n   next-hop.\n\
    \   The reformulation of IPv4 was chosen over IPv6 [RFC2460] due to the\n   wider\
    \ deployment of IPv4 and the fact that implementing IPv6 as XML\n   would have\
    \ exceeded the 1500 byte Ethernet MTU.\n   All BLOAT implementations MUST use\
    \ - and specify - the UTF-8 encoding\n   of RFC 2279 [RFC2279].  All BLOAT document/datagrams\
    \ MUST be well-\n   formed and include the XMLDecl.\n"
- title: 2.1. IP Description
  contents:
  - "2.1. IP Description\n   A number of items have changed (for the better) from\
    \ the original IP\n   specification.  Bit-masks, where present have been converted\
    \ into\n   human-readable values.  IP addresses are listed in their dotted-\n\
    \   decimal notation [RFC1123].  Length and checksum values are present\n   as\
    \ decimal integers.\n   To calculate the length and checksum fields of the IP\
    \ element, a\n   canonicalized form of the element MUST be used.  The canonical\
    \ form\n   SHALL have no whitespace (including newline characters) between\n \
    \  elements and only one space character between attributes.  There\n   SHALL\
    \ NOT be a space following the last attribute in an element.\n   An iterative\
    \ method SHOULD be used to calculate checksums, as the\n   length field will vary\
    \ based on the size of the checksum.\n   The payload element bears special attention.\
    \  Due to the character\n   set restrictions of XML, the payload of IP datagrams\
    \ (which MAY\n   contain arbitrary data) MUST be encoded for transport. This RFC\n\
    \   REQUIRES the contents of the payload to be encoded in the base-64\n   encoding\
    \ of RFC 2045 [RFC2045], but removes the requirement that the\n   encoded output\
    \ MUST be wrapped on 76-character lines.\n"
- title: 2.2. Example Datagram
  contents:
  - "2.2. Example Datagram\n   The following is an example IPoXML datagram with an\
    \ empty payload:\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <!DOCTYPE\
    \ ip PUBLIC \"-//IETF//DTD BLOAT 1.0 IP//EN\" \"bloat.dtd\">\n   <ip>\n   <header\
    \ length=\"474\">\n   <version value=\"4\"/>\n   <tos precedence=\"Routine\" delay=\"\
    Normal\" throughput=\"Normal\"\n        relibility=\"Normal\" reserved=\"0\"/>\n\
    \   <total.length value=\"461\"/>\n   <id value=\"1\"/>\n   <flags reserved=\"\
    0\" df=\"dont\" mf=\"last\"/>\n   <offset value=\"0\"/>\n   <ttl value=\"255\"\
    />\n   <protocol value=\"6\"/>\n   <checksum value=\"8707\"/>\n   <source address=\"\
    10.0.0.22\"/>\n   <destination address=\"10.0.0.1\"/>\n   <options>\n   <end copied=\"\
    0\" class=\"0\" number=\"0\"/>\n   </options>\n   <padding pad=\"0\"/>\n   </header>\n\
    \   <payload>\n   </payload>\n   </ip>\n"
- title: 3.   TCPoXML
  contents:
  - "3.   TCPoXML\n   This protocol MUST be implemented to be compliant with this\
    \ RFC.  The\n   DTD for this document type can be found in section 7.2.\n"
- title: 3.1. TCP Description
  contents:
  - "3.1. TCP Description\n   A number of items have changed from the original TCP\
    \ specification.\n   Bit-masks, where present have been converted into human-readable\n\
    \   values.  Length and checksum and port values are present as decimal\n   integers.\n\
    \   To calculate the length and checksum fields of the TCP element, a\n   canonicalized\
    \ form of the element MUST be used as in section 2.1.\n   An iterative method\
    \ SHOULD be used to calculate checksums as in\n   section 2.1.\n   The payload\
    \ element MUST be encoded as in section 2.1.\n   The TCP offset element was expanded\
    \ to a maximum of 255 from 16 to\n   allow for the increased size of the header\
    \ in XML.\n   TCPoXML datagrams encapsulated by IPoXML MAY omit the <?xml?> header\n\
    \   as well as the <!DOCTYPE> declaration.\n"
- title: 3.2. Example Datagram
  contents:
  - "3.2. Example Datagram\n   The following is an example TCPoXML datagram with an\
    \ empty payload:\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <!DOCTYPE\
    \ tcp PUBLIC \"-//IETF//DTD BLOAT 1.0 TCP//EN\" \"bloat.dtd\">\n   <tcp>\n   <tcp.header>\n\
    \   <src port=\"31415\"/>\n   <dest port=\"42424\"/>\n   <sequence number=\"322622954\"\
    />\n   <acknowledgement number=\"689715995\"/>\n   <offset number=\"\"/>\n   <reserved\
    \ value=\"0\"/>\n   <control syn=\"1\" ack=\"1\"/>\n   <window size=\"1\"/>\n\
    \   <urgent pointer=\"0\"/>\n   <checksum value=\"2988\"/>\n   <tcp.options>\n\
    \   <tcp.end kind=\"0\"/>\n   </tcp.options>\n   <padding pad=\"0\"/>\n   </tcp.header>\n\
    \   <payload>\n   </payload>\n   </tcp>\n"
- title: 4.   UDPoXML
  contents:
  - "4.   UDPoXML\n   This protocol MUST be implemented to be compliant with this\
    \ RFC.  The\n   DTD for this document type can be found in section 7.3.\n"
- title: 4.1. UDP Description
  contents:
  - "4.1. UDP Description\n   A number of items have changed from the original UDP\
    \ specification.\n   Bit-masks, where present have been converted into human-readable\n\
    \   values.  Length and checksum and port values are present as decimal\n   integers.\n\
    \   To calculate the length and checksum fields of the UDP element, a\n   canonicalized\
    \ form of the element MUST be used as in section 2.1.  An\n   iterative method\
    \ SHOULD be used to calculate checksums as in section\n   2.1.\n   The payload\
    \ element MUST be encoded as in section 2.1.\n   UDPoXML datagrams encapsulated\
    \ by IPoXML MAY omit the <?xml?> header\n   as well as the <!DOCTYPE> declaration.\n"
- title: 4.2. Example Datagram
  contents:
  - "4.2. Example Datagram\n   The following is an example UDPoXML datagram with an\
    \ empty payload:\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <!DOCTYPE\
    \ udp PUBLIC \"-//IETF//DTD BLOAT 1.0 UDP//EN\" \"bloat.dtd\">\n   <udp>\n   <udp.header>\n\
    \   <src port=\"31415\"/>\n   <dest port=\"42424\"/>\n   <udp.length value=\"\
    143\"/>\n   <checksum value=\"2988\"/>\n   </udp.header>\n   <payload>\n   </payload>\n\
    \   </udp>\n"
- title: 5.   Network Transport
  contents:
  - "5.   Network Transport\n   This document provides for the transmission of BLOAT\
    \ datagrams over\n   two common families of physical layer transport.  Future\
    \ RFCs will\n   address additional transports as routing vendors catch up to the\n\
    \   specification, and we begin to see BLOAT routed across the Internet\n   backbone.\n"
- title: 5.1. Ethernet
  contents:
  - "5.1. Ethernet\n   BLOAT is encapsulated in Ethernet datagrams as in [RFC894]\
    \ with the\n   exception that the type field of the Ethernet frame MUST contain\
    \ the\n   value 0xBEEF.  The first 5 octets of the Ethernet frame payload will\n\
    \   be 0x3c 3f 78 6d 6c (\"<?xml\".)\n"
- title: 5.2. IEEE 802
  contents:
  - "5.2. IEEE 802\n   BLOAT is encapsulated in IEEE 802 Networks as in [RFC1042]\
    \ except\n   that the protocol type code for IPoXML is 0xBEEF.\n"
- title: 6. Gatewaying over IP
  contents:
  - "6. Gatewaying over IP\n   In order to facilitate the gradual introduction of\
    \ BLOAT into the\n   public Internet, BLOAT MAY be encapsulated in IP as in [RFC2003]\
    \ to\n   gateway between networks that run BLOAT natively on their LANs.\n"
- title: 7. DTDs
  contents:
  - "7. DTDs\n   The Transport DTDs (7.2. and 7.3.) build on the definitions in the\n\
    \   Network DTD (7.1.)\n   The DTDs are referenced by their PubidLiteral and SystemLiteral\
    \ (from\n   [XML]) although it is understood that most IPoXML implementations\n\
    \   will not need to pull down the DTD, as it will normally be embedded\n   in\
    \ the implementation, and presents something of a catch-22 if you\n   need to\
    \ load part of your network protocol over the network.\n"
- title: 7.1.  IPoXML DTD
  contents:
  - "7.1.  IPoXML DTD\n   <!--\n    DTD for IP over XML.\n    Refer to this DTD as:\n\
    \    <!DOCTYPE ip PUBLIC \"-//IETF//DTD BLOAT 1.0 IP//EN\" \"bloat.dtd\">\n  \
    \ -->\n   <!--\n    DTD data types:\n      Digits      [0..9]+\n      Precedence\
    \  \"NetworkControl | InternetworkControl |\n                   CRITIC | FlashOverride\
    \ | Flash | Immediate |\n                   Priority | Routine\"\n      IP4Addr\
    \     \"dotted-decimal\" notation of [RFC1123]\n      Class       [0..3]\n   \
    \   Sec          \"Unclassified | Confidential | EFTO | MMMM | PROG |\n      \
    \              Restricted | Secret | Top Secret | Reserved\"\n      Compartments\
    \ [0..65535]\n      Handling     [0..65535]\n      TCC          [0..16777216]\n\
    \   -->\n   <!ENTITY % Digits \"CDATA\">\n   <!ENTITY % Precedence \"CDATA\">\n\
    \   <!ENTITY % IP4Addr \"CDATA\">\n   <!ENTITY % Class \"CDATA\">\n   <!ENTITY\
    \ % Sec \"CDATA\">\n   <!ENTITY % Compartments \"CDATA\">\n   <!ENTITY % Handling\
    \ \"CDATA\">\n   <!ENTITY % TCC \"CDATA\">\n   <!ELEMENT ip (header, payload)>\n\
    \   <!ELEMENT header (version, tos, total.length, id, flags, offset, ttl,\n  \
    \                  protocol, checksum, source, destination, options,\n       \
    \             padding)>\n   <!-- length of header in 32-bit words -->\n   <!ATTLIST\
    \ header\n             length %Digits; #REQUIRED>\n   <!ELEMENT version EMPTY>\n\
    \   <!-- ip version. SHOULD be \"4\" -->\n   <!ATTLIST version\n             value\
    \   %Digits;  #REQUIRED>\n   <!ELEMENT tos EMPTY>\n   <!ATTLIST tos\n        \
    \     precedence   %Precedence;    #REQUIRED\n             delay    (normal |\
    \ low)  #REQUIRED\n             throughput   (normal | high) #REQUIRED\n     \
    \        relibility   (normal | high) #REQUIRED\n             reserved     CDATA\
    \ #FIXED \"0\">\n   <!ELEMENT total.length EMPTY>\n   <!--\n    total length of\
    \ datagram (header and payload) in octets, MUST be\n    less than 65,535 (and\
    \ SHOULD be less than 1024 for IPoXML on local\n    ethernets).\n   -->\n   <!ATTLIST\
    \ total.length\n             value %Digits; #REQUIRED>\n   <!ELEMENT id EMPTY>\n\
    \   <!-- 0 <= id <= 65,535  -->\n   <!ATTLIST id\n             value %Digits;\
    \ #REQUIRED>\n   <!ELEMENT flags EMPTY>\n   <!-- df = don't fragment, mf = more\
    \ fragments  -->\n   <!ATTLIST flags\n          reserved CDATA  #FIXED \"0\"\n\
    \          df (may|dont)   #REQUIRED\n          mf (last|more)  #REQUIRED>\n \
    \  <!ELEMENT offset EMPTY>\n   <!-- 0 <= offset <= 8192 measured in 8 octet (64-bit)\
    \ chunks -->\n   <!ATTLIST offset\n             value %Digits; #REQUIRED>\n  \
    \ <!ELEMENT ttl EMPTY>\n   <!-- 0 <= ttl <= 255 -->\n   <!ATTLIST ttl\n      \
    \       value %Digits; #REQUIRED>\n   <!ELEMENT protocol EMPTY>\n   <!-- 0 <=\
    \ protocol <= 255 (per IANA) -->\n   <!ATTLIST protocol\n             value %Digits;\
    \ #REQUIRED>\n   <!ELEMENT checksum EMPTY>\n   <!-- 0 <= checksum <= 65535 (over\
    \ header only) -->\n   <!ATTLIST checksum\n             value %Digits; #REQUIRED>\n\
    \   <!ELEMENT source EMPTY>\n   <!ATTLIST source\n             address %IP4Addr;\
    \ #REQUIRED>\n   <!ELEMENT destination EMPTY>\n   <!ATTLIST destination\n    \
    \         address %IP4Addr; #REQUIRED>\n   <!ELEMENT options ( end | noop | security\
    \ | loose | strict | record\n                     | stream | timestamp )*>\n \
    \  <!ELEMENT end EMPTY>\n   <!ATTLIST end\n             copied (0|1) #REQUIRED\n\
    \             class  CDATA #FIXED \"0\"\n             number CDATA #FIXED \"0\"\
    >\n   <!ELEMENT noop EMPTY>\n   <!ATTLIST noop\n             copied (0|1) #REQUIRED\n\
    \             class  CDATA #FIXED \"0\"\n             number CDATA #FIXED \"1\"\
    >\n   <!ELEMENT security EMPTY>\n   <!ATTLIST security\n             copied CDATA\
    \ #FIXED \"1\"\n             class  CDATA #FIXED \"0\"\n             number CDATA\
    \ #FIXED \"2\"\n             length CDATA #FIXED \"11\"\n             security\
    \ %Sec; #REQUIRED\n             compartments %Compartments; #REQUIRED\n      \
    \       handling %Handling; #REQUIRED\n             tcc %TCC; #REQUIRED>\n   <!ELEMENT\
    \ loose (hop)+>\n   <!ATTLIST loose\n             copied CDATA #FIXED \"1\"\n\
    \             class  CDATA #FIXED \"0\"\n             number CDATA #FIXED \"3\"\
    \n             length %Digits; #REQUIRED\n             pointer %Digits; #REQUIRED>\n\
    \   <!ELEMENT hop EMPTY>\n   <!ATTLIST hop\n             address %IP4Addr; #REQUIRED>\n\
    \   <!ELEMENT strict (hop)+>\n   <!ATTLIST strict\n             copied CDATA #FIXED\
    \ \"1\"\n             class  CDATA #FIXED \"0\"\n             number CDATA #FIXED\
    \ \"9\"\n             length %Digits; #REQUIRED\n             pointer %Digits;\
    \ #REQUIRED>\n   <!ELEMENT record (hop)+>\n   <!ATTLIST record\n             copied\
    \ CDATA #FIXED \"0\"\n             class  CDATA #FIXED \"0\"\n             number\
    \ CDATA #FIXED \"7\"\n             length %Digits; #REQUIRED\n             pointer\
    \ %Digits; #REQUIRED>\n   <!ELEMENT stream EMPTY>\n   <!-- 0 <= id <= 65,535 -->\n\
    \   <!ATTLIST stream\n             copied CDATA #FIXED \"1\"\n             class\
    \  CDATA #FIXED \"0\"\n             number CDATA #FIXED \"8\"\n             length\
    \ CDATA #FIXED \"4\"\n             id %Digits; #REQUIRED>\n   <!ELEMENT timestamp\
    \ (tstamp)+>\n   <!-- 0 <= oflw <=15 -->\n   <!ATTLIST timestamp\n           \
    \  copied CDATA #FIXED \"0\"\n             class  CDATA #FIXED \"2\"\n       \
    \      number CDATA #FIXED \"4\"\n             length %Digits;  #REQUIRED\n  \
    \           pointer %Digits; #REQUIRED\n             oflw %Digits;    #REQUIRED\n\
    \             flag (0 | 1 | 3)  #REQUIRED>\n   <!ELEMENT tstamp EMPTY>\n   <!ATTLIST\
    \ tstamp\n             time %Digits;   #REQUIRED\n             address %IP4Addr;\
    \ #IMPLIED>\n   <!--\n       padding to bring header to 32-bit boundary.\n   \
    \    pad MUST be \"0\"*\n    -->\n   <!ELEMENT padding EMPTY>\n   <!ATTLIST padding\n\
    \             pad CDATA #REQUIRED>\n   <!-- payload MUST be encoded as base-64\
    \ [RFC2045], as modified\n        by section 2.1 of this RFC -->\n   <!ELEMENT\
    \ payload (CDATA)>\n"
- title: 7.2.  TCPoXML DTD
  contents:
  - "7.2.  TCPoXML DTD\n   <!--\n      DTD for TCP over XML.\n      Refer to this\
    \ DTD as:\n      <!DOCTYPE tcp PUBLIC \"-//IETF//DTD BLOAT 1.0 TCP//EN\" \"bloat.dtd\"\
    >\n   -->\n   <!-- the pseudoheader is only included for checksum calculations\
    \ -->\n   <!ELEMENT tcp (tcp.pseudoheader?, tcp.header, payload)>\n   <!ELEMENT\
    \ tcp.header (src, dest, sequence, acknowledgement, offset,\n                \
    \         reserved, control, window, checksum, urgent,\n                     \
    \    tcp.options, padding)>\n   <!ELEMENT src EMPTY>\n   <!-- 0 <= port <= 65,535\
    \ -->\n   <!ATTLIST src\n             port %Digits; #REQUIRED>\n   <!ELEMENT dest\
    \ EMPTY>\n   <!-- 0 <= port <= 65,535 -->\n   <!ATTLIST dest\n             port\
    \ %Digits; #REQUIRED>\n   <!ELEMENT sequence EMPTY>\n   <!-- 0 <= number <= 4294967295\
    \ -->\n   <!ATTLIST sequence\n             number %Digits; #REQUIRED>\n   <!ELEMENT\
    \ acknowledgement EMPTY>\n   <!-- 0 <= number <= 4294967295 -->\n   <!ATTLIST\
    \ acknowledgement\n             number %Digits; #REQUIRED>\n   <!ELEMENT offset\
    \ EMPTY>\n   <!-- 0 <= number <= 255 -->\n   <!ATTLIST offset\n             number\
    \ %Digits; #REQUIRED>\n   <!ELEMENT reserved EMPTY>\n   <!ATTLIST reserved\n \
    \            value CDATA #FIXED \"0\">\n   <!ELEMENT control EMPTY>\n   <!ATTLIST\
    \ control\n             urg (0|1) #IMPLIED\n             ack (0|1) #IMPLIED\n\
    \             psh (0|1) #IMPLIED\n             rst (0|1) #IMPLIED\n          \
    \   syn (0|1) #IMPLIED\n             fin (0|1) #IMPLIED>\n   <!ELEMENT window\
    \ EMPTY>\n   <!-- 0 <= size <= 65,535 -->\n   <!ATTLIST window\n             size\
    \ %Digits; #REQUIRED>\n   <!--\n      checksum as in ip, but with\n      the following\
    \ pseudo-header added into the tcp element:\n     -->\n   <!ELEMENT tcp.pseudoheader\
    \ (source, destination, protocol,\n                               tcp.length)>\n\
    \   <!--\n      tcp header + data length in octets. does not include the size\
    \ of\n      the pseudoheader.\n    -->\n   <!ELEMENT tcp.length EMPTY>\n   <!ATTLIST\
    \ tcp.length\n             value %Digits; #REQUIRED>\n   <!ELEMENT urgent EMPTY>\n\
    \   <!-- 0 <= pointer <= 65,535 -->\n   <!ATTLIST urgent\n             pointer\
    \ %Digits; #REQUIRED>\n   <!ELEMENT tcp.options (tcp.end | tcp.noop | tcp.mss)+>\n\
    \   <!ELEMENT tcp.end EMPTY>\n   <!ATTLIST tcp.end\n             kind CDATA #FIXED\
    \ \"0\">\n   <!ELEMENT tcp.noop EMPTY>\n   <!ATTLIST tcp.noop\n             kind\
    \ CDATA #FIXED \"1\">\n   <!ELEMENT tcp.mss EMPTY>\n   <!ATTLIST tcp.mss\n   \
    \          kind CDATA #FIXED \"2\"\n             length CDATA #FIXED \"4\"\n \
    \            size %Digits; #REQUIRED>\n"
- title: 7.3.  UDPoXML DTD
  contents:
  - "7.3.  UDPoXML DTD\n   <!--\n      DTD for UDP over XML.\n      Refer to this\
    \ DTD as:\n      <!DOCTYPE udp PUBLIC \"-//IETF//DTD BLOAT 1.0 UDP//EN\" \"bloat.dtd\"\
    >\n   -->\n   <!ELEMENT udp (udp.pseudoheader?, udp.header, payload)>\n   <!ELEMENT\
    \ udp.header (src, dest, udp.length, checksum)>\n   <!ELEMENT udp.pseudoheader\
    \ (source, destination, protocol,\n                               udp.length)>\n\
    \   <!--\n      udp header + data length in octets. does not include the size\
    \ of\n      the pseudoheader.\n    -->\n   <!ELEMENT udp.length EMPTY>\n   <!ATTLIST\
    \ udp.length\n             value %Digits; #REQUIRED>\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   XML, as a subset of SGML, has the same security\
    \ considerations as\n   specified in SGML Media Types [RFC1874].  Security considerations\n\
    \   that apply to IP, TCP and UDP also likely apply to BLOAT as it does\n   not\
    \ attempt to correct for issues not related to message format.\n"
- title: 9.   References
  contents:
  - "9.   References\n   [JABBER]    Miller, J., \"Jabber\", draft-miller-jabber-00.txt,\n\
    \               February 2002. (Work in Progress)\n   [RFC768]    Postel, J.,\
    \ \"User Datagram Protocol\", STD 6, RFC 768,\n               August 1980.\n \
    \  [RFC791]    Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n          \
    \     September 1981.\n   [RFC793]    Postel, J., \"Transmission Control Protocol\"\
    , STD 7, RFC\n               793, September 1981.\n   [RFC894]    Hornig, C.,\
    \ \"Standard for the Transmission of IP\n               Datagrams over Ethernet\
    \ Networks.\", RFC 894, April 1984.\n   [RFC1042]   Postel, J. and J. Reynolds,\
    \ \"Standard for the\n               Transmission of IP Datagrams Over IEEE 802\
    \ Networks\", STD\n               43, RFC 1042, February 1988.\n   [RFC1123] \
    \  Braden, R., \"Requirements for Internet Hosts -\n               Application\
    \ and Support\", RFC 1123, October 1989.\n   [RFC1874]   Levinson, E., \"SGML\
    \ Media Types\", RFC 1874, December\n               1995.\n   [RFC2003]   Perkins,\
    \ C., \"IP Encapsulation within IP\", RFC 2003,\n               October 1996.\n\
    \   [RFC2045]   Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n  \
    \             Extensions (MIME) Part One: Format of Internet Message\n       \
    \        Bodies\", RFC 2045, November 1996.\n   [RFC2119]   Bradner, S., \"Key\
    \ words for use in RFCs to Indicate\n               Requirement Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [RFC2279]   Yergeau, F., \"UTF-8, a transformation\
    \ format of ISO\n               10646\", RFC 2279, January 1998.\n   [RFC2460]\
    \   Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n              \
    \ (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC3080]   Rose, M., \"\
    The Blocks Extensible Exchange Protocol Core\",\n               RFC 3080, March\
    \ 2001.\n   [SOAP]      Box, D., Ehnebuske, D., Kakivaya, G., Layman, A.,\n  \
    \             Mendelsohn, N., Nielsen, H. F., Thatte, S. Winer, D.,\n        \
    \       \"Simple Object Access Protocol (SOAP) 1.1\" World Wide Web\n        \
    \       Consortium Note, May 2000 http://www.w3.org/TR/SOAP/\n   [XML]       Bray,\
    \ T., Paoli, J., Sperberg-McQueen, C. M., \"Extensible\n               Markup\
    \ Language (XML)\" World Wide Web Consortium\n               Recommendation REC-\
    \ xml-19980210.\n               http://www.w3.org/TR/1998/REC-xml-19980210\n"
- title: 10.  Author's Address
  contents:
  - "10.  Author's Address\n   Hugh Kennedy\n   Mimezine\n   1060 West Addison\n \
    \  Chicago, IL 60613\n   USA\n   EMail: kennedyh@engin.umich.edu\n"
- title: 11.  Full Copyright Statement
  contents:
  - "11.  Full Copyright Statement\n   Copyright (C) The Internet Society (2002).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
