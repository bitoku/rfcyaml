- title: __initial_text__
  contents:
  - '          IPv6 Transition/Coexistence Security Considerations

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The transition from a pure IPv4 network to a network where IPv4\
    \ and\n   IPv6 coexist brings a number of extra security considerations that\n\
    \   need to be taken into account when deploying IPv6 and operating the\n   dual-protocol\
    \ network and the associated transition mechanisms.  This\n   document attempts\
    \ to give an overview of the various issues grouped\n   into three categories:\n\
    \   o  issues due to the IPv6 protocol itself,\n   o  issues due to transition\
    \ mechanisms, and\n   o  issues due to IPv6 deployment.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  4\n   2.  Issues Due to IPv6 Protocol  . . . . . . . . . . . .\
    \ . . . . .  4\n     2.1.  IPv6 Protocol-Specific Issues  . . . . . . . . . .\
    \ . . . .  5\n       2.1.1.  Routing Headers and Hosts  . . . . . . . . . . .\
    \ . . .  5\n       2.1.2.  Routing Headers for Mobile IPv6 and Other Purposes\
    \ . .  6\n       2.1.3.  Site-Scope Multicast Addresses . . . . . . . . . . .\
    \ .  7\n       2.1.4.  ICMPv6 and Multicast . . . . . . . . . . . . . . . . .\
    \  7\n       2.1.5.  Bogus Errored Packets in ICMPv6 Error Messages . . . .  8\n\
    \       2.1.6.  Anycast Traffic Identification and Security  . . . . .  9\n  \
    \     2.1.7.  Address Privacy Extensions Interact with DDoS\n               Defenses\
    \ . . . . . . . . . . . . . . . . . . . . . . . 10\n       2.1.8.  Dynamic DNS:\
    \ Stateless Address Autoconfiguration,\n               Privacy Extensions, and\
    \ SEND . . . . . . . . . . . . . 10\n       2.1.9.  Extension Headers  . . . .\
    \ . . . . . . . . . . . . . . 11\n       2.1.10. Fragmentation: Reassembly and\
    \ Deep Packet\n               Inspection . . . . . . . . . . . . . . . . . . .\
    \ . . . 14\n       2.1.11. Fragmentation Related DoS Attacks  . . . . . . . .\
    \ . . 15\n       2.1.12. Link-Local Addresses and Securing Neighbor\n        \
    \       Discovery  . . . . . . . . . . . . . . . . . . . . . . 16\n       2.1.13.\
    \ Securing Router Advertisements . . . . . . . . . . . . 17\n       2.1.14. Host-to-Router\
    \ Load Sharing  . . . . . . . . . . . . . 18\n       2.1.15. Mobile IPv6  . .\
    \ . . . . . . . . . . . . . . . . . . . 18\n     2.2.  IPv4-Mapped IPv6 Addresses\
    \ . . . . . . . . . . . . . . . . 19\n     2.3.  Increased End-to-End Transparency\
    \  . . . . . . . . . . . . 20\n       2.3.1.  IPv6 Networks without NATs . . .\
    \ . . . . . . . . . . . 20\n       2.3.2.  Enterprise Network Security Model for\
    \ IPv6 . . . . . . 21\n     2.4.  IPv6 in IPv6 Tunnels . . . . . . . . . . . .\
    \ . . . . . . . 22\n   3.  Issues Due to Transition Mechanisms  . . . . . . .\
    \ . . . . . . 23\n     3.1.  IPv6 Transition/Coexistence Mechanism-Specific Issues\
    \  . . 23\n     3.2.  Automatic Tunneling and Relays . . . . . . . . . . . . .\
    \ . 23\n     3.3.  Tunneling IPv6 through IPv4 Networks May Break IPv4\n     \
    \      Network Security Assumptions . . . . . . . . . . . . . . . 24\n   4.  Issues\
    \ Due to IPv6 Deployment  . . . . . . . . . . . . . . . . 26\n     4.1.  Avoiding\
    \ the Trap of Insecure IPv6 Service Piloting  . . . 26\n     4.2.  DNS Server\
    \ Problems  . . . . . . . . . . . . . . . . . . . 28\n     4.3.  Addressing Schemes\
    \ and Securing Routers  . . . . . . . . . 28\n     4.4.  Consequences of Multiple\
    \ Addresses in IPv6 . . . . . . . . 28\n     4.5.  Deploying ICMPv6 . . . . .\
    \ . . . . . . . . . . . . . . . . 29\n       4.5.1.  Problems Resulting from ICMPv6\
    \ Transparency  . . . . . 30\n     4.6.  IPsec Transport Mode . . . . . . . .\
    \ . . . . . . . . . . . 30\n     4.7.  Reduced Functionality Devices  . . . .\
    \ . . . . . . . . . . 31\n     4.8.  Operational Factors when Enabling IPv6 in\
    \ the Network  . . 31\n     4.9.  Security Issues Due to Neighbor Discovery Proxies\
    \  . . . . 32\n   5.  Security Considerations  . . . . . . . . . . . . . . . .\
    \ . . . 32\n   6.  Acknowledgements . . . . . . . . . . . . . . . . . . . . .\
    \ . . 32\n   7.  References . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ . 33\n     7.1.  Normative References . . . . . . . . . . . . . . . . . . .\
    \ 33\n     7.2.  Informative References . . . . . . . . . . . . . . . . . . 34\n\
    \   Appendix A.  IPv6 Probing/Mapping Considerations . . . . . . . . . 37\n  \
    \ Appendix B.  IPv6 Privacy Considerations . . . . . . . . . . . . . 38\n    \
    \ B.1.  Exposing MAC Addresses . . . . . . . . . . . . . . . . . . 38\n     B.2.\
    \  Exposing Multiple Devices  . . . . . . . . . . . . . . . . 39\n     B.3.  Exposing\
    \ the Site by a Stable Prefix . . . . . . . . . . . 39\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The transition from a pure IPv4 network to a network where\
    \ IPv4 and\n   IPv6 coexist brings a number of extra security considerations that\n\
    \   need to be taken into account when deploying IPv6 and operating the\n   dual-protocol\
    \ network with its associated transition mechanisms.\n   This document attempts\
    \ to give an overview of the various issues\n   grouped into three categories:\n\
    \   o  issues due to the IPv6 protocol itself,\n   o  issues due to transition\
    \ mechanisms, and\n   o  issues due to IPv6 deployment.\n   It is important to\
    \ understand that deployments are unlikely to be\n   replacing IPv4 with IPv6\
    \ (in the short term), but rather will be\n   adding IPv6 to be operated in parallel\
    \ with IPv4 over a considerable\n   period, so that security issues with transition\
    \ mechanisms and dual\n   stack networks will be of ongoing concern.  This extended\
    \ transition\n   and coexistence period stems primarily from the scale of the\
    \ current\n   IPv4 network.  It is unreasonable to expect that the many millions\
    \ of\n   IPv4 nodes will be converted overnight.  It is more likely that it\n\
    \   will take two or three capital equipment replacement cycles (between\n   nine\
    \ and 15 years) for IPv6 capabilities to spread through the\n   network, and many\
    \ services will remain available over IPv4 only for a\n   significant period whilst\
    \ others will be offered either just on IPv6\n   or on both protocols.  To maintain\
    \ current levels of service,\n   enterprises and service providers will need to\
    \ support IPv4 and IPv6\n   in parallel for some time.\n   This document also\
    \ describes two matters that have been wrongly\n   identified as potential security\
    \ concerns for IPv6 in the past and\n   explains why they are unlikely to cause\
    \ problems: considerations\n   about probing/mapping IPv6 addresses (Appendix\
    \ A) and considerations\n   with respect to privacy in IPv6 (Appendix B).\n"
- title: 2.  Issues Due to IPv6 Protocol
  contents:
  - "2.  Issues Due to IPv6 Protocol\n   Administrators should be aware that some\
    \ of the rules suggested in\n   this section could potentially lead to a small\
    \ amount of legitimate\n   traffic being dropped because the source has made unusual\
    \ and\n   arguably unreasonable choices when generating the packet.  The IPv6\n\
    \   specification [RFC2460] contains a number of areas where choices are\n   available\
    \ to packet originators that will result in packets that\n   conform to the specification\
    \ but are unlikely to be the result of a\n   rational packet generation policy\
    \ for legitimate traffic (e.g.,\n   sending a fragmented packet in a much larger\
    \ than necessary number of\n   small segments).  This document highlights choices\
    \ that could be made\n   by malicious sources with the intention of damaging the\
    \ target host\n   or network, and suggests rules that try to differentiate\n \
    \  specification-conforming packets that are legitimate traffic from\n   conforming\
    \ packets that may be trying to subvert the specification to\n   cause damage.\
    \  The differentiation tries to offer a reasonable\n   compromise between securing\
    \ the network and passing every possible\n   conforming packet.  To avoid loss\
    \ of important traffic,\n   administrators are advised to log packets dropped\
    \ according to these\n   rules and examine these logs periodically to ensure that\
    \ they are\n   having the desired effect, and are not excluding traffic\n   inappropriately.\n\
    \   The built-in flexibility of the IPv6 protocol may also lead to\n   changes\
    \ in the boundaries between legitimate and malicious traffic as\n   identified\
    \ by these rules.  New options may be introduced in the\n   future, and rules\
    \ may need to be altered to allow the new\n   capabilities to be (legitimately)\
    \ exploited by applications.  The\n   document therefore recommends that filtering\
    \ needs to be configurable\n   to allow administrators the flexibility to update\
    \ rules as new pieces\n   of IPv6 specification are standardized.\n"
- title: 2.1.  IPv6 Protocol-Specific Issues
  contents:
  - "2.1.  IPv6 Protocol-Specific Issues\n   There are significant differences between\
    \ the features of IPv6 and\n   IPv4: some of these specification changes may result\
    \ in potential\n   security issues.  Several of these issues have been discussed\
    \ in\n   separate documents but are summarized here to avoid normative\n   references\
    \ that may not become RFCs.  The following specification-\n   related problems\
    \ have been identified, but this is not necessarily a\n   complete list.\n"
- title: 2.1.1.  Routing Headers and Hosts
  contents:
  - "2.1.1.  Routing Headers and Hosts\n   All IPv6 nodes must be able to process\
    \ routing headers [RFC2460].\n   This RFC can be interpreted, although it is not\
    \ explicitly stated, to\n   mean that all nodes (including hosts) must have this\
    \ processing\n   enabled.  The \"Requirements for Internet Hosts\" [RFC1122] permits\n\
    \   implementations to perform \"local source routing\", that is,\n   forwarding\
    \ a packet with a routing header through the same interface\n   on which it was\
    \ received: no restrictions are placed on this\n   operation even on hosts.  In\
    \ combination, these rules can result in\n   hosts forwarding received traffic\
    \ to another node if there are\n   segments left in the Routing Header when it\
    \ arrives at the host.\n   A number of potential security issues associated with\
    \ this behavior\n   have been identified.  Some of these issues have been resolved\
    \ (a\n   separate routing header (Type 2) has been standardized for Mobile\n \
    \  IPv6 [RFC3775], and ICMP Traceback has not been standardized), but\n   two\
    \ issues remain:\n   o  Both existing types of routing header can be used to evade\
    \ access\n      controls based on destination addresses.  This could be achieved\n\
    \      by sending a packet ostensibly to a publicly accessible host\n      address\
    \ but with a routing header containing a 'forbidden'\n      address.  If the publicly\
    \ accessible host is processing routing\n      headers, it will forward the packet\
    \ to the destination address in\n      the routing header that would have been\
    \ forbidden by the packet\n      filters if the address had been in the destination\
    \ field when the\n      packet was checked.\n   o  If the packet source address\
    \ can be spoofed when using a Type 0\n      routing header, the mechanism described\
    \ in the previous bullet\n      could be used with any host to mediate an anonymous\
    \ reflection\n      denial-of-service attack by having any publicly accessible\
    \ host\n      redirect the attack packets.  (This attack cannot use Type 2\n \
    \     routing headers because the packet cannot be forwarded outside the\n   \
    \   host that processes the routing header, i.e., the original\n      destination\
    \ of the packet.)\n   To counteract these threats, if a device is enforcing access\
    \ controls\n   based on destination addresses, it needs to examine both the\n\
    \   destination address in the base IPv6 header and any waypoint\n   destinations\
    \ in a routing header that have not yet been reached by\n   the packet at the\
    \ point where it is being checked.\n   Various forms of amplification attack on\
    \ routers and firewalls using\n   the routing header could be envisaged.  A simple\
    \ form involves\n   repeating the address of a waypoint several times in the routing\n\
    \   header.  More complex forms could involve alternating waypoint\n   addresses\
    \ that would result in the packet re-transiting the router or\n   firewall.  These\
    \ attacks can be counteracted by ensuring that routing\n   headers do not contain\
    \ the same waypoint address more than once, and\n   performing ingress/egress\
    \ filtering to check that the source address\n   is appropriate to the destination:\
    \ packets made to reverse their path\n   will fail this test.\n"
- title: 2.1.2.  Routing Headers for Mobile IPv6 and Other Purposes
  contents:
  - "2.1.2.  Routing Headers for Mobile IPv6 and Other Purposes\n   In addition to\
    \ the basic Routing Header (Type 0), which is intended\n   to influence the trajectory\
    \ of a packet through a network by\n   specifying a sequence of router waypoints,\
    \ Routing Header (Type 2)\n   has been defined as part of the Mobile IPv6 specifications\
    \ in\n   [RFC3775].  The Type 2 Routing Header is intended for use by hosts to\n\
    \   handle 'interface local' forwarding needed when packets are sent to\n   the\
    \ care-of address of a mobile node that is away from its home\n   address.\n \
    \  It is important that nodes treat the different types of routing\n   header\
    \ appropriately.  It should be possible to apply separate\n   filtering rules\
    \ to the different types of Routing Header.  By design,\n   hosts must process\
    \ Type 2 Routing Headers to support Mobile IPv6 but\n   routers should not: to\
    \ avoid the issues in Section 2.1.1, it may be\n   desirable to forbid or limit\
    \ the processing of Type 0 Routing Headers\n   in hosts and some routers.\n  \
    \ Routing Headers are an extremely powerful and general capability.\n   Alternative\
    \ future uses of Routing Headers need to be carefully\n   assessed to ensure that\
    \ they do not open new avenues of attack that\n   can be exploited.\n"
- title: 2.1.3.  Site-Scope Multicast Addresses
  contents:
  - "2.1.3.  Site-Scope Multicast Addresses\n   IPv6 supports multicast addresses\
    \ with site scope that can\n   potentially allow an attacker to identify certain\
    \ important resources\n   on the site if misused.\n   Particular examples are\
    \ the 'all routers' (FF05::2) and 'all Dynamic\n   Host Configuration Protocol\
    \ (DHCP) servers' (FF05::1:3) addresses\n   defined in [RFC2375].  An attacker\
    \ that is able to infiltrate a\n   message destined for these addresses on to\
    \ the site will potentially\n   receive in return information identifying key\
    \ resources on the site.\n   This information can then be the target of directed\
    \ attacks ranging\n   from simple flooding to more specific mechanisms designed\
    \ to subvert\n   the device.\n   Some of these addresses have current legitimate\
    \ uses within a site.\n   The risk can be minimized by ensuring that all firewalls\
    \ and site\n   boundary routers are configured to drop packets with site-scope\n\
    \   destination addresses.  Also, nodes should not join multicast groups\n   for\
    \ which there is no legitimate use on the site, and site routers\n   should be\
    \ configured to drop packets directed to these unused\n   addresses.\n"
- title: 2.1.4.  ICMPv6 and Multicast
  contents:
  - "2.1.4.  ICMPv6 and Multicast\n   It is possible to launch a Denial-of-Service\
    \ (DoS) attack using IPv6\n   that could be amplified by the multicast infrastructure.\n\
    \   Unlike ICMP for IPv4, ICMPv6 [RFC4443] allows error notification\n   responses\
    \ to be sent when certain unprocessable packets are sent to\n   multicast addresses.\n\
    \   The cases in which responses are sent are:\n   o  The received packet is longer\
    \ than the next link Maximum\n      Transmission Unit (MTU): 'Packet Too Big'\
    \ responses are needed to\n      support Path MTU Discovery for multicast traffic.\n\
    \   o  The received packet contains an unrecognized option in a hop-by-\n    \
    \  hop or destination options extension header with the first two\n      bits\
    \ of the option type set to binary '10': 'Parameter Problem'\n      responses\
    \ are intended to inform the source that some or all of\n      the recipients\
    \ cannot handle the option in question.\n   If an attacker can craft a suitable\
    \ packet sent to a multicast\n   destination, it may be possible to elicit multiple\
    \ responses directed\n   at the victim (the spoofed source of the multicast packet).\
    \  On the\n   other hand, the use of 'reverse path forwarding' checks (to eliminate\n\
    \   loops in multicast forwarding) automatically limits the range of\n   addresses\
    \ that can be spoofed.\n   In practice, an attack using oversize packets is unlikely\
    \ to cause\n   much amplification unless the attacker is able to carefully tune\
    \ the\n   packet size to exploit a network with smaller MTU in the edge than\n\
    \   the core.  Similarly, a packet with an unrecognized hop-by-hop option\n  \
    \ would be dropped by the first router without resulting in multiple\n   responses.\
    \  However, a packet with an unrecognized destination option\n   could generate\
    \ multiple responses.\n   In addition to amplification, this kind of attack would\
    \ potentially\n   consume large amounts of forwarding state resources in routers\
    \ on\n   multicast-enabled networks.\n"
- title: 2.1.5.  Bogus Errored Packets in ICMPv6 Error Messages
  contents:
  - "2.1.5.  Bogus Errored Packets in ICMPv6 Error Messages\n   Apart from the spurious\
    \ load on the network, routers, and hosts,\n   bogus ICMPv6 error messages (types\
    \ 0 to 127) containing a spoofed\n   errored packet can impact higher-layer protocols\
    \ when the alleged\n   errored packet is referred to the higher layer at the destination\
    \ of\n   the ICMPv6 packet [RFC4443].  The potentially damaging effects on TCP\n\
    \   connections, and some ways to mitigate the threats, are documented in\n  \
    \ [ICMP-ATT].\n   Specific countermeasures for particular higher-layer protocols\
    \ are\n   beyond the scope of this document, but firewalls may be able to help\n\
    \   counter the threat by inspecting the alleged errored packet embedded\n   in\
    \ the ICMPv6 error message.  Measures to mitigate the threat\n   include:\n  \
    \ o  The receiving host should test that the embedded packet is all or\n     \
    \ part of a packet that was transmitted by the host.\n   o  The firewall may be\
    \ able to test that the embedded packet contains\n      addresses that would have\
    \ been legitimate (i.e., would have passed\n      ingress/egress filtering) for\
    \ a packet sent from the receiving\n      host, but the possibility of asymmetric\
    \ routing of the outgoing\n      and returning packets may prevent this sort of\
    \ test depending on\n      the topology of the network, the location of the firewall,\
    \ and\n      whether state synchronization between firewalls is in use.\n   o\
    \  If the firewall is stateful and the test is not prevented by\n      asymmetric\
    \ routing, the firewall may also be able to check that\n      the embedded packet\
    \ is all or part of a packet that recently\n      transited the firewall in the\
    \ opposite direction.\n   o  Firewalls and destination hosts should be suspicious\
    \ of ICMPv6\n      error messages with unnecessarily truncated errored packets\
    \ (e.g.,\n      those that only carry the address fields of the IPv6 base header).\n\
    \      The specification of ICMPv6 requires that error messages carry as\n   \
    \   much of the errored packet as possible (unlike ICMP for IPv4 which\n     \
    \ requires only a minimum amount of the errored packet) and IPv6\n      networks\
    \ must have a guaranteed minimum MTU of 1280 octets.\n      Accordingly, the ICMPv6\
    \ message should normally carry all the\n      header fields of the errored packet,\
    \ together with a significant\n      amount of the payload, in order to allow\
    \ robust comparison against\n      the outgoing packet.\n"
- title: 2.1.6.  Anycast Traffic Identification and Security
  contents:
  - "2.1.6.  Anycast Traffic Identification and Security\n   IPv6 introduces the notion\
    \ of anycast addresses and services.\n   Originally the IPv6 standards disallowed\
    \ using an anycast address as\n   the source address of a packet.  Responses from\
    \ an anycast server\n   would therefore supply a unicast address for the responding\
    \ server.\n   To avoid exposing knowledge about the internal structure of the\n\
    \   network, it is recommended that anycast servers now take advantage of\n  \
    \ the ability to return responses with the anycast address as the\n   source address\
    \ if possible.\n   If the server needs to use a unicast address for any reason,\
    \ it may\n   be desirable to consider using specialized addresses for anycast\n\
    \   servers, which are not used for any other part of the network, to\n   restrict\
    \ the information exposed.  Alternatively, operators may wish\n   to restrict\
    \ the use of anycast services from outside the domain, thus\n   requiring firewalls\
    \ to filter anycast requests.  For this purpose,\n   firewalls need to know which\
    \ addresses are being used for anycast\n   services: these addresses are arbitrary\
    \ and not distinguishable from\n   any other IPv6 unicast address by structure\
    \ or pattern.\n   One particular class of anycast addresses that should be given\n\
    \   special attention is the set of Subnet-Router anycast addresses\n   defined\
    \ in \"IP Version 6 Addressing Architecture\" [RFC4291].  All\n   routers are\
    \ required to support these addresses for all subnets for\n   which they have\
    \ interfaces.  For most subnets using global unicast\n   addresses, filtering\
    \ anycast requests to these addresses can be\n   achieved by dropping packets\
    \ with the lower 64 bits (the Interface\n   Identifier) set to all zeros.\n"
- title: 2.1.7.  Address Privacy Extensions Interact with DDoS Defenses
  contents:
  - "2.1.7.  Address Privacy Extensions Interact with DDoS Defenses\n   The purpose\
    \ of the privacy extensions for stateless address\n   autoconfiguration [RFC4941]\
    \ is to change the interface identifier\n   (and hence the global scope addresses\
    \ generated from it) from time to\n   time.  By varying the addresses used, eavesdroppers\
    \ and other\n   information collectors find it more difficult to identify which\n\
    \   transactions actually relate to a specific node.\n   A security issue may\
    \ result from this if the frequency of node\n   address change is sufficiently\
    \ great to achieve the intended aim of\n   the privacy extensions: with a relatively\
    \ high rate of change, the\n   observed behavior has some characteristics of a\
    \ node or nodes\n   involved in a Distributed Denial-of-Service (DDoS) attack.\
    \  It should\n   be noted, however, that addresses created in this way are\n \
    \  topologically correct and that the other characteristics of the\n   traffic\
    \ may reveal that there is no malicious intent.\n   This issue can be addressed\
    \ in most cases by tuning the rate of\n   change in an appropriate manner.\n \
    \  Note that even if a node is well behaved, a change in the address\n   could\
    \ make it harder for a security administrator to define an\n   address-based policy\
    \ rule (e.g., access control list).  However,\n   nodes that employ privacy addresses\
    \ do not have to use them for all\n   communications.\n"
- title: '2.1.8.  Dynamic DNS: Stateless Address Autoconfiguration, Privacy'
  contents:
  - "2.1.8.  Dynamic DNS: Stateless Address Autoconfiguration, Privacy\n        Extensions,\
    \ and SEND\n   The introduction of Stateless Address Autoconfiguration (SLAAC)\n\
    \   [RFC2462] with IPv6 provides an additional challenge to the security\n   of\
    \ Dynamic Domain Name System (DDNS).  With manual addressing or the\n   use of\
    \ DHCP, the number of security associations that need to be\n   maintained to\
    \ secure access to the Domain Name Service (DNS) server\n   is limited, assuming\
    \ any necessary updates are carried out by the\n   DHCP server.  This is true\
    \ equally for IPv4 and IPv6.\n   Since SLAAC does not make use of a single and\
    \ potentially trusted\n   DHCP server, but depends on the node obtaining the address,\
    \ securing\n   the insertion of updates into DDNS may need a security association\n\
    \   between each node and the DDNS server.  This is discussed further in\n   [RFC4472].\n\
    \   Using the Privacy Extensions to SLAAC [RFC4941] may significantly\n   increase\
    \ the rate of updates of DDNS.  Even if a node using the\n   Privacy Extensions\
    \ does not publish its address for 'forward' lookup\n   (as that would effectively\
    \ compromise the privacy that it is\n   seeking), it may still need to update\
    \ the reverse DNS records.  If\n   the reverse DNS records are not updated, servers\
    \ that perform reverse\n   DNS checks will not accept connections from the node\
    \ and it will not\n   be possible to gain access to IP Security (IPsec) keying\
    \ material\n   stored in DNS [RFC4025].  If the rate of change needed to achieve\n\
    \   real privacy has to be increased (see Section 2.1.7), the update rate\n  \
    \ for DDNS may be excessive.\n   Similarly, the cryptographically generated addresses\
    \ used by SEND\n   [RFC3971] are expected to be periodically regenerated in line\
    \ with\n   recommendations for maximum key lifetimes.  This regeneration could\n\
    \   also impose a significant extra load on DDNS.\n"
- title: 2.1.9.  Extension Headers
  contents:
  - "2.1.9.  Extension Headers\n   A number of security issues relating to IPv6 Extension\
    \ headers have\n   been identified.  Several of these are a result of ambiguous\
    \ or\n   incomplete specification in the base IPv6 specification [RFC2460].\n"
- title: 2.1.9.1.  Processing Extension Headers in Middleboxes
  contents:
  - "2.1.9.1.  Processing Extension Headers in Middleboxes\n   In IPv4, deep packet\
    \ inspection techniques are used to implement\n   policing and filtering both\
    \ as part of routers and in middleboxes\n   such as firewalls.  Fully extending\
    \ these techniques to IPv6 would\n   require inspection of all the extension headers\
    \ in a packet.  This is\n   essential to ensure that policy constraints on the\
    \ use of certain\n   headers and options are enforced and to remove, at the earliest\n\
    \   opportunity, packets containing potentially damaging unknown options.\n  \
    \ This requirement appears to conflict with Section 4 of the IPv6\n   specification\
    \ in [RFC2460] which requires that only hop-by-hop\n   options are processed at\
    \ any node through which the packet passes\n   until the packet reaches the appropriate\
    \ destination (either the\n   final destination or a routing header waypoint).\n\
    \   Also, [RFC2460] forbids processing the headers other than in the\n   order\
    \ in which they appear in the packet.\n   A further ambiguity relates to whether\
    \ an intermediate node should\n   discard a packet that contains a header or destination\
    \ option which\n   it does not recognize.  If the rules above are followed slavishly,\
    \ it\n   is not (or may not be) legitimate for the intermediate node to\n   discard\
    \ the packet because it should not be processing those headers\n   or options.\n\
    \   Therefore, [RFC2460] does not appear to take account of the behavior\n   of\
    \ middleboxes and other non-final destinations that may be\n   inspecting the\
    \ packet, and thereby potentially limits the security\n   protection of these\
    \ boxes.  Firewall vendors and administrators may\n   choose to ignore these rules\
    \ in order to provide enhanced security as\n   this does not appear to have any\
    \ serious consequences with the\n   currently defined set of extensions.  However,\
    \ administrators should\n   be aware that future extensions might require different\
    \ treatment.\n"
- title: 2.1.9.2.  Processing Extension Header Chains
  contents:
  - "2.1.9.2.  Processing Extension Header Chains\n   There is a further problem for\
    \ middleboxes that want to examine the\n   transport headers that are located\
    \ at the end of the IPv6 header\n   chain.  In order to locate the transport header\
    \ or other protocol\n   data unit, the node has to parse the header chain.\n \
    \  The IPv6 specification [RFC2460] does not mandate the use of the\n   Type-Length-Value\
    \ (TLV) format with a fixed layout for the start of\n   each header although it\
    \ is used for the majority of headers currently\n   defined.  (Only the Type field\
    \ is guaranteed in size and offset.)\n   Therefore, a middlebox cannot guarantee\
    \ to be able to process header\n   chains that may contain headers defined after\
    \ the box was\n   manufactured.  As discussed further in Section 2.1.9.3, middleboxes\n\
    \   ought not to have to know the detailed layout of all header types in\n   use\
    \ but still need to be able to skip over such headers to find the\n   transport\
    \ payload start.  If this is not possible, it either limits\n   the security policy\
    \ that can be applied in firewalls or makes it\n   difficult to deploy new extension\
    \ header types.\n   At the time of writing, only the Fragment Header does not\
    \ fully\n   conform to the TLV format used for other extension headers.  In\n\
    \   practice, many firewalls reconstruct fragmented packets before\n   performing\
    \ deep packet inspection, so this divergence is less\n   problematic than it might\
    \ have been, and is at least partially\n   justified because the full header chain\
    \ is not present in all\n   fragments.\n   Hop-by-hop and destination options\
    \ may also contain unknown options.\n   However, the options are required to be\
    \ encoded in TLV format so that\n   intermediate nodes can skip over them during\
    \ processing, unlike the\n   enclosing extension headers.\n"
- title: 2.1.9.3.  Unknown Headers/Destination Options and Security Policy
  contents:
  - "2.1.9.3.  Unknown Headers/Destination Options and Security Policy\n   A strict\
    \ security policy might dictate that packets containing either\n   unknown headers\
    \ or destination options are discarded by firewalls or\n   other filters.  This\
    \ requires the firewall to process the whole\n   extension header chain, which\
    \ may be currently in conflict with the\n   IPv6 specification as discussed in\
    \ Section 2.1.9.1.\n   Even if the firewall does inspect the whole header chain,\
    \ it may not\n   be sensible to discard packets with items unrecognized by the\n\
    \   firewall: the intermediate node has no knowledge of which options and\n  \
    \ headers are implemented in the destination node and IPv6 has been\n   deliberately\
    \ designed to be extensible through adding new header\n   options.  This poses\
    \ a dilemma for firewall administrators.  On the\n   one hand, admitting packets\
    \ with 'unknown' options is a security\n   risk, but dropping them may disable\
    \ a useful new extension.  The best\n   compromise appears to be to select firewalls\
    \ that provide a\n   configurable discard policy based on the types of the extensions.\n\
    \   Then, if a new extension is standardized, administrators can\n   reconfigure\
    \ firewalls to pass packets with legitimate items that they\n   would otherwise\
    \ not recognize because their hardware or software is\n   not aware of a new definition.\
    \  Provided that the new extensions\n   conform to the TLV layout followed by\
    \ current extensions, the\n   firewall would not need detailed knowledge of the\
    \ function or layout\n   of the extension header.\n"
- title: 2.1.9.4.  Excessive Hop-by-Hop Options
  contents:
  - "2.1.9.4.  Excessive Hop-by-Hop Options\n   IPv6 does not limit the number of\
    \ hop-by-hop options that can be\n   present in a hop-by-hop option header, and\
    \ any option can appear\n   multiple times.  The lack of a limit and the provision\
    \ of\n   extensibility bits that force nodes to ignore classes of options that\n\
    \   they do not understand can be used to mount denial-of-service attacks\n  \
    \ affecting all nodes on a path.  A packet with large numbers of\n   unknown hop-by-hop\
    \ options will be processed at every node through\n   which it is forwarded, consuming\
    \ significant resources to determine\n   what action should be taken for each\
    \ option.  Current options with\n   the exception of Pad1 and PadN should not\
    \ appear more than once so\n   that packets with inappropriately repeated options\
    \ can be dropped.\n   However, keeping track of which options have been seen adds\n\
    \   complexity to firewalls and may not apply to future extensions.  See\n   Section\
    \ 2.1.9.3 for a discussion of the advisability of dropping\n   packets with unknown\
    \ options in firewalls.\n"
- title: 2.1.9.5.  Misuse of Pad1 and PadN Options
  contents:
  - "2.1.9.5.  Misuse of Pad1 and PadN Options\n   IPv6 allows multiple padding options\
    \ of arbitrary sizes to be placed\n   in both Hop-by-Hop and Destination option\
    \ headers.\n   PadN options are required to contain zero octets as 'payload';\
    \ there\n   is, however, no incentive for receivers to check this.  It may\n \
    \  therefore be possible to use the 'payload' of padding options as a\n   covert\
    \ channel.  Firewalls and receiving hosts should actively check\n   that PadN\
    \ only has zero octets in its 'payload'.\n   There is no legitimate reason for\
    \ padding beyond the next eight octet\n   boundary since the whole option header\
    \ is aligned on an eight-octet\n   boundary but cannot be guaranteed to be on\
    \ a 16 (or higher power of\n   two)-octet boundary.  The IPv6 specification allows\
    \ multiple Pad1 and\n   PadN options to be combined in any way that the source\
    \ chooses to\n   make up the required padding.  Reasonable design choices would\
    \ appear\n   to be using however many Pad1 options (i.e., zero octets) are needed\n\
    \   or using a single PadN option of the required size (from two up to\n   seven\
    \ octets).  Administrators should consider at least logging\n   unusual padding\
    \ patterns, and may consider dropping packets that\n   contain unusual patterns\
    \ if they are certain of expected source\n   behavior.\n"
- title: 2.1.9.6.  Overuse of Router Alert Option
  contents:
  - "2.1.9.6.  Overuse of Router Alert Option\n   The IPv6 router alert option specifies\
    \ a hop-by-hop option that, if\n   present, signals the router to take a closer\
    \ look at the packet.\n   This can be used for denial-of-service attacks.  By\
    \ sending a large\n   number of packets containing a router alert option, an attacker\
    \ can\n   deplete the processor cycles on the routers available to legitimate\n\
    \   traffic.\n"
- title: '2.1.10.  Fragmentation: Reassembly and Deep Packet Inspection'
  contents:
  - "2.1.10.  Fragmentation: Reassembly and Deep Packet Inspection\n   The current\
    \ specifications of IPv6 in [RFC2460] do not mandate any\n   minimum packet size\
    \ for the fragments of a packet before the last\n   one, except for the need to\
    \ carry the unfragmentable part in all\n   fragments.\n   The unfragmentable part\
    \ does not include the transport port numbers,\n   so it is possible that the\
    \ first fragment does not contain sufficient\n   information to carry out deep\
    \ packet inspection involving the port\n   numbers.\n   Packets with overlapping\
    \ fragments are considered to be a major\n   security risk, but the reassembly\
    \ rules for fragmented packets in\n   [RFC2460] do not mandate behavior that would\
    \ minimize the effects of\n   overlapping fragments.\n   In order to ensure that\
    \ deep packet inspection can be carried out\n   correctly on fragmented packets,\
    \ many firewalls and other nodes that\n   use deep packet inspection will collect\
    \ the fragments and reassemble\n   the packet before examining it.  Depending\
    \ on the implementation of\n   packet reassembly and the treatment of packet fragments\
    \ in these\n   nodes, the specification issues mentioned potentially leave IPv6\
    \ open\n   to the sort of attacks described in [RFC1858] and [RFC3128] for IPv4.\n\
    \   The following steps can be taken to mitigate these threats:\n   o  Although\
    \ permitted in [RFC2460], there is no reason for a source\n      to generate overlapping\
    \ packet fragments, and overlaps could be\n      prohibited in a future revision\
    \ of the protocol specification.\n      Firewalls should drop all packets with\
    \ overlapped fragments:\n      certain implementations both in firewalls and other\
    \ nodes already\n      drop such packets.\n   o  Specifying a minimum size for\
    \ packet fragments does not help in\n      the same way as it does for IPv4 because\
    \ IPv6 extension headers\n      can be made to appear very long: an attacker could\
    \ insert one or\n      more undefined destination options with long lengths and\
    \ the\n      'ignore if unknown' bit set.  Given the guaranteed minimum MTU of\n\
    \      IPv6, it seems reasonable that hosts should be able to ensure that\n  \
    \    the transport port numbers are in the first fragment in almost all\n    \
    \  cases and that deep packet inspection should be very suspicious of\n      first\
    \ fragments that do not contain them (see also the discussion\n      of fragment\
    \ sizes in Section 2.1.11).\n"
- title: 2.1.11.  Fragmentation Related DoS Attacks
  contents:
  - "2.1.11.  Fragmentation Related DoS Attacks\n   Packet reassembly in IPv6 hosts\
    \ also opens up the possibility of\n   various fragment-related security attacks.\
    \  Some of these are\n   analogous to attacks identified for IPv4.  Of particular\
    \ concern is a\n   DoS attack based on sending large numbers of small fragments\
    \ without\n   a terminating last fragment that would potentially overload the\n\
    \   reconstruction buffers and consume large amounts of CPU resources.\n   Mandating\
    \ the size of packet fragments could reduce the impact of\n   this kind of attack\
    \ by limiting the rate at which fragments could\n   arrive and limiting the number\
    \ of fragments that need to be\n   processed, but this is not currently specified\
    \ by the IPv6 standard.\n   In practice, reasonable design choices in protocol\
    \ stacks are likely\n   to either maximize the size of all fragments except the\
    \ final one\n   using the path MTU (most likely choice), or distribute the data\n\
    \   evenly in the required minimum number of fragments.  In either case,\n   the\
    \ smallest non-final fragment would be at least half the guaranteed\n   minimum\
    \ MTU (640 octets) -- the worst case arises when a payload is\n   just too large\
    \ for a single packet and is divided approximately\n   equally between two packets.\
    \  Administrators should consider\n   configuring firewalls and hosts to drop\
    \ non-final fragments smaller\n   than 640 octets.\n"
- title: 2.1.12.  Link-Local Addresses and Securing Neighbor Discovery
  contents:
  - "2.1.12.  Link-Local Addresses and Securing Neighbor Discovery\n   All IPv6 nodes\
    \ are required to configure a link-local address on each\n   interface.  This\
    \ address is used to communicate with other nodes\n   directly connected to the\
    \ link accessed via the interface, especially\n   during the neighbor discovery\
    \ and autoconfiguration processes.  Link-\n   local addresses are fundamental\
    \ to the operation of the Neighbor\n   Discovery Protocol (NDP) [RFC2461] and\
    \ Stateless Address\n   Autoconfiguration (SLAAC) [RFC2462].  NDP also provides\
    \ the\n   functionality of associating link-layer and IP addresses provided by\n\
    \   the Address Resolution Protocol (ARP) in IPv4 networks.\n   The standard version\
    \ of NDP is subject to a number of security\n   threats related to ARP spoofing\
    \ attacks on IPv4.  These threats are\n   documented in [RFC3756], and mechanisms\
    \ to combat them are specified\n   in SEcure Neighbor Discovery (SEND) [RFC3971].\
    \  SEND is an optional\n   mechanism that is particularly applicable to wireless\
    \ and other\n   environments where it is difficult to physically secure the link.\n\
    \   Because the link-local address can, by default, be acquired without\n   external\
    \ intervention or control, it allows an attacker to commence\n   communication\
    \ on the link without needing to acquire information\n   about the address prefixes\
    \ in use or communicate with any authorities\n   on the link.  This feature gives\
    \ a malicious node the opportunity to\n   mount an attack on any other node that\
    \ is attached to this link; this\n   vulnerability exists in addition to possible\
    \ direct attacks on NDP.\n   Link-local addresses may also facilitate the unauthorized\
    \ use of the\n   link bandwidth ('bandwidth theft') to communicate with another\n\
    \   unauthorized node on the same link.\n   The vulnerabilities of IPv6 link-local\
    \ addresses in NDP can be\n   mitigated in several ways.  A general solution will\
    \ require\n   o  authenticating the link-layer connectivity, for example, by using\n\
    \      IEEE 802.1X functionality [IEEE.802-1X] or physical security, and\n   o\
    \  using SEcure Neighbor Discovery (SEND) to create a\n      cryptographically\
    \ generated link-local address (as described in\n      [RFC3971]) that is tied\
    \ to the authenticated link-layer address.\n   This solution would be particularly\
    \ appropriate in wireless LAN\n   deployments where it is difficult to physically\
    \ secure the\n   infrastructure, but it may not be considered necessary in wired\n\
    \   environments where the physical infrastructure can be kept secure by\n   other\
    \ means.\n   Limiting the potentiality for abuse of link-local addresses in\n\
    \   general packet exchanges is more problematic because there may be\n   circumstances,\
    \ such as isolated networks, where usage is appropriate\n   and discrimination\
    \ between use and abuse requires complex filtering\n   rules which have to be\
    \ implemented on hosts.  The risk of misuse may\n   be deemed too small compared\
    \ with the effort needed to control it,\n   but special attention should be paid\
    \ to tunnel end-points (see 2.4,\n   3.2, and 3.3).\n   Any filtering has to be\
    \ provided by a host-based or bridging\n   firewall.  In general, link-local addresses\
    \ are expected to be used\n   by applications that are written to deal with specific\
    \ interfaces and\n   links.  Typically these applications are used for control\
    \ and\n   management.  A node which is attached to multiple links has to deal\n\
    \   with the potentially overlapping link-local address spaces associated\n  \
    \ with these links.  IPv6 provides for this through zone identifiers\n   that\
    \ are used to discriminate between the different address scopes\n   [RFC4007]\
    \ and the scope identifier that can be associated with a\n   socket address structure\
    \ [RFC3493].  Most users are unfamiliar with\n   these issues and general purpose\
    \ applications are not intended to\n   handle this kind of discrimination. link-local\
    \ addresses are not\n   normally used with the Domain Name System (DNS), and DNS\
    \ cannot\n   supply zone identifiers.  If it is considered necessary to prevent\n\
    \   the use of link-local addresses by means other than control and\n   management\
    \ protocols, administrators may wish to consider limiting\n   the protocols that\
    \ can be used with link-local addresses.  At a\n   minimum, ICMPv6 and any intra-domain\
    \ routing protocol in use (such as\n   Open Shortest Path First (OSPF) or Routing\
    \ Information Protocol\n   (RIP)) need to be allowed, but other protocols may\
    \ also be needed.\n   RIP illustrates the complexity of the filtering problem:\
    \ its messages\n   are encapsulated as User Datagram Protocol (UDP) payloads,\
    \ and\n   filtering needs to distinguish RIP messages addressed to UDP port 521\n\
    \   from other UDP messages.\n"
- title: 2.1.13.  Securing Router Advertisements
  contents:
  - "2.1.13.  Securing Router Advertisements\n   As part of the Neighbor Discovery\
    \ process, routers on a link\n   advertise their capabilities in Router Advertisement\
    \ messages.  The\n   version of NDP defined in [RFC2461] does not protect the\
    \ integrity of\n   these messages or validate the assertions made in the messages\
    \ with\n   the result that any node that connects to the link can maliciously\n\
    \   claim to offer routing services that it will not fulfill, and\n   advertise\
    \ inappropriate prefixes and parameters.  These threats have\n   been documented\
    \ in [RFC3756].\n   A malicious node may also be able to carry out a DoS attack\
    \ by\n   deprecating an established valid prefix (by advertising it with a\n \
    \  zero lifetime).  Similar DoS attacks are possible if the optional\n   Router\
    \ Selection mechanism is implemented as described in the\n   security considerations\
    \ of [RFC4191].\n   SEND [RFC3971] can be used to provide verification that routers\
    \ are\n   authorized to provide the services they advertise through a\n   certificate-based\
    \ mechanism.  This capability of SEND is also\n   particularly appropriate for\
    \ wireless environments where clients are\n   reliant on the assertions of the\
    \ routers rather than a physically\n   secured connection.\n"
- title: 2.1.14.  Host-to-Router Load Sharing
  contents:
  - "2.1.14.  Host-to-Router Load Sharing\n   If a host deploys the optional host-to-router\
    \ load-sharing mechanism\n   [RFC4311], a malicious application could carry out\
    \ a DoS attack on\n   one or more of the load-sharing routers if the application\
    \ is able to\n   use knowledge of the load-sharing algorithm to synthesize traffic\n\
    \   that subverts the load-sharing algorithm and directs a large volume\n   of\
    \ bogus traffic towards a subset of the routers.  The likelihood of\n   such an\
    \ attack can be reduced if the implementation uses a\n   sufficiently sophisticated\
    \ load sharing algorithm as described in the\n   security considerations of [RFC4311].\n"
- title: 2.1.15.  Mobile IPv6
  contents:
  - "2.1.15.  Mobile IPv6\n   Mobile IPv6 offers significantly enhanced security compared\
    \ with\n   Mobile IPv4 especially when using optimized routing and care-of\n \
    \  addresses.  Return routability checks are used to provide relatively\n   robust\
    \ assurance that the different addresses that a mobile node uses\n   as it moves\
    \ through the network do indeed all refer to the same node.\n   The threats and\
    \ solutions are described in [RFC3775], and a more\n   extensive discussion of\
    \ the security aspects of the design can be\n   found in [RFC4225].\n"
- title: 2.1.15.1.  Obsolete Home Address Option in Mobile IPv6
  contents:
  - "2.1.15.1.  Obsolete Home Address Option in Mobile IPv6\n   The Home Address option\
    \ specified in early versions of Mobile IPv6\n   would have allowed a trivial\
    \ source spoofing attack: hosts were\n   required to substitute the source address\
    \ of incoming packets with\n   the address in the option, thereby potentially\
    \ evading checks on the\n   packet source address.  The version of Mobile IPv6\
    \ as standardized in\n   [RFC3775] has removed this issue by ensuring that the\
    \ Home Address\n   destination option is only processed if there is a corresponding\n\
    \   binding cache entry and securing Binding Update messages.\n   A number of\
    \ pre-standard implementations of Mobile IPv6 were\n   available that implemented\
    \ this obsolete and insecure option: care\n   should be taken to avoid running\
    \ such obsolete systems.\n"
- title: 2.2.  IPv4-Mapped IPv6 Addresses
  contents:
  - "2.2.  IPv4-Mapped IPv6 Addresses\n   Overloaded functionality is always a double-edged\
    \ sword: it may yield\n   some deployment benefits, but often also incurs the\
    \ price that comes\n   with ambiguity.\n   One example of such is IPv4-mapped\
    \ IPv6 addresses (::ffff/96): a\n   representation of an IPv4 address as an IPv6\
    \ address inside an\n   operating system as defined in [RFC3493].  Since the original\n\
    \   specification, the use of IPv4-mapped addresses has been extended to\n   a\
    \ transition mechanism, Stateless IP/ICMP Translation algorithm\n   (SIIT) [RFC2765],\
    \ where they are potentially used in the addresses of\n   packets on the wire.\n\
    \   Therefore, it becomes difficult to unambiguously discern whether an\n   IPv4\
    \ mapped address is really an IPv4 address represented in the IPv6\n   address\
    \ format (basic API behavior) *or* an IPv6 address received\n   from the wire\
    \ (which may be subject to address forgery, etc.).  (SIIT\n   behavior).  The\
    \ security issues that arise from the ambiguous\n   behavior when IPv4-mapped\
    \ addresses are used on the wire include:\n   o  If an attacker transmits an IPv6\
    \ packet with ::ffff:127.0.0.1 in\n      the IPv6 source address field, he might\
    \ be able to bypass a node's\n      access controls by deceiving applications\
    \ into believing that the\n      packet is from the node itself (specifically,\
    \ the IPv4 loopback\n      address, 127.0.0.1).  The same attack might be performed\
    \ using the\n      node's IPv4 interface address instead.\n   o  If an attacker\
    \ transmits an IPv6 packet with IPv4-mapped addresses\n      in the IPv6 destination\
    \ address field corresponding to IPv4\n      addresses inside a site's security\
    \ perimeter (e.g., ::ffff:\n      10.1.1.1), he might be able to bypass IPv4 packet\
    \ filtering rules\n      and traverse a site's firewall.\n   o  If an attacker\
    \ transmits an IPv6 packet with IPv4-mapped addresses\n      in the IPv6 source\
    \ and destination fields to a protocol that swaps\n      IPv6 source and destination\
    \ addresses, he might be able to use a\n      node as a proxy for certain types\
    \ of attacks.  For example, this\n      might be used to construct broadcast multiplication\
    \ and proxy TCP\n      port scan attacks.\n   In addition, special cases like\
    \ these, while giving deployment\n   benefits in some areas, require a considerable\
    \ amount of code\n   complexity (e.g., in the implementations of bind() system\
    \ calls and\n   reverse DNS lookups) that is probably undesirable but can be managed\n\
    \   in this case.\n   In practice, although the packet translation mechanisms\
    \ of SIIT are\n   specified for use in \"Network Address Translator - Protocol\n\
    \   Translator (NAT-PT)\" [RFC2766], NAT-PT uses a mechanism different\n   from\
    \ IPv4-mapped IPv6 addresses for communicating embedded IPv4\n   addresses in\
    \ IPv6 addresses.  Also, SIIT is not recommended for use\n   as a standalone transition\
    \ mechanism.  Given the issues that have\n   been identified, it seems appropriate\
    \ that mapped addresses should\n   not be used on the wire.  However, changing\
    \ application behavior by\n   deprecating the use of mapped addresses in the operating\
    \ system\n   interface would have significant impact on application porting\n\
    \   methods as described in [RFC4038], and it is expected that IPv4-\n   mapped\
    \ IPv6 addresses will continue to be used within the API to aid\n   application\
    \ portability.\n   Using the basic API behavior has some security implications\
    \ in that\n   it adds additional complexity to address-based access controls.\
    \  The\n   main issue that arises is that an IPv6 (AF_INET6) socket will accept\n\
    \   IPv4 packets even if the node has no IPv4 (AF_INET) sockets open.\n   This\
    \ has to be taken into account by application developers and may\n   allow a malicious\
    \ IPv4 peer to access a service even if there are no\n   open IPv4 sockets.  This\
    \ violates the security principle of \"least\n   surprise\".\n"
- title: 2.3.  Increased End-to-End Transparency
  contents:
  - "2.3.  Increased End-to-End Transparency\n   One of the major design aims of IPv6\
    \ has been to maintain the\n   original IP architectural concept of end-to-end\
    \ transparency.\n   Transparency can help foster technological innovation in areas\
    \ such\n   as peer-to-peer communication, but maintaining the security of the\n\
    \   network at the same time requires some modifications in the network\n   architecture.\
    \  Ultimately, it is also likely to need changes in the\n   security model as\
    \ compared with the norms for IPv4 networks.\n"
- title: 2.3.1.  IPv6 Networks without NATs
  contents:
  - "2.3.1.  IPv6 Networks without NATs\n   The necessity of introducing Network Address\
    \ Translators (NATs) into\n   IPv4 networks, resulting from a shortage of IPv4\
    \ addresses, has\n   removed the end-to-end transparency of most IPv4 connections:\
    \ the use\n   of IPv6 would restore this transparency.  However, the use of NATs,\n\
    \   and the associated private addressing schemes, has become\n   inappropriately\
    \ linked to the provision of security in enterprise\n   networks.  The restored\
    \ end-to-end transparency of IPv6 networks can\n   therefore be seen as a threat\
    \ by poorly informed enterprise network\n   managers.  Some seem to want to limit\
    \ the end-to-end capabilities of\n   IPv6, for example by deploying private, local\
    \ addressing and\n   translators, even when it is not necessary because of the\
    \ abundance\n   of IPv6 addresses.\n   Recommendations for designing an IPv6 network\
    \ to meet the perceived\n   security and connectivity requirements implicit in\
    \ the current usage\n   of IPv4 NATs whilst maintaining the advantages of IPv6\
    \ end-to-end\n   transparency are described in \"IP Version 6 Network Architecture\n\
    \   Protection\" [RFC4864].\n"
- title: 2.3.2.  Enterprise Network Security Model for IPv6
  contents:
  - "2.3.2.  Enterprise Network Security Model for IPv6\n   The favored model for\
    \ enterprise network security in IPv4 stresses\n   the use of a security perimeter\
    \ policed by autonomous firewalls and\n   incorporating the NATs.  Both perimeter\
    \ firewalls and NATs introduce\n   asymmetry and reduce the transparency of communications\
    \ through these\n   perimeters.  The symmetric bidirectionality and transparency\
    \ that are\n   extolled as virtues of IPv6 may seem to be at odds with this model.\n\
    \   Consequently, network managers may even see them as undesirable\n   attributes,\
    \ in conflict with their need to control threats to and\n   attacks on the networks\
    \ they administer.\n   It is worth noting that IPv6 does not *require* end-to-end\n\
    \   connectivity.  It merely provides end-to-end addressability; the\n   connectivity\
    \ can still be controlled using firewalls (or other\n   mechanisms), and it is\
    \ indeed wise to do so.\n   A number of matters indicate that IPv6 networks should\
    \ migrate\n   towards an improved security model, which will increase the overall\n\
    \   security of the network while at the same time facilitating end-to-\n   end\
    \ communication:\n   o  Increased usage of end-to-end security especially at the\
    \ network\n      layer.  IPv6 mandates the provision of IPsec capability in all\n\
    \      nodes, and increasing usage of end-to-end security is a challenge\n   \
    \   to current autonomous firewalls that are unable to perform deep\n      packet\
    \ inspection on encrypted packets.  It is also incompatible\n      with NATs because\
    \ they modify the packets, even when packets are\n      only authenticated rather\
    \ than encrypted.\n   o  Acknowledgement that over-reliance on the perimeter model\
    \ is\n      potentially dangerous.  An attacker who can penetrate today's\n  \
    \    perimeters will have free rein within the perimeter, in many\n      cases.\
    \  Also a successful attack will generally allow the attacker\n      to capture\
    \ information or resources and make use of them.\n   o  Development of mechanisms\
    \ such as 'Trusted Computing' [TCGARCH]\n      that will increase the level of\
    \ trust that network managers are\n      able to place on hosts.\n   o  Development\
    \ of centralized security policy repositories and secure\n      distribution mechanisms\
    \ that, in conjunction with trusted hosts,\n      will allow network managers\
    \ to place more reliance on security\n      mechanisms at the end-points.  The\
    \ mechanisms are likely to\n      include end-node firewalling and intrusion detection\
    \ systems as\n      well as secure protocols that allow end-points to influence\
    \ the\n      behavior of perimeter security devices.\n   o  Review of the role\
    \ of perimeter devices with increased emphasis on\n      intrusion detection,\
    \ and network resource protection and\n      coordination to thwart distributed\
    \ denial-of-service attacks.\n   Several of the technologies required to support\
    \ an enhanced security\n   model are still under development, including secure\
    \ protocols to\n   allow end-points to control firewalls: the complete security\
    \ model\n   utilizing these technologies is now emerging but still requires some\n\
    \   development.\n   In the meantime, initial deployments will need to make use\
    \ of similar\n   firewalling and intrusion detection techniques to IPv4 that may\
    \ limit\n   end-to-end transparency temporarily, but should be prepared to use\n\
    \   the new security model as it develops and avoid the use of NATs by\n   the\
    \ use of the architectural techniques described in [RFC4864].  In\n   particular,\
    \ using NAT-PT [RFC2766] as a general purpose transition\n   mechanism should\
    \ be avoided as it is likely to limit the exploitation\n   of end-to-end security\
    \ and other IPv6 capabilities in the future as\n   explained in [RFC4966].\n"
- title: 2.4.  IPv6 in IPv6 Tunnels
  contents:
  - "2.4.  IPv6 in IPv6 Tunnels\n   IPv6 in IPv6 tunnels can be used to circumvent\
    \ security checks, so it\n   is essential to filter packets both at tunnel ingress\
    \ and egress\n   points (the encapsulator and decapsulator) to ensure that both\
    \ the\n   inner and outer addresses are acceptable, and the tunnel is not being\n\
    \   used to carry inappropriate traffic.  [RFC3964], which is primarily\n   about\
    \ the 6to4 transition tunneling mechanism (see Section 3.1),\n   contains useful\
    \ discussions of possible attacks and ways to\n   counteract these threats.\n"
- title: 3.  Issues Due to Transition Mechanisms
  contents:
  - '3.  Issues Due to Transition Mechanisms

    '
- title: 3.1.  IPv6 Transition/Coexistence Mechanism-Specific Issues
  contents:
  - "3.1.  IPv6 Transition/Coexistence Mechanism-Specific Issues\n   The more complicated\
    \ the IPv6 transition/coexistence becomes, the\n   greater the danger that security\
    \ issues will be introduced either\n   o  in the mechanisms themselves,\n   o\
    \  in the interaction between mechanisms, or\n   o  by introducing unsecured paths\
    \ through multiple mechanisms.\n   These issues may or may not be readily apparent.\
    \  Hence, it would be\n   desirable to keep the mechanisms simple (as few in number\
    \ as possible\n   and built from pieces as small as possible) to simplify analysis.\n\
    \   One case where such security issues have been analyzed in detail is\n   the\
    \ 6to4 tunneling mechanism [RFC3964].\n   As tunneling has been proposed as a\
    \ model for several more cases than\n   are currently being used, its security\
    \ properties should be analyzed\n   in more detail.  There are some generic dangers\
    \ to tunneling:\n   o  It may be easier to avoid ingress filtering checks.\n \
    \  o  It is possible to attack the tunnel interface: several IPv6\n      security\
    \ mechanisms depend on checking that Hop Limit equals 255\n      on receipt and\
    \ that link-local addresses are used.  Sending such\n      packets to the tunnel\
    \ interface is much easier than gaining access\n      to a physical segment and\
    \ sending them there.\n   o  Automatic tunneling mechanisms are typically particularly\n\
    \      dangerous as there is no pre-configured association between end\n     \
    \ points.  Accordingly, at the receiving end of the tunnel, packets\n      have\
    \ to be accepted and decapsulated from any source.\n      Consequently, special\
    \ care should be taken when specifying\n      automatic tunneling techniques.\n"
- title: 3.2.  Automatic Tunneling and Relays
  contents:
  - "3.2.  Automatic Tunneling and Relays\n   Two mechanisms have been specified that\
    \ use automatic tunneling and\n   are intended for use outside a single domain.\
    \  These mechanisms\n   encapsulate the IPv6 packet directly in an IPv4 packet\
    \ in the case of\n   6to4 [RFC3056] or in an IPv4 UDP packet in the case of Teredo\n\
    \   [RFC4380].  In each case, packets can be sent and received by any\n   similarly\
    \ equipped nodes in the IPv4 Internet.\n   As mentioned in Section 3.1, a major\
    \ vulnerability in such approaches\n   is that receiving nodes must allow decapsulation\
    \ of traffic sourced\n   from anywhere in the Internet.  This kind of decapsulation\
    \ function\n   must be extremely well secured because of the wide range of potential\n\
    \   sources.\n   An even more difficult problem is how these mechanisms are able\
    \ to\n   establish communication with native IPv6 nodes or between the\n   automatic\
    \ tunneling mechanisms: such connectivity requires the use of\n   some kind of\
    \ \"relay\".  These relays could be deployed in various\n   locations such as:\n\
    \   o  all native IPv6 nodes,\n   o  native IPv6 sites,\n   o  in IPv6-enabled\
    \ ISPs, or\n   o  just somewhere in the Internet.\n   Given that a relay needs\
    \ to trust all the sources (e.g., in the 6to4\n   case, all 6to4 routers) that\
    \ are sending it traffic, there are issues\n   in achieving this trust and at\
    \ the same time scaling the relay system\n   to avoid overloading a small number\
    \ of relays.\n   As authentication of such a relay service is very difficult to\n\
    \   achieve, and particularly so in some of the possible deployment\n   models,\
    \ relays provide a potential vehicle for address spoofing,\n   (reflected) denial-of-service\
    \ attacks, and other threats.\n   Threats related to 6to4 and measures to combat\
    \ them are discussed in\n   [RFC3964].  [RFC4380] incorporates extensive discussion\
    \ of the\n   threats to Teredo and measures to combat them.\n"
- title: 3.3.  Tunneling IPv6 through IPv4 Networks May Break IPv4 Network
  contents:
  - "3.3.  Tunneling IPv6 through IPv4 Networks May Break IPv4 Network\n      Security\
    \ Assumptions\n   NATs and firewalls have been deployed extensively in the IPv4\n\
    \   Internet, as discussed in Section 2.3.  Operators who deploy them\n   typically\
    \ have some security/operational requirements in mind (e.g.,\n   a desire to block\
    \ inbound connection attempts), which may or may not\n   be misguided.\n   The\
    \ addition of tunneling can change the security model that such\n   deployments\
    \ are seeking to enforce.  IPv6-over-IPv4 tunneling using\n   protocol 41 is typically\
    \ either explicitly allowed, or disallowed\n   implicitly.  Tunneling IPv6 over\
    \ IPv4 encapsulated in UDP constitutes\n   a more difficult problem as UDP must\
    \ usually be allowed to pass\n   through NATs and firewalls.  Consequently, using\
    \ UDP implies the\n   ability to punch holes in NATs and firewalls although, depending\
    \ on\n   the implementation, this ability may be limited or only achieved in a\n\
    \   stateful manner.  In practice, the mechanisms have been explicitly\n   designed\
    \ to traverse both NATs and firewalls in a similar fashion.\n   One possible view\
    \ is that the use of tunneling is especially\n   questionable in home and SOHO\
    \ (small office/home office) environments\n   where the level of expertise in\
    \ network administration is typically\n   not very high; in these environments,\
    \ the hosts may not be as tightly\n   managed as in others (e.g., network services\
    \ might be enabled\n   unnecessarily), leading to possible security break-ins\
    \ or other\n   vulnerabilities.\n   Holes allowing tunneled traffic through NATs\
    \ and firewalls can be\n   punched both intentionally and unintentionally.  In\
    \ cases where the\n   administrator or user makes an explicit decision to create\
    \ the hole,\n   this is less of a problem, although (for example) some enterprises\n\
    \   might want to block IPv6 tunneling explicitly if employees were able\n   to\
    \ create such holes without reference to administrators.  On the\n   other hand,\
    \ if a hole is punched transparently, it is likely that a\n   proportion of users\
    \ will not understand the consequences: this will\n   very probably result in\
    \ a serious threat sooner or later.\n   When deploying tunneling solutions, especially\
    \ tunneling solutions\n   that are automatic and/or can be enabled easily by users\
    \ who do not\n   understand the consequences, care should be taken not to compromise\n\
    \   the security assumptions held by the users.\n   For example, NAT traversal\
    \ should not be performed by default unless\n   there is a firewall producing\
    \ a similar by-default security policy to\n   that provided by IPv4 NAT.  IPv6-in-IPv4\
    \ (protocol 41) tunneling is\n   less of a problem, as it is easier to block if\
    \ necessary; however, if\n   the host is protected in IPv4, the IPv6 side should\
    \ be protected as\n   well.\n   As is shown in Appendix A, it is relatively easy\
    \ to determine the\n   IPv6 address corresponding to an IPv4 address in tunneling\n\
    \   deployments.  It is therefore vital NOT to rely on \"security by\n   obscurity\"\
    , i.e., assuming that nobody is able to guess or determine\n   the IPv6 address\
    \ of the host especially when using automatic\n   tunneling transition mechanisms.\n\
    \   The network architecture must provide separate IPv4 and IPv6\n   firewalls\
    \ with tunneled IPv6 traffic arriving encapsulated in IPv4\n   packets routed\
    \ through the IPv4 firewall before being decapsulated,\n   and then through the\
    \ IPv6 firewall as shown in Figure 1.\n                +--------+      +--------+\
    \      +--------+\n      Site      | Native | IPv6 |v6 in v4| IPv4 | Native |\
    \      Public\n   Network <--->|  IPv6  |<---->| Tunnel |<---->|  IPv4  |<--->\
    \ Internet\n                |Firewall|      |Endpoint|      |Firewall|\n     \
    \           +--------+      +--------+      +--------+\n                 Figure\
    \ 1: Tunneled Traffic and Firewalls\n"
- title: 4.  Issues Due to IPv6 Deployment
  contents:
  - '4.  Issues Due to IPv6 Deployment

    '
- title: 4.1.  Avoiding the Trap of Insecure IPv6 Service Piloting
  contents:
  - "4.1.  Avoiding the Trap of Insecure IPv6 Service Piloting\n   Because IPv6 is\
    \ a new service for many networks, network managers\n   will often opt to make\
    \ a pilot deployment in a part of the network to\n   gain experience and understand\
    \ the problems as well as the benefits\n   that may result from a full production\
    \ quality IPv6 service.\n   Unless IPv6 service piloting is done in a manner that\
    \ is as secure as\n   possible, there is a risk that if security in the pilot\
    \ does not\n   match up to what is achievable with current IPv4 production service,\n\
    \   the comparison can adversely impact the overall assessment of the\n   IPv6\
    \ pilot deployment.  This may result in a decision to delay or\n   even avoid\
    \ deploying an IPv6 production service.  For example, hosts\n   and routers might\
    \ not be protected by IPv6 firewalls, even if the\n   corresponding IPv4 service\
    \ is fully protected by firewalls.  The use\n   of tunneling transition mechanisms\
    \ (see Section 3.3) and the\n   interaction with virtual private networks also\
    \ need careful attention\n   to ensure that site security is maintained.  This\
    \ is particularly\n   critical where IPv6 capabilities are turned on by default\
    \ in new\n   equipment or new releases of operating systems: network managers\
    \ may\n   not be fully aware of the security exposure that this creates.\n   In\
    \ some cases, a perceived lack of availability of IPv6 firewalls and\n   other\
    \ security capabilities, such as intrusion detection systems may\n   have led\
    \ network managers to resist any kind of IPv6 service\n   deployment.  These problems\
    \ may be partly due to the relatively slow\n   development and deployment of IPv6-capable\
    \ security equipment, but\n   the major problems appear to have been a lack of\
    \ information, and\n   more importantly a lack of documented operational experience\
    \ on which\n   managers can draw.  In actual fact, at the time of writing, there\
    \ are\n   a significant number of alternative IPv6 packet filters and firewalls\n\
    \   already in existence that could be used to provide sufficient access\n   controls.\n\
    \   However, there are a small number of areas where the available\n   equipment\
    \ and capabilities may still be a barrier to secure\n   deployment as of the time\
    \ of writing:\n   o  'Personal firewalls' with support for IPv6 and intended for\
    \ use on\n      hosts are not yet widely available.\n   o  Enterprise firewalls\
    \ are at an early stage of development and may\n      not provide the full range\
    \ of capabilities needed to implement the\n      necessary IPv6 filtering rules.\
    \  Network managers often expect the\n      same devices that support and are\
    \ used for IPv4 today to also\n      become IPv6-capable -- even though this is\
    \ not really required and\n      the equipment may not have the requisite hardware\
    \ capabilities to\n      support fast packet filtering for IPv6.  Suggestions\
    \ for the\n      appropriate deployment of firewalls are given in Section 3.3\
    \ -- as\n      will be seen from this section, it is usually desirable that the\n\
    \      firewalls are in separate boxes, and there is no necessity for\n      them\
    \ to be same the model of equipment.\n   o  A lesser factor may be that some design\
    \ decisions in the IPv6\n      protocol make it more difficult for firewalls to\
    \ be implemented\n      and work in all cases, and to be fully future-proof (e.g.,\
    \ when\n      new extension headers are used) as discussed in Section 2.1.9. \
    \ It\n      is significantly more difficult for intermediate nodes to process\n\
    \      the IPv6 header chains than IPv4 packets.\n   o  Adequate Intrusion Detection\
    \ Systems (IDS) are more difficult to\n      construct for IPv6.  IDSs are now\
    \ beginning to become available\n      but the pattern-based mechanisms used for\
    \ IPv4 may not be the most\n      appropriate for long-term development of these\
    \ systems as end-to-\n      end encryption becomes more prevalent.  Future systems\
    \ may be more\n      reliant on traffic flow pattern recognition.\n   o  Implementations\
    \ of high availability capabilities supporting IPv6\n      are also in short supply.\
    \  In particular, development of the IPv6\n      version of the Virtual Router\
    \ Redundancy Protocol (VRRP) [VRRP]\n      has lagged the development of the main\
    \ IPv6 protocol although\n      alternatives may be available for some environments.\n\
    \   In all these areas, developments are ongoing and they should not be\n   considered\
    \ a long-term bar to the deployment of IPv6 either as a\n   pilot or production\
    \ service.  The necessary tools are now available\n   to make a secure IPv6 deployment,\
    \ and with careful selection of\n   components and design of the network architecture,\
    \ a successful pilot\n   or production IPv6 service can be deployed.  Recommendations\
    \ for\n   secure deployment and appropriate management of IPv6 networks can be\n\
    \   found in the documentation archives of the European Union 6net\n   project\
    \ [SIXNET] and in the Deployment Guide published by the IPv6\n   Promotion Council\
    \ of Japan [JpIPv6DC].\n"
- title: 4.2.  DNS Server Problems
  contents:
  - "4.2.  DNS Server Problems\n   Some DNS server implementations have flaws that\
    \ severely affect DNS\n   queries for IPv6 addresses as discussed in [RFC4074].\
    \  These flaws\n   can be used for DoS attacks affecting both IPv4 and IPv6 by\
    \ inducing\n   caching DNS servers to believe that a domain is broken and causing\n\
    \   the server to block access to all requests for the domain for a\n   precautionary\
    \ period.\n"
- title: 4.3.  Addressing Schemes and Securing Routers
  contents:
  - "4.3.  Addressing Schemes and Securing Routers\n   Whilst in general terms brute\
    \ force scanning of IPv6 subnets is\n   essentially impossible due to the enormously\
    \ larger address space of\n   IPv6 and the 64-bit interface identifiers (see Appendix\
    \ A), this will\n   be obviated if administrators do not take advantage of the\
    \ large\n   space to use unguessable interface identifiers.\n   Because of the\
    \ unmemorability of complete IPv6 addresses, there is a\n   temptation for administrators\
    \ to use small integers as interface\n   identifiers when manually configuring\
    \ them, as might happen on point-\n   to-point links or when provisioning complete\
    \ addresses from a DHCPv6\n   server.  Such allocations make it easy for an attacker\
    \ to find active\n   nodes that they can then port scan.\n   To make use of the\
    \ larger address space properly, administrators\n   should be very careful when\
    \ entering IPv6 addresses in their\n   configurations (e.g., access control lists),\
    \ since numerical IPv6\n   addresses are more prone to human error than IPv4 due\
    \ to their length\n   and unmemorability.\n   It is also essential to ensure that\
    \ the management interfaces of\n   routers are well secured (e.g., allowing remote\
    \ access using Secure\n   Shell (SSH) only and ensuring that local craft interfaces\
    \ have non-\n   default passwords) as the router will usually contain a significant\n\
    \   cache of neighbor addresses in its neighbor cache.\n"
- title: 4.4.  Consequences of Multiple Addresses in IPv6
  contents:
  - "4.4.  Consequences of Multiple Addresses in IPv6\n   One positive consequence\
    \ of IPv6 is that nodes that do not require\n   global access can communicate\
    \ locally just by the use of a link-local\n   address (if very local access is\
    \ sufficient) or across the site by\n   using a Unique Local Address (ULA).  In\
    \ either case it is easy to\n   ensure that access outside the assigned domain\
    \ of activity can be\n   controlled by simple filters (which should be the default\
    \ for link-\n   locals).  However, the security hazards of using link-local addresses\n\
    \   for general purposes, as documented in Section 2.1.12, should be\n   borne\
    \ in mind.\n   On the other hand, the possibility that a node or interface can\
    \ have\n   multiple global scope addresses makes access control filtering (both\n\
    \   on ingress and egress) more complex and requires higher maintenance\n   levels.\
    \  Vendors and network administrators need to be aware that\n   multiple addresses\
    \ are the norm rather than the exception in IPv6:\n   when building and selecting\
    \ tools for security and management, a\n   highly desirable feature is the ability\
    \ to be able to 'tokenize'\n   access control lists and configurations in general\
    \ to cater for\n   multiple addresses and/or address prefixes.\n   The addresses\
    \ could be from the same network prefix (for example,\n   privacy mechanisms [RFC4941]\
    \ will periodically create new addresses\n   taken from the same prefix, and two\
    \ or more of these may be active at\n   the same time), or from different prefixes\
    \ (for example, when a\n   network is multihomed, when for management purposes\
    \ a node belongs to\n   several subnets on the same link or is implementing anycast\n\
    \   services).  In all these cases, it is possible that a single host\n   could\
    \ be using several different addresses with different prefixes\n   and/or different\
    \ interface identifiers.  It is desirable that the\n   security administrator\
    \ be able to identify that the same host is\n   behind all these addresses.\n\
    \   Some network administrators may find the mutability of addresses when\n  \
    \ privacy mechanisms are used in their network to be undesirable\n   because of\
    \ the current difficulties in maintaining access control\n   lists and knowing\
    \ the origin of traffic.  In general, disabling the\n   use of privacy addresses\
    \ is only possible if the full stateful DHCPv6\n   mechanism [RFC3315] is used\
    \ to allocate IPv6 addresses and DHCPv6\n   requests for privacy addresses are\
    \ not honored.\n"
- title: 4.5.  Deploying ICMPv6
  contents:
  - "4.5.  Deploying ICMPv6\n   In IPv4 it is commonly accepted that some filtering\
    \ of ICMP packets\n   by firewalls is essential to maintain security.  Because\
    \ of the\n   extended use that is made of ICMPv6 [RFC2461] with a multitude of\n\
    \   functions, the simple set of dropping rules that are usually applied\n   in\
    \ IPv4 need to be significantly developed for IPv6.  The blanket\n   dropping\
    \ of all ICMP messages that is used in some very strict\n   environments is simply\
    \ not possible for IPv6.\n   In an IPv6 firewall, policy needs to allow some messages\
    \ through the\n   firewall but also has to permit certain messages to and from\
    \ the\n   firewall, especially those with link-local sources on links to which\n\
    \   the firewall is attached.  These messages must be permitted to ensure\n  \
    \ that Neighbor Discovery [RFC2462], Multicast Listener Discovery\n   ([RFC2710],\
    \ [RFC3810]), and Stateless Address Configuration [RFC4443]\n   work as expected.\n\
    \   Recommendations for filtering ICMPv6 messages can be found in\n   [RFC4890].\n"
- title: 4.5.1.  Problems Resulting from ICMPv6 Transparency
  contents:
  - "4.5.1.  Problems Resulting from ICMPv6 Transparency\n   As described in Section\
    \ 4.5, certain ICMPv6 error packets need to be\n   passed through a firewall in\
    \ both directions.  This means that some\n   ICMPv6 error packets can be exchanged\
    \ between inside and outside\n   without any filtering.\n   Using this feature,\
    \ malicious users can communicate between the\n   inside and outside of a firewall,\
    \ thus bypassing the administrator's\n   inspection (proxy, firewall, etc.). \
    \ For example, it might be\n   possible to carry out a covert conversation through\
    \ the payload of\n   ICMPv6 error messages or to tunnel inappropriate encapsulated\
    \ IP\n   packets in ICMPv6 error messages.  This problem can be alleviated by\n\
    \   filtering ICMPv6 errors using a stateful packet inspection mechanism\n   to\
    \ ensure that the packet carried as a payload is associated with\n   legitimate\
    \ traffic to or from the protected network.\n"
- title: 4.6.  IPsec Transport Mode
  contents:
  - "4.6.  IPsec Transport Mode\n   IPsec provides security to end-to-end communications\
    \ at the network\n   layer (layer 3).  The security features available include\
    \ access\n   control, connectionless integrity, data origin authentication,\n\
    \   protection against replay attacks, confidentiality, and limited\n   traffic\
    \ flow confidentiality (see [RFC4301] Section 2.1).  IPv6\n   mandates the implementation\
    \ of IPsec in all conforming nodes, making\n   the usage of IPsec to secure end-to-end\
    \ communication possible in a\n   way that is generally not available to IPv4.\n\
    \   To secure IPv6 end-to-end communications, IPsec transport mode would\n   generally\
    \ be the solution of choice.  However, use of these IPsec\n   security features\
    \ can result in novel problems for network\n   administrators and decrease the\
    \ effectiveness of perimeter firewalls\n   because of the increased prevalence\
    \ of encrypted packets on which the\n   firewalls cannot perform deep packet inspection\
    \ and filtering.\n   One example of such problems is the lack of security solutions\
    \ in the\n   middlebox, including effective content-filtering, ability to provide\n\
    \   DoS prevention based on the expected TCP protocol behavior, and\n   intrusion\
    \ detection.  Future solutions to this problem are discussed\n   in Section 2.3.2.\
    \  Another example is an IPsec-based DoS (e.g.,\n   sending malformed ESP/AH packets)\
    \ that can be especially detrimental\n   to software-based IPsec implementations.\n"
- title: 4.7.  Reduced Functionality Devices
  contents:
  - "4.7.  Reduced Functionality Devices\n   With the deployment of IPv6 we can expect\
    \ the attachment of a very\n   large number of new IPv6-enabled devices with scarce\
    \ resources and\n   low computing capacity.  The resource limitations are generally\n\
    \   because of a market requirement for cost reduction.  Although the\n   [RFC4294]\
    \ specifies some mandatory security capabilities for every\n   conformant node,\
    \ these do not include functions required for a node\n   to be able to protect\
    \ itself.  Accordingly, some such devices may not\n   be able even to perform\
    \ the minimum set of functions required to\n   protect themselves (e.g., 'personal'\
    \ firewall, automatic firmware\n   update, enough CPU power to endure DoS attacks).\
    \  This means a\n   different security scheme may be necessary for such reduced\n\
    \   functionality devices.\n"
- title: 4.8.  Operational Factors when Enabling IPv6 in the Network
  contents:
  - "4.8.  Operational Factors when Enabling IPv6 in the Network\n   There are a number\
    \ of reasons that make it essential to take\n   particular care when enabling\
    \ IPv6 in the network equipment:\n   Initially, IPv6-enabled router software may\
    \ be less mature than\n   current IPv4-only implementations, and there is less\
    \ experience with\n   configuring IPv6 routing, which can result in disruptions\
    \ to the IPv6\n   routing environment and (IPv6) network outages.\n   IPv6 processing\
    \ may not happen at (near) line speed (or at a\n   comparable performance level\
    \ to IPv4 in the same equipment).  A high\n   level of IPv6 traffic (even legitimate,\
    \ e.g., Network News Transport\n   Protocol, NNTP) could easily overload IPv6\
    \ processing especially when\n   it is software-based without the hardware support\
    \ typical in high-end\n   routers.  This may potentially have deleterious knock-on\
    \ effects on\n   IPv4 processing, affecting availability of both services.\n \
    \  Accordingly, if people don't feel confident enough in the IPv6\n   capabilities\
    \ of their equipment, they will be reluctant to enable it\n   in their \"production\"\
    \ networks.\n   Sometimes essential features may be missing from early releases\
    \ of\n   vendors' software; an example is provision of software enabling IPv6\n\
    \   telnet/SSH access (e.g., to the configuration application of a\n   router),\
    \ but without the ability to turn it off or limit access to\n   it!\n   Sometimes\
    \ the default IPv6 configuration is insecure.  For example,\n   in one vendor's\
    \ implementation, if you have restricted IPv4 telnet to\n   only a few hosts in\
    \ the configuration, you need to be aware that IPv6\n   telnet will be automatically\
    \ enabled, that the configuration commands\n   used previously do not block IPv6\
    \ telnet, that IPv6 telnet is open to\n   the world by default, and that you have\
    \ to use a separate command to\n   also lock down the IPv6 telnet access.\n  \
    \ Many operator networks have to run interior routing protocols for\n   both IPv4\
    \ and IPv6.  It is possible to run them both in one routing\n   protocol, or have\
    \ two separate routing protocols; either approach has\n   its tradeoffs [RFC4029].\
    \  If multiple routing protocols are used, one\n   should note that this causes\
    \ double the amount of processing when\n   links flap or recalculation is otherwise\
    \ needed -- which might more\n   easily overload the router's CPU, causing slightly\
    \ slower convergence\n   time.\n"
- title: 4.9.  Security Issues Due to Neighbor Discovery Proxies
  contents:
  - "4.9.  Security Issues Due to Neighbor Discovery Proxies\n   In order to span\
    \ a single subnet over multiple physical links, a new\n   experimental capability\
    \ is being trialed in IPv6 to proxy Neighbor\n   Discovery messages.  A node with\
    \ this capability will be called an\n   NDProxy (see [RFC4389]).  NDProxies are\
    \ susceptible to the same\n   security issues as those faced by hosts using unsecured\
    \ Neighbor\n   Discovery or ARP.  These proxies may process unsecured messages,\
    \ and\n   update the neighbor cache as a result of such processing, thus\n   allowing\
    \ a malicious node to divert or hijack traffic.  This may\n   undermine the advantages\
    \ of using SEND [RFC3971].\n   If a form of NDProxy is standardized, SEND will\
    \ need to be extended\n   to support this capability.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   This memo attempts to give an overview of security\
    \ considerations of\n   the different aspects of IPv6, particularly as they relate\
    \ to the\n   transition to a network in which IPv4- and IPv6-based communications\n\
    \   need to coexist.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document draws together the work of many people\
    \ who have\n   contributed security-related documents to the IPV6 and V6OPS working\n\
    \   groups.  Alain Durand, Alain Baudot, Luc Beloeil, Sharon Chisholm,\n   Tim\
    \ Chown, Lars Eggert, Andras Kis-Szabo, Vishwas Manral, Janos\n   Mohacsi, Mark\
    \ Smith, Alvaro Vives, and Margaret Wassermann provided\n   feedback to improve\
    \ this document.  Satoshi Kondo, Shinsuke Suzuki,\n   and Alvaro Vives provided\
    \ additional inputs in cooperation with the\n   Deployment Working Group of the\
    \ Japanese IPv6 Promotion Council and\n   the Euro6IX IST co-funded project, together\
    \ with inputs from Jordi\n   Palet, Brian Carpenter, and Peter Bieringer.  Michael\
    \ Wittsend and\n   Michael Cole discussed issues relating to probing/mapping and\n\
    \   privacy.  Craig Metz and Jun-ichiro itojun Hagino did the original\n   work\
    \ identifying the problems of using IPv4-mapped IPv6 addresses on\n   the wire.\
    \  Vishwas Manral made further investigations of the impact\n   of tiny fragments\
    \ on IPv6 security.  Francis Dupont raised the issues\n   relating to IPv6 Privacy\
    \ Addresses.  Finally, Pekka Savola wrote a\n   number of documents on aspects\
    \ IPv6 security which have been subsumed\n   into this work.  His document on\
    \ \"Firewalling Considerations for\n   IPv6\" (October 2003) originally identified\
    \ many of the issues with\n   the base IPv6 specification which are documented\
    \ here.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC1122]      Braden, R., \"Requirements for\
    \ Internet Hosts -\n                  Communication Layers\", STD 3, RFC 1122,\
    \ October 1989.\n   [RFC2375]      Hinden, R. and S. Deering, \"IPv6 Multicast\
    \ Address\n                  Assignments\", RFC 2375, July 1998.\n   [RFC2460]\
    \      Deering, S. and R. Hinden, \"Internet Protocol, Version\n             \
    \     6 (IPv6) Specification\", RFC 2460, December 1998.\n   [RFC2461]      Narten,\
    \ T., Nordmark, E., and W. Simpson, \"Neighbor\n                  Discovery for\
    \ IP Version 6 (IPv6)\", RFC 2461,\n                  December 1998.\n   [RFC2462]\
    \      Thomson, S. and T. Narten, \"IPv6 Stateless Address\n                 \
    \ Autoconfiguration\", RFC 2462, December 1998.\n   [RFC2710]      Deering, S.,\
    \ Fenner, W., and B. Haberman, \"Multicast\n                  Listener Discovery\
    \ (MLD) for IPv6\", RFC 2710,\n                  October 1999.\n   [RFC3056] \
    \     Carpenter, B. and K. Moore, \"Connection of IPv6\n                  Domains\
    \ via IPv4 Clouds\", RFC 3056, February 2001.\n   [RFC3775]      Johnson, D.,\
    \ Perkins, C., and J. Arkko, \"Mobility\n                  Support in IPv6\",\
    \ RFC 3775, June 2004.\n   [RFC3810]      Vida, R. and L. Costa, \"Multicast Listener\
    \ Discovery\n                  Version 2 (MLDv2) for IPv6\", RFC 3810, June 2004.\n\
    \   [RFC3964]      Savola, P. and C. Patel, \"Security Considerations for\n  \
    \                6to4\", RFC 3964, December 2004.\n   [RFC4007]      Deering,\
    \ S., Haberman, B., Jinmei, T., Nordmark, E.,\n                  and B. Zill,\
    \ \"IPv6 Scoped Address Architecture\",\n                  RFC 4007, March 2005.\n\
    \   [RFC4291]      Hinden, R. and S. Deering, \"IP Version 6 Addressing\n    \
    \              Architecture\", RFC 4291, February 2006.\n   [RFC4380]      Huitema,\
    \ C., \"Teredo: Tunneling IPv6 over UDP through\n                  Network Address\
    \ Translations (NATs)\", RFC 4380,\n                  February 2006.\n   [RFC4443]\
    \      Conta, A., Deering, S., and M. Gupta, \"Internet\n                  Control\
    \ Message Protocol (ICMPv6) for the Internet\n                  Protocol Version\
    \ 6 (IPv6) Specification\", RFC 4443,\n                  March 2006.\n   [RFC4941]\
    \      Narten, T., Draves, R., and S. Krishnan, \"Privacy\n                  Extensions\
    \ for Stateless Address Autoconfiguration in\n                  IPv6\", RFC 4941,\
    \ September 2007.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [FNAT]         Bellovin, S., \"Technique for\
    \ Counting NATted Hosts\",\n                  Proc. Second Internet Measurement\
    \ Workshop ,\n                  November 2002,\n                  <http://www.research.att.com/~smb/papers/fnat.pdf>.\n\
    \   [ICMP-ATT]     Gont, F., \"ICMP attacks against TCP\", Work\n            \
    \      in Progress, May 2007.\n   [IEEE.802-1X]  Institute of Electrical and Electronics\
    \ Engineers,\n                  \"Port-Based Network Access Control\", IEEE Standard\
    \ for\n                  Local and Metropolitan Area Networks 802.1X-2004,\n \
    \                 December 2004.\n   [JpIPv6DC]     Deployment WG, \"IPv6 Deployment\
    \ Guideline (2005\n                  Edition)\", IPv6 Promotion Council (Japan)\
    \ Deployment\n                  Working Group, 2005, <http://www.v6pc.jp/>.\n\
    \   [RFC1858]      Ziemba, G., Reed, D., and P. Traina, \"Security\n         \
    \         Considerations for IP Fragment Filtering\", RFC 1858,\n            \
    \      October 1995.\n   [RFC2765]      Nordmark, E., \"Stateless IP/ICMP Translation\
    \ Algorithm\n                  (SIIT)\", RFC 2765, February 2000.\n   [RFC2766]\
    \      Tsirtsis, G. and P. Srisuresh, \"Network Address\n                  Translation\
    \ - Protocol Translation (NAT-PT)\",\n                  RFC 2766, February 2000.\n\
    \   [RFC3128]      Miller, I., \"Protection Against a Variant of the Tiny\n  \
    \                Fragment Attack (RFC 1858)\", RFC 3128, June 2001.\n   [RFC3315]\
    \      Droms, R., Bound, J., Volz, B., Lemon, T., Perkins,\n                 \
    \ C., and M. Carney, \"Dynamic Host Configuration\n                  Protocol\
    \ for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3493]      Gilligan, R., Thomson,\
    \ S., Bound, J., McCann, J., and\n                  W. Stevens, \"Basic Socket\
    \ Interface Extensions for\n                  IPv6\", RFC 3493, February 2003.\n\
    \   [RFC3756]      Nikander, P., Kempf, J., and E. Nordmark, \"IPv6\n        \
    \          Neighbor Discovery (ND) Trust Models and Threats\",\n             \
    \     RFC 3756, May 2004.\n   [RFC3971]      Arkko, J., Kempf, J., Zill, B., and\
    \ P. Nikander,\n                  \"SEcure Neighbor Discovery (SEND)\", RFC 3971,\n\
    \                  March 2005.\n   [RFC4025]      Richardson, M., \"A Method for\
    \ Storing IPsec Keying\n                  Material in DNS\", RFC 4025, March 2005.\n\
    \   [RFC4029]      Lind, M., Ksinant, V., Park, S., Baudot, A., and P.\n     \
    \             Savola, \"Scenarios and Analysis for Introducing IPv6\n        \
    \          into ISP Networks\", RFC 4029, March 2005.\n   [RFC4038]      Shin,\
    \ M-K., Hong, Y-G., Hagino, J., Savola, P., and E.\n                  Castro,\
    \ \"Application Aspects of IPv6 Transition\",\n                  RFC 4038, March\
    \ 2005.\n   [RFC4074]      Morishita, Y. and T. Jinmei, \"Common Misbehavior\n\
    \                  Against DNS Queries for IPv6 Addresses\", RFC 4074,\n     \
    \             May 2005.\n   [RFC4191]      Draves, R. and D. Thaler, \"Default\
    \ Router Preferences\n                  and More-Specific Routes\", RFC 4191,\
    \ November 2005.\n   [RFC4225]      Nikander, P., Arkko, J., Aura, T., Montenegro,\
    \ G., and\n                  E. Nordmark, \"Mobile IP Version 6 Route Optimization\n\
    \                  Security Design Background\", RFC 4225, December 2005.\n  \
    \ [RFC4294]      Loughney, J., \"IPv6 Node Requirements\", RFC 4294,\n       \
    \           April 2006.\n   [RFC4301]      Kent, S. and K. Seo, \"Security Architecture\
    \ for the\n                  Internet Protocol\", RFC 4301, December 2005.\n \
    \  [RFC4311]      Hinden, R. and D. Thaler, \"IPv6 Host-to-Router Load\n     \
    \             Sharing\", RFC 4311, November 2005.\n   [RFC4389]      Thaler, D.,\
    \ Talwar, M., and C. Patel, \"Neighbor\n                  Discovery Proxies (ND\
    \ Proxy)\", RFC 4389, April 2006.\n   [RFC4472]      Durand, A., Ihren, J., and\
    \ P. Savola, \"Operational\n                  Considerations and Issues with IPv6\
    \ DNS\", RFC 4472,\n                  April 2006.\n   [RFC4864]      Van de Velde,\
    \ G., Hain, T., Droms, R., Carpenter, B.,\n                  and E. Klein, \"\
    Local Network Protection for IPv6\",\n                  RFC 4864, May 2007.\n\
    \   [RFC4890]      Davies, E. and J. Mohacsi, \"Recommendations for\n        \
    \          Filtering ICMPv6 Messages in Firewalls\", RFC 4890,\n             \
    \     May 2007.\n   [RFC4966]      Aoun, C. and E. Davies, \"Reasons to Move NAT-PT\
    \ to\n                  Historic Status\", RFC 4966, July 2007.\n   [SCAN-IMP]\
    \     Chown, T., \"IPv6 Implications for Network Scanning\",\n               \
    \   Work in Progress, March 2007.\n   [SIXNET]       6Net, \"Large Scale International\
    \ IPv6 Pilot Network\",\n                  EU Information Society Technologies\
    \ Project , 2005,\n                  <http://www.6net.org/>.\n   [TCGARCH]   \
    \   The Trusted Computing Group, \"TCG Specification\n                  Architecture\
    \ Overview\", April 2004, <https://\n                  www.trustedcomputinggroup.org/groups/\n\
    \                  TCG_1_0_Architecture_Overview.pdf>.\n   [VRRP]         Hinden,\
    \ R. and J. Cruz, \"Virtual Router Redundancy\n                  Protocol for\
    \ IPv6\", Work in Progress, March 2007.\n"
- title: Appendix A.  IPv6 Probing/Mapping Considerations
  contents:
  - "Appendix A.  IPv6 Probing/Mapping Considerations\n   One school of thought wanted\
    \ the IPv6 numbering topology (either at\n   network or node level) to match IPv4\
    \ as exactly as possible, whereas\n   others see IPv6 as giving more flexibility\
    \ to the address plans, not\n   wanting to constrain the design of IPv6 addressing.\
    \  Mirroring the\n   address plans is now generally seen as a security threat\
    \ because an\n   IPv6 deployment may have different security properties from IPv4.\n\
    \   Given the relatively immature state of IPv6 network security, if an\n   attacker\
    \ knows the IPv4 address of the node and believes it to be\n   dual-stacked with\
    \ IPv4 and IPv6, he might want to try to probe the\n   corresponding IPv6 address,\
    \ based on the assumption that the security\n   defenses might be lower.  This\
    \ might be the case particularly for\n   nodes which are behind a NAT in IPv4,\
    \ but globally addressable in\n   IPv6.  Naturally, this is not a concern if similar\
    \ and adequate\n   security policies are in place.\n   On the other hand, brute-force\
    \ scanning or probing of addresses is\n   computationally infeasible due to the\
    \ large search space of interface\n   identifiers on most IPv6 subnets (somewhat\
    \ less than 64 bits wide,\n   depending on how identifiers are chosen), always\
    \ provided that\n   identifiers are chosen at random out of the available space,\
    \ as\n   discussed in [SCAN-IMP].\n   For example, automatic tunneling mechanisms\
    \ typically use\n   deterministic methods for generating IPv6 addresses, so probing/\n\
    \   port-scanning an IPv6 node is simplified.  The IPv4 address is\n   embedded\
    \ at least in 6to4, Teredo, and ISATAP addresses.\n   Additionally, it is possible\
    \ (in the case of 6to4 in particular) to\n   learn the address behind the prefix;\
    \ for example, Microsoft 6to4\n   implementation uses the address 2002:V4ADDR::V4ADDR\
    \ while older Linux\n   and FreeBSD implementations default to 2002:V4ADDR::1.\
    \  This could\n   also be used as one way to identify an implementation and hence\n\
    \   target any specific weaknesses.\n   One proposal has been to randomize the\
    \ addresses or subnet identifier\n   in the address of the 6to4 router.  This\
    \ does not really help, as the\n   6to4 router (whether a host or a router) will\
    \ return an ICMPv6 Hop\n   Limit Exceeded message, revealing the IP address. \
    \ Hosts behind the\n   6to4 router can use methods such as privacy addresses [RFC4941]\
    \ to\n   conceal themselves, provided that they are not meant to be reachable\n\
    \   by sessions started from elsewhere; they would still require a\n   globally\
    \ accessible static address if they wish to receive\n   communications initiated\
    \ elsewhere.\n   To conclude, it seems that when an automatic tunneling mechanism\
    \ is\n   being used, given an IPv4 address, the corresponding IPv6 address\n \
    \  could possibly be guessed with relative ease.  This has significant\n   implications\
    \ if the IPv6 security policy is less adequate than that\n   for IPv4.\n"
- title: Appendix B.  IPv6 Privacy Considerations
  contents:
  - "Appendix B.  IPv6 Privacy Considerations\n   The generation of IPv6 addresses\
    \ from MAC addresses potentially\n   allows the behavior of users to be tracked\
    \ in a way which may\n   infringe their privacy.  [RFC4941] specifies mechanisms\
    \ which can be\n   used to reduce the risk of infringement.  It has also been\
    \ claimed\n   that IPv6 harms the privacy of the user, either by exposing the\
    \ MAC\n   address, or by exposing the number of nodes connected to a site.\n \
    \  Additional discussion of privacy issues can be found in [RFC4864].\n"
- title: B.1.  Exposing MAC Addresses
  contents:
  - "B.1.  Exposing MAC Addresses\n   Using stateless address autoconfiguration results\
    \ in the MAC address\n   being incorporated in an EUI64 that exposes the model\
    \ of network\n   card.  The concern has been that a user might not want to expose\
    \ the\n   details of the system to outsiders, e.g., fearing a resulting\n   burglary\
    \ if a thief identifies expensive equipment from the vendor\n   identifier embedded\
    \ in MAC addresses, or allowing the type of\n   equipment in use to be identified,\
    \ thus facilitating an attack on\n   specific security weaknesses.\n   In most\
    \ cases, this seems completely unfounded.  First, such an\n   address must be\
    \ learned somehow -- this is a non-trivial process; the\n   addresses are visible,\
    \ e.g., in Web site access logs, but the chances\n   that a random Web site owner\
    \ is collecting this kind of information\n   (or whether it would be of any use)\
    \ are quite slim.  Being able to\n   eavesdrop the traffic to learn such addresses\
    \ (e.g., by the\n   compromise of DSL (Digital Subscriber Line) or Cable modem\
    \ physical\n   media) seems also quite far-fetched.  Further, using statically\n\
    \   configured interface identifiers or privacy addresses [RFC4941] for\n   such\
    \ purposes is straightforward if worried about the risk.  Second,\n   the burglar\
    \ would have to be able to map the IP address to the\n   physical location; typically\
    \ this would only be possible with\n   information from the private customer database\
    \ of the Internet\n   Service Provider (ISP) and, for large sites, the administrative\n\
    \   records of the site, although some physical address information may\n   be\
    \ available from the WHOIS database of Internet registries.\n"
- title: B.2.  Exposing Multiple Devices
  contents:
  - "B.2.  Exposing Multiple Devices\n   Another concern that has been aired involves\
    \ the user wanting to\n   conceal the presence of a large number of computers\
    \ or other devices\n   connected to a network; NAT can \"hide\" all this equipment\
    \ behind a\n   single address, but it is not perfect either [FNAT].\n   One practical\
    \ reason why some administrators may find this desirable\n   is being able to\
    \ thwart certain ISPs' business models.  These models\n   require payment based\
    \ on the number of connected computers, rather\n   than the connectivity as a\
    \ whole.\n   Similar feasibility issues as described above apply.  To a degree,\n\
    \   the number of machines present could be obscured by the sufficiently\n   frequent\
    \ reuse of privacy addresses [RFC4941] -- that is, if during a\n   short period,\
    \ dozens of generated addresses seem to be in use, it's\n   difficult to estimate\
    \ whether they are generated by just one host or\n   multiple hosts.\n"
- title: B.3.  Exposing the Site by a Stable Prefix
  contents:
  - "B.3.  Exposing the Site by a Stable Prefix\n   When an ISP provides IPv6 connectivity\
    \ to its customers, including\n   home or consumer users, it delegates a fixed\
    \ global routing prefix\n   (usually a /48) to them.  This is in contrast to the\
    \ typical IPv4\n   situation where home users typically receive a dynamically\
    \ allocated\n   address that may be stable only for a period of hours.\n   Due\
    \ to this fixed allocation, it is easier to correlate the global\n   routing prefix\
    \ to a network site.  With consumer users, this\n   correlation leads to a privacy\
    \ issue, since a site is often\n   equivalent to an individual or a family in\
    \ such a case.  Consequently\n   some users might be concerned about being able\
    \ to be tracked based on\n   their /48 allocation if it is static [RFC4941]. \
    \ On the other hand,\n   many users may find having a static allocation desirable\
    \ as it allows\n   them to offer services hosted in their network more easily.\n\
    \   This situation is not affected even if a user changes his/her\n   interface\
    \ ID or subnet ID, because malicious users can still discover\n   this binding.\
    \  On larger sites, the situation can be mitigated by\n   using \"untraceable\"\
    \ IPv6 addresses as described in [RFC4864], and it\n   is possible that in the\
    \ future ISPs might be prepared to offer\n   untraceable addresses to their consumer\
    \ customers to minimize the\n   privacy issues.\n   This privacy issue is common\
    \ to both IPv4 and IPv6 and is inherent in\n   the use of IP addresses as both\
    \ identifiers for node interfaces and\n   locators for the nodes.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Elwyn B. Davies\n   Consultant\n   Soham, Cambs\n   UK\n\
    \   Phone: +44 7889 488 335\n   EMail: elwynd@dial.pipex.com\n   Suresh Krishnan\n\
    \   Ericsson\n   8400 Decarie Blvd.\n   Town of Mount Royal, QC  H4P 2N2\n   Canada\n\
    \   Phone: +1 514-345-7900\n   EMail: suresh.krishnan@ericsson.com\n   Pekka Savola\n\
    \   CSC/Funet\n   EMail: psavola@funet.fi\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
