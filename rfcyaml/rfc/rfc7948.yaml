- title: __initial_text__
  contents:
  - '             Internet Exchange BGP Route Server Operations

    '
- title: Abstract
  contents:
  - "Abstract\n   The popularity of Internet Exchange Points (IXPs) brings new\n \
    \  challenges to interconnecting networks.  While bilateral External BGP\n   (EBGP)\
    \ sessions between exchange participants were historically the\n   most common\
    \ means of exchanging reachability information over an IXP,\n   the overhead associated\
    \ with this interconnection method causes\n   serious operational and administrative\
    \ scaling problems for IXP\n   participants.\n   Multilateral interconnection\
    \ using Internet route servers can\n   dramatically reduce the administrative\
    \ and operational overhead\n   associated with connecting to IXPs; in some cases,\
    \ route servers are\n   used by IXP participants as their preferred means of exchanging\n\
    \   routing information.\n   This document describes operational considerations\
    \ for multilateral\n   interconnections at IXPs.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7948.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Notational Conventions  . . . . . . . . . . . . .\
    \ . . . .   3\n   2.  Bilateral BGP Sessions  . . . . . . . . . . . . . . . .\
    \ . . .   3\n   3.  Multilateral Interconnection  . . . . . . . . . . . . . .\
    \ . .   4\n   4.  Operational Considerations for Route Server Installations .\
    \ .   6\n     4.1.  Path Hiding . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n     4.2.  Route Server Scaling  . . . . . . . . . . . . . . . . . .  \
    \ 6\n       4.2.1.  Tackling Scaling Issues . . . . . . . . . . . . . . .   7\n\
    \         4.2.1.1.  View Merging and Decomposition  . . . . . . . . .   7\n  \
    \       4.2.1.2.  Destination Splitting . . . . . . . . . . . . . .   8\n    \
    \     4.2.1.3.  NEXT_HOP Resolution . . . . . . . . . . . . . . .   8\n     4.3.\
    \  Prefix Leakage Mitigation . . . . . . . . . . . . . . . .   8\n     4.4.  Route\
    \ Server Redundancy . . . . . . . . . . . . . . . . .   9\n     4.5.  AS_PATH\
    \ Consistency Check . . . . . . . . . . . . . . . .   9\n     4.6.  Export Routing\
    \ Policies . . . . . . . . . . . . . . . . .  10\n       4.6.1.  BGP Communities\
    \ . . . . . . . . . . . . . . . . . . .  10\n       4.6.2.  Internet Routing Registries\
    \ . . . . . . . . . . . . .  10\n       4.6.3.  Client-Accessible Databases .\
    \ . . . . . . . . . . . .  10\n     4.7.  Layer 2 Reachability Problems . . .\
    \ . . . . . . . . . . .  11\n     4.8.  BGP NEXT_HOP Hijacking  . . . . . . .\
    \ . . . . . . . . . .  11\n     4.9.  BGP Operations and Security . . . . . .\
    \ . . . . . . . . .  13\n   5.  Security Considerations . . . . . . . . . . .\
    \ . . . . . . . .  13\n   6.  References  . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  13\n     6.1.  Normative References  . . . . . . . . . . . .\
    \ . . . . . .  13\n     6.2.  Informative References  . . . . . . . . . . . .\
    \ . . . . .  14\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .  15\n   Authors' Addresses  . . . . . . . . . . . . . . . . . . . .\
    \ . . .  15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Internet Exchange Points (IXPs) provide IP data interconnection\n\
    \   facilities for their participants, using data link-layer protocols\n   such\
    \ as Ethernet.  The Border Gateway Protocol (BGP) [RFC4271] is\n   normally used\
    \ to facilitate exchange of network reachability\n   information over these media.\n\
    \   As bilateral interconnection between IXP participants requires\n   operational\
    \ and administrative overhead, BGP route servers [RFC7947]\n   are often deployed\
    \ by IXP operators to provide a simple and\n   convenient means of interconnecting\
    \ IXP participants with each other.\n   A route server redistributes BGP routes\
    \ received from its BGP clients\n   to other clients according to a prespecified\
    \ policy, and it can be\n   viewed as similar to an EBGP equivalent of an Internal\
    \ BGP (IBGP)\n   [RFC4456] route reflector.\n   Route servers at IXPs require\
    \ careful management, and it is important\n   for route server operators to thoroughly\
    \ understand both how they\n   work and what their limitations are.  In this document,\
    \ we discuss\n   several issues of operational relevance to route server operators\
    \ and\n   provide recommendations to help route server operators provision a\n\
    \   reliable interconnection service.\n"
- title: 1.1.  Notational Conventions
  contents:
  - "1.1.  Notational Conventions\n   The keywords \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   [RFC2119].\n   The phrase \"BGP route\" in this document\
    \ should be interpreted as the\n   term \"Route\" described in [RFC4271].\n"
- title: 2.  Bilateral BGP Sessions
  contents:
  - "2.  Bilateral BGP Sessions\n   Bilateral interconnection is a method of interconnecting\
    \ routers\n   using individual BGP sessions between each pair of participant\n\
    \   routers on an IXP, in order to exchange reachability information.  If\n  \
    \ an IXP participant wishes to implement an open interconnection policy\n   --\
    \ i.e., a policy of interconnecting with as many other IXP\n   participants as\
    \ possible -- it is necessary for the participant to\n   liaise with each of their\
    \ intended interconnection partners.\n   Interconnection can then be implemented\
    \ bilaterally by configuring a\n   BGP session on both participants' routers to\
    \ exchange network\n   reachability information.  If each exchange participant\
    \ interconnects\n   with each other participant, a full mesh of BGP sessions is\
    \ needed,\n   as shown in Figure 1.\n                               ___      ___\n\
    \                              /   \\    /   \\\n                           ..|\
    \ AS1 |..| AS2 |..\n                          :   \\___/____\\___/   :\n     \
    \                     :     | \\    / |     :\n                          :   \
    \  |  \\  /  |     :\n                          : IXP |   \\/   |     :\n    \
    \                      :     |   /\\   |     :\n                          :  \
    \   |  /  \\  |     :\n                          :    _|_/____\\_|_    :\n   \
    \                       :   /   \\    /   \\   :\n                           ..|\
    \ AS3 |..| AS4 |..\n                              \\___/    \\___/\n         \
    \      Figure 1: Full-Mesh Interconnection at an IXP\n   Figure 1 depicts an IXP\
    \ platform with four connected routers,\n   administered by four separate exchange\
    \ participants, each of them\n   with a locally unique Autonomous System (AS)\
    \ number: AS1, AS2, AS3,\n   and AS4.  The lines between the routers depict BGP\
    \ sessions; the\n   dotted edge represents the IXP border.  Each of these four\n\
    \   participants wishes to exchange traffic with all other participants;\n   this\
    \ is accomplished by configuring a full mesh of BGP sessions on\n   each router\
    \ connected to the exchange, resulting in six BGP sessions\n   across the IXP\
    \ fabric.\n   The number of BGP sessions at an exchange has an upper bound of\n\
    \   n*(n-1)/2, where n is the number of routers at the exchange.  As many\n  \
    \ exchanges have large numbers of participating networks, the amount of\n   administrative\
    \ and operation overhead required to implement an open\n   interconnection scales\
    \ quadratically.  New participants to an IXP\n   require significant initial resourcing\
    \ in order to gain value from\n   their IXP connection, while existing exchange\
    \ participants need to\n   commit ongoing resources in order to benefit from interconnecting\n\
    \   with these new participants.\n"
- title: 3.  Multilateral Interconnection
  contents:
  - "3.  Multilateral Interconnection\n   Multilateral interconnection is implemented\
    \ using a route server\n   configured to distribute BGP routes among client routers.\
    \  The route\n   server preserves the BGP NEXT_HOP attribute from all received\
    \ BGP\n   routes and passes them with unchanged NEXT_HOP to its route server\n\
    \   clients according to its configured routing policy, as described in\n   [RFC7947].\
    \  Using this method of exchanging BGP routes, an IXP\n   participant router can\
    \ receive an aggregated list of BGP routes from\n   all other route server clients\
    \ using a single BGP session to the\n   route server instead of depending on BGP\
    \ sessions with each router at\n   the exchange.  This reduces the overall number\
    \ of BGP sessions at an\n   Internet exchange from n*(n-1)/2 to n, where n is\
    \ the number of\n   routers at the exchange.\n   Although a route server uses\
    \ BGP to exchange reachability information\n   with each of its clients, it does\
    \ not forward traffic itself and is\n   therefore not a router.\n   In practical\
    \ terms, this allows dense interconnection between IXP\n   participants with low\
    \ administrative overhead and significantly\n   simpler and smaller router configurations.\
    \  In particular, new IXP\n   participants benefit from immediate and extensive\
    \ interconnection,\n   while existing route server participants receive reachability\n\
    \   information from these new participants without necessarily having to\n  \
    \ modify their configurations.\n                               ___      ___\n\
    \                              /   \\    /   \\\n                           ..|\
    \ AS1 |..| AS2 |..\n                          :   \\___/    \\___/   :\n     \
    \                     :      \\      /      :\n                          :   \
    \    \\    /       :\n                          :        \\__/        :\n    \
    \                      : IXP   /    \\       :\n                          :  \
    \    |  RS  |      :\n                          :       \\____/       :\n    \
    \                      :        /  \\        :\n                          :  \
    \     /    \\       :\n                          :    __/      \\__    :\n   \
    \                       :   /   \\    /   \\   :\n                           ..|\
    \ AS3 |..| AS4 |..\n                              \\___/    \\___/\n         \
    \  Figure 2: IXP-Based Interconnection with Route Server\n   As illustrated in\
    \ Figure 2, each router on the IXP fabric requires\n   only a single BGP session\
    \ to the route server, from which it can\n   receive reachability information\
    \ for all other routers on the IXP\n   that also connect to the route server.\n\
    \   Multilateral and bilateral interconnections between different\n   autonomous\
    \ systems are not exclusive to each other, and it is not\n   unusual to have both\
    \ sorts of sessions configured in parallel at an\n   IXP.  This configuration\
    \ will lead to additional paths being\n   available to the BGP Decision Process,\
    \ which will calculate a best\n   path as normal.\n"
- title: 4.  Operational Considerations for Route Server Installations
  contents:
  - '4.  Operational Considerations for Route Server Installations

    '
- title: 4.1.  Path Hiding
  contents:
  - "4.1.  Path Hiding\n   \"Path hiding\" is a term used in [RFC7947] to describe\
    \ the process\n   whereby a route server may mask individual paths by applying\n\
    \   conflicting routing policies to its Loc-RIB.  When this happens,\n   route\
    \ server clients receive incomplete information from the route\n   server about\
    \ network reachability.\n   There are several approaches that may be used to mitigate\
    \ against the\n   effect of path hiding; these are described in [RFC7947].  However,\n\
    \   the only method that does not require explicit support from the route\n  \
    \ server client is for the route server itself to maintain an\n   individual Loc-RIB\
    \ for each client that is the subject of conflicting\n   routing policies.\n"
- title: 4.2.  Route Server Scaling
  contents:
  - "4.2.  Route Server Scaling\n   While deployment of multiple Loc-RIBs on the route\
    \ server presents a\n   simple way to avoid the path-hiding problem noted in Section\
    \ 4.1,\n   this approach requires significantly more computing resources on the\n\
    \   route server than where a single Loc-RIB is deployed for all clients.\n  \
    \ As the BGP Decision Process [RFC4271] must be applied to all Loc-RIBs\n   deployed\
    \ on the route server, both CPU and memory requirements on the\n   host computer\
    \ scale approximately according to O(P * N), where P is\n   the total number of\
    \ unique paths received by the route server, and N\n   is the number of route\
    \ server clients that require a unique Loc-RIB.\n   As this is a super-linear\
    \ scaling relationship, large route servers\n   may derive benefit from deploying\
    \ per-client Loc-RIBs only where they\n   are required.\n   Regardless of whether\
    \ any Loc-RIB optimization technique is\n   implemented, the route server's theoretical\
    \ upper-bound network\n   bandwidth requirements will scale according to O(P_tot\
    \ * N), where\n   P_tot is the total number of unique paths received by the route\n\
    \   server, and N is the total number of route server clients.  In the\n   case\
    \ where P_avg (the arithmetic mean number of unique paths received\n   per route\
    \ server client) remains roughly constant even as the number\n   of connected\
    \ clients increases, the total number of prefixes will\n   equal the average number\
    \ of prefixes multiplied by the number of\n   clients.  Symbolically, this can\
    \ be written as P_tot = P_avg * N.  If\n   we assume that in the worst case, each\
    \ prefix is associated with a\n   different set of BGP path attributes, so must\
    \ be transmitted\n   individually, the network bandwidth scaling function can\
    \ be rewritten\n   as O((P_avg * N) * N) or O(N^2).  This quadratic upper bound\
    \ on the\n   network traffic requirements indicates that the route server model\n\
    \   may not scale well for larger numbers of clients.\n   In practice, most prefixes\
    \ will be associated with a limited number\n   of BGP path attribute sets, allowing\
    \ more efficient transmission of\n   BGP routes from the route server than the\
    \ theoretical analysis\n   suggests.  In the analysis above, P_tot will increase\
    \ monotonically\n   according to the number of clients, but it will have an upper\
    \ limit\n   of the size of the full default-free routing table of the network\
    \ in\n   which the IXP is located.  Observations from production route servers\n\
    \   have shown that most route server clients generally avoid using\n   custom\
    \ routing policies, and consequently, the route server may not\n   need to deploy\
    \ per-client Loc-RIBs.  These practical bounds reduce\n   the theoretical worst-case\
    \ scaling scenario to the point where route\n   server deployments are manageable\
    \ even on larger IXPs.\n"
- title: 4.2.1.  Tackling Scaling Issues
  contents:
  - "4.2.1.  Tackling Scaling Issues\n   The problem of scaling route servers still\
    \ presents serious practical\n   challenges and requires careful attention.  Scaling\
    \ analysis\n   indicates problems in three key areas: route processor CPU overhead\n\
    \   associated with BGP Decision Process calculations, the memory\n   requirements\
    \ for handling many different BGP path entries, and the\n   network traffic bandwidth\
    \ required to distribute these BGP routes\n   from the route server to each route\
    \ server client.\n"
- title: 4.2.1.1.  View Merging and Decomposition
  contents:
  - "4.2.1.1.  View Merging and Decomposition\n   View merging and decomposition,\
    \ outlined in [RS-ARCH], describes a\n   method of optimizing memory and CPU requirements\
    \ where multiple route\n   server clients are subject to exactly the same routing\
    \ policies.  In\n   this situation, multiple Loc-RIB views can be merged into\
    \ a single\n   view.\n   There are several variations of this approach.  If the\
    \ route server\n   operator has prior knowledge of interconnection relationships\
    \ between\n   route server clients, then the operator may configure separate\n\
    \   Loc-RIBs only for route server clients with unique routing policies.\n   As\
    \ this approach requires prior knowledge of interconnection\n   relationships,\
    \ the route server operator must depend on each client\n   sharing their interconnection\
    \ policies either in an internal\n   provisioning database controlled by the operator\
    \ or in an external\n   data store such as an Internet Routing Registry Database.\n\
    \   Conversely, the route server implementation itself may implement\n   internal\
    \ view decomposition by creating virtual Loc-RIBs based on a\n   single in-memory\
    \ master Loc-RIB, with delta differences for each\n   prefix subject to different\
    \ routing policies.  This allows a more\n   fine-grained and flexible approach\
    \ to the problem of Loc-RIB scaling,\n   at the expense of requiring a more complex\
    \ in-memory Loc-RIB\n   structure.\n   Whatever method of view merging and decomposition\
    \ is chosen on a\n   route server, pathological edge cases can be created whereby\
    \ they\n   will scale no better than fully non-optimized per-client Loc-RIBs.\n\
    \   However, as most route server clients connect to a route server for\n   the\
    \ purposes of reducing overhead, rather than implementing complex\n   per-client\
    \ routing policies, edge cases tend not to arise in\n   practice.\n"
- title: 4.2.1.2.  Destination Splitting
  contents:
  - "4.2.1.2.  Destination Splitting\n   Destination splitting, also described in\
    \ [RS-ARCH], describes a\n   method for route server clients to connect to multiple\
    \ route servers\n   and to send non-overlapping sets of prefixes to each route\
    \ server.\n   As each route server computes the best path for its own set of\n\
    \   prefixes, the quadratic scaling requirement operates on multiple\n   smaller\
    \ sets of prefixes.  This reduces the overall computational and\n   memory requirements\
    \ for managing multiple Loc-RIBs and performing the\n   best-path calculation\
    \ on each.\n   In practice, the route server operator would need all route server\n\
    \   clients to send a full set of BGP routes to each route server.  The\n   route\
    \ server operator could then selectively filter these prefixes\n   for each route\
    \ server by using either BGP Outbound Route Filtering\n   [RFC5291] or inbound\
    \ prefix filters configured on client BGP\n   sessions.\n"
- title: 4.2.1.3.  NEXT_HOP Resolution
  contents:
  - "4.2.1.3.  NEXT_HOP Resolution\n   As route servers are usually deployed at IXPs\
    \ where all connected\n   routers are on the same Layer 2 broadcast domain, recursive\n\
    \   resolution of the NEXT_HOP attribute is generally not required and\n   can\
    \ be replaced by a simple check to ensure that the NEXT_HOP value\n   for each\
    \ received BGP route is a network address on the IXP LAN's IP\n   address range.\n"
- title: 4.3.  Prefix Leakage Mitigation
  contents:
  - "4.3.  Prefix Leakage Mitigation\n   Prefix leakage occurs when a BGP client unintentionally\
    \ distributes\n   BGP routes to one or more neighboring BGP routers.  Prefix leakage\
    \ of\n   this form to a route server can cause serious connectivity problems\n\
    \   at an IXP if each route server client is configured to accept all BGP\n  \
    \ routes from the route server.  It is therefore RECOMMENDED when\n   deploying\
    \ route servers that, due to the potential for collateral\n   damage caused by\
    \ BGP route leakage, route server operators deploy\n   prefix leakage mitigation\
    \ measures in order to prevent unintentional\n   prefix announcements or else\
    \ limit the scale of any such leak.\n   Although not foolproof, per-client inbound\
    \ prefix limits can restrict\n   the damage caused by prefix leakage in many cases.\
    \  Per-client\n   inbound prefix filtering on the route server is a more deterministic\n\
    \   and usually more reliable means of preventing prefix leakage but\n   requires\
    \ more administrative resources to maintain properly.\n   If a route server operator\
    \ implements per-client inbound prefix\n   filtering, then it is RECOMMENDED that\
    \ the operator also builds in\n   mechanisms to automatically compare the Adj-RIB-In\
    \ received from each\n   client with the inbound prefix lists configured for those\
    \ clients.\n   Naturally, it is the responsibility of the route server client\
    \ to\n   ensure that their stated prefix list is compatible with what they\n \
    \  announce to an IXP route server.  However, many network operators do\n   not\
    \ carefully manage their published routing policies, and it is not\n   uncommon\
    \ to see significant variation between the two sets of\n   prefixes.  Route server\
    \ operator visibility into this discrepancy can\n   provide significant advantages\
    \ to both operator and client.\n"
- title: 4.4.  Route Server Redundancy
  contents:
  - "4.4.  Route Server Redundancy\n   As the purpose of an IXP route server implementation\
    \ is to provide a\n   reliable reachability brokerage service, it is RECOMMENDED\
    \ that\n   exchange operators who implement route server systems provision\n \
    \  multiple route servers on each shared Layer 2 domain.  There is no\n   requirement\
    \ to use the same BGP implementation or operating system\n   for each route server\
    \ on the IXP fabric; however, it is RECOMMENDED\n   that where an operator provisions\
    \ more than a single server on the\n   same shared Layer 2 domain, each route\
    \ server implementation be\n   configured equivalently and in such a manner that\
    \ the path\n   reachability information from each system is identical.\n"
- title: 4.5.  AS_PATH Consistency Check
  contents:
  - "4.5.  AS_PATH Consistency Check\n   [RFC4271] requires that every BGP speaker\
    \ that advertises a BGP route\n   to another external BGP speaker prepends its\
    \ own AS number as the\n   last element of the AS_PATH sequence.  Therefore, the\
    \ leftmost AS in\n   an AS_PATH attribute should be equal to the AS number of\
    \ the BGP\n   speaker that sent the BGP route.\n   As [RFC7947] suggests that\
    \ route servers should not modify the\n   AS_PATH attribute, a consistency check\
    \ on the AS_PATH of a BGP route\n   received by a route server client would normally\
    \ fail.  It is\n   therefore RECOMMENDED that route server clients disable the\
    \ AS_PATH\n   consistency check towards the route server.\n"
- title: 4.6.  Export Routing Policies
  contents:
  - "4.6.  Export Routing Policies\n   Policy filtering is commonly implemented on\
    \ route servers to provide\n   prefix distribution control mechanisms for route\
    \ server clients.  A\n   route server \"export\" policy is a policy that affects\
    \ prefixes sent\n   from the route server to a route server client.  Several different\n\
    \   strategies are commonly used for implementing route server export\n   policies.\n"
- title: 4.6.1.  BGP Communities
  contents:
  - "4.6.1.  BGP Communities\n   Prefixes sent to the route server are tagged with\
    \ specific standard\n   BGP Communities [RFC1997] or Extended Communities [RFC4360]\n\
    \   attributes, based on predefined values agreed between the operator\n   and\
    \ all clients.  Based on these Communities values, BGP routes may\n   be propagated\
    \ to all other clients, a subset of clients, or none.\n   This mechanism allows\
    \ route server clients to instruct the route\n   server to implement per-client\
    \ export routing policies.\n   As both standard BGP Communities and Extended Communities\
    \ values are\n   restricted to 6 octets or fewer, it is not possible for both\
    \ the\n   global and local administrator fields in the BGP Communities value to\n\
    \   fit a 4-octet AS number.  Bearing this in mind, the route server\n   operator\
    \ SHOULD take care to ensure that the predefined BGP\n   Communities values mechanism\
    \ used on their route server is compatible\n   with 4-octet AS numbers [RFC6793].\n"
- title: 4.6.2.  Internet Routing Registries
  contents:
  - "4.6.2.  Internet Routing Registries\n   Internet Routing Registry databases (IRRDBs)\
    \ may be used by route\n   server operators to construct per-client routing policies.\
    \  \"Routing\n   Policy Specification Language (RPSL)\" [RFC2622] provides a\n\
    \   comprehensive grammar for describing interconnection relationships,\n   and\
    \ several toolsets exist that can be used to translate RPSL policy\n   description\
    \ into route server configurations.\n"
- title: 4.6.3.  Client-Accessible Databases
  contents:
  - "4.6.3.  Client-Accessible Databases\n   Should the route server operator not\
    \ wish to use either BGP\n   Communities or the public IRRDBs for implementing\
    \ client export\n   policies, they may implement their own routing policy database\
    \ system\n   for managing their clients' requirements.  A database of this form\n\
    \   SHOULD allow a route server client operator to update their routing\n   policy\
    \ and provide a mechanism for allowing the client to specify\n   whether they\
    \ wish to exchange all their prefixes with any other route\n   server client.\
    \  Optionally, the implementation may allow a client to\n   specify unique routing\
    \ policies for individual prefixes over which\n   they have routing policy control.\n"
- title: 4.7.  Layer 2 Reachability Problems
  contents:
  - "4.7.  Layer 2 Reachability Problems\n   Layer 2 reachability problems on an IXP\
    \ can cause serious operational\n   problems for IXP participants that depend\
    \ on route servers for\n   interconnection.  Ethernet switch forwarding bugs have\
    \ occasionally\n   been observed to cause non-transitive reachability.  For example,\n\
    \   given a route server and two IXP participants, A and B, if the two\n   participants\
    \ can reach the route server but cannot reach each other,\n   then traffic between\
    \ the participants may be dropped until such time\n   as the Layer 2 forwarding\
    \ problem is resolved.  This situation does\n   not tend to occur in bilateral\
    \ interconnection arrangements, as the\n   routing control path between the two\
    \ hosts is usually (but not\n   always, due to IXP inter-switch connectivity load-balancing\n\
    \   algorithms) the same as the data path between them.\n   Problems of this form\
    \ can be partially mitigated by using\n   Bidirectional Forwarding Detection (BFD)\
    \ [RFC5881].  However, as this\n   is a bilateral protocol configured between\
    \ routers, and as there is\n   currently no protocol to automatically configure\
    \ BFD sessions between\n   route server clients, BFD does not currently provide\
    \ an optimal means\n   of handling the problem.  Even if automatic BFD session\
    \ configuration\n   were possible, practical problems would remain.  If two IXP\
    \ route\n   server clients were configured to run BFD between each other and the\n\
    \   protocol detected a non-transitive loss of reachability between them,\n  \
    \ each of those routers would internally mark the other's prefixes as\n   unreachable\
    \ via the BGP path announced by the route server.  As the\n   route server only\
    \ propagates a single best path to each client, this\n   could cause either sub-optimal\
    \ routing or complete connectivity loss\n   if there were no alternative paths\
    \ learned from other BGP sessions.\n"
- title: 4.8.  BGP NEXT_HOP Hijacking
  contents:
  - "4.8.  BGP NEXT_HOP Hijacking\n   Item 2 in Section 5.1.3 of [RFC4271] allows\
    \ EBGP speakers to change\n   the NEXT_HOP address of a received BGP route to\
    \ be a different\n   Internet address on the same subnet.  This is the mechanism\
    \ that\n   allows route servers to operate on a shared Layer 2 IXP network.\n\
    \   However, the mechanism can be abused by route server clients to\n   redirect\
    \ traffic for their prefixes to other IXP participant routers.\n             \
    \                      ____\n                                  /    \\\n     \
    \                            | AS99 |\n                                  \\____/\n\
    \                                   /  \\\n                                  /\
    \    \\\n                               __/      \\__\n                      \
    \        /   \\    /   \\\n                           ..| AS1 |..| AS2 |..\n \
    \                         :   \\___/    \\___/   :\n                         \
    \ :      \\      /      :\n                          :       \\    /       :\n\
    \                          :        \\__/        :\n                         \
    \ : IXP   /    \\       :\n                          :      |  RS  |      :\n\
    \                          :       \\____/       :\n                         \
    \ :                    :\n                           ....................\n  \
    \         Figure 3: BGP NEXT_HOP Hijacking Using a Route Server\n   For example,\
    \ in Figure 3, if AS1 and AS2 both announce BGP routes for\n   AS99 to the route\
    \ server, AS1 could set the NEXT_HOP address for\n   AS99's routes to be the address\
    \ of AS2's router, thereby diverting\n   traffic for AS99 via AS2.  This may override\
    \ the routing policies of\n   AS99 and AS2.\n   Worse still, if the route server\
    \ operator does not use inbound prefix\n   filtering, AS1 could announce any arbitrary\
    \ prefix to the route\n   server with a NEXT_HOP address of any other IXP participant.\
    \  This\n   could be used as a denial-of-service mechanism against either the\n\
    \   users of the address space being announced by illicitly diverting\n   their\
    \ traffic or the other IXP participant by overloading their\n   network with traffic\
    \ that would not normally be sent there.\n   This problem is not specific to route\
    \ servers, and it can also be\n   implemented using bilateral BGP sessions.  However,\
    \ the potential\n   damage is amplified by route servers because a single BGP\
    \ session can\n   be used to affect many networks simultaneously.\n   Because\
    \ route server clients cannot easily implement next-hop policy\n   checks against\
    \ route server BGP sessions, route server operators\n   SHOULD check that the\
    \ BGP NEXT_HOP attribute for BGP routes received\n   from a route server client\
    \ matches the interface address of the\n   client.  If the route server receives\
    \ a BGP route where these\n   addresses are different and where the announcing\
    \ route server client\n   is in a different AS to the route server client that\
    \ uses the next-\n   hop address, the BGP route SHOULD be dropped.  Permitting\
    \ next-hop\n   rewriting for the same AS allows an organization with multiple\n\
    \   connections into an IXP configured with different IP addresses to\n   direct\
    \ traffic off the IXP infrastructure through any of their\n   connections for\
    \ traffic engineering or other purposes.\n"
- title: 4.9.  BGP Operations and Security
  contents:
  - "4.9.  BGP Operations and Security\n   BGP route servers SHOULD be configured\
    \ and operated in compliance\n   with [RFC7454] with the exception of Section\
    \ 11, \"BGP Community\n   Scrubbing\", which may not necessarily apply on a route\
    \ server,\n   depending on the route server operator policy.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   On route server installations that do not employ\
    \ path-hiding\n   mitigation techniques, the path-hiding problem outlined in\n\
    \   Section 4.1 could be used by an IXP participant to prevent the route\n   server\
    \ from sending any BGP routes for a particular prefix to other\n   route server\
    \ clients, even if there was a valid path to that\n   destination via another\
    \ route server client.\n   If the route server operator does not implement prefix\
    \ leakage\n   mitigation as described in Section 4.3, it is trivial for route\n\
    \   server clients to implement denial-of-service attacks against\n   arbitrary\
    \ Internet networks by leaking BGP routes to a route server.\n   Route server\
    \ installations SHOULD be secured against BGP NEXT_HOP\n   hijacking, as described\
    \ in Section 4.8.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC7947]  Jasinska, E., Hilliard, N., Raszuk, R., and N. Bakker,\n      \
    \        \"Internet Exchange BGP Route Server\", RFC 7947,\n              DOI\
    \ 10.17487/RFC7947, September 2016,\n              <http://www.rfc-editor.org/info/rfc7947>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC1997]  Chandra, R., Traina, P., and T. Li,\
    \ \"BGP Communities\n              Attribute\", RFC 1997, DOI 10.17487/RFC1997,\
    \ August 1996,\n              <http://www.rfc-editor.org/info/rfc1997>.\n   [RFC2622]\
    \  Alaettinoglu, C., Villamizar, C., Gerich, E., Kessens, D.,\n              Meyer,\
    \ D., Bates, T., Karrenberg, D., and M. Terpstra,\n              \"Routing Policy\
    \ Specification Language (RPSL)\", RFC 2622,\n              DOI 10.17487/RFC2622,\
    \ June 1999,\n              <http://www.rfc-editor.org/info/rfc2622>.\n   [RFC4271]\
    \  Rekhter, Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A\n              Border\
    \ Gateway Protocol 4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271,\
    \ January 2006,\n              <http://www.rfc-editor.org/info/rfc4271>.\n   [RFC4360]\
    \  Sangli, S., Tappan, D., and Y. Rekhter, \"BGP Extended\n              Communities\
    \ Attribute\", RFC 4360, DOI 10.17487/RFC4360,\n              February 2006, <http://www.rfc-editor.org/info/rfc4360>.\n\
    \   [RFC4456]  Bates, T., Chen, E., and R. Chandra, \"BGP Route\n            \
    \  Reflection: An Alternative to Full Mesh Internal BGP\n              (IBGP)\"\
    , RFC 4456, DOI 10.17487/RFC4456, April 2006,\n              <http://www.rfc-editor.org/info/rfc4456>.\n\
    \   [RFC5291]  Chen, E. and Y. Rekhter, \"Outbound Route Filtering\n         \
    \     Capability for BGP-4\", RFC 5291, DOI 10.17487/RFC5291,\n              August\
    \ 2008, <http://www.rfc-editor.org/info/rfc5291>.\n   [RFC5881]  Katz, D. and\
    \ D. Ward, \"Bidirectional Forwarding Detection\n              (BFD) for IPv4\
    \ and IPv6 (Single Hop)\", RFC 5881,\n              DOI 10.17487/RFC5881, June\
    \ 2010,\n              <http://www.rfc-editor.org/info/rfc5881>.\n   [RFC6793]\
    \  Vohra, Q. and E. Chen, \"BGP Support for Four-Octet\n              Autonomous\
    \ System (AS) Number Space\", RFC 6793,\n              DOI 10.17487/RFC6793, December\
    \ 2012,\n              <http://www.rfc-editor.org/info/rfc6793>.\n   [RFC7454]\
    \  Durand, J., Pepelnjak, I., and G. Doering, \"BGP Operations\n             \
    \ and Security\", BCP 194, RFC 7454, DOI 10.17487/RFC7454,\n              February\
    \ 2015, <http://www.rfc-editor.org/info/rfc7454>.\n   [RS-ARCH]  Govindan, R.,\
    \ Alaettinoglu, C., Varadhan, K., and D.\n              Estrin, \"A Route Server\
    \ Architecture for Inter-Domain\n              Routing\", 1995,\n            \
    \  <http://www.cs.usc.edu/assets/003/83191.pdf>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Chris Hall, Ryan Bickhart,\
    \ Steven\n   Bakker, and Eduardo Ascenco Reis for their valuable input.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nick Hilliard\n   INEX\n   4027 Kingswood Road\n   Dublin\
    \  24\n   Ireland\n   Email: nick@inex.ie\n   Elisa Jasinska\n   BigWave IT\n\
    \   ul. Skawinska 27/7\n   Krakow, MP  31-066\n   Poland\n   Email: elisa@bigwaveit.org\n\
    \   Robert Raszuk\n   Bloomberg LP\n   731 Lexington Ave.\n   New York, NY  10022\n\
    \   United States of America\n   Email: robert@raszuk.net\n   Niels Bakker\n \
    \  Akamai Technologies B.V.\n   Kingsfordweg 151\n   Amsterdam  1043 GR\n   Netherlands\n\
    \   Email: nbakker@akamai.com\n"
