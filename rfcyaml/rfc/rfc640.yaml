- title: __initial_text__
  contents:
  - "                                                           Jon Postel\n     \
    \                                                       19 JUN 75\n          \
    \                Revised FTP Reply Codes                          1\n    This\
    \ document describes a revised set of reply codes for the File\n    Transfer Protocol.\
    \                                                     2\n    The aim of this revision\
    \ is to satisfy the goal of using reply\n    codes to enable the command issuing\
    \ process to easily determine\n    the outcome of each command. The user protocol\
    \ interpreter should\n    be able to determine the success or failure of a command\
    \ by\n    examining the first digit of the reply code.                       \
    \    3\n    An important change in the sequencing of commands and replies\n  \
    \  which may not be obvious in the following documents concerns the\n    establishment\
    \ of the data connection.                                  4\n       In the previous\
    \ FTP specifications when an actual transfer\n       command (STOR, RETR, APPE,\
    \ LIST, NLIST, MLFL) was issued the\n       preliminary reply was sent after the\
    \ data connection was\n       established. This presented a problem for some user\
    \ protocol\n       interpreters which had difficulty monitoring two connections\n\
    \       asynchronously.                                                    4a\n\
    \       The current specification is that the preliminary reply to the\n     \
    \  actual transfer commands indicates that the file can be\n       transferred\
    \ and either the connection was previously\n       established or an attempt is\
    \ about to be made to establish the\n       data connection.                 \
    \                                  4b\n    This reply code revision is a modification\
    \ of the protocol in\n    described in RFC 542, that is to say that the protocol\n\
    \    implementation associated with socket number 21 (decimal) is the\n    protocol\
    \ specified by the combination of RFC 542 and this RFC.         5\n    A note\
    \ of thanks to those who contributed to this work: Ken\n    Pogran, Mark Krilanovich,\
    \ Wayne Hathway, and especially Nancy\n    Neigus.                           \
    \                                     6\f    NWG/RFC# 640                    \
    \           JBP NJN 5-JUN-74 16:07  30843\n                                  \
    \                       Nancy Neigus\n                                       \
    \                    Ken Pogran\n                                            \
    \               Jon Postel\n                                                 \
    \           19 JUN 75\n                     A New Schema for FTP Reply Codes \
    \                     7\n    Replies to File Transfer Protocol commands were devised\
    \ to ensure\n    the synchronization of requests and actions in the process of\n\
    \    file transfer, and to guarantee that the user process always\n    knows the\
    \ state of the Server. Every command must generate at\n    least one reply, although\
    \ there may be more than one; in the\n    latter case, the multiple replies must\
    \ be easily distinguished.\n    In addition, some commands occur in sequential\
    \ groups, such as\n    USER, PASS and ACCT, or RNFR and RNTO.  The replies show\
    \ the\n    existence of an intermediate state if all preceding commands have\n\
    \    been successful.  A failure at any point in the sequence\n    necessitates\
    \ the repetition of the entire sequence from the\n    beginning.             \
    \                                                8\n       Details of the command-reply\
    \ sequence will be made explicit in\n       a state diagram.                 \
    \                                  8a\n    An FTP reply consists of a three digit\
    \ number (transmitted as\n    three alphanumeric characters) followed by some\
    \ text.  The number\n    is intended for use by automata to determine what state\
    \ to enter\n    next; the text is intended for the human user.  It is intended\n\
    \    that the three digits contain enough encoded information that the\n    user-process\
    \ (the User-PI described in RFC 542) will not need to\n    examine the text and\
    \ may either discard it or pass it on to the\n    user, as appropriate.  In particular,\
    \ the text may be\n    server-dependent, so there are likely to be varying texts\
    \ for\n    each reply code.                                                  \
    \     9\n    Formally, a reply is defined to contain the 3-digit code,\n    followed\
    \ by Space <SP>, followed by one line of text (where some\n    maximum line length\
    \ has been specified), and terminated by the\n    TELNET end-of-line code.  There\
    \ will be cases, however, where the\n    text is longer than a single line.  In\
    \ these cases the complete\n    text must be bracketed so the User-process knows\
    \ when it may stop\n    reading the reply (i.e. stop processing input on the TELNET\n\
    \    connection) and go do other things.  This requires a special\n    format\
    \ on the first line to indicate that more than one line is\n    coming, and another\
    \ on the last line to designate it as the last.\n    At least one of these must\
    \ contain the appropriate reply code to\f    NWG/RFC# 640                    \
    \           JBP NJN 5-JUN-74 16:07  30843\n    Neigus                        \
    \               FTP Reply Codes  [3]\n    indicate the state of the transaction.\
    \  To satisfy all factions\n    it was decided that both the first and last line\
    \ codes should be\n    the same.                                             \
    \                10\n       Thus the format for multi-line replies is that the\
    \ first line\n       will begin with the exact required reply code, followed\n\
    \       immediately by a Hyphen, \"-\" (also known as Minus), followed\n     \
    \  by text.  The last line will begin with the same code,\n       followed immediately\
    \ by Space <SP>, optionally some text, and\n       TELNET <eol>.             \
    \                                        10a\n          For example:\n       \
    \                        123-First line\n                               Second\
    \ line\n                                 234 A line beginning with numbers\n \
    \                              123 The last line                        10a1\n\
    \       The user-process then simply needs to search for the second\n       occurrence\
    \ of the same reply code, followed by <SP> (Space),\n       at the beginning of\
    \ a line, and ignore all intermediary lines.\n       If an intermediary line begins\
    \ with a 3-digit number, the\n       Server must pad the front to avoid confusion.\
    \                     10b\n          This scheme allows standard system routines\
    \ to be used for\n          reply information (such as for the STAT reply), with\n\
    \          \"artificial\" first and last lines tacked on.  In the rare\n     \
    \     cases where these routines are able to generate three\n          digits\
    \ and a Space at the beginning of any line, the\n          beginning of each text\
    \ line should be offset by some\n          neutral text, like Space.         \
    \                            10b1\n       This scheme assumes that multi-line\
    \ replies may not be nested.\n       We  have found that, in general, nesting\
    \ of replies will not\n       occur, except for random system messages (called\
    \ spontaneous\n       replies in the previous FTP incarnations) which may interrupt\n\
    \       another reply.  Spontaneous replies are no longer defined;\n       system\
    \ messages (i.e. those not processed by the FTP server)\n       will NOT carry\
    \ reply codes and may occur anywhere in the\n       command-reply sequence.  They\
    \ may be ignored by the\n       User-process as they are only information for\
    \ the human user.     10c\n    The three digits of the reply each have a special\
    \ significance.\n    This is intended to allow a range of very simple to very\n\
    \    sophisticated response by the user-process.  The first digit\n    denotes\
    \ whether the response is good, bad or incomplete.\n    (Referring to the state\
    \ diagram) an unsophisticated user-process\n    will be able to determine its\
    \ next action (proceed as planned,\n    redo, retrench, etc.) by simply examining\
    \ this first digit.  A\n    user-process that wants to know approximately what\
    \ kind of error\f    NWG/RFC# 640                               JBP NJN 5-JUN-74\
    \ 16:07  30843\n    Neigus                                       FTP Reply Codes\
    \  [4]\n    occurred (e.g. file system error, command syntax error) may\n    examine\
    \ the second digit, reserving the third digit for the\n    finest gradation of\
    \ information (e.g. RNTO command without a\n    preceding RNFR.)             \
    \                                         11\n       There are four values for\
    \ the first digit of the reply code:      11a\n       1yz   Positive Preliminary\
    \ reply                                  11b\n          The requested action is\
    \ being initiated; expect another\n          reply before proceeding with a new\
    \ command.  (The\n          user-process sending another command before the  completion\n\
    \          reply would be in violation of protocol; but server-FTP\n         \
    \ processes should queue any commands that arrive while a\n          preceeding\
    \ command is in progress.)  This type of reply can\n          be used to indicate\
    \ that the command was accepted and the\n          user-process may now pay attention\
    \ to the data connections,\n          for implementations where simultaneous monitoring\
    \ is\n          difficult.                                                   \
    \ 11b1\n       2yz   Positive Completion reply                               \
    \    11c\n          The requested action has been successfully completed.  A\n\
    \          new request may be initiated.                                 11c1\n\
    \       3yz   Positive Intermediate reply                                 11d\n\
    \          The command has been accepted, but the requested action is\n      \
    \    being held in abeyance, pending receipt of further\n          information.\
    \  The user should send another command\n          specifying this information.\
    \  This reply is used in command\n          sequence groups.                 \
    \                             11d1\n       4yz   Transient Negative Completion\
    \ reply                         11e\n          The command was not accepted and\
    \ the requested action did\n          not take place, but the error condition\
    \ is temporary and\n          the action may be requested again.  The user should\
    \ return\n          to the beginning of the command sequence, if any.  It is\n\
    \          difficult to assign a meaning to \"transient\", particularly\n    \
    \      when two distinct sites (Server and User-processes) have to\n         \
    \ agree on the interpretation.  Each reply in the 4yz\n          category might\
    \ have a slightly different time value, but\n          the intent is that the\
    \ user-process is encouraged to try\n          again.  A rule of thumb in determining\
    \ if a reply fits into\n          the 4yz or the 5yz (Permanent Negative) category\
    \ is that\n          replies are 4yz if the commands can be repeated without any\n\
    \          change in command form or in properties of the User or\n          Server\
    \ (e.g. the command is spelled the same with the same\f    NWG/RFC# 640      \
    \                         JBP NJN 5-JUN-74 16:07  30843\n    Neigus          \
    \                             FTP Reply Codes  [5]\n          arguments used;\
    \ the user does not change his file access or\n          user name; the server\
    \ does not put up a new\n          implementation.)                          \
    \                    11e1\n       5yz   Permanent Negative Completion reply  \
    \                       11f\n          The command was not accepted and the requested\
    \ action did\n          not take place.  The User-process is discouraged from\n\
    \          repeating the exact request (in the same sequence).  Even\n       \
    \   some \"permanent\" error conditions can be corrected, so the\n          human\
    \ user may want to direct his User-process to\n          reinitiate the command\
    \ sequence by direct action at some\n          point in the future (e.g. after\
    \ the spelling has been\n          changed, or the user has altered his directory\
    \ status.)       11f1\n       The following function groupings are encoded in\
    \ the second\n       digit:                                                  \
    \          11g\n          x0z   Syntax - These replies refer to syntax errors,\n\
    \                  syntactically correct  commands that don't fit any\n      \
    \            functional category, unimplemented or superfluous\n             \
    \     commands.                                             11g1\n          x1z\
    \   Information -  These are replies to requests for\n                  information,\
    \ such as status or help.                  11g2\n          x2z   Connections -\
    \ Replies referring to the TELNET and\n                  data connections.   \
    \                                  11g3\n          x3z   Authentication and accounting\
    \ - Replies for the logon\n                  process and accounting procedures.\
    \                    11g4\n          x4z   Unspecified as yet                \
    \                      11g5\n          x5z   File system - These replies indicate\
    \ the status of\n                  the Server file system vis-a-vis the requested\n\
    \                  transfer or other file system action.                 11g6\n\
    \       The third digit gives a finer gradation of meaning in each of\n      \
    \ the function categories, specified by the second digit.  The\n       list of\
    \ replies below will illustrate this.  Note that the\n       text associated with\
    \ each reply is suggestive, rather than\n       mandatory, and may even change\
    \ according to the command with\n       which it is associated.  The reply codes,\
    \ on the other hand,\n       should strictly follow the specifications in the\
    \ last section;\n       that is, Server implementations should not invent new\
    \ codes\n       for situations that are only slightly different from the ones\n\
    \       described here, but rather should adapt codes already defined.\f    NWG/RFC#\
    \ 640                               JBP NJN 5-JUN-74 16:07  30843\n    Neigus\
    \                                       FTP Reply Codes  [6]\n       If additional\
    \ codes are found to be necessary, the details\n       should be submitted to\
    \ the FTP committee, through Jon Postel.     11h\n          A command such as\
    \ TYPE or ALLO whose successful execution\n          does not offer the user-process\
    \ any new information will\n          cause a 200 reply to be returned.  If the\
    \ command is not\n          implemented by a particular Server-FTP process because\
    \ it\n          has no relevance to that computer system, for example ALLO\n \
    \         at a TENEX site, a Positive Completion reply is still\n          desired\
    \ so that the simple User-process knows it can\n          proceed with its course\
    \ of action.  A 202 reply is used in\n          this case with, for example, the\
    \ reply text:  \"No storage\n          allocation necessary.\"  If, on the other\
    \ hand, the command\n          requests a non-site-specific action and is unimplemented,\n\
    \          the response is 502.  A refinement of that is the 504 reply\n     \
    \     for a command that IS implemented, but that requests an\n          unimplemented\
    \ parameter.                                      11h1\n                     \
    \                                                    11i\n          200  Command\
    \ okay                                             11i1\n          500  Syntax\
    \ error, command unrecognized\n                  [This may include errors such\
    \ as command line too\n                  long.]                              \
    \                  11i2\n          501  Syntax error in parameters or arguments\
    \                  11i3\n          202  Command not imlemented, superfluous at\
    \ this site.        11i4\n          502  Command not implemented             \
    \                     11i5\n          503  Bad sequence of commands          \
    \                       11i6\n          504  Command not implemented for that\
    \ parameter               11i7\n                                             \
    \                            11j\n          110  Restart marker reply.\n     \
    \             In this case the text is exact and not left to the\n           \
    \       particular implementation; it must read:\n                           \
    \    MARK yyyy = mmmm\n                  where yyyy is User-process data stream\
    \ marker, and\n                  mmmm is Server's equivalent marker.  (note the\n\
    \                  spaces between the markers and \"=\".)                  11j1\n\
    \          211  System status, or system help reply                      11j2\n\
    \          212  Directory status                                         11j3\n\
    \          213  File status                                              11j4\n\
    \          214  Help message (on how to use the server or the meaning\n      \
    \            of a particular non-standard command.  This reply\n             \
    \     is useful only to the human user.)                    11j5\n           \
    \                                                              11k\n         \
    \ 120  Service ready in nnn minutes                             11k1\n       \
    \   220  Service ready for new user                               11k2\n     \
    \     221  Service closing TELNET connection (logged off if\n                \
    \  appropriate)                                          11k3\n          421 \
    \ Service not available, closing TELNET connection.\n                  [This may\
    \ be a reply to any command if the service\n                  knows it must shut\
    \ down.]                             11k4\f    NWG/RFC# 640                  \
    \             JBP NJN 5-JUN-74 16:07  30843\n    Neigus                      \
    \                 FTP Reply Codes  [7]\n          125  Data connection already\
    \ open; transfer starting          11k5\n          225  Data connection open;\
    \ no transfer in progress            11k6\n          425  Can't open data connection\
    \                               11k7\n          226  Closing data connection;\
    \ requested file action\n                  successful (for example, file transfer\
    \ or file\n                  abort.)                                         \
    \      11k8\n          426  Connection trouble, closed; transfer aborted.    \
    \        11k9\n          227  Entering [passive, active] mode                \
    \         11k10\n                                                            \
    \             11l\n          230  User logged on, proceed                    \
    \              11l1\n          530  Not logged in                            \
    \                11l2\n          331  User name okay, need password          \
    \                  11l3\n          332  Need account for login               \
    \                    11l4\n          532  Need account for storing files     \
    \                      11l5\n                                                \
    \                         11m\n          150  File status okay; about to open\
    \ data connection.         11m1\n          250  Requested file action okay, completed.\
    \                   11m2\n          350  Requested file action pending further\
    \ information        11m3\n          450  Requested file action not taken: file\
    \ unavailable\n                  (e.g. file not found, no access)            \
    \          11m4\n          550  Requested action not taken:  file unavailable\
    \ (e.g.\n                  file busy)                                        \
    \    11m5\n          451  Requested action aborted: local error in processing\
    \      11m6\n          452  Requested action not taken:  insufficient storage\n\
    \                  space in system                                       11m7\n\
    \          552  Requested file action aborted:  exceeded storage\n           \
    \       allocation (for current directory or dataset)         11m8\n         \
    \ 553  Requested action not taken: file name not allowed        11m9\n       \
    \   354  Start mail input; end with <CR><LF>.<CR><LF>            11m10\n     \
    \                     Command-Reply Sequences                         12\n   \
    \  In this section, the command-reply sequence is presented.  Each\n    command\
    \ is listed with its possible replies; command groups are\n    listed together.\
    \  Preliminary replies are listed first (with\n    their succeeding replies under\
    \ them), then positive and negative\n    completion, and finally intermediary\
    \ replies with the remaining\n    commands from the sequence following.  This\
    \ listing forms the\n    basis for the state diagrams, which will be presented\
    \ separately.     13\n       ICP                                             \
    \                  13a\n          120                                        \
    \                   13a1\n             220                                   \
    \                    13a1a\n          220                                    \
    \                       13a2\n          421                                  \
    \                         13a3\f    NWG/RFC# 640                             \
    \  JBP NJN 5-JUN-74 16:07  30843\n    Neigus                                 \
    \      FTP Reply Codes  [8]\n       Logon                                    \
    \                         13b\n          USER                                \
    \                          13b1\n             230                            \
    \                           13b1a\n             530                          \
    \                             13b1b\n             500, 501, 421              \
    \                               13b1c\n             331, 332                 \
    \                                 13b1d\n          PASS                      \
    \                                    13b2\n             230                  \
    \                                     13b2a\n             202                \
    \                                       13b2b\n             530              \
    \                                         13b2c\n             500, 501, 503, 421\
    \                                        13b2d\n             332             \
    \                                          13b2e\n          ACCT             \
    \                                             13b3\n             230         \
    \                                              13b3a\n             202       \
    \                                                13b3b\n             530     \
    \                                                  13b3c\n             500, 501,\
    \ 503, 421                                        13b3d\n       Logoff       \
    \                                                     13c\n          QUIT    \
    \                                                      13c1\n             221\
    \                                                       13c1a\n             500\
    \                                                       13c1b\n          REIN\
    \                                                          13c2\n            \
    \ 120                                                       13c2a\n          \
    \      220                                                   13c2a1\n        \
    \     220                                                       13c2b\n      \
    \       421                                                       13c2c\n    \
    \         500, 502                                                  13c2d\n  \
    \     Transfer parameters                                               13d\n\
    \          SOCK                                                          13d1\n\
    \             200                                                       13d1a\n\
    \             500, 501, 421, 530                                        13d1b\n\
    \          PASV                                                          13d2\n\
    \             227                                                       13d2a\n\
    \             500, 501, 502, 421, 530                                   13d2b\n\
    \          ACTV                                                          13d3\n\
    \             227                                                       13d3a\n\
    \             202                                                       13d3b\n\
    \             500, 501, 421, 530                                        13d3c\n\
    \          BYTE, MODE, TYPE, STRU                                        13d4\n\
    \             200                                                       13d4a\n\
    \             500, 501, 504, 421, 530                                   13d4b\f\
    \    NWG/RFC# 640                               JBP NJN 5-JUN-74 16:07  30843\n\
    \    Neigus                                       FTP Reply Codes  [9]\n     \
    \  File action commands                                              13e\n   \
    \       ALLO                                                          13e1\n \
    \            200                                                       13e1a\n\
    \             202                                                       13e1b\n\
    \             500, 501, 504, 421, 530                                   13e1c\n\
    \          REST                                                          13e2\n\
    \             500, 501, 502, 421, 530                                   13e2a\n\
    \             350                                                       13e2b\n\
    \          STOR                                                          13e3\n\
    \             125, 150                                                  13e3a\n\
    \                (110)                                                 13e3a1\n\
    \                226, 250                                              13e3a2\n\
    \                425, 426, 451, 552                                    13e3a3\n\
    \             532, 450, 452, 553                                        13e3b\n\
    \             500, 501, 421, 530                                        13e3c\n\
    \          RETR                                                          13e4\n\
    \             125, 150                                                  13e4a\n\
    \                (110)                                                 13e4a1\n\
    \                226, 250                                              13e4a2\n\
    \                425, 426, 451                                         13e4a3\n\
    \             450, 550                                                  13e4b\n\
    \             500, 501, 421, 530                                        13e4c\n\
    \          LIST, NLST                                                    13e5\n\
    \             125, 150                                                  13e5a\n\
    \                226, 250                                              13e5a1\n\
    \                425, 426, 451                                         13e5a2\n\
    \             450                                                       13e5b\n\
    \             500, 501, 502, 421, 530                                   13e5c\n\
    \          APPE                                                          13e6\n\
    \             125, 150                                                  13e6a\n\
    \                (110)                                                 13e6a1\n\
    \                226, 250                                              13e6a2\n\
    \                425, 426, 451, 552                                    13e6a3\n\
    \             532, 450, 550, 452, 553                                   13e6b\n\
    \             500, 501, 502, 421, 530                                   13e6c\n\
    \          MLFL                                                          13e7\n\
    \             125, 150                                                  13e7a\n\
    \                226, 250                                              13e7a1\n\
    \                425, 426, 451, 552                                    13e7a2\n\
    \             532, 450, 550, 452, 553                                   13e7b\n\
    \             500, 501, 502, 421, 530                                   13e7c\n\
    \          RNFR                                                          13e8\n\
    \             450, 550                                                  13e8a\n\
    \             500, 501, 502, 421, 530                                   13e8b\n\
    \             350                                                       13e8c\n\
    \          RNTO                                                          13e9\n\
    \             250                                                       13e9a\n\
    \             532, 553                                                  13e9b\f\
    \    NWG/RFC# 640                               JBP NJN 5-JUN-74 16:07  30843\n\
    \    Neigus                                      FTP Reply Codes  [10]\n     \
    \        500, 501, 502, 503, 421, 530                              13e9c\n   \
    \       DELE                                                         13e10\n \
    \            250                                                      13e10a\n\
    \             450, 550                                                 13e10b\n\
    \             500, 501, 502, 421, 530                                  13e10c\n\
    \          ABOR                                                         13e11\n\
    \             225, 226                                                 13e11a\n\
    \             500, 501, 502, 421                                       13e11b\n\
    \          MAIL                                                         13e12\n\
    \             354                                                      13e12a\n\
    \                250                                                  13e12a1\n\
    \                451, 552                                             13e12a2\n\
    \             450, 550, 452, 553                                       13e12b\n\
    \             500, 501, 502, 421, 530                                  13e12c\n\
    \       Informational commands                                            13f\n\
    \          STAT                                                          13f1\n\
    \             211, 212, 213                                             13f1a\n\
    \             450                                                       13f1b\n\
    \             500, 501, 502, 421, 530                                   13f1c\n\
    \          HELP                                                          13f2\n\
    \             211, 214                                                  13f2a\n\
    \             500, 501, 502, 421                                        13f2b\n\
    \       Miscellaneous commands                                            13g\n\
    \          SITE                                                          13g1\n\
    \             200                                                       13g1a\n\
    \             202                                                       13g1b\n\
    \             500, 501, 530                                             13g1c\n\
    \          NOOP                                                          13g2\n\
    \             200                                                       13g2a\n\
    \             500                                                       13g2b\f\
    \    NWG/RFC# 640                               JBP NJN 5-JUN-74 16:07  30843\n\
    \                                                           Jon Postel\n     \
    \                                                       19 JUN 75\n          \
    \                  FTP State Diagrams                            14\n    Here\
    \ we present state diagrams for a very simple minded FTP\n    implementation.\
    \ Only the first digit of the reply codes is used.\n    There is one state diagram\
    \ for each group of FTP commands or\n    command sequences.                  \
    \                                  15\n    The command groupings were determined\
    \ by constructing a model for\n    each command then collecting together the commands\
    \ with\n    structurally identical models.                                   \
    \     16\n    For each command or command sequence there are three possible\n\
    \    outcomes: success (S), failure (F), and error (E). In the state\n    diagrams\
    \ below we use the symbol B for \"begin\", and the symbol W\n    for \"wait for\
    \ reply\".                                                 17\n    We first present\
    \ the diagram that represents the largest group of\n    FTP commands:        \
    \                                                 18\n                       \
    \         1,3    +---+\n                           ----------->! E !\n       \
    \                   !            +---+\n                          !\n       +---+\
    \    cmd    +---+    2      +---+\n       ! B !---------->! W !---------->! S\
    \ !\n       +---+           +---+           +---+\n                          !\n\
    \                          !     4,5    +---+\n                           ----------->!\
    \ F !\n                                       +---+\n                        \
    \                                                 18a\n       This diagram models\
    \ the commands:                                 18b\n          ABOR, ACTV, ALLO,\
    \ BYTE, DELE, HELP, MODE, NOOP, PASV, QUIT,\n          SITE, SOCK, STAT, STRU,\
    \ TYPE.                                 18b1\f    NWG/RFC# 640               \
    \                JBP NJN 5-JUN-74 16:07  30843\n    Postel                   \
    \                 FTP State Diagrams [12]\n    The other large group of commands\
    \ is represented by a very\n    similar diagram:                             \
    \                         19\n                                3      +---+\n \
    \                          ----------->! E !\n                          !    \
    \        +---+\n                          !\n       +---+    cmd    +---+    2\
    \      +---+\n       ! B !---------->! W !---------->! S !\n       +---+     \
    \  --->+---+           +---+\n                  !     ! !\n                  !\
    \     ! !     4,5    +---+\n                  !  1  !  ----------->! F !\n   \
    \                -----               +---+\n                                 \
    \                                        19a\n       This diagram models the commands:\
    \                                 19b\n          APPE, (ICP), LIST, MLFL, NLST,\
    \ REIN, RETR, STOR.              19b1\n    Note that this second model could also\
    \ be used to represent the\n    first group of commands, the only difference being\
    \ that in the\n    first group the 100 series replies are unexpected and therefore\n\
    \    treated as error, while the second group expects (some may\n    require)\
    \ 100 series replies.                                          20\n    The remaining\
    \ diagrams model command sequences, perhaps the\n    simplest of these is the\
    \ rename sequence:                             21\n       +---+   RNFR    +---+\
    \    1,2    +---+\n       ! B !---------->! W !---------->! E !\n       +---+\
    \           +---+        -->+---+\n                        ! !        !\n    \
    \             3      ! ! 4,5    !\n          --------------  ------   !\n    \
    \     !                      !  !   +---+\n         !               ------------->!\
    \ S !\n         !              !   1,3 !  !   +---+\n         !             2!\
    \  --------\n         !              ! !     !\n         V              ! !  \
    \   !\n       +---+   RNTO    +---+ 4,5 ----->+---+\n       !   !---------->!\
    \ W !---------->! F !\n       +---+           +---+           +---+\n        \
    \                                                                 21a\f    NWG/RFC#\
    \ 640                               JBP NJN 5-JUN-74 16:07  30843\n    Postel\
    \                                    FTP State Diagrams [13]\n    A very similar\
    \ diagram models the Mail command:                       22\n       +---+   MAIL\
    \    +---+    1,2    +---+\n       ! B !---------->! W !---------->! E !\n   \
    \    +---+           +---+        -->+---+\n                        ! !      \
    \  !\n                 3      ! ! 4,5    !\n          --------------  ------ \
    \  !\n         !                      !  !   +---+\n         !               ------------->!\
    \ S !\n         !              !   1,3 !  !   +---+\n         !             2!\
    \  --------\n         !              ! !     !\n         V              ! !  \
    \   !\n       +---+   text    +---+ 4,5 ----->+---+\n       !   !---------->!\
    \ W !---------->! F !\n       +---+           +---+           +---+\n        \
    \                                                                 22a\n      \
    \ Note that the \"text\" here is a series of lines sent from the\n       user\
    \ to the server with no response expected until the last\n       line is sent,\
    \ recall that the last line must consist only of a\n       single period.    \
    \                                                22b\f    NWG/RFC# 640       \
    \                        JBP NJN 5-JUN-74 16:07  30843\n    Postel           \
    \                         FTP State Diagrams [14]\n    The next diagram is a simple\
    \ model of the Restart command:            23\n       +---+   REST    +---+  \
    \  1,2    +---+\n       ! B !---------->! W !---------->! E !\n       +---+  \
    \         +---+        -->+---+\n                        ! !        !\n      \
    \           3      ! ! 4,5    !\n          --------------  ------   !\n      \
    \   !                      !  !   +---+\n         !               ------------->!\
    \ S !\n         !              !   3   !  !   +---+\n         !             2!\
    \  --------\n         !              ! !     !\n         V              ! !  \
    \   !\n       +---+   cmd     +---+ 4,5 ----->+---+\n       !   !---------->!\
    \ W !---------->! F !\n       +---+        -->+---+           +---+\n        \
    \           !      !\n                   !  1   !\n                    ------\n\
    \                                                                         23a\n\
    \          Where \"cmd\" is APPE, STOR, RETR, or MLFL.                     23a1\n\
    \    We note that the above three models are similar, in fact the Mail\n    diagram\
    \ and the Rename diagram are structurally identical. The\n    Restart differs\
    \ from the other two only in the treatment of 100\n    series replies at the second\
    \ stage.                                   24\f    NWG/RFC# 640              \
    \                 JBP NJN 5-JUN-74 16:07  30843\n    Postel                  \
    \                  FTP State Diagrams [15]\n    The most complicated diagram is\
    \ for the Logon sequence:               25\n                             1\n \
    \      +---+   USER    +---+------------->+---+\n       ! B !---------->! W !\
    \ 2       ---->! E !\n       +---+           +---+------  !  -->+---+\n      \
    \                  ! !       ! ! !\n                      3 ! ! 4,5   ! ! !\n\
    \          --------------   -----  ! ! !\n         !                      ! !\
    \ ! !\n         !                      ! ! ! !\n         !                 ---------\
    \  !\n         !               1!     ! !   !\n         V                !   \
    \  ! !   !\n       +---+   PASS    +---+ 2  !  ------>+---+\n       !   !---------->!\
    \ W !------------->! S !\n       +---+           +---+   ---------->+---+\n  \
    \                      ! !   ! !     !\n                      3 ! !4,5! !    \
    \ !\n          --------------   --------   !\n         !                    !\
    \ !  !  !\n         !                    ! !  !  !\n         !               \
    \  -----------\n         !             1,3!   ! !  !\n         V             \
    \   !  2! !  !\n       +---+   ACCT    +---+--  !   ----->+---+\n       !   !---------->!\
    \ W ! 4,5 -------->! F !\n       +---+           +---+------------->+---+\n  \
    \                                                                       25a\f\
    \    NWG/RFC# 640                               JBP NJN 5-JUN-74 16:07  30843\n\
    \    Postel                                    FTP State Diagrams [16]\n    Finally\
    \ we present a generalized diagram that could be used to\n    model the command\
    \ and reply interchange:                              26\n                ------------------------------------\n\
    \               !                                    !\n       Begin   !     \
    \                               !\n         !     V                          \
    \          !\n         !   +---+  cmd   +---+ 2         +---+     !\n        \
    \  -->!   !------->!   !---------->!   !     !\n             !   !        ! W\
    \ !           ! S !-----!\n          -->!   !     -->!   !-----      !   !   \
    \  !\n         !   +---+    !   +---+ 4,5 !     +---+     !\n         !     !\
    \      !    ! !      !               !\n         !     !      !   1! !3     !\
    \     +---+     !\n         !     !      !    ! !      !     !   !     !\n   \
    \      !     !       ----  !       ---->! F !-----\n         !     !         \
    \    !            !   !\n         !     !             !            +---+\n   \
    \       -------------------\n               !\n               !\n"
