- contents:
  - '          Storing Certificates in the Domain Name System (DNS)

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Cryptographic public keys are frequently published, and their\n
    \  authenticity is demonstrated by certificates.  A CERT resource record\n   (RR)
    is defined so that such certificates and related certificate\n   revocation lists
    can be stored in the Domain Name System (DNS).\n   This document obsoletes RFC
    2538.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. The CERT Resource Record ........................................3\n      2.1.
    Certificate Type Values ....................................4\n      2.2. Text
    Representation of CERT RRs ............................6\n      2.3. X.509 OIDs
    .................................................6\n   3. Appropriate Owner Names
    for CERT RRs ............................7\n      3.1. Content-Based X.509 CERT
    RR Names ..........................8\n      3.2. Purpose-Based X.509 CERT RR Names
    ..........................9\n      3.3. Content-Based OpenPGP CERT RR Names ........................9\n
    \     3.4. Purpose-Based OpenPGP CERT RR Names .......................10\n      3.5.
    Owner Names for IPKIX, ISPKI, IPGP, and IACPKIX ...........10\n   4. Performance
    Considerations .....................................11\n   5. Contributors ...................................................11\n
    \  6. Acknowledgements ...............................................11\n   7.
    Security Considerations ........................................12\n   8. IANA
    Considerations ............................................12\n   9. Changes since
    RFC 2538 .........................................13\n   10. References ....................................................14\n
    \     10.1. Normative References .....................................14\n      10.2.
    Informative References ...................................15\n   Appendix A.  Copying
    Conditions ...................................16\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Public keys are frequently published in the form of a certificate,\n
    \  and their authenticity is commonly demonstrated by certificates and\n   related
    certificate revocation lists (CRLs).  A certificate is a\n   binding, through
    a cryptographic digital signature, of a public key,\n   a validity interval and/or
    conditions, and identity, authorization,\n   or other information.  A certificate
    revocation list is a list of\n   certificates that are revoked, and of incidental
    information, all\n   signed by the signer (issuer) of the revoked certificates.
    \ Examples\n   are X.509 certificates/CRLs in the X.500 directory system or OpenPGP\n
    \  certificates/revocations used by OpenPGP software.\n   Section 2 specifies
    a CERT resource record (RR) for the storage of\n   certificates in the Domain
    Name System [1] [2].\n   Section 3 discusses appropriate owner names for CERT
    RRs.\n   Sections 4, 7, and 8 cover performance, security, and IANA\n   considerations,
    respectively.\n   Section 9 explains the changes in this document compared to
    RFC 2538.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL
    NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in [3].\n"
  title: 1.  Introduction
- contents:
  - "2.  The CERT Resource Record\n   The CERT resource record (RR) has the structure
    given below.  Its RR\n   type code is 37.\n                       1 1 1 1 1 1
    1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0
    1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |             type              |             key tag           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |   algorithm   |                                               /\n   +---------------+
    \           certificate or CRL                 /\n   /                                                               /\n
    \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-|\n   The type
    field is the certificate type as defined in Section 2.1\n   below.\n   The key
    tag field is the 16-bit value computed for the key embedded\n   in the certificate,
    using the RRSIG Key Tag algorithm described in\n   Appendix B of [12].  This field
    is used as an efficiency measure to\n   pick which CERT RRs may be applicable
    to a particular key.  The key\n   tag can be calculated for the key in question,
    and then only CERT RRs\n   with the same key tag need to be examined.  Note that
    two different\n   keys can have the same key tag.  However, the key MUST be transformed\n
    \  to the format it would have as the public key portion of a DNSKEY RR\n   before
    the key tag is computed.  This is only possible if the key is\n   applicable to
    an algorithm and complies to limits (such as key size)\n   defined for DNS security.
    \ If it is not, the algorithm field MUST be\n   zero and the tag field is meaningless
    and SHOULD be zero.\n   The algorithm field has the same meaning as the algorithm
    field in\n   DNSKEY and RRSIG RRs [12], except that a zero algorithm field\n   indicates
    that the algorithm is unknown to a secure DNS, which may\n   simply be the result
    of the algorithm not having been standardized\n   for DNSSEC [11].\n"
  - contents:
    - "2.1.  Certificate Type Values\n   The following values are defined or reserved:\n
      \        Value  Mnemonic  Certificate Type\n         -----  --------  ----------------\n
      \            0            Reserved\n             1  PKIX      X.509 as per PKIX\n
      \            2  SPKI      SPKI certificate\n             3  PGP       OpenPGP
      packet\n             4  IPKIX     The URL of an X.509 data object\n             5
      \ ISPKI     The URL of an SPKI certificate\n             6  IPGP      The fingerprint
      and URL of an OpenPGP packet\n             7  ACPKIX    Attribute Certificate\n
      \            8  IACPKIX   The URL of an Attribute Certificate\n         9-252
      \           Available for IANA assignment\n           253  URI       URI private\n
      \          254  OID       OID private\n           255            Reserved\n
      \    256-65279            Available for IANA assignment\n   65280-65534            Experimental\n
      \        65535            Reserved\n   These values represent the initial content
      of the IANA registry; see\n   Section 8.\n   The PKIX type is reserved to indicate
      an X.509 certificate conforming\n   to the profile defined by the IETF PKIX
      working group [8].  The\n   certificate section will start with a one-octet
      unsigned OID length\n   and then an X.500 OID indicating the nature of the remainder
      of the\n   certificate section (see Section 2.3, below).  (NOTE: X.509\n   certificates
      do not include their X.500 directory-type-designating\n   OID as a prefix.)\n
      \  The SPKI and ISPKI types are reserved to indicate the SPKI\n   certificate
      format [15], for use when the SPKI documents are moved\n   from experimental
      status.  The format for these two CERT RR types\n   will need to be specified
      later.\n   The PGP type indicates an OpenPGP packet as described in [5] and
      its\n   extensions and successors.  This is used to transfer public key\n   material
      and revocation signatures.  The data is binary and MUST NOT\n   be encoded into
      an ASCII armor.  An implementation SHOULD process\n   transferable public keys
      as described in Section 10.1 of [5], but it\n   MAY handle additional OpenPGP
      packets.\n   The ACPKIX type indicates an Attribute Certificate format [9].\n
      \  The IPKIX and IACPKIX types indicate a URL that will serve the\n   content
      that would have been in the \"certificate, CRL, or URL\" field\n   of the corresponding
      type (PKIX or ACPKIX, respectively).\n   The IPGP type contains both an OpenPGP
      fingerprint for the key in\n   question, as well as a URL.  The certificate
      portion of the IPGP CERT\n   RR is defined as a one-octet fingerprint length,
      followed by the\n   OpenPGP fingerprint, followed by the URL.  The OpenPGP fingerprint
      is\n   calculated as defined in RFC 2440 [5].  A zero-length fingerprint or\n
      \  a zero-length URL are legal, and indicate URL-only IPGP data or\n   fingerprint-only
      IPGP data, respectively.  A zero-length fingerprint\n   and a zero-length URL
      are meaningless and invalid.\n   The IPKIX, ISPKI, IPGP, and IACPKIX types are
      known as \"indirect\".\n   These types MUST be used when the content is too
      large to fit in the\n   CERT RR and MAY be used at the implementer's discretion.
      \ They SHOULD\n   NOT be used where the DNS message is 512 octets or smaller
      and could\n   thus be expected to fit a UDP packet.\n   The URI private type
      indicates a certificate format defined by an\n   absolute URI.  The certificate
      portion of the CERT RR MUST begin with\n   a null-terminated URI [10], and the
      data after the null is the\n   private format certificate itself.  The URI SHOULD
      be such that a\n   retrieval from it will lead to documentation on the format
      of the\n   certificate.  Recognition of private certificate types need not be\n
      \  based on URI equality but can use various forms of pattern matching\n   so
      that, for example, subtype or version information can also be\n   encoded into
      the URI.\n   The OID private type indicates a private format certificate specified\n
      \  by an ISO OID prefix.  The certificate section will start with a\n   one-octet
      unsigned OID length and then a BER-encoded OID indicating\n   the nature of
      the remainder of the certificate section.  This can be\n   an X.509 certificate
      format or some other format.  X.509 certificates\n   that conform to the IETF
      PKIX profile SHOULD be indicated by the PKIX\n   type, not the OID private type.
      \ Recognition of private certificate\n   types need not be based on OID equality
      but can use various forms of\n   pattern matching such as OID prefix.\n"
    title: 2.1.  Certificate Type Values
  - contents:
    - "2.2.  Text Representation of CERT RRs\n   The RDATA portion of a CERT RR has
      the type field as an unsigned\n   decimal integer or as a mnemonic symbol as
      listed in Section 2.1,\n   above.\n   The key tag field is represented as an
      unsigned decimal integer.\n   The algorithm field is represented as an unsigned
      decimal integer or\n   a mnemonic symbol as listed in [12].\n   The certificate/CRL
      portion is represented in base 64 [16] and may be\n   divided into any number
      of white-space-separated substrings, down to\n   single base-64 digits, which
      are concatenated to obtain the full\n   signature.  These substrings can span
      lines using the standard\n   parenthesis.\n   Note that the certificate/CRL
      portion may have internal sub-fields,\n   but these do not appear in the master
      file representation.  For\n   example, with type 254, there will be an OID size,
      an OID, and then\n   the certificate/CRL proper.  However, only a single logical
      base-64\n   string will appear in the text representation.\n"
    title: 2.2.  Text Representation of CERT RRs
  - contents:
    - "2.3.  X.509 OIDs\n   OIDs have been defined in connection with the X.500 directory
      for\n   user certificates, certification authority certificates, revocations\n
      \  of certification authority, and revocations of user certificates.\n   The
      following table lists the OIDs, their BER encoding, and their\n   length-prefixed
      hex format for use in CERT RRs:\n       id-at-userCertificate\n           =
      { joint-iso-ccitt(2) ds(5) at(4) 36 }\n              == 0x 03 55 04 24\n       id-at-cACertificate\n
      \          = { joint-iso-ccitt(2) ds(5) at(4) 37 }\n              == 0x 03 55
      04 25\n       id-at-authorityRevocationList\n           = { joint-iso-ccitt(2)
      ds(5) at(4) 38 }\n              == 0x 03 55 04 26\n       id-at-certificateRevocationList\n
      \          = { joint-iso-ccitt(2) ds(5) at(4) 39 }\n              == 0x 03 55
      04 27\n"
    title: 2.3.  X.509 OIDs
  title: 2.  The CERT Resource Record
- contents:
  - "3.  Appropriate Owner Names for CERT RRs\n   It is recommended that certificate
    CERT RRs be stored under a domain\n   name related to their subject, i.e., the
    name of the entity intended\n   to control the private key corresponding to the
    public key being\n   certified.  It is recommended that certificate revocation
    list CERT\n   RRs be stored under a domain name related to their issuer.\n   Following
    some of the guidelines below may result in DNS names with\n   characters that
    require DNS quoting as per Section 5.1 of RFC 1035\n   [2].\n   The choice of
    name under which CERT RRs are stored is important to\n   clients that perform
    CERT queries.  In some situations, the clients\n   may not know all information
    about the CERT RR object it wishes to\n   retrieve.  For example, a client may
    not know the subject name of an\n   X.509 certificate, or the email address of
    the owner of an OpenPGP\n   key.  Further, the client might only know the hostname
    of a service\n   that uses X.509 certificates or the Key ID of an OpenPGP key.\n
    \  Therefore, two owner name guidelines are defined: content-based owner\n   names
    and purpose-based owner names.  A content-based owner name is\n   derived from
    the content of the CERT RR data; for example, the\n   Subject field in an X.509
    certificate or the User ID field in OpenPGP\n   keys.  A purpose-based owner name
    is a name that a client retrieving\n   CERT RRs ought to know already; for example,
    the host name of an\n   X.509 protected service or the Key ID of an OpenPGP key.
    \ The\n   content-based and purpose-based owner name may be the same; for\n   example,
    when a client looks up a key based on the From: address of\n   an incoming email.\n
    \  Implementations SHOULD use the purpose-based owner name guidelines\n   described
    in this document and MAY use CNAME RRs at content-based\n   owner names (or other
    names), pointing to the purpose-based owner\n   name.\n   Note that this section
    describes an application-based mapping from\n   the name space used in a certificate
    to the name space used by DNS.\n   The DNS does not infer any relationship amongst
    CERT resource records\n   based on similarities or differences of the DNS owner
    name(s) of CERT\n   resource records.  For example, if multiple labels are used
    when\n   mapping from a CERT identifier to a domain name, then care must be\n
    \  taken in understanding wildcard record synthesis.\n"
  - contents:
    - "3.1.  Content-Based X.509 CERT RR Names\n   Some X.509 versions, such as the
      PKIX profile of X.509 [8], permit\n   multiple names to be associated with subjects
      and issuers under\n   \"Subject Alternative Name\" and \"Issuer Alternative
      Name\".  For\n   example, the PKIX profile has such Alternate Names with an
      ASN.1\n   specification as follows:\n      GeneralName ::= CHOICE {\n           otherName
      \                      [0]     OtherName,\n           rfc822Name                      [1]
      \    IA5String,\n           dNSName                         [2]     IA5String,\n
      \          x400Address                     [3]     ORAddress,\n           directoryName
      \                  [4]     Name,\n           ediPartyName                    [5]
      \    EDIPartyName,\n           uniformResourceIdentifier       [6]     IA5String,\n
      \          iPAddress                       [7]     OCTET STRING,\n           registeredID
      \                   [8]     OBJECT IDENTIFIER }\n   The recommended locations
      of CERT storage are as follows, in priority\n   order:\n   1.  If a domain name
      is included in the identification in the\n       certificate or CRL, that ought
      to be used.\n   2.  If a domain name is not included but an IP address is included,\n
      \      then the translation of that IP address into the appropriate\n       inverse
      domain name ought to be used.\n   3.  If neither of the above is used, but a
      URI containing a domain\n       name is present, that domain name ought to be
      used.\n   4.  If none of the above is included but a character string name is\n
      \      included, then it ought to be treated as described below for\n       OpenPGP
      names.\n   5.  If none of the above apply, then the distinguished name (DN)\n
      \      ought to be mapped into a domain name as specified in [4].\n   Example
      1: An X.509v3 certificate is issued to /CN=John Doe /DC=Doe/\n   DC=com/DC=xy/O=Doe
      Inc/C=XY/ with Subject Alternative Names of (a)\n   string \"John (the Man)
      Doe\", (b) domain name john-doe.com, and (c)\n   URI <https://www.secure.john-doe.com:8080/>.
      \ The storage locations\n   recommended, in priority order, would be\n   1.
      \ john-doe.com,\n   2.  www.secure.john-doe.com, and\n   3.  Doe.com.xy.\n   Example
      2: An X.509v3 certificate is issued to /CN=James Hacker/\n   L=Basingstoke/O=Widget
      Inc/C=GB/ with Subject Alternate names of (a)\n   domain name widget.foo.example,
      (b) IPv4 address 10.251.13.201, and\n   (c) string \"James Hacker <hacker@mail.widget.foo.example>\".
      \ The\n   storage locations recommended, in priority order, would be\n   1.
      \ widget.foo.example,\n   2.  201.13.251.10.in-addr.arpa, and\n   3.  hacker.mail.widget.foo.example.\n"
    title: 3.1.  Content-Based X.509 CERT RR Names
  - contents:
    - "3.2.  Purpose-Based X.509 CERT RR Names\n   Due to the difficulty for clients
      that do not already possess a\n   certificate to reconstruct the content-based
      owner name,\n   purpose-based owner names are recommended in this section.\n
      \  Recommendations for purpose-based owner names vary per scenario.  The\n   following
      table summarizes the purpose-based X.509 CERT RR owner name\n   guidelines for
      use with S/MIME [17], SSL/TLS [13], and IPsec [14]:\n    Scenario             Owner
      name\n    ------------------   ----------------------------------------------\n
      \   S/MIME Certificate   Standard translation of an RFC 2822 email\n                         address.
      \ Example: An S/MIME certificate for\n                         \"postmaster@example.org\"
      will use a standard\n                         hostname translation of the owner
      name,\n                         \"postmaster.example.org\".\n    TLS Certificate
      \     Hostname of the TLS server.\n    IPsec Certificate    Hostname of the
      IPsec machine and/or, for IPv4\n                         or IPv6 addresses,
      the fully qualified domain\n                         name in the appropriate
      reverse domain.\n   An alternate approach for IPsec is to store raw public keys
      [18].\n"
    title: 3.2.  Purpose-Based X.509 CERT RR Names
  - contents:
    - "3.3.  Content-Based OpenPGP CERT RR Names\n   OpenPGP signed keys (certificates)
      use a general character string\n   User ID [5].  However, it is recommended
      by OpenPGP that such names\n   include the RFC 2822 [7] email address of the
      party, as in \"Leslie\n   Example <Leslie@host.example>\".  If such a format
      is used, the CERT\n   ought to be under the standard translation of the email
      address into\n   a domain name, which would be leslie.host.example in this case.
      \ If\n   no RFC 2822 name can be extracted from the string name, no specific\n
      \  domain name is recommended.\n   If a user has more than one email address,
      the CNAME type can be used\n   to reduce the amount of data stored in the DNS.
      \ For example:\n      $ORIGIN example.org.\n      smith        IN CERT PGP 0
      0 <OpenPGP binary>\n      john.smith   IN CNAME smith\n      js           IN
      CNAME smith\n"
    title: 3.3.  Content-Based OpenPGP CERT RR Names
  - contents:
    - "3.4.  Purpose-Based OpenPGP CERT RR Names\n   Applications that receive an
      OpenPGP packet containing encrypted or\n   signed data but do not know the email
      address of the sender will have\n   difficulties constructing the correct owner
      name and cannot use the\n   content-based owner name guidelines.  However, these
      clients commonly\n   know the key fingerprint or the Key ID.  The key ID is
      found in\n   OpenPGP packets, and the key fingerprint is commonly found in\n
      \  auxiliary data that may be available.  In this case, use of an owner\n   name
      identical to the key fingerprint and the key ID expressed in\n   hexadecimal
      [16] is recommended.  For example:\n      $ORIGIN example.org.\n      0424D4EE81A0E3D119C6F835EDA21E94B565716F
      IN CERT PGP ...\n      F835EDA21E94B565716F                     IN CERT PGP
      ...\n      B565716F                                 IN CERT PGP ...\n   If the
      same key material is stored for several owner names, the use\n   of CNAME may
      help avoid data duplication.  Note that CNAME is not\n   always applicable,
      because it maps one owner name to the other for\n   all purposes, which may
      be sub-optimal when two keys with the same\n   Key ID are stored.\n"
    title: 3.4.  Purpose-Based OpenPGP CERT RR Names
  - contents:
    - "3.5.  Owner Names for IPKIX, ISPKI, IPGP, and IACPKIX\n   These types are stored
      under the same owner names, both purpose- and\n   content-based, as the PKIX,
      SPKI, PGP, and ACPKIX types.\n"
    title: 3.5.  Owner Names for IPKIX, ISPKI, IPGP, and IACPKIX
  title: 3.  Appropriate Owner Names for CERT RRs
- contents:
  - "4.  Performance Considerations\n   The Domain Name System (DNS) protocol was
    designed for small\n   transfers, typically below 512 octets.  While larger transfers
    will\n   perform correctly and work is underway to make larger transfers more\n
    \  efficient, it is still advisable at this time that every reasonable\n   effort
    be made to minimize the size of certificates stored within the\n   DNS.  Steps
    that can be taken may include using the fewest possible\n   optional or extension
    fields and using short field values for\n   necessary variable-length fields.\n
    \  The RDATA field in the DNS protocol may only hold data of size 65535\n   octets
    (64kb) or less.  This means that each CERT RR MUST NOT contain\n   more than 64kb
    of payload, even if the corresponding certificate or\n   certificate revocation
    list is larger.  This document addresses this\n   by defining \"indirect\" data
    types for each normal type.\n   Deploying CERT RRs to support digitally signed
    email changes the\n   access patterns of DNS lookups from per-domain to per-user.
    \ If\n   digitally signed email and a key/certificate lookup based on CERT RRs\n
    \  are deployed on a wide scale, this may lead to an increased DNS load,\n   with
    potential performance and cache effectiveness consequences.\n   Whether or not
    this load increase will be noticeable is not known.\n"
  title: 4.  Performance Considerations
- contents:
  - "5.  Contributors\n   The majority of this document is copied verbatim from RFC
    2538, by\n   Donald Eastlake 3rd and Olafur Gudmundsson.\n"
  title: 5.  Contributors
- contents:
  - "6.  Acknowledgements\n   Thanks to David Shaw and Michael Graff for their contributions
    to\n   earlier works that motivated, and served as inspiration for, this\n   document.\n
    \  This document was improved by suggestions and comments from Olivier\n   Dubuisson,
    Scott Hollenbeck, Russ Housley, Peter Koch, Olaf M.\n   Kolkman, Ben Laurie, Edward
    Lewis, John Loughney, Allison Mankin,\n   Douglas Otis, Marcos Sanz, Pekka Savola,
    Jason Sloderbeck, Samuel\n   Weiler, and Florian Weimer.  No doubt the list is
    incomplete.  We\n   apologize to anyone we left out.\n"
  title: 6.  Acknowledgements
- contents:
  - "7.  Security Considerations\n   By definition, certificates contain their own
    authenticating\n   signatures.  Thus, it is reasonable to store certificates in\n
    \  non-secure DNS zones or to retrieve certificates from DNS with DNS\n   security
    checking not implemented or deferred for efficiency.  The\n   results may be trusted
    if the certificate chain is verified back to a\n   known trusted key and this
    conforms with the user's security policy.\n   Alternatively, if certificates are
    retrieved from a secure DNS zone\n   with DNS security checking enabled and are
    verified by DNS security,\n   the key within the retrieved certificate may be
    trusted without\n   verifying the certificate chain if this conforms with the
    user's\n   security policy.\n   If an organization chooses to issue certificates
    for its employees,\n   placing CERT RRs in the DNS by owner name, and if DNSSEC
    (with NSEC)\n   is in use, it is possible for someone to enumerate all employees
    of\n   the organization.  This is usually not considered desirable, for the\n
    \  same reason that enterprise phone listings are not often publicly\n   published
    and are even marked confidential.\n   Using the URI type introduces another level
    of indirection that may\n   open a new vulnerability.  One method of securing
    that indirection is\n   to include a hash of the certificate in the URI itself.\n
    \  If DNSSEC is used, then the non-existence of a CERT RR and,\n   consequently,
    certificates or revocation lists can be securely\n   asserted.  Without DNSSEC,
    this is not possible.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  IANA Considerations\n   The IANA has created a new registry for CERT RR:
    certificate types.\n   The initial contents of this registry is:\n       Decimal
    \  Type     Meaning                           Reference\n       -------   ----
    \    -------                           ---------\n             0            Reserved
    \                         RFC 4398\n             1   PKIX     X.509 as per PKIX
    \                RFC 4398\n             2   SPKI     SPKI certificate                  RFC
    4398\n             3   PGP      OpenPGP packet                    RFC 4398\n             4
    \  IPKIX    The URL of an X.509 data object   RFC 4398\n             5   ISPKI
    \   The URL of an SPKI certificate    RFC 4398\n             6   IPGP     The
    fingerprint and URL           RFC 4398\n                          of an OpenPGP
    packet\n             7   ACPKIX   Attribute Certificate             RFC 4398\n
    \            8   IACPKIX  The URL of an Attribute           RFC 4398\n                             Certificate\n
    \        9-252            Available for IANA assignment\n                             by
    IETF Standards action\n           253   URI      URI private                       RFC
    4398\n           254   OID      OID private                       RFC 4398\n           255
    \           Reserved                          RFC 4398\n     256-65279            Available
    for IANA assignment\n                          by IETF Consensus\n   65280-65534
    \           Experimental                      RFC 4398\n         65535            Reserved
    \                         RFC 4398\n   Certificate types 0x0000 through 0x00FF
    and 0xFF00 through 0xFFFF can\n   only be assigned by an IETF standards action
    [6].  This document\n   assigns 0x0001 through 0x0008 and 0x00FD and 0x00FE.  Certificate\n
    \  types 0x0100 through 0xFEFF are assigned through IETF Consensus [6]\n   based
    on RFC documentation of the certificate type.  The availability\n   of private
    types under 0x00FD and 0x00FE ought to satisfy most\n   requirements for proprietary
    or private types.\n   The CERT RR reuses the DNS Security Algorithm Numbers registry.
    \ In\n   particular, the CERT RR requires that algorithm number 0 remain\n   reserved,
    as described in Section 2.  The IANA will reference the\n   CERT RR as a user
    of this registry and value 0, in particular.\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Changes since RFC 2538\n   1.   Editorial changes to conform with new document
    requirements,\n        including splitting reference section into two parts and\n
    \       updating the references to point at latest versions, and to add\n        some
    additional references.\n   2.   Improve terminology.  For example replace \"PGP\"
    with \"OpenPGP\",\n        to align with RFC 2440.\n   3.   In Section 2.1, clarify
    that OpenPGP public key data are binary,\n        not the ASCII armored format,
    and reference 10.1 in RFC 2440 on\n        how to deal with OpenPGP keys, and
    acknowledge that\n        implementations may handle additional packet types.\n
    \  4.   Clarify that integers in the representation format are decimal.\n   5.
    \  Replace KEY/SIG with DNSKEY/RRSIG etc, to align with DNSSECbis\n        terminology.
    \ Improve reference for Key Tag Algorithm\n        calculations.\n   6.   Add
    examples that suggest use of CNAME to reduce bandwidth.\n   7.   In Section 3,
    appended the last paragraphs that discuss\n        \"content-based\" vs \"purpose-based\"
    owner names.  Add Section 3.2\n        for purpose-based X.509 CERT owner names,
    and Section 3.4 for\n        purpose-based OpenPGP CERT owner names.\n   8.   Added
    size considerations.\n   9.   The SPKI types has been reserved, until RFC 2692/2693
    is moved\n        from the experimental status.\n   10.  Added indirect types
    IPKIX, ISPKI, IPGP, and IACPKIX.\n   11.  An IANA registry of CERT type values
    was created.\n"
  title: 9.  Changes since RFC 2538
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [1]   Mockapetris, P., \"Domain names - concepts
      and facilities\",\n         STD 13, RFC 1034, November 1987.\n   [2]   Mockapetris,
      P., \"Domain names - implementation and\n         specification\", STD 13, RFC
      1035, November 1987.\n   [3]   Bradner, S., \"Key words for use in RFCs to Indicate
      Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n   [4]   Kille,
      S., Wahl, M., Grimstad, A., Huber, R., and S. Sataluri,\n         \"Using Domains
      in LDAP/X.500 Distinguished Names\", RFC 2247,\n         January 1998.\n   [5]
      \  Callas, J., Donnerhacke, L., Finney, H., and R. Thayer,\n         \"OpenPGP
      Message Format\", RFC 2440, November 1998.\n   [6]   Narten, T. and H. Alvestrand,
      \"Guidelines for Writing an IANA\n         Considerations Section in RFCs\",
      BCP 26, RFC 2434,\n         October 1998.\n   [7]   Resnick, P., \"Internet
      Message Format\", RFC 2822, April 2001.\n   [8]   Housley, R., Polk, W., Ford,
      W., and D. Solo, \"Internet X.509\n         Public Key Infrastructure Certificate
      and Certificate\n         Revocation List (CRL) Profile\", RFC 3280, April 2002.\n
      \  [9]   Farrell, S. and R. Housley, \"An Internet Attribute Certificate\n         Profile
      for Authorization\", RFC 3281, April 2002.\n   [10]  Berners-Lee, T., Fielding,
      R., and L. Masinter, \"Uniform\n         Resource Identifier (URI): Generic
      Syntax\", STD 66, RFC 3986,\n         January 2005.\n   [11]  Arends, R., Austein,
      R., Larson, M., Massey, D., and S. Rose,\n         \"DNS Security Introduction
      and Requirements\", RFC 4033,\n         March 2005.\n   [12]  Arends, R., Austein,
      R., Larson, M., Massey, D., and S. Rose,\n         \"Resource Records for the
      DNS Security Extensions\", RFC 4034,\n         March 2005.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [13]  Dierks, T. and C. Allen, \"The TLS
      Protocol Version 1.0\",\n         RFC 2246, January 1999.\n   [14]  Kent, S.
      and K. Seo, \"Security Architecture for the Internet\n         Protocol\", RFC
      4301, December 2005.\n   [15]  Ellison, C., Frantz, B., Lampson, B., Rivest,
      R., Thomas, B.,\n         and T. Ylonen, \"SPKI Certificate Theory\", RFC 2693,\n
      \        September 1999.\n   [16]  Josefsson, S., \"The Base16, Base32, and
      Base64 Data Encodings\",\n         RFC 3548, July 2003.\n   [17]  Ramsdell,
      B., \"Secure/Multipurpose Internet Mail Extensions\n         (S/MIME) Version
      3.1 Message Specification\", RFC 3851,\n         July 2004.\n   [18]  Richardson,
      M., \"A Method for Storing IPsec Keying Material in\n         DNS\", RFC 4025,
      March 2005.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Copying Conditions\n   Regarding the portion of this document that
    was written by Simon\n   Josefsson (\"the author\", for the remainder of this
    section), the\n   author makes no guarantees and is not responsible for any damage\n
    \  resulting from its use.  The author grants irrevocable permission to\n   anyone
    to use, modify, and distribute it in any way that does not\n   diminish the rights
    of anyone else to use, modify, and distribute it,\n   provided that redistributed
    derivative works do not contain\n   misleading author or version information.
    \ Derivative works need not\n   be licensed under similar terms.\n"
  title: Appendix A.  Copying Conditions
- contents:
  - "Author's Address\n   Simon Josefsson\n   EMail: simon@josefsson.org\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
