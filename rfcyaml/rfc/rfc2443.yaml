- title: __initial_text__
  contents:
  - '                 A Distributed MARS Service Using SCSP

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a method for distributing a MARS service\n\
    \   within a LIS[1].  This method uses the Server Cache Synchronization\n   Protocol\
    \ (SCSP)[2] to synchronize the MARS Server databases within a\n   LIS.  When SCSP\
    \ is used to synchronize the caches of MARS Servers in\n   a LIS, the LIS defines\
    \ the boundary of an SCSP Server Group (SG).\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The keywords MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT,\
    \ SHOULD,\n   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL, when they appear in\
    \ this\n   document, are to be interpreted as described in [5].\n   The MARS is\
    \ an extended analog of the ATMARP Server introduced in\n   [4]. It provides the\
    \ necessary connection and addressing services\n   required by layer 3 multicast\
    \ services over ATM. There are three\n   basic elements to the MARS model. First,\
    \ the MARS Server which\n   manages and distributes layer 3 group membership information\
    \ to the\n   LIS. Second, MARS Clients which register with and query a single\
    \ MARS\n   Server for layer 3 multicast information. Third, MCS Clients which\n\
    \   register with a single MARS Server and provide layer 3 multicast\n   forwarding\
    \ services for a LIS.\n   Both MARS Clients and MCS Clients explicitly register\
    \ with the MARS\n   Server before exchanging layer 3 multicast information. During\
    \ the\n   registration process MARS Clients are place on the Cluster Control VC\n\
    \   (CCVC) and MCS Clients are placed on the Server Control VC (SCVC).\n   Both\
    \ the CCVC and SCVC are then used to propagate layer 3 multicast\n   updates to\
    \ the clients which make up a LIS. During the registration\n   process MARS Clients\
    \ are also assigned a unique Cluster Member ID\n   (CMI) which is used to identify\
    \ reflected packets in the presence of\n   MCS Clients.\n   In the Distributed\
    \ MARS Model there MAY be multiple MARS Servers in a\n   given LIS, and since\
    \ any MARS Server within the LIS MUST be able to\n   provide layer 3 multicast\
    \ information about any multicast group\n   within the LIS, there MUST be a method\
    \ by which to synchronize\n   multicast information across all MARS Servers within\
    \ the LIS.\n   The Server Cache Synchronization Protocol (SCSP) solves the\n \
    \  generalized server synchronization/cache-replication problem for\n   distributed\
    \ databases, and thus SCSP MAY be applied to the MARS\n   Server database synchronization\
    \ problem within a LIS. When SCSP is\n   used to synchronize the caches of MARS\
    \ Servers in a LIS, the LIS\n   defines the boundary of and SCSP Server Group\
    \ (SG).\n   SCSP is defined in two parts: the protocol independent part and the\n\
    \   client/server protocol specific part. The protocol independent part\n   is\
    \ specified in [2] whereas this document will specify the\n   client/server protocol\
    \ specific part where the MARS Server is the\n   client/server protocol.\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   All MARS Servers belonging to a LIS are said to belong to a Server\n\
    \   Group (SG).  A SG is identified by, not surprisingly, its SGID which\n   is\
    \ contained in a field in all SCSP packets. All SCSP packets contain\n   a Protocol\
    \ ID (PID) field as well. This PID field is set to 0x0003 to\n   signify that\
    \ SCSP is synchronizing MARS Server databases as opposed\n   to synchronizing\
    \ some other protocol's databases. (see Section\n   B.2.0.1 of [2] for more details).\
    \  In general, PIDs for SCSP will be\n   assigned by IANA upon request given that\
    \ a client/server protocol\n   specific specification has been written. In the\
    \ case of MARS Servers,\n   the client/server protocol specific specification\
    \ was written at the\n   same time as SCSP, and thus a PID=0x0003 was assigned\
    \ in [2].\n   SCSP places no topological requirements upon a MARS Server SG.\n\
    \   Obviously, however, the resultant graph of MARS Servers must span the\n  \
    \ set of MARS Servers being synchronized. For more information about\n   the client/server\
    \ protocol independent part of SCSP, the reader is\n   encouraged to see [2].\n\
    \   When a SG is using SCSP for synchronization, a MARS Client or MCS\n   Client\
    \ will register with only one MARS Server although it is allowed\n   to choose\
    \ any MARS Server in the SG for this registration. At\n   registration time the\
    \ MARS Client or MCS Client will be added to that\n   MARS Servers respective\
    \ CCVC or SCVC. Also, MARS Clients will be\n   issued a unique CMI for the entire\
    \ LIS. This document assumes at a\n   minimum each MARS Server in the SG will\
    \ be configured with a unique\n   range of CMIs to assign to clients registering\
    \ with that MARS Server.\n   Use of some external means for allocating CMIs to\
    \ MARS Servers in a\n   SG is possible but beyond the scope of this document.\n\
    \   When a MARS Client or MCS Client successfully registers with a MARS\n   Server\
    \ in the SG that MARS Server will propagate the registration\n   information to\
    \ its peer MARS Servers. The same propagation will occur\n   for any subsequent\
    \ group membership information learned from the\n   clients. The peer MARS Server\
    \ will then update its group membership\n   database and propagate the information\
    \ out its own CCVC or SCVC if\n   needed.\n   In the case of a MARS Server failure\
    \ all peer MARS Servers in the SG\n   MUST flush the client/group membership information\
    \ learned from the\n   failed MARS Server. The clients belonging to the failed\
    \ MARS Servers\n   CCVC and SCVC will migrate to the next available MARS Server\
    \ as\n   specified in Section 5.3 of [1]. When a client detects a failure of\n\
    \   its MARS, it steps to the next backup MARS Server and attempts to\n   register\
    \ with the server. If the registration is successful the\n   client will re-join\
    \ all of its previous group membership information.\n   If the registration fails,\
    \ the process repeats until a functional\n   MARS Server is found.\n   Determining\
    \ the operational state of a MARS Servers in a SG requires\n   that each MARS\
    \ Server send out an \"alive\" or \"heartbeat\" message\n   similar to the MARS\
    \ Redirect message sent out on the CCVC or SCVC for\n   MARS Clients. However,\
    \ this message will only be sent to MARS Servers\n   in the SG and is from here\
    \ on defined as the MARS Server Redirect\n   Entry.\n   In order to detect that\
    \ a MARS Server failure has occurred each\n   server MUST update it's MARS Server\
    \ Redirect Entry state at least\n   every 2 minutes, it is RECOMMENDED that it\
    \ is updated every 1 minute.\n   Failure to receive two consecutive MARS Server\
    \ Redirect Entry updates\n   from a given MARS Server in the SG will cause all\
    \ membership\n   information learned from this server to be flushed. The MARS\
    \ Server\n   Redirect Entry state is also used to create the MARS_REDIRECT_MAP\n\
    \   messages sent out on CCVC for each MARS Server in the SG. The\n   ordering\
    \ of each server learned will be based on the MARS Servers\n   SCSP Sender ID.\
    \ The ordering of the MARS_REDIRECT_MAP will first\n   contain the list of MARS\
    \ Servers learned via MARS Server Redirect\n   Entry updates in ascending order\
    \ based on the SCSP Sender ID,\n   followed by any externally configured or learned\
    \ backup MARS Servers.\n   In the case of a MARS Client or MCS Client failure\
    \ where the client\n   is unexpectedly removed from the CCVC or SCVC the MARS\
    \ Server MUST\n   notify its peer SG members via a proxy deregister for that client.\n\
    \   Upon receiving a proxy deregister request from a peer SG member all\n   membership\
    \ information for the deregistering client MUST be removed.\n   Any Clients sending\
    \ multicast data to the failed client should also\n   receive an unexpected removal\
    \ of this client which will intern cause\n   the sending client to revalidate\
    \ the multicast groups current\n   membership as outlined in Section 5.1.5.1 of\
    \ [1].\n"
- title: 3.  Format of the CSA Record MARS Specific Part
  contents:
  - "3.  Format of the CSA Record MARS Specific Part\n   CSA Records in SCSP contain\
    \ a \"Client/Server Protocol Specific Part\"\n   which contains the non-protocol\
    \ independent information for a given\n   server's cache entry.\n   0        \
    \           1                   2                   3\n   0 1 2 3 4 5 6 7 8 9\
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Hardware Type          |        Protocol Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              SNAP                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     SNAP      |   Unused      |    Version    |   State       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Flags              |       Cluster Member ID       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Src Addr Len  | Group Addr Len| ATM Addr T/L  |ATM SubAddr T/L|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source Protocol Address             (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM Address                  (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM SubAddress               (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Minimum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Maximum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Hardware Type\n     Defines the type of \"link layer\" addresses being carried.\
    \  This\n     value is the ATM Forum 'address family number' specified in [3]\
    \ as\n     15 decimal (0x000F).  This is the mar$afn field defined in [1].\n \
    \  Protocol Type\n     This field is the protocol type number for the protocol\
    \ using MARS\n     from [3].  (IPv4 is 0x0800).  This is the mar$pro.type field\
    \ from\n     [1].\n   Protocol SNAP\n     This field is the optional protocol\
    \ SNAP extension to protocol\n     type. This is the mar$pro.snap field from [1].\n\
    \   Version Number\n     0                    MARS Specific part of the CSA record.\n\
    \     0x01                 Reserved for NHRP.\n     0x02 - 0xEF          Reserved\
    \ for future use by the IETF.\n     0xF0 - 0xFE          Allocated for use by\
    \ the ATM Forum.\n     0xFF                 Experimental/Local use.\n     Version\
    \ Number for this document MUST be set to 0x00.\n   State\n     1   MARS Server\
    \ Redirect Entry.\n     2   MCS Serve/Register request.\n     3   MARS Client\
    \ Join/Register request.\n     4   MARS Client Leave/Deregister request.\n   \
    \  5   MCS Unserve/Deregister request.\n     All other State values should cause\
    \ the CSA to be discarded.\n   Flags\n     The flags field is used to contain\
    \ several flags and is similar to\n     the mar$flags field from [1].\n      \
    \ mar$flags\n          Bit 15   - mar$flags.layer3grp\n          Bit 13   - mar$flags.register\n\
    \          Bit 0-7  - mar$flags.sequence\n       All remaining bits are reserved\
    \ and MUST be zero. The\n       mars$flags.sequence field is of local significance\
    \ only to the\n       Local Server (LS).\n   Cluster Member CMI\n     This field\
    \ contains the CMI which uniquely identifies each endpoint\n     within a LIS.\
    \ This is the mar$cmi field from [1].\n   Src Addr Len\n     This field contains\
    \ the length of the Source Protocol Address\n     field.  For IPv4, the value\
    \ is 4 if an address is specified. A null\n     (non-existent) address MUST be\
    \ coded as zero length, and no space\n     allocated for it in the message body.\
    \  This is the mar$spln field\n     from [1].\n   Group Addr Len\n     This field\
    \ contains the length of the Group Protocol Address field.\n     For IPv4, the\
    \ value is 4 if an address is specified. A null (non-\n     existent) address\
    \ MUST be coded as zero length, and no space\n     allocated for it in the message\
    \ body.  This is the mar$tpln field\n     from [1].\n   ATM Addr T/L\n     This\
    \ field contains the type and length of the Source ATM Address\n     field.  The\
    \ type and length encoding is described in Section 5.1.2\n     of [1].\n   ATM\
    \ SubAddr T/L\n     This field contains the type and length of the Source ATM\n\
    \     SubAddress field.  The type and length encoding is described in\n     Section\
    \ 5.1.2 of [1].\n   Source Protocol Address\n     This is the internetwork address\
    \ for the source of an address\n     binding in a MARS server cache entry. If\
    \ null, no storage will be\n     allocated.  This is the mar$spa field from [1].\n\
    \   Source ATM Address\n     This is the Source's ATM address of an address binding\
    \ in a MARS\n     server cache entry.  The address, if specified, is E.164 or\
    \ ATM\n     Forum NSAPA. This is the mar$sha field from [1].\n   Source ATM SubAddress\n\
    \     This is the Source's ATM subaddress of an address binding in a MARS\n  \
    \   server cache entry.  The subaddress, if specified, is an ATM Forum\n     NSAPA.\
    \  If null, no storage will be allocated. This is the mar$ssa\n     field from\
    \ [1].\n   Minimum Multicast Group Address\n     This is the internetwork address\
    \ of the lower bound on the range of\n     multicast group addresses for the address\
    \ binding in a MARS server\n     cache entry. If null, no storage will be allocated.\
    \ This is the\n     mar$min.N field from [1].\n   Maximum Multicast Group Address\n\
    \     This is the internetwork address of the upper bound on the range of\n  \
    \   multicast group addresses for the address binding in a MARS server\n     cache\
    \ entry. If null, no storage will be allocated. This is the\n     mar$max.N field\
    \ from [1].\n"
- title: 4.  Values for SCSP Protocol Independent Part
  contents:
  - "4.  Values for SCSP Protocol Independent Part\n   The following sections give\
    \ values for fields of the SCSP Protocol\n   Independent Part of the various SCSP\
    \ messages.\n"
- title: 4.1 Values for the SCSP "Mandatory Common Part"
  contents:
  - "4.1 Values for the SCSP \"Mandatory Common Part\"\n   Protocol ID = 0x0003\n\
    \   Sender ID Len = 0x04\n   Recvr ID Len = 0x04\n   See Section B.2.0.1 of [2]\
    \ for a detailed description of these\n   fields.\n"
- title: 4.2 Values for the SCSP "CSAS Record"
  contents:
  - "4.2 Values for the SCSP \"CSAS Record\"\n   Cache Key Len = 0x04\n   Orig ID\
    \ Len = 0x04\n   See Section B.2.0.2 of [2] for a detailed description of these\n\
    \   fields.\n"
- title: 5.  Detailed State Descriptions
  contents:
  - '5.  Detailed State Descriptions

    '
- title: 5.1  MARS Server Redirect Entry.
  contents:
  - "5.1  MARS Server Redirect Entry.\n   The MARS Server Redirect Entry is used to\
    \ determine the operational\n   state of a MARS Server in the SG. Each server\
    \ MUST update it's MARS\n   Server Redirect Entry state at least every 2 minutes,\
    \ it is\n   RECOMMENDED that it is updated every 1 minute.\n   0             \
    \      1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Hardware Type          |        Protocol Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              SNAP                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     SNAP      |   Unused      |    Version    |   State       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Flags              |       Cluster Member ID       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Src Addr Len  | Group Addr Len| ATM Addr T/L  |ATM SubAddr T/L|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM Address                  (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM SubAddress               (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Hardware Type\n     This value is the ATM Forum 'address family number' specified\
    \ in\n     [3] as 15 decimal (0x000F).\n   Protocol Type\n     This field is the\
    \ protocol type number for the protocol using MARS\n     from [3].  (IPv4 is 0x0800).\n\
    \   Protocol SNAP\n     This field is the optional protocol SNAP extension to\
    \ protocol\n     type.  This is the mar$pro.snap field from [1].\n   Version Number\n\
    \     Version Number for this document MUST be set to 0x00.\n   State\n     State\
    \ value is coded as 1 decimal for a MARS Server Redirect Entry.\n   The Flags,\
    \ Cluster Member ID, Src Addr Len, and Group Addr Len fields\n   are unused and\
    \ set to zero.\n   The ATM Addr T/L, ATM SubAddr T/L, Source ATM Address, and\
    \ Source ATM\n   SubAddress fields define the ATM address for the source of the\
    \ MARS\n   Server Redirect Entry in the SG. The coding for these fields are the\n\
    \   same as described in Section 3 of this document.\n   Failure to receive two\
    \ consecutive MARS Server Redirect Entry updates\n   from a given MARS Server\
    \ in the SG will cause all membership\n   information learned from this server\
    \ to be flushed. When a valid MARS\n   Server Redirect Entry update is received\
    \ the source of this update\n   will be placed into the table of backup MARS Servers\
    \ sent in the\n   MARS_REDIRECT_MAP message. The ordering of servers in the\n\
    \   MARS_REDIRECT_MAP will first contain the list of MARS Servers learned\n  \
    \ via MARS Server Redirect Entry updates in ascending order based on\n   the SCSP\
    \ Sender ID, followed by any externally configured or learned\n   backup MARS\
    \ Servers. The format of the MARS_REDIRECT_MAP can be found\n   in Section 5.4.3\
    \ of [1].\n"
- title: 5.2  MCS Serve/Register request.
  contents:
  - "5.2  MCS Serve/Register request.\n   The MCS Serve/Register request is used to\
    \ propagate the registering\n   or servicing of specific groups by an MCS Client\
    \ within the SG\n   domain. It is similar to an MARS_MSERV request defined in\
    \ Section\n   6.2.2 and 6.2.3 of [1]. When a MARS Server in the SG successfully\n\
    \   adds a new MCS Client to it's SCVC or adds MCS support for a specific\n  \
    \ group it MUST send a MCS Serve/Register request to the SG. An MCS\n   Client\
    \ can only register with one MARS Server in the SG.\n   0                   1\
    \                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Hardware Type          |        Protocol Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              SNAP                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     SNAP      |   Unused      |    Version    |   State       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Flags              |       Cluster Member ID       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Src Addr Len  | Group Addr Len| ATM Addr T/L  |ATM SubAddr T/L|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source Protocol Address             (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM Address                  (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM SubAddress               (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Minimum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Maximum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Hardware Type\n     This value is the ATM Forum 'address family number' specified\
    \ in\n     [3] as 15 decimal (0x000F).\n   Protocol Type\n     This field is the\
    \ protocol type number for the protocol using MARS\n     from [3].  (IPv4 is 0x0800).\n\
    \   Protocol SNAP\n     This field is the optional protocol SNAP extension to\
    \ protocol\n     type.  This is the mar$pro.snap field from [1].\n   Version Number\n\
    \     Version Number for this document MUST be set to 0x00.\n   State\n     State\
    \ value is coded as 2 decimal for a MCS Serve/Register request.\n   Flags\n  \
    \   The flags field is used to contain several flags:\n       mar$flags\n    \
    \      Bit 15   - mar$flags.layer3grp\n          Bit 13   - mar$flags.register\n\
    \          Bit 0-7  - mar$flags.sequence\n     The mar$flags.register bit MUST\
    \ be set the same as in the\n     originating MARS_MSERV request. The mar$flags.layer3grp\
    \ bit MUST be\n     zero and the mar$flags.sequence bits are of local significance\
    \ only\n     to the LS.\n   Cluster Member CMI\n     This field contains the CMI\
    \ assigned by the MARS Server which\n     processed the MARS_MSERV request and\
    \ uniquely identifies the MCS\n     Client in the MARS server cache.\n   Src Addr\
    \ Len\n     This field contains the length of the Source Protocol Address\n  \
    \   field.  For IPv4, the value is 4 if an address is specified. A null\n    \
    \ (non-existent) address MUST be coded as zero length, and no space\n     allocated\
    \ for it in the message body.\n   Group Addr Len\n     This field contains the\
    \ length of the Group Protocol Address field.\n     If the register bit in the\
    \ flags field is set to 1 in the request\n     this field MUST be zero.  If the\
    \ register bit is zero in the flags\n     field the value of this field for IPv4\
    \ is 4.\n   ATM Addr T/L\n     This field contains the type and length of the\
    \ Source ATM Address\n     field for the MCS Client that originated the MARS_MSERV\
    \ request.\n     The type and length encoding is described in Section 3.\n   ATM\
    \ SubAddr T/L\n     This field contains the type and length of the Source ATM\n\
    \     SubAddress field for the MCS Client that originated the MARS_MSERV\n   \
    \  request.  The type and length encoding is described in Section 3.\n   Source\
    \ Protocol Address\n     This is the internetwork address for the source of an\
    \ address\n     binding in a MARS server cache entry. If Src Addr Len is set to\n\
    \     zero no storage will be allocated.\n   Source ATM Address\n     This is\
    \ the MCS Client's ATM address of an address binding in a\n     MARS server cache\
    \ entry. The address is E.164 or ATM Forum NSAPA.\n   Source ATM SubAddress\n\
    \     This is the MCS Client's ATM subaddress of an address binding in a\n   \
    \  MARS server cache entry. The subaddress, if specified, is an ATM\n     Forum\
    \ NSAPA.  If null, no storage will be allocated.\n   Minimum Multicast Group Address\n\
    \     This is the internetwork address of the lower bound on the range of\n  \
    \   multicast group addresses for the address binding in a MARS server\n     cache\
    \ entry. If Group Addr Len is set to zero no storage will be\n     allocated.\n\
    \   Maximum Multicast Group Address\n     This is the internetwork address of\
    \ the upper bound on the range of\n     multicast group addresses for the address\
    \ binding in a MARS server\n     cache entry. If Group Addr Len is set to zero\
    \ no storage will be\n     allocated.\n   An MCS Client can only register with\
    \ one MARS Server in the SG and is\n   only placed on the SCVC for the MARS Server\
    \ for which it is\n   registered with.\n   When a MCS Client Serve/Register request\
    \ specifying a group address\n   is received by a MARS Server it MUST create a\
    \ cache entry associated\n   with this client. In addition to adding the cache\
    \ entry it MUST send\n   out a MARS_MIGRATE message on it's CCVC. This is needed\
    \ so that\n   clients using a mesh topology can migrate to a server based topology.\n\
    \   Details regarding the MARS_MIGRATE message can be found in Section\n   5.1.6\
    \ of [1].\n"
- title: 5.3  MARS Client Join/Register request.
  contents:
  - "5.3  MARS Client Join/Register request.\n   The MARS Client Join/Register request\
    \ is used to propagate the\n   registering or joining of specific group ranges\
    \ by MARS Clients\n   within the SG domain.  It is similar to the MARS_JOIN request\
    \ defined\n   in Sections 5.2.1 to 5.2.3 of [1]. When a MARS Server in the SG\n\
    \   successfully registers a new MARS Client or a registered client joins\n  \
    \ a specific group address range the MARS Server MUST send a MARS\n   Client Join/Register\
    \ request to the SG. A MARS Client can only\n   register with one MARS Server\
    \ in the SG and is placed only on that\n   servers CCVC.\n   0               \
    \    1                   2                   3\n   0 1 2 3 4 5 6 7 8 9 0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Hardware Type          |        Protocol Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              SNAP                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     SNAP      |   Unused      |    Version    |   State       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            Flags              |       Cluster Member ID       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | Src Addr Len  | Group Addr Len| ATM Addr T/L  |ATM SubAddr T/L|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source Protocol Address             (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM Address                  (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Source ATM SubAddress               (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Minimum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Maximum Multicast Group Address     (variable length)     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Hardware Type\n     This value is the ATM Forum 'address family number' specified\
    \ in\n     [3] as 15 decimal (0x000F).\n   Protocol Type\n     This field is the\
    \ protocol type number for the protocol using MARS\n     from [3].  (IPv4 is 0x0800).\n\
    \   Protocol SNAP\n     This field is the optional protocol SNAP extension to\
    \ protocol\n     type.  This is the mar$pro.snap field from [1].\n   Version Number\n\
    \     Version Number for this document MUST be set to 0x00.\n   State\n     State\
    \ value is coded as 3 decimal for a MARS Client Join/Register\n     request.\n\
    \   Flags\n     The flags field is used to contain several flags:\n       mar$flags\n\
    \          Bit 15   - mar$flags.layer3grp\n          Bit 13   - mar$flags.register\n\
    \          Bit 0-7  - mar$flags.sequence\n     The mars$flags.layer3grp and mar$flags.register\
    \ bits MUST be set\n     the same as in the originating MARS_JOIN request. The\n\
    \     mar$flags.sequence bits are of local significance only to the LS.\n   Cluster\
    \ Member CMI\n     This field contains the CMI assigned by the MARS Server which\n\
    \     processed the MARS_JOIN request and uniquely identifies the MARS\n     Client\
    \ in the MARS server cache.\n   Src Addr Len\n     This field contains the length\
    \ of the Source Protocol Address\n     field.  For IPv4, the value is 4 if an\
    \ address is specified. A null\n     (non-existent) address MUST be coded as zero\
    \ length, and no space\n     allocated for it in the message body.\n   Group Addr\
    \ Len\n     This field contains the length of the Group Protocol Address field.\n\
    \     If the register bit in the flags field is set to 1 in the request\n    \
    \ this field MUST be zero.  If the register bit is zero in the flags\n     field\
    \ the value of this field for IPv4 is 4.\n   ATM Addr T/L\n     This field contains\
    \ the type and length of the Source ATM Address\n     field for the MARS Client\
    \ that originated the MARS_JOIN request.\n     The type and length encoding is\
    \ described in Section 3.\n   ATM SubAddr T/L\n     This field contains the type\
    \ and length of the Source ATM\n     SubAddress field for the MARS Client that\
    \ originated the MARS_JOIN\n     request.  The type and length encoding is described\
    \ in Section 3.\n   Source Protocol Address\n     This is the internetwork address\
    \ for the source of an address\n     binding in a MARS server cache entry. If\
    \ Src Addr Len is set to\n     zero no storage will be allocated.\n   Source ATM\
    \ Address\n     This is the MARS Client's ATM address of an address binding in\
    \ a\n     MARS server cache entry. The address is E.164 or ATM Forum NSAPA.\n\
    \   Source ATM SubAddress\n     This is the MARS Client's ATM subaddress of an\
    \ address binding in a\n     MARS server cache entry. The subaddress, if specified,\
    \ is an ATM\n     Forum NSAPA.  If null, no storage will be allocated.\n   Minimum\
    \ Multicast Group Address\n     This is the internetwork address of the lower\
    \ bound on the range of\n     multicast group addresses for the address binding\
    \ in a MARS server\n     cache entry. If Group Addr Len is set to zero no storage\
    \ will be\n     allocated.\n   Maximum Multicast Group Address\n     This is the\
    \ internetwork address of the upper bound on the range of\n     multicast group\
    \ addresses for the address binding in a MARS server\n     cache entry. If Group\
    \ Addr Len is set to zero no storage will be\n     allocated.\n   An MARS Client\
    \ can only register with one MARS Server in the SG and\n   is only placed on the\
    \ CCVC for the MARS Server for which it is\n   registered with. If the mar$flags.layer3grp\
    \ is set to 1 than the\n   Minimum and Maximum Multicast Group Addresses MUST\
    \ be equal for IPv4.\n   When a MARS Client Join/Register request is sent with\
    \ the\n   mar$flags.register bit set to 1 all of the servers in the SG will\n\
    \   create a cache entry for this client using the information in the\n   request.\n\
    \   When a registered MARS Client issues a MARS_JOIN for a specific group\n  \
    \ address range a MARS Client Join/Register request MUST be sent to the\n   servers\
    \ in the SG. The actions taken by each server in the SG depend\n   on previous\
    \ group membership actions and MCS supported groups.\n   Each MARS Server MUST\
    \ perform the necessary redistribution and hole\n   punching algorithms before\
    \ propagating this request to the CCVC and\n   SCVC on each server. The redistribution\
    \ and hole punching algorithms\n   used for propagating join requests to the CCVC\
    \ are the same as\n   defined in Sections 6.1.2 and 6.2.4 of [1]. If the originating\n\
    \   MARS_JOIN request is a duplicate of a previously joined range or\n   contains\
    \ no group address range than a MARS Client Join/Register MUST\n   NOT be sent\
    \ to the SG.\n   The redistribution and hole punching algorithms used for propagating\n\
    \   join requests as MARS_SJOIN request on a SCVC is the same as Section\n   6.2.4\
    \ except for the following. Only the MARS Servers which contain\n   the registered\
    \ MCS Clients for the target group ranges should\n   propagate this information\
    \ to their SCVCs.\n"
- title: 5.4  MARS Client Leave/Deregister request.
  contents:
  - "5.4  MARS Client Leave/Deregister request.\n   The MARS Client Leave/Deregister\
    \ request is used to propagate the\n   deregistering or leaving of specific group\
    \ ranges by registered MARS\n   Clients within the SG domain. It is similar to\
    \ the MARS_LEAVE request\n   defined in Sections 5.2.1 to 5.2.3 of [1]. When a\
    \ MARS Server in the\n   SG successfully deregisters a registered MARS Client\
    \ or a registered\n   client leaves a specific group address range for which it\
    \ had joined\n   the MARS Server MUST send a MARS Client Leave/Deregister request\
    \ to\n   the SG. If a registered MARS Client is unexpectedly removed from the\n\
    \   CCVC the MARS Server MUST act as a proxy and send a MARS Client\n   Leave/Deregister\
    \ request to the SG.\n   The format and meanings of the fields in a MARS Client\n\
    \   Leave/Deregister request are the same as in Section 5.3 except the\n   State\
    \ is coded as 4 decimal for a MARS Client Leave/Deregister\n   request.\n   When\
    \ a MARS Client Leave/Deregister request is sent with the\n   mar$flags.register\
    \ bit set to 1 all of the servers in the SG\n   receiving this update MUST purge\
    \ all cache entries for this client.\n   When a registered MARS Client issues\
    \ a MARS_LEAVE for a specific\n   group address range a MARS Client LEAVE/Deregister\
    \ request MUST be\n   sent to the servers in the SG. The actions taken by each\
    \ server in\n   the SG depend on previous group membership actions and MCS supported\n\
    \   groups.\n   Each MARS Server MUST perform the necessary redistribution and\
    \ hole\n   punching algorithms before propagating this request to the CCVC and\n\
    \   SCVC on each server. The redistribution and hole punching algorithms\n   used\
    \ for propagating leave requests to the CCVC are the same as\n   defined in Sections\
    \ 6.1.2 and 6.2.4 of [1]. If the originating\n   MARS_LEAVE request does not correspond\
    \ to a previously joined range\n   or contains no group address range than a MARS\
    \ Client\n   Leave/Deregister MUST NOT be sent to the SG.\n   The redistribution\
    \ and hole punching algorithms used for propagating\n   leave requests as MARS_SLEAVE\
    \ requests on a SCVC is the same as\n   Section 6.2.4 except for the following.\
    \ Only the MARS Servers which\n   contain the registered MCS Clients for the target\
    \ group ranges should\n   propagate this information to their SCVCs.\n"
- title: 5.5  MCS Unserve/Deregister request.
  contents:
  - "5.5  MCS Unserve/Deregister request.\n   The MCS Unserve/Deregister request is\
    \ used to propagate the\n   deregistering or unservicing of specific groups by\
    \ a registered MCS\n   Client within the SG domain. It is similar to an MARS_MUNSERV\
    \ request\n   defined in Section 6.2.2 and 6.2.3 of [1]. When a MARS Server in\
    \ the\n   SG successfully deregisters a registered MCS Client or registered MCS\n\
    \   Client stops serving a specific group address range for which it had\n   serviced\
    \ the MARS Server MUST send a MCS Unserve/Deregister request\n   to the SG. If\
    \ a registered MCS Client is unexpectedly removed from\n   the SCVC the MARS Server\
    \ owning the SCVC MUST act as a proxy and send\n   a MCS Unserve/Deregister request\
    \ to the SG.\n   The format and meanings of the fields in a MCS Unserve/Deregister\n\
    \   request are the same as in Section 5.2 except the State is coded as 5\n  \
    \ decimal for a MCS Unserve/Deregister request.\n   When a MCS Client Unserve/Deregister\
    \ request is sent with the\n   mar$flags.register bit set to 1 all of the servers\
    \ in the SG\n   receiving this update MUST purge all cache entries for this client.\n\
    \   When a registered MCS Client issues a MARS_MUNSERV for a specific\n   group\
    \ address range being served a MCS Client Unserve/Deregister\n   request MUST\
    \ be sent to the servers in the SG. The members of the SG\n   that receive this\
    \ update must then clear the cache entry associated\n   with this MCS Client.\n\
    \   In addition to clearing one or more cache entries associated with\n   receiving\
    \ a  MCS Client Unserve/Deregister request each MARS Server\n   in the SG MUST\
    \ send out a MARS_LEAVE message on it's CCVC in order\n   for clients to change\
    \ back to a mesh topology.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   There is no mechanism to encrypt the CSA Record\
    \ MARS Specific Part of\n   the message exchanged between servers. However, there\
    \ are base SCSP\n   security features in the SCSP Protocol Independent part [2]\
    \ which can\n   be used to protect against attacks.\n   Any SCSP MARS is susceptible\
    \ to Denial of Service (DOS) attacks. A\n   rouge MARS Client can inundate its\
    \ Server with MARS packets. This is\n   a base MARS problem as currently defined\
    \ by [1]. A rouge host can\n   also inundate its neighboring SCSP MARS with SCSP\
    \ packets. However,\n   if the authentication option is used, the SCSP MARS databases\
    \ will\n   not become corrupted, as the bogus packets will be discarded when the\n\
    \   authentication check fails.\n   Due to the pair wise authentication model\
    \ of SCSP MARS, the\n   information received from any properly authenticated server\
    \ is\n   trusted and propagated throughout the server group. Consequently, if\n\
    \   security of any SCSP MARS server is compromised, the entire database\n   becomes\
    \ vulnerable to corruption originating from the compromised\n   server.\n"
- title: References
  contents:
  - "References\n   [1] Armitage, G., \"Support for Multicast over UNI 3.0/3.1 based\
    \ ATM\n       Networks\", RFC 2022, November 1996.\n   [2] Luciani, J., Armitage,\
    \ G., Halpern, J. and N. Doraswamy, \"Server\n       Cache Synchronization Protocol\"\
    , RFC 2334, April 1998.\n   [3] Reynolds, J. and J. Postel, \"Assigned Numbers\"\
    , STD 2, RFC 1700,\n       October 1994.  See also: http://www.iana.org/numbers.html\n\
    \   [4] Laubach, M., \"Classic IP and ARP over ATM\", RFC 1577, January\n    \
    \   1994.\n   [5] Bradner, S., \"Key Words for use in RFCs to Indicate Requirement\n\
    \       Levels,\" BCP 14, RFC 2119, March 1997.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors would like to thank Grenville Armitage for his\
    \ previous\n   distributed MARS work and also the members of the ION working group\n\
    \   of the IETF, whose review and discussion of this document has been\n   invaluable.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   James V. Luciani\n   Bay Networks, Inc.\n   3 Federal\
    \ Street, BL3-04\n   Billerica, MA  01821\n   Phone: +1-508-916-4734\n   EMail:\
    \ luciani@baynetworks.com\n   Anthony M. Gallo\n   IBM, Networking Hardware Division\n\
    \   Dept. M6LA/B664\n   P.O. Box 12195\n   Research Triangle Park, NC 27709\n\
    \   Phone: +1-919-254-9889\n   EMail: gallo@raleigh.ibm.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
