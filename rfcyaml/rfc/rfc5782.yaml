- title: __initial_text__
  contents:
  - ''
- title: Internet Research Task Force (IRTF)                            J. Levine
  contents:
  - "Internet Research Task Force (IRTF)                            J. Levine\n  \
    \                   DNS Blacklists and Whitelists\n"
- title: Abstract
  contents:
  - "Abstract\n   The rise of spam and other anti-social behavior on the Internet\
    \ has\n   led to the creation of shared blacklists and whitelists of IP\n   addresses\
    \ or domains.  The DNS has become the de-facto standard\n   method of distributing\
    \ these blacklists and whitelists.  This memo\n   documents the structure and\
    \ usage of DNS-based blacklists and\n   whitelists, and the protocol used to query\
    \ them.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Research Task Force\n   (IRTF).  The IRTF publishes the results\
    \ of Internet-related research\n   and development activities.  These results\
    \ might not be suitable for\n   deployment.  This RFC represents the consensus\
    \ of the Anti-Spam\n   Research Group of the Internet Research Task Force (IRTF).\
    \  Documents\n   approved for publication by the IRSG are not a candidate for\
    \ any\n   level of Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5782.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Structure of an IP Address DNSBL or DNSWL .......................3\n  \
    \    2.1. IP Address DNSxL ...........................................3\n    \
    \  2.2. IP Address DNSWL ...........................................4\n      2.3.\
    \ Combined IP Address DNSxL ..................................4\n      2.4. IPv6\
    \ DNSxLs ................................................5\n   3. Domain Name\
    \ DNSxLs ..............................................6\n   4. DNSxL Cache Behavior\
    \ ............................................7\n   5. Test and Contact Addresses\
    \ ......................................7\n   6. Typical Usage of DNSBLs and DNSWLs\
    \ ..............................8\n   7. Security Considerations .........................................9\n\
    \   8. References .....................................................10\n  \
    \    8.1. Normative References ......................................10\n    \
    \  8.2. Informative References ....................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In 1997, Dave Rand and Paul Vixie, well-known Internet software\n\
    \   engineers, started keeping a list of IP addresses that had sent them\n   spam\
    \ or engaged in other behavior that they found objectionable.\n   Word of the\
    \ list quickly spread, and they started distributing it as\n   a BGP feed for\
    \ people who wanted to block all traffic from listed IP\n   addresses at their\
    \ routers.  The list became known as the Real-time\n   Blackhole List (RBL).\n\
    \   Many network managers wanted to use the RBL to block unwanted e-mail,\n  \
    \ but weren't prepared to use a BGP feed.  Rand and Vixie created a\n   DNS-based\
    \ distribution scheme that quickly became more popular than\n   the original BGP\
    \ distribution.  Other people created other DNS-based\n   blacklists either to\
    \ compete with the RBL or to complement it by\n   listing different categories\
    \ of IP addresses.  Although some people\n   refer to all DNS-based blacklists\
    \ as \"RBLs\", the term properly is\n   used for the Mail Abuse Prevention System\
    \ (MAPS) RBL, the descendant\n   of the original list.  (In the United States,\
    \ the term RBL is a\n   registered service mark of Trend Micro [MAPSRBL].)\n \
    \  The conventional term is now DNS blacklist or blocklist, or DNSBL.\n   Some\
    \ people also publish DNS-based whitelists or DNSWLs.  Network\n   managers typically\
    \ use DNSBLs to block traffic and DNSWLs to\n   preferentially accept traffic.\
    \  The structure of a DNSBL and DNSWL\n   are the same, so in the subsequent discussion\
    \ we use the abbreviation\n   DNSxL to mean either.\n   This document defines\
    \ the structure of DNSBLs and DNSWLs.  It\n   describes the structure, operation,\
    \ and use of DNSBLs and DNSWLs but\n   does not describe or recommend policies\
    \ for adding or removing\n   addresses to and from DNSBLs and DNSWLs, nor does\
    \ it recommend\n   policies for using them.  We anticipate that management policies\
    \ will\n   be addressed in a companion document.\n   This document is a product\
    \ of the Anti-Spam Research Group (ASRG) of\n   the Internet Research Task Force.\
    \  It represents the consensus of the\n   ASRG with respect to practices to improve\
    \ interoperability of DNS-\n   based blacklists and whitelists.\n   Requirements\
    \ Notation:   The key words \"MUST\", \"MUST NOT\",\n      \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\",\n      \"RECOMMENDED\", \"MAY\",\
    \ and \"OPTIONAL\" in this document are to be\n      interpreted as described\
    \ in [RFC2119], with respect to\n      recommendations for improving technical\
    \ interoperability of\n      DNSxLs.\n"
- title: 2.  Structure of an IP Address DNSBL or DNSWL
  contents:
  - "2.  Structure of an IP Address DNSBL or DNSWL\n   A DNSxL is a zone in the DNS\
    \ [RFC1034] [RFC1035].  The zone\n   containing resource records identifies hosts\
    \ present in a blacklist\n   or whitelist.  Hosts were originally encoded into\
    \ DNSxL zones using a\n   transformation of their IP addresses, but now host names\
    \ are\n   sometimes encoded as well.  Most DNSxLs still use IP addresses.\n"
- title: 2.1.  IP Address DNSxL
  contents:
  - "2.1.  IP Address DNSxL\n   An IPv4 address DNSxL has a structure adapted from\
    \ that of the rDNS.\n   (The rDNS, reverse DNS, is the IN-ADDR.ARPA [RFC1034]\
    \ and IP6.ARPA\n   [RFC3596] domains used to map IP addresses to domain names.)\
    \  Each\n   IPv4 address listed in the DNSxL has a corresponding DNS entry.  The\n\
    \   entry's name is created by reversing the order of the octets of the\n   text\
    \ representation of the IP address, and appending the domain name\n   of the DNSxL.\n\
    \   If, for example, the DNSxL is called bad.example.com, and the IPv4\n   address\
    \ to be listed is 192.0.2.99, the name of the DNS entry would\n   be 99.2.0.192.bad.example.com.\
    \  Each entry in the DNSxL MUST have an\n   A record.  DNSBLs SHOULD have a TXT\
    \ record that describes the reason\n   for the entry.  DNSWLs MAY have a TXT record\
    \ that describes the\n   reason for the entry.  The contents of the A record MUST\
    \ NOT be used\n   as an IP address.  The A record contents conventionally have\
    \ the\n   value 127.0.0.2, but MAY have other values as described below in\n \
    \  Section 2.3.  The TXT record describes the reason that the IP address\n   is\
    \ listed in the DNSxL, and is often used as the text of an SMTP\n   error response\
    \ when an SMTP client attempts to send mail to a server\n   using the list as\
    \ a DNSBL, or as explanatory text when the DNSBL is\n   used in a scoring spam\
    \ filter.  The DNS records for this entry might\n   be:\n   99.2.0.192.bad.example.com\
    \    A      127.0.0.2\n   99.2.0.192.bad.example.com    TXT\n            \"Dynamic\
    \ address, see http://bad.example.com?192.0.2.99\"\n   Some DNSxLs use the same\
    \ TXT record for all entries, while others\n   provide a different TXT record\
    \ for each entry or range of entries\n   that describes the reason that entry\
    \ or range is listed.  The reason\n   often includes the URL of a web page where\
    \ more information is\n   available.  Client software MUST check the A record\
    \ and MAY check the\n   TXT record.\n   If a range of addresses is listed in the\
    \ DNSxL, the DNSxL MUST\n   contain an A record (or a pair of A and TXT records)\
    \ for every\n   address in the DNSxL.  Conversely, if an IP address is not listed\
    \ in\n   the DNSxL, there MUST NOT be any records for the address.\n"
- title: 2.2.  IP Address DNSWL
  contents:
  - "2.2.  IP Address DNSWL\n   Since SMTP has no way for a server to advise a client\
    \ why a request\n   was accepted, TXT records in DNSWLs are not very useful. \
    \ Some DNSWLs\n   contain TXT records anyway to document the reasons that entries\
    \ are\n   present.\n   It is possible and occasionally useful for a DNSxL to be\
    \ used as a\n   DNSBL in one context and a DNSWL in another.  For example, a DNSxL\n\
    \   that lists the IP addresses assigned to dynamically assigned\n   addresses\
    \ on a particular network might be used as a DNSWL on that\n   network's outgoing\
    \ mail server or intranet web server, and used as a\n   DNSBL for mail servers\
    \ on other networks.\n"
- title: 2.3.  Combined IP Address DNSxL
  contents:
  - "2.3.  Combined IP Address DNSxL\n   In many cases, an organization maintains\
    \ a DNSxL that contains\n   multiple entry types, with the entries of each type\
    \ constituting a\n   sublist.  For example, an organization that publishes a DNSBL\
    \ listing\n   sources of unwanted e-mail might wish to indicate why various\n\
    \   addresses are included in the list, with one sublist for addresses\n   listed\
    \ due to sender policy, a second list for addresses of open\n   relays, a third\
    \ list for hosts compromised by malware, and so forth.\n   (At this point, all\
    \ of the DNSxLs with sublists of which we are aware\n   are intended for use as\
    \ DNSBLs, but the sublist techniques are\n   equally usable for DNSWLs.)\n   There\
    \ are three common methods of representing a DNSxL with multiple\n   sublists:\
    \ subdomains, multiple A records, and bit-encoded entries.\n   DNSxLs with sublists\
    \ SHOULD use both subdomains and one of the other\n   methods.\n   Sublist subdomains\
    \ are merely subdomains of the main DNSxL domain.\n   If for example, bad.example.com\
    \ had two sublists 'relay' and\n   'malware', entries for 192.0.2.99 would be\n\
    \   99.2.0.192.relay.bad.example.com or\n   99.2.0.192.malware.bad.example.com.\
    \  If a DNSxL contains both entries\n   for a main domain and for sublists, sublist\
    \ names MUST be at least\n   two characters and contain non-digits, so there is\
    \ no problem of name\n   collisions with entries in the main domain, where the\
    \ IP addresses\n   consist of digits or single hex characters.\n   To minimize\
    \ the number of DNS lookups, multiple sublists can also be\n   encoded as bit\
    \ masks or multiple A records.  With bit masks, the A\n   record entry for each\
    \ IP address is the logical OR of the bit masks\n   for all of the lists on which\
    \ the IP address appears.  For example,\n   the bit masks for the two sublists\
    \ might be 127.0.0.2 and 127.0.0.4,\n   in which case an entry for an IP address\
    \ on both lists would be\n   127.0.0.6:\n   99.2.0.192.bad.example.com    A  \
    \    127.0.0.6\n   With multiple A records, each sublist has a different assigned\
    \ value\n   such as 127.0.1.1, 127.0.1.2, and so forth, with an A record for each\n\
    \   sublist on which the IP address appears:\n   99.2.0.192.bad.example.com  \
    \  A      127.0.1.1\n   99.2.0.192.bad.example.com    A      127.0.1.2\n   There\
    \ is no widely used convention for mapping sublist names to bits\n   or values,\
    \ beyond the convention that all A values SHOULD be in the\n   127.0.0.0/8 range\
    \ to prevent unwanted network traffic if the value is\n   erroneously used as\
    \ an IP address.\n   DNSxLs that return multiple A records sometimes return multiple\
    \ TXT\n   records as well, although the lack of any way to match the TXT\n   records\
    \ to the A records limits the usefulness of those TXT records.\n   Other combined\
    \ DNSxLs return a single TXT record.\n"
- title: 2.4.  IPv6 DNSxLs
  contents:
  - "2.4.  IPv6 DNSxLs\n   The structure of DNSxLs based on IPv6 addresses is adapted\
    \ from that\n   of the IP6.ARPA domain defined in [RFC3596].  Each entry's name\
    \ MUST\n   be a 32-component hex nibble-reversed IPv6 address suffixed by the\n\
    \   DNSxL domain.  The entries contain A and TXT records, interpreted the\n  \
    \ same way as they are in IPv4 DNSxLs.\n   For example, to represent the address:\n\
    \     2001:db8:1:2:3:4:567:89ab\n   in the DNSxL ugly.example.com, the entry might\
    \ be:\n     b.a.9.8.7.6.5.0.4.0.0.0.3.0.0.0.2.0.0.0.1.0.0.0.8.b.d.0.1.0.0.2.\n\
    \                  ugly.example.com. A 127.0.0.2\n                           \
    \         TXT \"Spam received.\"\n   Combined IPv6 sublist DNSxLs are represented\
    \ the same way as IPv4\n   DNSxLs, replacing the four octets of IPv4 address with\
    \ the 32 nibbles\n   of IPv6 address.\n   A single DNSxL could in principle contain\
    \ both IPv4 and IPv6\n   addresses, since the different lengths prevent any ambiguity.\
    \  If a\n   DNSxL is represented using traditional zone files and wildcards,\n\
    \   there is no way to specify the length of the name that a wildcard\n   matches,\
    \ so wildcard names would indeed be ambiguous for DNSxLs\n   served in that fashion.\n"
- title: 3.  Domain Name DNSxLs
  contents:
  - "3.  Domain Name DNSxLs\n   A few DNSxLs list domain names rather than IP addresses.\
    \  They are\n   sometimes called RHSBLs, for right-hand-side blacklists.  The\
    \ names\n   of their entries MUST contain the listed domain name followed by the\n\
    \   name of the DNSxL.  The entries contain A and TXT records,\n   interpreted\
    \ the same way as they are in IPv4 DNSxLs.\n   If the DNSxL were called doms.example.net,\
    \ and the domain invalid.edu\n   were to be listed, the entry would be named\n\
    \   invalid.edu.doms.example.net:\n   invalid.edu.doms.example.net    A      127.0.0.2\n\
    \   invalid.edu.doms.example.net    TXT    \"Host name used in phish\"\n   Name-based\
    \ DNSBLs are far less common than IP address based DNSBLs.\n   There is no agreed\
    \ convention for wildcards.\n   Name-based DNSWLs can be created in the same manner\
    \ as DNSBLs, and\n   have been used as simple reputation systems with the values\
    \ of octets\n   in the A record representing reputation scores and confidence\
    \ values,\n   typically on a 0-100 or 0-255 scale.  Vouch By Reference [RFC5518]\
    \ is\n   a certification system similar in design and operation to a\n   name-based\
    \ DNSWL.\n"
- title: 4.  DNSxL Cache Behavior
  contents:
  - "4.  DNSxL Cache Behavior\n   The per-record time-to-live and zone refresh intervals\
    \ of DNSBLs and\n   DNSWLs vary greatly depending on the management policy of\
    \ the list.\n   The Time to Live (TTL) and refresh times SHOULD be chosen to reflect\n\
    \   the expected rate of change of the DNSxL.  A list of IP addresses\n   assigned\
    \ to dynamically allocated dialup and DHCP users could be\n   expected to change\
    \ slowly, so the TTL might be several days and the\n   zone refreshed once a day.\
    \  On the other hand, a list of IP addresses\n   that had been observed sending\
    \ spam might change every few minutes,\n   with comparably short TTL and refresh\
    \ intervals.\n"
- title: 5.  Test and Contact Addresses
  contents:
  - "5.  Test and Contact Addresses\n   IPv4-based DNSxLs MUST contain an entry for\
    \ 127.0.0.2 for testing\n   purposes.  IPv4-based DNSxLs MUST NOT contain an entry\
    \ for 127.0.0.1.\n   DNSBLs that return multiple values SHOULD have multiple test\n\
    \   addresses so that, for example, a DNSBL that can return 127.0.0.5\n   would\
    \ have a test record for 127.0.0.5 that returns an A record with\n   the value\
    \ 127.0.0.5, and a corresponding TXT record.\n   IPv6-based DNSxLs MUST contain\
    \ an entry for ::FFFF:7F00:2 (::FFFF:\n   127.0.0.2), and MUST NOT contain an\
    \ entry for ::FFFF:7F00:1 (::FFFF:\n   127.0.0.1), the IPv4-Mapped IPv6 Address\
    \ [RFC4291] equivalents of the\n   IPv4 test addresses.\n   Domain-name-based\
    \ DNSxLs MUST contain an entry for the [RFC2606]\n   reserved domain name \"TEST\"\
    \ and MUST NOT contain an entry for the\n   reserved domain name \"INVALID\".\n\
    \   DNSxLs also MAY contain A and/or AAAA records at the apex of the\n   DNSxL\
    \ zone that point to a web server, so that anyone wishing to\n   learn about the\
    \ bad.example.net DNSBL can check\n   http://bad.example.net.\n   The combination\
    \ of a test address that MUST exist and an address that\n   MUST NOT exist allows\
    \ a client system to check that a domain still\n   contains DNSxL data, and to\
    \ defend against DNSxLs that deliberately\n   or by accident install a wildcard\
    \ that returns an A record for all\n   queries.  DNSxL clients SHOULD periodically\
    \ check appropriate test\n   entries to ensure that the DNSxLs they are using\
    \ are still operating.\n"
- title: 6.  Typical Usage of DNSBLs and DNSWLs
  contents:
  - "6.  Typical Usage of DNSBLs and DNSWLs\n   DNSxLs can be served either from standard\
    \ DNS servers, or from\n   specialized servers like rbldns [RBLDNS] and rbldnsd\
    \ [RBLDNSD] that\n   accept lists of IP addresses and Classless Inter-Domain Routing\n\
    \   (CIDR) ranges and synthesize the appropriate DNS records on the fly.\n   Organizations\
    \ that make heavy use of a DNSxL usually arrange for a\n   private mirror of the\
    \ DNSxL, either using the standard Full Zone\n   Transfer (AXFR) and Incremental\
    \ Zone Transfer (IXFR) or by fetching a\n   file containing addresses and CIDR\
    \ ranges for the specialized\n   servers.  If a /24 or larger range of addresses\
    \ is listed, and the\n   zone's server uses traditional zone files to represent\
    \ the DNSxL, the\n   DNSxL MAY use wildcards to limit the size of the zone file.\
    \  If for\n   example, the entire range of 192.0.2.0/24 were listed, the DNSxL's\n\
    \   zone could contain a single wildcard for *.2.0.192.bad.example.com.\n   DNSBL\
    \ clients are most often mail servers or spam filters called from\n   mail servers.\
    \  There's no requirement that DNSBLs be used only for\n   mail, and other services\
    \ such as Internet Relay Chat (IRC) use them\n   to check client hosts that attempt\
    \ to connect to a server.\n   A client MUST interpret any returned A record as\
    \ meaning that an\n   address or domain is listed in a DNSxL.  Mail servers that\
    \ test\n   combined lists most often handle them the same as single lists and\n\
    \   treat any A record as meaning that an IP address is listed without\n   distinguishing\
    \ among the various reasons it might have been listed.\n   DNSxL clients SHOULD\
    \ be able to use bit masks and value range tests\n   on returned A record values\
    \ in order to select particular sublists of\n   a combined list.\n   Mail servers\
    \ typically check a list of DNSxLs on every incoming SMTP\n   connection, with\
    \ the names of the DNSxLs set in the server's\n   configuration.  A common usage\
    \ pattern is for the server to check\n   each list in turn until it finds one\
    \ with a DNSBL entry, in which\n   case it rejects the connection, or one with\
    \ a DNSWL entry, in which\n   case it accepts the connection.  If the address\
    \ appears on no list at\n   all (the usual case for legitimate mail), the mail\
    \ server accepts the\n   connection.  In another approach, DNSxL entries are used\
    \ as inputs to\n   a weighting function that computes an overall score for each\
    \ message.\n   The mail server uses its normal local DNS cache to limit traffic\
    \ to\n   the DNSxL servers and to speed up retests of IP addresses recently\n\
    \   seen.  Long-running mail servers MAY cache DNSxL data internally, but\n  \
    \ MUST respect the TTL values and discard expired records.\n   An alternate approach\
    \ is to check DNSxLs in a spam filtering package\n   after a message has been\
    \ received.  In that case, the IP(s) to test\n   are usually extracted from \"\
    Received:\" header fields or URIs in the\n   body of the message.  The DNSxL results\
    \ can be used to make a binary\n   accept/reject decision, or in a scoring system.\n\
    \   Packages that test multiple header fields MUST be able to distinguish\n  \
    \ among values in lists with sublists because, for example, an entry\n   indicating\
    \ that an IP address is assigned to dialup users might be\n   treated as a strong\
    \ indication that a message would be rejected if\n   the IP address sends mail\
    \ directly to the recipient system, but not\n   if the message were relayed through\
    \ an ISP's mail server.\n   Name-based DNSBLs have been used both to check domain\
    \ names of e-mail\n   addresses and host names found in mail headers, and to check\
    \ the\n   domains found in URLs in message bodies.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Any system manager that uses DNSxLs is entrusting\
    \ part of his or her\n   server management to the parties that run the lists,\
    \ and SHOULD\n   ensure that the management policies for the lists are consistent\
    \ with\n   the policies the system manager intends to use.  Poorly chosen DNSBLs\n\
    \   might block addresses that send mail that the system manager and the\n   system's\
    \ users wish to receive.  The management of DNSBLs can change\n   over time; in\
    \ some cases, when the operator of a DNSBL has wished to\n   shut it down, he\
    \ has either removed all entries from the DNSBL or\n   installed a wildcard to\
    \ list 0/0, which would produce unexpected and\n   unwanted results for anyone\
    \ using the DNSBL.\n   The A records in a DNSxL zone (other than the ones at the\
    \ apex of the\n   zone) represent blacklist and/or whitelist entries rather than\
    \ IP\n   addresses.  Should a client attempt to use the A records as IP\n   addresses,\
    \ e.g., attempt to use a DNSxL entry name as a web or FTP\n   server, peculiar\
    \ results would ensue.  If the operator of the DNSxL\n   were to disregard the\
    \ advice in Section 2.3 and put values in the A\n   records outside of the 127/8\
    \ range, the peculiar results might not be\n   limited to the host misusing the\
    \ records.  Conversely, if a system\n   attempts to use a zone that is not a DNSxL\
    \ as a blacklist or\n   whitelist, yet more peculiar results will ensue.  This\
    \ situation has\n   been observed in practice when an abandoned DNSBL domain was\
    \ re-\n   registered and the new owner installed a wildcard with an A record\n\
    \   pointing to a web server.  To avoid this situation, systems that use\n   DNSxLs\
    \ SHOULD check for the test entries described in Section 5 to\n   ensure that\
    \ a domain actually has the structure of a DNSxL, and\n   SHOULD NOT use any DNSxL\
    \ domain that does not have correct test\n   entries.\n   Since DNSxL users usually\
    \ make a query for every incoming e-mail\n   message, the operator of a DNSxL\
    \ can extract approximate mail volume\n   statistics from the DNS server logs.\
    \  This has been used in a few\n   instances to estimate the amount of mail individual\
    \ IP addresses or\n   IP blocks send [SENDERBASE] [KSN].\n   As with any other\
    \ DNS-based services, DNSBLs and DNSWLs are subject\n   to various types of DNS\
    \ attacks, which are described in [RFC3833].\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1034]     Mockapetris, P., \"Domain names\
    \ - concepts and\n                 facilities\", STD 13, RFC 1034, November 1987.\n\
    \   [RFC1035]     Mockapetris, P., \"Domain names - implementation and\n     \
    \            specification\", STD 13, RFC 1035, November 1987.\n   [RFC2119] \
    \    Bradner, S., \"Key words for use in RFCs to Indicate\n                 Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2606]     Eastlake, D. and A.\
    \ Panitz, \"Reserved Top Level DNS\n                 Names\", BCP 32, RFC 2606,\
    \ June 1999.\n   [RFC3596]     Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,\n\
    \                 \"DNS Extensions to Support IP Version 6\", RFC 3596,\n    \
    \             October 2003.\n   [RFC4291]     Hinden, R. and S. Deering, \"IP\
    \ Version 6 Addressing\n                 Architecture\", RFC 4291, February 2006.\n\
    \   [RFC5518]     Hoffman, P., Levine, J., and A. Hathcock, \"Vouch By\n     \
    \            Reference\", RFC 5518, April 2009.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3833]     Atkins, D. and R. Austein, \"\
    Threat Analysis of the\n                 Domain Name System (DNS)\", RFC 3833,\
    \ August 2004.\n   [RBLDNS]      Bernstein, D., \"rbldns, in 'djbdns'\",\n   \
    \              <http://cr.yp.to/djbdns.html>.\n   [MAPSRBL]     \"MAPS RBL+\"\
    , <http://mail-abuse.com/>.\n   [RBLDNSD]     Tokarev, M., \"rbldnsd: Small Daemon\
    \ for DNSBLs\",\n                 <http://www.corpit.ru/mjt/rbldnsd.html>.\n \
    \  [SENDERBASE]  Ironport Systems, \"Senderbase\",\n                 <http://www.senderbase.org>.\n\
    \   [KSN]         Levine, J., \"The South Korean Network Blocking List\",\n  \
    \               <http://korea.services.net>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John Levine\n   Taughannock Networks\n   PO Box 727\n  \
    \ Trumansburg, NY  14886\n   Phone: +1 607 330 5711\n   EMail: standards@taugh.com\n\
    \   URI:   http://www.taugh.com\n"
