- title: __initial_text__
  contents:
  - '   Message Header Field for Indicating Message Authentication Status

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a message header field called Authentication-\n\
    \   Results for use with electronic mail messages to indicate the results\n  \
    \ of message authentication efforts.  Any receiver-side software, such\n   as\
    \ mail filters or Mail User Agents (MUAs), can use this header field\n   to relay\
    \ that information in a convenient and meaningful way to users\n   or to make\
    \ sorting and filtering decisions.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7601.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Purpose . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n     1.2.  Trust Boundary  . . . . . . . . . . . . . . . . . .\
    \ . . .   5\n     1.3.  Processing Scope  . . . . . . . . . . . . . . . . . .\
    \ . .   6\n     1.4.  Requirements  . . . . . . . . . . . . . . . . . . . . .\
    \ .   6\n     1.5.  Definitions . . . . . . . . . . . . . . . . . . . . . . .\
    \   6\n       1.5.1.  Key Words . . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n       1.5.2.  Security  . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \       1.5.3.  Email Architecture  . . . . . . . . . . . . . . . . .   7\n  \
    \     1.5.4.  Other Terms . . . . . . . . . . . . . . . . . . . . .   8\n    \
    \ 1.6.  Trust Environment . . . . . . . . . . . . . . . . . . . .   8\n   2. \
    \ Definition and Format of the Header Field . . . . . . . . . .   9\n     2.1.\
    \  General Description . . . . . . . . . . . . . . . . . . .   9\n     2.2.  Formal\
    \ Definition . . . . . . . . . . . . . . . . . . . .  10\n     2.3.  Property\
    \ Types (ptypes) and Properties  . . . . . . . . .  12\n     2.4.  The \"policy\"\
    \ ptype  . . . . . . . . . . . . . . . . . . .  13\n     2.5.  Authentication\
    \ Identifier Field . . . . . . . . . . . . .  14\n     2.6.  Version Tokens  .\
    \ . . . . . . . . . . . . . . . . . . . .  15\n     2.7.  Defined Methods and\
    \ Result Values . . . . . . . . . . . .  15\n       2.7.1.  DKIM and DomainKeys\
    \ . . . . . . . . . . . . . . . . .  16\n       2.7.2.  SPF and Sender ID . .\
    \ . . . . . . . . . . . . . . . .  18\n       2.7.3.  \"iprev\" . . . . . . .\
    \ . . . . . . . . . . . . . . . .  19\n       2.7.4.  SMTP AUTH . . . . . . .\
    \ . . . . . . . . . . . . . . .  20\n       2.7.5.  Other Registered Codes  .\
    \ . . . . . . . . . . . . . .  21\n       2.7.6.  Extension Methods . . . . .\
    \ . . . . . . . . . . . . .  21\n       2.7.7.  Extension Result Codes  . . .\
    \ . . . . . . . . . . . .  22\n   3.  The \"iprev\" Authentication Method . .\
    \ . . . . . . . . . . . .  22\n   4.  Adding the Header Field to a Message  .\
    \ . . . . . . . . . . .  23\n     4.1.  Header Field Position and Interpretation\
    \  . . . . . . . .  25\n     4.2.  Local Policy Enforcement  . . . . . . . . .\
    \ . . . . . . .  26\n   5.  Removing Existing Header Fields . . . . . . . . .\
    \ . . . . . .  26\n   6.  IANA Considerations . . . . . . . . . . . . . . . .\
    \ . . . . .  27\n     6.1.  The Authentication-Results Header Field . . . . .\
    \ . . . .  27\n     6.2.  \"Email Authentication Methods\" Registry Description\
    \ . . .  28\n     6.3.  \"Email Authentication Methods\" Registry Update  . .\
    \ . . .  29\n     6.4.  \"Email Authentication Property Types\" Registry  . .\
    \ . . .  30\n     6.5.  \"Email Authentication Result Names\" Description . .\
    \ . . .  31\n     6.6.  \"Email Authentication Result Names\" Update  . . . .\
    \ . . .  32\n     6.7.  SMTP Enhanced Status Codes  . . . . . . . . . . . . .\
    \ . .  33\n   7.  Security Considerations . . . . . . . . . . . . . . . . . .\
    \ .  33\n     7.1.  Forged Header Fields  . . . . . . . . . . . . . . . . . .\
    \  33\n     7.2.  Misleading Results  . . . . . . . . . . . . . . . . . . .  35\n\
    \     7.3.  Header Field Position . . . . . . . . . . . . . . . . . .  35\n  \
    \   7.4.  Reverse IP Query Denial-of-Service Attacks  . . . . . . .  35\n    \
    \ 7.5.  Mitigation of Backscatter . . . . . . . . . . . . . . . .  36\n     7.6.\
    \  Internal MTA Lists  . . . . . . . . . . . . . . . . . . .  36\n     7.7.  Attacks\
    \ against Authentication Methods  . . . . . . . . .  36\n     7.8.  Intentionally\
    \ Malformed Header Fields . . . . . . . . . .  36\n     7.9.  Compromised Internal\
    \ Hosts  . . . . . . . . . . . . . . .  36\n     7.10. Encapsulated Instances\
    \  . . . . . . . . . . . . . . . . .  37\n     7.11. Reverse Mapping . . . . .\
    \ . . . . . . . . . . . . . . . .  37\n   8.  References  . . . . . . . . . .\
    \ . . . . . . . . . . . . . . .  37\n     8.1.  Normative References  . . . .\
    \ . . . . . . . . . . . . . .  37\n     8.2.  Informative References  . . . .\
    \ . . . . . . . . . . . . .  38\n   Appendix A.  Legacy MUAs  . . . . . . . .\
    \ . . . . . . . . . . . .  42\n   Appendix B.  Authentication-Results Examples\
    \  . . . . . . . . . .  42\n     B.1.  Trivial Case; Header Field Not Present\
    \  . . . . . . . . .  42\n     B.2.  Nearly Trivial Case; Service Provided, but\
    \ No\n           Authentication Done . . . . . . . . . . . . . . . . . . .  43\n\
    \     B.3.  Service Provided, Authentication Done . . . . . . . . . .  44\n  \
    \   B.4.  Service Provided, Several Authentications Done, Single\n           MTA\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . .  45\n     B.5.  Service\
    \ Provided, Several Authentications Done, Different\n           MTAs  . . . .\
    \ . . . . . . . . . . . . . . . . . . . . . .  46\n     B.6.  Service Provided,\
    \ Multi-tiered Authentication Done  . . .  48\n     B.7.  Comment-Heavy Example\
    \ . . . . . . . . . . . . . . . . . .  49\n   Appendix C.  Operational Considerations\
    \ about Message\n                Authentication . . . . . . . . . . . . . . .\
    \ . . . .  50\n   Appendix D.  Changes since RFC 7001 . . . . . . . . . . . .\
    \ . . .  51\n   Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .\
    \ . .  53\n   Author's Address  . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  53\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes a header field called Authentication-Results\n\
    \   for electronic mail messages that presents the results of a message\n   authentication\
    \ effort in a machine-readable format.  The intent of\n   the header field is\
    \ to create a place to collect such data when\n   message authentication mechanisms\
    \ are in use so that a Mail User\n   Agent (MUA) and downstream filters can make\
    \ filtering decisions and/\n   or provide a recommendation to the user as to the\
    \ validity of the\n   message's origin and possibly the safety and integrity of\
    \ its\n   content.\n   This document revises the original definition found in\
    \ [RFC5451]\n   based upon various authentication protocols in current use and\n\
    \   incorporates errata logged since the publication of the original\n   specification.\n\
    \   End users are not expected to be direct consumers of this header\n   field.\
    \  This header field is intended for consumption by programs\n   that will then\
    \ use such data or render it in a human-usable form.\n   This document specifies\
    \ the format of this header field and discusses\n   the implications of its presence\
    \ or absence.  However, it does not\n   discuss how the data contained in the\
    \ header field ought to be used,\n   such as what filtering decisions are appropriate\
    \ or how an MUA might\n   render those results, as these are local policy and/or\
    \ user interface\n   design questions that are not appropriate for this document.\n\
    \   At the time of publication of this document, the following are\n   published\
    \ email authentication methods:\n   o  Author Domain Signing Practices ([ADSP])\
    \ (Historic)\n   o  SMTP Service Extension for Authentication ([AUTH])\n   o \
    \ DomainKeys Identified Mail Signatures ([DKIM])\n   o  Domain-based Message Authentication,\
    \ Reporting and Conformance\n      ([DMARC])\n   o  Sender Policy Framework ([SPF])\n\
    \   o  reverse IP address name validation (\"iprev\", defined in Section 3)\n\
    \   o  Require-Recipient-Valid-Since Header Field and SMTP Service\n      Extension\
    \ ([RRVS])\n   o  S/MIME Signature Verification ([SMIME-REG])\n   o  Vouch By\
    \ Reference ([VBR])\n   o  DomainKeys ([DOMAINKEYS]) (Historic)\n   o  Sender\
    \ ID ([SENDERID]) (Experimental)\n   There exist registries for tokens used within\
    \ this header field that\n   refer to the specifications listed above.  Section\
    \ 6 describes the\n   registries and their contents and specifies the process\
    \ by which\n   entries are added or updated.  It also updates the existing contents\n\
    \   to match the current states of these specifications.\n   This specification\
    \ is not intended to be restricted to domain-based\n   authentication schemes,\
    \ but the existing schemes in that family have\n   proven to be a good starting\
    \ point for implementations.  The goal is\n   to give current and future authentication\
    \ schemes a common framework\n   within which to deliver their results to downstream\
    \ agents and\n   discourage the creation of unique header fields for each.\n \
    \  Although SPF defined a header field called \"Received-SPF\" and the\n   historic\
    \ DomainKeys defined one called \"DomainKey-Status\" for this\n   purpose, those\
    \ header fields are specific to the conveyance of their\n   respective results\
    \ only and thus are insufficient to satisfy the\n   requirements enumerated below.\
    \  In addition, many SPF implementations\n   have adopted the header field specified\
    \ here at least as an option,\n   and DomainKeys has been obsoleted by DKIM.\n"
- title: 1.1.  Purpose
  contents:
  - "1.1.  Purpose\n   The header field defined in this document is expected to serve\n\
    \   several purposes:\n   1.  Convey the results of various message authentication\
    \ checks,\n       which are applied by upstream filters and Mail Transfer Agents\n\
    \       (MTAs) and then passed to MUAs and downstream filters within the\n   \
    \    same \"trust domain\".  Such agents might wish to render those\n       results\
    \ to end users or to use those data to apply more or less\n       stringent content\
    \ checks based on authentication results;\n   2.  Provide a common location within\
    \ a message for this data;\n   3.  Create an extensible framework for reporting\
    \ new authentication\n       methods as they emerge.\n   In particular, the mere\
    \ presence of this header field does not mean\n   its contents are valid.  Rather,\
    \ the header field is reporting\n   assertions made by one or more authentication\
    \ schemes (supposedly)\n   applied somewhere upstream.  For an MUA or downstream\
    \ filter to treat\n   the assertions as actually valid, there must be an assessment\
    \ of the\n   trust relationship among such agents, the validating MTA, and the\n\
    \   mechanism for conveying the information.\n"
- title: 1.2.  Trust Boundary
  contents:
  - "1.2.  Trust Boundary\n   This document makes several references to the \"trust\
    \ boundary\" of an\n   administrative management domain (ADMD).  Given the diversity\
    \ among\n   existing mail environments, a precise definition of this term isn't\n\
    \   possible.\n   Simply put, a transfer from the producer of the header field\
    \ to the\n   consumer must occur within a context that permits the consumer to\n\
    \   treat assertions by the producer as being reliable and accurate\n   (trustworthy).\
    \  How this trust is obtained is outside the scope of\n   this document.  It is\
    \ entirely a local matter.\n   Thus, this document defines a \"trust boundary\"\
    \ as the delineation\n   between \"external\" and \"internal\" entities.  Services\
    \ that are\n   internal -- within the trust boundary -- are provided by the ADMD's\n\
    \   infrastructure for its users.  Those that are external are outside of\n  \
    \ the authority of the ADMD.  By this definition, hosts that are within\n   a\
    \ trust boundary are subject to the ADMD's authority and policies,\n   independent\
    \ of their physical placement or their physical operation.\n   For example, a\
    \ host within a trust boundary might actually be\n   operated by a remote service\
    \ provider and reside physically within\n   its data center.\n   It is possible\
    \ for a message to be evaluated inside a trust boundary\n   but then depart and\
    \ re-enter the trust boundary.  An example might be\n   a forwarded message such\
    \ as a message/rfc822 attachment (see\n   Multipurpose Internet Mail Extensions\
    \ [MIME]) or one that is part of\n   a multipart/digest.  The details reported\
    \ by this field cannot be\n   trusted in that case.  Thus, this field found within\
    \ one of those\n   media types is typically ignored.\n"
- title: 1.3.  Processing Scope
  contents:
  - "1.3.  Processing Scope\n   The content of this header field is meant to convey\
    \ to message\n   consumers that authentication work on the message was already\
    \ done\n   within its trust boundary, and those results are being presented. \
    \ It\n   is not intended to provide message parameters to consumers so that\n\
    \   they can perform authentication protocols on their own.\n"
- title: 1.4.  Requirements
  contents:
  - "1.4.  Requirements\n   This document establishes no new requirements on existing\
    \ protocols\n   or servers.\n   In particular, this document establishes no requirement\
    \ on MTAs to\n   reject or filter arriving messages that do not pass authentication\n\
    \   checks.  The data conveyed by the specified header field's contents\n   are\
    \ for the information of MUAs and filters and are to be used at\n   their discretion.\n"
- title: 1.5.  Definitions
  contents:
  - "1.5.  Definitions\n   This section defines various terms used throughout this\
    \ document.\n"
- title: 1.5.1.  Key Words
  contents:
  - "1.5.1.  Key Words\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ [KEYWORDS].\n"
- title: 1.5.2.  Security
  contents:
  - "1.5.2.  Security\n   \"Guidelines for Writing RFC Text on Security Considerations\"\
    \n   ([SECURITY]) discusses authentication and authorization and the\n   conflation\
    \ of the two concepts.  The use of those terms within the\n   context of recent\
    \ message security work has given rise to slightly\n   different definitions,\
    \ and this document reflects those current\n   usages, as follows:\n   o  \"Authorization\"\
    \ is the establishment of permission to use a\n      resource or represent an\
    \ identity.  In this context, authorization\n      indicates that a message from\
    \ a particular ADMD arrived via a\n      route the ADMD has explicitly approved.\n\
    \   o  \"Authentication\" is the assertion of validity of a piece of data\n  \
    \    about a message (such as the sender's identity) or the message in\n     \
    \ its entirety.\n   As examples: SPF and Sender ID are authorization mechanisms\
    \ in that\n   they express a result that shows whether or not the ADMD that\n\
    \   apparently sent the message has explicitly authorized the connecting\n   Simple\
    \ Mail Transfer Protocol ([SMTP]) client to relay messages on\n   its behalf,\
    \ but they do not actually validate any other property of\n   the message itself.\
    \  By contrast, DKIM is agnostic as to the routing\n   of a message but uses cryptographic\
    \ signatures to authenticate\n   agents, assign (some) responsibility for the\
    \ message (which implies\n   authorization), and ensure that the listed portions\
    \ of the message\n   were not modified in transit.  Since the signatures are not\
    \ tied to\n   SMTP connections, they can be added by either the ADMD of origin,\n\
    \   intermediate ADMDs (such as a mailing list server), other handling\n   agents,\
    \ or any combination.\n   Rather than create a separate header field for each\
    \ class of\n   solution, this proposal groups them both into a single header field.\n"
- title: 1.5.3.  Email Architecture
  contents:
  - "1.5.3.  Email Architecture\n   o  A \"border MTA\" is an MTA that acts as a gateway\
    \ between the\n      general Internet and the users within an organizational boundary.\n\
    \      (See also Section 1.2.)\n   o  A \"delivery MTA\" (or Mail Delivery Agent\
    \ or MDA) is an MTA that\n      actually enacts delivery of a message to a user's\
    \ inbox or other\n      final delivery.\n   o  An \"intermediate MTA\" is any\
    \ MTA that is not a delivery MTA and is\n      also not the first MTA to handle\
    \ the message.\n   The following diagram illustrates the flow of mail among these\n\
    \   defined components.  See Internet Mail Architecture [EMAIL-ARCH] for\n   further\
    \ discussion on general email system architecture, which\n   includes detailed\
    \ descriptions of these components, and Appendix C of\n   this document for discussion\
    \ about the common aspects of email\n   authentication in current environments.\n\
    \                          +-----+   +-----+   +------------+\n              \
    \            | MUA |-->| MSA |-->| Border MTA |\n                          +-----+\
    \   +-----+   +------------+\n                                               \
    \     |\n                                                    |\n             \
    \                                       V\n                                  \
    \             +----------+\n                                               | Internet\
    \ |\n                                               +----------+\n           \
    \                                         |\n                                \
    \                    |\n                                                    V\n\
    \   +-----+   +-----+   +------------------+   +------------+\n   | MUA |<--|\
    \ MDA |<--| Intermediate MTA |<--| Border MTA |\n   +-----+   +-----+   +------------------+\
    \   +------------+\n   Generally, it is assumed that the work of applying message\n\
    \   authentication schemes takes place at a border MTA or a delivery MTA.\n  \
    \ This specification is written with that assumption in mind.  However,\n   there\
    \ are some sites at which the entire mail infrastructure consists\n   of a single\
    \ host.  In such cases, such terms as \"border MTA\" and\n   \"delivery MTA\"\
    \ might well apply to the same machine or even the very\n   same agent.  It is\
    \ also possible that some message authentication\n   tests could take place on\
    \ an intermediate MTA.  Although this\n   document doesn't specifically describe\
    \ such cases, they are not meant\n   to be excluded.\n"
- title: 1.5.4.  Other Terms
  contents:
  - "1.5.4.  Other Terms\n   In this document, the term \"producer\" refers to any\
    \ component that\n   adds this header field to messages it is handling, and \"\
    consumer\"\n   refers to any component that identifies, extracts, and parses the\n\
    \   header field to use as part of a handling decision.\n"
- title: 1.6.  Trust Environment
  contents:
  - "1.6.  Trust Environment\n   This header field permits one or more message validation\
    \ mechanisms\n   to communicate output to one or more separate assessment mechanisms.\n\
    \   These mechanisms operate within a unified trust boundary that defines\n  \
    \ an Administrative Management Domain (ADMD).  An ADMD contains one or\n   more\
    \ entities that perform validation and generate the header field\n   and one or\
    \ more that consume it for some type of assessment.  The\n   field often contains\
    \ no integrity or validation mechanism of its own,\n   so its presence must be\
    \ trusted implicitly.  Hence, valid use of the\n   header field requires removing\
    \ any occurrences of it that are present\n   when the message enters the ADMD.\
    \  This ensures that later\n   occurrences have been added within the trust boundary\
    \ of the ADMD.\n   The authserv-id token defined in Section 2.2 can be used to\
    \ reference\n   an entire ADMD or a specific validation engine within an ADMD.\n\
    \   Although the labeling scheme is left as an operational choice, some\n   guidance\
    \ for selecting a token is provided in later sections of this\n   document.\n"
- title: 2.  Definition and Format of the Header Field
  contents:
  - "2.  Definition and Format of the Header Field\n   This section gives a general\
    \ overview of the format of the header\n   field being defined and then provides\
    \ more formal specification.\n"
- title: 2.1.  General Description
  contents:
  - "2.1.  General Description\n   The header field specified here is called Authentication-Results.\
    \  It\n   is a Structured Header Field as defined in Internet Message Format\n\
    \   ([MAIL]), and thus all of the related definitions in that document\n   apply.\n\
    \   This header field is added at the top of the message as it transits\n   MTAs\
    \ that do authentication checks, so some idea of how far away the\n   checks were\
    \ done can be inferred.  It is therefore considered to be a\n   trace field as\
    \ defined in [MAIL], and thus all of the related\n   definitions in that document\
    \ apply.\n   The value of the header field (after removing comments) consists\
    \ of\n   an authentication identifier, an optional version, and then a series\n\
    \   of statements and supporting data.  The statements are of the form\n   \"\
    method=result\" and indicate which authentication method(s) were\n   applied and\
    \ their respective results.  For each such statement, the\n   supporting data\
    \ can include a \"reason\" string and one or more\n   \"property=value\" statements\
    \ indicating which message properties were\n   evaluated to reach that conclusion.\n\
    \   The header field can appear more than once in a single message, more\n   than\
    \ one result can be represented in a single header field, or a\n   combination\
    \ of these can be applied.\n"
- title: 2.2.  Formal Definition
  contents:
  - "2.2.  Formal Definition\n   Formally, the header field is specified as follows\
    \ using Augmented\n   Backus-Naur Form ([ABNF]):\n     authres-header = \"Authentication-Results:\"\
    \ [CFWS] authserv-id\n              [ CFWS authres-version ]\n              (\
    \ no-result / 1*resinfo ) [CFWS] CRLF\n     authserv-id = value\n            \
    \     ; see below for a description of this element\n     authres-version = 1*DIGIT\
    \ [CFWS]\n             ; indicates which version of this specification is in use;\n\
    \             ; this specification is version \"1\", and the absence of a\n  \
    \           ; version implies this version of the specification\n     no-result\
    \ = [CFWS] \";\" [CFWS] \"none\"\n               ; the special case of \"none\"\
    \ is used to indicate that no\n               ; message authentication was performed\n\
    \     resinfo = [CFWS] \";\" methodspec [ CFWS reasonspec ]\n               *(\
    \ CFWS propspec )\n     methodspec = [CFWS] method [CFWS] \"=\" [CFWS] result\n\
    \                ; indicates which authentication method was evaluated\n     \
    \           ; and what its output was\n     reasonspec = \"reason\" [CFWS] \"\
    =\" [CFWS] value\n                ; a free-form comment on the reason the given\
    \ result\n                ; was returned\n     propspec = ptype [CFWS] \".\" [CFWS]\
    \ property [CFWS] \"=\" pvalue\n              ; an indication of which properties\
    \ of the message\n              ; were evaluated by the authentication scheme\
    \ being\n              ; applied to yield the reported result\n     method = Keyword\
    \ [ [CFWS] \"/\" [CFWS] method-version ]\n            ; a method indicates which\
    \ method's result is\n            ; represented by \"result\", and is one of the\
    \ methods\n            ; explicitly defined as valid in this document\n      \
    \      ; or is an extension method as defined below\n     method-version = 1*DIGIT\
    \ [CFWS]\n            ; indicates which version of the method specification is\n\
    \            ; in use, corresponding to the matching entry in the IANA\n     \
    \       ; \"Email Authentication Methods\" registry; a value of \"1\"\n      \
    \      ; is assumed if this version string is absent\n     result = Keyword\n\
    \            ; indicates the results of the attempt to authenticate\n        \
    \    ; the message; see below for details\n     ptype = Keyword\n           ;\
    \ indicates whether the property being evaluated was\n           ; a parameter\
    \ to an [SMTP] command, was a value taken\n           ; from a message header\
    \ field, was some property of\n           ; the message body, or was some other\
    \ property evaluated by\n           ; the receiving MTA; expected to be one of\
    \ the \"property\n           ; types\" explicitly defined as valid, or an extension\n\
    \           ; ptype, as defined below\n     property = special-smtp-verb / Keyword\n\
    \             ; indicates more specifically than \"ptype\" what the\n        \
    \     ; source of the evaluated property is; the exact meaning\n             ;\
    \ is specific to the method whose result is being reported\n             ; and\
    \ is defined more clearly below\n     special-smtp-verb = \"mailfrom\" / \"rcptto\"\
    \n             ; special cases of [SMTP] commands that are made up\n         \
    \    ; of multiple words\n     pvalue = [CFWS] ( value / [ [ local-part ] \"@\"\
    \ ] domain-name )\n              [CFWS]\n            ; the value extracted from\
    \ the message property defined\n            ; by the \"ptype.property\" construction\n\
    \   \"local-part\" is defined in Section 3.4.1 of [MAIL], and \"CFWS\" is\n  \
    \ defined in Section 3.2.2 of [MAIL].\n   \"Keyword\" is defined in Section 4.1.2\
    \ of [SMTP].\n   The \"value\" is as defined in Section 5.1 of [MIME].\n   The\
    \ \"domain-name\" is as defined in Section 3.5 of [DKIM].\n   The \"Keyword\"\
    \ used in \"result\" above is further constrained by the\n   necessity of being\
    \ enumerated in Section 2.7.\n   See Section 2.5 for a description of the authserv-id\
    \ element.\n   If the value portion of a \"pvalue\" construction identifies something\n\
    \   intended to be an email identity, then it MUST use the right hand\n   portion\
    \ of that ABNF definition.\n   The list of commands eligible for use with the\
    \ \"smtp\" ptype can be\n   found in Section 4.1 of [SMTP].\n   The \"propspec\"\
    \ may be omitted if, for example, the method was unable\n   to extract any properties\
    \ to do its evaluation yet has a result to\n   report.\n   Where an SMTP command\
    \ name is being reported as a \"property\", the\n   agent generating the header\
    \ field represents that command by\n   converting it to lowercase and dropping\
    \ any spaces (e.g., \"MAIL FROM\"\n   becomes \"mailfrom\", \"RCPT TO\" becomes\
    \ \"rcptto\", etc.).\n   A \"ptype\" value of \"policy\" indicates a policy decision\
    \ about the\n   message not specific to a property of the message that could be\n\
    \   extracted.  See Section 2.4 for details.\n   Examples of complete messages\
    \ using this header field can be found in\n   Appendix B.\n"
- title: 2.3.  Property Types (ptypes) and Properties
  contents:
  - "2.3.  Property Types (ptypes) and Properties\n   The \"ptype\" in the ABNF above\
    \ indicates the general type of property\n   being described by the result being\
    \ reported, upon which the reported\n   result was based.  Coupled with the \"\
    property\", which is more\n   specific, they indicate from which particular part\
    \ of the message the\n   reported data were extracted.\n   Combinations of ptypes\
    \ and properties are registered and described in\n   the \"Email Authentication\
    \ Methods\" registry, coupled with the\n   authentication methods with which they\
    \ are used.  This is further\n   described in Section 6.\n   Legal values of \"\
    ptype\" are as defined in the IANA \"Email\n   Authentication Property Types\"\
    \ registry, created by [RFC7410].  The\n   initial values and what they typically\
    \ indicate are as follows, based\n   on [RFC7001]:\n   body:  Information that\
    \ was extracted from the body of the message.\n      This might be an arbitrary\
    \ string of bytes, a hash of a string of\n      bytes, a Uniform Resource Identifier,\
    \ or some other content of\n      interest.  The \"property\" is an indication\
    \ of where within the\n      message body the extracted content was found, and\
    \ can indicate an\n      offset, identify a MIME part, etc.\n   header:  Indicates\
    \ information that was extracted from the header of\n      the message.  This\
    \ might be the value of a header field or some\n      portion of a header field.\
    \  The \"property\" gives a more precise\n      indication of the place in the\
    \ header from which the extraction\n      took place.\n   policy:  A local policy\
    \ mechanism was applied that augments or\n      overrides the result returned\
    \ by the authentication mechanism.\n      (See Section 2.4.)\n   smtp:  Indicates\
    \ information that was extracted from an SMTP command\n      that was used to\
    \ relay the message.  The \"property\" indicates\n      which SMTP command included\
    \ the extracted content as a parameter.\n   Results reported using unknown ptypes\
    \ MUST NOT be used in making\n   handling decisions.  They can be safely ignored\
    \ by consumers.\n   Entries in the \"Email Authentication Methods\" registry can\
    \ define\n   properties that deviate from these definitions when appropriate.\n\
    \   Such deviations need to be clear in the registry and/or in the\n   defining\
    \ document.  See Section 2.7.1 for an example.\n"
- title: 2.4.  The "policy" ptype
  contents:
  - "2.4.  The \"policy\" ptype\n   A special ptype value of \"policy\" is also defined.\
    \  This ptype is\n   provided to indicate that some local policy mechanism was\
    \ applied\n   that augments or even replaces (i.e., overrides) the result returned\n\
    \   by the authentication mechanism.  The property and value in this case\n  \
    \ identify the local policy that was applied and the result it\n   returned.\n\
    \   For example, a DKIM signature is not required to include the Subject\n   header\
    \ field in the set of fields that are signed.  An ADMD receiving\n   such a message\
    \ might decide that such a signature is unacceptable,\n   even if it passes, because\
    \ the content of the Subject header field\n   could be altered post-signing without\
    \ invalidating the signature.\n   Such an ADMD could replace the DKIM \"pass\"\
    \ result with a \"policy\"\n   result and then also include the following in the\
    \ corresponding\n   Authentication-Result field:\n      ... dkim=fail policy.dkim-rules=unsigned-subject\
    \ ...\n   In this case, the property is \"dkim-rules\", indicating some local\n\
    \   check by that name took place and that check returned a result of\n   \"unsigned-subject\"\
    .  These are arbitrary names selected by (and\n   presumably used within) the\
    \ ADMD making use of them, so they are not\n   normally registered with IANA or\
    \ otherwise specified apart from\n   setting syntax restrictions that allow for\
    \ easy parsing within the\n   rest of the header field.\n   This ptype existed\
    \ in the original specification for this header\n   field, but without a complete\
    \ description or example of intended use.\n   As a result, it has not seen any\
    \ practical use to date that matches\n   its intended purpose.  These added details\
    \ are provided to guide\n   implementers toward proper use.\n"
- title: 2.5.  Authentication Identifier Field
  contents:
  - "2.5.  Authentication Identifier Field\n   Every Authentication-Results header\
    \ field has an authentication\n   service identifier field (authserv-id above).\
    \  Specifically, this is\n   any string intended to identify the authentication\
    \ service within the\n   ADMD that conducted authentication checks on the message.\
    \  This\n   identifier is intended to be machine-readable and not necessarily\n\
    \   meaningful to users.\n   Since agents consuming this field will use this identifier\
    \ to\n   determine whether its contents are of interest (and are safe to use),\n\
    \   the uniqueness of the identifier MUST be guaranteed by the ADMD that\n   generates\
    \ it and MUST pertain to that ADMD.  MUAs or downstream\n   filters SHOULD use\
    \ this identifier to determine whether or not the\n   data contained in an Authentication-Results\
    \ header field ought to be\n   used or ignored.\n   For simplicity and scalability,\
    \ the authentication service identifier\n   SHOULD be a common token used throughout\
    \ the ADMD.  Common practice\n   is to use the DNS domain name used by or within\
    \ that ADMD, sometimes\n   called the \"organizational domain\", but this is not\
    \ strictly\n   necessary.\n   For tracing and debugging purposes, the authentication\
    \ identifier can\n   instead be the specific hostname of the MTA performing the\n\
    \   authentication check whose result is being reported.  Moreover, some\n   implementations\
    \ define a substructure to the identifier; these are\n   outside of the scope\
    \ of this specification.\n   Note, however, that using a local, relative identifier\
    \ like a flat\n   hostname, rather than a hierarchical and globally unique ADMD\n\
    \   identifier like a DNS domain name, makes configuration more difficult\n  \
    \ for large sites.  The hierarchical identifier permits aggregating\n   related,\
    \ trusted systems together under a single, parent identifier,\n   which in turn\
    \ permits assessing the trust relationship with a single\n   reference.  The alternative\
    \ is a flat namespace requiring\n   individually listing each trusted system.\
    \  Since consumers will use\n   the identifier to determine whether to use the\
    \ contents of the header\n   field:\n   o  Changes to the identifier impose a\
    \ large, centralized\n      administrative burden.\n   o  Ongoing administrative\
    \ changes require constantly updating this\n      centralized table, making it\
    \ difficult to ensure that an MUA or\n      downstream filter will have access\
    \ to accurate information for\n      assessing the usability of the header field's\
    \ content.  In\n      particular, consumers of the header field will need to know\
    \ not\n      only the current identifier(s) in use but previous ones as well to\n\
    \      account for delivery latency or later re-assessment of the header\n   \
    \   field's contents.\n   Examples of valid authentication identifiers are \"\
    example.com\",\n   \"mail.example.org\", \"ms1.newyork.example.com\", and \"example-auth\"\
    .\n"
- title: 2.6.  Version Tokens
  contents:
  - "2.6.  Version Tokens\n   The grammar above provides for the optional inclusion\
    \ of versions on\n   both the header field itself (attached to the authserv-id\
    \ token) and\n   on each of the methods being reported.  The method version refers\
    \ to\n   the method itself, which is specified in the documents describing\n \
    \  those methods, while the authserv-id version refers to this document\n   and\
    \ thus the syntax of this header field.\n   The purpose of including these is\
    \ to avoid misinterpretation of the\n   results.  That is, if a parser finds a\
    \ version after an authserv-id\n   that it does not explicitly know, it can immediately\
    \ discontinue\n   trying to parse since what follows might not be in an expected\n\
    \   format.  For a method version, the parser SHOULD ignore a method\n   result\
    \ if the version is not supported in case the semantics of the\n   result have\
    \ a different meaning than what is expected.  For example,\n   if a hypothetical\
    \ DKIM version 2 yielded a \"pass\" result for\n   different reasons than version\
    \ 1 does, a consumer of this field might\n   not want to use the altered semantics.\
    \  Allowing versions in the\n   syntax is a way to indicate this and let the consumer\
    \ of the header\n   field decide.\n"
- title: 2.7.  Defined Methods and Result Values
  contents:
  - "2.7.  Defined Methods and Result Values\n   Each individual authentication method\
    \ returns one of a set of\n   specific result values.  The subsections below provide\
    \ references to\n   the documents defining the authentication methods specifically\n\
    \   supported by this document, and their corresponding result values.\n   Verifiers\
    \ SHOULD use these values as described below.  New methods\n   not specified in\
    \ this document, but intended to be supported by the\n   header field defined\
    \ here, MUST include a similar result table either\n   in their defining documents\
    \ or in supplementary ones.\n"
- title: 2.7.1.  DKIM and DomainKeys
  contents:
  - "2.7.1.  DKIM and DomainKeys\n   DKIM is represented by the \"dkim\" method and\
    \ is defined in [DKIM].\n   DomainKeys is defined in [DOMAINKEYS] and is represented\
    \ by the\n   \"domainkeys\" method.\n   Section 3.8 of [DOMAINKEYS] enumerates\
    \ some possible results of a\n   DomainKeys evaluation.  Those results are not\
    \ used when generating\n   this header field; rather, the results returned are\
    \ listed below.\n   A signature is \"acceptable to the ADMD\" if it passes local\
    \ policy\n   checks (or there are no specific local policy checks).  For example,\n\
    \   an ADMD policy might require that the signature(s) on the message be\n   added\
    \ using the DNS domain present in the From header field of the\n   message, thus\
    \ making third-party signatures unacceptable even if they\n   verify.\n   Both\
    \ DKIM and DomainKeys use the same result set, as follows:\n   none:  The message\
    \ was not signed.\n   pass:  The message was signed, the signature or signatures\
    \ were\n      acceptable to the ADMD, and the signature(s) passed verification\n\
    \      tests.\n   fail:  The message was signed and the signature or signatures\
    \ were\n      acceptable to the ADMD, but they failed the verification test(s).\n\
    \   policy:  The message was signed, but some aspect of the signature or\n   \
    \   signatures was not acceptable to the ADMD.\n   neutral:  The message was signed,\
    \ but the signature or signatures\n      contained syntax errors or were not otherwise\
    \ able to be\n      processed.  This result is also used for other failures not\n\
    \      covered elsewhere in this list.\n   temperror:  The message could not be\
    \ verified due to some error that\n      is likely transient in nature, such as\
    \ a temporary inability to\n      retrieve a public key.  A later attempt may\
    \ produce a final\n      result.\n   permerror:  The message could not be verified\
    \ due to some error that\n      is unrecoverable, such as a required header field\
    \ being absent.  A\n      later attempt is unlikely to produce a final result.\n\
    \   DKIM results are reported using a ptype of \"header\".  The property,\n  \
    \ however, represents one of the tags found in the DKIM-Signature\n   header field\
    \ rather than a distinct header field.  For example, the\n   ptype-property combination\
    \ \"header.d\" refers to the content of the\n   \"d\" (signing domain) tag from\
    \ within the signature header field, and\n   not a distinct header field called\
    \ \"d\".\n   The ability to report different DKIM results for a message with\n\
    \   multiple signatures is described in [RFC6008].\n   [DKIM] advises that if\
    \ a message fails verification, it is to be\n   treated as an unsigned message.\
    \  A report of \"fail\" here permits the\n   receiver of the report to decide\
    \ how to handle the failure.  A report\n   of \"neutral\" or \"none\" preempts\
    \ that choice, ensuring the message\n   will be treated as if it had not been\
    \ signed.\n   Section 3.1 of [DOMAINKEYS] describes a process by which the sending\n\
    \   address of the message is determined.  DomainKeys results are thus\n   reported\
    \ along with the signing domain name, the sending address of\n   the message,\
    \ and the name of the header field from which the latter\n   was extracted.  This\
    \ means that a DomainKeys result includes a ptype-\n   property combination of\
    \ \"header.d\", plus one of \"header.from\" and\n   \"header.sender\".  The sending\
    \ address extracted from the header is\n   included with any [MAIL]-style comments\
    \ removed; moreover, the local-\n   part of the address and the \"@\" character\
    \ are removed if it has not\n   been authenticated in some way.\n"
- title: 2.7.2.  SPF and Sender ID
  contents:
  - "2.7.2.  SPF and Sender ID\n   SPF and Sender ID use the \"spf\" and \"sender-id\"\
    \ method names,\n   respectively.  The result values for SPF are defined in Section\
    \ 2.6\n   of [SPF], and those definitions are included here by reference:\n  \
    \   +-----------+--------------------------------+\n     |    Code   | Meaning\
    \                        |\n     +-----------+--------------------------------+\n\
    \     | none      | [RFC7208], Section 2.6.1       |\n     +-----------+--------------------------------+\n\
    \     | pass      | [RFC7208], Section 2.6.3       |\n     +-----------+--------------------------------+\n\
    \     | fail      | [RFC7208], Section 2.6.4       |\n     +-----------+--------------------------------+\n\
    \     | softfail  | [RFC7208], Section 2.6.5       |\n     +-----------+--------------------------------+\n\
    \     | policy    | RFC 7601, Section 2.4          |\n     +-----------+--------------------------------+\n\
    \     | neutral   | [RFC7208], Section 2.6.2       |\n     +-----------+--------------------------------+\n\
    \     | temperror | [RFC7208], Section 2.6.6       |\n     +-----------+--------------------------------+\n\
    \     | permerror | [RFC7208], Section 2.6.7       |\n     +-----------+--------------------------------+\n\
    \   These result codes are used in the context of this specification to\n   reflect\
    \ the result returned by the component conducting SPF\n   evaluation.\n   For\
    \ SPF, the ptype used is \"smtp\", and the property is either\n   \"mailfrom\"\
    \ or \"helo\", since those values are the ones SPF can\n   evaluate.  (If the\
    \ SMTP client issued the EHLO command instead of\n   HELO, the property used is\
    \ \"helo\".)\n   The \"sender-id\" method is described in [SENDERID].  For this\
    \ method,\n   the ptype used is \"header\" and the property will be the name of\
    \ the\n   header field from which the Purported Responsible Address (see [PRA])\n\
    \   was extracted -- namely, one of \"Resent-Sender\", \"Resent-From\",\n   \"\
    Sender\", or \"From\".\n   The results for Sender ID are listed and described\
    \ in Section 4.2 of\n   [SENDERID], but for the purposes of this specification,\
    \ the SPF\n   definitions enumerated above are used instead.  Also, [SENDERID]\n\
    \   specifies result codes that use mixed case, but they are typically\n   used\
    \ all lowercase in this context.\n   For both methods, an additional result of\
    \ \"policy\" is defined, which\n   means the client was authorized to inject or\
    \ relay mail on behalf of\n   the sender's DNS domain according to the authentication\
    \ method's\n   algorithm, but local policy dictates that the result is unacceptable.\n\
    \   For example, \"policy\" might be used if SPF returns a \"pass\" result,\n\
    \   but a local policy check matches the sending DNS domain to one found\n   in\
    \ an explicit list of unacceptable DNS domains (e.g., spammers).\n   If the retrieved\
    \ sender policies used to evaluate SPF and Sender ID\n   do not contain explicit\
    \ provisions for authenticating the local-part\n   (see Section 3.4.1 of [MAIL])\
    \ of an address, the \"pvalue\" reported\n   along with results for these mechanisms\
    \ SHOULD NOT include the local-\n   part or the following \"@\" character.\n"
- title: 2.7.3.  "iprev"
  contents:
  - "2.7.3.  \"iprev\"\n   The result values used by the \"iprev\" method, defined\
    \ in Section 3,\n   are as follows:\n   pass:  The DNS evaluation succeeded, i.e.,\
    \ the \"reverse\" and\n      \"forward\" lookup results were returned and were\
    \ in agreement.\n   fail:  The DNS evaluation failed.  In particular, the \"reverse\"\
    \ and\n      \"forward\" lookups each produced results, but they were not in\n\
    \      agreement, or the \"forward\" query completed but produced no\n      result,\
    \ e.g., a DNS RCODE of 3, commonly known as NXDOMAIN, or an\n      RCODE of 0\
    \ (NOERROR) in a reply containing no answers, was\n      returned.\n   temperror:\
    \  The DNS evaluation could not be completed due to some\n      error that is\
    \ likely transient in nature, such as a temporary DNS\n      error, e.g., a DNS\
    \ RCODE of 2, commonly known as SERVFAIL, or\n      other error condition resulted.\
    \  A later attempt may produce a\n      final result.\n   permerror:  The DNS\
    \ evaluation could not be completed because no PTR\n      data are published for\
    \ the connecting IP address, e.g., a DNS\n      RCODE of 3, commonly known as\
    \ NXDOMAIN, or an RCODE of 0 (NOERROR)\n      in a reply containing no answers,\
    \ was returned.  This prevented\n      completion of the evaluation.  A later\
    \ attempt is unlikely to\n      produce a final result.\n   There is no \"none\"\
    \ for this method since any TCP connection\n   delivering email has an IP address\
    \ associated with it, so some kind\n   of evaluation will always be possible.\n\
    \   The result is reported using a ptype of \"policy\" (as this is not part\n\
    \   of any established protocol) and a property of \"iprev\".\n   For discussion\
    \ of the format of DNS replies, see \"Domain Names -\n   Implementation and Specification\"\
    \ ([DNS]).\n"
- title: 2.7.4.  SMTP AUTH
  contents:
  - "2.7.4.  SMTP AUTH\n   SMTP AUTH (defined in [AUTH]) is represented by the \"\
    auth\" method.\n   Its result values are as follows:\n   none:  SMTP authentication\
    \ was not attempted.\n   pass:  The SMTP client authenticated to the server reporting\
    \ the\n      result using the protocol described in [AUTH].\n   fail:  The SMTP\
    \ client attempted to authenticate to the server using\n      the protocol described\
    \ in [AUTH] but was not successful (such as\n      providing a valid identity\
    \ but an incorrect password).\n   temperror:  The SMTP client attempted to authenticate\
    \ using the\n      protocol described in [AUTH] but was not able to complete the\n\
    \      attempt due to some error that is likely transient in nature, such\n  \
    \    as a temporary directory service lookup error.  A later attempt\n      may\
    \ produce a final result.\n   permerror:  The SMTP client attempted to authenticate\
    \ using the\n      protocol described in [AUTH] but was not able to complete the\n\
    \      attempt due to some error that is likely not transient in nature,\n   \
    \   such as a permanent directory service lookup error.  A later\n      attempt\
    \ is not likely to produce a final result.\n   The result of AUTH is reported\
    \ using a ptype of \"smtp\" and a property\n   of either:\n   o  \"auth\", in\
    \ which case the value is the authorization identity\n      generated by the exchange\
    \ initiated by the AUTH command; or\n   o  \"mailfrom\", in which case the value\
    \ is the mailbox identified by\n      the AUTH parameter used with the MAIL FROM\
    \ command.\n   If both identities are available, both can be reported.  For example,\n\
    \   consider this command issued by a client that has completed session\n   authentication\
    \ with the AUTH command resulting in an authorized\n   identity of \"client@c.example\"\
    :\n     MAIL FROM:<alice@a.example> AUTH=<bob@b.example>\n   This could result\
    \ in a \"resinfo\" construction like so:\n     ; auth=pass smtp.auth=client@c.example\
    \ smtp.mailfrom=bob@b.example\n   Note that in all cases other than \"pass\",\
    \ the message was sent by an\n   unauthenticated client.  All non-\"pass\" cases\
    \ SHOULD thus be treated\n   as equivalent with respect to this method.\n"
- title: 2.7.5.  Other Registered Codes
  contents:
  - "2.7.5.  Other Registered Codes\n   Result codes were also registered in other\
    \ RFCs as follows:\n   o  Vouch By Reference (in [AR-VBR], represented by \"vbr\"\
    );\n   o  Authorized Third-Party Signatures (in [ATPS], represented by\n     \
    \ \"dkim-atps\");\n   o  Author Domain Signing Practices (in [ADSP], represented\
    \ by \"dkim-\n      adsp\");\n   o  Require-Recipient-Valid-Since (in [RRVS],\
    \ represented by \"rrvs\");\n   o  S/MIME (in [SMIME-REG], represented by \"smime\"\
    ).\n"
- title: 2.7.6.  Extension Methods
  contents:
  - "2.7.6.  Extension Methods\n   Additional authentication method identifiers (extension\
    \ methods) may\n   be defined in the future by later revisions or extensions to\
    \ this\n   specification.  These method identifiers are registered with the\n\
    \   Internet Assigned Numbers Authority (IANA) and, preferably, published\n  \
    \ in an RFC.  See Section 6 for further details.\n   Extension methods can be\
    \ defined for the following reasons:\n   1.  To allow additional information from\
    \ new authentication systems\n       to be communicated to MUAs or downstream\
    \ filters.  The names of\n       such identifiers ought to reflect the name of\
    \ the method being\n       defined but ought not be needlessly long.\n   2.  To\
    \ allow the creation of \"sub-identifiers\" that indicate\n       different levels\
    \ of authentication and differentiate between\n       their relative strengths,\
    \ e.g., \"auth1-weak\" and \"auth1-strong\".\n   Authentication method implementers\
    \ are encouraged to provide adequate\n   information, via message header field\
    \ comments if necessary, to allow\n   an MUA developer to understand or relay\
    \ ancillary details of\n   authentication results.  For example, if it might be\
    \ of interest to\n   relay what data was used to perform an evaluation, such information\n\
    \   could be relayed as a comment in the header field, such as:\n        Authentication-Results:\
    \ example.com;\n                  foo=pass bar.baz=blob (2 of 3 tests OK)\n  \
    \ Experimental method identifiers MUST only be used within ADMDs that\n   have\
    \ explicitly consented to use them.  These method identifiers and\n   the parameters\
    \ associated with them are not documented in RFCs.\n   Therefore, they are subject\
    \ to change at any time and not suitable\n   for production use.  Any MTA, MUA,\
    \ or downstream filter intended for\n   production use SHOULD ignore or delete\
    \ any Authentication-Results\n   header field that includes an experimental (unknown)\
    \ method\n   identifier.\n"
- title: 2.7.7.  Extension Result Codes
  contents:
  - "2.7.7.  Extension Result Codes\n   Additional result codes (extension results)\
    \ might be defined in the\n   future by later revisions or extensions to this\
    \ specification.\n   Result codes MUST be registered with the Internet Assigned\
    \ Numbers\n   Authority (IANA) and preferably published in an RFC.  See Section\
    \ 6\n   for further details.\n   Experimental results MUST only be used within\
    \ ADMDs that have\n   explicitly consented to use them.  These results and the\
    \ parameters\n   associated with them are not formally documented.  Therefore,\
    \ they\n   are subject to change at any time and not suitable for production\n\
    \   use.  Any MTA, MUA, or downstream filter intended for production use\n   SHOULD\
    \ ignore or delete any Authentication-Results header field that\n   includes an\
    \ extension result.\n"
- title: 3.  The "iprev" Authentication Method
  contents:
  - "3.  The \"iprev\" Authentication Method\n   This section defines an additional\
    \ authentication method called\n   \"iprev\".\n   \"iprev\" is an attempt to verify\
    \ that a client appears to be valid\n   based on some DNS queries, which is to\
    \ say that the IP address is\n   explicitly associated with a domain name.  Upon\
    \ receiving a session\n   initiation of some kind from a client, the IP address\
    \ of the client\n   peer is queried for matching names (i.e., a number-to-name\n\
    \   translation, also known as a \"reverse lookup\" or a \"PTR\" record\n   query).\
    \  Once that result is acquired, a lookup of each of the names\n   (i.e., a name-to-number\
    \ translation, or an \"A\" or \"AAAA\" record\n   query) thus retrieved is done.\
    \  The response to this second check\n   will typically result in at least one\
    \ mapping back to the client's IP\n   address.\n   Expressed as an algorithm:\
    \ If the client peer's IP address is I, the\n   list of names to which I maps\
    \ (after a \"PTR\" query) is the set N, and\n   the union of IP addresses to which\
    \ each member of N maps (after\n   corresponding \"A\" and \"AAAA\" queries) is\
    \ L, then this test is\n   successful if I is an element of L.\n   Often an MTA\
    \ receiving a connection that fails this test will simply\n   reject the connection\
    \ using the enhanced status code defined in\n   [AUTH-ESC].  If an operator instead\
    \ wishes to make this information\n   available to downstream agents as a factor\
    \ in handling decisions, it\n   records a result in accordance with Section 2.7.3.\n\
    \   The response to a PTR query could contain multiple names.  To prevent\n  \
    \ heavy DNS loads, agents performing these queries MUST be implemented\n   such\
    \ that the number of names evaluated by generation of\n   corresponding A or AAAA\
    \ queries is limited so as not to be unduly\n   taxing to the DNS infrastructure,\
    \ though it MAY be configurable by an\n   administrator.  As an example, Section\
    \ 4.6.4 of [SPF] chose a limit\n   of 10 for its implementation of this algorithm.\n\
    \   \"DNS Extensions to Support IP Version 6\" ([DNS-IP6]) discusses the\n   query\
    \ formats for the IPv6 case.\n   There is some contention regarding the wisdom\
    \ and reliability of this\n   test.  For example, in some regions, it can be difficult\
    \ for this\n   test ever to pass because the practice of arranging to match the\n\
    \   forward and reverse DNS is infrequently observed.  Therefore, the\n   precise\
    \ implementation details of how a verifier performs an \"iprev\"\n   test are\
    \ not specified here.  The verifier MAY report a successful or\n   failed \"iprev\"\
    \ test at its discretion having done some kind of check\n   of the validity of\
    \ the connection's identity using DNS.  It is\n   incumbent upon an agent making\
    \ use of the reported \"iprev\" result to\n   understand what exactly that particular\
    \ verifier is attempting to\n   report.\n   Extensive discussion of reverse DNS\
    \ mapping and its implications can\n   be found in \"Considerations for the use\
    \ of DNS Reverse Mapping\"\n   ([DNSOP-REVERSE]).  In particular, it recommends\
    \ that applications\n   avoid using this test as a means of authentication or\
    \ security.  Its\n   presence in this document is not an endorsement but is merely\n\
    \   acknowledgment that the method remains common and provides the means\n   to\
    \ relay the results of that test.\n"
- title: 4.  Adding the Header Field to a Message
  contents:
  - "4.  Adding the Header Field to a Message\n   This specification makes no attempt\
    \ to evaluate the relative\n   strengths of various message authentication methods\
    \ that may become\n   available.  The methods listed are an order-independent\
    \ set; their\n   sequence does not indicate relative strength or importance of\
    \ one\n   method over another.  Instead, the MUA or downstream filter consuming\n\
    \   this header field is to interpret the result of each method based on\n   its\
    \ own knowledge of what that method evaluates.\n   Each \"method\" MUST refer\
    \ to an authentication method declared in the\n   IANA registry or an extension\
    \ method as described in Section 2.7.6,\n   and each \"result\" MUST refer to\
    \ a result code declared in the IANA\n   registry or an extension result code\
    \ as defined in Section 2.7.7.\n   See Section 6 for further information about\
    \ the registered methods\n   and result codes.\n   An MTA compliant with this\
    \ specification adds this header field\n   (after performing one or more message\
    \ authentication tests) to\n   indicate which MTA or ADMD performed the test,\
    \ which test got\n   applied, and what the result was.  If an MTA applies more\
    \ than one\n   such test, it adds this header field either once per test or once\n\
    \   indicating all of the results.  An MTA MUST NOT add a result to an\n   existing\
    \ header field.\n   An MTA MAY add this header field containing only the authentication\n\
    \   identifier portion and the \"none\" token (see Section 2.2) to indicate\n\
    \   explicitly that no message authentication schemes were applied prior\n   to\
    \ delivery of this message.\n   An MTA adding this header field has to take steps\
    \ to identify it as\n   legitimate to the MUAs or downstream filters that will\
    \ ultimately\n   consume its content.  One process to do so is described in Section\
    \ 5.\n   Further measures may be necessary in some environments.  Some\n   possible\
    \ solutions are enumerated in Section 7.1.  This document does\n   not mandate\
    \ any specific solution to this issue as each environment\n   has its own facilities\
    \ and limitations.\n   Most known message authentication methods focus on a particular\n\
    \   identifier to evaluate.  SPF and Sender ID differ in that they can\n   yield\
    \ a result based on more than one identifier; specifically, SPF\n   can evaluate\
    \ the RFC5321.HELO parameter or the RFC5321.MailFrom\n   parameter, and Sender\
    \ ID can evaluate the RFC5321.MailFrom parameter\n   or the Purported Responsible\
    \ Address (PRA) identity.  When generating\n   this field to report those results,\
    \ only the parameter that yielded\n   the result is included.\n   For MTAs that\
    \ add this header field, adding header fields in order\n   (at the top), per Section\
    \ 3.6 of [MAIL], is particularly important.\n   Moreover, this header field SHOULD\
    \ be inserted above any other trace\n   header fields such MTAs might prepend.\
    \  This placement allows easy\n   detection of header fields that can be trusted.\n\
    \   End users making direct use of this header field might inadvertently\n   trust\
    \ information that has not been properly vetted.  If, for\n   example, a basic\
    \ SPF result were to be relayed that claims an\n   authenticated addr-spec, the\
    \ local-part of that addr-spec has\n   actually not been authenticated.  Thus,\
    \ an MTA adding this header\n   field SHOULD NOT include any data that has not\
    \ been authenticated by\n   the method(s) being applied.  Moreover, MUAs SHOULD\
    \ NOT render to\n   users such information if it is presented by a method known\
    \ not to\n   authenticate it.\n"
- title: 4.1.  Header Field Position and Interpretation
  contents:
  - "4.1.  Header Field Position and Interpretation\n   In order to ensure non-ambiguous\
    \ results and avoid the impact of\n   false header fields, MUAs and downstream\
    \ filters SHOULD NOT interpret\n   this header field unless specifically configured\
    \ to do so by the user\n   or administrator.  That is, this interpretation should\
    \ not be \"on by\n   default\".  Naturally then, users or administrators ought\
    \ not activate\n   such a feature unless (1) they are certain the header field\
    \ will be\n   validly added by an agent within the ADMD that accepts the mail\
    \ that\n   is ultimately read by the MUA, and (2) instances of the header field\n\
    \   that appear to originate within the ADMD but are actually added by\n   foreign\
    \ MTAs will be removed before delivery.\n   Furthermore, MUAs and downstream filters\
    \ SHOULD NOT interpret this\n   header field unless the authentication service\
    \ identifier it bears\n   appears to be one used within its own ADMD as configured\
    \ by the user\n   or administrator.\n   MUAs and downstream filters MUST ignore\
    \ any result reported using a\n   \"result\" not specified in the IANA \"Result\
    \ Code\" registry or a\n   \"ptype\" not listed in the \"Email Authentication\
    \ Property Types\"\n   registry for such values as defined in Section 6.  Moreover,\
    \ such\n   agents MUST ignore a result indicated for any \"method\" they do not\n\
    \   specifically support.\n   An MUA SHOULD NOT reveal these results to end users,\
    \ absent careful\n   human factors design considerations and testing, for the\
    \ presentation\n   of trust-related materials.  For example, an attacker could\
    \ register\n   examp1e.com (note the digit \"1\" (one)) and send signed mail to\n\
    \   intended victims; a verifier would detect that the signature was\n   valid\
    \ and report a \"pass\" even though it's clear the DNS domain name\n   was intended\
    \ to mislead.  See Section 7.2 for further discussion.\n   As stated in Section\
    \ 2.1, this header field MUST be treated as though\n   it were a trace header\
    \ field as defined in Section 3.6.7 of [MAIL]\n   and hence MUST NOT be reordered\
    \ and MUST be prepended to the message,\n   so that there is generally some indication\
    \ upon delivery of where in\n   the chain of handling MTAs the message authentication\
    \ was done.\n   Note that there are a few message handlers that are only capable\
    \ of\n   appending new header fields to a message.  Strictly speaking, these\n\
    \   handlers are not compliant with this specification.  They can still\n   add\
    \ the header field to carry authentication details, but any signal\n   about where\
    \ in the handling chain the work was done may be lost.\n   Consumers SHOULD be\
    \ designed such that this can be tolerated,\n   especially from a producer known\
    \ to have this limitation.\n   MUAs SHOULD ignore instances of this header field\
    \ discovered within\n   message/rfc822 MIME attachments.\n   Further discussion\
    \ of these topics can be found in Section 7 below.\n"
- title: 4.2.  Local Policy Enforcement
  contents:
  - "4.2.  Local Policy Enforcement\n   Some sites have a local policy that considers\
    \ any particular\n   authentication policy's non-recoverable failure results (typically\n\
    \   \"fail\" or similar) as justification for rejecting the message.  In\n   such\
    \ cases, the border MTA SHOULD issue an SMTP rejection response to\n   the message,\
    \ rather than adding this header field and allowing the\n   message to proceed\
    \ toward delivery.  This is more desirable than\n   allowing the message to reach\
    \ an internal host's MTA or spam filter,\n   thus possibly generating a local\
    \ rejection such as a Delivery Status\n   Notification (DSN) [DSN] to a forged\
    \ originator.  Such generated\n   rejections are colloquially known as \"backscatter\"\
    .\n   The same MAY also be done for local policy decisions overriding the\n  \
    \ results of the authentication methods (e.g., the \"policy\" result\n   codes\
    \ described in Section 2.7).\n   Such rejections at the SMTP protocol level are\
    \ not possible if local\n   policy is enforced at the MUA and not the MTA.\n"
- title: 5.  Removing Existing Header Fields
  contents:
  - "5.  Removing Existing Header Fields\n   For security reasons, any MTA conforming\
    \ to this specification MUST\n   delete any discovered instance of this header\
    \ field that claims, by\n   virtue of its authentication service identifier, to\
    \ have been added\n   within its trust boundary but that did not come directly\
    \ from another\n   trusted MTA.  For example, an MTA for example.com receiving\
    \ a message\n   MUST delete or otherwise obscure any instance of this header field\n\
    \   bearing an authentication service identifier indicating that the\n   header\
    \ field was added within example.com prior to adding its own\n   header fields.\
    \  This could mean each MTA will have to be equipped\n   with a list of internal\
    \ MTAs known to be compliant (and hence\n   trustworthy).\n   For simplicity and\
    \ maximum security, a border MTA could remove all\n   instances of this header\
    \ field on mail crossing into its trust\n   boundary.  However, this may conflict\
    \ with the desire to access\n   authentication results performed by trusted external\
    \ service\n   providers.  It may also invalidate signed messages whose signatures\n\
    \   cover external instances of this header field.  A more robust border\n   MTA\
    \ could allow a specific list of authenticating MTAs whose\n   information is\
    \ to be admitted, removing the header field originating\n   from all others.\n\
    \   As stated in Section 1.2, a formal definition of \"trust boundary\" is\n \
    \  deliberately not made here.  It is entirely possible that a border\n   MTA\
    \ for example.com will explicitly trust authentication results\n   asserted by\
    \ upstream host example.net even though they exist in\n   completely disjoint\
    \ administrative boundaries.  In that case, the\n   border MTA MAY elect not to\
    \ delete those results; moreover, the\n   upstream host doing some authentication\
    \ work could apply a signing\n   technology such as [DKIM] on its own results\
    \ to assure downstream\n   hosts of their authenticity.  An example of this is\
    \ provided in\n   Appendix B.\n   Similarly, in the case of messages signed using\
    \ [DKIM] or other\n   message-signing methods that sign header fields, this removal\
    \ action\n   could invalidate one or more signatures on the message if they\n\
    \   covered the header field to be removed.  This behavior can be\n   desirable\
    \ since there's little value in validating the signature on a\n   message with\
    \ forged header fields.  However, signing agents MAY\n   therefore elect to omit\
    \ these header fields from signing to avoid\n   this situation.\n   An MTA SHOULD\
    \ remove any instance of this header field bearing a\n   version (express or implied)\
    \ that it does not support.  However, an\n   MTA MUST remove such a header field\
    \ if the [SMTP] connection relaying\n   the message is not from a trusted internal\
    \ MTA.  This means the MTA\n   needs to be able to understand versions of this\
    \ header field at least\n   as late as the ones understood by the MUAs or other\
    \ consumers within\n   its ADMD.\n"
- title: 6.  IANA Considerations
  contents:
  - "6.  IANA Considerations\n   IANA has registered the defined header field and\
    \ created tables as\n   described below.  These registry actions were originally\
    \ defined by\n   [RFC5451] and updated by [RFC6577] and [RFC7001].  The created\n\
    \   registries are being further updated here to increase their\n   completeness.\n"
- title: 6.1.  The Authentication-Results Header Field
  contents:
  - "6.1.  The Authentication-Results Header Field\n   [RFC5451] added the Authentication-Results\
    \ header field to the IANA\n   \"Permanent Message Header Field Names\" registry,\
    \ per the procedure\n   found in [IANA-HEADERS].  That entry has been updated\
    \ to reference\n   this document.  The following is the registration template:\n\
    \     Header field name: Authentication-Results\n     Applicable protocol: mail\
    \ ([MAIL])\n     Status: Standard\n     Author/Change controller: IETF\n     Specification\
    \ document(s): RFC 7601\n     Related information: none\n"
- title: 6.2.  "Email Authentication Methods" Registry Description
  contents:
  - "6.2.  \"Email Authentication Methods\" Registry Description\n   Names of message\
    \ authentication methods supported by this\n   specification have been registered\
    \ with IANA, with the exception of\n   experimental names as described in Section\
    \ 2.7.6.  Along with each\n   method is recorded the properties that accompany\
    \ the method's result.\n   The \"Email Authentication Parameters\" group, and\
    \ within it the \"Email\n   Authentication Methods\" registry, were created by\
    \ [RFC5451] for this\n   purpose.  [RFC6577] added a \"status\" field for each\
    \ entry.  [RFC7001]\n   amended the rules governing that registry and also added\
    \ a \"version\"\n   field to the registry.\n   The reference for that registry\
    \ has been updated to reference this\n   document.\n   New entries are assigned\
    \ only for values that have received Expert\n   Review, per [IANA-CONSIDERATIONS].\
    \  The designated expert shall be\n   appointed by the IESG.  The designated expert\
    \ has discretion to\n   request that a publication be referenced if a clear, concise\n\
    \   definition of the authentication method cannot be provided such that\n   interoperability\
    \ is assured.  Registrations should otherwise be\n   permitted.  The designated\
    \ expert can also handle requests to mark\n   any current registration as \"deprecated\"\
    .\n   No two entries can have the same combination of method, ptype, and\n   property.\n\
    \   An entry in this registry contains the following:\n   Method:  the name of\
    \ the method.\n   Definition:  a reference to the document that created this entry,\
    \ if\n      any (see below).\n   ptype:  a \"ptype\" value appropriate for use\
    \ with that method.\n   property:  a \"property\" value matching that \"ptype\"\
    \ also appropriate\n      for use with that method.\n   Value:  a brief description\
    \ of the value to be supplied with that\n      method/ptype/property tuple.\n\
    \   Status:  the status of this entry, which is either:\n      active:  The entry\
    \ is in current use.\n      deprecated:  The entry is no longer in current use.\n\
    \   Version:  a version number associated with the method (preferably\n      starting\
    \ at \"1\").\n   The \"Definition\" field will typically refer to a permanent\
    \ document,\n   or at least some descriptive text, where additional information\
    \ about\n   the entry being added can be found.  This might in turn reference\
    \ the\n   document where the method is defined so that all of the semantics\n\
    \   around creating or interpreting an Authentication-Results header\n   field\
    \ using this method, ptype, and property can be understood.\n"
- title: 6.3.  "Email Authentication Methods" Registry Update
  contents:
  - "6.3.  \"Email Authentication Methods\" Registry Update\n   The following changes\
    \ have been made to this registry per this\n   document:\n   1.  The \"Defined\"\
    \ field has been renamed \"Definition\", to be\n       consistent with the other\
    \ registries in this group.\n   2.  The entry for the \"dkim\" method, \"header\"\
    \ ptype, and \"b\" property\n       now reference [RFC6008] as the defining document,\
    \ and the\n       reference has be removed from the description.\n   3.  All other\
    \ \"dkim\", \"domainkeys\", \"iprev\", \"sender-id\", and \"spf\"\n       method\
    \ entries have had their \"Definition\" fields changed to\n       refer to this\
    \ document, as this document contains a complete\n       description of the registry\
    \ and these corresponding values.\n   4.  All \"smime\" entries have had their\
    \ \"Definition\" fields changed to\n       [SMIME-REG].\n   5.  The \"value\"\
    \ field of the \"smime\" entry using property \"smime-\n       part\" has been\
    \ changed to read: \"The MIME body part reference\n       that contains the S/MIME\
    \ signature.  See Section 3.2.1 of RFC\n       7281 for full syntax.\"\n   6.\
    \  The single entry for the \"auth\" method was intended to reflect\n       the\
    \ identity indicated by the \"AUTH\" parameter to the SMTP \"MAIL\n       FROM\"\
    \ command verb.  However, there is also an \"AUTH\" command\n       verb.  To\
    \ clarify this ambiguity, the entry for the \"auth\" method\n       has had its\
    \ \"property\" field changed to \"mailfrom\", and its\n       \"Definition\" field\
    \ changed to this document.\n   7.  The following entry has been added:\n    \
    \   Method:  auth\n       Definition:  this document (RFC 7601)\n       ptype:\
    \  smtp\n       property:  auth\n       Value:  identity confirmed by the AUTH\
    \ command\n       Status:  active\n       Version:  1\n   8.  The values of the\
    \ \"domainkeys\" entries for ptype \"header\" have\n       been updated as follows:\n\
    \       from:  contents of the [MAIL] From: header field, after removing\n   \
    \       comments, and removing the local-part and following \"@\" if not\n   \
    \       authenticated\n       sender:  contents of the [MAIL] Sender: header field,\
    \ after\n          removing comments, and removing the local-part and following\n\
    \          \"@\" if not authenticated\n   9.  For all entries for \"dkim-adsp\"\
    \ and \"domainkeys\", their Status\n       values have been changed to \"deprecated\"\
    , reflecting the fact\n       that the corresponding specifications now have Historic\
    \ status.\n       Their \"Definition\" fields have also been modified to include\
    \ a\n       reference to this document.\n"
- title: 6.4.  "Email Authentication Property Types" Registry
  contents:
  - "6.4.  \"Email Authentication Property Types\" Registry\n   [RFC7410] created\
    \ the \"Email Authentication Property Types\" registry.\n   Entries in this registry\
    \ are subject to the Expert Review rules as\n   described in [IANA-CONSIDERATIONS].\
    \  Each entry in the registry\n   requires the following values:\n   ptype:  The\
    \ name of the ptype being registered, which must fit within\n      the ABNF described\
    \ in Section 2.2.\n   Definition:  An optional reference to a defining specification.\n\
    \   Description:  A brief description of what sort of information this\n     \
    \ \"ptype\" is meant to cover.\n   For new entries, the Designated Expert needs\
    \ to assure that the\n   description provided for the new entry adequately describes\
    \ the\n   intended use.  An example would be helpful to include in the entry's\n\
    \   defining document, if any, although entries in the \"Email\n   Authentication\
    \ Methods\" registry or the \"Email Authentication Result\n   Names\" registry\
    \ might also serve as examples of intended use.\n   As this is a complete restatement\
    \ of the definition and rules for\n   this registry, IANA has updated this registry\
    \ to show Section 2.3 of\n   this document as the current definitions for the\
    \ \"body\", \"header\",\n   \"policy\", and \"smtp\" entries of that registry.\
    \  References to\n   [RFC7001] and [RFC7410] have been removed.\n"
- title: 6.5.  "Email Authentication Result Names" Description
  contents:
  - "6.5.  \"Email Authentication Result Names\" Description\n   Names of message\
    \ authentication result codes supported by this\n   specification must be registered\
    \ with IANA, with the exception of\n   experimental codes as described in Section\
    \ 2.7.7.  A registry was\n   created by [RFC5451] for this purpose.  [RFC6577]\
    \ added the \"status\"\n   column and [RFC7001] updated the rules governing that\
    \ registry.\n   New entries are assigned only for values that have received Expert\n\
    \   Review, per [IANA-CONSIDERATIONS].  The designated expert shall be\n   appointed\
    \ by the IESG.  The designated expert has discretion to\n   request that a publication\
    \ be referenced if a clear, concise\n   definition of the authentication result\
    \ cannot be provided such that\n   interoperability is assured.  Registrations\
    \ should otherwise be\n   permitted.  The designated expert can also handle requests\
    \ to mark\n   any current registration as \"deprecated\".\n   No two entries can\
    \ have the same combination of method and code.\n   An entry in this registry\
    \ contains the following:\n   Auth Method:  an authentication method for which\
    \ results are being\n      returned using the header field defined in this document.\n\
    \   Code:  a result code that can be returned for this authentication\n      method.\n\
    \   Specification:  either free form text explaining the meaning of this\n   \
    \   method-code combination, or a reference to such a definition.\n   Status:\
    \  the status of this entry, which is either:\n      active:  The entry is in\
    \ current use.\n      deprecated:  The entry is no longer in current use.\n"
- title: 6.6.  "Email Authentication Result Names" Update
  contents:
  - "6.6.  \"Email Authentication Result Names\" Update\n   This document includes\
    \ a complete description of the registry,\n   obsoleting [RFC7001].  Accordingly,\
    \ the following changes have been\n   made to this registry per this document:\n\
    \   o  The \"Defined\" field has been removed.\n   o  The \"Meaning\" field has\
    \ been renamed \"Specification\", as described\n      above.\n   o  The \"Auth\
    \ Method\" field now appears before the \"Code\" field.\n   o  For easier searching,\
    \ the table has been arranged such that it is\n      sorted first by Auth Method,\
    \ then by Code within each Auth Method\n      grouping.\n   o  All entries for\
    \ the \"dkim\", \"domainkeys\", \"spf\", \"sender-id\",\n      \"auth\", and \"\
    iprev\" methods have had their \"Specification\" fields\n      replaced as follows:\n\
    \      dkim:  Section 2.7.1 of this document (RFC 7601)\n      domainkeys:  Section\
    \ 2.7.1 of this document (RFC 7601)\n      spf:  for \"hardfail\", Section 2.4.2\
    \ of [RFC5451]; for all others,\n         Section 2.7.2 of this document (RFC\
    \ 7601)\n      sender-id:  for \"hardfail\", Section 2.4.2 of [RFC5451]; for all\n\
    \         others, Section 2.7.2 of this document (RFC 7601)\n      auth:  Section\
    \ 2.7.4 of this document (RFC 7601)\n      iprev:  Section 2.7.3 of this document\
    \ (RFC 7601)\n   o  All entries for \"dkim-adsp\" that were missing an explicit\n\
    \      reference to a defining document now reference [ADSP] in their\n      \"\
    Specification\" fields.\n   o  All entries for \"dmarc\" have had their \"Specification\"\
    \ fields\n      changed to reference Section 11.2 of [DMARC].\n   o  All entries\
    \ for \"dkim-adsp\" and \"domainkeys\" have had their Status\n      values changed\
    \ to \"deprecated\", reflecting the fact that the\n      corresponding specifications\
    \ now have Historic status.  Their\n      \"Specification\" fields have also been\
    \ modified to include a\n      reference to this document.\n"
- title: 6.7.  SMTP Enhanced Status Codes
  contents:
  - "6.7.  SMTP Enhanced Status Codes\n   The entry for X.7.25 in the \"Enumerated\
    \ Status Codes\" sub-registry of\n   the \"Simple Mail Transfer Protocol (SMTP)\
    \ Enhanced Status Codes\n   Registry\" has been updated to refer to this document\
    \ instead of\n   [RFC7001].\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   The following security considerations apply when\
    \ adding or processing\n   the Authentication-Results header field:\n"
- title: 7.1.  Forged Header Fields
  contents:
  - "7.1.  Forged Header Fields\n   An MUA or filter that accesses a mailbox whose\
    \ messages are handled\n   by a non-conformant MTA, and understands Authentication-Results\n\
    \   header fields, could potentially make false conclusions based on\n   forged\
    \ header fields.  A malicious user or agent could forge a header\n   field using\
    \ the DNS domain of a receiving ADMD as the authserv-id\n   token in the value\
    \ of the header field and, with the rest of the\n   value, claim that the message\
    \ was properly authenticated.  The non-\n   conformant MTA would fail to strip\
    \ the forged header field, and the\n   MUA could inappropriately trust it.\n \
    \  For this reason, it is best not to have processing of the\n   Authentication-Results\
    \ header field enabled by default; instead, it\n   should be ignored, at least\
    \ for the purposes of enacting filtering\n   decisions, unless specifically enabled\
    \ by the user or administrator\n   after verifying that the border MTA is compliant.\
    \  It is acceptable\n   to have an MUA aware of this specification but have an\
    \ explicit list\n   of hostnames whose Authentication-Results header fields are\n\
    \   trustworthy; however, this list should initially be empty.\n   Proposed alternative\
    \ solutions to this problem were made some time\n   ago and are listed below.\
    \  To date, they have not been developed due\n   to lack of demand but are documented\
    \ here should the information be\n   useful at some point in the future:\n   1.\
    \  Possibly the simplest is a digital signature protecting the\n       header\
    \ field, such as using [DKIM], that can be verified by an\n       MUA by using\
    \ a posted public key.  Although one of the main\n       purposes of this document\
    \ is to relieve the burden of doing\n       message authentication work at the\
    \ MUA, this only requires that\n       the MUA learn a single authentication scheme\
    \ even if a number of\n       them are in use at the border MTA.  Note that [DKIM]\
    \ requires\n       that the From header field be signed, although in this\n  \
    \     application, the signing agent (a trusted MTA) likely cannot\n       authenticate\
    \ that value, so the fact that it is signed should be\n       ignored.  Where\
    \ the authserv-id is the ADMD's domain name, the\n       authserv-id matching\
    \ this valid internal signature's \"d=\" DKIM\n       value is sufficient.\n \
    \  2.  Another would be a means to interrogate the MTA that added the\n      \
    \ header field to see if it is actually providing any message\n       authentication\
    \ services and saw the message in question, but this\n       isn't especially\
    \ palatable given the work required to craft and\n       implement such a scheme.\n\
    \   3.  Yet another might be a method to interrogate the internal MTAs\n     \
    \  that apparently handled the message (based on Received header\n       fields)\
    \ to determine whether any of them conform to Section 5 of\n       this memo.\
    \  This, too, has potentially high barriers to entry.\n   4.  Extensions to [IMAP],\
    \ [SMTP], and [POP3] could be defined to\n       allow an MUA or filtering agent\
    \ to acquire the authserv-id in use\n       within an ADMD, thus allowing it to\
    \ identify which\n       Authentication-Results header fields it can trust.\n\
    \   5.  On the presumption that internal MTAs are fully compliant with\n     \
    \  Section 3.6 of [MAIL] and the compliant internal MTAs are using\n       their\
    \ own hostnames or the ADMD's DNS domain name as the\n       authserv-id token,\
    \ the header field proposed here should always\n       appear above a Received\
    \ header added by a trusted MTA.  This can\n       be used as a test for header\
    \ field validity.\n   Support for some of these is being considered for future\
    \ work.\n   In any case, a mechanism needs to exist for an MUA or filter to\n\
    \   verify that the host that appears to have added the header field (a)\n   actually\
    \ did so and (b) is legitimately adding that header field for\n   this delivery.\
    \  Given the variety of messaging environments deployed\n   today, consensus appears\
    \ to be that specifying a particular mechanism\n   for doing so is not appropriate\
    \ for this document.\n   Mitigation of the forged header field attack can also\
    \ be accomplished\n   by moving the authentication results data into metadata\
    \ associated\n   with the message.  In particular, an [SMTP] extension could be\n\
    \   established to communicate authentication results from the border MTA\n  \
    \ to intermediate and delivery MTAs; the latter of these could arrange\n   to\
    \ store the authentication results as metadata retrieved and\n   rendered along\
    \ with the message by an [IMAP] client aware of a\n   similar extension in that\
    \ protocol.  The delivery MTA would be told\n   to trust data via this extension\
    \ only from MTAs it trusts, and border\n   MTAs would not accept data via this\
    \ extension from any source.  There\n   is no vector in such an arrangement for\
    \ forgery of authentication\n   data by an outside agent.\n"
- title: 7.2.  Misleading Results
  contents:
  - "7.2.  Misleading Results\n   Until some form of service for querying the reputation\
    \ of a sending\n   agent is widely deployed, the existence of this header field\n\
    \   indicating a \"pass\" does not render the message trustworthy.  It is\n  \
    \ possible for an arriving piece of spam or other undesirable mail to\n   pass\
    \ checks by several of the methods enumerated above (e.g., a piece\n   of spam\
    \ signed using [DKIM] by the originator of the spam, which\n   might be a spammer\
    \ or a compromised system).  In particular, this\n   issue is not resolved by\
    \ forged header field removal discussed above.\n   Hence, MUAs and downstream\
    \ filters must take some care with use of\n   this header even after possibly\
    \ malicious headers are scrubbed.\n"
- title: 7.3.  Header Field Position
  contents:
  - "7.3.  Header Field Position\n   Despite the requirements of [MAIL], header fields\
    \ can sometimes be\n   reordered en route by intermediate MTAs.  The goal of requiring\n\
    \   header field addition only at the top of a message is an\n   acknowledgment\
    \ that some MTAs do reorder header fields, but most do\n   not.  Thus, in the\
    \ general case, there will be some indication of\n   which MTAs (if any) handled\
    \ the message after the addition of the\n   header field defined here.\n"
- title: 7.4.  Reverse IP Query Denial-of-Service Attacks
  contents:
  - "7.4.  Reverse IP Query Denial-of-Service Attacks\n   Section 4.6.4 of [SPF] describes\
    \ a DNS-based denial-of-service attack\n   for verifiers that attempt DNS-based\
    \ identity verification of\n   arriving client connections.  A verifier wishing\
    \ to do this check and\n   report this information needs to take care not to go\
    \ to unbounded\n   lengths to resolve \"A\" and \"PTR\" queries.  MUAs or other\
    \ filters\n   making use of an \"iprev\" result specified by this document need\
    \ to be\n   aware of the algorithm used by the verifier reporting the result and,\n\
    \   especially, its limitations.\n"
- title: 7.5.  Mitigation of Backscatter
  contents:
  - "7.5.  Mitigation of Backscatter\n   Failing to follow the instructions of Section\
    \ 4.2 can result in a\n   denial-of-service attack caused by the generation of\
    \ [DSN] messages\n   (or equivalent) to addresses that did not send the messages\
    \ being\n   rejected.\n"
- title: 7.6.  Internal MTA Lists
  contents:
  - "7.6.  Internal MTA Lists\n   Section 5 describes a procedure for scrubbing header\
    \ fields that may\n   contain forged authentication results about a message. \
    \ A compliant\n   installation will have to include, at each MTA, a list of other\
    \ MTAs\n   known to be compliant and trustworthy.  Failing to keep this list\n\
    \   current as internal infrastructure changes may expose an ADMD to\n   attack.\n"
- title: 7.7.  Attacks against Authentication Methods
  contents:
  - "7.7.  Attacks against Authentication Methods\n   If an attack becomes known against\
    \ an authentication method, clearly\n   then the agent verifying that method can\
    \ be fooled into thinking an\n   inauthentic message is authentic, and thus the\
    \ value of this header\n   field can be misleading.  It follows that any attack\
    \ against the\n   authentication methods supported by this document is also a\
    \ security\n   consideration here.\n"
- title: 7.8.  Intentionally Malformed Header Fields
  contents:
  - "7.8.  Intentionally Malformed Header Fields\n   It is possible for an attacker\
    \ to add an Authentication-Results\n   header field that is extraordinarily large\
    \ or otherwise malformed in\n   an attempt to discover or exploit weaknesses in\
    \ header field parsing\n   code.  Implementers must thoroughly verify all such\
    \ header fields\n   received from MTAs and be robust against intentionally as\
    \ well as\n   unintentionally malformed header fields.\n"
- title: 7.9.  Compromised Internal Hosts
  contents:
  - "7.9.  Compromised Internal Hosts\n   An internal MUA or MTA that has been compromised\
    \ could generate mail\n   with a forged From header field and a forged Authentication-Results\n\
    \   header field that endorses it.  Although it is clearly a larger\n   concern\
    \ to have compromised internal machines than it is to prove the\n   value of this\
    \ header field, this risk can be mitigated by arranging\n   that internal MTAs\
    \ will remove this header field if it claims to have\n   been added by a trusted\
    \ border MTA (as described above), yet the\n   [SMTP] connection is not coming\
    \ from an internal machine known to be\n   running an authorized MTA.  However,\
    \ in such a configuration,\n   legitimate MTAs will have to add this header field\
    \ when legitimate\n   internal-only messages are generated.  This is also covered\
    \ in\n   Section 5.\n"
- title: 7.10.  Encapsulated Instances
  contents:
  - "7.10.  Encapsulated Instances\n   MIME messages can contain attachments of type\
    \ \"message/rfc822\", which\n   contain other messages.  Such an encapsulated\
    \ message can also\n   contain an Authentication-Results header field.  Although\
    \ the\n   processing of these is outside of the intended scope of this document\n\
    \   (see Section 1.3), some early guidance to MUA developers is\n   appropriate\
    \ here.\n   Since MTAs are unlikely to strip Authentication-Results header fields\n\
    \   after mailbox delivery, MUAs are advised in Section 4.1 to ignore\n   such\
    \ instances within MIME attachments.  Moreover, when extracting a\n   message\
    \ digest to separate mail store messages or other media, such\n   header fields\
    \ should be removed so that they will never be\n   interpreted improperly by MUAs\
    \ that might later consume them.\n"
- title: 7.11.  Reverse Mapping
  contents:
  - "7.11.  Reverse Mapping\n   Although Section 3 of this memo includes explicit\
    \ support for the\n   \"iprev\" method, its value as an authentication mechanism\
    \ is limited.\n   Implementers of both this proposal and agents that use the data\
    \ it\n   relays are encouraged to become familiar with the issues raised by\n\
    \   [DNSOP-REVERSE] when deciding whether or not to include support for\n   \"\
    iprev\".\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [ABNF]     Crocker, D., Ed. and P. Overell, \"\
    Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC 5234,\n\
    \              DOI 10.17487/RFC5234, January 2008,\n              <http://www.rfc-editor.org/info/rfc5234>.\n\
    \   [IANA-HEADERS]\n              Klyne, G., Nottingham, M., and J. Mogul, \"\
    Registration\n              Procedures for Message Header Fields\", BCP 90, RFC\
    \ 3864,\n              DOI 10.17487/RFC3864, September 2004,\n              <http://www.rfc-editor.org/info/rfc3864>.\n\
    \   [KEYWORDS] Bradner, S., \"Key words for use in RFCs to Indicate\n        \
    \      Requirement Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119,\
    \ March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n   [MAIL]\
    \     Resnick, P., Ed., \"Internet Message Format\", RFC 5322,\n             \
    \ DOI 10.17487/RFC5322, October 2008,\n              <http://www.rfc-editor.org/info/rfc5322>.\n\
    \   [MIME]     Freed, N. and N. Borenstein, \"Multipurpose Internet Mail\n   \
    \           Extensions (MIME) Part One: Format of Internet Message\n         \
    \     Bodies\", RFC 2045, DOI 10.17487/RFC2045, November 1996,\n             \
    \ <http://www.rfc-editor.org/info/rfc2045>.\n   [SMTP]     Klensin, J., \"Simple\
    \ Mail Transfer Protocol\", RFC 5321,\n              DOI 10.17487/RFC5321, October\
    \ 2008,\n              <http://www.rfc-editor.org/info/rfc5321>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ADSP]     Allman, E., Fenton, J., Delany, M.,\
    \ and J. Levine,\n              \"DomainKeys Identified Mail (DKIM) Author Domain\
    \ Signing\n              Practices (ADSP)\", RFC 5617, DOI 10.17487/RFC5617, August\n\
    \              2009, <http://www.rfc-editor.org/info/rfc5617>.\n   [AR-VBR]  \
    \ Kucherawy, M., \"Authentication-Results Registration for\n              Vouch\
    \ by Reference Results\", RFC 6212,\n              DOI 10.17487/RFC6212, April\
    \ 2011,\n              <http://www.rfc-editor.org/info/rfc6212>.\n   [ATPS]  \
    \   Kucherawy, M., \"DomainKeys Identified Mail (DKIM)\n              Authorized\
    \ Third-Party Signatures\", RFC 6541,\n              DOI 10.17487/RFC6541, February\
    \ 2012,\n              <http://www.rfc-editor.org/info/rfc6541>.\n   [AUTH]  \
    \   Siemborski, R., Ed. and A. Melnikov, Ed., \"SMTP Service\n              Extension\
    \ for Authentication\", RFC 4954,\n              DOI 10.17487/RFC4954, July 2007,\n\
    \              <http://www.rfc-editor.org/info/rfc4954>.\n   [AUTH-ESC]\n    \
    \          Kucherawy, M., \"Email Authentication Status Codes\",\n           \
    \   RFC 7372, DOI 10.17487/RFC7372, September 2014,\n              <http://www.rfc-editor.org/info/rfc7372>.\n\
    \   [DKIM]     Crocker, D., Ed., Hansen, T., Ed., and M. Kucherawy, Ed.,\n   \
    \           \"DomainKeys Identified Mail (DKIM) Signatures\", STD 76,\n      \
    \        RFC 6376, DOI 10.17487/RFC6376, September 2011,\n              <http://www.rfc-editor.org/info/rfc6376>.\n\
    \   [DMARC]    Kucherawy, M., Ed. and E. Zwicky, Ed., \"Domain-based\n       \
    \       Message Authentication, Reporting, and Conformance\n              (DMARC)\"\
    , RFC 7489, DOI 10.17487/RFC7489, March 2015,\n              <http://www.rfc-editor.org/info/rfc7489>.\n\
    \   [DNS]      Mockapetris, P., \"Domain names - implementation and\n        \
    \      specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n            \
    \  November 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [DNS-IP6]  Thomson,\
    \ S., Huitema, C., Ksinant, V., and M. Souissi,\n              \"DNS Extensions\
    \ to Support IP Version 6\", RFC 3596,\n              DOI 10.17487/RFC3596, October\
    \ 2003,\n              <http://www.rfc-editor.org/info/rfc3596>.\n   [DNSOP-REVERSE]\n\
    \              Senie, D. and A. Sullivan, \"Considerations for the use of\n  \
    \            DNS Reverse Mapping\", Work in Progress, draft-ietf-dnsop-\n    \
    \          reverse-mapping-considerations-06, March 2008.\n   [DOMAINKEYS]\n \
    \             Delany, M., \"Domain-Based Email Authentication Using\n        \
    \      Public Keys Advertised in the DNS (DomainKeys)\", RFC 4870,\n         \
    \     DOI 10.17487/RFC4870, May 2007,\n              <http://www.rfc-editor.org/info/rfc4870>.\n\
    \   [DSN]      Moore, K. and G. Vaudreuil, \"An Extensible Message Format\n  \
    \            for Delivery Status Notifications\", RFC 3464,\n              DOI\
    \ 10.17487/RFC3464, January 2003,\n              <http://www.rfc-editor.org/info/rfc3464>.\n\
    \   [EMAIL-ARCH]\n              Crocker, D., \"Internet Mail Architecture\", RFC\
    \ 5598,\n              DOI 10.17487/RFC5598, July 2009,\n              <http://www.rfc-editor.org/info/rfc5598>.\n\
    \   [IANA-CONSIDERATIONS]\n              Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 5226,\n              DOI 10.17487/RFC5226, May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n\
    \   [IMAP]     Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL - VERSION\n   \
    \           4rev1\", RFC 3501, DOI 10.17487/RFC3501, March 2003,\n           \
    \   <http://www.rfc-editor.org/info/rfc3501>.\n   [POP3]     Myers, J. and M.\
    \ Rose, \"Post Office Protocol - Version 3\",\n              STD 53, RFC 1939,\
    \ DOI 10.17487/RFC1939, May 1996,\n              <http://www.rfc-editor.org/info/rfc1939>.\n\
    \   [PRA]      Lyon, J., \"Purported Responsible Address in E-Mail\n         \
    \     Messages\", RFC 4407, DOI 10.17487/RFC4407, April 2006,\n              <http://www.rfc-editor.org/info/rfc4407>.\n\
    \   [RFC5451]  Kucherawy, M., \"Message Header Field for Indicating\n        \
    \      Message Authentication Status\", RFC 5451,\n              DOI 10.17487/RFC5451,\
    \ April 2009,\n              <http://www.rfc-editor.org/info/rfc5451>.\n   [RFC6008]\
    \  Kucherawy, M., \"Authentication-Results Registration for\n              Differentiating\
    \ among Cryptographic Results\", RFC 6008,\n              DOI 10.17487/RFC6008,\
    \ September 2010,\n              <http://www.rfc-editor.org/info/rfc6008>.\n \
    \  [RFC6577]  Kucherawy, M., \"Authentication-Results Registration Update\n  \
    \            for Sender Policy Framework (SPF) Results\", RFC 6577,\n        \
    \      DOI 10.17487/RFC6577, March 2012,\n              <http://www.rfc-editor.org/info/rfc6577>.\n\
    \   [RFC7001]  Kucherawy, M., \"Message Header Field for Indicating\n        \
    \      Message Authentication Status\", RFC 7001,\n              DOI 10.17487/RFC7001,\
    \ September 2013,\n              <http://www.rfc-editor.org/info/rfc7001>.\n \
    \  [RFC7410]  Kucherawy, M., \"A Property Types Registry for the\n           \
    \   Authentication-Results Header Field\", RFC 7410,\n              DOI 10.17487/RFC7410,\
    \ December 2014,\n              <http://www.rfc-editor.org/info/rfc7410>.\n  \
    \ [RRVS]     Mills, W. and M. Kucherawy, \"The Require-Recipient-Valid-\n    \
    \          Since Header Field and SMTP Service Extension\", RFC 7293,\n      \
    \        DOI 10.17487/RFC7293, July 2014,\n              <http://www.rfc-editor.org/info/rfc7293>.\n\
    \   [SECURITY] Rescorla, E. and B. Korver, \"Guidelines for Writing RFC\n    \
    \          Text on Security Considerations\", BCP 72, RFC 3552,\n            \
    \  DOI 10.17487/RFC3552, July 2003,\n              <http://www.rfc-editor.org/info/rfc3552>.\n\
    \   [SENDERID] Lyon, J. and M. Wong, \"Sender ID: Authenticating E-Mail\",\n \
    \             RFC 4406, DOI 10.17487/RFC4406, April 2006,\n              <http://www.rfc-editor.org/info/rfc4406>.\n\
    \   [SMIME-REG]\n              Melnikov, A., \"Authentication-Results Registration\
    \ for\n              S/MIME Signature Verification\", RFC 7281,\n            \
    \  DOI 10.17487/RFC7281, June 2014,\n              <http://www.rfc-editor.org/info/rfc7281>.\n\
    \   [SPF]      Kitterman, S., \"Sender Policy Framework (SPF) for\n          \
    \    Authorizing Use of Domains in Email, Version 1\", RFC 7208,\n           \
    \   DOI 10.17487/RFC7208, April 2014,\n              <http://www.rfc-editor.org/info/rfc7208>.\n\
    \   [VBR]      Hoffman, P., Levine, J., and A. Hathcock, \"Vouch By\n        \
    \      Reference\", RFC 5518, DOI 10.17487/RFC5518, April 2009,\n            \
    \  <http://www.rfc-editor.org/info/rfc5518>.\n"
- title: Appendix A.  Legacy MUAs
  contents:
  - "Appendix A.  Legacy MUAs\n   Implementers of this protocol should be aware that\
    \ many MUAs are\n   unlikely to be retrofitted to support the new header field\
    \ and its\n   semantics.  In the interests of convenience and quicker adoption,\
    \ a\n   delivery MTA might want to consider adding things that are processed\n\
    \   by existing MUAs in addition to the Authentication-Results header\n   field.\
    \  One suggestion is to include a Priority header field, on\n   messages that\
    \ don't already have such a header field, containing a\n   value that reflects\
    \ the strength of the authentication that was\n   accomplished, e.g., \"low\"\
    \ for weak or no authentication, \"normal\" or\n   \"high\" for good or strong\
    \ authentication.\n   Some modern MUAs can already filter based on the content\
    \ of this\n   header field.  However, there is keen interest in having MUAs make\n\
    \   some kind of graphical representation of this header field's meaning\n   to\
    \ end users.  Until this capability is added (i.e., while this\n   proposal and\
    \ its successors are being adopted), other interim means\n   of conveying authentication\
    \ results may be necessary.\n"
- title: Appendix B.  Authentication-Results Examples
  contents:
  - "Appendix B.  Authentication-Results Examples\n   This section presents some examples\
    \ of the use of this header field\n   to indicate authentication results.\n"
- title: B.1.  Trivial Case; Header Field Not Present
  contents:
  - "B.1.  Trivial Case; Header Field Not Present\n   The trivial case:\n        Received:\
    \ from mail-router.example.com\n                      (mail-router.example.com\
    \ [192.0.2.1])\n                  by server.example.org (8.11.6/8.11.6)\n    \
    \                  with ESMTP id g1G0r1kA003489;\n                  Fri, Feb 15\
    \ 2002 17:19:07 -0800\n        From: sender@example.com\n        Date: Fri, Feb\
    \ 15 2002 16:54:30 -0800\n        To: receiver@example.org\n        Message-Id:\
    \ <12345.abc@example.com>\n        Subject: here's a sample\n        Hello!  Goodbye!\n\
    \                          Example 1: Trivial Case\n   The Authentication-Results\
    \ header field is completely absent.  The\n   MUA may make no conclusion about\
    \ the validity of the message.  This\n   could be the case because the message\
    \ authentication services were\n   not available at the time of delivery, or no\
    \ service is provided, or\n   the MTA is not in compliance with this specification.\n"
- title: B.2.  Nearly Trivial Case; Service Provided, but No Authentication Done
  contents:
  - "B.2.  Nearly Trivial Case; Service Provided, but No Authentication Done\n   A\
    \ message that was delivered by an MTA that conforms to this\n   specification\
    \ but provides no actual message authentication service:\n        Authentication-Results:\
    \ example.org 1; none\n        Received: from mail-router.example.com\n      \
    \                (mail-router.example.com [192.0.2.1])\n                  by server.example.org\
    \ (8.11.6/8.11.6)\n                      with ESMTP id g1G0r1kA003489;\n     \
    \             Fri, Feb 15 2002 17:19:07 -0800\n        From: sender@example.com\n\
    \        Date: Fri, Feb 15 2002 16:54:30 -0800\n        To: receiver@example.org\n\
    \        Message-Id: <12345.abc@example.com>\n        Subject: here's a sample\n\
    \        Hello!  Goodbye!\n           Example 2: Header Present but No Authentication\
    \ Done\n   The Authentication-Results header field is present, showing that the\n\
    \   delivering MTA conforms to this specification.  It used its DNS\n   domain\
    \ name as the authserv-id.  The presence of \"none\" (and the\n   absence of any\
    \ method or result tokens) indicates that no message\n   authentication was done.\
    \  The version number of the specification to\n   which the field's content conforms\
    \ is explicitly provided.\n"
- title: B.3.  Service Provided, Authentication Done
  contents:
  - "B.3.  Service Provided, Authentication Done\n   A message that was delivered\
    \ by an MTA that conforms to this\n   specification and applied some message authentication:\n\
    \        Authentication-Results: example.com;\n                  spf=pass smtp.mailfrom=example.net\n\
    \        Received: from dialup-1-2-3-4.example.net\n                      (dialup-1-2-3-4.example.net\
    \ [192.0.2.200])\n                  by mail-router.example.com (8.11.6/8.11.6)\n\
    \                      with ESMTP id g1G0r1kA003489;\n                  Fri, Feb\
    \ 15 2002 17:19:07 -0800\n        From: sender@example.net\n        Date: Fri,\
    \ Feb 15 2002 16:54:30 -0800\n        To: receiver@example.com\n        Message-Id:\
    \ <12345.abc@example.net>\n        Subject: here's a sample\n        Hello!  Goodbye!\n\
    \                    Example 3: Header Reporting Results\n   The Authentication-Results\
    \ header field is present, indicating that\n   the border MTA conforms to this\
    \ specification.  The authserv-id is\n   once again the DNS domain name.  Furthermore,\
    \ the message was\n   authenticated by that MTA via the method specified in [SPF].\
    \  Note\n   that since that method cannot authenticate the local-part, it has\n\
    \   been omitted from the result's value.  The MUA could extract and\n   relay\
    \ this extra information if desired.\n"
- title: B.4.  Service Provided, Several Authentications Done, Single MTA
  contents:
  - "B.4.  Service Provided, Several Authentications Done, Single MTA\n   A message\
    \ that was relayed inbound via a single MTA that conforms to\n   this specification\
    \ and applied three different message authentication\n   checks:\n        Authentication-Results:\
    \ example.com;\n                  auth=pass (cram-md5) smtp.auth=sender@example.net;\n\
    \                  spf=pass smtp.mailfrom=example.net\n        Authentication-Results:\
    \ example.com;\n                  sender-id=pass header.from=example.net\n   \
    \     Received: from dialup-1-2-3-4.example.net (8.11.6/8.11.6)\n            \
    \          (dialup-1-2-3-4.example.net [192.0.2.200])\n                  by mail-router.example.com\
    \ (8.11.6/8.11.6)\n                      with ESMTPA id g1G0r1kA003489;\n    \
    \              Fri, Feb 15 2002 17:19:07 -0800\n        Date: Fri, Feb 15 2002\
    \ 16:54:30 -0800\n        To: receiver@example.com\n        From: sender@example.net\n\
    \        Message-Id: <12345.abc@example.net>\n        Subject: here's a sample\n\
    \        Hello!  Goodbye!\n             Example 4: Headers Reporting Results from\
    \ One MTA\n   The Authentication-Results header field is present, indicating that\n\
    \   the delivering MTA conforms to this specification.  Once again, the\n   receiving\
    \ DNS domain name is used as the authserv-id.  Furthermore,\n   the sender authenticated\
    \ herself/himself to the MTA via a method\n   specified in [AUTH], and both SPF\
    \ and Sender ID checks were done and\n   passed.  The MUA could extract and relay\
    \ this extra information if\n   desired.\n   Two Authentication-Results header\
    \ fields are not required since the\n   same host did all of the checking.  The\
    \ authenticating agent could\n   have consolidated all the results into one header\
    \ field.\n   This example illustrates a scenario in which a remote user on a dial-\n\
    \   up connection (example.net) sends mail to a border MTA (example.com)\n   using\
    \ SMTP authentication to prove identity.  The dial-up provider\n   has been explicitly\
    \ authorized to relay mail as example.com,\n   producing \"pass\" results from\
    \ the SPF and Sender ID checks.\n"
- title: B.5.  Service Provided, Several Authentications Done, Different MTAs
  contents:
  - "B.5.  Service Provided, Several Authentications Done, Different MTAs\n   A message\
    \ that was relayed inbound by two different MTAs that conform\n   to this specification\
    \ and applied multiple message authentication\n   checks:\n        Authentication-Results:\
    \ example.com;\n                  sender-id=fail header.from=example.com;\n  \
    \                dkim=pass (good signature) header.d=example.com\n        Received:\
    \ from mail-router.example.com\n                      (mail-router.example.com\
    \ [192.0.2.1])\n                  by auth-checker.example.com (8.11.6/8.11.6)\n\
    \                      with ESMTP id i7PK0sH7021929;\n                  Fri, Feb\
    \ 15 2002 17:19:22 -0800\n        DKIM-Signature:  v=1; a=rsa-sha256; s=gatsby;\
    \ d=example.com;\n                  t=1188964191; c=simple/simple; h=From:Date:To:Subject:\n\
    \                  Message-Id:Authentication-Results;\n                  bh=sEuZGD/pSr7ANysbY3jtdaQ3Xv9xPQtS0m70;\n\
    \                  b=EToRSuvUfQVP3Bkz ... rTB0t0gYnBVCM=\n        Authentication-Results:\
    \ example.com;\n                  auth=pass (cram-md5) smtp.auth=sender@example.com;\n\
    \                  spf=fail smtp.mailfrom=example.com\n        Received: from\
    \ dialup-1-2-3-4.example.net\n                      (dialup-1-2-3-4.example.net\
    \ [192.0.2.200])\n                  by mail-router.example.com (8.11.6/8.11.6)\n\
    \                      with ESMTPA id g1G0r1kA003489;\n                  Fri,\
    \ Feb 15 2002 17:19:07 -0800\n        From: sender@example.com\n        Date:\
    \ Fri, Feb 15 2002 16:54:30 -0800\n        To: receiver@example.com\n        Message-Id:\
    \ <12345.abc@example.com>\n        Subject: here's a sample\n        Hello!  Goodbye!\n\
    \          Example 5: Headers Reporting Results from Multiple MTAs\n   The Authentication-Results\
    \ header field is present, indicating\n   conformance to this specification. \
    \ Once again, the authserv-id used\n   is the recipient's DNS domain name.  The\
    \ header field is present\n   twice because two different MTAs in the chain of\
    \ delivery did\n   authentication tests.  The first MTA, mail-router.example.com,\n\
    \   reports that SMTP AUTH and SPF were both used and that the former\n   passed\
    \ while the latter failed.  In the SMTP AUTH case, additional\n   information\
    \ is provided in the comment field, which the MUA can\n   choose to render if\
    \ desired.\n   The second MTA, auth-checker.example.com, reports that it did a\n\
    \   Sender ID test (which failed) and a DKIM test (which passed).  Again,\n  \
    \ additional data about one of the tests is provided as a comment,\n   which the\
    \ MUA may choose to render.  Also noteworthy here is the fact\n   that there is\
    \ a DKIM signature added by example.com that assured the\n   integrity of the\
    \ lower Authentication-Results field.\n   Since different hosts did the two sets\
    \ of authentication checks, the\n   header fields cannot be consolidated in this\
    \ example.\n   This example illustrates more typical transmission of mail into\n\
    \   example.com from a user on a dial-up connection example.net.  The\n   user\
    \ appears to be legitimate as he/she had a valid password allowing\n   authentication\
    \ at the border MTA using SMTP AUTH.  The SPF and Sender\n   ID tests failed since\
    \ example.com has not granted example.net\n   authority to relay mail on its behalf.\
    \  However, the DKIM test passed\n   because the sending user had a private key\
    \ matching one of\n   example.com's published public keys and used it to sign\
    \ the message.\n"
- title: B.6.  Service Provided, Multi-tiered Authentication Done
  contents:
  - "B.6.  Service Provided, Multi-tiered Authentication Done\n   A message that had\
    \ authentication done at various stages, one of\n   which was outside the receiving\
    \ ADMD:\n        Authentication-Results: example.com;\n              dkim=pass\
    \ reason=\"good signature\"\n                header.i=@mail-router.example.net;\n\
    \              dkim=fail reason=\"bad signature\"\n                header.i=@newyork.example.com\n\
    \        Received: from mail-router.example.net\n                  (mail-router.example.net\
    \ [192.0.2.250])\n              by chicago.example.com (8.11.6/8.11.6)\n     \
    \             for <recipient@chicago.example.com>\n                  with ESMTP\
    \ id i7PK0sH7021929;\n              Fri, Feb 15 2002 17:19:22 -0800\n        DKIM-Signature:\
    \ v=1; a=rsa-sha256; s=furble;\n              d=mail-router.example.net; t=1188964198;\
    \ c=relaxed/simple;\n              h=From:Date:To:Message-Id:Subject:Authentication-Results;\n\
    \              bh=ftA9J6GtX8OpwUECzHnCkRzKw1uk6FNiLfJl5Nmv49E=;\n            \
    \  b=oINEO8hgn/gnunsg ... 9n9ODSNFSDij3=\n        Authentication-Results: example.net;\n\
    \              dkim=pass (good signature) header.i=@newyork.example.com\n    \
    \    Received: from smtp.newyork.example.com\n                  (smtp.newyork.example.com\
    \ [192.0.2.220])\n              by mail-router.example.net (8.11.6/8.11.6)\n \
    \                 with ESMTP id g1G0r1kA003489;\n              Fri, Feb 15 2002\
    \ 17:19:07 -0800\n        DKIM-Signature: v=1; a=rsa-sha256; s=gatsby;\n     \
    \         d=newyork.example.com;\n              t=1188964191; c=simple/simple;\n\
    \              h=From:Date:To:Message-Id:Subject;\n              bh=sEu28nfs9fuZGD/pSr7ANysbY3jtdaQ3Xv9xPQtS0m7=;\n\
    \              b=EToRSuvUfQVP3Bkz ... rTB0t0gYnBVCM=\n        From: sender@newyork.example.com\n\
    \        Date: Fri, Feb 15 2002 16:54:30 -0800\n        To: meetings@example.net\n\
    \        Message-Id: <12345.abc@newyork.example.com>\n        Subject: here's\
    \ a sample\n        Example 6: Headers Reporting Results from Multiple MTAs in\n\
    \                              Different ADMDs\n   In this example, we see multi-tiered\
    \ authentication with an extended\n   trust boundary.\n   The message was sent\
    \ from someone at example.com's New York office\n   (newyork.example.com) to a\
    \ mailing list managed at an intermediary.\n   The message was signed at the origin\
    \ using DKIM.\n   The message was sent to a mailing list service provider called\n\
    \   example.net, which is used by example.com.  There,\n   meetings@example.net\
    \ is expanded to a long list of recipients, one of\n   whom is at the Chicago\
    \ office.  In this example, we will assume that\n   the trust boundary for chicago.example.com\
    \ includes the mailing list\n   server at example.net.\n   The mailing list server\
    \ there first authenticated the message and\n   affixed an Authentication-Results\
    \ header field indicating such using\n   its DNS domain name for the authserv-id.\
    \  It then altered the message\n   by affixing some footer text to the body, including\
    \ some\n   administrivia such as unsubscription instructions.  Finally, the\n\
    \   mailing list server affixes a second DKIM signature and begins\n   distribution\
    \ of the message.\n   The border MTA for chicago.example.com explicitly trusts\
    \ results from\n   mail-router.example.net, so that header field is not removed.\
    \  It\n   performs evaluation of both signatures and determines that the first\n\
    \   (most recent) is a \"pass\" but, because of the aforementioned\n   modifications,\
    \ the second is a \"fail\".  However, the first signature\n   included the Authentication-Results\
    \ header added at mail-\n   router.example.net that validated the second signature.\
    \  Thus,\n   indirectly, it can be determined that the authentications claimed\
    \ by\n   both signatures are indeed valid.\n   Note that two styles of presenting\
    \ metadata about the result are in\n   use here.  In one case, the \"reason=\"\
    \ clause is present, which is\n   intended for easy extraction by parsers; in\
    \ the other case, the CFWS\n   production of the ABNF is used to include such\
    \ data as a header field\n   comment.  The latter can be harder for parsers to\
    \ extract given the\n   varied supported syntaxes of mail header fields.\n"
- title: B.7.  Comment-Heavy Example
  contents:
  - "B.7.  Comment-Heavy Example\n   The formal syntax permits comments within the\
    \ content in a number of\n   places.  For the sake of illustration, this example\
    \ is also legal:\n       Authentication-Results: foo.example.net (foobar) 1 (baz);\n\
    \           dkim (Because I like it) / 1 (One yay) = (wait for it) fail\n    \
    \         policy (A dot can go here) . (like that) expired\n             (this\
    \ surprised me) = (as I wasn't expecting it) 1362471462\n        Example 7: A\
    \ Very Comment-Heavy but Perfectly Legal Example\n"
- title: Appendix C.  Operational Considerations about Message Authentication
  contents:
  - "Appendix C.  Operational Considerations about Message Authentication\n   This\
    \ protocol is predicated on the idea that authentication (and\n   presumably in\
    \ the future, reputation) work is typically done by\n   border MTAs rather than\
    \ MUAs or intermediate MTAs; the latter merely\n   make use of the results determined\
    \ by the former.  Certainly this is\n   not mandatory for participation in electronic\
    \ mail or message\n   authentication, but this protocol and its deployment to\
    \ date are\n   based on that model.  The assumption satisfies several common ADMD\n\
    \   requirements:\n   1.  Service operators prefer to resolve the handling of\
    \ problem\n       messages as close to the border of the ADMD as possible.  This\n\
    \       enables, for example, rejection of messages at the SMTP level\n      \
    \ rather than generating a DSN internally.  Thus, doing any of the\n       authentication\
    \ or reputation work exclusively at the MUA or\n       intermediate MTA renders\
    \ this desire unattainable.\n   2.  Border MTAs are more likely to have direct\
    \ access to external\n       sources of authentication or reputation information\
    \ since modern\n       MUAs are more likely to be heavily firewalled.  Thus, some\
    \ MUAs\n       might not even be able to complete the task of performing\n   \
    \    authentication or reputation evaluations without complex proxy\n       configurations\
    \ or similar burdens.\n   3.  MUAs rely upon the upstream MTAs within their trust\
    \ boundaries to\n       make correct (as much as is possible) evaluations about\
    \ the\n       message's envelope, header, and content.  Thus, MUAs don't need\n\
    \       to know how to do the work that upstream MTAs do; they only need\n   \
    \    the results of that work.\n   4.  Evaluations about the quality of a message,\
    \ from simple token\n       matching (e.g., a list of preferred DNS domains) to\
    \ cryptanalysis\n       (e.g., public/private key work), do have a cost and thus\
    \ need to\n       be minimized.  To that end, performing those tests at the border\n\
    \       MTA is far preferred to doing that work at each MUA that handles\n   \
    \    a message.  If an ADMD's environment adheres to common messaging\n      \
    \ protocols, a reputation query or an authentication check\n       performed by\
    \ a border MTA would return the same result as the\n       same query performed\
    \ by an MUA.  By contrast, in an environment\n       where the MUA does the work,\
    \ a message arriving for multiple\n       recipients would thus cause authentication\
    \ or reputation\n       evaluation to be done more than once for the same message\
    \ (i.e.,\n       at each MUA), causing needless amplification of resource use\
    \ and\n       creating a possible denial-of-service attack vector.\n   5.  Minimizing\
    \ change is good.  As new authentication and reputation\n       methods emerge,\
    \ the list of methods supported by this header\n       field would presumably\
    \ be extended.  If MUAs simply consume the\n       contents of this header field\
    \ rather than actually attempt to do\n       authentication and/or reputation\
    \ work, then MUAs only need to\n       learn to parse this header field once;\
    \ emergence of new methods\n       requires only a configuration change at the\
    \ MUAs and software\n       changes at the MTAs (which are presumably fewer in\
    \ number).  When\n       choosing to implement these functions in MTAs vs. MUAs,\
    \ the\n       issues of individual flexibility, infrastructure inertia, and\n\
    \       scale of effort must be considered.  It is typically easier to\n     \
    \  change a single MUA than an MTA because the modification affects\n       fewer\
    \ users and can be pursued with less care.  However, changing\n       many MUAs\
    \ is more effort than changing a smaller number of MTAs.\n   6.  For decisions\
    \ affecting message delivery and display, assessment\n       based on authentication\
    \ and reputation is best performed close to\n       the time of message transit,\
    \ as a message makes its journey\n       toward a user's inbox, not afterwards.\
    \  DKIM keys and IP address\n       reputations, etc., can change over time or\
    \ even become invalid,\n       and users can take a long time to read a message\
    \ once delivered.\n       The value of this work thus degrades, perhaps quickly,\
    \ once the\n       delivery process has completed.  This seriously diminishes\
    \ the\n       value of this work when done elsewhere than at MTAs.\n   Many operational\
    \ choices are possible within an ADMD, including the\n   venue for performing\
    \ authentication and/or reputation assessment.\n   The current specification does\
    \ not dictate any of those choices.\n   Rather, it facilitates those cases in\
    \ which information produced by\n   one stage of analysis needs to be transported\
    \ with the message to the\n   next stage.\n"
- title: Appendix D.  Changes since RFC 7001
  contents:
  - "Appendix D.  Changes since RFC 7001\n   o  Applied RFC 7410.\n   o  Updated all\
    \ references to RFC 4408 with RFC 7208.\n   o  Added section explaining \"property\"\
    \ values.  (Addressed Erratum\n      #4201.)\n   o  Did some minor text reorganization.\n\
    \   o  Gave registry history -- enough that this is now the authoritative\n  \
    \    registry definition.\n   o  Added text explaining each of the method-ptype-property\
    \ tuples\n      registered by this document.\n   o  Changed the meaning of the\
    \ \"Defined\" column of the methods\n      registry to be the place where each\
    \ entry was created and\n      described; it is expected that this will then refer\
    \ to the\n      method's defining document.  Provided IANA with corresponding\n\
    \      update instructions.\n   o  Cleaned up registry structure and content,\
    \ and replaced all\n      references to RFC 7001 with pointers to this document.\n\
    \   o  Added references: [DMARC], [PRA], [RFC6008], [RFC6577], [RRVS],\n     \
    \ [SMIME-REG].\n   o  Added description of values that can be extracted from SMTP\
    \ AUTH\n      sessions and an example.\n   o  Provided much more complete descriptions\
    \ of reporting DomainKeys\n      results.\n   o  Added more detail about Sender\
    \ ID.\n   o  Marked all ADSP and DomainKeys entries as deprecated since their\n\
    \      defining documents are as well.\n   o  Reworked some text around ignoring\
    \ unknown ptypes.\n   o  Completely described the ptypes registry.\n   o  Mentioned\
    \ that EHLO is mapped to HELO for SPF.\n   o  RFC 7208 uses all-lowercase result\
    \ strings now, so adjusted prose\n      accordingly.\n   o  Updated list of supported\
    \ methods, and mentioned the registries\n      immediately below.\n   o  Mentioned\
    \ that when a local-part is removed, the \"@\" goes with it.\n   o  Referred to\
    \ RFC 7328 in the \"iprev\" definition.\n   o  Corrected the \"smime-part\" prose.\n\
    \   o  Updated examples that use SMTP AUTH to claim \"with ESMTPA\" in the\n \
    \     Received fields.\n   o  Made minor editorial adjustments.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The author wishes to acknowledge the following individuals\
    \ for their\n   review and constructive criticism of this document: Stephane\n\
    \   Bortzmeyer, Scott Kitterman, John Levine, Tom Petch, and Pete\n   Resnick.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Murray S. Kucherawy\n   270 Upland Drive\n   San Francisco,\
    \ CA  94127\n   United States\n   Email: superuser@gmail.com\n"
