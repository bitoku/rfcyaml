- title: __initial_text__
  contents:
  - "                Internet X.509 Public Key Infrastructure\n                  \
    \   Operational Protocols - LDAPv2\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   The protocol described in this document is designed to satisfy\
    \ some\n   of the operational requirements within the Internet X.509 Public Key\n\
    \   Infrastructure (IPKI).  Specifically, this document addresses\n   requirements\
    \ to provide access to Public Key Infrastructure (PKI)\n   repositories for the\
    \ purposes of retrieving PKI information and\n   managing that same information.\
    \  The mechanism described in this\n   document is based on the Lightweight Directory\
    \ Access Protocol (LDAP)\n   v2, defined in RFC 1777, defining a profile of that\
    \ protocol for use\n   within the IPKI and updates encodings for certificates\
    \ and revocation\n   lists from RFC 1778. Additional mechanisms addressing PKIX\n\
    \   operational requirements are specified in separate documents.\n   The key\
    \ words 'MUST', 'REQUIRED', 'SHOULD', 'RECOMMENDED', and 'MAY'\n   in this document\
    \ are to be interpreted as described in RFC 2119.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   This specification is part of a multi-part standard for\
    \ development\n   of a Public Key Infrastructure (PKI) for the Internet. This\n\
    \   specification addresses requirements to provide retrieval of X.509\n   PKI\
    \ information, including certificates and CRLs from a repository.\n   This specification\
    \ also addresses requirements to add, delete and\n   modify PKI information in\
    \ a repository. A profile based on the LDAP\n   version 2 protocol is provided\
    \ to satisfy these requirements.\n"
- title: 3.  Model
  contents:
  - "3.  Model\n   The PKI components, as defined in PKIX Part 1, which are involved\
    \ in\n   PKIX operational protocol interactions include:\n      -  End Entities\n\
    \      -  Certification Authorities (CA)\n      -  Repository\n   End entities\
    \ and CAs using LDAPv2, retrieve PKI information from the\n   repository using\
    \ a subset of the LDAPv2 protocol.\n   CAs populate the repository with PKI information\
    \ using a subset of\n   the LDAPv2 protocol.\n"
- title: 4.  Lightweight Directory Access Protocol (LDAP)
  contents:
  - "4.  Lightweight Directory Access Protocol (LDAP)\n   The following sections examine\
    \ the retrieval of PKI information from\n   a repository and management of PKI\
    \ information in a repository. A\n   profile of the LDAPv2 protocol is defined\
    \ for providing these\n   services.\n   Section 5 satisfies the requirement to\
    \ retrieve PKI information (a\n   certificate, CRL, or other information of interest)\
    \ from an entry in\n   the repository, where the retrieving entity (either an\
    \ end entity or\n   a CA) has knowledge of the name of the entry. This is termed\n\
    \   \"repository read\".\n   Section 6 satisfies the same requirement as 5 for\
    \ the situation where\n   the name of the entry is not known, but some other related\n\
    \   information which may optionally be used as a filter against\n   candidate\
    \ entries in the repository, is known.  This is termed\n   \"repository search\"\
    .\n   Section 7 satisfies the requirement of CAs to add, delete and modify\n \
    \  PKI information information (a certificate, CRL, or other information\n   of\
    \ interest)in the repository. This is termed \"repository modify\".\n   The subset\
    \ of LDAPv2 needed to support each of these functions is\n   described below.\
    \  Note that the repository search service is a\n   superset of the repository\
    \ read service in terms of the LDAPv2\n   functionality needed.\n   Note that\
    \ all tags are implicit by default in the ASN.1 definitions\n   that follow.\n"
- title: 5.  LDAP Repository Read
  contents:
  - "5.  LDAP Repository Read\n   To retrieve information from an entry corresponding\
    \ to the subject or\n   issuer name of a certificate, requires a subset of the\
    \ following\n   three LDAP operations:\n     BindRequest (and BindResponse)\n\
    \     SearchRequest (and SearchResponse)\n     UnbindRequest\n   The subset of\
    \ each REQUIRED operation is given below.\n"
- title: 5.1.  Bind
  contents:
  - '5.1.  Bind

    '
- title: 5.1.1.  Bind Request
  contents:
  - "5.1.1.  Bind Request\n   The full LDAP v2 Bind Request is defined in RFC 1777.\n\
    \   An application providing a LDAP repository read service MUST\n   implement\
    \ the following subset of this operation:\n      BindRequest ::=\n        [APPLICATION\
    \ 0] SEQUENCE {\n           version      INTEGER (2),\n           name       \
    \  LDAPDN, -- MUST accept NULL LDAPDN\n           simpleauth [0] OCTET STRING\
    \  -- MUST accept NULL simple\n           }\n   An application providing a LDAP\
    \ repository read service MAY implement\n   other aspects of the BindRequest as\
    \ well.\n   Different services may have different security requirements.  Some\n\
    \   services may allow anonymous search, others may require\n   authentication.\
    \ Those services allowing anonymous search may choose\n   only to allow search\
    \ based on certain criteria and not others.\n   A LDAP repository read service\
    \ SHOULD implement some level of\n   anonymous search access. A LDAP repository\
    \ read service MAY implement\n   authenticated search access.\n"
- title: 5.1.2.  Bind Response
  contents:
  - "5.1.2.  Bind Response\n   The full LDAPv2 BindResponse is described in RFC 1777.\n\
    \   An application providing a LDAP repository read service MUST\n   implement\
    \ this entire protocol element, though only the following\n   error codes may\
    \ be returned from a Bind operation:\n       success                      (0),\n\
    \       operationsError              (1),\n       protocolError              \
    \  (2),\n       authMethodNotSupported       (7),\n       noSuchObject       \
    \          (32),\n       invalidDNSyntax              (34),\n       inappropriateAuthentication\
    \  (48),\n       invalidCredentials           (49),\n       busy             \
    \            (51),\n       unavailable                  (52),\n       unwillingToPerform\
    \           (53),\n       other                        (80)\n"
- title: 5.2.  Search
  contents:
  - '5.2.  Search

    '
- title: 5.2.1.  Search Request
  contents:
  - "5.2.1.  Search Request\n   The full LDAPv2 SearchRequest is defined in RFC 1777.\n\
    \   An application providing a LDAP repository read service MUST\n   implement\
    \ the following subset of the SearchRequest.\n      SearchRequest ::=\n      \
    \  [APPLICATION 3] SEQUENCE {\n           baseObject     LDAPDN,\n           scope\
    \             ENUMERATED {\n                             baseObject   (0),\n \
    \                                       },\n           derefAliases   ENUMERATED\
    \ {\n                             neverDerefAliases   (0),\n                 \
    \                    },\n           sizeLimit      INTEGER (0),\n           timeLimit\
    \      INTEGER (0),\n           attrsOnly      BOOLEAN, -- FALSE only\n      \
    \     filter         Filter,\n           attributes     SEQUENCE OF AttributeType\n\
    \                               }\n      Filter ::=\n        CHOICE {\n      \
    \    present        [7] AttributeType, -- \"objectclass\" only\n             \
    \    }\n   This subset of the LDAPv2 SearchRequest allows the LDAPv2 \"read\"\n\
    \   operation: a base object search with a filter testing for the\n   existence\
    \ of the objectClass attribute.\n   An application providing a LDAP repository\
    \ read service MAY implement\n   other aspects of the SearchRequest as well.\n"
- title: 5.2.2.
  contents:
  - "5.2.2.\n   The full LDAPv2 SearchResponse is defined in RFC 1777.\n   An application\
    \ providing a LDAP repository read service over LDAPv2\n   MUST implement the\
    \ full SearchResponse.\n   Note that in the case of multivalued attributes such\
    \ as\n   userCertificate a SearchResponse containing this attribute will\n   include\
    \ all values, assuming the requester has sufficient access\n   permissions.  The\
    \ application/relying party may need to select an\n   appropriate value to be\
    \ used. Also note that retrieval of a\n   certificate from a named entry does\
    \ not guarantee that the\n   certificate will include that same Distinguished\
    \ Name (DN) and in\n   some cases the subject DN in the certificate may be NULL.\n"
- title: 5.3.  Unbind
  contents:
  - "5.3.  Unbind\n   The full LDAPv2 UnbindRequest is defined in RFC 1777.\n   An\
    \ application providing a LDAP repository read service MUST\n   implement the\
    \ full UnbindRequest.\n"
- title: 6.  LDAP Repository Search
  contents:
  - "6.  LDAP Repository Search\n   To search, using arbitrary criteria, for an entry\
    \ in a repository\n   containing a certificate, CRL, or other information of interest,\n\
    \   requires a subset of the following three LDAP operations:\n     BindRequest\
    \ (and BindResponse)\n     SearchRequest (and SearchResponse)\n     UnbindRequest\n\
    \   The subset of each operation REQUIRED is given below.\n"
- title: 6.1.  Bind
  contents:
  - "6.1.  Bind\n   The BindRequest and BindResponse subsets needed are the same as\
    \ those\n   described in Section 5.1.\n   The full LDAP v2 Bind Request is defined\
    \ in RFC 1777.\n"
- title: 6.2.  Search
  contents:
  - '6.2.  Search

    '
- title: 6.2.1.  Search Request
  contents:
  - "6.2.1.  Search Request\n   The full LDAPv2 SearchRequest is defined in RFC 1777.\n\
    \   An application providing a LDAP repository search service MUST\n   implement\
    \ the following subset of the SearchRequest protocol unit.\n      SearchRequest\
    \ ::=\n        [APPLICATION 3] SEQUENCE {\n           baseObject     LDAPDN,\n\
    \           scope          ENUMERATED {\n                               baseObject\
    \     (0),\n                               singleLevel    (1),\n             \
    \                  wholeSubtree   (2)\n                                     },\n\
    \           derefAliases   ENUMERATED {\n                               neverDerefAliases\
    \     (0),\n                                     },\n           sizeLimit    \
    \  INTEGER (0 .. maxInt),\n           timeLimit      INTEGER (0 .. maxInt),\n\
    \           attrsOnly      BOOLEAN,  -- FALSE only\n           filter        \
    \ Filter,\n           attributes     SEQUENCE OF AttributeType\n             \
    \                   }\n   All aspects of the SearchRequest MUST be supported,\
    \ except for the\n   following:\n   - Only the neverDerefAliases value of derefAliases\
    \ needs to be\n     supported\n   - Only the FALSE value for attrsOnly needs to\
    \ be supported\n   This subset provides a more general search capability.  It\
    \ is a\n   superset of the SearchRequest subset defined in Section 5.2.1. The\n\
    \   elements added to this service are:\n   - singleLevel and wholeSubtree scope\
    \ needs to be supported\n   - sizeLimit is included\n   - timeLimit is included\n\
    \   - Enhanced filter capability\n   An application providing a LDAP repository\
    \ search service MAY\n   implement other aspects of the SearchRequest as well.\n"
- title: 6.2.2.  Search Response
  contents:
  - "6.2.2.  Search Response\n   The full LDAPv2 SearchResponse is defined in RFC\
    \ 1777.\n   An application providing a LDAP repository search service over LDAPv2\n\
    \   MUST implement the full SearchResponse.\n"
- title: 6.3.  Unbind
  contents:
  - "6.3.  Unbind\n   An application providing a LDAP repository search service MUST\n\
    \   implement the full UnbindRequest.\n"
- title: 7.  LDAP Repository Modify
  contents:
  - "7.  LDAP Repository Modify\n   To add, delete and modify PKI information in a\
    \ repository  requires a\n   subset of the following LDAP operations:\n     BindRequest\
    \ (and BindResponse)\n     ModifyRequest (and ModifyResponse)\n     AddRequest\
    \ (and AddResponse)\n     DelRequest (and DelResponse\n     UnbindRequest\n  \
    \ The subset of each operation REQUIRED is given below.\n"
- title: 7.1.  Bind
  contents:
  - "7.1.  Bind\n   The full LDAP v2 Bind Request is defined in RFC 1777.\n   An application\
    \ providing a LDAP repository modify service MUST\n   implement the following\
    \ subset of this operation:\n      BindRequest ::=\n        [APPLICATION 0] SEQUENCE\
    \ {\n           version      INTEGER (2),\n           name         LDAPDN,\n \
    \          simpleauth [0] OCTET STRING\n           }\n   A LDAP repository modify\
    \ service MUST implement authenticated access.\n   The BindResponse subsets needed\
    \ are the same as those described in\n   Section 5.1.2.\n"
- title: 7.2.  Modify
  contents:
  - '7.2.  Modify

    '
- title: 7.2.1.  Modify Request
  contents:
  - "7.2.1.  Modify Request\n   The full LDAPv2 ModifyRequest is defined in RFC 1777.\n\
    \   An application providing a LDAP repository modify service MUST\n   implement\
    \ the following subset of the ModifyRequest protocol unit.\n      ModifyRequest\
    \ ::=\n        [APPLICATION 6] SEQUENCE {\n       object         LDAPDN,\n   \
    \    modification   SEQUENCE OF SEQUENCE {\n                        operation\
    \     ENUMERATED {\n                                        add     (0),\n   \
    \                                     delete  (1)\n                          \
    \            },\n                        modification  SEQUENCE {\n          \
    \                            type   AttributeType,\n                         \
    \             values SET OF\n                                             AttributeValue\n\
    \                                      }\n                      }\n        }\n\
    \   All aspects of the ModifyRequest MUST be supported, except for the\n   following:\n\
    \   - Only the add and delete values of operation need to be supported\n"
- title: 7.2.2.  Modify Response
  contents:
  - "7.2.2.  Modify Response\n   The full LDAPv2 ModifyResponse is defined in RFC\
    \ 1777.\n   An application providing a LDAP repository modify service MUST\n \
    \  implement the full ModifyResponse.\n"
- title: 7.3.  Add
  contents:
  - '7.3.  Add

    '
- title: 7.3.1.  Add Request
  contents:
  - "7.3.1.  Add Request\n   The full LDAPv2 AddRequest is defined in RFC 1777.\n\
    \   An application providing a LDAP repository modify service MUST\n   implement\
    \ the full AddRequest.\n"
- title: 7.3.2.  Add Response
  contents:
  - "7.3.2.  Add Response\n   The full LDAPv2 AddResponse is defined in RFC 1777.\n\
    \   An application providing a LDAP repository modify service MUST\n   implement\
    \ the full AddResponse.\n"
- title: 7.4.  Delete
  contents:
  - '7.4.  Delete

    '
- title: 7.4.1.  Delete Request
  contents:
  - "7.4.1.  Delete Request\n   The full LDAPv2 DelRequest is defined in RFC 1777.\n\
    \   An application providing a LDAP repository modify service MUST\n   implement\
    \ the full DelRequest.\n"
- title: 7.4.2.  Delete Response
  contents:
  - "7.4.2.  Delete Response\n   The full LDAPv2 DelResponse is defined in RFC 1777.\n\
    \   An application providing a LDAP repository modify service MUST\n   implement\
    \ the full DelResponse.\n"
- title: 7.5.  Unbind
  contents:
  - "7.5.  Unbind\n   An application providing a LDAP repository modify service MUST\n\
    \   implement the full UnbindRequest.\n"
- title: 8.  Non-standard attribute value encodings
  contents:
  - "8.  Non-standard attribute value encodings\n   When conveyed in LDAP requests\
    \ and results, attributes defined in\n   X.500 are to be encoded using string\
    \ representations defined in RFC\n   1778, The String Representation of Standard\
    \ Attribute Syntaxes.\n   These string encodings were based on the attribute definitions\
    \ from\n   X.500(1988).  Thus, the string representations of the PKI information\n\
    \   elements are for version 1 certificates and version 1 revocation\n   lists.\
    \  Since this specification uses version 3 certificates and\n   version 2 revocation\
    \ lists, as defined in X.509(1997), the RFC 1778\n   string encoding of these\
    \ attributes is inappropriate.\n   For this reason, these attributes MUST be encoded\
    \ using a syntax\n   similar to the syntax \"Undefined\" from section 2.1 of RFC\
    \ 1778:\n   values of these attributes are encoded as if they were values of type\n\
    \   \"OCTET STRING\", with the string value of the encoding being the DER-\n \
    \  encoding of the value itself.  For example, when writing a\n   userCertificate\
    \ to the repository, the CA generates a DER-encoding of\n   the certificate and\
    \ uses that encoding as the value of the\n   userCertificate attribute in the\
    \ LDAP Modify request.This encoding\n   style is consistent with the encoding\
    \ scheme proposed for LDAPv3,\n   which is now being defined within the IETF.\n\
    \   Note that certificates and revocation lists will be transferred using\n  \
    \ this mechanism rather than the string encodings in RFC 1778 and\n   client systems\
    \ which do not understand this encoding may experience\n   problems with these\
    \ attributes.\n"
- title: 9.  Transport
  contents:
  - "9.  Transport\n   An application providing a LDAP repository read service, LDAP\n\
    \   repository search service, or LDAP repository modify service MUST\n   support\
    \ LDAPv2 transport over TCP, as defined in Section 3.1 of RFC\n   1777.\n   An\
    \ application providing a LDAP repository read service, LDAP\n   repository search\
    \ service, or LDAP repository modify service MAY\n   support LDAPv2 transport\
    \ over other reliable transports as well.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   Since the elements of information which are\
    \ key to the PKI service\n   (certificates and CRLs) are both digitally signed\
    \ pieces of\n   information, additional integrity service is NOT REQUIRED.  As\n\
    \   neither information element need be kept secret and anonymous access\n   to\
    \ such information, for retrieval purposes is generally acceptable,\n   privacy\
    \ service is NOT REQUIRED for information retrieval requests.\n   CAs have additional\
    \ requirements, including modification of PKI\n   information.  Simple authentication\
    \ alone is not sufficient for these\n   purposes. It is RECOMMENDED that some\
    \ stronger means of\n   authentication and/or (if simple authentication is used)\
    \ some means\n   of protecting the privacy of the password is used, (e.g.  accept\n\
    \   modifications only via physically secure networks, use IPsec, use SSH\n  \
    \ or TLS or SSL tunnel). Without such authentication, it is possible\n   that\
    \ a denial-of-service attack could occur where the attacker\n   replaces valid\
    \ certificates with bogus ones.\n   For the LDAP repository modify service, profiled\
    \ in section 7, there\n   are some specific security considerations with respect\
    \ to access\n   control. These controls apply to a repository which is under the\
    \ same\n   management control as the CA. Organizations operating directories are\n\
    \   NOT REQUIRED to provide external CAs access permission to their\n   directories.\n\
    \   The CA MUST have access control permissions allowing it to:\n      For CA\
    \ entries:\n         - add, modify and delete all PKI attributes for its own\n\
    \           directory entry;\n         - add, modify and delete all values of\
    \ these attributes.\n      For CRL distribution point entries (if used):\n   \
    \      - create, modify and delete entries of object class\n           cRLDistributionPoint\
    \ immediately subordinate to its own\n           entry;\n         - add, modify\
    \ and delete all attributes, and all values of\n           these attributes for\
    \ these entries.\n      For subscriber (end-entity) entries:\n         - add,\
    \ modify and delete the attribute userCertificate and all\n           values of\
    \ that attribute, issued by this CA to/from these\n           entries.\n   The\
    \ CA is the ONLY entity with these permissions.\n   An application providing LDAP\
    \ repository read, LDAP repository\n   search, or LDAP repository modify service\
    \ as defined in this\n   specification is NOT REQUIRED to implement any additional\
    \ security\n   features other than those described herein, however an implementation\n\
    \   SHOULD do so.\n"
- title: 11.  References
  contents:
  - "11.  References\n   [1]  Yeong, Y., Howes, T. and S. Kille, \"Lightweight Directory\
    \ Access\n        Protocol\", RFC 1777, March 1995.\n   [2]  Howes, T., Kille,\
    \ S., Yeong, W. and C. Robbins, \"The String\n        Representation of Standard\
    \ Attribute Syntaxes\", RFC 1778, March\n        1995.\n   [3]  Bradner, S., \"\
    Key Words for use in RFCs to Indicate Requirement\n        Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n"
- title: 12.  Authors' Addresses
  contents:
  - "12.  Authors' Addresses\n   Sharon Boeyen\n   Entrust Technologies Limited\n\
    \   750 Heron Road\n   Ottawa, Ontario\n   Canada K1V 1A7\n   EMail: sharon.boeyen@entrust.com\n\
    \   Tim Howes\n   Netscape Communications Corp.\n   501 E. Middlefield Rd.\n \
    \  Mountain View, CA 94043\n   USA\n   EMail: howes@netscape.com\n   Patrick Richard\n\
    \   Xcert Software Inc.\n   Suite 1001, 701 W. Georgia Street\n   P.O. Box 10145\n\
    \   Pacific Centre\n   Vancouver, B.C.\n   Canada V7Y 1C6\n   EMail: patr@xcert.com\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
