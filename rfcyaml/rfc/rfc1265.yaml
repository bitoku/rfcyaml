- title: __initial_text__
  contents:
  - '                         BGP Protocol Analysis

    '
- title: 1. Status of this Memo.
  contents:
  - "1. Status of this Memo.\n   This memo provides information for the Internet community.\
    \ It does\n   not specify an Internet standard. Distribution of this memo is\n\
    \   unlimited.\n"
- title: 2. Introduction.
  contents:
  - "2. Introduction.\n   The purpose of this report is to document how the requirements\
    \ for\n   advancing a routing protocol to Draft Standard have been satisfied by\n\
    \   the Border Gateway Protocol (BGP). This report summarizes the key\n   feature\
    \ of BGP, and analyzes the protocol with respect to scaling and\n   performance.\
    \ This is the first of two reports on the BGP protocol.\n   BGP is an inter-autonomous\
    \ system routing protocol designed for the\n   TCP/IP internets.  Version 1 of\
    \ the BGP protocol was published in RFC\n   1105. Since then BGP versions 2 and\
    \ 3 have been developed.  Version 2\n   was documented in RFC 1163. Version 3\
    \ is documented in [1]. The\n   changes between versions 1, 2 and 3 are explained\
    \ in Appendix 3 of\n   [1].\n   Possible applications of BGP in the Internet are\
    \ documented in [2].\n   Please send comments to iwg@rice.edu.\n"
- title: 3. Acknowledgements.
  contents:
  - "3. Acknowledgements.\n   The BGP protocol has been developed by the IWG/BGP Working\
    \ Group of\n   the Internet Engineering Task Force. We would like to express our\n\
    \   deepest thanks to Guy Almes (Rice University) who was the previous\n   chairman\
    \ of the IWG Working Group.  We also like to explicitly thank\n   Bob Braden (ISI)\
    \ and Bob Hinden (BBN) for the review of this document\n   as well as their constructive\
    \ and valuable comments.\n"
- title: 4. Key features and algorithms of the BGP protocol.
  contents:
  - "4. Key features and algorithms of the BGP protocol.\n   This section summarizes\
    \ the key features and algorithms of the BGP\n   protocol. BGP is an inter-autonomous\
    \ system routing protocol; it is\n   designed to be used between multiple autonomous\
    \ systems. BGP assumes\n   that routing within an autonomous system is done by\
    \ an intra-\n   autonomous system routing protocol. BGP does not make any assumptions\n\
    \   about intra-autonomous system routing protocols employed by the\n   various\
    \ autonomous systems.  Specifically, BGP does not require all\n   autonomous systems\
    \ to run the same intra-autonomous system routing\n   protocol.\n   BGP is a real\
    \ inter-autonomous system routing protocol. It imposes no\n   constraints on the\
    \ underlying Internet topology. The information\n   exchanged via BGP is sufficient\
    \ to construct a graph of autonomous\n   systems connectivity from which routing\
    \ loops may be pruned and some\n   routing policy decisions at the autonomous\
    \ system level may be\n   enforced.\n   The key feature of the protocol is the\
    \ notion of Path Attributes.\n   This feature provides BGP with flexibility and\
    \ expandability. Path\n   attributes are partitioned into well-known and optional.\
    \ The\n   provision for optional attributes allows experimentation that may\n\
    \   involve a group of BGP routers without affecting the rest of the\n   Internet.\
    \  New optional attributes can be added to the protocol in\n   much the same fashion\
    \ as new options are added to the Telnet\n   protocol, for instance.  One of the\
    \ most important path attributes is\n   the AS-PATH. As reachability information\
    \ traverses the Internet, this\n   information is augmented by the list of autonomous\
    \ systems that have\n   been traversed thusfar, forming the AS-PATH.  The AS-PATH\
    \ allows\n   straightforward suppression of the looping of routing information.\
    \ In\n   addition, the AS-PATH serves as a powerful and versatile mechanism\n\
    \   for policy-based routing.\n   BGP uses an algorithm that cannot be classified\
    \ as either a pure\n   distance vector, or a pure link state. Carrying a complete\
    \ AS path in\n   the AS-PATH attribute allows to reconstruct large portions of\
    \ the\n   overall topology. That makes it similar to the link state algorithms.\n\
    \   Exchanging only the currently used routes between the peers makes it\n   similar\
    \ to the distance vector algorithms.\n   To conserve bandwidth and processing\
    \ power, BGP uses incremental\n   updates, where after the initial exchange of\
    \ complete routing\n   information, a pair of BGP routers exchanges only changes\
    \ (deltas) to\n   that information. Technique of incremental updates requires\
    \ reliable\n   transport between a pair of BGP routers. To achieve this\n   functionality\
    \ BGP uses TCP as its transport.\n   BGP is a self-contained protocol. That is,\
    \ it specifies how routing\n   information is exchanged both between BGP speakers\
    \ in different\n   autonomous systems, and between BGP speakers within a single\n\
    \   autonomous system.\n   To allow graceful coexistence with EGP, BGP provides\
    \ support for\n   carrying EGP derived exterior routes. BGP also allows to carry\n\
    \   statically defined exterior routes.\n"
- title: 5. BGP performance characteristics and scalability.
  contents:
  - "5. BGP performance characteristics and scalability.\n   In this section we'll\
    \ try to answer the question of how much link\n   bandwidth, router memory and\
    \ router CPU cycles does the BGP protocol\n   consume under normal conditions.\
    \  We'll also address the scalability\n   of BGP, and look at some of its limits.\n\
    \   BGP does not require all the routers within an autonomous system to\n   participate\
    \ in the BGP protocol. Only the border routers that provide\n   connectivity between\
    \ the local autonomous system and its adjacent\n   autonomous systems participate\
    \ in BGP.  Constraining the set of\n   participants is just one way of addressing\
    \ the scaling issue.\n"
- title: 5.1 Link bandwidth and CPU utilization.
  contents:
  - "5.1 Link bandwidth and CPU utilization.\n   Immediately after the initial BGP\
    \ connection setup, the peers\n   exchange complete set of routing information.\
    \ If we denote the total\n   number of networks in the Internet by N, the mean\
    \ AS distance of the\n   Internet by M (distance at the level of an autonomous\
    \ system,\n   expressed in terms of the number of autonomous systems), the total\n\
    \   number of autonomous systems in the Internet by A, and assume that\n   the\
    \ networks are uniformly distributed among the autonomous systems,\n   then the\
    \ worst case amount of bandwidth consumed during the initial\n   exchange between\
    \ a pair of BGP speakers is\n                        O(N + M * A)\n   (provided\
    \ that an implementation supports multiple networks per\n   message as outlined\
    \ in Appendix 5 of [1]). This information is\n   roughly on the order of the number\
    \ of networks reachable via each\n   peer (see also Section 5.2).\n   The following\
    \ table illustrates typical amount of bandwidth consumed\n   during the initial\
    \ exchange between a pair of BGP speakers based on\n   the above assumptions (ignoring\
    \ bandwidth consumed by the BGP\n   Header).\n         # Networks   Mean AS Distance\
    \       # AS's    Bandwidth\n         ----------   ----------------       ------\
    \    ---------\n         2,100        5                      59        9,000 bytes\n\
    \         4,000        10                     100       18,000 bytes\n       \
    \  10,000       15                     300       49,000 bytes\n         100,000\
    \      20                     3,000     520,000 bytes\n   Note that most of the\
    \ bandwidth is consumed by the exchange of the\n   Network Reachability Information.\n\
    \   After the initial exchange is completed, the amount of bandwidth and\n   CPU\
    \ cycles consumed by BGP depends only on the stability of the\n   Internet. If\
    \ the Internet is stable, then the only link bandwidth and\n   router CPU cycles\
    \ consumed by BGP are due to the exchange of the BGP\n   KEEPALIVE messages. The\
    \ KEEPALIVE messages are exchanged only between\n   peers. The suggested frequency\
    \ of the exchange is 30 seconds. The\n   KEEPALIVE messages are quite short (19\
    \ octets), and require virtually\n   no processing.  Therefore, the bandwidth\
    \ consumed by the KEEPALIVE\n   messages is about 5 bits/sec.  Operational experience\
    \ confirms that\n   the overhead (in terms of bandwidth and CPU) associated with\
    \ the\n   KEEPALIVE messages should be viewed as negligible.  If the Internet\n\
    \   is unstable, then only the changes to the reachability information\n   (that\
    \ are caused by the instabilities) are passed between routers\n   (via the UPDATE\
    \ messages). If we denote the number of routing changes\n   per second by C, then\
    \ in the worst case the amount of bandwidth\n   consumed by the BGP can be expressed\
    \ as O(C * M). The greatest\n   overhead per UPDATE message occurs when each UPDATE\
    \ message contains\n   only a single network. It should be pointed out that in\
    \ practice\n   routing changes exhibit strong locality with respect to the AS\
    \ path.\n   That is routes that change are likely to have common AS path. In this\n\
    \   case multiple networks can be grouped into a single UPDATE message,\n   thus\
    \ significantly reducing the amount of bandwidth required (see\n   also Appendix\
    \ 5 of [1]).\n   Since in the steady state the link bandwidth and router CPU cycles\n\
    \   consumed by the BGP protocol are dependent only on the stability of\n   the\
    \ Internet, but are completely independent on the number of\n   networks that\
    \ compose the Internet, it follows that BGP should have\n   no scaling problems\
    \ in the areas of link bandwidth and router CPU\n   utilization, as the Internet\
    \ grows, provided that the overall\n   stability of the inter-AS connectivity\
    \ (connectivity between ASs) of\n   the Internet can be controlled. Stability\
    \ issue could be addressed by\n   introducing some form of dampening (e.g., hold\
    \ downs).  Due to the\n   nature of BGP, such dampening should be viewed as a\
    \ local to an\n   autonomous system matter (see also Appendix 5 of [1]). We'd\
    \ like to\n   point out, that regardless of BGP, one should not underestimate\
    \ the\n   significance of the stability in the Internet. Growth of the Internet\n\
    \   will make the stability issue one of the most crucial one. It is\n   important\
    \ to realize that BGP, by itself, does not introduce any\n   instabilities in\
    \ the Internet. Current observations in the NSFNET\n   show that the instabilities\
    \ are largely due to the ill-behaved\n   routing within the autonomous systems\
    \ that compose the Internet.\n   Therefore, while providing BGP with mechanisms\
    \ to address the\n   stability issue, we feel that the right way to handle the\
    \ issue is to\n   address it at the root of the problem, and to come up with intra-\n\
    \   autonomous routing schemes that exhibit reasonable stability.\n   It also\
    \ may be instructive to compare bandwidth and CPU requirements\n   of BGP with\
    \ EGP. While with BGP the complete information is exchanged\n   only at the connection\
    \ establishment time, with EGP the complete\n   information is exchanged periodically\
    \ (usually every 3 minutes). Note\n   that both for BGP and for EGP the amount\
    \ of information exchanged is\n   roughly on the order of the networks reachable\
    \ via a peer that sends\n   the information (see also Section 5.2). Therefore,\
    \ even if one\n   assumes extreme instabilities of BGP, its worst case behavior\
    \ will be\n   the same as the steady state behavior of EGP.\n   Operational experience\
    \ with BGP showed that the incremental updates\n   approach employed by BGP presents\
    \ an enormous improvement both in the\n   area of bandwidth and in the CPU utilization,\
    \ as compared with\n   complete periodic updates used by EGP (see also presentation\
    \ by\n   Dennis Ferguson at the Twentieth IETF, March 11-15, 1991, St.Louis).\n"
- title: 5.2 Memory requirements.
  contents:
  - "5.2 Memory requirements.\n   To quantify the worst case memory requirements for\
    \ BGP, denote the\n   total number of networks in the Internet by N, the mean\
    \ AS distance\n   of the Internet by M (distance at the level of an autonomous\
    \ system,\n   expressed in terms of the number of autonomous systems), the total\n\
    \   number of autonomous systems in the Internet by A, and the total\n   number\
    \ of BGP speakers that a system is peering with by K (note that\n   K will usually\
    \ be dominated by the total number of the BGP speakers\n   within a single autonomous\
    \ system). Then the worst case memory\n   requirements (MR) can be expressed as\n\
    \                           MR = O((N + M * A) * K)\n   In the current NSFNET\
    \ Backbone (N = 2110, A = 59, and M = 5) if each\n   network is stored as 4 octets,\
    \ and each autonomous system is stored\n   as 2 octets then the overhead of storing\
    \ the AS path information (in\n   addition to the full complement of exterior\
    \ routes) is less than 7\n   percent of the total memory usage.\n   It is interesting\
    \ to point out, that prior to the introduction of BGP\n   in the NSFNET Backbone,\
    \ memory requirements on the NSFNET Backbone\n   routers running EGP were on the\
    \ order of O(N * K). Therefore, the\n   extra overhead in memory incurred by the\
    \ NSFNET routers after the\n   introduction of BGP is less than 7 percent.\n \
    \  Since a mean AS distance grows very slowly with the total number of\n   networks\
    \ (there are about 60 autonomous systems, well over 2,000\n   networks known in\
    \ the NSFNET backbone routers, and the mean AS\n   distance of the current Internet\
    \ is well below 5), for all practical\n   purposes the worst case router memory\
    \ requirements are on the order\n   of the total number of networks in the Internet\
    \ times the number of\n   peers the local system is peering with. We expect that\
    \ the total\n   number of networks in the Internet will grow much faster than\
    \ the\n   average number of peers per router. Therefore, scaling with respect\n\
    \   to the memory requirements is going to be heavily dominated by the\n   factor\
    \ that is linearly proportional to the total number of networks\n   in the Internet.\n\
    \   The following table illustrates typical memory requirements of a\n   router\
    \ running BGP. It is assumed that each network is encoded as 4\n   bytes, each\
    \ AS is encoded as 2 bytes, and each networks is reachable\n   via some fraction\
    \ of all of the peers (# BGP peers/per net).\n"
- title: '# Networks  Mean AS Distance # AS''s # BGP peers/per net Memory Req'
  contents:
  - '# Networks  Mean AS Distance # AS''s # BGP peers/per net Memory Req

    '
- title: '----------  ---------------- ------ ------------------- ----------'
  contents:
  - '----------  ---------------- ------ ------------------- ----------

    '
- title: 2,100       5                59     3                   27,000 bytes
  contents:
  - '2,100       5                59     3                   27,000 bytes

    '
- title: 4,000       10               100    6                   108,000 bytes
  contents:
  - '4,000       10               100    6                   108,000 bytes

    '
- title: 10,000      15               300    10                  490,000 bytes
  contents:
  - '10,000      15               300    10                  490,000 bytes

    '
- title: 100,000     20               3,000  20                  1,040,000 bytes
  contents:
  - "100,000     20               3,000  20                  1,040,000 bytes\n   To\
    \ put memory requirements of BGP in a proper perspective, let's try\n   to put\
    \ aside for a moment the issue of what information is used to\n   construct the\
    \ forwarding tables in a router, and just focus on the\n   forwarding tables themselves.\
    \ In this case one might ask about the\n   limits on these tables.  For instance,\
    \ given that right now the\n   forwarding tables in the NSFNET Backbone routers\
    \ carry well over\n   2,000 entries, one might ask whether it would be possible\
    \ to have a\n   functional router with a table that will have 20,000 entries.\
    \ Clearly\n   the answer to this question is completely independent of BGP. On\
    \ the\n   other hand the answer to the original questions (that was asked with\n\
    \   respect to BGP) is directly related to the latter question. Very\n   interesting\
    \ comments were given by Paul Tsuchiya in his review of BGP\n   in March of 1990\
    \ (as part of the BGP review committee appointed by\n   Bob Hinden).  In the review\
    \ he said that, \"BGP does not scale well.\n   This is not really the fault of\
    \ BGP. It is the fault of the flat IP\n   address space.  Given the flat IP address\
    \ space, any routing protocol\n   must carry network numbers in its updates.\"\
    \ To reiterate, BGP limits\n   with respect to the memory requirements are directly\
    \ related to the\n   underlying Internet Protocol (IP), and specifically the addressing\n\
    \   scheme employed by IP. BGP would provide much better scaling in\n   environments\
    \ with more flexible addressing schemes.  It should be\n   pointed out that with\
    \ very minor additions BGP can be extended to\n   support hierarchies of autonomous\
    \ system. Such hierarchies, combined\n   with an addressing scheme that would\
    \ allow more flexible address\n   aggregation capabilities, can be utilized by\
    \ BGP, thus providing\n   practically unlimited scaling capabilities of the protocol.\n"
- title: 6. Applicability of BGP.
  contents:
  - "6. Applicability of BGP.\n   In this section we'll try to answer the question\
    \ of what environment\n   is BGP well suited, and for what is it not suitable?\
    \  Partially this\n   question is answered in the Section 2 of [1], where the\
    \ document\n   states the following:\n   \"To characterize the set of policy decisions\
    \ that can be enforced\n   using BGP, one must focus on the rule that an AS advertises\
    \ to its\n   neighbor ASs only those routes that it itself uses.  This rule\n\
    \   reflects the \"hop-by-hop\" routing paradigm generally used throughout\n \
    \  the current Internet.  Note that some policies cannot be supported by\n   the\
    \ \"hop-by-hop\" routing paradigm and thus require techniques such as\n   source\
    \ routing to enforce.  For example, BGP does not enable one AS\n   to send traffic\
    \ to a neighbor AS intending that the traffic take a\n   different route from\
    \ that taken by traffic originating in the\n   neighbor AS.  On the other hand,\
    \ BGP can support any policy\n   conforming to the \"hop-by-hop\" routing paradigm.\
    \  Since the current\n   Internet uses only the \"hop-by-hop\" routing paradigm\
    \ and since BGP\n   can support any policy that conforms to that paradigm, BGP\
    \ is highly\n   applicable as an inter-AS routing protocol for the current Internet.\"\
    \n   While BGP is well suitable for the current Internet, it is also\n   almost\
    \ a necessity for the current Internet as well.  Operational\n   experience with\
    \ EGP showed that it is highly inadequate for the\n   current Internet.  Topological\
    \ restrictions imposed by EGP are\n   unjustifiable from the technical point of\
    \ view, and unenforceable\n   from the practical point of view.  Inability of\
    \ EGP to efficiently\n   handle information exchange between peers is a cause\
    \ of severe\n   routing instabilities in the operational Internet. Finally,\n\
    \   information provided by BGP is well suitable for enforcing a variety\n   of\
    \ routing policies.\n   Rather than trying to predict the future, and overload\
    \ BGP with a\n   variety of functions that may (or may not) be needed, the designers\n\
    \   of BGP took a different approach. The protocol contains only the\n   functionality\
    \ that is essential, while at the same time provides\n   flexible mechanisms within\
    \ the protocol itself that allow to expand\n   its functionality.  Since BGP was\
    \ designed with flexibility and\n   expandability in mind, we think it should\
    \ be able to address new or\n   evolving requirements with relative ease. The\
    \ existence proof of this\n   statement may be found in the way how new features\
    \ (like repairing a\n   partitioned autonomous system with BGP) are already introduced\
    \ in the\n   protocol.\n   To summarize, BGP is well suitable as an inter-autonomous\
    \ system\n   routing protocol for the current Internet that is based on IP (RFC\n\
    \   791) as the Internet Protocol and \"hop-by-hop\" routing paradigm. It\n  \
    \ is hard to speculate whether BGP will be suitable for other\n   environments\
    \ where internetting is done by other than IP protocols,\n   or where the routing\
    \ paradigm will be different.\n"
- title: References
  contents:
  - "References\n   [1] Lougheed, K., and Y. Rekhter, \"A Border Gateway Protocol\
    \ 3 (BGP-\n       3)\", RFC 1267, cisco Systems, T.J. Watson Research Center,\
    \ IBM\n       Corp., October 1991.\n   [2] Rekhter, Y., and P. Gross, Editors,\
    \ \"Application of the Border\n       Gateway Protocol in the Internet\", RFC\
    \ 1268, T.J. Watson Research\n       Center, IBM Corp., ANS, October 1991.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Yakov Rekhter\n   T.J. Watson Research Center IBM Corporation\n\
    \   P.O. Box 218\n   Yorktown Heights, NY 10598\n   Phone:  (914) 945-3896\n \
    \  EMail: yakov@watson.ibm.com\n   IETF BGP WG mailing list: iwg@rice.edu\n  \
    \ To be added: iwg-request@rice.edu\n"
