- title: __initial_text__
  contents:
  - "     Reoptimization of Multiprotocol Label Switching (MPLS) Traffic\n       Engineering\
    \ (TE) Loosely Routed Label Switched Path (LSP)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines a mechanism for the reoptimization of loosely\n\
    \   routed MPLS and GMPLS (Generalized Multiprotocol Label Switching)\n   Traffic\
    \ Engineering (TE) Label Switched Paths (LSPs) signaled with\n   Resource Reservation\
    \ Protocol Traffic Engineering (RSVP-TE).  This\n   document proposes a mechanism\
    \ that allows a TE LSP head-end Label\n   Switching Router (LSR) to trigger a\
    \ new path re-evaluation on every\n   hop that has a next hop defined as a loose\
    \ or abstract hop and a\n   mid-point LSR to signal to the head-end LSR that a\
    \ better path exists\n   (compared to the current path) or that the TE LSP must\
    \ be reoptimized\n   (because of maintenance required on the TE LSP path).  The\
    \ proposed\n   mechanism applies to the cases of intra- and inter-domain (Interior\n\
    \   Gateway Protocol area (IGP area) or Autonomous System) packet and\n   non-packet\
    \ TE LSPs following a loosely routed path.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \    2.1. Requirements Language ......................................4\n   3.\
    \ Establishment of a Loosely Routed TE LSP ........................4\n   4. Reoptimization\
    \ of a Loosely Routed TE LSP Path ..................6\n   5. Signaling Extensions\
    \ ............................................7\n      5.1. Path Re-Evaluation\
    \ Request .................................7\n      5.2. New Error Value Sub-Codes\
    \ ..................................7\n   6. Mode of Operation ...............................................7\n\
    \      6.1. Head-End Reoptimization Control ............................7\n  \
    \    6.2. Reoptimization Triggers ....................................8\n    \
    \  6.3. Head-End Request versus Mid-Point Explicit\n           Notification Functions\
    \ .....................................8\n           6.3.1. Head-End Request Function\
    \ ...........................8\n           6.3.2. Mid-Point Explicit Notification\
    \ ....................10\n           6.3.3. ERO Caching ........................................10\n\
    \   7. Applicability and Interoperability .............................11\n  \
    \ 8. IANA Considerations ............................................11\n   9.\
    \ Security Considerations ........................................11\n   10. Acknowledgements\
    \ ..............................................12\n   11. References ....................................................12\n\
    \      11.1. Normative References .....................................12\n  \
    \    11.2. Informative References ...................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document defines a mechanism for the reoptimization\
    \ of loosely\n   routed MPLS and GMPLS (Generalized Multiprotocol Label Switching)\n\
    \   Traffic Engineering LSPs signaled with RSVP-TE (see [RFC3209] and\n   [RFC3473]).\
    \  A loosely routed LSP is defined as one that does not\n   contain a full, explicit\
    \ route identifying each LSR along the path of\n   the LSP at the time it is signaled\
    \ by the ingress LSR.  Such an LSP\n   is signaled with no Explicit Route Object\
    \ (ERO), with an ERO that\n   contains at least one loose hop, or with an ERO\
    \ that contains an\n   abstract node that is not a simple abstract node (that\
    \ is, an\n   abstract node that identifies more than one LSR).\n   The Traffic\
    \ Engineering Working Group (TE WG) has specified a set of\n   requirements for\
    \ inter-area and inter-AS MPLS Traffic Engineering\n   (see [RFC4105] and [RFC4216]).\
    \  Both requirements documents specify\n   the need for some mechanism providing\
    \ an option for the head-end LSR\n   to control the reoptimization process should\
    \ a more optimal path\n   exist in a downstream domain (IGP area or Autonomous\
    \ System).  This\n   document defines a solution to meet this requirement and\
    \ proposes two\n   mechanisms:\n   (1) The first mechanism allows a head-end LSR\
    \ to trigger a new path\n       re-evaluation on every hop that has a next hop\
    \ defined as a loose\n       hop or abstract node and get a notification from\
    \ the mid-point as\n       to whether a better path exists.\n   (2) The second\
    \ mechanism allows a mid-point LSR to explicitly signal\n       to the head-end\
    \ LSR either that a better path exists to reach a\n       loose/abstract hop (compared\
    \ to the current path) or that the TE\n       LSP must be reoptimized because\
    \ of some maintenance required\n       along the TE LSP path.  In this case, the\
    \ notification is sent by\n       the mid-point LSR without being polled by the\
    \ head-end LSR.\n   A better path is defined as a lower cost path, where the cost\
    \ is\n   determined by the metric used to compute the path.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   ABR: Area Border Router.\n   ERO: Explicit Route Object.\n\
    \   LSR: Label Switching Router.\n   TE LSP: Traffic Engineering Label Switched\
    \ Path.\n   TE LSP head-end: head/source of the TE LSP.\n   TE LSP tail-end: tail/destination\
    \ of the TE LSP.\n   Interior Gateway Protocol Area (IGP Area): OSPF Area or IS-IS\
    \ level.\n   Intra-area TE LSP: A TE LSP whose path does not transit across areas.\n\
    \   Inter-area TE LSP: A TE LSP whose path transits across at least two\n   different\
    \ IGP areas.\n   Inter-AS MPLS TE LSP: A TE LSP whose path transits across at\
    \ least\n   two different Autonomous Systems (ASes) or sub-ASes (BGP\n   confederations).\n"
- title: 2.1.  Requirements Language
  contents:
  - "2.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Establishment of a Loosely Routed TE LSP
  contents:
  - "3.  Establishment of a Loosely Routed TE LSP\n   The aim of this section is purely\
    \ to summarize the mechanisms\n   involved in the establishment of a loosely routed\
    \ TE LSP, as\n   specified in [RFC3209].  The reader should see RFC 3209 for a\
    \ more\n   detailed description of these mechanisms.\n   In the context of this\
    \ document, a loosely routed LSP is defined as\n   one that does not contain a\
    \ full, explicit route identifying each LSR\n   along the path of the LSP at the\
    \ time it is signaled by the ingress\n   LSR.  Such an LSP is signaled with no\
    \ ERO, with an ERO that contains\n   at least one loose hop, or with an ERO that\
    \ contains an abstract node\n   that is not a simple abstract node (that is, an\
    \ abstract node that\n   identifies more than one LSR).  As specified in [RFC3209],\
    \ loose hops\n   are listed in the ERO object of the RSVP Path message with the\
    \ L flag\n   of the IPv4 or the IPv6 prefix sub-object set.\n   Each LSR along\
    \ the path whose next hop is specified as a loose hop or\n   a non-specific abstract\
    \ node triggers a path computation (also\n   referred to as an ERO expansion),\
    \ before forwarding the RSVP Path\n   message downstream.  The computed path may\
    \ be either partial (up to\n   the next loose hop) or complete (set of strict\
    \ hops up to the TE LSP\n   destination).\n   Note that although the examples\
    \ in the rest of this document are\n   provided in the context of MPLS inter-area\
    \ TE, the proposed mechanism\n   applies equally to loosely routed paths within\
    \ a single routing\n   domain and across multiple Autonomous Systems.  The examples\
    \ below\n   are provided with OSPF as the IGP, but the described set of\n   mechanisms\
    \ similarly apply to IS-IS.\n   An example of an explicit loosely routed TE LSP\
    \ signaling follows.\n   <---area 1--><-area 0--><-area 2->\n    R1---R2----R3---R6\
    \    R8---R10\n     |          |    |   / | \\  |\n     |          |    |  / \
    \ |  \\ |\n     |          |    | /   |   \\|\n    R4---------R5---R7----R9---R11\n\
    \   Assumptions\n   - R3, R5, R8, and R9 are ABRs.\n   - The path of an inter-area\
    \ TE LSP T1 from R1 (head-end LSR) to R11\n     (tail-end LSR) is defined on R1\
    \ as the following loosely routed\n     path:  R1-R3(loose)-R8(loose)-R11(loose).\
    \  R3, R8, and R11 are\n     defined as loose hops.\n     Step 1: R1 determines\
    \ that the next hop (R3) is a loose hop (not\n     directly connected to R1) and\
    \ then performs an ERO expansion\n     operation to reach the next loose hops\
    \ R3.  The new ERO becomes:\n     R2(S)-R3(S)-R8(L)-R11(L), where S is a strict\
    \ hop (L=0) and L is a\n     loose hop (L=1).\n     The R1-R2-R3 path satisfies\
    \ T1's set of constraints.\n     Step 2: The RSVP Path message is then forwarded\
    \ by R1 following the\n     path specified in the ERO object and reaches R3 with\
    \ the following\n     content: R8(L)-R11(L).\n     Step 3: R3 determines that\
    \ the next hop (R8) is a loose hop (not\n     directly connected to R3) and then\
    \ performs an ERO expansion\n     operation to reach the next loose hops R8. \
    \ The new ERO becomes:\n     R6(S)-R7(S)-R8(S)-R11(L).\n     Note: In this example,\
    \ the assumption is made that the path is\n     computed on a per-loose-hop basis,\
    \ also referred to as a partial\n     route computation.  Note that other path\
    \ computation techniques may\n     result in complete paths (set of strict hops\
    \ up to the final\n     destination).\n     Step 4: The same procedure is repeated\
    \ by R8 to reach T1's\n     destination (R11).\n"
- title: 4.  Reoptimization of a Loosely Routed TE LSP Path
  contents:
  - "4.  Reoptimization of a Loosely Routed TE LSP Path\n   Once a loosely routed,\
    \ explicit TE LSP is set up, it is maintained\n   through normal RSVP procedures.\
    \  During the TE LSP lifetime, a more\n   optimal path might appear between an\
    \ LSR and its next loose hop (for\n   the sake of illustration, suppose that in\
    \ the example above a link\n   between R6 and R8 is added or restored that provides\
    \ a preferable\n   path between R3 and R8 (R3-R6-R8) than the existing R3-R6-R7-R8\n\
    \   path).  Since a preferable (e.g., shorter) path might not be visible\n   from\
    \ the head-end LSR by means of the IGP if the head-end LSR does\n   not belong\
    \ to the same IGP area where the associated topology change\n   occurred, the\
    \ head-end cannot make use of this shorter path (and\n   reroute the LSP using\
    \ a make-before-break technique as described in\n   [RFC3209]) when appropriate.\
    \  Thus, a new mechanism specified in this\n   document is required to detect\
    \ the existence of such a preferable\n   path and to notify the head-end LSR accordingly.\n\
    \   This document defines a mechanism that allows\n   - a head-end LSR to trigger\
    \ on every LSR whose next hop is a loose\n     hop or an abstract node the re-evaluation\
    \ of the current path in\n     order to detect a potentially more optimal path;\
    \ and\n   - a mid-point LSR whose next hop is a loose-hop or an abstract node\n\
    \     to signal (using a new Error Value sub-code carried in a RSVP\n     PathErr\
    \ message) to the head-end LSR that a preferable path exists\n     (a path with\
    \ a lower cost, where the cost definition is determined\n     by some metric).\n\
    \   Once the head-end LSR has been notified of the existence of such a\n   preferable\
    \ path, it can decide (depending on the TE LSP\n   characteristics) whether to\
    \ perform a TE LSP graceful reoptimization\n   such as the \"make-before-break\"\
    \ procedure.\n   There is another scenario whereby notifying the head-end LSR\
    \ of the\n   existence of a better path is desirable: if the current path is about\n\
    \   to fail due to some (link or node) required maintenance.\n   This mechanism\
    \ allows the head-end LSR to reoptimize a TE LSP by\n   making use of the non-disruptive\
    \ make-before-break procedure if and\n   only if a preferable path exists and\
    \ if such a reoptimization is\n   desired.\n"
- title: 5.  Signaling Extensions
  contents:
  - "5.  Signaling Extensions\n   A new flag in the SESSION ATTRIBUTE object and new\
    \ Error Value sub-\n   codes in the ERROR SPEC object are proposed in this document.\n"
- title: 5.1.  Path Re-Evaluation Request
  contents:
  - "5.1.  Path Re-Evaluation Request\n   The following new flag of the SESSION_ATTRIBUTE\
    \ object (C-Type 1 and\n   7) is defined:\n   Path re-evaluation request: 0x20\n\
    \   This flag indicates that a path re-evaluation (of the current path in\n  \
    \ use) is requested.  Note that this does not trigger any LSP Reroute\n   but\
    \ instead just signals a request to evaluate whether a preferable\n   path exists.\n\
    \   Note: In case of link bundling, for instance, although the resulting\n   ERO\
    \ might be identical, this might give the opportunity for a mid-\n   point LSR\
    \ to locally select another link within a bundle.  However,\n   strictly speaking,\
    \ the ERO has not changed.\n"
- title: 5.2.  New Error Value Sub-Codes
  contents:
  - "5.2.  New Error Value Sub-Codes\n   As defined in [RFC3209], the Error Code 25\
    \ in the ERROR SPEC object\n   corresponds to a Notify Error.\n   This document\
    \ adds three new Error Value sub-codes:\n   6 Preferable path exists\n   7 Local\
    \ link maintenance required\n   8 Local node maintenance required\n   The details\
    \ about the local maintenance required modes are in Section\n   6.3.2.\n"
- title: 6.  Mode of Operation
  contents:
  - '6.  Mode of Operation

    '
- title: 6.1.  Head-End Reoptimization Control
  contents:
  - "6.1.  Head-End Reoptimization Control\n   The notification process of a preferable\
    \ path (shorter path or new\n   path due to some maintenance required on the current\
    \ path) is by\n   nature de-correlated from the reoptimization operation.  In\
    \ other\n   words, the location where a potentially preferable path is discovered\n\
    \   does not have to be where the TE LSP is actually reoptimized.  This\n   document\
    \ applies to the context of a head-end LSR reoptimization.\n"
- title: 6.2.  Reoptimization Triggers
  contents:
  - "6.2.  Reoptimization Triggers\n   There are several possible reoptimization triggers:\n\
    \   - Timer-based: A reoptimization is triggered (process evaluating\n     whether\
    \ a more optimal path can be found) when a configurable timer\n     expires.\n\
    \   - Event-driven: A reoptimization is triggered when a particular\n     network\
    \ event occurs (such as a \"Link-UP\" event).\n   - Operator-driven: A reoptimization\
    \ is manually triggered by the\n     Operator.\n   It is RECOMMENDED that an implementation\
    \ supporting the extensions\n   proposed in this document support the aforementioned\
    \ modes as path\n   re-evaluation triggers.\n"
- title: 6.3.  Head-End Request versus Mid-Point Explicit Notification Functions
  contents:
  - "6.3.  Head-End Request versus Mid-Point Explicit Notification Functions\n   This\
    \ document defines two functions:\n   1) \"Head-end requesting function\": The\
    \ request for a new path\n      evaluation of a loosely routed TE LSP is requested\
    \ by the head-end\n      LSR.\n   2) \"Mid-point explicit notification function\"\
    : Having determined that\n      a preferable path (other than the current path)\
    \ exists or having\n      the need to perform a link/node local maintenance, a\
    \ mid-point LSR\n      explicitly notifies the head-end LSR, which will in turn\
    \ decide\n      whether to perform a reoptimization.\n"
- title: 6.3.1.  Head-End Request Function
  contents:
  - "6.3.1.  Head-End Request Function\n   When a timer-based reoptimization is triggered\
    \ on the head-end LSR or\n   the operator manually requests a reoptimization,\
    \ the head-end LSR\n   immediately sends an RSVP Path message with the \"Path\
    \ re-evaluation\n   request\" bit of the SESSION-ATTRIBUTE object set.  This bit\
    \ is then\n   cleared in subsequent RSVP path messages sent downstream.  In order\n\
    \   to handle the case of a lost Path message, the solution consists of\n   relying\
    \ on the reliable messaging mechanism described in [RFC2961].\n   Upon receiving\
    \ a Path message with the \"Path re-evaluation request\"\n   bit set, every LSR\
    \ for which the next abstract node contained in the\n   ERO is defined as a loose\
    \ hop/abstract node performs the following\n   set of actions:\n   A path re-evaluation\
    \ is triggered, and the newly computed path is\n   compared to the existing path:\n\
    \   - If a preferable path can be found, the LSR performing the path re-\n   \
    \  evaluation MUST immediately send an RSVP PathErr to the head-end\n     LSR\
    \ (Error code 25 (Notify), Error sub-code=6 (better path\n     exists)).  At this\
    \ point, the LSR MAY decide not to propagate this\n     bit in subsequent RSVP\
    \ Path messages sent downstream for the re-\n     evaluated TE LSP; this mode\
    \ is the RECOMMENDED mode for the reasons\n     described below.\n     The sending\
    \ of an RSVP PathErr Notify message \"Preferable path\n     exists\" to the head-end\
    \ LSR will notify the head-end LSR of the\n     existence of a preferable path\
    \ (e.g., in a downstream area/AS or in\n     another location within a single\
    \ domain).  Therefore, triggering\n     additional path re-evaluations on downstream\
    \ nodes is unnecessary.\n     The only motivation to forward subsequent RSVP Path\
    \ messages with\n     the \"Path re-evaluation request\" bit of the SESSION-ATTRIBUTE\n\
    \     object set would be to trigger path re-evaluation on downstream\n     nodes\
    \ that could in turn cache some potentially better paths\n     downstream, with\
    \ the objective to reduce the signaling setup delay,\n     should a reoptimization\
    \ be performed by the head-end LSR.\n   - If no preferable path can be found,\
    \ the recommended mode is for an\n     LSR to relay the request (by setting the\
    \ \"Path re-evaluation\" bit\n     of the SESSION-ATTRIBUTE object in RSVP path\
    \ message sent\n     downstream).\n     Note that, by preferable path, we mean\
    \ a path with a lower cost.\n     If the RSVP Path message with the \"Path re-evaluation\
    \ request\" bit\n     set is lost, then the next request will be sent when the\
    \ next\n     reoptimization trigger will occur on the head-end LSR.  The\n   \
    \  solution to handle RSVP reliable messaging has been defined in\n     [RFC2961].\n\
    \     The network administrator may decide to establish some local policy\n  \
    \   specifying to ignore such request or not to consider those requests\n    \
    \ more frequently than at a certain rate.\n     The proposed mechanism does not\
    \ make any assumption of the path\n     computation method performed by the ERO\
    \ expansion process.\n"
- title: 6.3.2.  Mid-Point Explicit Notification
  contents:
  - "6.3.2.  Mid-Point Explicit Notification\n   By contrast with the head-end request\
    \ function, in this case, a mid-\n   point LSR whose next hop is a loose hop or\
    \ an abstract node can\n   locally trigger a path re-evaluation when a configurable\
    \ timer\n   expires, some specific events occur (e.g., link-up event), or the\n\
    \   user explicitly requests it.  If a preferable path is found, the LSR\n   sends\
    \ an RSVP PathErr to the head-end LSR (Error code 25 (Notify),\n   Error sub-code=6\
    \ (\"preferable path exists\").\n   There is another circumstance whereby any\
    \ mid-point LSR MAY send an\n   RSVP PathErr message with the objective for the\
    \ TE LSP to be rerouted\n   by its head-end LSR: when a link or a node will go\
    \ down for local\n   maintenance reasons.  In this case, the LSR where a local\
    \ maintenance\n   must be performed is responsible for sending an RSVP PathErr\
    \ message\n   with Error code 25 and Error sub-code=7 or 8, depending on the\n\
    \   affected network element (link or node).  Then the first upstream\n   node\
    \ that has performed the ERO expansion MUST perform the following\n   set of actions:\n\
    \   - The link (sub-code=7) or the node (sub-code=8) MUST be locally\n     registered\
    \ for further reference (the TE database must be updated).\n   - The RSVP PathErr\
    \ message MUST be immediately forwarded upstream to\n     the head-end LSR.  Note\
    \ that in the case of TE LSP spanning\n     multiple administrative domains, it\
    \ may be desirable for the\n     boundary LSR to modify the RSVP PathErr message\
    \ and insert its own\n     address for confidentiality.\n   Upon receiving an\
    \ RSVP PathErr message with Error code 25 and Error\n   sub-code 7 or 8, the head-end\
    \ LSR SHOULD perform a TE LSP\n   reoptimization.\n   Note that the two functions\
    \ (head-end and mid-point driven) are not\n   exclusive of each other: both the\
    \ timer and event-driven\n   reoptimization triggers can be implemented on the\
    \ head-end or on any\n   mid-point LSR with a potentially different timer value\
    \ for the\n   timer-driven reoptimization case.\n   A head-end LSR MAY decide\
    \ upon receiving an explicit mid-point\n   notification to delay its next path\
    \ re-evaluation request.\n"
- title: 6.3.3.  ERO Caching
  contents:
  - "6.3.3.  ERO Caching\n   Once a mid-point LSR has determined that a preferable\
    \ path exists\n   (after a reoptimization request has been received by the head-end\
    \ LSR\n   or the reoptimization timer on the mid-point has expired), the more\n\
    \   optimal path MAY be cached on the mid-point LSR for a limited amount\n   of\
    \ time to avoid having to recompute a path once the head-LSR\n   performs a make-before-break.\
    \  This mode is optional.  A default\n   value of 5 seconds for the caching timer\
    \ is suggested.\n"
- title: 7.  Applicability and Interoperability
  contents:
  - "7.  Applicability and Interoperability\n   The procedures described in this document\
    \ are entirely optional\n   within an MPLS or GMPLS network.  Implementations\
    \ that do not support\n   the procedures described in this document will interoperate\n\
    \   seamlessly with those that do.  Further, an implementation that does\n   not\
    \ support the procedures described in this document will not be\n   impacted or\
    \ implicated by a neighboring implementation that does\n   implement the procedures.\n\
    \   An ingress implementation that chooses not to support the procedures\n   described\
    \ in this document may still achieve re-optimization by\n   periodically issuing\
    \ a speculative make-before-break replacement of\n   an LSP without trying to\
    \ discovery whether a more optimal path is\n   available in a downstream domain.\
    \  Such a procedure would not be in\n   conflict with any mechanisms already documented\
    \ in [RFC3209] and\n   [RFC3473].\n   An LSR not supporting the \"Path re-evaluation\
    \ request\" bit of the\n   SESSION-ATTRIBUTE object SHALL forward it unmodified.\n\
    \   A head-end LSR not supporting an RSVP PathErr with Error code 25\n   message\
    \ and Error sub-code = 6, 7, or 8 MUST just silently ignore\n   such an RSVP PathErr\
    \ message.\n"
- title: 8.  IANA Considerations
  contents:
  - "8.  IANA Considerations\n   IANA assigned three new error sub-code values for\
    \ the RSVP PathErr\n   Notify message (Error code=25):\n   6 Preferable path exists\n\
    \   7 Local link maintenance required\n   8 Local node maintenance required\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document defines a mechanism for a mid-point\
    \ LSR to notify the\n   head-end LSR of the existence of a preferable path or\
    \ the need to\n   reroute the TE LSP for maintenance purposes.  Hence, in the\
    \ case of a\n   TE LSP spanning multiple administrative domains, it may be desirable\n\
    \   for a boundary LSR to modify the RSVP PathErr message (Code 25, Error\n  \
    \ sub-code = 6, 7, or 8) so as to preserve confidentiality across\n   domains.\
    \  Furthermore, a head-end LSR may decide to ignore explicit\n   notification\
    \ coming from a mid-point residing in another domain.\n   Similarly, an LSR may\
    \ decide to ignore (or to accept up to a pre-\n   defined rate) path re-evaluation\
    \ requests originated by a head-end\n   LSR of another domain.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The authors would like to thank Carol Iturralde, Miya\
    \ Kohno, Francois\n   Le Faucheur, Philip Matthews, Jim Gibson, Jean-Louis Le\
    \ Roux, Kenji\n   Kumaki, Anca Zafir, and Dimitri Papadimitriou for their useful\n\
    \   comments.  A special thanks to Adrian Farrel for his very valuable\n   inputs.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2961]  Berger, L., Gan, D., Swallow, G., Pan, P., Tommasi, F.,\n\
    \              and S. Molendini, \"RSVP Refresh Overhead Reduction\n         \
    \     Extensions\", RFC 2961, April 2001.\n   [RFC3209]  Awduche, D., Berger,\
    \ L., Gan, D., Li, T., Srinivasan, V.,\n              and G. Swallow, \"RSVP-TE:\
    \ Extensions to RSVP for LSP\n              Tunnels\", RFC 3209, December 2001.\n\
    \   [RFC3473]  Berger, L., \"Generalized Multi-Protocol Label Switching\n    \
    \          (GMPLS) Signaling Resource ReserVation Protocol-Traffic\n         \
    \     Engineering (RSVP-TE) Extensions\", RFC 3473, January 2003.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [RFC4105]  Le Roux, J.-L., Vasseur, J.-P.,\
    \ and J. Boyle,\n              \"Requirements for Inter-Area MPLS Traffic Engineering\"\
    ,\n              RFC 4105, June 2005.\n   [RFC4216]  Zhang, R. and J.-P. Vasseur,\
    \ \"MPLS Inter-Autonomous System\n              (AS) Traffic Engineering (TE)\
    \ Requirements\", RFC 4216,\n              November 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   JP Vasseur (Editor)\n   Cisco Systems, Inc\n   1414 Massachusetts\
    \ Avenue\n   Boxborough, MA  01719\n   USA\n   EMail: jpv@cisco.com\n   Yuichi\
    \ Ikejiri\n   NTT Communications Corporation\n   1-1-6, Uchisaiwai-cho, Chiyoda-ku\n\
    \   Tokyo,   100-8019\n   Japan\n   EMail: y.ikejiri@ntt.com\n   Raymond Zhang\n\
    \   BT Infonet\n   2160 E. Grand Ave.\n   El Segundo, CA  90025\n   USA\n   EMail:\
    \ raymond_zhang@bt.infonet.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
