Abstract This document defines four new Job Description attributes for monitoring job progress to be registered as OPTIONAL extensions to the Internet Printing Protocol (IPP/1.0 and IPP/1.1).
These attributes are drawn from the PWG Job Monitoring MIB.
This document also defines a new "sheet collate" Job Template attribute to control sheet collation and to help with the interpretation of the job progress attributes.
This document defines four new Job Description attributes for monitoring job progress to be registered as OPTIONAL extensions to IPP/1.0 [RFC2566] and IPP/1.1
These attributes are drawn from the PWG Job Monitoring MIB [RFC2707].
See section 10 for a description of the base IPP documents.
The new Job Description attributes are: "job collation type" (type2 enum) "sheet completed copy number" (
"sheet completed document number" (integer(0:MAX))
This document also defines a new "sheet collate" Job Template attribute to control sheet collation and to help with the interpretation of the job progress attributes.
These new attributes may also be used by themselves in combination with the IPP/1.1 "job  impressions completed" attribute, as useful job progress monitoring attributes and/or may be passed in an IPP Notification (see [ipp  ntfy]).
This section defines terminology used throughout this document.
2.1 Conformance Terminology Capitalized terms, such as MUST, MUST NOT, REQUIRED, SHOULD, SHOULD NOT, MAY, NEED NOT, and OPTIONAL, have special meaning relating to conformance, as defined in RFC 2119
[RFC2119] and [RFC2911] section 12.1.
If an implementation supports the extension defined in this document, then these terms apply; otherwise, they do not.
These terms define conformance to this document only; they do not affect conformance to other documents, unless explicitly stated otherwise.
This document uses terms such as Job object (or Job), IPP Printer object (or Printer), "operation", "attribute", "keyword", "support", and "impression".
These terms have special meaning and are defined in the model terminology [RFC2911], section 12.2.
This attribute specifies whether or not the media sheets of each copy of each printed document in a job are to be in sequence, when multiple copies of the document are specified by the 'copies' attribute.
Standard keyword values are: 'uncollated':  each print stream sheet is printed a number of times in succession equal to the value of the 'copies' attribute, followed by the next print stream sheet. '
collated':  each copy of each document is printed with the print stream sheets in sequence, followed by the next document copy.
For example, suppose a document produces two media sheets as output, and "copies" is equal to '6'.
For the 'uncollated' case, six copies of the first media sheet are printed, followed by six copies of the second media sheet.
For the 'collated' case, one copy of each of the six sheets is printed, followed by another copy of each of the six media sheets.
Whether the effect of sheet collation is achieved by placing copies of a document in multiple output bins, or in the same output bin with implementation defined document separation, is implementation dependent.
Also whether it is achieved by making multiple passes over the job or by using an output sorter, is implementation dependent.
Note: IPP/1.0 [RFC2566] and IPP/1.1
[RFC2911] are silent on whether or not sheets within documents are collated.
The "sheet collate  supported" Printer attribute permits a Printer object to indicate whether or not it collates sheets with each document and whether it allows the client to control sheet collation.
An implementation is able to indicate that it supports uncollated sheets, collated sheets, or both, using the 'uncollated', 'collated', or both 'uncollated' and 'collated' values, respectively.
This attribute is affected by "multiple document handling".
The "multiple document handling" attribute describes the collation of documents, and the "sheet collate" attribute describes the semantics of collating individual pages within a document.
To better explain the interaction between these two attributes, the term "set" is introduced.
A "set" is a logical boundary between the delivered media sheets of a printed job.
For example, in the case of a ten page single document with collated pages and a request for 50 copies, each of the 50 printed copies of the document constitutes a "set".
In the above example if the pages were uncollated, then 50 copies of each of the individual pages within the document would represent each "set".
The following table describes the interaction of "sheet collate" with multiple document handling.
From the above table it is obvious that the implicit value of the "sheet collate" attribute in a printer that does not support the "sheet collate" attribute, is 'collated.'
The semantics of "multiple document handling" are otherwise nonsensical in the case of separate documents.
4 IPP Job Description attributes for monitoring Job
The following IPP Job Description attributes are proposed to be added to IPP through the type2 registration procedures.
They are useful for monitoring the progress of a job.
They are also used as attributes in the notification content in a notification report [ipp ntfy].
There are a number of Job Description attributes for monitoring the progress of a job.
These objects and attributes count the number of K octets, impressions, sheets, and pages requested or completed.
For impressions and sheets, "completed" means stacked, unless the implementation is unable to detect when each sheet is stacked, in which case, stacked is approximated when the processing of each sheet is completed.
There are objects and attributes for the overall job and for the current copy of the document currently being stacked.
For the latter, the rate at which the various objects and attributes count, depends on the sheet and document collation of the job.
Consider the following four Job Description attributes that are used to monitor the progress of a job's impressions:
job impressions completed" counts the total number of impressions stacked for the job (see [RFC2911] section 4.3.18.2).
"impressions completed current copy" counts the number of impressions stacked for the current document copy.
sheet completed copy number" identifies the number of the copy for the current document being stacked, where the first copy is 1. 4.
sheet completed document number" identifies the current document within the job that is being stacked, where the first document in a job is 1.
this attribute SHOULD NOT be implemented for implementations that only support one document per job.
Job Collation includes sheet collation and document collation.
Sheet collation is defined to be the ordering of sheets within a document copy.
Document collation is defined to be the ordering of document copies within a multi document job.
The value of the "job  collation type" is affected by the value of the "sheet collate" Job Template attribute (see section 3.1), if supplied and supported.
The Standard enum values are: '1' 'other':  not one of the defined values '2' 'unknown':  the collation type is unknown '3' 'uncollated sheets':  No collation of the sheets within each document copy, i.e., each sheet of a document that is to produce multiple copies, is replicated before the next sheet in the document is processed and stacked.
If the device has an output bin collator, the 'uncollated sheets(3)' value may actually produce collated sheets as far as the user is concerned (in the output bins).
However, when the job collation is the 'uncollated sheets(3)' value, job progress is indistinguishable from a monitoring application between a device that has an output bin collator and one that does not. '
4' 'collated documents':  Collation of the sheets within each document copy is performed within the printing device by making multiple passes over, either the source or an intermediate representation of the document.
In addition, when there are multiple documents per job, the i'th copy of each document is stacked before the j'th copy of each document, i.e., the documents are collated within each job copy.
The 'collated documents(4)' value corresponds to the IPP [RFC2911] '
separate  documents collated copies' keyword value of the "multiple document handling" attribute.
If the job's "copies" attribute is '1' (or not supplied), then the "job collation type" attribute is defined to be '4'. '
5' 'uncollated documents':  Collation of the sheets within each document copy is performed within the printing device by making multiple passes over either the source or an intermediate representation of the document.
In addition, when there are multiple documents per job, all copies of the first document in the job are stacked before any copied of the next document in the job, i.e., the documents are uncollated within the job.
The 'uncollated documents(5)' value corresponds to the IPP [RFC2911] '
separate documents uncollated  copies' keyword value of the "multiple document  handling" attribute.
4.2 sheet completed copy number (integer(0:MAX))
The number of the copy being stacked for the current document.
This number starts at 0, is set to 1 when the first sheet of the first copy for each document is being stacked and is equal to n where n is the nth sheet stacked in the current document copy.
If the value is unknown, the Printer MUST return the 'unknown' out of band value (see [RFC2911] section 4.1), rather than
the  2 value used in some MIBs [RFC2707].
4.3 sheet completed document number (integer(0:MAX))
The ordinal number of the document in the job that is currently being stacked.
This number starts at 0, increments to 1 when the first sheet of the first document in the job is being stacked, and is equal to n where n is the nth document in the job, starting with 1.
If the value is unknown, the Printer MUST return the 'unknown' out of band value (see [RFC2911] section 4.1), rather than
the  2 value used in some MIBs [RFC2707].
Implementations that only support one document job
SHOULD NOT implement this attribute.
4.4 impressions completed current copy (integer(0:MAX))
The number of impressions completed by the device for the current copy of the current document so far.
For printing, the impressions completed includes interpreting, marking, and stacking the output.
For other types of job services, the number of impressions completed includes the number of impressions processed.
If the value is unknown, the Printer MUST return the 'unknown' out of band value (see [RFC2911] section 4.1), rather than
the  2 value used in some MIBs [RFC2707].
This value MUST be reset to 0 for each document in the job and for each document copy.
This section summarizes the Conformance Requirements detailed in the definitions in this document.
In general each of the attributes defined in this document are OPTIONAL for a client and/or a Printer to support, so that
client and Printer implementers MAY implement any combination of these attributes.
This section contains registration information for IANA to add to the IPP Registry according to the procedures defined in RFC 2911 [RFC2911], section 6.
The resulting registrations will be published in the http://www.iana.org/assignments/ipp registrations registry.
Section: sheet collate (type2 keyword)
Section: job collation type (type2 enum)
The following table provides registration information for all of the attributes defined in this document that have keyword values.
These keywords are to be registered according to the procedures defined in RFC 2911 [RFC2911] section 6.1.
The following table provides registration information for all of the attributes defined in this document that have enum values.
These enums are to be registered according to the procedures defined in RFC 2911 [RFC2911] section 6.1.
The IPP extensions defined in this document require the same internationalization considerations as any of the Job Template and Job Description attributes defined in IPP/1.1
The IPP extensions defined in this document require the same security considerations as any of the Job Template attributes and Job Description attributes defined in IPP/1.1
10 Description of the Base IPP Documents
The base set of IPP documents includes: Design Goals for an Internet Printing Protocol
[RFC2567] Rationale for the Structure and Model and Protocol for the Internet Printing Protocol
[RFC2568] Internet Printing Protocol/1.1: Model and Semantics
] Mapping between LPD and IPP Protocols
The "Design Goals for an Internet Printing Protocol" document takes a broad look at distributed printing functionality, and enumerates real life scenarios that help to clarify the features that need to be included in a printing protocol for the Internet.
It identifies requirements for three types of users: end users, operators, and administrators.
It calls out a subset of end user requirements that are satisfied in IPP/1.0 [RFC2566, RFC2565].
A few OPTIONAL operator operations have been added to IPP/1.1 [RFC2911, RFC2910].
The "Rationale for the Structure and Model and Protocol for the Internet Printing Protocol" document describes IPP from a high level view, defines a roadmap for the various documents that form the suite of IPP specification documents, and gives background and rationale for the IETF IPP working group's major decisions.
The "Internet Printing Protocol/1.1: Model and Semantics" document describes a simplified model with abstract objects, their attributes, and their operations.
The model introduces a Printer and a Job.
The Job supports multiple documents per Job.
The model document also addresses how security, internationalization, and directory issues are addressed.
Encoding and Transport" document is a formal mapping of the abstract operations and attributes defined in the model document onto HTTP/1.1 [RFC2616].
It also defines the encoding rules for a new Internet MIME media type called "application/ipp".
This document also defines the rules for transporting over HTTP a message body whose Content Type is "application/ipp".
This document defines the 'ipp' scheme for identifying IPP printers and jobs.
Implementer's Guide" document gives insight and advice to implementers of IPP clients and IPP objects.
It is intended to help them understand IPP/1.1 and some of the considerations that may assist them in the design of their client and/or IPP object implementations.
For example, a typical order of processing requests is given, including error checking.
Motivation for some of the specification decisions is also included.
The "Mapping between LPD and IPP Protocols" document gives some advice to implementers of gateways between IPP and LPD (Line Printer Daemon) implementations.
In addition to the base IPP documents, the "Event Notification Specification" document [ipp ntfy] defines OPTIONAL operations that allow a client to subscribe to printing related events.
Subscriptions include "Per Job subscriptions" and "Per Printer subscriptions".
Subscriptions are modeled as Subscription objects.
Four other operations are defined for subscription objects:  get attributes, get subscriptions, renew a subscription, and cancel a subscription.
