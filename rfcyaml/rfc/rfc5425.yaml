- contents:
  - '      Transport Layer Security (TLS) Transport Mapping for Syslog

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n   This document may contain material
    from IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes the use of Transport Layer Security (TLS)
    to\n   provide a secure connection for the transport of syslog messages.\n   This
    document describes the security threats to syslog and how TLS\n   can be used
    to counter such threats.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Terminology ................................................3\n   2.
    Security Requirements for Syslog ................................3\n   3. Using
    TLS to Secure Syslog ......................................4\n   4. Protocol Elements
    ...............................................5\n      4.1. Port Assignment ............................................5\n
    \     4.2. Initiation .................................................5\n           4.2.1.
    Certificate-Based Authentication ....................5\n           4.2.2. Certificate
    Fingerprints ............................6\n           4.2.3. Cryptographic Level
    .................................7\n      4.3. Sending Data ...............................................7\n
    \          4.3.1. Message Length ......................................7\n      4.4.
    Closure ....................................................8\n   5. Security
    Policies ...............................................8\n      5.1. End-Entity
    Certificate Based Authorization .................8\n      5.2. Subject Name Authorization
    .................................9\n      5.3. Unauthenticated Transport Sender
    ...........................9\n      5.4. Unauthenticated Transport Receiver ........................10\n
    \     5.5. Unauthenticated Transport Receiver and Sender .............10\n   6.
    Security Considerations ........................................10\n      6.1.
    Authentication and Authorization Policies .................10\n      6.2. Name
    Validation ...........................................11\n      6.3. Reliability
    ...............................................11\n   7. IANA Considerations ............................................11\n
    \     7.1. Port Number ...............................................11\n   8.
    Acknowledgments ................................................11\n   9. References
    .....................................................12\n      9.1. Normative
    References ......................................12\n      9.2. Informative References
    ....................................12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes the use of Transport Layer Security
    (TLS\n   [RFC5246]) to provide a secure connection for the transport of syslog\n
    \  [RFC5424] messages.  This document describes the security threats to\n   syslog
    and how TLS can be used to counter such threats.\n"
  - contents:
    - "1.1.  Terminology\n   The following definitions are used in this document:\n
      \  o  An \"originator\" generates syslog content to be carried in a\n      message.\n
      \  o  A \"collector\" gathers syslog content for further analysis.\n   o  A
      \"relay\" forwards messages, accepting messages from originators\n      or other
      relays, and sending them to collectors or other relays.\n   o  A \"transport
      sender\" passes syslog messages to a specific\n      transport protocol.\n   o
      \ A \"transport receiver\" takes syslog messages from a specific\n      transport
      protocol.\n   o  A \"TLS client\" is an application that can initiate a TLS\n
      \     connection by sending a Client Hello to a server.\n   o  A \"TLS server\"
      is an application that can receive a Client Hello\n      from a client and reply
      with a Server Hello.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119 [RFC2119].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Security Requirements for Syslog\n   Syslog messages may transit several
    hops to arrive at the intended\n   collector.  Some intermediary networks may
    not be trusted by the\n   originator, relay, or receiver because the network is
    in a different\n   security domain or at a different security level from the originator,\n
    \  relay, or collector.  Another security concern is that the\n   originator,
    relay, or receiver itself is in an insecure network.\n   There are several threats
    to be addressed for syslog security.  The\n   primary threats are:\n   o  Masquerade.
    \ An unauthorized transport sender may send messages to\n      a legitimate transport
    receiver, or an unauthorized transport\n      receiver may try to deceive a legitimate
    transport sender into\n      sending syslog messages to it.\n   o  Modification.
    \ An attacker between the transport sender and the\n      transport receiver may
    modify an in-transit syslog message and\n      then forward the message to the
    transport receiver.  Such\n      modification may make the transport receiver
    misunderstand the\n      message or cause it to behave in undesirable ways.\n
    \  o  Disclosure.  An unauthorized entity may examine the contents of\n      the
    syslog messages, gaining unauthorized access to the\n      information.  Some
    data in syslog messages is sensitive and may be\n      useful to an attacker,
    such as the password of an authorized\n      administrator or user.\n   The secondary
    threat is:\n   o  Message stream modification.  An attacker may delete one or
    more\n      syslog messages from a series of messages, replay a message, or\n
    \     alter the delivery sequence.  The syslog protocol itself is not\n      based
    on message order.  However, an event in a syslog message may\n      relate semantically
    to events in other messages, so message\n      ordering may be important to understanding
    a sequence of events.\n   The following threats are deemed to be of lesser importance
    for\n   syslog, and are not addressed in this document:\n   o  Denial of Service\n
    \  o  Traffic Analysis\n"
  title: 2.  Security Requirements for Syslog
- contents:
  - "3.  Using TLS to Secure Syslog\n   TLS can be used as a secure transport to counter
    all the primary\n   threats to syslog described above:\n   o  Confidentiality
    to counter disclosure of the message contents.\n   o  Integrity-checking to counter
    modifications to a message on a hop-\n      by-hop basis.\n   o  Server or mutual
    authentication to counter masquerade.\n   Note: This secure transport (i.e., TLS)
    only secures syslog transport\n   in a hop-by-hop manner, and is not concerned
    with the contents of\n   syslog messages.  In particular, the authenticated identity
    of the\n   transport sender (e.g., subject name in the certificate) is not\n   necessarily
    related to the HOSTNAME field of the syslog message.\n   When authentication of
    syslog message origin is required, [SYS-SIGN]\n   can be used.\n"
  title: 3.  Using TLS to Secure Syslog
- contents:
  - '4.  Protocol Elements

    '
  - contents:
    - "4.1.  Port Assignment\n   A syslog transport sender is always a TLS client
      and a transport\n   receiver is always a TLS server.\n   The TCP port 6514 has
      been allocated as the default port for syslog\n   over TLS, as defined in this
      document.\n"
    title: 4.1.  Port Assignment
  - contents:
    - "4.2.  Initiation\n   The transport sender should initiate a connection to the
      transport\n   receiver and then send the TLS Client Hello to begin the TLS\n
      \  handshake.  When the TLS handshake has finished, the transport sender\n   MAY
      then send the first syslog message.\n   TLS typically uses certificates [RFC5280]
      to authenticate peers.\n   Implementations MUST support TLS 1.2 [RFC5246] and
      are REQUIRED to\n   support the mandatory to implement cipher suite, which is\n
      \  TLS_RSA_WITH_AES_128_CBC_SHA.  This document is assumed to apply to\n   future
      versions of TLS, in which case the mandatory to implement\n   cipher suite for
      the implemented version MUST be supported.\n"
    - contents:
      - "4.2.1.  Certificate-Based Authentication\n   Both syslog transport sender
        (TLS client) and syslog transport\n   receiver (TLS server) MUST implement
        certificate-based\n   authentication.  This consists of validating the certificate
        and\n   verifying that the peer has the corresponding private key.  The\n
        \  latter part is performed by TLS.  To ensure interoperability between\n
        \  clients and servers, the following methods for certificate validation\n
        \  SHALL be implemented:\n   o  Certification path validation: The TLS peer
        is configured with one\n      or more trust anchors (typically root CA (certification
        authority)\n      certificates), which allow it to verify a binding between
        the\n      subject name and the public key.  Additional policy controls\n
        \     needed for authorizing the syslog transport sender and receiver\n      (i.e.,
        verifying that the subject name represents an authorized\n      party) are
        described in Section 5.  Certification path validation\n      is performed
        as defined in [RFC5280].  This method is useful where\n      there is a Public
        Key Infrastructure (PKI) deployment.\n   o  End-entity certificate matching:
        The transport sender or receiver\n      is configured with information necessary
        to identify the valid\n      end-entity certificates of its authorized peers.
        \ The end-entity\n      certificates can be self-signed, and no certification
        path\n      validation is needed.  Implementations MUST support certificate\n
        \     fingerprints in Section 4.2.2 and MAY allow other formats for\n      end-entity
        certificates such as a DER-encoded certificate.  This\n      method provides
        an alternative to a PKI that is simple to deploy\n      and still maintains
        a reasonable level of security.\n   Both transport receiver and transport
        sender implementations MUST\n   provide means to generate a key pair and self-signed
        certificate in\n   the case that a key pair and certificate are not available
        through\n   another mechanism.\n   The transport receiver and transport sender
        SHOULD provide mechanisms\n   to record the end-entity certificate for the
        purpose of correlating\n   it with the sent or received data.\n"
      title: 4.2.1.  Certificate-Based Authentication
    - contents:
      - "4.2.2.  Certificate Fingerprints\n   Both client and server implementations
        MUST make the certificate\n   fingerprints for their certificate available
        through a management\n   interface.  The labels for the algorithms are taken
        from the textual\n   names of the hash functions as defined in the IANA registry
        \"Hash\n   Function Textual Names\" allocated in [RFC4572].\n   The mechanism
        to generate a fingerprint is to take the hash of the\n   DER-encoded certificate
        using a cryptographically strong algorithm,\n   and convert the result into
        colon-separated, hexadecimal bytes, each\n   represented by 2 uppercase ASCII
        characters.  When a fingerprint\n   value is displayed or configured, the
        fingerprint is prepended with\n   an ASCII label identifying the hash function
        followed by a colon.\n   Implementations MUST support SHA-1 as the hash algorithm
        and use the\n   ASCII label \"sha-1\" to identify the SHA-1 algorithm.  The
        length of a\n   SHA-1 hash is 20 bytes and the length of the corresponding\n
        \  fingerprint string is 65 characters.  An example certificate\n   fingerprint
        is:\n      sha-1:E1:2D:53:2B:7C:6B:8A:29:A2:76:C8:64:36:0B:08:4B:7A:F1:9E:9D\n
        \  During validation the hash is extracted from the fingerprint and\n   compared
        against the hash calculated over the received certificate.\n"
      title: 4.2.2.  Certificate Fingerprints
    - contents:
      - "4.2.3.  Cryptographic Level\n   Syslog applications SHOULD be implemented
        in a manner that permits\n   administrators, as a matter of local policy,
        to select the\n   cryptographic level and authentication options they desire.\n
        \  TLS permits the resumption of an earlier TLS session or the use of\n   another
        active session when a new session is requested, in order to\n   save the expense
        of another full TLS handshake.  The security\n   parameters of the resumed
        session are reused for the requested\n   session.  The security parameters
        SHOULD be checked against the\n   security requirements of the requested session
        to make sure that the\n   resumed session provides proper security.\n"
      title: 4.2.3.  Cryptographic Level
    title: 4.2.  Initiation
  - contents:
    - "4.3.  Sending Data\n   All syslog messages MUST be sent as TLS \"application
      data\".  It is\n   possible for multiple syslog messages to be contained in
      one TLS\n   record or for a single syslog message to be transferred in multiple\n
      \  TLS records.  The application data is defined with the following ABNF\n   [RFC5234]
      expression:\n   APPLICATION-DATA = 1*SYSLOG-FRAME\n   SYSLOG-FRAME = MSG-LEN
      SP SYSLOG-MSG\n   MSG-LEN = NONZERO-DIGIT *DIGIT\n   SP = %d32\n   NONZERO-DIGIT
      = %d49-57\n   DIGIT = %d48 / NONZERO-DIGIT\n   SYSLOG-MSG is defined in the
      syslog protocol [RFC5424].\n"
    - contents:
      - "4.3.1.  Message Length\n   The message length is the octet count of the SYSLOG-MSG
        in the\n   SYSLOG-FRAME.  A transport receiver MUST use the message length
        to\n   delimit a syslog message.  There is no upper limit for a message\n
        \  length per se.  However, in order to establish a baseline for\n   interoperability,
        this specification requires that a transport\n   receiver MUST be able to
        process messages with a length up to and\n   including 2048 octets.  Transport
        receivers SHOULD be able to process\n   messages with lengths up to and including
        8192 octets.\n"
      title: 4.3.1.  Message Length
    title: 4.3.  Sending Data
  - contents:
    - "4.4.  Closure\n   A transport sender MUST close the associated TLS connection
      if the\n   connection is not expected to deliver any syslog messages later.
      \ It\n   MUST send a TLS close_notify alert before closing the connection.  A\n
      \  transport sender (TLS client) MAY choose to not wait for the\n   transport
      receiver's close_notify alert and simply close the\n   connection, thus generating
      an incomplete close on the transport\n   receiver (TLS server) side.  Once the
      transport receiver gets a\n   close_notify from the transport sender, it MUST
      reply with a\n   close_notify unless it becomes aware that the connection has
      already\n   been closed by the transport sender (e.g., the closure was indicated\n
      \  by TCP).\n   When no data is received from a connection for a long time (where
      the\n   application decides what \"long\" means), a transport receiver MAY\n
      \  close the connection.  The transport receiver (TLS server) MUST\n   attempt
      to initiate an exchange of close_notify alerts with the\n   transport sender
      before closing the connection.  Transport receivers\n   that are unprepared
      to receive any more data MAY close the connection\n   after sending the close_notify
      alert, thus generating an incomplete\n   close on the transport sender side.\n"
    title: 4.4.  Closure
  title: 4.  Protocol Elements
- contents:
  - "5.  Security Policies\n   Different environments have different security requirements
    and\n   therefore would deploy different security policies.  This section\n   discusses
    some of the security policies that may be implemented by\n   syslog transport
    receivers and syslog transport senders.  The\n   security policies describe the
    requirements for authentication and\n   authorization.  The list of policies in
    this section is not\n   exhaustive and other policies MAY be implemented.\n   If
    the peer does not meet the requirements of the security policy,\n   the TLS handshake
    MUST be aborted with an appropriate TLS alert.\n"
  - contents:
    - "5.1.  End-Entity Certificate Based Authorization\n   In the simplest case,
      the transport sender and receiver are\n   configured with information necessary
      to identity the valid\n   end-entity certificates of its authorized peers.\n
      \  Implementations MUST support specifying the authorized peers using\n   certificate
      fingerprints, as described in Section 4.2.1 and\n   Section 4.2.2.\n"
    title: 5.1.  End-Entity Certificate Based Authorization
  - contents:
    - "5.2.  Subject Name Authorization\n   Implementations MUST support certification
      path validation [RFC5280].\n   In addition, they MUST support specifying the
      authorized peers using\n   locally configured host names and matching the name
      against the\n   certificate as follows.\n   o  Implementations MUST support
      matching the locally configured host\n      name against a dNSName in the subjectAltName
      extension field and\n      SHOULD support checking the name against the common
      name portion\n      of the subject distinguished name.\n   o  The '*' (ASCII
      42) wildcard character is allowed in the dNSName of\n      the subjectAltName
      extension (and in common name, if used to store\n      the host name), but only
      as the left-most (least significant) DNS\n      label in that value.  This wildcard
      matches any left-most DNS\n      label in the server name.  That is, the subject
      *.example.com\n      matches the server names a.example.com and b.example.com,
      but does\n      not match example.com or a.b.example.com.  Implementations MUST\n
      \     support wildcards in certificates as specified above, but MAY\n      provide
      a configuration option to disable them.\n   o  Locally configured names MAY
      contain the wildcard character to\n      match a range of values.  The types
      of wildcards supported MAY be\n      more flexible than those allowed in subject
      names, making it\n      possible to support various policies for different environments.\n
      \     For example, a policy could allow for a trust-root-based\n      authorization
      where all credentials issued by a particular CA\n      trust root are authorized.\n
      \  o  If the locally configured name is an internationalized domain\n      name,
      conforming implementations MUST convert it to the ASCII\n      Compatible Encoding
      (ACE) format for performing comparisons, as\n      specified in Section 7 of
      [RFC5280].\n   o  Implementations MAY support matching a locally configured
      IP\n      address against an iPAddress stored in the subjectAltName\n      extension.
      \ In this case, the locally configured IP address is\n      converted to an
      octet string as specified in [RFC5280], Section\n      4.2.1.6.  A match occurs
      if this octet string is equal to the\n      value of iPAddress in the subjectAltName
      extension.\n"
    title: 5.2.  Subject Name Authorization
  - contents:
    - "5.3.  Unauthenticated Transport Sender\n   In some environments the authenticity
      of syslog data is not important\n   or is verifiable by other means, so transport
      receivers may accept\n   data from any transport sender.  To achieve this, the
      transport\n   receiver can skip transport sender authentication (by not requesting\n
      \  client authentication in TLS or by accepting any certificate).  In\n   this
      case, the transport receiver is authenticated and authorized,\n   however this
      policy does not protect against the threat of transport\n   sender masquerade
      described in Section 2.  The use of this policy is\n   generally NOT RECOMMENDED
      for this reason.\n"
    title: 5.3.  Unauthenticated Transport Sender
  - contents:
    - "5.4.  Unauthenticated Transport Receiver\n   In some environments the confidentiality
      of syslog data is not\n   important, so messages are sent to any transport receiver.
      \ To\n   achieve this, the transport sender can skip transport receiver\n   authentication
      (by accepting any certificate).  While this policy\n   does authenticate and
      authorize the transport sender, it does not\n   protect against the threat of
      transport receiver masquerade described\n   in Section 2, leaving the data sent
      vulnerable to disclosure and\n   modification.  The use of this policy is generally
      NOT RECOMMENDED\n   for this reason.\n"
    title: 5.4.  Unauthenticated Transport Receiver
  - contents:
    - "5.5.  Unauthenticated Transport Receiver and Sender\n   In environments where
      security is not a concern at all, both the\n   transport receiver and transport
      sender can skip authentication (as\n   described in Sections 5.3 and 5.4).  This
      policy does not protect\n   against any of the threats described in Section
      2 and is therefore\n   NOT RECOMMENDED.\n"
    title: 5.5.  Unauthenticated Transport Receiver and Sender
  title: 5.  Security Policies
- contents:
  - "6.  Security Considerations\n   This section describes security considerations
    in addition to those\n   in [RFC5246].\n"
  - contents:
    - "6.1.  Authentication and Authorization Policies\n   Section 5 discusses various
      security policies that may be deployed.\n   The threats in Section 2 are mitigated
      only if both the transport\n   sender and transport receiver are properly authenticated
      and\n   authorized, as described in Sections 5.1 and 5.2.  These are the\n   RECOMMENDED
      configurations for a default policy.\n   If the transport receiver does not
      authenticate the transport sender,\n   it may accept data from an attacker.
      \ Unless it has another way of\n   authenticating the source of the data, the
      data should not be\n   trusted.  This is especially important if the syslog
      data is going to\n   be used to detect and react to security incidents.  The
      transport\n   receiver may also increase its vulnerability to denial of service,\n
      \  resource consumption, and other attacks if it does not authenticate\n   the
      transport sender.  Because of the increased vulnerability to\n   attack, this
      type of configuration is NOT RECOMMENDED.\n   If the transport sender does not
      authenticate the syslog transport\n   receiver, then it may send data to an
      attacker.  This may disclose\n   sensitive data within the log information that
      is useful to an\n   attacker, resulting in further compromises within the system.
      \ If a\n   transport sender is operated in this mode, the data sent SHOULD be\n
      \  limited to data that is not valuable to an attacker.  In practice\n   this
      is very difficult to achieve, so this type of configuration is\n   NOT RECOMMENDED.\n
      \  Forgoing authentication and authorization on both sides allows for\n   man-in-the-middle,
      masquerade, and other types of attacks that can\n   completely compromise integrity
      and confidentiality of the data.\n   This type of configuration is NOT RECOMMENDED.\n"
    title: 6.1.  Authentication and Authorization Policies
  - contents:
    - "6.2.  Name Validation\n   The subject name authorization policy authorizes
      the subject in the\n   certificate against a locally configured name.  It is
      generally not\n   appropriate to obtain this name through other means, such
      as DNS\n   lookup, since this introduces additional security vulnerabilities.\n"
    title: 6.2.  Name Validation
  - contents:
    - "6.3.  Reliability\n   It should be noted that the syslog transport specified
      in this\n   document does not use application-layer acknowledgments.  TCP uses\n
      \  retransmissions to provide protection against some forms of data\n   loss.
      \ However, if the TCP connection (or TLS session) is broken for\n   some reason
      (or closed by the transport receiver), the syslog\n   transport sender cannot
      always know what messages were successfully\n   delivered to the syslog application
      at the other end.\n"
    title: 6.3.  Reliability
  title: 6.  Security Considerations
- contents:
  - '7.  IANA Considerations

    '
  - contents:
    - "7.1.  Port Number\n   IANA assigned TCP port number 6514 in the \"Registered
      Port Numbers\"\n   range with the keyword \"syslog-tls\".  This port will be
      the default\n   port for syslog over TLS, as defined in this document.\n"
    title: 7.1.  Port Number
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgments\n   Authors appreciate Eric Rescorla, Rainer Gerhards, Tom
    Petch, Anton\n   Okmianski, Balazs Scheidler, Bert Wijnen, Martin Schuette, Chris\n
    \  Lonvick, and members of the syslog working group for their effort on\n   issues
    resolving discussion.  Authors would also like to thank Balazs\n   Scheidler,
    Tom Petch, and other persons for their input on security\n   threats of syslog.
    \ The authors would like to acknowledge David\n   Harrington for his detailed
    reviews of the content and grammar of the\n   document and Pasi Eronen for his
    contributions to certificate\n   authentication and authorization sections.\n"
  title: 8.  Acknowledgments
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC5234]   Crocker, D. and P. Overell, \"Augmented BNF for
      Syntax\n               Specifications: ABNF\", STD 68, RFC 5234, January 2008.\n
      \  [RFC5246]   Dierks, T. and E. Rescorla, \"The Transport Layer Security\n
      \              (TLS) Protocol Version 1.2\", RFC 5246, August 2008.\n   [RFC5280]
      \  Cooper, D., Santesson, S., Farrell, S., Boeyen, S.,\n               Housley,
      R., and W. Polk, \"Internet X.509 Public Key\n               Infrastructure
      Certificate and Certificate Revocation\n               List (CRL) Profile\",
      RFC 5280, May 2008.\n   [RFC5424]   Gerhards, R., \"The Syslog Protocol\", RFC
      5424, March\n               2009.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC4572]   Lennox, J., \"Connection-Oriented
      Media Transport over the\n               Transport Layer Security (TLS) Protocol
      in the Session\n               Description Protocol (SDP)\", RFC 4572, July
      2006.\n   [SYS-SIGN]  Kelsey, J., \"Signed syslog Messages\", Work in Progress,\n
      \              October 2007.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Authors' Addresses\n   Fuyou Miao (editor)\n   Huawei Technologies\n   No. 3,
    Xinxi Rd\n   Shangdi Information Industry Base\n   Haidian District, Beijing  100085\n
    \  P. R. China\n   Phone: +86 10 8288 2008\n   EMail: miaofy@huawei.com\n   URI:
    \  www.huawei.com\n   Yuzhi Ma (editor)\n   Huawei Technologies\n   No. 3, Xinxi
    Rd\n   Shangdi Information Industry Base\n   Haidian District, Beijing  100085\n
    \  P. R. China\n   Phone: +86 10 8288 2008\n   EMail: myz@huawei.com\n   URI:
    \  www.huawei.com\n   Joseph Salowey (editor)\n   Cisco Systems, Inc.\n   2901
    3rd. Ave\n   Seattle, WA  98121\n   USA\n   EMail: jsalowey@cisco.com\n"
  title: Authors' Addresses
