- contents:
  - '        The Session Description Protocol (SDP) Content Attribute

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document defines a new Session Description Protocol (SDP) media-\n
    \  level attribute, 'content'.  The 'content' attribute defines the\n   content
    of the media stream to a more detailed level than the media\n   description line.
    \ The sender of an SDP session description can\n   attach the 'content' attribute
    to one or more media streams.  The\n   receiving application can then treat each
    media stream differently\n   (e.g., show it on a big or small screen) based on
    its content.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  2\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .
    . . . .  2\n   3.  Related Techniques . . . . . . . . . . . . . . . . . . . .
    . .  2\n   4.  Motivation for the New Content Attribute . . . . . . . . . . .
    \ 3\n   5.  The Content Attribute  . . . . . . . . . . . . . . . . . . . .  4\n
    \  6.  The Content Attribute in the Offer/Answer Model  . . . . . . .  5\n   7.
    \ Examples . . . . . . . . . . . . . . . . . . . . . . . . . . .  6\n   8.  Operation
    with SMIL  . . . . . . . . . . . . . . . . . . . . .  7\n   9.  Security Considerations
    \ . . . . . . . . . . . . . . . . . . .  7\n   10. IANA Considerations  . . .
    . . . . . . . . . . . . . . . . . .  8\n   11. Acknowledgements . . . . . . .
    . . . . . . . . . . . . . . . .  8\n   12. References . . . . . . . . . . . .
    . . . . . . . . . . . . . .  9\n     12.1.  Normative References  . . . . . .
    . . . . . . . . . . . .  9\n     12.2.  Informational References  . . . . . .
    . . . . . . . . . .  9\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Session Description Protocol (SDP) [1] is a protocol
    that is\n   intended to describe multimedia sessions for the purposes of session\n
    \  announcement, session invitation, and other forms of multimedia\n   session
    initiation.  One of the most typical use cases of SDP is\n   where it is used
    with the Session Initiation Protocol (SIP) [5].\n   There are situations where
    one application receives several similar\n   media streams, which are described
    in an SDP session description.\n   The media streams can be similar in the sense
    that their content\n   cannot be distinguished just by examining their media description\n
    \  lines (e.g., two video streams).  The 'content' attribute is needed\n   so
    that the receiving application can treat each media stream\n   appropriately based
    on its content.\n   This specification defines the SDP 'content' media-level attribute,\n
    \  which provides more information about the media stream than the 'm'\n   line
    in an SDP session description.\n   The main purpose of this specification is to
    allow applications to\n   take automated actions based on the 'content' attributes.
    \ However,\n   this specification does not define those actions.  Consequently,
    two\n   implementations can behave completely differently when receiving the\n
    \  same 'content' attribute.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   In this document, the key words \"MUST\", \"MUST NOT\", \"REQUIRED\",\n
    \  \"SHALL\", \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\n
    \  RECOMMENDED\", \"MAY\", and \"OPTIONAL\" are to be interpreted as\n   described
    in BCP 14, RFC 2119 [3], and indicate requirement levels\n   for compliant implementations.\n"
  title: 2.  Terminology
- contents:
  - "3.  Related Techniques\n   The 'label' attribute [10] enables a sender to attach
    a pointer to a\n   particular media stream.  The namespace of the 'label' attribute\n
    \  itself is unrestricted; so, in principle, it could also be used to\n   convey
    information about the content of a media stream.  However, in\n   practice, this
    is not possible because of the need for backward\n   compatibility.  Existing
    implementations of the 'label' attribute\n   already use values from that unrestricted
    namespace in an\n   application-specific way.  So, it is not possible to reserve
    portions\n   of the 'label' attribute's namespace without possible conflict with\n
    \  already used application-specific labels.\n   It is possible to assign semantics
    to a media stream with an external\n   document that uses the 'label' attribute
    as a pointer.  The downside\n   of this approach is that it requires an external
    document.\n   Therefore, this kind of mechanism is only applicable to special
    use\n   cases where such external documents are used (e.g., centralized\n   conferencing).\n
    \  Yet another way to attach semantics to a media stream is to use the\n   'i'
    SDP attribute, defined in [1].  However, values of the 'i'\n   attribute are intended
    for human users and not for automata.\n"
  title: 3.  Related Techniques
- contents:
  - "4.  Motivation for the New Content Attribute\n   Currently, SDP does not provide
    any means for describing the content\n   of a media stream (e.g., speaker's image,
    slides, sign language) in a\n   form that the application can understand.  Of
    course, the end user\n   can see the content of the media stream and read its
    title, but the\n   application cannot understand what the media stream contains.\n
    \  The application that is receiving multiple similar (e.g., same type\n   and
    format) media streams needs, in some cases, to know what the\n   contents of those
    streams are.  This kind of situation occurs, for\n   example, in cases where presentation
    slides, the speaker's image, and\n   sign language are transported as separate
    media streams.  It would be\n   desirable that the receiving application could
    distinguish them in a\n   way that it could handle them automatically in an appropriate
    manner.\n                +--------------------------------------+\n                |+------------++----------------------+|\n
    \               ||            ||                      ||\n                || speaker's
    \ ||                      ||\n                ||   image    ||                      ||\n
    \               ||            ||                      ||\n                |+------------+|
    \    presentation     ||\n                |+------------+|        slides        ||\n
    \               ||            ||                      ||\n                ||    sign
    \   ||                      ||\n                ||  language  ||                      ||\n
    \               ||            ||                      ||\n                |+------------++----------------------+|\n
    \               +--------------------------------------+\n                      Figure
    1: Application's Screen\n   Figure 1 shows a screen of a typical communication
    application.  The\n   'content' attribute makes it possible for the application
    to decide\n   where to show each media stream.  From an end user's perspective,
    it\n   is desirable that the user does not need to arrange each media stream\n
    \  every time a new media session starts.\n   The 'content' attribute could also
    be used in more complex\n   situations.  An example of such a situation is an
    application\n   controlling equipment in an auditorium.  An auditorium can have
    many\n   different output channels for video (e.g., main screen and two\n   smaller
    screens) and audio (e.g., main speakers and headsets for the\n   participants).
    \ In this kind of environment, a lot of interaction\n   from the end user who
    operates the application would be required in\n   absence of cues from a controlling
    application.  The 'content'\n   attribute would make it possible, for example,
    for an end user to\n   specify, only once, which output each media stream of a
    given session\n   should use.  The application could automatically apply the same
    media\n   layout for subsequent sessions.  So, the 'content' attribute can help\n
    \  reduce the amount of required end-user interaction considerably.\n"
  title: 4.  Motivation for the New Content Attribute
- contents:
  - "5.  The Content Attribute\n   This specification defines a new media-level value
    attribute,\n   'content'.  Its formatting in SDP is described by the following
    ABNF\n   (Augmented Backus-Naur Form) [2]:\n       content-attribute   = \"a=content:\"
    mediacnt-tag\n       mediacnt-tag        = mediacnt *(\",\" mediacnt)\n       mediacnt
    \           = \"slides\" / \"speaker\" / \"sl\" / \"main\"\n                             /
    \"alt\" / mediacnt-ext\n       mediacnt-ext        = token\n   The 'content' attribute
    contains one or more tokens, which MAY be\n   attached to a media stream by a
    sending application.  An application\n   MAY attach a 'content' attribute to any
    media stream it describes.\n   This document provides a set of pre-defined values
    for the 'content'\n   attribute.  Other values can be defined in the future.  The
    pre-\n   defined values are:\n   slides:  the media stream includes presentation
    slides.  The media\n      type can be, for example, a video stream or a number
    of instant\n      messages with pictures.  Typical use cases for this are online\n
    \     seminars and courses.  This is similar to the 'presentation' role\n      in
    H.239 [12].\n   speaker:  the media stream contains the image of the speaker.
    \ The\n      media can be, for example, a video stream or a still image.\n      Typical
    use cases for this are online seminars and courses.\n   sl:  the media stream
    contains sign language.  A typical use case for\n      this is an audio stream
    that is translated into sign language,\n      which is sent over a video stream.\n
    \  main:  the media stream is taken from the main source.  A typical use\n      case
    for this is a concert where the camera is shooting the\n      performer.\n   alt:
    \ the media stream is taken from the alternative source.  A\n      typical use
    case for this is an event where the ambient sound is\n      separated from the
    main sound.  The alternative audio stream could\n      be, for example, the sound
    of a jungle.  Another example is the\n      video of a conference room, while
    the main stream carries the\n      video of the speaker.  This is similar to the
    'live' role in\n      H.239.\n   All these values can be used with any media type.
    \ We chose not to\n   restrict each value to a particular set of media types in
    order not\n   to prevent applications from using innovative combinations of a
    given\n   value with different media types.\n   The application can make decisions
    on how to handle a single media\n   stream based on both the media type and the
    value of the 'content'\n   attribute.  If the application does not implement any
    special logic\n   for the handling of a given media type and 'content' value\n
    \  combination, it applies the application's default handling for the\n   media
    type.\n   Note that the same 'content' attribute value can occur more than once\n
    \  in a single session description.\n"
  title: 5.  The Content Attribute
- contents:
  - "6.  The Content Attribute in the Offer/Answer Model\n   This specification does
    not define a means to discover whether the\n   peer endpoint understands the 'content'
    attribute because 'content'\n   values are just informative at the offer/answer
    model [8] level.  The\n   fact that the peer endpoint does not understand the
    'content'\n   attribute does not keep the media session from being established.\n
    \  The only consequence is that end user interaction on the receiving\n   side
    may be required to direct the individual media streams\n   appropriately.\n   The
    'content' attribute describes the data that the application\n   generating the
    SDP session description intends to send over a\n   particular media stream.  The
    'content' values for both directions of\n   a media stream do not need to be the
    same.  Therefore, an SDP answer\n   MAY contain 'content' attributes even if none
    were present in the\n   offer.  Similarly, the answer MAY contain no 'content'
    attributes\n   even if they were present in the offer.  Furthermore, the values
    of\n   'content' attributes do not need to match in an offer and an answer.\n
    \  The 'content' attribute can also be used in scenarios where SDP is\n   used
    in a declarative style.  For example, 'content' attributes can\n   be used in
    SDP session descriptors that are distributed with Session\n   Announcement Protocol
    (SAP) [9].\n"
  title: 6.  The Content Attribute in the Offer/Answer Model
- contents:
  - "7.  Examples\n   There are two examples in this section.  The first example,
    shown\n   below, uses a single 'content' attribute value per media stream:\n       v=0\n
    \      o=Alice 292742730 29277831 IN IP4 131.163.72.4\n       s=Second lecture
    from information technology\n       c=IN IP4 131.164.74.2\n       t=0 0\n       m=video
    52886 RTP/AVP 31\n       a=rtpmap:31 H261/9000\n       a=content:slides\n       m=video
    53334 RTP/AVP 31\n       a=rtpmap:31 H261/9000\n       a=content:speaker\n       m=video
    54132 RTP/AVP 31\n       a=rtpmap:31 H261/9000\n       a=content:sl\n   The second
    example, below, is a case where there is more than one\n   'content' attribute
    value per media stream.  The difference with the\n   previous example is that
    now the conferencing system might\n   automatically mix the video streams from
    the presenter and slides:\n       v=0\n       o=Alice 292742730 29277831 IN IP4
    131.163.72.4\n       s=Second lecture from information technology\n       c=IN
    IP4 131.164.74.2\n       t=0 0\n       m=video 52886 RTP/AVP 31\n       a=rtpmap:31
    H261/9000\n       a=content:slides,speaker\n       m=video 54132 RTP/AVP 31\n
    \      a=rtpmap:31 H261/9000\n       a=content:sl\n"
  title: 7.  Examples
- contents:
  - "8.  Operation with SMIL\n   The values of 'content' attribute, defined in Section
    5, can also be\n   used with Synchronized Multimedia Integration Language (SMIL)
    [11].\n   SMIL contains a 'param' element, which is used for describing the\n
    \  content of a media flow.  However, this 'param' element, like the\n   'content'
    attribute, provides an application-specific description of\n   the media content.\n
    \  Details on how to use the values of the 'content' attribute with\n   SMIL's
    'param' element are outside the scope of this specification.\n"
  title: 8.  Operation with SMIL
- contents:
  - "9.  Security Considerations\n   An attacker may attempt to add, modify, or remove
    'content'\n   attributes from a session description.  Depending on how an\n   implementation
    chooses to react to the presence or absence of a given\n   'content' attribute,
    this could result in an application behaving in\n   an undesirable way; therefore,
    it is strongly RECOMMENDED that\n   integrity protection be applied to the SDP
    session descriptions.\n   Integrity protection can be provided for a session description\n
    \  carried in an SIP [5], e.g., by using S/MIME [6] or Transport Layer\n   Security
    (TLS) [7].\n   It is assumed that values of 'content' attribute do not contain
    data\n   that would be truly harmful if it is exposed to a possible attacker.\n
    \  It must be noted that the initial set of values does not contain any\n   data
    that would require confidentiality protection.  However, S/MIME\n   and TLS can
    be used to protect confidentiality, if needed.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   This document defines a new 'content' attribute
    for SDP.  It also\n   defines an initial set of values for it.  Some general information\n
    \  regarding the 'content' attribute is presented in the following:\n   Contact
    name:        Jani Hautakorpi <Jani.Hautakorpi@ericsson.com>.\n   Attribute name:
    \     'content'.\n   Type of attribute    Media level.\n   Subject to charset:
    \ No.\n   Purpose of attribute:  The 'content' attribute gives information from\n
    \     the content of the media stream to the receiving application.\n   Allowed
    attribute values: \"slides\", \"speaker\", \"sl\", \"main\", \"alt\",\n      and
    any other registered values.\n   The IANA created a subregistry for 'content'
    attribute values under\n   the Session Description Protocol (SDP) Parameters registry.
    \ The\n   initial values for the subregistry are as follows:\n   Value of 'content'
    attribute Reference Description\n   ---------------------------- --------- -----------\n
    \  slides                       RFC 4796  Presentation slides\n   speaker                      RFC
    4796  Image from the speaker\n   sl                           RFC 4796  Sign language\n
    \  main                         RFC 4796  Main media stream\n   alt                          RFC
    4796  Alternative media stream\n   As per the terminology in RFC 2434 [4], the
    registration policy for\n   new values for the 'content' parameter shall be 'Specification\n
    \  Required'.\n   If new values for 'content' attributes are specified in the
    future,\n   they should consist of a meta description of the contents of a media\n
    \  stream.  New values for 'content' attributes should not describe\n   things
    like what to do in order to handle a stream.\n"
  title: 10.  IANA Considerations
- contents:
  - "11.  Acknowledgements\n   The authors would like to thank Arnoud van Wijk and
    Roni Even, who\n   provided valuable ideas for this document.  We wish to also
    thank Tom\n   Taylor for his thorough review.\n"
  title: 11.  Acknowledgements
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [1]   Handley, M., Jacobson, V., and C. Perkins,
      \"SDP: Session\n         Description Protocol\", RFC 4566, July 2006.\n   [2]
      \  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n         Specifications:
      ABNF\", RFC 4234, October 2005.\n   [3]   Bradner, S., \"Key words for use in
      RFCs to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n
      \  [4]   Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA\n         Considerations
      Section in RFCs\", BCP 26, RFC 2434,\n         October 1998.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informational References\n   [5]   Rosenberg, J., Schulzrinne, H., Camarillo,
      G., Johnston, A.,\n         Peterson, J., Sparks, R., Handley, M., and E. Schooler,
      \"SIP:\n         Session Initiation Protocol\", RFC 3261, June 2002.\n   [6]
      \  Ramsdell, B., \"Secure/Multipurpose Internet Mail Extensions\n         (S/MIME)
      Version 3.1 Message Specification\", RFC 3851,\n         July 2004.\n   [7]
      \  Dierks, T. and E. Rescorla, \"The Transport Layer Security (TLS)\n         Protocol
      Version 1.1\", RFC 4346, April 2006.\n   [8]   Rosenberg, J. and H. Schulzrinne,
      \"An Offer/Answer Model with\n         Session Description Protocol (SDP)\",
      RFC 3264, June 2002.\n   [9]   Handley, M., Perkins, C., and E. Whelan, \"Session
      Announcement\n         Protocol\", RFC 2974, October 2000.\n   [10]  Levin,
      O. and G. Camarillo, \"The Session Description Protocol\n         (SDP) Label
      Attribute\", RFC 4574, August 2006.\n   [11]  Michel, T. and J. Ayars, \"Synchronized
      Multimedia Integration\n         Language (SMIL 2.0) - [Second Edition]\", World
      Wide Web\n         Consortium Recommendation REC-SMIL2-20050107, January 2005,\n
      \        <http://www.w3.org/TR/2005/REC-SMIL2-20050107>.\n   [12]  ITU-T, \"Infrastructure
      of audiovisual services - Systems\n         aspects; Role management and additional
      media channels for\n         H.300-series terminals\", Series H H.239, July
      2003.\n"
    title: 12.2.  Informational References
  title: 12.  References
- contents:
  - "Authors' Addresses\n   Jani Hautakorpi\n   Ericsson\n   Hirsalantie 11\n   Jorvas
    \ 02420\n   Finland\n   EMail: Jani.Hautakorpi@ericsson.com\n   Gonzalo Camarillo\n
    \  Ericsson\n   Hirsalantie 11\n   Jorvas  02420\n   Finland\n   EMail: Gonzalo.Camarillo@ericsson.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
