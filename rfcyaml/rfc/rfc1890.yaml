- title: __initial_text__
  contents:
  - '    RTP Profile for Audio and Video Conferences with Minimal Control

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a profile for the use of the real-time transport\n\
    \   protocol (RTP), version 2, and the associated control protocol, RTCP,\n  \
    \ within audio and video multiparticipant conferences with minimal\n   control.\
    \ It provides interpretations of generic fields within the RTP\n   specification\
    \ suitable for audio and video conferences.  In\n   particular, this document\
    \ defines a set of default mappings from\n   payload type numbers to encodings.\n\
    \   The document also describes how audio and video data may be carried\n   within\
    \ RTP. It defines a set of standard encodings and their names\n   when used within\
    \ RTP. However, the encoding definitions are\n   independent of the particular\
    \ transport mechanism used. The\n   descriptions provide pointers to reference\
    \ implementations and the\n   detailed standards. This document is meant as an\
    \ aid for implementors\n   of audio, video and other real-time multimedia applications.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This profile defines aspects of RTP left unspecified in\
    \ the RTP\n   Version 2 protocol definition (RFC 1889). This profile is intended\n\
    \   for the use within audio and video conferences with minimal session\n   control.\
    \ In particular, no support for the negotiation of parameters\n   or membership\
    \ control is provided. The profile is expected to be\n   useful in sessions where\
    \ no negotiation or membership control are\n   used (e.g., using the static payload\
    \ types and the membership\n   indications provided by RTCP), but this profile\
    \ may also be useful in\n   conjunction with a higher-level control protocol.\n\
    \   Use of this profile occurs by use of the appropriate applications;\n   there\
    \ is no explicit indication by port number, protocol identifier\n   or the like.\n\
    \   Other profiles may make different choices for the items specified\n   here.\n"
- title: 2.  RTP and RTCP Packet Forms and Protocol Behavior
  contents:
  - "2.  RTP and RTCP Packet Forms and Protocol Behavior\n   The section \"RTP Profiles\
    \ and Payload Format Specification\"\n   enumerates a number of items that can\
    \ be specified or modified in a\n   profile. This section addresses these items.\
    \ Generally, this profile\n   follows the default and/or recommended aspects of\
    \ the RTP\n   specification.\n   RTP data header: The standard format of the fixed\
    \ RTP data header is\n        used (one marker bit).\n   Payload types: Static\
    \ payload types are defined in Section 6.\n   RTP data header additions: No additional\
    \ fixed fields are appended to\n        the RTP data header.\n   RTP data header\
    \ extensions: No RTP header extensions are defined, but\n        applications\
    \ operating under this profile may use such\n        extensions. Thus, applications\
    \ should not assume that the RTP\n        header X bit is always zero and should\
    \ be prepared to ignore the\n        header extension. If a header extension is\
    \ defined in the\n        future, that definition must specify the contents of\
    \ the first\n        16 bits in such a way that multiple different extensions\
    \ can be\n        identified.\n   RTCP packet types: No additional RTCP packet\
    \ types are defined by\n        this profile specification.\n   RTCP report interval:\
    \ The suggested constants are to be used for the\n        RTCP report interval\
    \ calculation.\n   SR/RR extension: No extension section is defined for the RTCP\
    \ SR or\n        RR packet.\n   SDES use: Applications may use any of the SDES\
    \ items described.\n        While CNAME information is sent every reporting interval,\
    \ other\n        items should be sent only every fifth reporting interval.\n \
    \  Security: The RTP default security services are also the default\n        under\
    \ this profile.\n   String-to-key mapping:  A user-provided string (\"pass phrase\"\
    ) is\n        hashed with the MD5 algorithm to a 16-octet digest. An n-bit key\n\
    \        is extracted from the digest by taking the first n bits from the\n  \
    \      digest. If several keys are needed with a total length of 128\n       \
    \ bits or less (as for triple DES), they are extracted in order\n        from\
    \ that digest. The octet ordering is specified in RFC 1423,\n        Section 2.2.\
    \ (Note that some DES implementations require that\n        the 56-bit key be\
    \ expanded into 8 octets by inserting an odd\n        parity bit in the most significant\
    \ bit of the octet to go with\n        each 7 bits of the key.)\n   It is suggested\
    \ that pass phrases are restricted to ASCII letters,\n   digits, the hyphen, and\
    \ white space to reduce the the chance of\n   transcription errors when conveying\
    \ keys by phone, fax, telex or\n   email.\n   The pass phrase may be preceded\
    \ by a specification of the encryption\n   algorithm. Any characters up to the\
    \ first slash (ASCII 0x2f) are\n   taken as the name of the encryption algorithm.\
    \ The encryption format\n   specifiers should be drawn from RFC 1423 or any additional\n\
    \   identifiers registered with IANA. If no slash is present, DES-CBC is\n   assumed\
    \ as default. The encryption algorithm specifier is case\n   sensitive.\n   The\
    \ pass phrase typed by the user is transformed to a canonical form\n   before\
    \ applying the hash algorithm. For that purpose, we define\n   return, tab, or\
    \ vertical tab as well as all characters contained in\n   the Unicode space characters\
    \ table. The transformation consists of\n   the following steps: (1) convert the\
    \ input string to the ISO 10646\n   character set, using the UTF-8 encoding as\
    \ specified in Annex P to\n   ISO/IEC 10646-1:1993 (ASCII characters require no\
    \ mapping, but ISO\n   8859-1 characters do); (2) remove leading and trailing\
    \ white space\n   characters; (3) replace one or more contiguous white space characters\n\
    \   by a single space (ASCII or UTF-8 0x20); (4) convert all letters to\n   lower\
    \ case and replace sequences of characters and non-spacing\n   accents with a\
    \ single character, where possible. A minimum length of\n   16 key characters\
    \ (after applying the transformation) should be\n   enforced by the application,\
    \ while applications must allow up to 256\n   characters of input.\n   Underlying\
    \ protocol: The profile specifies the use of RTP over\n        unicast and multicast\
    \ UDP. (This does not preclude the use of\n        these definitions when RTP\
    \ is carried by other lower-layer\n        protocols.)\n   Transport mapping:\
    \ The standard mapping of RTP and RTCP to\n        transport-level addresses is\
    \ used.\n   Encapsulation: No encapsulation of RTP packets is specified.\n"
- title: 3.  Registering Payload Types
  contents:
  - "3.  Registering Payload Types\n   This profile defines a set of standard encodings\
    \ and their payload\n   types when used within RTP. Other encodings and their\
    \ payload types\n   are to be registered with the Internet Assigned Numbers Authority\n\
    \   (IANA). When registering a new encoding/payload type, the following\n   information\
    \ should be provided:\n        o name and description of encoding, in particular\
    \ the RTP\n         timestamp clock rate; the names defined here are 3 or 4\n\
    \         characters long to allow a compact representation if needed;\n     \
    \   o indication of who has change control over the encoding (for\n         example,\
    \ ISO, CCITT/ITU, other international standardization\n         bodies, a consortium\
    \ or a particular company or group of\n         companies);\n        o any operating\
    \ parameters or profiles;\n        o a reference to a further description, if\
    \ available, for\n         example (in order of preference) an RFC, a published\
    \ paper, a\n         patent filing, a technical report, documented source code\
    \ or a\n         computer manual;\n        o for proprietary encodings, contact\
    \ information (postal and\n         email address);\n        o the payload type\
    \ value for this profile, if necessary (see\n         below).\n   Note that not\
    \ all encodings to be used by RTP need to be assigned a\n   static payload type.\
    \ Non-RTP means beyond the scope of this memo\n   (such as directory services\
    \ or invitation protocols) may be used to\n   establish a dynamic mapping between\
    \ a payload type drawn from the\n   range 96-127 and an encoding. For implementor\
    \ convenience, this\n   profile contains descriptions of encodings which do not\
    \ currently\n   have a static payload type assigned to them.\n   The available\
    \ payload type space is relatively small. Thus, new\n   static payload types are\
    \ assigned only if the following conditions\n   are met:\n        o The encoding\
    \ is of interest to the Internet community at\n         large.\n        o It offers\
    \ benefits compared to existing encodings and/or is\n         required for interoperation\
    \ with existing, widely deployed\n         conferencing or multimedia systems.\n\
    \        o The description is sufficient to build a decoder.\n"
- title: 4.  Audio
  contents:
  - '4.  Audio

    '
- title: 4.1 Encoding-Independent Recommendations
  contents:
  - "4.1 Encoding-Independent Recommendations\n   For applications which send no packets\
    \ during silence, the first\n   packet of a talkspurt (first packet after a silence\
    \ period) is\n   distinguished by setting the marker bit in the RTP  data header.\n\
    \   Applications without silence suppression set the bit to zero.\n   The RTP\
    \ clock rate used for generating the RTP timestamp is\n   independent of the number\
    \ of channels and the encoding; it equals the\n   number of sampling periods per\
    \ second.  For N-channel encodings, each\n   sampling period (say, 1/8000 of a\
    \ second) generates N samples. (This\n   terminology is standard, but somewhat\
    \ confusing, as the total number\n   of samples generated per second is then the\
    \ sampling rate times the\n   channel count.)\n   If multiple audio channels are\
    \ used, channels are numbered left-to-\n   right, starting at one. In RTP audio\
    \ packets, information from\n   lower-numbered channels precedes that from higher-numbered\
    \ channels.\n   For more than two channels, the convention followed by the AIFF-C\n\
    \   audio interchange format should be followed [1], using the following\n   notation:\n\
    \   l    left\n   r    right\n   c    center\n   S    surround\n   F    front\n\
    \   R    rear\n   channels    description                 channel\n          \
    \                     1     2     3     4     5     6\n   ___________________________________________________________\n\
    \   2           stereo          l     r\n   3                           l    \
    \ r     c\n   4           quadrophonic    Fl    Fr    Rl    Rr\n   4         \
    \                  l     c     r     S\n   5                           Fl    Fr\
    \    Fc    Sl    Sr\n   6                           l     lc    c     r     rc\
    \    S\n   Samples for all channels belonging to a single sampling instant must\n\
    \   be within the same packet. The interleaving of samples from different\n  \
    \ channels depends on the encoding. General guidelines are given in\n   Section\
    \ 4.2 and 4.3.\n   The sampling frequency should be drawn from the set: 8000,\
    \ 11025,\n   16000, 22050, 24000, 32000, 44100 and 48000 Hz. (The Apple Macintosh\n\
    \   computers have native sample rates of 22254.54 and 11127.27, which\n   can\
    \ be converted to 22050 and 11025 with acceptable quality by\n   dropping 4 or\
    \ 2 samples in a 20 ms frame.) However, most audio\n   encodings are defined for\
    \ a more restricted set of sampling\n   frequencies. Receivers should be prepared\
    \ to accept multi-channel\n   audio, but may choose to only play a single channel.\n\
    \   The following recommendations are default operating parameters.\n   Applications\
    \ should be prepared to handle other values. The ranges\n   given are meant to\
    \ give guidance to application writers, allowing a\n   set of applications conforming\
    \ to these guidelines to interoperate\n   without additional negotiation. These\
    \ guidelines are not intended to\n   restrict operating parameters for applications\
    \ that can negotiate a\n   set of interoperable parameters, e.g., through a conference\
    \ control\n   protocol.\n   For packetized audio, the default packetization interval\
    \ should have\n   a duration of 20 ms, unless otherwise noted when describing\
    \ the\n   encoding. The packetization interval determines the minimum end-to-\n\
    \   end delay; longer packets introduce less header overhead but higher\n   delay\
    \ and make packet loss more noticeable. For non-interactive\n   applications such\
    \ as lectures or links with severe bandwidth\n   constraints, a higher packetization\
    \ delay may be appropriate. A\n   receiver should accept packets representing\
    \ between 0 and 200 ms of\n   audio data. This restriction allows reasonable buffer\
    \ sizing for the\n   receiver.\n"
- title: 4.2 Guidelines for Sample-Based Audio Encodings
  contents:
  - "4.2 Guidelines for Sample-Based Audio Encodings\n   In sample-based encodings,\
    \ each audio sample is represented by a\n   fixed number of bits. Within the compressed\
    \ audio data, codes for\n   individual samples may span octet boundaries. An RTP\
    \ audio packet may\n   contain any number of audio samples, subject to the constraint\
    \ that\n   the number of bits per sample times the number of samples per packet\n\
    \   yields an integral octet count. Fractional encodings produce less\n   than\
    \ one octet per sample.\n   The duration of an audio packet is determined by the\
    \ number of\n   samples in the packet.\n   For sample-based encodings producing\
    \ one or more octets per sample,\n   samples from different channels sampled at\
    \ the same sampling instant\n   are packed in consecutive octets. For example,\
    \ for a two-channel\n   encoding, the octet sequence is (left channel, first sample),\
    \ (right\n   channel, first sample), (left channel, second sample), (right\n \
    \  channel, second sample), .... For multi-octet encodings, octets are\n   transmitted\
    \ in network byte order (i.e., most significant octet\n   first).\n   The packing\
    \ of sample-based encodings producing less than one octet\n   per sample is encoding-specific.\n"
- title: 4.3 Guidelines for Frame-Based Audio Encodings
  contents:
  - "4.3 Guidelines for Frame-Based Audio Encodings\n   Frame-based encodings encode\
    \ a fixed-length block of audio into\n   another block of compressed data, typically\
    \ also of fixed length. For\n   frame-based encodings, the sender may choose to\
    \ combine several such\n   frames into a single message. The receiver can tell\
    \ the number of\n   frames contained in a message since the frame duration is\
    \ defined as\n   part of the encoding.\n   For frame-based codecs, the channel\
    \ order is defined for the whole\n   block. That is, for two-channel audio, right\
    \ and left samples are\n   coded independently, with the encoded frame for the\
    \ left channel\n   preceding that for the right channel.\n   All frame-oriented\
    \ audio codecs should be able to encode and decode\n   several consecutive frames\
    \ within a single packet. Since the frame\n   size for the frame-oriented codecs\
    \ is given, there is no need to use\n   a separate designation for the same encoding,\
    \ but with different\n   number of frames per packet.\n"
- title: 4.4 Audio Encodings
  contents:
  - "4.4 Audio Encodings\n           encoding    sample/frame    bits/sample    ms/frame\n\
    \           ____________________________________________________\n           1016\
    \        frame           N/A            30\n           DVI4        sample    \
    \      4\n           G721        sample          4\n           G722        sample\
    \          8\n           G728        frame           N/A            2.5\n    \
    \       GSM         frame           N/A            20\n           L8         \
    \ sample          8\n           L16         sample          16\n           LPC\
    \         frame           N/A            20\n           MPA         frame    \
    \       N/A\n           PCMA        sample          8\n           PCMU       \
    \ sample          8\n           VDVI        sample          var.\n           \
    \      Table 1: Properties of Audio Encodings\n   The characteristics of standard\
    \ audio encodings are shown in Table 1\n   and their payload types are listed\
    \ in Table 2.\n"
- title: 4.4.1 1016
  contents:
  - "4.4.1 1016\n   Encoding 1016 is a frame based encoding using code-excited linear\n\
    \   prediction (CELP) and is specified in Federal Standard FED-STD 1016\n   [2,3,4,5].\n\
    \   The U. S. DoD's Federal-Standard-1016 based 4800 bps code excited\n   linear\
    \ prediction voice coder version 3.2 (CELP 3.2) Fortran and C\n   simulation source\
    \ codes are available for worldwide distribution at\n   no charge (on DOS diskettes,\
    \ but configured to compile on Sun SPARC\n   stations) from: Bob Fenichel, National\
    \ Communications System,\n   Washington, D.C. 20305, phone +1-703-692-2124, fax\
    \ +1-703-746-4960.\n"
- title: 4.4.2 DVI4
  contents:
  - "4.4.2 DVI4\n   DVI4 is specified, with pseudo-code, in [6] as the IMA ADPCM wave\n\
    \   type. A specification titled \"DVI ADPCM Wave Type\" can also be found\n \
    \  in the Microsoft Developer Network Development Library CD ROM\n   published\
    \ quarterly by Microsoft. The relevant section is found under\n   Product Documentation,\
    \ SDKs, Multimedia Standards Update, New\n   Multimedia Data Types and Data Techniques,\
    \ Revision 3.0, April 15,\n   1994. However, the encoding defined here as DVI4\
    \ differs in two\n   respects from these recommendations:\n        o The header\
    \ contains the predicted value rather than the first\n         sample value.\n\
    \        o IMA ADPCM blocks contain odd number of samples, since the\n       \
    \  first sample of a block is contained just in the header\n         (uncompressed),\
    \ followed by an even number of compressed\n         samples. DVI4 has an even\
    \ number of compressed samples only,\n         using the 'predict' word from the\
    \ header to decode the first\n         sample.\n   Each packet contains a single\
    \ DVI block. The profile only defines the\n   4-bit-per-sample version, while\
    \ IMA also specifies a 3-bit-per-sample\n   encoding.\n   The \"header\" word\
    \ for each channel has the following structure:\n     int16  predict;  /* predicted\
    \ value of first sample\n                         from the previous block (L16\
    \ format) */\n     u_int8 index;    /* current index into stepsize table */\n\
    \     u_int8 reserved; /* set to zero by sender, ignored by receiver */\n   Packing\
    \ of samples for multiple channels is for further study.\n   The document, \"\
    IMA Recommended Practices for Enhancing Digital Audio\n   Compatibility in Multimedia\
    \ Systems (version 3.0)\", contains the\n   algorithm description.  It is available\
    \ from:\n   Interactive Multimedia Association\n   48 Maryland Avenue, Suite 202\n\
    \   Annapolis, MD 21401-8011\n   USA\n   phone: +1 410 626-1380\n"
- title: 4.4.3 G721
  contents:
  - "4.4.3 G721\n   G721 is specified in ITU recommendation G.721. Reference\n   implementations\
    \ for G.721 are available as part of the CCITT/ITU-T\n   Software Tool Library\
    \ (STL) from the ITU General Secretariat, Sales\n   Service, Place du Nations,\
    \ CH-1211 Geneve 20, Switzerland. The\n   library is covered by a license.\n"
- title: 4.4.4 G722
  contents:
  - "4.4.4 G722\n   G722 is specified in ITU-T recommendation G.722, \"7 kHz audio-coding\n\
    \   within 64 kbit/s\".\n   G728 is specified in ITU-T recommendation G.728, \"\
    Coding of speech at\n   16 kbit/s using low-delay code excited linear prediction\"\
    .\n"
- title: 4.4.6 GSM
  contents:
  - "4.4.6 GSM\n   GSM (group speciale mobile) denotes the European GSM 06.10\n  \
    \ provisional standard for full-rate speech transcoding, prI-ETS 300\n   036,\
    \ which is based on RPE/LTP (residual pulse excitation/long term\n   prediction)\
    \ coding at a rate of 13 kb/s [7,8,9]. The standard can be\n   obtained from\n\
    \   ETSI (European Telecommunications Standards Institute)\n   ETSI Secretariat:\
    \ B.P.152\n   F-06561 Valbonne Cedex\n   France\n   Phone: +33 92 94 42 00\n \
    \  Fax: +33 93 65 47 16\n"
- title: 4.4.7 L8
  contents:
  - "4.4.7 L8\n   L8 denotes linear audio data, using 8-bits of precision with an\n\
    \   offset of 128, that is, the most negative signal is encoded as zero.\n"
- title: 4.4.8 L16
  contents:
  - "4.4.8 L16\n   L16 denotes uncompressed audio data, using 16-bit signed\n   representation\
    \ with 65535 equally divided steps between minimum and\n   maximum signal level,\
    \ ranging from -32768 to 32767. The value is\n   represented in two's complement\
    \ notation and network byte order.\n"
- title: 4.4.9 LPC
  contents:
  - "4.4.9 LPC\n   LPC designates an experimental linear predictive encoding contributed\n\
    \   by Ron Frederick, Xerox PARC, which is based on an implementation\n   written\
    \ by Ron Zuckerman, Motorola, posted to the Usenet group\n   comp.dsp on June\
    \ 26, 1992.\n"
- title: 4.4.10 MPA
  contents:
  - "4.4.10 MPA\n   MPA denotes MPEG-I or MPEG-II audio encapsulated as elementary\n\
    \   streams. The encoding is defined in ISO standards ISO/IEC 11172-3 and\n  \
    \ 13818-3. The encapsulation is specified in work in progress [10],\n   Section\
    \ 3. The authors can be contacted at\n   Don Hoffman\n   Sun Microsystems, Inc.\n\
    \   Mail-stop UMPK14-305\n   2550 Garcia Avenue\n   Mountain View, California\
    \ 94043-1100\n   USA\n   electronic mail: don.hoffman@eng.sun.com\n   Sampling\
    \ rate and channel count are contained in the payload. MPEG-I\n   audio supports\
    \ sampling rates of 32000, 44100, and 48000 Hz (ISO/IEC\n   11172-3, section 1.1;\
    \ \"Scope\"). MPEG-II additionally supports ISO/IEC\n   11172-3 Audio...\").\n"
- title: 4.4.11 PCMA
  contents:
  - "4.4.11 PCMA\n   PCMA is specified in CCITT/ITU-T recommendation G.711. Audio\
    \ data is\n   encoded as eight bits per sample, after logarithmic scaling. Code\
    \ to\n   convert between linear and A-law companded data is available in [6].\n\
    \   A detailed description is given by Jayant and Noll [11].\n"
- title: 4.4.12 PCMU
  contents:
  - "4.4.12 PCMU\n   PCMU is specified in CCITT/ITU-T recommendation G.711. Audio\
    \ data is\n   encoded as eight bits per sample, after logarithmic scaling. Code\
    \ to\n   convert between linear and mu-law companded data is available in [6].\n\
    \   PCMU is the encoding used for the Internet media type audio/basic.  A\n  \
    \ detailed description is given by Jayant and Noll [11].\n"
- title: 4.4.13 VDVI
  contents:
  - "4.4.13 VDVI\n   VDVI is a variable-rate version of DVI4, yielding speech bit\
    \ rates of\n   between 10 and 25 kb/s. It is specified for single-channel operation\n\
    \   only. It uses the following encoding:\n                    DVI4 codeword \
    \   VDVI bit pattern\n                    __________________________________\n\
    \                                0    00\n                                1  \
    \  010\n                                2    1100\n                          \
    \      3    11100\n                                4    111100\n             \
    \                   5    1111100\n                                6    11111100\n\
    \                                7    11111110\n                             \
    \   8    10\n                                9    011\n                      \
    \         10    1101\n                               11    11101\n           \
    \                    12    111101\n                               13    1111101\n\
    \                               14    11111101\n                             \
    \  15    11111111\n"
- title: 5.  Video
  contents:
  - "5.  Video\n   The following video encodings are currently defined, with their\n\
    \   abbreviated names used for identification:\n"
- title: 5.1 CelB
  contents:
  - "5.1 CelB\n   The CELL-B encoding is a proprietary encoding proposed by Sun\n\
    \   Microsystems.  The byte stream format is described in work in\n   progress\
    \ [12].  The author can be contacted at\n   Michael F. Speer\n   Sun Microsystems\
    \ Computer Corporation\n   2550 Garcia Ave MailStop UMPK14-305\n   Mountain View,\
    \ CA 94043\n   United States\n   electronic mail: michael.speer@eng.sun.com\n"
- title: 5.2 JPEG
  contents:
  - '5.2 JPEG

    '
- title: The encoding is specified in ISO Standards 10918-1 and 10918-2. The
  contents:
  - 'The encoding is specified in ISO Standards 10918-1 and 10918-2. The

    '
- title: RTP payload format is as specified in work in progress [13].  Further
  contents:
  - 'RTP payload format is as specified in work in progress [13].  Further

    '
- title: information can be obtained from
  contents:
  - "information can be obtained from\n   Steven McCanne\n   Lawrence Berkeley National\
    \ Laboratory\n   M/S 46A-1123\n   One Cyclotron Road\n   Berkeley, CA 94720\n\
    \   United States\n   Phone: +1 510 486 7520\n   electronic mail: mccanne@ee.lbl.gov\n"
- title: 5.3 H261
  contents:
  - "5.3 H261\n   The encoding is specified in CCITT/ITU-T standard H.261. The\n \
    \  packetization and RTP-specific properties are described in work in\n   progress\
    \ [14]. Further information can be obtained from\n   Thierry Turletti\n   Office\
    \ NE 43-505\n   Telemedia, Networks and Systems\n   Laboratory for Computer Science\n\
    \   Massachusetts Institute of Technology\n   545 Technology Square\n   Cambridge,\
    \ MA 02139\n   United States\n   electronic mail: turletti@clove.lcs.mit.edu\n"
- title: 5.4 MPV
  contents:
  - "5.4 MPV\n   MPV designates the use MPEG-I and MPEG-II video encoding elementary\n\
    \   streams as specified in ISO Standards ISO/IEC 11172 and 13818-2,\n   respectively.\
    \ The RTP payload format is as specified in work in\n   progress [10], Section\
    \ 3. See the description of the MPA audio\n   encoding for contact information.\n"
- title: 5.5 MP2T
  contents:
  - "5.5 MP2T\n   MP2T designates the use of MPEG-II transport streams, for either\n\
    \   audio or video. The encapsulation is described in work in progress,\n   [10],\
    \ Section 2. See the description of the MPA audio encoding for\n   contact information.\n"
- title: 5.6 nv
  contents:
  - "5.6 nv\n   The encoding is implemented in the program 'nv', version 4, developed\n\
    \   at Xerox PARC by Ron Frederick. Further information is available from\n  \
    \ the author:\n   Ron Frederick\n   Xerox Palo Alto Research Center\n   3333 Coyote\
    \ Hill Road\n   Palo Alto, CA 94304\n   United States\n   electronic mail: frederic@parc.xerox.com\n"
- title: 6.  Payload Type Definitions
  contents:
  - "6.  Payload Type Definitions\n   Table 2 defines this profile's static payload\
    \ type values for the PT\n   field of the RTP data header. A new RTP payload format\
    \ specification\n   may be registered with the IANA by name, and may also be assigned\
    \ a\n   static payload type value from the range marked in Section 3.\n   In addition,\
    \ payload type values in the range 96-127 may be defined\n   dynamically through\
    \ a conference control protocol, which is beyond\n   the scope of this document.\
    \ For example, a session directory could\n   specify that for a given session,\
    \ payload type 96 indicates PCMU\n   encoding, 8,000 Hz sampling rate, 2 channels.\
    \ The payload type range\n   marked 'reserved' has been set aside so that RTCP\
    \ and RTP packets can\n   be reliably distinguished (see Section \"Summary of\
    \ Protocol\n   Constants\" of the RTP protocol specification).\n   An RTP source\
    \ emits a single RTP payload type at any given time; the\n   interleaving of several\
    \ RTP payload types in a single RTP session is\n   not allowed, but multiple RTP\
    \ sessions may be used in parallel to\n   send multiple media. The payload types\
    \ currently defined in this\n   profile carry either audio or video, but not both.\
    \ However, it is\n   allowed to define payload types that combine several media,\
    \ e.g.,\n   audio and video, with appropriate separation in the payload format.\n\
    \   Session participants agree through mechanisms beyond the scope of\n   this\
    \ specification on the set of payload types allowed in a given\n   session.  This\
    \ set may, for example, be defined by the capabilities\n   of the applications\
    \ used, negotiated by a conference control protocol\n   or established by agreement\
    \ between the human participants.\n   Audio applications operating under this\
    \ profile should, at minimum,\n   be able to send and receive payload types 0\
    \  (PCMU)  and 5 (DVI4).\n   This allows interoperability without format negotiation\
    \ and\n   successful negotation with a conference control protocol.\n   All current\
    \ video encodings use a timestamp frequency of 90,000 Hz,\n   the same as the\
    \ MPEG presentation time stamp frequency. This\n   frequency yields exact integer\
    \ timestamp increments for the typical\n   24 (HDTV), 25 (PAL), and 29.97 (NTSC)\
    \ and 30 Hz (HDTV) frame rates\n   and 50, 59.94 and 60 Hz field rates. While\
    \ 90 kHz is the recommended\n   rate for future video encodings used within this\
    \ profile, other rates\n   are possible. However, it is not sufficient to use\
    \ the video frame\n   rate (typically between 15 and 30 Hz) because that does\
    \ not provide\n   adequate resolution for typical synchronization requirements\
    \ when\n   calculating the RTP timestamp corresponding to the NTP timestamp in\n\
    \   an RTCP SR packet [15]. The timestamp resolution must also be\n   sufficient\
    \ for the jitter estimate contained in the receiver reports.\n   The standard\
    \ video encodings and their payload types are listed in\n   Table 2.\n"
- title: 7.  Port Assignment
  contents:
  - "7.  Port Assignment\n   As specified in the RTP protocol definition, RTP data\
    \ is to be\n   carried on an even UDP port number and the corresponding RTCP packets\n\
    \   are to be carried on the next higher (odd) port number.\n   Applications operating\
    \ under this profile may use any such UDP port\n   pair. For example, the port\
    \ pair may be allocated randomly by a\n   session management program. A single\
    \ fixed port number pair cannot be\n   required because multiple applications\
    \ using this profile are likely\n   to run on the same host, and there are some\
    \ operating systems that do\n   not allow multiple processes to use the same UDP\
    \ port with different\n   multicast addresses.\n      PT         encoding    \
    \  audio/video    clock rate    channels\n                 name          (A/V)\
    \          (Hz)          (audio)\n      _______________________________________________________________\n\
    \      0          PCMU          A              8000          1\n      1      \
    \    1016          A              8000          1\n      2          G721     \
    \     A              8000          1\n      3          GSM           A       \
    \       8000          1\n      4          unassigned    A              8000  \
    \        1\n      5          DVI4          A              8000          1\n  \
    \    6          DVI4          A              16000         1\n      7        \
    \  LPC           A              8000          1\n      8          PCMA       \
    \   A              8000          1\n      9          G722          A         \
    \     8000          1\n      10         L16           A              44100   \
    \      2\n      11         L16           A              44100         1\n    \
    \  12         unassigned    A\n      13         unassigned    A\n      14    \
    \     MPA           A              90000        (see text)\n      15         G728\
    \          A              8000          1\n      16--23     unassigned    A\n\
    \      24         unassigned    V\n      25         CelB          V          \
    \    90000\n      26         JPEG          V              90000\n      27    \
    \     unassigned    V\n      28         nv            V              90000\n \
    \     29         unassigned    V\n      30         unassigned    V\n      31 \
    \        H261          V              90000\n      32         MPV           V\
    \              90000\n      33         MP2T          AV             90000\n  \
    \    34--71     unassigned    ?\n      72--76     reserved      N/A          \
    \  N/A           N/A\n      77--95     unassigned    ?\n      96--127    dynamic\
    \       ?\n   Table 2: Payload types (PT) for standard audio and video encodings\n\
    \   However, port numbers 5004 and 5005 have been registered for use with\n  \
    \ this profile for those applications that choose to use them as the\n   default\
    \ pair. Applications that operate under multiple profiles may\n   use this port\
    \ pair as an indication to select this profile if they\n   are not subject to\
    \ the constraint of the previous paragraph.\n   Applications need not have a default\
    \ and may require that the port\n   pair be explicitly specified. The particular\
    \ port numbers were chosen\n   to lie in the range above 5000 to accomodate port\
    \ number allocation\n   practice within the Unix operating system, where port\
    \ numbers below\n   1024 can only be used by privileged processes and port numbers\n\
    \   between 1024 and 5000 are automatically assigned by the operating\n   system.\n"
- title: 8. Bibliography
  contents:
  - "8. Bibliography\n   [1] Apple Computer, \"Audio interchange file format AIFF-C,\"\
    \ Aug.\n       1991.  (also ftp://ftp.sgi.com/sgi/aiff-c.9.26.91.ps.Z).\n   [2]\
    \ Office of Technology and Standards, \"Telecommunications: Analog\n       to\
    \ digital conversion of radio voice by 4,800 bit/second code\n       excited linear\
    \ prediction (celp),\" Federal Standard FS-1016, GSA,\n       Room 6654; 7th &\
    \ D Street SW; Washington, DC 20407 (+1-202-708-\n       9205), 1990.\n   [3]\
    \ J. P. Campbell, Jr., T. E. Tremain, and V. C. Welch, \"The\n       proposed\
    \ Federal Standard 1016 4800 bps voice coder: CELP,\"\n       Speech Technology\
    \ , vol. 5, pp. 58--64, April/May 1990.\n   [4] J. P. Campbell, Jr., T. E. Tremain,\
    \ and V. C. Welch, \"The federal\n       standard 1016 4800 bps CELP voice coder,\"\
    \ Digital Signal\n       Processing, vol. 1, no. 3, pp. 145--155, 1991.\n   [5]\
    \ J. P. Campbell, Jr., T. E. Tremain, and V. C. Welch, \"The dod 4.8\n       kbps\
    \ standard (proposed federal standard 1016),\" in Advances in\n       Speech Coding\
    \ (B. Atal, V. Cuperman, and A. Gersho, eds.), ch.\n       12, pp. 121--133, Kluwer\
    \ Academic Publishers, 1991.\n   [6] IMA Digital Audio Focus and Technical Working\
    \ Groups,\n       \"Recommended practices for enhancing digital audio compatibility\n\
    \       in multimedia systems (version 3.00),\" tech. rep., Interactive\n    \
    \   Multimedia Association, Annapolis, Maryland, Oct. 1992.\n   [7] M. Mouly and\
    \ M.-B. Pautet, The GSM system for mobile\n       communications Lassay-les-Chateaux,\
    \ France: Europe Media\n       Duplication, 1993.\n   [8] J. Degener, \"Digital\
    \ speech compression,\" Dr. Dobb's Journal,\n       Dec.  1994.\n   [9] S. M.\
    \ Redl, M. K. Weber, and M. W. Oliphant, An Introduction to\n       GSM Boston:\
    \ Artech House, 1995.\n  [10] D. Hoffman and V. Goyal, \"RTP payload format for\
    \ MPEG1/MPEG2\n       video,\" Work in Progress, Internet Engineering Task Force,\
    \ June\n       1995.\n  [11] N. S. Jayant and P. Noll, Digital Coding of Waveforms--\n\
    \       Principles and Applications to Speech and Video Englewood Cliffs,\n  \
    \     New Jersey: Prentice-Hall, 1984.\n  [12] M. F. Speer and D. Hoffman, \"\
    RTP payload format of CellB video\n       encoding,\" Work in Progress, Internet\
    \ Engineering Task Force,\n       Aug.  1995.\n  [13] W. Fenner, L. Berc, R. Frederick,\
    \ and S. McCanne, \"RTP\n       encapsulation of JPEG-compressed video,\" Work\
    \ in Progress,\n       Internet Engineering Task Force, Mar. 1995.\n  [14] T.\
    \ Turletti and C. Huitema, \"RTP payload format for H.261 video\n       streams,\"\
    \ Work in Progress, Internet Engineering Task Force, July\n       1995.\n  [15]\
    \ H. Schulzrinne, S. Casner, R. Frederick, and V. Jacobson, \"RTP: A\n       transport\
    \ protocol for real-time applications.\" Work in Progress,\n       Mar. 1995.\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   Security issues are discussed in section 2.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   The comments and careful review of Steve Casner are\
    \ gratefully\n   acknowledged.\n"
- title: 11.  Author's Address
  contents:
  - "11.  Author's Address\n   Henning Schulzrinne\n   GMD Fokus\n   Hardenbergplatz\
    \ 2\n   D-10623 Berlin\n   Germany\n   EMail: schulzrinne@fokus.gmd.de\n   Current\
    \ Locations of Related Resources\n   UTF-8\n   Information on the UCS Transformation\
    \ Format 8 (UTF-8) is available\n   at\n            http://www.stonehand.com/unicode/standard/utf8.html\n\
    \   1016\n   An implementation is available at\n              ftp://ftp.super.org/pub/speech/celp_3.2a.tar.Z\n\
    \   DVI4\n   An implementation is available from Jack Jansen at\n            \
    \    ftp://ftp.cwi.nl/local/pub/audio/adpcm.shar\n   G721\n   An implementation\
    \ is available at\n       ftp://gaia.cs.umass.edu/pub/hgschulz/ccitt/ccitt_tools.tar.Z\n\
    \   GSM\n   A reference implementation was written by Carsten Borman and Jutta\n\
    \   Degener (TU Berlin, Germany). It is available at\n            ftp://ftp.cs.tu-berlin.de/pub/local/kbs/tubmik/gsm/\n\
    \   LPC\n   An implementation is available at\n            ftp://parcftp.xerox.com/pub/net-research/lpc.tar.Z\n"
