- title: __initial_text__
  contents:
  - "    Problem Statement for Default Address Selection in Multi-Prefix\n       Environments:\
    \ Operational Issues of RFC 3484 Default Rules\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   A single physical link can have multiple prefixes assigned to it.\
    \  In\n   that environment, end hosts might have multiple IP addresses and be\n\
    \   required to use them selectively.  RFC 3484 defines default source\n   and\
    \ destination address selection rules and is implemented in a\n   variety of OSs.\
    \  But, it has been too difficult to use operationally\n   for several reasons.\
    \  In some environments where multiple prefixes\n   are assigned on a single physical\
    \ link, the host using the default\n   address selection rules will experience\
    \ some trouble in\n   communication.  This document describes the possible problems\
    \ that\n   end hosts could encounter in an environment with multiple prefixes.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. Scope of This Document .....................................3\n  \
    \ 2. Problem Statement ...............................................4\n    \
    \  2.1. Source Address Selection ...................................4\n      \
    \     2.1.1. Multiple Routers on a Single Interface ..............4\n        \
    \   2.1.2. Ingress Filtering Problem ...........................5\n          \
    \ 2.1.3. Half-Closed Network Problem .........................6\n           2.1.4.\
    \ Combined Use of Global and ULA ......................7\n           2.1.5. Site\
    \ Renumbering ....................................8\n           2.1.6. Multicast\
    \ Source Address Selection ..................9\n           2.1.7. Temporary Address\
    \ Selection .........................9\n      2.2. Destination Address Selection\
    \ .............................10\n           2.2.1. IPv4 or IPv6 Prioritization\
    \ ........................10\n           2.2.2. ULA and IPv4 Dual-Stack Environment\
    \ ................11\n           2.2.3. ULA or Global Prioritization .......................12\n\
    \   3. Conclusion .....................................................13\n  \
    \ 4. Security Considerations ........................................14\n   5.\
    \ Normative References ...........................................14\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In IPv6, a single physical link can have multiple prefixes\
    \ assigned\n   to it.  In such cases, an end host may have multiple IP addresses\n\
    \   assigned to an interface on that link.  In the IPv4-IPv6 dual-stack\n   environment\
    \ or in a site connected to both a Unique Local Address\n   (ULA) [RFC4193] and\
    \ globally routable networks, an end host typically\n   has multiple IP addresses.\
    \  These are examples of the networks that\n   we focus on in this document. \
    \ In such an environment, an end host\n   may encounter some communication troubles.\n\
    \   Inappropriate source address selection at the end host causes\n   unexpected\
    \ asymmetric routing, filtering by a router, or discarding\n   of packets because\
    \ there is no route to the host.\n   Considering a multi-prefix environment, destination\
    \ address selection\n   is also important for correct or better communication\
    \ establishment.\n   RFC 3484 [RFC3484] defines default source and destination\
    \ address\n   selection algorithms and is implemented in a variety of OSs.  But,\
    \ it\n   has been too difficult to use operationally for several reasons, such\n\
    \   as lack of an autoconfiguration method.  There are some problematic\n   cases\
    \ where the hosts using the default address selection rules\n   encounter communication\
    \ troubles.\n   This document describes the possibilities of incorrect address\n\
    \   selection that lead to dropping packets and communication failure.\n"
- title: 1.1.  Scope of This Document
  contents:
  - "1.1.  Scope of This Document\n   As other mechanisms already exist, the multi-homing\
    \ techniques for\n   achieving redundancy are basically out of our scope.\n  \
    \ We focus on an end-site network environment and unmanaged hosts in\n   such\
    \ an environment.  This is because address selection behavior at\n   these kinds\
    \ of hosts is difficult to manipulate, owing to the users'\n   lack of knowledge,\
    \ hosts' location, or massiveness of the hosts.\n   The scope of this document\
    \ is to sort out problematic cases related\n   to address selection.  It includes\
    \ problems that can be solved in the\n   framework of RFC 3484 and problems that\
    \ cannot.  For the latter, RFC\n   3484 might be modified to meet their needs,\
    \ or another address\n   selection solution might be necessary.  For the former,\
    \ an additional\n   mechanism that mitigates the operational difficulty might\
    \ be\n   necessary.\n   This document also includes simple solution analysis for\
    \ each\n   problematic case.  This analysis basically just focuses on whether\
    \ or\n   not the case can be solved in the framework of RFC 3484.  If not,\n \
    \  some possible solutions are described.  Even if a case can be solved\n   in\
    \ the framework of RFC 3484, as mentioned above, it does not\n   necessarily mean\
    \ that there is no operational difficulty.  For\n   example, in the environment\
    \ stated above, it is not a feasible\n   solution to configure each host's policy\
    \ table by hand.  So, for such\n   a solution, the difficulty of configuration\
    \ is yet another common\n   problem.\n"
- title: 2.  Problem Statement
  contents:
  - '2.  Problem Statement

    '
- title: 2.1.  Source Address Selection
  contents:
  - '2.1.  Source Address Selection

    '
- title: 2.1.1.  Multiple Routers on a Single Interface
  contents:
  - "2.1.1.  Multiple Routers on a Single Interface\n                          ==================\n\
    \                          |    Internet    |\n                          ==================\n\
    \                             |          |\n          2001:db8:1000::/36 |   \
    \       | 2001:db8:8000::/36\n                        +----+-+      +-+----+\n\
    \                        | ISP1 |      | ISP2 |\n                        +----+-+\
    \      +-+----+\n                             |          |\n         2001:db8:1000:::/48\
    \ |          | 2001:db8:8000::/48\n                       +-----+---+ +----+----+\n\
    \                       | Router1 | | Router2 |\n                       +-------+-+\
    \ +-+-------+\n                               |     |\n          2001:db8:1000:1::/64\
    \ |     | 2001:db8:8000:1::/64\n                               |     |\n     \
    \                   -----+-+-----+------\n                             |\n   \
    \                        +-+----+ 2001:db8:1000:1::100\n                     \
    \      | Host | 2001:db8:8000:1::100\n                           +------+\n  \
    \                                  Figure 1\n   Generally speaking, there is no\
    \ interaction between next-hop\n   determination and address selection.  In this\
    \ example, when a host\n   starts a new connection and sends a packet via Router1,\
    \ the host does\n   not necessarily choose address 2001:db8:1000:1::100 given\
    \ by Router1\n   as the source address.  This causes the same problem as described\
    \ in\n   the next section, \"Ingress Filtering Problem\".\n   Solution analysis:\n\
    \      As this case depends on next-hop selection, controlling the\n      address\
    \ selection behavior at the Host alone doesn't solve the\n      entire problem.\
    \  One possible solution for this case is adopting\n      source-address-based\
    \ routing at Router1 and Router2.  Another\n      solution may be using static\
    \ routing at Router1, Router2, and the\n      Host, and using the corresponding\
    \ static address selection policy\n      at the Host.\n"
- title: 2.1.2.  Ingress Filtering Problem
  contents:
  - "2.1.2.  Ingress Filtering Problem\n                        ==================\n\
    \                        |    Internet    |\n                        ==================\n\
    \                             |       |\n          2001:db8:1000::/36 |      \
    \ | 2001:db8:8000::/36\n                        +----+-+   +-+----+\n        \
    \                | ISP1 |   | ISP2 |\n                        +----+-+   +-+----+\n\
    \                             |       |\n         2001:db8:1000:::/48 |      \
    \ | 2001:db8:8000::/48\n                            ++-------++\n            \
    \                | Router  |\n                            +----+----+\n      \
    \                           |  2001:db8:1000:1::/64\n                        \
    \         |  2001:db8:8000:1::/64\n                       ------+---+----------\n\
    \                             |\n                           +-+----+ 2001:db8:1000:1::100\n\
    \                           | Host | 2001:db8:8000:1::100\n                  \
    \         +------+\n                                    Figure 2\n   When a relatively\
    \ small site, which we call a \"customer network\", is\n   attached to two upstream\
    \ ISPs, each ISP delegates a network address\n   block, which is usually /48,\
    \ and a host has multiple IPv6 addresses.\n   When the source address of an outgoing\
    \ packet is not the one that is\n   delegated by an upstream ISP, there is a possibility\
    \ that the packet\n   will be dropped at the ISP by its ingress filter.  Ingress\
    \ filtering\n   is becoming more popular among ISPs to mitigate the damage of\n\
    \   denial-of-service (DoS) attacks.\n   In this example, when the router chooses\
    \ the default route to ISP2\n   and the host chooses 2001:db8:1000:1::100 as the\
    \ source address for\n   packets sent to a host (2001:db8:2000::1) somewhere on\
    \ the Internet,\n   the packets may be dropped at ISP2 because of ingress filtering.\n\
    \   Solution analysis:\n      One possible solution for this case is adopting\
    \ source-address-\n      based routing at the Router.  Another solution may be\
    \ using static\n      routing at the Router, and using the corresponding static\
    \ address\n      selection policy at the Host.\n"
- title: 2.1.3.  Half-Closed Network Problem
  contents:
  - "2.1.3.  Half-Closed Network Problem\n   You can see a second typical source address\
    \ selection problem in a\n   multi-homed site with global half-closed connectivity,\
    \ as shown in\n   the figure below.  In this case, Host-A is in a multi-homed\
    \ network\n   and has two IPv6 addresses, one delegated from each of the upstream\n\
    \   ISPs.  Note that ISP2 is a closed network and does not have\n   connectivity\
    \ to the Internet.\n                           +--------+\n                  \
    \         | Host-C | 2001:db8:a000::1\n                           +-----+--+\n\
    \                                 |\n                        ==============  +--------+\n\
    \                        |  Internet  |  | Host-B | 2001:db8:8000::1\n       \
    \                 ==============  +--------+\n                             | \
    \          |\n           2001:db8:1000:/36 |           | 2001:db8:8000::/36\n\
    \                        +----+-+   +-+---++\n                        | ISP1 |\
    \   | ISP2 | (Closed Network/VPN tunnel)\n                        +----+-+   +-+----+\n\
    \                             |       |\n           2001:db8:1000:/48 |      \
    \ | 2001:db8:8000::/48\n                            ++-------++\n            \
    \                | Router  |\n                            +----+----+\n      \
    \                           |  2001:db8:1000:1::/64\n                        \
    \         |  2001:db8:8000:1::/64\n                       ------+---+----------\n\
    \                             |\n                          +--+-----+ 2001:db8:1000:1::100\n\
    \                          | Host-A | 2001:db8:8000:1::100\n                 \
    \         +--------+\n                                     Figure 3\n   You do\
    \ not need two physical network connections here.  The\n   connection from the\
    \ Router to ISP2 can be a logical link over ISP1\n   and the Internet.\n   When\
    \ Host-A starts the connection to Host-B in ISP2, the source\n   address of a\
    \ packet that has been sent will be the one delegated from\n   ISP2 (that is,\
    \ 2001:db8:8000:1::100) because of rule 8 (longest\n   matching prefix) in RFC\
    \ 3484.\n   Host-C is located somewhere on the Internet and has IPv6 address\n\
    \   2001:db8:a000::1.  When Host-A sends a packet to Host-C, the longest\n   matching\
    \ algorithm chooses 2001:db8:8000:1::100 for the source\n   address.  In this\
    \ case, the packet goes through ISP1 and may be\n   filtered by ISP1's ingress\
    \ filter.  Even if the packet is not\n   filtered by ISP1, a return packet from\
    \ Host-C cannot possibly be\n   delivered to Host-A because the return packet\
    \ is destined for 2001:\n   db8:8000:1::100, which is closed from the Internet.\n\
    \   The important point is that each host chooses a correct source\n   address\
    \ for a given destination address.  To solve this kind of\n   network-policy-based\
    \ address selection problem, it is likely that\n   delivering additional information\
    \ to a node provides a better\n   solution than using algorithms that are local\
    \ to the node.\n   Solution analysis:\n      This problem can be solved in the\
    \ RFC 3484 framework.  For\n      example, configuring some address selection\
    \ policies into Host-A's\n      RFC 3484 policy table can solve this problem.\n"
- title: 2.1.4.  Combined Use of Global and ULA
  contents:
  - "2.1.4.  Combined Use of Global and ULA\n                        ============\n\
    \                        | Internet |\n                        ============\n\
    \                              |\n                              |\n          \
    \               +----+----+\n                         |   ISP   |\n          \
    \               +----+----+\n                              |\n              2001:db8:a::/48\
    \ |\n                         +----+----+\n                         | Router \
    \ |\n                         +-+-----+-+\n                           |     |\
    \ 2001:db8:a:100::/64\n          fd01:2:3:200:/64 |     | fd01:2:3:100:/64\n \
    \                  -----+--+-   -+--+----\n                        |         \
    \  |\n      fd01:2:3:200::101 |           |      2001:db8:a:100::100\n       \
    \            +----+----+    +-+----+ fd01:2:3:100::100\n                   | Printer\
    \ |    | Host |\n                   +---------+    +------+\n                \
    \                Figure 4\n   As RFC 4864 [RFC4864] describes, using a ULA may\
    \ be beneficial in\n   some scenarios.  If the ULA is used for internal communication,\n\
    \   packets with the ULA need to be filtered at the Router.\n   This case does\
    \ not presently create an address selection problem\n   because of the dissimilarity\
    \ between the ULA and the global unicast\n   address.  The longest matching rule\
    \ of RFC 3484 chooses the correct\n   address for both intra-site and extra-site\
    \ communication.\n   In the future, however, there is a possibility that the longest\n\
    \   matching rule will not be able to choose the correct address anymore.\n  \
    \ That is the moment when the assignment of those global unicast\n   addresses\
    \ starts, where the first bit is 1.  In RFC 4291 [RFC4291],\n   almost all address\
    \ spaces of IPv6, including those whose first bit is\n   1, are assigned as global\
    \ unicast addresses.\n   Namely, when we start to assign a part of the address\
    \ block 8000::/1\n   as the global unicast address and that part is used somewhere\
    \ in the\n   Internet, the longest matching rule ceases to function properly for\n\
    \   the people trying to connect to the servers with those addresses.\n   For\
    \ example, when the destination host has an IPv6 address 8000::1,\n   and the\
    \ originating host has 2001:db8:a:100::100 and\n   fd01:2:3:100::100, the source\
    \ address will be fd01:2:3:100::100,\n   because the longest matching bit length\
    \ is 0 for 2001:db8:a:100::100\n   and 1 for fd01:2:3:100::100, respectively.\n\
    \   Solution analysis:\n      This problem can be solved in the RFC 3484 framework.\
    \  For\n      example, configuring some address selection policies into the\n\
    \      Host's RFC 3484 policy table can solve this problem.  Another\n      solution\
    \ is to modify RFC 3484 and define ULA's scope smaller than\n      the global\
    \ scope.\n"
- title: 2.1.5.  Site Renumbering
  contents:
  - "2.1.5.  Site Renumbering\n   RFC 4192 [RFC4192] describes a recommended procedure\
    \ for renumbering\n   a network from one prefix to another.  An autoconfigured\
    \ address has\n   a lifetime, so by stopping advertisement of the old prefix,\
    \ the\n   autoconfigured address is eventually invalidated.\n   However, invalidating\
    \ the old prefix takes a long time.  You cannot\n   stop routing to the old prefix\
    \ as long as the old prefix is not\n   removed from the host.  This can be a tough\
    \ issue for ISP network\n   administrators.\n   There is a technique of advertising\
    \ the prefix with the preferred\n   lifetime zero; however, RFC 4862 [RFC4862],\
    \ Section 5.5.4, does not\n   absolutely prohibit the use of a deprecated address\
    \ for a new\n   outgoing connection due to limitations on the capabilities of\n\
    \   applications.\n                              +-----+---+\n               \
    \               | Router  |\n                              +----+----+\n     \
    \                              |  2001:db8:b::/64  (new)\n                   \
    \                |  2001:db8:a::/64 (old)\n                         ------+---+----------\n\
    \                               |\n                            +--+---+ 2001:db8:b::100\
    \  (new)\n                            | Host | 2001:db8:a::100 (old)\n       \
    \                     +------+\n                                Figure 5\n   Solution\
    \ analysis:\n      This problem can be mitigated in the RFC 3484 framework.  For\n\
    \      example, configuring some address selection policies into the\n      Host's\
    \ RFC 3484 policy table can solve this problem.\n"
- title: 2.1.6.  Multicast Source Address Selection
  contents:
  - "2.1.6.  Multicast Source Address Selection\n   This case is an example of site-local\
    \ or global unicast\n   prioritization.  When you send a multicast packet across\
    \ site\n   borders, the source address of the multicast packet should be a\n \
    \  globally routable address.  The longest matching algorithm, however,\n   selects\
    \ a ULA if the sending host has both a ULA and a Global Unicast\n   Address.\n\
    \   Solution analysis:\n      This problem can be solved in the RFC 3484 framework.\
    \  For\n      example, configuring some address selection policies into the\n\
    \      sending host's RFC 3484 policy table can solve this problem.\n"
- title: 2.1.7.  Temporary Address Selection
  contents:
  - "2.1.7.  Temporary Address Selection\n   RFC 3041 [RFC3041] defines a Temporary\
    \ Address.  The usage of a\n   Temporary Address has both pros and cons.  It is\
    \ good for viewing web\n   pages or communicating with the general public, but\
    \ it is bad for a\n   service that uses address-based authentication and for logging\n\
    \   purposes.\n   If you could turn the temporary address on and off, that would\
    \ be\n   better.  If you could switch its usage per service (destination\n   address),\
    \ that would also be better.  The same situation can be found\n   when using an\
    \ HA (home address) and a CoA (care-of address) in a\n   Mobile IPv6 [RFC3775]\
    \ network.\n   Section 6 (\"Future Work\") of RFC 3041 discusses that an API extension\n\
    \   might be necessary to achieve a better address selection mechanism\n   with\
    \ finer granularity.\n   Solution analysis:\n      This problem cannot be solved\
    \ in the RFC 3484 framework.  A\n      possible solution is to make applications\
    \ to select desirable\n      addresses by using the IPv6 Socket API for Source\
    \ Address\n      Selection defined in RFC 5014 [RFC5014].\n"
- title: 2.2.  Destination Address Selection
  contents:
  - '2.2.  Destination Address Selection

    '
- title: 2.2.1.  IPv4 or IPv6 Prioritization
  contents:
  - "2.2.1.  IPv4 or IPv6 Prioritization\n   The default policy table gives IPv6 addresses\
    \ higher precedence than\n   IPv4 addresses.  There seem to be many cases, however,\
    \ where network\n   administrators want to control the address selection policy\
    \ of end\n   hosts so that it is the other way around.\n                     \
    \       +---------+\n                            | Tunnel  |\n               \
    \             | Service |\n                            +--+---++-+\n         \
    \                      |   ||\n                               |   ||\n       \
    \                 ===========||==\n                        | Internet || |\n \
    \                       ===========||==\n                             |     ||\n\
    \                192.0.2.0/24 |     ||\n                        +----+-+   ||\n\
    \                        | ISP  |   ||\n                        +----+-+   ||\n\
    \                             |     ||\n               IPv4 (Native) |     ||\
    \ IPv6 (Tunnel)\n                192.0.2.0/26 |     ||\n                     \
    \       ++-----++-+\n                            | Router  |\n               \
    \             +----+----+\n                                 |  2001:db8:a:1::/64\n\
    \                                 |  192.0.2.0/28\n                          \
    \       |\n                       ------+---+----------\n                    \
    \         |\n                           +-+----+ 2001:db8:a:1::100\n         \
    \                  | Host | 192.0.2.2\n                           +------+\n \
    \                               Figure 6\n   In the figure above, a site has native\
    \ IPv4 and tunneled IPv6\n   connectivity.  Therefore, the administrator may want\
    \ to set a higher\n   priority for using IPv4 than for using IPv6 because the\
    \ quality of\n   the tunnel network seems to be worse than that of the native\n\
    \   transport.\n   Solution analysis:\n      This problem can be solved in the\
    \ RFC 3484 framework.  For\n      example, configuring some address selection\
    \ policies into the\n      Host's RFC 3484 policy table can solve this problem.\n"
- title: 2.2.2.  ULA and IPv4 Dual-Stack Environment
  contents:
  - "2.2.2.  ULA and IPv4 Dual-Stack Environment\n   This is a special form of IPv4\
    \ and IPv6 prioritization.  When an\n   enterprise has IPv4 Internet connectivity\
    \ but does not yet have IPv6\n   Internet connectivity, and the enterprise wants\
    \ to provide site-local\n   IPv6 connectivity, a ULA is the best choice for site-local\
    \ IPv6\n   connectivity.  Each employee host will have both an IPv4 global or\n\
    \   private address and a ULA.  Here, when this host tries to connect to\n   Host-B\
    \ that has registered both A and AAAA records in the DNS, the\n   host will choose\
    \ AAAA as the destination address and the ULA for the\n   source address.  This\
    \ will clearly result in a connection failure.\n                           +--------+\n\
    \                           | Host-B | AAAA = 2001:db8::80\n                 \
    \          +-----+--+ A    = 192.0.2.1\n                                 |\n \
    \                       ============\n                        | Internet |\n \
    \                       ============\n                             |  no IPv6\
    \ connectivity\n                        +----+----+\n                        |\
    \ Router  |\n                        +----+----+\n                           \
    \  |\n                             | fd01:2:3::/48 (ULA)\n                   \
    \          | 192.0.2.128/25\n                            ++--------+\n       \
    \                     | Router  |\n                            +----+----+\n \
    \                                |  fd01:2:3:4::/64 (ULA)\n                  \
    \               |  192.0.2.240/28\n                       ------+---+----------\n\
    \                             |\n                           +-+------+ fd01:2:3:4::100\
    \ (ULA)\n                           | Host-A | 192.0.2.245\n                 \
    \          +--------+\n                                Figure 7\n   Solution analysis:\n\
    \      This problem can be solved in the RFC 3484 framework.  For\n      example,\
    \ configuring some address selection policies into Host-A's\n      RFC 3484 policy\
    \ table can solve this problem.\n"
- title: 2.2.3.  ULA or Global Prioritization
  contents:
  - "2.2.3.  ULA or Global Prioritization\n   Differentiating services by the client's\
    \ source address is very\n   common.  IP-address-based authentication is a typical\
    \ example of\n   this.  Another typical example is a web service that has pages\
    \ for\n   the public and internal pages for employees or involved parties.  Yet\n\
    \   another example is DNS zone splitting.\n   However, a ULA and an IPv6 global\
    \ address both have global scope, and\n   RFC 3484 default rules do not specify\
    \ which address should be given\n   priority.  This point makes IPv6 implementation\
    \ of address-based\n   service differentiation a bit harder.\n               \
    \             +--------+\n                            | Host-B |\n           \
    \                 +-+--|---+\n                              |  |\n           \
    \           ===========|==\n                      | Internet | |\n           \
    \           ===========|==\n                            |    |\n             \
    \               |    |\n                       +----+-+  +-->+------+\n      \
    \                 | ISP  +------+  DNS | 2001:db8:a::80\n                    \
    \   +----+-+  +-->+------+ fc12:3456:789a::80\n                            | \
    \   |\n            2001:db8:a::/48 |    |\n        fc12:3456:789a::/48 |    |\n\
    \                       +----+----|+\n                       | Router  ||\n  \
    \                     +---+-----|+\n                           |     |    2001:db8:a:100::/64\n\
    \                           |     |    fc12:3456:789a:100::/64\n             \
    \            --+-+---|-----\n                             |   |\n            \
    \               +-+---|--+ 2001:db8:a:100::100\n                           | Host-A\
    \ | fc12:3456:789a:100::100\n                           +--------+\n         \
    \                       Figure 8\n   Solution analysis:\n      This problem can\
    \ be solved in the RFC 3484 framework.  For\n      example, configuring some address\
    \ selection policies into Host-A's\n      RFC 3484 policy table can solve this\
    \ problem.\n"
- title: 3.  Conclusion
  contents:
  - "3.  Conclusion\n   We have covered problems related to destination or source\
    \ address\n   selection.  These problems have their roots in the situation where\n\
    \   end hosts have multiple IP addresses.  In this situation, every end\n   host\
    \ must choose an appropriate destination and source address; this\n   choice cannot\
    \ be achieved only by routers.\n   It should be noted that end hosts must be informed\
    \ about routing\n   policies of their upstream networks for appropriate address\n\
    \   selection.  A site administrator must consider every possible address\n  \
    \ false-selection problem and take countermeasures beforehand.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   When an intermediate router performs policy routing\
    \ (e.g., source-\n   address-based routing), inappropriate address selection causes\n\
    \   unexpected routing.  For example, in the network described in Section\n  \
    \ 2.1.3, when Host-A uses a default address selection policy and\n   chooses an\
    \ inappropriate address, a packet sent to a VPN can be\n   delivered to a location\
    \ via the Internet.  This issue can lead to\n   packet eavesdropping or session\
    \ hijack.  However, sending the packet\n   back to the correct path from the attacker\
    \ to the node is not easy,\n   so these two risks are not serious.\n   As documented\
    \ in the Security Considerations section of RFC 3484,\n   address selection algorithms\
    \ expose a potential privacy concern.\n   When a malicious host can make a target\
    \ host perform address\n   selection (for example, by sending an anycast or multicast\
    \ packet),\n   the malicious host can get knowledge of multiple addresses attached\n\
    \   to the target host.  In a case like Section 2.1.4, if an attacker can\n  \
    \ make the Host to send a multicast packet and the Host performs the\n   default\
    \ address selection algorithm, the attacker may be able to\n   determine the ULAs\
    \ attached to the host.\n   These security risks have roots in inappropriate address\
    \ selection.\n   Therefore, if a countermeasure is taken, and hosts always select\
    \ an\n   appropriate address that is suitable to a site's network structure\n\
    \   and routing, these risks can be avoided.\n"
- title: 5.  Normative References
  contents:
  - "5.  Normative References\n   [RFC3041]  Narten, T. and R. Draves, \"Privacy Extensions\
    \ for\n              Stateless Address Autoconfiguration in IPv6\", RFC 3041,\n\
    \              January 2001.\n   [RFC3484]  Draves, R., \"Default Address Selection\
    \ for Internet\n              Protocol version 6 (IPv6)\", RFC 3484, February\
    \ 2003.\n   [RFC3775]  Johnson, D., Perkins, C., and J. Arkko, \"Mobility Support\n\
    \              in IPv6\", RFC 3775, June 2004.\n   [RFC4192]  Baker, F., Lear,\
    \ E., and R. Droms, \"Procedures for\n              Renumbering an IPv6 Network\
    \ without a Flag Day\", RFC 4192,\n              September 2005.\n   [RFC4193]\
    \  Hinden, R. and B. Haberman, \"Unique Local IPv6 Unicast\n              Addresses\"\
    , RFC 4193, October 2005.\n   [RFC4291]  Hinden, R. and S. Deering, \"IP Version\
    \ 6 Addressing\n              Architecture\", RFC 4291, February 2006.\n   [RFC4862]\
    \  Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              Address\
    \ Autoconfiguration\", RFC 4862, September 2007.\n   [RFC4864]  Van de Velde,\
    \ G., Hain, T., Droms, R., Carpenter, B., and\n              E. Klein, \"Local\
    \ Network Protection for IPv6\", RFC 4864,\n              May 2007.\n   [RFC5014]\
    \  Nordmark, E., Chakrabarti, S., and J. Laganier, \"IPv6\n              Socket\
    \ API for Source Address Selection\", RFC 5014,\n              September 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Arifumi Matsumoto\n   NTT PF Lab\n   Midori-Cho 3-9-11\n\
    \   Musashino-shi, Tokyo  180-8585\n   Japan\n   Phone: +81 422 59 3334\n   EMail:\
    \ arifumi@nttv6.net\n   Tomohiro Fujisaki\n   NTT PF Lab\n   Midori-Cho 3-9-11\n\
    \   Musashino-shi, Tokyo  180-8585\n   Japan\n   Phone: +81 422 59 7351\n   EMail:\
    \ fujisaki@nttv6.net\n   Ruri Hiromi\n   Intec Netcore, Inc.\n   Shinsuna 1-3-3\n\
    \   Koto-ku, Tokyo  136-0075\n   Japan\n   Phone: +81 3 5665 5069\n   EMail: hiromi@inetcore.com\n\
    \   Ken-ichi Kanayama\n   INTEC Systems Institute, Inc.\n   Shimoshin-machi 5-33\n\
    \   Toyama-shi, Toyama  930-0804\n   Japan\n   Phone: +81 76 444 8088\n   EMail:\
    \ kanayama_kenichi@intec-si.co.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
