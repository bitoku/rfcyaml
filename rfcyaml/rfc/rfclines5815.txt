Abstract This document defines managed objects for IP Flow Information eXport (IPFIX).
These objects provide information for monitoring IPFIX Exporters and IPFIX Collectors including the basic configuration information.
This document defines two MIB modules for monitoring IP Flow Information eXport (IPFIX) Devices including Exporters and Collectors.
Most of the objects defined by the IPFIX MIB module MUST be implemented.
Some objects MAY be implemented corresponding to the functionality implemented in the equipment.
Since the IPFIX architecture [RFC5470] foresees the possibility of using Filtering and/or Sampling functions to reduce the data volume, this document also provides the IPFIX SELECTOR MIB module, which contains the standardized selection methods and is controlled by IANA.
The full configuration of the IPFIX Metering Process is out of the scope of these MIB modules.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
The IPFIX protocol provides network administrators with access to IP Flow information.
The architecture for the export of measured IP Flow information out of an IPFIX Exporting Process to a Collecting Process is defined in [RFC5470], per the requirements defined in [RFC3917].
The protocol document [RFC5101] specifies how IPFIX Data Records and Templates are carried via a congestion aware transport protocol from IPFIX Exporting Processes to IPFIX Collecting Processes.
IPFIX has a formal description of IPFIX Information Elements, their name, type and additional semantic information, as specified in [RFC5102].
Finally, [RFC5472] describes what type of applications can use the IPFIX protocol and how they can use the information provided.
It furthermore shows how the IPFIX framework relates to other architectures and frameworks.
It is assumed that Flow metering, export, and collection is performed according to the IPFIX architecture defined in [RFC5470].
The monitored configuration parameters of the export and collection of Flow Templates and Data Records is modeled according to [RFC5101].
Packet selection methods that may be optionally used by the IPFIX Metering Process are not considered in this MIB module.
They are defined in the Packet Sampling (PSAMP) framework [RFC5474] and Sampling techniques [RFC5475] documents.
Nevertheless, the basis for defining Sampling and Filtering functions is given with the IPFIX SELECTOR MIB module.
Since the PSAMP export protocol [RFC5476] is based on the IPFIX protocol, the Sampling and Filtering functions can be added to the IPFIX SELECTOR MIB module as needed.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies MIB modules that are compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The definitions of the basic terms like IP Traffic Flow, Exporting Process, Collecting Process, Observation Points, etc. can be found in the IPFIX protocol document [RFC5101].
The IPFIX MIB module consists of seven main tables, the Transport Session table, the Template table and the corresponding Template Definition table, the Export table, the Metering Process table, the Observation Point table, and the Selection Process table.
Since the IPFIX architecture [RFC5470] foresees the possibility of using Filtering and/or Sampling functions to reduce the data volume, the MIB module provides the basic objects for these functions with the Selection Process table.
The IPFIX SELECTOR MIB module defined in the next section provides the standard Filtering and Sampling functions that can be referenced in the ipfixSelectionProcessTable.
All remaining objects contain statistical values for the different tables contained in the MIB module.
The following subsections describe all tables in the IPFIX MIB module.
The Transport Session is the basis of the MIB module.
The Transport Session table (ipfixTransportSessionTable) contains all Transport Sessions between Exporter and Collector.
The table specifies the transport layer protocol of the Transport Session and, depending on that protocol, further parameters for the Transport Session.
In the case of UDP and TCP, these are the source and destination address as well as the source and destination port.
For Stream Control Transmission Protocol (SCTP), the table contains the SCTP
Assoc Id, which is the index for the SCTP association in the SCTP
The mode of operation of the device, i.e., if the Transport Session is used for collecting or exporting is given in the ipfixTransportSessionDeviceMode object.
Further on, it contains the configured refresh parameters for Templates and Options Templates that are used across unreliable connections as UDP.
Finally, the IPFIX version that is exported or collected by this Transport Session and a status of the Transport Session is given in the table.
To illustrate the use of the above tables, let us assume the following scenario: we have an Exporter on IP address 192.0.2.22 and a Collector on IP address 192.0.2.37.
The Exporter uses TCP to export Templates and Data Records.
The same Exporter also exports, with UDP, to a Collector with the IP address of 192.0.2.44.
This would lead to the following Transport Session table on the Exporter:
The values in brackets are the OID numbers.
The Collectors would then have the same entry except that the index would most likely differ and the ipfixTransportSessionDeviceMode would be collecting(2).
The Template table lists all Templates (including Options Templates) that are sent (by an Exporter) or received (by a Collector).
The (Options) Templates are unique per Transport Session, which also gives the device mode (Exporter or Collector) and Observation Domain; thus, the table is indexed by:  the Transport Session Index (ipfixTransportSessionIndex)  and the Observation Domain Id (ipfixTemplateObservationDomainId).
It contains the Set Id and an access time denoting the time when the (Options) Template was last sent or received.
To resume the above example, the Exporter may want to export a Template and an Options Template for each Transport Session defined above.
This leads to the following Template table defining Template and Options Template: ipfixTemplateTable (3)
We assume that the Transport Session that is stored with index 5 in the Transport Session table of the Exporter is stored with index 17 in the Transport Session table of the (corresponding) Collector.
Then, the Template table would look as follows:
The table on the second Collector would be analogous to the one shown above.
The Template Definition table lists all the Information Elements contained in a Template or Options Template.
Therefore, it has the same indexes as the corresponding Template table plus the Template Id.  Its own index denotes the order of the Information Element inside the Template.
Id and the length of the encoded value, the table contains the enterprise number for enterprise specific Information Elements and flags for each Information Element.
The flags indicate if the Information Element is used for scoping or as a Flow Key.
To resume the above example again, the Exporter is configured to export the octets received and dropped at the Observation Point since the last export of these values.
In addition, it exports the start and end time of the Flow relative to the timestamp contained in the IPFIX header.
This leads to the following Template Definition table on the Exporter: ipfixTemplateDefinitionTable (4)
The corresponding table entry on the Collector is the same except that it would have another ipfixTransportSessionIndex, e.g., 17 as in the previous example.
On Exporters, the Export table (ipfixExportTable) can be used to support features like failover, load balancing, duplicate export to several Collectors, etc.
The table has three indexes that link an entry with:  the Metering Process table (ipfixMeteringProcessCacheId, see below)  and the Transport Session table (ipfixTransportSessionIndex).
Those entries with the same ipfixExportIndex and the same ipfixMeteringProcessCacheId define a Transport Session group.
The member type for each group member describes its functionality.
All Transport Sessions referenced in this table MUST have the ipfixTransportSessionDeviceMode exporting(1).
If the Exporter does not use Transport Session grouping, then each ipfixExportIndex contains a single ipfixMeteringProcessCacheId, and thus a singe Transport Session (ipfixTransportSessionIndex) and this session MUST have the member type primary(1).
For failover, a Transport Session group can contain one Transport Session with member type "primary" and several Transport Sessions with type secondary(2).
Entries with other member types are not allowed for that type of group.
For load balancing or parallel export, all Transport Sessions in the group MUST have the same member type, either loadBalancing(4) or parallel(3).
The algorithms used for failover or load balancing
are out of the scope of this document.
To continue the example, we assume that the Exporter uses the two connections shown in the examples above as one primary Transport Session protected by a secondary Transport Session.
The Exporter then has the following entries in the ipfixExportTable: ipfixExportTable (5)
ipfixExportIndex (1)   8   ipfixExportMemberType (2)   1
The example shows that the Exporter uses the Metering Process Cache 9, explained below, to export IPFIX Data Records for the Transport Sessions 5 and 11.
The Templates 257 and 264 defined above are exported within Transport Session 5, and the Templates 273 and 289 are exported within Transport Session 11.
If we assume that Templates 257 and 264 are identical, then the Collector that receives Transport Session 11 is a backup for the Collector of Transport Session 5.
The Metering Process, as defined in [RFC5101], consists of a set of functions.
Maintaining the Flow Records is one of them.
This function is responsible for passing the Flow Records to the Exporting Process and also for detecting Flow expiration.
The Flow Records that are maintained by the Metering Process can be grouped by the Observation Points at which they are observed.
The instance that maintains such a group of Flow Records is a kind of cache.
For this reason, the Metering Process table (ipfixMeteringProcessTable) is indexed by cache Ids (ipfixMeteringProcessCacheId).
Each cache can be maintained by a separate instance of the Metering Process.
To specify the Observation Point(s) where the Flow Records are gathered, the ipfixMeteringProcessObservationPointGroupRef may contain an ipfixObservationPointGroupId from the Observation Point table (ipfixObservationPointTable) described in the next section.
If an Observation Point is not specified for the Flow Records, the ipfixMeteringProcessObservationPointGroupRef MUST be zero(0).
The timeouts (ipfixMeteringProcessCacheActiveTimeout and ipfixMeteringProcessCacheInactiveTimeout) specify when Flows are expired.
ipfixMeteringProcessCacheId (1)   9   ipfixMeteringProcessObservationPointGroupRef (2)
The Observation Point table (ipfixObservationPointTable) groups Observation Points with the ipfixObservationPointGroupId.
Each entry contains the Observation Domain Id in which the Observation Point is located and a reference to the ENTITY
MIB module [RFC4133] or the IF MIB module [RFC2863].
The objects in the ENTITY MIB module referenced by ipfixObservationPointPhysicalEntity or IF MIB module referenced by ipfixObservationPointPhysicalInterface denote the Observation Point.
If no such index can be given in those modules, the references MUST be 0.
If a reference is given in both object ipfixObservationPointPhysicalEntity
and ipfixObservationPointPhysicalInterface, then both MUST point to the same physical interface.
In addition, a direction can be given to render more specifically which Flow to monitor.
ipfixObservationPointPhysicalEntityDirection (6)   1 (ingress) 5.7.
This table supports the usage of Filtering and Sampling functions, as described in [RFC5470].
It contains lists of functions per Metering Process cache (ipfixMeteringProcessCacheId).
The selection process index ipfixSelectionProcessIndex forms groups of selection methods that are applied to an observed packet stream.
The selection process selector index (ipfixSelectionProcessSelectorIndex) indicates the order in which the functions are applied to the packets observed at the Observation Points associated with the Metering Process cache.
The selection methods are applied in increasing order, i.e., selection methods with a lower ipfixSelectionProcessSelectorIndex are applied first.
The functions are referred by object identifiers pointing to the function with its parameters.
If the selection method does not use parameters, then it MUST point to the root of the function subtree (see also Section 6).
If the function uses parameters, then it MUST point to an entry in the parameter table of the selection method.
If no Filtering or Sampling function is used for a Metering Process, then an entry for the Metering Process SHOULD be created pointing to the Select
For the ipfixTransportSessionTable, the ipfixTemplateTable, the ipfixMeteringProcessTable, and the ipfixSelectionProcessTable statistical tables are defined that augment those tables.
All the statistical tables contain a discontinuity object that holds a timestamp that denotes the time when a discontinuity event occurred to notify the management system that the counters contained in those tables might not be continuous anymore.
The Transport Session Statistical Table
The Transport Session Statistical table (ipfixTransportSessionStatsTable) augments the ipfixTransportSessionTable with statistical values.
It contains the rate (in bytes per second) with which it receives or sends out IPFIX Messages, the number of bytes, packets, messages, Records, Templates and Options Templates received or sent and the number of messages that were discarded.
This table contains a statistical value for each Template.
It augments the Template table (ipfixTemplateTable) and specifies the number of Data Records exported or collected for the Template.
The Metering Process Statistical Table
This table augments the Metering Process table (ipfixMeteringProcessTable).
It contains the statistical values for the exported Data Records and the number of unused cache entries.
The Selection Process Statistical Table
This table augments the Selection Process table (ipfixSelectionProcessTable) and introduces two generic statistical values, the number of packets observed and the number of packets dropped by the selection method.
The IPFIX SELECTOR MIB module defined in this section provides the standard Filtering and Sampling functions that can be referenced in the ipfixSelectionProcessTable.
ipfixSelectorFunctions is a placeholder where all standard Filtering and Sampling functions should be located.
It currently contains the Select All function (ipfixFuncSelectAll).
The IPFIX SELECTOR MIB module is maintained by IANA and can be extended through Expert Review [RFC5226], i.e., review by one of a group of experts designated by an IETF Area Director.
The group of experts MUST check the requested MIB objects for completeness and accuracy of the description.
Requests for MIB objects that duplicate the functionality of existing objects SHOULD be declined.
The smallest available OID SHOULD be assigned to a new MIB objects.
The specification of new MIB objects SHOULD follow the structure specified in the next Section and MUST be published using a well established and persistent publication medium.
The experts will initially be drawn from the Working Group Chairs and document editors of the IPFIX and PSAMP Working Groups.
The following figure shows what the MIB tree usually should look like.
It already contains the ipfixFuncSelectAll.
The subtree in ipfixFuncF2 gives the basic structure that all selection methods SHOULD follow.
ipfixFuncF2Avail (is the function F2 available?)
The selection method SHOULD be designed as a MIB subtree introduced by an object with the name
ipfixFunc appended by a function name.
The objects in this subtree SHOULD be prefixed by this name.
If the function is named Fx, then we would start a subtree with an OID named ipfixFuncFx.
This subtree should contain an object ipfixFuncFxAvail that has the type TruthValue.
If a selection method takes parameters, the MIB should contain a table named ipfixFuncFxParameters, which should contain all the parameters that the selection method specifies.
An entry in this table will be referenced by the IPFIX MIB module if the selection method with the parameters is used.
To illustrate the structure defined above, the following contains an example of a function MyFunc that holds three integer parameters Param1, Param2, and Param3.
In the example, there are currently two instances of the parameters set defined with indexes 1 and 4.
ipfixSelectorFunctions.?.2.1.4   index (2) (ipfixSelectionProcessSelectorIndex)   ipfixSelectionProcessSelectorFunction (3)
This means that for the ipfixMeteringProcessCacheId(9), a Selection Process with index 1 is created that applies two times the same function but with different parameter sets.
First, the function MyFunc is applied with the parameters of the set with index 4 and the with the parameters of the set with index 1. 7.
Relationship to Other MIB Modules
Besides the usual imports from the SNMP Standards [RFC2578], [RFC2579], and [RFC2580], the IPFIX MIB module references the ENTITY
MIB module [RFC4133] and the IF MIB module [RFC2863].
Relationship to the ENTITY MIB
and IF MIB The Observation Point table (ipfixObservationPointTable) contains a reference to the ENTITY MIB module[RFC4133]
(ipfixObservationPointPhysicalEntity) or the IF MIB module [RFC2863] (ipfixObservationPointPhysicalInterface).
If the implementors of the IPFIX MIB module want to specify the physical entity where Flows are observed, then they SHOULD also implement the ENTITY MIB and/or the IF MIB module.
The implementation of the ENTITY MIB
and/or IF MIB module is OPTIONAL.
If one of them is not implemented, then all values of the respective column ipfixObservationPointPhysicalEntity or ipfixObservationPointPhysicalInterface in the Observation Point table are zero and
the values of the ipfixObservationPointPhysicalEntityDirection columns are unknown(0), if none of them are defined.
MIB Modules Required for IMPORTS
The IPFIX MIB module requires the modules SNMPv2
Further on, it imports the textual conventions InetAddressType and InetAddress from the INET ADDRESS
The IPFIX SELECTOR MIB module also requires the modules SNMPv2
This section contains the definitions of the IPFIX MIB module and the IPFIX SELECTOR MIB module.
There are different mandatory groups defined for Collector and Exporter implementations.
The statistical objects are made OPTIONAL.
IPFIX MIB Definition IPFIX MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE,
mib 2, Unsigned32, Counter64, Gauge32
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2 CONF
RFC2863 InetAddressType, InetAddress, InetPortNumber FROM INET ADDRESS
NEC Europe Ltd. NEC Laboratories Europe Network Research Division Kurfuersten Anlage 36
69115 Heidelberg Germany Phone:  49 6221 4342 128
Email: Thomas.Dietz@nw.neclab.eu Atsushi Kobayashi NTT Information Sharing Platform Laboratories
3 9 11 Midori cho Musashino shi 180 8585 Japan Phone:  81 422 59 3978 Email:
akoba@nttv6.net Benoit Claise Cisco Systems,
Inc. De Kleetlaan 6a b1 Degem
Gerhard Muenz Technische Universitaet Muenchen Department of Informatics Chair for Network Architectures and Services (I8) Boltzmannstr.
49 89 289 18008 Email: muenz@net.in.tum.de URI:
The IPFIX MIB defines managed objects for IP Flow Information eXport.
These objects provide information about managed nodes supporting the IPFIX protocol, for Exporters as well as for Collectors.
IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)."
SEQUENCE OF IpfixTransportSessionEntry MAX ACCESS
"This table lists the currently established Transport Sessions between an Exporting Process and a Collecting Process."
"Defines an entry in the ipfixTransportSessionTable.
Locally arbitrary, but unique identifier of an entry in the ipfixTransportSessionTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization."
"The transport protocol used for receiving or transmitting IPFIX Messages.
Protocol numbers are assigned by IANA.
A current list of all assignments is available from <http://www.iana.org/>.
" REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 10."
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of addresses.
SCTP (132) should use the ipfixTransportSessionSctpAssocId instead.
If SCTP (132) or any other protocol without the notion of addresses is used, the object MUST be set to unknown(0)."
"The source address of the Exporter of the IPFIX Transport Session.
This value is interpreted according to the value of ipfixTransportSessionAddressType as specified in RFC 4001.
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of addresses.
SCTP (132) should use the ipfixTransportSessionSctpAssocId instead.
If SCTP (132) or any other protocol without the notion of addresses is used, the object MUST be set to a zero length string."
The type of address used for the destination address, as specified in RFC 4001.
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of addresses.
SCTP (132) should use the ipfixTransportSessionSctpAssocId instead.
If SCTP (132) or any other protocol without the notion of addresses is used, the object MUST be set to unknown(0)."
"The destination address of the Collector of the IPFIX Transport Session.
This value is interpreted according to the value of ipfixTransportSessionAddressType, as specified in RFC 4001.
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of addresses.
SCTP (132) should use the ipfixTransportSessionSctpAssocId instead.
If SCTP (132) or any other protocol without the notion of addresses is used, the object MUST be set to a zero length string" ::
{ ipfixTransportSessionEntry 6 } ipfixTransportSessionSourcePort OBJECT TYPE
"The transport protocol port number of the Exporter.
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of ports.
SCTP (132) should copy the value of sctpAssocLocalPort if the Transport Session is in collecting mode or sctpAssocRemPort if the Transport Session is in exporting mode.
The association is referenced by the ipfixTransportSessionSctpAssocId.
If any other protocol without the notion of ports is used, the object MUST be set to zero."
"The transport protocol port number of the Collector.
The default value is 4739 for all currently defined transport protocol types.
This object is used with protocols (specified in ipfixTransportSessionProtocol) like TCP (6) and UDP (17) that have the notion of ports.
SCTP (132) should copy the value of sctpAssocRemPort if the Transport Session is in collecting mode or sctpAssocLocalPort if the Transport Session is in exporting mode.
The association is referenced by the ipfixTransportSessionSctpAssocId.
If any other protocol without the notion of ports is used, the object MUST be set to zero."
"The association id used for the SCTP session between the Exporter and the Collector of the IPFIX Transport Session.
It is equal to the sctpAssocId entry in the sctpAssocTable defined in the SCTP MIB.
This object is only valid if ipfixTransportSessionProtocol has the value 132 (SCTP).
In all other cases, the value MUST be zero."
REFERENCE "RFC 3873, Stream Control Transmission Protocol (SCTP)
INTEGER { exporting(1), collecting(2) }
The mode of operation of the device for the given Transport Session.
This object can have the following values:
This value MUST be used
if the Transport Session is used for exporting Records to other IPFIX Devices, i.e., this device acts as Exporter.
This value MUST be used if the Transport Session is used for collecting Records from other IPFIX Devices, i.e., this device acts as Collector."
On Exporters, this object contains the time in seconds after which IPFIX Templates are resent by the Exporter.
On Collectors, this object contains the lifetime in seconds after which a Template becomes invalid when it is not received again within this lifetime.
This object is only valid if ipfixTransportSessionProtocol has the value 17 (UDP).
In all other cases, the value MUST be zero."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 10.3.6 and 10.3.7."
{ ipfixTransportSessionEntry 11 } ipfixTransportSessionOptionsTemplateRefreshTimeout OBJECT
On Exporters, this object contains the time in seconds after which IPFIX Options Templates are resent by the Exporter.
On Collectors, this object contains the lifetime in seconds after which an Options Template becomes invalid when it is not received again within this lifetime.
This object is only valid if ipfixTransportSessionProtocol has the value 17 (UDP).
In all other cases the value MUST be zero."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 10.3.6 and 10.3.7."
"On Exporters, this object contains the number of exported IPFIX Messages after which IPFIX Templates are resent by the Exporter.
On Collectors, this object contains the lifetime in number of exported IPFIX Messages after which a Template becomes invalid when it is not received again within this lifetime.
This object is only valid if ipfixTransportSessionProtocol has the value 17 (UDP).
In all other cases the value MUST be zero."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 10.3.6 and 10.3.7."
"On Exporters, this object contains the number of exported IPFIX Messages after which IPFIX Options Templates are resent by the Exporter.
On Collectors, this object contains the lifetime in number of exported IPFIX Messages after which an Options Template becomes invalid when it is not received again within this lifetime.
This object is only valid if ipfixTransportSessionProtocol has the value 17 (UDP).
In all other cases the value MUST be zero."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 10.3.6 and 10.3.7."
"On Exporters the object contains the version number of the IPFIX protocol that the Exporter uses to export its data in this Transport Session.
On Collectors the object contains the version number of the IPFIX protocol it receives for this Transport Session.
If IPFIX Messages of different IPFIX protocol versions are transmitted or received in this Transport Session, this object contains the maximum version number.
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.1."
This object can have the following values: unknown(0)
This value MUST be used if the status of the Transport Session cannot be detected by the equipment.
This value should be avoided as far as possible.
This value MUST be used for Transport Sessions that are specified in the system but are not currently active.
The value can be used, e.g., for Transport Sessions that are backup (secondary) sessions in a Transport Session group.
This value MUST be used for Transport Sessions that are currently active and transmitting or receiving data."
"This table lists the Templates and Options Templates that are transmitted by the Exporting Process or received by the Collecting Process.
The table contains the Templates and Options Templates that are received or used for exporting data for a given Transport Session group and Observation Domain.
(Options) Template MUST be removed from this table."
"Defines an entry in the ipfixTemplateTable.
"The Id of the Observation Domain for which this Template is defined.
This value is used when sending IPFIX Messages.
The special value of 0 indicates that the Data Records exported with this (Option Template) cannot be applied to a single Observation Domain."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.1."
"This number indicates the Template Id in the IPFIX Message.
Values from 0 to 255 are not allowed for Template Ids."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.4.1."
"This number indicates the Set Id of the Template.
This object allows to easily retrieve the Template type.
Currently, there are two values defined.
The value 2 is used for Sets containing Template definitions.
The value 3 is used for Sets containing Options Template definitions."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.3.2."
"If the Transport Session is in exporting mode (ipfixTransportSessionDeviceMode) the time when this (Options) Template was last sent to the Collector(s).
In the specific case of UDP as transport protocol, this time is used to know when a retransmission of the (Options) Template is needed.
If it is in collecting mode, this object contains the time when this (Options) Template was last received from the Exporter.
In the specific case of UDP as transport protocol, this time is used to know when this (Options) Template times out and thus is no longer valid."
: Exported Template Definition Table   ipfixTemplateDefinitionTable  OBJECT TYPE SYNTAX
On Exporters, this table lists the (Options) Template fields of which a (Options) Template is defined.
It defines the (Options) Template given in the ipfixTemplateId specified in the ipfixTemplateTable.
On Collectors, this table lists the (Options) Template fields of which a (Options) Template is defined.
It defines the (Options) Template given in the ipfixTemplateId specified in the ipfixTemplateTable."
"Defines an entry in the ipfixTemplateDefinitionTable.
"The ipfixTemplateDefinitionIndex specifies the order in which the Information Elements are used in the (Options) Template Record.
Since a Template Record can contain a maximum of 65535 Information Elements, the index is limited to this value."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 3.4.1 and 3.4.2."
"This indicates the Information Element Id at position ipfixTemplateDefinitionIndex in the (Options) Template ipfixTemplateId.
This implicitly specifies the data type of the Information Element.
The elements are registered at IANA.
A current list of assignments can be found at <http://www.iana.org/assignments/ipfix>" REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.2.
RFC 5102, Information Model for IP Flow Information Export."
"This indicates the length of the Information Element
Id at position ipfixTemplateDefinitionIndex in the (Options) Template ipfixTemplateId.
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.2.
RFC 5102, Information Model for IP Flow Information Export."
Enterprise numbers are assigned by IANA.
A current list of all assignments is available from <http://www.iana.org/assignments/enterprise numbers/
This object must be zero(0) for all standard Information Elements registered with IANA.
A current list of these elements is available from <http://www.iana.org/assignments/ipfix/ipfix.xhtml>.
" REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.2.
RFC 5102, Information Model for IP Flow Information Export."
"This bitmask indicates special attributes for the Information Element:
This Information Element is used for scope.
This Information Element is a Flow Key.
Thus, we get the following values for an Information Element:
If neither bit scope(0) nor bit flowKey(1) are set The Information Element is neither used for scoping nor as Flow Key.
If only bit scope(0) is set The Information Element is used for scoping.
If only bit flowKey(1) is set The Information Element is used as Flow Key.
Both bit scope(0) and flowKey(1) MUST NOT be set at the same time.
This combination is not allowed."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Sections 2 and 3.4.2.1.
RFC 5102, Information Model for IP Flow Information Export."
SEQUENCE OF IpfixExportEntry MAX ACCESS
"This table lists all exports of an IPFIX device.
On Exporters, this table contains all exports grouped by Transport Session, Observation Domain Id, Template Id, and Metering Process represented by the ipfixMeteringProcessCacheId.
Thanks to the ipfixExportIndex, the exports can group one or more Transport Sessions to achieve a special functionality like failover management, load balancing, etc.
The entries with the same ipfixExportIndex, ipfixObservationDomainId, and ipfixMeteringProcessCacheId define a Transport Session group.
If the Exporter does not use Transport Session grouping, then each ipfixExportIndex contains a single ipfixMeteringProcessCacheId and thus a singe Transport Session, and this session MUST have the member type primary(1).
Transport Sessions referenced in this table MUST have the ipfixTransportSessionDeviceMode exporting(1).
On Collectors, this table is not needed."
"Defines an entry in the ipfixExportTable.
ipfixExportMemberType INTEGER } ipfixExportIndex OBJECT
Locally arbitrary, but unique identifier of an entry in the ipfixExportTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization.
A common ipfixExportIndex between two entries from this table expresses that there is a relationship between the Transport Sessions in ipfixTransportSessionIndex.
The type of relationship is expressed by the value of ipfixExportMemberType."
The following values are valid
This value MUST be used if the status of the group membership cannot be detected by the equipment.
This value should be avoided as far as possible.
This value is used for a group member that is used as the primary target of an Exporter.
Other group members (with the same ipfixExportIndex and ipfixMeteringProcessCacheId) MUST NOT have the value primary(1) but MUST have the value secondary(2).
This value MUST also be specified if the Exporter does not support Transport Session grouping.
In this case, the group contains only one Transport Session.
This value is used for a group member that is used as a secondary target of an Exporter.
The Exporter will use one of the targets specified as secondary(2) within the same Transport Session group when the primary target is not reachable.
This value is used for a group member that is used for duplicate exporting, i.e., all group members identified by the ipfixExportIndex are exporting the same Records in parallel.
This implies that all group members MUST have the same membertype parallel(3).
This value is used for a group member that is used as one target for load balancing.
This means that a Record is sent to one of the group members in this group identified by ipfixExportIndex.
This implies that all group members MUST have the same membertype loadBalancing(4)."
SEQUENCE OF IpfixMeteringProcessEntry MAX ACCESS
"This table lists so called caches used at the Metering Process to store the metering data of Flows observed at the Observation Points given in the ipfixObservationPointGroupReference.
The table lists the timeouts that specify when the cached metering data is expired.
On Collectors, the table is not needed."
"Defines an entry in the ipfixMeteringProcessTable.
Locally arbitrary, but unique identifier of an entry in the ipfixMeterinProcessTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization."
that links this table entry to the ipfixObservationPointTable.
The matching ipfixObservationPointGroupId in that table gives the Observation Points used in that cache.
If the Observation Points are unknown, the ipfixMeteringProcessObservationPointGroupRef MUST be zero."
On the Exporter, this object contains the time after which a Flow is expired (and a Data Record for the template is sent) even though packets matching this Flow are still received by the Metering Process.
If this value is 0, the Flow is not prematurely expired.
this object contains the time after which a Flow is expired (and a Data Record for the template is sent) when no packets matching this Flow are received by the Metering Process for the given number of seconds.
If this value is zero, the Flow is expired immediately, i.e., a Data Record is sent for every packet received by the Metering Process."
SEQUENCE OF IpfixObservationPointEntry MAX ACCESS
"This table lists the Observation Points used within an Exporter by the Metering Process.
The index ipfixObservationPointGroupId groups Observation Points and is referenced in the Metering Process table.
On Collectors this table is not needed."
"Defines an entry in the ipfixObservationPointTable.
, ipfixObservationPointPhysicalEntityDirection INTEGER } ipfixObservationPointGroupId OBJECT TYPE
Locally arbitrary, but unique identifier of an entry in the ipfixObservationPointTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization.
This index represents a group of Observation Points.
The special value of 0 MUST NOT be used within this table but is reserved for the usage in the ipfixMeteringProcessTable.
An index of 0 for the ipfixObservationPointGroupReference index in that table indicates that an Observation Point is unknown or unspecified for a Metering Process cache."
Locally arbitrary, but unique identifier of an entry in the ipfixObservationPointTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization.
This index represents a single Observation Point in an Observation Point group."
{ ipfixObservationPointEntry 2 } ipfixObservationPointObservationDomainId OBJECT TYPE SYNTAX
"The Id of the Observation Domain in which this Observation Point is included.
The special value of 0 indicates that the Observation Points within this group cannot be applied to a single Observation Domain."
REFERENCE "RFC 5101, Specification of the IP Flow Information Export (IPFIX) Protocol for the Exchange of IP Traffic Flow Information, Section 3.1."
"This object contains the index of a physical entity in the ENTITY MIB.
This physical entity is the given Observation Point.
If such a physical entity cannot be specified or is not known, then the object is zero."
"This object contains the index of a physical interface in the IF MIB.
This physical interface is the given Observation Point.
If such a physical interface cannot be specified or is not known, then the object is zero.
This object MAY be used stand alone or in addition to ipfixObservationPointPhysicalEntity.
If ipfixObservationPointPhysicalEntity is not zero, this object MUST point to the same physical interface that is referenced in ipfixObservationPointPhysicalEntity.
Otherwise, it may reference any interface in the IF MIB."
The direction of the Flow that is monitored on the given physical entity.
The following values are valid
This value MUST be used if a direction is not known for the given physical entity.
This value is used for monitoring incoming Flows on the given physical entity.
This value is used for monitoring outgoing Flows on the given physical entity.
This value is used for monitoring incoming and outgoing Flows on the given physical entity."
SEQUENCE OF IpfixSelectionProcessEntry MAX ACCESS
"This table contains Selector Functions connected to a Metering Process by the index ipfixMeteringProcessCacheId.
The Selector Functions are grouped into Selection Processes by the ipfixSelectionProcessIndex.
The Selector Functions are applied within the Selection Process to the packets observed for the given Metering Process cache in increasing order implied by the ipfixSelectionProcessSelectorIndex.
This means Selector Functions with lower ipfixSelectionProcessSelectorIndex are applied first.
The remaining packets are accounted for in Flow Records.
Since IPFIX does not define any Selector Function (except selecting every packet), this is a placeholder for future use and a guideline for implementing enterprise specific Selector Function objects.
ipfixFuncF2Avail (is the function F2 available?)
If a Selector Function takes parameters, the MIB should contain a table with an entry for each set of parameters used at the Exporter."
"Defines an entry in the ipfixSelectionProcessTable.
OBJECT IDENTIFIER } ipfixSelectionProcessIndex OBJECT
Locally arbitrary, but unique identifier of an entry in the ipfixSelectionProcessTable.
The value is expected to remain constant from a re initialization of the entity's network management agent to the next re initialization."
current DESCRIPTION "Index specifying the order in which the referenced ipfixSelctionProcessSelectorFunctions are applied to the observed packet stream within the given Selection Process (identified by the ipfixSelectionProcessIndex).
The Selector Functions are applied in increasing order, i.e., Selector Functions with lower index are applied first."
"The pointer to the Selector Function used at position ipfixSelectionProcessSelectorIndex in the list of Selector Functions for the Metering Process cache specified by the index ipfixMeteringProcessCacheId and for the given Selection Process (identified by the ipfixSelectionProcessIndex).
This usually points to an object in the IPFIX SELECTOR MIB.
If the Selector Function does not take parameters, then it MUST point to the root of the function subtree.
If the function takes parameters, then it MUST point to an entry in the parameter table of the Selector Function."
Transport Session Statistics Table   ipfixTransportSessionStatsTable  OBJECT
"This table lists Transport Sessions statistics between Exporting Processes and Collecting Processes."
"Defines an entry in the ipfixTransportSessionStatsTable."
ipfixTransportSessionOptionsTemplates  Counter64, ipfixTransportSessionDiscontinuityTime TimeStamp } ipfixTransportSessionRate
"The number of bytes per second received by the Collector or transmitted by the Exporter.
A value of zero (0) means that no packets were sent or received, yet.
This object is updated every second."
"The number of packets received by the Collector or transmitted by the Exporter.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of bytes received by the Collector or transmitted by the Exporter.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of IPFIX Messages received by the Collector or transmitted by the Exporter.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of received IPFIX Message that are malformed, cannot be decoded, are received in the wrong order, or are missing according to the sequence number.
If used at the Exporter, the number of messages that could not be sent due to, e.g., internal buffer overflows, network congestion, or routing issues.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of Data Records received by the Collector or transmitted by the Exporter.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of Templates received or transmitted.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
"The number of Options Templates received or transmitted.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTransportSessionDiscontinuityTime."
The value of sysUpTime at the most recent occasion at which one or more of the Transport Session counters suffered a discontinuity.
A value of zero indicates no such discontinuity has occurred since the last re initialization of the local management subsystem."
Template Statistics Table   ipfixTemplateStatsTable  OBJECT
"This table lists statistics objects per Template."
"Defines an entry in the ipfixTemplateStatsTable."
ipfixTemplateDiscontinuityTime TimeStamp } ipfixTemplateDataRecords OBJECT TYPE SYNTAX
"The number of Data Records that are transmitted or received per Template.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of ipfixTemplateDiscontinuityTime."
The value of sysUpTime at the most recent occasion at which the Template counter suffered a discontinuity.
A value of zero indicates no such discontinuity has occurred since the last re initialization of the local management subsystem."
"This table lists statistic objects that have data per Metering Process cache.
On Collectors, this table is not needed."
"Defines an entry in the ipfixMeteringProcessStatsTable."
"The number of Data Records generated.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times as indicated by the value of ipfixTemplateDiscontinuityTime."
The value of sysUpTime at the most recent occasion at which the Metering Process counter suffered a discontinuity.
A value of zero indicates no such discontinuity has occurred since the last re initialization of the local management subsystem."
"This table contains statistics for the Selector Functions connected to Metering Process by the index ipfixMeteringProcessCacheId.
The indexes MUST match an entry in the ipfixSelectionProcessTable."
"Defines an entry in the ipfixSelectionProcessStatsTable."
"The number of packets observed at the entry point of the function.
The entry point may be the Observation Point or the exit point of another Selector Function.
"The number of packets dropped while selecting packets.
The value of sysUpTime at the most recent occasion at which one or more of the Selector counters suffered a discontinuity.
A value of zero indicates no such discontinuity has occurred since the last re initialization of the local management subsystem."
The implementation of all objects in the other groups is optional and depends on the corresponding functionality implemented in the equipment.
An implementation that is compliant to this MIB module is limited to use only the values TCP (6), UDP (17), and SCTP (132) in the ipfixTransportSessionProtocol object because these are the only protocol currently specified for usage within IPFIX (see RFC 5101).
MODULE    this module MANDATORY GROUPS { ipfixCommonGroup } GROUP ipfixCommonStatsGroup DESCRIPTION
"These objects should be implemented if the statistics function is implemented in the equipment."
An implementation that builds an IPFIX Exporter that complies to this module MUST implement the objects defined in the mandatory group ipfixCommonGroup.
The implementation of all other objects depends on the implementation of the corresponding functionality in the equipment.
MODULE    this module MANDATORY GROUPS { ipfixCommonGroup, ipfixExporterGroup } GROUP ipfixCommonStatsGroup DESCRIPTION "
These objects should be implemented if the statistics function is implemented in the equipment."
"These objects MUST be implemented if statistical functions are implemented on the equipment."
"The main objects for Exporters."
MIB Definition IPFIX SELECTOR MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, mib 2 FROM SNMPv2
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2 CONF;
NEC Europe Ltd. NEC Laboratories Europe Network Research Division Kurfuersten Anlage 36
69115 Heidelberg Germany Phone:  49 6221 4342 128
Email: Thomas.Dietz@nw.neclab.eu Atsushi Kobayashi NTT Information Sharing Platform Laboratories
3 9 11 Midori cho Musashino shi 180 8585 Japan Phone:  81 422 59 3978 Email:
akoba@nttv6.net Benoit Claise Cisco Systems,
Inc. De Kleetlaan 6a b1 Degem
Gerhard Muenz Technische Universitaet Muenchen Department of Informatics Chair for Network Architectures and Services (I8) Boltzmannstr.
49 89 289 18008 Email: muenz@net.in.tum.de URI:
SELECTOR MIB module defines the standard filtering and sampling functions that can be referenced in the ipfixSelectorTable of the IPFIX MIB.
ipfixSelectorFunctions is a placeholder where all standard filtering and sampling functions should be located.
The IPFIX SELECTOR MIB module is maintained by IANA and can be extended through Expert Review [RFC5226], i.e., review by one of a group of experts designated by an IETF Area Director.
The group of experts MUST check the requested MIB objects for completeness and accuracy of the description.
Requests for MIB objects that duplicate the functionality of existing objects SHOULD be declined.
The smallest available OID SHOULD be assigned to a new MIB objects.
The specification of new MIB objects SHOULD follow the structure specified in RFC 5815 and MUST be published using a well established and persistent publication medium.
The experts will initially be drawn from the Working Group Chairs and document editors of the IPFIX and PSAMP Working Groups.
IETF Trust and the persons identified as authors of the code.
Redistribution and use in source and binary forms, with or without modification, is permitted pursuant to, and subject to the license terms contained in, the Simplified BSD License set forth in Section 4.c of the IETF Trust's Legal Provisions Relating to IETF Documents (http://trustee.ietf.org/license info)."
"This object indicates the availability of the trivial function of selecting all packets.
This function is always available."
ipfixSelectorBasicCompliance MODULE COMPLIANCE STATUS  current DESCRIPTION
"An implementation that builds an IPFIX Exporter that complies to this module MUST implement the objects defined in the mandatory group ipfixBasicGroup.
The implementation of all other objects depends on the implementation of the corresponding functionality in the equipment.
There are no management objects defined in this MIB module that have a MAX ACCESS clause of read write and/or read create.
So, if these MIB modules are implemented correctly, then there is no risk that an intruder can alter or create any management objects of these MIB modules via direct SNMP SET operations.
Some of the readable objects in these MIB modules (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
ipfixTransportSessionTable contains configuration data that might be sensitive because objects in this table may reveal information about the network infrastructure  ipfixExportTable contains configuration data that might be sensitive because object in this table may reveal information about the network infrastructure
as well  ipfixMeteringProcessTable contains configuration data that might be sensitive because objects in this table may reveal information about the IPFIX Device itself
ipfixObservationPointTable contains configuration data that might be sensitive because objects in this table may reveal information about the IPFIX Device itself and the network infrastructure
ipfixSelectorFunctions currently contains no sensitive data but might want to be secured anyway since it may contain sensitive data in a future version All other objects and tables contain no data that is considered sensitive.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in these MIB modules.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410] Section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of these MIB modules is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
The MIB module in this document uses the following IANA assigned OBJECT IDENTIFIER values recorded in the SMI Numbers registry:
} ipfixSelectorMIB  { mib 2 194 }
Further on, the whole IPFIX SELECTOR MIB module is maintained by IANA.
Additions to this MIB module are subject to Expert Review [RFC5226], i.e., review by one of a group of experts designated by an IETF Area Director.
The group of experts MUST check the requested MIB objects for completeness and accuracy of the description.
Requests for MIB objects that duplicate the functionality of existing objects SHOULD be declined.
The smallest available OID SHOULD be assigned to new MIB objects.
The specification of new MIB objects SHOULD follow the structure specified in Section 6 and MUST be published using a well established and persistent publication medium.
The experts will initially be drawn from the Working Group Chairs and document editors of the IPFIX and PSAMP Working Groups.
