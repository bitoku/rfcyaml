- title: __initial_text__
  contents:
  - '            Cisco Systems NetFlow Services Export Version 9

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This RFC documents the NetFlow services export protocol Version\
    \ 9 as\n   it was when submitted to the IETF as a basis for further work in the\n\
    \   IPFIX WG.\n   This RFC itself is not a candidate for any level of Internet\n\
    \   Standard.  The IETF disclaims any knowledge of the fitness of this\n   RFC\
    \ for any purpose, and in particular notes that it has not had\n   complete IETF\
    \ review for such things as security, congestion control,\n   or inappropriate\
    \ interaction with deployed protocols.  The RFC Editor\n   has chosen to publish\
    \ this document at its discretion.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the data export format for version 9 of\
    \ Cisco\n   Systems' NetFlow services, for use by implementations on the network\n\
    \   elements and/or matching collector programs.  The version 9 export\n   format\
    \ uses templates to provide access to observations of IP packet\n   flows in a\
    \ flexible and extensible manner.  A template defines a\n   collection of fields,\
    \ with corresponding descriptions of structure\n   and semantics.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.   Introduction. . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.   Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  4\n        2.1.  Terminology Summary Table . . . . . . . . . . .\
    \ . . . .  6\n   3.   NetFlow High-Level Picture on the Exporter. . . . . . .\
    \ . . .  6\n        3.1.  The NetFlow Process on the Exporter . . . . . . . .\
    \ . .  6\n        3.2.  Flow Expiration . . . . . . . . . . . . . . . . . . .\
    \ .  7\n        3.3.  Transport Protocol. . . . . . . . . . . . . . . . . . .\
    \  7\n   4.   Packet Layout . . . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   5.   Export Packet Format. . . . . . . . . . . . . . . . . . . . .  9\n  \
    \      5.1.  Header Format . . . . . . . . . . . . . . . . . . . . .  9\n    \
    \    5.2.  Template FlowSet Format . . . . . . . . . . . . . . . . 11\n      \
    \  5.3.  Data FlowSet Format . . . . . . . . . . . . . . . . . . 13\n   6.   Options\
    \ . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n        6.1.  Options\
    \ Template FlowSet Format . . . . . . . . . . . . 14\n        6.2.  Options Data\
    \ Record Format. . . . . . . . . . . . . . . 16\n   7.   Template Management .\
    \ . . . . . . . . . . . . . . . . . . . . 17\n   8.   Field Type Definitions.\
    \ . . . . . . . . . . . . . . . . . . . 18\n   9.   The Collector Side. . . .\
    \ . . . . . . . . . . . . . . . . . . 25\n   10.  Security Considerations . .\
    \ . . . . . . . . . . . . . . . . . 26\n        10.1. Disclosure of Flow Information\
    \ Data . . . . . . . . . . 26\n        10.2. Forgery of Flow Records or Template\
    \ Records . . . . . . 26\n        10.3. Attacks on the NetFlow Collector. . .\
    \ . . . . . . . . . 27\n   11.  Examples. . . . . . . . . . . . . . . . . . .\
    \ . . . . . . . . 27\n        11.1. Packet Header Example . . . . . . . . . .\
    \ . . . . . . . 28\n        11.2. Template FlowSet Example. . . . . . . . . .\
    \ . . . . . . 28\n        11.3. Data FlowSet Example. . . . . . . . . . . . .\
    \ . . . . . 29\n        11.4. Options Template FlowSet Example. . . . . . . .\
    \ . . . . 30\n        11.5. Data FlowSet with Options Data Records Example. .\
    \ . . . 30\n   12.  References. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . 31\n        12.1. Normative References. . . . . . . . . . . . . . . . .\
    \ . 31\n        12.2. Informative References. . . . . . . . . . . . . . . . .\
    \ 31\n   13.  Authors . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n\
    \   14.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . . 31\n  \
    \ 15.  Authors' Addresses. . . . . . . . . . . . . . . . . . . . . . 32\n   16.\
    \  Full Copyright Statement. . . . . . . . . . . . . . . . . . . 33\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Cisco Systems' NetFlow services provide network administrators\
    \ with\n   access to IP flow information from their data networks.  Network\n\
    \   elements (routers and switches) gather flow data and export it to\n   collectors.\
    \  The collected data provides fine-grained metering for\n   highly flexible and\
    \ detailed resource usage accounting.\n   A flow is defined as a unidirectional\
    \ sequence of packets with some\n   common properties that pass through a network\
    \ device.  These\n   collected flows are exported to an external device, the NetFlow\n\
    \   collector.  Network flows are highly granular; for example, flow\n   records\
    \ include details such as IP addresses, packet and byte counts,\n   timestamps,\
    \ Type of Service (ToS), application ports, input and\n   output interfaces, etc.\n\
    \   Exported NetFlow data is used for a variety of purposes, including\n   enterprise\
    \ accounting and departmental chargebacks, ISP billing, data\n   warehousing,\
    \ network monitoring, capacity planning, application\n   monitoring and profiling,\
    \ user monitoring and profiling, security\n   analysis, and data mining for marketing\
    \ purposes.\n   This document specifies NetFlow version 9.  It describes the\n\
    \   implementation specifications both from network element and NetFlow\n   collector\
    \ points of view.  These specifications should help the\n   deployment of NetFlow\
    \ version 9 across different platforms and\n   different vendors by limiting the\
    \ interoperability risks.  The\n   NetFlow export format version 9 uses templates\
    \ to provide access to\n   observations of IP packet flows in a flexible and extensible\
    \ manner.\n   A template defines a collection of fields, with corresponding\n\
    \   descriptions of structure and semantics.\n   The template-based approach provides\
    \ the following advantages:\n      -  New fields can be added to NetFlow flow\
    \ records without\n         changing the structure of the export record format.\
    \  With\n         previous NetFlow versions, adding a new field in the flow\n\
    \         record implied a new version of the export protocol format and\n   \
    \      a new version of the NetFlow collector that supported the\n         parsing\
    \ of the new export protocol format.\n      -  Templates that are sent to the\
    \ NetFlow collector contain the\n         structural information about the exported\
    \ flow record fields;\n         therefore, if the NetFlow collector does not understand\
    \ the\n         semantics of new fields, it can still interpret the flow\n   \
    \      record.\n      -  Because the template mechanism is flexible, it allows\
    \ the\n         export of only the required fields from the flows to the\n   \
    \      NetFlow collector.  This helps to reduce the exported flow data\n     \
    \    volume and provides possible memory savings for the exporter\n         and\
    \ NetFlow collector.  Sending only the required information\n         can also\
    \ reduce network load.\n   The IETF IPFIX Working Group (IP Flow Information eXport)\
    \ is\n   developing a new protocol, based on the version 9 of Cisco Systems'\n\
    \   NetFlow services.  Some enhancements in different domains (congestion\n  \
    \ aware transport protocol, built-in security, etc... ) have been\n   incorporated\
    \ in this new IPFIX protocol.  Refer to the IPFIX Working\n   Group documents\
    \ for more details.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14, RFC 2119\n   [RFC2119].\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Various terms used in this document are described in this\
    \ section.\n   Note that the terminology summary table in Section 2.1 gives a\
    \ quick\n   overview of the relationships between some of the different terms\n\
    \   defined.\n   Observation Point\n   An Observation Point is a location in the\
    \ network where IP packets\n   can be observed; for example, one or a set of interfaces\
    \ on a network\n   device like a router.  Every Observation Point is associated\
    \ with an\n   Observation Domain.\n   Observation Domain\n   The set of Observation\
    \ Points that is the largest aggregatable set of\n   flow information at the network\
    \ device with NetFlow services enabled\n   is termed an Observation Domain.  For\
    \ example, a router line card\n   composed of several interfaces with each interface\
    \ being an\n   Observation Point.\n   IP Flow or Flow\n   An IP Flow, also called\
    \ a Flow, is defined as a set of IP packets\n   passing an Observation Point in\
    \ the network during a certain time\n   interval.  All packets that belong to\
    \ a particular Flow have a set of\n   common properties derived from the data\
    \ contained in the packet and\n   from the packet treatment at the Observation\
    \ Point.\n   Flow Record\n   A Flow Record provides information about an IP Flow\
    \ observed at an\n   Observation Point.  In this document, the Flow Data Records\
    \ are also\n   referred to as NetFlow services data and NetFlow data.\n   Exporter\n\
    \   A device (for example, a router) with the NetFlow services enabled,\n   the\
    \ Exporter monitors packets entering an Observation Point and\n   creates Flows\
    \ from these packets.  The information from these Flows\n   is exported in the\
    \ form of Flow Records to the NetFlow Collector.\n   NetFlow Collector\n   The\
    \ NetFlow Collector receives Flow Records from one or more\n   Exporters.  It\
    \ processes the received Export Packet(s); that is, it\n   parses and stores the\
    \ Flow Record information.  Flow Records can be\n   optionally aggregated before\
    \ being stored on the hard disk.  The\n   NetFlow Collector is also referred to\
    \ as the Collector in this\n   document.\n   Export Packet\n   An Export Packet\
    \ is a packet originating at the Exporter that carries\n   the Flow Records of\
    \ this Exporter and whose destination is the\n   NetFlow Collector.\n   Packet\
    \ Header\n   The Packet Header is the first part of an Export Packet.  The Packet\n\
    \   Header provides basic information about the packet such as the\n   NetFlow\
    \ version, number of records contained within the packet, and\n   sequence numbering.\n\
    \   Template Record\n   A Template Record defines the structure and interpretation\
    \ of fields\n   in a Flow Data Record.\n   Flow Data Record\n   A Flow Data Record\
    \ is a data record that contains values of the Flow\n   parameters corresponding\
    \ to a Template Record.\n   Options Template Record\n   An Options Template Record\
    \ defines the structure and interpretation\n   of fields in an Options Data Record,\
    \ including defining the scope\n   within which the Options Data Record is relevant.\n\
    \   Options Data Record\n   The data record that contains values and scope information\
    \ of the\n   Flow measurement parameters, corresponding to an Options Template\n\
    \   Record.\n   FlowSet\n   FlowSet is a generic term for a collection of Flow\
    \ Records that have\n   a similar structure.  In an Export Packet, one or more\
    \ FlowSets\n   follow the Packet Header.  There are three different types of\n\
    \   FlowSets: Template FlowSet, Options Template FlowSet, and Data\n   FlowSet.\n\
    \   Template FlowSet\n   A Template FlowSet is one or more Template Records that\
    \ have been\n   grouped together in an Export Packet.\n   Options Template FlowSet\n\
    \   An Options Template FlowSet is one or more Options Template Records\n   that\
    \ have been grouped together in an Export Packet.\n   Data FlowSet\n   A Data\
    \ FlowSet is one or more records, of the same type, that are\n   grouped together\
    \ in an Export Packet.  Each record is either a Flow\n   Data Record or an Options\
    \ Data Record previously defined by a\n   Template Record or an Options Template\
    \ Record.\n"
- title: 2.1.  Terminology Summary Table
  contents:
  - "2.1.  Terminology Summary Table\n   +------------------+---------------------------------------------+\n\
    \   |                  |                    Contents                 |\n   | \
    \                 +--------------------+------------------------+\n   |     FlowSet\
    \      | Template  Record   |    Data Record         |\n   +------------------+--------------------+------------------------+\n\
    \   |                  |                    |  Flow Data Record(s)   |\n   | Data\
    \ FlowSet     |          /         |          or            |\n   |          \
    \        |                    | Options Data Record(s) |\n   +------------------+--------------------+------------------------+\n\
    \   | Template FlowSet | Template Record(s) |           /            |\n   +------------------+--------------------+------------------------+\n\
    \   | Options Template | Options Template   |           /            |\n   | FlowSet\
    \          | Record(s)          |                        |\n   +------------------+--------------------+------------------------+\n\
    \   A Data FlowSet is composed of an Options Data Record(s) or Flow Data\n   Record(s).\
    \  No Template Record is included. A Template Record defines\n   the Flow Data\
    \ Record, and an Options Template Record defines the\n   Options Data Record.\n\
    \   A Template FlowSet is composed of Template Record(s).  No Flow or\n   Options\
    \ Data Record is included.\n   An Options Template FlowSet is composed of Options\
    \ Template\n   Record(s).  No Flow or Options Data Record is included.\n"
- title: 3.  NetFlow High-Level Picture on the Exporter
  contents:
  - '3.  NetFlow High-Level Picture on the Exporter

    '
- title: 3.1.  The NetFlow Process on the Exporter
  contents:
  - "3.1.  The NetFlow Process on the Exporter\n   The NetFlow process on the Exporter\
    \ is responsible for the creation\n   of Flows from the observed IP packets. \
    \ The details of this process\n   are beyond the scope of this document.\n"
- title: 3.2.  Flow Expiration
  contents:
  - "3.2.  Flow Expiration\n   A Flow is considered to be inactive if no packets belonging\
    \ to the\n   Flow have been observed at the Observation Point for a given timeout.\n\
    \   If any packet is seen within the timeout, the flow is considered an\n   active\
    \ flow. A Flow can be exported under the following conditions:\n      1. If the\
    \ Exporter can detect the end of a Flow.  For example, if\n         the FIN or\
    \ RST bit is detected in a TCP [RFC793] connection,\n         the Flow Record\
    \ is exported.\n      2. If the Flow has been inactive for a certain period of\
    \ time.\n         This inactivity timeout SHOULD be configurable at the Exporter,\n\
    \         with a minimum value of 0 for an immediate expiration.\n      3. For\
    \ long-lasting Flows, the Exporter SHOULD export the Flow\n         Records on\
    \ a regular basis.  This timeout SHOULD be\n         configurable at the Exporter.\n\
    \      4. If the Exporter experiences internal constraints, a Flow MAY be\n  \
    \       forced to expire prematurely; for example, counters wrapping or\n    \
    \     low memory.\n"
- title: 3.3.  Transport Protocol
  contents:
  - "3.3.  Transport Protocol\n   To achieve efficiency in terms of processing at\
    \ the Exporter while\n   handling high volumes of Export Packets, the NetFlow\
    \ Export Packets\n   are encapsulated into UDP [RFC768] datagrams for export to\
    \ the\n   NetFlow Collector.  However, NetFlow version 9 has been designed to\n\
    \   be transport protocol independent.  Hence, it can also operate over\n   congestion-aware\
    \ protocols such as SCTP [RFC2960].\n   Note that the Exporter can export to multiple\
    \ Collectors, using\n   independent transport protocols.\n   UDP [RFC768] is a\
    \ non congestion-aware protocol, so when deploying\n   NetFlow version 9 in a\
    \ congestion-sensitive environment, make the\n   connection between Exporter and\
    \ NetFlow Collector through a dedicated\n   link.  This ensures that any burstiness\
    \ in the NetFlow traffic\n   affects only this dedicated link.  When the NetFlow\
    \ Collector can not\n   be placed within a one-hop distance from the Exporter\
    \ or when the\n   export path from the Exporter to the NetFlow Collector can not\
    \ be\n   exclusively used for the NetFlow Export Packets, the export path\n  \
    \ should be designed so that it can always sustain the maximum\n   burstiness\
    \ of NetFlow traffic from the Exporter.  Note that the\n   congestion can occur\
    \ on the Exporter in case the export path speed is\n   too low.\n"
- title: 4.  Packet Layout
  contents:
  - "4.  Packet Layout\n   An Export Packet consists of a Packet Header followed by\
    \ one or more\n   FlowSets.  The FlowSets can be any of the possible three types:\n\
    \   Template, Data, or Options Template.\n     +--------+-------------------------------------------+\n\
    \     |        | +----------+ +---------+ +----------+     |\n     | Packet |\
    \ | Template | | Data    | | Options  |     |\n     | Header | | FlowSet  | |\
    \ FlowSet | | Template | ... |\n     |        | |          | |         | | FlowSet\
    \  |     |\n     |        | +----------+ +---------+ +----------+     |\n    \
    \ +--------+-------------------------------------------+\n                   \
    \      Export Packet\n   A FlowSet ID is used to distinguish the different types\
    \ of FlowSets.\n   FlowSet IDs lower than 256 are reserved for special FlowSets,\
    \ such as\n   the Template FlowSet (ID 0) and the Options Template FlowSet (ID\
    \ 1).\n   The Data FlowSets have a FlowSet ID greater than 255.\n   The format\
    \ of the Template, Data, and Options Template FlowSets will\n   be discussed later\
    \ in this document.  The Exporter MUST code all\n   binary integers of the Packet\
    \ Header and the different FlowSets in\n   network byte order (also known as the\
    \ big-endian byte ordering).\n   Following are some examples of export packets:\n\
    \   1. An Export Packet consisting of interleaved Template, Data, and\n      Options\
    \ Template FlowSets.  Example: a newly created Template is\n      exported as\
    \ soon as possible.  So if there is already an Export\n      Packet with a Data\
    \ FlowSet that is being prepared for export, the\n      Template and Option FlowSets\
    \ are also interleaved with this\n      information, subject to availability of\
    \ space.\n   Export Packet:\n   +--------+--------------------------------------------------------+\n\
    \   |        | +----------+ +---------+     +-----------+ +---------+ |\n   |\
    \ Packet | | Template | | Data    |     | Options   | | Data    | |\n   | Header\
    \ | | FlowSet  | | FlowSet | ... | Template  | | FlowSet | |\n   |        | |\
    \          | |         |     | FlowSet   | |         | |\n   |        | +----------+\
    \ +---------+     +-----------+ +---------+ |\n   +--------+--------------------------------------------------------+\n\
    \   2. An Export Packet consisting entirely of Data FlowSets.  Example:\n    \
    \  after the appropriate Template Records have been defined and\n      transmitted\
    \ to the NetFlow Collector device, the majority of\n      Export Packets consists\
    \ solely of Data FlowSets.\n   Export Packet:\n   +--------+----------------------------------------------+\n\
    \   |        | +---------+     +---------+      +---------+ |\n   | Packet | |\
    \ Data    | ... | Data    | ...  | Data    | |\n   | Header | | FlowSet | ...\
    \ | FlowSet | ...  | FlowSet | |\n   |        | +---------+     +---------+  \
    \    +---------+ |\n   +--------+----------------------------------------------+\n\
    \   3. An Export Packet consisting entirely of Template and Options\n      Template\
    \ FlowSets.  Example: the Exporter MAY transmit a packet\n      containing Template\
    \ and Options Template FlowSets periodically to\n      help ensure that the NetFlow\
    \ Collector has the correct Template\n      Records and Options Template Records\
    \ when the corresponding Flow\n      Data records are received.\n   Export Packet:\n\
    \   +--------+-------------------------------------------------+\n   |       \
    \ | +----------+     +----------+      +----------+ |\n   | Packet | | Template\
    \ |     | Template |      | Options  | |\n   | Header | | FlowSet  | ... | FlowSet\
    \  | ...  | Template | |\n   |        | |          |     |          |      | FlowSet\
    \  | |\n   |        | +----------+     +----------+      +----------+ |\n   +--------+-------------------------------------------------+\n"
- title: 5.  Export Packet Format
  contents:
  - '5.  Export Packet Format

    '
- title: 5.1.  Header Format
  contents:
  - "5.1.  Header Format\n   The Packet Header format is specified as:\n    0    \
    \               1                   2                   3\n    0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Version Number          |            Count              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           sysUpTime                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           UNIX Secs                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Sequence Number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                        Source ID                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Packet Header Field Descriptions\n   Version\n         Version of Flow Record\
    \ format exported in this packet.  The\n         value of this field is 9 for\
    \ the current version.\n   Count\n         The total number of records in the\
    \ Export Packet, which is the\n         sum of Options FlowSet records, Template\
    \ FlowSet records, and\n         Data FlowSet records.\n   sysUpTime\n       \
    \  Time in milliseconds since this device was first booted.\n   UNIX Secs\n  \
    \       Time in seconds since 0000 UTC 1970, at which the Export Packet\n    \
    \     leaves the Exporter.\n   Sequence Number\n         Incremental sequence\
    \ counter of all Export Packets sent from\n         the current Observation Domain\
    \ by the Exporter.  This value\n         MUST be cumulative, and SHOULD be used\
    \ by the Collector to\n         identify whether any Export Packets have been\
    \ missed.\n   Source ID\n         A 32-bit value that identifies the Exporter\
    \ Observation Domain.\n         NetFlow Collectors SHOULD use the combination\
    \ of the source IP\n         address and the Source ID field to separate different\
    \ export\n         streams originating from the same Exporter.\n"
- title: 5.2.  Template FlowSet Format
  contents:
  - "5.2.  Template FlowSet Format\n   One of the essential elements in the NetFlow\
    \ format is the Template\n   FlowSet.  Templates greatly enhance the flexibility\
    \ of the Flow\n   Record format because they allow the NetFlow Collector to process\n\
    \   Flow Records without necessarily knowing the interpretation of all\n   the\
    \ data in the Flow Record.  The format of the Template FlowSet is\n   as follows:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FlowSet ID = 0          |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Template ID 256          |         Field Count           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type 1           |         Field Length 1        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type 2           |         Field Length 2        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             ...               |              ...              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type N           |         Field Length N        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |      Template ID 257          |         Field Count           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type 1           |         Field Length 1        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type 2           |         Field Length 2        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             ...               |              ...              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Field Type M           |         Field Length M        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             ...               |              ...              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Template ID K          |         Field Count           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             ...               |              ...              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Template FlowSet Field Descriptions\n   FlowSet ID\n         FlowSet ID value\
    \ of 0 is reserved for the Template FlowSet.\n   Length\n         Total length\
    \ of this FlowSet.  Because an individual Template\n         FlowSet MAY contain\
    \ multiple Template Records, the Length value\n         MUST be used to determine\
    \ the position of the next FlowSet\n         record, which could be any type of\
    \ FlowSet.  Length is the sum\n         of the lengths of the FlowSet ID, the\
    \ Length itself, and all\n         Template Records within this FlowSet.\n   Template\
    \ ID\n         Each of the newly generated Template Records is given a unique\n\
    \         Template ID.  This uniqueness is local to the Observation\n        \
    \ Domain that generated the Template ID.  Template IDs 0-255 are\n         reserved\
    \ for Template FlowSets, Options FlowSets, and other\n         reserved FlowSets\
    \ yet to be created.  Template IDs of Data\n         FlowSets are numbered from\
    \ 256 to 65535.\n   Field Count\n         Number of fields in this Template Record.\
    \   Because a Template\n         FlowSet usually contains multiple Template Records,\
    \ this field\n         allows the Collector to determine the end of the current\n\
    \         Template Record and the start of the next.\n   Field Type\n        \
    \ A numeric value that represents the type of the field.  Refer\n         to the\
    \ \"Field Type Definitions\" section.\n   Field Length\n         The length of\
    \ the corresponding Field Type, in bytes.  Refer to\n         the \"Field Type\
    \ Definitions\" section.\n"
- title: 5.3.  Data FlowSet Format
  contents:
  - "5.3.  Data FlowSet Format\n   The format of the Data FlowSet is as follows:\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   FlowSet ID = Template ID    |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 1 - Field Value 1    |   Record 1 - Field Value 2    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 1 - Field Value 3    |             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 2 - Field Value 1    |   Record 2 - Field Value 2    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 2 - Field Value 3    |             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 3 - Field Value 1    |             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              ...              |            Padding            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Data FlowSet Field Descriptions\n   FlowSet ID = Template ID\n         Each\
    \ Data FlowSet is associated with a FlowSet ID.  The FlowSet\n         ID maps\
    \ to a (previously generated) Template ID.  The Collector\n         MUST use the\
    \ FlowSet ID to find the corresponding Template\n         Record and decode the\
    \ Flow Records from the FlowSet.\n   Length\n         The length of this FlowSet.\
    \  Length is the sum of the lengths\n         of the FlowSet ID, Length itself,\
    \ all Flow Records within this\n         FlowSet, and the padding bytes, if any.\n\
    \   Record N - Field Value M\n         The remainder of the Data FlowSet is a\
    \ collection of Flow Data\n         Record(s), each containing a set of field\
    \ values.  The Type and\n         Length of the fields have been previously defined\
    \ in the\n         Template Record referenced by the FlowSet ID or Template ID.\n\
    \   Padding\n         The Exporter SHOULD insert some padding bytes so that the\n\
    \         subsequent FlowSet starts at a 4-byte aligned boundary.  It is\n   \
    \      important to note that the Length field includes the padding\n        \
    \ bytes.  Padding SHOULD be using zeros.\n   Interpretation of the Data FlowSet\
    \ format can be done only if the\n   Template FlowSet corresponding to the Template\
    \ ID is available at the\n   Collector.\n"
- title: 6.  Options
  contents:
  - '6.  Options

    '
- title: 6.1.  Options Template FlowSet Format
  contents:
  - "6.1.  Options Template FlowSet Format\n   The Options Template Record (and its\
    \ corresponding Options Data\n   Record) is used to supply information about the\
    \ NetFlow process\n   configuration or NetFlow process specific data, rather than\
    \ supplying\n   information about IP Flows.\n   For example, the Options Template\
    \ FlowSet can report the sample rate\n   of a specific interface, if sampling\
    \ is supported, along with the\n   sampling method used.\n   The format of the\
    \ Options Template FlowSet follows.\n    0                   1               \
    \    2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FlowSet ID = 1          |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         Template ID           |      Option Scope Length      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |        Option Length          |       Scope 1 Field Type      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Scope 1 Field Length      |               ...             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Scope N Field Length      |      Option 1 Field Type      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Option 1 Field Length     |             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Option M Field Length     |           Padding             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Options Template FlowSet Field Definitions\n   FlowSet ID = 1\n         A\
    \ FlowSet ID value of 1 is reserved for the Options Template.\n   Length\n   \
    \      Total length of this FlowSet.  Each Options Template FlowSet\n        \
    \ MAY contain multiple Options Template Records.  Thus, the\n         Length value\
    \ MUST be used to determine the position of the next\n         FlowSet record,\
    \ which could be either a Template FlowSet or\n         Data FlowSet.\n      \
    \   Length is the sum of the lengths of the FlowSet ID, the Length\n         itself,\
    \ and all Options Template Records within this FlowSet\n         Template ID.\n\
    \   Template ID\n         Template ID of this Options Template.  This value is\
    \ greater\n         than 255.\n   Option Scope Length\n         The length in\
    \ bytes of any Scope field definition contained in\n         the Options Template\
    \ Record (The use of \"Scope\" is described\n         below).\n   Option Length\n\
    \         The length (in bytes) of any options field definitions\n         contained\
    \ in this Options Template Record.\n   Scope 1 Field Type\n         The relevant\
    \ portion of the Exporter/NetFlow process to which\n         the Options Template\
    \ Record refers.\n         Currently defined values are:\n            1 System\n\
    \            2 Interface\n            3 Line Card\n            4 Cache\n     \
    \       5 Template\n         For example, the NetFlow process can be implemented\
    \ on a per-\n         interface basis, so if the Options Template Record were\n\
    \         reporting on how the NetFlow process is configured, the Scope\n    \
    \     for the report would be 2 (interface).  The associated\n         interface\
    \ ID would then be carried in the associated Options\n         Data FlowSet. \
    \ The Scope can be limited further by listing\n         multiple scopes that all\
    \ must match at the same time.  Note\n         that the Scope fields always precede\
    \ the Option fields.\n   Scope 1 Field Length\n         The length (in bytes)\
    \ of the Scope field, as it would appear in\n         an Options Data Record.\n\
    \   Option 1 Field Type\n         A numeric value that represents the type of\
    \ field that would\n         appear in the Options Template Record.  Refer to\
    \ the Field Type\n         Definitions section.\n   Option 1 Field Length\n  \
    \       The length (in bytes) of the Option field.\n   Padding\n         The Exporter\
    \ SHOULD insert some padding bytes so that the\n         subsequent FlowSet starts\
    \ at a 4-byte aligned boundary.  It is\n         important to note that the Length\
    \ field includes the padding\n         bytes.  Padding SHOULD be using zeros.\n"
- title: 6.2.  Options Data Record Format
  contents:
  - "6.2.  Options Data Record Format\n   The Options Data Records are sent in Data\
    \ FlowSets, on a regular\n   basis, but not with every Flow Data Record.  How\
    \ frequently these\n   Options Data Records are exported is configurable.  See\
    \ the\n   \"Templates Management\" section for more details.\n   The format of\
    \ the Data FlowSet containing Options Data Records\n   follows.\n    0       \
    \            1                   2                   3\n    0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    FlowSet ID = Template ID   |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 1 - Scope 1 Value    |Record 1 - Option Field 1 Value|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Record 1 - Option Field 2 Value|             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 2 - Scope 1 Value    |Record 2 - Option Field 1 Value|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Record 2 - Option Field 2 Value|             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Record 3 - Scope 1 Value    |Record 3 - Option Field 1 Value|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |Record 3 - Option Field 2 Value|             ...               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              ...              |            Padding            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Options Data Records of the Data FlowSet Field Descriptions\n   FlowSet ID\
    \ = Template ID\n         A FlowSet ID precedes each group of Options Data Records\
    \ within\n         a Data FlowSet.  The FlowSet ID maps to a previously generated\n\
    \         Template ID corresponding to this Options Template Record.  The\n  \
    \       Collector MUST use the FlowSet ID to map the appropriate type\n      \
    \   and length to any field values that follow.\n   Length\n         The length\
    \ of this FlowSet. Length is the sum of the lengths of\n         the FlowSet ID,\
    \ Length itself, all the Options Data Records\n         within this FlowSet, and\
    \ the padding bytes, if any.\n   Record N - Option Field M Value\n         The\
    \ remainder of the Data FlowSet is a collection of Flow\n         Records, each\
    \ containing a set of scope and field values.  The\n         type and length of\
    \ the fields were previously defined in the\n         Options Template Record\
    \ referenced by the FlowSet ID or\n         Template ID.\n   Padding\n       \
    \  The Exporter SHOULD insert some padding bytes so that the\n         subsequent\
    \ FlowSet starts at a 4-byte aligned boundary.  It is\n         important to note\
    \ that the Length field includes the padding\n         bytes.  Padding SHOULD\
    \ be using zeros.\n   The Data FlowSet format can be interpreted only if the Options\n\
    \   Template FlowSet corresponding to the Template ID is available at the\n  \
    \ Collector.\n"
- title: 7.  Template Management
  contents:
  - "7.  Template Management\n   Flow Data records that correspond to a Template Record\
    \ MAY appear in\n   the same and/or subsequent Export Packets.  The Template Record\
    \ is\n   not necessarily carried in every Export Packet.  As such, the NetFlow\n\
    \   Collector MUST store the Template Record to interpret the\n   corresponding\
    \ Flow Data Records that are received in subsequent data\n   packets.\n   A NetFlow\
    \ Collector that receives Export Packets from several\n   Observation Domains\
    \ from the same Exporter MUST be aware that the\n   uniqueness of the Template\
    \ ID is not guaranteed across Observation\n   Domains.\n   The Template IDs must\
    \ remain constant for the life of the NetFlow\n   process on the Exporter.  If\
    \ the Exporter or the NetFlow process\n   restarts for any reason, all information\
    \ about Templates will be lost\n   and new Template IDs will be created.  Template\
    \ IDs are thus not\n   guaranteed to be consistent across an Exporter or NetFlow\
    \ process\n   restart.\n   A newly created Template record is assigned an unused\
    \ Template ID\n   from the Exporter.  If the template configuration is changed,\
    \ the\n   current Template ID is abandoned and SHOULD NOT be reused until the\n\
    \   NetFlow process or Exporter restarts.  If a Collector should receive\n   a\
    \ new definition for an already existing Template ID, it MUST discard\n   the\
    \ previous template definition and use the new one.\n   If a configured Template\
    \ Record on the Exporter is deleted, and re-\n   configured with exactly the same\
    \ parameters, the same Template ID\n   COULD be reused.\n   The Exporter sends\
    \ the Template FlowSet and Options Template FlowSet\n   under the following conditions:\n\
    \   1. After a NetFlow process restarts, the Exporter MUST NOT send any\n    \
    \  Data FlowSet without sending the corresponding Template FlowSet\n      and\
    \ the required Options Template FlowSet in a previous packet or\n      including\
    \ it in the same Export Packet.  It MAY transmit the\n      Template FlowSet and\
    \ Options Template FlowSet, without any Data\n      FlowSets, in advance to help\
    \ ensure that the Collector will have\n      the correct Template Record before\
    \ receiving the first Flow or\n      Options Data Record.\n   2. In the event\
    \ of configuration changes, the Exporter SHOULD send\n      the new template definitions\
    \ at an accelerated rate.  In such a\n      case, it MAY transmit the changed\
    \ Template Record(s) and Options\n      Template Record(s), without any data,\
    \ in advance to help ensure\n      that the Collector will have the correct template\
    \ information\n      before receiving the first data.\n   3. On a regular basis,\
    \ the Exporter MUST send all the Template\n      Records and Options Template\
    \ Records to refresh the Collector.\n      Template IDs have a limited lifetime\
    \ at the Collector and MUST be\n      periodically refreshed.  Two approaches\
    \ are taken to make sure\n      that Templates get refreshed at the Collector:\n\
    \            * Every N number of Export Packets.\n            * On a time basis,\
    \ so every N number of minutes.\n      Both options MUST be configurable by the\
    \ user on the Exporter.\n      When one of these expiry conditions is met, the\
    \ Exporter MUST send\n      the Template FlowSet and Options Template.\n   4.\
    \ In the event of a clock configuration change on the Exporter, the\n      Exporter\
    \ SHOULD send the template definitions at an accelerated\n      rate.\n"
- title: 8.  Field Type Definitions
  contents:
  - "8.  Field Type Definitions\n   The following table describes all the field type\
    \ definitions that an\n   Exporter MAY support.  The fields are a selection of\
    \ Packet Header\n   fields, lookup results (for example, the autonomous system\
    \ numbers or\n   the subnet masks), and properties of the packet such as length.\n\
    \   Field Type                Value Length  Description\n                    \
    \               (bytes)\n                                           Incoming counter\
    \ with\n                                           length N x 8 bits for the\n\
    \   IN_BYTES                     1    N     number of bytes associated\n     \
    \                                      with an IP Flow. By default\n         \
    \                                  N is 4\n                                  \
    \         Incoming counter with\n                                           length\
    \ N x 8 bits for the\n   IN_PKTS                      2    N     number of packets\n\
    \                                           associated with an IP Flow.\n    \
    \                                       By default N is 4\n   FLOWS          \
    \              3    N     Number of Flows\n                                  \
    \         that were aggregated;\n                                           by\
    \ default N is 4\n   PROTOCOL                     4    1     IP protocol byte\n\
    \                                           Type of service byte\n   TOS     \
    \                     5    1     setting when entering\n                     \
    \                      the incoming interface\n                              \
    \             TCP flags; cumulative of\n   TCP_FLAGS                    6    1\
    \     all the TCP flags seen in\n                                           this\
    \ Flow\n                                           TCP/UDP source port number\n\
    \   L4_SRC_PORT                  7    2     (for example, FTP, Telnet,\n     \
    \                                      or equivalent)\n   IPV4_SRC_ADDR      \
    \          8    4     IPv4 source address\n                                  \
    \         The number of contiguous\n                                         \
    \  bits in the source subnet\n   SRC_MASK                     9    1     mask\
    \ (i.e., the mask in\n                                           slash notation)\n\
    \                                           Input interface index.\n   INPUT_SNMP\
    \                   10   N     By default N is 2, but\n                      \
    \                     higher values can be used\n                            \
    \               TCP/UDP destination port\n   L4_DST_PORT                  11 \
    \  2     number (for example, FTP,\n                                         \
    \  Telnet, or equivalent)\n   IPV4_DST_ADDR                12   4     IPv4 destination\
    \ address\n                                           The number of contiguous\n\
    \                                           bits in the destination\n   DST_MASK\
    \                     13   1     subnet mask (i.e., the mask\n               \
    \                            in slash notation)\n                            \
    \               Output interface index.\n   OUTPUT_SNMP                  14  \
    \ N     By default N is 2, but\n                                           higher\
    \ values can be used\n   IPV4_NEXT_HOP                15   4     IPv4 address\
    \ of the next-\n                                           hop router\n      \
    \                                     Source BGP autonomous\n   SRC_AS       \
    \                16   N     system number where N could\n                    \
    \                       be 2 or 4. By default N is\n                         \
    \                  2\n                                           Destination BGP\
    \ autonomous\n   DST_AS                       17   N     system number where N\
    \ could\n                                           be 2 or 4. By default N is\n\
    \                                           2\n   BGP_IPV4_NEXT_HOP          \
    \  18   4     Next-hop router's IP\n                                         \
    \  address in the BGP domain\n                                           IP multicast\
    \ outgoing\n                                           packet counter with length\n\
    \   MUL_DST_PKTS                 19   N     N x 8 bits for packets\n         \
    \                                  associated with the IP\n                  \
    \                         Flow. By default N is 4\n                          \
    \                 IP multicast outgoing\n                                    \
    \       Octet (byte) counter with\n                                          \
    \ length N x 8 bits for the\n   MUL_DST_BYTES                20   N     number\
    \ of bytes associated\n                                           with the IP\
    \ Flow. By\n                                           default N is 4\n      \
    \                                     sysUptime in msec at which\n   LAST_SWITCHED\
    \                21   4     the last packet of this\n                        \
    \                   Flow was switched\n                                      \
    \     sysUptime in msec at which\n   FIRST_SWITCHED               22   4     the\
    \ first packet of this\n                                           Flow was switched\n\
    \                                           Outgoing counter with\n          \
    \                                 length N x 8 bits for the\n   OUT_BYTES    \
    \                23   N     number of bytes associated\n                     \
    \                      with an IP Flow. By\n                                 \
    \          default N is 4\n                                           Outgoing\
    \ counter with\n                                           length N x 8 bits for\
    \ the\n   OUT_PKTS                     24   N     number of packets\n        \
    \                                   associated with an IP Flow.\n            \
    \                               By default N is 4\n   IPV6_SRC_ADDR          \
    \      27   16    IPv6 source address\n   IPV6_DST_ADDR                28   16\
    \    IPv6 destination address\n   IPV6_SRC_MASK                29   1     Length\
    \ of the IPv6 source\n                                           mask in contiguous\
    \ bits\n                                           Length of the IPv6\n   IPV6_DST_MASK\
    \                30   1     destination mask in\n                            \
    \               contiguous bits\n   IPV6_FLOW_LABEL              31   3     IPv6\
    \ flow label as per\n                                           RFC 2460 definition\n\
    \                                           Internet Control Message\n   ICMP_TYPE\
    \                    32   2     Protocol (ICMP) packet\n                     \
    \                      type; reported as\n                                   \
    \        ICMP Type * 256 + ICMP code\n   MUL_IGMP_TYPE                33   1 \
    \    Internet Group Management\n                                           Protocol\
    \ (IGMP) packet type\n                                           When using sampled\
    \ NetFlow,\n                                           the rate at which packets\n\
    \   SAMPLING_INTERVAL            34   4     are sampled; for example, a\n    \
    \                                       value of 100 indicates that\n        \
    \                                   one of every hundred\n                   \
    \                        packets is sampled\n                                \
    \           For sampled NetFlow\n                                           platform-wide:\n\
    \   SAMPLING_ALGORITHM           35   1     0x01 deterministic sampling\n    \
    \                                       0x02 random sampling\n               \
    \                            Use in connection with\n                        \
    \                   SAMPLING_INTERVAL\n                                      \
    \     Timeout value (in seconds)\n   FLOW_ACTIVE_TIMEOUT          36   2     for\
    \ active flow entries\n                                           in the NetFlow\
    \ cache\n                                           Timeout value (in seconds)\n\
    \   FLOW_INACTIVE_TIMEOUT        37   2     for inactive Flow entries\n      \
    \                                     in the NetFlow cache\n                 \
    \                          Type of Flow switching\n   ENGINE_TYPE            \
    \      38   1     engine (route processor,\n                                 \
    \          linecard, etc...)\n   ENGINE_ID                    39   1     ID number\
    \ of the Flow\n                                           switching engine\n \
    \                                          Counter with length\n             \
    \                              N x 8 bits for the number\n   TOTAL_BYTES_EXP \
    \             40   N     of bytes exported by the\n                          \
    \                 Observation Domain. By\n                                   \
    \        default N is 4\n                                           Counter with\
    \ length\n                                           N x 8 bits for the number\n\
    \   TOTAL_PKTS_EXP               41   N     of packets exported by the\n     \
    \                                      Observation Domain. By\n              \
    \                             default N is 4\n                               \
    \            Counter with length\n                                           N\
    \ x 8 bits for the number\n   TOTAL_FLOWS_EXP              42   N     of Flows\
    \ exported by the\n                                           Observation Domain.\
    \ By\n                                           default N is 4\n   MPLS_TOP_LABEL_TYPE\
    \          46   1     MPLS Top Label Type:\n                                 \
    \          0x00 UNKNOWN\n                                           0x01 TE-MIDPT\n\
    \                                           0x02 ATOM\n                      \
    \                     0x03 VPN\n                                           0x04\
    \ BGP\n                                           0x05 LDP\n                 \
    \                          Forwarding Equivalent Class\n   MPLS_TOP_LABEL_IP_ADDR\
    \       47   4     corresponding to the MPLS\n                               \
    \            Top Label\n   FLOW_SAMPLER_ID              48   1     Identifier\
    \ shown\n                                           in \"show flow-sampler\"\n\
    \                                           The type of algorithm used\n     \
    \                                      for sampling data:\n   FLOW_SAMPLER_MODE\
    \            49   1     0x02 random sampling\n                               \
    \            Use in connection with\n                                        \
    \   FLOW_SAMPLER_MODE\n                                           Packet interval\
    \ at which to\n   FLOW_SAMPLER_RANDOM_INTERVAL 50   4     sample. Use in connection\n\
    \                                           with FLOW_SAMPLER_MODE\n         \
    \                                  Type of Service byte\n   DST_TOS          \
    \            55   1     setting when exiting\n                               \
    \            outgoing interface\n   SRC_MAC                      56   6     Source\
    \ MAC Address\n   DST_MAC                      57   6     Destination MAC Address\n\
    \                                           Virtual LAN identifier\n   SRC_VLAN\
    \                     58   2     associated with ingress\n                   \
    \                        interface\n                                         \
    \  Virtual LAN identifier\n   DST_VLAN                     59   2     associated\
    \ with egress\n                                           interface\n        \
    \                                   Internet Protocol Version\n              \
    \                             Set to 4 for IPv4, set to 6\n   IP_PROTOCOL_VERSION\
    \          60   1     for IPv6. If not present in\n                          \
    \                 the template, then version\n                               \
    \            4 is assumed\n                                           Flow direction:\n\
    \   DIRECTION                    61   1     0 - ingress flow\n               \
    \                            1 - egress flow\n   IPV6_NEXT_HOP               \
    \ 62   16    IPv6 address of the\n                                           next-hop\
    \ router\n   BGP_IPV6_NEXT_HOP            63   16    Next-hop router in the BGP\n\
    \                                           domain\n                         \
    \                  Bit-encoded field\n   IPV6_OPTION_HEADERS          64   4 \
    \    identifying IPv6 option\n                                           headers\
    \ found in the flow\n   MPLS_LABEL_1                 70   3     MPLS label at\
    \ position 1 in\n                                           the stack\n   MPLS_LABEL_2\
    \                 71   3     MPLS label at position 2 in\n                   \
    \                        the stack\n   MPLS_LABEL_3                 72   3   \
    \  MPLS label at position 3 in\n                                           the\
    \ stack\n   MPLS_LABEL_4                 73   3     MPLS label at position 4 in\n\
    \                                           the stack\n   MPLS_LABEL_5       \
    \          74   3     MPLS label at position 5 in\n                          \
    \                 the stack\n   MPLS_LABEL_6                 75   3     MPLS label\
    \ at position 6 in\n                                           the stack\n   MPLS_LABEL_7\
    \                 76   3     MPLS label at position 7 in\n                   \
    \                        the stack\n   MPLS_LABEL_8                 77   3   \
    \  MPLS label at position 8 in\n                                           the\
    \ stack\n   MPLS_LABEL_9                 78   3     MPLS label at position 9 in\n\
    \                                           the stack\n   MPLS_LABEL_10      \
    \          79   3     MPLS label at position 10\n                            \
    \               in the stack\n   The value field is a numeric identifier for the\
    \ field type. The\n   following value fields are reserved for proprietary field\
    \ types: 25,\n   26, 43 to 45, 51 to 54, and 65 to 69.\n   When extensibility\
    \ is required, the new field types will be added to\n   the list.  The new field\
    \ types have to be updated on the Exporter and\n   Collector but the NetFlow export\
    \ format would remain unchanged.\n   Refer to the latest documentation at http://www.cisco.com\
    \ for the\n   newly updated list.\n   In some cases the size of a field type is\
    \ fixed by definition, for\n   example PROTOCOL, or IPV4_SRC_ADDR.  However in\
    \ other cases they are\n   defined as a variant type.  This improves the memory\
    \ efficiency in\n   the collector and reduces the network bandwidth requirement\
    \ between\n   the Exporter and the Collector.  As an example, in the case IN_BYTES,\n\
    \   on an access router it might be sufficient to use a 32 bit counter (N\n  \
    \ = 4), whilst on a core router a 64 bit counter (N = 8) would be\n   required.\n\
    \   All counters and counter-like objects are unsigned integers of size N\n  \
    \ * 8 bits.\n"
- title: 9.  The Collector Side
  contents:
  - "9.  The Collector Side\n   The Collector receives Template Records from the Exporter,\
    \ normally\n   before receiving Flow Data Records (or Options Data Records). \
    \ The\n   Flow Data Records (or Options Data Records) can then be decoded and\n\
    \   stored locally on the devices.  If the Template Records have not been\n  \
    \ received at the time Flow Data Records (or Options Data Records) are\n   received,\
    \ the Collector SHOULD store the Flow Data Records (or\n   Options Data Records)\
    \ and decode them after the Template Records are\n   received.  A Collector device\
    \ MUST NOT assume that the Data FlowSet\n   and the associated Template FlowSet\
    \ (or Options Template FlowSet) are\n   exported in the same Export Packet.\n\
    \   The Collector MUST NOT assume that one and only one Template FlowSet\n   is\
    \ present in an Export Packet.\n   The life of a template at the Collector is\
    \ limited to a fixed refresh\n   timeout.  Templates not refreshed from the Exporter\
    \ within the\n   timeout are expired at the Collector.  The Collector MUST NOT\
    \ attempt\n   to decode the Flow or Options Data Records with an expired Template.\n\
    \   At any given time the Collector SHOULD maintain the following for all\n  \
    \ the current Template Records and Options Template Records: Exporter,\n   Observation\
    \ Domain, Template ID, Template Definition, Last Received.\n   Note that the Observation\
    \ Domain is identified by the Source ID field\n   from the Export Packet.\n  \
    \ In the event of a clock configuration change on the Exporter, the\n   Collector\
    \ SHOULD discard all Template Records and Options Template\n   Records associated\
    \ with that Exporter, in order for Collector to\n   learn the new set of fields:\
    \ Exporter, Observation Domain, Template\n   ID, Template Definition, Last Received.\n\
    \   Template IDs are unique per Exporter and per Observation Domain.\n   If the\
    \ Collector receives a new Template Record (for example, in the\n   case of an\
    \ Exporter restart) it MUST immediately override the\n   existing Template Record.\n\
    \   Finally, note that the Collector MUST accept padding in the Data\n   FlowSet\
    \ and Options Template FlowSet, which means for the Flow Data\n   Records, the\
    \ Options Data Records and the Template Records. Refer to\n   the terminology\
    \ summary table in Section 2.1.\n"
- title: 10.  Security Considerations
  contents:
  - "10.  Security Considerations\n   The NetFlow version 9 protocol was designed\
    \ with the expectation that\n   the Exporter and Collector would remain within\
    \ a single private\n   network.  However the NetFlow version 9 protocol might\
    \ be used to\n   transport Flow Records over the public Internet which exposes\
    \ the\n   Flow Records to a number of security risks.  For example an attacker\n\
    \   might capture, modify or insert Export Packets.  There is therefore a\n  \
    \ risk that IP Flow information might be captured or forged, or that\n   attacks\
    \ might be directed at the NetFlow Collector.\n   The designers of NetFlow Version\
    \ 9 did not impose any\n   confidentiality, integrity or authentication requirements\
    \ on the\n   protocol because this reduced the efficiency of the implementation\n\
    \   and it was believed at the time that the majority of deployments\n   would\
    \ confine the Flow Records to private networks, with the\n   Collector(s) and\
    \ Exporter(s) in close proximity.\n   The IPFIX protocol (IP Flow Information\
    \ eXport), which has chosen the\n   NetFlow version 9 protocol as the base protocol,\
    \ addresses the\n   security considerations discussed in this section.  See the\
    \ security\n   section of IPFIX requirement draft [RFC3917] for more information.\n"
- title: 10.1.  Disclosure of Flow Information Data
  contents:
  - "10.1.  Disclosure of Flow Information Data\n   Because the NetFlow Version 9\
    \ Export Packets are not encrypted, the\n   observation of Flow Records can give\
    \ an attacker information about\n   the active flows in the network, communication\
    \ endpoints and traffic\n   patterns.  This information can be used both to spy\
    \ on user behavior\n   and to plan and conceal future attacks.\n   The information\
    \ that an attacker could derive from the interception\n   of Flow Records depends\
    \ on the Flow definition.  For example, a Flow\n   Record containing the source\
    \ and destination IP addresses might\n   reveal privacy sensitive information\
    \ regarding the end user's\n   activities, whilst a Flow Record only containing\
    \ the source and\n   destination IP network would be less revealing.\n"
- title: 10.2.  Forgery of Flow Records or Template Records
  contents:
  - "10.2.  Forgery of Flow Records or Template Records\n   If Flow Records are used\
    \ in accounting and/or security applications,\n   there may be a strong incentive\
    \ to forge exported Flow Records (for\n   example to defraud the service provider,\
    \ or to prevent the detection\n   of an attack).  This can be done either by altering\
    \ the Flow Records\n   on the path between the Observer and the Collector, or\
    \ by injecting\n   forged Flow Records that pretend to be originated by the Exporter.\n\
    \   An attacker could forge Templates and/or Options Templates and\n   thereby\
    \ try to confuse the NetFlow Collector, rendering it unable to\n   decode the\
    \ Export Packets.\n"
- title: 10.3.  Attacks on the NetFlow Collector
  contents:
  - "10.3.  Attacks on the NetFlow Collector\n   Denial of service attacks on the\
    \ NetFlow Collector can consume so\n   many resources from the machine that, the\
    \ Collector is unable to\n   capture or decode some NetFlow Export Packets.  Such\
    \ hazards are not\n   explicitly addressed by the NetFlow Version 9 protocol,\
    \ although the\n   normal methods used to protect a server from a DoS attack will\n\
    \   mitigate the problem.\n"
- title: 11.  Examples
  contents:
  - "11.  Examples\n   Let us consider the example of an Export Packet composed of\
    \ a\n   Template FlowSet, a Data FlowSet (which contains three Flow Data\n   Records),\
    \ an Options Template FlowSet, and a Data FlowSet (which\n   contains two Options\
    \ Data Records).\n   Export Packet:\n   +--------+---------------------------------------------.\
    \ . .\n   |        | +--------------+ +-----------------------+\n   | Packet |\
    \ | Template     | | Data                  |\n   | Header | | FlowSet      | |\
    \ FlowSet               |   . . .\n   |        | | (1 Template) | | (3 Flow Data\
    \ Records) |\n   |        | +--------------+ +-----------------------+\n   +--------+---------------------------------------------.\
    \ . .\n       . . .+-------------------------------------------------+\n     \
    \       +------------------+ +--------------------------+ |\n            | Options\
    \          | | Data                     | |\n       . . .| Template FlowSet |\
    \ | FlowSet                  | |\n            | (1 Template)     | | (2 Options\
    \ Data Records) | |\n            +------------------+ +--------------------------+\
    \ |\n       . . .--------------------------------------------------+\n"
- title: 11.1.  Packet Header Example
  contents:
  - "11.1.  Packet Header Example\n   The Packet Header is composed of:\n    0   \
    \                1                   2                   3\n    0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Version = 9               |          Count = 7            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           sysUpTime                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           UNIX Secs                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                       Sequence Number                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           Source ID                           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 11.2.  Template FlowSet Example
  contents:
  - "11.2.  Template FlowSet Example\n   We want to report the following Field Types:\n\
    \   -  The source IP address (IPv4), so the length is 4\n   -  The destination\
    \ IP address (IPv4), so the length is 4\n   -  The next-hop IP address (IPv4),\
    \ so the length is 4\n   -  The number of bytes of the Flow\n   -  The number\
    \ of packets of the Flow\n   Therefore, the Template FlowSet is composed of the\
    \ following:\n    0                   1                   2                  \
    \ 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FlowSet ID = 0          |      Length = 28 bytes        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Template ID 256         |       Field Count = 5         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     IP_SRC_ADDR = 8           |       Field Length = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     IP_DST_ADDR = 12          |       Field Length = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     IP_NEXT_HOP = 15          |       Field Length = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       IN_PKTS = 2             |       Field Length = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       IN_BYTES = 1            |       Field Length = 4        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 11.3.  Data FlowSet Example
  contents:
  - "11.3.  Data FlowSet Example\n   In this example, we report the following three\
    \ Flow Records:\n   Src IP addr. | Dst IP addr. | Next Hop addr. | Packet | Bytes\n\
    \                |              |                | Number | Number\n   ---------------------------------------------------------------\n\
    \   198.168.1.12 | 10.5.12.254  | 192.168.1.1    | 5009   | 5344385\n   192.168.1.27\
    \ | 10.5.12.23   | 192.168.1.1    | 748    | 388934\n   192.168.1.56 | 10.5.12.65\
    \   | 192.168.1.1    | 5      | 6534\n    0                   1              \
    \     2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FlowSet ID = 256        |          Length = 64          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          198.168.1.12                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          10.5.12.254                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          192.168.1.1                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             5009                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                            5344385                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          192.168.1.27                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           10.5.12.23                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          192.168.1.1                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              748                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                             388934                            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                          192.168.1.56                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           10.5.12.65                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                           192.168.1.1                         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                               5                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                              6534                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Note that padding was not necessary in this example.\n"
- title: 11.4.  Options Template FlowSet Example
  contents:
  - "11.4.  Options Template FlowSet Example\n   Per line card (the Exporter is composed\
    \ of two line cards), we want\n   to report the following Field Types:\n   - Total\
    \ number of Export Packets\n   - Total number of exported Flows\n   The format\
    \ of the Options Template FlowSet is as follows:\n    0                   1  \
    \                 2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6\
    \ 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       FlowSet ID = 1          |          Length = 24          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Template ID 257         |    Option Scope Length = 4    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Option Length = 8       |  Scope 1 Field Type = 3       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |   Scope 1 Field Length = 2    |   TOTAL_EXP_PKTS_SENT = 41    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 2        |     TOTAL_FLOWS_EXP = 42      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |       Field Length = 2        |           Padding             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 11.5.  Data FlowSet with Options Data Records Example
  contents:
  - "11.5.  Data FlowSet with Options Data Records Example\n   In this example, we\
    \ report the following two records:\n   Line Card ID | Export Packet| Export Flow\n\
    \   ------------------------------------------\n   Line Card 1  | 345        \
    \  | 10201\n   Line Card 2  | 690          | 20402\n    0                   1\
    \                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |    FlowSet ID = 257           |         Length = 16           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |             1                 |             345               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           10201               |              2                |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |            690                |            20402              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,\
    \ March 1997.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC768]    Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n               August 1980.\n   [RFC793]    Postel, J., \"\
    Transmission Control Protocol\", STD 7, RFC\n               793, September 1981.\n\
    \   [RFC2960]   Stewart, R., Xie, Q., Morneault, K., Sharp, C.,\n            \
    \   Schwarzbauer, H., Taylor, T., Rytina, I., Kalla, M.,\n               Zhang,\
    \ L., and V. Paxson, \"Stream Control Transmission\n               Protocol\"\
    , RFC 2960, October 2000.\n   [RFC3917]   Quittek, J., Zseby, T., Claise, B.,\
    \ and S. Zander,\n               \"Requirements for IP Flow Information Export\
    \ (IPFIX)\",\n               RFC 3917, October 2004.\n"
- title: 13.  Authors
  contents:
  - "13.  Authors\n   This document was jointly written by Vamsidhar Valluri, Martin\n\
    \   Djernaes, Ganesh Sadasivan, and Benoit Claise.\n"
- title: 14.  Acknowledgments
  contents:
  - "14.  Acknowledgments\n   I would like to thank Pritam Shah, Paul Kohler, Dmitri\
    \ Bouianovski,\n   and Stewart Bryant for their valuable technical feedback.\n"
- title: 15.  Authors' Addresses
  contents:
  - "15.  Authors' Addresses\n   Benoit Claise (Editor)\n   Cisco Systems\n   De Kleetlaan\
    \ 6a b1\n   1831 Diegem\n   Belgium\n   Phone:  +32 2 704 5622\n   EMail:  bclaise@cisco.com\n\
    \   Ganesh Sadasivan\n   Cisco Systems, Inc.\n   3750 Cisco Way\n   San Jose,\
    \ CA 95134\n   USA\n   Phone:  +1 408 527-0251\n   EMail:  gsadasiv@cisco.com\n\
    \   Vamsi Valluri\n   Cisco Systems, Inc.\n   510 McCarthy Blvd.\n   San Jose,\
    \ CA 95035\n   USA\n   Phone:  +1 408 525-1835\n   EMail:  vvalluri@cisco.com\n\
    \   Martin Djernaes\n   Cisco Systems, Inc.\n   510 McCarthy Blvd.\n   San Jose,\
    \ CA 95035\n   USA\n   Phone:  +1 408 853-1676\n   EMail:  djernaes@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and at www.rfc-editor.org, and except as set\n   forth therein, the\
    \ authors retain all their rights.\n   This document and the information contained\
    \ herein are provided on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION\
    \ HE/SHE REPRESENTS\n   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND\
    \ THE INTERNET\n   ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR\
    \ IMPLIED,\n   INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE\n\
    \   INFORMATION HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES\
    \ OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ ISOC's procedures with respect to rights in ISOC Documents can\n   be found\
    \ in BCP 78 and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat\
    \ and any\n   assurances of licenses to be made available, or the result of an\n\
    \   attempt made to obtain a general license or permission for the use of\n  \
    \ such proprietary rights by implementers or users of this\n   specification can\
    \ be obtained from the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n\
    \   The IETF invites any interested party to bring to its attention any\n   copyrights,\
    \ patents or patent applications, or other proprietary\n   rights that may cover\
    \ technology that may be required to implement\n   this standard.  Please address\
    \ the information to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
