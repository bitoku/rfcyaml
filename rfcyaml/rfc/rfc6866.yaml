- title: __initial_text__
  contents:
  - "              Problem Statement for Renumbering IPv6 Hosts\n              with\
    \ Static Addresses in Enterprise Networks\n"
- title: Abstract
  contents:
  - "Abstract\n   This document analyses the problems of updating the IPv6 addresses\
    \ of\n   hosts in enterprise networks that, for operational reasons, require\n\
    \   static addresses.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6866.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2013 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Analysis ........................................................3\n  \
    \    2.1. Static Addresses Imply Static Prefixes .....................3\n    \
    \  2.2. Other Hosts Need Literal Address ...........................4\n      2.3.\
    \ Static Server Addresses ....................................5\n      2.4. Static\
    \ Virtual Machine Addresses ...........................6\n      2.5. Asset Management\
    \ and Security Tracing ......................6\n      2.6. Primitive Software\
    \ Licensing ...............................7\n      2.7. Network Elements ...........................................7\n\
    \      2.8. Access Control Lists .......................................7\n  \
    \    2.9. Management Aspects .........................................8\n   3.\
    \ Summary of Problem Statement ....................................8\n   4. Security\
    \ Considerations .........................................9\n   5. Acknowledgements\
    \ ...............................................10\n   6. Informative References\
    \ .........................................10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   A problem that is frequently mentioned in discussions of\
    \ renumbering\n   enterprise networks [RFC5887] [RFC6879] [GAP-ANALYSIS] is that\
    \ of\n   statically assigned addresses.  The scope of the present document is\n\
    \   to analyse the problems caused for enterprise networks during\n   renumbering\
    \ by static addresses and to identify related gaps in\n   existing technology.\
    \  Some aspects also apply to small office and\n   home networks, but these are\
    \ not the intended scope of the document.\n   A static address can be defined\
    \ as an IP address that is intended by\n   the network manager to remain constant\
    \ over a long period of time,\n   possibly many years, regardless of system restarts\
    \ or any other\n   unpredictable events.  Static addressing often implies manual\
    \ address\n   assignment, including manual preparation of configuration scripts.\n\
    \   An implication of hosts having static addresses is that subnets must\n   have\
    \ static prefixes, which also requires analysis.\n   In a sense, the issue of\
    \ static addresses is a result of history.  As\n   discussed in Section 3.2 of\
    \ [RFC6250], various properties of IP\n   addresses that have long been assumed\
    \ by programmers and operators\n   are no longer true today, although they were\
    \ true when almost all\n   addresses were manually assigned.  In some cases, the\
    \ resulting\n   operational difficulties are avoided by static addressing.\n \
    \  Although static addressing is, in general, problematic for\n   renumbering,\
    \ hosts inside an enterprise may have static addresses for\n   a number of operational\
    \ reasons:\n   o  For some reason, other hosts need to be configured with a literal\n\
    \      numeric address for the host in question, so its address must be\n    \
    \  static.\n   o  Even if a site has local DNS support and this is normally used\
    \ to\n      locate servers, some operators wish their servers to have static\n\
    \      addresses so that issues of address lifetime and DNS Time to Live\n   \
    \   (TTL) cannot affect connectivity.\n   o  Some approaches to virtual server\
    \ farms require static addressing.\n   o  On some sites, the network operations\
    \ staff require hosts to have\n      static addresses for asset management purposes\
    \ and for address-\n      based backtracking of security incidents.\n   o  Certain\
    \ software licensing mechanisms are based on IP addresses.\n   o  Network elements,\
    \ such as routers, are usually assigned static\n      addresses, which are also\
    \ configured into network monitoring and\n      management systems.\n   o  Access\
    \ Control Lists and other security mechanisms are often\n      configured using\
    \ IP addresses.\n   Static addressing is not the same thing as manual addressing.\
    \  Static\n   addresses may be configured automatically, for example, by stateful\n\
    \   DHCPv6.  In that case, the database from which the static address is\n   derived\
    \ may itself have been created automatically in some fashion,\n   or configured\
    \ manually.  If a host's address is configured manually\n   by the host's administrator,\
    \ it is by definition static.\n   This document analyses these issues in more\
    \ detail and presents a\n   problem statement.  Where obvious alternatives to\
    \ static addresses\n   exist, they are mentioned.\n"
- title: 2.  Analysis
  contents:
  - '2.  Analysis

    '
- title: 2.1.  Static Addresses Imply Static Prefixes
  contents:
  - "2.1.  Static Addresses Imply Static Prefixes\n   Host addresses can only be static\
    \ if subnet prefixes are also static.\n   Static prefixes are such a long-established\
    \ practice in enterprise\n   networks that it is hard to discern the reason for\
    \ them.  Originally,\n   before DHCP became available, there was simply no alternative.\
    \  Thus\n   it became accepted practice to assign subnet prefixes manually and\n\
    \   build them into static router configurations.  Today, the static\n   nature\
    \ of subnet prefixes has become a diagnostic tool in itself, at\n   least in the\
    \ case of IPv4 where prefixes can easily be memorised.  If\n   several users sharing\
    \ a subnet prefix report problems, the fault can\n   readily be localised.\n \
    \  This model is being challenged for the case of unmanaged home IPv6\n   networks,\
    \ in which it is possible to assign subnet prefixes\n   automatically, at least\
    \ in a cold start scenario [PREFIX].  For an\n   enterprise network, the question\
    \ arises whether automatic subnet\n   prefix assignment can be made using the\
    \ \"without a flag day\" approach\n   to renumbering.  [RFC4192] specifies that\
    \ \"the new prefix is added to\n   the network infrastructure in parallel with\
    \ (and without interfering\n   with) the old prefix\".  Any method for automatic\
    \ prefix assignment\n   needs to support this.\n"
- title: 2.2.  Other Hosts Need Literal Address
  contents:
  - "2.2.  Other Hosts Need Literal Address\n   This issue commonly arises in small\
    \ networks without local DNS\n   support, for devices such as printers, that all\
    \ other hosts need to\n   reach.  In this case, not only does the host in question\
    \ have a\n   static address but that address is also configured in the other\n\
    \   hosts.  It is a long-established practice in small IPv4 enterprise\n   networks\
    \ that printers, in particular, are manually assigned a fixed\n   address (typically,\
    \ an [RFC1918] address) and that users are told to\n   manually configure printer\
    \ access using that fixed address.  For a\n   small network, the work involved\
    \ in doing this is much less than the\n   work involved in doing it \"properly\"\
    \ by setting up DNS service,\n   whether local or hosted by an ISP, to give the\
    \ printer a name.  Also,\n   although the Service Location Protocol (SLP) [RFC2608]\
    \ is widely\n   available for tasks such as printer discovery, it is not widely\
    \ used\n   in enterprise networks.  In consequence, if the printer is renumbered\n\
    \   for any reason, the manual configuration of all users' hosts must be\n   updated\
    \ in many enterprises.\n   In the case of IPv6, exactly the same situation would\
    \ be created by\n   numbering the printer statically under the site's Unique Local\n\
    \   Address (ULA) prefix [RFC4193].  Although this address would not\n   change\
    \ if the site's globally routable prefix is changed, internal\n   renumbering\
    \ for any other reason would be troublesome.  Additionally,\n   the disadvantage\
    \ compared to IPv4 is that an IPv6 address is harder\n   to communicate reliably,\
    \ compared to something as simple as\n   \"10.1.1.10\".  The process will be significantly\
    \ more error-prone for\n   IPv6.\n   If such a host is numbered out of a globally\
    \ routable prefix that is\n   potentially subject to renumbering, then a renumbering\
    \ event will\n   require a configuration change in all hosts using the device\
    \ in\n   question, and such configuration data are by no means stored in the\n\
    \   network layer.\n   At least two simple alternatives exist to avoid static\
    \ numbering of\n   simple devices, such as printers, by giving them local names.\
    \  One is\n   the use of Multicast DNS (mDNS) [RFC6762] in combination with DNS\n\
    \   Service Discovery [RFC6763].  The other is the Service Location\n   Protocol\
    \ [RFC2608].  Both of these solutions are widely implemented,\n   but seemingly\
    \ not widely deployed in enterprise networks.\n"
- title: 2.3.  Static Server Addresses
  contents:
  - "2.3.  Static Server Addresses\n   On larger sites, it is safe to assume that\
    \ servers of all kinds,\n   including printers, are identified in user configurations\
    \ and\n   applications by DNS names.  However, it is very widespread\n   operational\
    \ practice that servers have static IP addresses.  If they\n   did not, whenever\
    \ an address assigned by stateless address\n   autoconfiguration [RFC4862] or\
    \ DHCPv6 [RFC3315] expired, and if the\n   address actually changed for some extraneous\
    \ reason, sessions in\n   progress might fail (depending on whether the address\
    \ deprecation\n   period was long enough).\n   DNS aspects of renumbering are\
    \ discussed in more detail in [RFC6879].\n   Here, we note that one reason for\
    \ widespread use of static server\n   addresses is the lack of deployment of Secure\
    \ Dynamic DNS update\n   [RFC3007], or some other method of prompt DNS updates,\
    \ in enterprise\n   networks.  A separate issue is that even with such updates\
    \ in place,\n   remote users of a server would attempt to use the wrong address\
    \ until\n   the DNS TTL expired, as discussed in [RFC4192].\n   Server addresses\
    \ can be managed centrally, even if they are static,\n   by using DHCPv6 in stateful\
    \ mode to ensure that the same address is\n   always assigned to a given server.\
    \  Consistency with DNS can be\n   ensured by generating both DHCPv6 data and\
    \ DNS data from a common\n   configuration database using a suitable configuration\
    \ tool.  This\n   does normally carry the implication that the database also contains\n\
    \   the hardware (Media Access Control (MAC)) addresses of the relevant\n   LAN\
    \ interfaces on the servers, so that the correct IPv6 address can\n   be delivered\
    \ whenever a server requests an address.  Not every\n   operator wishes to maintain\
    \ such a costly database, however, and some\n   sites are therefore likely today\
    \ to fall back on manual configuration\n   of server addresses as a result.\n\
    \   In the event of renumbering the prefix covering such servers, the\n   situation\
    \ should be manageable if there is a common configuration\n   database; the \"\
    without a flag day\" procedure [RFC4192] could be\n   followed.  However, if there\
    \ is no such database, a manual procedure\n   would have to be adopted.\n"
- title: 2.4.  Static Virtual Machine Addresses
  contents:
  - "2.4.  Static Virtual Machine Addresses\n   According to [PROBLEM], the placement\
    \ and live migration of Virtual\n   Machines (VMs) in a physical network requires\
    \ that their IP addresses\n   be fixed and static.  Otherwise, when a VM is migrated\
    \ to a different\n   physical server, its IP address would change and transport\
    \ sessions\n   in progress would be lost.  In effect, this is a special case of\
    \ the\n   previous one.\n   If VMs are numbered out of a prefix that is subject\
    \ to renumbering,\n   there is a direct conflict with application session continuity,\n\
    \   unless a procedure similar to [RFC4192] is followed.\n"
- title: 2.5.  Asset Management and Security Tracing
  contents:
  - "2.5.  Asset Management and Security Tracing\n   There are some large (campus-sized)\
    \ sites that not only capture the\n   MAC addresses of servers in a configuration\
    \ system, but also do so\n   for desktop client machines with wired connections\
    \ that are then\n   given static IP addresses.  Such hosts are not normally servers,\
    \ so\n   the two preceding cases do not apply.  One motivation for this\n   approach\
    \ is straightforward asset management (Who has which\n   computer?, Connected\
    \ to which cable?).  Another, more compelling,\n   reason is security incident\
    \ handling.  If, as occurs with reasonable\n   frequency on any large network,\
    \ a particular host is found to be\n   generating some form of unwanted traffic,\
    \ it is urgent to be able to\n   track back from its IP address to its physical\
    \ location so that an\n   appropriate intervention can be made.  A static binding\
    \ between the\n   MAC address and the IPv6 address might be preferred for this\
    \ purpose.\n   Such users will not, in most circumstances, be significantly\n\
    \   inconvenienced by prefix renumbering, as long as it follows the\n   [RFC4192]\
    \ procedure.  The address deprecation mechanism would allow\n   for clean termination\
    \ of current sessions, including those in which\n   their machine was actually\
    \ operating as a server, e.g., for a peer-\n   to-peer application.  The only\
    \ users who would be seriously affected\n   would be those running extremely long\
    \ transport sessions that might\n   outlive the address deprecation period.\n\
    \   Note that such large campus sites generally allocate addresses\n   dynamically\
    \ to wireless hosts, since (in an IPv4 world) addresses are\n   scarce and allocating\
    \ static addresses to intermittent users is not\n   acceptable.  Also, a wireless\
    \ user may appear on different subnets at\n   different times, so it cannot be\
    \ given a single static address.\n   These users will, in most circumstances,\
    \ only be slightly\n   inconvenienced, if at all, by prefix renumbering.\n"
- title: 2.6.  Primitive Software Licensing
  contents:
  - "2.6.  Primitive Software Licensing\n   Although it has many disadvantages and\
    \ cannot be recommended as a\n   solution, software licensing based on IP addresses\
    \ or prefixes is\n   still quite widely used in various forms.  It is to be expected\
    \ that\n   this practice will continue for IPv6.  If so, there is no alternative\n\
    \   to informing the licensing party of the new address(es) by whatever\n   administrative\
    \ process is required.  In an RFC 4192 renumbering\n   procedure, the licenses\
    \ for the old and new addresses or prefixes\n   would have to overlap.\n   If\
    \ acceptable to the licensing mechanism, using addresses under an\n   enterprise's\
    \ ULA prefix for software licensing would avoid this\n   problem.\n"
- title: 2.7.  Network Elements
  contents:
  - "2.7.  Network Elements\n   Each interface of a router needs an IP address, and\
    \ so do other\n   network elements, such as firewalls, proxies, and load balancers.\n\
    \   Since these are critical infrastructures, they must be monitored and\n   in\
    \ some cases controlled by a network management system.  A\n   conventional approach\
    \ to this is to assign the necessary IP addresses\n   statically, and to configure\
    \ those addresses in the monitoring and\n   management systems.  It is common\
    \ practice that some such addresses\n   will have no corresponding DNS entry.\
    \  If these addresses need to be\n   changed, there will be considerable ramifications.\
    \  A restart of the\n   network element might be needed, interrupting all user\
    \ sessions in\n   progress.  Simultaneously, the monitoring and management system\n\
    \   configurations must be updated, and in the case of a default router,\n   its\
    \ clients must be informed.  To avoid such disruption, network\n   elements must\
    \ be renumbered according to an [RFC4192] procedure, like\n   any other host.\n\
    \   There is a school of thought that to minimise renumbering problems\n   for\
    \ network elements and to keep the simplicity of static addressing\n   for them,\
    \ network elements should all have static ULA addresses for\n   management and\
    \ monitoring purposes, regardless of what other global\n   addresses they may\
    \ have.\n"
- title: 2.8.  Access Control Lists
  contents:
  - "2.8.  Access Control Lists\n   Access Control Lists (ACLs) and other security\
    \ mechanisms are often\n   configured using static IP addresses.  This may occur\
    \ in network\n   elements or hosts.  If they are not updated promptly during a\n\
    \   renumbering event, the result may be the opening of security\n   loopholes,\
    \ the blocking of legitimate traffic, or both.  Such\n   security loopholes may\
    \ never be detected until they are successfully\n   exploited.\n"
- title: 2.9.  Management Aspects
  contents:
  - "2.9.  Management Aspects\n   As noted in the Introduction, static addressing\
    \ and manual address\n   configuration are not the same thing.  In terms of managing\
    \ a\n   renumbering event, static addressing derived automatically from a\n  \
    \ central database, e.g., by stateful DHCPv6, is clearly better than\n   manual\
    \ configuration by an administrator.  This remains true even if\n   the database\
    \ itself requires manual changes, since, otherwise, an\n   administrator would\
    \ have to log in to every host concerned, a time-\n   consuming and error-prone\
    \ task.  In cases where static addresses\n   cannot be avoided, they could be\
    \ assigned automatically from a\n   central database using a suitable protocol,\
    \ such as stateful DHCPv6.\n   Clearly, the database needs to be supported by\
    \ a suitable\n   configuration tool, to minimise manual updates and to eliminate\n\
    \   manual configuration of individual hosts.\n"
- title: 3.  Summary of Problem Statement
  contents:
  - "3.  Summary of Problem Statement\n   If subnet prefixes are statically assigned,\
    \ various network elements\n   and the network management system must be updated\
    \ when they are\n   renumbered.  To avoid loss of existing user sessions, the\
    \ old\n   prefixes need to be removed only after a period of overlap.\n   If a\
    \ printer or similar local server is statically addressed, and has\n   no DNS\
    \ or mDNS name and no discovery protocol, renumbering will\n   require configuration\
    \ changes in all hosts using that server.  Most\n   likely, these changes will\
    \ be manual; therefore, this type of\n   configuration should be avoided except\
    \ for very small networks.  Even\n   if the server is under a ULA prefix, any\
    \ subnet rearrangement that\n   causes it to be renumbered will have the same\
    \ effect.\n   If a server with a DNS name is statically addressed via a common\n\
    \   configuration database that supports both DHCPv6 and DNS, then it can\n  \
    \ be renumbered \"without a flag day\" by following RFC 4192.  However,\n   if\
    \ there is no common configuration database, then present technology\n   requires\
    \ manual intervention.  Similar considerations apply to\n   virtual servers with\
    \ static addresses.\n   If client computers, such as desktops, are statically\
    \ addressed via a\n   common configuration database and stateful DHCPv6, they\
    \ can also be\n   renumbered \"without a flag day.\"  But other statically addressed\n\
    \   clients will need manual intervention, so DHCPv6 should be used if\n   possible.\n\
    \   If address-based software licensing is unavoidable, requiring static\n   addresses,\
    \ and ULAs cannot be used for this case, an administrative\n   procedure during\
    \ renumbering seems unavoidable.\n   If network elements have static addresses,\
    \ the network management\n   system and affected client hosts must be informed\
    \ when they are\n   renumbered.  Even if a network element is under a ULA prefix,\
    \ any\n   subnet rearrangement that causes it to be renumbered will have the\n\
    \   same effect.\n   ACLs configured with static addresses must be updated during\n\
    \   renumbering.\n   It appears that the majority of the above problems can be\
    \ largely\n   mitigated if the following measures are taken:\n   1.  The site\
    \ uses a general configuration management database and an\n       associated tool\
    \ that manage all prefixes and all DHCPv6, DNS, and\n       router and security\
    \ configurations in a consistent and integrated\n       way.  Even if static addresses\
    \ are used, they are always\n       configured with this tool, and never manually.\
    \  Specification of\n       such a tool is out of scope for the present document.\n\
    \   2.  All printers and other local servers are always accessed via a\n     \
    \  DNS or mDNS name, or via a discovery protocol.  User computers\n       are\
    \ configured only with names for such servers and never with\n       their addresses.\n\
    \   3.  Internal traffic uses a ULA prefix, such that disturbance to such\n  \
    \     traffic is avoided if the externally used prefix changes.\n   4.  If prefix\
    \ renumbering is required, the RFC 4192 procedure is\n       followed.\n   Remaining\
    \ open questions are:\n   1.  Is minor residual loss of extremely long-living\
    \ transport\n       sessions during renumbering operationally acceptable?\n  \
    \ 2.  Can automatic network element renumbering be performed without\n       interrupting\
    \ any user sessions?\n   3.  Do any software licensing systems require manual\
    \ intervention?\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document does not define a protocol, so\
    \ it does not introduce\n   any new security exposures.  However, security configurations,\
    \ such\n   as ACLs, are affected by the renumbering of static addresses.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Valuable comments and contributions were made by Ran\
    \ Atkinson, Ralph\n   Droms, Adrian Farrel, Wes George, Brian Haberman, Bing Liu,\
    \ Pete\n   Resnick, and other participants in the 6renum WG.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [GAP-ANALYSIS]  Liu, B., Jiang, S., Carpenter,\
    \ B., Venaas, S., and W.\n                   George, \"IPv6 Site Renumbering Gap\
    \ Analysis\", Work\n                   in Progress, December 2012.\n   [PREFIX]\
    \        Baker, F. and R. Droms, \"IPv6 Prefix Assignment in\n               \
    \    Small Networks\", Work in Progress, March 2012.\n   [PROBLEM]       Narten,\
    \ T., Ed., Gray, E., Ed., Black, D., Dutt, D.,\n                   Fang, L., Kreeger,\
    \ L., Napierala, M., and M.\n                   Sridharan, \"Problem Statement:\
    \ Overlays for Network\n                   Virtualization\", Work in Progress,\
    \ October 2012.\n   [RFC1918]       Rekhter, Y., Moskowitz, R., Karrenberg, D.,\
    \ Groot,\n                   G., and E. Lear, \"Address Allocation for Private\n\
    \                   Internets\", BCP 5, RFC 1918, February 1996.\n   [RFC2608]\
    \       Guttman, E., Perkins, C., Veizades, J., and M. Day,\n                \
    \   \"Service Location Protocol, Version 2\", RFC 2608,\n                   June\
    \ 1999.\n   [RFC3007]       Wellington, B., \"Secure Domain Name System (DNS)\n\
    \                   Dynamic Update\", RFC 3007, November 2000.\n   [RFC3315] \
    \      Droms, R., Bound, J., Volz, B., Lemon, T., Perkins,\n                 \
    \  C., and M. Carney, \"Dynamic Host Configuration\n                   Protocol\
    \ for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC4192]       Baker, F., Lear,\
    \ E., and R. Droms, \"Procedures for\n                   Renumbering an IPv6 Network\
    \ without a Flag Day\",\n                   RFC 4192, September 2005.\n   [RFC4193]\
    \       Hinden, R. and B. Haberman, \"Unique Local IPv6\n                   Unicast\
    \ Addresses\", RFC 4193, October 2005.\n   [RFC4862]       Thomson, S., Narten,\
    \ T., and T. Jinmei, \"IPv6\n                   Stateless Address Autoconfiguration\"\
    , RFC 4862,\n                   September 2007.\n   [RFC5887]       Carpenter,\
    \ B., Atkinson, R., and H. Flinck,\n                   \"Renumbering Still Needs\
    \ Work\", RFC 5887, May 2010.\n   [RFC6250]       Thaler, D., \"Evolution of the\
    \ IP Model\", RFC 6250,\n                   May 2011.\n   [RFC6762]       Cheshire,\
    \ S. and M. Krochmal, \"Multicast DNS\",\n                   RFC 6762, February\
    \ 2013.\n   [RFC6763]       Cheshire, S. and M. Krochmal, \"DNS-Based Service\n\
    \                   Discovery\", RFC 6763, February 2013.\n   [RFC6879]      \
    \ Jiang, S., Liu, B., and B. Carpenter, \"IPv6\n                   Enterprise\
    \ Network Renumbering Scenarios,\n                   Considerations, and Methods\"\
    , RFC 6879,\n                   February 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Brian Carpenter\n   Department of Computer Science\n \
    \  University of Auckland\n   PB 92019\n   Auckland,   1142\n   New Zealand\n\
    \   EMail: brian.e.carpenter@gmail.com\n   Sheng Jiang\n   Huawei Technologies\
    \ Co., Ltd.\n   Q14, Huawei Campus\n   No.156 Beiqing Road\n   Hai-Dian District,\
    \ Beijing  100095\n   P.R. China\n   EMail: jiangsheng@huawei.com\n"
