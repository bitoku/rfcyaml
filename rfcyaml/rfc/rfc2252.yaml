- title: __initial_text__
  contents:
  - "              Lightweight Directory Access Protocol (v3):\n                 \
    \     Attribute Syntax Definitions\n"
- title: 1. Status of this Memo
  contents:
  - "1. Status of this Memo\n   This document specifies an Internet standards track\
    \ protocol for the\n   Internet community, and requests discussion and suggestions\
    \ for\n   improvements.  Please refer to the current edition of the \"Internet\n\
    \   Official Protocol Standards\" (STD 1) for the standardization state\n   and\
    \ status of this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1997).  All Rights Reserved.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document describes a directory access protocol that provides\n\
    \   both read and update access.  Update access requires secure\n   authentication,\
    \ but this document does not mandate implementation of\n   any satisfactory authentication\
    \ mechanisms.\n   In accordance with RFC 2026, section 4.4.1, this specification\
    \ is\n   being approved by IESG as a Proposed Standard despite this\n   limitation,\
    \ for the following reasons:\n   a. to encourage implementation and interoperability\
    \ testing of\n      these protocols (with or without update access) before they\n\
    \      are deployed, and\n   b. to encourage deployment and use of these protocols\
    \ in read-only\n      applications.  (e.g. applications where LDAPv3 is used as\n\
    \      a query language for directories which are updated by some\n      secure\
    \ mechanism other than LDAP), and\n   c. to avoid delaying the advancement and\
    \ deployment of other Internet\n      standards-track protocols which require\
    \ the ability to query, but\n      not update, LDAPv3 directory servers.\n   Readers\
    \ are hereby warned that until mandatory authentication\n   mechanisms are standardized,\
    \ clients and servers written according to\n   this specification which make use\
    \ of update functionality are\n   UNLIKELY TO INTEROPERATE, or MAY INTEROPERATE\
    \ ONLY IF AUTHENTICATION\n   IS REDUCED TO AN UNACCEPTABLY WEAK LEVEL.\n   Implementors\
    \ are hereby discouraged from deploying LDAPv3 clients or\n   servers which implement\
    \ the update functionality, until a Proposed\n   Standard for mandatory authentication\
    \ in LDAPv3 has been approved and\n   published as an RFC.\n"
- title: 2. Abstract
  contents:
  - "2. Abstract\n   The Lightweight Directory Access Protocol (LDAP) [1] requires\
    \ that\n   the contents of AttributeValue fields in protocol elements be octet\n\
    \   strings.  This document defines a set of syntaxes for LDAPv3, and the\n  \
    \ rules by which attribute values of these syntaxes are represented as\n   octet\
    \ strings for transmission in the LDAP protocol.  The syntaxes\n   defined in\
    \ this document are referenced by this and other documents\n   that define attribute\
    \ types.  This document also defines the set of\n   attribute types which LDAP\
    \ servers should support.\n"
- title: 3. Overview
  contents:
  - "3. Overview\n   This document defines the framework for developing schemas for\n\
    \   directories accessible via the Lightweight Directory Access Protocol.\n  \
    \ Schema is the collection of attribute type definitions, object class\n   definitions\
    \ and other information which a server uses to determine\n   how to match a filter\
    \ or attribute value assertion (in a compare\n   operation) against the attributes\
    \ of an entry, and whether to permit\n   add and modify operations.\n   Section\
    \ 4 states the general requirements and notations for attribute\n   types, object\
    \ classes, syntax and matching rule definitions.\n   Section 5 lists attributes,\
    \ section 6 syntaxes and section 7 object\n   classes.\n   Additional documents\
    \ define schemas for representing real-world\n   objects as directory entries.\n"
- title: 4. General Issues
  contents:
  - "4. General Issues\n   This document describes encodings used in an Internet protocol.\n\
    \   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\"\
    ,\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\"\
    \ in this\n   document are to be interpreted as described in RFC 2119 [4].\n \
    \  Attribute Type and Object Class definitions are written in a string\n   representation\
    \ of the AttributeTypeDescription and\n   ObjectClassDescription data types defined\
    \ in X.501(93) [3].\n   Implementors are strongly advised to first read the description\
    \ of\n   how schema is represented in X.500 before reading the rest of this\n\
    \   document.\n"
- title: 4.1. Common Encoding Aspects
  contents:
  - "4.1. Common Encoding Aspects\n   For the purposes of defining the encoding rules\
    \ for attribute\n   syntaxes, the following BNF definitions will be used.  They\
    \ are based\n   on the BNF styles of RFC 822 [13].\n    a     = \"a\" / \"b\"\
    \ / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" /\n            \"j\"\
    \ / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" /\n        \
    \    \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" /\n\
    \            \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"\
    J\" /\n            \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"\
    R\" / \"S\" /\n            \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"\
    Z\"\n    d               = \"0\" / \"1\" / \"2\" / \"3\" / \"4\" /\n         \
    \             \"5\" / \"6\" / \"7\" / \"8\" / \"9\"\n    hex-digit       =  d\
    \ / \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" /\n                        \
    \   \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\"\n    k               = a / d\
    \ / \"-\" / \";\"\n    p               = a / d / \"\"\" / \"(\" / \")\" / \"+\"\
    \ / \",\" /\n                      \"-\" / \".\" / \"/\" / \":\" / \"?\" / \"\
    \ \"\n    letterstring    = 1*a\n    numericstring   = 1*d\n    anhstring    \
    \   = 1*k\n    keystring       = a [ anhstring ]\n    printablestring = 1*p\n\
    \    space           = 1*\" \"\n    whsp            = [ space ]\n    utf8    \
    \        = <any sequence of octets formed from the UTF-8 [9]\n               \
    \        transformation of a character from ISO10646 [10]>\n    dstring      \
    \   = 1*utf8\n    qdstring        = whsp \"'\" dstring \"'\" whsp\n    qdstringlist\
    \    = [ qdstring *( qdstring ) ]\n    qdstrings       = qdstring / ( whsp \"\
    (\" qdstringlist \")\" whsp )\n   In the following BNF for the string representation\
    \ of OBJECT\n   IDENTIFIERs, descr is the syntactic representation of an object\n\
    \   descriptor, which consists of letters and digits, starting with a\n   letter.\
    \  An OBJECT IDENTIFIER in the numericoid format should not\n   have leading zeroes\
    \ (e.g. \"0.9.3\" is permitted but \"0.09.3\" should\n   not be generated).\n\
    \   When encoding 'oid' elements in a value, the descr encoding option\n   SHOULD\
    \ be used in preference to the numericoid. An object descriptor\n   is a more\
    \ readable alias for a number OBJECT IDENTIFIER, and these\n   (where assigned\
    \ and known by the implementation) SHOULD be used in\n   preference to numeric\
    \ oids to the greatest extent possible.  Examples\n   of object descriptors in\
    \ LDAP are attribute type, object class and\n   matching rule names.\n     oid\
    \             = descr / numericoid\n     descr           = keystring\n     numericoid\
    \      = numericstring *( \".\" numericstring )\n     woid            = whsp oid\
    \ whsp\n     ; set of oids of either form\n     oids            = woid / ( \"\
    (\" oidlist \")\" )\n     oidlist         = woid *( \"$\" woid )\n     ; object\
    \ descriptors used as schema element names\n     qdescrs         = qdescr / (\
    \ whsp \"(\" qdescrlist \")\" whsp )\n     qdescrlist      = [ qdescr *( qdescr\
    \ ) ]\n     qdescr          = whsp \"'\" descr \"'\" whsp\n"
- title: 4.2. Attribute Types
  contents:
  - "4.2. Attribute Types\n   The attribute types are described by sample values for\
    \ the subschema\n   \"attributeTypes\" attribute, which is written in the\n  \
    \ AttributeTypeDescription syntax.  While lines have been folded for\n   readability,\
    \ the values transferred in protocol would not contain\n   newlines.\n   The AttributeTypeDescription\
    \ is encoded according to the following\n   BNF, and the productions for oid,\
    \ qdescrs and qdstring are given in\n   section 4.1.  Implementors should note\
    \ that future versions of this\n   document may have expanded this BNF to include\
    \ additional terms.\n   Terms which begin with the characters \"X-\" are reserved\
    \ for private\n   experiments, and MUST be followed by a <qdstrings>.\n      AttributeTypeDescription\
    \ = \"(\" whsp\n            numericoid whsp              ; AttributeType identifier\n\
    \          [ \"NAME\" qdescrs ]             ; name used in AttributeType\n   \
    \       [ \"DESC\" qdstring ]            ; description\n          [ \"OBSOLETE\"\
    \ whsp ]\n          [ \"SUP\" woid ]                 ; derived from this other\n\
    \                                         ; AttributeType\n          [ \"EQUALITY\"\
    \ woid              ; Matching Rule name\n          [ \"ORDERING\" woid      \
    \        ; Matching Rule name\n          [ \"SUBSTR\" woid ]              ; Matching\
    \ Rule name\n          [ \"SYNTAX\" whsp noidlen whsp ] ; see section 4.3\n  \
    \        [ \"SINGLE-VALUE\" whsp ]        ; default multi-valued\n          [\
    \ \"COLLECTIVE\" whsp ]          ; default not collective\n          [ \"NO-USER-MODIFICATION\"\
    \ whsp ]; default user modifiable\n          [ \"USAGE\" whsp AttributeUsage ];\
    \ default userApplications\n          whsp \")\"\n      AttributeUsage =\n   \
    \       \"userApplications\"     /\n          \"directoryOperation\"   /\n   \
    \       \"distributedOperation\" / ; DSA-shared\n          \"dSAOperation\"  \
    \        ; DSA-specific, value depends on server\n   Servers are not required\
    \ to provide the same or any text in the\n   description part of the subschema\
    \ values they maintain.  Servers\n   SHOULD provide at least one of the \"SUP\"\
    \ and \"SYNTAX\" fields for each\n   AttributeTypeDescription.\n   Servers MUST\
    \ implement all the attribute types referenced in sections\n   5.1, 5.2 and 5.3.\n\
    \   Servers MAY recognize additional names and attributes not listed in\n   this\
    \ document, and if they do so, MUST publish the definitions of the\n   types in\
    \ the attributeTypes attribute of their subschema entries.\n   Schema developers\
    \ MUST NOT create attribute definitions whose names\n   conflict with attributes\
    \ defined for use with LDAP in existing\n   standards-track RFCs.\n   An AttributeDescription\
    \ can be used as the value in a NAME part of an\n   AttributeTypeDescription.\
    \  Note that these are case insensitive.\n   Note that the AttributeTypeDescription\
    \ does not list the matching\n   rules which can can be used with that attribute\
    \ type in an\n   extensibleMatch search filter.  This is done using the\n   matchingRuleUse\
    \ attribute described in section 4.5.\n   This document refines the schema description\
    \ of X.501 by requiring\n   that the syntax field in an AttributeTypeDescription\
    \ be a string\n   representation of an OBJECT IDENTIFIER for the LDAP string syntax\n\
    \   definition, and an optional indication of the maximum length of a\n   value\
    \ of this attribute (defined in section 4.3.2).\n"
- title: 4.3. Syntaxes
  contents:
  - "4.3. Syntaxes\n   This section defines general requirements for LDAP attribute\
    \ value\n   syntax encodings. All documents defining attribute syntax encodings\n\
    \   for use with LDAP are expected to conform to these requirements.\n   The encoding\
    \ rules defined for a given attribute syntax must produce\n   octet strings. \
    \ To the greatest extent possible, encoded octet\n   strings should be usable\
    \ in their native encoded form for display\n   purposes. In particular, encoding\
    \ rules for attribute syntaxes\n   defining non-binary values should produce strings\
    \ that can be\n   displayed with little or no translation by clients implementing\
    \ LDAP.\n   There are a few cases (e.g. audio) however, when it is not sensible\n\
    \   to produce a printable representation, and clients MUST NOT assume\n   that\
    \ an unrecognized syntax is a string representation.\n   In encodings where an\
    \ arbitrary string, not a Distinguished Name, is\n   used as part of a larger\
    \ production, and other than as part of a\n   Distinguished Name, a backslash\
    \ quoting mechanism is used to escape\n   the following separator symbol character\
    \ (such as \"'\", \"$\" or \"#\") if\n   it should occur in that string.  The\
    \ backslash is followed by a pair\n   of hexadecimal digits representing the next\
    \ character.  A backslash\n   itself in the string which forms part of a larger\
    \ syntax is always\n   transmitted as '\\5C' or '\\5c'. An example is given in\
    \ section 6.27.\n   Syntaxes are also defined for matching rules whose assertion\
    \ value\n   syntax is different from the attribute value syntax.\n"
- title: 4.3.1  Binary Transfer of Values
  contents:
  - "4.3.1  Binary Transfer of Values\n   This encoding format is used if the binary\
    \ encoding is requested by\n   the client for an attribute, or if the attribute\
    \ syntax name is\n   \"1.3.6.1.4.1.1466.115.121.1.5\".  The contents of the LDAP\n\
    \   AttributeValue or AssertionValue field is a BER-encoded instance of\n   the\
    \ attribute value or a matching rule assertion value ASN.1 data\n   type as defined\
    \ for use with X.500. (The first byte inside the OCTET\n   STRING wrapper is a\
    \ tag octet.  However, the OCTET STRING is still\n   encoded in primitive form.)\n\
    \   All servers MUST implement this form for both generating attribute\n   values\
    \ in search responses, and parsing attribute values in add,\n   compare and modify\
    \ requests, if the attribute type is recognized and\n   the attribute syntax name\
    \ is that of Binary.  Clients which request\n   that all attributes be returned\
    \ from entries MUST be prepared to\n   receive values in binary (e.g. userCertificate;binary),\
    \ and SHOULD\n   NOT simply display binary or unrecognized values to users.\n"
- title: 4.3.2. Syntax Object Identifiers
  contents:
  - "4.3.2. Syntax Object Identifiers\n   Syntaxes for use with LDAP are named by\
    \ OBJECT IDENTIFIERs, which are\n   dotted-decimal strings.  These are not intended\
    \ to be displayed to\n   users.\n   noidlen = numericoid [ \"{\" len \"}\" ]\n\
    \   len     = numericstring\n   The following table lists some of the syntaxes\
    \ that have been defined\n   for LDAP thus far.  The H-R column suggests whether\
    \ a value in that\n   syntax would likely be a human readable string.  Clients\
    \ and servers\n   need not implement all the syntaxes listed here, and MAY implement\n\
    \   other syntaxes.\n   Other documents may define additional syntaxes.  However,\
    \ the\n   definition of additional arbitrary syntaxes is strongly deprecated\n\
    \   since it will hinder interoperability: today's client and server\n   implementations\
    \ generally do not have the ability to dynamically\n   recognize new syntaxes.\
    \  In most cases attributes will be defined\n   with the syntax for directory\
    \ strings.\n   Value being represented        H-R OBJECT IDENTIFIER\n   =================================================================\n\
    \   ACI Item                        N  1.3.6.1.4.1.1466.115.121.1.1\n   Access\
    \ Point                    Y  1.3.6.1.4.1.1466.115.121.1.2\n   Attribute Type\
    \ Description      Y  1.3.6.1.4.1.1466.115.121.1.3\n   Audio                 \
    \          N  1.3.6.1.4.1.1466.115.121.1.4\n   Binary                        \
    \  N  1.3.6.1.4.1.1466.115.121.1.5\n   Bit String                      Y  1.3.6.1.4.1.1466.115.121.1.6\n\
    \   Boolean                         Y  1.3.6.1.4.1.1466.115.121.1.7\n   Certificate\
    \                     N  1.3.6.1.4.1.1466.115.121.1.8\n   Certificate List   \
    \             N  1.3.6.1.4.1.1466.115.121.1.9\n   Certificate Pair           \
    \     N  1.3.6.1.4.1.1466.115.121.1.10\n   Country String                  Y \
    \ 1.3.6.1.4.1.1466.115.121.1.11\n   DN                              Y  1.3.6.1.4.1.1466.115.121.1.12\n\
    \   Data Quality Syntax             Y  1.3.6.1.4.1.1466.115.121.1.13\n   Delivery\
    \ Method                 Y  1.3.6.1.4.1.1466.115.121.1.14\n   Directory String\
    \                Y  1.3.6.1.4.1.1466.115.121.1.15\n   DIT Content Rule Description\
    \    Y  1.3.6.1.4.1.1466.115.121.1.16\n   DIT Structure Rule Description  Y  1.3.6.1.4.1.1466.115.121.1.17\n\
    \   DL Submit Permission            Y  1.3.6.1.4.1.1466.115.121.1.18\n   DSA Quality\
    \ Syntax              Y  1.3.6.1.4.1.1466.115.121.1.19\n   DSE Type          \
    \              Y  1.3.6.1.4.1.1466.115.121.1.20\n   Enhanced Guide           \
    \       Y  1.3.6.1.4.1.1466.115.121.1.21\n   Facsimile Telephone Number      Y\
    \  1.3.6.1.4.1.1466.115.121.1.22\n   Fax                             N  1.3.6.1.4.1.1466.115.121.1.23\n\
    \   Generalized Time                Y  1.3.6.1.4.1.1466.115.121.1.24\n   Guide\
    \                           Y  1.3.6.1.4.1.1466.115.121.1.25\n   IA5 String  \
    \                    Y  1.3.6.1.4.1.1466.115.121.1.26\n   INTEGER            \
    \             Y  1.3.6.1.4.1.1466.115.121.1.27\n   JPEG                      \
    \      N  1.3.6.1.4.1.1466.115.121.1.28\n   LDAP Syntax Description         Y\
    \  1.3.6.1.4.1.1466.115.121.1.54\n   LDAP Schema Definition          Y  1.3.6.1.4.1.1466.115.121.1.56\n\
    \   LDAP Schema Description         Y  1.3.6.1.4.1.1466.115.121.1.57\n   Master\
    \ And Shadow Access Points Y  1.3.6.1.4.1.1466.115.121.1.29\n   Matching Rule\
    \ Description       Y  1.3.6.1.4.1.1466.115.121.1.30\n   Matching Rule Use Description\
    \   Y  1.3.6.1.4.1.1466.115.121.1.31\n   Mail Preference                 Y  1.3.6.1.4.1.1466.115.121.1.32\n\
    \   MHS OR Address                  Y  1.3.6.1.4.1.1466.115.121.1.33\n   Modify\
    \ Rights                   Y  1.3.6.1.4.1.1466.115.121.1.55\n   Name And Optional\
    \ UID           Y  1.3.6.1.4.1.1466.115.121.1.34\n   Name Form Description   \
    \        Y  1.3.6.1.4.1.1466.115.121.1.35\n   Numeric String                 \
    \ Y  1.3.6.1.4.1.1466.115.121.1.36\n   Object Class Description        Y  1.3.6.1.4.1.1466.115.121.1.37\n\
    \   Octet String                    Y  1.3.6.1.4.1.1466.115.121.1.40\n   OID \
    \                            Y  1.3.6.1.4.1.1466.115.121.1.38\n   Other Mailbox\
    \                   Y  1.3.6.1.4.1.1466.115.121.1.39\n   Postal Address      \
    \            Y  1.3.6.1.4.1.1466.115.121.1.41\n   Protocol Information       \
    \     Y  1.3.6.1.4.1.1466.115.121.1.42\n   Presentation Address            Y \
    \ 1.3.6.1.4.1.1466.115.121.1.43\n   Printable String                Y  1.3.6.1.4.1.1466.115.121.1.44\n\
    \   Substring Assertion             Y  1.3.6.1.4.1.1466.115.121.1.58\n   Subtree\
    \ Specification           Y  1.3.6.1.4.1.1466.115.121.1.45\n   Supplier Information\
    \            Y  1.3.6.1.4.1.1466.115.121.1.46\n   Supplier Or Consumer       \
    \     Y  1.3.6.1.4.1.1466.115.121.1.47\n   Supplier And Consumer           Y \
    \ 1.3.6.1.4.1.1466.115.121.1.48\n   Supported Algorithm             N  1.3.6.1.4.1.1466.115.121.1.49\n\
    \   Telephone Number                Y  1.3.6.1.4.1.1466.115.121.1.50\n   Teletex\
    \ Terminal Identifier     Y  1.3.6.1.4.1.1466.115.121.1.51\n   Telex Number  \
    \                  Y  1.3.6.1.4.1.1466.115.121.1.52\n   UTC Time             \
    \           Y  1.3.6.1.4.1.1466.115.121.1.53\n   A suggested minimum upper bound\
    \ on the number of characters in value\n   with a string-based syntax, or the\
    \ number of bytes in a value for all\n   other syntaxes, may be indicated by appending\
    \ this bound count inside\n   of curly braces following the syntax name's OBJECT\
    \ IDENTIFIER in an\n   Attribute Type Description.  This bound is not part of\
    \ the syntax\n   name itself.  For instance, \"1.3.6.4.1.1466.0{64}\" suggests\
    \ that\n   server implementations should allow a string to be 64 characters\n\
    \   long, although they may allow longer strings.  Note that a single\n   character\
    \ of the Directory String syntax may be encoded in more than\n   one byte since\
    \ UTF-8 is a variable-length encoding.\n"
- title: 4.3.3. Syntax Description
  contents:
  - "4.3.3. Syntax Description\n   The following BNF may be used to associate a short\
    \ description with a\n   syntax OBJECT IDENTIFIER. Implementors should note that\
    \ future\n   versions of this document may expand this definition to include\n\
    \   additional terms.  Terms whose identifier begins with \"X-\" are\n   reserved\
    \ for private experiments, and MUST be followed by a\n   <qdstrings>.\n      SyntaxDescription\
    \ = \"(\" whsp\n          numericoid whsp\n          [ \"DESC\" qdstring ]\n \
    \         whsp \")\"\n"
- title: 4.4. Object Classes
  contents:
  - "4.4. Object Classes\n   The format for representation of object classes is defined\
    \ in X.501\n   [3]. In general every entry will contain an abstract class (\"\
    top\" or\n   \"alias\"), at least one structural object class, and zero or more\n\
    \   auxiliary object classes.  Whether an object class is abstract,\n   structural\
    \ or auxiliary is defined when the object class identifier\n   is assigned.  An\
    \ object class definition should not be changed\n   without having a new identifier\
    \ assigned to it.\n   Object class descriptions are written according to the following\
    \ BNF.\n   Implementors should note that future versions of this document may\n\
    \   expand this definition to include additional terms.  Terms whose\n   identifier\
    \ begins with \"X-\" are reserved for private experiments, and\n   MUST be followed\
    \ by a <qdstrings> encoding.\n      ObjectClassDescription = \"(\" whsp\n    \
    \      numericoid whsp      ; ObjectClass identifier\n          [ \"NAME\" qdescrs\
    \ ]\n          [ \"DESC\" qdstring ]\n          [ \"OBSOLETE\" whsp ]\n      \
    \    [ \"SUP\" oids ]       ; Superior ObjectClasses\n          [ ( \"ABSTRACT\"\
    \ / \"STRUCTURAL\" / \"AUXILIARY\" ) whsp ]\n                               ;\
    \ default structural\n          [ \"MUST\" oids ]      ; AttributeTypes\n    \
    \      [ \"MAY\" oids ]       ; AttributeTypes\n      whsp \")\"\n   These are\
    \ described as sample values for the subschema\n   \"objectClasses\" attribute\
    \ for a server which implements the LDAP\n   schema. While lines have been folded\
    \ for readability, the values\n   transferred in protocol would not contain newlines.\n\
    \   Servers SHOULD implement all the object classes referenced in section\n  \
    \ 7, except for extensibleObject, which is optional. Servers MAY\n   implement\
    \ additional object classes not listed in this document, and\n   if they do so,\
    \ MUST publish the definitions of the classes in the\n   objectClasses attribute\
    \ of their subschema entries.\n   Schema developers MUST NOT create object class\
    \ definitions whose\n   names conflict with attributes defined for use with LDAP\
    \ in existing\n   standards-track RFCs.\n"
- title: 4.5. Matching Rules
  contents:
  - "4.5. Matching Rules\n   Matching rules are used by servers to compare attribute\
    \ values\n   against assertion values when performing Search and Compare\n   operations.\
    \  They are also used to identify the value to be added or\n   deleted when modifying\
    \ entries, and are used when comparing a\n   purported distinguished name with\
    \ the name of an entry.\n   Most of the attributes given in this document will\
    \ have an equality\n   matching rule defined.\n   Matching rule descriptions are\
    \ written according to the following\n   BNF.  Implementors should note that future\
    \ versions of this document\n   may have expanded this BNF to include additional\
    \ terms.  Terms whose\n   identifier begins with \"X-\" are reserved for private\
    \ experiments, and\n   MUST be followed by a <qdstrings> encoding.\n      MatchingRuleDescription\
    \ = \"(\" whsp\n          numericoid whsp  ; MatchingRule identifier\n       \
    \   [ \"NAME\" qdescrs ]\n          [ \"DESC\" qdstring ]\n          [ \"OBSOLETE\"\
    \ whsp ]\n          \"SYNTAX\" numericoid\n      whsp \")\"\n   Values of the\
    \ matchingRuleUse list the attributes which are suitable\n   for use with an extensible\
    \ matching rule.\n      MatchingRuleUseDescription = \"(\" whsp\n          numericoid\
    \ whsp  ; MatchingRule identifier\n          [ \"NAME\" qdescrs ]\n          [\
    \ \"DESC\" qdstring ]\n          [ \"OBSOLETE\" ]\n         \"APPLIES\" oids \
    \   ; AttributeType identifiers\n      whsp \")\"\n   Servers which support matching\
    \ rules and the extensibleMatch SHOULD\n   implement all the matching rules in\
    \ section 8.\n   Servers MAY implement additional matching rules not listed in\
    \ this\n   document, and if they do so, MUST publish the definitions of the\n\
    \   matching rules in the matchingRules attribute of their subschema\n   entries.\
    \ If the server supports the extensibleMatch, then the server\n   MUST publish\
    \ the relationship between the matching rules and\n   attributes in the matchingRuleUse\
    \ attribute.\n   For example, a server which implements a privately-defined matching\n\
    \   rule for performing sound-alike matches on Directory String-valued\n   attributes\
    \ would include the following in the subschema entry\n   (1.2.3.4.5 is an example,\
    \ the OID of an actual matching rule would be\n   different):\n   matchingRule:\
    \ ( 1.2.3.4.5 NAME 'soundAlikeMatch'\n    SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\
    \ )\n   If this matching rule could be used with the attributes 2.5.4.41 and\n\
    \   2.5.4.15, the following would also be present:\n   matchingRuleUse: ( 1.2.3.4.5\
    \ APPLIES (2.5.4.41 $ 2.5.4.15) )\n   A client could then make use of this matching\
    \ rule by sending a\n   search operation in which the filter is of the extensibleMatch\n\
    \   choice, the matchingRule field is \"soundAlikeMatch\", and the type\n   field\
    \ is \"2.5.4.41\" or \"2.5.4.15\".\n"
- title: 5. Attribute Types
  contents:
  - "5. Attribute Types\n   All LDAP server implementations MUST recognize the attribute\
    \ types\n   defined in this section.\n   Servers SHOULD also recognize all the\
    \ attributes from section 5 of\n   [12].\n"
- title: 5.1. Standard Operational Attributes
  contents:
  - "5.1. Standard Operational Attributes\n   Servers MUST maintain values of these\
    \ attributes in accordance with\n   the definitions in X.501(93).\n"
- title: 5.1.1. createTimestamp
  contents:
  - "5.1.1. createTimestamp\n   This attribute SHOULD appear in entries which were\
    \ created using the\n   Add operation.\n    ( 2.5.18.1 NAME 'createTimestamp'\
    \ EQUALITY generalizedTimeMatch\n      ORDERING generalizedTimeOrderingMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.24\n      SINGLE-VALUE NO-USER-MODIFICATION\
    \ USAGE directoryOperation )\n"
- title: 5.1.2. modifyTimestamp
  contents:
  - "5.1.2. modifyTimestamp\n   This attribute SHOULD appear in entries which have\
    \ been modified\n   using the Modify operation.\n    ( 2.5.18.2 NAME 'modifyTimestamp'\
    \ EQUALITY generalizedTimeMatch\n      ORDERING generalizedTimeOrderingMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.24\n      SINGLE-VALUE NO-USER-MODIFICATION\
    \ USAGE directoryOperation )\n"
- title: 5.1.3. creatorsName
  contents:
  - "5.1.3. creatorsName\n   This attribute SHOULD appear in entries which were created\
    \ using the\n   Add operation.\n    ( 2.5.18.3 NAME 'creatorsName' EQUALITY distinguishedNameMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.12\n      SINGLE-VALUE NO-USER-MODIFICATION\
    \ USAGE directoryOperation )\n"
- title: 5.1.4. modifiersName
  contents:
  - "5.1.4. modifiersName\n   This attribute SHOULD appear in entries which have been\
    \ modified\n   using the Modify operation.\n    ( 2.5.18.4 NAME 'modifiersName'\
    \ EQUALITY distinguishedNameMatch\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.12\n\
    \      SINGLE-VALUE NO-USER-MODIFICATION USAGE directoryOperation )\n"
- title: 5.1.5. subschemaSubentry
  contents:
  - "5.1.5. subschemaSubentry\n   The value of this attribute is the name of a subschema\
    \ entry (or\n   subentry if the server is based on X.500(93)) in which the server\n\
    \   makes available attributes specifying the schema.\n    ( 2.5.18.10 NAME 'subschemaSubentry'\n\
    \      EQUALITY distinguishedNameMatch\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.12\
    \ NO-USER-MODIFICATION\n      SINGLE-VALUE USAGE directoryOperation )\n"
- title: 5.1.6. attributeTypes
  contents:
  - "5.1.6. attributeTypes\n   This attribute is typically located in the subschema\
    \ entry.\n    ( 2.5.21.5 NAME 'attributeTypes'\n      EQUALITY objectIdentifierFirstComponentMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.3 USAGE directoryOperation )\n"
- title: 5.1.7. objectClasses
  contents:
  - "5.1.7. objectClasses\n   This attribute is typically located in the subschema\
    \ entry.\n    ( 2.5.21.6 NAME 'objectClasses'\n      EQUALITY objectIdentifierFirstComponentMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.37 USAGE directoryOperation )\n"
- title: 5.1.8. matchingRules
  contents:
  - "5.1.8. matchingRules\n   This attribute is typically located in the subschema\
    \ entry.\n    ( 2.5.21.4 NAME 'matchingRules'\n      EQUALITY objectIdentifierFirstComponentMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.30 USAGE directoryOperation )\n"
- title: 5.1.9. matchingRuleUse
  contents:
  - "5.1.9. matchingRuleUse\n   This attribute is typically located in the subschema\
    \ entry.\n    ( 2.5.21.8 NAME 'matchingRuleUse'\n      EQUALITY objectIdentifierFirstComponentMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.31 USAGE directoryOperation )\n"
- title: 5.2. LDAP Operational Attributes
  contents:
  - "5.2. LDAP Operational Attributes\n   These attributes are only present in the\
    \ root DSE (see [1] and [3]).\n   Servers MUST recognize these attribute names,\
    \ but it is not required\n   that a server provide values for these attributes,\
    \ when the attribute\n   corresponds to a feature which the server does not implement.\n"
- title: 5.2.1. namingContexts
  contents:
  - "5.2.1. namingContexts\n   The values of this attribute correspond to naming contexts\
    \ which this\n   server masters or shadows.  If the server does not master any\n\
    \   information (e.g. it is an LDAP gateway to a public X.500 directory)\n   this\
    \ attribute will be absent.  If the server believes it contains\n   the entire\
    \ directory, the attribute will have a single value, and\n   that value will be\
    \ the empty string (indicating the null DN of the\n   root). This attribute will\
    \ allow a client to choose suitable base\n   objects for searching when it has\
    \ contacted a server.\n    ( 1.3.6.1.4.1.1466.101.120.5 NAME 'namingContexts'\n\
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.12 USAGE dSAOperation )\n"
- title: 5.2.2. altServer
  contents:
  - "5.2.2. altServer\n   The values of this attribute are URLs of other servers which\
    \ may be\n   contacted when this server becomes unavailable.  If the server does\n\
    \   not know of any other servers which could be used this attribute will\n  \
    \ be absent. Clients may cache this information in case their preferred\n   LDAP\
    \ server later becomes unavailable.\n    ( 1.3.6.1.4.1.1466.101.120.6 NAME 'altServer'\n\
    \     SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 USAGE dSAOperation )\n"
- title: 5.2.3. supportedExtension
  contents:
  - "5.2.3. supportedExtension\n   The values of this attribute are OBJECT IDENTIFIERs\
    \ identifying the\n   supported extended operations which the server supports.\n\
    \   If the server does not support any extensions this attribute will be\n   absent.\n\
    \    ( 1.3.6.1.4.1.1466.101.120.7 NAME 'supportedExtension'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.38\
    \ USAGE dSAOperation )\n"
- title: 5.2.4. supportedControl
  contents:
  - "5.2.4. supportedControl\n   The values of this attribute are the OBJECT IDENTIFIERs\
    \ identifying\n   controls which the server supports.  If the server does not\
    \ support\n   any controls, this attribute will be absent.\n    ( 1.3.6.1.4.1.1466.101.120.13\
    \ NAME 'supportedControl'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 USAGE dSAOperation\
    \ )\n"
- title: 5.2.5. supportedSASLMechanisms
  contents:
  - "5.2.5. supportedSASLMechanisms\n   The values of this attribute are the names\
    \ of supported SASL\n   mechanisms which the server supports.  If the server does\
    \ not support\n   any mechanisms this attribute will be absent.\n    ( 1.3.6.1.4.1.1466.101.120.14\
    \ NAME 'supportedSASLMechanisms'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 USAGE\
    \ dSAOperation )\n"
- title: 5.2.6. supportedLDAPVersion
  contents:
  - "5.2.6. supportedLDAPVersion\n   The values of this attribute are the versions\
    \ of the LDAP protocol\n   which the server implements.\n    ( 1.3.6.1.4.1.1466.101.120.15\
    \ NAME 'supportedLDAPVersion'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 USAGE\
    \ dSAOperation )\n"
- title: 5.3. LDAP Subschema Attribute
  contents:
  - "5.3. LDAP Subschema Attribute\n   This attribute is typically located in the\
    \ subschema entry.\n"
- title: 5.3.1. ldapSyntaxes
  contents:
  - "5.3.1. ldapSyntaxes\n   Servers MAY use this attribute to list the syntaxes which\
    \ are\n   implemented.  Each value corresponds to one syntax.\n    ( 1.3.6.1.4.1.1466.101.120.16\
    \ NAME 'ldapSyntaxes'\n      EQUALITY objectIdentifierFirstComponentMatch\n  \
    \    SYNTAX 1.3.6.1.4.1.1466.115.121.1.54 USAGE directoryOperation )\n"
- title: 5.4. X.500 Subschema attributes
  contents:
  - "5.4. X.500 Subschema attributes\n   These attributes are located in the subschema\
    \ entry.  All servers\n   SHOULD recognize their name, although typically only\
    \ X.500 servers\n   will implement their functionality.\n"
- title: 5.4.1. dITStructureRules
  contents:
  - "5.4.1. dITStructureRules\n ( 2.5.21.1 NAME 'dITStructureRules' EQUALITY integerFirstComponentMatch\n\
    \   SYNTAX 1.3.6.1.4.1.1466.115.121.1.17 USAGE directoryOperation )\n"
- title: 5.4.2. nameForms
  contents:
  - "5.4.2. nameForms\n    ( 2.5.21.7 NAME 'nameForms'\n      EQUALITY objectIdentifierFirstComponentMatch\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.35 USAGE directoryOperation )\n"
- title: 5.4.3. ditContentRules
  contents:
  - "5.4.3. ditContentRules\n    ( 2.5.21.2 NAME 'dITContentRules'\n      EQUALITY\
    \ objectIdentifierFirstComponentMatch\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.16\
    \ USAGE directoryOperation )\n"
- title: 6. Syntaxes
  contents:
  - "6. Syntaxes\n   Servers SHOULD recognize all the syntaxes described in this section.\n"
- title: 6.1. Attribute Type Description
  contents:
  - "6.1. Attribute Type Description\n   ( 1.3.6.1.4.1.1466.115.121.1.3 DESC 'Attribute\
    \ Type Description' )\n   Values in this syntax are encoded according to the BNF\
    \ given at the\n   start of section 4.2. For example,\n        ( 2.5.4.0 NAME\
    \ 'objectClass'\n          SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 )\n"
- title: 6.2. Binary
  contents:
  - "6.2. Binary\n   ( 1.3.6.1.4.1.1466.115.121.1.5 DESC 'Binary' )\n   Values in\
    \ this syntax are encoded as described in section 4.3.1.\n"
- title: 6.3. Bit String
  contents:
  - "6.3. Bit String\n   ( 1.3.6.1.4.1.1466.115.121.1.6 DESC 'Bit String' )\n   Values\
    \ in this syntax are encoded according to the following BNF:\n      bitstring\
    \ = \"'\" *binary-digit \"'B\"\n      binary-digit = \"0\" / \"1\"\n   Example:\n\
    \        '0101111101'B\n"
- title: 6.4. Boolean
  contents:
  - "6.4. Boolean\n   ( 1.3.6.1.4.1.1466.115.121.1.7 DESC 'Boolean' )\n   Values in\
    \ this syntax are encoded according to the following BNF:\n      boolean = \"\
    TRUE\" / \"FALSE\"\n   Boolean values have an encoding of \"TRUE\" if they are\
    \ logically true,\n   and have an encoding of \"FALSE\" otherwise.\n"
- title: 6.5. Certificate
  contents:
  - "6.5. Certificate\n   ( 1.3.6.1.4.1.1466.115.121.1.8 DESC 'Certificate' )\n  \
    \ Because of the changes from X.509(1988) and X.509(1993) and\n   additional changes\
    \ to the ASN.1 definition to support certificate\n   extensions, no string representation\
    \ is defined, and values in this\n   syntax MUST only be transferred using the\
    \ binary encoding, by\n   requesting or returning the attributes with descriptions\n\
    \   \"userCertificate;binary\" or \"caCertificate;binary\".  The BNF notation\n\
    \   in RFC 1778 for \"User Certificate\" is not recommended to be used.\n"
- title: 6.6. Certificate List
  contents:
  - "6.6. Certificate List\n   ( 1.3.6.1.4.1.1466.115.121.1.9 DESC 'Certificate List'\
    \ )\n   Because of the incompatibility of the X.509(1988) and X.509(1993)\n  \
    \ definitions of revocation lists, values in this syntax MUST only be\n   transferred\
    \ using a binary encoding, by requesting or returning the\n   attributes with\
    \ descriptions \"certificateRevocationList;binary\" or\n   \"authorityRevocationList;binary\"\
    .  The BNF notation in RFC 1778 for\n   \"Authority Revocation List\" is not recommended\
    \ to be used.\n"
- title: 6.7. Certificate Pair
  contents:
  - "6.7. Certificate Pair\n   ( 1.3.6.1.4.1.1466.115.121.1.10 DESC 'Certificate Pair'\
    \ )\n   Because the Certificate is being carried in binary, values in this\n \
    \  syntax MUST only be transferred using a binary encoding, by\n   requesting\
    \ or returning the attribute description\n   \"crossCertificatePair;binary\".\
    \ The BNF notation in RFC 1778 for\n   \"Certificate Pair\" is not recommended\
    \ to be used.\n"
- title: 6.8. Country String
  contents:
  - "6.8. Country String\n   ( 1.3.6.1.4.1.1466.115.121.1.11 DESC 'Country String'\
    \ )\n   A value in this syntax is encoded the same as a value of Directory\n \
    \  String syntax.  Note that this syntax is limited to values of exactly\n   two\
    \ printable string characters, as listed in ISO 3166 [14].\n      CountryString\
    \  = p p\n   Example:\n      US\n"
- title: 6.9. DN
  contents:
  - "6.9. DN\n   ( 1.3.6.1.4.1.1466.115.121.1.12 DESC 'DN' )\n   Values in the Distinguished\
    \ Name syntax are encoded to have the\n   representation defined in [5].  Note\
    \ that this representation is not\n   reversible to an ASN.1 encoding used in\
    \ X.500 for Distinguished\n   Names, as the CHOICE of any DirectoryString element\
    \ in an RDN is no\n   longer known.\n   Examples (from [5]):\n      CN=Steve Kille,O=Isode\
    \ Limited,C=GB\n      OU=Sales+CN=J. Smith,O=Widget Inc.,C=US\n      CN=L. Eagle,O=Sue\\\
    , Grabbit and Runn,C=GB\n      CN=Before\\0DAfter,O=Test,C=GB\n      1.3.6.1.4.1.1466.0=#04024869,O=Test,C=GB\n\
    \      SN=Lu\\C4\\8Di\\C4\\87\n"
- title: 6.10. Directory String
  contents:
  - "6.10. Directory String\n   ( 1.3.6.1.4.1.1466.115.121.1.15 DESC 'Directory String'\
    \ )\n   A string in this syntax is encoded in the UTF-8 form of ISO 10646 (a\n\
    \   superset of Unicode).  Servers and clients MUST be prepared to\n   receive\
    \ encodings of arbitrary Unicode characters, including\n   characters not presently\
    \ assigned to any character set.\n   For characters in the PrintableString form,\
    \ the value is encoded as\n   the string value itself.\n   If it is of the TeletexString\
    \ form, then the characters are\n   transliterated to their equivalents in UniversalString,\
    \ and encoded\n   in UTF-8 [9].\n   If it is of the UniversalString or BMPString\
    \ forms [10], UTF-8 is\n   used to encode them.\n   Note: the form of DirectoryString\
    \ is not indicated in protocol unless\n   the attribute value is carried in binary.\
    \  Servers which convert to\n   DAP MUST choose an appropriate form.  Servers\
    \ MUST NOT reject values\n   merely because they contain legal Unicode characters\
    \ outside of the\n   range of printable ASCII.\n   Example:\n      This is a string\
    \ of DirectoryString containing #!%#@\n"
- title: 6.11. DIT Content Rule Description
  contents:
  - "6.11. DIT Content Rule Description\n   ( 1.3.6.1.4.1.1466.115.121.1.16 DESC 'DIT\
    \ Content Rule Description' )\n   Values in this syntax are encoded according\
    \ to the following BNF.\n   Implementors should note that future versions of this\
    \ document may\n   have expanded this BNF to include additional terms.\n     \
    \ DITContentRuleDescription = \"(\"\n          numericoid   ; Structural ObjectClass\
    \ identifier\n          [ \"NAME\" qdescrs ]\n          [ \"DESC\" qdstring ]\n\
    \          [ \"OBSOLETE\" ]\n          [ \"AUX\" oids ]    ; Auxiliary ObjectClasses\n\
    \          [ \"MUST\" oids ]   ; AttributeType identifiers\n          [ \"MAY\"\
    \ oids ]    ; AttributeType identifiers\n          [ \"NOT\" oids ]    ; AttributeType\
    \ identifiers\n         \")\"\n"
- title: 6.12. Facsimile Telephone Number
  contents:
  - "6.12. Facsimile Telephone Number\n   ( 1.3.6.1.4.1.1466.115.121.1.22 DESC 'Facsimile\
    \ Telephone Number' )\n   Values in this syntax are encoded according to the following\
    \ BNF:\n      fax-number    = printablestring [ \"$\" faxparameters ]\n      faxparameters\
    \ = faxparm / ( faxparm \"$\" faxparameters )\n      faxparm = \"twoDimensional\"\
    \ / \"fineResolution\" /\n                \"unlimitedLength\" /\n            \
    \    \"b4Length\" / \"a3Width\" / \"b4Width\" / \"uncompressed\"\n   In the above,\
    \ the first printablestring is the telephone number,\n   based on E.123 [15],\
    \ and the faxparm tokens represent fax parameters.\n"
- title: 6.13. Fax
  contents:
  - "6.13. Fax\n   ( 1.3.6.1.4.1.1466.115.121.1.23 DESC 'Fax' )\n   Values in this\
    \ syntax are encoded as if they were octet strings\n   containing Group 3 Fax\
    \ images as defined in [7].\n"
- title: 6.14. Generalized Time
  contents:
  - "6.14. Generalized Time\n   ( 1.3.6.1.4.1.1466.115.121.1.24 DESC 'Generalized\
    \ Time' )\n   Values in this syntax are encoded as printable strings, represented\n\
    \   as specified in X.208.  Note that the time zone must be specified.\n   It\
    \ is strongly recommended that GMT time be used.  For example,\n             \
    \   199412161032Z\n"
- title: 6.15. IA5 String
  contents:
  - "6.15. IA5 String\n   ( 1.3.6.1.4.1.1466.115.121.1.26 DESC 'IA5 String' )\n  \
    \ The encoding of a value in this syntax is the string value itself.\n"
- title: 6.16. INTEGER
  contents:
  - "6.16. INTEGER\n   ( 1.3.6.1.4.1.1466.115.121.1.27 DESC 'INTEGER' )\n   Values\
    \ in this syntax are encoded as the decimal representation of\n   their values,\
    \ with each decimal digit represented by the its\n   character equivalent. So\
    \ the number 1321 is represented by the\n   character string \"1321\".\n"
- title: 6.17. JPEG
  contents:
  - "6.17. JPEG\n   ( 1.3.6.1.4.1.1466.115.121.1.28 DESC 'JPEG' )\n   Values in this\
    \ syntax are encoded as strings containing JPEG images\n   in the JPEG File Interchange\
    \ Format (JFIF), as described in [8].\n"
- title: 6.18. Matching Rule Description
  contents:
  - "6.18. Matching Rule Description\n   ( 1.3.6.1.4.1.1466.115.121.1.30 DESC 'Matching\
    \ Rule Description' )\n   Values of type matchingRules are encoded as strings\
    \ according to the\n   BNF given in section 4.5.\n"
- title: 6.19. Matching Rule Use Description
  contents:
  - "6.19. Matching Rule Use Description\n   ( 1.3.6.1.4.1.1466.115.121.1.31 DESC\
    \ 'Matching Rule Use Description'\n   )\n   Values of type matchingRuleUse are\
    \ encoded as strings according to\n   the BNF given in section 4.5.\n"
- title: 6.20. MHS OR Address
  contents:
  - "6.20. MHS OR Address\n   ( 1.3.6.1.4.1.1466.115.121.1.33 DESC 'MHS OR Address'\
    \ )\n   Values in this syntax are encoded as strings, according to the format\n\
    \   defined in [11].\n"
- title: 6.21. Name And Optional UID
  contents:
  - "6.21. Name And Optional UID\n   ( 1.3.6.1.4.1.1466.115.121.1.34 DESC 'Name And\
    \ Optional UID' )\n   Values in this syntax are encoded according to the following\
    \ BNF:\n      NameAndOptionalUID = DistinguishedName [ \"#\" bitstring ]\n   Although\
    \ the '#' character may occur in a string representation of a\n   distinguished\
    \ name, no additional special quoting is done.  This\n   syntax has been added\
    \ subsequent to RFC 1778.\n   Example:\n      1.3.6.1.4.1.1466.0=#04024869,O=Test,C=GB#'0101'B\n"
- title: 6.22. Name Form Description
  contents:
  - "6.22. Name Form Description\n   ( 1.3.6.1.4.1.1466.115.121.1.35 DESC 'Name Form\
    \ Description' )\n   Values in this syntax are encoded according to the following\
    \ BNF.\n   Implementors should note that future versions of this document may\n\
    \   have expanded this BNF to include additional terms.\n      NameFormDescription\
    \ = \"(\" whsp\n          numericoid whsp  ; NameForm identifier\n          [\
    \ \"NAME\" qdescrs ]\n          [ \"DESC\" qdstring ]\n          [ \"OBSOLETE\"\
    \ whsp ]\n          \"OC\" woid         ; Structural ObjectClass\n          \"\
    MUST\" oids       ; AttributeTypes\n          [ \"MAY\" oids ]    ; AttributeTypes\n\
    \      whsp \")\"\n"
- title: 6.23. Numeric String
  contents:
  - "6.23. Numeric String\n   ( 1.3.6.1.4.1.1466.115.121.1.36 DESC 'Numeric String'\
    \ )\n   The encoding of a string in this syntax is the string value itself.\n\
    \   Example:\n      1997\n"
- title: 6.24. Object Class Description
  contents:
  - "6.24. Object Class Description\n   ( 1.3.6.1.4.1.1466.115.121.1.37 DESC 'Object\
    \ Class Description' )\n   Values in this syntax are encoded according to the\
    \ BNF in section\n   4.4.\n"
- title: 6.25. OID
  contents:
  - "6.25. OID\n   ( 1.3.6.1.4.1.1466.115.121.1.38 DESC 'OID' )\n   Values in the\
    \ Object Identifier syntax are encoded according to\n   the BNF in section 4.1\
    \ for \"oid\".\n   Example:\n      1.2.3.4\n      cn\n"
- title: 6.26. Other Mailbox
  contents:
  - "6.26. Other Mailbox\n   ( 1.3.6.1.4.1.1466.115.121.1.39 DESC 'Other Mailbox'\
    \ )\n   Values in this syntax are encoded according to the following BNF:\n  \
    \    otherMailbox = mailbox-type \"$\" mailbox\n      mailbox-type = printablestring\n\
    \      mailbox = <an encoded IA5 String>\n   In the above, mailbox-type represents\
    \ the type of mail system in\n   which the mailbox resides, for example \"MCIMail\"\
    ; and mailbox is the\n   actual mailbox in the mail system defined by mailbox-type.\n"
- title: 6.27. Postal Address
  contents:
  - "6.27. Postal Address\n   ( 1.3.6.1.4.1.1466.115.121.1.41 DESC 'Postal Address'\
    \ )\n   Values in this syntax are encoded according to the following BNF:\n  \
    \    postal-address = dstring *( \"$\" dstring )\n   In the above, each dstring\
    \ component of a postal address value is\n   encoded as a value of type Directory\
    \ String syntax.  Backslashes and\n   dollar characters, if they occur in the\
    \ component, are quoted as\n   described in section 4.3.   Many servers limit\
    \ the postal address to\n   six lines of up to thirty characters.\n   Example:\n\
    \      1234 Main St.$Anytown, CA 12345$USA\n      \\241,000,000 Sweepstakes$PO\
    \ Box 1000000$Anytown, CA 12345$USA\n"
- title: 6.28. Presentation Address
  contents:
  - "6.28. Presentation Address\n   ( 1.3.6.1.4.1.1466.115.121.1.43 DESC 'Presentation\
    \ Address' )\n   Values in this syntax are encoded with the representation described\n\
    \   in RFC 1278 [6].\n"
- title: 6.29. Printable String
  contents:
  - "6.29. Printable String\n   ( 1.3.6.1.4.1.1466.115.121.1.44 DESC 'Printable String'\
    \ )\n   The encoding of a value in this syntax is the string value itself.\n \
    \  PrintableString is limited to the characters in production p of\n   section\
    \ 4.1.\n   Example:\n      This is a PrintableString\n"
- title: 6.30. Telephone Number
  contents:
  - "6.30. Telephone Number\n   ( 1.3.6.1.4.1.1466.115.121.1.50 DESC 'Telephone Number'\
    \ )\n   Values in this syntax are encoded as if they were Printable String\n \
    \  types.  Telephone numbers are recommended in X.520 to be in\n   international\
    \ form, as described in E.123 [15].\n   Example:\n      +1 512 305 0280\n"
- title: 6.31. UTC Time
  contents:
  - "6.31. UTC Time\n   ( 1.3.6.1.4.1.1466.115.121.1.53 DESC 'UTC Time' )\n   Values\
    \ in this syntax are encoded as if they were printable strings\n   with the strings\
    \ containing a UTCTime value.  This is historical; new\n   attribute definitions\
    \ SHOULD use GeneralizedTime instead.\n"
- title: 6.32. LDAP Syntax Description
  contents:
  - "6.32. LDAP Syntax Description\n   ( 1.3.6.1.4.1.1466.115.121.1.54 DESC 'LDAP\
    \ Syntax Description' )\n   Values in this syntax are encoded according to the\
    \ BNF in section\n   4.3.3.\n"
- title: 6.33. DIT Structure Rule Description
  contents:
  - "6.33. DIT Structure Rule Description\n   ( 1.3.6.1.4.1.1466.115.121.1.17 DESC\
    \ 'DIT Structure Rule Description'\n   )\n   Values with this syntax are encoded\
    \ according to the following BNF:\n      DITStructureRuleDescription = \"(\" whsp\n\
    \          ruleidentifier whsp            ; DITStructureRule identifier\n    \
    \      [ \"NAME\" qdescrs ]\n          [ \"DESC\" qdstring ]\n          [ \"OBSOLETE\"\
    \ whsp ]\n          \"FORM\" woid whsp               ; NameForm\n          [ \"\
    SUP\" ruleidentifiers whsp ] ; superior DITStructureRules\n      \")\"\n     \
    \ ruleidentifier = integer\n      ruleidentifiers = ruleidentifier |\n       \
    \   \"(\" whsp ruleidentifierlist whsp \")\"\n      ruleidentifierlist = [ ruleidentifier\
    \ *( ruleidentifier ) ]\n"
- title: 7. Object Classes
  contents:
  - "7. Object Classes\n   Servers SHOULD recognize all the names of standard classes\
    \ from\n   section 7 of [12].\n"
- title: 7.1. Extensible Object Class
  contents:
  - "7.1. Extensible Object Class\n   The extensibleObject object class, if present\
    \ in an entry, permits\n   that entry to optionally hold any attribute.  The MAY\
    \ attribute list\n   of this class is implicitly the set of all attributes.\n\
    \    ( 1.3.6.1.4.1.1466.101.120.111 NAME 'extensibleObject'\n      SUP top AUXILIARY\
    \ )\n   The mandatory attributes of the other object classes of this entry\n \
    \  are still required to be present.\n   Note that not all servers will implement\
    \ this object class, and those\n   which do not will reject requests to add entries\
    \ which contain this\n   object class, or modify an entry to add this object class.\n"
- title: 7.2. subschema
  contents:
  - "7.2. subschema\n   This object class is used in the subschema entry.\n    ( 2.5.20.1\
    \ NAME 'subschema' AUXILIARY\n      MAY ( dITStructureRules $ nameForms $ ditContentRules\
    \ $\n      objectClasses $ attributeTypes $ matchingRules $\n      matchingRuleUse\
    \ ) )\n   The ldapSyntaxes operational attribute may also be present in\n   subschema\
    \ entries.\n"
- title: 8. Matching Rules
  contents:
  - "8. Matching Rules\n   Servers which implement the extensibleMatch filter SHOULD\
    \ allow all\n   the matching rules listed in this section to be used in the\n\
    \   extensibleMatch.  In general these servers SHOULD allow matching\n   rules\
    \ to be used with all attribute types known to the server, when\n   the assertion\
    \ syntax of the matching rule is the same as the value\n   syntax of the attribute.\n\
    \   Servers MAY implement additional matching rules.\n"
- title: 8.1. Matching Rules used in Equality Filters
  contents:
  - "8.1. Matching Rules used in Equality Filters\n   Servers SHOULD be capable of\
    \ performing the following matching rules.\n   For all these rules, the assertion\
    \ syntax is the same as the value\n   syntax.\n    ( 2.5.13.0 NAME 'objectIdentifierMatch'\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.38 )\n   If the client supplies a filter\
    \ using an objectIdentifierMatch whose\n   matchValue oid is in the \"descr\"\
    \ form, and the oid is not recognized\n   by the server, then the filter is Undefined.\n\
    \    ( 2.5.13.1 NAME 'distinguishedNameMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.12\
    \ )\n    ( 2.5.13.2 NAME 'caseIgnoreMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.15\
    \ )\n    ( 2.5.13.8 NAME 'numericStringMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.36\
    \ )\n    ( 2.5.13.11 NAME 'caseIgnoreListMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.41\
    \ )\n    ( 2.5.13.14 NAME 'integerMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.27\
    \ )\n    ( 2.5.13.16 NAME 'bitStringMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.6\
    \ )\n    ( 2.5.13.20 NAME 'telephoneNumberMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.50\
    \ )\n    ( 2.5.13.22 NAME 'presentationAddressMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.43\
    \ )\n    ( 2.5.13.23 NAME 'uniqueMemberMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.34\
    \ )\n    ( 2.5.13.24 NAME 'protocolInformationMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.42\
    \ )\n    ( 2.5.13.27 NAME 'generalizedTimeMatch'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.24\
    \ )\n    ( 1.3.6.1.4.1.1466.109.114.1 NAME 'caseExactIA5Match'\n      SYNTAX 1.3.6.1.4.1.1466.115.121.1.26\
    \ )\n    ( 1.3.6.1.4.1.1466.109.114.2 NAME 'caseIgnoreIA5Match'\n      SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.26 )\n   When performing the caseIgnoreMatch, caseIgnoreListMatch,\n\
    \   telephoneNumberMatch, caseExactIA5Match and caseIgnoreIA5Match,\n   multiple\
    \ adjoining whitespace characters are treated the same as an\n   individual space,\
    \ and leading and trailing whitespace is ignored.\n   Clients MUST NOT assume\
    \ that servers are capable of transliteration\n   of Unicode values.\n"
- title: 8.2. Matching Rules used in Inequality Filters
  contents:
  - "8.2. Matching Rules used in Inequality Filters\n   Servers SHOULD be capable\
    \ of performing the following matching rules,\n   which are used in greaterOrEqual\
    \ and lessOrEqual filters.\n    ( 2.5.13.28 NAME 'generalizedTimeOrderingMatch'\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.24 )\n    ( 2.5.13.3 NAME 'caseIgnoreOrderingMatch'\n\
    \      SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )\n   The sort ordering for a caseIgnoreOrderingMatch\
    \ is implementation-\n   dependent.\n"
- title: 8.3. Syntax and Matching Rules used in Substring Filters
  contents:
  - "8.3. Syntax and Matching Rules used in Substring Filters\n   The Substring Assertion\
    \ syntax is used only as the syntax of\n   assertion values in the extensible\
    \ match.  It is not used as the\n   syntax of attributes, or in the substring\
    \ filter.\n   ( 1.3.6.1.4.1.1466.115.121.1.58 DESC 'Substring Assertion' )\n \
    \  The Substring Assertion is encoded according to the following BNF:\n      substring\
    \ = [initial] any [final]\n      initial = value\n      any = \"*\" *(value \"\
    *\")\n      final = value\n   The <value> production is UTF-8 encoded string.\
    \  Should the backslash\n   or asterix characters be present in a production of\
    \ <value>, they are\n   quoted as described in section 4.3.\n   Servers SHOULD\
    \ be capable of performing the following matching rules,\n   which are used in\
    \ substring filters.\n   ( 2.5.13.4 NAME 'caseIgnoreSubstringsMatch'\n    SYNTAX\
    \ 1.3.6.1.4.1.1466.115.121.1.58 )\n   ( 2.5.13.21 NAME 'telephoneNumberSubstringsMatch'\n\
    \    SYNTAX 1.3.6.1.4.1.1466.115.121.1.58 )\n   ( 2.5.13.10 NAME 'numericStringSubstringsMatch'\n\
    \    SYNTAX 1.3.6.1.4.1.1466.115.121.1.58 )\n"
- title: 8.4. Matching Rules for Subschema Attributes
  contents:
  - "8.4. Matching Rules for Subschema Attributes\n   Servers which allow subschema\
    \ entries to be modified by clients MUST\n   support the following matching rules,\
    \ as they are the equality\n   matching rules for several of the subschema attributes.\n\
    \   ( 2.5.13.29 NAME 'integerFirstComponentMatch'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.27\
    \ )\n   ( 2.5.13.30 NAME 'objectIdentifierFirstComponentMatch'\n     SYNTAX 1.3.6.1.4.1.1466.115.121.1.38\
    \ )\n   Implementors should note that the assertion syntax of these matching\n\
    \   rules, an INTEGER or OID, is different from the value syntax of\n   attributes\
    \ for which this is the equality matching rule.\n   If the client supplies an\
    \ extensible filter using an\n   objectIdentifierFirstComponentMatch whose matchValue\
    \ is in the\n   \"descr\" form, and the OID is not recognized by the server, then\
    \ the\n   filter is Undefined.\n"
- title: 9. Security Considerations
  contents:
  - '9. Security Considerations

    '
- title: 9.1. Disclosure
  contents:
  - "9.1. Disclosure\n   Attributes of directory entries are used to provide descriptive\n\
    \   information about the real-world objects they represent, which can be\n  \
    \ people, organizations or devices.  Most countries have privacy laws\n   regarding\
    \ the publication of information about people.\n"
- title: 9.2. Use of Attribute Values in Security Applications
  contents:
  - "9.2. Use of Attribute Values in Security Applications\n   The transformations\
    \ of an AttributeValue value from its X.501 form to\n   an LDAP string representation\
    \ are not always reversible back to the\n   same BER or DER form.  An example\
    \ of a situation which requires the\n   DER form of a distinguished name is the\
    \ verification of an X.509\n   certificate.\n   For example, a distinguished name\
    \ consisting of one RDN with one AVA,\n   in which the type is commonName and\
    \ the value is of the TeletexString\n   choice with the letters 'Sam' would be\
    \ represented in LDAP as the\n   string CN=Sam.  Another distinguished name in\
    \ which the value is\n   still 'Sam' but of the PrintableString choice would have\
    \ the same\n   representation CN=Sam.\n   Applications which require the reconstruction\
    \ of the DER form of the\n   value SHOULD NOT use the string representation of\
    \ attribute syntaxes\n   when converting a value to LDAP format.  Instead it SHOULD\
    \ use the\n   Binary syntax.\n"
- title: 10. Acknowledgements
  contents:
  - "10. Acknowledgements\n   This document is based substantially on RFC 1778, written\
    \ by Tim\n   Howes, Steve Kille, Wengyik Yeong and Colin Robbins.\n   Many of\
    \ the attribute syntax encodings defined in this and related\n   documents are\
    \ adapted from those used in the QUIPU and the IC R3\n   X.500 implementations.\
    \ The contributions of the authors of both these\n   implementations in the specification\
    \ of syntaxes are gratefully\n   acknowledged.\n"
- title: 11. Authors' Addresses
  contents:
  - "11. Authors' Addresses\n   Mark Wahl\n   Critical Angle Inc.\n   4815 West Braker\
    \ Lane #502-385\n   Austin, TX 78759\n   USA\n   Phone:  +1 512 372-3160\n   EMail:\
    \  M.Wahl@critical-angle.com\n   Andy Coulbeck\n   Isode Inc.\n   9390 Research\
    \ Blvd Suite 305\n   Austin, TX 78759\n   USA\n   Phone:  +1 512 231-8993\n  \
    \ EMail:  A.Coulbeck@isode.com\n   Tim Howes\n   Netscape Communications Corp.\n\
    \   501 E. Middlefield Rd, MS MV068\n   Mountain View, CA 94043\n   USA\n   Phone:\
    \  +1 650 937-3419\n   EMail:   howes@netscape.com\n   Steve Kille\n   Isode Limited\n\
    \   The Dome, The Square\n   Richmond\n   TW9 1DT\n   UK\n   Phone:  +44-181-332-9091\n\
    \   EMail:  S.Kille@isode.com\n"
- title: 12. Bibliography
  contents:
  - "12. Bibliography\n   [1] Wahl, M., Howes, T., and S. Kille, \"Lightweight Directory\
    \ Access\n       Protocol (v3)\", RFC 2251, December 1997.\n   [2] The Directory:\
    \ Selected Attribute Types.  ITU-T Recommendation\n       X.520, 1993.\n   [3]\
    \ The Directory: Models. ITU-T Recommendation X.501, 1993.\n   [4] Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate Requirement\n       Levels\", RFC 2119,\
    \ March 1997.\n   [5] Wahl, M., Kille, S., and T. Howes, \"Lightweight Directory\
    \ Access\n       Protocol (v3): UTF-8 String Representation of\n       Distinguished\
    \ Names\", RFC 2253, December 1997.\n   [6] Kille, S., \"A String Representation\
    \ for Presentation Addresses\",\n       RFC 1278, November 1991.\n   [7] Terminal\
    \ Equipment and Protocols for Telematic Services -\n       Standardization of\
    \ Group 3 facsimile apparatus for document\n       transmission.  CCITT, Recommendation\
    \ T.4.\n   [8] JPEG File Interchange Format (Version 1.02).  Eric Hamilton,\n\
    \       C-Cube Microsystems, Milpitas, CA, September 1, 1992.\n   [9] Yergeau,\
    \ F., \"UTF-8, a transformation format of Unicode and ISO\n       10646\", RFC\
    \ 2044, October 1996.\n   [10] Universal Multiple-Octet Coded Character Set (UCS)\
    \ -\n        Architecture and Basic Multilingual Plane, ISO/IEC 10646-1 :\n  \
    \      1993 (With amendments).\n   [11] Hardcastle-Kille, S., \"Mapping between\
    \ X.400(1988) / ISO 10021\n        and RFC 822\", RFC 1327, May 1992.\n   [12]\
    \ Wahl, M., \"A Summary of the X.500(96) User Schema for use\n        with LDAPv3\"\
    , RFC 2256, December 1997.\n   [13] Crocker, D., \"Standard of the Format of ARPA-Internet\
    \ Text\n        Messages\", STD 11, RFC 822, August 1982.\n   [14] ISO 3166, \"\
    Codes for the representation of names of countries\".\n   [15] ITU-T Rec. E.123,\
    \ Notation for national and international\n        telephone numbers, 1988.\n"
- title: 13.  Full Copyright Statement
  contents:
  - "13.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
