- title: __initial_text__
  contents:
  - '      Using NETCONF over the Simple Object Access Protocol (SOAP)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Network Configuration Protocol (NETCONF) is applicable to a\
    \ wide\n   range of devices in a variety of environments.  Web Services is one\n\
    \   such environment and is presently characterized by the use of the\n   Simple\
    \ Object Access Protocol (SOAP).  NETCONF finds many benefits in\n   this environment:\
    \ from the reuse of existing standards, to ease of\n   software development, to\
    \ integration with deployed systems.  Herein,\n   we describe SOAP over HTTP and\
    \ SOAP over Blocks Exchange Extensible\n   Protocol (BEEP) bindings for NETCONF.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. SOAP Background for NETCONF .....................................3\n  \
    \    2.1. Use and Storage of WSDL and XSD ............................4\n    \
    \  2.2. SOAP over HTTP .............................................4\n      2.3.\
    \ HTTP Drawbacks .............................................4\n      2.4. BCP56:\
    \ On the Use of HTTP as a Substrate ...................5\n      2.5. Important\
    \ HTTP 1.1 Features ................................6\n      2.6. SOAP over BEEP\
    \ .............................................7\n      2.7. SOAP Implementation\
    \ Considerations .........................7\n           2.7.1. SOAP Feature Exploitation\
    \ ...........................7\n           2.7.2. SOAP Headers ........................................7\n\
    \           2.7.3. SOAP Faults .........................................8\n  \
    \ 3. A SOAP Service for NETCONF ......................................9\n    \
    \  3.1. Fundamental Use Case .......................................9\n      3.2.\
    \ NETCONF Session Establishment ..............................9\n      3.3. NETCONF\
    \ Capabilities Exchange ..............................9\n      3.4. NETCONF Session\
    \ Usage .....................................11\n      3.5. NETCONF Session Teardown\
    \ ..................................11\n      3.6. A NETCONF over SOAP Example\
    \ ...............................11\n      3.7. NETCONF SOAP WSDL .........................................13\n\
    \      3.8. Sample Service Definition WSDL ............................14\n  \
    \ 4. Security Considerations ........................................15\n    \
    \  4.1. Integrity, Privacy, and Authentication ....................15\n      4.2.\
    \ Vulnerabilities ...........................................16\n      4.3. Environmental\
    \ Specifics ...................................16\n   5. IANA Considerations ............................................17\n\
    \   6. References .....................................................17\n  \
    \    6.1. Normative References ......................................17\n    \
    \  6.2. Informative References ....................................18\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Given the use of Extensible Markup Language (XML) [2] and\
    \ the remote\n   procedure call characteristics, it is natural to consider a binding\n\
    \   of the NETCONF [1] operations to a SOAP [3] application protocol.\n   This\
    \ document proposes a binding of this form.\n   In general, SOAP is a natural\
    \ messaging scheme for NETCONF,\n   essentially because of the remote procedure\
    \ call character of both.\n   However, care must be taken with SOAP over HTTP\
    \ as it is inherently\n   synchronous and client-driven.  SOAP over BEEP [11]\
    \ is technically\n   superior, but is not as widely adopted.\n   Four basic topics\
    \ are presented: SOAP specifics of interest to\n   NETCONF, specifics on implementing\
    \ NETCONF as a SOAP-based web\n   service, security considerations, and functional\
    \ Web Services\n   Description Language (WSDL) definitions.  In some sense, the\
    \ most\n   important part of the document is the brief WSDL document presented\n\
    \   in Section 3.7.  With the right tools, the WSDL combined with the\n   base\
    \ NETCONF XML Schemas provides machine-readable descriptions\n   sufficient for\
    \ the development of software applications using\n   NETCONF.\n   The key words\
    \ \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\"\
    , \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document\
    \ are to be interpreted as described in RFC 2119 [8].\n"
- title: 2.  SOAP Background for NETCONF
  contents:
  - "2.  SOAP Background for NETCONF\n   Why introduce SOAP as yet another wrapper\
    \ around what is already a\n   remote procedure call message?  There are, in fact,\
    \ both technical\n   and practical reasons.  The technical reasons are perhaps\
    \ less\n   compelling, but let's examine them first.\n   The use of SOAP does\
    \ offer a few technical advantages.  SOAP is\n   fundamentally an XML messaging\
    \ scheme (which is capable of supporting\n   remote procedure call), and it defines\
    \ a simple message format\n   composed of a \"header\" and a \"body\" contained\
    \ within an \"envelope\".\n   The \"header\" contains meta-information relating\
    \ to the message and\n   can be used to indicate such things as store-and-forward\
    \ behaviour or\n   transactional characteristics.  In addition, SOAP specifies\
    \ an\n   optional encoding for the \"body\" of the message.  However, this\n \
    \  encoding is not applicable to NETCONF as one of the goals is to have\n   highly\
    \ readable XML, and SOAP-encoding is optimized instead for ease\n   of automated\
    \ de-serialization.  These benefits of the SOAP message\n   structure are simple,\
    \ but worthwhile because they are already\n   standardized.\n   It is the practical\
    \ reasons that truly make SOAP an interesting\n   choice for device management.\
    \  It is not difficult to invent a\n   mechanism for exchanging XML messages over\
    \ TCP, but what is difficult\n   is getting that mechanism supported in a wide\
    \ variety of tools and\n   operating systems and having that mechanism understood\
    \ by a great\n   many developers.  SOAP over HTTP (with WSDL) is seeing good success\n\
    \   at this, and this means that a device management protocol making use\n   of\
    \ these technologies has advantages in being implemented and\n   adopted.  Admittedly,\
    \ there are interoperability problems with SOAP\n   and WSDL, but such problems\
    \ have wide attention and can be expected\n   to be resolved.\n"
- title: 2.1.  Use and Storage of WSDL and XSD
  contents:
  - "2.1.  Use and Storage of WSDL and XSD\n   One of the advantages of using machine-readable\
    \ formats (such as Web\n   Services Description Language (WSDL) [16] and XML Schemas\
    \ [4]) is\n   that they can be used automatically in the software development\n\
    \   process.  With appropriate tools, WSDL and XSD can be used to\n   generate\
    \ classes that act as remote interfaces or\n   application-specific data structures.\
    \  Other uses, such as document\n   generation and service location, are also\
    \ common.  A great innovation\n   found with many XML-based definition languages\
    \ is the use of\n   hyperlinks for referring to documents containing supporting\n\
    \   definitions.\n     <import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    \n             location=\"http://www.iana.org/assignments/xml-registry/\n    \
    \                   schema/netconf.xsd\" />\n   For instance, in WSDL, the above\
    \ import statement imports the\n   definitions of XML types and elements from\
    \ the base NETCONF schema.\n   Ideally, the file containing that schema is hosted\
    \ on a web server\n   under the authority of the standards body that defined the\
    \ schema.\n   In this way, dependent standards can be built up over time, and\
    \ all\n   are accessible to automated software tools that ensure adherence to\n\
    \   the standards.  The IANA-maintained registry for this purpose is\n   described\
    \ in \"The IETF XML Registry\" [13].\n   Note that WSDL declarations for SOAP\
    \ over BEEP bindings are not yet\n   standardized.\n"
- title: 2.2.  SOAP over HTTP
  contents:
  - "2.2.  SOAP over HTTP\n   Although SOAP focuses on messages and can be bound to\
    \ different\n   underlying protocols such as HTTP, SMTP, or BEEP, most existing\
    \ SOAP\n   implementations support only HTTP or HTTP/TLS.\n   There are a number\
    \ of advantages to considering SOAP over protocols\n   other than HTTP, as HTTP\
    \ assigns the very distinct client and server\n   roles by connection initiation.\
    \  This causes difficulties in\n   supporting asynchronous notification and can\
    \ be relieved in many ways\n   by replacing HTTP with BEEP.\n"
- title: 2.3.  HTTP Drawbacks
  contents:
  - "2.3.  HTTP Drawbacks\n   HTTP is not the ideal transport for messaging, but it\
    \ is adequate for\n   the most basic interpretation of \"remote procedure call\"\
    .  HTTP is\n   based on a communication pattern whereby the client (which initiates\n\
    \   the TCP connection) makes a \"request\" to the server.  The server\n   returns\
    \ a \"response\", and this process is continued (possibly over a\n   persistent\
    \ connection, as described below).  This matches the basic\n   idea of a remote\
    \ procedure call where the caller invokes a procedure\n   on a remote server and\
    \ waits for the return value.\n   Potential criticisms of HTTP could include the\
    \ following:\n   o  Server-initiated data flow is awkward to provide.\n   o  Headers\
    \ are verbose and text-based\n   o  Idle connections may be closed by intermediate\
    \ proxies\n   o  Data encapsulation must adhere to Multipurpose Internet Mail\n\
    \      Extensions (MIME) [15].\n   o  Bulk transfer relies on stream-based ordering.\n\
    \   In many ways, these criticisms are directed at particular compromises\n  \
    \ in the design of HTTP.  As such, they are important to consider, but\n   it\
    \ is not clear that they result in fatal drawbacks for a device\n   management\
    \ protocol.\n"
- title: '2.4.  BCP56: On the Use of HTTP as a Substrate'
  contents:
  - "2.4.  BCP56: On the Use of HTTP as a Substrate\n   Best Current Practice 56 [6]\
    \ presents a number of important\n   considerations on the use of HTTP in application\
    \ protocols.  In\n   particular, it raises the following concerns:\n   o  HTTP\
    \ may be more complex than is necessary for the application.\n   o  The use of\
    \ HTTP may mask the application from some firewalls.\n   o  A substantially new\
    \ service should not reuse port 80 as assigned\n      to HTTP.\n   o  HTTP caching\
    \ may mask connection state.\n   Fundamentally, these concerns lie directly with\
    \ common usage of SOAP\n   over HTTP, rather than the application of SOAP over\
    \ HTTP to NETCONF.\n   As BCP 56 indicates, it is debatable whether HTTP is an\
    \ appropriate\n   protocol for SOAP at all, and it is likely that BEEP would be\
    \ a\n   superior protocol for most SOAP applications.  Unfortunately, SOAP\n \
    \  over HTTP is in common use and must be supported if the practical\n   benefits\
    \ of SOAP are to be realized.  Note that the verbose nature of\n   SOAP actually\
    \ makes it more readily processed by firewalls, albeit\n   firewalls designed\
    \ to process SOAP messages.\n   HTTP caches SHOULD NOT be inserted between NETCONF\
    \ managers and\n   agents as NETCONF session state is tied to the state of the\n\
    \   underlying transport connection.  Three defensive actions can be\n   taken:\n\
    \   o  Caching MUST be prohibited through the use of HTTP headers Cache-\n   \
    \   Control and Pragma: no-cache.\n   o  HTTP proxies SHOULD NOT be deployed within\
    \ the management network.\n   o  Use HTTPS.\n   It is also possible to respond\
    \ to the concern on the reuse of port\n   80.  Any NETCONF SOAP service MUST always\
    \ be supported over the new\n   standard port for NETCONF over SOAP, and all conforming\n\
    \   implementations MUST default to attempting connections over this new\n   standard\
    \ port for NETCONF.  A standard port for NETCONF over SOAP\n   (over HTTP) has\
    \ been assigned in the IANA considerations of this\n   document.\n"
- title: 2.5.  Important HTTP 1.1 Features
  contents:
  - "2.5.  Important HTTP 1.1 Features\n   HTTP 1.1 [5] includes two important features\
    \ that provide for\n   relatively efficient transport of SOAP messages.  These\
    \ features are\n   \"persistent connections\" and \"chunked transfer-coding\"\
    .\n   Persistent connections allow a single TCP connection to be used\n   across\
    \ multiple HTTP requests.  This permits multiple SOAP request/\n   response message\
    \ pairs to be exchanged without the overhead of\n   creating a new TCP connection\
    \ for each request.  Given that a single\n   stream is used for both requests\
    \ and responses, it is clear that some\n   form of framing is necessary.  For\
    \ messages whose length is known in\n   advance, this is handled by the HTTP header\
    \ \"Content-length\".  For\n   messages of dynamic length, \"Chunking\" is required.\n\
    \   HTTP \"Chunking\" or \"chunked transfer-coding\" allows the sender to\n  \
    \ send an indefinite amount of binary data.  This is accomplished by\n   informing\
    \ the receiver of the size of each \"chunk\" (substring of the\n   data) before\
    \ the chunk is transmitted.  The last chunk is indicated\n   by a chunk of zero\
    \ length.  Chunking can be effectively used to\n   transfer a large XML document\
    \ where the document is generated on-line\n   from a non-XML form in memory.\n\
    \   In terms of its application to SOAP message exchanges, persistent\n   connections\
    \ are clearly important for performance reasons and are\n   particularly important\
    \ when the persistence of authenticated\n   connections is at stake.  When one\
    \ considers that messages of dynamic\n   length are the rule rather than the exception\
    \ for SOAP messages, it\n   is also clear that Chunking is very useful.  In some\
    \ cases, it is\n   possible to buffer a SOAP response and determine its length\
    \ before\n   sending, but the storage requirements for this are prohibitive for\n\
    \   many devices.  Together, these two features provide a good foundation\n  \
    \ for device management using SOAP over HTTP.  HTTP chunking and\n   persistent\
    \ connections [5] SHOULD be used.\n"
- title: 2.6.  SOAP over BEEP
  contents:
  - "2.6.  SOAP over BEEP\n   Although not widely adopted by the Web Services community,\
    \ BEEP is an\n   excellent substrate for SOAP [12].  In particular, it provides\
    \ for\n   request/response message exchanges initiated by either BEEP peer and\n\
    \   allows the number of response messages to be arbitrary (including\n   zero).\
    \  The BEEP profile for SOAP simply makes use of a single BEEP\n   channel for\
    \ exchanging SOAP messages and benefits from BEEP's\n   inherent strengths for\
    \ message exchange over a single transport\n   connection.\n"
- title: 2.7.  SOAP Implementation Considerations
  contents:
  - "2.7.  SOAP Implementation Considerations\n   It is not the goal of this document\
    \ to cover the SOAP [3]\n   specification in detail.  Instead, we provide a few\
    \ comments that may\n   be of interest to an implementor of NETCONF over SOAP.\n"
- title: 2.7.1.  SOAP Feature Exploitation
  contents:
  - "2.7.1.  SOAP Feature Exploitation\n   NETCONF over SOAP does not make extensive\
    \ use of SOAP features.  For\n   instance, NETCONF operations are not broken into\
    \ SOAP message parts,\n   and the SOAP header is not used to convey <rpc> metadata.\
    \  This is a\n   deliberate design decision as it allows the implementor to provide\n\
    \   NETCONF over multiple substrates easily while handling the messages\n   over\
    \ those different substrates in a common way.\n"
- title: 2.7.2.  SOAP Headers
  contents:
  - "2.7.2.  SOAP Headers\n   Implementers of NETCONF over SOAP should be aware of\
    \ the following\n   characteristic of SOAP headers: a SOAP header may have the\
    \ attribute\n   \"mustUnderstand\", and, if it does, the recipient must either\
    \ process\n   the header block or not process the SOAP message at all, and instead\n\
    \   generate a fault.  A \"mustUnderstand\" header must not be silently\n   discarded.\n\
    \   In general, however, SOAP headers are intended for application-\n   specific\
    \ uses.  The NETCONF SOAP binding does not make use of SOAP\n   headers.\n"
- title: 2.7.3.  SOAP Faults
  contents:
  - "2.7.3.  SOAP Faults\n   A SOAP Fault is returned in the event of a NETCONF <rpc-error>.\
    \  It\n   is constructed essentially as a wrapper for the <rpc-error>, but it\n\
    \   allows SOAP processors to propagate the <rpc-error> to application\n   code\
    \ using a language-appropriate exception mechanism.\n   A SOAP Fault is constructed\
    \ from an <rpc-error> as follows: the SOAP\n   Fault Code Value is \"Receiver\"\
    \ in the SOAP envelope namespace, the\n   SOAP Fault Reason Text is the contents\
    \ of the NETCONF <rpc-error>\n   \"error-tag\", and the SOAP Fault detail is the\
    \ original <rpc-error>\n   structure.\n   For instance, given the following <rpc-error>,\n\
    \       <rpc-error xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n      \
    \   <error-type>rpc</error-type>\n         <error-tag>MISSING_ATTRIBUTE</error-tag>\n\
    \         <error-severity>error</error-severity>\n         <error-info>\n    \
    \       <bad-attribute>message-id</bad-attribute>\n           <bad-element>rpc</bad-element>\n\
    \         </error-info>\n       </rpc-error>\n   the associated SOAP Fault message\
    \ is\n       <soapenv:Envelope\n           xmlns:soapenv=\n             \"http://www.w3.org/2003/05/soap-envelope\"\
    \n           xmlns:xml=\"http://www.w3.org/XML/1998/namespace\">\n         <soapenv:Body>\n\
    \           <soapenv:Fault>\n             <soapenv:Code>\n               <soapenv:Value>env:Receiver</soapenv:Value>\n\
    \             </soapenv:Code>\n             <soapenv:Reason>\n               <soapenv:Text\n\
    \                   xml:lang=\"en\">MISSING_ATTRIBUTE</soapenv:Text>\n       \
    \      </soapenv:Reason>\n             <detail>\n               <rpc-error xmlns=\n\
    \                   \"urn:ietf:params:xml:ns:netconf:base:1.0\">\n           \
    \      <error-type>rpc</error-type>\n                 <error-tag>MISSING_ATTRIBUTE</error-tag>\n\
    \                 <error-severity>error</error-severity>\n                 <error-info>\n\
    \                   <bad-attribute>message-id</bad-attribute>\n              \
    \     <bad-element>rpc</bad-element>\n                 </error-info>\n       \
    \        </rpc-error>\n             </detail>\n           </soapenv:Fault>\n \
    \        </soapenv:Body>\n       </soapenv:Envelope>\n"
- title: 3.  A SOAP Service for NETCONF
  contents:
  - '3.  A SOAP Service for NETCONF

    '
- title: 3.1.  Fundamental Use Case
  contents:
  - "3.1.  Fundamental Use Case\n   The fundamental use case for NETCONF over SOAP\
    \ is that of a\n   management console (\"manager\" role) managing one or more\
    \ devices\n   running NETCONF agents (\"agent\" role).  The manager initiates\
    \ an HTTP\n   or BEEP connection to an agent and drives the NETCONF session via\
    \ a\n   sequence of SOAP messages.  When the manager closes the connection,\n\
    \   the NETCONF session is also closed.\n"
- title: 3.2.  NETCONF Session Establishment
  contents:
  - "3.2.  NETCONF Session Establishment\n   A NETCONF over SOAP session is established\
    \ by the initial message\n   exchange on the underlying substrate.  For HTTP,\
    \ a NETCONF session is\n   established once a SOAP message is POSTed to the NETCONF\
    \ web\n   application URI.  For BEEP, a NETCONF session is established once the\n\
    \   BEEP profile for SOAP handshake establishes the SOAP channel.\n"
- title: 3.3.  NETCONF Capabilities Exchange
  contents:
  - "3.3.  NETCONF Capabilities Exchange\n   Capabilities exchange and session ID\
    \ establishment are performed\n   through the exchange of <hello> messages.  In\
    \ the case of SOAP over\n   HTTP, the HTTP client MUST send the first <hello>\
    \ message.  The case\n   of SOAP over BEEP imposes no ordering constraints.  For\
    \ instance, the\n   following example shows the exchange of <hello> messages and\n\
    \   establishes a session ID value of 4.  Observe that the management\n   client\
    \ initiates the exchange and the server agent assigns the\n   session ID.\n  \
    \ C: POST /netconf HTTP/1.1\n   C: Host: netconfdevice\n   C: Content-Type: text/xml;\
    \ charset=utf-8\n   C: Accept: application/soap+xml, text/*\n   C: Cache-Control:\
    \ no-cache\n   C: Pragma: no-cache\n   C: Content-Length: 376\n   C:\n   C: <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n   C: <soapenv:Envelope\n   C:   xmlns:soapenv=\"\
    http://www.w3.org/2003/05/soap-envelope\">\n   C:   <soapenv:Body>\n   C:    \
    \ <hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   C:       <capabilities>\n\
    \   C:         <capability>\n   C:           urn:ietf:params:netconf:base:1.0\n\
    \   C:         </capability>\n   C:       </capabilities>\n   C:     </hello>\n\
    \   C:   </soapenv:Body>\n   C: </soapenv:Envelope>\n   S: HTTP/1.1 200 OK\n \
    \  S: Content-Type: application/soap+xml; charset=utf-8\n   S: Content-Length:\
    \ 600\n   S:\n   S: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   S: <soapenv:Envelope\n\
    \   S:   xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\">\n   S:   <soapenv:Body>\n\
    \   S:     <hello xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\">\n   S:  \
    \     <capabilities>\n   S:         <capability>\n   S:           urn:ietf:params:netconf:base:1.0\n\
    \   S:         </capability>\n   S:         <capability>\n   S:           urn:ietf:params:netconf:capability:startup:1.0\n\
    \   S:         </capability>\n   S:         <capability>\n   S:           http:/example.net/router/2.3/myfeature\n\
    \   S:        </capability>\n   S:       </capabilities>\n   S:       <session-id>4</session-id>\n\
    \   S:     </hello>\n   S:   </soapenv:Body>\n   S: </soapenv:Envelope>\n"
- title: 3.4.  NETCONF Session Usage
  contents:
  - "3.4.  NETCONF Session Usage\n   NETCONF sessions are persistent for both performance\
    \ and semantic\n   reasons.  NETCONF session state contains the following:\n \
    \  1.  Authentication Information\n   2.  Capability Information\n   3.  Locks\n\
    \   4.  Pending Operations\n   5.  Operation Sequence Numbers\n   Authentication\
    \ must be maintained throughout a session due to the\n   fact that it is expensive\
    \ to establish.  Capability Information is\n   maintained so that appropriate\
    \ operations can be applied during a\n   session.  Locks are released upon termination\
    \ of a session as this\n   makes the protocol more robust.  Pending operations\
    \ come and go from\n   existence during the normal course of remote procedure\
    \ call (RPC)\n   operations.  Operation sequence numbers provide the small but\n\
    \   necessary state information to refer to operations during the\n   session.\n\
    \   In the case of SOAP over HTTP, a NETCONF session is supported by an\n   HTTP\
    \ connection with an authenticated user.  For SOAP over BEEP, a\n   NETCONF session\
    \ is supported by a BEEP channel operating according to\n   the BEEP profile for\
    \ SOAP [12].\n"
- title: 3.5.  NETCONF Session Teardown
  contents:
  - "3.5.  NETCONF Session Teardown\n   To allow automated cleanup, NETCONF over SOAP\
    \ session teardown takes\n   place when the underlying connection (in the case\
    \ of HTTP) or channel\n   (in the case of BEEP) is closed.  Note that the root\
    \ cause of such\n   teardown may be the closure of the TCP connection under either\
    \ HTTP\n   or BEEP as the case may be.  NETCONF managers and agents must be\n\
    \   capable of programatically closing the transport connections\n   associated\
    \ with NETCONF sessions, such as in response to a\n   <close-session> operation;\
    \ thus, the HTTP or BEEP substrate\n   implementation must expose this appropriately.\n"
- title: 3.6.  A NETCONF over SOAP Example
  contents:
  - "3.6.  A NETCONF over SOAP Example\n   Since the proposed WSDL (in Section 3.7)\
    \ uses document/literal\n   encoding, the use of a SOAP header and body has little\
    \ impact on the\n   representation of a NETCONF operation.  This example shows\
    \ HTTP/1.1\n   for simplicity.  An example for BEEP would be similar.\n   C: POST\
    \ /netconf HTTP/1.1\n   C: Host: netconfdevice\n   C: Content-Type: text/xml;\
    \ charset=utf-8\n   C: Accept: application/soap+xml, text/*\n   C: Cache-Control:\
    \ no-cache\n   C: Pragma: no-cache\n   C: Content-Length: 465\n   C:\n   C: <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n   C: <soapenv:Envelope\n   C:   xmlns:soapenv=\"\
    http://www.w3.org/2003/05/soap-envelope\">\n   C:   <soapenv:Body>\n   C:    \
    \ <rpc message-id=\"101\"\n   C:          xmlns=\"xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n   C:       <get-config>\n   C:         <filter type=\"subtree\">\n   C:  \
    \         <top xmlns=\"http://example.com/schema/1.2/config\">\n   C:        \
    \     <users/>\n   C:           </top>\n   C:         </filter>\n   C:       </get-config>\n\
    \   C:     </rpc>\n   C:   </soapenv:Body>\n   C: </soapenv:Envelope>\n   The\
    \ HTTP/1.1 response is also straightforward:\n   S: HTTP/1.1 200 OK\n   S: Content-Type:\
    \ application/soap+xml; charset=utf-8\n   S: Content-Length: 917\n   S:\n   S:\
    \ <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   S: <soapenv:Envelope\n   S: \
    \  xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\">\n   S:   <soapenv:Body>\n\
    \   S:     <rpc-reply message-id=\"101\"\n   S:                xmlns=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    >\n   S:       <data>\n   S:         <top xmlns=\"http://example.com/schema/1.2/config\"\
    >\n   S:           <users>\n   S:             <user>\n   S:               <name>root</name>\n\
    \   S:               <type>superuser</type>\n   S:               <full-name>Charlie\
    \ Root</full-name>\n   S:                 <dept>1</dept>\n   S:              \
    \   <id>1</id>\n   S:               </company-info>\n   S:             </user>\n\
    \   S:             <user>\n   S:               <name>fred</name>\n   S:      \
    \         <type>admin</type>\n   S:               <full-name>Fred Flintstone</full-name>\n\
    \   S:                 <dept>2</dept>\n   S:                 <id>2</id>\n   S:\
    \               </company-info>\n   S:             </user>\n   S:           </users>\n\
    \   S:         </top>\n   S:       </data>\n   S:     </rpc-reply>\n   S:   </soapenv:Body>\n\
    \   S: </soapenv:Envelope>\n"
- title: 3.7.  NETCONF SOAP WSDL
  contents:
  - "3.7.  NETCONF SOAP WSDL\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <definitions\n\
    \     xmlns=\"http://schemas.xmlsoap.org/wsdl/\"\n     xmlns:SOAP=\"http://schemas.xmlsoap.org/wsdl/soap/\"\
    \n     xmlns:tns=\"urn:ietf:params:xml:ns:netconf:soap:1.0\"\n     xmlns:netb=\"\
    urn:ietf:params:xml:ns:netconf:base:1.0\"\n     targetNamespace=\"urn:ietf:params:xml:ns:netconf:soap:1.0\"\
    \n     name=\"netconf-soap_1.0.wsdl\">\n     <import namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"\
    \n             location=\"http://www.iana.org/assignments/xml-registry/\n    \
    \                   schema/netconf.xsd\" />\n     <message name=\"helloRequest\"\
    >\n       <part name=\"in\" element=\"netb:hello\"/>\n     </message>\n     <message\
    \ name=\"helloResponse\">\n       <part name=\"out\" element=\"netb:hello\"/>\n\
    \     </message>\n     <message name=\"rpcRequest\">\n       <part name=\"in\"\
    \ element=\"netb:rpc\"/>\n     </message>\n     <message name=\"rpcResponse\"\
    >\n       <part name=\"out\" element=\"netb:rpc-reply\"/>\n     </message>\n \
    \    <portType name=\"netconfPortType\">\n       <operation name=\"rpc\">\n  \
    \       <input message=\"tns:rpcRequest\"/>\n         <output message=\"tns:rpcResponse\"\
    />\n       </operation>\n       <operation name=\"hello\">\n         <input message=\"\
    tns:helloRequest\"/>\n         <output message=\"tns:helloResponse\"/>\n     \
    \  </operation>\n     </portType>\n     <binding name=\"netconfBinding\" type=\"\
    tns:netconfPortType\">\n       <SOAP:binding style=\"document\"\n            transport=\"\
    http://schemas.xmlsoap.org/soap/http\"/>\n       <operation name=\"hello\">\n\
    \         <SOAP:operation/>\n         <input>\n           <SOAP:body use=\"literal\"\
    \n                namespace=\"urn:ietf:params:xml:ns:netconf:soap:1.0\"/>\n  \
    \       </input>\n         <output>\n           <SOAP:body use=\"literal\"\n \
    \               namespace=\"urn:ietf:params:xml:ns:netconf:soap:1.0\"/>\n    \
    \     </output>\n       </operation>\n       <operation name=\"rpc\">\n      \
    \   <SOAP:operation/>\n         <input>\n           <SOAP:body use=\"literal\"\
    \n                namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"/>\n  \
    \       </input>\n         <output>\n           <SOAP:body use=\"literal\"\n \
    \               namespace=\"urn:ietf:params:xml:ns:netconf:base:1.0\"/>\n    \
    \     </output>\n       </operation>\n     </binding>\n   </definitions>\n"
- title: 3.8.  Sample Service Definition WSDL
  contents:
  - "3.8.  Sample Service Definition WSDL\n   The following WSDL document assumes\
    \ a local location for the NETCONF\n   over SOAP WSDL definitions.  A typical\
    \ deployment of a device\n   manageable via NETCONF over SOAP would provide a\
    \ service definition\n   similar to the following to identify the address of the\
    \ device.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <definitions\n  \
    \   xmlns=\"http://schemas.xmlsoap.org/wsdl/\"\n     xmlns:SOAP=\"http://schemas.xmlsoap.org/wsdl/soap/\"\
    \n     xmlns:nets=\"urn:ietf:params:xml:ns:netconf:soap:1.0\"\n     targetNamespace=\"\
    urn:myNetconfService\"\n     name=\"myNetconfService.wsdl\">\n     <import namespace=\"\
    urn:ietf:params:xml:ns:netconf:soap:1.0\"\n             location=\"http://localhost:8080/netconf/\n\
    \                       schema/netconf-soap_1.0.wsdl\"/>\n     <service name=\"\
    netconf\">\n       <port name=\"netconfPort\" binding=\"nets:netconfBinding\"\
    >\n         <SOAP:address location=\"http://localhost:8080/netconf\"/>\n     \
    \  </port>\n     </service>\n   </definitions>\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   NETCONF is used to access and modify configuration\
    \ information, so\n   the ability to access this protocol should be limited to\
    \ users and\n   systems that are authorized to view or modify the agent's\n  \
    \ configuration data.\n   Because configuration information is sent in both directions,\
    \ it is\n   not sufficient for just the client or user to be authenticated with\n\
    \   the server.  The identity of the server should also be authenticated\n   with\
    \ the client.\n   Configuration data may include sensitive information, such as\
    \ user\n   names or security keys.  So, NETCONF should only be used over\n   communications\
    \ channels that provide strong encryption for data\n   privacy.\n   If the NETCONF\
    \ server provides remote access through insecure\n   protocols, such as HTTP,\
    \ care should be taken to prevent execution of\n   the NETCONF program when strong\
    \ user authentication or data privacy\n   is not available.\n   The IANA assigned\
    \ port SHOULD be used, as this provides a means for\n   efficient firewall filtering\
    \ during possible denial-of-service\n   attacks.\n"
- title: 4.1.  Integrity, Privacy, and Authentication
  contents:
  - "4.1.  Integrity, Privacy, and Authentication\n   The NETCONF SOAP binding relies\
    \ on an underlying secure transport for\n   integrity and privacy.  Such transports\
    \ are expected to include TLS\n   [9] (which, when combined with HTTP, is referred\
    \ to as HTTPS) and\n   IPsec.  There are a number of options for authentication\
    \ (some of\n   which are deployment-specific):\n   o  within the transport (such\
    \ as with TLS client certificates)\n   o  within HTTP (such as Digest Access Authentication\
    \ [7])\n   o  within SOAP (such as a digital signature in the header [17])\n \
    \  HTTP, BEEP, and SOAP level authentication can be integrated with\n   Remote\
    \ Authentication Dial-In User Service (RADIUS) [10] to support\n   remote authentication\
    \ databases.\n   At a miniumum, all conforming NETCONF over SOAP implementations\
    \ MUST\n   support TLS.  Specifically, NETCONF over SOAP over HTTP MUST support\n\
    \   NETCONF over SOAP over HTTPS, and NETCONF over SOAP over BEEP MUST\n   support\
    \ NETCONF over SOAP over BEEP over TLS.\n"
- title: 4.2.  Vulnerabilities
  contents:
  - "4.2.  Vulnerabilities\n   The above protocols may have various vulnerabilities,\
    \ and these may\n   be inherited by NETCONF over SOAP.\n   NETCONF itself may\
    \ have vulnerabilities because an authorization\n   model is not currently specified.\n\
    \   It is important that device capabilities and authorization remain\n   constant\
    \ for the duration of any outstanding NETCONF session.  In the\n   case of NETCONF,\
    \ it is important to consider that device management\n   may be taking place over\
    \ multiple substrates (in addition to SOAP),\n   and it is important that the\
    \ different substrates have a common\n   authentication model.\n"
- title: 4.3.  Environmental Specifics
  contents:
  - "4.3.  Environmental Specifics\n   Some deployments of NETCONF over SOAP may choose\
    \ to use transports\n   without encryption.  This presents vulnerabilities but\
    \ may be\n   selected for deployments involving closed networks or debugging\n\
    \   scenarios.\n   A device managed by NETCONF may interact (over protocols besides\n\
    \   NETCONF) with devices managed by other protocols, all of differing\n   security.\
    \  Each point of entry brings with it a potential\n   vulnerability.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA assigned TCP port (833) for NETCONF over SOAP\
    \ over BEEP, and TCP\n   port (832) for NETCONF over SOAP over HTTPS.\n   IANA\
    \ will allow for the assignment of an XML namespace within the\n   NETCONF namespace\
    \ \"urn:ietf:params:xml:ns:netconf\" for the NETCONF\n   over SOAP WSDL definitions.\
    \  Following the policies outlined in RFC\n   2434 [14], assigned values in this\
    \ subordinate namespace are\n   requested to be allocated according to the \"\
    Specification Required\"\n   policy.\n   URI: urn:ietf:params:xml:ns:netconf:soap\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [1]   Enns, R., Ed., \"NETCONF Configuration Protocol\"\
    , RFC 4741,\n         December 2006.\n   [2]   Bray, T., Paoli, J., Sperberg-McQueen,\
    \ C., and E. Maler,\n         \"Extensible Markup Language (XML) 1.0 (Second Edition)\"\
    , W3C\n         REC REC-xml-20001006, October 2000,\n         <http://www.w3.org/TR/2000/REC-xml-20001006>.\n\
    \   [3]   Gudgin, M., Hadley, M., Moreau, JJ., and H. Nielsen, \"SOAP\n      \
    \   Version 1.2 Part 1: Messaging Framework\", W3C\n         Recommendation REC-soap12-part1-20030624,\
    \ June 2002,\n         <http://www.w3.org/TR/soap12-part1/>.\n   [4]   Thompson,\
    \ H., Beech, D., Maloney, M., and N. Mendelsohn, \"XML\n         Schema Part 1:\
    \ Structures\", W3C Recommendation REC-xmlschema-\n         1-20010502, May 2001,\n\
    \         <http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/>.\n   [5]   Fielding,\
    \ R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L.,\n         Leach, P., and\
    \ T. Berners-Lee, \"Hypertext Transfer Protocol --\n         HTTP/1.1\", RFC 2616,\
    \ June 1999.\n   [6]   Moore, K., \"On the use of HTTP as a Substrate\", RFC 3205,\n\
    \         February 2002.\n   [7]   Franks, J., Hallam-Baker, P., Hostetler, J.,\
    \ Leach, P.,\n         Luotonen, A., Sink, E., and L. Stewart, \"HTTP Authentication:\n\
    \         Basic and Digest Access Authentication\", RFC 2617, June 1999.\n   [8]\
    \   Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n       \
    \  Levels\", RFC 2119, March 1997.\n   [9]   Dierks, T. and E. Rescorla, \"The\
    \ Transport Layer Security (TLS)\n         Protocol Version 1.1\", RFC 4346, April\
    \ 2006.\n   [10]  Rigney, C., Willens, S., Rubens, A., and W. Simpson, \"Remote\n\
    \         Authentication Dial In User Service (RADIUS)\", RFC 2865,\n        \
    \ June 2000.\n   [11]  Rose, M., \"The Blocks Extensible Exchange Protocol Core\"\
    ,\n         RFC 3080, March 2001.\n   [12]  O'Tuathail, E. and M. Rose, \"Using\
    \ the Simple Object Access\n         Protocol (SOAP) in Blocks Extensible Exchange\
    \ Protocol (BEEP)\",\n         RFC 4227, January 2006.\n   [13]  Mealling, M.,\
    \ \"The IETF XML Registry\", RFC 3688, January 2004.\n   [14]  Alvestrand, H.\
    \ and T. Narten, \"Guidelines for Writing an IANA\n         Considerations Section\
    \ in RFCs\", RFC 2434, October 1998.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [15]  Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n         Extensions (MIME) Part One: Format of Internet Message\
    \ Bodies\",\n         RFC 2045, November 1996.\n   [16]  Christensen, E., Curbera,\
    \ F., Meredith, G., and S. Weerawarana,\n         \"Web Services Description Language\
    \ (WSDL) 1.1\", W3C Note NOTE-\n         wsdl-20010315, March 2001,\n        \
    \ <http://www.w3.org/TR/2001/NOTE-wsdl-20010315>.\n   [17]  Brown, A., Fox, B.,\
    \ Hada, S., LaMacchia, B., and H. Maruyama,\n         \"SOAP Security Extensions:\
    \ Digital Signature\", W3C Note NOTE-\n         SOAP-dsig-20010206, Feb 2001,\n\
    \         <http://www.w3.org/TR/SOAP-dsig/>.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Ted Goddard\n   ICEsoft Technologies Inc.\n   Suite 300,\
    \ 1717 10th St. NW\n   Calgary, AB  T2M 4S2\n   Canada\n   Phone: (403) 663-3322\n\
    \   EMail: ted.goddard@icesoft.com\n   URI:   http://www.icesoft.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2006).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST,\n   AND THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES,\n   EXPRESS OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT\n   THE USE OF THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY\n   IMPLIED WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR\n   PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
