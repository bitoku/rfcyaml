- title: __initial_text__
  contents:
  - '             Diffie-Hellman Proof-of-Possession Algorithms

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes two methods for producing an integrity check\n\
    \   value from a Diffie-Hellman key pair.  This behavior is needed for\n   such\
    \ operations as creating the signature of a PKCS #10 certification\n   request.\
    \  These algorithms are designed to provide a proof-of-\n   possession rather\
    \ than general purpose signing.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   PKCS #10 [RFC2314] defines a syntax for certification requests.\
    \ It\n   assumes that the public key being requested for certification\n   corresponds\
    \ to an algorithm that is capable of signing/encrypting.\n   Diffie-Hellman (DH)\
    \ is a key agreement algorithm and as such cannot\n   be directly used for signing\
    \ or encryption.\n   This document describes two new proof-of-possession algorithms\
    \ using\n   the Diffie-Hellman key agreement process to provide a shared secret\n\
    \   as the basis of an integrity check value.  In the first algorithm,\n   the\
    \ value is constructed for a specific recipient/verifier by using a\n   public\
    \ key of that verifier.  In the second algorithm, the value is\n   constructed\
    \ for arbitrary verifiers.\n"
- title: 2. Terminology
  contents:
  - "2. Terminology\n   The following definitions will be used in this document\n\
    \   DH certificate = a certificate whose SubjectPublicKey is a DH public\n   value\
    \ and is signed with any signature algorithm (e.g. RSA or DSA).\n"
- title: 3. Static DH Proof-of-Possession Process
  contents:
  - "3. Static DH Proof-of-Possession Process\n   The steps for creating a DH POP\
    \ are:\n   1. An entity (E) chooses the group parameters for a DH key\n      agreement.\n\
    \      This is done simply by selecting the group parameters from a\n      certificate\
    \ for the recipient of the POP process.\n      A certificate with the correct\
    \ group parameters has to be\n      available. Let these common DH parameters\
    \ be g and p; and let\n      this DH key-pair be known as the Recipient key pair\
    \ (Rpub and\n      Rpriv).\n      Rpub = g^x mod p         (where x=Rpriv, the\
    \ private DH value and\n                                ^ denotes exponentiation)\n\
    \   2. The entity generates a DH public/private key-pair using the\n      parameters\
    \ from step 1.\n      For an entity E:\n         Epriv = DH private value = y\n\
    \         Epub  = DH public value  = g^y mod p\n   3. The POP computation process\
    \ will then consist of:\n      a) The value to be signed is obtained. (For a RFC2314\
    \ object, the\n         value is the DER encoded certificationRequestInfo field\n\
    \         represented as an octet string.) This will be the `text'\n         referred\
    \ to in [RFC2104], the data to which HMAC-SHA1 is\n         applied.\n      b)\
    \ A shared DH secret is computed, as follows,\n                shared secret =\
    \ ZZ = g^xy mod p\n         [This is done by the entity E as Rpub^y and by the\
    \ Recipient\n         as Epub^x, where Rpub is retrieved from the Recipient's\
    \ DH\n         certificate (or is the one that was locally generated by the\n\
    \         Entity) and Epub is retrieved from the actual certification\n      \
    \   request.]\n      c) A temporary key K is derived from the shared secret ZZ\
    \ as\n         follows:\n            K = SHA1(LeadingInfo | ZZ | TrailingInfo),\n\
    \               where \"|\" means concatenation.\n            LeadingInfo ::=\
    \ Subject Distinguished Name from certificate\n            TrailingInfo ::= Issuer\
    \ Distinguished Name from certificate\n      d) Compute HMAC-SHA1 over the data\
    \ `text' as per [RFC2104] as:\n            SHA1(K XOR opad, SHA1(K XOR ipad, text))\n\
    \         where,\n            opad (outer pad) = the byte 0x36 repeated 64 times\
    \ and\n            ipad (inner pad) = the byte 0x5C repeated 64 times.\n     \
    \    Namely,\n          (1)  Append zeros to the end of K to create a 64 byte\
    \ string\n               (e.g., if K is of length 16 bytes it will be appended\n\
    \               with 48 zero bytes 0x00).\n          (2)  XOR (bitwise exclusive-OR)\
    \ the 64 byte string computed\n               in step (1) with ipad.\n       \
    \   (3)  Append the data stream `text' to the 64 byte string\n               resulting\
    \ from step (2).\n          (4)  Apply SHA1 to the stream generated in step (3).\n\
    \          (5)  XOR (bitwise exclusive-OR) the 64 byte string computed\n     \
    \          in step (1) with opad.\n          (6)  Append the SHA1 result from\
    \ step (4) to the 64 byte\n               string resulting from step (5).\n  \
    \        (7)  Apply SHA1 to the stream generated in step (6) and\n           \
    \    output the result.\n         Sample code is also provided in [RFC2104].\n\
    \      e) The output of (d) is encoded as a BIT STRING (the Signature\n      \
    \   value).\n   The POP verification process requires the Recipient to carry out\n\
    \   steps (a) through (d) and then simply compare the result of step (d)\n   with\
    \ what it received as the signature component. If they match then\n   the following\
    \ can be concluded:\n      a) The Entity possesses the private key corresponding\
    \ to the\n         public key in the certification request because it needed the\n\
    \         private key to calculate the shared secret; and\n      b) Only the Recipient\
    \ that the entity sent the request to could\n         actually verify the request\
    \ because they would require their\n         own private key to compute the same\
    \ shared secret. In the case\n         where the recipient is a Certification\
    \ Authority, this\n         protects the Entity from rogue CAs.\n   ASN Encoding\n\
    \   The ASN.1 structures associated with the static Diffie-Hellman POP\n   algorithm\
    \ are:\n      id-dhPop-static-HMAC-SHA1 OBJECT IDENTIFIER ::= { id-pkix\n    \
    \     id-alg(6) 3}\n      DhPopStatic ::= SEQUENCE {\n         issuerAndSerial\
    \ IssuerAndSerialNumber OPTIONAL,\n         hashValue       MessageDigest\n  \
    \    }\n     issuerAndSerial is the issuer name and serial number of the\n   \
    \  certificate from which the public key was obtained.  The\n     issuerAndSerial\
    \ field is omitted if the public key did not come\n     from a certificate.\n\
    \     hashValue contains the result of the SHA-1 HMAC operation in step\n    \
    \ 3d.\n   DhPopStatic is encoded as a BIT STRING and is the signature value\n\
    \   (i.e. encodes the above sequence instead of the raw output from 3d).\n"
- title: 4. Discrete Logarithm Signature
  contents:
  - "4. Discrete Logarithm Signature\n   The use of a single set of parameters for\
    \ an entire public key\n   infrastructure allows all keys in the group to be attacked\
    \ together.\n   For this reason we need to create a proof of possession for Diffie-\n\
    \   Hellman keys that does not require the use of a common set of\n   parameters.\n\
    \   This POP is based on the Digital Signature Algorithm, but we have\n   removed\
    \ the restrictions imposed by the [FIPS-186] standard.  The use\n   of this method\
    \ does impose some additional restrictions on the set of\n   keys that may be\
    \ used, however if the key generation algorithm\n   documented in [DH-X9.42] is\
    \ used the required restrictions are met.\n   The additional restrictions are\
    \ the requirement for the existence of\n   a q parameter. Adding the q parameter\
    \ is generally accepted as a good\n   practice as it allows for checking of small\
    \ group attacks.\n   The following definitions are used in the rest of this section:\n\
    \      p is a large prime\n      g = h(p-1)/q mod p ,\n         where h is any\
    \ integer 1 < h < p-1 such that h(p-1) mod q > 1\n         (g has order q mod\
    \ p)\n      q is a large prime\n      j is a large integer such that p = qj +\
    \ 1\n      x is a randomly or pseudo-randomly generated integer with\n       \
    \  1 < x < q\n      y = g^x mod p\n   Note: These definitions match the ones in\
    \ [DH-X9.42].\n"
- title: 4.1 Expanding the Digest Value
  contents:
  - "4.1 Expanding the Digest Value\n   Besides the addition of a q parameter, [FIPS-186]\
    \ also imposes size\n   restrictions on the parameters.  The length of q must\
    \ be 160-bits\n   (matching output of the SHA-1 digest algorithm) and length of\
    \ p must\n   be 1024-bits.  The size restriction on p is eliminated in this\n\
    \   document, but the size restriction on q is replaced with the\n   requirement\
    \ that q must be at least 160-bits.  (The size restriction\n   on q is identical\
    \ with that in [DH-X9.42].)\n   Given that there is not a random length-hashing\
    \ algorithm, a hash\n   value of the message will need to be derived such that\
    \ the hash is in\n   the range from 0 to q-1.  If the length of q is greater than\
    \ 160-bits\n   then a method must be provided to expand the hash length.\n   The\
    \ method for expanding the digest value used in this section does\n   not add\
    \ any additional security beyond the 160-bits provided by SHA-\n   1.  The value\
    \ being signed is increased mainly to enhance the\n   difficulty of reversing\
    \ the signature process.\n   This algorithm produces m the value to be signed.\n\
    \   Let L = the size of q (i.e. 2^L <= q < 2^(L+1)).  Let M be the\n   original\
    \ message to be signed.\n   1. Compute d = SHA-1(M), the SHA-1 digest of the original\
    \ message.\n   2. If L == 160 then m = d.\n   3. If L > 160 then follow steps\
    \ (a) through (d) below.\n      a) Set n = L / 160, where / represents integer\
    \ division,\n         consequently, if L = 200, n = 1.\n      b) Set m = d, the\
    \ initial computed digest value.\n      c) For i = 0 to n - 1\n         m = m\
    \ | SHA(m),  where \"|\" means concatenation.\n      d) m = LEFTMOST(m, L-1),\
    \ where LEFTMOST returns the L-1 left most\n         bits of m.\n   Thus the final\
    \ result of the process meets the criteria that 0 <= m <\n   q.\n"
- title: 4.2 Signature Computation Algorithm
  contents:
  - "4.2 Signature Computation Algorithm\n   The signature algorithm produces the\
    \ pair of values (r, s), which is\n   the signature. The signature is computed\
    \ as follows:\n   Given m, the value to be signed, as well as the parameters defined\n\
    \   earlier in section 5.\n   1. Generate a random or pseudorandom integer k,\
    \ such that 0 < k^-1 <\n      q.\n   2. Compute r = (g^k mod p) mod q.\n   3.\
    \ If r is zero, repeat from step 1.\n   4. Compute s = (k^-1 (m + xr)) mod q.\n\
    \   5. If s is zero, repeat from step 1.\n"
- title: 4.3 Signature Verification Algorithm
  contents:
  - "4.3 Signature Verification Algorithm\n   The signature verification process is\
    \ far more complicated than is\n   normal for the Digital Signature Algorithm,\
    \ as some assumptions about\n   the validity of parameters cannot be taken for\
    \ granted.\n   Given a message m to be validated, the signature value pair (r,\
    \ s)\n   and the parameters for the key.\n   1. Perform a strong verification\
    \ that p is a prime number.\n   2. Perform a strong verification that q is a prime\
    \ number.\n   3. Verify that q is a factor of p-1, if any of the above checks\
    \ fail\n      then the signature cannot be verified and must be considered a\n\
    \      failure.\n   4. Verify that r and s are in the range [1, q-1].\n   5. Compute\
    \ w = (s^-1) mod q.\n   6. Compute u1 = m*w mod q.\n   7. Compute u2 = r*w mod\
    \ q.\n   8. Compute v = ((g^u1 * y^u2) mod p) mod q.\n   9. Compare v and r, if\
    \ they are the same then the signature verified\n      correctly.\n"
- title: 4.4 ASN Encoding
  contents:
  - "4.4 ASN Encoding\n   The signature is encoded using\n      id-alg-dhPOP OBJECT\
    \ IDENTIFIER ::= {id-pkix id-alg(6) 4}\n   The parameters for id-alg-dhPOP are\
    \ encoded as DomainParameters\n   (imported from [PROFILE]).  The parameters may\
    \ be omitted in the\n   signature, as they must exist in the associated key request.\n\
    \   The signature value pair r and s are encoded using Dss-Sig-Value\n   (imported\
    \ from [PROFILE]).\n"
- title: 5. Security Considerations
  contents:
  - "5. Security Considerations\n   In the static DH POP algorithm, an appropriate\
    \ value can be produced\n   by either party.  Thus this algorithm only provides\
    \ integrity and not\n   origination service.  The Discrete Logarithm algorithm\
    \ provides both\n   integrity checking and origination checking.\n   All the security\
    \ in this system is provided by the secrecy of the\n   private keying material.\
    \ If either sender or recipient private keys\n   are disclosed, all messages sent\
    \ or received using that key are\n   compromised. Similarly, loss of the private\
    \ key results in an\n   inability to read messages sent using that key.\n   Selection\
    \ of parameters can be of paramount importance.  In the\n   selection of parameters\
    \ one must take into account the\n   community/group of entities that one wishes\
    \ to be able to communicate\n   with.  In choosing a set of parameters one must\
    \ also be sure to avoid\n   small groups.  [FIPS-186] Appendixes 2 and 3 contain\
    \ information on\n   the selection of parameters.  The practices outlined in this\
    \ document\n   will lead to better selection of parameters.\n"
- title: 6. References
  contents:
  - "6. References\n   [FIPS-186]  Federal Information Processing Standards Publication\n\
    \               (FIPS PUB) 186, \"Digital Signature Standard\", 1994 May\n   \
    \            19.\n   [RFC2314]   Kaliski, B., \"PKCS #10: Certification Request\
    \ Syntax\n               v1.5\", RFC 2314, October 1997.\n   [RFC2104]   Krawczyk,\
    \ H., Bellare, M., and R. Canetti, \"HMAC: Keyed-\n               Hashing for\
    \ Message Authentication\", RFC 2104, February\n               1997.\n   [PROFILE]\
    \   Housley, R., Ford, W., Polk, W., and D. Solo, \"Internet\n               X.509\
    \ Public Key Infrastructure: Certificate and CRL\n               Profile\", RFC\
    \ 2459, January 1999.\n   [DH-X9.42]  Rescorla, E., \"Diffie-Hellman Key Agreement\
    \ Method\", RFC\n               2631, June 1999.\n"
- title: 7. Authors' Addresses
  contents:
  - "7. Authors' Addresses\n   Hemma Prafullchandra\n   Critical Path Inc.\n   5150\
    \ El Camino Real, #A-32\n   Los Altos, CA 94022\n   Phone: (640) 694-6812\n  \
    \ EMail: hemma@cp.net\n   Jim Schaad\n   EMail: jimsch@exmsft.com\n"
- title: Appendix A.  ASN.1 Module
  contents:
  - "Appendix A.  ASN.1 Module\n   DH-Sign DEFINITIONS IMPLICIT TAGS ::=\n   BEGIN\n\
    \   --EXPORTS ALL\n   -- The types and values defined in this module are exported\
    \ for use\n   -- in the other ASN.1 modules. Other applications may use them\n\
    \   -- for their own purposes.\n   IMPORTS\n      IssuerAndSerialNumber, MessageDigest\n\
    \      FROM CryptographicMessageSyntax { iso(1) member-body(2)\n           us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n           modules(0) cms(1) }\n\
    \      Dss-Sig-Value, DomainParameters\n      FROM PKIX1Explicit88 {iso(1) identified-organization(3)\
    \ dod(6)\n           internet(1) security(5) mechanisms(5) pkix(7) id-mod(0)\n\
    \           id-pkix1-explicit-88(1)};\n      id-dh-sig-hmac-sha1 OBJECT IDENTIFIER\
    \ ::= {id-pkix id-alg(6) 3}\n      DhSigStatic ::= SEQUENCE {\n          IssuerAndSerial\
    \ IssuerAndSerialNumber OPTIONAL,\n          hashValue       MessageDigest\n \
    \     }\n      id-alg-dh-pop OBJECT IDENTIFIER ::= {id-pkix id-alg(6) 4}\n   END\n"
- title: Appendix B. Example of Static DH Proof-of-Possession
  contents:
  - "Appendix B. Example of Static DH Proof-of-Possession\n   The following example\
    \ follows the steps described earlier in section\n   3.\n   Step 1: Establishing\
    \ common Diffie-Hellman parameters. Assume the\n   parameters are as in the DER\
    \ encoded certificate. The certificate\n   contains a DH public key signed by\
    \ a CA with a DSA signing key.\n  0 30 939: SEQUENCE {\n  4 30 872:   SEQUENCE\
    \ {\n  8 A0   3:     [0] {\n 10 02   1:       INTEGER 2\n          :       }\n\
    \ 13 02   6:     INTEGER\n          :       00 DA 39 B6 E2 CB\n 21 30  11:   \
    \  SEQUENCE {\n 23 06   7:       OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040\
    \ 4 3)\n 32 05   0:       NULL\n          :       }\n 34 30  72:     SEQUENCE\
    \ {\n 36 31  11:       SET {\n 38 30   9:         SEQUENCE {\n 40 06   3:    \
    \       OBJECT IDENTIFIER countryName (2 5 4 6)\n 45 13   2:           PrintableString\
    \ 'US'\n          :           }\n          :         }\n 49 31  17:       SET\
    \ {\n 51 30  15:         SEQUENCE {\n 53 06   3:           OBJECT IDENTIFIER organizationName\
    \ (2 5 4 10)\n 58 13   8:           PrintableString 'XETI Inc'\n          :  \
    \         }\n          :         }\n 68 31  16:       SET {\n 70 30  14:     \
    \    SEQUENCE {\n 72 06   3:           OBJECT IDENTIFIER organizationalUnitName\
    \ (2 5 4\n"
- title: 11)
  contents:
  - "11)\n 77 13   7:           PrintableString 'Testing'\n          :           }\n\
    \          :         }\n 86 31  20:       SET {\n 88 30  18:         SEQUENCE\
    \ {\n 90 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n 95 13  11:\
    \           PrintableString 'Root DSA CA'\n          :           }\n         \
    \ :         }\n          :       }\n"
- title: '108 30  30:     SEQUENCE {'
  contents:
  - '108 30  30:     SEQUENCE {

    '
- title: '110 17  13:       UTCTime ''990914010557Z'''
  contents:
  - '110 17  13:       UTCTime ''990914010557Z''

    '
- title: '125 17  13:       UTCTime ''991113010557Z'''
  contents:
  - "125 17  13:       UTCTime '991113010557Z'\n          :       }\n"
- title: '140 30  70:     SEQUENCE {'
  contents:
  - '140 30  70:     SEQUENCE {

    '
- title: '142 31  11:       SET {'
  contents:
  - '142 31  11:       SET {

    '
- title: '144 30   9:         SEQUENCE {'
  contents:
  - '144 30   9:         SEQUENCE {

    '
- title: '146 06   3:           OBJECT IDENTIFIER countryName (2 5 4 6)'
  contents:
  - '146 06   3:           OBJECT IDENTIFIER countryName (2 5 4 6)

    '
- title: '151 13   2:           PrintableString ''US'''
  contents:
  - "151 13   2:           PrintableString 'US'\n          :           }\n       \
    \   :         }\n"
- title: '155 31  17:       SET {'
  contents:
  - '155 31  17:       SET {

    '
- title: '157 30  15:         SEQUENCE {'
  contents:
  - '157 30  15:         SEQUENCE {

    '
- title: '159 06   3:           OBJECT IDENTIFIER organizationName (2 5 4 10)'
  contents:
  - '159 06   3:           OBJECT IDENTIFIER organizationName (2 5 4 10)

    '
- title: '164 13   8:           PrintableString ''XETI Inc'''
  contents:
  - "164 13   8:           PrintableString 'XETI Inc'\n          :           }\n \
    \         :         }\n"
- title: '174 31  16:       SET {'
  contents:
  - '174 31  16:       SET {

    '
- title: '176 30  14:         SEQUENCE {'
  contents:
  - '176 30  14:         SEQUENCE {

    '
- title: '178 06   3:           OBJECT IDENTIFIER organizationalUnitName (2 5 4'
  contents:
  - '178 06   3:           OBJECT IDENTIFIER organizationalUnitName (2 5 4

    '
- title: 11)
  contents:
  - '11)

    '
- title: '183 13   7:           PrintableString ''Testing'''
  contents:
  - "183 13   7:           PrintableString 'Testing'\n          :           }\n  \
    \        :         }\n"
- title: '192 31  18:       SET {'
  contents:
  - '192 31  18:       SET {

    '
- title: '194 30  16:         SEQUENCE {'
  contents:
  - '194 30  16:         SEQUENCE {

    '
- title: '196 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)'
  contents:
  - '196 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)

    '
- title: '201 13   9:           PrintableString ''DH TestCA'''
  contents:
  - "201 13   9:           PrintableString 'DH TestCA'\n          :           }\n\
    \          :         }\n          :       }\n"
- title: '212 30 577:     SEQUENCE {'
  contents:
  - '212 30 577:     SEQUENCE {

    '
- title: '216 30 438:       SEQUENCE {'
  contents:
  - '216 30 438:       SEQUENCE {

    '
- title: '220 06   7:         OBJECT IDENTIFIER dhPublicKey (1 2 840 10046 2 1)'
  contents:
  - '220 06   7:         OBJECT IDENTIFIER dhPublicKey (1 2 840 10046 2 1)

    '
- title: '229 30 425:         SEQUENCE {'
  contents:
  - '229 30 425:         SEQUENCE {

    '
- title: '233 02 129:           INTEGER'
  contents:
  - "233 02 129:           INTEGER\n          :             00 94 84 E0 45 6C 7F 69\
    \ 51 62 3E 56 80 7C 68 E7\n          :             C5 A9 9E 9E 74 74 94 ED 90\
    \ 8C 1D C4 E1 4A 14 82\n          :             F5 D2 94 0C 19 E3 B9 10 BB 11\
    \ B9 E5 A5 FB 8E 21\n          :             51 63 02 86 AA 06 B8 21 36 B6 7F\
    \ 36 DF D1 D6 68\n          :             5B 79 7C 1D 5A 14 75 1F 6A 93 75 93\
    \ CE BB 97 72\n          :             8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6\
    \ F6 2B C2\n          :             32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A\
    \ F5 02\n          :             D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03\
    \ 85\n          :             27\n"
- title: '365 02 128:           INTEGER'
  contents:
  - "365 02 128:           INTEGER\n          :             26 A6 32 2C 5A 2B D4 33\
    \ 2B 5C DC 06 87 53 3F 90\n          :             06 61 50 38 3E D2 B9 7D 81\
    \ 1C 12 10 C5 0C 53 D4\n          :             64 D1 8E 30 07 08 8C DD 3F 0A\
    \ 2F 2C D6 1B 7F 57\n          :             86 D0 DA BB 6E 36 2A 18 E8 D3 BC\
    \ 70 31 7A 48 B6\n          :             4E 18 6E DD 1F 22 06 EB 3F EA D4 41\
    \ 69 D9 9B DE\n          :             47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33\
    \ 51 C8 F1\n          :             39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15\
    \ 26 48\n          :             95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1\
    \ CD\n"
- title: '496 02  33:           INTEGER'
  contents:
  - "496 02  33:           INTEGER\n          :             00 E8 72 FA 96 F0 11 40\
    \ F5 F2 DC FD 3B 5D 78 94\n          :             B1 85 01 E5 69 37 21 F7 25\
    \ B9 BA 71 4A FC 60 30\n          :             FB\n"
- title: '531 02  97:           INTEGER'
  contents:
  - "531 02  97:           INTEGER\n          :             00 A3 91 01 C0 A8 6E A4\
    \ 4D A0 56 FC 6C FE 1F A7\n          :             B0 CD 0F 94 87 0C 25 BE 97\
    \ 76 8D EB E5 A4 09 5D\n          :             AB 83 CD 80 0B 35 67 7F 0C 8E\
    \ A7 31 98 32 85 39\n          :             40 9D 11 98 D8 DE B8 7F 86 9B AF\
    \ 8D 67 3D B6 76\n          :             B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87\
    \ DD D8 71 56\n          :             68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6\
    \ 70 9E E2\n          :             92\n"
- title: '630 30  26:           SEQUENCE {'
  contents:
  - '630 30  26:           SEQUENCE {

    '
- title: '632 03  21:             BIT STRING 0 unused bits'
  contents:
  - "632 03  21:             BIT STRING 0 unused bits\n          :             1C\
    \ D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB\n          :             09 E4\
    \ 98 34\n"
- title: '655 02   1:             INTEGER 55'
  contents:
  - "655 02   1:             INTEGER 55\n          :             }\n          :  \
    \         }\n          :         }\n"
- title: '658 03 132:       BIT STRING 0 unused bits'
  contents:
  - "658 03 132:       BIT STRING 0 unused bits\n          :         02 81 80 5F CF\
    \ 39 AD 62 CF 49 8E D1 CE 66 E2 B1\n          :         E6 A7 01 4D 05 C2 77 C8\
    \ 92 52 42 A9 05 A4 DB E0\n          :         46 79 50 A3 FC 99 3D 3D A6 9B A9\
    \ AD BC 62 1C 69\n          :         B7 11 A1 C0 2A F1 85 28 F7 68 FE D6 8F 31\
    \ 56 22\n          :         4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9 ED CE 05 EF\n\
    \          :         D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21\n       \
    \   :         E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31\n          :   \
    \      4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0\n          :         8F\
    \ C5 1A\n          :       }\n"
- title: '793 A3  85:     [3] {'
  contents:
  - '793 A3  85:     [3] {

    '
- title: '795 30  83:       SEQUENCE {'
  contents:
  - '795 30  83:       SEQUENCE {

    '
- title: '797 30  29:         SEQUENCE {'
  contents:
  - '797 30  29:         SEQUENCE {

    '
- title: '799 06   3:           OBJECT IDENTIFIER subjectKeyIdentifier (2 5 29'
  contents:
  - '799 06   3:           OBJECT IDENTIFIER subjectKeyIdentifier (2 5 29

    '
- title: 14)
  contents:
  - '14)

    '
- title: '804 04  22:           OCTET STRING'
  contents:
  - "804 04  22:           OCTET STRING\n          :             04 14 80 DF 59 88\
    \ BF EB 17 E1 AD 5E C6 40 A3 42\n          :             E5 AC D3 B4 88 78\n \
    \         :           }\n"
- title: '828 30  34:         SEQUENCE {'
  contents:
  - '828 30  34:         SEQUENCE {

    '
- title: '830 06   3:           OBJECT IDENTIFIER authorityKeyIdentifier (2 5 29'
  contents:
  - '830 06   3:           OBJECT IDENTIFIER authorityKeyIdentifier (2 5 29

    '
- title: 35)
  contents:
  - '35)

    '
- title: '835 01   1:           BOOLEAN TRUE'
  contents:
  - '835 01   1:           BOOLEAN TRUE

    '
- title: '838 04  24:           OCTET STRING'
  contents:
  - "838 04  24:           OCTET STRING\n          :             30 16 80 14 6A 23\
    \ 37 55 B9 FD 81 EA E8 4E D3 C9\n          :             B7 09 E5 7B 06 E3 68\
    \ AA\n          :           }\n"
- title: '864 30  14:         SEQUENCE {'
  contents:
  - '864 30  14:         SEQUENCE {

    '
- title: '866 06   3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)'
  contents:
  - '866 06   3:           OBJECT IDENTIFIER keyUsage (2 5 29 15)

    '
- title: '871 01   1:           BOOLEAN TRUE'
  contents:
  - '871 01   1:           BOOLEAN TRUE

    '
- title: '874 04   4:           OCTET STRING'
  contents:
  - "874 04   4:           OCTET STRING\n          :             03 02 03 08\n   \
    \       :           }\n          :         }\n          :       }\n          :\
    \     }\n"
- title: '880 30  11:   SEQUENCE {'
  contents:
  - '880 30  11:   SEQUENCE {

    '
- title: '882 06   7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)'
  contents:
  - '882 06   7:     OBJECT IDENTIFIER dsaWithSha1 (1 2 840 10040 4 3)

    '
- title: '891 05   0:     NULL'
  contents:
  - "891 05   0:     NULL\n          :     }\n"
- title: '893 03  48:   BIT STRING 0 unused bits'
  contents:
  - "893 03  48:   BIT STRING 0 unused bits\n          :     30 2D 02 14 7C 6D D2\
    \ CA 1E 32 D1 30 2E 29 66 BC\n          :     06 8B 60 C7 61 16 3B CA 02 15 00\
    \ 8A 18 DD C1 83\n          :     58 29 A2 8A 67 64 03 92 AB 02 CE 00 B5 94 6A\n\
    \          :   }\n   Step 2. End Entity/User generates a Diffie-Hellman key-pair\
    \ using the\n   parameters from the CA certificate.\n   EE DH public key: SunJCE\
    \ Diffie-Hellman Public Key:\n   Y: 13 63 A1 85 04 8C 46 A8 88 EB F4 5E A8 93\
    \ 74 AE\n      FD AE 9E 96 27 12 65 C4 4C 07 06 3E 18 FE 94 B8\n      A8 79 48\
    \ BD 2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A\n      0B 2D 9E 50 C9 78 0F AE 6A EC\
    \ B5 6B 6A BE B2 5C\n      DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E 0B 59 4A\n \
    \     93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8 29 98 EC\n      D1 B0 CA 2B 6F 7A\
    \ 8B DB 4E 8D A5 15 7E 7E AF 33\n      62 09 9E 0F 11 44 8C C1 8D A2 11 9E 53\
    \ EF B2 E8\n   EE DH private key:\n   X: 32 CC BD B4 B7 7C 44 26 BB 3C 83 42 6E\
    \ 7D 1B 00\n      86 35 09 71 07 A0 A4 76 B8 DB 5F EC 00 CE 6F C3\n   Step 3.\
    \ Compute K and the signature.\n   LeadingInfo: DER encoded Subject/Requestor\
    \ DN (as in the generated\n   Certificate Signing Request)\n     30 4E 31 0B 30\
    \ 09 06 03 55 04 06 13 02 55 53 31\n     11 30 0F 06 03 55 04 0A 13 08 58 45 54\
    \ 49 20 49\n     6E 63 31 10 30 0E 06 03 55 04 0B 13 07 54 65 73\n     74 69 6E\
    \ 67 31 1A 30 18 06 03 55 04 03 13 11 50\n     4B 49 58 20 45 78 61 6D 70 6C 65\
    \ 20 55 73 65 72\n   TrailingInfo: DER encoded Issuer/Recipient DN (from the certificate\n\
    \   described in step 1)\n     30 46 31 0B 30 09 06 03 55 04 06 13 02 55 53 31\n\
    \     11 30 0F 06 03 55 04 0A 13 08 58 45 54 49 20 49\n     6E 63 31 10 30 0E\
    \ 06 03 55 04 0B 13 07 54 65 73\n     74 69 6E 67 31 12 30 10 06 03 55 04 03 13\
    \ 09 44\n     48 20 54 65 73 74 43 41\n   K:\n     F4 D7 BB 6C C7 2D 21 7F 1C\
    \ 38 F7 DA 74 2D 51 AD\n     14 40 66 75\n   TBS: the text for computing the SHA-1\
    \ HMAC.\n   30 82 02 98 02 01 00 30 4E 31 0B 30 09 06 03 55\n   04 06 13 02 55\
    \ 53 31 11 30 0F 06 03 55 04 0A 13\n   08 58 45 54 49 20 49 6E 63 31 10 30 0E\
    \ 06 03 55\n   04 0B 13 07 54 65 73 74 69 6E 67 31 1A 30 18 06\n   03 55 04 03\
    \ 13 11 50 4B 49 58 20 45 78 61 6D 70\n   6C 65 20 55 73 65 72 30 82 02 41 30\
    \ 82 01 B6 06\n   07 2A 86 48 CE 3E 02 01 30 82 01 A9 02 81 81 00\n   94 84 E0\
    \ 45 6C 7F 69 51 62 3E 56 80 7C 68 E7 C5\n   A9 9E 9E 74 74 94 ED 90 8C 1D C4\
    \ E1 4A 14 82 F5\n   D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51\n   63 02\
    \ 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68 5B\n   79 7C 1D 5A 14 75 1F 6A 93 75\
    \ 93 CE BB 97 72 8A\n   F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32\n   E1\
    \ 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7\n   B6 A8 63 94 83 B0 1B 31 7D\
    \ 52 1A DE E5 03 85 27\n   02 81 80 26 A6 32 2C 5A 2B D4 33 2B 5C DC 06 87\n \
    \  53 3F 90 06 61 50 38 3E D2 B9 7D 81 1C 12 10 C5\n   0C 53 D4 64 D1 8E 30 07\
    \ 08 8C DD 3F 0A 2F 2C D6\n   1B 7F 57 86 D0 DA BB 6E 36 2A 18 E8 D3 BC 70 31\n\
    \   7A 48 B6 4E 18 6E DD 1F 22 06 EB 3F EA D4 41 69\n   D9 9B DE 47 95 7A 72 91\
    \ D2 09 7F 49 5C 3B 03 33\n   51 C8 F1 39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31\n\
    \   15 26 48 95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E\n   DA D1 CD 02 21 00 E8 72\
    \ FA 96 F0 11 40 F5 F2 DC\n   FD 3B 5D 78 94 B1 85 01 E5 69 37 21 F7 25 B9 BA\n\
    \   71 4A FC 60 30 FB 02 61 00 A3 91 01 C0 A8 6E A4\n   4D A0 56 FC 6C FE 1F A7\
    \ B0 CD 0F 94 87 0C 25 BE\n   97 76 8D EB E5 A4 09 5D AB 83 CD 80 0B 35 67 7F\n\
    \   0C 8E A7 31 98 32 85 39 40 9D 11 98 D8 DE B8 7F\n   86 9B AF 8D 67 3D B6 76\
    \ B4 61 2F 21 E1 4B 0E 68\n   FF 53 3E 87 DD D8 71 56 68 47 DC F7 20 63 4B 3C\n\
    \   5F 78 71 83 E6 70 9E E2 92 30 1A 03 15 00 1C D5\n   3A 0D 17 82 6D 0A 81 75\
    \ 81 46 10 8E 3E DB 09 E4\n   98 34 02 01 37 03 81 84 00 02 81 80 13 63 A1 85\n\
    \   04 8C 46 A8 88 EB F4 5E A8 93 74 AE FD AE 9E 96\n   27 12 65 C4 4C 07 06 3E\
    \ 18 FE 94 B8 A8 79 48 BD\n   2E 34 B6 47 CA 04 30 A1 EC 33 FD 1A 0B 2D 9E 50\n\
    \   C9 78 0F AE 6A EC B5 6B 6A BE B2 5C DA B2 9F 78\n   2C B9 77 E2 79 2B 25 BF\
    \ 2E 0B 59 4A 93 4B F8 B3\n   EC 81 34 AE 97 47 52 E0 A8 29 98 EC D1 B0 CA 2B\n\
    \   6F 7A 8B DB 4E 8D A5 15 7E 7E AF 33 62 09 9E 0F\n   11 44 8C C1 8D A2 11 9E\
    \ 53 EF B2 E8\n   Certification Request:\n  0 30 793: SEQUENCE {\n  4 30 664:\
    \   SEQUENCE {\n  8 02   1:     INTEGER 0\n 11 30  78:     SEQUENCE {\n 13 31\
    \  11:       SET {\n 15 30   9:         SEQUENCE {\n 17 06   3:           OBJECT\
    \ IDENTIFIER countryName (2 5 4 6)\n 22 13   2:           PrintableString 'US'\n\
    \          :           }\n          :         }\n 26 31  17:       SET {\n 28\
    \ 30  15:         SEQUENCE {\n 30 06   3:           OBJECT IDENTIFIER organizationName\
    \ (2 5 4 10)\n 35 13   8:           PrintableString 'XETI Inc'\n          :  \
    \         }\n          :         }\n 45 31  16:       SET {\n 47 30  14:     \
    \    SEQUENCE {\n 49 06   3:           OBJECT IDENTIFIER organizationalUnitName\
    \ (2 5 4\n"
- title: 11)
  contents:
  - "11)\n 54 13   7:           PrintableString 'Testing'\n          :           }\n\
    \          :         }\n 63 31  26:       SET {\n 65 30  24:         SEQUENCE\
    \ {\n 67 06   3:           OBJECT IDENTIFIER commonName (2 5 4 3)\n 72 13  17:\
    \           PrintableString 'PKIX Example User'\n          :           }\n   \
    \       :         }\n          :       }\n 91 30 577:     SEQUENCE {\n 95 30 438:\
    \       SEQUENCE {\n 99 06   7:         OBJECT IDENTIFIER dhPublicKey (1 2 840\
    \ 10046 2 1)\n"
- title: '108 30 425:         SEQUENCE {'
  contents:
  - '108 30 425:         SEQUENCE {

    '
- title: '112 02 129:           INTEGER'
  contents:
  - "112 02 129:           INTEGER\n          :             00 94 84 E0 45 6C 7F 69\
    \ 51 62 3E 56 80 7C 68 E7\n          :             C5 A9 9E 9E 74 74 94 ED 90\
    \ 8C 1D C4 E1 4A 14 82\n          :             F5 D2 94 0C 19 E3 B9 10 BB 11\
    \ B9 E5 A5 FB 8E 21\n          :             51 63 02 86 AA 06 B8 21 36 B6 7F\
    \ 36 DF D1 D6 68\n          :             5B 79 7C 1D 5A 14 75 1F 6A 93 75 93\
    \ CE BB 97 72\n          :             8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6\
    \ F6 2B C2\n          :             32 E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A\
    \ F5 02\n          :             D7 B6 A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03\
    \ 85\n          :             27\n"
- title: '244 02 128:           INTEGER'
  contents:
  - "244 02 128:           INTEGER\n          :             26 A6 32 2C 5A 2B D4 33\
    \ 2B 5C DC 06 87 53 3F 90\n          :             06 61 50 38 3E D2 B9 7D 81\
    \ 1C 12 10 C5 0C 53 D4\n          :             64 D1 8E 30 07 08 8C DD 3F 0A\
    \ 2F 2C D6 1B 7F 57\n          :             86 D0 DA BB 6E 36 2A 18 E8 D3 BC\
    \ 70 31 7A 48 B6\n          :             4E 18 6E DD 1F 22 06 EB 3F EA D4 41\
    \ 69 D9 9B DE\n          :             47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33\
    \ 51 C8 F1\n          :             39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15\
    \ 26 48\n          :             95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA D1\
    \ CD\n"
- title: '375 02  33:           INTEGER'
  contents:
  - "375 02  33:           INTEGER\n          :             00 E8 72 FA 96 F0 11 40\
    \ F5 F2 DC FD 3B 5D 78 94\n          :             B1 85 01 E5 69 37 21 F7 25\
    \ B9 BA 71 4A FC 60 30\n          :             FB\n"
- title: '410 02  97:           INTEGER'
  contents:
  - "410 02  97:           INTEGER\n          :             00 A3 91 01 C0 A8 6E A4\
    \ 4D A0 56 FC 6C FE 1F A7\n          :             B0 CD 0F 94 87 0C 25 BE 97\
    \ 76 8D EB E5 A4 09 5D\n          :             AB 83 CD 80 0B 35 67 7F 0C 8E\
    \ A7 31 98 32 85 39\n          :             40 9D 11 98 D8 DE B8 7F 86 9B AF\
    \ 8D 67 3D B6 76\n          :             B4 61 2F 21 E1 4B 0E 68 FF 53 3E 87\
    \ DD D8 71 56\n          :             68 47 DC F7 20 63 4B 3C 5F 78 71 83 E6\
    \ 70 9E E2\n          :             92\n"
- title: '509 30  26:           SEQUENCE {'
  contents:
  - '509 30  26:           SEQUENCE {

    '
- title: '511 03  21:             BIT STRING 0 unused bits'
  contents:
  - "511 03  21:             BIT STRING 0 unused bits\n          :               1C\
    \ D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E\n"
- title: DB
  contents:
  - "DB\n          :               09 E4 98 34\n"
- title: '534 02   1:             INTEGER 55'
  contents:
  - "534 02   1:             INTEGER 55\n          :             }\n          :  \
    \         }\n          :         }\n"
- title: '537 03 132:       BIT STRING 0 unused bits'
  contents:
  - "537 03 132:       BIT STRING 0 unused bits\n          :         02 81 80 13 63\
    \ A1 85 04 8C 46 A8 88 EB F4 5E A8\n          :         93 74 AE FD AE 9E 96 27\
    \ 12 65 C4 4C 07 06 3E 18\n          :         FE 94 B8 A8 79 48 BD 2E 34 B6 47\
    \ CA 04 30 A1 EC\n          :         33 FD 1A 0B 2D 9E 50 C9 78 0F AE 6A EC B5\
    \ 6B 6A\n          :         BE B2 5C DA B2 9F 78 2C B9 77 E2 79 2B 25 BF 2E\n\
    \          :         0B 59 4A 93 4B F8 B3 EC 81 34 AE 97 47 52 E0 A8\n       \
    \   :         29 98 EC D1 B0 CA 2B 6F 7A 8B DB 4E 8D A5 15 7E\n          :   \
    \      7E AF 33 62 09 9E 0F 11 44 8C C1 8D A2 11 9E 53\n          :         EF\
    \ B2 E8\n          :       }\n          :     }\n"
- title: '672 30  12:   SEQUENCE {'
  contents:
  - '672 30  12:   SEQUENCE {

    '
- title: '674 06   8:     OBJECT IDENTIFIER dh-sig-hmac-sha1 (1 3 6 1 5 5 7 6 3)'
  contents:
  - '674 06   8:     OBJECT IDENTIFIER dh-sig-hmac-sha1 (1 3 6 1 5 5 7 6 3)

    '
- title: '684 05   0:     NULL'
  contents:
  - "684 05   0:     NULL\n          :     }\n"
- title: '686 03 109:   BIT STRING 0 unused bits'
  contents:
  - "686 03 109:   BIT STRING 0 unused bits\n          :     30 6A 30 52 30 48 31\
    \ 0B 30 09 06 03 55 04 06 13\n          :     02 55 53 31 11 30 0F 06 03 55 04\
    \ 0A 13 08 58 45\n          :     54 49 20 49 6E 63 31 10 30 0E 06 03 55 04 0B\
    \ 13\n          :     07 54 65 73 74 69 6E 67 31 14 30 12 06 03 55 04\n      \
    \    :     03 13 0B 52 6F 6F 74 20 44 53 41 20 43 41 02 06\n          :     00\
    \ DA 39 B6 E2 CB 04 14 1B 17 AD 4E 65 86 1A 6C\n          :     7C 85 FA F7 95\
    \ DE 48 93 C5 9D C5 24\n          :   }\n   Signature verification requires CAs\
    \ private key, the CA certificate\n   and the generated Certification Request.\n\
    \   CA DH private key:\n    x:  3E 5D AD FD E5 F4 6B 1B 61 5E 18 F9 0B 84 74 a7\n\
    \        52 1E D6 92 BC 34 94 56 F3 0C BE DA 67 7A DD 7D\n"
- title: Appendix C.  Example of Discrete Log Signature
  contents:
  - "Appendix C.  Example of Discrete Log Signature\n   Step 1. Generate a Diffie-Hellman\
    \ Key with length of q being 256-\n   bits.\n   p:\n     94 84 E0 45 6C 7F 69\
    \ 51 62 3E 56 80 7C 68 E7 C5\n     A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82\
    \ F5\n     D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21 51\n     63 02 86 AA 06\
    \ B8 21 36 B6 7F 36 DF D1 D6 68 5B\n     79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB\
    \ 97 72 8A\n     F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2 32\n     E1 89 67\
    \ BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02 D7\n     B6 A8 63 94 83 B0 1B 31 7D 52 1A\
    \ DE E5 03 85 27\n   q:\n     E8 72 FA 96 F0 11 40 F5 F2 DC FD 3B 5D 78 94 B1\n\
    \     85 01 E5 69 37 21 F7 25 B9 BA 71 4A FC 60 30 FB\n   g:\n     26 A6 32 2C\
    \ 5A 2B D4 33 2B 5C DC 06 87 53 3F 90\n     06 61 50 38 3E D2 B9 7D 81 1C 12 10\
    \ C5 0C 53 D4\n     64 D1 8E 30 07 08 8C DD 3F 0A 2F 2C D6 1B 7F 57\n     86 D0\
    \ DA BB 6E 36 2A 18 E8 D3 BC 70 31 7A 48 B6\n     4E 18 6E DD 1F 22 06 EB 3F EA\
    \ D4 41 69 D9 9B DE\n     47 95 7A 72 91 D2 09 7F 49 5C 3B 03 33 51 C8 F1\n  \
    \   39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31 15 26 48\n     95 A8 5C DE 47 88 B4\
    \ 69 3A 00 A7 86 9E DA D1 CD\n   j:\n     A3 91 01 C0 A8 6E A4 4D A0 56 FC 6C\
    \ FE 1F A7 B0\n     CD 0F 94 87 0C 25 BE 97 76 8D EB E5 A4 09 5D AB\n     83 CD\
    \ 80 0B 35 67 7F 0C 8E A7 31 98 32 85 39 40\n     9D 11 98 D8 DE B8 7F 86 9B AF\
    \ 8D 67 3D B6 76 B4\n     61 2F 21 E1 4B 0E 68 FF 53 3E 87 DD D8 71 56 68\n  \
    \   47 DC F7 20 63 4B 3C 5F 78 71 83 E6 70 9E E2 92\n   y:\n     5F CF 39 AD 62\
    \ CF 49 8E D1 CE 66 E2 B1 E6 A7 01\n     4D 05 C2 77 C8 92 52 42 A9 05 A4 DB E0\
    \ 46 79 50\n     A3 FC 99 3D 3D A6 9B A9 AD BC 62 1C 69 B7 11 A1\n     C0 2A F1\
    \ 85 28 F7 68 FE D6 8F 31 56 22 4D 0A 11\n     6E 72 3A 02 AF 0E 27 AA F9 ED CE\
    \ 05 EF D8 59 92\n     C0 18 D7 69 6E BD 70 B6 21 D1 77 39 21 E1 AF 7A\n     3A\
    \ CF 20 0A B4 2C 69 5F CF 79 67 20 31 4D F2 C6\n     ED 23 BF C4 BB 1E D1 71 40\
    \ 2C 07 D6 F0 8F C5 1A\n   seed:\n     1C D5 3A 0D 17 82 6D 0A 81 75 81 46 10\
    \ 8E 3E DB\n     09 E4 98 34\n   C:\n     00000037\n   x:\n     3E 5D AD FD E5\
    \ F4 6B 1B 61 5E 18 F9 0B 84 74 a7\n     52 1E D6 92 BC 34 94 56 F3 0C BE DA 67\
    \ 7A DD 7D\n   Step 2.  Form the value to be signed and hash with SHA1.  The result\n\
    \   of the hash for this example is:\n     5f a2 69 b6 4b 22 91 22 6f 4c fe 68\
    \ ec 2b d1 c6\n     d4 21 e5 2c\n   Step 3.  The hash value needs to be expanded\
    \ since |q| = 256.  This\n   is done by hashing the hash with SHA1 and appending\
    \ it to the\n   original hash.  The value after this step is:\n     5f a2 69 b6\
    \ 4b 22 91 22 6f 4c fe 68 ec 2b d1 c6\n     d4 21 e5 2c 64 92 8b c9 5e 34 59 70\
    \ bd 62 40 ad\n     6f 26 3b f7 1c a3 b2 cb\n   Next the first 255 bits of this\
    \ value are taken to be the resulting\n   \"hash\" value.  Note in this case a\
    \ shift of one bit right is done\n   since the result is to be treated as an integer:\n\
    \     2f d1 34 db 25 91 48 91 37 a6 7f 34 76 15 e8 e3\n     6a 10 f2 96 32 49\
    \ 45 e4 af 1a 2c b8 5e b1 20 56\n   Step 4.  The signature value is computed.\
    \  In this case you get the\n   values\n   R:\n     A1 B5 B4 90 01 34 6B A0 31\
    \ 6A 73 F5 7D F6 5C 14\n     43 52 D2 10 BF 86 58 87 F7 BC 6E 5A 77 FF C3 4B\n\
    \   S:\n     59 40 45 BC 6F 0D DC FF 9D 55 40 1E C4 9E 51 3D\n     66 EF B2 FF\
    \ 06 40 9A 39 68 75 81 F7 EC 9E BE A1\n   The encoded signature values is then:\n\
    \   30 45 02 21 00 A1 B5 B4 90 01 34 6B A0 31 6A 73\n   F5 7D F6 5C 14 43 52 D2\
    \ 10 BF 86 58 87 F7 BC 6E\n   5A 77 FF C3 4B 02 20 59 40 45 BC 6F 0D DC FF 9D\n\
    \   55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68\n   75 81 F7 EC 9E BE A1\n\
    \   Result:\n     30 82 02 c2 30 82 02 67 02 01 00 30 1b 31 19 30\n     17 06\
    \ 03 55 04 03 13 10 49 45 54 46 20 50 4b 49\n     58 20 53 41 4d 50 4c 45 30 82\
    \ 02 41 30 82 01 b6\n     06 07 2a 86 48 ce 3e 02 01 30 82 01 a9 02 81 81\n  \
    \   00 94 84 e0 45 6c 7f 69 51 62 3e 56 80 7c 68 e7\n     c5 a9 9e 9e 74 74 94\
    \ ed 90 8c 1d c4 e1 4a 14 82\n     f5 d2 94 0c 19 e3 b9 10 bb 11 b9 e5 a5 fb 8e\
    \ 21\n     51 63 02 86 aa 06 b8 21 36 b6 7f 36 df d1 d6 68\n     5b 79 7c 1d 5a\
    \ 14 75 1f 6a 93 75 93 ce bb 97 72\n     8a f0 0f 23 9d 47 f6 d4 b3 c7 f0 f4 e6\
    \ f6 2b c2\n     32 e1 89 67 be 7e 06 ae f8 d0 01 6b 8b 2a f5 02\n     d7 b6 a8\
    \ 63 94 83 b0 1b 31 7d 52 1a de e5 03 85\n     27 02 81 80 26 a6 32 2c 5a 2b d4\
    \ 33 2b 5c dc 06\n     87 53 3f 90 06 61 50 38 3e d2 b9 7d 81 1c 12 10\n     c5\
    \ 0c 53 d4 64 d1 8e 30 07 08 8c dd 3f 0a 2f 2c\n     d6 1b 7f 57 86 d0 da bb 6e\
    \ 36 2a 18 e8 d3 bc 70\n     31 7a 48 b6 4e 18 6e dd 1f 22 06 eb 3f ea d4 41\n\
    \     69 d9 9b de 47 95 7a 72 91 d2 09 7f 49 5c 3b 03\n     33 51 c8 f1 39 9a\
    \ ff 04 d5 6e 7e 94 3d 03 b8 f6\n     31 15 26 48 95 a8 5c de 47 88 b4 69 3a 00\
    \ a7 86\n     9e da d1 cd 02 21 00 e8 72 fa 96 f0 11 40 f5 f2\n     dc fd 3b 5d\
    \ 78 94 b1 85 01 e5 69 37 21 f7 25 b9\n     ba 71 4a fc 60 30 fb 02 61 00 a3 91\
    \ 01 c0 a8 6e\n     a4 4d a0 56 fc 6c fe 1f a7 b0 cd 0f 94 87 0c 25\n     be 97\
    \ 76 8d eb e5 a4 09 5d ab 83 cd 80 0b 35 67\n     7f 0c 8e a7 31 98 32 85 39 40\
    \ 9d 11 98 d8 de b8\n     7f 86 9b af 8d 67 3d b6 76 b4 61 2f 21 e1 4b 0e\n  \
    \   68 ff 53 3e 87 dd d8 71 56 68 47 dc f7 20 63 4b\n     3c 5f 78 71 83 e6 70\
    \ 9e e2 92 30 1a 03 15 00 1c\n     d5 3a 0d 17 82 6d 0a 81 75 81 46 10 8e 3e db\
    \ 09\n     e4 98 34 02 01 37 03 81 84 00 02 81 80 5f cf 39\n     ad 62 cf 49 8e\
    \ d1 ce 66 e2 b1 e6 a7 01 4d 05 c2\n     77 c8 92 52 42 a9 05 a4 db e0 46 79 50\
    \ a3 fc 99\n     3d 3d a6 9b a9 ad bc 62 1c 69 b7 11 a1 c0 2a f1\n     85 28 f7\
    \ 68 fe d6 8f 31 56 22 4d 0a 11 6e 72 3a\n     02 af 0e 27 aa f9 ed ce 05 ef d8\
    \ 59 92 c0 18 d7\n     69 6e bd 70 b6 21 d1 77 39 21 e1 af 7a 3a cf 20\n     0a\
    \ b4 2c 69 5f cf 79 67 20 31 4d f2 c6 ed 23 bf\n     c4 bb 1e d1 71 40 2c 07 d6\
    \ f0 8f c5 1a a0 00 30\n     0c 06 08 2b 06 01 05 05 07 06 04 05 00 03 47 00\n\
    \     30 44 02 20 54 d9 43 8d 0f 9d 42 03 d6 09 aa a1\n     9a 3c 17 09 ae bd\
    \ ee b3 d1 a0 00 db 7d 8c b8 e4\n     56 e6 57 7b 02 20 44 89 b1 04 f5 40 2b 5f\
    \ e7 9c\n     f9 a4 97 50 0d ad c3 7a a4 2b b2 2d 5d 79 fb 38\n     8a b4 df bb\
    \ 88 bc\n   Decoded Version of result:\n  0 30  707: SEQUENCE {\n  4 30  615:\
    \   SEQUENCE {\n  8 02    1:     INTEGER 0\n 11 30   27:     SEQUENCE {\n 13 31\
    \   25:       SET {\n 15 30   23:         SEQUENCE {\n 17 06    3:           OBJECT\
    \ IDENTIFIER commonName (2 5 4 3)\n 22 13   16:           PrintableString 'IETF\
    \ PKIX SAMPLE'\n           :           }\n           :         }\n           :\
    \       }\n 40 30  577:     SEQUENCE {\n 44 30  438:       SEQUENCE {\n 48 06\
    \    7:         OBJECT IDENTIFIER dhPublicNumber (1 2 840 10046 2\n"
- title: 1)
  contents:
  - "1)\n 57 30  425:         SEQUENCE {\n 61 02  129:           INTEGER\n       \
    \    :            00 94 84 E0 45 6C 7F 69 51 62 3E 56 80 7C 68 E7\n          \
    \ :            C5 A9 9E 9E 74 74 94 ED 90 8C 1D C4 E1 4A 14 82\n           : \
    \           F5 D2 94 0C 19 E3 B9 10 BB 11 B9 E5 A5 FB 8E 21\n           :    \
    \        51 63 02 86 AA 06 B8 21 36 B6 7F 36 DF D1 D6 68\n           :       \
    \     5B 79 7C 1D 5A 14 75 1F 6A 93 75 93 CE BB 97 72\n           :          \
    \  8A F0 0F 23 9D 47 F6 D4 B3 C7 F0 F4 E6 F6 2B C2\n           :            32\
    \ E1 89 67 BE 7E 06 AE F8 D0 01 6B 8B 2A F5 02\n           :            D7 B6\
    \ A8 63 94 83 B0 1B 31 7D 52 1A DE E5 03 85\n           :            27\n"
- title: '193 02  128:           INTEGER'
  contents:
  - "193 02  128:           INTEGER\n           :            26 A6 32 2C 5A 2B D4\
    \ 33 2B 5C DC 06 87 53 3F 90\n           :            06 61 50 38 3E D2 B9 7D\
    \ 81 1C 12 10 C5 0C 53 D4\n           :            64 D1 8E 30 07 08 8C DD 3F\
    \ 0A 2F 2C D6 1B 7F 57\n           :            86 D0 DA BB 6E 36 2A 18 E8 D3\
    \ BC 70 31 7A 48 B6\n           :            4E 18 6E DD 1F 22 06 EB 3F EA D4\
    \ 41 69 D9 9B DE\n           :            47 95 7A 72 91 D2 09 7F 49 5C 3B 03\
    \ 33 51 C8 F1\n           :            39 9A FF 04 D5 6E 7E 94 3D 03 B8 F6 31\
    \ 15 26 48\n           :            95 A8 5C DE 47 88 B4 69 3A 00 A7 86 9E DA\
    \ D1 CD\n"
- title: '324 02   33:           INTEGER'
  contents:
  - "324 02   33:           INTEGER\n           :            00 E8 72 FA 96 F0 11\
    \ 40 F5 F2 DC FD 3B 5D 78 94\n           :            B1 85 01 E5 69 37 21 F7\
    \ 25 B9 BA 71 4A FC 60 30\n           :            FB\n"
- title: '359 02   97:           INTEGER'
  contents:
  - "359 02   97:           INTEGER\n           :            00 A3 91 01 C0 A8 6E\
    \ A4 4D A0 56 FC 6C FE 1F A7\n           :            B0 CD 0F 94 87 0C 25 BE\
    \ 97 76 8D EB E5 A4 09 5D\n           :            AB 83 CD 80 0B 35 67 7F 0C\
    \ 8E A7 31 98 32 85 39\n           :            40 9D 11 98 D8 DE B8 7F 86 9B\
    \ AF 8D 67 3D B6 76\n           :            B4 61 2F 21 E1 4B 0E 68 FF 53 3E\
    \ 87 DD D8 71 56\n           :            68 47 DC F7 20 63 4B 3C 5F 78 71 83\
    \ E6 70 9E E2\n           :            92\n"
- title: '458 30   26:           SEQUENCE {'
  contents:
  - '458 30   26:           SEQUENCE {

    '
- title: '460 03   21:             BIT STRING 0 unused bits'
  contents:
  - "460 03   21:             BIT STRING 0 unused bits\n           :            1C\
    \ D5 3A 0D 17 82 6D 0A 81 75 81 46 10 8E 3E DB\n           :            09 E4\
    \ 98 34\n"
- title: '483 02    1:             INTEGER 55'
  contents:
  - "483 02    1:             INTEGER 55\n           :             }\n           :\
    \           }\n           :         }\n"
- title: '486 03  132:       BIT STRING 0 unused bits'
  contents:
  - "486 03  132:       BIT STRING 0 unused bits\n           :         02 81 80 5F\
    \ CF 39 AD 62 CF 49 8E D1 CE 66 E2 B1\n           :         E6 A7 01 4D 05 C2\
    \ 77 C8 92 52 42 A9 05 A4 DB E0\n           :         46 79 50 A3 FC 99 3D 3D\
    \ A6 9B A9 AD BC 62 1C 69\n           :         B7 11 A1 C0 2A F1 85 28 F7 68\
    \ FE D6 8F 31 56 22\n           :         4D 0A 11 6E 72 3A 02 AF 0E 27 AA F9\
    \ ED CE 05 EF\n           :         D8 59 92 C0 18 D7 69 6E BD 70 B6 21 D1 77\
    \ 39 21\n           :         E1 AF 7A 3A CF 20 0A B4 2C 69 5F CF 79 67 20 31\n\
    \           :         4D F2 C6 ED 23 BF C4 BB 1E D1 71 40 2C 07 D6 F0\n      \
    \     :         8F C5 1A\n           :       }\n"
- title: '621 A0    0:     [0]'
  contents:
  - "621 A0    0:     [0]\n           :     }\n"
- title: '623 30   12:   SEQUENCE {'
  contents:
  - '623 30   12:   SEQUENCE {

    '
- title: '625 06    8:     OBJECT IDENTIFIER ''1 3 6 1 5 5 7 6 4'''
  contents:
  - '625 06    8:     OBJECT IDENTIFIER ''1 3 6 1 5 5 7 6 4''

    '
- title: '635 05    0:     NULL'
  contents:
  - "635 05    0:     NULL\n           :     }\n"
- title: '637 03   72:   BIT STRING 0 unused bits'
  contents:
  - "637 03   72:   BIT STRING 0 unused bits\n           :     30 45 02 21 00 A1 B5\
    \ B4 90 01 34 6B A0 31 6A 73\n           :     F5 7D F6 5C 14 43 52 D2 10 BF 86\
    \ 58 87 F7 BC 6E\n           :     5A 77 FF C3 4B 02 20 59 40 45 BC 6F 0D DC FF\
    \ 9D\n           :     55 40 1E C4 9E 51 3D 66 EF B2 FF 06 40 9A 39 68\n     \
    \      :     75 81 F7 EC 9E BE A1\n           :   }\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
