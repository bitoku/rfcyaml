- contents:
  - " Path Computation Element Communication Protocol (PCEP) Extensions for\n Establishing
    Relationships between Sets of Label Switched Paths (LSPs)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document introduces a generic mechanism to create a grouping
    of\n   Label Switched Paths (LSPs) in the context of a Path Computation\n   Element
    (PCE).  This grouping can then be used to define associations\n   between sets
    of LSPs or between a set of LSPs and a set of attributes\n   (such as configuration
    parameters or behaviors), and it is equally\n   applicable to the stateful PCE
    (active and passive modes) and the\n   stateless PCE.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8697.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2020 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Requirements Language\n   2.
    \ Terminology\n   3.  Architectural Overview\n     3.1.  Motivations\n     3.2.
    \ Relationship to the SVEC List\n     3.3.  Operational Overview\n     3.4.  Operator-Configured
    Association Range\n   4.  Discovery of Supported Association Types\n     4.1.
    \ ASSOC-Type-List TLV\n       4.1.1.  Procedure\n   5.  Operator-Configured Association
    Range TLV\n     5.1.  Procedure\n   6.  ASSOCIATION Object\n     6.1.  Object
    Definition\n       6.1.1.  Global Association Source TLV\n       6.1.2.  Extended
    Association ID TLV\n       6.1.3.  Association Source\n       6.1.4.  Unique Identification
    for an Association Group\n     6.2.  Relationship to the RSVP ASSOCIATION Object\n
    \    6.3.  Object Encoding in PCEP Messages\n       6.3.1.  Stateful PCEP Messages\n
    \      6.3.2.  Request Message\n       6.3.3.  Reply Message\n     6.4.  Processing
    Rules\n   7.  IANA Considerations\n     7.1.  PCEP Object\n     7.2.  PCEP TLV\n
    \    7.3.  Association Flags\n     7.4.  Association Type\n     7.5.  PCEP-Error
    Object\n   8.  Security Considerations\n   9.  Manageability Considerations\n
    \    9.1.  Control of Function and Policy\n     9.2.  Information and Data Models\n
    \    9.3.  Liveness Detection and Monitoring\n     9.4.  Verifying Correct Operation\n
    \    9.5.  Requirements on Other Protocols\n     9.6.  Impact on Network Operations\n
    \  10. References\n     10.1.  Normative References\n     10.2.  Informative References\n
    \  Appendix A.  Example of an Operator-Configured Association Range\n   Acknowledgments\n
    \  Contributors\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC5440] describes the Path Computation Element (PCE) Communication\n
    \  Protocol (PCEP).  PCEP enables communication between a Path\n   Computation
    Client (PCC) and a PCE, or between a PCE and another PCE,\n   for the purpose
    of the computation of Multiprotocol Label Switching\n   (MPLS) as well as Generalized
    MPLS (GMPLS) Traffic Engineering Label\n   Switched Path (TE LSP) characteristics.\n
    \  [RFC8231] specifies a set of extensions to PCEP to enable stateful\n   control
    of TE LSPs within and across PCEP sessions in compliance with\n   [RFC4657].  It
    includes mechanisms to effect LSP State\n   Synchronization between PCCs and PCEs,
    delegation of control over\n   LSPs to PCEs, and PCE control of timing and sequence
    of path\n   computations within and across PCEP sessions.  The operational model\n
    \  whereby LSPs are initiated from the PCE is described in [RFC8281].\n   [RFC4872]
    defines the RSVP ASSOCIATION object, which was defined in\n   the context of GMPLS-controlled
    LSPs to be used to associate recovery\n   LSPs with the LSP they are protecting.
    \ This object also has broader\n   applicability as a mechanism to associate RSVP
    state.  [RFC6780]\n   describes how the ASSOCIATION object can be more generally
    applied by\n   defining the Extended ASSOCIATION object.\n   This document introduces
    a generic mechanism to create a grouping of\n   LSPs.  This grouping can then
    be used to define associations between\n   sets of LSPs or between a set of LSPs
    and a set of attributes (such\n   as configuration parameters or behaviors), and
    it is equally\n   applicable to the stateful PCE (active and passive modes) and
    the\n   stateless PCE.  The associations could be created dynamically and\n   conveyed
    to a PCEP peer within PCEP, or they could be configured\n   manually by an operator
    on the PCEP peers.  Refer to Section 3.3 for\n   more details.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   This document uses the following terms defined in [RFC5440]:\n
    \  *  PCC\n   *  PCE\n   *  PCEP Peer\n   *  Path Computation Request (PCReq)\n
    \  *  Path Computation Reply (PCRep)\n   *  PCEP Error (PCErr)\n   This document
    uses the following terms defined in [RFC8051]:\n   *  Stateful PCE\n   *  Active
    Stateful PCE\n   *  Passive Stateful PCE\n   *  Delegation\n   This document uses
    the following terms defined in [RFC8231]:\n   *  LSP State Report (PCRpt)\n   *
    \ LSP Update Request (PCUpd)\n   *  State Timeout Interval\n   This document uses
    the following terms defined in [RFC8281]:\n   *  PCE-initiated LSP\n   *  LSP
    Initiate Request (PCInitiate)\n"
  title: 2.  Terminology
- contents:
  - '3.  Architectural Overview

    '
  - contents:
    - "3.1.  Motivations\n   A stateful PCE provides the ability to update existing
      LSPs and to\n   instantiate new ones.  There are various situations where several\n
      \  LSPs need to share common information.  For example, to support PCE-\n   controlled
      make-before-break, an association between the original\n   path and the reoptimized
      path is desired.  Similarly, for end-to-end\n   protection, an association between
      working and protection LSPs is\n   required (see [PCE-PROTECTION]).  For diverse
      paths, an association\n   between a group of LSPs could be used (see [PCE-DIVERSITY]).
      \ Another\n   use for an LSP grouping would be to apply a common set of\n   configuration
      parameters or behaviors to a set of LSPs.\n   For a stateless PCE, it might
      be useful to associate a PCReq message\n   to an association group, thus enabling
      it to associate a common set\n   of policies, configuration parameters, or behaviors
      with the request.\n   Some associations could be created dynamically, such as
      an\n   association between the working and protection LSPs of a tunnel,\n   whereas
      some associations could be created by the operator manually,\n   such as a policy-based
      association where the LSP could join an\n   operator-configured existing association.\n
      \  Rather than creating separate mechanisms for each use case, this\n   document
      defines a generic mechanism that can be reused as needed.\n"
    title: 3.1.  Motivations
  - contents:
    - "3.2.  Relationship to the SVEC List\n   Note that [RFC5440] defines a mechanism
      for the synchronization of a\n   set of PCReq messages by using the SVEC (Synchronization
      VECtor)\n   object, which specifies the list of synchronized requests that can
      be\n   either dependent or independent.  The SVEC object identifies the\n   relationship
      between the set of PCReq messages, identified by\n   \"Request-ID-number\" in
      the RP (Request Parameters) object.  [RFC6007]\n   further clarifies the use
      of the SVEC list for synchronized path\n   computations when computing dependent
      requests, and it describes a\n   number of usage scenarios for SVEC lists within
      single-domain and\n   multi-domain environments.\n   The motivations behind
      the association group defined in this document\n   and the SVEC object are quite
      different, though some use cases may\n   overlap.  PCEP extensions that define
      a new Association Type should\n   clarify the relationship between the SVEC
      object and the Association\n   Type, if any.\n"
    title: 3.2.  Relationship to the SVEC List
  - contents:
    - "3.3.  Operational Overview\n   LSPs are associated with other LSPs with which
      they interact by\n   adding them to a common association group.  Association
      groups as\n   defined in this document can be applied to LSPs originating at
      the\n   same headend or different headends.\n   Some associations could be created
      dynamically by a PCEP speaker, and\n   the associations (along with the set
      of LSPs) are conveyed to a PCEP\n   peer.  Whereas some associations are configured
      by the operator\n   beforehand on the PCEP peers in question, a PCEP speaker
      could then\n   ask an LSP to join the Operator-configured Association.  Usage
      of\n   dynamic and configured associations is usually dependent on the type\n
      \  of association.\n   For Operator-configured Associations, the association
      parameters,\n   such as the Association Identifier (Association ID), Association\n
      \  Type, and the Association Source IP address, are manually configured\n   by
      the operator.  In the case of a dynamic association, the\n   association parameters,
      such as the Association ID, are allocated\n   dynamically by the PCEP speaker.
      \ The Association Source is set as\n   the local PCEP speaker address unless
      local policy dictates\n   otherwise, in which case the Association Source is
      set based on the\n   local policy.\n   The dynamically created association can
      be reported to the PCEP peer\n   via the PCEP messages as per the stateful extensions.
      \ When the\n   Operator-configured Association is known to the PCEP peer beforehand,\n
      \  a PCEP peer could ask an LSP to join the Operator-configured\n   Association
      via the stateful PCEP messages.\n   The associations are properties of the LSP
      and thus could be stored\n   in the LSP state database.  The dynamic association
      exists as long as\n   the LSP state exists.  In the case of PCEP session termination,
      the\n   LSP state cleanup MUST also take care of associations.\n   Multiple
      types of associations can exist, each with its own\n   Association ID space.
      \ The definition of the different Association\n   Types and their behaviors
      is outside the scope of this document.  The\n   establishment and removal of
      the association relationship can be done\n   on a per-LSP basis.  An LSP may
      join multiple association groups that\n   have the same Association Type or
      different Association Types.\n"
    title: 3.3.  Operational Overview
  - contents:
    - "3.4.  Operator-Configured Association Range\n   Some Association Types are
      dynamic, some are operator configured, and\n   some could be both.  For the
      Association Types that could be both\n   dynamic and operator configured and
      use the same Association Source,\n   it is necessary to distinguish a range
      of Association IDs that are\n   marked for Operator-configured Associations,
      to avoid any Association\n   ID clashes within the scope of the Association
      Source.  This document\n   assumes that these two ranges are configured.\n   A
      range of Association IDs for each Association Type (and Association\n   Source)
      is kept for the Operator-configured Associations.  Dynamic\n   associations
      MUST NOT use the Association ID from this range.\n   This range, as set at the
      PCEP speaker (a PCC or PCE, as an\n   Association Source), needs to be communicated
      to a PCEP peer in the\n   Open message.  A new TLV is defined in this specification
      for this\n   purpose (Section 5).  See Appendix A for an example.\n   The Association
      ID range for sources other than the PCEP speaker (for\n   example, a Network
      Management System (NMS)) is not communicated in\n   PCEP, and the procedure
      for Operator-configured Association Range\n   settings is outside the scope
      of this document.\n"
    title: 3.4.  Operator-Configured Association Range
  title: 3.  Architectural Overview
- contents:
  - "4.  Discovery of Supported Association Types\n   This section defines PCEP extensions
    so as to support the capability\n   advertisement of the Association Types supported
    by a PCEP speaker.\n   A new PCEP ASSOC-Type-List (Association Types list) TLV
    is defined.\n   The PCEP ASSOC-Type-List TLV is carried within an OPEN object.
    \ This\n   way, during the PCEP session-setup phase, a PCEP speaker can\n   advertise
    to a PCEP peer the list of supported Association Types.\n"
  - contents:
    - "4.1.  ASSOC-Type-List TLV\n   The PCEP ASSOC-Type-List TLV is OPTIONAL.  It
      MAY be carried within\n   an OPEN object sent by a PCEP speaker in an Open message
      to a PCEP\n   peer so as to indicate the list of supported Association Types.\n
      \  The PCEP ASSOC-Type-List TLV format is compliant with the PCEP TLV\n   format
      defined in [RFC5440].  That is, the TLV is composed of 2\n   octets for the
      type, 2 octets specifying the TLV length, and a Value\n   field.  The Length
      field defines the length of the value portion in\n   octets.  The TLV is padded
      to 4-octet alignment, and padding is not\n   included in the Length field (e.g.,
      a 3-octet value would have a\n   length of three, but the total size of the
      TLV would be 8 octets).\n   The PCEP ASSOC-Type-List TLV has the following format:\n
      \     0                   1                   2                   3\n      0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Type
      \                 |            Length             |\n     |          Assoc-Type
      #1        |      Assoc-Type #2            |\n     |          Assoc-Type #N        |
      \      padding                 |\n                  Figure 1: The ASSOC-Type-List
      TLV Format\n   Type:  35\n   Length:  N * 2 (where N is the number of Association
      Types).\n   Value:  List of 2-byte Association Type code points, identifying
      the\n      Association Types supported by the sender of the Open message.\n
      \  Assoc-Type (2 bytes):  Association Type code point identifier.  IANA\n      manages
      the \"ASSOCIATION Type Field\" code point registry (see\n      Section 7.4).\n"
    - contents:
      - "4.1.1.  Procedure\n   An ASSOC-Type-List TLV within an OPEN object in an
        Open message is\n   included by a PCEP speaker in order to advertise a set
        of one or more\n   supported Association Types.  The ASSOC-Type-List TLV MUST
        NOT appear\n   more than once in an OPEN object.  If it appears more than
        once, the\n   PCEP session MUST be rejected with Error-Type 1 and Error-value
        1\n   (PCEP session establishment failure / Reception of an invalid Open\n
        \  message).  As specified in [RFC5440], a PCEP peer that does not\n   recognize
        the ASSOC-Type-List TLV will silently ignore it.\n   The Association Type
        (to be defined in future documents) can specify\n   if the Association Type
        advertisement is mandatory for it.  Thus, the\n   ASSOC-Type-List TLV MUST
        be included if at least one mandatory\n   Association Type needs to be advertised,
        and the ASSOC-Type-List TLV\n   MAY be included otherwise.  For an Association
        Type that specifies\n   that the advertisement is mandatory, a missing Assoc-Type
        in the\n   ASSOC-Type-List TLV (or a missing ASSOC-Type-List TLV) is to be\n
        \  interpreted as meaning that the Association Type is not supported by\n
        \  the PCEP speaker.\n   The absence of the ASSOC-Type-List TLV in an OPEN
        object MUST be\n   interpreted as an absence of information in the list of
        supported\n   Association Types (rather than an indication that the Association\n
        \  Type is not supported).  In this case, the PCEP speaker could still\n   use
        the ASSOCIATION object: if the peer does not support the\n   association,
        it will react as per the procedure described in\n   Section 6.4.\n   If the
        use of the ASSOC-Type-List TLV is triggered by support for a\n   mandatory
        Association Type, then it is RECOMMENDED that the PCEP\n   implementation
        include all supported Association Types (including\n   optional types) to
        ease the operations of the PCEP peer.\n"
      title: 4.1.1.  Procedure
    title: 4.1.  ASSOC-Type-List TLV
  title: 4.  Discovery of Supported Association Types
- contents:
  - "5.  Operator-Configured Association Range TLV\n   This section defines a PCEP
    extension to support the advertisement of\n   the Operator-configured Association
    Range used for an Association\n   Type by the PCEP speaker (as an Association
    Source).\n   A new PCEP OP-CONF-ASSOC-RANGE (Operator-configured Association\n
    \  Range) TLV is defined.  The PCEP OP-CONF-ASSOC-RANGE TLV is carried\n   within
    an OPEN object.  This way, during the PCEP session-setup\n   phase, a PCEP speaker
    can advertise to a PCEP peer the Operator-\n   configured Association Range for
    an Association Type.\n   The PCEP OP-CONF-ASSOC-RANGE TLV is OPTIONAL.  It MAY
    be carried\n   within an OPEN object sent by a PCEP speaker in an Open message
    to a\n   PCEP peer.  The OP-CONF-ASSOC-RANGE TLV format is compliant with the\n
    \  PCEP TLV format defined in [RFC5440].  That is, the TLV is composed\n   of
    2 bytes for the type, 2 bytes specifying the TLV length, and a\n   Value field.
    \ The Length field defines the length of the value\n   portion in bytes.\n   The
    PCEP OP-CONF-ASSOC-RANGE TLV has the following format:\n      0                   1
    \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Type                  |            Length
    \            |\n     |             Reserved          |          Assoc-Type #1
    \       |\n     |      Start-Assoc-ID #1        |           Range #1            |\n
    \    |             Reserved          |          Assoc-Type #N        |\n     |
    \     Start-Assoc-ID #N        |           Range #N            |\n                Figure
    2: The OP-CONF-ASSOC-RANGE TLV Format\n   Type:  29\n   Length:  N * 8 (where
    N is the number of Association Types).\n   Value:  Includes the following fields,
    repeated for each Association\n      Type:\n      Reserved (2 bytes):  MUST be
    set to 0 on transmission and MUST be\n         ignored on receipt.\n      Assoc-Type
    (2 bytes):  The Association Type (Section 7.4).  The\n         Association Types
    will be defined in future documents.\n      Start-Assoc-ID (2 bytes):  The \"start
    association\" identifier for\n         the Operator-configured Association Range
    for the particular\n         Association Type.  The values 0 and 0xffff MUST NOT
    be used; on\n         receipt of these values in the TLV, the session is rejected,\n
    \        and an error message is sent (see Section 5.1).\n      Range (2 bytes):
    \ The number of associations marked for the\n         Operator-configured Associations.
    \ Range MUST be greater than\n         0, and it MUST be such that (Start-Assoc-ID
    + Range) does not\n         cross the largest Association ID value of 0xffff.
    \ If this\n         condition is not satisfied, the session is rejected, and an\n
    \        error message is sent (see Section 5.1).\n"
  - contents:
    - "5.1.  Procedure\n   A PCEP speaker MAY include an OP-CONF-ASSOC-RANGE TLV within
      an OPEN\n   object in an Open message sent to a PCEP peer in order to advertise\n
      \  the Operator-configured Association Range for an Association Type.\n   The
      OP-CONF-ASSOC-RANGE TLV MUST NOT appear more than once in an OPEN\n   object.
      \ If it appears more than once, the PCEP session MUST be\n   rejected with Error-Type
      1 and Error-value 1 (PCEP session\n   establishment failure / Reception of an
      invalid Open message).\n   As specified in [RFC5440], a PCEP peer that does
      not recognize the\n   OP-CONF-ASSOC-RANGE TLV will silently ignore it.\n   The
      Operator-configured Association Range SHOULD be included for each\n   Association
      Type that could be both dynamic and operator configured.\n   For Association
      Types that are only dynamic or only operator\n   configured, this TLV MAY be
      skipped, in which case the full range of\n   Association IDs is considered dynamic
      or operator configured,\n   respectively.  Each Association Type (to be defined
      in future\n   documents) can specify the default value for its Operator-configured\n
      \  Association Range.\n   The absence of the OP-CONF-ASSOC-RANGE TLV in an OPEN
      object MUST be\n   interpreted as an absence of an explicit Operator-configured\n
      \  Association Range at the PCEP peer.  In this case, the default\n   behavior
      as per each Association Type applies.  If the Association\n   Source is not
      a PCEP speaker, the default value for the Operator-\n   configured Association
      Range is used for the Association Source.\n   If the Assoc-Type is not recognized
      or supported by the PCEP speaker,\n   it MUST ignore that respective (Start-Assoc-ID
      + Range).  If the\n   Assoc-Type is recognized/supported but Start-Assoc-ID
      or Range is set\n   incorrectly, the PCEP session MUST be rejected with Error-Type
      1 and\n   Error-value 1 (PCEP session establishment failure / Reception of an\n
      \  invalid Open message).  The incorrect range includes the case when\n   the
      (Start-Assoc-ID + Range) crosses the largest Association ID value\n   of 0xffff.\n
      \  A given Assoc-Type MAY appear more than once in the OP-CONF-ASSOC-\n   RANGE
      TLV in the case of a non-contiguous Operator-configured\n   Association Range.
      \ The PCEP speaker originating this TLV MUST NOT\n   send overlapping ranges
      for an Association Type.  If a PCEP peer\n   receives overlapping ranges for
      an Association Type, it MUST consider\n   the Open message malformed and MUST
      reject the PCEP session with\n   Error-Type 1 and Error-value 1 (PCEP session
      establishment failure /\n   Reception of an invalid Open message).\n   There
      may be cases where an Operator-configured Association was\n   configured with
      association parameters (such as an Association ID,\n   Association Type, and
      Association Source) at the local PCEP speaker,\n   and the PCEP session is later
      established with the Association Source\n   and a new operator-configured range
      is learned during session\n   establishment.  At this time, the local PCEP speaker
      MUST remove any\n   associations that are not in the new operator-configured
      range (by\n   disassociating any LSPs that are part of it (and notifying the
      PCEP\n   peer of this change)).  If a PCEP speaker receives an association for\n
      \  an Operator-configured Association and the Association ID is not in\n   the
      Operator-configured Association Range for the Association Type\n   and Association
      Source, it MUST generate an error (as described in\n   Section 6.4).\n"
    title: 5.1.  Procedure
  title: 5.  Operator-Configured Association Range TLV
- contents:
  - '6.  ASSOCIATION Object

    '
  - contents:
    - "6.1.  Object Definition\n   Association groups and their memberships are defined
      using a new\n   ASSOCIATION object.\n   The ASSOCIATION Object-Class value is
      40.\n   The ASSOCIATION Object-Type value is 1 for IPv4, and its format is\n
      \  shown in Figure 3:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |
      \        Reserved              |            Flags            |R|\n     |      Association
      Type         |      Association ID           |\n     |              IPv4 Association
      Source                          |\n     //                   Optional TLVs                             //\n
      \               Figure 3: The IPv4 ASSOCIATION Object Format\n   The ASSOCIATION
      Object-Type value is 2 for IPv6, and its format is\n   shown in Figure 4:\n
      \     0                   1                   2                   3\n      0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Reserved
      \             |            Flags            |R|\n     |      Association Type
      \        |      Association ID           |\n     |                    IPv6 Association
      Source                    |\n     //                   Optional TLVs                             //\n
      \               Figure 4: The IPv6 ASSOCIATION Object Format\n   Reserved (2
      bytes):  MUST be set to 0 and ignored upon receipt.\n   Flags (2 bytes):  The
      following flag is currently defined:\n      R (Removal - 1 bit):  When set,
      the requesting PCEP peer requires\n         the removal of an LSP from the association
      group.  When unset,\n         the PCEP peer indicates that the LSP is added
      or retained as\n         part of the association group.  This flag is used for
      the\n         ASSOCIATION object in the Path Computation Report (PCRpt) and\n
      \        Path Computation Update (PCUpd) messages.  It is ignored in\n         other
      PCEP messages.\n   The unassigned flags MUST be set to 0 on transmission and
      MUST be\n   ignored on receipt.\n   Association Type (2 bytes):  The Association
      Type (Section 7.4).  The\n      Association Types will be defined in future
      documents.\n   Association ID (2 bytes):  The identifier of the association
      group.\n      When combined with other association parameters, such as an\n
      \     Association Type and Association Source, this value uniquely\n      identifies
      an association group.  The values 0xffff and 0x0 are\n      reserved.  The value
      0xffff is used to indicate all association\n      groups and could be used with
      the R flag to indicate removal for\n      all associations for the LSP within
      the scope of the Association\n      Type and Association Source.\n   Association
      Source:  Contains a valid IPv4 address (4 bytes) if the\n      ASSOCIATION Object-Type
      is 1 or a valid IPv6 address (16 bytes) if\n      the ASSOCIATION Object-Type
      is 2.  The address provides scoping\n      for the Association ID.  See Section
      6.1.3 for details.\n   Optional TLVs:  The optional TLVs follow the PCEP TLV
      format defined\n      in [RFC5440].  This document defines two optional TLVs.
      \ Other\n      documents can define more TLVs in the future.\n"
    - contents:
      - "6.1.1.  Global Association Source TLV\n   The Global Association Source TLV
        is an optional TLV for use in the\n   ASSOCIATION object.  The meaning and
        usage of the Global Association\n   Source TLV are as per Section 4 of [RFC6780].\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Type
        \                 |            Length             |\n     |              Global
        Association Source                        |\n             Figure 5: The Global
        Association Source TLV Format\n   Type:  30\n   Length:  Fixed value of 4
        bytes.\n   Global Association Source:  As defined in Section 4 of [RFC6780].\n"
      title: 6.1.1.  Global Association Source TLV
    - contents:
      - "6.1.2.  Extended Association ID TLV\n   The Extended Association ID TLV is
        an optional TLV for use in the\n   ASSOCIATION object.  The meaning and usage
        of the Extended\n   Association ID TLV are as per Section 4 of [RFC6780].\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     |         Type
        \                 |            Length             |\n     //                Extended
        Association ID                      //\n              Figure 6: The Extended
        Association ID TLV Format\n   Type:  31\n   Length:  Variable.\n   Extended
        Association ID:  As defined in Section 4 of [RFC6780].\n"
      title: 6.1.2.  Extended Association ID TLV
    - contents:
      - "6.1.3.  Association Source\n   The Association Source field in the ASSOCIATION
        object is set to a\n   valid IP address to identify the node that originated
        the\n   association.  In the case of dynamic associations, the Association\n
        \  Source is usually set as the local PCEP speaker address unless local\n
        \  policy dictates otherwise, in which case the Association Source is\n   set
        based on the local policy.  In the case of PCE redundancy, local\n   policy
        could set the source as a virtual IP address that identifies\n   all instances
        of the PCE.  In the case of Operator-configured\n   Associations, the Association
        Source is manually configured, and it\n   could be set as one of the PCEP
        speakers, an NMS, or any other valid\n   IP address that scopes the Association
        ID for the Association Type.\n"
      title: 6.1.3.  Association Source
    - contents:
      - "6.1.4.  Unique Identification for an Association Group\n   The combination
        of the mandatory fields Association Type, Association\n   ID, and Association
        Source in the ASSOCIATION object uniquely\n   identifies the association group.
        \ If the optional TLVs (Global\n   Association Source and Extended Association
        ID) are included, then\n   they MUST be included in combination with mandatory
        fields to\n   uniquely identify the association group.  In this document,
        all these\n   fields are collectively called \"association parameters\".  Note
        that\n   the ASSOCIATION object MAY include other optional TLVs (not defined\n
        \  in this document) based on the Association Types.  These TLVs provide\n
        \  \"information\" related to the Association Type.  This document refers\n
        \  to this information as \"association information\".\n"
      title: 6.1.4.  Unique Identification for an Association Group
    title: 6.1.  Object Definition
  - contents:
    - "6.2.  Relationship to the RSVP ASSOCIATION Object\n   The format of the PCEP
      ASSOCIATION object defined in this document is\n   aligned with the RSVP ASSOCIATION
      object [RFC6780].  Various\n   Association Types related to RSVP association
      are defined in\n   [RFC4872], [RFC4873], and [RFC7551].  The PCEP extensions
      that define\n   new Association Types should clarify how the PCEP associations
      would\n   work with RSVP associations and vice versa.\n"
    title: 6.2.  Relationship to the RSVP ASSOCIATION Object
  - contents:
    - "6.3.  Object Encoding in PCEP Messages\n   Message formats in this document
      are expressed using Routing BNF\n   (RBNF) as used in [RFC5440] and defined
      in [RFC5511].\n"
    - contents:
      - "6.3.1.  Stateful PCEP Messages\n   The ASSOCIATION object MAY be carried
        in the PCUpd, PCRpt, and Path\n   Computation Initiate (PCInitiate) messages.\n
        \  When carried in a PCRpt message, this object is used to report the\n   association
        group membership pertaining to an LSP to a stateful PCE.\n   The PCRpt message
        is used for initial State Synchronization\n   operations (Section 5.6 of [RFC8231]),
        as well as whenever the state\n   of the LSP changes.  If the LSP belongs
        to an association group, then\n   the associations MUST be included during
        the State Synchronization\n   operations.\n   The PCRpt message can also be
        used to remove an LSP from one or more\n   association groups by setting the
        R flag to 1 in the ASSOCIATION\n   object.\n   When an LSP is first reported
        to the PCE, the PCRpt message MUST\n   include all the association groups
        that it belongs to.  Any\n   subsequent PCRpt message SHOULD include only
        the associations that\n   are being modified or removed.\n   The PCRpt message
        is defined in [RFC8231] and updated as shown below:\n      <PCRpt Message>
        ::= <Common Header>\n                          <state-report-list>\n   Where:\n
        \        <state-report-list> ::= <state-report>[<state-report-list>]\n         <state-report>
        ::= [<SRP>]\n                            <LSP>\n                            [<association-list>]\n
        \                           <path>\n   Where:\n         <path>::= <intended-path>\n
        \                  [<actual-attribute-list><actual-path>]\n                   <intended-attribute-list>\n
        \        <association-list> ::= <ASSOCIATION> [<association-list>]\n   When
        an LSP is delegated to a stateful PCE, the stateful PCE can\n   create a new
        association group for this LSP or associate it with one\n   or more existing
        association groups.  This is done by including the\n   ASSOCIATION object
        in a PCUpd message.  A stateful PCE can also\n   remove a delegated LSP from
        one or more association groups by setting\n   the R flag to 1 in the ASSOCIATION
        object.\n   The PCUpd message SHOULD include the association groups that are\n
        \  being modified or removed.  There is no need to include associations\n
        \  that remain unchanged.\n   The PCUpd message is defined in [RFC8231] and
        updated as shown below:\n    <PCUpd Message> ::= <Common Header>\n                        <update-request-list>\n
        \  Where:\n       <update-request-list> ::= <update-request>[<update-request-list>]\n
        \      <update-request> ::= <SRP>\n                            <LSP>\n                            [<association-list>]\n
        \                           <path>\n   Where:\n       <path>::= <intended-path><intended-attribute-list>\n
        \      <association-list> ::= <ASSOCIATION> [<association-list>]\n   Unless
        a PCEP speaker wants to delete an association from an LSP or\n   make changes
        to the association, it does not need to include the\n   ASSOCIATION object
        in future stateful messages.\n   A PCE initiating a new LSP can also include
        the association groups\n   that this LSP belongs to.  This is done by including
        the ASSOCIATION\n   object in a PCInitiate message.  The PCInitiate message
        MUST include\n   all the association groups that it belongs to.  The PCInitiate\n
        \  message is defined in [RFC8281] and updated as shown below:\n   <PCInitiate
        Message> ::= <Common Header>\n                            <PCE-initiated-lsp-list>\n
        \  Where:\n   <PCE-initiated-lsp-list> ::= <PCE-initiated-lsp-request>\n   <PCE-initiated-lsp-request>
        ::= (<PCE-initiated-lsp-instantiation>|\n   <PCE-initiated-lsp-instantiation>
        ::= <SRP>\n   Where:\n   <association-list> ::= <ASSOCIATION> [<association-list>]\n"
      title: 6.3.1.  Stateful PCEP Messages
    - contents:
      - "6.3.2.  Request Message\n   In the case of a passive (stateful or stateless)
        PCE, the ASSOCIATION\n   object is OPTIONAL and MAY be carried in the PCReq
        message.\n   When carried in a PCReq message, the ASSOCIATION object is used
        to\n   associate the path computation request to an association group.  The\n
        \  association (and the other LSPs) should be known to the PCE\n   beforehand.
        \ These could be operator configured or dynamically\n   learned beforehand
        via stateful PCEP messages.  The R flag in the\n   ASSOCIATION object within
        a PCReq message MUST be set to 0 while\n   sending and ignored on receipt.\n
        \  The PCReq message is defined in [RFC5440] and updated in [RFC8231].\n   It
        is further updated below for association groups:\n   <PCReq Message>::= <Common
        Header>\n                      [<svec-list>]\n                      <request-list>\n
        \  Where:\n      <svec-list>::= <SVEC>[<svec-list>]\n      <request-list>::=
        <request>[<request-list>]\n      <request>::= <RP>\n                   <END-POINTS>\n
        \                  [<LSP>]\n                   [<LSPA>]\n                   [<BANDWIDTH>]\n
        \                  [<metric-list>]\n                   [<association-list>]\n
        \                  [<RRO>[<BANDWIDTH>]]\n                   [<IRO>]\n                   [<LOAD-BALANCING>]\n
        \  Where:\n      <association-list> ::= <ASSOCIATION> [<association-list>]\n
        \  Note that the LSP object MAY be present for the passive stateful PCE\n
        \  mode.\n"
      title: 6.3.2.  Request Message
    - contents:
      - "6.3.3.  Reply Message\n   In the case of a passive (stateful or stateless)
        PCE, the ASSOCIATION\n   object is OPTIONAL and MAY be carried in the PCRep
        message with the\n   NO-PATH object.  The ASSOCIATION object in the PCRep
        message\n   indicates the association group that caused the PCE to fail to
        find a\n   path.\n   The PCRep message is defined in [RFC5440] and updated
        in [RFC8231].\n   It is further updated below for association groups:\n   <PCRep
        Message> ::= <Common Header>\n                       <response-list>\n   Where:\n
        \     <response-list>::=<response>[<response-list>]\n      <response>::=<RP>\n
        \                  [<LSP>]\n                   [<NO-PATH>]\n                   [<association-list>]\n
        \                  [<attribute-list>]\n                   [<path-list>]\n
        \  Where:\n      <association-list> ::= <ASSOCIATION> [<association-list>]\n
        \  Note that the LSP object MAY be present for the passive stateful PCE\n
        \  mode.\n"
      title: 6.3.3.  Reply Message
    title: 6.3.  Object Encoding in PCEP Messages
  - contents:
    - "6.4.  Processing Rules\n   Association groups can be operator configured on
      the necessary PCEP\n   speakers, and the PCEP speakers can join the existing
      association\n   groups.  In addition, a PCC or a PCE can create association
      groups\n   dynamically, and the PCEP speaker can also report the associations
      to\n   its peer via PCEP messages.  The Operator-configured Associations are\n
      \  created via configurations (where all association parameters are\n   manually
      set) and exist until explicitly removed via configurations.\n   The PCEP speaker
      can add LSPs to these configured associations and\n   provide this information
      via stateful PCEP messages.  The dynamic\n   associations are created dynamically
      by the PCEP speaker (where all\n   association parameters are populated dynamically).
      \ The association\n   group is attached to the LSP state, and the association
      group exists\n   until there is at least one LSP as part of the association.
      \ As\n   described in Section 6.1.4, the association parameters are the\n   combination
      of Association Type, Association ID, and Association\n   Source, as well as
      the optional Global Association Source and\n   Extended Association ID TLVs;
      this combination uniquely identifies an\n   association group.  The information
      related to the Association Types\n   encoded via the TLVs of a particular Association
      Type (not described\n   in this document) is the association information (Section
      6.1.4).\n   If a PCEP speaker does not recognize the ASSOCIATION object in the\n
      \  stateful message, it will return a PCErr message with Error-Type\n   \"Unknown
      Object\" as described in [RFC5440].  In the case of a PCReq\n   message, the
      PCE would react based on the P flag as per [RFC5440].\n   If a PCEP speaker
      understands the ASSOCIATION object but does not\n   support the Association
      Type, it MUST return a PCErr message with\n   Error-Type 26 \"Association Error\"
      and Error-value 1 \"Association Type\n   is not supported\".  If any association
      parameters are invalid in the\n   ASSOCIATION object, the PCEP speaker would
      consider this object\n   malformed and process it as a malformed message [RFC5440].
      \ On\n   receiving a PCEP message with an ASSOCIATION object, if a PCEP\n   speaker
      finds that too many LSPs belong to the association group, it\n   MUST return
      a PCErr message with Error-Type 26 \"Association Error\"\n   and Error-value
      2 \"Too many LSPs in the association group\".  If a\n   PCEP speaker cannot
      handle a new association, it MUST return a PCErr\n   message with Error-Type
      26 \"Association Error\" and Error-value 3 \"Too\n   many association groups\".
      \ These numbers MAY be set by the operator\n   or chosen based on a local policy.\n
      \  If a PCE peer is unwilling or unable to process the ASSOCIATION\n   object
      in the stateful message, it MUST return a PCErr message with\n   the Error-Type
      \"Not supported object\" and follow the relevant\n   procedures described in
      [RFC5440].  In the case of a PCReq message,\n   the PCE would react based on
      the P flag as per [RFC5440].  On\n   receiving a PCEP message with an ASSOCIATION
      object, if a PCEP\n   speaker could not add the LSP to the association group
      for any\n   reason, it MUST return a PCErr message with Error-Type 26\n   \"Association
      Error\" and Error-value 7 \"Cannot join the association\n   group\".\n   If
      a PCEP speaker receives an ASSOCIATION object for an Operator-\n   configured
      Association and the Association ID is not in the Operator-\n   configured Association
      Range for the Association Type and Association\n   Source, it MUST return a
      PCErr message with Error-Type 26\n   \"Association Error\" and Error-value 8
      \"Association ID not in range\".\n   If a PCEP speaker receives an ASSOCIATION
      object in a PCReq message\n   and the association is not known (the association
      is not configured,\n   was not created dynamically, or was not learned from
      a PCEP peer), it\n   MUST return a PCErr message with Error-Type 26 \"Association
      Error\"\n   and Error-value 4 \"Association unknown\".\n   If the association
      information (related to the association group as a\n   whole) received from
      the peer does not match the local operator-\n   configured information, it MUST
      return a PCErr message with Error-\n   Type 26 \"Association Error\" and Error-value
      5 \"Operator-configured\n   association information mismatch\".  On receiving
      association\n   information (related to the association group as a whole) that
      does\n   not match the association information previously received about the\n
      \  same association from a peer, it MUST return a PCErr message with\n   Error-Type
      26 \"Association Error\" and Error-value 6 \"Association\n   information mismatch\".
      \ Note that information related to each LSP\n   within the association as part
      of the association information TLVs\n   could be different.\n   If a PCEP speaker
      receives an ASSOCIATION object with the R bit set\n   for removal and the association
      group (identified by association\n   parameters) is not known, it MUST return
      a PCErr message with Error-\n   Type 26 \"Association Error\" and Error-value
      4 \"Association unknown\".\n   The dynamic associations are cleared along with
      the LSP state\n   information as per [RFC8231].  When a PCEP session is terminated,\n
      \  after expiry of the State Timeout Interval at the PCC, the LSP state\n   associated
      with that PCEP session is reverted to operator-defined\n   default parameters
      or behaviors.  The same procedure is also followed\n   for the association groups.
      \ On session termination at the PCE, when\n   the LSP state reported by the
      PCC is cleared, the association groups\n   are also cleared.  When there are
      no LSPs in an association group,\n   the association is considered empty and
      thus deleted.\n   If the LSP is delegated to another PCE on session failure,
      the\n   associations (and association information) set by the PCE remain\n   intact,
      unless updated by the new PCE that takes over.\n   Upon LSP delegation revocation,
      the PCC MAY clear the association\n   created by the PCE, but in order to avoid
      traffic loss, it SHOULD\n   perform this action in a make-before-break fashion
      (same as\n   [RFC8231]).\n"
    title: 6.4.  Processing Rules
  title: 6.  ASSOCIATION Object
- contents:
  - "7.  IANA Considerations\n   IANA maintains the \"Path Computation Element Protocol
    (PCEP) Numbers\"\n   registry at <https://www.iana.org/assignments/pcep>.\n"
  - contents:
    - "7.1.  PCEP Object\n   The \"Path Computation Element Protocol (PCEP) Numbers\"
      registry\n   contains a subregistry called \"PCEP Objects\".  IANA has allocated
      the\n   following code point in the \"PCEP Objects\" registry.\n      | Object-Class
      Value | Name        | Object-Type | Reference |\n      | 40                 |
      ASSOCIATION | 0: Reserved | RFC 8697  |\n                           Table 1:
      PCEP Object\n"
    title: 7.1.  PCEP Object
  - contents:
    - "7.2.  PCEP TLV\n   IANA has allocated the following code points in the \"PCEP
      TLV Type\n   Indicators\" registry.\n       | Value | Meaning                               |
      Reference |\n       | 29    | Operator-configured Association Range | RFC 8697
      \ |\n       | 30    | Global Association Source             | RFC 8697  |\n
      \      | 31    | Extended Association ID               | RFC 8697  |\n                     Table
      2: PCEP TLV Type Indicators\n   IANA has corrected the capitalization in the
      meaning for value 31 in\n   the above registry to \"Extended Association ID\";
      it was previously\n   listed as \"Extended Association Id\".\n   IANA has made
      a new assignment in the existing \"PCEP TLV Type\n   Indicators\" registry as
      follows:\n                  | Value | Meaning         | Reference |\n                  |
      35    | ASSOC-Type-List | RFC 8697  |\n                     Table 3: ASSOC-Type-List
      PCEP TLV\n                               Type Indicator\n"
    title: 7.2.  PCEP TLV
  - contents:
    - "7.3.  Association Flags\n   Per this document, IANA has created a subregistry
      of the \"Path\n   Computation Element Protocol (PCEP) Numbers\" registry for
      the bits\n   carried in the Flags field of the ASSOCIATION object.  The\n   subregistry
      is called \"ASSOCIATION Flag Field\".  New values are\n   assigned by Standards
      Action [RFC8126].  Each bit is tracked with the\n   following qualities:\n   *
      \ Bit number (counting from bit 0 as the most significant bit)\n   *  Capability
      description\n   *  Defining RFC\n                     | Bit | Description |
      Reference |\n                     | 15  | R (Removal) | RFC 8697  |\n                       Table
      4: New ASSOCIATION Flag\n"
    title: 7.3.  Association Flags
  - contents:
    - "7.4.  Association Type\n   Per this document, IANA has created a subregistry
      of the \"Path\n   Computation Element Protocol (PCEP) Numbers\" registry for
      the\n   Association Type field of the ASSOCIATION object.  The subregistry is\n
      \  called \"ASSOCIATION Type Field\".  New values are assigned by\n   Standards
      Action [RFC8126].  Each value is tracked with the following\n   qualities:\n
      \  *  Type\n   *  Name\n   *  Reference\n                      | Type | Name
      \    | Reference |\n                      | 0    | Reserved | RFC 8697  |\n
      \                         Table 5: New ASSOCIATION\n   Values 2-65535 are Unassigned.
      \ Future documents should request the\n   assignment of Association Types from
      this subregistry.\n"
    title: 7.4.  Association Type
  - contents:
    - "7.5.  PCEP-Error Object\n   IANA has allocated the following code points within
      the \"PCEP-ERROR\n   Object Error Types and Values\" subregistry of the \"Path
      Computation\n   Element Protocol (PCEP) Numbers\" registry as follows:\n     |
      Error-Type | Meaning     | Error-value            | Reference |\n     | 26         |
      Association | 0: Unassigned          | RFC 8697  |\n     |            | Error
      \      +------------------------+-----------+\n                    Table 6:
      PCEP-ERROR Types and Names\n"
    title: 7.5.  PCEP-Error Object
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   The security considerations described in [RFC8231]
    and [RFC5440]\n   apply to the extensions described in this document as well.\n
    \  Additional considerations related to a malicious PCEP speaker are\n   introduced,
    as associations could be spoofed and could be used as an\n   attack vector.  An
    attacker could attempt to create too many\n   associations in an attempt to load
    the PCEP peer.  The PCEP peer\n   responds with a PCErr message as described in
    Section 6.4.  An\n   attacker could impact LSP operations by creating bogus associations.\n
    \  Further, association groups could provide an adversary with the\n   opportunity
    to eavesdrop on the relationship between the LSPs.  Thus,\n   securing the PCEP
    session using Transport Layer Security (TLS)\n   [RFC8253], as per the recommendations
    and best current practices in\n   [RFC7525], is RECOMMENDED.\n   Much of the information
    carried in the ASSOCIATION object as per this\n   document is not extra sensitive.
    \ It often reflects information that\n   can also be derived from the LSP database,
    but the association\n   provides a much easier grouping of related LSPs and messages.\n
    \  Implementations and operators can, and should, use indirect values in\n   the
    ASSOCIATION object as a way to hide any sensitive business\n   relationships.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Manageability Considerations\n   All manageability requirements and considerations
    listed in [RFC5440]\n   and [RFC8231] apply to PCEP protocol extensions defined
    in this\n   document.  In addition, requirements and considerations listed in\n
    \  this section apply.\n"
  - contents:
    - "9.1.  Control of Function and Policy\n   A PCE or PCC implementation MUST allow
      Operator-configured\n   Associations and SHOULD allow the setting of the Operator-configured\n
      \  Association Range (Section 3.4) as described in this document.\n"
    title: 9.1.  Control of Function and Policy
  - contents:
    - "9.2.  Information and Data Models\n   The PCEP YANG module is defined in [PCEP-YANG].
      \ In the future, this\n   YANG module should be extended or augmented to provide
      the following\n   additional information related to association groups.\n   An
      implementation SHOULD allow the operator to view the associations\n   configured
      or created dynamically.  Future implementations SHOULD\n   allow the viewing
      of associations reported by each peer and the\n   current set of LSPs in the
      association.\n   It might also be useful to find out how many associations for
      each\n   Association Type currently exist and to know how many free\n   Association
      IDs are available for a particular Association Type and\n   source.\n"
    title: 9.2.  Information and Data Models
  - contents:
    - "9.3.  Liveness Detection and Monitoring\n   Mechanisms defined in this document
      do not imply any new liveness\n   detection and monitoring requirements in addition
      to those already\n   listed in [RFC5440].\n"
    title: 9.3.  Liveness Detection and Monitoring
  - contents:
    - "9.4.  Verifying Correct Operation\n   Mechanisms defined in this document do
      not imply any new operation\n   verification requirements in addition to those
      already listed in\n   [RFC5440] and [RFC8231].\n"
    title: 9.4.  Verifying Correct Operation
  - contents:
    - "9.5.  Requirements on Other Protocols\n   Mechanisms defined in this document
      do not imply any new requirements\n   on other protocols.\n"
    title: 9.5.  Requirements on Other Protocols
  - contents:
    - "9.6.  Impact on Network Operations\n   Mechanisms defined in [RFC5440] and
      [RFC8231] also apply to PCEP\n   extensions defined in this document.\n"
    title: 9.6.  Impact on Network Operations
  title: 9.  Manageability Considerations
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5511]
      \ Farrel, A., \"Routing Backus-Naur Form (RBNF): A Syntax\n              Used
      to Form Encoding Rules in Various Routing Protocol\n              Specifications\",
      RFC 5511, DOI 10.17487/RFC5511, April\n              2009, <https://www.rfc-editor.org/info/rfc5511>.\n
      \  [RFC6780]  Berger, L., Le Faucheur, F., and A. Narayanan, \"RSVP\n              ASSOCIATION
      Object Extensions\", RFC 6780,\n              DOI 10.17487/RFC6780, October
      2012,\n              <https://www.rfc-editor.org/info/rfc6780>.\n   [RFC7525]
      \ Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations
      for Secure Use of Transport Layer\n              Security (TLS) and Datagram
      Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,
      May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n   [RFC8051]
      \ Zhang, X., Ed. and I. Minei, Ed., \"Applicability of a\n              Stateful
      Path Computation Element (PCE)\", RFC 8051,\n              DOI 10.17487/RFC8051,
      January 2017,\n              <https://www.rfc-editor.org/info/rfc8051>.\n   [RFC8126]
      \ Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8231]  Crabbe, E., Minei,
      I., Medved, J., and R. Varga, \"Path\n              Computation Element Communication
      Protocol (PCEP)\n              Extensions for Stateful PCE\", RFC 8231,\n              DOI
      10.17487/RFC8231, September 2017,\n              <https://www.rfc-editor.org/info/rfc8231>.\n
      \  [RFC8281]  Crabbe, E., Minei, I., Sivabalan, S., and R. Varga, \"Path\n              Computation
      Element Communication Protocol (PCEP)\n              Extensions for PCE-Initiated
      LSP Setup in a Stateful PCE\n              Model\", RFC 8281, DOI 10.17487/RFC8281,
      December 2017,\n              <https://www.rfc-editor.org/info/rfc8281>.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC4657]  Ash, J., Ed. and J.L. Le Roux,
      Ed., \"Path Computation\n              Element (PCE) Communication Protocol
      Generic\n              Requirements\", RFC 4657, DOI 10.17487/RFC4657, September\n
      \             2006, <https://www.rfc-editor.org/info/rfc4657>.\n   [RFC4872]
      \ Lang, J.P., Ed., Rekhter, Y., Ed., and D. Papadimitriou,\n              Ed.,
      \"RSVP-TE Extensions in Support of End-to-End\n              Generalized Multi-Protocol
      Label Switching (GMPLS)\n              Recovery\", RFC 4872, DOI 10.17487/RFC4872,
      May 2007,\n              <https://www.rfc-editor.org/info/rfc4872>.\n   [RFC4873]
      \ Berger, L., Bryskin, I., Papadimitriou, D., and A. Farrel,\n              \"GMPLS
      Segment Recovery\", RFC 4873, DOI 10.17487/RFC4873,\n              May 2007,
      <https://www.rfc-editor.org/info/rfc4873>.\n   [RFC6007]  Nishioka, I. and D.
      King, \"Use of the Synchronization\n              VECtor (SVEC) List for Synchronized
      Dependent Path\n              Computations\", RFC 6007, DOI 10.17487/RFC6007,
      September\n              2010, <https://www.rfc-editor.org/info/rfc6007>.\n
      \  [RFC7551]  Zhang, F., Ed., Jing, R., and R. Gandhi, Ed., \"RSVP-TE\n              Extensions
      for Associated Bidirectional Label Switched\n              Paths (LSPs)\", RFC
      7551, DOI 10.17487/RFC7551, May 2015,\n              <https://www.rfc-editor.org/info/rfc7551>.\n
      \  [RFC8253]  Lopez, D., Gonzalez de Dios, O., Wu, Q., and D. Dhody,\n              \"PCEPS:
      Usage of TLS to Provide a Secure Transport for the\n              Path Computation
      Element Communication Protocol (PCEP)\",\n              RFC 8253, DOI 10.17487/RFC8253,
      October 2017,\n              <https://www.rfc-editor.org/info/rfc8253>.\n   [PCEP-YANG]\n
      \             Dhody, D., Ed., Hardwick, J., Beeram, V., and J. Tantsura,\n              \"A
      YANG Data Model for Path Computation Element\n              Communications Protocol
      (PCEP)\", Work in Progress,\n              Internet-Draft, draft-ietf-pce-pcep-yang-13,
      31 October\n              2019,\n              <https://tools.ietf.org/html/draft-ietf-pce-pcep-yang-13>.\n
      \  [PCE-PROTECTION]\n              Ananthakrishnan, H., Sivabalan, S., Barth,
      C., Minei, I.,\n              and M. Negi, \"PCEP Extensions for Associating
      Working and\n              Protection LSPs with Stateful PCE\", Work in Progress,\n
      \             Internet-Draft, draft-ietf-pce-stateful-path-protection-\n              11,
      25 September 2019, <https://tools.ietf.org/html/draft-\n              ietf-pce-stateful-path-protection-11>.\n
      \  [PCE-DIVERSITY]\n              Litkowski, S., Sivabalan, S., Barth, C., and
      M. Negi,\n              \"Path Computation Element Communication Protocol (PCEP)\n
      \             Extension for LSP Diversity Constraint Signaling\", Work in\n
      \             Progress, Internet-Draft, draft-ietf-pce-association-\n              diversity-14,
      26 January 2020,\n              <https://tools.ietf.org/html/draft-ietf-pce-association-\n
      \             diversity-14>.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Appendix A.  Example of an Operator-Configured Association Range\n   Consider
    an Association Type T1 (which allows both dynamic and\n   Operator-configured
    Associations with a default range of <0x1000,\n   0xffff>).  Consider that, because
    of the needs of the network, the\n   PCE needs to create more dynamic associations
    and would like to\n   change the Association Range to <0xbffe, 0xffff> instead.
    \ During\n   PCEP session establishment, the PCE would advertise the new range.\n
    \  The PCC could skip advertising, as the default values are used.  If a\n   PCC
    is creating a dynamic association (with the PCC as the\n   Association Source),
    it needs to pick a free Association ID for type\n   T1 in the range <0x1, 0x0fff>,
    whereas if a PCE is creating a dynamic\n   association (with the PCE as the Association
    Source), it needs to\n   pick a free Association ID from the range <0x1, 0xbffd>.
    \ Similarly,\n   if an Operator-configured Association is manually configured
    with the\n   PCC as the Association Source, it should be from the range <0x1000,\n
    \  0xffff>, whereas if the PCE is the Association Source, it should be\n   from
    the range <0xbffe, 0xffff>.  If the Association Source is not a\n   PCEP peer
    (for example, an NMS), then the default range of <0x1000,\n   0xffff> is considered.\n"
  title: Appendix A.  Example of an Operator-Configured Association Range
- contents:
  - "Acknowledgments\n   We would like to thank Yuji Kamite and Joshua George for
    their\n   contributions to this document.  Thanks also to Venugopal Reddy,\n   Cyril
    Margaria, Rakesh Gandhi, Mike Koldychev, and Adrian Farrel for\n   their useful
    comments.\n   We would like to thank Julien Meuric for shepherding this document\n
    \  and providing comments with text suggestions.\n   Thanks to Stig Venaas for
    the RTGDIR review comments.\n   Thanks to Alvaro Retana, Mirja K\xFChlewind, Martin
    Vigoureux, Barry\n   Leiba, Eric Vyncke, Suresh Krishnan, and Benjamin Kaduk for
    the IESG\n   comments.\n"
  title: Acknowledgments
- contents:
  - "Contributors\n   Stephane Litkowski\n   Orange\n   Email: stephane.litkowski@orange.com\n
    \  Xian Zhang\n   Huawei Technologies\n   F3-1-B RnD Center, Huawei Base\n   Bantian,
    Longgang District\n   Shenzhen, 518129\n   China\n   Email: zhang.xian@huawei.com\n
    \  Mustapha Aissaoui\n   Nokia\n   Email: mustapha.aissaoui@nokia.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Ina Minei\n   Google, Inc.\n   1600 Amphitheatre Parkway\n
    \  Mountain View, CA 94043\n   United States of America\n   Email: inaminei@google.com\n
    \  Edward Crabbe\n   Individual Contributor\n   Email: edward.crabbe@gmail.com\n
    \  Siva Sivabalan\n   Cisco Systems, Inc.\n   170 West Tasman Dr.\n   San Jose,
    CA 95134\n   United States of America\n   Email: msiva@cisco.com\n   Hariharan
    Ananthakrishnan\n   Netflix\n   Email: hari@netflix.com\n   Dhruv Dhody\n   Huawei\n
    \  Divyashree Techno Park, Whitefield\n   Bangalore 560066\n   KA\n   India\n
    \  Email: dhruv.ietf@gmail.com\n   Yosuke Tanaka\n   NTT Communications Corporation\n
    \  Granpark Tower 3-4-1 Shibaura, Minato-ku, Tokyo\n   108-8118\n"
  title: Authors' Addresses
