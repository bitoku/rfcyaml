Abstract This document specifies two Lightweight Directory Access Protocol (LDAP) attributes, vendorName and vendorVersion that MAY be included in the root DSA specific Entry (DSE) to advertise vendor specific information.
These two attributes supplement the attributes defined in section 3.4 of RFC 2251.
The information held in these attributes MAY be used for display and informational purposes and MUST NOT be used for feature advertisement or discovery.
Conventions used in this document The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2219] 1.
Overview LDAP clients discover server specific data such as available controls, extensions, etc.
by reading the root DSE.
See section 3.4 of [RFC2251] for details.
For display, information, and limited function discovery, it is desirable to be able to query an LDAP server to determine the vendor name of that server and also to see what version of that vendor's code is currently installed.
There are many ways in which a particular version of a vendor's LDAP server implementation may be functionally incomplete, or may contain software anomalies.
It is impossible to identify every known shortcoming of an LDAP server with the given set of server data advertisement attributes.
Furthermore, often times, the anomalies of an implementation are not found until after the implementation has been distributed, deployed, and is in use.
The attributes defined in this document MAY be used by client implementations in order to identify a particular server implementation so that it can 'work around' such anomalies.
The attributes defined in this document MUST NOT be used to gather information related to supported features of an LDAP implementation.
All LDAP features, mechanisms, and capabilities if advertised MUST be advertised through other mechanisms, preferably advertisement mechanisms defined in concert with said features, mechanisms, and capabilities.
These attributes are an addition to the Server specific Data Requirements defined in section 3.4 of [RFC2251].
The associated syntaxes are defined in section 4 of [RFC2252].
Servers MAY restrict access to vendorName or vendorVersion and clients
MUST NOT expect these attributes to be available.
This attribute contains a single string, which represents the name of the LDAP server implementer.
All LDAP server implementations SHOULD maintain a vendorName, which is generally the name of the company that wrote the LDAP Server code like "Novell,
NO USER MODIFICATION USAGE dSAOperation )
This attribute contains a string which represents the version of the LDAP server implementation.
All LDAP server implementations SHOULD maintain a vendorVersion.
Note that this value is typically a release value comprised of a string and/or a string of numbers used by the developer of the LDAP server product (as opposed to the supportedLDAPVersion, which specifies the version of the LDAP protocol supported by this server).
This is single valued so that it will only have one version value.
This string MUST be unique between two versions, but there are no other syntactic restrictions on the value or the way it is formatted.
( 1.3.6.1.1.5 NAME 'vendorVersion' EQUALITY
NO USER MODIFICATION USAGE dSAOperation )
The intent behind the equality match on vendorVersion is to not allow a less than or greater than type of query.
Say release "LDAPv3 8.0" has a problem that is fixed in the next release "LDAPv3 8.5", but in the mean time there is also an update release say version "LDAPv3 8.01" that fixes the problem.
This will hopefully stop the client from saying it will not work with a version less than "LDAPv3 8.5" when it would also work with "LDAPv3 8.01".
With the equality match the client would have to exactly match what it is looking for.
Notes to Server Implementers Server implementers may consider tying the vendorVersion attribute value to the build mechanism so that it is automatically updated when the version value changes.
As mentioned in section 2.1, the use of vendorName and vendorVersion MUST NOT be used to discover features.
It should be noted that an anomalies often on affect subset of implementations reporting the same version information.
Most implementations support multiple platforms, have numerous configuration options, and often support plug ins.
Client implementations SHOULD be written in such a way as to accept any value in the vendorName and vendorVersion attributes.
If a client implementation does not recognize the specific vendorName or vendorVersion as one it recognizes, then for the purposes of 'working around' anomalies, the client MUST assume that the server is complete and correct.
The client MUST work with implementations that do not publish these attributes.
The vendorName and vendorVersion attributes are provided only as display or informational mechanisms, or as anomaly identifying mechanisms.
Client and application implementers must consider that the existence of a given value in the vendorName or vendorVersion attribute is no guarantee that the server was actually built by the asserted vendor or that its version is the asserted version and should act accordingly.
Server implementers should be aware that this information could be used to exploit a security hole a server provides either by feature or flaw.
This document seeks to create two attributes, vendorName and vendorVersion, which the IANA will primarily be responsible.
This is a one time effort; there is no need for any recurring assignment after this stage.
