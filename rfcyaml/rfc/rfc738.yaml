- title: __initial_text__
  contents:
  - "                              Time Server\nThis note describes the Time Server\
    \ protocol, as currently implemented\non ITS hosts (i.e. MIT-(AI/ML/MC/DMS)).\
    \  The idea is to provide a\nsite-independent, machine readable date and time\
    \ in as efficient and\nswift a manner as possible; its motivation arises from\
    \ the fact that not\nall systems have a date/time clock, and all are subject to\
    \ occasional\nhuman or machine error.  The use of time-servers makes it possible\
    \ to\nquickly confirm or correct a system's idea of the time, by making a\nbrief\
    \ poll of several independent sites on the network.\nIn particular the network\
    \ time server works as follows:\n   S: Listen on socket 37 (45 octal).\n   U:\
    \ Connect to socket 37 [not ICP].\n   S: Send the time as a 32 bit binary number.\n\
    \   U: Close the connection.\n   S: Close the connection.\nNote that this is not\
    \ a normal ICP sequence.  Rather, instead of sending\na 32-bit socket number to\
    \ reconnect to, the server returns a 32-bit time\nvalue and closes the connection.\
    \  If the server is unable to determine\nthe time at its site, it should either\
    \ refuse the connection or close it\nwithout sending anything.\nThe time is the\
    \ number of seconds since 0000 (midnight) 1 January 1900\nGMT, such that the time\
    \ 1 is 12:00:01 am on 1 January 1900 GMT; this\nbase will serve until the year\
    \ 2036.  As a further example, the most\nrecent leap year as of this writing began\
    \ from the time 2,398,291,200\nwhich corresponds to 0000 1 Jan 1976 GMT.\n"
