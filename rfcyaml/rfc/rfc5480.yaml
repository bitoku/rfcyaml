- contents:
  - '      Elliptic Curve Cryptography Subject Public Key Information

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document specifies the syntax and semantics for the Subject\n
    \  Public Key Information field in certificates that support Elliptic\n   Curve
    Cryptography.  This document updates Sections 2.3.5 and 5, and\n   the ASN.1 module
    of \"Algorithms and Identifiers for the Internet\n   X.509 Public Key Infrastructure
    Certificate and Certificate\n   Revocation List (CRL) Profile\", RFC 3279.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Terminology ................................................3\n   2.
    Subject Public Key Information Fields ...........................3\n      2.1.
    Elliptic Curve Cryptography Public Key Algorithm\n           Identifiers ................................................3\n
    \     2.2. Subject Public Key .........................................7\n   3.
    Key Usage Bits ..................................................7\n   4. Security
    Considerations .........................................8\n   5. ASN.1 Considerations
    ...........................................10\n   6. IANA Considerations ............................................11\n
    \  7. Acknowledgments ................................................11\n   8.
    References .....................................................11\n      8.1.
    Normative References ......................................11\n      8.2. Informative
    References ....................................12\n   Appendix A. ASN.1 Module
    ..........................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document specifies the format of the subjectPublicKeyInfo
    field\n   in X.509 certificates [PKI] that use Elliptic Curve Cryptography\n   (ECC).
    \ It updates RFC 3279 [PKI-ALG].  This document specifies the\n   encoding formats
    for public keys used with the following ECC\n   algorithms:\n      o Elliptic
    Curve Digital Signature Algorithm (ECDSA);\n      o Elliptic Curve Diffie-Hellman
    (ECDH) family schemes; and\n      o Elliptic Curve Menezes-Qu-Vanstone (ECMQV)
    family schemes.\n   Two methods for specifying the algorithms that can be used
    with the\n   subjectPublicKey are defined.  One method allows the key to be used\n
    \  with any ECC algorithm, while the other method restricts the usage of\n   the
    key to specific algorithms.  To promote interoperability, this\n   document indicates
    which is required to implement for Certification\n   Authorities (CAs) that implement
    ECC algorithms and relying parties\n   that claim to process ECC algorithms.\n
    \  The ASN.1 [X.680] module in this document includes ASN.1 for ECC\n   algorithms.
    \ It also includes ASN.1 for non-ECC algorithms defined in\n   [PKI-ALG] and [PKI-ADALG],
    even though the associated text is\n   unaffected.  By updating all of the ASN.1
    from [PKI-ALG] in this\n   document, implementers only need to use the module
    found in this\n   document.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and
      \"OPTIONAL\" in this\n   document are to be interpreted as described in [MUSTSHOULD].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Subject Public Key Information Fields\n   In the X.509 certificate, the subjectPublicKeyInfo
    field has the\n   SubjectPublicKeyInfo type, which has the following ASN.1 syntax:\n
    \    SubjectPublicKeyInfo  ::=  SEQUENCE  {\n       algorithm         AlgorithmIdentifier,\n
    \      subjectPublicKey  BIT STRING\n     }\n   The fields in SubjectPublicKeyInfo
    have the following meanings:\n      o algorithm is the algorithm identifier and
    parameters for the ECC\n        public key.\n      o subjectPublicKey is the ECC
    public key.  See Section 2.2.\n   The AlgorithmIdentifier type, which is included
    for convenience\n   [PKI], is defined as follows:\n      AlgorithmIdentifier  ::=
    \ SEQUENCE  {\n        algorithm   OBJECT IDENTIFIER,\n        parameters  ANY
    DEFINED BY algorithm OPTIONAL\n      }\n   The fields in AlgorithmIdentifier have
    the following meanings:\n      o algorithm identifies the cryptographic algorithm
    with an object\n        identifier.  See Section 2.1.\n      o parameters, which
    are optional, are the associated parameters\n        for the algorithm identifier
    in the algorithm field.  See\n        Section 2.1.1.\n"
  - contents:
    - "2.1.  Elliptic Curve Cryptography Public Key Algorithm Identifiers\n   The
      algorithm field in the SubjectPublicKeyInfo structure [PKI]\n   indicates the
      algorithm and any associated parameters for the ECC\n   public key (see Section
      2.2).  Three algorithm identifiers are\n   defined in this document:\n      o
      id-ecPublicKey indicates that the algorithms that can be used\n        with
      the subject public key are unrestricted.  The key is only\n        restricted
      by the values indicated in the key usage certificate\n        extension (see
      Section 3).  id-ecPublicKey MUST be supported.\n        See Section 2.1.1.  This
      value is also included in certificates\n        when a public key is used with
      ECDSA.\n      o id-ecDH indicates that the algorithm that can be used with the\n
      \       subject public key is restricted to the Elliptic Curve Diffie-\n        Hellman
      algorithm.  See Section 2.1.2.  id-ecDH MAY be\n        supported.\n      o
      id-ecMQV indicates that the algorithm that can be used with the\n        subject
      public key is restricted to the Elliptic Curve Menezes-\n        Qu-Vanstone
      key agreement algorithm.  See Section 2.1.2.\n        id-ecMQV MAY be supported.\n"
    - contents:
      - "2.1.1.  Unrestricted Algorithm Identifier and Parameters\n   The \"unrestricted\"
        algorithm identifier is:\n     id-ecPublicKey OBJECT IDENTIFIER ::= {\n       iso(1)
        member-body(2) us(840) ansi-X9-62(10045) keyType(2) 1 }\n   The public key
        (ECPoint) syntax is described in Section 2.2.\n   The parameter for id-ecPublicKey
        is as follows and MUST always be\n   present:\n     ECParameters ::= CHOICE
        {\n       namedCurve         OBJECT IDENTIFIER\n       -- implicitCurve   NULL\n
        \      -- specifiedCurve  SpecifiedECDomain\n     }\n       -- implicitCurve
        and specifiedCurve MUST NOT be used in PKIX.\n       -- Details for SpecifiedECDomain
        can be found in [X9.62].\n       -- Any future additions to this CHOICE should
        be coordinated\n       -- with ANSI X9.\n   The fields in ECParameters have
        the following meanings:\n      o namedCurve identifies all the required values
        for a particular\n        set of elliptic curve domain parameters to be represented
        by an\n        object identifier.  This choice MUST be supported.  See Section\n
        \       2.1.1.1.\n      o implicitCurve allows the elliptic curve domain parameters
        to be\n        inherited.  This choice MUST NOT be used.\n      o specifiedCurve,
        which is of type SpecifiedECDomain type (defined\n        in [X9.62]), allows
        all of the elliptic curve domain parameters\n        to be explicitly specified.
        \ This choice MUST NOT be used.  See\n        Section 5, \"ASN.1 Considerations\".\n
        \  The addition of any new choices in ECParameters needs to be\n   coordinated
        with ANSI X9.\n   The AlgorithmIdentifier within SubjectPublicKeyInfo is the
        only place\n   within a certificate where the elliptic curve domain parameters
        may\n   be located.  If the elliptic curve domain parameters are not present,\n
        \  then clients MUST reject the certificate.\n"
      - contents:
        - "2.1.1.1.  Named Curve\n   The namedCurve field in ECParameters uses object
          identifiers to name\n   well-known curves.  This document publishes curve
          identifiers for the\n   fifteen NIST-recommended curves [FIPS186-3].  Other
          documents can\n   publish other name curve identifiers.  The NIST-named
          curves are:\n     -- Note that in [X9.62] the curves are referred to as
          'ansiX9' as\n     -- opposed to 'sec'.  For example, secp192r1 is the same
          curve as\n     -- ansix9p192r1.\n     -- Note that in [PKI-ALG] the secp192r1
          curve was referred to as\n     -- prime192v1 and the secp256r1 curve was
          referred to as\n     -- prime256v1.\n     -- Note that [FIPS186-3] refers
          to secp192r1 as P-192, secp224r1 as\n     -- P-224, secp256r1 as P-256,
          secp384r1 as P-384, and secp521r1 as\n     -- P-521.\n     secp192r1 OBJECT
          IDENTIFIER ::= {\n       iso(1) member-body(2) us(840) ansi-X9-62(10045)
          curves(3)\n       prime(1) 1 }\n     sect163k1 OBJECT IDENTIFIER ::= {\n
          \      iso(1) identified-organization(3) certicom(132) curve(0) 1 }\n     sect163r2
          OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132)
          curve(0) 15 }\n     secp224r1 OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3)
          certicom(132) curve(0) 33 }\n     sect233k1 OBJECT IDENTIFIER ::= {\n       iso(1)
          identified-organization(3) certicom(132) curve(0) 26 }\n     sect233r1 OBJECT
          IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132)
          curve(0) 27 }\n     secp256r1 OBJECT IDENTIFIER ::= {\n       iso(1) member-body(2)
          us(840) ansi-X9-62(10045) curves(3)\n       prime(1) 7 }\n     sect283k1
          OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132)
          curve(0) 16 }\n     sect283r1 OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3)
          certicom(132) curve(0) 17 }\n     secp384r1 OBJECT IDENTIFIER ::= {\n       iso(1)
          identified-organization(3) certicom(132) curve(0) 34 }\n     sect409k1 OBJECT
          IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132)
          curve(0) 36 }\n     sect409r1 OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3)
          certicom(132) curve(0) 37 }\n     secp521r1 OBJECT IDENTIFIER ::= {\n       iso(1)
          identified-organization(3) certicom(132) curve(0) 35 }\n     sect571k1 OBJECT
          IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132)
          curve(0) 38 }\n     sect571r1 OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3)
          certicom(132) curve(0) 39 }\n"
        title: 2.1.1.1.  Named Curve
      title: 2.1.1.  Unrestricted Algorithm Identifier and Parameters
    - contents:
      - "2.1.2.  Restricted Algorithm Identifiers and Parameters\n   Two \"restricted\"
        algorithms are defined for key agreement algorithms:\n   the Elliptic Curve
        Diffie-Hellman (ECDH) key agreement family schemes\n   and the Elliptic Curve
        Menezes-Qu-Vanstone (ECMQV) key agreement\n   family schemes.  Both algorithms
        are identified by an object\n   identifier and have parameters.  The object
        identifier varies based\n   on the algorithm, but the parameters are always
        ECParameters and they\n   MUST always be present (see Section 2.1.1).\n   The
        ECDH algorithm uses the following object identifier:\n     id-ecDH OBJECT
        IDENTIFIER ::= {\n       iso(1) identified-organization(3) certicom(132) schemes(1)\n
        \      ecdh(12) }\n   The ECMQV algorithm uses the following object identifier:\n
        \    id-ecMQV OBJECT IDENTIFIER ::= {\n       iso(1) identified-organization(3)
        certicom(132) schemes(1)\n       ecmqv(13) }\n"
      title: 2.1.2.  Restricted Algorithm Identifiers and Parameters
    title: 2.1.  Elliptic Curve Cryptography Public Key Algorithm Identifiers
  - contents:
    - "2.2.  Subject Public Key\n   The subjectPublicKey from SubjectPublicKeyInfo
      is the ECC public key.\n   ECC public keys have the following syntax:\n     ECPoint
      ::= OCTET STRING\n   Implementations of Elliptic Curve Cryptography according
      to this\n   document MUST support the uncompressed form and MAY support the\n
      \  compressed form of the ECC public key.  The hybrid form of the ECC\n   public
      key from [X9.62] MUST NOT be used.  As specified in [SEC1]:\n      o The elliptic
      curve public key (a value of type ECPoint that is\n        an OCTET STRING)
      is mapped to a subjectPublicKey (a value of\n        type BIT STRING) as follows:
      the most significant bit of the\n        OCTET STRING value becomes the most
      significant bit of the BIT\n        STRING value, and so on; the least significant
      bit of the OCTET\n        STRING becomes the least significant bit of the BIT
      STRING.\n        Conversion routines are found in Sections 2.3.1 and 2.3.2 of\n
      \       [SEC1].\n      o The first octet of the OCTET STRING indicates whether
      the key is\n        compressed or uncompressed.  The uncompressed form is indicated\n
      \       by 0x04 and the compressed form is indicated by either 0x02 or\n        0x03
      (see 2.3.3 in [SEC1]).  The public key MUST be rejected if\n        any other
      value is included in the first octet.\n"
    title: 2.2.  Subject Public Key
  title: 2.  Subject Public Key Information Fields
- contents:
  - "3.  Key Usage Bits\n   If the keyUsage extension is present in a Certification
    Authority\n   (CA) certificate that indicates id-ecPublicKey in\n   SubjectPublicKeyInfo,
    then any combination of the following values\n   MAY be present:\n     digitalSignature;\n
    \    nonRepudiation;\n     keyAgreement;\n     keyCertSign; and\n     cRLSign.\n
    \  If the CA certificate keyUsage extension asserts keyAgreement, then\n   it
    MAY assert either encipherOnly or decipherOnly.  However, this\n   specification
    RECOMMENDS that if keyCertSign or cRLSign is present,\n   then keyAgreement, encipherOnly,
    and decipherOnly SHOULD NOT be\n   present.\n   If the keyUsage extension is present
    in an End Entity (EE)\n   certificate that indicates id-ecPublicKey in SubjectPublicKeyInfo,\n
    \  then any combination of the following values MAY be present:\n     digitalSignature;\n
    \    nonRepudiation; and\n     keyAgreement.\n   If the EE certificate keyUsage
    extension asserts keyAgreement, then\n   it MAY assert either encipherOnly or
    decipherOnly.\n   If the keyUsage extension is present in a certificate that indicates\n
    \  id-ecDH or id-ecMQV in SubjectPublicKeyInfo, then the following MUST\n   be
    present:\n     keyAgreement;\n   one of the following MAY be present:\n     encipherOnly;
    or\n     decipherOnly.\n   If the keyUsage extension is present in a certificate
    that indicates\n   id-ecDH or id-ecMQV in SubjectPublicKeyInfo, then the following\n
    \  values MUST NOT be present:\n     digitalSignature;\n     nonRepudiation;\n
    \    keyTransport;\n     keyCertSign; and\n     cRLSign.\n"
  title: 3.  Key Usage Bits
- contents:
  - "4.  Security Considerations\n   The security considerations in [PKI-ALG] apply.\n
    \  When implementing ECC in X.509 Certificates and Certificate\n   Revocation
    Lists (CRLs), there are three algorithm-related choices\n   that need to be made
    for the signatureAlgorithm field in a\n   Certificate or CertificateList:\n   1)
    What is the public key size?\n   2) What is the hash algorithm [FIPS180-3]?\n
    \  3) What is the curve?\n   Consideration must be given by the CA to the strength
    of the security\n   provided by each of these choices.  Security is measured in
    bits,\n   where a strong symmetric cipher with a key of X bits is said to\n   provide
    X bits of security.  It is recommended that the bits of\n   security provided
    by each choice are roughly equivalent.  The\n   following table provides comparable
    minimum bits of security\n   [SP800-57] for the ECDSA key sizes and message digest
    algorithms.  It\n   also lists curves (see Section 2.1.1.1) for the key sizes.\n
    \  Minimum  | ECDSA    | Message    | Curves\n   Bits of  | Key Size | Digest
    \    |\n   Security |          | Algorithms |\n   ---------+----------+------------+-----------\n
    \  80       | 160-223  | SHA-1      | sect163k1\n            |          | SHA-224
    \   | secp163r2\n            |          | SHA-256    | secp192r1\n            |
    \         | SHA-384    |\n            |          | SHA-512    |\n   ---------+----------+------------+-----------\n
    \  112      | 224-255  | SHA-224    | secp224r1\n            |          | SHA-256
    \   | sect233k1\n            |          | SHA-384    | sect233r1\n            |
    \         | SHA-512    |\n   ---------+----------+------------+-----------\n   128
    \     | 256-383  | SHA-256    | secp256r1\n            |          | SHA-384    |
    sect283k1\n            |          | SHA-512    | sect283r1\n   ---------+----------+------------+-----------\n
    \  192      | 384-511  | SHA-384    | secp384r1\n            |          | SHA-512
    \   | sect409k1\n            |          |            | sect409r1\n   ---------+----------+------------+-----------\n
    \  256      | 512+     | SHA-512    | secp521r1\n            |          |            |
    sect571k1\n            |          |            | sect571r1\n   ---------+----------+------------+-----------\n
    \  To promote interoperability, the following choices are RECOMMENDED:\n   Minimum
    \ | ECDSA    | Message    | Curves\n   Bits of  | Key Size | Digest     |\n   Security
    |          | Algorithms |\n   ---------+----------+------------+-----------\n
    \  80       | 192      | SHA-256    | secp192r1\n   ---------+----------+------------+-----------\n
    \  112      | 224      | SHA-256    | secp224r1\n   ---------+----------+------------+-----------\n
    \  128      | 256      | SHA-256    | secp256r1\n   ---------+----------+------------+-----------\n
    \  192      | 384      | SHA-384    | secp384r1\n   ---------+----------+------------+-----------\n
    \  256      | 512      | SHA-512    | secp521r1\n   ---------+----------+------------+-----------\n
    \  Using a larger hash value and then truncating it consumes more\n   processing
    power than is necessary.  This is more important on\n   constrained devices.  Since
    the signer does not know the environment\n   that the recipient will use to validate
    the signature, it is better\n   to use a hash function that provides the desired
    hash value output\n   size, and no more.\n   There are security risks with using
    keys not associated with well-\n   known and widely reviewed curves.  For example,
    the curve may not\n   satisfy the Menezes-Okamoto-Vanstone (MOV) condition [X9.62]
    or the\n   curve may be vulnerable to the Anomalous attack [X9.62].\n   Additionally,
    either a) all of the arithmetic properties of a\n   candidate ECC public key must
    be validated to ensure that it has the\n   unique correct representation in the
    correct (additive) subgroup (and\n   therefore is also in the correct EC group)
    specified by the\n   associated ECC domain parameters, or b) some of the arithmetic\n
    \  properties of a candidate ECC public key must be validated to ensure\n   that
    it is in the correct group (but not necessarily the correct\n   subgroup) specified
    by the associated ECC domain parameters\n   [SP800-56A].\n   As noted in [PKI-ALG],
    the use of MD2 and MD5 for new applications is\n   discouraged.  It is still reasonable
    to use MD2 and MD5 to verify\n   existing signatures.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  ASN.1 Considerations\n   [X9.62] defines additional options for ECParameters
    and ECDSA-Sig-\n   Value [PKI-ALG].  If an implementation needs to use these options,\n
    \  then use the [X9.62] ASN.1 module.  This RFC contains a conformant\n   subset
    of the ASN.1 module defined in [X9.62].\n   If an implementation generates a PER
    [X.691] encoding using the ASN.1\n   module found in this specification, it might
    not achieve the same\n   encoded output as one that uses the [X9.62] module.  PER
    is not\n   required by either the PKIX or S/MIME environments.  If an\n   implementation
    environment requires PER, then implementation concerns\n   are less likely with
    the use of the [X9.62] module.\n"
  title: 5.  ASN.1 Considerations
- contents:
  - "6.  IANA Considerations\n   This document makes extensive use of object identifiers
    to register\n   public key types, elliptic curves, and algorithms.  Most are\n
    \  registered in the ANSI X9.62 arc, with the exception of the hash\n   algorithms
    (which are in the NIST arc) and many of the curves (which\n   are in the Certicom
    Inc. arc; these curves have been adopted by ANSI\n   and NIST).  Additionally,
    an object identifier is used to identify\n   the ASN.1 module found in Appendix
    A.  It is defined in an arc\n   delegated by IANA to the PKIX Working Group.  No
    further action by\n   IANA is necessary for this document or any anticipated updates.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Acknowledgments\n   The authors wish to thank Stephen Farrell, Alfred Hoenes,
    Johannes\n   Merkle, Jim Schaad, and Carl Wallace for their valued input.\n"
  title: 7.  Acknowledgments
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [FIPS180-3]  National Institute of Standards
      and Technology (NIST),\n                FIPS Publication 180-3: Secure Hash
      Standard, October\n                2008.\n   [FIPS186-3]  National Institute
      of Standards and Technology (NIST),\n                FIPS Publication 186-3:
      Digital Signature Standard,\n                (draft) November 2008.\n   [MUSTSHOULD]
      Bradner, S., \"Key words for use in RFCs to Indicate\n                Requirement
      Levels\", BCP 14, RFC 2119, March 1997.\n   [PKI]        Cooper, D., Santesson,
      S., Farrell, S., Boeyen, S.,\n                Housley, R., and W. Polk, \"Internet
      X.509 Public Key\n                Infrastructure Certificate and Certificate
      Revocation\n                List (CRL) Profile\", RFC 5280, May 2008.\n   [PKI-ALG]
      \   Bassham, L., Polk, W., and R. Housley, \"Algorithms and\n                Identifiers
      for the Internet X.509 Public Key\n                Infrastructure Certificate
      and Certificate Revocation\n                List (CRL) Profile\", RFC 3279,
      April 2002.\n   [RSAOAEP]    Schaad, J., Kaliski, B., and R. Housley, \"Additional\n
      \               Algorithms and Identifiers for RSA Cryptography for use\n                in
      the Internet X.509 Public Key Infrastructure\n                Certificate and
      Certificate Revocation List (CRL)\n                Profile\", RFC 4055, June
      2005.\n   [SEC1]       Standards for Efficient Cryptography Group (SECG), \"SEC\n
      \               1: Elliptic Curve Cryptography\", Version 1.0, September\n                2000.\n
      \  [X9.62]      American National Standards Institute (ANSI), ANS\n                X9.62-2005:
      The Elliptic Curve Digital Signature\n                Algorithm (ECDSA), 2005.\n
      \  [X.680]      ITU-T Recommendation X.680 (2002) | ISO/IEC 8824-1:2002.\n                Information
      Technology - Abstract Syntax Notation One.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [PKI-ADALG]  Dang, Q., Santesson, S., Moriarty,
      K., Brown, D., and T.\n                Polk, \"Internet X.509 Public Key Infrastructure:\n
      \               Additional Algorithms and Identifiers for DSA and\n                ECDSA\",
      Work in Progress, October 2008.\n   [SP800-56A]  National Institute of Standards
      and Technology (NIST),\n                Special Publication 800-56A: Recommendation
      for Pair-\n                Wise Key Establishment Schemes Using Discrete Logarithm\n
      \               Cryptography (Revised), March 2007.\n   [SP800-57]   National
      Institute of Standards and Technology (NIST),\n                Special Publication
      800-57: Recommendation for Key\n                Management - Part 1 (Revised),
      March 2007.\n   [X.691]      ITU-T Recommendation X.691 (2002) | ISO/IEC 8825-2:2002.\n
      \               Information Technology - ASN.1 Encoding Rules:\n                Specification
      of Packed Encoding Rules.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  ASN.1 Module\n   PKIX1Algorithms2008 { iso(1) identified-organization(3)
    dod(6)\n     internet(1) security(5) mechanisms(5) pkix(7) id-mod(0) 45 }\n   DEFINITIONS
    EXPLICIT TAGS ::=\n   BEGIN\n   -- EXPORTS ALL;\n   IMPORTS\n   -- From RFC 4055
    [RSAOAEP]\n   id-sha224, id-sha256, id-sha384, id-sha512\n     FROM PKIX1-PSS-OAEP-Algorithms\n
    \      { iso(1) identified-organization(3) dod(6) internet(1)\n         security(5)
    mechanisms(5) pkix(7) id-mod(0)\n         id-mod-pkix1-rsa-pkalgs(33) }\n   ;\n
    \  --\n   -- Message Digest Algorithms\n   --\n   -- MD-2\n   -- Parameters are
    NULL\n   id-md2  OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) rsadsi(113549)
    digestAlgorithm(2) 2 }\n   -- MD-5\n   -- Parameters are NULL\n   id-md5  OBJECT
    IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) rsadsi(113549)digestAlgorithm(2)
    5 }\n   -- SHA-1\n   -- Parameters are preferred absent\n   id-sha1 OBJECT IDENTIFIER
    ::= {\n     iso(1) identified-organization(3) oiw(14) secsig(3)\n     algorithm(2)
    26 }\n   -- SHA-224\n   -- Parameters are preferred absent\n   -- id-sha224 OBJECT
    IDENTIFIER ::= {\n   --   joint-iso-itu-t(2) country(16) us(840) organization(1)
    gov(101)\n   --   csor(3) nistalgorithm(4) hashalgs(2) 4 }\n   -- SHA-256\n   --
    Parameters are preferred absent\n   -- id-sha256 OBJECT IDENTIFIER ::= {\n   --
    \  joint-iso-itu-t(2) country(16) us(840) organization(1) gov(101)\n   --   csor(3)
    nistalgorithm(4) hashalgs(2) 1 }\n   -- SHA-384\n   -- Parameters are preferred
    absent\n   -- id-sha384 OBJECT IDENTIFIER ::= {\n   --   joint-iso-itu-t(2) country(16)
    us(840) organization(1) gov(101)\n   --   csor(3) nistalgorithm(4) hashalgs(2)
    2 }\n   -- SHA-512\n   -- Parameters are preferred absent\n   -- id-sha512 OBJECT
    IDENTIFIER ::= {\n   --   joint-iso-itu-t(2) country(16) us(840) organization(1)
    gov(101)\n   --   csor(3) nistalgorithm(4) hashalgs(2) 3 }\n   --\n   -- Public
    Key (PK) Algorithms\n   --\n   -- RSA PK Algorithm and Key\n   rsaEncryption OBJECT
    IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-1(1)
    1 }\n   RSAPublicKey ::= SEQUENCE {\n     modulus         INTEGER, -- n\n     publicExponent
    \ INTEGER  -- e\n   }\n   -- DSA PK Algorithm, Key, and Parameters\n   id-dsa
    OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) x9-57(10040) x9algorithm(4)
    1 }\n   DSAPublicKey ::= INTEGER --  public key, y\n   DSS-Parms ::= SEQUENCE
    {\n     p  INTEGER,\n     q  INTEGER,\n     g  INTEGER\n   }\n   -- Diffie-Hellman
    PK Algorithm, Key, and Parameters\n   dhpublicnumber OBJECT IDENTIFIER ::= {\n
    \    iso(1) member-body(2) us(840) ansi-x942(10046) number-type(2) 1 }\n   DHPublicKey
    ::= INTEGER  -- public key, y = g^x mod p\n   DomainParameters ::= SEQUENCE {\n
    \    p                INTEGER,           -- odd prime, p=jq +1\n     g                INTEGER,
    \          -- generator, g\n     q                INTEGER,           -- factor
    of p-1\n     j                INTEGER OPTIONAL,  -- subgroup factor, j>= 2\n     validationParms
    \ ValidationParms OPTIONAL\n   }\n   ValidationParms ::= SEQUENCE {\n     seed
    \        BIT STRING,\n     pgenCounter  INTEGER\n   }\n   -- KEA PK Algorithm
    and Parameters\n   id-keyExchangeAlgorithm OBJECT IDENTIFIER ::= {\n     joint-iso-itu-t(2)
    country(16) us(840) organization(1) gov(101)\n     dod(2) infosec(1) algorithms(1)
    22 }\n   KEA-Parms-Id ::= OCTET STRING\n   -- Sec 2.1.1 Unrestricted Algorithm
    ID, Key, and Parameters\n   -- (ECDSA keys use id-ecPublicKey)\n   id-ecPublicKey
    OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045)
    keyType(2) 1 }\n   ECPoint ::= OCTET STRING\n   -- Parameters for both Restricted
    and Unrestricted\n   ECParameters ::= CHOICE {\n     namedCurve         OBJECT
    IDENTIFIER\n     -- implicitCurve   NULL\n     -- specifiedCurve  SpecifiedECDomain\n
    \  }\n     -- implicitCurve and specifiedCurve MUST NOT be used in PKIX.\n     --
    Details for SpecifiedECDomain can be found in [X9.62].\n     -- Any future additions
    to this CHOICE should be coordinated\n     -- with ANSI X9.\n   -- Sec 2.1.2 Restricted
    Algorithm IDs, Key, and Parameters: ECDH\n   id-ecDH OBJECT IDENTIFIER ::= {\n
    \    iso(1) identified-organization(3) certicom(132) schemes(1)\n     ecdh(12)
    }\n   -- ECPoint ::= OCTET STRING\n   -- Parameters are ECParameters.\n   -- Sec
    2.1.2 Restricted Algorithm IDs, Key, and Parameters: ECMQV\n   id-ecMQV OBJECT
    IDENTIFIER ::= {\n     iso(1) identified-organization(3) certicom(132) schemes(1)\n
    \    ecmqv(13) }\n   -- ECPoint ::= OCTET STRING\n   -- Parameters are ECParameters.\n
    \  --\n   -- Signature Algorithms\n   --\n   -- RSA with MD-2\n   -- Parameters
    are NULL\n   md2WithRSAEncryption OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2)
    us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 2 }\n   -- RSA with MD-5\n   -- Parameters
    are NULL\n   md5WithRSAEncryption OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2)
    us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 4 }\n   -- RSA with SHA-1\n   -- Parameters
    are NULL\n   sha1WithRSAEncryption OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2)
    us(840) rsadsi(113549) pkcs(1) pkcs-1(1) 5 }\n   -- DSA with SHA-1\n   -- Parameters
    are ABSENT\n   id-dsa-with-sha1 OBJECT IDENTIFIER ::=  {\n     iso(1) member-body(2)
    us(840) x9-57(10040) x9algorithm(4) 3 }\n   -- DSA with SHA-224\n   -- Parameters
    are ABSENT\n   id-dsa-with-sha224 OBJECT IDENTIFIER  ::=  {\n     joint-iso-ccitt(2)
    country(16) us(840) organization(1) gov(101)\n     csor(3) algorithms(4) id-dsa-with-sha2(3)
    1 }\n   -- DSA with SHA-256\n   -- Parameters are ABSENT\n   id-dsa-with-sha256
    OBJECT IDENTIFIER  ::=  {\n     joint-iso-ccitt(2) country(16) us(840) organization(1)
    gov(101)\n     csor(3) algorithms(4) id-dsa-with-sha2(3) 2 }\n   -- ECDSA with
    SHA-1\n   -- Parameters are ABSENT\n   ecdsa-with-SHA1 OBJECT IDENTIFIER ::= {\n
    \    iso(1) member-body(2) us(840) ansi-X9-62(10045) signatures(4) 1 }\n   --
    ECDSA with SHA-224\n   -- Parameters are ABSENT\n   ecdsa-with-SHA224 OBJECT IDENTIFIER
    ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045) signatures(4)\n     ecdsa-with-SHA2(3)
    1 }\n   -- ECDSA with SHA-256\n   -- Parameters are ABSENT\n   ecdsa-with-SHA256
    OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045)
    signatures(4)\n     ecdsa-with-SHA2(3) 2 }\n   -- ECDSA with SHA-384\n   -- Parameters
    are ABSENT\n   ecdsa-with-SHA384 OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2)
    us(840) ansi-X9-62(10045) signatures(4)\n     ecdsa-with-SHA2(3) 3 }\n   -- ECDSA
    with SHA-512\n   -- Parameters are ABSENT\n   ecdsa-with-SHA512 OBJECT IDENTIFIER
    ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045) signatures(4)\n     ecdsa-with-SHA2(3)
    4 }\n   --\n   -- Signature Values\n   --\n   -- DSA\n   DSA-Sig-Value ::= SEQUENCE
    {\n     r  INTEGER,\n     s  INTEGER\n   }\n   -- ECDSA\n   ECDSA-Sig-Value ::=
    SEQUENCE {\n     r  INTEGER,\n     s  INTEGER\n   }\n   --\n   -- Named Elliptic
    Curves\n   --\n   -- Note that in [X9.62] the curves are referred to as 'ansiX9'
    as\n   -- opposed to 'sec'.  For example secp192r1 is the same curve as\n   --
    ansix9p192r1.\n   -- Note that in [PKI-ALG] the secp192r1 curve was referred to
    as\n   -- prime192v1 and the secp256r1 curve was referred to as prime256v1.\n
    \  -- Note that [FIPS186-3] refers to secp192r1 as P-192, secp224r1 as\n   --
    P-224, secp256r1 as P-256, secp384r1 as P-384, and secp521r1 as\n   -- P-521.\n
    \  secp192r1 OBJECT IDENTIFIER ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045)
    curves(3)\n     prime(1) 1 }\n   sect163k1 OBJECT IDENTIFIER ::= {\n     iso(1)
    identified-organization(3) certicom(132) curve(0) 1 }\n   sect163r2 OBJECT IDENTIFIER
    ::= {\n     iso(1) identified-organization(3) certicom(132) curve(0) 15 }\n   secp224r1
    OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3) certicom(132)
    curve(0) 33 }\n   sect233k1 OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3)
    certicom(132) curve(0) 26 }\n   sect233r1 OBJECT IDENTIFIER ::= {\n     iso(1)
    identified-organization(3) certicom(132) curve(0) 27 }\n   secp256r1 OBJECT IDENTIFIER
    ::= {\n     iso(1) member-body(2) us(840) ansi-X9-62(10045) curves(3)\n     prime(1)
    7 }\n   sect283k1 OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3)
    certicom(132) curve(0) 16 }\n   sect283r1 OBJECT IDENTIFIER ::= {\n     iso(1)
    identified-organization(3) certicom(132) curve(0) 17 }\n   secp384r1 OBJECT IDENTIFIER
    ::= {\n     iso(1) identified-organization(3) certicom(132) curve(0) 34 }\n   sect409k1
    OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3) certicom(132)
    curve(0) 36 }\n   sect409r1 OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3)
    certicom(132) curve(0) 37 }\n   secp521r1 OBJECT IDENTIFIER ::= {\n     iso(1)
    identified-organization(3) certicom(132) curve(0) 35 }\n   sect571k1 OBJECT IDENTIFIER
    ::= {\n     iso(1) identified-organization(3) certicom(132) curve(0) 38 }\n   sect571r1
    OBJECT IDENTIFIER ::= {\n     iso(1) identified-organization(3) certicom(132)
    curve(0) 39 }\n   END\n"
  title: Appendix A.  ASN.1 Module
- contents:
  - "Authors' Addresses\n   Sean Turner\n   IECA, Inc.\n   3057 Nutley Street, Suite
    106\n   Fairfax, VA 22031\n   USA\n   EMail: turners@ieca.com\n   Kelvin Yiu\n
    \  Microsoft\n   One Microsoft Way\n   Redmond, WA 98052-6399\n   USA\n   EMail:
    kelviny@microsoft.com\n   Daniel R. L. Brown\n   Certicom Corp\n   5520 Explorer
    Drive #400\n   Mississauga, ON L4W 5L1\n   CANADA\n   EMail: dbrown@certicom.com\n
    \  Russ Housley\n   Vigil Security, LLC\n   918 Spring Knoll Drive\n   Herndon,
    VA 20170\n   USA\n   EMail: housley@vigilsec.com\n   Tim Polk\n   NIST\n   Building
    820, Room 426\n   Gaithersburg, MD 20899\n   EMail: wpolk@nist.gov\n"
  title: Authors' Addresses
