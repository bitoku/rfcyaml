- contents:
  - '    Generalized Multi-Protocol Label Switching (GMPLS) Architecture

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   Future data and transmission networks will consist of elements such\n
    \  as routers, switches, Dense Wavelength Division Multiplexing (DWDM)\n   systems,
    Add-Drop Multiplexors (ADMs), photonic cross-connects\n   (PXCs), optical cross-connects
    (OXCs), etc. that will use Generalized\n   Multi-Protocol Label Switching (GMPLS)
    to dynamically provision\n   resources and to provide network survivability using
    protection and\n   restoration techniques.\n   This document describes the architecture
    of GMPLS.  GMPLS extends\n   MPLS to encompass time-division (e.g., SONET/SDH,
    PDH, G.709),\n   wavelength (lambdas), and spatial switching (e.g., incoming port
    or\n   fiber to outgoing port or fiber).  The focus of GMPLS is on the\n   control
    plane of these various layers since each of them can use\n   physically diverse
    data or forwarding planes.  The intention is to\n   cover both the signaling and
    the routing part of that control plane.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction. . . . . . . . . . . . . . . . . . . .
    . . . . .   4\n       1.1.  Acronyms & Abbreviations. . . . . . . . . . . . .
    . . .   4\n       1.2.  Multiple Types of Switching and Forwarding Hierarchies.
    \  5\n       1.3.  Extension of the MPLS Control Plane . . . . . . . . . .   7\n
    \      1.4.  GMPLS Key Extensions to MPLS-TE . . . . . . . . . . . .  10\n   2.
    \ Routing and Addressing Model. . . . . . . . . . . . . . . . .  11\n       2.1.
    \ Addressing of PSC and non-PSC layers. . . . . . . . . .  13\n       2.2.  GMPLS
    Scalability Enhancements. . . . . . . . . . . . .  13\n       2.3.  TE Extensions
    to IP Routing Protocols . . . . . . . . .  14\n   3.  Unnumbered Links. . . .
    . . . . . . . . . . . . . . . . . . .  15\n       3.1.  Unnumbered Forwarding
    Adjacencies . . . . . . . . . . .  16\n   4.  Link Bundling . . . . . . . . .
    . . . . . . . . . . . . . . .  16\n       4.1.  Restrictions on Bundling. . .
    . . . . . . . . . . . . .  17\n       4.2.  Routing Considerations for Bundling
    . . . . . . . . . .  17\n       4.3.  Signaling Considerations. . . . . . . .
    . . . . . . . .  18\n             4.3.1.  Mechanism 1: Implicit Indication. .
    . . . . . .  18\n             4.3.2.  Mechanism 2: Explicit Indication by Numbered\n
    \                    Interface ID. . . . . . . . . . . . . . . . . .  19\n             4.3.3.
    \ Mechanism 3: Explicit Indication by Unnumbered\n                     Interface
    ID. . . . . . . . . . . . . . . . . .  19\n       4.4.  Unnumbered Bundled Link
    . . . . . . . . . . . . . . . .  19\n       4.5.  Forming Bundled Links . . .
    . . . . . . . . . . . . . .  20\n   5.  Relationship with the UNI . . . . . .
    . . . . . . . . . . . .  20\n       5.1.  Relationship with the OIF UNI . . .
    . . . . . . . . . .  21\n       5.2.  Reachability across the UNI . . . . . .
    . . . . . . . .  21\n   6.  Link Management . . . . . . . . . . . . . . . . .
    . . . . . .  22\n       6.1.  Control Channel and Control Channel Management.
    . . . .  23\n       6.2.  Link Property Correlation . . . . . . . . . . . . .
    . .  24\n       6.3.  Link Connectivity Verification. . . . . . . . . . . . .
    \ 24\n       6.4.  Fault Management. . . . . . . . . . . . . . . . . . . .  25\n
    \      6.5.  LMP for DWDM Optical Line Systems (OLSs). . . . . . . .  26\n   7.
    \ Generalized Signaling . . . . . . . . . . . . . . . . . . . .  27\n       7.1.
    \ Overview: How to Request an LSP . . . . . . . . . . . .  29\n       7.2.  Generalized
    Label Request . . . . . . . . . . . . . . .  30\n       7.3.  SONET/SDH Traffic
    Parameters. . . . . . . . . . . . . .  31\n       7.4.  G.709 Traffic Parameters.
    . . . . . . . . . . . . . . .  32\n       7.5.  Bandwidth Encoding. . . . . .
    . . . . . . . . . . . . .  33\n       7.6.  Generalized Label . . . . . . . .
    . . . . . . . . . . .  34\n       7.7.  Waveband Switching. . . . . . . . . .
    . . . . . . . . .  34\n       7.8.  Label Suggestion by the Upstream. . . . .
    . . . . . . .  35\n       7.9.  Label Restriction by the Upstream . . . . . .
    . . . . .  35\n       7.10. Bi-directional LSP. . . . . . . . . . . . . . . .
    . . .  36\n       7.11. Bi-directional LSP Contention Resolution. . . . . . .
    .  37\n       7.12. Rapid Notification of Failure . . . . . . . . . . . . .  37\n
    \      7.13. Link Protection . . . . . . . . . . . . . . . . . . . .  38\n       7.14.
    Explicit Routing and Explicit Label Control . . . . . .  39\n       7.15. Route
    Recording . . . . . . . . . . . . . . . . . . . .  40\n       7.16. LSP Modification
    and LSP Re-routing . . . . . . . . . .  40\n       7.17. LSP Administrative Status
    Handling. . . . . . . . . . .  41\n       7.18. Control Channel Separation. .
    . . . . . . . . . . . . .  42\n   8.  Forwarding Adjacencies (FA) . . . . . .
    . . . . . . . . . . .  43\n       8.1.  Routing and Forwarding Adjacencies. .
    . . . . . . . . .  43\n       8.2.  Signaling Aspects . . . . . . . . . . . .
    . . . . . . .  44\n       8.3.  Cascading of Forwarding Adjacencies . . . . .
    . . . . .  44\n   9.  Routing and Signaling Adjacencies . . . . . . . . . . .
    . . .  45\n   10. Control Plane Fault Handling. . . . . . . . . . . . . . . .
    .  46\n   11. LSP Protection and Restoration. . . . . . . . . . . . . . . .  47\n
    \      11.1. Protection Escalation across Domains and Layers . . . .  48\n       11.2.
    Mapping of Services to P&R Resources. . . . . . . . . .  49\n       11.3. Classification
    of P&R Mechanism Characteristics . . . .  49\n       11.4. Different Stages in
    P&R . . . . . . . . . . . . . . . .  50\n       11.5. Recovery Strategies . .
    . . . . . . . . . . . . . . . .  50\n       11.6. Recovery mechanisms: Protection
    schemes . . . . . . . .  51\n       11.7. Recovery mechanisms: Restoration schemes.
    . . . . . . .  52\n       11.8. Schema Selection Criteria . . . . . . . . . .
    . . . . .  53\n   12. Network Management. . . . . . . . . . . . . . . . . . .
    . . .  54\n       12.1. Network Management Systems (NMS). . . . . . . . . . .
    .  55\n       12.2. Management Information Base (MIB) . . . . . . . . . . .  55\n
    \      12.3. Tools . . . . . . . . . . . . . . . . . . . . . . . . .  56\n       12.4.
    Fault Correlation Between Multiple Layers . . . . . . .  56\n   13. Security Considerations
    . . . . . . . . . . . . . . . . . . .  57\n   14. Acknowledgements. . . . . .
    . . . . . . . . . . . . . . . . .  58\n   15. References. . . . . . . . . . .
    . . . . . . . . . . . . . . .  58\n       15.1. Normative References. . . . .
    . . . . . . . . . . . . .  58\n       15.2. Informative References. . . . . .
    . . . . . . . . . . .  59\n   16. Contributors. . . . . . . . . . . . . . . .
    . . . . . . . . .  63\n   17. Author's Address. . . . . . . . . . . . . . . .
    . . . . . . .  68\n       Full Copyright Statement. . . . . . . . . . . . . .
    . . . . .  69\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The architecture described in this document covers the main
    building\n   blocks needed to build a consistent control plane for multiple\n
    \  switching layers.  It does not restrict the way that these layers\n   work
    together.  Different models can be applied, e.g., overlay,\n   augmented or integrated.
    \ Moreover, each pair of contiguous layers\n   may collaborate in different ways,
    resulting in a number of possible\n   combinations, at the discretion of manufacturers
    and operators.\n   This architecture clearly separates the control plane and the\n
    \  forwarding plane.  In addition, it also clearly separates the control\n   plane
    in two parts, the signaling plane containing the signaling\n   protocols and the
    routing plane containing the routing protocols.\n   This document is a generalization
    of the Multi-Protocol Label\n   Switching (MPLS) architecture [RFC3031], and in
    some cases may differ\n   slightly from that architecture since non packet-based
    forwarding\n   planes are now considered.  It is not the intention of this document\n
    \  to describe concepts already described in the current MPLS\n   architecture.
    \ The goal is to describe specific concepts of\n   Generalized MPLS (GMPLS).\n
    \  However, some of the concepts explained hereafter are not part of the\n   current
    MPLS architecture and are applicable to both MPLS and GMPLS\n   (i.e., link bundling,
    unnumbered links, and LSP hierarchy). Since\n   these concepts were introduced
    together with GMPLS and since they are\n   of paramount importance for an operational
    GMPLS network, they will\n   be discussed here.\n   The organization of the remainder
    of this document is as follows.  We\n   begin with an introduction of GMPLS.  We
    then present the specific\n   GMPLS building blocks and explain how they can be
    combined together\n   to build an operational GMPLS network.  Specific details
    of the\n   separate building blocks can be found in the corresponding documents.\n"
  - contents:
    - "1.1.  Acronyms & Abbreviations\n   AS           Autonomous System\n   BGP          Border
      Gateway Protocol\n   CR-LDP       Constraint-based Routing LDP\n   CSPF         Constraint-based
      Shortest Path First\n   DWDM         Dense Wavelength Division Multiplexing\n
      \  FA           Forwarding Adjacency\n   GMPLS        Generalized Multi-Protocol
      Label Switching\n   IGP          Interior Gateway Protocol\n   LDP          Label
      Distribution Protocol\n   LMP          Link Management Protocol\n   LSA          Link
      State Advertisement\n   LSR          Label Switching Router\n   LSP          Label
      Switched Path\n   MIB          Management Information Base\n   MPLS         Multi-Protocol
      Label Switching\n   NMS          Network Management System\n   OXC          Optical
      Cross-Connect\n   PXC          Photonic Cross-Connect\n   RSVP         ReSource
      reserVation Protocol\n   SDH          Synchronous Digital Hierarchy\n   SONET
      \       Synchronous Optical Networks\n   STM(-N)      Synchronous Transport
      Module (-N)\n   STS(-N)      Synchronous Transport Signal-Level N (SONET)\n
      \  TDM          Time Division Multiplexing\n   TE           Traffic Engineering\n"
    title: 1.1.  Acronyms & Abbreviations
  - contents:
    - "1.2.  Multiple Types of Switching and Forwarding Hierarchies\n   Generalized
      MPLS (GMPLS) differs from traditional MPLS in that it\n   supports multiple
      types of switching, i.e., the addition of support\n   for TDM, lambda, and fiber
      (port) switching.  The support for the\n   additional types of switching has
      driven GMPLS to extend certain base\n   functions of traditional MPLS and, in
      some cases, to add\n   functionality.  These changes and additions impact basic
      LSP\n   properties: how labels are requested and communicated, the\n   unidirectional
      nature of LSPs, how errors are propagated, and\n   information provided for
      synchronizing the ingress and egress LSRs.\n   The MPLS architecture [RFC3031]
      was defined to support the forwarding\n   of data based on a label.  In this
      architecture, Label Switching\n   Routers (LSRs) were assumed to have a forwarding
      plane that is\n   capable of (a) recognizing either packet or cell boundaries,
      and (b)\n   being able to process either packet headers (for LSRs capable of\n
      \  recognizing packet boundaries) or cell headers (for LSRs capable of\n   recognizing
      cell boundaries).\n   The original MPLS architecture is here being extended
      to include LSRs\n   whose forwarding plane recognizes neither packet, nor cell\n
      \  boundaries, and therefore, cannot forward data based on the\n   information
      carried in either packet or cell headers.  Specifically,\n   such LSRs include
      devices where the switching decision is based on\n   time slots, wavelengths,
      or physical ports.  So, the new set of LSRs,\n   or more precisely interfaces
      on these LSRs, can be subdivided into\n   the following classes:\n   1. Packet
      Switch Capable (PSC) interfaces:\n      Interfaces that recognize packet boundaries
      and can forward data\n      based on the content of the packet header.  Examples
      include\n      interfaces on routers that forward data based on the content
      of\n      the IP header and interfaces on routers that switch data based on\n
      \     the content of the MPLS \"shim\" header.\n   2. Layer-2 Switch Capable
      (L2SC) interfaces:\n      Interfaces that recognize frame/cell boundaries and
      can switch\n      data based on the content of the frame/cell header.  Examples\n
      \     include interfaces on Ethernet bridges that switch data based on\n      the
      content of the MAC header and interfaces on ATM-LSRs that\n      forward data
      based on the ATM VPI/VCI.\n   3. Time-Division Multiplex Capable (TDM) interfaces:\n
      \     Interfaces that switch data based on the data's time slot in a\n      repeating
      cycle.  An example of such an interface is that of a\n      SONET/SDH Cross-Connect
      (XC), Terminal Multiplexer (TM), or Add-\n      Drop Multiplexer (ADM).  Other
      examples include interfaces\n      providing G.709 TDM capabilities (the \"digital
      wrapper\") and PDH\n      interfaces.\n   4. Lambda Switch Capable (LSC) interfaces:\n
      \     Interfaces that switch data based on the wavelength on which the\n      data
      is received.  An example of such an interface is that of a\n      Photonic Cross-Connect
      (PXC) or Optical Cross-Connect (OXC) that\n      can operate at the level of
      an individual wavelength.  Additional\n      examples include PXC interfaces
      that can operate at the level of a\n      group of wavelengths, i.e., a waveband
      and G.709 interfaces\n      providing optical capabilities.\n   5. Fiber-Switch
      Capable (FSC) interfaces:\n      Interfaces that switch data based on a position
      of the data in the\n      (real world) physical spaces.  An example of such
      an interface is\n      that of a PXC or OXC that can operate at the level of
      a single or\n      multiple fibers.\n   A circuit can be established only between,
      or through, interfaces of\n   the same type.  Depending on the particular technology
      being used for\n   each interface, different circuit names can be used, e.g.,
      SDH\n   circuit, optical trail, light-path, etc.  In the context of GMPLS,\n
      \  all these circuits are referenced by a common name: Label Switched\n   Path
      (LSP).\n   The concept of nested LSP (LSP within LSP), already available in
      the\n   traditional MPLS, facilitates building a forwarding hierarchy, i.e.,\n
      \  a hierarchy of LSPs.  This hierarchy of LSPs can occur on the same\n   interface,
      or between different interfaces.\n   For example, a hierarchy can be built if
      an interface is capable of\n   multiplexing several LSPs from the same technology
      (layer), e.g., a\n   lower order SONET/SDH LSP (e.g., VT2/VC-12) nested in a
      higher order\n   SONET/SDH LSP (e.g., STS-3c/VC-4).  Several levels of signal
      (LSP)\n   nesting are defined in the SONET/SDH multiplexing hierarchy.\n   The
      nesting can also occur between interface types.  At the top of\n   the hierarchy
      are FSC interfaces, followed by LSC interfaces,\n   followed by TDM interfaces,
      followed by L2SC, and followed by PSC\n   interfaces.  This way, an LSP that
      starts and ends on a PSC interface\n   can be nested (together with other LSPs)
      into an LSP that starts and\n   ends on a L2SC interface.  This LSP, in turn,
      can be nested (together\n   with other LSPs) into an LSP that starts and ends
      on a TDM interface.\n   In turn, this LSP can be nested (together with other
      LSPs) into an\n   LSP that starts and ends on a LSC interface, which in turn
      can be\n   nested (together with other LSPs) into an LSP that starts and ends
      on\n   a FSC interface.\n"
    title: 1.2.  Multiple Types of Switching and Forwarding Hierarchies
  - contents:
    - "1.3.  Extension of the MPLS Control Plane\n   The establishment of LSPs that
      span only Packet Switch Capable (PSC)\n   or Layer-2 Switch Capable (L2SC) interfaces
      is defined for the\n   original MPLS and/or MPLS-TE control planes.  GMPLS extends
      these\n   control planes to support each of the five classes of interfaces\n
      \  (i.e., layers) defined in the previous section.\n   Note that the GMPLS control
      plane supports an overlay model, an\n   augmented model, and a peer (integrated)
      model.  In the near term,\n   GMPLS appears to be very suitable for controlling
      each layer\n   independently.  This elegant approach will facilitate the future\n
      \  deployment of other models.\n   The GMPLS control plane is made of several
      building blocks as\n   described in more details in the following sections.
      \ These building\n   blocks are based on well-known signaling and routing protocols
      that\n   have been extended and/or modified to support GMPLS.  They use IPv4\n
      \  and/or IPv6 addresses.  Only one new specialized protocol is required\n   to
      support the operations of GMPLS, a signaling protocol for link\n   management
      [LMP].\n   GMPLS is indeed based on the Traffic Engineering (TE) extensions
      to\n   MPLS, a.k.a. MPLS-TE [RFC2702].  This, because most of the\n   technologies
      that can be used below the PSC level requires some\n   traffic engineering.
      The placement of LSPs at these levels needs in\n   general to consider several
      constraints (such as framing, bandwidth,\n   protection capability, etc) and
      to bypass the legacy Shortest-Path\n   First (SPF) algorithm.  Note, however,
      that this is not mandatory and\n   that in some cases SPF routing can be applied.\n
      \  In order to facilitate constrained-based SPF routing of LSPs, nodes\n   that
      perform LSP establishment need more information about the links\n   in the network
      than standard intra-domain routing protocols provide.\n   These TE attributes
      are distributed using the transport mechanisms\n   already available in IGPs
      (e.g., flooding) and taken into\n   consideration by the LSP routing algorithm.
      \ Optimization of the LSP\n   routes may also require some external simulations
      using heuristics\n   that serve as input for the actual path calculation and
      LSP\n   establishment process.\n   By definition, a TE link is a representation
      in the IS-IS/OSPF Link\n   State advertisements and in the link state database
      of certain\n   physical resources, and their properties, between two GMPLS nodes.\n
      \  TE Links are used by the GMPLS control plane (routing and signaling)\n   for
      establishing LSPs.\n   Extensions to traditional routing protocols and algorithms
      are needed\n   to uniformly encode and carry TE link information, and explicit\n
      \  routes (e.g., source routes) are required in the signaling. In\n   addition,
      the signaling must now be capable of transporting the\n   required circuit (LSP)
      parameters such as the bandwidth, the type of\n   signal, the desired protection
      and/or restoration, the position in a\n   particular multiplex, etc.  Most of
      these extensions have already\n   been defined for PSC and L2SC traffic engineering
      with MPLS.  GMPLS\n   primarily defines additional extensions for TDM, LSC,
      and FSC traffic\n   engineering.  A very few elements are technology specific.\n
      \  Thus, GMPLS extends the two signaling protocols defined for MPLS-TE\n   signaling,
      i.e., RSVP-TE [RFC3209] and CR-LDP [RFC3212].  However,\n   GMPLS does not specify
      which one of these two signaling protocols\n   must be used.  It is the role
      of manufacturers and operators to\n   evaluate the two possible solutions for
      their own interest.\n   Since GMPLS signaling is based on RSVP-TE and CR-LDP,
      it mandates a\n   downstream-on-demand label allocation and distribution, with
      ingress\n   initiated ordered control.  Liberal label retention is normally
      used,\n   but conservative label retention mode could also be used.\n   Furthermore,
      there is no restriction on the label allocation\n   strategy, it can be request/signaling
      driven (obvious for circuit\n   switching technologies), traffic/data driven,
      or even topology\n   driven.  There is also no restriction on the route selection;\n
      \  explicit routing is normally used (strict or loose) but hop-by-hop\n   routing
      could be used as well.\n   GMPLS also extends two traditional intra-domain link-state
      routing\n   protocols already extended for TE purposes, i.e., OSPF-TE [OSPF-TE]\n
      \  and IS-IS-TE [ISIS-TE].  However, if explicit (source) routing is\n   used,
      the routing algorithms used by these protocols no longer need\n   to be standardized.
      \ Extensions for inter-domain routing (e.g., BGP)\n   are for further study.\n
      \  The use of technologies like DWDM (Dense Wavelength Division\n   Multiplexing)
      implies that we can now have a very large number of\n   parallel links between
      two directly adjacent nodes (hundreds of\n   wavelengths, or even thousands
      of wavelengths if multiple fibers are\n   used).  Such a large number of links
      was not originally considered\n   for an IP or MPLS control plane, although
      it could be done.  Some\n   slight adaptations of that control plane are thus
      required if we want\n   to better reuse it in the GMPLS context.\n   For instance,
      the traditional IP routing model assumes the\n   establishment of a routing
      adjacency over each link connecting two\n   adjacent nodes.  Having such a large
      number of adjacencies does not\n   scale well.  Each node needs to maintain
      each of its adjacencies one\n   by one, and link state routing information must
      be flooded throughout\n   the network.\n   To solve this issue the concept of
      link bundling was introduced.\n   Moreover, the manual configuration and control
      of these links, even\n   if they are unnumbered, becomes impractical.  The Link
      Management\n   Protocol (LMP) was specified to solve these issues.\n   LMP runs
      between data plane adjacent nodes and is used to manage TE\n   links.  Specifically,
      LMP provides mechanisms to maintain control\n   channel connectivity (IP Control
      Channel Maintenance), verify the\n   physical connectivity of the data-bearing
      links (Link Verification),\n   correlate the link property information (Link
      Property Correlation),\n   and manage link failures (Fault Localization and
      Fault Notification).\n   A unique feature of LMP is that it is able to localize
      faults in both\n   opaque and transparent networks (i.e., independent of the
      encoding\n   scheme and bit rate used for the data).\n   LMP is defined in the
      context of GMPLS, but is specified\n   independently of the GMPLS signaling
      specification since it is a\n   local protocol running between data-plane adjacent
      nodes.\n   Consequently, LMP can be used in other contexts with non-GMPLS\n
      \  signaling protocols.\n   MPLS signaling and routing protocols require at
      least one bi-\n   directional control channel to communicate even if two adjacent
      nodes\n   are connected by unidirectional links.  Several control channels can\n
      \  be used.  LMP can be used to establish, maintain and manage these\n   control
      channels.\n   GMPLS does not specify how these control channels must be\n   implemented,
      but GMPLS requires IP to transport the signaling and\n   routing protocols over
      them.  Control channels can be either in-band\n   or out-of-band, and several
      solutions can be used to carry IP.  Note\n   also that one type of LMP message
      (the Test message) is used in-band\n   in the data plane and may not be transported
      over IP, but this is a\n   particular case, needed to verify connectivity in
      the data plane.\n"
    title: 1.3.  Extension of the MPLS Control Plane
  - contents:
    - "1.4.  GMPLS Key Extensions to MPLS-TE\n   Some key extensions brought by GMPLS
      to MPLS-TE are highlighted in\n   the following.  Some of them are key advantages
      of GMPLS to control\n   TDM, LSC and FSC layers.\n   -  In MPLS-TE, links traversed
      by an LSP can include an intermix of\n      links with heterogeneous label encoding
      (e.g., links between\n      routers, links between routers and ATM-LSRs, and
      links between\n      ATM-LSRs. GMPLS extends this by including links where the
      label is\n      encoded as a time slot, or a wavelength, or a position in the\n
      \     (real world) physical space.\n   -  In MPLS-TE, an LSP that carries IP
      has to start and end on a\n      router.  GMPLS extends this by requiring an
      LSP to start and end\n      on similar type of interfaces.\n   -  The type of
      a payload that can be carried in GMPLS by an LSP is\n      extended to allow
      such payloads as SONET/SDH, G.709, 1Gb or 10Gb\n      Ethernet, etc.\n   -  The
      use of Forwarding Adjacencies (FA) provides a mechanism that\n      can improve
      bandwidth utilization, when bandwidth allocation can\n      be performed only
      in discrete units.  It offers also a mechanism\n      to aggregate forwarding
      state, thus allowing the number of\n      required labels to be reduced.\n   -
      \ GMPLS allows suggesting a label by an upstream node to reduce the\n      setup
      latency.  This suggestion may be overridden by a downstream\n      node but
      in some cases, at the cost of higher LSP setup time.\n   -  GMPLS extends on
      the notion of restricting the range of labels\n      that may be selected by
      a downstream node.  In GMPLS, an upstream\n      node may restrict the labels
      for an LSP along either a single hop\n      or the entire LSP path.  This feature
      is useful in photonic\n      networks where wavelength conversion may not be
      available.\n   -  While traditional TE-based (and even LDP-based) LSPs are\n
      \     unidirectional, GMPLS supports the establishment of bi-directional\n      LSPs.\n
      \  -  GMPLS supports the termination of an LSP on a specific egress\n      port,
      i.e., the port selection at the destination side.\n   -  GMPLS with RSVP-TE
      supports an RSVP specific mechanism for rapid\n      failure notification.\n
      \  Note also some other key differences between MPLS-TE and GMPLS:\n   -  For
      TDM, LSC and FSC interfaces, bandwidth allocation for an LSP\n      can be performed
      only in discrete units.\n   -  It is expected to have (much) fewer labels on
      TDM, LSC or FSC\n      links than on PSC or L2SC links, because the former are
      physical\n      labels instead of logical labels.\n"
    title: 1.4.  GMPLS Key Extensions to MPLS-TE
  title: 1.  Introduction
- contents:
  - "2.  Routing and Addressing Model\n   GMPLS is based on the IP routing and addressing
    models.  This assumes\n   that IPv4 and/or IPv6 addresses are used to identify
    interfaces but\n   also that traditional (distributed) IP routing protocols are
    reused.\n   Indeed, the discovery of the topology and the resource state of all\n
    \  links in a routing domain is achieved via these routing protocols.\n   Since
    control and data planes are de-coupled in GMPLS, control-plane\n   neighbors (i.e.,
    IGP-learnt neighbors) may not be data-plane\n   neighbors.  Hence, mechanisms
    like LMP are needed to associate TE\n   links with neighboring nodes.\n   IP addresses
    are not used only to identify interfaces of IP hosts and\n   routers, but more
    generally to identify any PSC and non-PSC\n   interfaces.  Similarly, IP routing
    protocols are used to find routes\n   for IP datagrams with a SPF algorithm; they
    are also used to find\n   routes for non-PSC circuits by using a CSPF algorithm.\n
    \  However, some additional mechanisms are needed to increase the\n   scalability
    of these models and to deal with specific traffic\n   engineering requirements
    of non-PSC layers.  These mechanisms will be\n   introduced in the following.\n
    \  Re-using existing IP routing protocols allows for non-PSC layers\n   taking
    advantage of all the valuable developments that took place\n   since years for
    IP routing, in particular, in the context of intra-\n   domain routing (link-state
    routing) and inter-domain routing (policy\n   routing).\n   In an overlay model,
    each particular non-PSC layer can be seen as a\n   set of Autonomous Systems (ASs)
    interconnected in an arbitrary way.\n   Similarly to the traditional IP routing,
    each AS is managed by a\n   single administrative authority.  For instance, an
    AS can be an\n   SONET/SDH network operated by a given carrier.  The set of\n
    \  interconnected ASs can be viewed as SONET/SDH internetworks.\n   Exchange of
    routing information between ASs can be done via an\n   inter-domain routing protocol
    like BGP-4.  There is obviously a huge\n   value of re-using well-known policy
    routing facilities provided by\n   BGP in a non-PSC context.  Extensions for BGP
    traffic engineering\n   (BGP-TE) in the context of non-PSC layers are left for
    further study.\n   Each AS can be sub-divided in different routing domains, and
    each can\n   run a different intra-domain routing protocol.  In turn, each\n   routing-domain
    can be divided in areas.\n   A routing domain is made of GMPLS enabled nodes (i.e.,
    a network\n   device including a GMPLS entity).  These nodes can be either edge\n
    \  nodes (i.e., hosts, ingress LSRs or egress LSRs), or internal LSRs.\n   An
    example of non-PSC host is an SONET/SDH Terminal Multiplexer (TM).\n   Another
    example is an SONET/SDH interface card within an IP router or\n   ATM switch.\n
    \  Note that traffic engineering in the intra-domain requires the use of\n   link-state
    routing protocols like OSPF or IS-IS.\n   GMPLS defines extensions to these protocols.
    \ These extensions are\n   needed to disseminate specific TDM, LSC and FSC static
    and dynamic\n   characteristics related to nodes and links.  The current focus
    is on\n   intra-area traffic engineering.  However, inter-area traffic\n   engineering
    is also under investigation.\n"
  - contents:
    - "2.1.  Addressing of PSC and non-PSC Layers\n   The fact that IPv4 and/or IPv6
      addresses are used does not imply at\n   all that they should be allocated in
      the same addressing space than\n   public IPv4 and/or IPv6 addresses used for
      the Internet.  Private IP\n   addresses can be used if they do not require to
      be exchanged with any\n   other operator; public IP addresses are otherwise
      required.  Of\n   course, if an integrated model is used, two layers could share
      the\n   same addressing space.  Finally, TE links may be \"unnumbered\" i.e.,\n
      \  not have any IP addresses, in case IP addresses are not available, or\n   the
      overhead of managing them is considered too high.\n   Note that there is a benefit
      of using public IPv4 and/or IPv6\n   Internet addresses for non-PSC layers if
      an integrated model with the\n   IP layer is foreseen.\n   If we consider the
      scalability enhancements proposed in the next\n   section, the IPv4 (32 bits)
      and the IPv6 (128 bits) addressing spaces\n   are both more than sufficient
      to accommodate any non-PSC layer.  We\n   can reasonably expect to have much
      less non-PSC devices (e.g.,\n   SONET/SDH nodes) than we have today IP hosts
      and routers.\n"
    title: 2.1.  Addressing of PSC and non-PSC Layers
  - contents:
    - "2.2.  GMPLS Scalability Enhancements\n   TDM, LSC and FSC layers introduce
      new constraints on the IP\n   addressing and routing models since several hundreds
      of parallel\n   physical links (e.g., wavelengths) can now connect two nodes.
      \ Most\n   of the carriers already have today several tens of wavelengths per\n
      \  fiber between two nodes.  New generation of DWDM systems will allow\n   several
      hundreds of wavelengths per fiber.\n   It becomes rather impractical to associate
      an IP address with each\n   end of each physical link, to represent each link
      as a separate\n   routing adjacency, and to advertise and to maintain link states
      for\n   each of these links.  For that purpose, GMPLS enhances the MPLS\n   routing
      and addressing models to increase their scalability.\n   Two optional mechanisms
      can be used to increase the scalability of\n   the addressing and the routing:
      unnumbered links and link bundling.\n   These two mechanisms can also be combined.
      \ They require extensions\n   to signaling (RSVP-TE and CR-LDP) and routing
      (OSPF-TE and IS-IS-TE)\n   protocols.\n"
    title: 2.2.  GMPLS Scalability Enhancements
  - contents:
    - "2.3.  TE Extensions to IP Routing Protocols\n   Traditionally, a TE link is
      advertised as an adjunct to a \"regular\"\n   OSPF or IS-IS link, i.e., an adjacency
      is brought up on the link.\n   When the link is up, both the regular IGP properties
      of the link\n   (basically, the SPF metric) and the TE properties of the link
      are\n   then advertised.\n   However, GMPLS challenges this notion in three
      ways:\n   -  First, links that are non-PSC may yet have TE properties; however,\n
      \     an OSPF adjacency could not be brought up directly on such links.\n   -
      \ Second, an LSP can be advertised as a point-to-point TE link in\n      the
      routing protocol, i.e., as a Forwarding Adjacency (FA); thus,\n      an advertised
      TE link need no longer be between two OSPF direct\n      neighbors.  Forwarding
      Adjacencies (FA) are further described in\n      Section 8.\n   -  Third, a
      number of links may be advertised as a single TE link\n      (e.g., for improved
      scalability), so again, there is no longer a\n      one-to-one association of
      a regular adjacency and a TE link.\n   Thus, we have a more general notion of
      a TE link.  A TE link is a\n   logical link that has TE properties.  Some of
      these properties may be\n   configured on the advertising LSR, others may be
      obtained from other\n   LSRs by means of some protocol, and yet others may be
      deduced from\n   the component(s) of the TE link.\n   An important TE property
      of a TE link is related to the bandwidth\n   accounting for that link.  GMPLS
      will define different accounting\n   rules for different non-PSC layers.  Generic
      bandwidth attributes are\n   however defined by the TE routing extensions and
      by GMPLS, such as\n   the unreserved bandwidth, the maximum reservable bandwidth
      and the\n   maximum LSP bandwidth.\n   It is expected in a dynamic environment
      to have frequent changes of\n   bandwidth accounting information.  A flexible
      policy for triggering\n   link state updates based on bandwidth thresholds and
      link-dampening\n   mechanism can be implemented.\n   TE properties associated
      with a link should also capture protection\n   and restoration related characteristics.
      \ For instance, shared\n   protection can be elegantly combined with bundling.
      \ Protection and\n   restoration are mainly generic mechanisms also applicable
      to MPLS. It\n   is expected that they will first be developed for MPLS and later
      on\n   generalized to GMPLS.\n   A TE link between a pair of LSRs does not imply
      the existence of an\n   IGP adjacency between these LSRs.  A TE link must also
      have some\n   means by which the advertising LSR can know of its liveness (e.g.,
      by\n   using LMP hellos).  When an LSR knows that a TE link is up, and can\n
      \  determine the TE link's TE properties, the LSR may then advertise\n   that
      link to its GMPLS enhanced OSPF or IS-IS neighbors using the TE\n   objects/TLVs.
      \ We call the interfaces over which GMPLS enhanced OSPF\n   or IS-IS adjacencies
      are established \"control channels\".\n"
    title: 2.3.  TE Extensions to IP Routing Protocols
  title: 2.  Routing and Addressing Model
- contents:
  - "3.  Unnumbered Links\n   Unnumbered links (or interfaces) are links (or interfaces)
    that do\n   not have IP addresses.  Using such links involves two capabilities:\n
    \  the ability to specify unnumbered links in MPLS TE signaling, and the\n   ability
    to carry (TE) information about unnumbered links in IGP TE\n   extensions of IS-IS-TE
    and OSPF-TE.\n   A. The ability to specify unnumbered links in MPLS TE signaling\n
    \     requires extensions to RSVP-TE [RFC3477] and CR-LDP [RFC3480].\n      The
    MPLS-TE signaling does not provide support for unnumbered\n      links, because
    it does not provide a way to indicate an unnumbered\n      link in its Explicit
    Route Object/TLV and in its Record Route\n      Object (there is no such TLV for
    CR-LDP).  GMPLS defines simple\n      extensions to indicate an unnumbered link
    in these two\n      Objects/TLVs, using a new Unnumbered Interface ID sub-object/sub-\n
    \     TLV.\n      Since unnumbered links are not identified by an IP address,
    then\n      for the purpose of MPLS TE each end need some other identifier,\n
    \     local to the LSR to which the link belongs.  LSRs at the two end-\n      points
    of an unnumbered link exchange with each other the\n      identifiers they assign
    to the link.  Exchanging the identifiers\n      may be accomplished by configuration,
    by means of a protocol such\n      as LMP ([LMP]), by means of RSVP-TE/CR-LDP
    (especially in the case\n      where a link is a Forwarding Adjacency, see below),
    or by means of\n      IS-IS or OSPF extensions ([ISIS-TE-GMPLS], [OSPF-TE-GMPLS]).\n
    \     Consider an (unnumbered) link between LSRs A and B.  LSR A chooses\n      an
    identifier for that link.  So does LSR B.  From A's perspective\n      we refer
    to the identifier that A assigned to the link as the\n      \"link local identifier\"
    (or just \"local identifier\"), and to the\n      identifier that B assigned to
    the link as the \"link remote\n      identifier\" (or just \"remote identifier\").
    \ Likewise, from B's\n      perspective the identifier that B assigned to the
    link is the\n      local identifier, and the identifier that A assigned to the
    link\n      is the remote identifier.\n      The new Unnumbered Interface ID sub-object/sub-TLV
    for the ER\n      Object/TLV contains the Router ID of the LSR at the upstream
    end\n      of the unnumbered link and the link local identifier with respect\n
    \     to that upstream LSR.\n      The new Unnumbered Interface ID sub-object
    for the RR Object\n      contains the link local identifier with respect to the
    LSR that\n      adds it in the RR Object.\n   B. The ability to carry (TE) information
    about unnumbered links in\n      IGP TE extensions requires new sub-TLVs for the
    extended IS\n      reachability TLV defined in IS-IS-TE and for the TE LSA (which
    is\n      an opaque LSA) defined in OSPF-TE.  A Link Local Identifier sub-\n      TLV
    and a Link Remote Identifier sub-TLV are defined.\n"
  - contents:
    - "3.1.  Unnumbered Forwarding Adjacencies\n   If an LSR that originates an LSP
      advertises this LSP as an unnumbered\n   FA in IS-IS or OSPF, or the LSR uses
      this FA as an unnumbered\n   component link of a bundled link, the LSR must
      allocate an Interface\n   ID to that FA.  If the LSP is bi-directional, the
      tail end does the\n   same and allocates an Interface ID to the reverse FA.\n
      \  Signaling has been enhanced to carry the Interface ID of a FA in the\n   new
      LSP Tunnel Interface ID object/TLV.  This object/TLV contains the\n   Router
      ID (of the LSR that generates it) and the Interface ID.  It is\n   called the
      Forward Interface ID when it appears in a Path/REQUEST\n   message, and it is
      called the Reverse Interface ID when it appears in\n   the Resv/MAPPING message.\n"
    title: 3.1.  Unnumbered Forwarding Adjacencies
  title: 3.  Unnumbered Links
- contents:
  - "4.  Link Bundling\n   The concept of link bundling is essential in certain networks\n
    \  employing the GMPLS control plane as is defined in [BUNDLE].  A\n   typical
    example is an optical meshed network where adjacent optical\n   cross-connects
    (LSRs) are connected by several hundreds of parallel\n   wavelengths.  In this
    network, consider the application of link state\n   routing protocols, like OSPF
    or IS-IS, with suitable extensions for\n   resource discovery and dynamic route
    computation.  Each wavelength\n   must be advertised separately to be used, except
    if link bundling is\n   used.\n   When a pair of LSRs is connected by multiple
    links, it is possible to\n   advertise several (or all) of these links as a single
    link into OSPF\n   and/or IS-IS.  This process is called link bundling, or just\n
    \  bundling.  The resulting logical link is called a bundled link as its\n   physical
    links are called component links (and are identified by\n   interface indexes).\n
    \  The result is that a combination of three identifiers ((bundled) link\n   identifier,
    component link identifier, label) is sufficient to\n   unambiguously identify
    the appropriate resources used by an LSP.\n   The purpose of link bundling is
    to improve routing scalability by\n   reducing the amount of information that
    has to be handled by OSPF\n   and/or IS-IS.  This reduction is accomplished by
    performing\n   information aggregation/abstraction.  As with any other information\n
    \  aggregation/abstraction, this results in losing some of the\n   information.
    \ To limit the amount of losses one need to restrict the\n   type of the information
    that can be aggregated/abstracted.\n"
  - contents:
    - "4.1.  Restrictions on Bundling\n   The following restrictions are required
      for bundling links.  All\n   component links in a bundle must begin and end
      on the same pair of\n   LSRs; and share some common characteristics or properties
      defined in\n   [OSPF-TE] and [ISIS-TE], i.e., they must have the same:\n   -
      Link Type (i.e., point-to-point or multi-access),\n   - TE Metric (i.e., an
      administrative cost),\n   - Set of Resource Classes at each end of the links
      (i.e., colors).\n   Note that a FA may also be a component link.  In fact, a
      bundle can\n   consist of a mix of point-to-point links and FAs, but all sharing\n
      \  some common properties.\n"
    title: 4.1.  Restrictions on Bundling
  - contents:
    - "4.2.  Routing Considerations for Bundling\n   A bundled link is just another
      kind of TE link such as those defined\n   by [GMPLS-ROUTING].  The liveness
      of the bundled link is determined\n   by the liveness of each its component
      links.  A bundled link is alive\n   when at least one of its component links
      is alive.  The liveness of a\n   component link can be determined by any of
      several means: IS-IS or\n   OSPF hellos over the component link, or RSVP Hello
      (hop local), or\n   LMP hellos (link local), or from layer 1 or layer 2 indications.\n
      \  Note that (according to the RSVP-TE specification [RFC3209]) the RSVP\n   Hello
      mechanism is intended to be used when notification of link\n   layer failures
      is not available and unnumbered links are not used, or\n   when the failure
      detection mechanisms provided by the link layer are\n   not sufficient for timely
      node failure detection.\n   Once a bundled link is determined to be alive, it
      can be advertised\n   as a TE link and the TE information can be flooded.  If
      IS-IS/OSPF\n   hellos are run over the component links, IS-IS/OSPF flooding
      can be\n   restricted to just one of the component links.\n   Note that advertising
      a (bundled) TE link between a pair of LSRs does\n   not imply that there is
      an IGP adjacency between these LSRs that is\n   associated with just that link.
      \ In fact, in certain cases a TE link\n   between a pair of LSRs could be advertised
      even if there is no IGP\n   adjacency at all between the LSR (e.g., when the
      TE link is an FA).\n   Forming a bundled link consist in aggregating the identical
      TE\n   parameters of each individual component link to produce aggregated TE\n
      \  parameters.  A TE link as defined by [GMPLS-ROUTING] has many\n   parameters;
      adequate aggregation rules must be defined for each one.\n   Some parameters
      can be sums of component characteristics such as the\n   unreserved bandwidth
      and the maximum reservable bandwidth.  Bandwidth\n   information is an important
      part of a bundle advertisement and it\n   must be clearly defined since an abstraction
      is done.\n   A GMPLS node with bundled links must apply admission control on
      a\n   per-component link basis.\n"
    title: 4.2.  Routing Considerations for Bundling
  - contents:
    - "4.3.  Signaling Considerations\n   Typically, an LSP's explicit route (e.g.,
      contained in an explicit\n   route Object/TLV) will choose the bundled link
      to be used for the\n   LSP, but not the component link(s).  This because information
      about\n   the bundled link is flooded but information about the component links\n
      \  is not.\n   The choice of the component link to use is always made by an
      upstream\n   node.  If the LSP is bi-directional, the upstream node chooses
      a\n   component link in each direction.\n   Three mechanisms for indicating
      this choice to the downstream node\n   are possible.\n"
    - contents:
      - "4.3.1.  Mechanism 1: Implicit Indication\n   This mechanism requires that
        each component link has a dedicated\n   signaling channel (e.g., the link
        is a Sonet/SDH link using the DCC\n   for in-band signaling).  The upstream
        node tells the receiver which\n   component link to use by sending the message
        over the chosen\n   component link's dedicated signaling channel.  Note that
        this\n   signaling channel can be in-band or out-of-band.  In this last case,\n
        \  the association between the signaling channel and that component link\n
        \  need to be explicitly configured.\n"
      title: '4.3.1.  Mechanism 1: Implicit Indication'
    - contents:
      - "4.3.2.  Mechanism 2: Explicit Indication by Numbered Interface ID\n   This
        mechanism requires that the component link has a unique remote\n   IP address.
        \ The upstream node indicates the choice of the component\n   link by including
        a new IF_ID RSVP_HOP object/IF_ID TLV carrying\n   either an IPv4 or an IPv6
        address in the Path/Label Request message\n   (see [RFC3473]/[RFC3472], respectively).
        \ For a bi-directional LSP, a\n   component link is provided for each direction
        by the upstream node.\n   This mechanism does not require each component link
        to have its own\n   control channel.  In fact, it does not even require the
        whole\n   (bundled) link to have its own control channel.\n"
      title: '4.3.2.  Mechanism 2: Explicit Indication by Numbered Interface ID'
    - contents:
      - "4.3.3.  Mechanism 3: Explicit Indication by Unnumbered Interface ID\n   With
        this mechanism, each component link that is unnumbered is\n   assigned a unique
        Interface Identifier (32 bits value).  The upstream\n   node indicates the
        choice of the component link by including a new\n   IF_ID RSVP_HOP object/IF_ID
        TLV in the Path/Label Request message\n   (see [RFC3473]/[RFC3472], respectively).\n
        \  This object/TLV carries the component interface ID in the downstream\n
        \  direction for a unidirectional LSP, and in addition, the component\n   interface
        ID in the upstream direction for a bi-directional LSP.\n   The two LSRs at
        each end of the bundled link exchange these\n   identifiers.  Exchanging the
        identifiers may be accomplished by\n   configuration, by means of a protocol
        such as LMP (preferred\n   solution), by means of RSVP-TE/CR-LDP (especially
        in the case where a\n   component link is a Forwarding Adjacency), or by means
        of IS-IS or\n   OSPF extensions.\n   This mechanism does not require each
        component link to have its own\n   control channel.  In fact, it does not
        even require the whole\n   (bundled) link to have its own control channel.\n"
      title: '4.3.3.  Mechanism 3: Explicit Indication by Unnumbered Interface ID'
    title: 4.3.  Signaling Considerations
  - contents:
    - "4.4.  Unnumbered Bundled Link\n   A bundled link may itself be numbered or
      unnumbered independent of\n   whether the component links are numbered or not.
      \ This affects how\n   the bundled link is advertised in IS-IS/OSPF and the
      format of LSP\n   EROs that traverse the bundled link.  Furthermore, unnumbered\n
      \  Interface Identifiers for all unnumbered outgoing links of a given\n   LSR
      (whether component links, Forwarding Adjacencies or bundled\n   links) must
      be unique in the context of that LSR.\n"
    title: 4.4.  Unnumbered Bundled Link
  - contents:
    - "4.5.  Forming Bundled Links\n   The generic rule for bundling component links
      is to place those links\n   that are correlated in some manner in the same bundle.
      \ If links may\n   be correlated based on multiple properties then the bundling
      may be\n   applied sequentially based on these properties.  For instance, links\n
      \  may be first grouped based on the first property. Each of these\n   groups
      may be then divided into smaller groups based on the second\n   property and
      so on.  The main principle followed in this process is\n   that the properties
      of the resulting bundles should be concisely\n   summarizable.  Link bundling
      may be done automatically or by\n   configuration.  Automatic link bundling
      can apply bundling rules\n   sequentially to produce bundles.\n   For instance,
      the first property on which component links may be\n   correlated could be the
      Interface Switching Capability\n   [GMPLS-ROUTING], the second property could
      be the Encoding\n   [GMPLS-ROUTING], the third property could be the Administrative\n
      \  Weight (cost), the fourth property could be the Resource Classes and\n   finally
      links may be correlated based on other metrics such as SRLG\n   (Shared Risk
      Link Groups).\n   When routing an alternate path for protection purposes, the
      general\n   principle followed is that the alternate path is not routed over
      any\n   link belonging to an SRLG that belongs to some link of the primary\n
      \  path.  Thus, the rule to be followed is to group links belonging to\n   exactly
      the same set of SRLGs.\n   This type of sequential sub-division may result in
      a number of\n   bundles between two adjacent nodes.  In practice, however, the
      link\n   properties may not be very heterogeneous among component links\n   between
      two adjacent nodes.  Thus, the number of bundles in practice\n   may not be
      large.\n"
    title: 4.5.  Forming Bundled Links
  title: 4.  Link Bundling
- contents:
  - "5.  Relationship with the UNI\n   The interface between an edge GMPLS node and
    a GMPLS LSR on the\n   network side may be referred to as a User to Network Interface
    (UNI),\n   while the interface between two-network side LSRs may be referred to\n
    \  as a Network to Network Interface (NNI).\n   GMPLS does not specify separately
    a UNI and an NNI.  Edge nodes are\n   connected to LSRs on the network side, and
    these LSRs are in turn\n   connected between them.  Of course, the behavior of
    an edge node is\n   not exactly the same as the behavior of an LSR on the network
    side.\n   Note also, that an edge node may run a routing protocol, however it\n
    \  is expected that in most of the cases it will not (see also section\n   5.2
    and the section about signaling with an explicit route).\n   Conceptually, a difference
    between UNI and NNI make sense either if\n   both interface uses completely different
    protocols, or if they use\n   the same protocols but with some outstanding differences.
    \ In the\n   first case, separate protocols are often defined successively, with\n
    \  more or less success.\n   The GMPLS approach consisted in building a consistent
    model from day\n   one, considering both the UNI and NNI interfaces at the same
    time\n   [GMPLS-OVERLAY].  For that purpose, a very few specific UNI\n   particularities
    have been ignored in a first time.  GMPLS has been\n   enhanced to support such
    particularities at the UNI by some other\n   standardization bodies (see hereafter).\n"
  - contents:
    - "5.1.  Relationship with the OIF UNI\n   This section is only given for reference
      to the OIF work related to\n   GMPLS.  The current OIF UNI specification [OIF-UNI]
      defines an\n   interface between a client SONET/SDH equipment and an SONET/SDH\n
      \  network, each belonging to a distinct administrative authority.  It\n   is
      designed for an overlay model.  The OIF UNI defines additional\n   mechanisms
      on the top of GMPLS for the UNI.\n   For instance, the OIF service discovery
      procedure is a precursor to\n   obtaining UNI services.  Service discovery allows
      a client to\n   determine the static parameters of the interconnection with
      the\n   network, including the UNI signaling protocol, the type of\n   concatenation,
      the transparency level as well as the type of\n   diversity (node, link, SRLG)
      supported by the network.\n   Since the current OIF UNI interface does not cover
      photonic networks,\n   G.709 Digital Wrapper, etc, it is from that perspective
      a subset of\n   the GMPLS Architecture at the UNI.\n"
    title: 5.1.  Relationship with the OIF UNI
  - contents:
    - "5.2.  Reachability across the UNI\n   This section discusses the selection
      of an explicit route by an edge\n   node.  The selection of the first LSR by
      an edge node connected to\n   multiple LSRs is part of that problem.\n   An
      edge node (host or LSR) can participate more or less deeply in the\n   GMPLS
      routing.  Four different routing models can be supported at the\n   UNI: configuration
      based, partial peering, silent listening and full\n   peering.\n   -  Configuration
      based: this routing model requires the manual or\n      automatic configuration
      of an edge node with a list of neighbor\n      LSRs sorted by preference order.
      \ Automatic configuration can be\n      achieved using DHCP for instance.  No
      routing information is\n      exchanged at the UNI, except maybe the ordered
      list of LSRs.  The\n      only routing information used by the edge node is
      that list.  The\n      edge node sends by default an LSP request to the preferred
      LSR.\n      ICMP redirects could be send by this LSR to redirect some LSP\n
      \     requests to another LSR connected to the edge node.  GMPLS does\n      not
      preclude that model.\n   -  Partial peering: limited routing information (mainly
      reachability)\n      can be exchanged across the UNI using some extensions in
      the\n      signaling plane.  The reachability information exchanged at the\n
      \     UNI may be used to initiate edge node specific routing decision\n      over
      the network.  GMPLS does not have any capability to support\n      this model
      today.\n   -  Silent listening: the edge node can silently listen to routing\n
      \     protocols and take routing decisions based on the information\n      obtained.
      \ An edge node receives the full routing information,\n      including traffic
      engineering extensions.  One LSR should forward\n      transparently all routing
      PDUs to the edge node.  An edge node can\n      now compute a complete explicit
      route taking into consideration\n      all the end-to-end routing information.
      \ GMPLS does not preclude\n      this model.\n   -  Full peering: in addition
      to silent listening, the edge node\n      participates within the routing, establish
      adjacencies with its\n      neighbors and advertises LSAs.  This is useful only
      if there are\n      benefits for edge nodes to advertise themselves traffic\n
      \     engineering information.  GMPLS does not preclude this model.\n"
    title: 5.2.  Reachability across the UNI
  title: 5.  Relationship with the UNI
- contents:
  - "6.  Link Management\n   In the context of GMPLS, a pair of nodes (e.g., a photonic
    switch)\n   may be connected by tens of fibers, and each fiber may be used to\n
    \  transmit hundreds of wavelengths if DWDM is used.  Multiple fibers\n   and/or
    multiple wavelengths may also be combined into one or more\n   bundled links for
    routing purposes.  Furthermore, to enable\n   communication between nodes for
    routing, signaling, and link\n   management, control channels must be established
    between a node pair.\n   Link management is a collection of useful procedures
    between adjacent\n   nodes that provide local services such as control channel
    management,\n   link connectivity verification, link property correlation, and
    fault\n   management.  The Link Management Protocol (LMP) [LMP] has been\n   defined
    to fulfill these operations.  LMP has been initiated in the\n   context of GMPLS
    but is a generic toolbox that can be also used in\n   other contexts.\n   In GMPLS,
    the control channels between two adjacent nodes are no\n   longer required to
    use the same physical medium as the data links\n   between those nodes.  Moreover,
    the control channels that are used to\n   exchange the GMPLS control-plane information
    exist independently of\n   the links they manage.  Hence, LMP was designed to
    manage the data\n   links, independently of the termination capabilities of those
    data\n   links.\n   Control channel management and link property correlation procedures\n
    \  are mandatory per LMP.  Link connectivity verification and fault\n   management
    procedures are optional.\n"
  - contents:
    - "6.1.  Control Channel and Control Channel Management\n   LMP control channel
      management is used to establish and maintain\n   control channels between nodes.
      \ Control channels exist independently\n   of TE links, and can be used to exchange
      MPLS control-plane\n   information such as signaling, routing, and link management\n
      \  information.\n   An \"LMP adjacency\" is formed between two nodes that support
      the same\n   LMP capabilities.  Multiple control channels may be active\n   simultaneously
      for each adjacency.  A control channel can be either\n   explicitly configured
      or automatically selected, however, LMP\n   currently assume that control channels
      are explicitly configured\n   while the configuration of the control channel
      capabilities can be\n   dynamically negotiated.\n   For the purposes of LMP,
      the exact implementation of the control\n   channel is left unspecified.  The
      control channel(s) between two\n   adjacent nodes is no longer required to use
      the same physical medium\n   as the data-bearing links between those nodes.
      \ For example, a\n   control channel could use a separate wavelength or fiber,
      an Ethernet\n   link, or an IP tunnel through a separate management network.\n
      \  A consequence of allowing the control channel(s) between two nodes to\n   be
      physically diverse from the associated data-bearing links is that\n   the health
      of a control channel does not necessarily correlate to the\n   health of the
      data-bearing links, and vice-versa.  Therefore, new\n   mechanisms have been
      developed in LMP to manage links, both in terms\n   of link provisioning and
      fault isolation.\n   LMP does not specify the signaling transport mechanism
      used in the\n   control channel, however it states that messages transported
      over a\n   control channel must be IP encoded.  Furthermore, since the messages\n
      \  are IP encoded, the link level encoding is not part of LMP.  A 32-bit\n   non-zero
      integer Control Channel Identifier (CCId) is assigned to\n   each direction
      of a control channel.\n   Each control channel individually negotiates its control
      channel\n   parameters and maintains connectivity using a fast Hello protocol.\n
      \  The latter is required if lower-level mechanisms are not available to\n   detect
      link failures.\n   The Hello protocol of LMP is intended to be a lightweight
      keep-alive\n   mechanism that will react to control channel failures rapidly
      so that\n   IGP Hellos are not lost and the associated link-state adjacencies
      are\n   not removed uselessly.\n   The Hello protocol consists of two phases:
      a negotiation phase and a\n   keep-alive phase.  The negotiation phase allows
      negotiation of some\n   basic Hello protocol parameters, like the Hello frequency.
      \ The\n   keep-alive phase consists of a fast lightweight bi-directional Hello\n
      \  message exchange.\n   If a group of control channels share a common node
      pair and support\n   the same LMP capabilities, then LMP control channel messages
      (except\n   Configuration messages, and Hello's) may be transmitted over any
      of\n   the active control channels without coordination between the local\n
      \  and remote nodes.\n   For LMP, it is essential that at least one control
      channel is always\n   available.  In case of control channel failure, it may
      be possible to\n   use an alternate active control channel without coordination.\n"
    title: 6.1.  Control Channel and Control Channel Management
  - contents:
    - "6.2.  Link Property Correlation\n   As part of LMP, a link property correlation
      exchange is defined. The\n   exchange is used to aggregate multiple data-bearing
      links (i.e.,\n   component links) into a bundled link and exchange, correlate,
      or\n   change TE link parameters.  The link property correlation exchange\n
      \  may be done at any time a link is up and not in the Verification\n   process
      (see next section).\n   It allows, for instance, the addition of component links
      to a link\n   bundle, change of a link's minimum/maximum reservable bandwidth,\n
      \  change of port identifiers, or change of component identifiers in a\n   bundle.
      \ This mechanism is supported by an exchange of link summary\n   messages.\n"
    title: 6.2.  Link Property Correlation
  - contents:
    - "6.3.  Link Connectivity Verification\n   Link connectivity verification is
      an optional procedure that may be\n   used to verify the physical connectivity
      of data-bearing links as\n   well as to exchange the link identifiers that are
      used in the GMPLS\n   signaling.\n   This procedure should be performed initially
      when a data-bearing link\n   is first established, and subsequently, on a periodic
      basis for all\n   unallocated (free) data-bearing links.\n   The verification
      procedure consists of sending Test messages in-band\n   over the data-bearing
      links.  This requires that the unallocated\n   links must be opaque; however,
      multiple degrees of opaqueness (e.g.,\n   examining overhead bytes, terminating
      the payload, etc.), and hence\n   different mechanisms to transport the Test
      messages, are specified.\n   Note that the Test message is the only LMP message
      that is\n   transmitted over the data-bearing link, and that Hello messages\n
      \  continue to be exchanged over the control channel during the link\n   verification
      process.  Data-bearing links are tested in the transmit\n   direction as they
      are unidirectional.  As such, it is possible for\n   LMP neighboring nodes to
      exchange the Test messages simultaneously in\n   both directions.\n   To initiate
      the link verification procedure, a node must first notify\n   the adjacent node
      that it will begin sending Test messages over a\n   particular data-bearing
      link, or over the component links of a\n   particular bundled link.  The node
      must also indicate the number of\n   data-bearing links that are to be verified;
      the interval at which the\n   test messages will be sent; the encoding scheme,
      the transport\n   mechanisms that are supported, the data rate for Test messages;
      and,\n   in the case where the data-bearing links correspond to fibers, the\n
      \  wavelength over which the Test messages will be transmitted.\n   Furthermore,
      the local and remote bundled link identifiers are\n   transmitted at this time
      to perform the component link association\n   with the bundled link identifiers.\n"
    title: 6.3.  Link Connectivity Verification
  - contents:
    - "6.4.  Fault Management\n   Fault management is an important requirement from
      the operational\n   point of view.  Fault management includes usually: fault
      detection,\n   fault localization and fault notification.  When a failure occurs
      and\n   is detected (fault detection), an operator needs to know exactly\n   where
      it happened (fault localization) and a source node may need to\n   be notified
      in order to take some actions (fault notification).\n   Note that fault localization
      can also be used to support some\n   specific (local) protection/restoration
      mechanisms.\n   In new technologies such as transparent photonic switching currently\n
      \  no method is defined to locate a fault, and the mechanism by which\n   the
      fault information is propagated must be sent \"out of band\" (via\n   the control
      plane).\n   LMP provides a fault localization procedure that can be used to\n
      \  rapidly localize link failures, by notifying a fault up to the node\n   upstream
      of that fault (i.e., through a fault notification\n   procedure).\n   A downstream
      LMP neighbor that detects data link failures will send\n   an LMP message to
      its upstream neighbor notifying it of the failure.\n   When an upstream node
      receives a failure notification, it can\n   correlate the failure with the corresponding
      input ports to determine\n   if the failure is between the two nodes.  Once
      the failure has been\n   localized, the signaling protocols can be used to initiate
      link or\n   path protection/restoration procedures.\n"
    title: 6.4.  Fault Management
  - contents:
    - "6.5.  LMP for DWDM Optical Line Systems (OLSs)\n   In an all-optical environment,
      LMP focuses on peer communications\n   (e.g., OXC-to-OXC).  A great deal of
      information about a link between\n   two OXCs is known by the OLS (Optical Line
      System or WDM Terminal\n   multiplexer).  Exposing this information to the control
      plane can\n   improve network usability by further reducing required manual\n
      \  configuration, and by greatly enhancing fault detection and recovery.\n   LMP-WDM
      [LMP-WDM] defines extensions to LMP for use between an OXC\n   and an OLS.  These
      extensions are intended to satisfy the Optical\n   Link Interface Requirements
      described in [OLI-REQ].\n   Fault detection is particularly an issue when the
      network is using\n   all-optical photonic switches (PXC).  Once a connection
      is\n   established, PXCs have only limited visibility into the health of the\n
      \  connection.  Although the PXC is all-optical, long-haul OLSs\n   typically
      terminate channels electrically and regenerate them\n   optically.  This provides
      an opportunity to monitor the health of a\n   channel between PXCs.  LMP-WDM
      can then be used by the OLS to provide\n   this information to the PXC.\n   In
      addition to the link information known to the OLS that is\n   exchanged through
      LMP-WDM, some information known to the OXC may also\n   be exchanged with the
      OLS through LMP-WDM.  This information is\n   useful for alarm management and
      link monitoring (e.g., trace\n   monitoring).  Alarm management is important
      because the\n   administrative state of a connection, known to the OXC (e.g.,
      this\n   information may be learned through the Admin Status object of GMPLS\n
      \  signaling [RFC3471]), can be used to suppress spurious alarms.  For\n   example,
      the OXC may know that a connection is \"up\", \"down\", in a\n   \"testing\"
      mode, or being deleted (\"deletion-in-progress\").  The OXC\n   can use this
      information to inhibit alarm reporting from the OLS when\n   a connection is
      \"down\", \"testing\", or being deleted.\n   It is important to note that an
      OXC may peer with one or more OLSs\n   and an OLS may peer with one or more
      OXCs.  Although there are many\n   similarities between an OXC-OXC LMP session
      and an OXC-OLS LMP\n   session, particularly for control management and link
      verification,\n   there are some differences as well.  These differences can
      primarily\n   be attributed to the nature of an OXC-OLS link, and the purpose
      of\n   OXC-OLS LMP sessions.  The OXC-OXC links can be used to provide the\n
      \  basis for GMPLS signaling and routing at the optical layer.  The\n   information
      exchanged over LMP-WDM sessions is used to augment\n   knowledge about the links
      between OXCs.\n   In order for the information exchanged over the OXC-OLS LMP
      sessions\n   to be used by the OXC-OXC session, the information must be\n   coordinated
      by the OXC.  However, the OXC-OXC and OXC-OLS LMP\n   sessions are run independently
      and must be maintained separately. One\n   critical requirement when running
      an OXC-OLS LMP session is the\n   ability of the OLS to make a data link transparent
      when not doing the\n   verification procedure.  This is because the same data
      link may be\n   verified between OXC-OLS and between OXC-OXC.  The verification\n
      \  procedure of LMP is used to coordinate the Test procedure (and hence\n   the
      transparency/opaqueness of the data links).  To maintain\n   independence between
      the sessions, it must be possible for the LMP\n   sessions to come up in any
      order.  In particular, it must be possible\n   for an OXC-OXC LMP session to
      come up without an OXC-OLS LMP session\n   being brought up, and vice-versa.\n"
    title: 6.5.  LMP for DWDM Optical Line Systems (OLSs)
  title: 6.  Link Management
- contents:
  - "7.  Generalized Signaling\n   The GMPLS signaling extends certain base functions
    of the RSVP-TE and\n   CR-LDP signaling and, in some cases, adds functionality.
    \ These\n   changes and additions impact basic LSP properties: how labels are\n
    \  requested and communicated, the unidirectional nature of LSPs, how\n   errors
    are propagated, and information provided for synchronizing the\n   ingress and
    egress.\n   The core GMPLS signaling specification is available in three parts:\n
    \     1. A signaling functional description [RFC3471].\n      2. RSVP-TE extensions
    [RFC3473].\n      3. CR-LDP extensions [RFC3472].\n   In addition, independent
    parts are available per technology:\n      1. GMPLS extensions for SONET and SDH
    control [RFC3946].\n      2. GMPLS extensions for G.709 control [GMPLS-G709].\n
    \  The following MPLS profile expressed in terms of MPLS features\n   [RFC3031]
    applies to GMPLS:\n   -  Downstream-on-demand label allocation and distribution.\n
    \  -  Ingress initiated ordered control.\n   -  Liberal (typical), or conservative
    (could) label retention mode.\n   -  Request, traffic/data, or topology driven
    label allocation\n      strategy.\n   -  Explicit routing (typical), or hop-by-hop
    routing.\n   The GMPLS signaling defines the following new building blocks on
    the\n   top of MPLS-TE:\n   1.  A new generic label request format.\n   2.  Labels
    for TDM, LSC and FSC interfaces, generically known as\n       Generalized Label.\n
    \  3.  Waveband switching support.\n   4.  Label suggestion by the upstream for
    optimization purposes (e.g.,\n       latency).\n   5.  Label restriction by the
    upstream to support some optical\n       constraints.\n   6.  Bi-directional LSP
    establishment with contention resolution.\n   7.  Rapid failure notification extensions.\n
    \  8.  Protection information currently focusing on link protection,\n       plus
    primary and secondary LSP indication.\n   9.  Explicit routing with explicit label
    control for a fine degree of\n       control.\n   10. Specific traffic parameters
    per technology.\n   11. LSP administrative status handling.\n   12. Control channel
    separation.\n   These building blocks will be described in more details in the\n
    \  following.  A complete specification can be found in the\n   corresponding
    documents.\n   Note that GMPLS is highly generic and has many options.  Only\n
    \  building blocks 1, 2 and 10 are mandatory, and only within the\n   specific
    format that is needed.  Typically, building blocks 6 and 9\n   should be implemented.
    \ Building blocks 3, 4, 5, 7, 8, 11 and 12 are\n   optional.\n   A typical SONET/SDH
    switching network would implement building\n   blocks: 1, 2 (the SONET/SDH label),
    6, 9, 10 and 11.  Building blocks\n   7 and 8 are optional since the protection
    can be achieved using\n   SONET/SDH overhead bytes.\n   A typical wavelength switching
    network would implement building\n   blocks: 1, 2 (the generic format), 4, 5,
    6, 7, 8, 9 and 11.  Building\n   block 3 is only needed in the particular case
    of waveband switching.\n   A typical fiber switching network would implement building
    blocks:\n   1, 2 (the generic format), 6, 7, 8, 9 and 11.\n   A typical MPLS-IP
    network would not implement any of these building\n   blocks, since the absence
    of building block 1 would indicate regular\n   MPLS-IP.  Note however that building
    block 1 and 8 can be used to\n   signal MPLS-IP as well.  In that case, the MPLS-IP
    network can\n   benefit from the link protection type (not available in CR-LDP,
    some\n   very basic form being available in RSVP-TE).  Building block 2 is\n   here
    a regular MPLS label and no new label format is required.\n   GMPLS does not specify
    any profile for RSVP-TE and CR-LDP\n   implementations that have to support GMPLS
    - except for what is\n   directly related to GMPLS procedures.  It is to the manufacturer
    to\n   decide which are the optional elements and procedures of RSVP-TE and\n
    \  CR-LDP that need to be implemented.  Some optional MPLS-TE elements\n   can
    be useful for TDM, LSC and FSC layers, for instance the setup and\n   holding
    priorities that are inherited from MPLS-TE.\n"
  - contents:
    - "7.1.  Overview: How to Request an LSP\n   A TDM, LSC or FSC LSP is established
      by sending a PATH/Label Request\n   message downstream to the destination.  This
      message contains a\n   Generalized Label Request with the type of LSP (i.e.,
      the layer\n   concerned), and its payload type.  An Explicit Route Object (ERO)
      is\n   also normally added to the message, but this can be added and/or\n   completed
      by the first/default LSR.\n   The requested bandwidth is encoded in the RSVP-TE
      SENDER_TSPEC\n   object, or in the CR-LDP Traffic Parameters TLV.  Specific
      parameters\n   for a given technology are given in these traffic parameters,
      such as\n   the type of signal, concatenation and/or transparency for a SONET/SDH\n
      \  LSP.  For some other technology there be could just one bandwidth\n   parameter
      indicating the bandwidth as a floating-point value.\n   The requested local
      protection per link may be requested using the\n   Protection Information Object/TLV.
      \ The end-to-end LSP protection is\n   for further study and is introduced LSP
      protection/restoration\n   section (see after).\n   If the LSP is a bi-directional
      LSP, an Upstream Label is also\n   specified in the Path/Label Request message.
      \ This label will be the\n   one to use in the upstream direction.\n   Additionally,
      a Suggested Label, a Label Set and a Waveband Label can\n   also be included
      in the message.  Other operations are defined in\n   MPLS-TE.\n   The downstream
      node will send back a Resv/Label Mapping message\n   including one Generalized
      Label object/TLV that can contain several\n   Generalized Labels.  For instance,
      if a concatenated SONET/SDH signal\n   is requested, several labels can be returned.\n
      \  In case of SONET/SDH virtual concatenation, a list of labels is\n   returned.
      \ Each label identifying one element of the virtual\n   concatenated signal.
      \ This limits virtual concatenation to remain\n   within a single (component)
      link.\n   In case of any type of SONET/SDH contiguous concatenation, only one\n
      \  label is returned.  That label is the lowest signal of the contiguous\n   concatenated
      signal (given an order specified in [RFC3946]).\n   In case of SONET/SDH \"multiplication\",
      i.e., co-routing of circuits\n   of the same type but without concatenation
      but all belonging to the\n   same LSP, the explicit ordered list of all signals
      that take part in\n   the LSP is returned.\n"
    title: '7.1.  Overview: How to Request an LSP'
  - contents:
    - "7.2.  Generalized Label Request\n   The Generalized Label Request is a new
      object/TLV to be added in an\n   RSVP-TE Path message instead of the regular
      Label Request, or in a\n   CR-LDP Request message in addition to the already
      existing TLVs. Only\n   one label request can be used per message, so a single
      LSP can be\n   requested at a time per signaling message.\n   The Generalized
      Label Request gives three major characteristics\n   (parameters) required to
      support the LSP being requested: the LSP\n   Encoding Type, the Switching Type
      that must be used and the LSP\n   payload type called Generalized PID (G-PID).\n
      \  The LSP Encoding Type indicates the encoding type that will be used\n   with
      the data associated with the LSP, i.e., the type of technology\n   being considered.
      \ For instance, it can be SDH, SONET, Ethernet, ANSI\n   PDH, etc.  It represents
      the nature of the LSP, and not the nature of\n   the links that the LSP traverses.
      \ This is used hop-by-hop by each\n   node.\n   A link may support a set of
      encoding formats, where support means\n   that a link is able to carry and switch
      a signal of one or more of\n   these encoding formats.  The Switching Type indicates
      then the type\n   of switching that should be performed on a particular link
      for that\n   LSP.  This information is needed for links that advertise more
      than\n   one type of switching capability.\n   Nodes must verify that the type
      indicated in the Switching Type is\n   supported on the corresponding incoming
      interface; otherwise, the\n   node must generate a notification message with
      a \"Routing\n   problem/Switching Type\" indication.\n   The LSP payload type
      (G-PID) identifies the payload carried by the\n   LSP, i.e., an identifier of
      the client layer of that LSP.  For some\n   technologies, it also indicates
      the mapping used by the client layer,\n   e.g., byte synchronous mapping of
      E1.  This must be interpreted\n   according to the LSP encoding type and is
      used by the nodes at the\n   endpoints of the LSP to know to which client layer
      a request is\n   destined, and in some cases by the penultimate hop.\n   Other
      technology specific parameters are not transported in the\n   Generalized Label
      Request but in technology specific traffic\n   parameters as explained hereafter.
      \ Currently, two set of traffic\n   parameters are defined, one for SONET/SDH
      and one for G.709.\n   Note that it is expected than specific traffic parameters
      will be\n   defined in the future for photonic (all optical) switching.\n"
    title: 7.2.  Generalized Label Request
  - contents:
    - "7.3.  SONET/SDH Traffic Parameters\n   The GMPLS SONET/SDH traffic parameters
      [RFC3946] specify a powerful\n   set of capabilities for SONET [ANSI-T1.105]
      and SDH [ITUT-G.707].\n   The first traffic parameter specifies the type of
      the elementary\n   SONET/SDH signal that comprises the requested LSP, e.g.,
      VC-11, VT6,\n   VC-4, STS-3c, etc.  Several transforms can then be applied\n
      \  successively on the elementary Signal to build the final signal being\n   actually
      requested for the LSP.\n   These transforms are the contiguous concatenation,
      the virtual\n   concatenation, the transparency and the multiplication.  Each
      one is\n   optional.  They must be applied strictly in the following order:\n
      \  -  First, contiguous concatenation can be optionally applied on the\n      Elementary
      Signal, resulting in a contiguously concatenated\n      signal.\n   -  Second,
      virtual concatenation can be optionally applied either\n      directly on the
      elementary Signal, or on the contiguously\n      concatenated signal obtained
      from the previous phase.\n   -  Third, some transparency can be optionally specified
      when\n      requesting a frame as signal rather than a container.  Several\n
      \     transparency packages are defined.\n   -  Fourth, a multiplication can
      be optionally applied either directly\n      on the elementary Signal, or on
      the contiguously concatenated\n      signal obtained from the first phase, or
      on the virtually\n      concatenated signal obtained from the second phase,
      or on these\n      signals combined with some transparency.\n   For RSVP-TE,
      the SONET/SDH traffic parameters are carried in a new\n   SENDER_TSPEC and FLOWSPEC.
      \ The same format is used for both.  There\n   is no Adspec associated with
      the SENDER_TSPEC, it is omitted or a\n   default value is used.  The content
      of the FLOWSPEC object received\n   in a Resv message should be identical to
      the content of the\n   SENDER_TSPEC of the corresponding Path message.  In other
      words, the\n   receiver is normally not allowed to change the values of the
      traffic\n   parameters.  However, some level of negotiation may be achieved
      as\n   explained in [RFC3946].\n   For CR-LDP, the SONET/SDH traffic parameters
      are simply carried in a\n   new TLV.\n   Note that a general discussion on SONET/SDH
      and GMPLS can be found in\n   [SONET-SDH-GMPLS-FRM].\n"
    title: 7.3.  SONET/SDH Traffic Parameters
  - contents:
    - "7.4.  G.709 Traffic Parameters\n   Simply said, an [ITUT-G.709] based network
      is decomposed in two major\n   layers: an optical layer (i.e., made of wavelengths)
      and a digital\n   layer.  These two layers are divided into sub-layers and switching\n
      \  occurs at two specific sub-layers: at the OCh (Optical Channel)\n   optical
      layer and at the ODU (Optical channel Data Unit) electrical\n   layer.  The
      ODUk notation is used to denote ODUs at different\n   bandwidths.\n   The GMPLS
      G.709 traffic parameters [GMPLS-G709] specify a powerful\n   set of capabilities
      for ITU-T G.709 networks.\n   The first traffic parameter specifies the type
      of the elementary\n   G.709 signal that comprises the requested LSP, e.g., ODU1,
      OCh at 40\n   Gbps, etc.  Several transforms can then be applied successively
      on\n   the elementary Signal to build the final signal being actually\n   requested
      for the LSP.\n   These transforms are the virtual concatenation and the\n   multiplication.
      \ Each one of these transforms is optional.  They must\n   be applied strictly
      in the following order:\n   -  First, virtual concatenation can be optionally
      applied directly on\n      the elementary Signal,\n   -  Second, a multiplication
      can be optionally applied, either\n      directly on the elementary Signal,
      or on the virtually\n      concatenated signal obtained from the first phase.\n
      \  Additional ODUk Multiplexing traffic parameters allow indicating an\n   ODUk
      mapping (ODUj into ODUk) for an ODUk multiplexing LSP request.\n   G.709 supports
      the following multiplexing capabilities: ODUj into\n   ODUk (k > j) and ODU1
      with ODU2 multiplexing into ODU3.\n   For RSVP-TE, the G.709 traffic parameters
      are carried in a new\n   SENDER-TSPEC and FLOWSPEC.  The same format is used
      for both.  There\n   is no Adspec associated with the SENDER_TSPEC, it is omitted
      or a\n   default value is used.  The content of the FLOWSPEC object received\n
      \  in a Resv message should be identical to the content of the\n   SENDER_TSPEC
      of the corresponding Path message.\n   For CR-LDP, the G.709 traffic parameters
      are simply carried in a new\n   TLV.\n"
    title: 7.4.  G.709 Traffic Parameters
  - contents:
    - "7.5.  Bandwidth Encoding\n   Some technologies that do not have (yet) specific
      traffic parameters\n   just require a bandwidth encoding transported in a generic
      form.\n   Bandwidth is carried in 32-bit number in IEEE floating-point format\n
      \  (the unit is bytes per second).  Values are carried in a per protocol\n   specific
      manner.  For non-packet LSPs, it is useful to define\n   discrete values to
      identify the bandwidth of the LSP.\n   It should be noted that this bandwidth
      encoding do not apply to\n   SONET/SDH and G.709, for which the traffic parameters
      fully define\n   the requested SONET/SDH or G.709 signal.\n   The bandwidth
      is coded in the Peak Data Rate field of Int-Serv\n   objects for RSVP-TE in
      the SENDER_TSPEC and FLOWSPEC objects and in\n   the Peak and Committed Data
      Rate fields of the CR-LDP Traffic\n   Parameters TLV.\n"
    title: 7.5.  Bandwidth Encoding
  - contents:
    - "7.6.  Generalized Label\n   The Generalized Label extends the traditional MPLS
      label by allowing\n   the representation of not only labels that travel in-band
      with\n   associated data packets, but also (virtual) labels that identify\n
      \  time-slots, wavelengths, or space division multiplexed positions.\n   For
      example, the Generalized Label may identify (a) a single fiber in\n   a bundle,
      (b) a single waveband within fiber, (c) a single wavelength\n   within a waveband
      (or fiber), or (d) a set of time-slots within a\n   wavelength (or fiber).  It
      may also be a generic MPLS label, a Frame\n   Relay label, or an ATM label (VCI/VPI).
      \ The format of a label can be\n   as simple as an integer value such as a wavelength
      label or can be\n   more elaborated such as an SONET/SDH or a G.709 label.\n
      \  SDH and SONET define each a multiplexing structure.  These\n   multiplexing
      structures will be used as naming trees to create unique\n   labels.  Such a
      label will identify the exact position (times-lot(s))\n   of a signal in a multiplexing
      structure.  Since the SONET\n   multiplexing structure may be seen as a subset
      of the SDH\n   multiplexing structure, the same format of label is used for
      SDH and\n   SONET.  A similar concept is applied to build a label at the G.709\n
      \  ODU layer.\n   Since the nodes sending and receiving the Generalized Label
      know what\n   kinds of link they are using, the Generalized Label does not identify\n
      \  its type.  Instead, the nodes are expected to know from the context\n   what
      type of label to expect.\n   A Generalized Label only carries a single level
      of label i.e., it is\n   non-hierarchical.  When multiple levels of labels (LSPs
      within LSPs)\n   are required, each LSP must be established separately.\n"
    title: 7.6.  Generalized Label
  - contents:
    - "7.7.  Waveband Switching\n   A special case of wavelength switching is waveband
      switching.  A\n   waveband represents a set of contiguous wavelengths, which
      can be\n   switched together to a new waveband.  For optimization reasons, it\n
      \  may be desirable for a photonic cross-connect to optically switch\n   multiple
      wavelengths as a unit.  This may reduce the distortion on\n   the individual
      wavelengths and may allow tighter separation of the\n   individual wavelengths.
      \ A Waveband label is defined to support this\n   special case.\n   Waveband
      switching naturally introduces another level of label\n   hierarchy and as such
      the waveband is treated the same way, all other\n   upper layer labels are treated.
      \ As far as the MPLS protocols are\n   concerned, there is little difference
      between a waveband label and a\n   wavelength label.  Exception is that semantically
      the waveband can be\n   subdivided into wavelengths whereas the wavelength can
      only be\n   subdivided into time or statistically multiplexed labels.\n   In
      the context of waveband switching, the generalized label used to\n   indicate
      a waveband contains three fields, a waveband ID, a Start\n   Label and an End
      Label.  The Start and End Labels are channel\n   identifiers from the sender
      perspective that identify respectively,\n   the lowest value wavelength and
      the highest value wavelength making\n   up the waveband.\n"
    title: 7.7.  Waveband Switching
  - contents:
    - "7.8.  Label Suggestion by the Upstream\n   GMPLS allows for a label to be optionally
      suggested by an upstream\n   node.  This suggestion may be overridden by a downstream
      node but in\n   some cases, at the cost of higher LSP setup time.  The suggested\n
      \  label is valuable when establishing LSPs through certain kinds of\n   optical
      equipment where there may be a lengthy (in electrical terms)\n   delay in configuring
      the switching fabric.  For example, micro\n   mirrors may have to be elevated
      or moved, and this physical motion\n   and subsequent damping takes time.  If
      the labels and hence switching\n   fabric are configured in the reverse direction
      (the norm), the\n   Resv/MAPPING message may need to be delayed by 10's of milliseconds\n
      \  per hop in order to establish a usable forwarding path.  It can be\n   important
      for restoration purposes where alternate LSPs may need to\n   be rapidly established
      as a result of network failures.\n"
    title: 7.8.  Label Suggestion by the Upstream
  - contents:
    - "7.9.  Label Restriction by the Upstream\n   An upstream node can optionally
      restrict (limit) the choice of label\n   of a downstream node to a set of acceptable
      labels.  Giving lists\n   and/or ranges of inclusive (acceptable) or exclusive
      (unacceptable)\n   labels in a Label Set provides this restriction.  If not
      applied, all\n   labels from the valid label range may be used.  There are at
      least\n   four cases where a label restriction is useful in the \"optical\"\n
      \  domain.\n   Case 1: the end equipment is only capable of transmitting and\n
      \     receiving on a small specific set of wavelengths/wavebands.\n   Case 2:
      there is a sequence of interfaces, which cannot support\n      wavelength conversion
      and require the same wavelength be used\n      end-to-end over a sequence of
      hops, or even an entire path.\n   Case 3: it is desirable to limit the amount
      of wavelength conversion\n      being performed to reduce the distortion on
      the optical signals.\n   Case 4: two ends of a link support different sets of
      wavelengths.\n   The receiver of a Label Set must restrict its choice of labels
      to one\n   that is in the Label Set.  A Label Set may be present across multiple\n
      \  hops.  In this case, each node generates its own outgoing Label Set,\n   possibly
      based on the incoming Label Set and the node's hardware\n   capabilities.  This
      case is expected to be the norm for nodes with\n   conversion incapable interfaces.\n"
    title: 7.9.  Label Restriction by the Upstream
  - contents:
    - "7.10.  Bi-directional LSP\n   GMPLS allows establishment of bi-directional
      symmetric LSPs (not of\n   asymmetric LSPs).  A symmetric bi-directional LSP
      has the same\n   traffic engineering requirements including fate sharing, protection\n
      \  and restoration, LSRs, and resource requirements (e.g., latency and\n   jitter)
      in each direction.\n   In the remainder of this section, the term \"initiator\"
      is used to\n   refer to a node that starts the establishment of an LSP; the
      term\n   \"terminator\" is used to refer to the node that is the target of the\n
      \  LSP.  For a bi-directional LSPs, there is only one initiator and one\n   terminator.\n
      \  Normally to establish a bi-directional LSP when using RSVP-TE\n   [RFC3209]
      or CR-LDP [RFC3212] two unidirectional paths must be\n   independently established.
      This approach has the following\n   disadvantages:\n   1. The latency to establish
      the bi-directional LSP is equal to one\n      round trip signaling time plus
      one initiator-terminator signaling\n      transit delay.  This not only extends
      the setup latency for\n      successful LSP establishment, but it extends the
      worst-case\n      latency for discovering an unsuccessful LSP to as much as
      two\n      times the initiator-terminator transit delay.  These delays are\n
      \     particularly significant for LSPs that are established for\n      restoration
      purposes.\n   2. The control overhead is twice that of a unidirectional LSP.
      \ This\n      is because separate control messages (e.g., Path and Resv) must
      be\n      generated for both segments of the bi-directional LSP.\n   3. Because
      the resources are established in separate segments, route\n      selection is
      complicated.  There is also additional potential race\n      for conditions
      in assignment of resources, which decreases the\n      overall probability of
      successfully establishing the bi-\n      directional connection.\n   4. It is
      more difficult to provide a clean interface for SONET/SDH\n      equipment that
      may rely on bi-directional hop-by-hop paths for\n      protection switching.
      \ Note that existing SONET/SDH equipment\n      transmits the control information
      in-band with the data.\n   5. Bi-directional optical LSPs (or lightpaths) are
      seen as a\n      requirement for many optical networking service providers.\n
      \  With bi-directional LSPs both the downstream and upstream data paths,\n   i.e.,
      from initiator to terminator and terminator to initiator, are\n   established
      using a single set of signaling messages.  This reduces\n   the setup latency
      to essentially one initiator-terminator round trip\n   time plus processing
      time, and limits the control overhead to the\n   same number of messages as
      a unidirectional LSP.\n   For bi-directional LSPs, two labels must be allocated.
      \ Bi-\n   directional LSP setup is indicated by the presence of an Upstream\n
      \  Label in the appropriate signaling message.\n"
    title: 7.10.  Bi-directional LSP
  - contents:
    - "7.11.  Bi-directional LSP Contention Resolution\n   Contention for labels may
      occur between two bi-directional LSP setup\n   requests traveling in opposite
      directions.  This contention occurs\n   when both sides allocate the same resources
      (ports) at effectively\n   the same time.  GMPLS signaling defines a procedure
      to resolve that\n   contention: the node with the higher node ID will win the
      contention.\n   To reduce the probability of contention, some mechanisms are
      also\n   suggested.\n"
    title: 7.11.  Bi-directional LSP Contention Resolution
  - contents:
    - "7.12.  Rapid Notification of Failure\n   GMPLS defines several signaling extensions
      that enable expedited\n   notification of failures and other events to nodes
      responsible for\n   restoring failed LSPs, and error handling.\n   1. Acceptable
      Label Set for notification on Label Error:\n      There are cases in traditional
      MPLS and in GMPLS that result in an\n      error message containing an \"Unacceptable
      label value\" indication.\n      When these cases occur, it can useful for the
      node generating the\n      error message to indicate which labels would be acceptable.
      \ To\n      cover this case, GMPLS introduces the ability to convey such\n      information
      via the \"Acceptable Label Set\".  An Acceptable Label\n      Set is carried
      in appropriate protocol specific error messages.\n      The format of an Acceptable
      Label Set is identical to a Label Set.\n   2. Expedited notification:\n      Extensions
      to RSVP-TE enable expedited notification of failures\n      and other events
      to determined nodes.  For CR-LDP, there is not\n      currently a similar mechanism.
      \ The first extension identifies\n      where event notifications are to be
      sent.  The second provides for\n      general expedited event notification with
      a Notify message.  Such\n      extensions can be used by fast restoration mechanisms.\n
      \     Notifications may be requested in both the upstream and downstream\n      directions.\n
      \     The Notify message is a generalized notification mechanism that\n      differs
      from the currently defined error messages in that it can\n      be \"targeted\"
      to a node other than the immediate upstream or\n      downstream neighbor.  The
      Notify message does not replace existing\n      error messages.  The Notify
      message may be sent either (a)\n      normally, where non-target nodes just
      forward the Notify message\n      to the target node, similar to ResvConf processing
      in [RFC2205];\n      or (b) encapsulated in a new IP header whose destination
      is equal\n      to the target IP address.\n   3. Faster removal of intermediate
      states:\n      A specific RSVP optimization allowing in some cases the faster\n
      \     removal of intermediate states.  This extension is used to deal\n      with
      specific RSVP mechanisms.\n"
    title: 7.12.  Rapid Notification of Failure
  - contents:
    - "7.13.  Link Protection\n   Protection information is carried in the new optional
      Protection\n   Information Object/TLV.  It currently indicates the desired link\n
      \  protection for each link of an LSP.  If a particular protection type,\n   i.e.,
      1+1, or 1:N, is requested, then a connection request is\n   processed only if
      the desired protection type can be honored.  Note\n   that GMPLS advertises
      the protection capabilities of a link in the\n   routing protocols.  Path computation
      algorithms may consider this\n   information when computing paths for setting
      up LSPs.\n   Protection information also indicates if the LSP is a primary or\n
      \  secondary LSP.  A secondary LSP is a backup to a primary LSP.  The\n   resources
      of a secondary LSP are normally not used until the primary\n   LSP fails, but
      they may be used by other LSPs until the primary LSP\n   fails over the secondary
      LSP.  At that point, any LSP that is using\n   the resources for the secondary
      LSP must be preempted.\n   Six link protection types are currently defined as
      individual flags\n   and can be combined: enhanced, dedicated 1+1, dedicated
      1:1, shared,\n   unprotected, extra traffic.  See [RFC3471] section 7.1 for
      a precise\n   definition of each.\n"
    title: 7.13.  Link Protection
  - contents:
    - "7.14.  Explicit Routing and Explicit Label Control\n   By using an explicit
      route, the path taken by an LSP can be\n   controlled more or less precisely.
      \ Typically, the node at the head-\n   end of an LSP finds an explicit route
      and builds an Explicit Route\n   Object (ERO)/ Explicit Route (ER) TLV that
      contains that route.\n   Possibly, the edge node does not build any explicit
      route, and just\n   transmit a signaling request to a default neighbor LSR (as
      IP/MPLS\n   hosts would).  For instance, an explicit route could be added to
      a\n   signaling message by the first switching node, on behalf of the edge\n
      \  node.  Note also that an explicit route is altered by intermediate\n   LSRs
      during its progression towards the destination.\n   The explicit route is originally
      defined by MPLS-TE as a list of\n   abstract nodes (i.e., groups of nodes) along
      the explicit route.\n   Each abstract node can be an IPv4 address prefix, an
      IPv6 address\n   prefix, or an AS number.  This capability allows the generator
      of the\n   explicit route to have incomplete information about the details of\n
      \  the path.  In the simplest case, an abstract node can be a full IP\n   address
      (32 bits) that identifies a specific node (called a simple\n   abstract node).\n
      \  MPLS-TE allows strict and loose abstract nodes.  The path between a\n   strict
      node and its preceding node must include only network nodes\n   from the strict
      node and its preceding abstract node.  The path\n   between a loose node and
      its preceding abstract node may include\n   other network nodes that are not
      part of the loose node or its\n   preceding abstract node.\n   This explicit
      route was extended to include interface numbers as\n   abstract nodes to support
      unnumbered interfaces; and further extended\n   by GMPLS to include labels as
      abstract nodes.  Having labels in an\n   explicit route is an important feature
      that allows controlling the\n   placement of an LSP with a very fine granularity.
      \ This is more\n   likely to be used for TDM, LSC and FSC links.\n   In particular,
      the explicit label control in the explicit route\n   allows terminating an LSP
      on a particular outgoing port of an egress\n   node.  Indeed, a label sub-object/TLV
      must follow a sub-object/TLV\n   containing the IP address, or the interface
      identifier (in case of\n   unnumbered interface), associated with the link on
      which it is to be\n   used.\n   This can also be used when it is desirable to
      \"splice\" two LSPs\n   together, i.e., where the tail of the first LSP would
      be \"spliced\"\n   into the head of the second LSP.\n   When used together with
      an optimization algorithm, it can provide\n   very detailed explicit routes,
      including the label (timeslot) to use\n   on a link, in order to minimize the
      fragmentation of the SONET/SDH\n   multiplex on the corresponding interface.\n"
    title: 7.14.  Explicit Routing and Explicit Label Control
  - contents:
    - "7.15.  Route Recording\n   In order to improve the reliability and the manageability
      of the LSP\n   being established, the concept of the route recording was introduced\n
      \  in RSVP-TE to function as:\n   -  First, a loop detection mechanism to discover
      L3 routing loops, or\n      loops inherent in the explicit route (this mechanism
      is strictly\n      exclusive with the use of explicit routing objects).\n   -
      \ Second, a route recording mechanism collects up-to-date detailed\n      path
      information on a hop-by-hop basis during the LSP setup\n      process. This
      mechanism provides valuable information to the\n      source and destination
      nodes.  Any intermediate routing change at\n      setup time, in case of loose
      explicit routing, will be reported.\n   -  Third, a recorded route can be used
      as input for an explicit\n      route.  This is useful if a source node receives
      the recorded\n      route from a destination node and applies it as an explicit
      route\n      in order to \"pin down the path\".\n   Within the GMPLS architecture,
      only the second and third functions\n   are mainly applicable for TDM, LSC and
      FSC layers.\n"
    title: 7.15.  Route Recording
  - contents:
    - "7.16.  LSP Modification and LSP Re-routing\n   LSP modification and re-routing
      are two features already available in\n   MPLS-TE.  GMPLS does not add anything
      new.  Elegant re-routing is\n   possible with the concept of \"make-before-break\"
      whereby an old path\n   is still used while a new path is set up by avoiding
      double\n   reservation of resources.  Then, the node performing the re-routing\n
      \  can swap on the new path and close the old path.  This feature is\n   supported
      with RSVP-TE (using shared explicit filters) and CR-LDP\n   (using the action
      indicator flag).\n   LSP modification consists in changing some LSP parameters,
      but\n   normally without changing the route.  It is supported using the same\n
      \  mechanism as re-routing.  However, the semantic of LSP modification\n   will
      differ from one technology to the other.  For instance, further\n   studies
      are required to understand the impact of dynamically changing\n   some SONET/SDH
      circuit characteristics such as the bandwidth, the\n   protection type, the
      transparency, the concatenation, etc.\n"
    title: 7.16.  LSP Modification and LSP Re-routing
  - contents:
    - "7.17.  LSP Administrative Status Handling\n   GMPLS provides the optional capability
      to indicate the administrative\n   status of an LSP by using a new Admin Status
      object/TLV.\n   Administrative Status information is currently used in two ways.\n
      \  In the first usage, the Admin Status object/TLV is carried in a\n   Path/Label
      Request or Resv/Label Mapping message to indicate the\n   administrative state
      of an LSP.  In this usage, Administrative Status\n   information indicates the
      state of the LSP, which include \"up\" or\n   \"down\", if it in a \"testing\"
      mode, and if deletion is in progress.\n   Based on that administrative status,
      a node can take local decisions,\n   like inhibit alarm reporting when an LSP
      is in \"down\" or \"testing\"\n   states, or report alarms associated with the
      connection at a priority\n   equal to or less than \"Non service affecting\".\n
      \  It is possible that some nodes along an LSP will not support the\n   Admin
      Status Object/TLV.  In the case of a non-supporting transit\n   node, the object
      will pass through the node unmodified and normal\n   processing can continue.\n
      \  In some circumstances, particularly optical networks, it is useful to\n   set
      the administrative status of an LSP to \"being deleted\" before\n   tearing
      it down in order to avoid non-useful generation of alarms.\n   The ingress LSR
      precedes an LSP deletion by inserting an appropriate\n   Admin Status Object/TLV
      in a Path/Label Request (with the\n   modification action indicator flag set
      to modify) message.  Transit\n   LSRs process the Admin Status Object/TLV and
      forward it.  The egress\n   LSR answers in a Resv/Label Mapping (with the modification
      action\n   indicator flag set to modify) message with the Admin Status object.\n
      \  Upon receiving this message and object, the ingress node sends a\n   PathTear/Release
      message downstream to remove the LSP and normal\n   RSVP-TE/CR-LDP processing
      takes place.\n   In the second usage, the Admin Status object/TLV is carried
      in a\n   Notification/Label Mapping (with the modification action indicator\n
      \  flag set to modify) message to request that the ingress node change\n   the
      administrative state of an LSP.  This allows intermediate and\n   egress nodes
      triggering the setting of administrative status.  In\n   particular, this allows
      intermediate or egress LSRs requesting a\n   release of an LSP initiated by
      the ingress node.\n"
    title: 7.17.  LSP Administrative Status Handling
  - contents:
    - "7.18.  Control Channel Separation\n   In GMPLS, a control channel be separated
      from the data channel.\n   Indeed, the control channel can be implemented completely
      out-of-\n   band for various reason, e.g., when the data channel cannot carry\n
      \  in-band control information.  This issue was even originally\n   introduced
      to MPLS in the context of link bundling.\n   In traditional MPLS, there is an
      implicit one-to-one association of a\n   control channel to a data channel.
      \ When such an association is\n   present, no additional or special information
      is required to\n   associate a particular LSP setup transaction with a particular
      data\n   channel.\n   Otherwise, it is necessary to convey additional information
      in\n   signaling to identify the particular data channel being controlled.\n
      \  GMPLS supports explicit data channel identification by providing\n   interface
      identification information.  GMPLS allows the use of a\n   number of interface
      identification schemes including IPv4 or IPv6\n   addresses, interface indexes
      (for unnumbered interfaces) and\n   component interfaces (for bundled interfaces),
      unnumbered bundled\n   interfaces are also supported.\n   The choice of the
      data interface to use is always made by the sender\n   of the Path/Label Request
      message, and indicated by including the\n   data channel's interface identifier
      in the message using a new\n   RSVP_HOP object sub-type/Interface TLV.\n   For
      bi-directional LSPs, the sender chooses the data interface in\n   each direction.
      \ In all cases but bundling, the upstream interface is\n   implied by the downstream
      interface.  For bundling, the Path/Label\n   Request sender explicitly identifies
      the component interface used in\n   each direction.  The new object/TLV is used
      in Resv/Label Mapping\n   message to indicate the downstream node's usage of
      the indicated\n   interface(s).\n   The new object/TLV can contain a list of
      embedded TLVs, each embedded\n   TLV can be an IPv4 address, and IPv6 address,
      an interface index, a\n   downstream component interface ID or an upstream component
      interface\n   ID.  In the last three cases, the embedded TLV contains itself
      an IP\n   address plus an Interface ID, the IP address being used to identify\n
      \  the interface ID (it can be the router ID for instance).\n   There are cases
      where it is useful to indicate a specific interface\n   associated with an error.
      \ To support these cases the IF_ID\n   ERROR_SPEC RSVP Objects are defined.\n"
    title: 7.18.  Control Channel Separation
  title: 7.  Generalized Signaling
- contents:
  - "8.  Forwarding Adjacencies (FA)\n   To improve scalability of MPLS TE (and thus
    GMPLS) it may be useful\n   to aggregate multiple TE LSPs inside a bigger TE LSP.
    \ Intermediate\n   nodes see the external LSP only.  They do not have to maintain\n
    \  forwarding states for each internal LSP, less signaling messages need\n   to
    be exchanged and the external LSP can be somehow protected instead\n   (or in
    addition) to the internal LSPs.  This can considerably\n   increase the scalability
    of the signaling.\n   The aggregation is accomplished by (a) an LSR creating a
    TE LSP, (b)\n   the LSR forming a forwarding adjacency out of that LSP (advertising\n
    \  this LSP as a Traffic Engineering (TE) link into IS-IS/OSPF), (c)\n   allowing
    other LSRs to use forwarding adjacencies for their path\n   computation, and (d)
    nesting of LSPs originated by other LSRs into\n   that LSP (e.g., by using the
    label stack construct in the case of\n   IP).\n   ISIS/OSPF floods the information
    about \"Forwarding Adjacencies\" FAs\n   just as it floods the information about
    any other links. Consequently\n   to this flooding, an LSR has in its TE link
    state database the\n   information about not just conventional links, but FAs
    as well.\n   An LSR, when performing path computation, uses not just conventional\n
    \  links, but FAs as well.  Once a path is computed, the LSR uses RSVP-\n   TE/CR-LDP
    for establishing label binding along the path.  FAs need\n   simple extensions
    to signaling and routing protocols.\n"
  - contents:
    - "8.1.  Routing and Forwarding Adjacencies\n   Forwarding adjacencies may be
      represented as either unnumbered or\n   numbered links.  A FA can also be a
      bundle of LSPs between two nodes.\n   FAs are advertised as GMPLS TE links such
      as defined in [HIERARCHY].\n   GMPLS TE links are advertised in OSPF and IS-IS
      such as defined in\n   [OSPF-TE-GMPLS] and [ISIS-TE-GMPLS].  These last two
      specifications\n   enhance [OSPF-TE] and [ISIS-TE] that defines a base TE link.\n
      \  When a FA is created dynamically, its TE attributes are inherited\n   from
      the FA-LSP that induced its creation.  [HIERARCHY] specifies how\n   each TE
      parameter of the FA is inherited from the FA-LSP.  Note that\n   the bandwidth
      of the FA must be at least as big as the FA-LSP that\n   induced it, but may
      be bigger if only discrete bandwidths are\n   available for the FA-LSP.  In
      general, for dynamically provisioned\n   forwarding adjacencies, a policy-based
      mechanism may be needed to\n   associate attributes to forwarding adjacencies.\n
      \  A FA advertisement could contain the information about the path taken\n   by
      the FA-LSP associated with that FA.  Other LSRs may use this\n   information
      for path computation.  This information is carried in a\n   new OSPF and IS-IS
      TLV called the Path TLV.\n   It is possible that the underlying path information
      might change over\n   time, via configuration updates, or dynamic route modifications,\n
      \  resulting in the change of that TLV.\n   If forwarding adjacencies are bundled
      (via link bundling), and if the\n   resulting bundled link carries a Path TLV,
      the underlying path\n   followed by each of the FA-LSPs that form the component
      links must be\n   the same.\n   It is expected that forwarding adjacencies will
      not be used for\n   establishing IS-IS/OSPF peering relation between the routers
      at the\n   ends of the adjacency.\n   LSP hierarchy could exist both with the
      peer and with the overlay\n   models.  With the peer model, the LSP hierarchy
      is realized via FAs\n   and an LSP is both created and used as a TE link by
      exactly the same\n   instance of the control plane.  Creating LSP hierarchies
      with\n   overlays does not involve the concept of FA.  With the overlay model\n
      \  an LSP created (and maintained) by one instance of the GMPLS control\n   plane
      is used as a TE link by another instance of the GMPLS control\n   plane.  Moreover,
      the nodes using a TE link are expected to have a\n   routing and signaling adjacency.\n"
    title: 8.1.  Routing and Forwarding Adjacencies
  - contents:
    - "8.2.  Signaling Aspects\n   For the purpose of processing the explicit route
      in a Path/Request\n   message of an LSP that is to be tunneled over a forwarding
      adjacency,\n   an LSR at the head-end of the FA-LSP views the LSR at the tail
      of\n   that FA-LSP as adjacent (one IP hop away).\n"
    title: 8.2.  Signaling Aspects
  - contents:
    - "8.3.  Cascading of Forwarding Adjacencies\n   With an integrated model, several
      layers are controlled using the\n   same routing and signaling protocols.  A
      network may then have links\n   with different multiplexing/demultiplexing capabilities.
      \ For\n   example, a node may be able to multiplex/demultiplex individual\n
      \  packets on a given link, and may be able to multiplex/demultiplex\n   channels
      within a SONET payload on other links.\n   A new OSPF and IS-IS sub-TLV has
      been defined to advertise the\n   multiplexing capability of each interface:
      PSC, L2SC, TDM, LSC or\n   FSC.  This sub-TLV is called the Interface Switching
      Capability\n   Descriptor sub-TLV, which complements the sub-TLVs defined in\n
      \  [OSPF-TE-GMPLS] and [ISIS-TE-GMPLS].  The information carried in this\n   sub-TLV
      is used to construct LSP regions, and determine region's\n   boundaries.\n   Path
      computation may take into account region boundaries when\n   computing a path
      for an LSP.  For example, path computation may\n   restrict the path taken by
      an LSP to only the links whose\n   multiplexing/demultiplexing capability is
      PSC.  When an LSP need to\n   cross a region boundary, it can trigger the establishment
      of an FA at\n   the underlying layer (i.e., the L2SC layer).  This can trigger
      a\n   cascading of FAs between layers with the following obvious order:\n   L2SC,
      then TDM, then LSC, and then finally FSC.\n"
    title: 8.3.  Cascading of Forwarding Adjacencies
  title: 8.  Forwarding Adjacencies (FA)
- contents:
  - "9.  Routing and Signaling Adjacencies\n   By definition, two nodes have a routing
    (IS-IS/OSPF) adjacency if\n   they are neighbors in the IS-IS/OSPF sense.\n   By
    definition, two nodes have a signaling (RSVP-TE/CR-LDP) adjacency\n   if they
    are neighbors in the RSVP-TE/CR-LDP sense.  Nodes A and B are\n   RSVP-TE neighbors
    if they directly exchange RSVP-TE messages\n   (Path/Resv) (e.g., as described
    in sections 7.1.1 and 7.1.2 of\n   [HIERARCHY]).  The neighbor relationship includes
    exchanging RSVP-TE\n   Hellos.\n   By definition, a Forwarding Adjacency (FA)
    is a TE Link between two\n   GMPLS nodes whose path transits one or more other
    (G)MPLS nodes in\n   the same instance of the (G)MPLS control plane.  If two nodes
    have\n   one or more non-FA TE Links between them, these two nodes are\n   expected
    (although not required) to have a routing adjacency.  If two\n   nodes do not
    have any non-FA TE Links between them, it is expected\n   (although not required)
    that these two nodes would not have a routing\n   adjacency.  To state the obvious,
    if the TE links between two nodes\n   are to be used for establishing LSPs, the
    two nodes must have a\n   signaling adjacency.\n   If one wants to establish routing
    and/or signaling adjacency between\n   two nodes, there must be an IP path between
    them.  This IP path can\n   be, for example, a TE Link with an interface switching
    capability of\n   PSC, anything that looks likes an IP link (e.g., GRE tunnel,
    or a\n   (bi-directional) LSP that with an interface switching capability of\n
    \  PSC).\n   A TE link may not be capable of being used directly for maintaining\n
    \  routing and/or signaling adjacencies.  This is because GMPLS routing\n   and
    signaling adjacencies requires exchanging data on a per frame/\n   packet basis,
    and a TE link (e.g., a link between OXCs) may not be\n   capable of exchanging
    data on a per packet basis.  In this case, the\n   routing and signaling adjacencies
    are maintained via a set of one or\n   more control channels (see [LMP]).\n   Two
    nodes may have a TE link between them even if they do not have a\n   routing adjacency.
    \ Naturally, each node must run OSPF/IS-IS with\n   GMPLS extensions in order
    for that TE link to be advertised.  More\n   precisely, the node needs to run
    GMPLS extensions for TE Links with\n   an interface switching capability (see
    [GMPLS-ROUTING]) other than\n   PSC.  Moreover, this node needs to run either
    GMPLS or MPLS\n   extensions for TE links with an interface switching capability
    of\n   PSC.\n   The mechanisms for Control Channel Separation [RFC3471] should
    be\n   used (even if the IP path between two nodes is a TE link).  I.e.,\n   RSVP-TE/CR-LDP
    signaling should use the Interface_ID (IF_ID) object\n   to specify a particular
    TE link when establishing an LSP.\n   The IP path could consist of multiple IP
    hops.  In this case, the\n   mechanisms of sections 7.1.1 and 7.1.2 of [HIERARCHY]
    should be used\n   (in addition to Control Channel Separation).\n"
  title: 9.  Routing and Signaling Adjacencies
- contents:
  - "10.  Control Plane Fault Handling\n   Two major types of faults can impact a
    control plane.  The first,\n   referred to as control channel fault, relates to
    the case where\n   control communication is lost between two neighboring nodes.
    \ If the\n   control channel is embedded with the data channel, data channel\n
    \  recovery procedure should solve the problem.  If the control channel\n   is
    independent of the data channel, additional procedures are\n   required to recover
    from that problem.\n   The second, referred to as nodal faults, relates to the
    case where\n   node loses its control state (e.g., after a restart) but does not\n
    \  loose its data forwarding state.\n   In transport networks, such types of control
    plane faults should not\n   have service impact on the existing connections.  Under
    such\n   circumstances, a mechanism must exist to detect a control\n   communication
    failure and a recovery procedure must guarantee\n   connection integrity at both
    ends of the control channel.\n   For a control channel fault, once communication
    is restored routing\n   protocols are naturally able to recover but the underlying
    signaling\n   protocols must indicate that the nodes have maintained their state\n
    \  through the failure.  The signaling protocol must also ensure that\n   any
    state changes that were instantiated during the failure are\n   synchronized between
    the nodes.\n   For a nodal fault, a node's control plane restarts and loses most
    of\n   its state information.  In this case, both upstream and downstream\n   nodes
    must synchronize their state information with the restarted\n   node.  In order
    for any resynchronization to occur the node\n   undergoing the restart will need
    to preserve some information, such\n   as it's mappings of incoming to outgoing
    labels.\n   These issues are addressed in protocol specific fashions, see\n   [RFC3473],
    [RFC3472], [OSPF-TE-GMPLS] and [ISIS-TE-GMPLS].  Note that\n   these cases only
    apply when there are mechanisms to detect data\n   channel failures independent
    of control channel failures.\n   The LDP Fault tolerance (see [RFC3479]) specifies
    the procedures to\n   recover from a control channel failure.  [RFC3473] specifies
    how to\n   recover from both a control channel failure and a node failure.\n"
  title: 10.  Control Plane Fault Handling
- contents:
  - "11.  LSP Protection and Restoration\n   This section discusses Protection and
    Restoration (P&R) issues for\n   GMPLS LSPs.  It is driven by the requirements
    outlined in [RFC3386]\n   and some of the principles outlined in [RFC3469].  It
    will be\n   enhanced, as more GMPLS P&R mechanisms are defined.  The scope of\n
    \  this section is clarified hereafter:\n   -  This section is only applicable
    when a fault impacting LSP(s)\n      happens in the data/transport plane.  Section
    10 deals with\n      control plane fault handling for nodal and control channel
    faults.\n   -  This section focuses on P&R at the TDM, LSC and FSC layers.  There\n
    \     are specific P&R requirements at these layers not present at the\n      PSC
    layer.\n   -  This section focuses on intra-area P&R as opposed to inter-area\n
    \     P&R and even inter-domain P&R.  Note that P&R can even be more\n      restricted,
    e.g., to a collection of like customer equipment, or a\n      collection of equipment
    of like capabilities, in one single\n      routing area.\n   -  This section focuses
    on intra-layer P&R (horizontal hierarchy as\n      defined in [RFC3386]) as opposed
    to the inter-layer P&R (vertical\n      hierarchy).\n   -  P&R mechanisms are
    in general designed to handle single failures,\n      which makes SRLG diversity
    a necessity.  Recovery from multiple\n      failures requires further study.\n
    \  -  Both mesh and ring-like topologies are supported.\n   In the following,
    we assume that:\n   -  TDM, LSC and FSC devices are more generally committing
    recovery\n      resources in a non-best effort way.  Recovery resources are either\n
    \     allocated (thus used) or at least logically reserved (whether used\n      or
    not by preemptable extra traffic but unavailable anyway for\n      regular working
    traffic).\n   -  Shared P&R mechanisms are valuable to operators in order to\n
    \     maximize their network utilization.\n   -  Sending preemptable excess traffic
    on recovery resources is a\n      valuable feature for operators.\n"
  - contents:
    - "11.1.  Protection Escalation across Domains and Layers\n   To describe the
      P&R architecture, one must consider two dimensions of\n   hierarchy [RFC3386]:\n
      \  -  A horizontal hierarchy consisting of multiple P&R domains, which\n      is
      important in an LSP based protection scheme.  The scope of P&R\n      may extend
      over a link (or span), an administrative domain or\n      sub-network, an entire
      LSP.\n      An administrative domain may consist of a single P&R domain or as\n
      \     a concatenation of several smaller P&R domains.  The operator can\n      configure
      P&R domains, based on customers' requirements, and on\n      network topology
      and traffic engineering constraints.\n   -  A vertical hierarchy consisting
      of multiple layers of P&R with\n      varying granularities (packet flows, STS
      trails, lightpaths,\n      fibers, etc).\n      In the absence of adequate P&R
      coordination, a fault may propagate\n      from one level to the next within
      a P&R hierarchy.  It can lead to\n      \"collisions\" and simultaneous recovery
      actions may lead to race\n      conditions, reduced resource utilization, or
      instabilities\n      [MANCHESTER].  Thus, a consistent escalation strategy is
      needed to\n      coordinate recovery across domains and layers.  The fact that\n
      \     GMPLS can be used at different layers could simplify this\n      coordination.\n
      \     There are two types of escalation strategies: bottom-up and top-\n      down.
      \ The bottom-up approach assumes that \"lower-level\" recovery\n      schemes
      are more expedient.  Therefore we can inhibit or hold off\n      higher-level
      P&R.  The Top-down approach attempts service P&R at\n      the higher levels
      before invoking \"lower level\" P&R.  Higher-layer\n      P&R is service selective,
      and permits \"per-CoS\" or \"per-LSP\" re-\n      routing.\n   Service Level
      Agreements (SLAs) between network operators and their\n   clients are needed
      to determine the necessary time scales for P&R at\n   each layer and at each
      domain.\n"
    title: 11.1.  Protection Escalation across Domains and Layers
  - contents:
    - "11.2.  Mapping of Services to P&R Resources\n   The choice of a P&R scheme
      is a tradeoff between network utilization\n   (cost) and service interruption
      time.  In light of this tradeoff,\n   network service providers are expected
      to support a range of\n   different service offerings or service levels.\n   One
      can classify LSPs into one of a small set of service levels.\n   Among other
      things, these service levels define the reliability\n   characteristics of the
      LSP.  The service level associated with a\n   given LSP is mapped to one or
      more P&R schemes during LSP\n   establishment.  An advantage that mapping is
      that an LSP may use\n   different P&E schemes in different segments of a network
      (e.g., some\n   links may be span protected, whilst other segments of the LSP
      may\n   utilize ring protection).  These details are likely to be service\n
      \  provider specific.\n   An alternative to using service levels is for an application
      to\n   specify the set of specific P&R mechanisms to be used when\n   establishing
      the LSP.  This allows greater flexibility in using\n   different mechanisms
      to meet the application requirements.\n   A differentiator between these service
      levels is service interruption\n   time in case of network failures, which is
      defined as the length of\n   time between when a failure occurs and when connectivity
      is re-\n   established.  The choice of service level (or P&R scheme) should
      be\n   dictated by the service requirements of different applications.\n"
    title: 11.2.  Mapping of Services to P&R Resources
  - contents:
    - "11.3.  Classification of P&R Mechanism Characteristics\n   The following figure
      provides a classification of the possible\n   provisioning types of recovery
      LSPs, and of the levels of overbooking\n   that is possible for them.\n                 +-Computed
      on  +-Established     +-Resources pre-\n                 | demand       | on
      demand       | allocated\n                 |              |                 |\n
      \  Recovery LSP  |              |                 |\n   Provisioning -+-Pre
      computed +-Pre established +-Resources allocated\n                                                    on
      demand\n                  +--- Dedicated (1:1, 1+1)\n                  |\n                  |\n
      \                 +--- Shared (1:N, Ring, Shared mesh)\n                  |\n
      \  Level of       |\n   Overbooking ---+--- Best effort\n"
    title: 11.3.  Classification of P&R Mechanism Characteristics
  - contents:
    - "11.4.  Different Stages in P&R\n   Recovery from a network fault or impairment
      takes place in several\n   stages as discussed in [RFC3469], including fault
      detection, fault\n   localization, notification, recovery (i.e., the P&R itself)
      and\n   reversion of traffic (i.e., returning the traffic to the original\n
      \  working LSP or to a new one).\n   -  Fault detection is technology and implementation
      dependent.  In\n      general, failures are detected by lower layer mechanisms
      (e.g.,\n      SONET/SDH, Loss-of-Light (LOL)).  When a node detects a failure,\n
      \     an alarm may be passed up to a GMPLS entity, which will take\n      appropriate
      actions, or the alarm may be propagated at the lower\n      layer (e.g., SONET/SDH
      AIS).\n   -  Fault localization can be done with the help of GMPLS, e.g., using\n
      \     LMP for fault localization (see section 6.4).\n   -  Fault notification
      can also be achieved through GMPLS, e.g., using\n      GMPLS RSVP-TE/CR-LDP
      notification (see section 7.12).\n   -  This section focuses on the different
      mechanisms available for\n      recovery and reversion of traffic once fault
      detection,\n      localization and notification have taken place.\n"
    title: 11.4.  Different Stages in P&R
  - contents:
    - "11.5.  Recovery Strategies\n   Network P&R techniques can be divided into Protection
      and\n   Restoration.  In protection, resources between the protection\n   endpoints
      are established before failure, and connectivity after\n   failure is achieved
      simply by switching performed at the protection\n   end-points.  In contrast,
      restoration uses signaling after failure to\n   allocate resources along the
      recovery path.\n   -  Protection aims at extremely fast reaction times and may
      rely on\n      the use of overhead control fields for achieving end-point\n
      \     coordination.  Protection for SONET/SDH networks is described in\n      [ITUT-G.841]
      and [ANSI-T1.105].  Protection mechanisms can be\n      further classified by
      the level of redundancy and sharing.\n   -  Restoration mechanisms rely on signaling
      protocols to coordinate\n      switching actions during recovery, and may involve
      simple re-\n      provisioning, i.e., signaling only at the time of recovery;
      or\n      pre-signaling, i.e., signaling prior to recovery.\n   In addition,
      P&R can be applied on a local or end-to-end basis.  In\n   the local approach,
      P&R is focused on the local proximity of the\n   fault in order to reduce delay
      in restoring service.  In the end-to-\n   end approach, the LSP originating
      and terminating nodes control\n   recovery.\n   Using these strategies, the
      following recovery mechanisms can be\n   defined.\n"
    title: 11.5.  Recovery Strategies
  - contents:
    - "11.6.  Recovery mechanisms: Protection schemes\n   Note that protection schemes
      are usually defined in technology\n   specific ways, but this does not preclude
      other solutions.\n   -  1+1 Link Protection: Two pre-provisioned resources are
      used in\n      parallel.  For example, data is transmitted simultaneously on
      two\n      parallel links and a selector is used at the receiving node to\n
      \     choose the best source (see also [GMPLS-FUNCT]).\n   -  1:N Link Protection:
      Working and protecting resources (N working,\n      1 backup) are pre-provisioned.
      \ If a working resource fails, the\n      data is switched to the protecting
      resource, using a coordination\n      mechanism (e.g., in overhead bytes).  More
      generally, N working\n      and M protecting resources can be assigned for M:N
      link protection\n      (see also [GMPLS-FUNCT]).\n   -  Enhanced Protection:
      Various mechanisms such as protection rings\n      can be used to enhance the
      level of protection beyond single link\n      failures to include the ability
      to switch around a node failure or\n      multiple link failures within a span,
      based on a pre-established\n      topology of protection resources (note: no
      reference available at\n      publication time).\n   -  1+1 LSP Protection:
      Simultaneous data transmission on working and\n      protecting LSPs and tail-end
      selection can be applied (see also\n      [GMPLS-FUNCT]).\n"
    title: '11.6.  Recovery mechanisms: Protection schemes'
  - contents:
    - "11.7.  Recovery mechanisms: Restoration schemes\n   Thanks to the use of a
      distributed control plane like GMPLS,\n   restoration is possible in multiple
      of tenths of milliseconds.  It is\n   much harder to achieve when only an NMS
      is used and can only be done\n   in that case in a multiple of seconds.\n   -
      \ End-to-end LSP restoration with re-provisioning: an end-to-end\n      restoration
      path is established after failure.  The restoration\n      path may be dynamically
      calculated after failure, or pre-\n      calculated before failure (often during
      LSP establishment).\n      Importantly, no signaling is used along the restoration
      path\n      before failure, and no restoration bandwidth is reserved.\n      Consequently,
      there is no guarantee that a given restoration path\n      is available when
      a failure occurs.  Thus, one may have to\n      crankback to search for an available
      path.\n   -  End-to-end LSP restoration with pre-signaled recovery bandwidth\n
      \     reservation and no label pre-selection: an end-to-end restoration\n      path
      is pre-calculated before failure and a signaling message is\n      sent along
      this pre-selected path to reserve bandwidth, but labels\n      are not selected
      (see also [GMPLS-FUNCT]).\n      The resources reserved on each link of a restoration
      path may be\n      shared across different working LSPs that are not expected
      to fail\n      simultaneously.  Local node policies can be applied to define
      the\n      degree to which capacity is shared across independent failures.\n
      \     Upon failure detection, LSP signaling is initiated along the\n      restoration
      path to select labels, and to initiate the appropriate\n      cross-connections.\n
      \  -  End-to-end LSP restoration with pre-signaled recovery bandwidth\n      reservation
      and label pre-selection: An end-to-end restoration\n      path is pre-calculated
      before failure and a signaling procedure is\n      initiated along this pre-selected
      path on which bandwidth is\n      reserved and labels are selected (see also
      [GMPLS-FUNCT]).\n      The resources reserved on each link may be shared across
      different\n      working LSPs that are not expected to fail simultaneously.
      \ In\n      networks based on TDM, LSC and FSC technology, LSP signaling is\n
      \     used after failure detection to establish cross-connections at the\n      intermediate
      switches on the restoration path using the pre-\n      selected labels.\n   -
      \ Local LSP restoration: the above approaches can be applied on a\n      local
      basis rather than end-to-end, in order to reduce recovery\n      time (note:
      no reference available at publication time).\n"
    title: '11.7.  Recovery mechanisms: Restoration schemes'
  - contents:
    - "11.8.  Schema Selection Criteria\n   This section discusses criteria that could
      be used by the operator in\n   order to make a choice among the various P&R
      mechanisms.\n   -  Robustness: In general, the less pre-planning of the restoration\n
      \     path, the more robust the restoration scheme is to a variety of\n      failures,
      provided that adequate resources are available.\n      Restoration schemes with
      pre-planned paths will not be able to\n      recover from network failures that
      simultaneously affect both the\n      working and restoration paths.  Thus,
      these paths should ideally\n      be chosen to be as disjoint as possible (i.e.,
      SRLG and node\n      disjoint), so that any single failure event will not affect
      both\n      paths.  The risk of simultaneous failure of the two paths can be\n
      \     reduced by recalculating the restoration path whenever a failure\n      occurs
      along it.\n      The pre-selection of a label gives less flexibility for multiple\n
      \     failure scenarios than no label pre-selection.  If failures occur\n      that
      affect two LSPs that are sharing a label at a common node\n      along their
      restoration routes, then only one of these LSPs can be\n      recovered, unless
      the label assignment is changed.\n      The robustness of a restoration scheme
      is also determined by the\n      amount of reserved restoration bandwidth -
      as the amount of\n      restoration bandwidth sharing increases (reserved bandwidth\n
      \     decreases), the restoration scheme becomes less robust to\n      failures.
      \ Restoration schemes with pre-signaled bandwidth\n      reservation (with or
      without label pre-selection) can reserve\n      adequate bandwidth to ensure
      recovery from any specific set of\n      failure events, such as any single
      SRLG failure, any two SRLG\n      failures etc.  Clearly, more restoration capacity
      is allocated if\n      a greater degree of failure recovery is required.  Thus,
      the\n      degree to which the network is protected is determined by the\n      policy
      that defines the amount of reserved restoration bandwidth.\n   -  Recovery time:
      In general, the more pre-planning of the\n      restoration route, the more
      rapid the P&R scheme.  Protection\n      schemes generally recover faster than
      restoration schemes.\n      Restoration with pre-signaled bandwidth reservation
      are likely to\n      be (significantly) faster than path restoration with re-\n
      \     provisioning, especially because of the elimination of any\n      crankback.
      \ Local restoration will generally be faster than end-\n      to-end schemes.\n
      \     Recovery time objectives for SONET/SDH protection switching (not\n      including
      time to detect failure) are specified in [ITUT-G.841] at\n      50 ms, taking
      into account constraints on distance, number of\n      connections involved,
      and in the case of ring enhanced protection,\n      number of nodes in the ring.\n
      \     Recovery time objectives for restoration mechanisms are being\n      defined
      through a separate effort [RFC3386].\n   -  Resource Sharing: 1+1 and 1:N link
      and LSP protection require\n      dedicated recovery paths with limited ability
      to share resources:\n      1+1 allows no sharing, 1:N allows some sharing of
      protection\n      resources and support of extra (pre-emptable) traffic.\n      Flexibility
      is limited because of topology restrictions, e.g.,\n      fixed ring topology
      for traditional enhanced protection schemes.\n      The degree to which restoration
      schemes allow sharing amongst\n      multiple independent failures is directly
      dictated by the size of\n      the restoration pool.  In restoration schemes
      with re-\n      provisioning, a pool of restoration capacity can be defined
      from\n      which all restoration routes are selected after failure.  Thus,\n
      \     the degree of sharing is defined by the amount of available\n      restoration
      capacity.  In restoration with pre-signaled bandwidth\n      reservation, the
      amount of reserved restoration capacity is\n      determined by the local bandwidth
      reservation policies.  In all\n      restoration schemes, pre-emptable resources
      can use spare\n      restoration capacity when that capacity is not being used
      for\n      failure recovery.\n"
    title: 11.8.  Schema Selection Criteria
  title: 11.  LSP Protection and Restoration
- contents:
  - "12.  Network Management\n   Service Providers (SPs) use network management extensively
    to\n   configure, monitor or provision various devices in their network.  It\n
    \  is important to note that a SP's equipment may be distributed across\n   geographically
    separate sites thus making distributed management even\n   more important.  The
    service provider should utilize an NMS system\n   and standard management protocols
    such as SNMP (see [RFC3410],\n   [RFC3411] and [RFC3416]) and the relevant MIB
    modules as standard\n   interfaces to configure, monitor and provision devices
    at various\n   locations.  The service provider may also wish to use the command\n
    \  line interface (CLI) provided by vendors with their devices. However,\n   this
    is not a standard or recommended solution because there is no\n   standard CLI
    language or interface, which results in N different CLIs\n   in a network with
    devices from N different vendors. In the context of\n   GMPLS, it is extremely
    important for standard interfaces to the SP's\n   devices (e.g., SNMP) to exist
    due to the nature of the technology\n   itself.  Since GMPLS comprises many different
    layers of control-plane\n   and data-plane technology, it is important for management
    interfaces\n   in this area to be flexible enough to allow the manager to manage\n
    \  GMPLS easily, and in a standard way.\n"
  - contents:
    - "12.1.  Network Management Systems (NMS)\n   The NMS system should maintain
      the collective information about each\n   device within the system.  Note that
      the NMS system may actually be\n   comprised of several distributed applications
      (i.e., alarm\n   aggregators, configuration consoles, polling applications,
      etc.)\n   that collectively comprises the SP's NMS.  In this way, it can make\n
      \  provisioning and maintenance decisions with the full knowledge of the\n   entire
      SP's network.  Configuration or provisioning information\n   (i.e., requests
      for new services) could be entered into the NMS and\n   subsequently distributed
      via SNMP to the remote devices.  Thus,\n   making the SP's task of managing
      the network much more compact and\n   effortless rather than having to manage
      each device individually\n   (i.e., via CLI).\n   Security and access control
      can be achieved using the SNMPv3 User-\n   based Security Model (USM) [RFC3414]
      and the View-based Access\n   Control Model (VACM) [RFC3415].  This approach
      can be very\n   effectively used within a SP's network, since the SP has access
      to\n   and control over all devices within its domain.  Standardized MIBs\n
      \  will need to be developed before this approach can be used\n   ubiquitously
      to provision, configure and monitor devices in non-\n   heterogeneous networks
      or across SP's network boundaries.\n"
    title: 12.1.  Network Management Systems (NMS)
  - contents:
    - "12.2.  Management Information Base (MIB)\n   In the context of GMPLS, it is
      extremely important for standard\n   interfaces to devices to exist due to the
      nature of the technology\n   itself.  Since GMPLS comprises many different layers
      of control-plane\n   technology, it is important for SNMP MIB modules in this
      area to be\n   flexible enough to allow the manager to manage the entire control\n
      \  plane.  This should be done using MIB modules that may cooperate\n   (i.e.,
      coordinated row-creation on the agent) or through more\n   generalized MIB modules
      that aggregate some of the desired actions to\n   be taken and push those details
      down to the devices.  It is important\n   to note that in certain circumstances,
      it may be necessary to\n   duplicate some small subset of manageable objects
      in new MIB modules\n   for management convenience.  Control of some parts of
      GMPLS may also\n   be achieved using existing MIB interfaces (i.e., existing
      SONET MIB)\n   or using separate ones, which are yet to be defined.  MIB modules
      may\n   have been previously defined in the IETF or ITU.  Current MIB modules\n
      \  may need to be extended to facilitate some of the new functionality\n   desired
      by GMPLS.  In these cases, the working group should work on\n   new versions
      of these MIB modules so that these extensions can be\n   added.\n"
    title: 12.2.  Management Information Base (MIB)
  - contents:
    - "12.3.  Tools\n   As in traditional networks, standard tools such as traceroute\n
      \  [RFC1393] and ping [RFC2151] are needed for debugging and performance\n   monitoring
      of GMPLS networks, and mainly for the control plane\n   topology, that will
      mimic the data plane topology. Furthermore, such\n   tools provide network reachability
      information. The GMPLS control\n   protocols will need to expose certain pieces
      of information in order\n   for these tools to function properly and to provide
      information\n   germane to GMPLS.  These tools should be made available via
      the CLI.\n   These tools should also be made available for remote invocation
      via\n   the SNMP interface [RFC2925].\n"
    title: 12.3.  Tools
  - contents:
    - "12.4.  Fault Correlation between Multiple Layers\n   Due to the nature of GMPLS,
      and that potential layers may be involved\n   in the control and transmission
      of GMPLS data and control\n   information, it is required that a fault in one
      layer be passed to\n   the adjacent higher and lower layers to notify them of
      the fault.\n   However, due to nature of these many layers, it is possible and
      even\n   probable, that hundreds or even thousands of notifications may need\n
      \  to transpire between layers.  This is undesirable for several\n   reasons.
      \ First, these notifications will overwhelm the device.\n   Second, if the device(s)
      are programmed to emit SNMP Notifications\n   [RFC3417] then the large number
      of notifications the device may\n   attempt to emit may overwhelm the network
      with a storm of\n   notifications.  Furthermore, even if the device emits the\n
      \  notifications, the NMS that must process these notifications either\n   will
      be overwhelmed or will be processing redundant information. That\n   is, if
      1000 interfaces at layer B are stacked above a single\n   interface below it
      at layer A, and the interface at A goes down, the\n   interfaces at layer B
      should not emit notifications.  Instead, the\n   interface at layer A should
      emit a single notification.  The NMS\n   receiving this notification should
      be able to correlate the fact that\n   this interface has many others stacked
      above it and take appropriate\n   action, if necessary.\n   Devices that support
      GMPLS should provide mechanisms for aggregating,\n   summarizing, enabling and
      disabling of inter-layer notifications for\n   the reasons described above.
      \ In the context of SNMP MIB modules, all\n   MIB modules that are used by GMPLS
      must provide enable/disable\n   objects for all notification objects. Furthermore,
      these MIBs must\n   also provide notification summarization objects or functionality
      (as\n   described above) as well.  NMS systems and standard tools which\n   process
      notifications or keep track of the many layers on any given\n   devices must
      be capable of processing the vast amount of information\n   which may potentially
      be emitted by network devices running GMPLS at\n   any point in time.\n"
    title: 12.4.  Fault Correlation between Multiple Layers
  title: 12.  Network Management
- contents:
  - "13.  Security Considerations\n   GMPLS defines a control plane architecture for
    multiple technologies\n   and types of network elements.  In general, since LSPs
    established\n   using GMPLS may carry high volumes of data and consume significant\n
    \  network resources, security mechanisms are required to safeguard the\n   underlying
    network against attacks on the control plane and/or\n   unauthorized usage of
    data transport resources.  The GMPLS control\n   plane should therefore include
    mechanisms that prevent or minimize\n   the risk of attackers being able to inject
    and/or snoop on control\n   traffic.  These risks depend on the level of trust
    between nodes that\n   exchange GMPLS control messages, as well as the realization
    and\n   physical characteristics of the control channel.  For example, an in-\n
    \  band, in-fiber control channel over SONET/SDH overhead bytes is, in\n   general,
    considered less vulnerable than a control channel realized\n   over an out-of-band
    IP network.\n   Security mechanisms can provide authentication and confidentiality.\n
    \  Authentication can provide origin verification, message integrity and\n   replay
    protection, while confidentiality ensures that a third party\n   cannot decipher
    the contents of a message.  In situations where GMPLS\n   deployment requires
    primarily authentication, the respective\n   authentication mechanisms of the
    GMPLS component protocols may be\n   used (see [RFC2747], [RFC3036], [RFC2385]
    and [LMP]).  Additionally,\n   the IPsec suite of protocols (see [RFC2402], [RFC2406]
    and [RFC2409])\n   may be used to provide authentication, confidentiality or both,
    for a\n   GMPLS control channel.  IPsec thus offers the benefits of combined\n
    \  protection for all GMPLS component protocols as well as key\n   management.\n
    \  A related issue is that of the authorization of requests for\n   resources
    by GMPLS-capable nodes.  Authorization determines whether a\n   given party, presumable
    already authenticated, has a right to access\n   the requested resources.  This
    determination is typically a matter of\n   local policy control [RFC2753], for
    example by setting limits on the\n   total bandwidth available to some party in
    the presence of resource\n   contention.  Such policies may become quite complex
    as the number of\n   users, types of resources and sophistication of authorization
    rules\n   increases.\n   After authenticating requests, control elements should
    match them\n   against the local authorization policy.  These control elements
    must\n   be capable of making decisions based on the identity of the\n   requester,
    as verified cryptographically and/or topologically.  For\n   example, decisions
    may depend on whether the interface through which\n   the request is made is an
    inter- or intra-domain one.  The use of\n   appropriate local authorization policies
    may help in limiting the\n   impact of security breaches in remote parts of a
    network.\n   Finally, it should be noted that GMPLS itself introduces no new\n
    \  security considerations to the current MPLS-TE signaling (RSVP-TE,\n   CR-LDP),
    routing protocols (OSPF-TE, IS-IS-TE) or network management\n   protocols (SNMP).\n"
  title: 13.  Security Considerations
- contents:
  - "14.  Acknowledgements\n   This document is the work of numerous authors and consists
    of a\n   composition of a number of previous documents in this area.\n   Many
    thanks to Ben Mack-Crane (Tellabs) for all the useful SONET/SDH\n   discussions
    we had together.  Thanks also to Pedro Falcao, Alexandre\n   Geyssens, Michael
    Moelants, Xavier Neerdaels, and Philippe Noel from\n   Ebone for their SONET/SDH
    and optical technical advice and support.\n   Finally, many thanks also to Krishna
    Mitra (Consultant), Curtis\n   Villamizar (Avici), Ron Bonica (WorldCom), and
    Bert Wijnen (Lucent)\n   for their revision effort on Section 12.\n"
  title: 14.  Acknowledgements
- contents:
  - '15.  References

    '
  - contents:
    - "15.1.  Normative References\n   [RFC3031]             Rosen, E., Viswanathan,
      A., and R. Callon,\n                         \"Multiprotocol Label Switching
      Architecture\",\n                         RFC 3031, January 2001.\n   [RFC3209]
      \            Awduche, D., Berger, L., Gan, D., Li, T.,\n                         Srinivasan,
      V., and G. Swallow, \"RSVP-TE:\n                         Extensions to RSVP
      for LSP Tunnels\", RFC 3209,\n                         December 2001.\n   [RFC3212]
      \            Jamoussi, B., Andersson, L., Callon, R., Dantu,\n                         R.,
      Wu, L., Doolan, P., Worster, T., Feldman,\n                         N., Fredette,
      A., Girish, M., Gray, E.,\n                         Heinanen, J., Kilty, T.,
      and A. Malis,\n                         \"Constraint-Based LSP Setup using LDP\",
      RFC\n                         3212, January 2002.\n   [RFC3471]             Berger,
      L., \"Generalized Multi-Protocol Label\n                         Switching (GMPLS)
      Signaling Functional\n                         Description\", RFC 3471, January
      2003.\n   [RFC3472]             Ashwood-Smith, P. and L. Berger, \"Generalized\n
      \                        Multi-Protocol Label Switching (GMPLS)\n                         Signaling
      Constraint-based Routed Label\n                         Distribution Protocol
      (CR-LDP) Extensions\", RFC\n                         3472, January 2003.\n   [RFC3473]
      \            Berger, L., \"Generalized Multi-Protocol Label\n                         Switching
      (GMPLS) Signaling Resource\n                         ReserVation Protocol-Traffic
      Engineering\n                         (RSVP-TE) Extensions\", RFC 3473, January
      2003.\n"
    title: 15.1.  Normative References
  - contents:
    - "15.2.  Informative References\n   [ANSI-T1.105]         \"Synchronous Optical
      Network (SONET): Basic\n                         Description Including Multiplex
      Structure,\n                         Rates, And Formats,\" ANSI T1.105, 2000.\n
      \  [BUNDLE]              Kompella, K., Rekhter, Y., and L. Berger, \"Link\n
      \                        Bundling in MPLS Traffic Engineering\", Work in\n                         Progress.\n
      \  [GMPLS-FUNCT]         Lang, J.P., Ed. and B. Rajagopalan, Ed.,\n                         \"Generalized
      MPLS Recovery Functional\n                         Specification\", Work in
      Progress.\n   [GMPLS-G709]          Papadimitriou, D., Ed., \"GMPLS Signaling\n
      \                        Extensions for G.709 Optical Transport Networks\n                         Control\",
      Work in Progress.\n   [GMPLS-OVERLAY]       Swallow, G., Drake, J., Ishimatsu,
      H., and Y.\n                         Rekhter, \"GMPLS UNI: RSVP Support for
      the\n                         Overlay Model\", Work in Progress.\n   [GMPLS-ROUTING]
      \      Kompella, K., Ed. and Y. Rekhter, Ed., \"Routing\n                         Extensions
      in Support of Generalized Multi-\n                         Protocol Label Switching\",
      Work in Progress.\n   [RFC3946]             Mannie, E., Ed. and Papadimitriou
      D., Ed.,\n                         \"Generalized Multi-Protocol Label Switching\n
      \                        (GMPLS) Extensions for Synchronous Optical\n                         Network
      (SONET) and Synchronous Digital\n                         Hierarchy (SDH) Control\",
      RFC 3946, October\n                         2004.\n   [HIERARCHY]           Kompella,
      K. and Y. Rekhter, \"LSP Hierarchy\n                         with Generalized
      MPLS TE\", Work in Progress.\n   [ISIS-TE]             Smit, H. and T. Li, \"Intermediate
      System to\n                         Intermediate System (IS-IS) Extensions for\n
      \                        Traffic Engineering (TE)\", RFC 3784, June 2004.\n
      \  [ISIS-TE-GMPLS]       Kompella, K., Ed. and Y. Rekhter, Ed., \"IS-IS\n                         Extensions
      in Support of Generalized Multi-\n                         Protocol Label Switching\",
      Work in Progress.\n   [ITUT-G.707]          ITU-T, \"Network Node Interface
      for the\n                         Synchronous Digital Hierarchy\", Recommendation\n
      \                        G.707, October 2000.\n   [ITUT-G.709]          ITU-T,
      \"Interface for the Optical Transport\n                         Network (OTN),\"
      Recommendation G.709 version\n                         1.0 (and Amendment 1),
      February 2001 (and\n                         October 2001).\n   [ITUT-G.841]
      \         ITU-T, \"Types and Characteristics of SDH\n                         Network
      Protection Architectures,\"\n                         Recommendation G.841,
      October 1998.\n   [LMP]                 Lang, J., Ed., \"Link Management Protocol\n
      \                        (LMP)\", Work in Progress.\n   [LMP-WDM]             Fredette,
      A., Ed. and J. Lang Ed., \"Link\n                         Management Protocol
      (LMP) for Dense Wavelength\n                         Division Multiplexing (DWDM)
      Optical Line\n                         Systems\", Work in Progress.\n   [MANCHESTER]
      \         J. Manchester, P. Bonenfant and C. Newton, \"The\n                         Evolution
      of Transport Network Survivability,\"\n                         IEEE Communications
      Magazine, August 1999.\n   [OIF-UNI]             The Optical Internetworking
      Forum, \"User\n                         Network Interface (UNI) 1.0 Signaling\n
      \                        Specification - Implementation Agreement OIF-\n                         UNI-01.0,\"
      October 2001.\n   [OLI-REQ]             Fredette, A., Ed., \"Optical Link Interface\n
      \                        Requirements,\" Work in Progress.\n                         [OSPF-TE-GMPLS]
      \      Kompella, K., Ed. and Y.\n                         Rekhter, Ed., \"OSPF
      Extensions in Support of\n                         Generalized Multi-Protocol
      Label Switching\",\n                         Work in Progress.\n   [OSPF-TE]
      \            Katz, D., Kompella, K., and D. Yeung, \"Traffic\n                         Engineering
      (TE) Extensions to OSPF Version 2\",\n                         RFC 3630, September
      2003.\n   [RFC1393]             Malkin, G., \"Traceroute Using an IP Option\",\n
      \                        RFC 1393, January 1993.\n   [RFC2151]             Kessler,
      G. and S. Shepard, \"A Primer On\n                         Internet and TCP/IP
      Tools and Utilities\", RFC\n                         2151, June 1997.\n   [RFC2205]
      \            Braden, R., Zhang, L., Berson, S., Herzog, S.,\n                         and
      S. Jamin, \"Resource ReSerVation Protocol\n                         (RSVP) --
      Version 1 Functional Specification\",\n                         RFC 2205, September
      1997.\n   [RFC2385]             Heffernan, A., \"Protection of BGP Sessions
      via\n                         the TCP MD5 Signature Option\", RFC 2385, August\n
      \                        1998.\n   [RFC2402]             Kent, S. and R. Atkinson,
      \"IP Authentication\n                         Header\", RFC 2402, November 1998.\n
      \  [RFC2406]             Kent, S. and R. Atkinson, \"IP Encapsulating\n                         Security
      Payload (ESP)\", RFC 2406, November\n                         1998.\n   [RFC2409]
      \            Harkins, D. and D. Carrel, \"The Internet Key\n                         Exchange
      (IKE)\", RFC 2409, November 1998.\n                         [RFC2702]             Awduche,
      D., Malcolm, J.,\n                         Agogbua, J., O'Dell, M., and J. McManus,\n
      \                        \"Requirements for Traffic Engineering Over\n                         MPLS\",
      RFC 2702, September 1999.\n   [RFC2747]             Baker, F., Lindell, B.,
      and M. Talwar, \"RSVP\n                         Cryptographic Authentication\",
      RFC 2747,\n                         January 2000.\n   [RFC2753]             Yavatkar,
      R., Pendarakis, D., and R. Guerin, \"A\n                         Framework for
      Policy-based Admission Control\",\n                         RFC 2753, January
      2000.\n   [RFC2925]             White, K., \"Definitions of Managed Objects
      for\n                         Remote Ping, Traceroute, and Lookup\n                         Operations\",
      RFC 2925, September 2000.\n   [RFC3036]             Andersson, L., Doolan, P.,
      Feldman, N.,\n                         Fredette, A., and B. Thomas, \"LDP\n
      \                        Specification\", RFC 3036, January 2001.\n   [RFC3386]
      \            Lai, W. and D. McDysan, \"Network Hierarchy and\n                         Multilayer
      Survivability\", RFC 3386, November\n                         2002.\n   [RFC3410]
      \            Case, J., Mundy, R., Partain, D., and B.\n                         Stewart,
      \"Introduction and Applicability\n                         Statements for Internet-Standard
      Management\n                         Framework\", RFC 3410, December 2002.\n
      \  [RFC3411]             Harrington, D., Presuhn, R., and B. Wijnen, \"An\n
      \                        Architecture for Describing Simple Network\n                         Management
      Protocol (SNMP) Management\n                         Frameworks\", STD 62, RFC
      3411, December 2002.\n   [RFC3414]             Blumenthal, U. and B. Wijnen,
      \"User-based\n                         Security Model (USM) for version 3 of
      the\n                         Simple Network Management Protocol (SNMPv3)\",\n
      \                        STD 62, RFC 3414, December 2002.\n   [RFC3415]             Wijnen,
      B., Presuhn, R., and K. McCloghrie,\n                         \"View-based Access
      Control Model (VACM) for the\n                         Simple Network Management
      Protocol (SNMP)\", STD\n                         62, RFC 3415, December 2002.\n
      \  [RFC3416]             Presuhn, R., \"Version 2 of the Protocol\n                         Operations
      for the Simple Network Management\n                         Protocol (SNMP)\",
      STD 62, RFC 3416, December\n                         2002.\n   [RFC3417]             Presuhn,
      R., \"Transport Mappings for the Simple\n                         Network Management
      Protocol (SNMP)\", STD 62,\n                         RFC 3417, December 2002.\n
      \  [RFC3469]             Sharma, V. and F. Hellstrand, \"Framework for\n                         Multi-Protocol
      Label Switching (MPLS)-based\n                         Recovery\", RFC 3469,
      February 2003.\n   [RFC3477]             Kompella, K. and Y. Rekhter, \"Signalling\n
      \                        Unnumbered Links in Resource ReSerVation\n                         Protocol
      - Traffic Engineering (RSVP-TE)\", RFC\n                         3477, January
      2003.\n   [RFC3479]             Farrel, A., \"Fault Tolerance for the Label\n
      \                        Distribution Protocol (LDP)\", RFC 3479,\n                         February
      2003.\n   [RFC3480]             Kompella, K., Rekhter, Y., and A. Kullberg,\n
      \                        \"Signalling Unnumbered Links in CR-LDP\n                         (Constraint-Routing
      Label Distribution\n                         Protocol)\", RFC 3480, February
      2003.\n   [SONET-SDH-GMPLS-FRM] Bernstein, G., Mannie, E., and V. Sharma,\n
      \                        \"Framework for GMPLS-based Control of SDH/SONET\n
      \                        Networks\", Work in Progress.\n"
    title: 15.2.  Informative References
  title: 15.  References
- contents:
  - "16.  Contributors\n   Peter Ashwood-Smith\n   Nortel\n   P.O. Box 3511 Station
    C,\n   Ottawa, ON K1Y 4H7, Canada\n   EMail: petera@nortelnetworks.com\n   Eric
    Mannie\n   Consult\n   Phone:  +32 2 648-5023\n   Mobile: +32 (0)495-221775\n
    \  EMail: eric_mannie@hotmail.com\n   Daniel O. Awduche\n   Consult\n   EMail:
    awduche@awduche.com\n   Thomas D. Nadeau\n   Cisco\n   250 Apollo Drive\n   Chelmsford,
    MA 01824, USA\n   EMail: tnadeau@cisco.com\n   Ayan Banerjee\n   Calient\n   5853
    Rue Ferrari\n   San Jose, CA 95138, USA\n   EMail: abanerjee@calient.net\n   Lyndon
    Ong\n   Ciena\n   10480 Ridgeview Ct\n   Cupertino, CA 95014, USA\n   EMail: lyong@ciena.com\n
    \  Debashis Basak\n   Accelight\n   70 Abele Road, Bldg.1200\n   Bridgeville,
    PA 15017, USA\n   EMail: dbasak@accelight.com\n   Dimitri Papadimitriou\n   Alcatel\n
    \  Francis Wellesplein, 1\n   B-2018 Antwerpen, Belgium\n   EMail: dimitri.papadimitriou@alcatel.be\n
    \  Lou Berger\n   Movaz\n   7926 Jones Branch Drive\n   MCLean VA, 22102, USA\n
    \  EMail: lberger@movaz.com\n   Dimitrios Pendarakis\n   Tellium\n   2 Crescent
    Place, P.O. Box 901\n   Oceanport, NJ 07757-0901, USA\n   EMail: dpendarakis@tellium.com\n
    \  Greg Bernstein\n   Grotto\n   EMail: gregb@grotto-networking.com\n   Bala Rajagopalan\n
    \  Tellium\n   2 Crescent Place, P.O. Box 901\n   Oceanport, NJ 07757-0901, USA\n
    \  EMail: braja@tellium.com\n   Sudheer Dharanikota\n   Consult\n   EMail: sudheer@ieee.org\n
    \  Yakov Rekhter\n   Juniper\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA 94089,
    USA\n   EMail: yakov@juniper.net\n   John Drake\n   Calient\n   5853 Rue Ferrari\n
    \  San Jose, CA 95138, USA\n   EMail: jdrake@calient.net\n   Debanjan Saha\n   Tellium\n
    \  2 Crescent Place\n   Oceanport, NJ 07757-0901, USA\n   EMail: dsaha@tellium.com\n
    \  Yanhe Fan\n   Axiowave\n   200 Nickerson Road\n   Marlborough, MA 01752, USA\n
    \  EMail: yfan@axiowave.com\n   Hal Sandick\n   Shepard M.S.\n   2401 Dakota Street\n
    \  Durham, NC 27705, USA\n   EMail: sandick@nc.rr.com\n   Don Fedyk\n   Nortel\n
    \  600 Technology Park Drive\n   Billerica, MA 01821, USA\n   EMail: dwfedyk@nortelnetworks.com\n
    \  Vishal Sharma\n   Metanoia\n   1600 Villa Street, Unit 352\n   Mountain View,
    CA 94041, USA\n   EMail: v.sharma@ieee.org\n   Gert Grammel\n   Alcatel\n   Lorenzstrasse,
    10\n   70435 Stuttgart, Germany\n   EMail: gert.grammel@alcatel.de\n   George
    Swallow\n   Cisco\n   250 Apollo Drive\n   Chelmsford, MA 01824, USA\n   EMail:
    swallow@cisco.com\n   Dan Guo\n   Turin\n   1415 N. McDowell Blvd,\n   Petaluma,
    CA 95454, USA\n   EMail: dguo@turinnetworks.com\n   Z. Bo Tang\n   Tellium\n   2
    Crescent Place, P.O. Box 901\n   Oceanport, NJ 07757-0901, USA\n   EMail: btang@tellium.com\n
    \  Kireeti Kompella\n   Juniper\n   1194 N. Mathilda Ave.\n   Sunnyvale, CA 94089,
    USA\n   EMail: kireeti@juniper.net\n   Jennifer Yates\n   AT&T\n   180 Park Avenue\n
    \  Florham Park, NJ 07932, USA\n   EMail: jyates@research.att.com\n   Alan Kullberg\n
    \  NetPlane\n   888 Washington\n   St.Dedham, MA 02026, USA\n   EMail: akullber@netplane.com\n
    \  George R. Young\n   Edgeflow\n   329 March Road\n   Ottawa, Ontario, K2K 2E1,
    Canada\n   EMail: george.young@edgeflow.com\n   Jonathan P. Lang\n   Rincon Networks\n
    \  EMail: jplang@ieee.org\n   John Yu\n   Hammerhead Systems\n   640 Clyde Court\n
    \  Mountain View, CA 94043, USA\n   EMail: john@hammerheadsystems.com\n   Fong
    Liaw\n   Solas Research\n   Solas Research, LLC\n   EMail: fongliaw@yahoo.com\n
    \  Alex Zinin\n   Alcatel\n   1420 North McDowell Ave\n   Petaluma, CA 94954,
    USA\n   EMail: alex.zinin@alcatel.com\n"
  title: 16.  Contributors
- contents:
  - "17.  Author's Address\n   Eric Mannie (Consultant)\n   Avenue de la Folle Chanson,
    2\n   B-1050 Brussels, Belgium\n   Phone:  +32 2 648-5023\n   Mobile: +32 (0)495-221775\n
    \  EMail:  eric_mannie@hotmail.com\n"
  title: 17.  Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2004).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE\n   REPRESENTS OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE\n   INTERNET ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR\n   IMPLIED, INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed\n
    \  to pertain to the implementation or use of the technology\n   described in
    this document or the extent to which any license\n   under such rights might or
    might not be available; nor does it\n   represent that it has made any independent
    effort to identify any\n   such rights.  Information on the IETF's procedures
    with respect to\n   rights in IETF Documents can be found in BCP 78 and BCP 79.\n
    \  Copies of IPR disclosures made to the IETF Secretariat and any\n   assurances
    of licenses to be made available, or the result of an\n   attempt made to obtain
    a general license or permission for the use\n   of such proprietary rights by
    implementers or users of this\n   specification can be obtained from the IETF
    on-line IPR repository\n   at http://www.ietf.org/ipr.\n   The IETF invites any
    interested party to bring to its attention\n   any copyrights, patents or patent
    applications, or other\n   proprietary rights that may cover technology that may
    be required\n   to implement this standard.  Please address the information to
    the\n   IETF at ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
