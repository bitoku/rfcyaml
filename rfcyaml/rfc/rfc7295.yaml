- title: __initial_text__
  contents:
  - ''
- title: Internet Architecture Board (IAB)                          H. Tschofenig
  contents:
  - "Internet Architecture Board (IAB)                          H. Tschofenig\n  \
    \      Report from the IAB/IRTF Workshop on Congestion Control\n             \
    \   for Interactive Real-Time Communication\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a summary of the IAB/IRTF Workshop on\n \
    \  'Congestion Control for Interactive Real-Time Communication', which\n   took\
    \ place in Vancouver, Canada, on July 28, 2012.  The main goal of\n   the workshop\
    \ was to foster a discussion on congestion control\n   mechanisms for interactive\
    \ real-time communication.  This report\n   summarizes the discussions and lists\
    \ recommendations to the Internet\n   Engineering Task Force (IETF) community.\n\
    \   The views and positions in this report are those of the workshop\n   participants\
    \ and do not necessarily reflect the views and positions\n   of the authors, the\
    \ Internet Architecture Board (IAB), or the\n   Internet Research Task Force (IRTF).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Architecture Board (IAB)\n   and represents information that\
    \ the IAB has deemed valuable to\n   provide for permanent record.  It represents\
    \ the consensus of the\n   Internet Architecture Board (IAB).  Documents approved\
    \ for\n   publication by the IAB are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7295.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Workshop Structure  . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n     2.1.  History and Current Challenges  . . . . . . . . . .\
    \ . . .   5\n     2.2.  Simulations and Measurements  . . . . . . . . . . . .\
    \ . .   8\n     2.3.  Design Aspects of Problems and Solutions  . . . . . . .\
    \ .   9\n   3.  Recommendations . . . . . . . . . . . . . . . . . . . . . . .\
    \  13\n     3.1.  Changes to Network Infrastructure . . . . . . . . . . . .  14\n\
    \     3.2.  Avoiding Self-Inflicted Queuing . . . . . . . . . . . . .  15\n  \
    \ 4.  Security Considerations . . . . . . . . . . . . . . . . . . .  17\n   5.\
    \  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .  17\n   6.  Informative\
    \ References  . . . . . . . . . . . . . . . . . . .  17\n   Appendix A.  Program\
    \ Committee  . . . . . . . . . . . . . . . . .  22\n   Appendix B.  Workshop Material\
    \  . . . . . . . . . . . . . . . . .  22\n   Appendix C.  Accepted Position Papers\
    \ . . . . . . . . . . . . . .  22\n   Appendix D.  Workshop Participants  . .\
    \ . . . . . . . . . . . . .  24\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Internet Architecture Board (IAB) holds occasional workshops\n\
    \   designed to consider long-term issues and strategies for the\n   Internet,\
    \ and to suggest future directions for the Internet\n   architecture.  This long-term\
    \ planning function of the IAB is\n   complementary to the ongoing engineering\
    \ efforts performed by working\n   groups of the Internet Engineering Task Force\
    \ (IETF), under the\n   leadership of the Internet Engineering Steering Group\
    \ (IESG) and area\n   directorates.\n   Any application that sends significant\
    \ amounts of data over the\n   Internet is expected to implement reasonable congestion\
    \ control\n   behavior.  The goals for congestion control are well understood\
    \ and\n   documented in RFC 2914 [2] and RFC 5405 [1]:\n   1.  Preventing congestion\
    \ collapse.\n   2.  Allowing multiple flows to share the network fairly.\n   The\
    \ Internet has been used for interactive real-time communication\n   for decades,\
    \ most of which is being transmitted using the Real-Time\n   Transport Protocol\
    \ (RTP) over UDP, often over provisioned capacity\n   and/or using only rudimentary\
    \ congestion control mechanisms.  In\n   2004, the IAB raised concerns regarding\
    \ possibilities of a congestion\n   collapse due to a rapid growth in real-time\
    \ voice traffic that does\n   not practice end-to-end congestion control [17].\
    \  That congestion\n   collapse did not happen, but concerns raised about both\
    \ congestion\n   collapse and fairness are still valid and have gained more relevance\n\
    \   when applied to more bandwidth-hungry video applications.  The\n   development\
    \ and upcoming widespread deployment of web-based real-time\n   media communication\
    \ -- where RTP is used to and from web browsers to\n   transmit audio, video,\
    \ and data -- will likely result in substantial\n   new Internet traffic.  Due\
    \ to the projected volume of this traffic,\n   as well as the fact that it is\
    \ more likely to use unprovisioned\n   capacity, it is essential that it is transmitted\
    \ with robust and\n   effective congestion control mechanisms.\n   Designing congestion\
    \ control mechanisms that perform well under a\n   wide variety of traffic mixes\
    \ and over network paths with widely\n   varying characteristics is not easy.\
    \  Prevention of congestion\n   collapse can be achieved through a \"circuit breaker\"\
    \ mechanism (see,\n   for example, [3]), but for media flows that are supposed\
    \ to coexist\n   with a user's other ongoing communication sessions, a congestion\n\
    \   control mechanism that shares capacity fairly in the presence of a\n   mix\
    \ of TCP, UDP, and other protocol flows is needed.\n   Many additional complications\
    \ arise.  Here are some examples:\n   1.  Real-time interactive media sessions\
    \ require low latencies,\n       whereas streaming media can use large play-out\
    \ buffers.\n   2.  In an RTP session, feedback exchanged via the RTP Control\n\
    \       Protocol (RTCP) typically arrives much less frequently than, for\n   \
    \    example, TCP ACKs for a given TCP connection.  Theoretically, the\n     \
    \  RTP/RTCP control loop can lead to a longer reaction time.\n   3.  Media codecs\
    \ can usually only adjust their output rates in a much\n       more coarse-grained\
    \ fashion than, for example, TCP, and user\n       experience suffers if encoding\
    \ rates are switched too frequently.\n       Codecs typically have a minimum sending\
    \ rate as well.\n   4.  Some bits of an encoded media stream are more important\
    \ than\n       others.  For example, losing or dropping an I-frame of a video\n\
    \       stream is more problematic than dropping a P-frame [40].\n   5.  Ramping\
    \ up the transmission rate can be problematic.  Simply\n       increasing the\
    \ output rate of the codec without knowing whether\n       the network path can\
    \ sustain transmission at the increased rate\n       runs the danger of incurring\
    \ a significant amount of packet loss\n       that can cause playback artifacts.\n\
    \   6.  A congestion control scheme for interactive media needs to handle\n  \
    \     bundles of interrelated flows (audio, video, and data) in a way\n      \
    \ that accommodates the preferences of the application in the event\n       of\
    \ congestion.\n   7.  The desire to provide a congestion control mechanism that\
    \ can be\n       efficiently implemented inside an application imposes additional\n\
    \       restrictions.  For example, a web browser is not able to take the\n  \
    \     protocol interactions of a software download happening in another\n    \
    \   application into account.\n   8.  There are explicit congestion signals (such\
    \ as Explicit\n       Congestion Notification (ECN) [19]), and there are implicit\n\
    \       indications of congestion (e.g., packet delay and loss).  Care\n     \
    \  must be taken to account for each of these signals, particularly\n       if\
    \ various applications react on the same set of signals.\n   9.  Large buffers\
    \ are often used in network elements and end device\n       operating systems\
    \ to better support TCP-based applications.\n       These buffers introduce additional\
    \ communication delay, which\n       harms the small delay budget available for\
    \ interactive real-time\n       applications.\n"
- title: 2.  Workshop Structure
  contents:
  - "2.  Workshop Structure\n   The IETF has a long history of work on congestion\
    \ control mechanisms.\n   With ongoing standardization work on real-time interactive\
    \ media\n   communication on the web, new challenges have emerged that have\n\
    \   refocused engineering attention on congestion control issues.  To\n   take\
    \ a deeper look at congestion control in light of the growth of\n   real-time\
    \ traffic, workshop participants were invited to submit\n   position papers that\
    \ were then used to organize the workshop agenda\n   into three principal components:\
    \ a keynote talk given by Mark Handley\n   describing the history of the work\
    \ on congestion control for real-\n   time media followed and his views of current\
    \ problems; a presentation\n   of simulations and data demonstrating current problems\
    \ and solutions;\n   and a discussion of desirable solution properties and challenges\
    \ in\n   deploying solutions.\n"
- title: 2.1.  History and Current Challenges
  contents:
  - "2.1.  History and Current Challenges\n   Mark Handley argued that since 1988,\
    \ the Internet has remained\n   functional despite exponential growth, routers\
    \ that are sometimes\n   buggy or misconfigured, rapidly changing applications\
    \ and usage\n   patterns, and flash crowds.  This is largely because most\n  \
    \ applications use TCP, and TCP implements end-to-end congestion\n   control.\n\
    \   TCP's congestion control adapts the window to fit the capacity\n   available\
    \ in the network and accomplishes approximate fairness\n   between two competing\
    \ flows over a period of time.  Mark indicated\n   that the provided level of\
    \ fairness is not necessarily what we want:\n   The 1/round-trip-time relationship\
    \ in TCP is not ideal since it means\n   that network operators can decide to\
    \ lower packet loss by adding\n   bigger buffers (which unfortunately leads to\
    \ bufferbloat problems;\n   see [31] and [39]).  The 1/sqrt(packet drop rate)\
    \ relationship is\n   also not necessarily desirable since TCP initially did not\
    \ work\n   particularly well for high-speed flows (which had been the subject\
    \ of\n   much TCP research).\n   TCP controls the congestion window in bytes.\
    \  For bulk transfer,\n   usually this results in controlling the number of 1500-byte\
    \ packets\n   sent per second.  Real-time media is different since it has its\
    \ own\n   time constraints.  For audio, one wants to send one packet per 20 ms\n\
    \   and for video, the ideal value would be 25 to 30 frames per second.\n   One,\
    \ therefore, wants to avoid additional sending delay.\n   As an example, in case\
    \ of video, to relieve congestion one has to\n   reduce the number of packets-per-second\
    \ transmission rate rather than\n   transmit smaller packets, since at higher\
    \ bitrates on WiFi the time\n   it takes to send a packet is almost negligible\
    \ compared to the time\n   that is spent with Media Access Control (MAC) layer\
    \ operations.\n   Reducing the packet size makes little difference to the available\n\
    \   capacity.  For a serial line, it does not matter how big the packets\n   are.\n\
    \   From a network point of view, the goals of congestion control\n   therefore\
    \ are:\n   1.  Avoid congestion collapse\n   2.  Avoid starvation of TCP flows\n\
    \   3.  Avoid starvation of real-time flows, specifically in the case\n      \
    \ where TCP and real-time flows share the same FIFO queue.\n   From an application\
    \ point of view, the goals of congestion control\n   are different, namely:\n\
    \   1.  Robust behavior.  One wants to have a good throughput when the\n     \
    \  network is working well and passable performance when the network\n       is\
    \ working poorly.\n   2.  Predictable behavior.  This matters from a usability\
    \ point of\n       view since variable media creates a bad user experience.\n\
    \   3.  Low latency.  With large buffers along the end-to-end path,\n       latency\
    \ will increase when interactive real-time flows compete\n       with TCP flows.\
    \  This results in TCP filling up the buffers;\n       increased buffering will\
    \ lead to additional delays for the\n       delivery of the interactive real-time\
    \ media.\n   Attempts to provide congestion control for interactive real-time\n\
    \   media have previously been made in the IETF, for example, with the\n   work\
    \ on TCP Friendly Rate Control (TFRC) [12].  TFRC illustrates the\n   challenges\
    \ quite well.  TFRC tries to accomplish the same throughput\n   as TCP, but with\
    \ a smoother transmission rate.  It measures the loss\n   and the round-trip time\
    \ but follows a similar model as TCP to\n   determine the sending rate.\n   In\
    \ a link with low statistical multiplexing, TCP can lead to bad\n   oscillations.\
    \  The sending rate hits the maximum rate of a bottleneck\n   link, a lot of loss\
    \ occurs, and then the sending rate peaks again.\n   For very small buffers the\
    \ result is acceptable, but bigger buffers\n   lead to oscillations.  The result\
    \ is bad for networks and for\n   applications.  To deal with large buffers on\
    \ these links, a short-\n   term rate adaptation based on round-trip time (RTT)\
    \ information is\n   utilized in TRFC, but this requires good short-term RTT measurements.\n\
    \   TRFC works pretty well in theory.  TFRC assumes the network is in\n   charge\
    \ of the codec and that the codec can produce data at the\n   demanded rate. \
    \ Modern video codecs inherently produce variable-\n   bitrate video streams based\
    \ on the content being encoded, and it is\n   hard to produce data at exactly\
    \ the desired bitrate without excessive\n   buffering or ugly quality changes.\n\
    \   What if the codec is put in charge instead of the network?  The\n   network\
    \ tells the codec the mean rate, but it does not worry about\n   what happens\
    \ in short time scales, and the codec matches the mean\n   rate and does not worry\
    \ whether it is over or under the rate for a\n   relatively short time scale.\
    \  This again leads to the low statistical\n   multiplexing problem and leads\
    \ to oscillations.\n   Known congestion control mechanisms work well if they can\
    \ respond\n   quickly enough to changes and if they do not bump into the low\n\
    \   statistical multiplexing problem.\n   To avoid the low statistical multiplexing\
    \ problem, techniques for\n   inferring link speed are needed.  The work from\
    \ Van Jacobson's\n   pathchar [37] (and successors) serve as valuable input. \
    \ The idea is\n   to send short packet trains, to measure timing accurately, and\
    \ to\n   infer the link speed from the relative delay.  If we know the link\n\
    \   speed, we can avoid exceeding it.  Congestion control can give us an\n   approximate\
    \ rate, but we must not exceed link speed.  This is a\n   hybrid between codec\
    \ being in charge (most of the time) and the\n   network being in charge.  These\
    \ work well for some links, but not for\n   others.  Wireless links where speed\
    \ can change in less than a single\n   RTT because of fading, bitrate adaption,\
    \ etc., cause problems.  We\n   would like to have the codec and the network be\
    \ in charge.  However,\n   they both cannot be in charge at the same time.\n \
    \  Mark indicated that he is not entirely sure whether RTCP is suitable\n   for\
    \ congestion control.  RTCP gives feedback, but it cannot send it\n   often enough\
    \ to avoid bumping into link speed.  Circuit breakers [3],\n   on the other hand,\
    \ do not help to give good performance on an\n   uncongested path.  With circuit\
    \ breakers, the sender measures the\n   loss rate and RTT, and runs with a loose\
    \ \"cap.\"\n   In conclusion, Mark Handley claimed that we know how to do good\n\
    \   congestion control, but only if congestion control is in charge, and\n   that's\
    \ not acceptable for real-time applications.  We only know how\n   to do good\
    \ congestion control if we change the packet/sec rate and\n   not the packet size.\n"
- title: 2.2.  Simulations and Measurements
  contents:
  - "2.2.  Simulations and Measurements\n   This second part of the workshop was focused\
    \ on the presentation and\n   the discussion of data gathered from simulations\
    \ and real-world\n   measurements.\n   Keith Winstein started the discussion with\
    \ his presentation of\n   measurements performed in cellular operator networks\
    \ in the US [22].\n   The measurements indicate that the analyzed cellular networks\
    \ showed\n   varying RTT with transient latency spikes to hundreds of\n   milliseconds,\
    \ link speed that varies by a factor of 10 in a short\n   time scale, and buffers\
    \ that do not drop packets until they contain\n   5-10 seconds of data at bottleneck\
    \ link speed.\n   Zaheduzzaman Sarker [21] presented results from real-time video\n\
    \   communication in a Long Term Evolution (LTE) simulator utilizing ECN-\n  \
    \ based packet marking and adaptation using implicit methods like\n   packet loss\
    \ and delay.  ECN marking provides ways for the network to\n   explicitly signal\
    \ congestion and hence distributes the cost of\n   congestion well and helps achieve\
    \ lower latency.  However, although\n   RFC 3168 [19] was finalized in 2001, the\
    \ deployment of ECN is still\n   lacking as investigated by Bauer, et al. [25].\
    \  A few participants\n   noted that they believe that the deployment of LTE networks\
    \ will also\n   increase the deployment of ECN with the recent work on ECN for\
    \ RTP\n   over UDP [11].\n   Mo Zahaty [20] discussed TFRC [12] and TFRC with\
    \ weighted fairness\n   (MulTFRC) [4], which tunes TFRC to consider multiple flows,\
    \ and\n   showed the impact of RTT and loss rates on the type of video quality\n\
    \   that can be achieved under those conditions.  TFRC requires frequent\n   feedback,\
    \ which RTCP does not provide even when considering the\n   extended RTP profile\
    \ for RTCP-based feedback (RFC 4585 [5]).  Mo\n   argued that application-specified\
    \ weighted fairness is important but\n   while MulTFRC provides better performance\
    \ than TFRC, it is not clear\n   whether the added complexity over an n-times-TFRC\
    \ approach is indeed\n   worth the effort.\n   Markku Kojo shared analysis results\
    \ of how real-time audio is\n   affected by competing TCP flows.  In the experiments\
    \ shown in\n   Figure 2 of [27], a real-time interactive audio stream had to compete\n\
    \   against one TCP flow and, as a comparison, against six TCP flows.\n   With\
    \ one concurrent TCP flow, voice is impacted on startup and six\n   TCP flows\
    \ destroy the quality of the call.  Two types of losses were\n   analyzed, namely\
    \ losses that result from a packet being dropped in\n   the network (e.g., due\
    \ to congestion or link errors) and losses that\n   result from the delayed arrival\
    \ of the packet (due to buffering) when\n   the audio packet misses the deadline\
    \ for the codec to decode and play\n   the transmitted content.  Consequently,\
    \ even a moderate number of TCP\n   flows typically used by browsers to retrieve\
    \ content on web pages in\n   parallel causes irreparable harm for audio transfers.\
    \  The size of\n   the initial window (IW) also impacts interactive real-time\n\
    \   communication since a larger TCP IW size (e.g., IW10 with ten\n   segments,\
    \ as proposed in [18], instead of three) leads to a bigger\n   burst of packets\
    \ because of the initial window transmission.  Note\n   that the study in [24]\
    \ does not necessarily lead to the same\n   conclusion.  It claims that the increased\
    \ initial window size leads\n   to no impact or only modest impact for buffering\
    \ in the majority of\n   cases.\n   Cullen Jennings [28] presented measurement\
    \ results showing\n   interactions between RTP and TCP flows for several widely\
    \ deployed\n   video communication products: Apple FaceTime, Google Hangout, Cisco\n\
    \   Movi, and Microsoft Skype.  While all tested products implemented\n   some\
    \ form of congestion control, none of the applications did\n   additive increase\
    \ and multiplicative decrease (AIMD).  In general, it\n   was observable that\
    \ video adapts more slowly than AIMD to changes in\n   available bandwidth because\
    \ most codecs cannot make small increases\n   in sending rates when available\
    \ bandwidth increases, and do not make\n   large decreases in sending rates when\
    \ available bandwidth decreases,\n   in order to improve the user's experience.\n\
    \   Stefan Holmer [43] investigated the difference between loss-based and\n  \
    \ delay-based congestion control algorithms.  The suitability of loss-\n   based\
    \ congestion control schemes for interactive real-time\n   communication systems\
    \ heavily depends on buffer sizes and the\n   deployment of active queue management\
    \ mechanisms.  If most routers\n   are using tail-drop queuing, then loss-based\
    \ congestion control\n   cannot fulfill the requirements of interactive real-time\
    \ applications\n   since those flows will effectively increase the bitrate until\
    \ a loss\n   event is identified, which only happens when the bottleneck queue\
    \ is\n   full.\n"
- title: 2.3.  Design Aspects of Problems and Solutions
  contents:
  - "2.3.  Design Aspects of Problems and Solutions\n   During the remaining part\
    \ of the workshop, the participants discussed\n   design aspects of both the problem\
    \ and solution spaces.  The\n   discussions started with a presentation by Jim\
    \ Gettys about problems\n   related to bufferbloat [31][36].  Bufferbloat is \"\
    a phenomenon in\n   packet-switched networks, in which excess buffering of packets\
    \ causes\n   high latency and packet delay variation (also known as jitter), as\n\
    \   well as reducing the overall network throughput\" [39].  A certain\n   amount\
    \ of buffering is helpful to improve the efficiency.  Not\n   dropping packets\
    \ in the event of congestion leads to increasing\n   delays for interactive real-time\
    \ communication.\n   Packets may get buffered at various places along the end-to-end\
    \ path\n   including in the operating system/device drivers, customer premise\n\
    \   equipment (such as cable modem and DSL routers), base stations, and\n   routers.\
    \  While the understanding of too large buffers has improved\n   over the last\
    \ few years, workshop participants were still concerned\n   that many equipment\
    \ manufacturers and network operators do not yet\n   acknowledge the existence\
    \ of the problem.  This lack of understanding\n   is caused by the strong focus\
    \ on throughput network performance\n   measurements that do not take latency\
    \ into account.  For example,\n   only recently the Federal Communications Commission\
    \ (FCC) has added\n   latency tests to their test suites [41].\n   Active queue\
    \ management (AQM) aims to prevent queues from growing too\n   large.  This is\
    \ accomplished by monitoring queue length and informing\n   the sender by dropping\
    \ or marking packets to lower their transmission\n   rate.  Random Early Detection\
    \ (RED) [9] is one such AQM algorithm,\n   but it has not been widely deployed\
    \ in routers largely because of\n   challenges to configure it correctly [32].\
    \  According to [23], RED\n   does not work with the default settings as it is\
    \ \"too \"gentle\" to\n   handle fast changes due to TCP slow start, when the\
    \ aggregate traffic\n   is limited.\"  There may also be a lack of incentives\
    \ to deploy AQM\n   algorithms.  Participants speculated about the time it takes\
    \ to\n   update network equipment (to support AQM algorithms), considering the\n\
    \   different replacement cycles of these devices.\n   One outcome of that discussion\
    \ on AQM at the workshop was a Birds of\n   a Feather (\"BoF\") meeting on \"\
    Active Queue Management and Packet\n   Scheduling\" at IETF 87 (July 28 - August\
    \ 5, 2013, Berlin, Germany).\n   The AQM WG [35] was chartered a few weeks later\
    \ and is now designing\n   AQM and network infrastructure improvements to deal\
    \ with bufferbloat\n   and related issues.\n   Measurement tools that allow an\
    \ end user to determine the performance\n   of his or her network, including latency,\
    \ is seen as a promising\n   approach to motivate network operators to upgrade\
    \ their equipment and\n   to make use of AQM algorithms.  Measurement tools would\
    \ allow users\n   to determine how bad their networks perform and to complain\
    \ to their\n   ISP, thereby creating a market force.  As to what the right\n \
    \  performance measurement metrics are, it was noted that the intent of\n   the\
    \ IETF IP Performance Metrics (IPPM) working group [33] was to\n   develop such\
    \ metrics to qualify networks.  That work may have begun\n   before its time,\
    \ but there have been recent attempts to revisit the\n   measurement work and\
    \ an effort by the FCC has gotten a lot of\n   attention recently (see [7] and\
    \ [42]).\n   Matt Mathis and others argued that the traffic of throughput-\n \
    \  maximizing and delay-minimizing applications need to be in separate\n   queues\
    \ (segregated queuing).  Requiring segregated queues assumes you\n   are sharing\
    \ the network with other greedy traffic.\n   Quality-of-Service (QoS) signaling\
    \ is a way to deploy segregated\n   queuing, but there are several simpler alternatives,\
    \ such as\n   Stochastic Fair Queuing [38].  The Controlled Delay (CoDel) AQM\n\
    \   algorithm [6] can also be used in combination with stochastic fair\n   queuing.\
    \  Note that queue segregation is not necessary for every\n   router to implement;\
    \ using it at the edge of a network where\n   bottleneck links are located is\
    \ already sufficient.\n   It was noted that current interactive voice usage over\
    \ the Internet\n   works most of the time satisfactorily.  In typical networks,\
    \ the\n   reason voice works is because networks are underloaded.  As long as\n\
    \   there is idle capacity and the queue is empty when packets arrive,\n   traffic\
    \ does not need to be separated into distinct queues.  Further\n   explanations\
    \ were offered as to why many networks work surprisingly\n   well: Low Extra Delay\
    \ Background Transport (LEDBAT) [8] is used for\n   the download of software updates,\
    \ voice traffic contributes only a\n   small percentage of the overall Internet\
    \ traffic, and users employ\n   \"human protocols\" (e.g., parents asking their\
    \ kids to get off the\n   network during the time of a conference call).\n   Cullen\
    \ Jennings raised a concern that although interactive voice may\n   be functional\
    \ without a congestion control mechanism, the potentially\n   large uptake of\
    \ interactive video spurred on by Real-Time\n   Communications on the Web (RTCWEB)\
    \ could create substantially more\n   significant problems.  In the class of space\
    \ where voice is currently\n   working, video may fail.  Ted Hardie countered\
    \ by saying that RTCWEB\n   is trying to replace existing proprietary technologies.\
    \  It may ramp\n   up the amount of use we are expecting, but it is not doing\
    \ much that\n   was not being done by Adobe Flash or Skype.  RTCWEB is not a totally\n\
    \   novel context of Internet usage.  Magnus Westerlund added that RTCWEB\n  \
    \ might be the driver for the moment, but web browsers are not the only\n   consumers\
    \ of such congestion control algorithm.\n   Furthermore, Ted Hardie noted that\
    \ applications will not produce\n   media streams that grow to 10 Mbps because\
    \ their sending rate is auto\n   rate limited by the production of the video.\
    \  He suggested to ask\n   ourselves if we are trying to get TCP to be friendly\
    \ to media streams\n   that are already rate limited or if we are asking media\
    \ streams that\n   are already rate limited to be TCP friendly.  To quote Andrew\n\
    \   McGregor: \"It's really not good to be TCP friendly because it's not\n   going\
    \ to return the favor.\"  If the desired properties we want are no\n   starvation,\
    \ fairness, and effective goodput for the offered loads,\n   are we only willing\
    \ to consider changes in RTP control, or are we\n   willing to consider changes\
    \ in TCP congestion control?\n   This led to a discussion about whether the development\
    \ of a\n   congestion control algorithm for interactive real-time applications\n\
    \   provides any value if network equipment suffers from bufferbloat.  Is\n  \
    \ there something that can be done today to help interactive real-time\n   media\
    \ or do we have to wait to get the network updated first?\n   Replacing home routers\
    \ and updating routers with modern AQM\n   algorithms was seen as a longer-term\
    \ effort.  Also, the time scale\n   for changing TCP's congestion control is on\
    \ the same time scale as\n   deploying ECN [19].  Colin Perkins noted that we\
    \ cannot change TCP\n   quickly; the way TCP is being used is changing quickly,\
    \ and we can\n   impact the way TCP is used.  When TCP is used for file transfer,\
    \ it\n   will send data as fast as it can, but when TCP is used for\n   WebSockets,\
    \ the dynamics are different.  WebSockets and SPDY are\n   clearly changing the\
    \ behavior of TCP.  Also, Netflix-style video-\n   streaming applications are\
    \ huge users of TCP and those applications\n   can change rather quickly.  Matt\
    \ Mathis added that real-time\n   videoconferencing almost always produces video\
    \ streams at a lower\n   bitrate than downloading equivalent-sized stored video\
    \ using best-\n   effort file-sharing.\n   Bill Ver Steeg suggested to consider\
    \ three different deployment\n   environments, namely:\n   1.  Flows competing\
    \ with flows from the host (\"self-inflicted queuing\n       delay\")\n   2. \
    \ Flows competing with flows in the same subnetwork (e.g., home\n       network)\n\
    \   3.  Flows competing with flows from other networks (e.g., traffic\n      \
    \ from different households that utilize the same DSL provider)\n   The narrowest\
    \ problem domain that makes sense is to avoid self-\n   inflicted queuing delay.\
    \  Michael Welzl indicated that this requires\n   an information exchange (called\
    \ flow-state exchange) inside a browser\n   (at the level of the same host or\
    \ even beyond, as described in [29])\n   to synchronize congestion control of\
    \ different audio, video, and data\n   flows.  Although it would provide great\
    \ benefits if one could share\n   information about a bottleneck with all the\
    \ flows sharing that\n   bottleneck, this is considered challenging even within\
    \ a single host.\n   John Leslie [30] also noted: \"We're acting as if we believe\n\
    \   congestion will magically be solved by a new transport algorithm.  It\n  \
    \ won't.\"  Instead, an interaction between the network layer, transport\n   layer,\
    \ and the application layer is needed whereby the application\n   layer is the\
    \ only practical place to balance what piece(s) to\n   constrain to lower bandwidths.\
    \  All flows relating to a user session\n   should have a common congestion controller.\
    \  For many applications,\n   audio is much more critical than video.  In those\
    \ cases, the video\n   may back off, but the audio transmission remains unchanged.\n\
    \   Mo Zanaty pointed to the importance of the media start-up behavior,\n   which\
    \ is an area where the exchange of real-time interactive media is\n   different\
    \ from a TCP-based file transfer.  The instantaneous\n   experience in the first\
    \ part of a video call is highly determinative\n   of people's perception of the\
    \ call quality.  Vendors are using vague\n   heuristics, for example, data from\
    \ the last call to figure out what\n   to do on the next call.  Lars Eggert highlighted\
    \ that the start-up\n   behavior of an application affects ongoing performance\
    \ of other flows\n   if, for example, an application blasts at line rate at the\
    \ beginning\n   of a video stream.  You need to start slow enough to not cause\n\
    \   congestion to others.  Randell Jesup argued that for an interactive\n   real-time\
    \ video application, you really need to have most of your\n   bandwidth right\
    \ away.  Colin Perkins agreed and added that on startup\n   you need good quality\
    \ video quickly, but perhaps not as quickly as\n   voice.  The requirements are\
    \ likely going to be different from audio\n   to video and maybe even vary between\
    \ different applications.  Various\n   protocol exchanges take place before media\
    \ is exchanged between\n   endpoints (such as Session Traversal Utilities for\
    \ NAT (STUN) packets\n   [13] as part of the Interactive Connectivity Establishment\
    \ (ICE) [15]\n   or a Datagram Transport Layer Security (DTLS) handshake [14])\
    \ and may\n   be used to obtain simple start-up measurements.\n   The group agreed\
    \ that it is feasible to design a congestion control\n   algorithm that works\
    \ on mostly idle networks.  In the view of the\n   participants, upgrades of the\
    \ network infrastructure can happen in\n   parallel.  This view was later confirmed\
    \ at the RTP Media Congestion\n   Avoidance Techniques (RMCAT) BoF meeting at\
    \ IETF 84 (July 29 - August\n   3, 2012, Vancouver, BC, Canada) that led to the\
    \ formation of the\n   RMCAT working group [34].\n"
- title: 3.  Recommendations
  contents:
  - "3.  Recommendations\n   The participants suggested to explore two primary solution\
    \ tracks:\n   changes to network infrastructure and the development of algorithms\n\
    \   to avoid self-inflicted queuing.  These are discussed below.  A third\n  \
    \ approach recommended by some participants was to change the way TCP\n   is used\
    \ in browsers and other HTTP-based applications.  For example,\n   by not opening\
    \ too many concurrent TCP connections, and by improving\n   the interaction with\
    \ other non-real-time applications (such as video\n   streaming and file sharing),\
    \ additional improvements can be made.\n   The work on HTTP 2.0 with SPDY [16]\
    \ is already a step in the right\n   direction since SPDY makes use of a more\
    \ aggressive form of\n   multiplexing instead of opening a larger number of TCP\
    \ connections.\n"
- title: 3.1.  Changes to Network Infrastructure
  contents:
  - "3.1.  Changes to Network Infrastructure\n   As for all other traffic on the network,\
    \ better data plane\n   infrastructure improves the perceived quality of the best-effort\n\
    \   service that the Internet provides for RTCWEB flows.  The IETF has\n   already\
    \ developed several technologies that would be of immediate\n   usefulness if\
    \ they were to be deployed.  The workshop participants\n   expressed the hope\
    \ that due to the volume and importance of RTCWEB\n   traffic, some of these technologies\
    \ might finally see widespread use.\n   The first and by far most important improvement\
    \ is traffic\n   segregation: the ability to use different queues for different\n\
    \   traffic types.  Specifically, jitter- and delay-sensitive protocols\n   would\
    \ benefit from being in different queues from throughput-\n   maximizing protocols.\
    \  It is not possible for a single queue/AQM to\n   be optimal for both.\n   Furthermore,\
    \ ECN allows routers along the end-to-end path to signal\n   the onset of congestion\
    \ and allows applications to respond early,\n   avoiding losses and keeping queue\
    \ sizes short and, therefore,\n   end-to-end delay low.  ECN is implemented on\
    \ some end system stacks\n   and routers, but is frequently not enabled.  The\
    \ participants\n   expressed the importance of increasing the deployment of ECN,\
    \ even if\n   used initially only in closed environments, such as data centers\
    \ (as\n   with Data Center TCP (DCTCP) [26]).\n   Different mechanisms have been\
    \ developed to facilitate traffic\n   segregation.  Differentiated Services [10]\
    \ is one possibility in this\n   space.  If applications start to mark outgoing\
    \ traffic appropriately\n   and routers segregate traffic accordingly, browsers\
    \ could more\n   directly control the relative importance of their various flows\
    \ and\n   avoid self-competition.  Compared to ECN, however, DiffServ is far\n\
    \   more difficult to deploy meaningfully end to end, especially given\n   that\
    \ Differentiated Services Code Points (DSCPs) have no defined end-\n   to-end\
    \ meaning and packets can be re-marked.\n   QoS signaling together with resource\
    \ reservation facilities would\n   enable a fine-grained and flexible way to indicate\
    \ resource needs to\n   network elements, but it is also by far the most heavyweight\n\
    \   proposal, and unlikely to be viable in the global Internet.  However,\n  \
    \ as mentioned in Section 2.3, QoS signaling is not the only way to\n   accomplish\
    \ traffic segregation.  Further investigations regarding\n   stochastic fair queuing\
    \ and new AQM algorithms are seen as desirable.\n   In any case, network infrastructure\
    \ updates will take time,\n   particularly if the interest of the involved stakeholders\
    \ is not\n   aligned (as is often the case for network operators when dealing\
    \ with\n   over-the-top real-time traffic).  It is, therefore, imperative that\n\
    \   RTCWEB congestion control provides adequate improvement in the\n   absence\
    \ of any of the aforementioned schemes.\n"
- title: 3.2.  Avoiding Self-Inflicted Queuing
  contents:
  - "3.2.  Avoiding Self-Inflicted Queuing\n   This approach tries to ensure that\
    \ the network does not suffer from\n   congestion collapse and that one data flow\
    \ from a single host does\n   not harm another data flow from the same host. \
    \ A single congestion\n   manager within the end host or the browser could help\
    \ to coordinate\n   various congestion control activities and to ensure a more\n\
    \   coordinated approach between different applications and different\n   flows.\n\
    \   The following design and testing aspects were considered relevant to\n   this\
    \ approach:\n   Reacting to All Congestion Signals:\n      To initiate the congestion\
    \ control process, it is important to\n      detect congestion in the communication\
    \ path.  Congestion can be\n      detected using either an explicit mechanism\
    \ or an implicit\n      mechanism.  An explicit mechanism involves direct congestion\n\
    \      signaling usually from the congested network node, such as ECN.\n     \
    \ In case of an implicit mechanism, packet-loss events or observed\n      delay\
    \ increases are used as an indication for congestion.  These\n      measurements\
    \ can also be made available in a variety of different\n      protocols, such\
    \ as RTCP reports or transport protocols.  It is\n      recommended for applications\
    \ to take all available congestion\n      signals into account and to couple the\
    \ congestion control\n      algorithm, the codec, and the application so that\
    \ better\n      information exchange between these components is possible since\n\
    \      there are constraints on how quickly a codec can adapt to a\n      specific\
    \ sending rate.\n   Delay- and Loss-Based Algorithms:\n      The main goal of\
    \ designing a congestion control algorithm for\n      real-time conversational\
    \ media is to achieve low latency.\n      Explicit congestion signals provide\
    \ the most reliable way for\n      applications to react, but due to the lack\
    \ of ECN deployment,\n      delay-based algorithms are needed.  Since there is\
    \ large delay\n      variation in wireless networks (even in a non-congested network),\n\
    \      the workshop participants recommended that more research should be\n  \
    \    done to better understand non-congestion-related delay variation\n      in\
    \ the network.  General consensus among the workshop participants\n      was that\
    \ latency-based congestion control algorithms are needed\n      due to the lack\
    \ of loss indications caused by large buffers, even\n      though loss-based techniques\
    \ dominate latency-based techniques\n      when the two are competing for bandwidth.\n\
    \   Algorithm Evaluation:\n      The Internet consists of heterogeneous networks,\
    \ which include\n      misconfigured and unmanaged network nodes.  Bandwidth and\
    \ latency\n      vary a lot.  Different services deployed using RTP/UDP have\n\
    \      different requirements in terms of media quality.  A congestion\n     \
    \ control algorithm needs to perform well not only in simulators but\n      also\
    \ in the deployed Internet.  To achieve this, it is recommended\n      to test\
    \ the algorithms with real-world loss and delay figures to\n      ensure that\
    \ the desired audio/video rates are attainable using the\n      proposed algorithms\
    \ for the desired services.\n   Media Characteristics:\n      Interactive real-time\
    \ voice and video data are inherently\n      variable.  Usually the content of\
    \ the media and service\n      requirements dictate the media coding.  The codec\
    \ may be bursty\n      and not all frames are equally important (e.g., I-frames\
    \ are more\n      important than P-frames).  Thus, codecs have limited room for\n\
    \      adaptation.  Congestion control for audio and video codecs is,\n      therefore,\
    \ different from congestion control applied to bulk file\n      transfers where\
    \ buffering is not a problem and the transmission\n      rate can be changed to\
    \ any rate suitable for the congestion\n      control algorithm.  In the workshop,\
    \ these limitations were\n      brought up and the workshop participants recommended\
    \ that a\n      congestion controller needs to be aware of these constraints.\n\
    \      However, further investigation is needed to decide what\n      information\
    \ needs to be exchanged between a codec and the\n      congestion manager.\n \
    \  Start-up Behavior:\n      The start-up media quality is very important for\
    \ real-time\n      interactive applications and for user-perceived application\n\
    \      performance.  The start-up behavior of these is also different\n      from\
    \ other traffic.  By nature, real-time interactive\n      communication applications\
    \ want to provide a smooth user\n      experience and maintain the best media\
    \ quality possible to ease\n      the interaction.  While it may be desirable\
    \ from a user-experience\n      point of view to immediately start streaming video\
    \ with high-\n      definition quality and audio of a wideband codec, this will\
    \ have\n      impacts on the bandwidth of the already ongoing flows.  As such,\n\
    \      it would be ideal to start slow enough to avoid causing excessive\n   \
    \   congestion to other flows but fast enough to offer a good user\n      experience.\
    \  The sweet spot, however, yet has to be found.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Two position papers focused on security, but\
    \ these papers were not\n   discussed during the workshop.  As such, nothing beyond\
    \ the material\n   contained in those position papers can be reported.\n"
- title: 5.  Acknowledgments
  contents:
  - "5.  Acknowledgments\n   We would like to thank the participants and the paper\
    \ authors of the\n   position papers for their input.\n   Additionally, we would\
    \ like to thank the following persons for their\n   review comments: Michael Welzl,\
    \ John Leslie, Mirja Kuehlewind, Matt\n   Mathis, Mary Barnes, Spencer Dawkins,\
    \ Dave Thaler, and Alissa Cooper.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [1]   Eggert, L. and G. Fairhurst, \"Unicast UDP\
    \ Usage Guidelines for\n         Application Designers\", BCP 145, RFC 5405, November\
    \ 2008.\n   [2]   Floyd, S., \"Congestion Control Principles\", BCP 41, RFC 2914,\n\
    \         September 2000.\n   [3]   Perkins, C. and V. Singh, \"Multimedia Congestion\
    \ Control:\n         Circuit Breakers for Unicast RTP Sessions\", Work in Progress,\n\
    \         February 2014.\n   [4]   Welzl, M., Damjanovic, D., and S. Gjessing,\
    \ \"MulTFRC: TFRC with\n         weighted fairness\", Work in Progress, July 2010.\n\
    \   [5]   Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n       \
    \  \"Extended RTP Profile for Real-time Transport Control Protocol\n         (RTCP)-Based\
    \ Feedback (RTP/AVPF)\", RFC 4585, July 2006.\n   [6]   Nichols, K. and V. Jacobson,\
    \ \"Controlled Delay Active Queue\n         Management\", Work in Progress, March\
    \ 2014.\n   [7]   Schulzrinne, H., Johnston, W., and J. Miller, \"Large-Scale\n\
    \         Measurement of Broadband Performance: Use Cases, Architecture\n    \
    \     and Protocol Requirements\", Work in Progress, September 2012.\n   [8] \
    \  Shalunov, S., Hazel, G., Iyengar, J., and M. Kuehlewind, \"Low\n         Extra\
    \ Delay Background Transport (LEDBAT)\", RFC 6817, December\n         2012.\n\
    \   [9]   Braden, B., Clark, D., Crowcroft, J., Davie, B., Deering, S.,\n    \
    \     Estrin, D., Floyd, S., Jacobson, V., Minshall, G., Partridge,\n        \
    \ C., Peterson, L., Ramakrishnan, K., Shenker, S., Wroclawski,\n         J., and\
    \ L. Zhang, \"Recommendations on Queue Management and\n         Congestion Avoidance\
    \ in the Internet\", RFC 2309, April 1998.\n   [10]  Blake, S., Black, D., Carlson,\
    \ M., Davies, E., Wang, Z., and W.\n         Weiss, \"An Architecture for Differentiated\
    \ Services\", RFC 2475,\n         December 1998.\n   [11]  Westerlund, M., Johansson,\
    \ I., Perkins, C., O'Hanlon, P., and\n         K. Carlberg, \"Explicit Congestion\
    \ Notification (ECN) for RTP\n         over UDP\", RFC 6679, August 2012.\n  \
    \ [12]  Floyd, S., Handley, M., Padhye, J., and J. Widmer, \"TCP\n         Friendly\
    \ Rate Control (TFRC): Protocol Specification\", RFC\n         5348, September\
    \ 2008.\n   [13]  Rosenberg, J., Mahy, R., Matthews, P., and D. Wing, \"Session\n\
    \         Traversal Utilities for NAT (STUN)\", RFC 5389, October 2008.\n   [14]\
    \  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n         Security\
    \ Version 1.2\", RFC 6347, January 2012.\n   [15]  Rosenberg, J., \"Interactive\
    \ Connectivity Establishment (ICE): A\n         Protocol for Network Address Translator\
    \ (NAT) Traversal for\n         Offer/Answer Protocols\", RFC 5245, April 2010.\n\
    \   [16]  Belshe, M., Peon, R., and M. Thomson, \"Hypertext Transfer\n       \
    \  Protocol version 2\", Work in Progress, June 2014.\n   [17]  Floyd, S. and\
    \ J. Kempf, \"IAB Concerns Regarding Congestion\n         Control for Voice Traffic\
    \ in the Internet\", RFC 3714, March\n         2004.\n   [18]  Chu, J., Dukkipati,\
    \ N., Cheng, Y., and M. Mathis, \"Increasing\n         TCP's Initial Window\"\
    , RFC 6928, April 2013.\n   [19]  Ramakrishnan, K., Floyd, S., and D. Black, \"\
    The Addition of\n         Explicit Congestion Notification (ECN) to IP\", RFC\
    \ 3168,\n         September 2001.\n   [20]  Zanaty, M., \"Fairness Considerations\
    \ for Congestion Control for\n         Interactive Real-Time Communication (IRTC)\"\
    , IAB/ RTF Workshop\n         on Congestion Control for Interactive Real-Time\
    \ Communication,\n         July 2012.\n   [21]  Sarker, Z. and I. Johansson, \"\
    Improving the Interactive\n         Real-Time Video Communication with Network\
    \ Provided Congestion\n         Notification\", IAB/IRTF Workshop on Congestion\
    \ Control for\n         Interactive Real-Time Communication, July 2012.\n   [22]\
    \  Winstein, K., Sivaraman, A., and H. Balakrishnan, \"Congestion\n         Control\
    \ for Interactive Real-Time Flows on Today's Internet\",\n         IAB/IRTF Workshop\
    \ on Congestion Control for Interactive\n         Real-Time Communication, July\
    \ 2012.\n   [23]  Jarvinen, I., Ding, A., Nyrhinen, A., and M. Kojo, \"Harsh RED:\n\
    \         Improving RED for Limited Aggregate Traffic\", In Proceedings of\n \
    \        the 26th IEEE International Conference on Advanced Information\n    \
    \     Networking and Applications (AINA 2012), March 2012.\n   [24]  Allman, M.,\
    \ \"Comments on Bufferbloat\", In ACM SIGCOMM Computer\n         Communication\
    \ Review, Volume 43, Issue 1, pp.  30-37, January\n         2013, <http://dl.acm.org/citation.cfm?doid=2427036.2427041>.\n\
    \   [25]  Bauer, S., Beverly, R., and A. Berger, \"Measuring the state of\n  \
    \       ECN readiness in servers, clients,and routers\", In Proceedings\n    \
    \     of the 2011 ACM SIGCOMM conference on Internet measurement\n         conference\
    \ (IMC '11), New York, NY, USA, pp. 171-180, February\n         2011, <http://dl.acm.org/citation.cfm?doid=2068816.2068833>.\n\
    \   [26]  Bauer, S., Greenberg, A., Maltz, D., Padhye, J., Patel, P.,\n      \
    \   Prabhakar, B., Sengupta, S., and M. Sridharan, \"Data center TCP\n       \
    \  (DCTCP)\", In Proceedings of the ACM SIGCOMM 2010 conference\n         (SIGCOMM\
    \ '10), New York, NY, USA, pp.  63-74, August 2010,\n         <http://dl.acm.org/citation.cfm?doid=1851182.1851192>.\n\
    \   [27]  Jarvinen, I., Chemmagate, B., Daniel, L., Ding, A., Kojo, M.,\n    \
    \     and M. Isomaki, \"Impact of TCP on Interactive Real- Time\n         Communication\"\
    , IAB/IRTF Workshop on Congestion Control for\n         Interactive Real-Time\
    \ Communication, July 2012.\n   [28]  Jennings, C., Nandakumar, S., and H. Phan,\
    \ \"Vendors Considered\n         Harmfull\", IAB/IRTF Workshop on Congestion Control\
    \ for\n         Interactive Real-Time Communication, July 2012.\n   [29]  Welzl,\
    \ M., \"One control to rule them all\", IAB/IRTF Workshop on\n         Congestion\
    \ Control for Interactive Real-Time Communication,\n         July 2012.\n   [30]\
    \  Leslie, J., \"There is No Magic Transport Wand\", IAB/IRTF\n         Workshop\
    \ on Congestion Control for Interactive Real-Time\n         Communication, July\
    \ 2012.\n   [31]  Gettys, J. and J. Gettys, \"Bufferbloat: Dark Buffers in the\n\
    \         Internet\", IEEE Internet Computing, Volume 15, Issue 3, pp.\n     \
    \    95-96, May/June 2011.\n   [32]  Feng, W., Shin, K., Kandlur, D., and D. Saha,\
    \ \"The BLUE active\n         queue management algorithms\", In IEEE/ACM Transactions\
    \ on\n         Networking, Volume 10, Issue 4, pp.  513-528, August 2002.\n  \
    \ [33]  IETF, \"IP Performance Metrics (ippm) Working Group\", January\n     \
    \    2012, <http://datatracker.ietf.org/wg/ippm/charter/>.\n   [34]  IETF, \"\
    RTP Media Congestion Avoidance Techniques (rmcat)\n         Working Group\", January\
    \ 2012,\n         <http://datatracker.ietf.org/wg/rmcat/charter/>.\n   [35]  IETF,\
    \ \"Active Queue Management and Packet Scheduling (aqm)\n         Working Group\"\
    , September 2013,\n         <http://datatracker.ietf.org/wg/aqm/charter/>.\n \
    \  [36]  Gettys, J. and K. Nichols, \"Bufferbloat: Dark Buffers in the\n     \
    \    Internet\", Communications of the ACM, Vol. 55, No. 1, pp.\n         57-65,\
    \ January 2012,\n         <http://cacm.acm.org/magazines/2012/1/144810-bufferbloat/>.\n\
    \   [37]  Jacobson, V., \"pathchar - a tool to infer characteristics of\n    \
    \     Internet paths\", Presented at the Mathematical Sciences\n         Research\
    \ Institute, April 1997,\n         <ftp://ftp.ee.lbl.gov/pathchar/msri-talk.pdf>.\n\
    \   [38]  McKenney, P., \"Stochastic Fairness Queuing\", In IEEE INFOCOM'90\n\
    \         Proceedings, Volume 2, pp. 733-740, June 1990.\n   [39]  Wikipedia,\
    \ \"Bufferbloat\", May 2014, <http://en.wikipedia.org/w/\n         index.php?title=Bufferbloat&oldid=608805474>.\n\
    \   [40]  Wikipedia, \"Video compression picture types\", March 2014,\n      \
    \   <http://en.wikipedia.org/w/index.php?\n         title=Video_compression_picture_types&oldid=602183340>.\n\
    \   [41]  FCC, \"Methodology - Measuring Broadband America July Report\n     \
    \    2012\", July 2012, <http://www.fcc.gov/\n         measuring-broadband-america/2012/methodology-july-report-2012>.\n\
    \   [42]  IETF, \"lmap -- Large Scale Measurement of Access network\n        \
    \ Performance Mailing List\", 2012,\n         <https://www.ietf.org/mailman/listinfo/lmap>.\n\
    \   [43]  Holmer, S., \"On Fairness, Delay and Signaling of Different\n      \
    \   Approaches to Real-time Congestion Control\", IAB/IRTF Workshop\n        \
    \ on Congestion Control for Interactive Real-Time Communication,\n         July\
    \ 2012.\n"
- title: Appendix A.  Program Committee
  contents:
  - "Appendix A.  Program Committee\n   This workshop was organized by Harald Alvestrand,\
    \ Bernard Aboba, Mary\n   Barnes, Gonzalo Camarillo, Spencer Dawkins, Lars Eggert,\
    \ Matthew\n   Ford, Randell Jesup, Cullen Jennings, Jon Peterson, Robert Sparks,\n\
    \   and Hannes Tschofenig.\n"
- title: Appendix B.  Workshop Material
  contents:
  - "Appendix B.  Workshop Material\n   o  Main Workshop Page:\n      http://www.iab.org/activities/workshops/cc-workshop/\n\
    \   o  Position Papers:\n      http://www.iab.org/activities/workshops/cc-workshop/papers/\n\
    \   o  Slides:\n      http://www.iab.org/activities/workshops/cc-workshop/slides/\n"
- title: Appendix C.  Accepted Position Papers
  contents:
  - "Appendix C.  Accepted Position Papers\n   1.   \"One control to rule them all\"\
    \ by Michael Welzl\n   2.   \"Congestion Avoidance Through Deterministic\" by\
    \ Pier Luca\n        Montessoro, Riccardo Bernardini, Franco Blanchini, Daniele\n\
    \        Casagrande, Mirko Loghi, and Stefan Wieser\n   3.   \"Congestion Control\
    \ in Real Time Media - Context\" by Harald\n        Alvestrand\n   4.   \"Improving\
    \ the Interactive Real-Time Video Communication with\n        Network Provided\
    \ Congestion Notification\" by ANM Zaheduzzaman\n        Sarker and Ingemar Johansson\n\
    \   5.   \"Multiparty Requirements in Congestion Control for Real-Time\n     \
    \   Interactive Media\" by Magnus Westerlund\n   6.   \"On Fairness, Delay and\
    \ Signaling of Different Approaches to\n        Real-time Congestion Control\"\
    \ by Stefan Holmer\n   7.   \"RTP Congestion Control and RTCWEB Application Feedback\"\
    \ by Ted\n        Hardie\n   8.   \"Issues with Using Packet Delays and Inter-arrival\
    \ Times for\n        Inference of Internet Congestion\" by Wesley M.  Eddy\n \
    \  9.   \"Impact of TCP on Interactive Real-Time Communication\" by Ilpo\n   \
    \     Jarvinen, Binoy Chemmagate, Laila Daniel, Aaron Yi Ding, Markku\n      \
    \  Kojo, and Markus Isomaki\n   10.  \"Security Concerns For RTCWEB Congestion\
    \ Control\" by Dan York\n   11.  \"Vendors Considered Harmfull\" by Cullen Jennings,\
    \ Suhas\n        Nandakumar, and Hein Phan\n   12.  \"Network-Assisted Dynamic\
    \ Adaptation\" by Xiaoqing Zhu and Rong\n        Pan\n   13.  \"Congestion Control\
    \ for Interactive Real-Time Applications\" by\n        Sanjeev Mehrotra and Jin\
    \ Li\n   14.  \"There is No Magic Transport Wand\" by John Leslie\n   15.  \"\
    Towards Adaptive Congestion Management for Interactive Real-\n        Time Communications\"\
    \ by Dirk Kutscher and Miriam Kuehlewind\n   16.  \"Enlarge the pre-congestion\
    \ spectrum usage?\" by Xavier Marjou\n        and Emile Stephan\n   17.  \"Congestion\
    \ control for users who don't have first-class\n        internet access\" by Maire\
    \ Reavy\n   18.  \"Realtime Congestion Challenges\" by Randell Jesup\n   19. \
    \ \"Congestion Control for Interactive Media: Control Loops & APIs\"\n       \
    \ by Varun Singh, Joerg Ott, and Colin Perkins\n   20.  \"Some Notes on Threat\
    \ Modelling Congestion Management\" by Eric\n        Rescorla\n   21.  \"Timely\
    \ Detection of Lost Packets\" by Ali C.  Begen\n   22.  \"Congestion Control Considerations\
    \ for Data Channels\" by Michael\n        Tuexen\n   23.  \"Position paper on\
    \ CC for Interactive RT\" by Matt Mathis\n   24.  \"Overall Considerations for\
    \ Congestion Control\" by Mo Zanaty,\n        Bill VerSteeg, Bent Christensen,\
    \ David Benham, and Allyn Romanow\n   25.  \"Fairness Considerations for Congestion\
    \ Control\" by Mo Zanaty\n   26.  \"Media is not Data: The Meaning of Fairness\
    \ for Competing\n        Multimedia Flows\" by Timothy B.  Terriberry\n   27.\
    \  \"Thoughts on Real-Time Congestion Control\" by Murari Sridharan\n   28.  \"\
    Congestion Control for Interactive Real-Time Flows on Today's\n        Internet\"\
    \ by Keith Winstein, Anirudh Sivaraman, and Hari\n        Balakrishnan\n   29.\
    \  \"Congestion Control Principles for CoAP\" by Carsten Bormann and\n       \
    \ Klaus Hartke\n   30.  \"Erasure Coding and Congestion Control for Interactive\
    \ Real-Time\n        Communication\" by Pierre-Ugo Tournoux, Tuan Tran Thai, Emmanuel\n\
    \        Lochin, Jerome Lacan, and Vincent Roca\n   31.  \"Video Conferencing\
    \ Specific Considerations for RTP Congestion\n        Control\" by Stephen Botzko\
    \ and Mary Barnes\n   32.  \"The Internet is Broken, and How to Fix It\" by Jim\
    \ Gettys\n   33.  \"Deployment Considerations for Congestion Control in Real-Time\n\
    \        Interactive Media Systems\" by Jari Arkko\n"
- title: Appendix D.  Workshop Participants
  contents:
  - "Appendix D.  Workshop Participants\n   We would like to thank the following workshop\
    \ participants for\n   attending the workshop:\n   o  Mat Ford\n   o  Bernard\
    \ Aboba\n   o  Alissa Cooper\n   o  Mary Barnes\n   o  Lars Eggert\n   o  Harald\
    \ Alvestrand\n   o  Gonzalo Camarillo\n   o  Robert Sparks\n   o  Cullen Jennings\n\
    \   o  Dirk Kutscher\n   o  Carsten Bormann\n   o  Michael Welzl\n   o  Magnus\
    \ Westerlund\n   o  Colin Perkins\n   o  Murari Sridharan\n   o  Klaus Hartke\n\
    \   o  Pier Luca Montessoro\n   o  Xavier Marjou\n   o  Vincent Roca\n   o  Wes\
    \ Eddy\n   o  Ali C.  Begen\n   o  Mo Zanaty\n   o  Jin Li\n   o  Dave Thaler\n\
    \   o  Bob Briscoe\n   o  Barry Leiba\n   o  Jari Arkko\n   o  Stewart Bryant\n\
    \   o  Martin Stiemerling\n   o  Russ Housley\n   o  Marc Blanchet\n   o  Zaheduzzaman\
    \ Sarker\n   o  Xiaoqing Zhu\n   o  Randell Jesup\n   o  Eric Rescorla\n   o \
    \ Suhas Nandakumar\n   o  Hannes Tschofenig\n   o  Bill VerSteeg\n   o  Sean Turner\n\
    \   o  Keith Winstein\n   o  Jon Peterson\n   o  Maire Reavy\n   o  Michael Tuexen\n\
    \   o  Stefan Holmer\n   o  Joerg Ott\n   o  Timothy Terriberry\n   o  Benoit\
    \ Claise\n   o  Ted Hardie\n   o  Stephen Botzko\n   o  Matt Mathis\n   o  David\
    \ Benham\n   o  Jim Gettys\n   o  Spencer Dawkins\n   o  Sanjeev Mehrotra\n  \
    \ o  Adrian Farrel\n   o  Greg White\n   o  Markku Kojo\n   We also had remote\
    \ participants, namely:\n   o  Emmanuel Lochin\n   o  Mark Handley\n   o  Anirudh\
    \ Sivaraman\n   o  John Leslie\n   o  Varun Singh\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Hannes Tschofenig\n   Hall, Tirol  6060\n   Austria\n\
    \   EMail: Hannes.Tschofenig@gmx.net\n   URI:   http://www.tschofenig.priv.at\n\
    \   Lars Eggert\n   Sonnenallee 1\n   Kirchheim  85551\n   Germany\n   Phone:\
    \ +49 151 12055791\n   EMail: lars@netapp.com\n   URI:   http://eggert.org/\n\
    \   Zaheduzzaman Sarker\n   Lulea  SE-971 28\n   Sweden\n   Phone: +46 10 717\
    \ 37 43\n   EMail: zaheduzzaman.sarker@ericsson.com\n"
