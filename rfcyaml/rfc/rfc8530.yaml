- contents:
  - '                YANG Model for Logical Network Elements

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a logical network element (LNE) YANG module\n
    \  that is compliant with the Network Management Datastore Architecture\n   (NMDA).
    \ This module can be used to manage the logical resource\n   partitioning that
    may be present on a network device.  Examples of\n   common industry terms for
    logical resource partitioning are logical\n   systems or logical routers.  The
    YANG model in this document conforms\n   with NMDA as defined in RFC 8342.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8530.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Terminology . . . . . . . . . . . . . . . . . . . .
    . . .   4\n   2.  Overview  . . . . . . . . . . . . . . . . . . . . . . . . .
    .   4\n   3.  Logical Network Elements  . . . . . . . . . . . . . . . . . .   5\n
    \    3.1.  LNE Instantiation and Resource Assignment . . . . . . . .   6\n     3.2.
    \ LNE Management -- LNE View  . . . . . . . . . . . . . . .   7\n     3.3.  LNE
    Management -- Host Network Device View  . . . . . . .   7\n   4.  Security Considerations
    . . . . . . . . . . . . . . . . . . .   9\n   5.  IANA Considerations . . . .
    . . . . . . . . . . . . . . . . .  10\n   6.  Logical Network Element Model .
    . . . . . . . . . . . . . . .  10\n   7.  References  . . . . . . . . . . . .
    . . . . . . . . . . . . .  14\n     7.1.  Normative References  . . . . . . .
    . . . . . . . . . . .  14\n     7.2.  Informative References  . . . . . . . .
    . . . . . . . . .  15\n   Appendix A.  Examples . . . . . . . . . . . . . . .
    . . . . . . .  17\n     A.1.  Example: Host-Device-Managed LNE  . . . . . . .
    . . . . .  17\n       A.1.1.  Configuration Data  . . . . . . . . . . . . . .
    . . .  21\n       A.1.2.  State Data  . . . . . . . . . . . . . . . . . . . .
    .  25\n     A.2.  Example: Self-Managed LNE . . . . . . . . . . . . . . . .  33\n
    \      A.2.1.  Configuration Data  . . . . . . . . . . . . . . . . .  36\n       A.2.2.
    \ State Data  . . . . . . . . . . . . . . . . . . . . .  39\n   Acknowledgments
    . . . . . . . . . . . . . . . . . . . . . . . . .  49\n   Authors' Addresses  .
    . . . . . . . . . . . . . . . . . . . . . .  49\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document defines an NMDA-compliant YANG module [RFC6020]
    to\n   support the creation of logical network elements (LNEs) on a network\n
    \  device.  An LNE is an independently managed virtual device made up of\n   resources
    allocated to it from the host or parent network device.  An\n   LNE running on
    a host network device conceptually parallels a virtual\n   machine running on
    a host system.  Using host-virtualization\n   terminology, one could refer to
    an LNE as a \"Guest\" and the\n   containing network device as the \"Host\".  While
    LNEs may be\n   implemented via host-virtualization technologies, this is not
    a\n   requirement.  The YANG model in this document conforms with the\n   Network
    Management Datastore Architecture defined in [RFC8342].\n   This document also
    defines the necessary augmentations for allocating\n   host resources to a given
    LNE.  As the interface management model\n   [RFC8343] is the only module that
    currently defines host resources,\n   this document currently defines only a single
    augmentation to cover\n   the assignment of interfaces to an LNE.  Future modules
    that define\n   support for the control of host device resources are expected
    to,\n   where appropriate, provide parallel support for the assignment of\n   controlled
    resources to LNEs.\n   As each LNE is an independently managed device, each will
    have its\n   own set of YANG-modeled data that is independent of the host device\n
    \  and other LNEs.  For example, multiple LNEs may all have their own\n   \"Tunnel0\"
    interface defined, which will not conflict with each other\n   and will not exist
    in the host's interface model.  An LNE will have\n   its own management interfaces,
    possibly including independent\n   instances of NETCONF/RESTCONF/etc servers to
    support the\n   configuration of their YANG models.  As an example of this\n   independence,
    an implementation may choose to completely rename\n   assigned interfaces; so,
    on the host, the assigned interface might be\n   called \"Ethernet0/1\" while
    within the LNE it might be called \"eth1\".\n   In addition to standard management
    interfaces, a host device\n   implementation may support accessing LNE configuration
    and\n   operational YANG models directly from the host system.  When\n   supported,
    such access is accomplished through a yang-schema-mount\n   mount point [RFC8528]
    under which the root-level LNE YANG models may\n   be accessed.\n   Examples of
    vendor terminology for an LNE include logical system or\n   logical router and
    virtual switch, chassis, or fabric.\n"
  - contents:
    - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
      \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
      \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
      in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n
      \  capitals, as shown here.\n   Readers are expected to be familiar with terms
      and concepts of YANG\n   [RFC7950] and YANG Schema Mount [RFC8528].\n   This
      document uses the graphical representation of data models\n   defined in YANG
      Tree Diagrams [RFC8340].\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Overview\n   In this document, we consider network devices that support protocols\n
    \  and functions defined within the IETF Routing Area, e.g., routers,\n   firewalls,
    and hosts.  Such devices may be physical or virtual, e.g.,\n   a classic router
    with custom hardware or one residing within a\n   server-based virtual machine
    implementing a virtual network function\n   (VNF).  Each device may subdivide
    their resources into LNEs, each of\n   which provides a managed logical device.
    \ Examples of vendor\n   terminology for an LNE include logical system or logical
    router and\n   virtual switch, chassis, or fabric.  Each LNE may also support
    VPN\n   Routing and Forwarding (VRF) and Virtual Switching Instance (VSI)\n   functions,
    which are referred to below as Network Instances (NIs).\n   This breakdown is
    represented in Figure 1.\n              ,'''''''''''''''''''''''''''''''''''''''''''''''.\n
    \             |      Network Device (Physical or Virtual)     |\n              |
    .....................   ..................... |\n              | :  Logical Network
    \ :   :  Logical Network  : |\n              | :      Element      :   :      Element
    \     : |\n              | :+-----+-----+-----+:   :+-----+-----+-----+: |\n              |
    :| Net | Net | Net |:   :| Net | Net | Net |: |\n              | :|Inst.|Inst.|Inst.|:
    \  :|Inst.|Inst.|Inst.|: |\n              | :+-----+-----+-----+:   :+-----+-----+-----+:
    |\n              | :  | |   | |   | |  :   :  | |   | |   | |  : |\n              |
    :..|.|...|.|...|.|..:   :..|.|...|.|...|.|..: |\n              |    | |   | |
    \  | |         | |   | |   | |    |\n               ''''|'|'''|'|'''|'|'''''''''|'|'''|'|'''|'|'''''\n
    \                  | |   | |   | |         | |   | |   | |\n                      Interfaces
    \             Interfaces\n                     Figure 1: Module Element Relationships\n
    \  A model for LNEs is described in Section 3, and the model for NIs is\n   covered
    in [RFC8529].\n   The interface management model [RFC8343] is an existing model
    that is\n   impacted by the definition of LNEs and NIs.  This document and\n   [RFC8529]
    define augmentations to the interface model to support LNEs\n   and NIs.  Similar
    elements, although perhaps only for LNEs, may also\n   need to be included as
    part of the definition of the future hardware\n   and QoS modules.\n   Interfaces
    are a crucial part of any network device's configuration\n   and operational state.
    \ They generally include a combination of raw\n   physical interfaces, link-layer
    interfaces, addressing configuration,\n   and logical interfaces that may not
    be tied to any physical\n   interface.  Several system services, and Layer 2 and
    Layer 3\n   protocols, may also associate configuration or operational state data\n
    \  with different types of interfaces (these relationships are not shown\n   for
    simplicity).  The interface management model is defined by\n   [RFC8343].  The
    logical-network-element module augments existing\n   interface management models
    by adding an identifier that is used on\n   interfaces to identify an associated
    LNE.\n   The interface-related augmentation is as follows:\n       module: ietf-logical-network-element\n
    \        augment /if:interfaces/if:interface:\n           +--rw bind-lne-name?
    \  ->\n                /logical-network-elements/logical-network-element/name\n
    \  The interface model defined in [RFC8343] is structured to include all\n   interfaces
    in a flat list, without regard to logical assignment of\n   resources supported
    on the device.  The bind-lne-name and leaf\n   provides the association between
    an interface and its associated LNE.\n   Note that as currently defined, to assign
    an interface to both an LNE\n   and NI, the interface would first be assigned
    to the LNE and then\n   within that LNE's interface model, the LNE's representation
    of that\n   interface would be assigned to an NI using the mechanisms defined
    in\n   [RFC8529].\n"
  title: 2.  Overview
- contents:
  - "3.  Logical Network Elements\n   Logical network elements support the ability
    of some devices to\n   partition resources into independent logical routers and/or
    switches.\n   Device support for multiple logical network elements is\n   implementation
    specific.  Systems without such capabilities need not\n   include support for
    the logical-network-element module.  In physical\n   devices, some hardware features
    are shared across partitions, but\n   control-plane (e.g., routing) protocol instances,
    tables, and\n   configuration are managed separately.  For example, in logical\n
    \  routers or VNFs, this may correspond to establishing multiple logical\n   instances
    using a single software installation.  The model supports\n   configuration of
    multiple instances on a single device by creating a\n   list of logical network
    elements, each with their own configuration\n   and operational state related
    to routing and switching protocols.\n   The LNE model can be represented as:\n
    \  module: ietf-logical-network-element\n     +--rw logical-network-elements\n
    \       +--rw logical-network-element* [name]\n           +--rw name           string\n
    \          +--rw managed?       boolean\n           +--rw description?   string\n
    \          +--mp root\n     augment /if:interfaces/if:interface:\n       +--rw
    bind-lne-name?\n             -> /logical-network-elements/logical-network-element/name\n
    \    notifications:\n       +---n bind-lne-name-failed\n          +--ro name             ->
    /if:interfaces/interface/name\n          +--ro bind-lne-name\n          |       ->
    /if:interfaces/interface/lne:bind-lne-name\n          +--ro error-info?      string\n
    \  'name' identifies the logical network element.  'managed' indicates\n   if
    the server providing the host network device will provide the\n   client LNE information
    via the 'root' structure.  The root of an\n   LNE's specific data is the schema
    mount point 'root'.  bind-lne-name\n   is used to associate an interface with
    an LNE, and bind-lne-name-\n   failed is used in certain failure cases.\n   An
    LNE root MUST contain at least the YANG library [RFC7895] and\n   interface module
    [RFC8343].\n"
  - contents:
    - "3.1.  LNE Instantiation and Resource Assignment\n   Logical network elements
      may be controlled by clients using existing\n   list operations.  When list
      entries are created, a new LNE is\n   instantiated.  The models mounted under
      an LNE root are expected to\n   be dependent on the server implementation.  When
      a list entry is\n   deleted, an existing LNE is destroyed.  For more information,
      see\n   [RFC7950], Section 7.8.6.\n   Once instantiated, host network device
      resources can be associated\n   with the new LNE.  As previously mentioned,
      this document augments\n   ietf-interfaces with the bind-lne-name leaf to support
      such\n   associations for interfaces.  When a bind-lne-name is set to a valid\n
      \  LNE name, an implementation MUST take whatever steps are internally\n   necessary
      to assign the interface to the LNE or provide an error\n   message (defined
      below) with an indication of why the assignment\n   failed.  It is possible
      for the assignment to fail while processing\n   the set, or after asynchronous
      processing.  Error notification in the\n   latter case is supported via a notification.\n
      \  On a successful interface assignment to an LNE, an implementation\n   MUST
      also make the resource available to the LNE by providing a\n   system-created
      interface to the LNE.  The name of the system-created\n   interface is a local
      matter and may be identical or completely\n   different and mapped from and
      to the name used in the context of the\n   host device.  The system-created
      interface SHOULD be exposed via the\n   LNE-specific instance of the interface
      model [RFC8343].\n"
    title: 3.1.  LNE Instantiation and Resource Assignment
  - contents:
    - "3.2.  LNE Management -- LNE View\n   Each LNE instance is expected to support
      management functions from\n   within the context of the LNE root, via a server
      that provides\n   information with the LNE's root exposed as the device root.\n
      \  Management functions operating within the context of an LNE are\n   accessed
      through the LNE's standard management interfaces, e.g.,\n   NETCONF and SNMP.
      \ Initial configuration, much like the initial\n   configuration of the host
      device, is a local implementation matter.\n   When accessing an LNE via the
      LNE's management interface, a network\n   device representation will be presented,
      but its scope will be\n   limited to the specific LNE.  Normal YANG/NETCONF
      mechanisms,\n   together with the required YANG library [RFC7895] instance,
      can be\n   used to identify the available modules.  Each supported module will\n
      \  be presented as a top-level module.  Only LNE-associated resources\n   will
      be reflected in resource-related modules, e.g., interfaces,\n   hardware, and
      perhaps QoS.  From the management perspective, there\n   will be no difference
      between the available LNE view (information)\n   and a physical network device.\n"
    title: 3.2.  LNE Management -- LNE View
  - contents:
    - "3.3.  LNE Management -- Host Network Device View\n   There are multiple implementation
      approaches possible to enable a\n   network device to support the logical-network-element
      module and\n   multiple LNEs.  Some approaches will allow the management functions\n
      \  operating at the network device level to access LNE configuration and\n   operational
      information, while others will not.  Similarly, even when\n   LNE management
      from the network device is supported by the\n   implementation, it may be prohibited
      by user policy.\n   Independent of the method selected by an implementation,
      the\n   'managed' boolean mentioned above is used to indicate when LNE\n   management
      from the network device context is possible.  When the\n   'managed' boolean
      is 'false', the LNE cannot be managed by the host\n   system and can only be
      managed from within the context of the LNE as\n   described in Section 3.2.
      \ Attempts to access information below a\n   root node whose associated 'managed'
      boolean is set to 'false' MUST\n   result in the error message indicated below.
      \ In some\n   implementations, it may not be possible to change this value.
      \ For\n   example, when an LNE is implemented using virtual machine and\n   traditional
      hypervisor technologies, it is likely that this value\n   will be restricted
      to a 'false' value.\n   It is an implementation choice if the information can
      be accessed and\n   modified from within the context of the LNE, or even the
      context of\n   the host device.  When the 'managed' boolean is 'true', LNE\n
      \  information SHALL be accessible from the context of the host device.\n   When
      the associated schema-mount definition has the 'config' leaf set\n   to 'true',
      then LNE information SHALL also be modifiable from the\n   context of the host
      device.  When LNE information is available from\n   both the host device and
      from within the context of the LNE, the same\n   information MUST be made available
      via the 'root' element, with paths\n   modified as described in [RFC8528].\n
      \  An implementation MAY represent an LNE's schema using either the\n   'inline'
      or the 'shared-schema' approaches defined in [RFC8528].  The\n   choice of which
      to use is completely an implementation choice.  The\n   inline approach is anticipated
      to be generally used in the cases\n   where the 'managed' boolean will always
      be 'false'.  The 'shared-\n   schema' approach is expected to be most useful
      in the case where all\n   LNEs share the same schema.  When 'shared-schema'
      is used with an LNE\n   mount point, the YANG library rooted in the LNE's mount
      point MUST\n   match the associated schema defined according to the ietf-yang-\n
      \  schema-mount module.\n   Beyond the two modules that will always be present
      for an LNE, as an\n   LNE is a network device itself, all modules that may be
      present at\n   the top-level network device MAY also be present for the LNE.
      \ The\n   list of available modules is expected to be implementation dependent,\n
      \  as is the method used by an implementation to support LNEs.\n   Appendix
      A provides example uses of LNEs.\n"
    title: 3.3.  LNE Management -- Host Network Device View
  title: 3.  Logical Network Elements
- contents:
  - "4.  Security Considerations\n   The YANG modules specified in this document define
    a schema for data\n   that is designed to be accessed via network management protocols
    such\n   as NETCONF [RFC6241] or RESTCONF [RFC8040].  The lowest NETCONF layer\n
    \  is the secure transport layer, and the mandatory-to-implement secure\n   transport
    is Secure Shell (SSH) [RFC6242].  The lowest RESTCONF layer\n   is HTTPS, and
    the mandatory-to-implement secure transport is TLS\n   [RFC8446].\n   The Network
    Configuration Access Control Model (NACM) [RFC8341]\n   provides the means to
    restrict access for particular NETCONF or\n   RESTCONF users to a preconfigured
    subset of all available NETCONF or\n   RESTCONF protocol operations and content.\n
    \  LNE information represents device and network configuration\n   information.
    \ As such, the security of this information is important,\n   but it is fundamentally
    no different than any other interface or\n   device configuration information
    that has already been covered in\n   other documents such as [RFC8343], [RFC7317],
    and [RFC8349].\n   The vulnerable \"config true\" parameters and subtrees are
    the\n   following:\n   /logical-network-elements/logical-network-element:  This
    list\n      specifies the logical network element and the related logical\n      device
    configuration.\n   /logical-network-elements/logical-network-element/managed:
    \ While\n      this leaf is contained in the previous list, it is worth\n      particular
    attention as it controls whether information under the\n      LNE mount point
    is accessible by both the host device and within\n      the LNE context.  There
    may be extra sensitivity to this leaf in\n      environments where an LNE is managed
    by a different party than the\n      host device, and that party does not wish
    to share LNE information\n      with the operator of the host device.\n   /if:interfaces/if:interface/bind-lne-name:
    \ This leaf indicates the\n      LNE instance to which an interface is assigned.
    \ Implementations\n      should pay particular attention to when changes to this
    leaf are\n      permitted as removal of an interface from an LNE can have a major\n
    \     impact on the LNE's operation as it is similar to physically\n      removing
    an interface from the device.  Implementations can reject\n      a reassignment
    using the previously described error message\n      generation.\n   Unauthorized
    access to any of these lists can adversely affect the\n   security of both the
    local device and the network.  This may lead to\n   network malfunctions, delivery
    of packets to inappropriate\n   destinations, and other problems.\n"
  title: 4.  Security Considerations
- contents:
  - "5.  IANA Considerations\n   This document registers a URI in the \"IETF XML Registry\"
    [RFC3688].\n        URI: urn:ietf:params:xml:ns:yang:ietf-logical-network-element\n
    \       Registrant Contact: The IESG.\n        XML: N/A, the requested URI is
    an XML namespace.\n   This document registers a YANG module in the \"YANG Module
    Names\"\n   registry [RFC6020].\n   name:        ietf-logical-network-element\n
    \  namespace:   urn:ietf:params:xml:ns:yang:ietf-logical-network-element\n   prefix:
    \     lne\n   reference:   RFC 8530\n"
  title: 5.  IANA Considerations
- contents:
  - "6.  Logical Network Element Model\n   The structure of the model defined in this
    document is described by\n   the YANG module below.\n <CODE BEGINS> file \"ietf-logical-network-element@2019-01-25.yang\"\n
    module ietf-logical-network-element {\n   yang-version 1.1;\n   // namespace\n
    \  namespace \"urn:ietf:params:xml:ns:yang:ietf-logical-network-element\";\n   prefix
    lne;\n   // import some basic types\n   import ietf-interfaces {\n     prefix
    if;\n     reference\n       \"RFC 8343: A YANG Data Model for Interface Management\";\n
    \  }\n   import ietf-yang-schema-mount {\n     prefix yangmnt;\n     reference\n
    \      \"RFC 8528: YANG Schema Mount\";\n   }\n   organization\n     \"IETF Routing
    Area (rtgwg) Working Group\";\n   contact\n     \"WG Web:   <https://datatracker.ietf.org/wg/rtgwg/>\n
    \     WG List:  <mailto:rtgwg@ietf.org>\n      Author:   Lou Berger\n                <mailto:lberger@labn.net>\n
    \     Author:   Christian Hopps\n                <mailto:chopps@chopps.org>\n
    \     Author:   Acee Lindem\n                <mailto:acee@cisco.com>\n      Author:
    \  Dean Bogdanovic\n                <mailto:ivandean@gmail.com>\";\n   description\n
    \    \"This module is used to support multiple logical network\n      elements
    on a single physical or virtual system.\n      Copyright (c) 2019 IETF Trust and
    the persons identified as\n      authors of the code.  All rights reserved.\n
    \     Redistribution and use in source and binary forms, with or\n      without
    modification, is permitted pursuant to, and subject\n      to the license terms
    contained in, the Simplified BSD License\n      set forth in Section 4.c of the
    IETF Trust's Legal Provisions\n      Relating to IETF Documents\n      (http://trustee.ietf.org/license-info).\n
    \     This version of this YANG module is part of RFC 8530; see\n      the RFC
    itself for full legal notices.\";\n   revision 2019-01-25 {\n     description\n
    \      \"Initial revision.\";\n     reference\n       \"RFC 8530: YANG Model for
    Logical Network Elements\";\n   }\n   // top level device definition statements\n
    \  container logical-network-elements {\n     description\n       \"Allows a network
    device to support multiple logical\n        network element (device) instances.\";\n
    \    list logical-network-element {\n       key \"name\";\n       description\n
    \        \"List of logical network elements.\";\n       leaf name {\n         type
    string;\n         description\n           \"Device-wide unique identifier for
    the\n            logical network element.\";\n       }\n       leaf managed {\n
    \        type boolean;\n         default \"true\";\n         description\n           \"True
    if the host can access LNE information\n            using the root mount point.
    \ This value\n            may not be modifiable in all implementations.\";\n       }\n
    \      leaf description {\n         type string;\n         description\n           \"Description
    of the logical network element.\";\n       }\n       container root {\n         description\n
    \          \"Container for mount point.\";\n         yangmnt:mount-point \"root\"
    {\n           description\n             \"Root for models supported per logical\n
    \             network element.  This mount point may or may not\n              be
    inline based on the server implementation.  It\n              SHALL always contain
    a YANG library and interfaces\n              instance.\n              When the
    associated 'managed' leaf is 'false', any\n              operation that attempts
    to access information below\n              the root SHALL fail with an error-tag
    of\n              'access-denied' and an error-app-tag of\n              'lne-not-managed'.\";\n
    \        }\n       }\n     }\n   }\n   // augment statements\n   augment \"/if:interfaces/if:interface\"
    {\n     description\n       \"Add a node for the identification of the logical
    network\n        element associated with an interface.  Applies to\n        interfaces
    that can be assigned per logical network\n        element.\n        Note that
    a standard error will be returned if the\n        identified leafref isn't present.
    \ If an interface\n        cannot be assigned for any other reason, the operation\n
    \       SHALL fail with an error-tag of 'operation-failed' and an\n        error-app-tag
    of 'lne-assignment-failed'.  A meaningful\n        error-info that indicates the
    source of the assignment\n        failure SHOULD also be provided.\";\n     leaf
    bind-lne-name {\n       type leafref {\n         path \"/logical-network-elements/logical-network-element/name\";\n
    \      }\n       description\n         \"Logical network element ID to which the
    interface is\n          bound.\";\n     }\n   }\n   // notification statements\n
    \  notification bind-lne-name-failed {\n     description\n       \"Indicates an
    error in the association of an interface to an\n        LNE.  Only generated after
    success is initially returned\n        when bind-lne-name is set.\";\n     leaf
    name {\n       type leafref {\n         path \"/if:interfaces/if:interface/if:name\";\n
    \      }\n       mandatory true;\n       description\n         \"Contains the
    interface name associated with the\n          failure.\";\n     }\n     leaf bind-lne-name
    {\n       type leafref {\n         path \"/if:interfaces/if:interface/lne:bind-lne-name\";\n
    \      }\n       mandatory true;\n       description\n         \"Contains the
    bind-lne-name associated with the\n          failure.\";\n     }\n     leaf error-info
    {\n       type string;\n       description\n         \"Optionally, indicates the
    source of the assignment\n          failure.\";\n     }\n   }\n }\n <CODE ENDS>\n"
  title: 6.  Logical Network Element Model
- contents:
  - '7.  References

    '
  - contents:
    - "7.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC3688]  Mealling, M., \"The IETF XML Registry\", BCP 81, RFC 3688,\n              DOI
      10.17487/RFC3688, January 2004,\n              <https://www.rfc-editor.org/info/rfc3688>.\n
      \  [RFC6020]  Bjorklund, M., Ed., \"YANG - A Data Modeling Language for\n              the
      Network Configuration Protocol (NETCONF)\", RFC 6020,\n              DOI 10.17487/RFC6020,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6020>.\n   [RFC6241]
      \ Enns, R., Ed., Bjorklund, M., Ed., Schoenwaelder, J., Ed.,\n              and
      A. Bierman, Ed., \"Network Configuration Protocol\n              (NETCONF)\",
      RFC 6241, DOI 10.17487/RFC6241, June 2011,\n              <https://www.rfc-editor.org/info/rfc6241>.\n
      \  [RFC6242]  Wasserman, M., \"Using the NETCONF Protocol over Secure\n              Shell
      (SSH)\", RFC 6242, DOI 10.17487/RFC6242, June 2011,\n              <https://www.rfc-editor.org/info/rfc6242>.\n
      \  [RFC8040]  Bierman, A., Bjorklund, M., and K. Watsen, \"RESTCONF\n              Protocol\",
      RFC 8040, DOI 10.17487/RFC8040, January 2017,\n              <https://www.rfc-editor.org/info/rfc8040>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8341]  Bierman, A. and M.
      Bjorklund, \"Network Configuration\n              Access Control Model\", STD
      91, RFC 8341,\n              DOI 10.17487/RFC8341, March 2018,\n              <https://www.rfc-editor.org/info/rfc8341>.\n
      \  [RFC8342]  Bjorklund, M., Schoenwaelder, J., Shafer, P., Watsen, K.,\n              and
      R. Wilton, \"Network Management Datastore Architecture\n              (NMDA)\",
      RFC 8342, DOI 10.17487/RFC8342, March 2018,\n              <https://www.rfc-editor.org/info/rfc8342>.\n
      \  [RFC8343]  Bjorklund, M., \"A YANG Data Model for Interface\n              Management\",
      RFC 8343, DOI 10.17487/RFC8343, March 2018,\n              <https://www.rfc-editor.org/info/rfc8343>.\n
      \  [RFC8446]  Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n
      \             Version 1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8446>.\n   [RFC8528]  Bjorklund,
      M. and L. Lhotka, \"YANG Schema Mount\",\n              RFC 8528, DOI 10.17487/RFC8528,
      March 2019,\n              <https://www.rfc-editor.org/info/rfc8528>.\n"
    title: 7.1.  Normative References
  - contents:
    - "7.2.  Informative References\n   [DEVICE-MODEL]\n              Lindem, A.,
      Berger, L., Bogdanovic, D., and C. Hopps,\n              \"Network Device YANG
      Logical Organization\", Work in\n              Progress, draft-ietf-rtgwg-device-model-02,
      March 2017.\n   [OSPF-YANG]\n              Yeung, D., Qu, Y., Zhang, Z., Chen,
      I., and A. Lindem,\n              \"YANG Data Model for OSPF Protocol\", Work
      in Progress,\n              draft-ietf-ospf-yang-21, January 2019.\n   [RFC7317]
      \ Bierman, A. and M. Bjorklund, \"A YANG Data Model for\n              System
      Management\", RFC 7317, DOI 10.17487/RFC7317, August\n              2014, <https://www.rfc-editor.org/info/rfc7317>.\n
      \  [RFC7895]  Bierman, A., Bjorklund, M., and K. Watsen, \"YANG Module\n              Library\",
      RFC 7895, DOI 10.17487/RFC7895, June 2016,\n              <https://www.rfc-editor.org/info/rfc7895>.\n
      \  [RFC7950]  Bjorklund, M., Ed., \"The YANG 1.1 Data Modeling Language\",\n
      \             RFC 7950, DOI 10.17487/RFC7950, August 2016,\n              <https://www.rfc-editor.org/info/rfc7950>.\n
      \  [RFC8340]  Bjorklund, M. and L. Berger, Ed., \"YANG Tree Diagrams\",\n              BCP
      215, RFC 8340, DOI 10.17487/RFC8340, March 2018,\n              <https://www.rfc-editor.org/info/rfc8340>.\n
      \  [RFC8348]  Bierman, A., Bjorklund, M., Dong, J., and D. Romascanu, \"A\n
      \             YANG Data Model for Hardware Management\", RFC 8348,\n              DOI
      10.17487/RFC8348, March 2018,\n              <https://www.rfc-editor.org/info/rfc8348>.\n
      \  [RFC8349]  Lhotka, L., Lindem, A., and Y. Qu, \"A YANG Data Model for\n              Routing
      Management (NMDA Version)\", RFC 8349,\n              DOI 10.17487/RFC8349,
      March 2018,\n              <https://www.rfc-editor.org/info/rfc8349>.\n   [RFC8529]
      \ Berger, L., Hopps, C., Lindem, A., Bogdanovic, D., and\n              X. Liu,
      \"YANG Data Model for Network Instances\", RFC 8529,\n              DOI 10.17487/RFC8529,
      March 2019,\n              <https://www.rfc-editor.org/info/rfc8529>.\n"
    title: 7.2.  Informative References
  title: 7.  References
- contents:
  - "Appendix A.  Examples\n   The following subsections provide example uses of LNEs.\n"
  - contents:
    - "A.1.  Example: Host-Device-Managed LNE\n   This section describes an example
      of the LNE model using schema mount\n   to achieve the parent management.  An
      example device supports\n   multiple instances of LNEs (logical routers), each
      of which supports\n   features of Layer 2 and Layer 3 interfaces [RFC8343],
      a routing\n   information base [RFC8349], and the OSPF protocol [OSPF-YANG].
      \ Each\n   of these features is specified by a YANG model, and they are combined\n
      \  using the YANG schema mount as shown below.  Not all possible mounted\n   modules
      are shown.  For example, implementations could also mount the\n   model defined
      in [RFC8348].\n   module: ietf-logical-network-element\n     +--rw logical-network-elements\n
      \       +--rw logical-network-element* [name]\n           +--rw name           string\n
      \          +--mp root\n              +--ro yanglib:modules-state/\n              |
      \ +--ro module-set-id    string\n              |  +--ro module* [name revision]\n
      \             |     +--ro name                yang:yang-identifier\n              +--rw
      sys:system/\n              |  +--rw contact?          string\n              |
      \ +--rw hostname?         inet:domain-name\n              |  +--rw authentication
      {authentication}?\n              |     +--rw user-authentication-order*   identityref\n
      \             |     +--rw user* [name] {local-users}?\n              |        +--rw
      name              string\n              |        +--rw password?         ianach:crypt-hash\n
      \             |        +--rw authorized-key* [name]\n              |           +--rw
      name         string\n              |           +--rw algorithm    string\n              |
      \          +--rw key-data     binary\n              +--ro sys:system-state/\n
      \             |     ...\n              +--rw rt:routing/\n              |  +--rw
      router-id?                 yang:dotted-quad\n              |  +--rw control-plane-protocols\n
      \             |     +--rw control-plane-protocol* [type name]\n              |
      \       +--rw ospf:ospf/\n              |          +--rw areas\n              |
      \            +--rw area* [area-id]\n              |                +--rw interfaces\n
      \             |                   +--rw interface* [name]\n              |                      +--rw
      name if:interface-ref\n              |                      +--rw cost?   uint16\n
      \             +--rw if:interfaces/\n                 +--rw interface* [name]\n
      \                   +--rw name            string\n                    +--rw
      ip:ipv4!/\n                    |  +--rw address* [ip]\n                    |
      \ ...\n   module: ietf-interfaces\n     +--rw interfaces\n        +--rw interface*
      [name]\n           +--rw name                        string\n           +--rw
      lne:bind-lne-name?          string\n           +--ro oper-status        enumeration\n
      \  module: ietf-yang-library\n     +--ro modules-state\n        +--ro module-set-id
      \   string\n        +--ro module* [name revision]\n           +--ro name                yang:yang-identifier\n
      \  module: ietf-system\n     +--rw system\n     |  +--rw contact?          string\n
      \    |  +--rw hostname?         inet:domain-name\n     |  +--rw authentication
      {authentication}?\n     |     +--rw user-authentication-order*   identityref\n
      \    |     +--rw user* [name] {local-users}?\n     |        +--rw name              string\n
      \    |        +--rw password?         ianach:crypt-hash\n     |        +--rw
      authorized-key* [name]\n     |           +--rw name         string\n     |           +--rw
      algorithm    string\n     |           +--rw key-data     binary\n     +--ro
      system-state\n        +--ro platform\n        |  +--ro os-name?      string\n
      \       |  +--ro os-release?   string\n   To realize the above schema, the example
      device implements the\n   following schema mount instance:\n   \"ietf-yang-schema-mount:schema-mounts\":
      {\n     \"mount-point\": [\n       {\n         \"module\": \"ietf-logical-network-element\",\n
      \        \"label\": \"root\",\n         \"shared-schema\":  {}\n       }\n     ]\n
      \  }\n   By using the implementation of the YANG schema mount, an operator can\n
      \  create instances of logical routers.  An interface can be assigned to\n   a
      logical router, so that the logical router has the permission to\n   access
      this interface.  The OSPF protocol can then be enabled on this\n   assigned
      interface.\n   For this implementation, a parent management session has access
      to\n   the schemas of both the parent hosting system and the child logical\n
      \  routers.  In addition, each child logical router can grant its own\n   management
      sessions, which have the following schema:\n   module: ietf-yang-library\n     +--ro
      modules-state\n        +--ro module-set-id    string\n        +--ro module*
      [name revision]\n           +--ro name                yang:yang-identifier\n
      \  module: ietf-system\n     +--rw system\n     |  +--rw contact?          string\n
      \    |  +--rw hostname?         inet:domain-name\n     |  +--rw authentication
      {authentication}?\n     |     +--rw user-authentication-order*   identityref\n
      \    |     +--rw user* [name] {local-users}?\n     |        +--rw name              string\n
      \    |        +--rw password?         ianach:crypt-hash\n     |        +--rw
      authorized-key* [name]\n     |           +--rw name         string\n     |           +--rw
      algorithm    string\n     |           +--rw key-data     binary\n     +--ro
      system-state\n        +--ro platform\n           +--ro os-name?      string\n
      \          +--ro os-release?   string\n   module: ietf-routing\n     rw-- routing\n
      \       +--rw router-id?                 yang:dotted-quad\n        +--rw control-plane-protocols\n
      \          +--rw control-plane-protocol* [type name]\n              +--rw ospf:ospf/\n
      \               +--rw areas\n                   +--rw area* [area-id]\n                      +--rw
      interfaces\n                         +--rw interface* [name]\n                            +--rw
      name    if:interface-ref\n                            +--rw cost?   uint16\n
      \  module: ietf-interfaces\n     +--rw interfaces\n        +--rw interface*
      [name]\n           +--rw name                        string\n           +--ro
      oper-status        enumeration\n"
    - contents:
      - "A.1.1.  Configuration Data\n   The following shows an example where two customer-specific
        LNEs are\n   configured:\n   {\n     \"ietf-logical-network-element:logical-network-elements\":
        {\n       \"logical-network-element\": [\n         {\n           \"name\":
        \"cust1\",\n           \"root\": {\n             \"ietf-system:system\": {\n
        \              \"authentication\": {\n                 \"user\": [\n                   {\n
        \                    \"name\": \"john\",\n                     \"password\":
        \"$0$password\"\n                   }\n                 ]\n               }\n
        \            },\n             \"ietf-routing:routing\": {\n               \"router-id\":
        \"192.0.2.1\",\n               \"control-plane-protocols\": {\n                 \"control-plane-protocol\":
        [\n                   {\n                     \"type\": \"ietf-routing:ospf\",\n
        \                    \"name\": \"1\",\n                     \"ietf-ospf:ospf\":
        {\n                       \"af\": \"ipv4\",\n                       \"areas\":
        {\n                         \"area\": [\n                           {\n                             \"area-id\":
        \"203.0.113.1\",\n                             \"interfaces\": {\n                               \"interface\":
        [\n                                 {\n                                   \"name\":
        \"eth1\",\n                                   \"cost\": 10\n                                 }\n
        \                              ]\n                             }\n                           }\n
        \                        ]\n                       }\n                     }\n
        \                  }\n                 ]\n               }\n             },\n
        \            \"ietf-interfaces:interfaces\": {\n               \"interface\":
        [\n                 {\n                   \"name\": \"eth1\",\n                   \"type\":
        \"iana-if-type:ethernetCsmacd\",\n                   \"ietf-ip:ipv4\": {\n
        \                    \"address\": [\n                       {\n                         \"ip\":
        \"192.0.2.11\",\n                         \"prefix-length\": 24\n                       }\n
        \                    ]\n                   },\n                   \"ietf-ip:ipv6\":
        {\n                     \"address\": [\n                       {\n                         \"ip\":
        \"2001:db8:0:2::11\",\n                         \"prefix-length\": 64\n                       }\n
        \                    ]\n                   }\n                 }\n               ]\n
        \            }\n           }\n         },\n         {\n           \"name\":
        \"cust2\",\n           \"root\": {\n             \"ietf-system:system\": {\n
        \              \"authentication\": {\n                 \"user\": [\n                   {\n
        \                    \"name\": \"john\",\n                     \"password\":
        \"$0$password\"\n                   }\n                 ]\n               }\n
        \            },\n             \"ietf-routing:routing\": {\n               \"router-id\":
        \"192.0.2.2\",\n               \"control-plane-protocols\": {\n                 \"control-plane-protocol\":
        [\n                   {\n                     \"type\": \"ietf-routing:ospf\",\n
        \                    \"name\": \"1\",\n                     \"ietf-ospf:ospf\":
        {\n                       \"af\": \"ipv4\",\n                       \"areas\":
        {\n                         \"area\": [\n                           {\n                             \"area-id\":
        \"203.0.113.1\",\n                             \"interfaces\": {\n                               \"interface\":
        [\n                                 {\n                                   \"name\":
        \"eth1\",\n                                   \"cost\": 10\n                                 }\n
        \                              ]\n                             }\n                           }\n
        \                        ]\n                       }\n                     }\n
        \                  }\n                 ]\n               }\n             },\n
        \            \"ietf-interfaces:interfaces\": {\n               \"interface\":
        [\n                 {\n                   \"name\": \"eth1\",\n                   \"type\":
        \"iana-if-type:ethernetCsmacd\",\n                   \"ietf-ip:ipv4\": {\n
        \                    \"address\": [\n                       {\n                         \"ip\":
        \"192.0.2.11\",\n                         \"prefix-length\": 24\n                       }\n
        \                    ]\n                   }\n                 }\n               ]\n
        \            }\n           }\n         }\n       ]\n     },\n     \"ietf-interfaces:interfaces\":
        {\n       \"interface\": [\n         {\n           \"name\": \"eth0\",\n           \"type\":
        \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\": {\n             \"address\":
        [\n               {\n                 \"ip\": \"192.0.2.10\",\n                 \"prefix-length\":
        24\n               }\n             ]\n           },\n           \"ietf-ip:ipv6\":
        {\n             \"address\": [\n               {\n                 \"ip\":
        \"2001:db8:0:2::10\",\n                 \"prefix-length\": 64\n               }\n
        \            ]\n           }\n         },\n         {\n           \"name\":
        \"cust1:eth1\",\n           \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"ietf-logical-network-element:bind-lne-name\":
        \"cust1\"\n         },\n         {\n           \"name\": \"cust2:eth1\",\n
        \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"ietf-logical-network-element:bind-lne-name\":
        \"cust2\"\n         }\n       ]\n     },\n     \"ietf-system:system\": {\n
        \      \"authentication\": {\n         \"user\": [\n           {\n             \"name\":
        \"root\",\n             \"password\": \"$0$password\"\n           }\n         ]\n
        \      }\n     }\n   }\n"
      title: A.1.1.  Configuration Data
    - contents:
      - "A.1.2.  State Data\n   The following shows possible state data associated
        with the above\n   configuration data:\n"
      - "{\n  \"ietf-logical-network-element:logical-network-elements\": {\n    \"logical-network-element\":
        [\n      {\n        \"name\": \"cust1\",\n        \"root\": {\n          \"ietf-yang-library:modules-state\":
        {\n            \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
        \           \"module\": [\n              {\n                \"name\": \"iana-if-type\",\n
        \               \"revision\": \"2014-05-08\",\n                \"namespace\":
        \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n                \"conformance-type\":
        \"import\"\n              },\n              {\n                \"name\": \"ietf-inet-types\",\n
        \               \"revision\": \"2013-07-15\",\n                \"namespace\":\n
        \                 \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n                \"conformance-type\":
        \"import\"\n              },\n              {\n                \"name\": \"ietf-interfaces\",\n
        \               \"revision\": \"2014-05-08\",\n                \"feature\":
        [\n                  \"arbitrary-names\",\n                  \"pre-provisioning\"\n
        \               ],\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-ip\",\n                \"revision\": \"2014-06-16\",\n
        \               \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-ospf\",\n                \"revision\": \"2018-03-03\",\n
        \               \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-routing\",\n                \"revision\":
        \"2018-03-13\",\n                \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-system\",\n                \"revision\":
        \"2014-08-06\",\n                \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-yang-library\",\n                \"revision\":
        \"2016-06-21\",\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-yang-types\",\n                \"revision\":
        \"2013-07-15\",\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
        \               \"conformance-type\": \"import\"\n              }\n            ]\n
        \         },\n          \"ietf-system:system-state\": {\n            \"platform\":
        {\n              \"os-name\": \"NetworkOS\"\n            }\n          },\n
        \         \"ietf-routing:routing\": {\n            \"router-id\": \"192.0.2.1\",\n
        \           \"control-plane-protocols\": {\n              \"control-plane-protocol\":
        [\n                {\n                  \"type\": \"ietf-routing:ospf\",\n
        \                 \"name\": \"1\",\n                  \"ietf-ospf:ospf\":
        {\n                    \"af\": \"ipv4\",\n                    \"areas\": {\n
        \                     \"area\": [\n                        {\n                          \"area-id\":
        \"203.0.113.1\",\n                          \"interfaces\": {\n                            \"interface\":
        [\n                              {\n                                \"name\":
        \"eth1\",\n                                \"cost\": 10\n                              }\n
        \                           ]\n                          }\n                        }\n
        \                     ]\n                    }\n                  }\n                }\n
        \             ]\n            }\n          },\n          \"ietf-interfaces:interfaces\":
        {\n            \"interface\": [\n              {\n                \"name\":
        \"eth1\",\n                \"type\": \"iana-if-type:ethernetCsmacd\",\n                \"oper-status\":
        \"up\",\n                \"phys-address\": \"00:01:02:A1:B1:C1\",\n                \"statistics\":
        {\n                  \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
        \               },\n                \"ietf-ip:ipv4\": {\n                  \"address\":
        [\n                    {\n                      \"ip\": \"192.0.2.11\",\n
        \                     \"prefix-length\": 24\n                    }\n                  ]\n
        \               },\n                \"ietf-ip:ipv6\": {\n                  \"address\":
        [\n                    {\n                      \"ip\": \"2001:db8:0:2::11\",\n
        \                     \"prefix-length\": 64\n                    }\n                  ]\n
        \               }\n              }\n            ]\n          }\n        }\n
        \     },\n      {\n        \"name\": \"cust2\",\n        \"root\": {\n          \"ietf-yang-library:modules-state\":
        {\n            \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
        \           \"module\": [\n              {\n                \"name\": \"iana-if-type\",\n
        \               \"revision\": \"2014-05-08\",\n                \"namespace\":
        \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n                \"conformance-type\":
        \"import\"\n              },\n              {\n                \"name\": \"ietf-inet-types\",\n
        \               \"revision\": \"2013-07-15\",\n                \"namespace\":\n
        \                 \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n                \"conformance-type\":
        \"import\"\n              },\n              {\n                \"name\": \"ietf-interfaces\",\n
        \               \"revision\": \"2014-05-08\",\n                \"feature\":
        [\n                  \"arbitrary-names\",\n                  \"pre-provisioning\"\n
        \               ],\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-ip\",\n                \"revision\": \"2014-06-16\",\n
        \               \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-ospf\",\n                \"revision\": \"2018-03-03\",\n
        \               \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-routing\",\n                \"revision\":
        \"2018-03-13\",\n                \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-system\",\n                \"revision\":
        \"2014-08-06\",\n                \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-yang-library\",\n                \"revision\":
        \"2016-06-21\",\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
        \               \"conformance-type\": \"implement\"\n              },\n              {\n
        \               \"name\": \"ietf-yang-types\",\n                \"revision\":
        \"2013-07-15\",\n                \"namespace\":\n                  \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
        \               \"conformance-type\": \"import\"\n              }\n            ]\n
        \         },\n          \"ietf-system:system-state\": {\n            \"platform\":
        {\n              \"os-name\": \"NetworkOS\"\n            }\n          },\n
        \         \"ietf-routing:routing\": {\n            \"router-id\": \"192.0.2.2\",\n
        \           \"control-plane-protocols\": {\n              \"control-plane-protocol\":
        [\n                {\n                  \"type\": \"ietf-routing:ospf\",\n
        \                 \"name\": \"1\",\n                  \"ietf-ospf:ospf\":
        {\n                    \"af\": \"ipv4\",\n                    \"areas\": {\n
        \                     \"area\": [\n                        {\n                          \"area-id\":
        \"203.0.113.1\",\n                          \"interfaces\": {\n                            \"interface\":
        [\n                              {\n                                \"name\":
        \"eth1\",\n                                \"cost\": 10\n                              }\n
        \                           ]\n                          }\n                        }\n
        \                     ]\n                    }\n                  }\n                }\n
        \             ]\n            }\n          },\n          \"ietf-interfaces:interfaces\":
        {\n            \"interface\": [\n              {\n                \"name\":
        \"eth1\",\n                \"type\": \"iana-if-type:ethernetCsmacd\",\n                \"oper-status\":
        \"up\",\n                \"phys-address\": \"00:01:02:A1:B1:C2\",\n                \"statistics\":
        {\n                  \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
        \               },\n                \"ietf-ip:ipv4\": {\n                  \"address\":
        [\n                    {\n                      \"ip\": \"192.0.2.11\",\n
        \                     \"prefix-length\": 24\n                    }\n                  ]\n
        \               }\n              }\n            ]\n          }\n        }\n
        \     }\n    ]\n  },\n  \"ietf-interfaces:interfaces\": {\n    \"interface\":
        [\n      {\n        \"name\": \"eth0\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n
        \       \"oper-status\": \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C0\",\n
        \       \"statistics\": {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
        \       },\n        \"ietf-ip:ipv4\": {\n          \"address\": [\n            {\n
        \             \"ip\": \"192.0.2.10\",\n              \"prefix-length\": 24\n
        \           }\n          ]\n        },\n        \"ietf-ip:ipv6\": {\n          \"address\":
        [\n            {\n              \"ip\": \"2001:db8:0:2::10\",\n              \"prefix-length\":
        64\n            }\n          ]\n        }\n      },\n      {\n        \"name\":
        \"cust1:eth1\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n        \"oper-status\":
        \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C1\",\n        \"statistics\":
        {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n        },\n
        \       \"ietf-logical-network-element:bind-lne-name\": \"cust1\"\n      },\n
        \     {\n        \"name\": \"cust2:eth1\",\n        \"type\": \"iana-if-type:ethernetCsmacd\",\n
        \       \"oper-status\": \"up\",\n        \"phys-address\": \"00:01:02:A1:B1:C2\",\n
        \       \"statistics\": {\n          \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
        \       },\n        \"ietf-logical-network-element:bind-lne-name\": \"cust2\"\n
        \     }\n    ]\n  },\n  \"ietf-system:system-state\": {\n    \"platform\":
        {\n      \"os-name\": \"NetworkOS\"\n    }\n  },\n  \"ietf-yang-library:modules-state\":
        {\n    \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n    \"module\":
        [\n      {\n        \"name\": \"iana-if-type\",\n        \"revision\": \"2014-05-08\",\n
        \       \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n        \"conformance-type\":
        \"import\"\n      },\n      {\n        \"name\": \"ietf-inet-types\",\n        \"revision\":
        \"2013-07-15\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n
        \       \"conformance-type\": \"import\"\n      },\n      {\n        \"name\":
        \"ietf-interfaces\",\n        \"revision\": \"2014-05-08\",\n        \"feature\":
        [\n          \"arbitrary-names\",\n          \"pre-provisioning\"\n        ],\n
        \       \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n
        \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
        \"ietf-ip\",\n        \"revision\": \"2014-06-16\",\n        \"namespace\":
        \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n        \"conformance-type\": \"implement\"\n
        \     },\n      {\n        \"name\": \"ietf-logical-network-element\",\n        \"revision\":
        \"2017-03-13\",\n        \"feature\": [\n          \"bind-lne-name\"\n        ],\n
        \       \"namespace\":\n          \"urn:ietf:params:xml:ns:yang:ietf-logical-network-element\",\n
        \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
        \"ietf-ospf\",\n        \"revision\": \"2018-03-03\",\n        \"namespace\":
        \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n        \"conformance-type\":
        \"implement\"\n      },\n      {\n        \"name\": \"ietf-routing\",\n        \"revision\":
        \"2018-03-13\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
        \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
        \"ietf-system\",\n        \"revision\": \"2014-08-06\",\n        \"namespace\":
        \"urn:ietf:params:xml:ns:yang:ietf-system\",\n        \"conformance-type\":
        \"implement\"\n      },\n      {\n        \"name\": \"ietf-yang-library\",\n
        \       \"revision\": \"2016-06-21\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
        \       \"conformance-type\": \"implement\"\n      },\n      {\n        \"name\":
        \"ietf-yang-schema-mount\",\n        \"revision\": \"2017-05-16\",\n        \"namespace\":\n
        \         \"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\",\n        \"conformance-type\":
        \"implement\"\n      },\n      {\n        \"name\": \"ietf-yang-types\",\n
        \       \"revision\": \"2013-07-15\",\n        \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
        \       \"conformance-type\": \"import\"\n      }\n    ]\n  },\n  \"ietf-yang-schema-mount:schema-mounts\":
        {\n    \"mount-point\": [\n      {\n        \"module\": \"ietf-logical-network-element\",\n
        \       \"label\": \"root\",\n        \"shared-schema\": {}\n      }\n    ]\n
        \ }\n"
      - '}

        '
      title: A.1.2.  State Data
    title: 'A.1.  Example: Host-Device-Managed LNE'
  - contents:
    - "A.2.  Example: Self-Managed LNE\n   This section describes an example of the
      LNE model using schema mount\n   to achieve child-independent management.  An
      example device supports\n   multiple instances of LNEs (logical routers), each
      of which has the\n   features of Layer 2 and Layer 3 interfaces [RFC8343], a
      routing\n   information base [RFC8349], and the OSPF protocol.  Each of these\n
      \  features is specified by a YANG model, and they are put together by\n   the
      YANG schema mount as follows:\n    module: ietf-logical-network-element\n      +--rw
      logical-network-elements\n         +--rw logical-network-element* [name]\n            +--rw
      name           string\n            +--mp root\n               // The internal
      modules of the LNE are not visible to\n               // the parent management.\n
      \              // The child manages its modules, including ietf-routing\n               //
      and ietf-interfaces\n    module: ietf-interfaces\n      +--rw interfaces\n         +--rw
      interface* [name]\n            +--rw name                        string\n            +--rw
      lne:bind-lne-name?          string\n            +--ro oper-status        enumeration\n
      \   module: ietf-yang-library\n      +--ro modules-state\n         +--ro module-set-id
      \   string\n         +--ro module* [name revision]\n            +--ro name                yang:yang-identifier\n
      \   module: ietf-system\n      +--rw system\n      |  +--rw contact?          string\n
      \     |  +--rw hostname?         inet:domain-name\n      |  +--rw authentication
      {authentication}?\n      |     +--rw user-authentication-order*   identityref\n
      \     |     +--rw user* [name] {local-users}?\n      |        +--rw name              string\n
      \     |        +--rw password?         ianach:crypt-hash\n      |        +--rw
      authorized-key* [name]\n      |           +--rw name         string\n      |
      \          +--rw algorithm    string\n      |           +--rw key-data     binary\n
      \     +--ro system-state\n         +--ro platform\n         |  +--ro os-name?
      \     string\n         |  +--ro os-release?   string\n   To realize the above
      schema, the device implements the following\n   schema mount instance:\n   \"ietf-yang-schema-mount:schema-mounts\":
      {\n     \"mount-point\": [\n       {\n         \"module\": \"ietf-logical-network-element\",\n
      \        \"label\": \"root\",\n         \"inline\": {}\n       }\n     ]\n   }\n
      \  By using the implementation of the YANG schema mount, an operator can\n   create
      instances of logical routers, each with their logical router-\n   specific inline
      modules.  An interface can be assigned to a logical\n   router, so that the
      logical router has the permission to access this\n   interface.  The OSPF protocol
      can then be enabled on this assigned\n   interface.  Each logical router independently
      manages its own set of\n   modules, which may or may not be the same as other
      logical routers.\n   The following is an example of schema set implemented on
      one\n   particular logical router:\n    module: ietf-yang-library\n      +--ro
      modules-state\n         +--ro module-set-id    string\n         +--ro module*
      [name revision]\n            +--ro name                yang:yang-identifier\n
      \   module: ietf-system\n      +--rw system\n      |  +--rw contact?          string\n
      \     |  +--rw hostname?         inet:domain-name\n      |  +--rw authentication
      {authentication}?\n      |     +--rw user-authentication-order*   identityref\n
      \     |     +--rw user* [name] {local-users}?\n      |        +--rw name              string\n
      \     |        +--rw password?         ianach:crypt-hash\n      |        +--rw
      authorized-key* [name]\n      |           +--rw name         string\n      |
      \          +--rw algorithm    string\n      |           +--rw key-data     binary\n
      \     +--ro system-state\n         +--ro platform\n         |  +--ro os-name?
      \     string\n         |  +--ro os-release?   string\n    module: ietf-routing\n
      \     +--rw routing\n         +--rw router-id?                 yang:dotted-quad\n
      \        +--rw control-plane-protocols\n            +--rw control-plane-protocol*
      [type name]\n               +--rw ospf:ospf/\n                  +--rw areas\n
      \                   +--rw area* [area-id]\n                       +--rw interfaces\n
      \                         +--rw interface* [name]\n                             +--rw
      name    if:interface-ref\n                             +--rw cost?   uint16\n
      \   module: ietf-interfaces\n      +--rw interfaces\n         +--rw interface*
      [name]\n            +--rw name                        string\n            +--ro
      oper-status        enumeration\n"
    - contents:
      - "A.2.1.  Configuration Data\n   Each of the child virtual routers is managed
        through its own sessions\n   and configuration data.\n"
      - contents:
        - "A.2.1.1.  Logical Network Element 'vnf1'\n   The following shows an example
          of configuration data for the LNE name\n   \"vnf1\":\n   {\n     \"ietf-system:system\":
          {\n       \"authentication\": {\n         \"user\": [\n           {\n             \"name\":
          \"john\",\n             \"password\": \"$0$password\"\n           }\n         ]\n
          \      }\n     },\n     \"ietf-routing:routing\": {\n       \"router-id\":
          \"192.0.2.1\",\n       \"control-plane-protocols\": {\n         \"control-plane-protocol\":
          [\n           {\n             \"type\": \"ietf-routing:ospf\",\n             \"name\":
          \"1\",\n             \"ietf-ospf:ospf\": {\n               \"af\": \"ipv4\",\n
          \              \"areas\": {\n                 \"area\": [\n                   {\n
          \                    \"area-id\": \"203.0.113.1\",\n                     \"interfaces\":
          {\n                       \"interface\": [\n                         {\n
          \                          \"name\": \"eth1\",\n                           \"cost\":
          10\n                         }\n                       ]\n                     }\n
          \                  }\n                 ]\n               }\n             }\n
          \          }\n         ]\n       }\n     },\n     \"ietf-interfaces:interfaces\":
          {\n       \"interface\": [\n         {\n           \"name\": \"eth1\",\n
          \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\":
          {\n             \"address\": [\n               {\n                 \"ip\":
          \"192.0.2.11\",\n                 \"prefix-length\": 24\n               }\n
          \            ]\n           }\n         }\n       ]\n     }\n   }\n"
        title: A.2.1.1.  Logical Network Element 'vnf1'
      - contents:
        - "A.2.1.2.  Logical Network Element 'vnf2'\n   The following shows an example
          of configuration data for the LNE name\n   \"vnf2\":\n   {\n     \"ietf-system:system\":
          {\n       \"authentication\": {\n         \"user\": [\n           {\n             \"name\":
          \"john\",\n             \"password\": \"$0$password\"\n           }\n         ]\n
          \      }\n     },\n     \"ietf-routing:routing\": {\n       \"router-id\":
          \"192.0.2.2\",\n       \"control-plane-protocols\": {\n         \"control-plane-protocol\":
          [\n           {\n             \"type\": \"ietf-routing:ospf\",\n             \"name\":
          \"1\",\n             \"ietf-ospf:ospf\": {\n               \"af\": \"ipv4\",\n
          \              \"areas\": {\n                 \"area\": [\n                   {\n
          \                    \"area-id\": \"203.0.113.1\",\n                     \"interfaces\":
          {\n                       \"interface\": [\n                         {\n
          \                          \"name\": \"eth1\",\n                           \"cost\":
          10\n                         }\n                       ]\n                     }\n
          \                  }\n                 ]\n               }\n             }\n
          \          }\n         ]\n       }\n     },\n     \"ietf-interfaces:interfaces\":
          {\n       \"interface\": [\n         {\n           \"name\": \"eth1\",\n
          \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"ietf-ip:ipv4\":
          {\n             \"address\": [\n               {\n                 \"ip\":
          \"192.0.2.11\",\n                 \"prefix-length\": 24\n               }\n
          \            ]\n           }\n         }\n       ]\n     }\n   }\n"
        title: A.2.1.2.  Logical Network Element 'vnf2'
      title: A.2.1.  Configuration Data
    - contents:
      - "A.2.2.  State Data\n   The following sections show possible state data associated
        with the\n   above configuration data.  Note that there are three views: the
        host\n   device's view and each of the LNE's views.\n"
      - contents:
        - "A.2.2.1.  Host Device\n   The following shows state data for the device
          hosting the example\n   LNEs:\n   {\n     \"ietf-logical-network-element:logical-network-elements\":
          {\n       \"logical-network-element\": [\n         {\n           \"name\":
          \"vnf1\",\n           \"root\": {\n           }\n         },\n         {\n
          \          \"name\": \"vnf2\",\n           \"root\": {\n           }\n         }\n
          \      ]\n     },\n     \"ietf-interfaces:interfaces\": {\n       \"interface\":
          [\n         {\n           \"name\": \"eth0\",\n           \"type\": \"iana-if-type:ethernetCsmacd\",\n
          \          \"oper-status\": \"up\",\n           \"phys-address\": \"00:01:02:A1:B1:C0\",\n
          \          \"statistics\": {\n             \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
          \          },\n           \"ietf-ip:ipv4\": {\n             \"address\":
          [\n               {\n                 \"ip\": \"192.0.2.10\",\n                 \"prefix-length\":
          24\n               }\n             ]\n           }\n         },\n         {\n
          \          \"name\": \"vnf1:eth1\",\n           \"type\": \"iana-if-type:ethernetCsmacd\",\n
          \          \"oper-status\": \"up\",\n           \"phys-address\": \"00:01:02:A1:B1:C1\",\n
          \          \"statistics\": {\n             \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
          \          },\n           \"ietf-logical-network-element:bind-lne-name\":
          \"vnf1\"\n         },\n         {\n           \"name\": \"vnf2:eth2\",\n
          \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"oper-status\":
          \"up\",\n           \"phys-address\": \"00:01:02:A1:B1:C2\",\n           \"statistics\":
          {\n             \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
          \          },\n           \"ietf-logical-network-element:bind-lne-name\":
          \"vnf2\"\n         }\n       ]\n     },\n     \"ietf-system:system-state\":
          {\n       \"platform\": {\n         \"os-name\": \"NetworkOS\"\n       }\n
          \    },\n     \"ietf-yang-library:modules-state\": {\n       \"module-set-id\":
          \"123e4567-e89b-12d3-a456-426655440000\",\n       \"module\": [\n         {\n
          \          \"name\": \"iana-if-type\",\n           \"revision\": \"2014-05-08\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n
          \          \"conformance-type\": \"import\"\n         },\n         {\n           \"name\":
          \"ietf-inet-types\",\n           \"revision\": \"2013-07-15\",\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n           \"conformance-type\":
          \"import\"\n         },\n         {\n           \"name\": \"ietf-interfaces\",\n
          \          \"revision\": \"2014-05-08\",\n           \"feature\": [\n             \"arbitrary-names\",\n
          \            \"pre-provisioning\"\n           ],\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n           \"conformance-type\":
          \"implement\"\n         },\n         {\n           \"name\": \"ietf-ip\",\n
          \          \"revision\": \"2014-06-16\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-logical-network-element\",\n           \"revision\":
          \"2017-03-13\",\n           \"feature\": [\n             \"bind-lne-name\"\n
          \          ],\n           \"namespace\":\n             \"urn:ietf:params:xml:ns:yang:ietf-logical-network-element\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-system\",\n           \"revision\": \"2014-08-06\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-library\",\n           \"revision\": \"2016-06-21\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-schema-mount\",\n           \"revision\":
          \"2017-05-16\",\n           \"namespace\":\n             \"urn:ietf:params:xml:ns:yang:ietf-yang-schema-mount\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-types\",\n           \"revision\": \"2013-07-15\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
          \          \"conformance-type\": \"import\"\n         }\n       ]\n     },\n
          \    \"ietf-yang-schema-mount:schema-mounts\": {\n       \"mount-point\":
          [\n         {\n           \"module\": \"ietf-logical-network-element\",\n
          \          \"label\": \"root\",\n           \"inline\": {}\n         }\n
          \      ]\n     }\n   }\n"
        title: A.2.2.1.  Host Device
      - contents:
        - "A.2.2.2.  Logical Network Element 'vnf1'\n   The following shows state
          data for the example LNE with the name\n   \"vnf1\":\n   {\n     \"ietf-yang-library:modules-state\":
          {\n       \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
          \      \"module\": [\n         {\n           \"name\": \"iana-if-type\",\n
          \          \"revision\": \"2014-05-08\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n
          \          \"conformance-type\": \"import\"\n         },\n         {\n           \"name\":
          \"ietf-inet-types\",\n           \"revision\": \"2013-07-15\",\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n           \"conformance-type\":
          \"import\"\n         },\n         {\n           \"name\": \"ietf-interfaces\",\n
          \          \"revision\": \"2014-05-08\",\n           \"feature\": [\n             \"arbitrary-names\",\n
          \            \"pre-provisioning\"\n           ],\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n           \"conformance-type\":
          \"implement\"\n         },\n         {\n           \"name\": \"ietf-ip\",\n
          \          \"revision\": \"2014-06-16\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-ospf\",\n           \"revision\": \"2018-03-03\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n           \"conformance-type\":
          \"implement\"\n         },\n         {\n           \"name\": \"ietf-routing\",\n
          \          \"revision\": \"2018-03-13\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-system\",\n           \"revision\": \"2014-08-06\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-library\",\n           \"revision\": \"2016-06-21\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-types\",\n           \"revision\": \"2013-07-15\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
          \          \"conformance-type\": \"import\"\n         }\n       ]\n     },\n
          \    \"ietf-system:system-state\": {\n       \"platform\": {\n         \"os-name\":
          \"NetworkOS\"\n       }\n     },\n     \"ietf-routing:routing\": {\n       \"router-id\":
          \"192.0.2.1\",\n       \"control-plane-protocols\": {\n         \"control-plane-protocol\":
          [\n           {\n             \"type\": \"ietf-routing:ospf\",\n             \"name\":
          \"1\",\n             \"ietf-ospf:ospf\": {\n               \"af\": \"ipv4\",\n
          \              \"areas\": {\n                 \"area\": [\n                   {\n
          \                    \"area-id\": \"203.0.113.1\",\n                     \"interfaces\":
          {\n                       \"interface\": [\n                         {\n
          \                          \"name\": \"eth1\",\n                           \"cost\":
          10\n                         }\n                       ]\n                     }\n
          \                  }\n                 ]\n               }\n             }\n
          \          }\n         ]\n       }\n     },\n     \"ietf-interfaces:interfaces\":
          {\n       \"interface\": [\n         {\n           \"name\": \"eth1\",\n
          \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"oper-status\":
          \"up\",\n           \"phys-address\": \"00:01:02:A1:B1:C1\",\n           \"statistics\":
          {\n             \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
          \          },\n           \"ietf-ip:ipv4\": {\n             \"address\":
          [\n               {\n                 \"ip\": \"192.0.2.11\",\n                 \"prefix-length\":
          24\n               }\n             ]\n           }\n         }\n       ]\n
          \    }\n   }\n"
        title: A.2.2.2.  Logical Network Element 'vnf1'
      - contents:
        - "A.2.2.3.  Logical Network Element 'vnf2'\n   The following shows state
          data for the example LNE with the name\n   \"vnf2\":\n   {\n     \"ietf-yang-library:modules-state\":
          {\n       \"module-set-id\": \"123e4567-e89b-12d3-a456-426655440000\",\n
          \      \"module\": [\n         {\n           \"name\": \"iana-if-type\",\n
          \          \"revision\": \"2014-05-08\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:iana-if-type\",\n
          \          \"conformance-type\": \"import\"\n         },\n         {\n           \"name\":
          \"ietf-inet-types\",\n           \"revision\": \"2013-07-15\",\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-inet-types\",\n           \"conformance-type\":
          \"import\"\n         },\n         {\n           \"name\": \"ietf-interfaces\",\n
          \          \"revision\": \"2014-05-08\",\n           \"feature\": [\n             \"arbitrary-names\",\n
          \            \"pre-provisioning\"\n           ],\n           \"namespace\":
          \"urn:ietf:params:xml:ns:yang:ietf-interfaces\",\n           \"conformance-type\":
          \"implement\"\n         },\n         {\n           \"name\": \"ietf-ip\",\n
          \          \"revision\": \"2014-06-16\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ip\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-ospf\",\n           \"revision\": \"2018-03-03\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-ospf\",\n           \"conformance-type\":
          \"implement\"\n         },\n         {\n           \"name\": \"ietf-routing\",\n
          \          \"revision\": \"2018-03-13\",\n           \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-routing\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-system\",\n           \"revision\": \"2014-08-06\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-system\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-library\",\n           \"revision\": \"2016-06-21\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-library\",\n
          \          \"conformance-type\": \"implement\"\n         },\n         {\n
          \          \"name\": \"ietf-yang-types\",\n           \"revision\": \"2013-07-15\",\n
          \          \"namespace\": \"urn:ietf:params:xml:ns:yang:ietf-yang-types\",\n
          \          \"conformance-type\": \"import\"\n         }\n       ]\n     },\n
          \    \"ietf-system:system-state\": {\n       \"platform\": {\n         \"os-name\":
          \"NetworkOS\"\n       }\n     },\n     \"ietf-routing:routing\": {\n       \"router-id\":
          \"192.0.2.2\",\n       \"control-plane-protocols\": {\n         \"control-plane-protocol\":
          [\n           {\n             \"type\": \"ietf-routing:ospf\",\n             \"name\":
          \"1\",\n             \"ietf-ospf:ospf\": {\n               \"af\": \"ipv4\",\n
          \              \"areas\": {\n                 \"area\": [\n                   {\n
          \                    \"area-id\": \"203.0.113.1\",\n                     \"interfaces\":
          {\n                       \"interface\": [\n                         {\n
          \                          \"name\": \"eth1\",\n                           \"cost\":
          10\n                         }\n                       ]\n                     }\n
          \                  }\n                 ]\n               }\n             }\n
          \          }\n         ]\n       }\n     },\n     \"ietf-interfaces:interfaces\":
          {\n       \"interface\": [\n         {\n           \"name\": \"eth1\",\n
          \          \"type\": \"iana-if-type:ethernetCsmacd\",\n           \"oper-status\":
          \"up\",\n           \"phys-address\": \"00:01:02:A1:B1:C2\",\n           \"statistics\":
          {\n             \"discontinuity-time\": \"2017-06-26T12:34:56-05:00\"\n
          \          },\n           \"ietf-ip:ipv4\": {\n             \"address\":
          [\n               {\n                 \"ip\": \"192.0.2.11\",\n                 \"prefix-length\":
          24\n               }\n             ]\n           }\n         }\n       ]\n
          \    }\n   }\n"
        title: A.2.2.3.  Logical Network Element 'vnf2'
      title: A.2.2.  State Data
    title: 'A.2.  Example: Self-Managed LNE'
  title: Appendix A.  Examples
- contents:
  - "Acknowledgments\n   The Routing Area Yang Architecture design team members included
    Acee\n   Lindem, Anees Shaikh, Christian Hopps, Dean Bogdanovic, Lou Berger,\n
    \  Qin Wu, Rob Shakir, Stephane Litkowski, and Yan Gang.  Useful review\n   comments
    were also received by Martin Bjorklund, John Scudder, Dan\n   Romascanu, and Taylor
    Yu.\n   This document was motivated by, and derived from \"Network Device YANG\n
    \  Logical Organization\" [DEVICE-MODEL].\n   Thanks to Alvaro Retana for the
    IESG review.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Lou Berger\n   LabN Consulting, L.L.C.\n   Email: lberger@labn.net\n
    \  Christian Hopps\n   LabN Consulting, L.L.C.\n   Email: chopps@chopps.org\n
    \  Acee Lindem\n   Cisco Systems\n   301 Midenhall Way\n   Cary, NC  27513\n   United
    States of America\n   Email: acee@cisco.com\n   Dean Bogdanovic\n   Volta Networks\n
    \  Email: ivandean@gmail.com\n   Xufeng Liu\n   Volta Networks\n   Email: xufeng.liu.ietf@gmail.com\n"
  title: Authors' Addresses
