- title: __initial_text__
  contents:
  - '         DHCPv6-Shield: Protecting against Rogue DHCPv6 Servers

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a mechanism for protecting hosts connected\
    \ to\n   a switched network against rogue DHCPv6 servers.  It is based on\n  \
    \ DHCPv6 packet filtering at the layer 2 device at which the packets\n   are received.\
    \  A similar mechanism has been widely deployed in IPv4\n   networks ('DHCP snooping');\
    \ hence, it is desirable that similar\n   functionality be provided for IPv6 networks.\
    \  This document specifies\n   a Best Current Practice for the implementation\
    \ of DHCPv6-Shield.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo documents an Internet Best Current Practice.\n\
    \   This document is a product of the Internet Engineering Task Force\n   (IETF).\
    \  It represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   BCPs is available in Section\
    \ 2 of RFC 5741.\n   Information about the current status of this document, any\
    \ errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7610.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Requirements Language ...........................................3\n  \
    \ 3. Terminology .....................................................3\n   4.\
    \ DHCPv6-Shield Configuration .....................................5\n   5. DHCPv6-Shield\
    \ Implementation Requirements .......................5\n   6. Security Considerations\
    \ .........................................7\n   7. References ......................................................9\n\
    \      7.1. Normative References .......................................9\n  \
    \    7.2. Informative References ....................................10\n   Acknowledgements\
    \ ..................................................11\n   Authors' Addresses\
    \ ................................................12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies DHCPv6-Shield, a mechanism for protecting\n\
    \   hosts connected to a switched network against rogue DHCPv6 servers\n   [RFC3315].\
    \  The basic concept behind DHCPv6-Shield is that a layer 2\n   device filters\
    \ DHCPv6 messages intended for DHCPv6 clients\n   (henceforth, \"DHCPv6-server\
    \ messages\"), according to a number of\n   different criteria.  The most basic\
    \ filtering criterion is that\n   DHCPv6-server messages are discarded by the\
    \ layer 2 device unless\n   they are received on specific ports of the layer 2\
    \ device.\n   Before the DHCPv6-Shield device is deployed, the administrator\n\
    \   specifies the layer 2 port(s) on which DHCPv6-server messages are to\n   be\
    \ allowed.  Only those ports to which a DHCPv6 server or relay is to\n   be connected\
    \ should be specified as such.  Once deployed, the\n   DHCPv6-Shield device inspects\
    \ received packets and allows (i.e.,\n   passes) DHCPv6-server messages only if\
    \ they are received on layer 2\n   ports that have been explicitly configured\
    \ for such purpose.\n   DHCPv6-Shield is analogous to the Router Advertisement\
    \ Guard\n   (RA-Guard) mechanism [RFC6104] [RFC6105] [RFC7113], intended for\n\
    \   protection against rogue Router Advertisement [RFC4861] messages.\n   We note\
    \ that DHCPv6-Shield mitigates only DHCPv6-based attacks\n   against hosts.  Attack\
    \ vectors based on other messages meant for\n   network configuration (such as\
    \ ICMPv6 Router Advertisements) are not\n   addressed by DHCPv6-Shield itself.\
    \  In a similar vein, DHCPv6-Shield\n   does not mitigate attacks against DHCPv6\
    \ servers (e.g., Denial of\n   Service).\n"
- title: 2.  Requirements Language
  contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in RFC 2119 [RFC2119].\n"
- title: 3.  Terminology
  contents:
  - "3.  Terminology\n   DHCPv6-Shield:\n      The set of filtering rules specified\
    \ in this document, meant to\n      mitigate attacks that employ DHCPv6-server\
    \ packets.\n   DHCPv6-Shield device:\n      A layer 2 device (typically a layer\
    \ 2 switch) that enforces the\n      filtering policy specified in this document.\n\
    \   For the purposes of this document, the terms \"IPv6 Extension Header\",\n\
    \   \"First Fragment\", \"IPv6 Header Chain\", and \"Upper-Layer Header\" are\n\
    \   used as specified in [RFC7112]:\n   IPv6 Extension Header:\n      IPv6 Extension\
    \ Headers are defined in Section 4 of [RFC2460].  As\n      a result of [RFC7045],\
    \ [IANA-PROTO] provides a list of assigned\n      Internet Protocol Numbers and\
    \ designates which of those protocol\n      numbers also represent IPv6 Extension\
    \ Headers.\n   First Fragment:\n      An IPv6 fragment with a Fragment Offset\
    \ equal to 0.\n   IPv6 Header Chain:\n      The IPv6 Header Chain contains an\
    \ initial IPv6 header, zero or\n      more IPv6 Extension Headers, and optionally,\
    \ a single Upper-Layer\n      Header.  If an Upper-Layer Header is present, it\
    \ terminates the\n      IPv6 Header Chain; otherwise, the \"No Next Header\" value\
    \ (Next\n      Header = 59) terminates it.\n      The first member of the IPv6\
    \ Header Chain is always an IPv6\n      header.  For a subsequent header to qualify\
    \ as a member of the\n      IPv6 Header Chain, it must be referenced by the \"\
    Next Header\"\n      field of the previous member of the IPv6 Header Chain.  However,\n\
    \      if a second IPv6 header appears in the IPv6 Header Chain, as is\n     \
    \ the case when IPv6 is tunneled over IPv6, the second IPv6 header\n      is considered\
    \ to be an Upper-Layer Header and terminates the IPv6\n      Header Chain.  Likewise,\
    \ if an Encapsulating Security Payload\n      (ESP) header appears in the IPv6\
    \ Header Chain, it is considered to\n      be an Upper-Layer Header, and it terminates\
    \ the IPv6 Header Chain.\n   Upper-Layer Header:\n      In the general case, the\
    \ Upper-Layer Header is the first member of\n      the Header Chain that is neither\
    \ an IPv6 header nor an IPv6\n      Extension Header.  However, if either an ESP\
    \ header or a second\n      IPv6 header occurs in the IPv6 Header Chain, it is\
    \ considered to\n      be an Upper-Layer Header, and it terminates the IPv6 Header\
    \ Chain.\n      Neither the upper-layer payload nor any protocol data following\n\
    \      the upper-layer payload is considered to be part of the IPv6\n      Header\
    \ Chain.  In a simple example, if the Upper-Layer Header is a\n      TCP header,\
    \ the TCP payload is not part of the IPv6 Header Chain.\n      In a more complex\
    \ example, if the Upper-Layer Header is an ESP\n      header, neither the payload\
    \ data nor any of the fields that follow\n      the payload data in the ESP header\
    \ are part of the IPv6 Header\n      Chain.\n"
- title: 4.  DHCPv6-Shield Configuration
  contents:
  - "4.  DHCPv6-Shield Configuration\n   Before being deployed for production, the\
    \ DHCPv6-Shield device is\n   explicitly configured with respect to which layer\
    \ 2 ports are allowed\n   to receive DHCPv6 packets destined to DHCPv6 clients\
    \ (i.e.,\n   DHCPv6-server messages).  Only those layer 2 ports explicitly\n \
    \  configured for such purpose are allowed to receive DHCPv6 packets to\n   pass\
    \ to DHCPv6 clients.\n"
- title: 5.  DHCPv6-Shield Implementation Requirements
  contents:
  - "5.  DHCPv6-Shield Implementation Requirements\n   Following are the filtering\
    \ rules that are enforced as part of a\n   DHCPv6-Shield implementation on those\
    \ ports that are not allowed to\n   receive DHCPv6 packets to DHCPv6 clients:\n\
    \   1.  DHCPv6-Shield implementations MUST parse the entire IPv6 Header\n    \
    \   Chain present in the packet to identify whether or not it is a\n       DHCPv6\
    \ packet meant for a DHCPv6 client (i.e., a DHCPv6-server\n       message).\n\
    \          RATIONALE: DHCPv6-Shield implementations MUST NOT enforce a\n     \
    \     limit on the number of bytes they can inspect (starting from\n         \
    \ the beginning of the IPv6 packet), since this could introduce\n          false\
    \ negatives: DHCP6-server packets received on ports not\n          allowed to\
    \ receive such packets could be allowed simply\n          because the DHCPv6-Shield\
    \ device does not parse the entire\n          IPv6 Header Chain present in the\
    \ packet.\n   2.  When parsing the IPv6 Header Chain, if the packet is a First\n\
    \       Fragment (i.e., a packet containing a Fragment Header with the\n     \
    \  Fragment Offset set to 0) and it fails to contain the entire IPv6\n       Header\
    \ Chain (i.e., all the headers starting from the IPv6 header\n       up to, and\
    \ including, the Upper-Layer Header), DHCPv6-Shield MUST\n       drop the packet\
    \ and ought to log the packet drop event in an\n       implementation-specific\
    \ manner as a security fault.\n          RATIONALE: Packets that fail to contain\
    \ the entire IPv6 Header\n          Chain could otherwise be leveraged for circumventing\n\
    \          DHCPv6-Shield.  [RFC7112] requires that the First Fragment\n      \
    \    (i.e., the fragment with the Fragment Offset set to 0) contain\n        \
    \  the entire IPv6 Header Chain.  [RFC7112] also allows\n          intermediate\
    \ systems such as routers to drop packets that fail\n          to comply with\
    \ this requirement.\n          NOTE: This rule should only be applied to IPv6\
    \ fragments with\n          a Fragment Offset of 0 (non-First Fragments can be\
    \ safely\n          passed, since they will never reassemble into a complete\n\
    \          datagram if they are part of a DHCPv6 packet meant for a\n        \
    \  DHCPv6 client received on a port where such packets are not\n          allowed).\n\
    \   3.  DHCPv6-Shield MUST provide a configuration knob that controls\n      \
    \ whether or not packets with unrecognized Next Header values are\n       dropped;\
    \ this configuration knob MUST default to \"drop\".  When\n       parsing the\
    \ IPv6 Header Chain, if the packet contains an\n       unrecognized Next Header\
    \ value and the configuration knob is\n       configured to \"drop\", DHCPv6-Shield\
    \ MUST drop the packet and\n       ought to log the packet drop event in an implementation-specific\n\
    \       manner as a security fault.\n          RATIONALE: An unrecognized Next\
    \ Header value could possibly\n          identify an IPv6 Extension Header and\
    \ thus be leveraged to\n          conceal a DHCPv6-server packet (since there\
    \ is no way for\n          DHCPv6-Shield to parse past unrecognized Next Header\
    \ values\n          [IPV6-UEH]).  [RFC7045] requires that nodes be configurable\n\
    \          with respect to whether or not packets with unrecognized\n        \
    \  headers are forwarded and allows the default behavior to be\n          that\
    \ such packets be dropped.\n   4.  When parsing the IPv6 Header Chain, if the\
    \ packet is identified\n       to be a DHCPv6 packet meant for a DHCPv6 client,\
    \ DHCPv6-Shield\n       MUST drop the packet and SHOULD log the packet drop event\
    \ in an\n       implementation-specific manner as a security alert.\n        \
    \  RATIONALE: Ultimately, the goal of DHCPv6-Shield is to drop\n          DHCPv6\
    \ packets destined to DHCPv6 clients (i.e., DHCPv6-server\n          messages)\
    \ that are received on ports that have not been\n          explicitly configured\
    \ to allow the receipt of such packets.\n   5.  In all other cases, DHCPv6-Shield\
    \ MUST pass the packet as usual.\n      NOTE: For the purpose of enforcing the\
    \ DHCPv6-Shield filtering\n      policy, an ESP header [RFC4303] should be considered\
    \ to be an\n      \"upper-layer protocol\" (that is, it should be considered the\
    \ last\n      header in the IPv6 Header Chain).  This means that packets\n   \
    \   employing ESP would be passed by the DHCPv6-Shield device to the\n      intended\
    \ destination.  If the destination host does not have a\n      security association\
    \ with the sender of the aforementioned IPv6\n      packet, the packet would be\
    \ dropped.  Otherwise, if the packet is\n      considered valid by the IPsec implementation\
    \ at the receiving host\n      and encapsulates a DHCPv6 message, what to do with\
    \ such a packet\n      is up to the receiving host.\n   The rules above indicate\
    \ that if a packet is dropped due to this\n   filtering policy, the packet drop\
    \ event should be logged in an\n   implementation-specific manner as a security\
    \ fault.  It is useful for\n   the logging mechanism to include a per-port drop\
    \ counter dedicated to\n   DHCPv6-Shield packet drops.\n   In order to protect\
    \ current end-node IPv6 implementations, Rule #2\n   has been defined such that\
    \ the default is for packets that cannot be\n   positively identified as not being\
    \ DHCPv6-server packets (because the\n   packet is a fragment that fails to include\
    \ the entire IPv6 Header\n   Chain) to be dropped.  This means that, at least\
    \ in theory,\n   DHCPv6-Shield could result in false-positive blocking of some\n\
    \   legitimate (non-DHCPv6-server) packets.  However, as noted in\n   [RFC7112],\
    \ IPv6 packets that fail to include the entire IPv6 Header\n   Chain are virtually\
    \ impossible to police with stateless filters and\n   firewalls; hence, they are\
    \ unlikely to survive in real networks.\n   [RFC7112] requires that hosts employing\
    \ fragmentation include the\n   entire IPv6 Header Chain in the First Fragment\
    \ (the fragment with the\n   Fragment Offset set to 0), thus eliminating the aforementioned\
    \ false\n   positives.\n   The aforementioned filtering rules implicitly handle\
    \ the case of\n   fragmented packets: if the DHCPv6-Shield device fails to identify\
    \ the\n   upper-layer protocol as a result of the use of fragmentation, the\n\
    \   corresponding packets would be dropped.\n   Finally, we note that IPv6 implementations\
    \ that allow overlapping\n   fragments (i.e., that do not comply with [RFC5722])\
    \ might still be\n   subject of DHCPv6-based attacks.  However, a recent assessment\
    \ of\n   IPv6 implementations [SI6-FRAG] with respect to their fragment\n   reassembly\
    \ policy seems to indicate that most current implementations\n   comply with [RFC5722].\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The recommendations in this document represent\
    \ the ideal behavior of\n   a DHCPv6-Shield device.  However, in order to implement\
    \ DHCPv6-Shield\n   on the fast path, it may be necessary to limit the depth into\
    \ the\n   packet that can be scanned before giving up.  In circumstances where\n\
    \   there is such a limitation, it is recommended that implementations\n   drop\
    \ packets after attempting to find a protocol header up to that\n   limit, whatever\
    \ it is.  Ideally, such devices should be configurable\n   with a list of protocol\
    \ header identifiers so that if new transport\n   protocols are standardized after\
    \ the device is released, they can be\n   added to the list of protocol header\
    \ types that the device\n   recognizes.  Since any protocol header that is not\
    \ a UDP header would\n   be passed by the DHCPv6-Shield algorithm, this would\
    \ allow such\n   devices to avoid blocking the use of new transport protocols.\
    \  When\n   an implementation must stop searching for recognizable header types\n\
    \   in a packet due to such limitations, the device SHOULD be\n   configurable\
    \ to either pass or drop that packet.\n   The mechanism specified in this document\
    \ can be used to mitigate\n   DHCPv6-based attacks against hosts.  Attack vectors\
    \ based on other\n   messages meant for network configuration (such as ICMPv6\
    \ Router\n   Advertisements) are out of the scope of this document.  Additionally,\n\
    \   the mechanism specified in this document does not mitigate attacks\n   against\
    \ DHCPv6 servers (e.g., Denial of Service).\n   If deployed in a layer 2 domain\
    \ with several cascading switches,\n   there will be an ingress port on the host's\
    \ local switch that will\n   need to be enabled for receiving DHCPv6-server messages.\
    \  However,\n   this local switch will be reliant on the upstream devices filtering\n\
    \   out rogue DHCPv6-server messages, as the local switch has no way of\n   determining\
    \ which upstream DHCP-server messages are valid.\n   Therefore, in order to be\
    \ effective, DHCPv6-Shield should be deployed\n   and enabled on all layer 2 switches\
    \ of a given layer 2 domain.\n   As noted in Section 5, IPv6 implementations that\
    \ allow overlapping\n   fragments (i.e., that do not comply with [RFC5722]) might\
    \ still be\n   subject to DHCPv6-based attacks.  However, most current\n   implementations\
    \ seem to comply with [RFC5722] and hence forbid IPv6\n   overlapping fragments.\n\
    \   We note that if an attacker sends a fragmented DHCPv6 packet on a\n   port\
    \ not allowed to receive such packets, the First Fragment would be\n   dropped,\
    \ and the rest of the fragments would be passed.  This means\n   that the victim\
    \ node would tie memory buffers for the aforementioned\n   fragments, which would\
    \ never reassemble into a complete datagram.  If\n   a large number of such packets\
    \ were sent by an attacker, and the\n   victim node failed to implement proper\
    \ resource management for the\n   fragment reassembly buffer, this could lead\
    \ to a Denial of Service\n   (DoS).  However, this does not really introduce a\
    \ new attack vector,\n   since an attacker could always perform the same attack\
    \ by sending a\n   forged fragmented datagram in which at least one of the fragments\
    \ is\n   missing.  [CPNI-IPv6] discusses some resource management strategies\n\
    \   that could be implemented for the fragment reassembly buffer.\n   Additionally,\
    \ we note that the security of a site employing\n   DHCPv6-Shield could be further\
    \ improved by deploying [RFC7513] to\n   mitigate IPv6 address spoofing attacks.\n\
    \   Finally, we note that other mechanisms for mitigating attacks based\n   on\
    \ DHCPv6-server messages are available that have different\n   deployment considerations.\
    \  For example, [SECURE-DHCPV6] allows for\n   authentication of DHCPv6-server\
    \ packets if the IPv6 addresses of the\n   DHCPv6 servers can be pre-configured\
    \ at the client nodes.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]    Bradner, S., \"Key words for use\
    \ in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC 2119,\n\
    \                DOI 10.17487/RFC2119, March 1997,\n                <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC2460]    Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n \
    \               (IPv6) Specification\", RFC 2460, DOI 10.17487/RFC2460,\n    \
    \            December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n   [RFC3315]\
    \    Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              \
    \  C., and M. Carney, \"Dynamic Host Configuration Protocol\n                for\
    \ IPv6 (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n                2003,\
    \ <http://www.rfc-editor.org/info/rfc3315>.\n   [RFC4303]    Kent, S., \"IP Encapsulating\
    \ Security Payload (ESP)\", RFC\n                4303, DOI 10.17487/RFC4303, December\
    \ 2005,\n                <http://www.rfc-editor.org/info/rfc4303>.\n   [RFC4861]\
    \    Narten, T., Nordmark, E., Simpson, W., and H. Soliman,\n                \"\
    Neighbor Discovery for IP version 6 (IPv6)\", RFC 4861,\n                DOI 10.17487/RFC4861,\
    \ September 2007,\n                <http://www.rfc-editor.org/info/rfc4861>.\n\
    \   [RFC5722]    Krishnan, S., \"Handling of Overlapping IPv6 Fragments\",\n \
    \               RFC 5722, DOI 10.17487/RFC5722, December 2009,\n             \
    \   <http://www.rfc-editor.org/info/rfc5722>.\n   [RFC7045]    Carpenter, B. and\
    \ S. Jiang, \"Transmission and Processing\n                of IPv6 Extension Headers\"\
    , RFC 7045,\n                DOI 10.17487/RFC7045, December 2013,\n          \
    \      <http://www.rfc-editor.org/info/rfc7045>.\n   [RFC7112]    Gont, F., Manral,\
    \ V., and R. Bonica, \"Implications of\n                Oversized IPv6 Header\
    \ Chains\", RFC 7112,\n                DOI 10.17487/RFC7112, January 2014,\n \
    \               <http://www.rfc-editor.org/info/rfc7112>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CPNI-IPv6]  Gont, F., \"Security Assessment\
    \ of the Internet Protocol\n                version 6 (IPv6)\", UK Centre for\
    \ the Protection of\n                National Infrastructure, (available on request).\n\
    \   [IANA-PROTO] IANA, \"Protocol Numbers\",\n                <http://www.iana.org/assignments/protocol-numbers>.\n\
    \   [IPV6-UEH]   Gont, F., Liu, W., Krishnan, S., and H. Pfeifer, \"IPv6\n   \
    \             Universal Extension Header\", Work in Progress,\n              \
    \  draft-gont-6man-rfc6564bis-00, April 2014.\n   [RFC6104]    Chown, T. and S.\
    \ Venaas, \"Rogue IPv6 Router\n                Advertisement Problem Statement\"\
    , RFC 6104,\n                DOI 10.17487/RFC6104, February 2011,\n          \
    \      <http://www.rfc-editor.org/info/rfc6104>.\n   [RFC6105]    Levy-Abegnoli,\
    \ E., Van de Velde, G., Popoviciu, C., and\n                J.  Mohacsi, \"IPv6\
    \ Router Advertisement Guard\", RFC\n                6105, DOI 10.17487/RFC6105,\
    \ February 2011,\n                <http://www.rfc-editor.org/info/rfc6105>.\n\
    \   [RFC7113]    Gont, F., \"Implementation Advice for IPv6 Router\n         \
    \       Advertisement Guard (RA-Guard)\", RFC 7113,\n                DOI 10.17487/RFC7113,\
    \ February 2014,\n                <http://www.rfc-editor.org/info/rfc7113>.\n\
    \   [RFC7513]    Bi, J., Wu, J., Yao, G., and F. Baker, \"Source Address\n   \
    \             Validation Improvement (SAVI) Solution for DHCP\", RFC\n       \
    \         7513, DOI 10.17487/RFC7513, May 2015,\n                <http://www.rfc-editor.org/info/rfc7513>.\n\
    \   [SECURE-DHCPV6]\n                Jiang, S. and S. Shen, \"Secure DHCPv6 Using\
    \ CGAs\", Work\n                in Progress, draft-ietf-dhc-secure-dhcpv6-07,\
    \ September\n                2012.\n   [SI6-FRAG]   SI6 Networks, \"IPv6 NIDS\
    \ evasion and improvements in\n                IPv6 fragmentation/reassembly\"\
    , 2012,\n                <http://blog.si6networks.com/2012/02/\n             \
    \   ipv6-nids-evasion-and-improvements-in.html>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to thank Mike Heard, who provided\
    \ detailed\n   feedback on earlier draft versions of this document and helped\
    \ a lot\n   in producing a technically sound document throughout the whole\n \
    \  publication process.\n   The authors would like to thank (in alphabetical order)\
    \ Ben Campbell,\n   Jean-Michel Combes, Sheng Jiang, Ted Lemon, Pete Resnick,\
    \ Carsten\n   Schmoll, Juergen Schoenwaelder, Robert Sleigh, Donald Smith, Mark\n\
    \   Smith, Hannes Tschofenig, Eric Vyncke, and Qin Wu for providing\n   valuable\
    \ comments on earlier draft versions of this document.\n   Part of Section 3 of\
    \ this document was borrowed from [RFC7112],\n   authored by Fernando Gont, Vishwas\
    \ Manral, and Ron Bonica.\n   This document is heavily based on [RFC7113], authored\
    \ by Fernando\n   Gont.  Thus, the authors would like to thank the following\n\
    \   individuals for providing valuable comments on [RFC7113]: Ran\n   Atkinson,\
    \ Karl Auer, Robert Downie, Washam Fan, David Farmer, Mike\n   Heard, Marc Heuse,\
    \ Nick Hilliard, Ray Hunter, Joel Jaeggli, Simon\n   Perreault, Arturo Servin,\
    \ Gunter Van de Velde, James Woodyatt, and\n   Bjoern A. Zeeb.\n   The authors\
    \ would like to thank Joel Jaeggli for his advice and\n   guidance throughout\
    \ the IETF process.\n   Fernando Gont would like to thank Diego Armando Maradona\
    \ for his\n   magic and inspiration.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Fernando Gont\n   SI6 Networks / UTN-FRH\n   Evaristo\
    \ Carriego 2644\n   Haedo, Provincia de Buenos Aires  1706\n   Argentina\n   Phone:\
    \ +54 11 4650 8472\n   Email: fgont@si6networks.com\n   URI:   http://www.si6networks.com\n\
    \   Will (Shucheng) Liu\n   Huawei Technologies\n   Bantian, Longgang District\n\
    \   Shenzhen  518129\n   China\n   Email: liushucheng@huawei.com\n   Gunter Van\
    \ de Velde\n   Alcatel-Lucent\n   Copernicuslaan 50\n   Antwerp, Antwerp  2018\n\
    \   Belgium\n   Phone: +32 476 476 022\n   Email: gunter.van_de_velde@alcatel-lucent.com\n"
