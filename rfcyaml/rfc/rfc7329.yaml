- title: __initial_text__
  contents:
  - '     A Session Identifier for the Session Initiation Protocol (SIP)

    '
- title: Abstract
  contents:
  - "Abstract\n   There is a need for having a globally unique session identifier\
    \ for\n   the same SIP session that can be consistently maintained across SIP\n\
    \   Proxies, Back-to-Back User Agents (B2BUAs), and other SIP\n   middleboxes,\
    \ for the purpose of troubleshooting.  This document\n   proposes a new SIP header\
    \ to carry such a value: Session-ID.\n   The mechanism defined in this document\
    \ has been widely deployed, and\n   is being followed in a backward-compatible\
    \ fashion for a new\n   Standards Track document produced by the INSIPID Working\
    \ Group.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7329.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Requirements ...............................................4\n  \
    \ 2. Terminology .....................................................4\n   3.\
    \ Overview of Operation ...........................................4\n   4. Session-ID\
    \ Behavior .............................................5\n      4.1. Generating\
    \ a Session-ID Value ..............................5\n      4.2. UAC Behavior\
    \ ...............................................6\n      4.3. UAS Behavior ...............................................6\n\
    \      4.4. Proxy Behavior .............................................6\n  \
    \    4.5. B2BUA Behavior .............................................7\n    \
    \       4.5.1. B2BUA Generation of New Session-ID ..................8\n      \
    \     4.5.2. B2BUA Insertion of Saved Session-ID .................8\n   5. Handling\
    \ SIP Transfer Scenarios .................................8\n      5.1. Out-of-Dialog\
    \ REFER ........................................9\n      5.2. Refer-To URI ...............................................9\n\
    \      5.3. Out-of-Dialog INVITE with Replaces .........................9\n  \
    \ 6. Session-ID Migration and Failure Scenarios .....................10\n   7.\
    \ New 'Session-ID' Header ........................................11\n      7.1.\
    \ Augmented BNF Definitions .................................11\n   8. Example\
    \ Exchange ...............................................11\n   9. Security Considerations\
    \ ........................................11\n      9.1. Security Considerations\
    \ for Administrators ................12\n      9.2. Security Considerations for\
    \ Session-ID Extensions .........12\n   10. IANA Considerations ...........................................13\n\
    \   11. Acknowledgments ...............................................13\n  \
    \ 12. References ....................................................13\n    \
    \  12.1. Normative References .....................................13\n      12.2.\
    \ Informative References ...................................14\n   Appendix A.\
    \ Use Cases Not in Scope for Session-ID .................15\n      A.1. Dialog\
    \ Correlation for SIP ................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This RFC, which contains the text of an individual Internet-Draft\n\
    \   that was submitted originally to the DISPATCH Working Group, is being\n  \
    \ published now as an Informational document to provide a reference for\n   later\
    \ RFCs.  The mechanism defined in this document has been widely\n   deployed and\
    \ is being followed in a backward-compatible fashion for a\n   new Standards Track\
    \ document produced by the INSIPID Working Group.\n   The SIP [RFC3261] Call-ID\
    \ header value is a globally unique\n   identifier, which is mandatory in all\
    \ requests/responses and\n   identifies SIP messages belonging to the same dialog\
    \ or registration.\n   It provides a portion of the SIP message dialog-matching\
    \ criteria and\n   is used in such things as \"Replaces\" headers [RFC3891] and\
    \ dialog-\n   event packages [RFC4235] for matching to dialogs, and in SIP Identity\n\
    \   [RFC4474] and Connected Identity [RFC4916] as one of the inputs for\n   signing.\n\
    \   In practice, the Call-ID is often changed by SIP Back-to-Back User\n   Agents\
    \ (B2BUAs) and other such middleboxes in the logical end-to-end\n   message path.\
    \  A B2BUA logically represents a SIP User Agent Server\n   (UAS) and User Agent\
    \ Client (UAC), and as such generates a new\n   Call-ID value for the dialog it\
    \ creates on its UAC side; in fact, for\n   some B2BUA scenarios the Call-ID *must*\
    \ be changed for SIP to\n   function properly.\n   At the same time, there is\
    \ a need for a unique, common, consistent\n   end-to-end identifier to help troubleshoot\
    \ SIP sessions and message\n   flows as they cross SIP nodes.  Troubleshooting\
    \ is more complicated\n   if multiple legs of the session are on different sides\
    \ of B2BUAs, due\n   to the lack of a common identifier such as a Call-ID to tie\
    \ the legs\n   together.  Proprietary mechanisms are currently used to achieve\
    \ this\n   goal.\n   Therefore, in order to provide an identifier that will not\
    \ be\n   modified/replaced by B2BUAs, this document proposes a new SIP Header\n\
    \   \"Session-ID\" and mandatory rules for the value of such a header.  The\n\
    \   rules are designed to be such that the value in the Session-ID header\n  \
    \ is not considered unsafe or private and does not have any property\n   that\
    \ would cause B2BUAs to change it.  The goal of this document is\n   to enable\
    \ troubleshooting by providing a unique identifier for a\n   given session that\
    \ can successfully cross B2BUAs, such as Application\n   Servers, softswitches,\
    \ Private Branch Exchanges (PBXs), Session\n   Border Controllers (SBCs), feature\
    \ servers, etc.\n"
- title: 1.1.  Requirements
  contents:
  - "1.1.  Requirements\n   The following requirements drive the need for Session-ID:\n\
    \   REQ1: It must be possible for an administrator to use the identifier\n   \
    \      to identify a set of dialogs that have a direct correlation\n         with\
    \ each other such that they represent the same SIP session,\n         with as\
    \ high a probability as possible.\n   REQ2: It must be possible to pass the identifier\
    \ through SIP B2BUAs,\n         with as high a probability as possible.  This\
    \ requirement\n         drives the following requirements:\n         REQ2a: The\
    \ identifier must not reveal any information related\n                to any SIP\
    \ device or domain identity, including IP\n                address, port, hostname,\
    \ domain name, username, Address-\n                of-Record (AoR), MAC address,\
    \ IP address family,\n                transport type, etc.\n         REQ2b: The\
    \ identifier must not reveal to the receiver of it\n                that the Call-ID,\
    \ tags, or any other SIP header or body\n                portion have been changed\
    \ by middleboxes, with as high a\n                probability as possible.\n \
    \        REQ2c: The identifier must not be used for anything at a SIP\n      \
    \          layer to change the behavior of the SIP protocol.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   This document uses the terms \"header field\" and \"header field value\"\n\
    \   following the definition of those terms in [RFC3261]; they are not\n   interchangeable.\
    \  The \"header field\" is the entire SIP header's\n   contents, including any\
    \ parameters.  The \"header field value\" is only\n   the field-value portion,\
    \ which does not include header parameters.\n"
- title: 3.  Overview of Operation
  contents:
  - "3.  Overview of Operation\n   The general concept is that the UAC generating\
    \ an out-of-dialog\n   request generates a new, pseudorandom, unique value that\
    \ remains\n   constant for the duration of the transaction, any dialog created\
    \ from\n   that request, or for a registration.  The value is inserted in a new\n\
    \   Session-ID header field defined in this document.  The UAC and UAS\n   then\
    \ reflect this header field value in all messages for the duration\n   of the\
    \ dialog.  In other words, the Session-ID provides a value\n   similar in nature\
    \ to Call-ID, except one that crosses B2BUAs and that\n   has no sensitive information\
    \ in it.\n   To aid in migration of deployments, a B2BUA or Proxy MAY also\n \
    \  generate and/or insert the value on behalf of a UAC or UAS, if one or\n   the\
    \ other does not support this document's mechanism.\n   Although the Session-ID\
    \ concept is similar to that of Call-ID, it is\n   not used for message dialog-matching\
    \ rules in RFC 3261, nor does it\n   change the Call-ID usage, nor does it replace\
    \ the Call-ID value.\n   Instead, this new header field provides an identifier\
    \ for\n   troubleshooting uses only.\n   The format of the Session-ID value is\
    \ restricted, both to avoid\n   detection of the system type that generated it\
    \ and to keep it a\n   hexadecimal representation such that it can be stored as\
    \ a 128-bit\n   binary value in log records.\n"
- title: 4.  Session-ID Behavior
  contents:
  - '4.  Session-ID Behavior

    '
- title: 4.1.  Generating a Session-ID Value
  contents:
  - "4.1.  Generating a Session-ID Value\n   This document proposes the Session-ID\
    \ header value be generated based\n   on a defined hash mechanism for creating\
    \ a 128-bit pseudorandom value\n   and be encoded as its lowercase hex representation.\
    \  The reason for\n   specifying the mechanism is twofold: to make it impossible\
    \ to\n   determine the manufacturer of the device that generated it by looking\n\
    \   at its format or value, and to allow devices to generate the same\n   value\
    \ if they have the same private key.\n   The Session-ID value is generated by\
    \ taking the Call-ID header value\n   and SHA-1 hashing it based on HMAC (as defined\
    \ in [RFC2104]) using a\n   locally generated pseudorandom 128-bit system secret\
    \ key to create a\n   128-bit resultant HMAC value.  The secret key makes the\
    \ resultant\n   HMAC value not re-creatable by other parties; this is necessary\
    \ to\n   prevent detection of Call-IDs being changed, as required by REQ2b.\n\
    \   Otherwise, middleboxes may have motivation to remove the Session-ID\n   in\
    \ order to hide the fact that they changed the Call-ID.\n   Per [RFC2104], the\
    \ algorithm is thus HMAC-SHA-1-128(Call-ID_value,\n   secret_key), and the 128-bit\
    \ result is encoded using lowercase\n   alphanumeric hex representation, as defined\
    \ in Section 7.1\n   (\"Augmented BNF Definitions\").\n   In order to enable troubleshooting\
    \ of in-dialog messages, a generator\n   needs to remember or re-create the same\
    \ Session-ID value for the\n   duration of a given dialog(s).  This is described\
    \ in more detail in\n   the subsequent sections of this document.\n"
- title: 4.2.  UAC Behavior
  contents:
  - "4.2.  UAC Behavior\n   The rules for when a UAC generates a new Session-ID value\
    \ are similar\n   as those for Call-ID value: a UAC supporting this document's\n\
    \   mechanism MUST generate a new unique Session-ID value when it\n   generates\
    \ an out-of-dialog request or when there is a new\n   Registration.  The exception\
    \ to this rule is for out-of-dialog REFER\n   requests or for an INVITE with a\
    \ Replaces header field (see\n   [RFC3891]), as described in Section 5.\n   The\
    \ UAC MUST reuse the same Session-ID value for in-dialog messages\n   as that\
    \ of the original dialog-creating request, and for any out-of-\n   dialog request\
    \ that it retransmits or re-generates in response to a\n   3xx that it reformulates\
    \ due to failure responses.  This follows the\n   rules in [RFC3261] for Call-ID\
    \ generation.\n   Session-ID values in Registration \"refreshes\" -- REGISTER\
    \ requests\n   that are used to update the expiry time but not to register a new\n\
    \   contact -- MUST use the same Session-ID value as previous REGISTER\n   requests.\
    \  New Registrations, which add or change the Contact URI for\n   the AoR, but\
    \ do not simply delete them, MUST use a new Session-ID\n   value.  This follows\
    \ the behavior of Call-ID per RFC 3261; it is\n   reiterated here because some\
    \ devices incorrectly change their Call-ID\n   value for every re-Registration,\
    \ and they MUST NOT do the same to the\n   Session-ID.\n   The UAC MUST include\
    \ the Session-ID header field in every SIP message\n   it transmits.\n"
- title: 4.3.  UAS Behavior
  contents:
  - "4.3.  UAS Behavior\n   A UAS compliant with this document MUST copy a Session-ID\
    \ header\n   field (received in a request) into responses and subsequent upstream\n\
    \   requests sent within the dialog.\n   If an out-of-dialog request is received\
    \ without a Session-ID header\n   field, the UAS SHOULD generate a new one for\
    \ subsequent use in the\n   transaction and dialog, as defined for a UAC, and\
    \ use the same value\n   in all responses and upstream in-dialog requests for\
    \ the same dialog.\n"
- title: 4.4.  Proxy Behavior
  contents:
  - "4.4.  Proxy Behavior\n   A Proxy MUST NOT remove or modify the Session-ID header\
    \ field it\n   receives, if one is in the message.  By definition, a Proxy that\
    \ is\n   compliant with RFC 3261 would not modify or remove such a header.\n \
    \  If the Proxy forks a request, it MUST copy the same Session-ID header\n   field\
    \ into all the forked request copies.  If the Proxy recurses\n   requests due\
    \ to 3xx redirection, or regenerates requests due to\n   failures, it MUST use\
    \ the same Session-ID header field as the\n   original request, just as the UAC\
    \ does.\n   If the Proxy locally generates any response or request based on a\n\
    \   received request, including 100 Trying, it MUST insert any received\n   Session-ID\
    \ header field from the original request into the response\n   message it locally\
    \ creates.  This is necessary for troubleshooting\n   purposes.\n   A Proxy compliant\
    \ with this document MAY generate a new Session-ID or\n   insert a previously\
    \ saved one if and only if none existed in a\n   received message, following the\
    \ rules for doing so as a B2BUA as\n   defined in Section 4.5.\n"
- title: 4.5.  B2BUA Behavior
  contents:
  - "4.5.  B2BUA Behavior\n   A B2BUA compliant with this document MUST copy:\n  \
    \ -  the Session-ID header field it receives in requests as a UAS into\n     \
    \ the related requests it generates as a UAC, and\n   -  any Session-ID header\
    \ field it receives in responses as a UAC into\n      the correlated responses\
    \ it generates as a UAS.\n   If the B2BUA forks or creates multiple requests as\
    \ a UAC, from a\n   request it received as a UAS, the B2BUA MUST copy the same\
    \ Session-ID\n   header field it received into all the forks/requests.  If the\
    \ B2BUA\n   recurses on 3xx responses, or regenerates requests due to failures,\n\
    \   it MUST use the same Session-ID field, just as the UAC does.\n   If the B2BUA\
    \ locally generates any response or request based on a\n   received request, including\
    \ 100 Trying, it MUST insert any received\n   Session-ID field from the original\
    \ request into the response message\n   it locally creates.\n   A B2BUA MAY remember\
    \ the received Session-ID value for the duration\n   of the transaction and dialog,\
    \ for the purpose of reinsertion, in\n   case the far end does not support this\
    \ document.\n   In all cases, if the SIP message received by a B2BUA contains\
    \ a\n   Session-ID header field, a B2BUA compliant with this document MUST\n \
    \  NOT remove, modify, or replace it as it \"forwards\" the message on the\n \
    \  other logical UA \"side\" of itself.\n"
- title: 4.5.1.  B2BUA Generation of New Session-ID
  contents:
  - "4.5.1.  B2BUA Generation of New Session-ID\n   If an out-of-dialog request is\
    \ received by a B2BUA compliant with\n   this document, and the request does *not*\
    \ contain a Session-ID header\n   field, the B2BUA MAY generate a new one.  The\
    \ new Session-ID value\n   MUST be calculated based on the received Call-ID of\
    \ the received\n   request, even if the B2BUA uses a different Call-ID value for\n\
    \   requests generated on its other \"side(s)\".  It MUST then insert the\n  \
    \ new Session-ID in any requests or responses it generates, as if it\n   had actually\
    \ received the new Session-ID from the UAC, following the\n   rules previously\
    \ defined for a B2BUA.  This allows for a B2BUA to\n   provide a migration to\
    \ Session-ID deployment, on behalf of upstream\n   nodes that do not yet support\
    \ it.\n   As defined previously, if any received message already had a\n   Session-ID,\
    \ a B2BUA compliant with this document would not replace\n   it.\n"
- title: 4.5.2.  B2BUA Insertion of Saved Session-ID
  contents:
  - "4.5.2.  B2BUA Insertion of Saved Session-ID\n   If a Session-ID was received\
    \ in an out-of-dialog request, or the\n   B2BUA locally generated one because\
    \ none existed, the B2BUA SHOULD\n   insert the same Session-ID field into all\
    \ responses and upstream\n   in-dialog requests if and only if a Session-ID is\
    \ not already in\n   them.  This allows for a B2BUA to provide a migration to\
    \ Session-ID\n   deployment on behalf of downstream nodes that do not yet support\
    \ it.\n"
- title: 5.  Handling SIP Transfer Scenarios
  contents:
  - "5.  Handling SIP Transfer Scenarios\n   The transfer or movement of SIP sessions\
    \ represents a complication\n   for a mechanism like Session-ID.  On the one hand,\
    \ the replacement\n   SIP session represents a new one and could reasonably be\
    \ expected to\n   use a new Session-ID value; on the other hand, from a troubleshooting\n\
    \   and human-user perspective, it is clearly related to, if not just a\n   continuation\
    \ of, the previous session.  Since the purpose of this\n   document's mechanism\
    \ is to aid monitoring and troubleshooting, and\n   it's not used for actual SIP\
    \ protocol mechanics, the behavior defined\n   in this section is to reuse the\
    \ same Session-ID value for the\n   replacement SIP session.\n   In order to do\
    \ so, the Session-ID of the \"original\" session is\n   transferred as well, in\
    \ the Refer-To URI of a REFER request as\n   described in [RFC3515].  Furthermore,\
    \ out-of-dialog REFER and INVITE\n   with Replaces requests as described in [RFC3891]\
    \ use the appropriate\n   Session-ID values.  This assumes, of course, that the\
    \ UAs involved\n   support the Session-ID mechanism.  If they do not, then it\
    \ is\n   possible for the Session-ID to not be \"carried forward\" to the new\n\
    \   SIP dialog.  Unfortunately, this means troubleshooting such dialogs\n   is\
    \ not improved or aided by this document's mechanism; but, it would\n   not \"\
    break\" anything at a SIP layer.\n   It should also be noted that using the same\
    \ Session-ID for the\n   transferred-to dialog means the same Session-ID now exists\
    \ in two\n   independent dialogs, because the original one may well continue due\n\
    \   to the implicit Subscription usage created by a REFER.  That implicit\n  \
    \ Subscription-based usage will continue to use the same Session-ID as\n   the\
    \ new dialog created to the transferred-to party.\n   In the following subsections,\
    \ the term \"UA\" is used for User Agent.\n   The language applies to the SIP\
    \ device that creates the request,\n   whether it be a UA or B2BUA.\n"
- title: 5.1.  Out-of-Dialog REFER
  contents:
  - "5.1.  Out-of-Dialog REFER\n   A UA compliant with this document MUST use the\
    \ same Session-ID header\n   field value for an out-of-dialog REFER request it\
    \ generates, as the\n   original dialog the REFER is targeted to (i.e., as if\
    \ the REFER had\n   been in-dialog).  For example, if UA Bob has a SIP dialog\
    \ X to Alice,\n   and Bob sends an out-of-dialog REFER to Alice to refer her to\n\
    \   Charlie, the Session-ID header field value of the REFER request would\n  \
    \ be the same as that used in dialog X.\n"
- title: 5.2.  Refer-To URI
  contents:
  - "5.2.  Refer-To URI\n   A UA compliant with this document MUST add the Session-ID\
    \ header\n   field as an embedded header in the Refer-To header field URI of any\n\
    \   REFER request it generates, using the value of the session it is\n   referring\
    \ to.  For example, if UA Bob has a SIP dialog X to Alice and\n   dialog Y to\
    \ Charlie, and Bob sends a REFER request to Alice to refer\n   her to Charlie,\
    \ the Session-ID header field value embedded in the\n   Refer-To URI of the REFER\
    \ request would be the same as that used in\n   dialog Y.\n"
- title: 5.3.  Out-of-Dialog INVITE with Replaces
  contents:
  - "5.3.  Out-of-Dialog INVITE with Replaces\n   When generating an out-of-dialog\
    \ INVITE with a Replaces header field\n   as described in [RFC3891], a UA compliant\
    \ with this document MUST use\n   the same Session-ID header field value for the\
    \ INVITE request as that\n   used for the dialog it is replacing, if it knows\
    \ the value.\n   Typically, the UA would know the value by having received it\
    \ in the\n   Refer-To header field of a REFER, as described previously.  For\n\
    \   example, if UA Bob has a SIP dialog X to Alice and dialog Y to\n   Charlie,\
    \ and Bob sends a REFER request to Alice to refer her to\n   Charlie, the Session-ID\
    \ header field value embedded in the Refer-To\n   URI of the REFER request would\
    \ be the one used in dialog Y, which\n   Alice would use as the Session-ID header\
    \ field value for her INVITE\n   to Charlie.\n   If the UA does not know the Session-ID\
    \ of the dialog it is replacing,\n   for example, because it is not embedded in\
    \ the Refer-To URI of a\n   received REFER, then it MUST use a new Session-ID\
    \ value, calculated\n   using the mechanism as defined in Section 4.1 with the\
    \ Call-ID of the\n   INVITE.\n"
- title: 6.  Session-ID Migration and Failure Scenarios
  contents:
  - "6.  Session-ID Migration and Failure Scenarios\n   SIP is already widely deployed\
    \ on the Internet, and it is impractical\n   to expect all UAs to be upgraded\
    \ to support this document's mechanism\n   in the near future.  A solution for\
    \ gradual migration is necessary\n   and is provided by this document by allowing\
    \ B2BUAs or Proxies to\n   perform the Session-ID generator and inserter role.\
    \  Even within\n   those device types, it is impractical to expect all B2BUAs\
    \ to support\n   this mechanism all at once or any time in the near future.\n\
    \   Therefore, it is expected that some B2BUAs and/or UAs will support\n   generating\
    \ and inserting Session-ID, while others will not support\n   Session-ID at all.\n\
    \   Due to the varying types of B2BUAs (such as PBXs, SBCs, Application\n   Servers,\
    \ feature servers, and softswitches of various flavors) and\n   the numerous SIP\
    \ deployment models in use, there are going to be\n   cases in which Session-ID\
    \ will fail to be a consistent value for all\n   related dialogs or fail to successfully\
    \ match.  The goal of this\n   document is to improve troubleshooting of current\
    \ deployments as much\n   as possible -- and, in this author's opinion, that is\
    \ the best that\n   can be done given the constraints.\n   One example is for\
    \ forked requests: if a UAC that does not support\n   this mechanism sends a request\
    \ to a Proxy or B2BUA that also does not\n   support this mechanism, each fork\
    \ could reach B2BUAs or UASs that\n   *do* support this mechanism.  In such a\
    \ case, each of those forked-to\n   B2BUA/UAS will generate unique Session-IDs\
    \ and put them in their\n   responses, temporarily leading to multiple, different\
    \ Session-ID\n   values for the same related early dialogs.  Typically, the UAC\
    \ would\n   eventually only accept one of the dialogs, and only one Session-ID\n\
    \   would remain.\n"
- title: 7.  New 'Session-ID' Header
  contents:
  - "7.  New 'Session-ID' Header\n   This document adds the \"Session-ID\" token to\
    \ the definition of the\n   element \"message-header\" in the SIP message grammar.\
    \  The Session-ID\n   header is a single-instance header.\n"
- title: 7.1.  Augmented BNF Definitions
  contents:
  - "7.1.  Augmented BNF Definitions\n    Session-ID           =  \"Session-ID\" HCOLON\
    \ sess-id\n                            *( SEMI generic-param )\n    sess-id  \
    \            =  32(DIGIT / %x61-66)  ; 32 chars of [0-9a-f]\n   NOTE: The sess-id\
    \ value is technically case-INSENSITIVE, but only\n   lowercase characters are\
    \ allowed.\n   See the Security Considerations section for discussion about using\n\
    \   header parameters in Session-ID header fields.\n"
- title: 8.  Example Exchange
  contents:
  - "8.  Example Exchange\n   In the following example, Alice initiates a call to\
    \ Bob.  Alice\n   generates a Session-ID header in the out-of-dialog INVITE.\n\
    \   Alice generates the following.  (Note: much has been left out for\n   simplicity.)\n\
    \      INVITE sip:bob@example.com SIP/2.0\n      Via: SIP/2.0/UDP 192.0.2.1:5060;branch=z9hG4bKnashds10\n\
    \      From: Alice <sip:alice@example.net>;tag=1234567\n      To: Bob <sip:bob@example.com>\n\
    \      Call-Id: 123456mcmxcix@1.2.3.4\n      Session-ID: f81d4fae7dec11d0a76500a0c91e6bf6\n\
    \      CSeq: 1 INVITE\n      Contact: <sip:alice@192.168.1.1>\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   There are several security considerations surrounding\
    \ this document's\n   mechanism.\n   The Session-ID generation algorithm should\
    \ provide a reasonably\n   random 32-character Session-ID value to avoid collisions\
    \ and should\n   not let one re-create the original Call-ID.\n   There is no known\
    \ security issue with viewing or modifying the\n   Session-ID, other than to hamper\
    \ troubleshooting efforts.\n"
- title: 9.1.  Security Considerations for Administrators
  contents:
  - "9.1.  Security Considerations for Administrators\n   The requirement for the\
    \ Session-ID is to be an identifier which\n   cannot be used by a recipient to\
    \ identify if the Call-ID has been\n   changed by middleboxes.  As such, a UAS/UAC\
    \ cannot detect the\n   original Call-ID, nor whether it has been changed; thus,\n\
    \   administrators should not be concerned if the Session-ID header field\n  \
    \ is \"passed through\".\n"
- title: 9.2.  Security Considerations for Session-ID Extensions
  contents:
  - "9.2.  Security Considerations for Session-ID Extensions\n   The Session-ID's\
    \ value is created from the Call-ID using a hashing\n   mechanism based on [RFC2104],\
    \ using SHA-1 and a secret key known only\n   to the system generating the Session-ID.\
    \  Because the algorithm is\n   defined in this document, it should be fairly\
    \ secure from detecting\n   the generator of the Session-ID, in terms of manufacturer\
    \ or code\n   base.\n   The Session-ID generation algorithm should provide a reasonably\n\
    \   random 128-bit Session-ID value, to avoid collisions, and should not\n   let\
    \ one re-create the original Call-ID.  The secret key MUST only be\n   used for\
    \ the Session-ID mechanism, in case a weakness is found that\n   reveals the key.\
    \  One such weakness may be that a UAC generates one\n   or more Call-IDs that\
    \ have a property that makes determining the key\n   more likely.\n   In general,\
    \ B2BUA behavior cannot be dictated by standards.  They do\n   whatever their\
    \ owners/operators wish them to do, or whatever is\n   necessary to make their\
    \ applications work.  This document attempts to\n   normatively specify some B2BUA\
    \ behavior, by creating a SIP header\n   value for which the properties are such\
    \ that B2BUAs should have no\n   legitimate reason to interfere.  This effectively\
    \ creates a \"promise\"\n   that future uses of this Session-ID header field,\
    \ including its value\n   *and* any future defined parameters, maintain this benign\
    \ property.\n   Any future extensions to the Session-ID mechanism and header field\n\
    \   MUST maintain this property, or else B2BUAs will begin to modify it\n   again\
    \ or remove it, and its value will be lost.\n   Manufacturers of SIP devices should\
    \ note that a B2BUA may inspect the\n   Session-ID header field and may remove\
    \ it if it does not comply with\n   this document's value restrictions.  Any Session-ID\
    \ header parameters\n   MUST be registered with IANA and documented in RFCs from\
    \ the IETF\n   stream, pursuant to the requirements of [RFC3968].\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   IANA has registered a new SIP header field named\
    \ 'Session-ID',\n   pursuant to the registration policies for such in [RFC5727].\
    \  This is\n   a single-instance header field and is appropriate for any SIP\n\
    \   message, of any Method type, in any request or response.\n   The ABNF rules\
    \ [RFC5234] for this new header allow for header\n   parameters; however, they\
    \ must be registered following the rules of\n   [RFC3968], as required by [RFC5727].\n\
    \   This registration is intended to be temporary.  The author expects\n   that\
    \ a Standards Track definition of Session-ID will be published at\n   a future\
    \ date.  Assuming such a document is published, it will\n   replace this registration\
    \ with a reference to itself, at which point\n   this document will no longer\
    \ be referenced by IANA.\n"
- title: 11.  Acknowledgments
  contents:
  - "11.  Acknowledgments\n   Thanks to Raphael Coeffic, Bob Penfield, Dale Worley,\
    \ Paul Kyzivat,\n   Ian Elz, Marco Stura, Martin Dolly, Martin Huelsemann, Laura\
    \ Liess,\n   and Adam Roach for their input.\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2104]  Krawczyk, H., Bellare, M., and R.\
    \ Canetti, \"HMAC: Keyed-\n              Hashing for Message Authentication\"\
    , RFC 2104, February\n              1997.\n   [RFC2119]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \              June 2002.\n   [RFC3515]  Sparks, R., \"The Session Initiation\
    \ Protocol (SIP) Refer\n              Method\", RFC 3515, April 2003.\n   [RFC3891]\
    \  Mahy, R., Biggs, B., and R. Dean, \"The Session Initiation\n              Protocol\
    \ (SIP) \"Replaces\" Header\", RFC 3891, September\n              2004.\n   [RFC3968]\
    \  Camarillo, G., \"The Internet Assigned Number Authority\n              (IANA)\
    \ Header Field Parameter Registry for the Session\n              Initiation Protocol\
    \ (SIP)\", BCP 98, RFC 3968, December\n              2004.\n   [RFC5234]  Crocker,\
    \ D., Ed., and P. Overell, \"Augmented BNF for\n              Syntax Specifications:\
    \ ABNF\", STD 68, RFC 5234, January\n              2008.\n   [RFC5727]  Peterson,\
    \ J., Jennings, C., and R. Sparks, \"Change Process\n              for the Session\
    \ Initiation Protocol (SIP) and the Real-\n              time Applications and\
    \ Infrastructure Area\", BCP 67, RFC\n              5727, March 2010.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC4235]  Rosenberg, J., Schulzrinne, H.,\
    \ and R. Mahy, Ed., \"An\n              INVITE-Initiated Dialog Event Package\
    \ for the Session\n              Initiation Protocol (SIP)\", RFC 4235, November\
    \ 2005.\n   [RFC4474]  Peterson, J. and C. Jennings, \"Enhancements for\n    \
    \          Authenticated Identity Management in the Session\n              Initiation\
    \ Protocol (SIP)\", RFC 4474, August 2006.\n   [RFC4916]  Elwell, J., \"Connected\
    \ Identity in the Session Initiation\n              Protocol (SIP)\", RFC 4916,\
    \ June 2007.\n"
- title: Appendix A.  Use Cases Not in Scope for Session-ID
  contents:
  - "Appendix A.  Use Cases Not in Scope for Session-ID\n   It is very tempting to\
    \ use a header field value such as that provided\n   by Session-ID, for other\
    \ purposes than troubleshooting.  In a\n   previous document for this same Session-ID\
    \ concept, the proposal\n   included other uses; however, these were removed because\
    \ any use case\n   other than troubleshooting can easily lead to a B2BUA needing\
    \ to\n   change the value, in certain cases.  That would defeat the\n   troubleshooting\
    \ value of Session-ID.  This section discusses such use\n   cases and explains\
    \ why they are potentially harmful.\n"
- title: A.1.  Dialog Correlation for SIP
  contents:
  - "A.1.  Dialog Correlation for SIP\n   Although Session-ID does provide a means\
    \ to correlate separate SIP\n   dialogs, messages, and transactions, it does so\
    \ at a higher layer\n   than SIP.  It does not replace the mechanics of SIP using\
    \ the Call-ID\n   and To/From tags of SIP messages to correlate SIP dialogs, nor\
    \ in\n   other uses such as Replaces headers or dialog-event packages.  It is\n\
    \   tempting, however, to use it for exactly that purpose in certain\n   cases.\n\
    \   For example, suppose a call transfer case where Alice calls Bob\n   through\
    \ B2BUA-1.  Bob then calls Charlie and sends Charlie a REFER\n   with embedded\
    \ Replaces to make Charlie send an INVITE with a Replaces\n   header to Alice,\
    \ to replace the Alice-Bob session.  If Charlie uses a\n   different B2BUA-2 to\
    \ reach Alice, the INVITE with Replaces will fail\n   because the Call-ID/tags\
    \ won't match anything B2BUA-2 or Alice knows\n   about.\n   +-----+     +-------+\
    \    +-------+    +-----+     +-------+\n   |Alice|     |B2BUA-1|    |B2BUA-2|\
    \    | Bob |     |Charlie|\n   +-----+     +-------+    +-------+    +-----+ \
    \    +-------+\n      |            |            |           |            |\n \
    \     |INVITE      |            |           |            |\n      |callid:1a \
    \  |callid:1b   |           |            |\n      |----------->|----------------------->|INVITE\
    \      |\n      |sessid:1    |sessid:1    |           |callid:2a   |\n      |\
    \            |            |           |----------->|\n      |            |   \
    \         |           |sessid:2    |\n      |            |            |      \
    \     |            |\n      |            |            |           |REFER     \
    \  |\n      |            |            |           |referto:1b  |\n      |    \
    \        |            |           |----------->|\n      |            |       \
    \     |           |            |\n      |            |            |          \
    \ |      INVITE|\n      |            |            |           | replaces:1b|\n\
    \      |            |            X<-----------------------|\n      |         \
    \   |      INVITE|           |    sessid:1|\n      |            | replaces:1b|\
    \           |            |\n      X<------------------------|           |    \
    \        |\n      |            |    sessid:1|           |            |\n     \
    \            Example 1: Call Transfer Case\n   If, on the other hand, Alice were\
    \ to use the Session-ID value for\n   correlation, she would see it matches her\
    \ dialog with Bob (assuming\n   the Session-ID were passed along in the Refer-To\
    \ and Replaces info).\n   There are problems with this approach, however.  The\
    \ first problem\n   is, by not sending the INVITE with Replaces to B2BUA-1, B2BUA-1\
    \ is in\n   an incorrect state; the dialog is getting replaced, and the B2BUA\n\
    \   doesn't know it.\n   A second issue is the Session-ID doesn't identify enough\
    \ information\n   to replace a dialog.  Imagine there were a third B2BUA, such\
    \ as a\n   softswitch, between Alice and B2BUA-1 and B2BUA-2, and the INVITE\n\
    \   with Replaces reached the softswitch before Alice.  The softswitch\n   won't\
    \ know which \"side\" the INVITE is replacing.  The To/From tags no\n   longer\
    \ match anything the softswitch knows about, so it can't figure\n   out if the\
    \ INVITE with Replaces is replacing the dialog from\n   softswitch to Alice, or\
    \ the one to Bob.  If we try to fix this by\n   creating a tag-type value pair\
    \ for Session-ID, we're back to devices\n   changing those tag values and defeating\
    \ the matching property.\n   Another example is based on 3GPP 24.605 Annex A.2.2.\
    \  Alice has a\n   call with Bob through multiple B2BUAs and an Application Server.\
    \  The\n   dialogs of that call all have the same Session-ID, but unique\n   Call-ID/tags.\n\
    \   Alice wants to invoke a third-party conference facility in the AS and\n  \
    \ to reference the call she has with Bob for that.  In this particular\n   3GPP\
    \ scenario, to do that Alice sends a new INVITE to the AS with a\n   resource-list\
    \ body (a la RFC 5366) containing the call information\n   for the original call.\
    \  This is the \"RL<sessid:1>\" piece in the\n   diagram.  It has the Call-ID/tags\
    \ as well, but they'll be wrong when\n   received at the AS.\n   The AS processes\
    \ that list, can't match the Call-ID/tags in the\n   resource-lit but does match\
    \ the Session-ID, and sends a re-INVITE to\n   party B within the original call's\
    \ dialog.\n   +-----+     +-------+      +----+    +-------+     +-----+\n   |Alice|\
    \     |B2BUA-1|      | AS |    |B2BUA-2|     | Bob |\n   +-----+     +-------+\
    \      +----+    +-------+     +-----+\n      |            |            |    \
    \       |            |\n      |INVITE      |            |           |        \
    \    |\n      |callid:1a   |callid:1b   |callid:1c  |callid:1d   |\n      |----------->|----------->|---------->|----------->|\n\
    \      |sessid:1    |sessid:1    |sessid:1   |sessid:1    |\n      |         \
    \   |            |           |            |\n      |INVITE      |            |\
    \           |            |\n      |callid:2a   |callid:2b   |           |    \
    \        |\n      |----------->|----------->|           |            |\n     \
    \ |sessid:2    |sessid:2    |re-INVITE  |            |\n      |RL<sessid:1>|RL<sessid:1>|callid:1c\
    \  |callid:1d   |\n      |            |            |---------->|----------->|\n\
    \      |            |            |sessid:1   |sessid:1    |\n      |         \
    \   |            |           |            |\n                    Example 2: Resource\
    \ List\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Hadriel Kaplan\n   Oracle\n   EMail: hadrielk@yahoo.com\n"
