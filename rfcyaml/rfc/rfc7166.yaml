- contents:
  - '              Supporting Authentication Trailer for OSPFv3

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Currently, OSPF for IPv6 (OSPFv3) uses IPsec as the only mechanism\n
    \  for authenticating protocol packets.  This behavior is different from\n   authentication
    mechanisms present in other routing protocols (OSPFv2,\n   Intermediate System
    to Intermediate System (IS-IS), RIP, and Routing\n   Information Protocol Next
    Generation (RIPng)).  In some environments,\n   it has been found that IPsec is
    difficult to configure and maintain\n   and thus cannot be used.  This document
    defines an alternative\n   mechanism to authenticate OSPFv3 protocol packets so
    that OSPFv3 does\n   not depend only upon IPsec for authentication.\n   The OSPFv3
    Authentication Trailer was originally defined in RFC 6506.\n   This document obsoletes
    RFC 6506 by providing a revised definition,\n   including clarifications and refinements
    of the procedures.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7166.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Requirements ...............................................4\n      1.2.
    Summary of Changes from RFC 6506 ...........................4\n   2. Proposed
    Solution ...............................................5\n      2.1. AT-Bit in
    Options Field ....................................5\n      2.2. Basic Operation
    ............................................6\n      2.3. IPv6 Source Address
    Protection .............................6\n   3. OSPFv3 Security Association .....................................7\n
    \  4. Authentication Procedure ........................................9\n      4.1.
    Authentication Trailer .....................................9\n           4.1.1.
    Sequence Number Wrap ...............................11\n      4.2. OSPFv3 Header
    Checksum and LLS Data Block Checksum ........11\n      4.3. Cryptographic Authentication
    Procedure ....................12\n      4.4. Cross-Protocol Attack Mitigation
    ..........................12\n      4.5. Cryptographic Aspects .....................................12\n
    \     4.6. Message Verification ......................................15\n   5.
    Migration and Backward Compatibility ...........................16\n   6. Security
    Considerations ........................................17\n   7. IANA Considerations
    ............................................18\n   8. References .....................................................19\n
    \     8.1. Normative References ......................................19\n      8.2.
    Informative References ....................................19\n   Appendix A.
    Acknowledgments .......................................22\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Unlike Open Shortest Path First version 2 (OSPFv2) [RFC2328],
    OSPF\n   for IPv6 (OSPFv3) [RFC5340] does not include the AuType and\n   Authentication
    fields in its headers for authenticating protocol\n   packets.  Instead, OSPFv3
    relies on the IPsec protocols\n   Authentication Header (AH) [RFC4302] and Encapsulating
    Security\n   Payload (ESP) [RFC4303] to provide integrity, authentication, and/or\n
    \  confidentiality.\n   [RFC4552] describes how IPv6 AH and ESP extension headers
    can be used\n   to provide authentication and/or confidentiality to OSPFv3.\n
    \  However, there are some environments, e.g., Mobile Ad Hoc Networks\n   (MANETs),
    where IPsec is difficult to configure and maintain; this\n   mechanism cannot
    be used in such environments.\n   [RFC4552] discusses, at length, the reasoning
    behind using manually\n   configured keys, rather than some automated key management
    protocol\n   such as Internet Key Exchange version 2 (IKEv2) [RFC5996].  The\n
    \  primary problem is the lack of a suitable key management mechanism,\n   as
    OSPFv3 adjacencies are formed on a one-to-many basis and most key\n   management
    mechanisms are designed for a one-to-one communication\n   model.  This forces
    the system administrator to use manually\n   configured Security Associations
    (SAs) and cryptographic keys to\n   provide the authentication and, if desired,
    confidentiality services.\n   Regarding replay protection, [RFC4552] states that:\n
    \     Since it is not possible using the current standards to provide\n      complete
    replay protection while using manual keying, the proposed\n      solution will
    not provide protection against replay attacks.\n   Since there is no replay protection
    provided, there are a number of\n   vulnerabilities in OSPFv3 that have been discussed
    in [RFC6039].\n   While techniques exist to identify ESP-NULL packets [RFC5879],
    these\n   techniques are generally not implemented in the data planes of OSPFv3\n
    \  routers.  This makes it very difficult for implementations to examine\n   OSPFv3
    packets and prioritize certain OSPFv3 packet types, e.g.,\n   Hello packets, over
    the other types.\n   This document defines a mechanism that works similarly to
    OSPFv2\n   [RFC5709] to provide authentication to OSPFv3 packets and solves the\n
    \  problems related to replay protection and deterministically\n   disambiguating
    different OSPFv3 packets as described above.\n   This document adds support for
    the Secure Hash Algorithms (SHAs)\n   defined in the US NIST Secure Hash Standard
    (SHS), which is specified\n   by NIST FIPS 180-4.  [FIPS-180-4] includes SHA-1,
    SHA-224, SHA-256,\n   SHA-384, and SHA-512.  The Hashed Message Authentication
    Code (HMAC)\n   authentication mode defined in NIST FIPS 198-1 [FIPS-198-1] is
    used.\n"
  - contents:
    - "1.1.  Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      RFC 2119 [RFC2119].\n"
    title: 1.1.  Requirements
  - contents:
    - "1.2.  Summary of Changes from RFC 6506\n   This document includes the following
      changes from RFC 6506 [RFC6506]:\n   1. Sections 2.2 and 4.2 explicitly state
      that the Link-Local\n      Signaling (LLS) block checksum calculation is omitted
      when an\n      OSPFv3 Authentication Trailer is used for OSPFv3 authentication.\n
      \     The LLS data block is included in the authentication digest\n      calculation,
      and computation of a checksum is unnecessary.\n      Clarification of this issue
      was documented in an erratum.\n   2. Section 3 previously recommended usage
      of an expired key for\n      transmitted OSPFv3 packets when no valid keys existed.
      \ This\n      statement has been removed.\n   3. Section 4.5 includes a correction
      to the key preparation to use\n      the Protocol-Specific Authentication Key
      (Ks) rather than the\n      Authentication Key (K) as the initial key (Ko).
      \ This problem was\n      also documented in an erratum.\n   4. Section 4.5
      also includes a discussion of the choice of key length\n      to be the hash
      length (L) rather than the block size (B).  The\n      discussion of this choice
      was included to clarify an issue raised\n      in a rejected erratum.\n   5.
      Sections 4.1 and 4.6 indicate that sequence number checking is\n      dependent
      on OSPFv3 packet type in order to account for packet\n      prioritization as
      specified in [RFC4222].  This was an omission\n      from RFC 6506 [RFC6506].\n
      \  6. Section 4.6 explicitly states that OSPFv3 packets with a\n      nonexistent
      or expired Security Association (SA) will be dropped.\n   7. Section 5 includes
      guidance on the precise actions required for an\n      OSPFv3 router providing
      a backward-compatible transition mode.\n"
    title: 1.2.  Summary of Changes from RFC 6506
  title: 1.  Introduction
- contents:
  - "2.  Proposed Solution\n   To perform non-IPsec Cryptographic Authentication,
    OSPFv3 routers\n   append a special data block, henceforth referred to as the\n
    \  Authentication Trailer, to the end of the OSPFv3 packets.  The length\n   of
    the Authentication Trailer is not included in the length of the\n   OSPFv3 packet
    but is included in the IPv6 payload length, as shown in\n   Figure 1.\n    +---------------------+
    --              --  +----------------------+\n    | IPv6 Payload Length | ^               ^
    \  | IPv6 Payload Length  |\n    | PL = OL + LL        | |               |   |
    PL = OL + LL + AL    |\n    |                     | v               v   |                      |\n
    \   +---------------------+ --              --  +----------------------+\n    |
    OSPFv3 Header       | ^               ^   | OSPFv3 Header        |\n    | Length
    = OL         | |               |   | Length = OL          |\n    |                     |
    |    OSPFv3     |   |                      |\n    |.....................| |    Packet
    \    |   |......................|\n    |                     | |    Length     |
    \  |                      |\n    | OSPFv3 Packet       | |               |   |
    OSPFv3 Packet        |\n    |                     | v               v   |                      |\n
    \   +---------------------+ --              --  +----------------------+\n    |
    \                    | ^               ^   |                      |\n    | Optional
    LLS        | |    LLS Data   |   | Optional LLS         |\n    | LL = LLS Data
    \      | |    Block      |   | LL = LLS Data        |\n    |      Block Length
    \  | v    Length     v   |      Block Length    |\n    +---------------------+
    --              --  +----------------------+\n                                            ^
    \  |                      |\n                       AL = PL - (OL + LL)  |   |
    Authentication       |\n                                            |   | AL =
    Fixed Trailer + |\n                                            v   |      Digest
    Length   |\n                                            --  +----------------------+\n
    \               Figure 1: Authentication Trailer in OSPFv3\n   The presence of
    the Link-Local Signaling (LLS) [RFC5613] block is\n   determined by the L-bit
    setting in the OSPFv3 Options field in OSPFv3\n   Hello and Database Description
    packets.  If present, the LLS data\n   block is included along with the OSPFv3
    packet in the Cryptographic\n   Authentication computation.\n"
  - contents:
    - "2.1.  AT-Bit in Options Field\n   RFC 6506 introduced the AT-bit (\"AT\" stands
      for \"Authentication\n   Trailer\") into the OSPFv3 Options field.  OSPFv3 routers
      MUST set the\n   AT-bit in OSPFv3 Hello and Database Description packets to
      indicate\n   that all the packets on this link will include an Authentication\n
      \  Trailer.  For OSPFv3 Hello and Database Description packets, the\n   AT-bit
      indicates that the AT is present.  For other OSPFv3 packet\n   types, the OSPFv3
      AT-bit setting from the OSPFv3 Hello/Database\n   Description setting is preserved
      in the OSPFv3 neighbor data\n   structure.  OSPFv3 packet types that don't include
      an OSPFv3 Options\n   field will use the setting from the neighbor data structure
      to\n   determine whether or not the AT is expected.\n            0                   1
      \                     2\n            0 1 2 3 4 5 6 7 8 9 0 1 2 3  4 5  6 7 8
      \ 9 0 1  2 3\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+\n
      \          | | | | | | | | | | | | | |AT|L|AF|*|*|DC|R|N|MC|E|V6|\n           +-+-+-+-+-+-+-+-+-+-+-+-+-+--+-+--+-+-+--+-+-+--+-+--+\n
      \                     Figure 2: OSPFv3 Options Field\n   The AT-bit, as shown
      in the figure above, MUST be set in all OSPFv3\n   Hello and Database Description
      packets that contain an Authentication\n   Trailer.\n"
    title: 2.1.  AT-Bit in Options Field
  - contents:
    - "2.2.  Basic Operation\n   The procedure followed for computing the Authentication
      Trailer is\n   much the same as those described in [RFC5709] and [RFC2328].
      \ One\n   difference is that the LLS data block, if present, is included in
      the\n   Cryptographic Authentication computation.\n   The way the authentication
      data is carried in the Authentication\n   Trailer is very similar to how it
      is done in the case of [RFC2328].\n   The only difference between the OSPFv2
      Authentication Trailer and the\n   OSPFv3 Authentication Trailer is that information
      in addition to the\n   message digest is included.  The additional information
      in the OSPFv3\n   Authentication Trailer is included in the message digest computation\n
      \  and is therefore protected by OSPFv3 Cryptographic Authentication as\n   described
      herein.\n   Consistent with OSPFv2 Cryptographic Authentication [RFC2328] and\n
      \  Link-Local Signaling Cryptographic Authentication [RFC5613], checksum\n   calculation
      and verification are omitted for both the OSPFv3 header\n   checksum and the
      LLS data block when the OSPFv3 authentication\n   mechanism described in this
      specification is used.\n"
    title: 2.2.  Basic Operation
  - contents:
    - "2.3.  IPv6 Source Address Protection\n   While OSPFv3 always uses the Router
      ID to identify OSPFv3 neighbors,\n   the IPv6 source address is learned from
      OSPFv3 Hello packets and\n   copied into the neighbor data structure [RFC5340].
      \ Hence, OSPFv3 is\n   susceptible to Man-in-the-Middle attacks where the IPv6
      source\n   address is modified.  To thwart such attacks, the IPv6 source address\n
      \  will be included in the message digest calculation and protected by\n   OSPFv3
      authentication.  Refer to Section 4.5 for details.  This is\n   different than
      the procedure specified in [RFC5709] but consistent\n   with [MANUAL-KEY].\n"
    title: 2.3.  IPv6 Source Address Protection
  title: 2.  Proposed Solution
- contents:
  - "3.  OSPFv3 Security Association\n   An OSPFv3 Security Association (SA) contains
    a set of parameters\n   shared between any two legitimate OSPFv3 speakers.\n   Parameters
    associated with an OSPFv3 SA are as follows:\n   o  Security Association Identifier
    (SA ID)\n      This is a 16-bit unsigned integer used to uniquely identify an\n
    \     OSPFv3 SA, as manually configured by the network operator.\n      The receiver
    determines the active SA by looking at the SA ID\n      field in the incoming
    protocol packet.\n      The sender, based on the active configuration, selects
    an SA to\n      use and puts the correct Key ID value associated with the SA in\n
    \     the OSPFv3 protocol packet.  If multiple valid and active OSPFv3\n      SAs
    exist for a given interface, the sender may use any of those\n      SAs to protect
    the packet.\n      Using SA IDs makes changing keys while maintaining protocol\n
    \     operation convenient.  Each SA ID specifies two independent parts:\n      the
    authentication algorithm and the Authentication Key, as\n      explained below.\n
    \     Normally, an implementation would allow the network operator to\n      configure
    a set of keys in a key chain, with each key in the chain\n      having a fixed
    lifetime.  The actual operation of these mechanisms\n      is outside the scope
    of this document.\n      Note that each SA ID can indicate a key with a different\n
    \     authentication algorithm.  This allows the introduction of new\n      authentication
    mechanisms without disrupting existing OSPFv3\n      adjacencies.\n   o  Authentication
    Algorithm\n      This signifies the authentication algorithm to be used with this\n
    \     OSPFv3 SA.  This information is never sent in clear text over the\n      wire.
    \ Because this information is not sent on the wire, the\n      implementer chooses
    an implementation-specific representation for\n      this information.\n      Currently,
    the following algorithms are supported:\n      *  HMAC-SHA-1,\n      *  HMAC-SHA-256,\n
    \     *  HMAC-SHA-384, and\n      *  HMAC-SHA-512.\n   o  Authentication Key\n
    \     This value denotes the Cryptographic Authentication Key associated\n      with
    this OSPFv3 SA.  The length of this key is variable and\n      depends upon the
    authentication algorithm specified by the\n      OSPFv3 SA.\n   o  KeyStartAccept\n
    \     This value indicates the time that this OSPFv3 router will accept\n      packets
    that have been created with this OSPFv3 SA.\n   o  KeyStartGenerate\n      This
    value indicates the time that this OSPFv3 router will begin\n      using this
    OSPFv3 SA for OSPFv3 packet generation.\n   o  KeyStopGenerate\n      This value
    indicates the time that this OSPFv3 router will stop\n      using this OSPFv3
    SA for OSPFv3 packet generation.\n   o  KeyStopAccept\n      This value indicates
    the time that this OSPFv3 router will stop\n      accepting packets generated
    with this OSPFv3 SA.\n      In order to achieve smooth key transition, KeyStartAccept
    SHOULD\n      be less than KeyStartGenerate, and KeyStopGenerate SHOULD be less\n
    \     than KeyStopAccept.  If KeyStartGenerate or KeyStartAccept is left\n      unspecified,
    the time will default to 0, and the key will be used\n      immediately.  If KeyStopGenerate
    or KeyStopAccept is left\n      unspecified, the time will default to infinity,
    and the key's\n      lifetime will be infinite.  When a new key replaces an old
    key,\n      the KeyStartGenerate time for the new key MUST be less than or\n      equal
    to the KeyStopGenerate time of the old key.\n      Key storage SHOULD persist
    across a system restart, warm or cold,\n      to avoid operational issues.  In
    the event that the last key\n      associated with an interface expires, the network
    operator SHOULD\n      be notified, and the OSPFv3 packet MUST NOT be transmitted\n
    \     unauthenticated.\n"
  title: 3.  OSPFv3 Security Association
- contents:
  - '4.  Authentication Procedure

    '
  - contents:
    - "4.1.  Authentication Trailer\n   The Authentication Trailer that is appended
      to the OSPFv3 protocol\n   packet is described below:\n     0                   1
      \                  2                   3\n     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |      Authentication Type      |        Auth Data Len          |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |           Reserved            |   Security Association ID     |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |           Cryptographic Sequence Number (High-Order 32 Bits)  |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |           Cryptographic Sequence Number (Low-Order 32 Bits)   |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \   |                                                               |\n    |
      \               Authentication Data (Variable)                 |\n    ~                                                               ~\n
      \   |                                                               |\n    |
      \                                                              |\n    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                 Figure 3: Authentication Trailer Format\n   The various fields
      in the Authentication Trailer are as follows:\n   o  Authentication Type\n      This
      16-bit field identifies the type of authentication.  The\n      following values
      are defined in this specification:\n         0 - Reserved.\n         1 - HMAC
      Cryptographic Authentication as described herein.\n   o  Auth Data Len\n      This
      is the length in octets of the Authentication Trailer (AT),\n      including
      both the 16-octet fixed header and the variable-length\n      message digest.\n
      \  o  Reserved\n      This field is reserved.  It SHOULD be set to 0 when sending\n
      \     protocol packets and MUST be ignored when receiving protocol\n      packets.\n
      \  o  Security Association Identifier (SA ID)\n      This 16-bit field maps
      to the authentication algorithm and the\n      secret key used to create the
      message digest appended to the\n      OSPFv3 protocol packet.\n      Though
      the SA ID implies the algorithm, the HMAC output size\n      should not be used
      by implementers as an implicit hint, because\n      additional algorithms may
      be defined in the future that have the\n      same output size.\n   o  Cryptographic
      Sequence Number\n      This is a 64-bit strictly increasing sequence number
      that is used\n      to guard against replay attacks.  The 64-bit sequence number
      MUST\n      be incremented for every OSPFv3 packet sent by the OSPFv3 router.\n
      \     Upon reception, the sequence number MUST be greater than the\n      sequence
      number in the last accepted OSPFv3 packet of the same\n      OSPFv3 packet type
      from the sending OSPFv3 neighbor.  Otherwise,\n      the OSPFv3 packet is considered
      a replayed packet and dropped.\n      OSPFv3 packets of different types may
      arrive out of order if they\n      are prioritized as recommended in [RFC4222].\n
      \     OSPFv3 routers implementing this specification MUST use available\n      mechanisms
      to preserve the sequence number's strictly increasing\n      property for the
      deployed life of the OSPFv3 router (including\n      cold restarts).  One mechanism
      for accomplishing this would be to\n      use the high-order 32 bits of the
      sequence number as a wrap/boot\n      count that is incremented anytime the
      OSPFv3 router loses its\n      sequence number state.  Sequence number wrap
      is described in\n      Section 4.1.1.\n   o  Authentication Data\n      This
      field contains variable data that is carrying the digest for\n      the protocol
      packet and optional LLS data block.\n"
    - contents:
      - "4.1.1.  Sequence Number Wrap\n   When incrementing the sequence number for
        each transmitted OSPFv3\n   packet, the sequence number should be treated
        as an unsigned 64-bit\n   value.  If the lower-order 32-bit value wraps, the
        higher-order\n   32-bit value should be incremented and saved in non-volatile
        storage.\n   If by some chance the OSPFv3 router is deployed long enough that\n
        \  there is a possibility that the 64-bit sequence number may wrap, all\n
        \  keys, independent of their key distribution mechanism, MUST be reset\n
        \  to avoid the possibility of replay attacks.  Once the keys have been\n
        \  changed, the higher-order sequence number can be reset to 0 and saved\n
        \  to non-volatile storage.\n"
      title: 4.1.1.  Sequence Number Wrap
    title: 4.1.  Authentication Trailer
  - contents:
    - "4.2.  OSPFv3 Header Checksum and LLS Data Block Checksum\n   Both the checksum
      calculation and verification are omitted for the\n   OSPFv3 header checksum
      and the LLS data block checksum [RFC5613] when\n   the OSPFv3 authentication
      mechanism described in this specification\n   is used.  This implies the following:\n
      \  o  For OSPFv3 packets to be transmitted, the OSPFv3 header checksum\n      computation
      is omitted, and the OSPFv3 header checksum SHOULD be\n      set to 0 prior to
      computation of the OSPFv3 Authentication Trailer\n      message digest.\n   o
      \ For OSPFv3 packets including an LLS data block to be transmitted,\n      the
      OSPFv3 LLS data block checksum computation is omitted, and the\n      OSPFv3
      LLS data block checksum SHOULD be set to 0 prior to\n      computation of the
      OSPFv3 Authentication Trailer message digest.\n   o  For received OSPFv3 packets
      including an OSPFv3 Authentication\n      Trailer, OSPFv3 header checksum verification
      MUST be omitted.\n      However, if the OSPFv3 packet does include a non-zero
      OSPFv3\n      header checksum, it will not be modified by the receiver and will\n
      \     simply be included in the OSPFv3 Authentication Trailer message\n      digest
      verification.\n   o  For received OSPFv3 packets including an LLS data block
      and OSPFv3\n      Authentication Trailer, LLS data block checksum verification
      MUST\n      be omitted.  However, if the OSPFv3 packet does include an LLS\n
      \     data block with a non-zero checksum, it will not be modified by\n      the
      receiver and will simply be included in the OSPFv3\n      Authentication Trailer
      message digest verification.\n"
    title: 4.2.  OSPFv3 Header Checksum and LLS Data Block Checksum
  - contents:
    - "4.3.  Cryptographic Authentication Procedure\n   As noted earlier, the SA ID
      maps to the authentication algorithm and\n   the secret key used to generate
      and verify the message digest.  This\n   specification discusses the computation
      of OSPFv3 Cryptographic\n   Authentication data when any of the NIST SHS family
      of algorithms is\n   used in the Hashed Message Authentication Code (HMAC) mode.\n
      \  The currently valid algorithms (including mode) for OSPFv3\n   Cryptographic
      Authentication include:\n   o  HMAC-SHA-1,\n   o  HMAC-SHA-256,\n   o  HMAC-SHA-384,
      and\n   o  HMAC-SHA-512.\n   Of the above, implementations of this specification
      MUST include\n   support for at least HMAC-SHA-256 and SHOULD include support
      for\n   HMAC-SHA-1 and MAY also include support for HMAC-SHA-384 and\n   HMAC-SHA-512.\n
      \  Implementations of this specification MUST use HMAC-SHA-256 as the\n   default
      authentication algorithm.\n"
    title: 4.3.  Cryptographic Authentication Procedure
  - contents:
    - "4.4.  Cross-Protocol Attack Mitigation\n   In order to prevent cross-protocol
      replay attacks for protocols\n   sharing common keys, the two-octet OSPFv3 Cryptographic
      Protocol ID\n   is appended to the Authentication Key prior to use.  Other protocols\n
      \  using Cryptographic Authentication as specified herein MUST similarly\n   append
      their respective Cryptographic Protocol IDs to their keys in\n   this step.
      \ Refer to the IANA Considerations (Section 7).\n"
    title: 4.4.  Cross-Protocol Attack Mitigation
  - contents:
    - "4.5.  Cryptographic Aspects\n   In the algorithm description below, the following
      nomenclature, which\n   is consistent with [FIPS-198-1], is used:\n   H is the
      specific hashing algorithm (e.g., SHA-256).\n   K is the Authentication Key
      from the OSPFv3 Security Association.\n   Ks is a Protocol-Specific Authentication
      Key obtained by appending\n   Authentication Key (K) with the two-octet OSPFv3
      Cryptographic\n   Protocol ID.\n   Ko is the cryptographic key used with the
      hash algorithm.\n   B is the block size of H, measured in octets rather than
      bits.  Note\n   that B is the internal block size, not the hash size.\n      For
      SHA-1 and SHA-256: B == 64\n      For SHA-384 and SHA-512: B == 128\n   L is
      the length of the hash, measured in octets rather than bits.\n   XOR is the
      exclusive-or operation.\n   Opad is the hexadecimal value 0x5c repeated B times.\n
      \  Ipad is the hexadecimal value 0x36 repeated B times.\n   Apad is a value
      that is the same length as the hash output or message\n   digest.  The first
      16 octets contain the IPv6 source address followed\n   by the hexadecimal value
      0x878FE1F3 repeated (L-16)/4 times.  This\n   implies that hash output is always
      a length of at least 16 octets.\n   1. Preparation of the Key\n      The OSPFv3
      Cryptographic Protocol ID is appended to the\n      Authentication Key (K),
      yielding a Protocol-Specific\n      Authentication Key (Ks).  In this application,
      Ko is always\n      L octets long.  While [RFC2104] supports a key that is up
      to\n      B octets long, this application uses L as the Ks length consistent\n
      \     with [RFC4822], [RFC5310], and [RFC5709].  According to\n      [FIPS-198-1],
      Section 3, keys greater than L octets do not\n      significantly increase the
      function strength.  Ks is computed as\n      follows:\n         If Ks is L octets
      long, then Ko is equal to Ks.  If Ks is more\n         than L octets long, then
      Ko is set to H(Ks).  If Ks is less\n         than L octets long, then Ko is
      set to the value of Ks, with\n         zeros appended to the end of Ks such
      that Ko is L octets long.\n   2. First-Hash\n      First, the OSPFv3 packet's
      Authentication Data field in the\n      Authentication Trailer is filled with
      the value Apad.  This is\n      very similar to the appendage described in [RFC2328],\n
      \     Appendix D.4.3, Items (6)(a) and (6)(d)).\n      Then, a First-Hash, also
      known as the inner hash, is computed as\n      follows:\n         First-Hash
      = H(Ko XOR Ipad || (OSPFv3 Packet))\n         When XORing Ko and Ipad, Ko will
      be padded with zeros to the\n         length of Ipad.\n         Implementation
      Note: The First-Hash above includes the\n         Authentication Trailer as
      well as the OSPFv3 packet as per\n         [RFC2328], Appendix D.4.3, and the
      LLS data block, if present\n         [RFC5613].\n      The definition of Apad
      (above) ensures that it is always the same\n      length as the hash output.
      \ This is consistent with RFC 2328.\n      Note that the \"(OSPFv3 Packet)\"
      referenced in the First-Hash\n      function above includes both the optional
      LLS data block and the\n      OSPFv3 Authentication Trailer.\n      The digest
      length for SHA-1 is 20 octets; for SHA-256, 32 octets;\n      for SHA-384, 48
      octets; and for SHA-512, 64 octets.\n   3. Second-Hash\n      Then a Second-Hash,
      also known as the outer hash, is computed as\n      follows:\n         Second-Hash
      = H(Ko XOR Opad || First-Hash)\n         When XORing Ko and Opad, Ko will be
      padded with zeros to the\n         length of Opad.\n   4. Result\n      The
      resulting Second-Hash becomes the authentication data that is\n      sent in
      the Authentication Trailer of the OSPFv3 packet.  The\n      length of the authentication
      data is always identical to the\n      message digest size of the specific hash
      function H that is\n      being used.\n      This also means that the use of
      hash functions with larger output\n      sizes will also increase the size of
      the OSPFv3 packet as\n      transmitted on the wire.\n         Implementation
      Note: [RFC2328], Appendix D specifies that the\n         Authentication Trailer
      is not counted in the OSPF packet's own\n         Length field but is included
      in the packet's IP Length field.\n         Similar to this, the Authentication
      Trailer is not included in\n         the OSPFv3 header length but is included
      in the IPv6 header\n         payload length.\n"
    title: 4.5.  Cryptographic Aspects
  - contents:
    - "4.6.  Message Verification\n   A router would determine that OSPFv3 is using
      an Authentication\n   Trailer (AT) by examining the AT-bit in the Options field
      in the\n   OSPFv3 header for Hello and Database Description packets.  The\n
      \  specification in the Hello and Database Description options indicates\n   that
      other OSPFv3 packets will include the Authentication Trailer.\n   The AT is
      accessed using the OSPFv3 packet header length to access\n   the data after
      the OSPFv3 packet and, if an LLS data block [RFC5613]\n   is present, using
      the LLS data block length to access the data after\n   the LLS data block.  The
      L-bit in the OSPFv3 options in Hello and\n   Database Description packets is
      examined to determine if an LLS data\n   block is present.  If an LLS data block
      is present (as specified by\n   the L-bit), it is included along with the OSPFv3
      Hello or Database\n   Description packet in the Cryptographic Authentication
      computation.\n   Due to the placement of the AT following the LLS data block
      and the\n   fact that the LLS data block is included in the Cryptographic\n
      \  Authentication computation, OSPFv3 routers supporting this\n   specification
      MUST minimally support examining the L-bit in the\n   OSPFv3 options and using
      the length in the LLS data block to access\n   the AT.  It is RECOMMENDED that
      OSPFv3 routers supporting this\n   specification fully support OSPFv3 Link-Local
      Signaling [RFC5613].\n   If usage of the AT, as specified herein, is configured
      for an OSPFv3\n   link, OSPFv3 Hello and Database Description packets with the
      AT-bit\n   clear in the options will be dropped.  All OSPFv3 packet types will\n
      \  be dropped if the AT is configured for the link and the IPv6 header\n   length
      is less than the amount necessary to include an Authentication\n   Trailer.\n
      \  The receiving interface's OSPFv3 SA is located using the SA ID in the\n   received
      AT.  If the SA is not found, or if the SA is not valid for\n   reception (i.e.,
      current time < KeyStartAccept or\n   current time >= KeyStopAccept), the OSPFv3
      packet is dropped.\n   If the cryptographic sequence number in the AT is less
      than or equal\n   to the last sequence number in the last OSPFv3 packet of the
      same\n   OSPFv3 type successfully received from the neighbor, the OSPFv3\n   packet
      MUST be dropped, and an error event SHOULD be logged.  OSPFv3\n   packets of
      different types may arrive out of order if they are\n   prioritized as recommended
      in [RFC4222].\n   Authentication-algorithm-dependent processing needs to be
      performed,\n   using the algorithm specified by the appropriate OSPFv3 SA for
      the\n   received packet.\n   Before an implementation performs any processing,
      it needs to save\n   the values of the Authentication Data field from the Authentication\n
      \  Trailer appended to the OSPFv3 packet.\n   It should then set the Authentication
      Data field with Apad before the\n   authentication data is computed (as described
      in Section 4.5).  The\n   calculated data is compared with the received authentication
      data in\n   the Authentication Trailer.  If the two do not match, the packet
      MUST\n   be discarded, and an error event SHOULD be logged.\n   After the OSPFv3
      packet has been successfully authenticated,\n   implementations MUST store the
      64-bit cryptographic sequence number\n   for each OSPFv3 packet type received
      from the neighbor.  The saved\n   cryptographic sequence numbers will be used
      for replay checking for\n   subsequent packets received from the neighbor.\n"
    title: 4.6.  Message Verification
  title: 4.  Authentication Procedure
- contents:
  - "5.  Migration and Backward Compatibility\n   All OSPFv3 routers participating
    on a link SHOULD be migrated to\n   OSPFv3 authentication at the same time.  As
    with OSPFv2\n   authentication, a mismatch in the SA ID, Authentication Type,
    or\n   message digest will result in failure to form an adjacency.  For\n   multi-access
    links, communities of OSPFv3 routers could be migrated\n   using different Interface
    Instance IDs.  However, at least one router\n   would need to form adjacencies
    between both the OSPFv3 routers\n   including and not including the Authentication
    Trailer.  This would\n   result in sub-optimal routing as well as added complexity
    and is only\n   recommended in cases where authentication is desired on the link
    and\n   migrating all the routers on the link at the same time isn't\n   feasible.\n
    \  In support of uninterrupted deployment, an OSPFv3 router implementing\n   this
    specification MAY implement a transition mode where it includes\n   the Authentication
    Trailer in transmitted packets but does not verify\n   this information in received
    packets.  This is provided as a\n   transition aid for networks in the process
    of migrating to the\n   authentication mechanism described in this specification.
    \ More\n   specifically:\n   1. OSPFv3 routers in transition mode will include
    the OSPFv3\n      Authentication Trailer in transmitted packets and set the AT-bit\n
    \     in the Options field of transmitted Hello and Database Description\n      packets.
    \ OSPFv3 routers receiving these packets and not having\n      authentication
    configured will ignore the Authentication Trailer\n      and AT-bit.\n   2. OSPFv3
    routers in transition mode will also calculate and set the\n      OSPFv3 header
    checksum and the LLS data block checksum in\n      transmitted packets so that
    they will not be dropped by OSPFv3\n      routers without authentication configured.\n
    \  3. OSPFv3 routers in transition mode will authenticate received\n      packets
    that either have the AT-bit set in the Options field for\n      Hello or Database
    Description packets or are from a neighbor that\n      previously set the AT-bit
    in the Options field of successfully\n      authenticated Hello and Database Description
    packets.\n   4. OSPFv3 routers in transition mode will also accept packets without\n
    \     the Options field AT-bit set in Hello and Database Description\n      packets.
    \ These packets will be assumed to be from OSPFv3 routers\n      without authentication
    configured, and they will not be\n      authenticated.  Additionally, the OSPFv3
    header checksum and LLS\n      data block checksum will be validated.\n"
  title: 5.  Migration and Backward Compatibility
- contents:
  - "6.  Security Considerations\n   This document proposes extensions to OSPFv3 that
    would make it more\n   secure than OSPFv3 as defined in [RFC5340].  It does not
    provide\n   confidentiality, as a routing protocol contains information that does\n
    \  not need to be kept secret.  It does, however, provide means to\n   authenticate
    the sender of packets that are of interest.  It\n   addresses all the security
    issues that have been identified in\n   [RFC6039] and [RFC6506].\n   It should
    be noted that the authentication method described in this\n   document is not
    being used to authenticate the specific originator of\n   a packet but rather
    is being used to confirm that the packet has\n   indeed been issued by a router
    that has access to the\n   Authentication Key.\n   Deployments SHOULD use sufficiently
    long and random values for the\n   Authentication Key so that guessing and other
    cryptographic attacks\n   on the key are not feasible in their environments.  Furthermore,
    it\n   is RECOMMENDED that Authentication Keys incorporate at least 128\n   pseudorandom
    bits to minimize the risk of such attacks.  In support\n   of these recommendations,
    management systems SHOULD support\n   hexadecimal input of Authentication Keys.\n
    \  Deployments that support a transitionary state but interoperate with\n   routers
    that do not support this authentication method may be exposed\n   to unauthenticated
    data during the transition period.\n   The mechanism described herein is not perfect
    and does not need to be\n   perfect.  Instead, this mechanism represents a significant
    increase\n   in the effort required for an adversary to successfully attack the\n
    \  OSPFv3 protocol, while not causing undue implementation, deployment,\n   or
    operational complexity.\n   Refer to [RFC4552] for additional considerations on
    manual keying.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document obsoletes RFC 6506; thus, IANA has
    updated the\n   references in existing registries that pointed to RFC 6506 to
    point\n   to this document.  This is the only IANA action requested by this\n
    \  document.\n   IANA previously allocated the AT-bit (0x000400) in the \"OSPFv3\n
    \  Options (24 bits)\" registry as described in Section 2.1.\n   IANA previously
    created the \"Open Shortest Path First v3 (OSPFv3)\n   Authentication Trailer
    Options\" registry.  This registry includes the\n   \"OSPFv3 Authentication Types\"
    registry, which defines valid values\n   for the Authentication Type field in
    the OSPFv3 Authentication\n   Trailer.  The registration procedure is Standards
    Action [RFC5226].\n           +-------------+-----------------------------------+\n
    \          |Value        | Designation                       |\n           +-------------+-----------------------------------+\n
    \          | 0           | Reserved                          |\n           |             |
    \                                  |\n           | 1           | HMAC Cryptographic
    Authentication |\n           |             |                                   |\n
    \          | 2-65535     | Unassigned                        |\n           +-------------+-----------------------------------+\n
    \                       OSPFv3 Authentication Types\n   Finally, IANA previously
    created the \"Keying and Authentication for\n   Routing Protocols (KARP) Parameters\"
    registry.  This registry\n   includes the \"Cryptographic Protocol ID\" registry,
    which provides\n   unique protocol-specific values for cryptographic applications,\n
    \  including but not limited to prevention of cross-protocol replay\n   attacks.
    \ Values can be assigned for both native IPv4/IPv6 protocols\n   and UDP/TCP protocols.
    \ The registration procedure is Standards\n   Action.\n                  +-------------+----------------------+\n
    \                 | Value/Range | Designation          |\n                  +-------------+----------------------+\n
    \                 | 0           | Reserved             |\n                  |
    \            |                      |\n                  | 1           | OSPFv3
    \              |\n                  |             |                      |\n                  |
    2-65535     | Unassigned           |\n                  +-------------+----------------------+\n
    \                        Cryptographic Protocol ID\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2328]  Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n
      \  [RFC5340]  Coltun, R., Ferguson, D., Moy, J., and A. Lindem, \"OSPF\n              for
      IPv6\", RFC 5340, July 2008.\n   [RFC5709]  Bhatia, M., Manral, V., Fanto, M.,
      White, R., Barnes, M.,\n              Li, T., and R. Atkinson, \"OSPFv2 HMAC-SHA
      Cryptographic\n              Authentication\", RFC 5709, October 2009.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [FIPS-180-4]\n              US National Institute
      of Standards and Technology, \"Secure\n              Hash Standard (SHS)\",
      FIPS PUB 180-4, March 2012.\n   [FIPS-198-1]\n              US National Institute
      of Standards and Technology, \"The\n              Keyed-Hash Message Authentication
      Code (HMAC)\", FIPS\n              PUB 198-1, July 2008.\n   [MANUAL-KEY]\n
      \             Bhatia, M., Hartman, S., and D. Zhang, \"Security Extension\n
      \             for OSPFv2 when using Manual Key Management\", Work in\n              Progress,
      February 2011.\n   [RFC2104]  Krawczyk, H., Bellare, M., and R. Canetti, \"HMAC:
      Keyed-\n              Hashing for Message Authentication\", RFC 2104,\n              February
      1997.\n   [RFC4222]  Choudhury, G., Ed., \"Prioritized Treatment of Specific\n
      \             OSPF Version 2 Packets and Congestion Avoidance\", BCP 112,\n
      \             RFC 4222, October 2005.\n   [RFC4302]  Kent, S., \"IP Authentication
      Header\", RFC 4302,\n              December 2005.\n   [RFC4303]  Kent, S., \"IP
      Encapsulating Security Payload (ESP)\",\n              RFC 4303, December 2005.\n
      \  [RFC4552]  Gupta, M. and N. Melam, \"Authentication/Confidentiality\n              for
      OSPFv3\", RFC 4552, June 2006.\n   [RFC4822]  Atkinson, R. and M. Fanto, \"RIPv2
      Cryptographic\n              Authentication\", RFC 4822, February 2007.\n   [RFC5226]
      \ Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              May 2008.\n
      \  [RFC5310]  Bhatia, M., Manral, V., Li, T., Atkinson, R., White, R.,\n              and
      M. Fanto, \"IS-IS Generic Cryptographic\n              Authentication\", RFC
      5310, February 2009.\n   [RFC5613]  Zinin, A., Roy, A., Nguyen, L., Friedman,
      B., and D.\n              Yeung, \"OSPF Link-Local Signaling\", RFC 5613, August
      2009.\n   [RFC5879]  Kivinen, T. and D. McDonald, \"Heuristics for Detecting\n
      \             ESP-NULL Packets\", RFC 5879, May 2010.\n   [RFC5996]  Kaufman,
      C., Hoffman, P., Nir, Y., and P. Eronen,\n              \"Internet Key Exchange
      Protocol Version 2 (IKEv2)\",\n              RFC 5996, September 2010.\n   [RFC6039]
      \ Manral, V., Bhatia, M., Jaeggli, J., and R. White, \"Issues\n              with
      Existing Cryptographic Protection Methods for Routing\n              Protocols\",
      RFC 6039, October 2010.\n   [RFC6506]  Bhatia, M., Manral, V., and A. Lindem,
      \"Supporting\n              Authentication Trailer for OSPFv3\", RFC 6506,\n
      \             February 2012.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  Acknowledgments\n   First and foremost, thanks to the US National
    Institute of Standards\n   and Technology for their work on the SHA [FIPS-180-4]
    and HMAC\n   [FIPS-198-1].\n   Thanks also need to go to the authors of the HMAC-SHA
    authentication\n   RFCs, including [RFC4822], [RFC5310], and [RFC5709].  The basic\n
    \  HMAC-SHA procedures were originally described by Ran Atkinson in\n   [RFC4822].\n
    \  Also, thanks to Ran Atkinson for help in the analysis of RFC 6506\n   errata.\n
    \  Thanks to Srinivasan K L and Marek Karasek for their identification\n   and
    submission of RFC 6506 errata.\n   Thanks to Sam Hartman for discussions on replay
    mitigation and the\n   use of a 64-bit strictly increasing sequence number.  Also,
    thanks to\n   Sam for comments during IETF last call with respect to the OSPFv3
    SA\n   and the sharing of keys between protocols.\n   Thanks to Michael Barnes
    for numerous comments and strong input on\n   the coverage of LLS by the Authentication
    Trailer (AT).\n   Thanks to Marek Karasek for providing the specifics with respect
    to\n   backward-compatible transition mode.\n   Thanks to Michael Dubrovskiy and
    Anton Smirnov for comments on\n   document revisions.\n   Thanks to Rajesh Shetty
    for numerous comments, including the\n   suggestion to include an Authentication
    Type field in the\n   Authentication Trailer for extendibility.\n   Thanks to
    Uma Chunduri for suggesting that we may want to protect the\n   IPv6 source address
    even though OSPFv3 uses the Router ID for\n   neighbor identification.\n   Thanks
    to Srinivasan K L, Shraddha H, Alan Davey, Russ White, Stan\n   Ratliff, and Glen
    Kent for their support and review comments.\n   Thanks to Alia Atlas for comments
    made under the purview of the\n   Routing Directorate review.\n   Thanks to Stephen
    Farrell for comments during the IESG review.\n   Stephen was also involved in
    the discussion of cross-protocol\n   attacks.\n   Thanks to Brian Carpenter for
    comments made during the Gen-ART\n   review.\n   Thanks to Victor Kuarsingh for
    the OPS-DIR review.\n   Thanks to Brian Weis for the SEC-DIR review.\n"
  title: Appendix A.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Manav Bhatia\n   Alcatel-Lucent\n   Bangalore\n   India\n
    \  EMail: manav.bhatia@alcatel-lucent.com\n   Vishwas Manral\n   Ionos Corp.\n
    \  4100 Moorpark Ave.\n   San Jose, CA  95117\n   USA\n   EMail: vishwas@ionosnetworks.com\n
    \  Acee Lindem\n   Ericsson\n   301 Midenhall Way\n   Cary, NC  27513\n   USA\n
    \  EMail: acee.lindem@ericsson.com\n"
  title: Authors' Addresses
