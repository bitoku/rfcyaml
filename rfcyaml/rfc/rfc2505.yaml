- title: __initial_text__
  contents:
  - '                Anti-Spam Recommendations for SMTP MTAs

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo gives a number of implementation recommendations for SMTP,\n\
    \   [1], MTAs (Mail Transfer Agents, e.g. sendmail, [8]) to make them\n   more\
    \ capable of reducing the impact of spam(*).\n   The intent is that these recommendations\
    \ will help clean up the spam\n   situation, if applied on enough SMTP MTAs on\
    \ the Internet, and that\n   they should be used as guidelines for the various\
    \ MTA vendors. We are\n   fully aware that this is not the final solution, but\
    \ if these\n   recommendations were included, and used, on all Internet SMTP MTAs,\n\
    \   things would improve considerably and give time to design a more long\n  \
    \ term solution. The Future Work section suggests some ideas that may\n   be part\
    \ of such a long term solution. It might, though, very well be\n   the case that\
    \ the ultimate solution is social, political, or legal,\n   rather than technical\
    \ in nature.\n   The implementor should be aware of the increased risk of denial\
    \ of\n   service attacks that several of the proposed methods might lead to.\n\
    \   For example, increased number of queries to DNS servers and increased\n  \
    \ size of logfiles might both lead to overloaded systems and system\n   crashes\
    \ during an attack.\n   A brief summary of this memo is:\n   o   Stop unauthorized\
    \ mail relaying.\n   o   Spammers then have to operate in the open; deal with\
    \ them.\n   o   Design a mail system that can handle spam.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo is a Best Current Practice (BCP) RFC.  As such\
    \ it should be\n   used as a guideline for SMTP MTA implementors to make their\
    \ products\n   more capable of preventing/handling spam.  Despite this being its\n\
    \   primary goal, an intended side effect is to suggest to the\n   sysadmin/Postmaster\
    \ community which \"anti spam knobs\" an SMTP MTA is\n   expected to have.\n \
    \  However, this memo is not generally intended as a description on how\n   to\
    \ operate an SMTP MTA - which \"knobs\" to turn and how to configure\n   the options.\
    \ If suggestions are provided, they will be clearly marked\n   and they should\
    \ be read as such.\n"
- title: 1.1. Background
  contents:
  - "1.1. Background\n   Mass unsolicited electronic mail, often known as spam(*),\
    \ has\n   increased considerably during a short period of time and has become\
    \ a\n   serious threat to the Internet email community as a whole. Something\n\
    \   needs to be done fairly quickly.\n   The problem has several components:\n\
    \   o   It is high volume, i.e. people get a lot of such mail in their\n     \
    \  mailboxes.\n   o   It is completely \"blind\", i.e. there is no correlation\
    \ between\n       the receivers' areas of interest and the actual mail sent out\
    \ (at\n       least if one assumes that not everybody on the Internet is\n   \
    \    interested in porno pictures and spam programs...).\n   o   It costs real\
    \ money for the receivers. Since many receivers pay\n       for the time to transfer\
    \ the mailbox from the (dialup) ISP to\n       their computer they in reality\
    \ pay real money for this.\n   o   It costs real money for the ISPs. Assume one\
    \ 10 Kbyte message\n       sent to 10 000 users with their mailboxes at one ISP\
    \ host; that\n       means an unsolicited, unexpected, storage of 100 Mbytes.\
    \  State\n       of the art disks, 4 Gbyte, can take 40 such message floods before\n\
    \       they are filled. It is almost impossible to plan ahead for such\n    \
    \   \"storms\".\n   o   Many of the senders of spam are dishonest, e.g. hide behind\
    \ false\n       return addresses, deliberately write messages to look like they\n\
    \       were between two individuals so the spam recipient will think it\n   \
    \    was just misdelivered to them, say the message is \"material you\n      \
    \ requested\" when you never asked for it, and generally do\n       everything\
    \ they can without regard to honesty or ethics, to try\n       to get a few more\
    \ people to look at their message.\n       In fact some of the spam-programs take\
    \ a pride in adding false\n       info that will \"make the ISPs scratch their\
    \ heads\".\n       It is usually the case that people who send in protests (often\n\
    \       according to the instructions in the mail) find their mail\n       addresses\
    \ added to more lists and sold to other parties.\n   o   It is quite common practice\
    \ to make use of third party hosts as\n       relays to get the spam mail sent\
    \ out to the receivers. This theft\n       of service is illegal in most - if\
    \ not all - countries (at least\n       in the US spammers have been successfully\
    \ sued).  However, with\n       the original sender in the US, the (innocent)\
    \ relay in Sweden and\n       the list of receivers back in the US, the legal\
    \ process of\n       getting damages from the spammers becomes extremely difficult.\n"
- title: 1.2. Scope
  contents:
  - "1.2. Scope\n   This memo has no intention of being the final solution to the\
    \ spam\n   problem.\n   If, however, enough Internet MTAs did implement enough\
    \ of the rules\n   described below (especially the Non-Relay rules), we would\
    \ get the\n   spammers out in the open, where they could be taken care of. Either\n\
    \   pure legal actions would help, or we can block them technically using\n  \
    \ other rules described below (since the Non-Relay rules now make them\n   appear\
    \ openly, with their own hosts and domains, we can apply various\n   access filters\
    \ against them). In reality, a combination of legal and\n   technical methods\
    \ is likely to give the best result.\n   This way, the spam problem could be reduced\
    \ enough to allow the\n   Internet community to design and deploy a real and general\
    \ solution.\n   But, please note:\n       The Non-Relay rules are not in themselves\
    \ enough to stop spam.\n       Even if 99% of the SMTP MTAs implemented them from\
    \ Day 1,\n       spammers would still find the remaining 1% and use them. Or\n\
    \       spammers would just switch gear and connect directly to each and\n   \
    \    every recipient host; that will be to a higher cost for the\n       spammer,\
    \ but is still quite likely.\n   Even though IPv6 deployment may be near, the\
    \ spam problem is here\n   already and thus this memo restricts itself to the\
    \ current IPv4.\n"
- title: 1.3. Terminology
  contents:
  - "1.3. Terminology\n   Throughout this memo we will use the terminology of RFC2119,\
    \ [4]:\n   o   \"MUST\"\n       This word or the adjective \"REQUIRED\" means\
    \ that the item is an\n       absolute requirement.\n   o   \"SHOULD\"\n     \
    \  This word or the adjective \"RECOMMENDED\" means that there may\n       exist\
    \ valid reasons in particular circumstances to ignore this\n       item, but the\
    \ full implications should be understood and the case\n       carefully weighed\
    \ before choosing a different course.\n   o   \"MAY\"\n       This word or the\
    \ adjective \"OPTIONAL\" means that this item is\n       truly optional. One vendor\
    \ may choose to include the item because\n       a particular marketplace requires\
    \ it or because it enhances the\n       product, for example; another vendor may\
    \ omit the same item.\n"
- title: 1.4. Using DNS information
  contents:
  - "1.4. Using DNS information\n   In the memo we sometimes use the term \"host name\"\
    \ or \"domain name\"\n   which should be interpreted as a Fully Qualified Domain\
    \ Name, FQDN.\n   By this we mean the name returned from the DNS in response to\
    \ a PTR\n   query (.IN-ADDR.ARPA), i.e. when an IP address is translated to a\n\
    \   name, or we mean a name with a DNS A or MX record associated to it\n   RFC1034,\
    \ [5], and RFC1035, [6].\n   When we suggest use of FQDNs rather than IP addresses\
    \ this is because\n   FQDNs are intuitively much easier to use. However, all such\
    \ usage\n   depends heavily on DNS and .IN-ADDR.ARPA (PTR) information. Since\
    \ it\n   is fairly easy to forge that, either by false cache information\n   injected\
    \ in DNS servers or spammers running their own DNS with false\n   information\
    \ in them, host and domain names must be used with care,\n   e.g. verified so\
    \ that the translation address->name corresponds to\n   name->address. With Secure\
    \ DNS, RFC2065, [7], things will improve,\n   since spoofing of .IN-ADDR.ARPA\
    \ will no longer be possible.\n   One of the recommendations is about verifying\
    \ \"MAIL From:\" (envelope\n   originator) domains with the DNS (assure that appropriate\
    \ DNS\n   information exists for the domain). When making use of this\n   capability\
    \ there are a few things to consider:\n   (1) One must not forget the increased\
    \ amount of DNS queries which\n       might result in problems for the DNS server\
    \ itself to cope with\n       the load.  This itself can result in a denial of\
    \ service attack\n       against the DNS server just by sending email to a site.\n\
    \   (2) It should be noted that with negative caching in the DNS, forged\n   \
    \    DNS responses can be used to mount denial of service attacks.\n       For\
    \ example, if a site is known to implement a FQDN validity\n       check on addresses\
    \ in SMTP \"MAIL From:\" commands, an attacker may\n       be able to use negative\
    \ DNS responses to effectively block\n       acceptance of mail from one or more\
    \ origins. Because of this, one\n       should carefully check the DNS server\
    \ in use, e.g. how it\n       verifies that incoming responses correspond to outstanding\n\
    \       queries, to minimize the risk for such attacks.\n   (3) For early versions\
    \ of spam software FQDN checks provide quite\n       some relief, since that software\
    \ generates mail with completely\n       bogus \"MAIL From:\" that will never\
    \ get into the system if\n       verified with the DNS. This is in active use\
    \ at many\n       installations today and it does reduce spam.\n   On the other\
    \ hand, sites with weak DNS connectivity may find their\n   legitimate mail having\
    \ problems reaching destinations due to DNS\n   timeouts when the receivers verify\
    \ their \"MAIL From:\". However, since\n   DNS information is handled asynchronously\
    \ and is cached even though\n   the initial requester has given up, chances are\
    \ high that the\n   necessary information is there at a later attempt.\n   For\
    \ later versions of spam software, a check of \"MAIL From:\" is much\n   less\
    \ likely to help, since spam software evolves too and will start\n   using existing\
    \ mail addresses (whether or not that is legal is beyond\n   the scope of this\
    \ memo). But, at least the Internet will benefit from\n   the side effect that\
    \ this test stops typos and misconfigured UAs.\n"
- title: 1.5. Where to block spam, in SMTP, in RFC822 or in the UA
  contents:
  - "1.5. Where to block spam, in SMTP, in RFC822 or in the UA\n   Our basic assumption\
    \ is that refuse/accept is handled at the SMTP\n   layer and that an MTA that\
    \ decides to refuse a message should do so\n   while still in the SMTP dialogue.\
    \ First, this means that we do not\n   have to store a copy of a message we later\
    \ decide to refuse and\n   second, our responsibility for that message is low\
    \ or none - since we\n   have not yet read it in, we leave it to the sender to\
    \ handle the\n   error.\n"
- title: 1.6. SMTP Return Codes
  contents:
  - "1.6. SMTP Return Codes\n   SMTP has several classes of Return Codes, see [1]\
    \ for a discussion:\n   o   5xx\n       is a Permanent Negative Completion reply\
    \ (Fatal Error) and\n       results in the mail transfer being terminated and\
    \ the mail\n       returned to sender.\n   o   4xx\n       is a Transient Negative\
    \ Completion reply (Temporary Error) and\n       results in the mail transfer\
    \ being put back on queue again and a\n       new attempt being made later.\n\
    \   o   2xx\n       is a Positive Completion reply and indicates that the MTA\
    \ now has\n       taken responsibility for the delivery of the mail.\n   When\
    \ making use of the options/\"knobs\" described in this memo there\n   are a few\
    \ things to consider:\n   For some events, like \"Denied - you're on the spammer's\
    \ list\", 5xx\n   may be the correct Return Code, since it terminates the session\
    \ at\n   once and we are done with it (assuming that the spammer plays by the\n\
    \   SMTP rules, which he may decide not to do - in fact he can put the\n   mail\
    \ back on queue or turn to some other host, regardless of Return\n   Code). However,\
    \ a 5xx mistake in a configuration may cause legitimate\n   mail to bounce, which\
    \ may be quite unfortunate.\n   Therefore, we suggest 4xx as the Return Code for\
    \ most cases. Since\n   that is a non fatal error, the mail gets re-queued at\
    \ the sender and\n   we have at least some time to discover and correct configuration\n\
    \   errors, rather than have mail bounce (typically this is when we\n   refuse\
    \ to Relay for domains that we actually should accept since we\n   are on their\
    \ MX list).\n   A 4xx response also makes the spammer's host re-queue the mail\
    \ and if\n   it really is his own host who gets to do this it is probably a good\n\
    \   thing - fill up his disks with his own spam. If, on the other hand,\n   he\
    \ is using someone else as Relay Host, all the spam mail being\n   queued is a\
    \ fairly strong evidence that something bad is going on and\n   should cause attention\
    \ at that Relay Host.\n   However, 4xx Temporary Errors may have unexpected interaction\
    \ with\n   MX-records. If the receiving domain has several MX records and the\n\
    \   lowest preference MX-host refuses to receive mail with a \"451\"\n   Response\
    \ Code, the sending host may choose to - and often will - use\n   the next host\
    \ on the MX list.\n   If that next MX host does not have the same refuse-list,\
    \ it will of\n   course accept the mail, only to find that the final host still\n\
    \   refuses to receive that piece of mail (\"MAIL From:\"). Our intent was\n \
    \  to make the offending mail stay at the offending sender's host and\n   fill\
    \ up his mqueue disk, but it all ended up at our friend, the next\n   lowest preference\
    \ MX-host.\n   Finally, it has been suggested that one may use a 2xx Return Code\
    \ but\n   nevertheless decide not to forward or receive the spam mail; typical\n\
    \   alternatives are to store it elsewhere (e.g. /dev/null). This clearly\n  \
    \ violates the intent of RFC821 and should not be done without careful\n   consideration\
    \ - instead of blindly dropping the mail one could re-\n   queue it and manually\
    \ (or automagically) inspect whether it is spam\n   or legitimate mail and whether\
    \ it should be dropped or forwarded.\n"
- title: 1.7. Mailing Lists
  contents:
  - "1.7. Mailing Lists\n   An MTA that also has the ability to handle mailing lists\
    \ and expand\n   that to a number of recipients, needs to be able to authorize\
    \ senders\n   and protect its lists from spam. The mechanisms for this may be\
    \ very\n   different from those for ordinary mail and ordinary users and are not\n\
    \   covered in this memo.\n"
- title: 2. Recommendations
  contents:
  - "2. Recommendations\n   Here we first give a brief list of recommendations, followed\
    \ by a\n   more thorough discussion of each of them. We will also give\n   recommendations\
    \ on things NOT to do, things that may seem natural in\n   the spam fight (and\
    \ might even work so far) but that might wreak\n   havoc on Internet mail and\
    \ thus may cause more damage than good.\n   1)  MUST be able to restrict unauthorized\
    \ use as Mail Relay.\n   2)  MUST be able to provide \"Received:\" lines with\
    \ enough\n       information to make it possible to trace the mail path, despite\n\
    \       spammers use forged host names in HELO statements etc.\n   3)  MUST be\
    \ able to provide local log information that makes it\n       possible to trace\
    \ the event afterwards.\n   4)  SHOULD be able to log all occurrences of anti-relay/anti-spam\n\
    \       actions.\n   5)  SHOULD be able to refuse mail from a host or a group\
    \ of hosts.\n   6a) MUST NOT refuse \"MAIL From: <>\".\n   6b) MUST NOT refuse\
    \ \"MAIL From: <user@my.local.dom.ain>\".\n   7a) SHOULD be able to refuse mail\
    \ from a specific \"MAIL From:\"\n       user, <foo@domain.example>.\n   7b) SHOULD\
    \ be able to refuse mail from an entire \"MAIL From:\"  domain\n       <.*@domain.example>.\n\
    \   8)  SHOULD be able to limit (\"Rate Control\") mail flow.\n   9)  SHOULD be\
    \ able to verify \"MAIL From:\" domain (using DNS or\n       other means).\n \
    \  10) SHOULD be able to verify <local-part> in outgoing mail.\n   11) SHOULD\
    \ be able to control SMTP VRFY and EXPN.\n   12) SHOULD be able to control SMTP\
    \ ETRN.\n   13) MUST be able to configure to provide different Return Codes\n\
    \       for different rules (e.g. 451 Temp Fail vs 550 Fatal Error).\n   The discussion\
    \ below often ends up with a need to do various forms of\n   pattern matching\
    \ on domain/host names and IP addresses/subnets.  It\n   is RECOMMENDED that the\
    \ data/template for doing so may be supplied\n   outside of the MTA, e.g. that\
    \ the pattern matching rules be included\n   in the MTA but that the actual patterns\
    \ may be in an external file.\n   It is also RECOMMENDED that the pattern matching\
    \ rules (external\n   file) may contain regular expressions, to give maximum flexibility.\n\
    \   Of course string matching on domain/host names MUST NOT be case\n   sensitive.\
    \ Since <local-part> may be case sensitive it may be natural\n   to keep that\
    \ here. However, since <sPAmMeR@domain.example> and\n   <spammer@domain.example>\
    \ is most probably the same user and since the\n   string compares are used to\
    \ refuse his messages, we suggest that\n   <local-part> comparisons be case insensitive\
    \ too.\n   The interpretation that should apply to all these recommendations is\n\
    \   flexibility - regardless of how well we design anti-spam rules today,\n  \
    \ spammers will find ways around them and a well designed MTA should be\n   flexible\
    \ enough to meet those new threats.\n"
- title: 2.1. Restricting unauthorized Mail Relay usage
  contents:
  - "2.1. Restricting unauthorized Mail Relay usage\n   Unauthorized usage of a host\
    \ as Mail Relay means theft of the relay's\n   resources and puts the relay owner's\
    \ reputation at risk. It also\n   makes it impossible to filter out or block spam\
    \ without at the same\n   time blocking legitimate mail.\n   Therefore, the MTA\
    \ MUST be able to control/refuse such Relay usage.\n   In an SMTP session we have\
    \ 4 elements, each with a varying degree of\n   trust:\n   1)  \"HELO Hostname\"\
    \           Easily and often forged.\n   2)  \"MAIL From:\"              Easily\
    \ and often forged.\n   3)  \"RCPT To:\"                Correct, or at least intended.\n\
    \   4)  SMTP_Caller (host)        IP.src addr OK, FQDN may be OK.\n   Since 1)\
    \ and 2) are so easily and often forged, we cannot depend on\n   them at all to\
    \ authorize usage of our host as Mail Relay.\n   Instead, the MTA MUST be able\
    \ to authorize Mail Relay usage based on\n   a combination of:\n   o   \"RCPT\
    \ To:\" address (domain).\n   o   SMTP_Caller FQDN hostname.\n   o   SMTP_Caller\
    \ IP address.\n   The suggested algorithm is:\n   a)  If \"RCPT To:\" is one of\
    \ \"our\" domains, local or a domain that\n       we accept to forward to (alternate\
    \ MX), then accept to Relay.\n   b)  If SMTP_Caller is authorized, either its\
    \ IP.src or its FQDN\n       (depending on if you trust the DNS), then accept\
    \ to Relay.\n   c)  Else refuse to Relay.\n   When doing a) you have to make sure\
    \ all kinds of SMTP source routing\n   (both the official [@a,@b:u@c], the '%'\
    \ hack and uucp-style '!' path)\n   is either removed completely before the test,\
    \ or at least is\n   taken into account.\n   A site implementing this requirement\
    \ must also be aware that they\n   might block correctly addressed messages, especially\
    \ such originating\n   or terminating in a gateway to a different mail system\
    \ than SMTP.\n   Before implementing such a policy, a careful inventory should\
    \ be done\n   to make sure all routing algorithms used, either by other mail\n\
    \   systems or ad-hoc, are known. Each one of such systems must be taken\n   care\
    \ of on a case-by-case basis.\n   Examples of such mail systems, and their addressing\
    \ schemes are X.400\n   with an address of the type:\n       \"/c=us/admd= /prmd=xyz/dd.rfc-822=user(a)final/\"\
    @x400-gateway\n   Another example involves DECnet MAIL-11, which can have addresses\
    \ in\n   the form:\n       \"gateway::smtp%\\\"user@final\\\"\"@mail-11-gateway\n\
    \   In all cases the configuration MUST support wild cards for FQDNs and\n   classful\
    \ IP addresses and SHOULD support \"address/mask\" for classless\n   IP addresses,\
    \ e.g. domain.example and *.domain.example; 10.11.*.*,\n   192.168.1.*, 192.168.2.*,\
    \ 10.0.0.0/13, 192.168.1.0/23.\n   The configuration SHOULD allow for the decision/template\
    \ data to be\n   supplied by an external source, e.g. text file or dbm database.\
    \ The\n   decision/template SHOULD be allowed to contain regular expressions.\n"
- title: '2.2. Received: lines'
  contents:
  - "2.2. Received: lines\n   The MTA MUST prepend a \"Received:\" line in the mail\
    \ (as described in\n   RFC822, [2], and required in RFC1123, [3]). This \"Received:\"\
    \ line\n   MUST contain enough information to make it possible to trace the mail\n\
    \   path back to the sender. We have two cases:\n"
- title: 2.2.1. Direct MTA-to-MTA connections
  contents:
  - "2.2.1. Direct MTA-to-MTA connections\n   Internet mail was designed such that\
    \ the sending host connects\n   directly to the recipient as described by MX records\
    \ (there may be\n   several MX hosts on a priority list). To assure traceability\
    \ back to\n   the sending host (which may be a firewall/gateway, as described\n\
    \   later) each MTA along the path, including the final MTA, MUST prepend\n  \
    \ a \"Received:\" line. For such a \"Received:\" line we have:\n   It MUST contain:\n\
    \   o   The IP address of the caller.\n   o   The 'date-time' as described in\
    \ RFC822, [2], pp 18.\n   It SHOULD contain:\n   o   The FQDN corresponding to\
    \ the callers IP address.\n   o   The argument given in the \"HELO\" statement.\n\
    \   o   Authentication information, if an authenticated connection\n       was\
    \ used for the transmission / submission.\n   It is suggested that most other\
    \ \"Received:\" fields described in\n   RFC822 be included in the \"Received:\"\
    \ lines.\n   Basically, any information that can help tracing the message can\
    \ and\n   should be added to the \"Received:\" line. It is true even when the\n\
    \   initial submission is non-SMTP, for example submission via a web-based\n \
    \  mail client where http is used between the web client and server, a\n   \"\
    Received:\" line can be used to identify that connection stating what\n   IP-address\
    \ was used when connecting to the http server where the mail\n   was created.\n\
    \   These recommendations are deliberately stronger than RFC1123, [3],\n   and\
    \ are there to assure that mail sent directly from a spammer's host\n   to a recipient\
    \ can be traced with enough accuracy; a typical example\n   is when a spammer\
    \ uses a dialup account and the ISP needs to have his\n   IP address at the 'date-time'\
    \ to be able to take action against him.\n"
- title: 2.2.2. Firewall/gateway type devices
  contents:
  - "2.2.2. Firewall/gateway type devices\n   Organizations with a policy of hiding\
    \ their internal network structure\n   must still be allowed and able to do so.\
    \ They usually make their\n   internal MTAs prepend \"Received:\" lines with a\
    \ very limited amount of\n   information, or prepend none at all. Then they send\
    \ out the mail\n   through some kind of firewall/gateway device, which may even\
    \ remove\n   all the internal MTAs' \"Received:\" lines before it prepends its\
    \ own\n   \"Received:\" line (as required in RFC1123, [3]).\n   By doing so they\
    \ take on the full responsibility to trace spammers\n   that send from inside\
    \ their organization or they accept to be held\n   responsible for those spammers'\
    \ activities. It is REQUIRED that the\n   information provided in their outgoing\
    \ mail is sufficient for them to\n   perform any necessary traces.\n   In the\
    \ case of incoming mail to an organization, the \"Received:\"\n   lines MUST be\
    \ kept intact to make sure that users receiving mail on\n   the inside can give\
    \ information needed to trace incoming messages to\n   their origin.\n   Generally,\
    \ a gateway SHOULD NOT change or delete \"Received:\" lines\n   unless it is a\
    \ security requirement to do so. Changing the content\n   of existing \"Received:\"\
    \ lines to make sure they \"make sense\" when\n   passing a mail gateway of some\
    \ kind most often destroys and deletes\n   information needed to make a message\
    \ traceable. Care must be taken to\n   preserve the information in \"Received:\"\
    \ lines, either in the message\n   itself, the mail that the receiver gets, or\
    \ if that is impossible, in\n   logfiles.\n"
- title: 2.3. Event logs
  contents:
  - "2.3. Event logs\n   The MTA MUST be able to provide enough local log information\
    \ to make\n   it possible to trace the event. This includes most of the information\n\
    \   put into the \"Received:\" lines; see above.\n"
- title: 2.4. Log anti-relay/anti-spam actions
  contents:
  - "2.4. Log anti-relay/anti-spam actions\n   The MTA SHOULD be able to log all anti-relay/anti-spam\
    \ actions. The\n   log entries SHOULD contain at least:\n   o   Time information.\n\
    \   o   Refusal information, i.e. why the request was refused (\"Mail\n      \
    \ From\", \"Relaying Denied\", \"Spam User\", \"Spam Host\", etc).\n   o   \"\
    RCPT To:\" addresses (domains).\n       (If the connection was disallowed at an\
    \ earlier stage, e.g.\n       by checking the SMTP_Caller IP address, the \"RCPT\
    \ To:\"\n       address is unknown and therefore cannot be logged).\n   o   Offending\
    \ host's IP address.\n   o   Offending host's FQDN hostname.\n   o   Other relevant\
    \ information (e.g. given during the SMTP\n       dialogue, before we decided\
    \ to refuse the request).\n   It should be noted that by logging more events,\
    \ especially denied\n   email, one opens the possibility for denial of service\
    \ attacks, for\n   example by filling logs by having a very large amount of \"\
    RCPT To:\"\n   commands. An implementation that implements increased logging\n\
    \   according to this description must be aware of the fact that the size\n  \
    \ of the logfiles increases, especially during attacks.\n"
- title: 2.5. Refuse mail based on SMTP_Caller address
  contents:
  - "2.5. Refuse mail based on SMTP_Caller address\n   The MTA SHOULD be able to accept\
    \ or refuse mail from a specific host\n   or from a group of hosts. Here we mean\
    \ the IP.src address or the FQDN\n   that its .IN-ADDR.ARPA resolves to (depending\
    \ on whether you trust\n   the DNS). This functionality could be implemented at\
    \ a firewall, but\n   since the MTA should be able to \"defend itself\" we recommend\
    \ it be able\n   to as well.\n   It is RECOMMENDED that the MTA be able to decide\
    \ based on FQDN hostnames\n   (host.domain.example), on wild card domain names\
    \ (*.domain.example),\n   on individual IP addresses (10.11.12.13) or on IP addresses\
    \ with a\n   prefix length (10.0.0.0/8, 192.168.1.0/24).\n   It is also RECOMMENDED\
    \ that these decision rules can be combined to\n   form a flexible list of accept/refuse/accept/refuse,\
    \ e.g:\n       accept   host.domain.example\n       refuse   *.domain.example\n\
    \       accept   10.11.12.13\n       accept   192.168.1.0/24\n       refuse  \
    \ 10.0.0.0/8\n   The list is searched until first match and the accept/refuse\
    \ action\n   is based on that.\n   IP-address/length is RECOMMENDED. However,\
    \ implementations with wild\n   cards, e.g. 10.11.12.* (classful networks on byte\
    \ boundaries only)\n   are of course much better than those without.\n   To improve\
    \ filtering even more, the MTA MAY provide complete regular\n   expressions to\
    \ be used for hostnames; possibly also for IP addresses.\n"
- title: '2.6. "MAIL From: <>" and "MAIL From: <user@my.local.dom.ain>"'
  contents:
  - "2.6. \"MAIL From: <>\" and \"MAIL From: <user@my.local.dom.ain>\"\n   Although\
    \ the fight against spammers is important it must never be\n   done in a way that\
    \ violates existing email standards. Since spammers\n   often forge \"MAIL From:\"\
    \ addresses it is tempting to put general\n   restrictions on that, especially\
    \ for some \"obvious\" addresses. This\n   may, however, wreak more havoc to the\
    \ mail community than spam does.\n   When there is a need to refuse mail from\
    \ a particular host or site\n   our recommendation is to use other methods mentioned\
    \ in this memo,\n   e.g. refuse mail based on SMTP_Caller address (or name), regardless\n\
    \   of what \"MAIL From:\" was used.\n"
- title: '2.6.1. "MAIL From: <>"'
  contents:
  - "2.6.1. \"MAIL From: <>\"\n   The MTA MUST NOT refuse to receive \"MAIL From:\
    \ <>\".\n   The \"MAIL From: <>\" address is used in error messages from the mail\n\
    \   system itself, e.g. when a legitimate mail relay is used and forwards\n  \
    \ an error message back to the user. Refusing to receive such mail\n   means that\
    \ users may not be notified of errors in their outgong mail,\n   e.g.  \"User\
    \ unknown\", which will no doubt wreak more havoc to the\n   mail community than\
    \ spam does.\n   The most common case of such legitimate \"MAIL From: <>\" is\
    \ to one\n   recipient, i.e. an error message returned to one single individual.\n\
    \   Since spammers have used \"MAIL From: <>\" to send to many recipients,\n \
    \  it is tempting to either reject such mail completely or to reject all\n   but\
    \ the first recipient. However, there are legitimate causes for an\n   error mail\
    \ to go to multiple recipients, e.g. a list with several\n   list owners, all\
    \ located at the same remote site, and thus the MTA\n   MUST NOT refuse \"MAIL\
    \ From: <>\" even in this case.\n   However, the MTA MAY throttle down the TCP\
    \ connection (\"read()\"\n   frequency) if there are more than one \"RCPT To:\"\
    \ and that way slow\n   down spammers using \"MAIL From: <>\".\n"
- title: '2.6.2. "MAIL From: <user@my.local.dom.ain>"'
  contents:
  - "2.6.2. \"MAIL From: <user@my.local.dom.ain>\"\n   The MTA MUST NOT refuse \"\
    MAIL From: <user@my.local.dom.ain>\".\n   By \"my.local.dom.ain\" we mean the\
    \ domain name(s) that are treated as\n   local and result in local delivery. At\
    \ first thought it may seem like\n   noone else will need to use \"MAIL From:\
    \ <user@my.local.dom.ain>\" and\n   that restrictions on who may use that would\
    \ reduce the risk of fraud\n   and thus reduce spam. While this may be true in\
    \ the (very) short\n   term, it also does away with at least two legitimate usages:\n\
    \   o   Aliases (.forward files).\n       <user1@my.local.dom.ain> sends to <user2@external.example>\
    \ and\n       that mail gets forwarded back to <user2@my.local.dom.ain>, e.g.\n\
    \       since <user2> has moved to my.local.dom.ain and has a .forward\n     \
    \  file at external.example.\n   o   Mailing lists.\n       RFC1123, [3], gives\
    \ a clear requirement that \"MAIL From:\" for\n       mail from a mailing list\
    \ should reflect the owner of the list,\n       rather than the individual sender.\
    \ Because of this fact, and the\n       fact that the owner of the list might\
    \ not be in the same domain\n       as the list (list host) itself, mail may arrive\
    \ to the list\n       owner's domain (mail host) from a foreign domain (from a\
    \ host\n       serving a foreign domain) with the list owner's local domain in\n\
    \       the \"Mail From:\" command.\n   If \"MAIL From: <user@my.local.dom.ain>\"\
    \ is rejected, both these cases\n   will result in failure to deliver legitimate\
    \ mail.\n"
- title: 2.7. Refuse based on "MAIL From:"
  contents:
  - "2.7. Refuse based on \"MAIL From:\"\n   The MTA SHOULD be able to refuse to receive\
    \ mail from a specific\n   \"MAIL From:\" user (foo@domain.example) or from an\
    \ entire \"MAIL From:\"\n   domain (domain.example). In general these kinds of\
    \ rules are easily\n   overcome by the spammers changing \"MAIL From:\" every\
    \ so often, but\n   the ability to block a certain user or a certain domain is\
    \ quite\n   helpful while an attack has just been discovered and is ongoing.\n\
    \   Please note that\n       \"MAIL From: <>\"\n   and\n       \"MAIL From: <user@my.local.dom.ain>\"\
    \n   MUST NOT be refused (see above), except when other policies block the\n \
    \  connection, for example when the SMTP_Caller IP address of the peer\n   belongs\
    \ to a network which is deliberately refused.\n"
- title: 2.8. Rate Control
  contents:
  - "2.8. Rate Control\n   The MTA SHOULD provide tools for the mail host to control\
    \ the rate\n   with which mail is sent or received. The idea is twofold:\n   1)\
    \  If we happen to have an legitimate mail user with an existing\n       legitimate\
    \ account and this user sends out spam, we may want to\n       reduce the speed\
    \ with which he sends it out. This is not without\n       controversy and must\
    \ be used with extreme care, but it may\n       protect the rest of the Internet\
    \ from him.\n   2)  If we are under a spam attack it may help us considerably\
    \ just\n       being able to slow down the incoming mail rate for that\n     \
    \  particular user/host.\n   For sending mail, this has to be done by throttling\
    \ the TCP\n   connection to set the acceptable output data rate, e.g. reduce the\n\
    \   \"write()\" frequency.\n   For receiving mail, we could use basically the\
    \ same technique, e.g.\n   reduce the \"read()\" frequency, or we could signal\
    \ with a 4xx Return\n   Code that we cannot receive. It is RECOMMENDED that the\
    \ decision to\n   take such action be based on \"MAIL From:\" user, \"MAIL From:\"\
    \ domain,\n   SMTP_Caller (name/address), \"RCPT TO:\", or a combination of all\n\
    \   these.\n"
- title: 2.9. Verify "MAIL From:"
  contents:
  - "2.9. Verify \"MAIL From:\"\n   The MTA SHOULD be able to perform a simple \"\
    sanity check\" of the\n   \"MAIL From:\" domain and refuse to receive mail if\
    \ that domain is\n   nonexistent (i.e. does not resolve to having an MX or an\
    \ A record).\n   If the DNS error is temporary, TempFail, the MTA MUST return\
    \ a 4xx\n   Return Code (Temporary Error). If the DNS error is an Authoritative\n\
    \   NXdomain (host/domain unknown) the MTA SHOULD still return a 4xx\n   Return\
    \ Code (since this may just be primary and secondary DNS not\n   being in sync)\
    \ but it MAY allow for an 5xx Return Code (as configured\n   by the sysadmin).\n"
- title: 2.10. Verify <local-part>
  contents:
  - "2.10. Verify <local-part>\n   The MTA SHOULD allow outgoing mail to have its\
    \ <local-part> verified\n   so that the sender name is a real user or an existing\
    \ alias. This is\n   basically to protect the rest of the Internet from various\
    \ \"typos\"\n       MAIL From: <fo0bar@domain.example>\n   and/or malicious users\n\
    \       MAIL From: <I.am.unknown.to.you.he.he@domain.example>\n   As always this\
    \ can be overcome by spammers really wanting to do so,\n   but with more strict\
    \ rules for relaying it becomes harder and harder.\n   In fact, catching \"typos\"\
    \ at the initial (and official) mail relay is\n   in itself enough motivation\
    \ for this recommendation.\n"
- title: 2.11. SMTP VRFY and EXPN
  contents:
  - "2.11. SMTP VRFY and EXPN\n   Both SMTP VRFY and EXPN provide means for a potential\
    \ spammer to test\n   whether the addresses on his list are valid (VRFY) and even\
    \ get more\n   addresses (EXPN). Therefore, the MTA SHOULD control who is is allowed\n\
    \   to issue these commands. This may be \"on/off\" or it may use access\n   lists\
    \ similar to those mentioned previously.\n   Note that the \"VRFY\" command is\
    \ required according to RFC821, [1].\n   The response can, though, be \"252 Argument\
    \ not checked\" to represent\n   \"off\" or blocked via an access list. This should\
    \ be the default.\n   Default for the \"EXPN\" command should be \"off\".\n"
- title: 2.12. SMTP ETRN
  contents:
  - "2.12. SMTP ETRN\n   SMTP ETRN means that the MTA will re-run its mail queue,\
    \ which may be\n   quite costly and open for Denial of Service attacks. Therefore,\
    \ the\n   MTA SHOULD control who is is allowed to issue the ETRN command.  This\n\
    \   may be \"on/off\" or it may use access lists similar to those mentioned\n\
    \   previously. Default should be \"off\".\n"
- title: 2.13. Return Codes
  contents:
  - "2.13. Return Codes\n   The primary issue here is flexibility - it is simply not\
    \ possible to\n   define in a document how to make tradeoffs between returning\
    \ 5xx and\n   make legitimate mail fail at once due to a configuration mistake\
    \ and\n   returning 4xx and be able to catch such configuration mistakes via\n\
    \   log file inspection.\n   Therefore, the MTA MUST be configurable to provide\
    \ \"Success\" (2xx),\n   \"Temporary Failure\" (4xx) or \"Permanent Failure\"\
    \ (5xx) for different\n   rules or policies. The exact return codes, other than\
    \ the first digit\n   (2, 4 or 5) should, however, not be configurable.  This\
    \ is because of\n   the ease of configuring the software in the wrong way, and\
    \ the fact\n   that the selection of exactly what error code to use is very subtle\n\
    \   and that many software implementations do check more than the first\n   digit\
    \ (2, 4 or 5) in the return code.\n   However, when the response is the result\
    \ of a DNS lookup and the DNS\n   system returned TempFail, a temporary error,\
    \ the MTA MUST reflect\n   this and provide a 4xx return code. If the DNS response\
    \ is an\n   Authoritative NXdomain (host or domain unknown) the MTA MAY reflect\n\
    \   this by a 5xx Return Code.\n   Please refer to the previous discussion on\
    \ SMTP Return Codes for\n   additional information.\n"
- title: 2.13.1. The importance of flexibility - an example
  contents:
  - "2.13.1. The importance of flexibility - an example\n   At Chalmers University\
    \ of Technology our DNS contains\n       cdg.chalmers.se.  IN  MX    0   mail.cdg.chalmers.se.\n\
    \                         IN  MX  100   mail.chalmers.se.\n   and similarly for\
    \ most subdomains, i.e. a second host to store mail\n   to each subdomain, should\
    \ their mail host be down. This means that\n   mail.chalmers.se must be prepared\
    \ to act as Mail Relay for the\n   subdomains (\"RCPT To:\") it serves and that\
    \ those subdomains' mail\n   hosts have to accept SMTP connections from mail.chalmers.se.\
    \ Late\n   versions of spam software make use of this fact by always using\n \
    \  mail.chalmers.se to get their mail delivered to our subdomains and by\n   doing\
    \ so they still get Mail Relaying done for them and they prevent\n   recipient\
    \ hosts from refusing SMTP connections based on the sending\n   host's FQDN or\
    \ IP-address.\n   As long as we keep our design with a secondary MX host we cannot\n\
    \   really have mail.chalmers.se refuse Mail Relay, at least not with a\n   5xx\
    \ return code. However, it has been fairly straight forward to\n   identify the\
    \ hosts/domains/networks that make use of this possibility\n   and refuse to act\
    \ as Mail Relay for them them - and only them - and\n   do so with a 4xx return\
    \ code. Legitimate mail from them may be\n   delayed if the final recipient host\
    \ is down but will eventually be\n   delivered when it gets up again (4xx Return\
    \ Code) and this is no\n   worse then if we changed our MX design. Spam now faces\
    \ a \"Denied\"\n   response and have to connect to each and every one of the recipients,\n\
    \   who may decide to refuse the SMTP connection.\n   The bottom line is that\
    \ this is made possible because of 1) enough\n   flexibility in the Relay Authorization\
    \ code and 2) enough flexibility\n   in assigning Return Codes - an MTA with a\
    \ 5xx Return Code carved in\n   stone would have made this absolutely impossible.\n"
- title: 3. Future work
  contents:
  - '3. Future work

    '
- title: 3.1. Impact on SMTP UAs and end users
  contents:
  - "3.1. Impact on SMTP UAs and end users\n   Even though this memo is about MTAs\
    \ and recommendations for them,\n   some of what is done here also impacts UAs\
    \ (User Agents, the\n   \"ordinary mail programs\").\n   A UA does two things:\n\
    \   1)  Reads mail from a mailbox and prints on the screen.\n       This typically\
    \ uses a protocol like POP, IMAP or NFS.\n   2)  Reads text from the keyboard\
    \ and hands that over to the mailbox\n       MTA for delivery as a piece of mail.\
    \ This typically uses the SMTP\n       protocol, i.e. the same protocol that is\
    \ used between MTAs.\n   When MTAs now start to implement various anti-relay filters\
    \ as\n   described above, a UA on a portable laptop host may get a response\n\
    \   like \"Relaying Denied\" just because it happens to use IP addresses\n   within\
    \ an unknown range or that resolve to unknown FQDNs.\n   The typical victim of\
    \ this \"Relaying Denied\" response is a salesman\n   carrying a laptop on a business\
    \ trip, or even an IETF delegate at a\n   meeting hotel. The salesman will probably\
    \ dial his nearest ISP and\n   will get an IP address from that dialup pool; the\
    \ IETF delegate will\n   use an IP address from the terminal room. In both cases\
    \ their laptop\n   mail program (the UA; e.g. pine, Netscape, Eudora) will try\
    \ to send\n   out mail via their home MTA, e.g. SMTP-SERVER=mail.home.example,\
    \ but\n   unless mail.home.example has been updated to accept that (temporary)\n\
    \   IP address it will respond \"Relaying Denied\" and refuse.\n   To get around\
    \ this problem we could simply add the terminal room's or\n   the dialup pool's\
    \ IP network to the list of accepted networks at\n   mail.home.example. This does\
    \ open up some minimal risk of spammers\n   using that host as their Mail Relay:\
    \ If they use the same ISP's\n   dialup pool and they configure to use mail.home.example\
    \ at the same\n   time as our salesman is on his trip, then the spammers will\
    \ be\n   authorized to relay their spam through mail.home.example. However,\n\
    \   this is not extremely likely and as long as we do not open up for the\n  \
    \ entire world all the time and we keep the log files under close\n   observation\
    \ and we stop relaying at once we find we're being used,\n   this solution is\
    \ probably good enough.\n   Another way around is that our salesman uses a Mail\
    \ Relay provided by\n   the current dialup ISP, if that service exists. To do\
    \ so he has to\n   modify SMTP-SERVER= in his UA, which may or may not be reasonable.\n\
    \   The correct way to handle this situation, though, is by some other\n   mail-sending\
    \ protocol between the UA and the MTA.\n   Although a separate submission protocol\
    \ does not exist, a profile of\n   SMTP for this, the \"Message Submission\" specification,\
    \ [9], has\n   recently been defined.\n   Or, we could note that when the SMTP\
    \ Authentication work, [10], is\n   all in place, it will allow for Authenticated\
    \ SMTP to serve as The\n   Protocol between the UAs and the home MTA (whether\
    \ that should be\n   considered a new protocol or \"the same old SMTP\" is irrelevant\
    \ here).\n   This adds one item to the suggested Relay algorithm in section 2.1:\n\
    \   +   If \"SMTP Authenticated\" then accept to Relay.\n"
- title: 3.2. Personal anti-spam filters
  contents:
  - "3.2. Personal anti-spam filters\n   Since all users are individuals, there is\
    \ little hope that any\n   central anti-spam action will suit them all - in fact\
    \ people can and\n   do argue about Freedom of Speech infringement if some central\
    \ set of\n   anti-spam rules is enforced without the users' approval. (One could\n\
    \   of course also argue whether spam really adds anything to anyone, but\n  \
    \ that must be up to each individual user to decide, rather than being\n   centrally\
    \ decided).\n   Therefore the only reasonable extension is to allow for personal\n\
    \   anti-spam filters, i.e. anti-spam filters like the ones described\n   earlier\
    \ in this memo, but available and configurable on a per user\n   basis. Since\
    \ most users will not have a strong opinion (except that\n   they want to avoid\
    \ spam) the mail system should provide a system\n   default and give each user\
    \ the ability to override or modify that.\n   In a UNIX based environment one\
    \ could have something like\n       /etc/mail/rc.spam\n       ~/.spamrc\n   and\
    \ rules on how the latter can interfere with the former.\n   All of this opens\
    \ up quite a number of unresolved issues, e.g.\n   whether each user himself really\
    \ should be allowed to decide on SMTP\n   Return Codes (and how it should be described\
    \ so he understands enough\n   of the implications) and how existing mail systems\
    \ will deal with\n   different per user responses, especially how they will deal\
    \ with a\n   mix of 5xx and 4xx codes:\n       C  MAIL From: <usr@spam.example>\n\
    \       S  250 <usr@spam.example>... Sender ok\n       C  RCPT To: <usr@domain.example>\n\
    \       S  250 <usr@domain.example>... Recipient ok\n       C  RCPT To: <foo@domain.example>\n\
    \       S  451 <foo@domain.example>... Denied due to spam list\n       C  RCPT\
    \ To: <bar@domain.example>\n       S  550 <bar@domain.example>... Denied due to\
    \ spam list\n   Of course one could decide on either \"250 OK\" or \"550 Denied\"\
    \ with no\n   other alternatives for the individual user, but this too has to\
    \ be\n   explained enough that an ordinary user understands the implications\n\
    \   of \"Refuse 'MAIL From: <.*@spam.example>'\" and that it can do away\n   with,\
    \ or block out, mail he actually wanted.\n"
- title: 3.3. SMTP Authentication
  contents:
  - "3.3. SMTP Authentication\n   SMTP Authentication, [10], has already been mentioned\
    \ as a method to\n   authorize Mail Relaying, but of course there is much more\
    \ to it than\n   that. When that infrastructure and functionality is all in place,\n\
    \   spammers will have a much harder time forging addresses and hiding.\n"
- title: 3.4. Spam and NATs
  contents:
  - "3.4. Spam and NATs\n   With the increased use of Network Address Translators\
    \ (NATs) may come\n   a need for additional information in log files. As long\
    \ as there is a\n   1:1 mapping between the addresses inside the NAT and the addresses\n\
    \   used outside it everything is OK, but if the NAT box also translates\n   port\
    \ numbers (to combine many internal hosts into one external\n   address) we will\
    \ need to log not only the IP addresses of spam hosts\n   but also the port numbers.\
    \ Otherwise we will not be able to identify\n   the individual host inside the\
    \ NAT.\n"
- title: 4. Security Considerations
  contents:
  - "4. Security Considerations\n   The grassfire-like increase of spam raises several\
    \ security issues\n   which, in fact, puts the entire Internet mail community\
    \ at risk:\n   o   People may fail to find important mail in their flooded\n \
    \      mailboxes. Or, they may delete it while cleaning up.\n   o   ISPs get overloaded\
    \ mailbox hosts and filled disk. Cleaning up\n       and helping customers requires\
    \ a lot of human resources.  In\n       fact, ISP mail servers have crashed by\
    \ too much mail.\n   o   While disks are unaccessible, either due to being filled\
    \ or due\n       to \"mail quota\", important mail may be delayed or lost.  Normally\n\
    \       this would not happen without notice, but if both the sender and\n   \
    \    receiver hosts have their disk flooded, the mail being returned\n       may\
    \ also fail, i.e. the email service may become less trustworthy\n       than before.\n\
    \   o   Hosts used as unauthorized Mail Relays become overloaded.\n       Besides\
    \ the technical implications, this too requires a lot of\n       human resources,\
    \ cleaning up mail queues and taking care of\n       furious external users that\
    \ were spammed through the Relay.\n   o   The fight against spammers includes\
    \ blocking their hosts (which\n       is described in this memo). However, there\
    \ is a great risk that\n       Mail Relay hosts may be blocked too, even though\
    \ they are also\n       victims. In the long run, this may cause Internet mail\
    \ service to\n       deteriorate.\n   o   The common use of forged \"MAIL From:\"\
    \ and \"From:\" addresses puts\n       the blame on innocent persons/hosts/organizations.\
    \ This is bad\n       for reputations and may affect business relations.\n   Several\
    \ of the methods described in this document increases the load\n   on several\
    \ support systems to the email system itself. Those support\n   systems can be\
    \ DNS, logging, databases with lists of local users,\n   authentication mechanisms\
    \ and others. Implementing the methods\n   described in this document will, because\
    \ of that, increase the risk\n   of a denial of service attack against the support\
    \ system by sending\n   spam to a site. Logging facilities must for example be\
    \ able to handle\n   more logging (what happens when the logfiles fills the disk?).\
    \  DNS\n   servers and authentication mechanisms must be able to stand the load\n\
    \   of more lookups etc.\n   The functionality of the support systems during high\
    \ load should be\n   carefully studied before implementing the methods described\
    \ in this\n   document.\n   The mail system should be carefully studied, e.g.\
    \ how it behaves when\n   one or more of the support systems needed for a specific\
    \ method\n   fails. A mail server MUST NOT respond with \"Permanent Failure\"\
    \ (5xx)\n   if there is a temporary problem with one of its support systems.\n"
- title: 5. Acknowledgements
  contents:
  - "5. Acknowledgements\n   This memo is the result of discussions in an ad hoc group\
    \ of Swedish\n   ISPs and Universities. Without any hope on mentioning everyone\
    \ we\n   simply give the domain names here: algonet.se, global-ip.net, pi.se,\n\
    \   swip.net, telia.net, udac.se; chalmers.se, sunet.se, umu.se, and\n   uu.se.\n\
    \   We want to acknowledge valuable input and suggestions from Andras\n   Salamon,\
    \ John Myers, Bob Flandrena, Dave Presotto, Dave Kristol,\n   Donald Eastlake,\
    \ Ned Freed, Keith Moore and Paul Hoffman.\n   Finally many thanks to Harald Alvestrand\
    \ and Patrik Faltstrom, both\n   for useful comments and for their support and\
    \ guidance through the\n   IETF process.\n"
- title: 6. References
  contents:
  - "6. References\n   [1] Postel, J., \"Simple Mail Transfer Protocol\", STD 10,\
    \ RFC 821,\n       August 1982.\n   [2] Crocker, D., \"Standard for the format\
    \ of ARPA Internet text\n       messages\", STD 11, RFC 822, August 1982.\n  \
    \ [3] Braden, R., \"Requirements for Internet hosts - application and\n      \
    \ support\", STD 3, RFC 1123, October 1989.\n   [4] Bradner, S., \"Key words for\
    \ use in RFCs to Indicate Requirement\n       Level\", BCP 14, RFC 2119, March\
    \ 1997.\n   [5] Mockapetris, P., \"Domain Names - Concepts and Facilities\", STD\n\
    \       13, RFC 1034, November 1987.\n   [6] Mockapetris, P., \"Domain Names -\
    \ Implementation and\n       Specifications\", STD 13, RFC 1035, November 1987.\n\
    \   [7] Eastlake, D. and C. Kaufman, \"Domain Name System Security\n       Extensions\"\
    , RFC 2065, January 1997.\n   [8] sendmail Home Page. http://www.sendmail.org\n\
    \   [9] Gellens, R. and J. Klensin \"Message Submission\", RFC 2476,\n       September\
    \ 1998.\n   [10] Myers, J., \"SMTP Service Extension for Authentication\", Work\
    \ in\n       Progress.\n   *   Spam (R) (capitalized) is a registered trademark\
    \ of a meat\n       product made by Hormel. Use of the term spam (uncapitalized)\
    \ in\n       the Internet community comes from a Monty Python sketch and is\n\
    \       almost Internet folklore. The term spam is usually pejorative,\n     \
    \  however this is not in any way intended to describe the Hormel\n       product.\n"
- title: Editor's Address
  contents:
  - "Editor's Address\n   Gunnar Lindberg\n   Computer Communications Group\n   Chalmers\
    \ University of Technology\n   SE-412 96 Gothenburg, SWEDEN,\n   Phone: +46 31\
    \ 772 5913\n   FAX:   +46 31 772 5922\n   EMail: lindberg@cdg.chalmers.se\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
