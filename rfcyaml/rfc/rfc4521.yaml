- title: __initial_text__
  contents:
  - "                          Considerations for\n        Lightweight Directory Access\
    \ Protocol (LDAP) Extensions\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet Best Current Practices\
    \ for the\n   Internet Community, and requests discussion and suggestions for\n\
    \   improvements.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
- title: Abstract
  contents:
  - "Abstract\n   The Lightweight Directory Access Protocol (LDAP) is extensible.\
    \  It\n   provides mechanisms for adding new operations, extending existing\n\
    \   operations, and expanding user and system schemas.  This document\n   discusses\
    \ considerations for designers of LDAP extensions.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................3\n  \
    \ 2. General Considerations ..........................................4\n    \
    \  2.1. Scope of Extension .........................................4\n      2.2.\
    \ Interaction between extensions .............................4\n      2.3. Discovery\
    \ Mechanism ........................................4\n      2.4. Internationalization\
    \ Considerations ........................5\n      2.5. Use of the Basic Encoding\
    \ Rules ............................5\n      2.6. Use of Formal Languages ....................................5\n\
    \      2.7. Examples ...................................................5\n  \
    \    2.8. Registration of Protocol Values ............................5\n   3.\
    \ LDAP Operation Extensions .......................................6\n      3.1.\
    \ Controls ...................................................6\n           3.1.1.\
    \ Extending Bind Operation with Controls ..............6\n           3.1.2. Extending\
    \ the Start TLS Operation with Controls .....7\n           3.1.3. Extending the\
    \ Search Operation with Controls ........7\n           3.1.4. Extending the Update\
    \ Operations with Controls .......8\n           3.1.5. Extending the Responseless\
    \ Operations with Controls..8\n      3.2. Extended Operations ........................................8\n\
    \      3.3. Intermediate Responses .....................................8\n  \
    \    3.4. Unsolicited Notifications ..................................9\n   4.\
    \ Extending the LDAP ASN.1 Definition .............................9\n      4.1.\
    \ Result Codes ...............................................9\n      4.2. LDAP\
    \ Message Types .........................................9\n      4.3. Authentication\
    \ Methods ....................................10\n      4.4. General ASN.1 Extensibility\
    \ ...............................10\n   5. Schema Extensions ..............................................10\n\
    \      5.1. LDAP Syntaxes .............................................11\n  \
    \    5.2. Matching Rules ............................................11\n    \
    \  5.3. Attribute Types ...........................................12\n      5.4.\
    \ Object Classes ............................................12\n   6. Other Extension\
    \ Mechanisms .....................................12\n      6.1. Attribute Description\
    \ Options .............................12\n      6.2. Authorization Identities\
    \ ..................................12\n      6.3. LDAP URL Extensions .......................................12\n\
    \   7. Security Considerations ........................................12\n  \
    \ 8. Acknowledgements ...............................................13\n   9.\
    \ References .....................................................13\n      9.1.\
    \ Normative References ......................................13\n      9.2. Informative\
    \ References ....................................15\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Lightweight Directory Access Protocol (LDAP) [RFC4510]\
    \ is an\n   extensible protocol.\n   LDAP allows for new operations to be added\
    \ and for existing\n   operations to be enhanced [RFC4511].\n   LDAP allows additional\
    \ schema to be defined [RFC4512][RFC4517].  This\n   can include additional object\
    \ classes, attribute types, matching\n   rules, additional syntaxes, and other\
    \ elements of schema.  LDAP\n   provides an ability to extend attribute types\
    \ with options [RFC4512].\n   LDAP supports a Simple Authentication and Security\
    \ Layer (SASL)\n   authentication method [RFC4511][RFC4513].  SASL [RFC4422] is\n\
    \   extensible.  LDAP may be extended to support additional\n   authentication\
    \ methods [RFC4511].\n   LDAP supports establishment of Transport Layer Security\
    \ (TLS)\n   [RFC4511][RFC4513].  TLS [RFC4346] is extensible.\n   LDAP has an\
    \ extensible Uniform Resource Locator (URL) format\n   [RFC4516].\n   Lastly,\
    \ LDAP allows for certain extensions to the protocol's Abstract\n   Syntax Notation\
    \ - One (ASN.1) [X.680] definition to be made.  This\n   facilitates a wide range\
    \ of protocol enhancements, for example, new\n   result codes needed to support\
    \ extensions to be added through\n   extension of the protocol's ASN.1 definition.\n\
    \   This document describes practices that engineers should consider when\n  \
    \ designing extensions to LDAP.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ BCP 14 [RFC2119].  In\n   this document, \"the specification\", as used by BCP\
    \ 14, RFC 2119,\n   refers to the engineering of LDAP extensions.\n   The term\
    \ \"Request Control\" refers to a control attached to a client-\n   generated\
    \ message sent to a server.  The term \"Response Control\"\n   refers to a control\
    \ attached to a server-generated message sent to a\n   client.\n   DIT stands\
    \ for Directory Information Tree.\n   DSA stands for Directory System Agent, a\
    \ server.\n   DSE stands for DSA-Specific Entry.\n   DUA stands for Directory\
    \ User Agent, a client.\n   DN stands for Distinguished Name.\n"
- title: 2.  General Considerations
  contents:
  - '2.  General Considerations

    '
- title: 2.1.  Scope of Extension
  contents:
  - "2.1.  Scope of Extension\n   Mutually agreeing peers may, within the confines\
    \ of an extension,\n   agree to significant changes in protocol semantics.  However,\n\
    \   designers MUST consider the impact of an extension upon protocol\n   peers\
    \ that have not agreed to implement or otherwise recognize and\n   support the\
    \ extension.  Extensions MUST be \"truly optional\"\n   [RFC2119].\n"
- title: 2.2.  Interaction between extensions
  contents:
  - "2.2.  Interaction between extensions\n   Designers SHOULD consider how extensions\
    \ they engineer interact with\n   other extensions.\n   Designers SHOULD consider\
    \ the extensibility of extensions they\n   specify.  Extensions to LDAP SHOULD\
    \ themselves be extensible.\n   Except where it is stated otherwise, extensibility\
    \ is implied.\n"
- title: 2.3.  Discovery Mechanism
  contents:
  - "2.3.  Discovery Mechanism\n   Extensions SHOULD provide adequate discovery mechanisms.\n\
    \   As LDAP design is based upon the client-request/server-response\n   paradigm,\
    \ the general discovery approach is for the client to\n   discover the capabilities\
    \ of the server before utilizing a particular\n   extension.  Commonly, this discovery\
    \ involves querying the root DSE\n   and/or other DSEs for operational information\
    \ associated with the\n   extension.  LDAP provides no mechanism for a server\
    \ to discover the\n   capabilities of a client.\n   The 'supportedControl' attribute\
    \ [RFC4512] is used to advertise\n   supported controls.  The 'supportedExtension'\
    \ attribute [RFC4512] is\n   used to advertise supported extended operations.\
    \  The\n   'supportedFeatures' attribute [RFC4512] is used to advertise\n   features.\
    \  Other root DSE attributes MAY be defined to advertise\n   other capabilities.\n"
- title: 2.4.  Internationalization Considerations
  contents:
  - "2.4.  Internationalization Considerations\n   LDAP is designed to support the\
    \ full Unicode [Unicode] repertory of\n   characters.  Extensions SHOULD avoid\
    \ unnecessarily restricting\n   applications to subsets of Unicode (e.g., Basic\
    \ Multilingual Plane,\n   ISO 8859-1, ASCII, Printable String).\n   LDAP Language\
    \ Tag options [RFC3866] provide a mechanism for tagging\n   text (and other) values\
    \ with language information.  Extensions that\n   define attribute types SHOULD\
    \ allow use of language tags with these\n   attributes.\n"
- title: 2.5.  Use of the Basic Encoding Rules
  contents:
  - "2.5.  Use of the Basic Encoding Rules\n   Numerous elements of LDAP are described\
    \ using ASN.1 [X.680] and are\n   encoded using a particular subset [Protocol,\
    \ Section 5.2] of the\n   Basic Encoding Rules (BER) [X.690].  To allow reuse\
    \ of\n   parsers/generators used in implementing the LDAP \"core\" technical\n\
    \   specification [RFC4510], it is RECOMMENDED that extension elements\n   (e.g.,\
    \ extension specific contents of controlValue, requestValue,\n   responseValue\
    \ fields) described by ASN.1 and encoded using BER be\n   subjected to the restrictions\
    \ of [Protocol, Section 5.2].\n"
- title: 2.6.  Use of Formal Languages
  contents:
  - "2.6.  Use of Formal Languages\n   Formal languages SHOULD be used in specifications\
    \ in accordance with\n   IESG guidelines [FORMAL].\n"
- title: 2.7.  Examples
  contents:
  - "2.7.  Examples\n   Example DN strings SHOULD conform to the syntax defined in\
    \ [RFC4518].\n   Example LDAP filter strings SHOULD conform to the syntax defined\
    \ in\n   [RFC4515].  Example LDAP URLs SHOULD conform to the syntax defined in\n\
    \   [RFC4516].  Entries SHOULD be represented using LDIF [RFC2849].\n"
- title: 2.8.  Registration of Protocol Values
  contents:
  - "2.8.  Registration of Protocol Values\n   Designers SHALL register protocol values\
    \ of their LDAP extensions in\n   accordance with BCP 64, RFC 4520 [RFC4520].\
    \  Specifications that\n   create new extensible protocol elements SHALL extend\
    \ existing\n   registries or establish new registries for values of these elements\n\
    \   in accordance with BCP 64, RFC 4520 [RFC4520] and BCP 26, RFC 2434\n   [RFC2434].\n"
- title: 3.  LDAP Operation Extensions
  contents:
  - "3.  LDAP Operation Extensions\n   Extensions SHOULD use controls in defining\
    \ extensions that complement\n   existing operations.  Where the extension to\
    \ be defined does not\n   complement an existing operation, designers SHOULD consider\
    \ defining\n   an extended operation instead.\n   For example, a subtree delete\
    \ operation could be designed as either\n   an extension of the delete operation\
    \ or as a new operation.  As the\n   feature complements the existing delete operation,\
    \ use of the control\n   mechanism to extend the delete operation is likely more\
    \ appropriate.\n   As a counter (and contrived) example, a locate services operation\
    \ (an\n   operation that would return for a DN a set of LDAP URLs to services\n\
    \   that may hold the entry named by this DN) could be designed as either\n  \
    \ a search operation or a new operation.  As the feature doesn't\n   complement\
    \ the search operation (e.g., the operation is not contrived\n   to search for\
    \ entries held in the Directory Information Tree), it is\n   likely more appropriate\
    \ to define a new operation using the extended\n   operation mechanism.\n"
- title: 3.1.  Controls
  contents:
  - "3.1.  Controls\n   Controls [Protocol, Section 4.1.11] are the RECOMMENDED mechanism\
    \ for\n   extending existing operations.  The existing operation can be a base\n\
    \   operation defined in [RFC4511] (e.g., search, modify) , an extended\n   operation\
    \ (e.g., Start TLS [RFC4511], Password Modify [RFC3062]), or\n   an operation\
    \ defined as an extension to a base or extended operation.\n   Extensions SHOULD\
    \ NOT return Response controls unless the server has\n   specific knowledge that\
    \ the client can make use of the control.\n   Generally, the client requests the\
    \ return of a particular response\n   control by providing a related request control.\n\
    \   An existing operation MAY be extended to return IntermediateResponse\n   messages\
    \ [Protocol, Section 4.13].\n   Specifications of controls SHALL NOT attach additional\
    \ semantics to\n   the criticality of controls beyond those defined in [Protocol,\n\
    \   Section 4.1.11].  A specification MAY mandate the criticality take on\n  \
    \ a particular value (e.g., TRUE or FALSE), where appropriate.\n"
- title: 3.1.1.  Extending Bind Operation with Controls
  contents:
  - "3.1.1.  Extending Bind Operation with Controls\n   Controls attached to the request\
    \ and response messages of a Bind\n   Operation [RFC4511] are not protected by\
    \ any security layers\n   established by that Bind operation.\n   Specifications\
    \ detailing controls extending the Bind operation SHALL\n   detail that the Bind\
    \ negotiated security layers do not protect the\n   information contained in these\
    \ controls and SHALL detail how the\n   information in these controls is protected\
    \ or why the information\n   does not need protection.\n   It is RECOMMENDED that\
    \ designers consider alternative mechanisms for\n   providing the function.  For\
    \ example, an extended operation issued\n   subsequent to the Bind operation (hence,\
    \ protected by the security\n   layers negotiated by the Bind operation) might\
    \ be used to provide the\n   desired function.\n   Additionally, designers of\
    \ Bind control extensions MUST also consider\n   how the controls' semantics interact\
    \ with individual steps of a\n   multi-step Bind operation.  Note that some steps\
    \ are optional and\n   thus may require special attention in the design.\n"
- title: 3.1.2.  Extending the Start TLS Operation with Controls
  contents:
  - "3.1.2.  Extending the Start TLS Operation with Controls\n   Controls attached\
    \ to the request and response messages of a Start TLS\n   Operation [RFC4511]\
    \ are not protected by the security layers\n   established by the Start TLS operation.\n\
    \   Specifications detailing controls extending the Start TLS operation\n   SHALL\
    \ detail that the Start TLS negotiated security layers do not\n   protect the\
    \ information contained in these controls and SHALL detail\n   how the information\
    \ in these controls is protected or why the\n   information does not need protection.\n\
    \   It is RECOMMENDED that designers consider alternative mechanisms for\n   providing\
    \ the function.  For example, an extended operation issued\n   subsequent to the\
    \ Start TLS operation (hence, protected by the\n   security layers negotiated\
    \ by the Start TLS operation) might be used\n   to provided the desired function.\n"
- title: 3.1.3.  Extending the Search Operation with Controls
  contents:
  - "3.1.3.  Extending the Search Operation with Controls\n   The Search operation\
    \ processing has two distinct phases:\n      -  finding the base object; and\n\
    \      -  searching for objects at or under that base object.\n   Specifications\
    \ of controls extending the Search Operation should\n   clearly state in which\
    \ phase(s) the control's semantics apply.\n   Semantics of controls that are not\
    \ specific to the Search Operation\n   SHOULD apply in the finding phase.\n"
- title: 3.1.4.  Extending the Update Operations with Controls
  contents:
  - "3.1.4.  Extending the Update Operations with Controls\n   Update operations have\
    \ properties of atomicity, consistency,\n   isolation, and durability ([ACID]).\n\
    \      -  atomicity: All or none of the DIT changes requested are made.\n    \
    \  -  consistency: The resulting DIT state must be conform to schema\n       \
    \  and other constraints.\n      -  isolation: Intermediate states are not exposed.\n\
    \      -  durability: The resulting DIT state is preserved until\n         subsequently\
    \ updated.\n   When defining a control that requests additional (or other) DIT\n\
    \   changes be made to the DIT, these additional changes SHOULD NOT be\n   treated\
    \ as part of a separate transaction.  The specification MUST be\n   clear as to\
    \ whether the additional DIT changes are part of the same\n   or a separate transaction\
    \ as the DIT changes expressed in the request\n   of the base operation.\n   When\
    \ defining a control that requests additional (or other) DIT\n   changes be made\
    \ to the DIT, the specification MUST be clear as to the\n   order in which these\
    \ and the base changes are to be applied to the\n   DIT.\n"
- title: 3.1.5.  Extending the Responseless Operations with Controls
  contents:
  - "3.1.5.  Extending the Responseless Operations with Controls\n   The Abandon and\
    \ Unbind operations do not include a response message.\n   For this reason, specifications\
    \ for controls designed to be attached\n   to Abandon and Unbind requests SHOULD\
    \ mandate that the control's\n   criticality be FALSE.\n"
- title: 3.2.  Extended Operations
  contents:
  - "3.2.  Extended Operations\n   Extended Operations [Protocol, Section 4.12] are\
    \ the RECOMMENDED\n   mechanism for defining new operations.  An extended operation\n\
    \   consists of an ExtendedRequest message, zero or more\n   IntermediateResponse\
    \ messages, and an ExtendedResponse message.\n"
- title: 3.3.  Intermediate Responses
  contents:
  - "3.3.  Intermediate Responses\n   Extensions SHALL use IntermediateResponse messages\
    \ instead of\n   ExtendedResponse messages to return intermediate results.\n"
- title: 3.4.  Unsolicited Notifications
  contents:
  - "3.4.  Unsolicited Notifications\n   Unsolicited notifications [Protocol, Section\
    \ 4.4] offer a capability\n   for the server to notify the client of events not\
    \ associated with the\n   operation currently being processed.\n   Extensions\
    \ SHOULD be designed such that unsolicited notifications are\n   not returned\
    \ unless the server has specific knowledge that the client\n   can make use of\
    \ the notification.  Generally, the client requests the\n   return of a particular\
    \ unsolicited notification by performing a\n   related extended operation.\n \
    \  For example, a time hack extension could be designed to return\n   unsolicited\
    \ notifications at regular intervals that were enabled by\n   an extended operation\
    \ (which possibly specified the desired\n   interval).\n"
- title: 4.  Extending the LDAP ASN.1 Definition
  contents:
  - "4.  Extending the LDAP ASN.1 Definition\n   LDAP allows limited extension [Protocol,\
    \ Section 4] of the LDAP ASN.1\n   definition [Protocol, Appendix B] to be made.\n"
- title: 4.1.  Result Codes
  contents:
  - "4.1.  Result Codes\n   Extensions that specify new operations or enhance existing\
    \ operations\n   often need to define new result codes.  The extension SHOULD\
    \ be\n   designed such that a client has a reasonably clear indication of the\n\
    \   nature of the successful or non-successful result.\n   Extensions SHOULD use\
    \ existing result codes to indicate conditions\n   that are consistent with the\
    \ intended meaning [RFC4511][X.511] of\n   these codes.  Extensions MAY introduce\
    \ new result codes [RFC4520]\n   where no existing result code provides an adequate\
    \ indication of the\n   nature of the result.\n   Extensions SHALL NOT disallow\
    \ or otherwise restrict the return of\n   general service result codes, especially\
    \ those reporting a protocol,\n   service, or security problem, or indicating\
    \ that the server is unable\n   or unwilling to complete the operation.\n"
- title: 4.2.  LDAP Message Types
  contents:
  - "4.2.  LDAP Message Types\n   While extensions can specify new types of LDAP messages\
    \ by extending\n   the protocolOp CHOICE of the LDAPMessage SEQUENCE, this is\
    \ generally\n   unnecessary and inappropriate.  Existing operation extension\n\
    \   mechanisms (e.g., extended operations, unsolicited notifications, and\n  \
    \ intermediate responses) SHOULD be used instead.  However, there may\n   be cases\
    \ where an extension does not fit well into these mechanisms.\n   In such cases,\
    \ a new extension mechanism SHOULD be defined that can\n   be used by multiple\
    \ extensions that have similar needs.\n"
- title: 4.3.  Authentication Methods
  contents:
  - "4.3.  Authentication Methods\n   The Bind operation currently supports two authentication\
    \ methods,\n   simple and SASL.  SASL [RFC4422] is an extensible authentication\n\
    \   framework used by multiple application-level protocols (e.g., BEEP,\n   IMAP,\
    \ SMTP).  It is RECOMMENDED that new authentication processes be\n   defined as\
    \ SASL mechanisms.  New LDAP authentication methods MAY be\n   added to support\
    \ new authentication frameworks.\n   The Bind operation's primary function is\
    \ to establish the LDAP\n   association [RFC4513].  No other operation SHALL be\
    \ defined (or\n   extended) to establish the LDAP association.  However, other\n\
    \   operations MAY be defined to establish other security associations\n   (e.g.,\
    \ IPsec).\n"
- title: 4.4.  General ASN.1 Extensibility
  contents:
  - "4.4.  General ASN.1 Extensibility\n   Section 4 of [RFC4511] states the following:\n\
    \      In order to support future extensions to this protocol,\n      extensibility\
    \ is implied where it is allowed per ASN.1 (i.e.,\n      sequence, set, choice,\
    \ and enumerated types are extensible).  In\n      addition, ellipses (...)  have\
    \ been supplied in ASN.1 types that\n      are explicitly extensible as discussed\
    \ in [RFC4520].  Because of\n      the implied extensibility, clients and servers\
    \ MUST (unless\n      otherwise specified) ignore trailing SEQUENCE components\
    \ whose\n      tags they do not recognize.\n   Designers SHOULD avoid introducing\
    \ extensions that rely on\n   unsuspecting implementations to ignore trailing\
    \ components of\n   SEQUENCE whose tags they do not recognize.\n"
- title: 5.  Schema Extensions
  contents:
  - "5.  Schema Extensions\n   Extensions defining LDAP schema elements SHALL provide\
    \ schema\n   definitions conforming with syntaxes defined in [Models, Section\n\
    \   4.1].  While provided definitions MAY be reformatted (line wrapped)\n   for\
    \ readability, this SHALL be noted in the specification.\n   For definitions that\
    \ allow a NAME field, new schema elements SHOULD\n   provide one and only one\
    \ name.  The name SHOULD be short.\n   Each schema definition allows a DESC field.\
    \  The DESC field, if\n   provided, SHOULD contain a short descriptive phrase.\
    \  The DESC field\n   MUST be regarded as informational.  That is, the specification\
    \ MUST\n   be written such that its interpretation is the same with and without\n\
    \   the provided DESC fields.\n   The extension SHALL NOT mandate that implementations\
    \ provide the same\n   DESC field in the schema they publish.  Implementors MAY\
    \ replace or\n   remove the DESC field.\n   Published schema elements SHALL NOT\
    \ be redefined.  Replacement schema\n   elements (new OIDs, new NAMEs) SHOULD\
    \ be defined as needed.\n   Schema designers SHOULD reuse existing schema elements,\
    \ where\n   appropriate.  However, any reuse MUST not alter the semantics of the\n\
    \   element.\n"
- title: 5.1.  LDAP Syntaxes
  contents:
  - "5.1.  LDAP Syntaxes\n   Each LDAP syntax [RFC4517] is defined in terms of ASN.1\
    \ [X.680].\n   Each extension detailing an LDAP syntax MUST specify the ASN.1\
    \ data\n   definition associated with the syntax.  A distinct LDAP syntax SHOULD\n\
    \   be created for each distinct ASN.1 data definition (including\n   constraints).\n\
    \   Each LDAP syntax SHOULD have a string encoding defined for it.  It is\n  \
    \ RECOMMENDED that this string encoding be restricted to UTF-8\n   [RFC3629] encoded\
    \ Unicode [Unicode] characters.  Use of Generic\n   String Encoding Rules (GSER)\
    \ [RFC3641][RFC3642] or other generic\n   string encoding rules to provide string\
    \ encodings for complex ASN.1\n   data definitions is RECOMMENDED.  Otherwise,\
    \ it is RECOMMENDED that\n   the string encoding be described using a formal language\
    \ (e.g., ABNF\n   [RFC4234]).  Formal languages SHOULD be used in specifications\
    \ in\n   accordance with IESG guidelines [FORMAL].\n   If no string encoding is\
    \ defined, the extension SHALL specify how the\n   transfer encoding is to be\
    \ indicated.  Generally, the extension\n   SHOULD mandate use of binary or other\
    \ transfer encoding option.\n"
- title: 5.2.  Matching Rules
  contents:
  - "5.2.  Matching Rules\n   Three basic kinds of matching rules (e.g., EQUALITY,\
    \ ORDERING, and\n   SUBSTRING) may be associated with an attribute type.  In addition,\n\
    \   LDAP provides an extensible matching rule mechanism.\n   The matching rule\
    \ specification SHOULD detail which kind of matching\n   rule it is and SHOULD\
    \ describe which kinds of values it can be used\n   with.\n   In addition to requirements\
    \ stated in the LDAP technical\n   specification, equality matching rules SHOULD\
    \ be commutative.\n"
- title: 5.3.  Attribute Types
  contents:
  - "5.3.  Attribute Types\n   Designers SHOULD carefully consider how the structure\
    \ of values is to\n   be restricted.  Designers SHOULD consider that servers will\
    \ only\n   enforce constraints of the attribute's syntax.  That is, an attribute\n\
    \   intended to hold URIs, but that has directoryString syntax, is not\n   restricted\
    \ to values that are URIs.\n   Designers SHOULD carefully consider which matching\
    \ rules, if any, are\n   appropriate for the attribute type.  Matching rules specified\
    \ for an\n   attribute type MUST be compatible with the attribute type's syntax.\n\
    \   Extensions specifying operational attributes MUST detail how servers\n   are\
    \ to maintain and/or utilize values of each operational attribute.\n"
- title: 5.4.  Object Classes
  contents:
  - "5.4.  Object Classes\n   Designers SHOULD carefully consider whether each attribute\
    \ of an\n   object class is required (\"MUST\") or allowed (\"MAY\").\n   Extensions\
    \ specifying object classes that allow (or require)\n   operational attributes\
    \ MUST specify how servers are to maintain\n   and/or utilize entries belonging\
    \ to these object classes.\n"
- title: 6.  Other Extension Mechanisms
  contents:
  - '6.  Other Extension Mechanisms

    '
- title: 6.1.  Attribute Description Options
  contents:
  - "6.1.  Attribute Description Options\n   Each option is identified by a string\
    \ of letters, numbers, and\n   hyphens.  This string SHOULD be short.\n"
- title: 6.2.  Authorization Identities
  contents:
  - "6.2.  Authorization Identities\n   Extensions interacting with authorization\
    \ identities SHALL support\n   the LDAP authzId format [RFC4513].  The authzId\
    \ format is extensible.\n"
- title: 6.3.  LDAP URL Extensions
  contents:
  - "6.3.  LDAP URL Extensions\n   LDAP URL extensions are identified by a short string,\
    \ a descriptor.\n   Like other descriptors, the string SHOULD be short.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   LDAP does not place undue restrictions on the\
    \ kinds of extensions\n   that can be implemented.  While this document attempts\
    \ to outline\n   some specific issues that designers need to consider, it is not\
    \ (and\n   cannot be) all encompassing.  Designers MUST do their own evaluations\n\
    \   of the security considerations applicable to their extensions.\n   Designers\
    \ MUST NOT assume that the LDAP \"core\" technical\n   specification [RFC4510]\
    \ adequately addresses the specific concerns\n   surrounding their extensions\
    \ or assume that their extensions have no\n   specific concerns.\n   Extension\
    \ specifications, however, SHOULD note whether security\n   considerations specific\
    \ to the feature they are extending, as well as\n   general LDAP security considerations,\
    \ apply to the extension.\n"
- title: 8.  Acknowledgements
  contents:
  - "8.  Acknowledgements\n   The author thanks the IETF LDAP community for their\
    \ thoughtful\n   comments.\n   This work builds upon \"LDAP Extension Style Guide\"\
    \ [GUIDE] by Bruce\n   Greenblatt.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2434]  Narten, T. and H. Alvestrand, \"Guidelines for Writing\
    \ an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 2434,\n\
    \              October 1998.\n   [RFC2849]  Good, G., \"The LDAP Data Interchange\
    \ Format (LDIF) -\n              Technical Specification\", RFC 2849, June 2000.\n\
    \   [RFC3629]  Yergeau, F., \"UTF-8, a transformation format of ISO\n        \
    \      10646\", STD 63, RFC 3629, November 2003.\n   [RFC3641]  Legg, S., \"Generic\
    \ String Encoding Rules (GSER) for ASN.1\n              Types\", RFC 3641, October\
    \ 2003.\n   [RFC3642]  Legg, S., \"Common Elements of Generic String Encoding\n\
    \              Rules (GSER) Encodings\", RFC 3642, October 2003.\n   [RFC4512]\
    \  Zeilenga, K., \"Lightweight Directory Access Protocol\n              (LDAP):\
    \ Directory Information Models\", RFC 4512, June\n              2006.\n   [RFC3866]\
    \  Zeilenga, K., Ed., \"Language Tags and Ranges in the\n              Lightweight\
    \ Directory Access Protocol (LDAP)\", RFC 3866,\n              July 2004.\n  \
    \ [RFC4234]  Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n        \
    \      Specifications: ABNF\", RFC 4234, October 2005.\n   [RFC4510]  Zeilenga,\
    \ K., Ed., \"Lightweight Directory Access Protocol\n              (LDAP): Technical\
    \ Specification Road Map\", RFC 4510, June\n              2006.\n   [RFC4511]\
    \  Sermersheim, J., Ed., \"Lightweight Directory Access\n              Protocol\
    \ (LDAP): The Protocol\", RFC 4511, June 2006.\n   [RFC4512]  Zeilenga, K., \"\
    Lightweight Directory Access Protocol\n              (LDAP): Directory Information\
    \ Models\", RFC 4512, June\n              2006.\n   [RFC4513]  Harrison, R., Ed.,\
    \ \"Lightweight Directory Access Protocol\n              (LDAP): Authentication\
    \ Methods and Security Mechanisms\",\n              RFC 4513, June 2006.\n   [RFC4515]\
    \  Smith, M., Ed. and T. Howes, \"Lightweight Directory Access\n             \
    \ Protocol (LDAP): String Representation of Search Filters\",\n              RFC\
    \ 4515, June 2006.\n   [RFC4516]  Smith, M., Ed. and T. Howes, \"Lightweight Directory\
    \ Access\n              Protocol (LDAP): Uniform Resource Locator\", RFC 4516,\
    \ June\n              2006.\n   [RFC4517]  Legg, S., Ed., \"Lightweight Directory\
    \ Access Protocol\n              (LDAP): Syntaxes and Matching Rules\", RFC 4517,\
    \ June 2006.\n   [RFC4518]  Zeilenga, K., \"Lightweight Directory Access Protocol\n\
    \              (LDAP): String Representation of Distinguished Names\", RFC\n \
    \             4518, June 2006.\n   [RFC4520]  Zeilenga, K., \"Internet Assigned\
    \ Numbers Authority (IANA)\n              Considerations for the Lightweight Directory\
    \ Access\n              Protocol (LDAP)\", BCP 64, RFC 4520, June 2006.\n   [RFC4422]\
    \  Melnikov, A., Ed. and K. Zeilenga, Ed., \"Simple\n              Authentication\
    \ and Security Layer (SASL)\", RFC 4422, June\n              2006.\n   [Unicode]\
    \  The Unicode Consortium, \"The Unicode Standard, Version\n              3.2.0\"\
    \ is defined by \"The Unicode Standard, Version 3.0\"\n              (Reading,\
    \ MA, Addison-Wesley, 2000. ISBN 0-201-61633-5),\n              as amended by\
    \ the \"Unicode Standard Annex #27: Unicode\n              3.1\" (http://www.unicode.org/reports/tr27/)\
    \ and by the\n              \"Unicode Standard Annex #28: Unicode 3.2\"\n    \
    \          (http://www.unicode.org/reports/tr28/).\n   [FORMAL]   IESG, \"Guidelines\
    \ for the use of formal languages in IETF\n              specifications\",\n \
    \             <http://www.ietf.org/IESG/STATEMENTS/pseudo-code-in-\n         \
    \     specs.txt>, 2001.\n   [X.511]    International Telecommunication Union -\
    \ Telecommunication\n              Standardization Sector, \"The Directory: Abstract\
    \ Service\n              Definition\", X.511(1993) (also ISO/IEC 9594-3:1993).\n\
    \   [X.680]    International Telecommunication Union - Telecommunication\n   \
    \           Standardization Sector, \"Abstract Syntax Notation One\n         \
    \     (ASN.1) - Specification of Basic Notation\", X.680(2002)\n             \
    \ (also ISO/IEC 8824-1:2002).\n   [X.690]    International Telecommunication Union\
    \ - Telecommunication\n              Standardization Sector, \"Specification of\
    \ ASN.1 encoding\n              rules: Basic Encoding Rules (BER), Canonical Encoding\n\
    \              Rules (CER), and Distinguished Encoding Rules (DER)\",\n      \
    \        X.690(2002) (also ISO/IEC 8825-1:2002).\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [ACID]     Section 4 of ISO/IEC 10026-1:1992.\n\
    \   [GUIDE]    Greenblatt, B., \"LDAP Extension Style Guide\", Work in\n     \
    \         Progress.\n   [RFC3062]  Zeilenga, K., \"LDAP Password Modify Extended\
    \ Operation\",\n              RFC 3062, February 2001.\n   [RFC4346]  Dierks,\
    \ T. and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.1\", RFC 4346, April 2006.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Kurt D. Zeilenga\n   OpenLDAP Foundation\n   EMail: Kurt@OpenLDAP.org\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n\
    \   Administrative Support Activity (IASA).\n"
