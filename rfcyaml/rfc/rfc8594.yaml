- title: __initial_text__
  contents:
  - '                      The Sunset HTTP Header Field

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification defines the Sunset HTTP response header field,\n\
    \   which indicates that a URI is likely to become unresponsive at a\n   specified\
    \ point in the future.  It also defines a sunset link\n   relation type that allows\
    \ linking to resources providing information\n   about an upcoming resource or\
    \ service sunset.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8594.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Temporary Resources . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Migration . . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n     1.3.  Retention . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n     1.4.  Deprecation . . . . . . . . . . . . . . . . . . . . . .\
    \ .   3\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .\
    \   4\n   3.  The Sunset HTTP Response Header Field . . . . . . . . . . . .  \
    \ 4\n   4.  Sunset and Caching  . . . . . . . . . . . . . . . . . . . . .   5\n\
    \   5.  Sunset Scope  . . . . . . . . . . . . . . . . . . . . . . . .   6\n  \
    \ 6.  The Sunset Link Relation Type . . . . . . . . . . . . . . . .   6\n   7.\
    \  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7\n     7.1.\
    \  The Sunset Response Header Field  . . . . . . . . . . . .   7\n     7.2.  The\
    \ Sunset Link Relation Type . . . . . . . . . . . . . .   8\n   8.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .   8\n   9.  Example . . . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .   9\n   10. References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  10\n     10.1.  Normative References . .\
    \ . . . . . . . . . . . . . . . .  10\n     10.2.  Informative References . .\
    \ . . . . . . . . . . . . . . .  10\n   Acknowledgements  . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  10\n   Author's Address  . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  11\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   As a general rule, URIs should be stable and persistent\
    \ so that\n   applications can use them as stable and persistent identifiers for\n\
    \   resources.  However, there are many scenarios where, for a variety of\n  \
    \ reasons, URIs have a limited lifetime.  In some of these scenarios,\n   this\
    \ limited lifetime is known in advance.  In this case, it can be\n   useful for\
    \ clients if resources make this information about their\n   limited lifetime\
    \ known.  This specification defines the Sunset HTTP\n   response header field,\
    \ which indicates that a URI is likely to become\n   unresponsive at a specified\
    \ point in the future.\n   This specification also defines a sunset link relation\
    \ type that\n   allows information to be provided about 1) the sunset policy of\
    \ a\n   resource or a service, and/or 2) upcoming sunsets, and/or 3) possible\n\
    \   mitigation scenarios for resource/service users.  This specification\n   does\
    \ not place any constraints on the nature of the linked resource,\n   which can\
    \ be targeted to humans, machines, or both.\n   Possible scenarios for known lifetimes\
    \ of resources include, but are\n   not limited to, the following scenarios.\n"
- title: 1.1.  Temporary Resources
  contents:
  - "1.1.  Temporary Resources\n   Some resources may have a limited lifetime by definition.\
    \  For\n   example, a pending shopping order represented by a resource may\n \
    \  already list all order details, but it may only exist for a limited\n   time\
    \ unless it is confirmed and only then becomes an acknowledged\n   shopping order.\
    \  In such a case, the service managing the pending\n   shopping order can make\
    \ this limited lifetime explicit, allowing\n   clients to understand that the\
    \ pending order, unless confirmed, will\n   disappear at some point in time.\n"
- title: 1.2.  Migration
  contents:
  - "1.2.  Migration\n   If resources are changing identity because a service migrates\
    \ them,\n   then this may be known in advance.  While it may not yet be\n   appropriate\
    \ to use HTTP redirect status codes (3xx), it may be\n   interesting for clients\
    \ to learn about the service's plan to take\n   down the original resource.\n"
- title: 1.3.  Retention
  contents:
  - "1.3.  Retention\n   There are many cases where regulation or legislation require\
    \ that\n   resources are kept available for a certain amount of time.  However,\n\
    \   in many cases there is also a requirement for those resources to be\n   permanently\
    \ deleted after some period of time.  Since the deletion of\n   the resource in\
    \ this scenario is governed by well-defined rules, it\n   could be made explicit\
    \ for clients interacting with the resource.\n"
- title: 1.4.  Deprecation
  contents:
  - "1.4.  Deprecation\n   For Web APIs one standard scenario is that an API or specific\
    \ subsets\n   of an API may get deprecated.  Deprecation often happens in two\n\
    \   stages: the first stage being that the API is not the preferred or\n   recommended\
    \ version anymore and the second stage being that the API\n   or a specific version\
    \ of the API gets decommissioned.\n   For the first stage (the API is not the\
    \ preferred or recommended\n   version anymore), the Sunset header field is not\
    \ appropriate: at this\n   stage, the API remains operational and can still be\
    \ used.  Other\n   mechanisms can be used for signaling that first stage that\
    \ might help\n   with more visible deprecation management, but the Sunset header\
    \ field\n   does not aim to represent that information.\n   For the second stage\
    \ (the API or a specific version of the API gets\n   decommissioned), the Sunset\
    \ header field is appropriate: that is when\n   the API or a version does become\
    \ unresponsive.  From the Sunset\n   header field's point of view, it does not\
    \ matter that the API may not\n   have been the preferred or recommended version\
    \ anymore.  The only\n   thing that matters is that it will become unresponsive\
    \ and that this\n   time can be advertised using the Sunset header field.\n  \
    \ In this scenario, the announced sunset date typically affects all of\n   the\
    \ deprecated API or parts of it (i.e., just deprecated sets of\n   resources),\
    \ and not just a single resource.  In this case, it makes\n   sense for the API\
    \ to define rules about how an announced sunset on a\n   specific resource (such\
    \ as the API's home/start resource) implies the\n   sunsetting of the whole API\
    \ or parts of it (i.e., sets of resources),\n   and not just the resource returning\
    \ the sunset header field.\n   Section 5 discusses how the scope of the Sunset\
    \ header field may\n   change because of how a resource is using it.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n\
    \   capitals, as shown here.\n"
- title: 3.  The Sunset HTTP Response Header Field
  contents:
  - "3.  The Sunset HTTP Response Header Field\n   The Sunset HTTP response header\
    \ field allows a server to communicate\n   the fact that a resource is expected\
    \ to become unresponsive at a\n   specific point in time.  It provides information\
    \ for clients that\n   they can use to control their usage of the resource.\n\
    \   The Sunset header field contains a single timestamp that advertises\n   the\
    \ point in time when the resource is expected to become\n   unresponsive.  The\
    \ Sunset value is an HTTP-date timestamp, as defined\n   in Section 7.1.1.1 of\
    \ [RFC7231], and SHOULD be a timestamp in the\n   future.\n   It is safest to\
    \ consider timestamps in the past mean the present\n   time, meaning that the\
    \ resource is expected to become unavailable at\n   any time.\n   Sunset = HTTP-date\n\
    \   For example:\n   Sunset: Sat, 31 Dec 2018 23:59:59 GMT\n   Clients SHOULD\
    \ treat Sunset timestamps as hints: it is not guaranteed\n   that the resource\
    \ will, in fact, be available until that time and\n   will not be available after\
    \ that time.  However, since this\n   information is provided by the resource\
    \ itself, it does have some\n   credibility.\n   After the Sunset time has arrived,\
    \ it is likely that interactions\n   with the resource will result in client-side\
    \ errors (HTTP 4xx status\n   codes), redirect responses (HTTP 3xx status codes),\
    \ or the client\n   might not be able to interact with the resource at all.  The\
    \ Sunset\n   header field does not expose any information about which of those\n\
    \   behaviors can be expected.\n   Clients not interpreting an existing Sunset\
    \ header field can operate\n   as usual and simply may experience the resource\
    \ becoming unavailable\n   without recognizing any notification about it beforehand.\n"
- title: 4.  Sunset and Caching
  contents:
  - "4.  Sunset and Caching\n   It should be noted that the Sunset HTTP response header\
    \ field serves\n   a different purpose than HTTP caching [RFC7234].  HTTP caching\
    \ is\n   concerned with making resource representations (i.e., represented\n \
    \  resource state) reusable so that they can be used more efficiently.\n   This\
    \ is achieved by using header fields that allow clients and\n   intermediaries\
    \ to better understand when a resource representation\n   can be reused or when\
    \ resource state (and, thus, the representation)\n   may have changed.\n   The\
    \ Sunset header field is not concerned with resource state at all.\n   It only\
    \ signals that a resource is expected to become unavailable at\n   a specific\
    \ point in time.  There are no assumptions about if, when,\n   or how often a\
    \ resource may change state in the meantime.\n   For these reasons, the Sunset\
    \ header field and HTTP caching should be\n   seen as complementary and not as\
    \ overlapping in scope and\n   functionality.\n   This also means that applications\
    \ acting as intermediaries, such as\n   search engines or archives that make resources\
    \ discoverable, should\n   treat Sunset information differently from caching information.\
    \  These\n   applications may use Sunset information for signaling to users that\
    \ a\n   resource may become unavailable.  But they still have to account for\n\
    \   the fact that resource state can change in the meantime and that\n   Sunset\
    \ information is a hint and, thus, future resource availability\n   may differ\
    \ from the advertised timestamp.\n"
- title: 5.  Sunset Scope
  contents:
  - "5.  Sunset Scope\n   The Sunset header field applies to the resource that returns\
    \ it,\n   meaning that it announces the upcoming sunset of that specific\n   resource.\
    \  However, as discussed in Section 1.4, there may be\n   scenarios where the\
    \ scope of the announced Sunset information is\n   larger than just the single\
    \ resource where it appears.\n   Resources are free to define such an increased\
    \ scope, and usually\n   this scope will be documented by the resource so that\
    \ consumers of\n   the resource know about the increased scope and can behave\n\
    \   accordingly.  However, it is important to take into account that such\n  \
    \ increased scoping is invisible for consumers who are unaware of the\n   increased\
    \ scoping rules.  This means that these consumers will not be\n   aware of the\
    \ increased scope, and they will not interpret Sunset\n   information different\
    \ from its standard meaning (i.e., it applies to\n   the resource only).\n   Using\
    \ such an increased scope still may make sense, as Sunset\n   information is only\
    \ a hint anyway; thus, it is optional information\n   that cannot be depended\
    \ on, and clients should always be implemented\n   in ways that allow them to\
    \ function without Sunset information.\n   Increased scope information may help\
    \ clients to glean additional\n   hints from resources (e.g., concluding that\
    \ an API is being\n   deprecated because its home/start resource announces a Sunset)\
    \ and,\n   thus, might allow them to implement behavior that allows them to make\n\
    \   educated guesses about resources becoming unavailable.\n"
- title: 6.  The Sunset Link Relation Type
  contents:
  - "6.  The Sunset Link Relation Type\n   The Sunset HTTP header field indicates\
    \ the upcoming retirement of a\n   resource or a service.  In addition, a resource\
    \ may want to make\n   information available that provides additional information\
    \ about how\n   retirement will be handled for resources or services.  This\n\
    \   information can be broadly described by the following three topics:\n   Sunset\
    \ policy:  The policy for which resources and in which way\n         sunsets may\
    \ occur may be published as part of service's\n         description.  Sunsets\
    \ may only/mostly affect a subset of a\n         service's resources, and they\
    \ may be exposed according to a\n         certain policy (e.g., one week in advance).\n\
    \   Upcoming sunset:  There may be additional information about an\n         upcoming\
    \ sunset, which can be published as a resource that can\n         be consumed\
    \ by those looking for this additional information.\n   Sunset mitigation:  There\
    \ may be information about possible\n         mitigation/migration strategies,\
    \ such as possible ways how\n         resource users can switch to alternative\
    \ resources/services.\n   Any information regarding the above issues (and possibly\
    \ additional\n   ones) can be made available through a URI that then can be linked\
    \ to\n   using the sunset link relation type.  This specification places no\n\
    \   constraints on the scope or the type of the linked resource.  The\n   scope\
    \ can be for a resource or for a service.  The type is determined\n   by the media\
    \ type of the linked resource and can be targeted to\n   humans, machines, or\
    \ both.\n   If the linked resource does provide machine-readable information,\n\
    \   consumers should be careful before acting on this information.  Such\n   information\
    \ may, for example, instruct consumers to use a migration\n   rule so that sunset\
    \ resources can be accessed at new URIs.  However,\n   this kind of information\
    \ amounts to a possibly large-scale identity\n   migration of resources, so it\
    \ is crucial that the migration\n   information is authentic and accurate.\n"
- title: 7.  IANA Considerations
  contents:
  - '7.  IANA Considerations

    '
- title: 7.1.  The Sunset Response Header Field
  contents:
  - "7.1.  The Sunset Response Header Field\n   The Sunset response header field has\
    \ been added to the \"Permanent\n   Message Header Field Names\" registry (see\
    \ [RFC3864]), taking into\n   account the guidelines given by HTTP/1.1 [RFC7231].\n\
    \      Header Field Name: Sunset\n      Protocol: http\n      Status: informational\n\
    \      Author/Change controller: IETF\n      Reference: RFC 8594\n"
- title: 7.2.  The Sunset Link Relation Type
  contents:
  - "7.2.  The Sunset Link Relation Type\n   The sunset link relation type has been\
    \ added to the permanent \"Link\n   Relation Types\" registry according to Section\
    \ 4.2 of [RFC8288]:\n      Relation Name: sunset\n      Description: Identifies\
    \ a resource that provides information about\n      the context's retirement policy.\n\
    \      Reference: RFC 8594\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Generally speaking, information about upcoming\
    \ sunsets can leak\n   information that otherwise might not be available.  For\
    \ example, a\n   resource representing a registration can leak information about\
    \ the\n   expiration date when it exposes sunset information.  For this reason,\n\
    \   any use of sunset information where the sunset represents an\n   expiration\
    \ or allows the calculation of another date (such as\n   calculating a creation\
    \ date because it is known that resources expire\n   after one year) should be\
    \ treated in the same way as if this\n   information would be made available directly\
    \ in the resource's\n   representation.\n   The Sunset header field SHOULD be\
    \ treated as a resource hint, meaning\n   that the resource is indicating (and\
    \ not guaranteeing with certainty)\n   its potential retirement.  The definitive\
    \ test whether or not the\n   resource in fact is available will be to attempt\
    \ to interact with it.\n   Applications should never treat an advertised Sunset\
    \ date as a\n   definitive prediction of what is going to happen at the specified\n\
    \   point in time: the Sunset indication may have been inserted by an\n   intermediary\
    \ or the advertised date may get changed or withdrawn by\n   the resource owner.\n\
    \   The main purpose of the Sunset header field is to signal intent so\n   that\
    \ applications using resources may get a warning ahead of time and\n   can react\
    \ accordingly.  What an appropriate reaction is (such as\n   switching to a different\
    \ resource or service), what it will be based\n   on (such as machine-readable\
    \ formats that allow the switching to be\n   done automatically), and when it\
    \ will happen (such as ahead of the\n   advertised date or only when the resource\
    \ in fact becomes\n   unavailable) is outside the scope of this specification.\n\
    \   In cases where a sunset policy is linked by using the sunset link\n   relation\
    \ type, clients SHOULD be careful about taking any actions\n   based on this information.\
    \  It SHOULD be verified that the\n   information is authentic and accurate. \
    \ Furthermore, it SHOULD be\n   tested that this information is only applied to\
    \ resources that are\n   within the scope of the policy, making sure that sunset\
    \ policies\n   cannot \"hijack\" resources by for example providing migration\n\
    \   information for them.\n"
- title: 9.  Example
  contents:
  - "9.  Example\n   If a resource has been created in an archive that, for management\
    \ or\n   compliance reasons, stores resources for ten years and permanently\n\
    \   deletes them afterwards, the Sunset header field can be used to\n   expose\
    \ this information.  If such a resource has been created on\n   November 11, 2016,\
    \ then the following header field can be included in\n   responses:\n   Sunset:\
    \ Wed, 11 Nov 2026 11:11:11 GMT\n   This allows clients that are aware of the\
    \ Sunset header field to\n   understand that the resource likely will become unavailable\
    \ at the\n   specified point in time.  Clients can decide to ignore this\n   information,\
    \ adjust their own behavior accordingly, or alert\n   applications or users about\
    \ this timestamp.\n   Even though the Sunset header field is made available by\
    \ the resource\n   itself, there is no guarantee that the resource indeed will\
    \ become\n   unavailable, and if so, how the response will look like for requests\n\
    \   made after that timestamp.  In case of the archive used as an example\n  \
    \ here, the resource indeed may be permanently deleted, and requests\n   for the\
    \ URI after the Sunset timestamp may receive a \"410 Gone\" HTTP\n   response.\
    \  (This is assuming that the archive keeps track of the URIs\n   that it had\
    \ previously assigned; if not, the response may be a more\n   generic \"404 Not\
    \ Found\".)\n   Before the Sunset header field even appears for the first time\
    \ (it\n   may not appear from the very beginning), it is possible that the\n \
    \  resource (or possibly just the \"home\" resource of the service\n   context)\
    \ communicates its sunset policy by using the sunset link\n   relation type. \
    \ If communicated as an HTTP header field, it might\n   look as follows:\n   Link:\
    \ <http://example.net/sunset>;rel=\"sunset\";type=\"text/html\"\n   In this case,\
    \ the linked resource provides sunset policy information\n   about the service\
    \ context.  It may be documentation aimed at\n   developers, for example, informing\
    \ them that the lifetime of a\n   certain class of resources is ten years after\
    \ creation and that\n   Sunset header fields will be served as soon as the sunset\
    \ date is\n   less than some given period of time.  It may also inform developers\n\
    \   whether the service will respond with 410 or 404 after the sunset\n   time,\
    \ as discussed above.\n"
- title: 10.  References
  contents:
  - '10.  References

    '
- title: 10.1.  Normative References
  contents:
  - "10.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC3864]  Klyne, G., Nottingham, M., and J. Mogul, \"Registration\n     \
    \         Procedures for Message Header Fields\", BCP 90, RFC 3864,\n        \
    \      DOI 10.17487/RFC3864, September 2004,\n              <https://www.rfc-editor.org/info/rfc3864>.\n\
    \   [RFC7231]  Fielding, R., Ed. and J. Reschke, Ed., \"Hypertext Transfer\n \
    \             Protocol (HTTP/1.1): Semantics and Content\", RFC 7231,\n      \
    \        DOI 10.17487/RFC7231, June 2014,\n              <https://www.rfc-editor.org/info/rfc7231>.\n\
    \   [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n     \
    \         2119 Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n        \
    \      May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8288]  Nottingham,\
    \ M., \"Web Linking\", RFC 8288,\n              DOI 10.17487/RFC8288, October\
    \ 2017,\n              <https://www.rfc-editor.org/info/rfc8288>.\n"
- title: 10.2.  Informative References
  contents:
  - "10.2.  Informative References\n   [RFC7234]  Fielding, R., Ed., Nottingham, M.,\
    \ Ed., and J. Reschke,\n              Ed., \"Hypertext Transfer Protocol (HTTP/1.1):\
    \ Caching\",\n              RFC 7234, DOI 10.17487/RFC7234, June 2014,\n     \
    \         <https://www.rfc-editor.org/info/rfc7234>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Thanks for comments and suggestions provided by Ben Campbell,\
    \ Alissa\n   Cooper, Benjamin Kaduk, Mirja Kuhlewind, Adam Roach, Phil Sturgeon,\n\
    \   and Asbjorn Ulsberg.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Erik Wilde\n   Email: erik.wilde@dret.net\n   URI:   http://dret.net/netdret/\n"
