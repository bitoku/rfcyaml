Abstract This specification describes a Lightweight Directory Access Protocol (LDAP) extended operation to cancel (or abandon) an outstanding operation.
Unlike the LDAP Abandon operation, but like the X.511 Directory Access Protocol (DAP) Abandon operation, this operation has a response which provides an indication of its outcome.
Background and Intent of Use
The Lightweight Directory Access Protocol (LDAP)
[RFC3377] provides an Abandon operation [RFC2251] which clients may use to cancel other operations.
The Abandon operation does not have a response and requires no response from the abandoned operation.
These semantics provide the client with no clear indication of the outcome of the Abandon operation.
The X.511 Directory Access Protocol (DAP) [X.511] provides an Abandon operation which has a response and also requires the abandoned operation to return a response indicating it was canceled.
The LDAP Cancel operation is modeled after the DAP Abandon operation.
The LDAP Cancel operation SHOULD be used instead of the LDAP Abandon operation when the client needs an indication of the outcome.
This operation may be used to cancel both interrogation and update operations.
Protocol elements are described using ASN.1 [X.680] with implicit tags.
The term "BER encoded" means the element is to be encoded using the Basic Encoding Rules [X.690] under the restrictions detailed in Section 5.1 of [RFC2251].
DSA stands for Directory System Agent (or server).
DSE stands for DSA specific Entry.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
The Cancel operation is defined as an LDAP Extended Operation [RFC2251, Section 4.12] identified by the object identifier 1.3.6.1.1.8.
This section details the syntax of the Cancel request and response messages and defines additional LDAP resultCodes.
The Cancel request is an ExtendedRequest with the requestName field containing 1.3.6.1.1.8 and a requestValue field which contains a BER encoded cancelRequestValue value.
MessageID is as defined in [RFC2251] }
The cancelID field contains the message ID associated with the operation to be canceled.
Response A Cancel response is an ExtendedResponse where the responseName and response fields are absent.
The function of the Cancel Operation is to request that the server cancel an outstanding operation issued within the same session.
The client requests the cancelation of an outstanding operation by issuing a Cancel Response with a cancelID set to the message ID of the outstanding operation.
The Cancel Request itself has a distinct message ID.
Clients SHOULD NOT request the cancelation of an operation multiple times.
If the server is willing and able to cancel the outstanding operation identified by the cancelId, the server SHALL return a Cancel Response with a success
resultCode, and the canceled operation SHALL fail with canceled resultCode.
Otherwise the Cancel Response SHALL have a non success
and SHALL NOT have an impact upon the outstanding operation (if it exists).
if the server is unable to parse the requestValue or the requestValue is absent,
resultCode is returned if the server has no knowledge of the operation requested for cancelation.
resultCode is returned if the identified operation does not support cancelation or the cancel operation could not be performed.
The following classes of operations are not cancelable:  operations which have no response,  operations which create, alter, or destroy authentication and/or authorization associations,  operations which establish, alter, or tear down security services, and  operations which abandon or cancel other operations.
Specifically, the Abandon, Bind, Start TLS [RFC2830],
Unbind, and Cancel operations are not cancelable.
The Cancel operation cannot be abandoned.
The tooLate resultCode is returned to indicate that it is too late to cancel the outstanding operation.
For example, the server may return tooLate for a request to cancel an outstanding modify operation which has already committed updates to the underlying data store.
Servers SHOULD indicate their support for this extended operation by providing 1.3.6.1.1.8 as a value of the 'supportedExtension' attribute type in their root DSE.
A server MAY choose to advertise this extension only when the client is authorized to use it.
This operation is intended to allow a user to cancel operations they previously issued during the current LDAP association.
In certain cases, such as when the Proxy Authorization Control is in use, different outstanding operations may be processed under different LDAP associations.
Servers MUST NOT allow a user to cancel an operation belonging to another user.
Some operations should not be cancelable for security reasons.
This specification disallows the cancelation of the Bind operation and Start
TLS extended operation so as to avoid adding complexity to authentication, authorization, and security layer semantics.
Designers of future extended operations and/or controls should disallow abandonment and cancelation when appropriate.
The following values [RFC3383] have been registered by the IANA.
The IANA has registered upon Standards Action the LDAP Object Identifier 1.3.6.1.1.8 to identify the LDAP Cancel Operation as defined in this document.
Request for LDAP Object Identifier Registration Person & email address to contact for further information:
Identifies the LDAP Cancel Operation 5.2.
The IANA has registered upon Standards Action the LDAP Protocol Mechanism described in this document.
LDAP Protocol Mechanism Registration Object Identifier: 1.3.6.1.1.8 Description: LDAP Cancel Operation Person & email address to contact for further information:
The IANA has registered upon Standards Action
the LDAP Result Codes described in this document.
LDAP Result Code Registration Person & email address to contact for further information:
Kurt Zeilenga <kurt@OpenLDAP.org> Result Code Name: canceled
(118) Result Code Name: noSuchOperation (119)
Result Code Name: cannotCancel (121) Specification:
RFC 3909 Author/Change Controller: IESG
