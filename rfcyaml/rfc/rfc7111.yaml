- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                     M. Hausenblas
  contents:
  - "Independent Submission                                     M. Hausenblas\n  \
    \        URI Fragment Identifiers for the text/csv Media Type\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines URI fragment identifiers for text/csv MIME\n \
    \  entities.  These fragment identifiers make it possible to refer to\n   parts\
    \ of a text/csv MIME entity identified by row, column, or cell.\n   Fragment identification\
    \ can use single items or ranges.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7111.\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The change to the text/csv media type registration requires IESG\n\
    \   approval, as the IESG is the change controller for that registration.\n  \
    \ The IESG has, after consultation with the IETF community, approved\n   the change,\
    \ which is specified in Section 5 of this document.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  What is text/csv? . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     1.2.  Why text/csv Fragment Identifiers?  . . . . . . . .\
    \ . . .   3\n       1.2.1.  Motivation  . . . . . . . . . . . . . . . . . . .\
    \ . .   3\n       1.2.2.  Use Cases . . . . . . . . . . . . . . . . . . . . .\
    \ .   4\n     1.3.  Incremental Deployment  . . . . . . . . . . . . . . . . .\
    \   4\n     1.4.  Notation Used in this Memo  . . . . . . . . . . . . . . .  \
    \ 4\n   2.  Fragment Identification Methods . . . . . . . . . . . . . . .   5\n\
    \     2.1.  Row-Based Selection . . . . . . . . . . . . . . . . . . .   5\n  \
    \   2.2.  Column-Based Selection  . . . . . . . . . . . . . . . . .   6\n    \
    \ 2.3.  Cell-Based Selection  . . . . . . . . . . . . . . . . . .   6\n     2.4.\
    \  Multi-Selections  . . . . . . . . . . . . . . . . . . . .   7\n   3.  Fragment\
    \ Identification Syntax  . . . . . . . . . . . . . . .   7\n   4.  Fragment Identifier\
    \ Processing  . . . . . . . . . . . . . . .   8\n     4.1.  Syntax Errors in Fragment\
    \ Identifiers . . . . . . . . . .   8\n     4.2.  Semantics of Fragment Identifiers\
    \ . . . . . . . . . . . .   8\n   5.  IANA Considerations . . . . . . . . . .\
    \ . . . . . . . . . . .   9\n     5.1.  The text/csv media type . . . . . . .\
    \ . . . . . . . . . .   9\n   6.  Security Considerations . . . . . . . . . .\
    \ . . . . . . . . .  11\n   7.  Acknowledgements  . . . . . . . . . . . . . .\
    \ . . . . . . . .  11\n   8.  References  . . . . . . . . . . . . . . . . . .\
    \ . . . . . . .  11\n     8.1.  Normative References  . . . . . . . . . . . .\
    \ . . . . . .  11\n     8.2.  Informative References  . . . . . . . . . . . .\
    \ . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This memo updates the text/csv media type defined in RFC\
    \ 4180\n   [RFC4180] by defining URI fragment identifiers for text/csv MIME\n\
    \   entities.\n   The change to the text/csv media type registration required\
    \ IESG\n   approval, as the IESG is the change controller for that registration.\n\
    \   The IESG has, after consultation with the IETF community, approved\n   the\
    \ change, which is specified in Section 5 of this document.\n   This section gives\
    \ an introduction to the general concepts of\n   text/csv MIME entities and URI\
    \ fragment identifiers and discusses the\n   need for fragment identifiers for\
    \ text/csv and deployment issues.\n   Section 2 discusses the principles and methods\
    \ on which this memo is\n   based.  Section 3 defines the syntax, and Section\
    \ 4 discusses\n   processing of text/csv fragment identifiers.\n"
- title: 1.1.  What is text/csv?
  contents:
  - "1.1.  What is text/csv?\n   Internet Media Types (often referred to as \"MIME\
    \ types\") as defined\n   in RFC 2045 [RFC2045] and RFC 2046 [RFC2046] are used\
    \ to identify\n   different types and subtypes of media.  The text/csv media type\
    \ is\n   defined in RFC 4180 [RFC4180], using US-ASCII [ASCII] as the default\n\
    \   character encoding (other character encodings can be used as well).\n   Apart\
    \ from a media type parameter for specifying the character\n   encoding (\"charset\"\
    ), there is a second media type parameter\n   (\"header\") that indicates whether\
    \ there is a header row in the CSV\n   document or not.\n"
- title: 1.2.  Why text/csv Fragment Identifiers?
  contents:
  - "1.2.  Why text/csv Fragment Identifiers?\n   URIs are the identification mechanism\
    \ for resources on the Web.  The\n   URI syntax specified in RFC 3986 [RFC3986]\
    \ optionally includes a so-\n   called \"fragment identifier\", separated by a\
    \ number sign (\"#\").  The\n   fragment identifier consists of additional reference\
    \ information to\n   be interpreted by the client after the retrieval action has\
    \ been\n   successfully completed.  The semantics of a fragment identifier is\
    \ a\n   property of the media type resulting from a retrieval action,\n   regardless\
    \ of the URI scheme used in the URI reference.  Therefore,\n   the format and\
    \ interpretation of fragment identifiers is dependent on\n   the media type of\
    \ the retrieval result.\n"
- title: 1.2.1.  Motivation
  contents:
  - "1.2.1.  Motivation\n   Similar to the motivation in RFC 5147 [RFC5147], which\
    \ defines\n   fragment identifiers for plain text files, referring to specific\n\
    \   parts of a resource can be very useful because it enables users and\n   applications\
    \ to create more specific references.  Users can create\n   references to a particular\
    \ point of interest within a resource,\n   rather than referring to the complete\
    \ resource.  Even though it is\n   suggested that fragment identification methods\
    \ are specified in a\n   media type's registration (see [RFC6838]), many media\
    \ types do not\n   have fragment identification methods associated with them.\n\
    \   Fragment identifiers are only useful if supported by the client,\n   because\
    \ they are only interpreted by the client.  Therefore, a new\n   fragment identification\
    \ method will require some time to be adopted\n   by clients, and older clients\
    \ will not support it.  However, because\n   the URI still works even if the fragment\
    \ identifier is not supported\n   (the resource is retrieved, but the fragment\
    \ identifier is not\n   interpreted), rapid adoption is not highly critical to\
    \ ensure the\n   success of a new fragment identification method.\n"
- title: 1.2.2.  Use Cases
  contents:
  - "1.2.2.  Use Cases\n   Fragment identifiers for text/csv as defined in this memo\
    \ make it\n   possible to refer to specific parts of a text/csv MIME entity. \
    \ Use\n   cases include, but are not limited to, selecting a part for visual\n\
    \   rendering, stream processing, making assertions about a certain value\n  \
    \ (provenance, confidence, comments, etc.), or data integration.\n"
- title: 1.3.  Incremental Deployment
  contents:
  - "1.3.  Incremental Deployment\n   As long as text/csv fragment identifiers are\
    \ not supported\n   universally, it is important to consider the implications\
    \ of\n   incremental deployment.  Clients (for example, Web browsers) not\n  \
    \ supporting the text/csv fragment identifier described in this memo\n   will\
    \ work with URI references to text/csv MIME entities, but they\n   will fail to\
    \ understand the identification of the sub-resource\n   specified by the fragment\
    \ identifier, and thus will behave as if the\n   complete resource was referenced.\
    \  This is a reasonable fallback\n   behavior and, in general users, should take\
    \ into account the\n   possibility that a program interpreting a given URI will\
    \ fail to\n   interpret the fragment identifier part.  Since fragment identifier\n\
    \   evaluation is local to the client (and happens after retrieving the\n   MIME\
    \ entity), there is no reliable way for a server to determine\n   whether a requesting\
    \ client is using a URI containing a fragment\n   identifier.\n"
- title: 1.4.  Notation Used in this Memo
  contents:
  - "1.4.  Notation Used in this Memo\n   The capitalized key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\",\n   \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in RFC\n   2119 [RFC2119].\n"
- title: 2.  Fragment Identification Methods
  contents:
  - "2.  Fragment Identification Methods\n   This memo specifies fragment identification\
    \ using the following\n   methods: \"row\" for row selections, \"col\" for columns\
    \ selections, and\n   \"cell\" for cell selections.\n   Throughout the sections\
    \ below, the following example table in CSV\n   (having 7 rows, including one\
    \ header row, and 3 columns) is used:\n   date,temperature,place\n   2011-01-01,1,Galway\n\
    \   2011-01-02,-1,Galway\n   2011-01-03,0,Galway\n   2011-01-01,6,Berkeley\n \
    \  2011-01-02,8,Berkeley\n   2011-01-03,5,Berkeley\n"
- title: 2.1.  Row-Based Selection
  contents:
  - "2.1.  Row-Based Selection\n   To select a specific record, the \"row\" scheme\
    \ followed by a single\n   number is used (the first row is at position 1).\n\
    \   http://example.com/data.csv#row=4\n   The above CSV fragment identifies the\
    \ fourth row:\n   2011-01-03,0,Galway\n   Fragments can also select ranges of\
    \ rows:\n   http://example.com/data.csv#row=5-7\n   The above CSV fragment identifies\
    \ three consecutive rows:\n   2011-01-01,6,Berkeley\n   2011-01-02,8,Berkeley\n\
    \   2011-01-03,5,Berkeley\n   The value \"*\" can be used to indicate the last\
    \ row, so the previous\n   URI is equivalent to:\n   http://example.com/data.csv#row=5-*\n"
- title: 2.2.  Column-Based Selection
  contents:
  - "2.2.  Column-Based Selection\n   To select values from a certain column, the\
    \ \"col\" scheme is used,\n   followed by a position (the first column is at position\
    \ 1):\n   http://example.com/data.csv#col=2\n   The above CSV fragment addresses\
    \ the second column, identifying the\n   column:\n   temperature\n   1\n   -1\n\
    \   0\n   6\n   8\n   5\n   The \"col\" scheme can also be used to identify ranges\
    \ of columns:\n   http://example.com/data.csv#col=1-2\n   The above CSV fragment\
    \ addresses the first and second column:\n   date,temperature\n   2011-01-01,1\n\
    \   2011-01-02,-1\n   2011-01-03,0\n   2011-01-01,6\n   2011-01-02,8\n   2011-01-03,5\n\
    \   As for rows, the value \"*\" can be used to indicate the last column.\n"
- title: 2.3.  Cell-Based Selection
  contents:
  - "2.3.  Cell-Based Selection\n   To select particular fields, the \"cell\" scheme\
    \ is used, followed by a\n   row number, a comma, and a column number.\n   http://example.com/data.csv#cell=4,1\n\
    \   The above CSV fragment addresses the field in the first column within\n  \
    \ the fourth row, yielding:\n   2011-01-03\n   It is also possible to select cell-based\
    \ fragments that have more\n   than just one cell, in which case the cell selection\
    \ uses the same\n   range syntax as for row and column range selections.  For\
    \ these\n   selections, the syntax uses the upper left-hand cell as the starting\n\
    \   point of the selection, followed by a minus sign, and then the lower\n   right-hand\
    \ cell as the end point of the selection.\n   http://example.com/data.csv#cell=4,1-6,2\n\
    \   The above CSV fragment selects a region that starts at the fourth row\n  \
    \ and the first column and ends at the sixth row and the second column:\n   2011-01-03,0\n\
    \   2011-01-01,6\n   2011-01-02,8\n"
- title: 2.4.  Multi-Selections
  contents:
  - "2.4.  Multi-Selections\n   Row, column, and cell selections can make more than\
    \ one selection, in\n   which case the individual selections are separated by\
    \ semicolons.  In\n   these cases, the resulting fragment may be a disjoint fragment,\
    \ such\n   as the selection \"#row=3;6\" for the example CSV, which would select\n\
    \   the third and the sixth row.  It is up to the user agent to decide\n   how\
    \ to handle disjoint fragments, but since they are allowed, user\n   agents should\
    \ be prepared to handle disjoint fragments.\n"
- title: 3.  Fragment Identification Syntax
  contents:
  - "3.  Fragment Identification Syntax\n   The syntax for the text/csv fragment identifiers\
    \ is as follows.\n   The following syntax definition uses ABNF as defined in RFC\
    \ 5234\n   [RFC5234], including the rule DIGIT.\n   NOTE:  In the descriptions\
    \ that follow, specified text values MUST be\n      used exactly as given, using\
    \ exactly the indicated lowercase\n      letters.  In this respect, the ABNF usage\
    \ differs from [RFC5234].\n   csv-fragment =  rowsel / colsel / cellsel\n   rowsel\
    \       =  \"row=\" singlespec 0*( \";\" singlespec)\n   colsel       =  \"col=\"\
    \ singlespec 0*( \";\" singlespec)\n   cellsel      =  \"cell=\" cellspec 0*(\
    \ \";\" cellspec)\n   singlespec   =  position [ \"-\" position ]\n   cellspec\
    \     =  cellrow \",\" cellcol [ \"-\" cellrow \",\" cellcol ]\n   cellrow   \
    \   =  position\n   cellcol      =  position\n   position     =  number / \"*\"\
    \n   number       =  1*( DIGIT )\n"
- title: 4.  Fragment Identifier Processing
  contents:
  - "4.  Fragment Identifier Processing\n   Applications implementing support for\
    \ the mechanism described in this\n   memo MUST behave as described in the following\
    \ sections.\n"
- title: 4.1.  Syntax Errors in Fragment Identifiers
  contents:
  - "4.1.  Syntax Errors in Fragment Identifiers\n   If a fragment identifier contains\
    \ a syntax error (i.e., does not\n   conform to the syntax specified in Section\
    \ 3), then it MUST be\n   ignored by clients.  Clients MUST NOT make any attempt\
    \ to correct or\n   guess fragment identifiers.  Syntax errors MAY be reported\
    \ by\n   clients.\n"
- title: 4.2.  Semantics of Fragment Identifiers
  contents:
  - "4.2.  Semantics of Fragment Identifiers\n   Rows and columns in CSV are counted\
    \ from one.  Positions thus refer\n   to the rows and columns starting from position\
    \ 1, which identifies\n   the first row or column of a CSV.  The special character\
    \ \"*\" can be\n   used to refer to the last row or column of a CSV, thus allowing\n\
    \   fragment identifiers to easily identify ranges that extend to the\n   last\
    \ row or column.\n   If single selections refer to non-existing rows or columns\
    \ (i.e.,\n   beyond the size of the CSV), they MUST be ignored.\n   If ranges\
    \ extend beyond the size of the CSV (by extending to rows or\n   columns beyond\
    \ the size of the CSV), they MUST be interpreted to only\n   extend to the actual\
    \ size of the CSV.\n   If selections of ranges of rows, ranges of columns, or\
    \ ranges of\n   cells are specified in a way so that they select \"inversely\"\
    \ (i.e.,\n   \"#row=10-5\" or \"#cell=10,10-5,5\"), they MUST be ignored.\n  \
    \ Each specification of an identified region is processed\n   independently, and\
    \ ignored specifications (because of reasons listed\n   in the previous paragraphs)\
    \ do not cause the whole fragment\n   identifier to fail, they just mean that\
    \ this single specification is\n   ignored.  For the example file, the fragment\
    \ identifier\n   \"#row=1-2;5-4;13-16\" does identify the first two rows: the\
    \ second\n   specification is an \"inverse\" specification and thus is ignored,\
    \ and\n   the third specification targets rows beyond the actual size of the\n\
    \   CSV and thus is also ignored.\n   The complete fragment identifier identifies\
    \ all the successfully\n   evaluated identified parts as a single identified fragment.\
    \  This\n   fragment can be disjoint because of multiple selections.  Multiple\n\
    \   selections also can result in overlapping individual parts, and it is\n  \
    \ up to the user agent how to process such a fragment and whether the\n   individual\
    \ parts are still made accessible (i.e., visualized in\n   visual user agents)\
    \ or are presented as one unit.  For example, the\n   fragment identifier \"#row=3-6;4-5\"\
    \ contains a second identified part\n   that is completely contained in the first\
    \ identified part.  Whether a\n   user agent maintains this selection as two parts,\
    \ or simply signals\n   that the identified fragment spans from the third to the\
    \ sixth row,\n   is up for the user agent to decide.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has added a reference to this specification\
    \ in the text/csv\n   media type registration.\n"
- title: 5.1.  The text/csv media type
  contents:
  - "5.1.  The text/csv media type\n   The Internet media type [RFC6838] for a CSV\
    \ document is text/csv.\n   The following registration has been copied from the\
    \ original\n   registration of text/csv [RFC4180], with the exception of the added\n\
    \   fragment identification considerations and added security\n   considerations\
    \ for fragment identifiers.\n   Type name:  text\n   Subtype name:  csv\n   Required\
    \ parameters:  none\n   Optional parameters:  charset, header\n      The \"charset\"\
    \ parameter specifies the charset employed by the CSV\n      content.  In accordance\
    \ with RFC 6657 [RFC6657], the charset\n      parameter SHOULD be used, and if\
    \ it is not present, UTF-8 SHOULD\n      be assumed as the default (this implies\
    \ that US-ASCII CSV will\n      work, even when not specifying the \"charset\"\
    \ parameter).  Any\n      charset defined by IANA for the \"text\" tree may be\
    \ used in\n      conjunction with the \"charset\" parameter.\n      The \"header\"\
    \ parameter indicates the presence or absence of the\n      header line.  Valid\
    \ values are \"present\" or \"absent\".\n      Implementors choosing not to use\
    \ this parameter must make their\n      own decisions as to whether the header\
    \ line is present or absent.\n   Encoding considerations:  CSV MIME entities consist\
    \ of binary data\n      [RFC6838].  As per Section 4.1.1. of RFC 2046 [RFC2046],\
    \ this\n      media type uses CRLF to denote line breaks.  However, implementers\n\
    \      should be aware that some implementations may use other values.\n   Security\
    \ considerations:\n      Text/csv consists of nothing but passive text data that\
    \ should not\n      pose any direct risks.  However, it is possible that malicious\n\
    \      data may be included in order to exploit buffer overruns or other\n   \
    \   bugs in the program processing the text/csv data.\n      The text/csv format\
    \ provides no confidentiality or integrity\n      protection, so if such protections\
    \ are needed, they must be\n      supplied externally.\n      The fact that software\
    \ implementing fragment identifiers for CSV\n      and software not implementing\
    \ them differs in behavior, and the\n      fact that different software may show\
    \ documents or fragments to\n      users in different ways, can lead to misunderstandings\
    \ on the part\n      of users.  Such misunderstandings might be exploited in a\
    \ way\n      similar to spoofing or phishing.\n      Implementers and users of\
    \ fragment identifiers for CSV text should\n      also be aware of the security\
    \ considerations in RFC 3986 [RFC3986]\n      and RFC 3987 [RFC3987].\n   Interoperability\
    \ considerations:  Due to lack of a single\n      specification, there are considerable\
    \ differences among\n      implementations.  Implementers should \"be conservative\
    \ in what you\n      do, be liberal in what you accept from others\" (RFC 793\
    \ [RFC0793])\n      when processing CSV files.  An attempt at a common definition\
    \ can\n      be found in Section 2.  Implementations deciding not to use the\n\
    \      optional \"header\" parameter must make their own decision as to\n    \
    \  whether the header is absent or present.\n   Published specification:  While\
    \ numerous private specifications exist\n      for various programs and systems,\
    \ there is no single \"master\"\n      specification for this format.  An attempt\
    \ at a common definition\n      can be found in Section 2 of RFC 4180 [RFC4180].\n\
    \   Applications that use this media type:  Spreadsheet programs and\n      various\
    \ data conversion utilities.\n   Fragment identifier considerations:  Fragment\
    \ identification for\n      text/csv is supported by using fragment identifiers\
    \ as specified\n      by RFC 7111.\n   Additional information:\n      Magic number(s):\
    \  none\n      File extension(s):  CSV\n      Macintosh file type code(s):  TEXT\n\
    \   Person & email address to contact for further information:\n      Yakov Shafranovich\
    \ <ietf@shaftek.org> and\n      Erik Wilde <dret@berkeley.edu>\n   Intended usage:\
    \  COMMON\n   Restrictions on usage:  none\n   Author:\n      Yakov Shafranovich\
    \ <ietf@shaftek.org> and\n      Erik Wilde <dret@berkeley.edu>\n   Change controller:\
    \  IESG\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   The security considerations for text/csv fragment\
    \ identifiers are\n   listed in the respective section of the media type registration\
    \ in\n   Section 5.1.\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   Thanks for comments and suggestions provided by Nevil\
    \ Brownlee,\n   Richard Cyganiak, Ian Davis, Gannon Dick, Leigh Dodds, and Barry\n\
    \   Leiba.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2045]  Freed, N. and N. Borenstein, \"Multipurpose\
    \ Internet Mail\n              Extensions (MIME) Part One: Format of Internet\
    \ Message\n              Bodies\", RFC 2045, November 1996.\n   [RFC2046]  Freed,\
    \ N. and N. Borenstein, \"Multipurpose Internet Mail\n              Extensions\
    \ (MIME) Part Two: Media Types\", RFC 2046,\n              November 1996.\n  \
    \ [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n          \
    \    Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66, RFC\n              3986, January 2005.\n  \
    \ [RFC3987]  Duerst, M. and M. Suignard, \"Internationalized Resource\n      \
    \        Identifiers (IRIs)\", RFC 3987, January 2005.\n   [RFC4180]  Shafranovich,\
    \ Y., \"Common Format and MIME Type for Comma-\n              Separated Values\
    \ (CSV) Files\", RFC 4180, October 2005.\n   [RFC5234]  Crocker, D. and P. Overell,\
    \ \"Augmented BNF for Syntax\n              Specifications: ABNF\", STD 68, RFC\
    \ 5234, January 2008.\n   [RFC6657]  Melnikov, A. and J. Reschke, \"Update to\
    \ MIME regarding\n              \"charset\" Parameter Handling in Textual Media\
    \ Types\", RFC\n              6657, July 2012.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [ASCII]    ANSI X3.4-1986, \"Coded Character\
    \ Set - 7-Bit American\n              National Standard Code for Information Interchange\"\
    , STD\n              63, RFC 3629, 1992.\n   [RFC0793]  Postel, J., \"Transmission\
    \ Control Protocol\", STD 7, RFC\n              793, September 1981.\n   [RFC5147]\
    \  Wilde, E. and M. Duerst, \"URI Fragment Identifiers for the\n             \
    \ text/plain Media Type\", RFC 5147, April 2008.\n   [RFC6838]  Freed, N., Klensin,\
    \ J., and T. Hansen, \"Media Type\n              Specifications and Registration\
    \ Procedures\", BCP 13, RFC\n              6838, January 2013.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Michael Hausenblas\n   MapR Technologies\n   32 Bushypark\
    \ Lawn\n   Galway\n   Ireland\n   Phone: +353-86-0215164\n   EMail: mhausenblas@maprtech.com\n\
    \   URI:   http://mhausenblas.info\n   Erik Wilde\n   UC Berkeley\n   EMail: dret@berkeley.edu\n\
    \   URI:   http://dret.net/netdret/\n   Jeni Tennison\n   Open Data Institute\n\
    \   65 Clifton Street\n   London EC2A 4JE\n   U.K.\n   Phone: +44-797-4420482\n\
    \   EMail: jeni@jenitennison.com\n   URI:   http://www.jenitennison.com/blog/\n"
