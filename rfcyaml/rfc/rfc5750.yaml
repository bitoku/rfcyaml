- title: __initial_text__
  contents:
  - "   Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.2\n      \
    \                    Certificate Handling\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies conventions for X.509 certificate usage\
    \ by\n   Secure/Multipurpose Internet Mail Extensions (S/MIME) v3.2 agents.\n\
    \   S/MIME provides a method to send and receive secure MIME messages,\n   and\
    \ certificates are an integral part of S/MIME agent processing.\n   S/MIME agents\
    \ validate certificates as described in RFC 5280, the\n   Internet X.509 Public\
    \ Key Infrastructure Certificate and CRL Profile.\n   S/MIME agents must meet\
    \ the certificate processing requirements in\n   this document as well as those\
    \ in RFC 5280.  This document obsoletes\n   RFC 3850.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by\n   the Internet Engineering\
    \ Steering Group (IESG).  Further\n   information on Internet Standards is available\
    \ in Section 2 of\n   RFC 5741.\n   Information about the current status of this\
    \ document, any\n   errata, and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5750.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Definitions ................................................3\n  \
    \    1.2. Conventions Used in This Document ..........................4\n    \
    \  1.3. Compatibility with Prior Practice S/MIME ...................4\n      1.4.\
    \ Changes from S/MIME v3 to S/MIME v3.1 ......................5\n      1.5. Changes\
    \ since S/MIME v3.1 ..................................5\n   2. CMS Options .....................................................6\n\
    \      2.1. Certificate Revocation Lists ...............................6\n  \
    \    2.2. Certificate Choices ........................................6\n    \
    \  2.3. CertificateSet .............................................7\n   3. Using\
    \ Distinguished Names for Internet Mail .....................8\n   4. Certificate\
    \ Processing ..........................................9\n      4.1. Certificate\
    \ Revocation Lists ..............................10\n      4.2. Certificate Path\
    \ Validation ...............................11\n      4.3. Certificate and CRL\
    \ Signing Algorithms and Key Sizes ......11\n      4.4. PKIX Certificate Extensions\
    \ ...............................12\n   5. Security Considerations ........................................15\n\
    \   6. References .....................................................17\n  \
    \    6.1. Reference Conventions .....................................17\n    \
    \  6.2. Normative References ......................................17\n      6.3.\
    \ Informative References ....................................19\n   Appendix A.\
    \ Moving S/MIME v2 Certificate Handling to Historic\n               Status.................................................21\n\
    \   Appendix B. Acknowledgments........................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   S/MIME (Secure/Multipurpose Internet Mail Extensions) v3.2,\
    \ described\n   in [SMIME-MSG], provides a method to send and receive secure MIME\n\
    \   messages.  Before using a public key to provide security services,\n   the\
    \ S/MIME agent MUST verify that the public key is valid.  S/MIME\n   agents MUST\
    \ use PKIX certificates to validate public keys as\n   described in the Internet\
    \ X.509 Public Key Infrastructure (PKIX)\n   Certificate and CRL Profile [KEYM].\
    \  S/MIME agents MUST meet the\n   certificate processing requirements documented\
    \ in this document in\n   addition to those stated in [KEYM].\n   This specification\
    \ is compatible with the Cryptographic Message\n   Syntax (CMS) RFC 5652 [CMS]\
    \ in that it uses the data types defined by\n   CMS.  It also inherits all the\
    \ varieties of architectures for\n   certificate-based key management supported\
    \ by CMS.\n"
- title: 1.1.  Definitions
  contents:
  - "1.1.  Definitions\n   For the purposes of this document, the following definitions\
    \ apply.\n   ASN.1: Abstract Syntax Notation One, as defined in ITU-T X.680\n\
    \   [X.680].\n   Attribute certificate (AC): An X.509 AC is a separate structure\
    \ from\n   a subject's public key X.509 certificate.  A subject may have\n   multiple\
    \ X.509 ACs associated with each of its public key X.509\n   certificates.  Each\
    \ X.509 AC binds one or more attributes with one of\n   the subject's public key\
    \ X.509 certificates.  The X.509 AC syntax is\n   defined in [ACAUTH].\n   Certificate:\
    \ A type that binds an entity's name to a public key with\n   a digital signature.\
    \  This type is defined in the Internet X.509\n   Public Key Infrastructure (PKIX)\
    \ Certificate and CRL Profile [KEYM].\n   This type also contains the distinguished\
    \ name of the certificate\n   issuer (the signer), an issuer-specific serial number,\
    \ the issuer's\n   signature algorithm identifier, a validity period, and extensions\n\
    \   also defined in that document.\n   Certificate Revocation List (CRL): A type\
    \ that contains information\n   about certificates whose validity an issuer has\
    \ prematurely revoked.\n   The information consists of an issuer name, the time\
    \ of issue, the\n   next scheduled time of issue, a list of certificate serial\
    \ numbers\n   and their associated revocation times, and extensions as defined\
    \ in\n   [KEYM].  The CRL is signed by the issuer.  The type intended by this\n\
    \   specification is the one defined in [KEYM].\n   Receiving agent: Software\
    \ that interprets and processes S/MIME CMS\n   objects, MIME body parts that contain\
    \ CMS objects, or both.\n   Sending agent: Software that creates S/MIME CMS objects,\
    \ MIME body\n   parts that contain CMS objects, or both.\n   S/MIME agent: User\
    \ software that is a receiving agent, a sending\n   agent, or both.\n"
- title: 1.2.  Conventions Used in This Document
  contents:
  - "1.2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [MUSTSHOULD].\n   We define some additional terms here:\n   SHOULD+    This\
    \ term means the same as SHOULD.  However, the authors\n              expect that\
    \ a requirement marked as SHOULD+ will be\n              promoted at some future\
    \ time to be a MUST.\n   SHOULD-    This term means the same as SHOULD.  However,\
    \ the authors\n              expect that a requirement marked as SHOULD- will\
    \ be\n              demoted to a MAY in a future version of this document.\n \
    \  MUST-      This term means the same as MUST.  However, the authors\n      \
    \        expect that this requirement will no longer be a MUST in a\n        \
    \      future document.  Although its status will be determined\n            \
    \  at a later time, it is reasonable to expect that if a\n              future\
    \ revision of a document alters the status of a MUST-\n              requirement,\
    \ it will remain at least a SHOULD or a\n              SHOULD-.\n"
- title: 1.3.  Compatibility with Prior Practice S/MIME
  contents:
  - "1.3.  Compatibility with Prior Practice S/MIME\n   S/MIME version 3.2 agents\
    \ ought to attempt to have the greatest\n   interoperability possible with agents\
    \ for prior versions of S/MIME.\n   S/MIME version 2 is described in RFC 2311\
    \ through RFC 2315 inclusive\n   [SMIMEv2], S/MIME version 3 is described in RFC\
    \ 2630 through RFC 2634\n   inclusive and RFC 5035 [SMIMEv3], and S/MIME version\
    \ 3.1 is described\n   in RFC 3850, RFC 3851, RFC 3852, RFC 2634, and RFC 5035\
    \ [SMIMEv3.1].\n   RFC 2311 also has historical information about the development\
    \ of\n   S/MIME.\n"
- title: 1.4.  Changes from S/MIME v3 to S/MIME v3.1
  contents:
  - "1.4.  Changes from S/MIME v3 to S/MIME v3.1\n   Version 1 and version 2 CRLs\
    \ MUST be supported.\n   Multiple certification authority (CA) certificates with\
    \ the same\n   subject and public key, but with overlapping validity periods,\
    \ MUST\n   be supported.\n   Version 2 attribute certificates SHOULD be supported,\
    \ and version 1\n   attributes certificates MUST NOT be used.\n   The use of the\
    \ MD2 digest algorithm for certificate signatures is\n   discouraged, and security\
    \ language was added.\n   Clarified use of email address use in certificates.\
    \  Certificates\n   that do not contain an email address have no requirements\
    \ for\n   verifying the email address associated with the certificate.\n   Receiving\
    \ agents SHOULD display certificate information when\n   displaying the results\
    \ of signature verification.\n   Receiving agents MUST NOT accept a signature\
    \ made with a certificate\n   that does not have the digitalSignature or nonRepudiation\
    \ bit set.\n   Clarifications for the interpretation of the key usage and extended\n\
    \   key usage extensions.\n"
- title: 1.5.  Changes since S/MIME v3.1
  contents:
  - "1.5.  Changes since S/MIME v3.1\n   Conventions Used in This Document: Moved\
    \ to Section 1.2. Added\n   definitions for SHOULD+, SHOULD-, and MUST-.\n   Section\
    \ 1.1:   Updated ASN.1 definition and reference.\n   Section 1.3:   Added text\
    \ about v3.1 RFCs.\n   Section 3:     Aligned email address text with RFC 5280.\
    \  Updated\n                  note to indicate emailAddress IA5String upper bound\
    \ is\n                  255 characters.  Added text about matching email\n   \
    \               addresses.\n   Section 4.2:   Added text to indicate how S/MIME\
    \ agents locate the\n                  correct user certificate.\n   Section 4.3:\
    \   RSA with SHA-256 (PKCS #1 v1.5) added as MUST; DSA\n                  with\
    \ SHA-256 added as SHOULD+; RSA with SHA-1, DSA\n                  with SHA-1,\
    \ and RSA with MD5 changed to SHOULD-; and\n                  RSASSA-PSS with\
    \ SHA-256 added as SHOULD+.  Updated key\n                  sizes and changed\
    \ pointer to PKIX RFCs.\n   Section 4.4.1: Aligned with PKIX on use of basic constraints\n\
    \                  extension in CA certificates.  Clarified which\n          \
    \        extension is used to constrain end entities from using\n            \
    \      their keys to perform issuing authority operations.\n   Section 5:    \
    \ Updated security considerations.\n   Section 7:     Moved references from Appendix\
    \ B to Section 6.\n                  Updated the references.\n   Appendix A: \
    \   Moved Appendix A to Appendix B.  Added Appendix A to\n                  move\
    \ S/MIME v2 Certificate Handling to Historic\n                  Status.\n"
- title: 2.  CMS Options
  contents:
  - "2.  CMS Options\n   The CMS message format allows for a wide variety of options\
    \ in\n   content and algorithm support.  This section puts forth a number of\n\
    \   support requirements and recommendations in order to achieve a base\n   level\
    \ of interoperability among all S/MIME implementations.  Most of\n   the CMS format\
    \ for S/MIME messages is defined in [SMIME-MSG].\n"
- title: 2.1.  Certificate Revocation Lists
  contents:
  - "2.1.  Certificate Revocation Lists\n   Receiving agents MUST support the Certificate\
    \ Revocation List (CRL)\n   format defined in [KEYM].  If sending agents include\
    \ CRLs in outgoing\n   messages, the CRL format defined in [KEYM] MUST be used.\
    \  In all\n   cases, both v1 and v2 CRLs MUST be supported.\n   All agents MUST\
    \ be capable of performing revocation checks using CRLs\n   as specified in [KEYM].\
    \  All agents MUST perform revocation status\n   checking in accordance with [KEYM].\
    \  Receiving agents MUST recognize\n   CRLs in received S/MIME messages.\n   Agents\
    \ SHOULD store CRLs received in messages for use in processing\n   later messages.\n"
- title: 2.2.  Certificate Choices
  contents:
  - "2.2.  Certificate Choices\n   Receiving agents MUST support v1 X.509 and v3 X.509\
    \ certificates as\n   profiled in [KEYM].  End-entity certificates MAY include\
    \ an Internet\n   mail address, as described in Section 3.\n   Receiving agents\
    \ SHOULD support X.509 version 2 attribute\n   certificates.  See [ACAUTH] for\
    \ details about the profile for\n   attribute certificates.\n"
- title: 2.2.1.  Historical Note about CMS Certificates
  contents:
  - "2.2.1.  Historical Note about CMS Certificates\n   The CMS message format supports\
    \ a choice of certificate formats for\n   public key content types: PKIX, PKCS\
    \ #6 extended certificates\n   [PKCS6], and PKIX attribute certificates.\n   The\
    \ PKCS #6 format is not in widespread use.  In addition, PKIX\n   certificate\
    \ extensions address much of the same functionality and\n   flexibility as was\
    \ intended in the PKCS #6.  Thus, sending and\n   receiving agents MUST NOT use\
    \ PKCS #6 extended certificates.\n   X.509 version 1 attribute certificates are\
    \ also not widely\n   implemented, and have been superseded with version 2 attribute\n\
    \   certificates.  Sending agents MUST NOT send version 1 attribute\n   certificates.\n"
- title: 2.3.  CertificateSet
  contents:
  - "2.3.  CertificateSet\n   Receiving agents MUST be able to handle an arbitrary\
    \ number of\n   certificates of arbitrary relationship to the message sender and\
    \ to\n   each other in arbitrary order.  In many cases, the certificates\n   included\
    \ in a signed message may represent a chain of certification\n   from the sender\
    \ to a particular root.  There may be, however,\n   situations where the certificates\
    \ in a signed message may be\n   unrelated and included for convenience.\n   Sending\
    \ agents SHOULD include any certificates for the user's public\n   key(s) and\
    \ associated issuer certificates.  This increases the\n   likelihood that the\
    \ intended recipient can establish trust in the\n   originator's public key(s).\
    \  This is especially important when\n   sending a message to recipients that\
    \ may not have access to the\n   sender's public key through any other means or\
    \ when sending a signed\n   message to a new recipient.  The inclusion of certificates\
    \ in\n   outgoing messages can be omitted if S/MIME objects are sent within a\n\
    \   group of correspondents that has established access to each other's\n   certificates\
    \ by some other means such as a shared directory or manual\n   certificate distribution.\
    \  Receiving S/MIME agents SHOULD be able to\n   handle messages without certificates\
    \ using a database or directory\n   lookup scheme.\n   A sending agent SHOULD\
    \ include at least one chain of certificates up\n   to, but not including, a certification\
    \ authority (CA) that it\n   believes that the recipient may trust as authoritative.\
    \  A receiving\n   agent MUST be able to handle an arbitrarily large number of\n\
    \   certificates and chains.\n   Agents MAY send CA certificates, that is, cross-certificates,\
    \ self-\n   issued certificates, and self-signed certificates.  Note that\n  \
    \ receiving agents SHOULD NOT simply trust any self-signed certificates\n   as\
    \ valid CAs, but SHOULD use some other mechanism to determine if\n   this is a\
    \ CA that should be trusted.  Also note that when\n   certificates contain Digital\
    \ Signature Algorithm (DSA) public keys\n   the parameters may be located in the\
    \ root certificate.  This would\n   require that the recipient possess both the\
    \ end-entity certificate\n   and the root certificate to perform a signature verification,\
    \ and is\n   a valid example of a case where transmitting the root certificate\
    \ may\n   be required.\n   Receiving agents MUST support chaining based on the\
    \ distinguished\n   name fields.  Other methods of building certificate chains\
    \ MAY be\n   supported.\n   Receiving agents SHOULD support the decoding of X.509\
    \ attribute\n   certificates included in CMS objects.  All other issues regarding\
    \ the\n   generation and use of X.509 attribute certificates are outside of the\n\
    \   scope of this specification.  One specification that addresses\n   attribute\
    \ certificate use is defined in [SECLABEL].\n"
- title: 3.  Using Distinguished Names for Internet Mail
  contents:
  - "3.  Using Distinguished Names for Internet Mail\n   End-entity certificates MAY\
    \ contain an Internet mail address as\n   described in [KEYM], Section 4.2.1.6.\
    \  The email address SHOULD be in\n   the subjectAltName extension, and SHOULD\
    \ NOT be in the subject\n   distinguished name.\n   Receiving agents MUST recognize\
    \ and accept certificates that contain\n   no email address.  Agents are allowed\
    \ to provide an alternative\n   mechanism for associating an email address with\
    \ a certificate that\n   does not contain an email address, such as through the\
    \ use of the\n   agent's address book, if available.  Receiving agents MUST recognize\n\
    \   email addresses in the subjectAltName field.  Receiving agents MUST\n   recognize\
    \ email addresses in the Distinguished Name field in the PKCS\n   #9 [PKCS9] emailAddress\
    \ attribute:\n   pkcs-9-at-emailAddress OBJECT IDENTIFIER ::=\n    { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 1 }\n   Note that this attribute MUST\
    \ be encoded as IA5String and has an\n   upper bound of 255 characters.  The right\
    \ side of the email address\n   SHOULD be treated as ASCII-case-insensitive.\n\
    \   Sending agents SHOULD make the address in the From or Sender header\n   in\
    \ a mail message match an Internet mail address in the signer's\n   certificate.\
    \  Receiving agents MUST check that the address in the\n   From or Sender header\
    \ of a mail message matches an Internet mail\n   address, if present, in the signer's\
    \ certificate, if mail addresses\n   are present in the certificate.  A receiving\
    \ agent SHOULD provide\n   some explicit alternate processing of the message if\
    \ this comparison\n   fails, which may be to display a message that shows the\
    \ recipient the\n   addresses in the certificate or other certificate details.\n\
    \   A receiving agent SHOULD display a subject name or other certificate\n   details\
    \ when displaying an indication of successful or unsuccessful\n   signature verification.\n\
    \   All subject and issuer names MUST be populated (i.e., not an empty\n   SEQUENCE)\
    \ in S/MIME-compliant X.509 certificates, except that the\n   subject distinguished\
    \ name (DN) in a user's (i.e., end-entity)\n   certificate MAY be an empty SEQUENCE\
    \ in which case the subjectAltName\n   extension will include the subject's identifier\
    \ and MUST be marked as\n   critical.\n"
- title: 4.  Certificate Processing
  contents:
  - "4.  Certificate Processing\n   S/MIME agents need to provide some certificate\
    \ retrieval mechanism in\n   order to gain access to certificates for recipients\
    \ of digital\n   envelopes.  There are many ways to implement certificate retrieval\n\
    \   mechanisms.  [X.500] directory service is an excellent example of a\n   certificate\
    \ retrieval-only mechanism that is compatible with classic\n   X.500 Distinguished\
    \ Names.  Another method under consideration by the\n   IETF is to provide certificate\
    \ retrieval services as part of the\n   existing Domain Name System (DNS).  Until\
    \ such mechanisms are widely\n   used, their utility may be limited by the small\
    \ number of the\n   correspondent's certificates that can be retrieved.  At a\
    \ minimum,\n   for initial S/MIME deployment, a user agent could automatically\n\
    \   generate a message to an intended recipient requesting the\n   recipient's\
    \ certificate in a signed return message.\n   Receiving and sending agents SHOULD\
    \ also provide a mechanism to allow\n   a user to \"store and protect\" certificates\
    \ for correspondents in such\n   a way so as to guarantee their later retrieval.\
    \  In many\n   environments, it may be desirable to link the certificate\n   retrieval/storage\
    \ mechanisms together in some sort of certificate\n   database.  In its simplest\
    \ form, a certificate database would be\n   local to a particular user and would\
    \ function in a similar way as an\n   \"address book\" that stores a user's frequent\
    \ correspondents.  In this\n   way, the certificate retrieval mechanism would\
    \ be limited to the\n   certificates that a user has stored (presumably from incoming\n\
    \   messages).  A comprehensive certificate retrieval/storage solution\n   may\
    \ combine two or more mechanisms to allow the greatest flexibility\n   and utility\
    \ to the user.  For instance, a secure Internet mail agent\n   may resort to checking\
    \ a centralized certificate retrieval mechanism\n   for a certificate if it cannot\
    \ be found in a user's local certificate\n   storage/retrieval database.\n   Receiving\
    \ and sending agents SHOULD provide a mechanism for the\n   import and export\
    \ of certificates, using a CMS certs-only message.\n   This allows for import\
    \ and export of full certificate chains as\n   opposed to just a single certificate.\
    \  This is described in\n   [SMIME-MSG].\n   Agents MUST handle multiple valid\
    \ certification authority (CA)\n   certificates containing the same subject name\
    \ and the same public\n   keys but with overlapping validity intervals.\n"
- title: 4.1.  Certificate Revocation Lists
  contents:
  - "4.1.  Certificate Revocation Lists\n   In general, it is always better to get\
    \ the latest CRL information\n   from a CA than to get information stored away\
    \ from incoming messages.\n   A receiving agent SHOULD have access to some CRL\
    \ retrieval mechanism\n   in order to gain access to certificate revocation information\
    \ when\n   validating certification paths.  A receiving or sending agent SHOULD\n\
    \   also provide a mechanism to allow a user to store incoming\n   certificate\
    \ revocation information for correspondents in such a way\n   so as to guarantee\
    \ its later retrieval.\n   Receiving and sending agents SHOULD retrieve and utilize\
    \ CRL\n   information every time a certificate is verified as part of a\n   certification\
    \ path validation even if the certificate was already\n   verified in the past.\
    \  However, in many instances (such as off-line\n   verification) access to the\
    \ latest CRL information may be difficult\n   or impossible.  The use of CRL information,\
    \ therefore, may be\n   dictated by the value of the information that is protected.\
    \  The\n   value of the CRL information in a particular context is beyond the\n\
    \   scope of this specification but may be governed by the policies\n   associated\
    \ with particular certification paths.\n   All agents MUST be capable of performing\
    \ revocation checks using CRLs\n   as specified in [KEYM].  All agents MUST perform\
    \ revocation status\n   checking in accordance with [KEYM].  Receiving agents\
    \ MUST recognize\n   CRLs in received S/MIME messages.\n"
- title: 4.2.  Certificate Path Validation
  contents:
  - "4.2.  Certificate Path Validation\n   In creating a user agent for secure messaging,\
    \ certificate, CRL, and\n   certification path validation SHOULD be highly automated\
    \ while still\n   acting in the best interests of the user.  Certificate, CRL,\
    \ and path\n   validation MUST be performed as per [KEYM] when validating a\n\
    \   correspondent's public key.  This is necessary before using a public\n   key\
    \ to provide security services such as verifying a signature,\n   encrypting a\
    \ content-encryption key (e.g., RSA), or forming a\n   pairwise symmetric key\
    \ (e.g., Diffie-Hellman) to be used to encrypt\n   or decrypt a content-encryption\
    \ key.\n   Certificates and CRLs are made available to the path validation\n \
    \  procedure in two ways: a) incoming messages, and b) certificate and\n   CRL\
    \ retrieval mechanisms.  Certificates and CRLs in incoming messages\n   are not\
    \ required to be in any particular order nor are they required\n   to be in any\
    \ way related to the sender or recipient of the message\n   (although in most\
    \ cases they will be related to the sender).\n   Incoming certificates and CRLs\
    \ SHOULD be cached for use in path\n   validation and optionally stored for later\
    \ use.  This temporary\n   certificate and CRL cache SHOULD be used to augment\
    \ any other\n   certificate and CRL retrieval mechanisms for path validation on\n\
    \   incoming signed messages.\n   When verifying a signature and the certificates\
    \ that are included in\n   the message, if a signingCertificate attribute from\
    \ RFC 2634 [ESS] or\n   a signingCertificateV2 attribute from RFC 5035 [ESS] is\
    \ found in an\n   S/MIME message, it SHALL be used to identify the signer's\n\
    \   certificate.  Otherwise, the certificate is identified in an S/MIME\n   message,\
    \ either using the issuerAndSerialNumber, which identifies the\n   signer's certificate\
    \ by the issuer's distinguished name and the\n   certificate serial number, or\
    \ the subjectKeyIdentifier, which\n   identifies the signer's certificate by a\
    \ key identifier.\n   When decrypting an encrypted message, if a\n   SMIMEEncryptionKeyPreference\
    \ attribute is found in an encapsulating\n   SignedData, it SHALL be used to identify\
    \ the originator's certificate\n   found in OriginatorInfo.  See [CMS] for the\
    \ CMS fields that reference\n   the originator's and recipient's certificates.\n"
- title: 4.3.  Certificate and CRL Signing Algorithms and Key Sizes
  contents:
  - "4.3.  Certificate and CRL Signing Algorithms and Key Sizes\n   Certificates and\
    \ Certificate Revocation Lists (CRLs) are signed by\n   the certificate issuer.\
    \  Receiving agents:\n    - MUST support RSA with SHA-256\n    - SHOULD+ support\
    \ DSA with SHA-256\n    - SHOULD+ support RSASSA-PSS with SHA-256\n    - SHOULD-\
    \ support RSA with SHA-1\n    - SHOULD- support DSA with SHA-1\n    - SHOULD-\
    \ support RSA with MD5\n   The following are the RSA and RSASSA-PSS key size requirements\
    \ for\n   S/MIME receiving agents during certificate and CRL signature\n   verification:\n\
    \           key size <= 1023 : MAY  (see Section 5)\n   1024 <= key size <= 4096\
    \ : MUST (see Section 5)\n   4096 <  key size         : MAY  (see Section 5)\n\
    \   The following are the DSA key size requirements for S/MIME receiving\n   agents\
    \ during certificate and CRL signature verification:\n            key size <=\
    \ 1023 : MAY  (see Section 5)\n    1024 <= key size <= 3072 : MUST (see Section\
    \ 5)\n   For 512-bit RSA with SHA-1 see [KEYMALG] and [FIPS186-2] without\n  \
    \ Change Notice 1, for 512-bit RSA with SHA-256 see [RSAOAEP] and\n   [FIPS186-2]\
    \ without Change Notice 1, for 1024-bit through 3072-bit\n   RSA with SHA-256\
    \ see [RSAOAEP] and [FIPS186-2] with Change Notice 1,\n   and for 4096-bit RSA\
    \ with SHA-256 see [RSAOAEP] and [PKCS1].  In\n   either case, the first reference\
    \ provides the signature algorithm's\n   object identifier and the second provides\
    \ the signature algorithm's\n   definition.\n   For 512-bit DSA with SHA-1 see\
    \ [KEYMALG] and [FIPS186-2] without\n   Change Notice 1, for 512-bit DSA with\
    \ SHA-256 see [KEYMALG2] and\n   [FIPS186-2] without Change Notice 1, for 1024-bit\
    \ DSA with SHA-1 see\n   [KEYMALG] and [FIPS186-2] with Change Notice 1, for 1024-bit\
    \ through\n   3072 DSA with SHA-256 see [KEYMALG2] and [FIPS186-3].  In either\n\
    \   case, the first reference provides the signature algorithm's object\n   identifier\
    \ and the second provides the signature algorithm's\n   definition.\n   For RSASSA-PSS\
    \ with SHA-256 see [RSAPSS].\n"
- title: 4.4.  PKIX Certificate Extensions
  contents:
  - "4.4.  PKIX Certificate Extensions\n   PKIX describes an extensible framework\
    \ in which the basic certificate\n   information can be extended and describes\
    \ how such extensions can be\n   used to control the process of issuing and validating\
    \ certificates.\n   The PKIX Working Group has ongoing efforts to identify and\
    \ create\n   extensions that have value in particular certification environments.\n\
    \   Further, there are active efforts underway to issue PKIX certificates\n  \
    \ for business purposes.  This document identifies the minimum required\n   set\
    \ of certificate extensions that have the greatest value in the\n   S/MIME environment.\
    \  The syntax and semantics of all the identified\n   extensions are defined in\
    \ [KEYM].\n   Sending and receiving agents MUST correctly handle the basic\n \
    \  constraints, key usage, authority key identifier, subject key\n   identifier,\
    \ and subject alternative names certificate extensions when\n   they appear in\
    \ end-entity and CA certificates.  Some mechanism SHOULD\n   exist to gracefully\
    \ handle other certificate extensions when they\n   appear in end-entity or CA\
    \ certificates.\n   Certificates issued for the S/MIME environment SHOULD NOT\
    \ contain any\n   critical extensions (extensions that have the critical field\
    \ set to\n   TRUE) other than those listed here.  These extensions SHOULD be\n\
    \   marked as non-critical unless the proper handling of the extension is\n  \
    \ deemed critical to the correct interpretation of the associated\n   certificate.\
    \  Other extensions may be included, but those extensions\n   SHOULD NOT be marked\
    \ as critical.\n   Interpretation and syntax for all extensions MUST follow [KEYM],\n\
    \   unless otherwise specified here.\n"
- title: 4.4.1.  Basic Constraints
  contents:
  - "4.4.1.  Basic Constraints\n   The basic constraints extension serves to delimit\
    \ the role and\n   position that an issuing authority or end-entity certificate\
    \ plays in\n   a certification path.\n   For example, certificates issued to CAs\
    \ and subordinate CAs contain a\n   basic constraint extension that identifies\
    \ them as issuing authority\n   certificates.  End-entity certificates contain\
    \ the key usage\n   extension that restrains end entities from using the key when\n\
    \   performing issuing authority operations (see Section 4.4.2).\n   As per [KEYM],\
    \ certificates MUST contain a basicConstraints extension\n   in CA certificates,\
    \ and SHOULD NOT contain that extension in end-\n   entity certificates.\n"
- title: 4.4.2.  Key Usage Certificate Extension
  contents:
  - "4.4.2.  Key Usage Certificate Extension\n   The key usage extension serves to\
    \ limit the technical purposes for\n   which a public key listed in a valid certificate\
    \ may be used.\n   Issuing authority certificates may contain a key usage extension\
    \ that\n   restricts the key to signing certificates, certificate revocation\n\
    \   lists, and other data.\n   For example, a certification authority may create\
    \ subordinate issuer\n   certificates that contain a key usage extension that\
    \ specifies that\n   the corresponding public key can be used to sign end user\n\
    \   certificates and sign CRLs.\n   If a key usage extension is included in a\
    \ PKIX certificate, then it\n   MUST be marked as critical.\n   S/MIME receiving\
    \ agents MUST NOT accept the signature of a message if\n   it was verified using\
    \ a certificate that contains the key usage\n   extension without either the digitalSignature\
    \ or nonRepudiation bit\n   set.  Sometimes S/MIME is used as a secure message\
    \ transport for\n   applications beyond interpersonal messaging.  In such cases,\
    \ the\n   S/MIME-enabled application can specify additional requirements\n   concerning\
    \ the digitalSignature or nonRepudiation bits within this\n   extension.\n   If\
    \ the key usage extension is not specified, receiving clients MUST\n   presume\
    \ that the digitalSignature and nonRepudiation bits are set.\n"
- title: 4.4.3.  Subject Alternative Name
  contents:
  - "4.4.3.  Subject Alternative Name\n   The subject alternative name extension is\
    \ used in S/MIME as the\n   preferred means to convey the email address(es) that\
    \ correspond(s) to\n   the entity for this certificate.  Any email addresses present\
    \ MUST be\n   encoded using the rfc822Name CHOICE of the GeneralName type as\n\
    \   described in [KEYM], Section 4.2.1.6.  Since the SubjectAltName type\n   is\
    \ a SEQUENCE OF GeneralName, multiple email addresses MAY be\n   present.\n"
- title: 4.4.4.  Extended Key Usage Extension
  contents:
  - "4.4.4.  Extended Key Usage Extension\n   The extended key usage extension also\
    \ serves to limit the technical\n   purposes for which a public key listed in\
    \ a valid certificate may be\n   used.  The set of technical purposes for the\
    \ certificate therefore\n   are the intersection of the uses indicated in the\
    \ key usage and\n   extended key usage extensions.\n   For example, if the certificate\
    \ contains a key usage extension\n   indicating digital signature and an extended\
    \ key usage extension that\n   includes the email protection OID, then the certificate\
    \ may be used\n   for signing but not encrypting S/MIME messages.  If the certificate\n\
    \   contains a key usage extension indicating digital signature but no\n   extended\
    \ key usage extension, then the certificate may also be used\n   to sign but not\
    \ encrypt S/MIME messages.\n   If the extended key usage extension is present\
    \ in the certificate,\n   then interpersonal message S/MIME receiving agents MUST\
    \ check that it\n   contains either the emailProtection or the anyExtendedKeyUsage\
    \ OID as\n   defined in [KEYM].  S/MIME uses other than interpersonal messaging\n\
    \   MAY require the explicit presence of the extended key usage extension\n  \
    \ or other OIDs to be present in the extension or both.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   All of the security issues faced by any cryptographic\
    \ application\n   must be faced by a S/MIME agent.  Among these issues are protecting\n\
    \   the user's private key, preventing various attacks, and helping the\n   user\
    \ avoid mistakes such as inadvertently encrypting a message for\n   the wrong\
    \ recipient.  The entire list of security considerations is\n   beyond the scope\
    \ of this document, but some significant concerns are\n   listed here.\n   When\
    \ processing certificates, there are many situations where the\n   processing\
    \ might fail.  Because the processing may be done by a user\n   agent, a security\
    \ gateway, or other program, there is no single way\n   to handle such failures.\
    \  Just because the methods to handle the\n   failures have not been listed, however,\
    \ the reader should not assume\n   that they are not important.  The opposite\
    \ is true: if a certificate\n   is not provably valid and associated with the\
    \ message, the processing\n   software should take immediate and noticeable steps\
    \ to inform the end\n   user about it.\n   Some of the many places where signature\
    \ and certificate checking\n   might fail include:\n   - no Internet mail addresses\
    \ in a certificate match the sender of a\n     message, if the certificate contains\
    \ at least one mail address\n   - no certificate chain leads to a trusted CA\n\
    \   - no ability to check the CRL for a certificate\n   - an invalid CRL was received\n\
    \   - the CRL being checked is expired\n   - the certificate is expired\n   -\
    \ the certificate has been revoked\n   There are certainly other instances where\
    \ a certificate may be\n   invalid, and it is the responsibility of the processing\
    \ software to\n   check them all thoroughly, and to decide what to do if the check\n\
    \   fails.\n   It is possible for there to be multiple unexpired CRLs for a CA.\
    \  If\n   an agent is consulting CRLs for certificate validation, it SHOULD\n\
    \   make sure that the most recently issued CRL for that CA is consulted,\n  \
    \ since an S/MIME message sender could deliberately include an older\n   unexpired\
    \ CRL in an S/MIME message.  This older CRL might not include\n   recently revoked\
    \ certificates, which might lead an agent to accept a\n   certificate that has\
    \ been revoked in a subsequent CRL.\n   When determining the time for a certificate\
    \ validity check, agents\n   have to be careful to use a reliable time.  Unless\
    \ it is from a\n   trusted agent, this time MUST NOT be the SigningTime attribute\
    \ found\n   in an S/MIME message.  For most sending agents, the SigningTime\n\
    \   attribute could be deliberately set to direct the receiving agent to\n   check\
    \ a CRL that could have out-of-date revocation status for a\n   certificate, or\
    \ cause an improper result when checking the Validity\n   field of a certificate.\n\
    \   In addition to the Security Considerations identified in [KEYM],\n   caution\
    \ should be taken when processing certificates that have not\n   first been validated\
    \ to a trust anchor.  Certificates could be\n   manufactured by untrusted sources\
    \ for the purpose of mounting denial\n   of service or other attacks.  For example,\
    \ keys selected to require\n   excessive cryptographic processing, or extensive\
    \ lists of CRL\n   Distribution Point (CDP) and/or Authority Information Access\
    \ (AIA)\n   addresses in the certificate, could be used to mount denial-of-\n\
    \   service attacks.  Similarly, attacker-specified CDP and/or AIA\n   addresses\
    \ could be included in fake certificates to allow the\n   originator to detect\
    \ receipt of the message even if signature\n   verification fails.\n   The 4096-bit\
    \ RSA key size requirement for certificate and CRL\n   verification is larger\
    \ than the 2048-bit RSA key sizes for message\n   signature generation/verification\
    \ or message encryption/decryption in\n   [SMIME-MSG] because many root CAs included\
    \ in certificate stores have\n   already issued root certificates with the 4096-bit\
    \ key.  The standard\n   that defines comparable key sizes for DSA is not yet\
    \ available.  In\n   particular, [FIPS186-2] without Change Notice 1 allowed DSA\
    \ key sizes\n   between 512 and 1024 bits, [FIPS186-2] with Change Notice 1 only\n\
    \   allowed DSA key sizes of 1024 bits, and [FIPS186-3] allowed DSA key\n   sizes\
    \ from 1024 to 3072 bits.  Further, 4096-bit keys are normally\n   only used by\
    \ Root certificates and not by subordinate CA\n   certificates, thereby lengthening\
    \ the root CA certificate's validity\n   period.\n   RSA and DSA keys of less\
    \ than 1024 bits are now considered by many\n   experts to be cryptographically\
    \ insecure (due to advances in\n   computing power), and should no longer be used\
    \ to sign certificates\n   or CRLs.  Such keys were previously considered secure,\
    \ so processing\n   previously received signed and encrypted mail may require\
    \ processing\n   certificates or CRLs signed with weak keys.  Implementations\
    \ that\n   wish to support previous versions of S/MIME or process old messages\n\
    \   need to consider the security risks that result from accepting\n   certificates\
    \ and CRLs with smaller key sizes (e.g., spoofed\n   certificates) versus the\
    \ costs of denial of service.  If an\n   implementation supports verification\
    \ of certificates or CRLs\n   generated with RSA and DSA keys of less than 1024\
    \ bits, it MUST warn\n   the user.  Implementers should consider providing a stronger\
    \ warning\n   for weak signatures on certificates and CRLs associated with newly\n\
    \   received messages than the one provided for certificates and CRLs\n   associated\
    \ with previously stored messages.  Server implementations\n   (e.g., secure mail\
    \ list servers) where user warnings are not\n   appropriate SHOULD reject messages\
    \ with weak cryptography.\n   If an implementation is concerned about compliance\
    \ with National\n   Institute of Standards and Technology (NIST) key size\n  \
    \ recommendations, then see [SP800-57].\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Reference Conventions
  contents:
  - "6.1.  Reference Conventions\n   [CMS] refers to [RFC5652].\n   [ESS] refers to\
    \ [RFC2634] and [RFC5035].\n   [SMIMEv2] refers to [RFC2311], [RFC2312], [RFC2313],\
    \ [RFC2314], and\n   [RFC2315].\n   [SMIMEv3] refers to [RFC2630], [RFC2631],\
    \ [RFC2632], [RFC2633],\n   [RFC2634], and [RFC5035].\n   [SMIMv3.1] refers to\
    \ [RFC2634], [RFC3850], [RFC3851], [RFC3852], and\n   [RFC5035].\n"
- title: 6.2.  Normative References
  contents:
  - "6.2.  Normative References\n   [ACAUTH]     Farrell, S., Housley, R., and S.\
    \ Turner, \"An Internet\n                Attribute Certificate Profile for Authorization\"\
    , RFC\n                5755, January 2010.\n   [RFC2634]    Hoffman, P., Ed.,\
    \ \"Enhanced Security Services for\n                S/MIME\", RFC 2634, June 1999.\n\
    \   [RFC5035]    Schaad, J., \"Enhanced Security Services (ESS) Update:\n    \
    \            Adding CertID Algorithm Agility\", RFC 5035, August 2007.\n   [RFC5652]\
    \    Housley, R., \"Cryptographic Message Syntax (CMS)\", RFC\n              \
    \  5652, September 2009.\n   [FIPS186-2]  National Institute of Standards and\
    \ Technology (NIST),\n                \"Digital Signature Standard (DSS)\", FIPS\
    \ Publication\n                186-3, January 2000. [With Change Notice 1]\n \
    \  [FIPS186-3]  National Institute of Standards and Technology (NIST),\n     \
    \           FIPS Publication 186-3: Digital Signature Standard, June\n       \
    \         2009.\n   [KEYM]       Cooper, D., Santesson, S., Farrell, S., Boeyen,\
    \ S.,\n                Housley, R., and W. Polk, \"Internet X.509 Public Key\n\
    \                Infrastructure Certificate and Certificate Revocation\n     \
    \           List (CRL) Profile\", RFC 5280, May 2008.\n   [KEYMALG]    Bassham,\
    \ L., Polk, W., and R. Housley, \"Algorithms and\n                Identifiers\
    \ for the Internet X.509 Public Key\n                Infrastructure Certificate\
    \ and Certificate Revocation\n                List (CRL) Profile\", RFC 3279,\
    \ April 2002.\n   [KEYMALG2]   Dang, Q., Santesson, S., Moriarty, K., Brown, D.,\
    \ and T.\n                Polk, \"Internet X.509 Public Key Infrastructure:\n\
    \                Additional Algorithms and Identifiers for DSA and\n         \
    \       ECDSA\", RFC 5758, January 2010.\n   [MUSTSHOULD] Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n                Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [PKCS1]      Jonsson, J. and B. Kaliski, \"Public-Key\
    \ Cryptography\n                Standards (PKCS) #1: RSA Cryptography Specifications\n\
    \                Version 2.1\", RFC 3447, February 2003.\n   [PKCS9]      Nystrom,\
    \ M. and B. Kaliski, \"PKCS #9: Selected Object\n                Classes and Attribute\
    \ Types Version 2.0\", RFC 2985,\n                November 2000.\n   [RSAPSS]\
    \     Schaad, J., \"Use of the RSASSA-PSS Signature Algorithm\n              \
    \  in Cryptographic Message Syntax (CMS)\", RFC 4056, June\n                2005.\n\
    \   [RSAOAEP]    Schaad, J., Kaliski, B., and R. Housley, \"Additional\n     \
    \           Algorithms and Identifiers for RSA Cryptography for use\n        \
    \        in the Internet X.509 Public Key Infrastructure\n                Certificate\
    \ and Certificate Revocation List (CRL)\n                Profile\", RFC 4055,\
    \ June 2005.\n   [SMIME-MSG]  Ramsdell, B. and S. Turner, \"Secure/Multipurpose\n\
    \                Internet Mail Extensions (S/MIME) Version 3.2 Message\n     \
    \           Specification\", RFC 5751, January 2010.\n   [X.680]      ITU-T Recommendation\
    \ X.680 (2002) | ISO/IEC 8824-1:2002.\n                Information Technology\
    \ - Abstract Syntax Notation One\n                (ASN.1):  Specification of basic\
    \ notation.\n"
- title: 6.3.  Informative References
  contents:
  - "6.3.  Informative References\n   [PKCS6]      RSA Laboratories, \"PKCS #6: Extended-Certificate\
    \ Syntax\n                Standard\", November 1993.\n   [SECLABEL]   Nicolls,\
    \ W., \"Implementing Company Classification Policy\n                with the S/MIME\
    \ Security Label\", RFC 3114, May 2002.\n   [RFC2311]    Dusse, S., Hoffman, P.,\
    \ Ramsdell, B., Lundblade, L., and\n                L. Repka, \"S/MIME Version\
    \ 2 Message Specification\", RFC\n                2311, March 1998.\n   [RFC2312]\
    \    Dusse, S., Hoffman, P., Ramsdell, B., and J. Weinstein,\n               \
    \ \"S/MIME Version 2 Certificate Handling\", RFC 2312, March\n               \
    \ 1998.\n   [RFC2313]    Kaliski, B., \"PKCS #1: RSA Encryption Version 1.5\"\
    , RFC\n                2313, March 1998.\n   [RFC2314]    Kaliski, B., \"PKCS\
    \ #10: Certification Request Syntax\n                Version 1.5\", RFC 2314,\
    \ March 1998.\n   [RFC2315]    Kaliski, B., \"PKCS #7: Cryptographic Message Syntax\n\
    \                Version 1.5\", RFC 2315, March 1998.\n   [RFC2630]    Housley,\
    \ R., \"Cryptographic Message Syntax\", RFC 2630,\n                June 1999.\n\
    \   [RFC2631]    Rescorla, E., \"Diffie-Hellman Key Agreement Method\", RFC\n\
    \                2631, June 1999.\n   [RFC2632]    Ramsdell, B., Ed., \"S/MIME\
    \ Version 3 Certificate\n                Handling\", RFC 2632, June 1999.\n  \
    \ [RFC2633]    Ramsdell, B., Ed., \"S/MIME Version 3 Message\n               \
    \ Specification\", RFC 2633, June 1999.\n   [RFC3850]    Ramsdell, B., Ed., \"\
    Secure/Multipurpose Internet Mail\n                Extensions (S/MIME) Version\
    \ 3.1 Certificate Handling\",\n                RFC 3850, July 2004.\n   [RFC3851]\
    \    Ramsdell, B., Ed., \"Secure/Multipurpose Internet Mail\n                Extensions\
    \ (S/MIME) Version 3.1 Message Specification\",\n                RFC 3851, July\
    \ 2004.\n   [RFC3852]    Housley, R., \"Cryptographic Message Syntax (CMS)\",\
    \ RFC\n                3852, July 2004.\n   [SP800-57]   National Institute of\
    \ Standards and Technology (NIST),\n                Special Publication 800-57:\
    \ Recommendation for Key\n                Management, August 2005.\n   [X.500]\
    \      ITU-T Recommendation X.500 (1997) | ISO/IEC 9594-\n                1:1997,\
    \ Information technology - Open Systems\n                Interconnection - The\
    \ Directory:  Overview of concepts,\n                models and services.\n"
- title: Appendix A.  Moving S/MIME v2 Certificate Handling to Historic Status
  contents:
  - "Appendix A.  Moving S/MIME v2 Certificate Handling to Historic Status\n   The\
    \ S/MIME v3 [SMIMEv3], v3.1 [SMIMEv3.1], and v3.2 (this document)\n   are backwards\
    \ compatible with the S/MIME v2 Certificate Handling\n   Specification [SMIMEv2],\
    \ with the exception of the algorithms\n   (dropped RC2/40 requirement and added\
    \ DSA and RSASSA-PSS\n   requirements).  Therefore, it is recommended that RFC\
    \ 2312 [SMIMEv2]\n   be moved to Historic status.\n"
- title: Appendix B.  Acknowledgments
  contents:
  - "Appendix B.  Acknowledgments\n   Many thanks go out to the other authors of the\
    \ S/MIME v2 RFC: Steve\n   Dusse, Paul Hoffman, and Jeff Weinstein.  Without v2,\
    \ there wouldn't\n   be a v3, v3.1, or v3.2.\n   A number of the members of the\
    \ S/MIME Working Group have also worked\n   very hard and contributed to this\
    \ document.  Any list of people is\n   doomed to omission, and for that I apologize.\
    \  In alphabetical order,\n   the following people stand out in my mind because\
    \ they made direct\n   contributions to this document.\n   Bill Flanigan, Trevor\
    \ Freeman, Elliott Ginsburg, Alfred Hoenes, Paul\n   Hoffman, Russ Housley, David\
    \ P. Kemp, Michael Myers, John Pawling,\n   Denis Pinkas, and Jim Schaad.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Blake Ramsdell\n   Brute Squad Labs, Inc.\n   EMail: blaker@gmail.com\n\
    \   Sean Turner\n   IECA, Inc.\n   3057 Nutley Street, Suite 106\n   Fairfax,\
    \ VA 22031\n   USA\n   EMail: turners@ieca.com\n"
