- contents:
  - '                           DHCP for IEEE 1394

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   IEEE Std 1394-1995 is a standard for a High Performance Serial Bus.\n
    \  Since 1394 uses a different link-layer addressing method than\n   conventional
    IEEE802/Ethernet, the usage of some fields must be\n   clarified to achieve interoperability.
    \ This memo describes the 1394\n   specific usage of some fields of DHCP messages.\n"
  title: Abstract
- contents:
  - "1. Introduction\n   IEEE Std 1394-1995 is a standard for a High Performance Serial
    Bus.\n   IETF IP1394 Working Group specified the method to carry IPv4\n   datagrams
    and 1394 ARP packets over an IEEE1394 network [RFC2734].\n   The Dynamic Host
    Configuration Protocol (DHCP) [RFC2131] provides a\n   framework for passing configuration
    information to hosts on a TCP/IP\n   network.\n   Since 1394 uses a different
    link-layer addressing method than\n   conventional IEEE802/Ethernet, the usage
    of some fields must be\n   clarified to achieve interoperability.  This memo describes
    the 1394\n   specific usage of some fields of DHCP.  See [RFC2131] for the\n   mechanism
    of DHCP and the explanations of each field.\n   The key words \"MUST\", \"MUST
    NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
    \"RECOMMENDED\",  \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
    as described in RFC 2119 [RFC2119].\n"
  title: 1. Introduction
- contents:
  - "2. Issues related to 1394 link address\n   With conventional link-layer protocols,
    such as an Ethernet, the\n   'chaddr' (client hardware address) field may be used
    to return a\n   reply message from a DHCP server (or relay-agent) to a client.
    \ Since\n   a 1394 link address (node_ID) is transient and will not be consistent\n
    \  across the 1394 bridge, we have chosen not to put it in the 'chaddr'\n   field.
    \ A DHCP client should request that the server sends a\n   broadcast reply by
    setting the BROADCAST flag when 1394 ARP is not\n   possible yet.\n      Note:
    In general, the use of a broadcast reply is discouraged, but\n      we consider
    the impact in a 1394 network as a non issue.\n"
  title: 2. Issues related to 1394 link address
- contents:
  - "3. 1394 specific usage of DHCP message fields\n   Following rules should be used
    when a DHCP client is connected to an\n   IEEE1394 network.\n   'htype' (hardware
    address type) MUST be 24 [ARPPARAM].\n   'hlen' (hardware address length) MUST
    be 0.\n   The 'chaddr' (client hardware address) field is reserved.  The sender\n
    \  MUST set this field to zero, and the recipient and the relay agent\n   MUST
    ignore its value on receipt.\n   A DHCP client on 1394 SHOULD set a BROADCAST
    flag in DHCPDISCOVER and\n   DHCPREQUEST messages (and set 'ciaddr' to zero) to
    ensure that the\n   server (or the relay agent) broadcasts its reply to the client.\n
    \     Note: As described in [RFC2131], 'ciaddr' MUST be filled in with\n      client's
    IP address during BOUND, RENEWING or REBINDING state,\n      therefore, the BROADCAST
    flag MUST NOT be set.  In these cases,\n      the DHCP server unicasts DHCPACK
    message to the address in\n      'ciaddr'. The link address will be resolved by
    1394 ARP.\n   'client identifier' option MUST be used in DHCP messages from the\n
    \  client to the server due to the lack of the 'chaddr'.  'client\n   identifier'
    option may consist of any data.  Because every IP over\n   1394 node has an EUI-64
    (node unique ID), the EUI-64 makes an obvious\n   'client identifier'.  1394 clients
    SHOULD include an EUI-64\n   identifier in the 'client identifier' option. The
    type value for the\n   EUI-64 is 27 [ARPPARAM], and the format is illustrated
    as follows.\n    Code  Len   Type  Client-Identifier\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n
    \  |  61 |  9  | 27  |           EUI-64 (node unique ID)             |\n   +-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+\n
    \  Note that the use of other 'client identifier' type, such as a fully\n   qualified
    domain name (FQDN), is not precluded by this memo.\n   For more details, see \"9.14.
    Client-identifier\" in [RFC2132].\n"
  title: 3. 1394 specific usage of DHCP message fields
- contents:
  - "4. Security Considerations\n   DHCP currently provides no authentication or security
    mechanisms.\n   Potential exposures to attack are discussed in section 7 of the
    DHCP\n   protocol specification [RFC2131].\n   A malicious client can falsify
    its EUI-64 identifier, thus\n   masquerading as another client.\n"
  title: 4. Security Considerations
- contents:
  - "Acknowledgments\n   The author appreciates the members of the Dynamic Host Configuration\n
    \  Working Group for their review and valuable comments.\n"
  title: Acknowledgments
- contents:
  - "References\n   [RFC2734]  Johansson, P., \"IPv4 over IEEE 1394\", RFC 2734, December\n
    \             1999.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to
    Indicate\n              Requirement Levels\", RFC 2119, March 1997.\n   [RFC2131]
    \ Droms, R., \"Dynamic Host Configuration Protocol\", RFC\n              2131,
    March 1997.\n   [RFC2132]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP
    Vendor\n              Extensions\", RFC 2132, March 1997.\n   [ARPPARAM] http://www.iana.org/numbers.html\n"
  title: References
- contents:
  - "Author's Address\n   Kenji Fujisawa\n   Sony Corporation\n   6-7-35, Kitashinagawa,\n
    \  Shinagawa-ku, Tokyo, 141-0001 Japan\n   Phone: +81-3-5448-8507\n   EMail: fujisawa@sm.sony.co.jp\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All
    Rights Reserved.\n   This document and translations of it may be copied and furnished
    to\n   others, and derivative works that comment on or otherwise explain it\n
    \  or assist in its implementation may be prepared, copied, published\n   and
    distributed, in whole or in part, without restriction of any\n   kind, provided
    that the above copyright notice and this paragraph are\n   included on all such
    copies and derivative works.  However, this\n   document itself may not be modified
    in any way, such as by removing\n   the copyright notice or references to the
    Internet Society or other\n   Internet organizations, except as needed for the
    purpose of\n   developing Internet standards in which case the procedures for\n
    \  copyrights defined in the Internet Standards process must be\n   followed,
    or as required to translate it into languages other than\n   English.\n   The
    limited permissions granted above are perpetual and will not be\n   revoked by
    the Internet Society or its successors or assigns.\n   This document and the information
    contained herein is provided on an\n   \"AS IS\" basis and THE INTERNET SOCIETY
    AND THE INTERNET ENGINEERING\n   TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS
    OR IMPLIED, INCLUDING\n   BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE
    INFORMATION\n   HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES
    OF\n   MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
