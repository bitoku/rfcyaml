- title: __initial_text__
  contents:
  - '             Version 2 of the Reliable Data Protocol (RDP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC suggests several updates to the specification\
    \ of the\n   Reliable Data Protocol (RDP) in RFC-908 based on experience with\
    \ the\n   protocol.  This revised version of the protocol is experimental.\n \
    \  Distribution of this memo is unlimited.\n"
- title: Introduction
  contents:
  - "Introduction\n   Experiments in 1986 and 1987 turned up some ambiguities and\
    \ problems\n   with the RDP specification.  At the time, it was hoped that the\n\
    \   authors might find the time to revise the entire RDP specification to\n  \
    \ fix these problems, however given the limited demand for RDP\n   implementations,\
    \ the authors were never able to justify the time\n   involved in revising the\
    \ spec.  This document lists the changes that\n   we believe are appropriate to\
    \ make to RDP version 1.\n   Readers are expected to be familiar with RFC-908.\n"
- title: Changes To The Protocol Header
  contents:
  - "Changes To The Protocol Header\n   There are three changes to the protocol header:\
    \ the checksum\n   algorithm has been changed, the port size increased, and the\
    \ version\n   number incremented.  The new header format is shown in Figure 1.\n\
    \   The major discovery during the testing of the protocol is that cost\n   of\
    \ computing the the RDP checksum proved surprisingly variable; its\n   performance\
    \ was more heavily affected by the host's data\n   representation than anticipated.\
    \  Optimized checksum implementations\n   on two comparable hardware bases gave\
    \ performance that differed by a\n   factor of five.  Since the speed of the checksum\
    \ is a key factor in\n   the performance of the protocol itself, this variation\
    \ caused a\n   noticeable difference in throughput.\n   The wide variation in\
    \ performance on comparable machines was felt to\n   be undesirable, so the checksum\
    \ has been changed.  RDP now uses the\n   16-bit TCP checksum, which is specified\
    \ on page 16 of RFC-793.\n   The 8-bit port size is probably too small to support\
    \ a large range of\n   applications.  Accordingly, the port size is now 16-bits.\
    \  Port\n   numbers less than 1024 are reserved for well-defined applications.\n\
    \   Allocable ports begin at port number 1024.\n   Finally, because the checksum\
    \ and port size have been changed, the\n   version number has been increased to\
    \ 2.\n                   0             0 0   1         1\n                   0\
    \ 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n                  +-+-+-+-+-+-+---+---------------+\n\
    \                  |S|A|E|R|N| |Ver|    Header     |\n                0 |Y|C|A|S|U|0|No.|\
    \    Length     |\n                  |N|K|K|T|L| |   |               |\n     \
    \             +-+-+-+-+-+-+---+---------------+\n                1 |         Source\
    \ Port           |\n                  +---------------+---------------+\n    \
    \            2 |       Destination Port        |\n                  +---------------+---------------+\n\
    \                3 |          Data  Length         |\n                  +---------------+---------------+\n\
    \                4 |                               |\n                  +--- \
    \   Sequence Number      ---+\n                5 |                           \
    \    |\n                  +---------------+---------------+\n                6\
    \ |                               |\n                  +--- Acknowledgement Number\
    \  ---+\n                7 |                               |\n               \
    \   +---------------+---------------+\n                8 |           Checksum\
    \            |\n                  +---------------+---------------+\n        \
    \        9 |     Variable Header Area      |\n                  .            \
    \                   .\n                  .                               .\n \
    \                 |                               |\n                  +---------------+---------------+\n\
    \                         RDP Header Format\n                             Figure\
    \ 1\n"
- title: Minor Errors and Ambiguities
  contents:
  - "Minor Errors and Ambiguities\n   Some ambiguities and minor errors have been\
    \ found in RFC-908.  They\n   are corrected in this section.\n   The value of\
    \ the state variable, SND.UNA is treated inconsistently in\n   the pseudo-code\
    \ on pages 21-29.  On page 12, SND.UNA is defined as\n   \"the sequence number\
    \ of the oldest unacknowledged segment\", and on\n   page 21 it is appropriately\
    \ set to the initial sequence number when\n   the connection is opened.  But on\
    \ page 28, when an acknowledgement is\n   received, SND.UNA is set to SEG.ACK,\
    \ the sequence number being\n   acknowledged, instead of SEG.ACK+1.  A similar\
    \ inconsistency occurs\n   on page 26.  The proper fix is to always set SND.UNA\
    \ to SEG.ACK+1.\n   The pseudo-code on page 25 for the SYN-SENT state is incorrect.\
    \  The\n   first few lines cause all packets with the ACK bit set to be\n   discarded,\
    \ but later lines test the ACK bit.  The test for the ACK\n   bit should be placed\
    \ after all the other tests.  Also note that if\n   the ACK bit is set, a RST\
    \ segment is sent to reset the remote peer,\n   but the local peer is left half-open.\
    \  There is a similar problem in\n   the SYN-RCVD state.  The local peer should\
    \ deallocate the connection\n   record and close.\n   On page 24, the pseudo-code\
    \ indicates that if non-data packets are\n   received in the CLOSED state, a RST\
    \ segment with SEG.ACK set to\n   RCV.CUR should be sent.  RCV.CUR is not defined\
    \ in the CLOSED state.\n   SEG.ACK should be set to SEG.SEG.\n   There is some\
    \ inconsistency about how to handle a RST packet in the\n   CLOSE-WAIT state.\
    \  On page 24, the pseudo-code shows that a RST\n   should cause the connection\
    \ state to become CLOSED.  Text on page 13\n   and the state diagram on page 10\
    \ suggest the connection state should\n   stay in CLOSE-WAIT.  The implementation\
    \ should stay in CLOSE-WAIT.\n   On page 29, the pseudo-code for the OPEN state\
    \ suggests that if a\n   data packet is received in sequence, the acknowledgement\
    \ packet\n   should not contain EACKs.  This is misleading.  Implementations may\n\
    \   include EACKs in the acknowledgement.\n   On page 18, it is possible to interpret\
    \ the right edge as being\n   either inside or outside the window.  This results\
    \ in a one segment\n   difference in the window size.  The proper interpretation\
    \ is that the\n   right edge is outside the window.  In other words, the right\
    \ edge is\n   the first sequence number that cannot be sent or received and the\n\
    \   total window size is 2*X, where X is the maximum number of\n   outstanding\
    \ segments.\n   One final problem is that RDP's flow control scheme does not allow\n\
    \   the receiver to close the sender's window.  As a result, if the\n   receiver\
    \ acknowledges segments when they are received the sender can\n   easily send\
    \ more data than the receiver is prepared to buffer.  A\n   solution to this problem\
    \ (suggested by members of the End-2-End\n   Research Group) is to only acknowledge\
    \ a segment after it has been\n   delivered to the application.  This scheme,\
    \ however, has not be\n   tested.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not addressed in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Craig Partridge\n   Bolt Beranek and Newman Inc.\n   50\
    \ Moulton Street\n   Cambridge, MA 02138\n   Phone: (617) 873-2459\n   EMail:\
    \ craig@BBN.COM\n   Robert Hinden\n   Bolt Beranek and Newman Inc.\n   50 Moulton\
    \ Street\n   Cambridge, MA 02238\n   Phone: (617) 873-3757\n   Email: HINDEN@BBN.COM\n"
