- title: __initial_text__
  contents:
  - "                      Electronic Signature Formats\n                  for long\
    \ term electronic signatures\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document defines the format of an electronic signature that\
    \ can\n   remain valid over long periods.  This includes evidence as to its\n\
    \   validity even if the signer or verifying party later attempts to deny\n  \
    \ (i.e., repudiates the validity of the signature).\n   The format can be considered\
    \ as an extension to RFC 2630 and RFC\n   2634, where, when appropriate additional\
    \ signed and unsigned\n   attributes have been defined.\n   The contents of this\
    \ Informational RFC is technically equivalent to\n   ETSI TS 101 733 V.1.2.2.\
    \ The ETSI TS is under the ETSI Copyright (C).\n   Individual copies of this ETSI\
    \ deliverable can be downloaded from\n   http://www.etsi.org\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction                                      \
    \              4\n   2  Overview                                             \
    \            5\n   2.1  Aim                                                  \
    \          5\n   2.2  Basis of Present Document                              \
    \        5\n   2.3  Major Parties                                            \
    \      6\n   2.4  Electronic Signatures and Validation Data                  \
    \    7\n   2.5  Forms of Validation Data                                     \
    \  8\n   2.6  Extended Forms of Validation Data                             11\n\
    \   2.7  Archive Validation Data                                       13\n  \
    \ 2.8  Arbitration                                                   15\n   2.9\
    \  Validation Process                                            15\n   2.10 \
    \ Example Validation Sequence                                  16\n   2.11  Additional\
    \ optional features                                 21\n   3. Data structure of\
    \ an Electronic Signature                       22\n   3.1  General Syntax   \
    \                                             22\n   3.2  Data Content Type  \
    \                                           22\n   3.3  Signed-data Content Type\
    \                                      22\n   3.4  SignedData Type           \
    \                                    22\n   3.5  EncapsulatedContentInfo Type\
    \                                  23\n   3.6  SignerInfo Type               \
    \                                23\n   3.6.1  Message Digest Calculation Process\
    \                          23\n   3.6.2  Message Signature Generation Process\
    \                        24\n   3.6.3  Message Signature Verification Process\
    \                      24\n   3.7  CMS Imported Mandatory Present Attributes \
    \                    24\n   3.7.1  Content Type                              \
    \                  24\n   3.7.2  Message Digest                              \
    \                24\n   3.7.3  Signing Time                                  \
    \              24\n   3.8  Alternative Signing Certificate Attributes        \
    \            24\n   3.8.1  ESS Signing Certificate Attribute Definition      \
    \          25\n   3.8.2  Other Signing Certificate Attribute Definition      \
    \        25\n   3.9  Additional Mandatory Attributes                         \
    \      26\n   3.9.1  Signature policy Identifier                             \
    \    26\n   3.10  CMS Imported Optional Attributes                           \
    \  28\n   3.10.1  Countersignature                                           29\n\
    \   3.11  ESS Imported Optional Attributes                             29\n  \
    \ 3.11.1  Content Reference Attribute                                29\n   3.11.2\
    \  Content Identifier Attribute                               29\n   3.11.3  Content\
    \ Hints Attribute                                    29\n   3.12   Additional\
    \ Optional Attributes                              30\n   3.12.1  Commitment Type\
    \ Indication Attribute                       30\n   3.12.2  Signer Location attribute\
    \                                  32\n   3.12.3  Signer Attributes attribute\
    \                                33\n   3.12.4  Content Time-Stamp attribute \
    \                              34\n   3.13  Support for Multiple Signatures  \
    \                            34\n   3.13.1  Independent Signatures           \
    \                          34\n   3.13.2  Embedded Signatures                \
    \                        34\n   4.  Validation Data                          \
    \                      35\n   4.1  Electronic Signature Time-Stamp           \
    \                    36\n   4.1.1  Signature Time-Stamp Attribute Definition \
    \                  36\n   4.2  Complete Validation Data                      \
    \                37\n   4.2.1  Complete Certificate Refs Attribute Definition\
    \              38\n   4.2.2  Complete Revocation Refs Attribute Definition   \
    \            38\n   4.3  Extended Validation Data                            \
    \          40\n   4.3.1  Certificate Values Attribute Definition             \
    \        40\n   4.3.2  Revocation Values Attribute Definition                \
    \      41\n   4.3.3  ES-C Time-Stamp Attribute Definition                    \
    \    42\n   4.3.4  Time-Stamped Certificates and CRLs Attribute Definition   \
    \  42\n   4.4  Archive Validation Data                                       43\n\
    \   4.4.1  Archive Time-Stamp Attribute Definition                     43\n  \
    \ 5.  Security Considerations                                        44\n   5.1\
    \  Protection of Private Key                                     44\n   5.2  Choice\
    \ of Algorithms                                          44\n   6.  Conformance\
    \ Requirements                                       45\n   6.1  Signer      \
    \                                                  45\n   6.2  Verifier using\
    \ time-stamping                                  46\n   6.3  Verifier using secure\
    \ records                                 46\n   7. References               \
    \                                       47\n   8. Authors' Addresses         \
    \                                     48\n   Annex A (normative): ASN.1 Definitions\
    \                             49\n   A.1  Definitions Using X.208 (1988) ASN.1\
    \ Syntax                   49\n   A.2  Definitions Using X.680 1997 ASN.1 Syntax\
    \                     57\n   Annex B (informative): General Description      \
    \                   66\n   B.1  The Signature Policy                         \
    \                 66\n   B.2  Signed Information                             \
    \               67\n   B.3  Components of an Electronic Signature            \
    \             68\n   B.3.1  Reference to the Signature Policy                \
    \           68\n   B.3.2  Commitment Type Indication                         \
    \         69\n   B.3.3  Certificate Identifier from the Signer               \
    \       69\n   B.3.4.  Role Attributes                                       \
    \     70\n   B.3.4.1  Claimed Role                                           \
    \   71\n   B.3.4.2  Certified Role                                           \
    \ 71\n   B.3.5  Signer Location                                             72\n\
    \   B.3.6  Signing Time                                                72\n  \
    \ B.3.7  Content Format                                              73\n   B.4\
    \  Components of Validation Data                                 73\n   B.4.1\
    \  Revocation Status Information                               73\n   B.4.2  CRL\
    \ Information                                             74\n   B.4.3  OCSP Information\
    \                                            74\n   B.4.4  Certification Path\
    \                                          75\n   B.4.5  Time-Stamping for Long\
    \ Life of Signature                    76\n   B.4.6  Time-Stamping before CA Key\
    \ Compromises                     77\n   B.4.6.1  Time-Stamping the ES with Complete\
    \ validation data        77\n   B.4.6.2  Time-Stamping Certificates and Revocation\
    \ Information     78\n   B.4.7  Time-Stamping for Long Life of Signature     \
    \               79\n   B.4.8  Reference to Additional Data                   \
    \             80\n   B.4.9  Time-Stamping for Mutual Recognition             \
    \           80\n   B.4.10  TSA Key Compromise                                \
    \         81\n   B.5  Multiple Signatures                                    \
    \       81\n   Annex C (informative):  Identifiers and roles                 \
    \     82\n   C.1  Signer Name Forms                                          \
    \   82\n   C.2  TSP Name Forms                                               \
    \ 82\n   C.3  Roles and Signer Attributes                                   83\n\
    \   Full Copyright Statement                                           84\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document is intended to cover electronic signatures\
    \ for various\n   types of transactions, including business transactions (e.g.,\n\
    \   purchase requisition, contract, and invoice applications) where long\n   term\
    \ validity of such signatures is important.  This includes\n   evidence as to\
    \ its validity even if the signer or verifying party\n   later attempts to deny\
    \ (i.e., repudiates, see [ISONR]) the validity\n   of the signature).\n   Electronic\
    \ signatures can be used for any transaction between an\n   individual and a company,\
    \ between two companies, between an\n   individual and a governmental body, etc.\
    \  This document is\n   independent of any environment.  It can be applied to\
    \ any environment\n   e.g., smart cards, GSM SIM cards, special programs for electronic\n\
    \   signatures etc.\n   An electronic signature produced in accordance with this\
    \ document\n   provides evidence that can be processed to get confidence that\
    \ some\n   commitment has been explicitly endorsed under a signature policy, at\n\
    \   a given time, by a signer under an identifier, e.g., a name or a\n   pseudonym,\
    \ and optionally a role.\n   The European Directive on a community framework for\
    \ Electronic\n   Signatures defines an electronic signature as: \"data in electronic\n\
    \   form which is attached to or logically associated with other\n   electronic\
    \ data and which serves as a method of authentication\".  An\n   electronic signature\
    \ as used in the current document is a form of\n   advanced electronic signature\
    \ as defined in the Directive.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHOULD\", \"SHOULD NOT\",\n   \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in\
    \ this document (in uppercase,\n   as shown) are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2  Overview
  contents:
  - '2  Overview

    '
- title: 2.1  Aim
  contents:
  - "2.1  Aim\n   The aim of this document is to define an Electronic Signature (ES)\n\
    \   that remains valid over long periods.  This includes evidence as to\n   its\
    \ validity even if the signer or verifying party later attempts to\n   deny (repudiates)\
    \ the validity of the signature.\n   This document specifies the use of trusted\
    \ service providers (e.g.,\n   Time-Stamping Authorities (TSA)), and the data\
    \ that needs to be\n   archived (e.g., cross certificates and revocation lists)\
    \ to meet the\n   requirements of long term electronic signatures.  An electronic\n\
    \   signature defined by this document can be used for arbitration in\n   case\
    \ of a dispute between the signer and verifier, which may occur at\n   some later\
    \ time, even years later.  This document uses a signature\n   policy, referenced\
    \ by the signer, as the basis for establishing the\n   validity of an electronic\
    \ signature.\n"
- title: 2.2  Basis of Present Document
  contents:
  - "2.2  Basis of Present Document\n   This document is based on the use of public\
    \ key cryptography to\n   produce digital signatures, supported by public key\
    \ certificates.\n   A Public key certificate is a public keys of a user, together\
    \ with\n   some other information, rendered unforgeable by encipherment with the\n\
    \   private key of the Certification Authority (CA) which issued it\n   (ITU-T\
    \ Recommendation X.509 [1]).\n   This document also specifies the uses of time-stamping\
    \ services to\n   prove the validity of a signature long after the normal lifetime\
    \ of\n   critical elements of an electronic signature and to support non-\n  \
    \ repudiation.  It also, as an option, defines the use of additional\n   time-stamps\
    \ to provide very long-term protection against key\n   compromise or weakened\
    \ algorithms.\n   This document builds on existing standards that are widely adopted.\n\
    \   This includes:\n      *  RFC 2459 [RFC2459] Internet X.509 Public Key Infrastructure\n\
    \         Certificate and CRL Profile (PKIX);\n      *  RFC 2630 [CMS] Crytographic\
    \ Message Syntax (CMS);\n      *  RFC 2634 [ESS] Enhanced Security Services (ESS);\n\
    \      *  RFC 2439 [OCSP] One-line Certificate Status Protocol (OCSP);\n     \
    \ *  ITU-T Recommendation X.509 [1] Authentication framework;\n      *  RFC (to\
    \ be published) [TSP] PKIX Time Stamping protocol (TSP).\n   NOTE:  See clause\
    \ 8 for a full set of references.\n"
- title: 2.3  Major Parties
  contents:
  - "2.3  Major Parties\n   The following are the major parties involved in a business\n\
    \   transaction supported by electronic signatures as defined in this\n   document:\n\
    \      *  the Signer;\n      *  the Verifier;\n      *  the Arbitrator;\n    \
    \  *  Trusted Service Providers (TSP).\n   A Signer is an entity that initially\
    \ creates the electronic\n   signature. When the signer digitally signs over data\
    \ using the\n   prescribed format, this represents a commitment on behalf of the\n\
    \   signing entity to the data being signed.\n   A verifier is an entity that\
    \ verifies an evidence.  (ISO/IEC 13888-1\n   [13]).  Within the context of this\
    \ document this is an entity that\n   validates an electronic signature.\n   An\
    \ arbitrator, is an entity which arbitrates disputes between a\n   signer and\
    \ a verifier when there is a disagreement on the validity of\n   a digital signature.\n\
    \   Trusted Service Providers (TSPs) are one or more entities that help\n   to\
    \ build trust relationships between the signer and verifier.  Use of\n   some\
    \ specific TSP services MAY be mandated by signature policy.  TSP\n   supporting\
    \ services may provide the following information: user\n   certificates, cross-certificates,\
    \ time-stamping tokens, CRLs, ARLs,\n   OCSP responses.\n   The following TSPs\
    \ are used to support the validation or the\n   verification of electronic signatures:\n\
    \      *  Certification Authorities;\n      *  Registration Authorities;\n   \
    \   *  Repository Authorities (e.g., a Directory);\n      *  Time-Stamping Authorities;\n\
    \      *  One-line Certificate Status Protocol responders;\n      *  Attribute\
    \ Authorities;\n      *  Signature Policy Issuers.\n   Certification Authorities\
    \ provide users with public key certificates.\n   Registration Authorities allows\
    \ the registration of entities before a\n   CA generates certificates.\n   Repository\
    \ Authorities publish CRLs issued by CAs, cross-certificates\n   (i.e., CA certificates)\
    \ issued by CAs, signature policies issued by\n   Signature Policy Issuers and\
    \ optionally public key certificates\n   (i.e., leaf certificates) issued by CAs.\n\
    \   Time-Stamping Authorities attest that some data was formed before a\n   given\
    \ trusted time.\n   One-line Certificate Status Protocol responders (OSCP responders)\n\
    \   provide information about the status (i.e., revoked, not revoked,\n   unknown)\
    \ of a particular certificate.\n   A Signature Policy Issuer issues signatures\
    \ policies that define the\n   technical and procedural requirements for electronic\
    \ signature\n   creation, validation and verification, in order to meet a particular\n\
    \   business need.\n   Attributes Authorities provide users with attributes linked\
    \ to public\n   key certificates\n"
- title: 2.4  Electronic Signatures and Validation Data
  contents:
  - "2.4  Electronic Signatures and Validation Data\n   Validation of an electronic\
    \ signature in accordance with this\n   document requires:\n      *  The electronic\
    \ signature; this includes:\n         -  the signature policy;\n         -  the\
    \ signed user data;\n         -  the digital signature;\n         -  other signed\
    \ attributes provided by the signer;\n         -  other unsigned attributes provided\
    \ by the signer.\n   Validation data which is the additional data needed to validate\
    \ the\n   electronic signature; this includes:\n         -  certificates references;\n\
    \         -  certificates;\n         -  revocation status information references;\n\
    \         -  revocation status information;\n         -  time-stamps from Time\
    \ Stamping Authorities (TSAs).\n      *  The signature policy specifies the technical\
    \ requirements on\n         signature creation and validation in order to meet\
    \ a particular\n         business need.  A given legal/contractual context may\
    \ recognize\n         a particular signature policy as meeting its requirements.\n\
    \   For example: a specific signature policy may be recognized by court\n   of\
    \ law as meeting the requirements of the European Directive for\n   electronic\
    \ commerce.  A signature policy may be written using a\n   formal notation like\
    \ ASN.1 or in an informal free text form provided\n   the rules of the policy\
    \ are clearly identified.  However, for a given\n   signature policy there shall\
    \ be one definitive form which has a\n   unique binary encoded value.\n   Signed\
    \ user data is the user's data that is signed.\n   The Digital Signature is the\
    \ digital signature applied over the\n   following attributes provided by the\
    \ signer:\n      *  hash of the user data (message digest);\n      *  signature\
    \ Policy Identifier;\n      *  other signed attributes\n   The other signed attributes\
    \ include any additional information which\n   must be signed to conform to the\
    \ signature policy or this document\n   (e.g., signing time).\n   According to\
    \ the requirements of a specific signature policy in use,\n   various Validation\
    \ Data shall be collected and attached to or\n   associated with the signature\
    \ structure by the signer and/or the\n   verifier.  The validation data includes\
    \ CA certificates as well as\n   revocation status information in the form of\
    \ certificate revocation\n   lists (CRLs) or certificate status information provided\
    \ by an on-line\n   service.  Additional data also includes time-stamps and other\
    \ time\n   related data used to provide evidence of the timing of given events.\n\
    \   It is required, as a minimum, that either the signer or verifier\n   obtains\
    \ a time-stamp over the signer's signature or a secure time\n   record of the\
    \ electronic signature must be maintained.  Such secure\n   records must not be\
    \ undetectably modified and must record the time\n   close to when the signature\
    \ was first validated.\n"
- title: 2.5  Forms of Validation Data
  contents:
  - "2.5  Forms of Validation Data\n   An electronic signature may exist in many forms\
    \ including:\n      *  the Electronic Signature (ES), which includes the digital\n\
    \         signature and other basic information provided by the signer;\n    \
    \  *  the ES with Time-Stamp (ES-T), which adds a time-stamp to the\n        \
    \ Electronic Signature, to take initial steps towards providing\n         long\
    \ term validity;\n      *  the ES with Complete validation data (ES-C), which\
    \ adds to the\n         ES-T references to the complete set of data supporting\
    \ the\n         validity of the electronic signature (i.e., revocation status\n\
    \         information).\n   The signer must provide at least the ES form, but\
    \ in some cases may\n   decide to provide the ES-T form and in the extreme case\
    \ could provide\n   the ES-C form.  If the signer does not provide ES-T, the verifier\n\
    \   must either create the ES-T on first receipt of an electronic\n   signature\
    \ or shall keep a secure time record of the ES.  Either of\n   these two approaches\
    \ provide independent evidence of the existence of\n   the signature at the time\
    \ it was first verified which should be near\n   the time it was created, and\
    \ so protects against later repudiation of\n   the existence of the signature.\
    \  If the signer does not provide ES-C\n   the verifier must create the ES-C when\
    \ the complete set of revocation\n   and other validation data is available.\n\
    \   The ES satisfies the legal requirements for electronic signatures as\n   defined\
    \ in the European Directive on electronic signatures, see Annex\n   C for further\
    \ discussion on relationship of this document to the\n   Directive.  It provides\
    \ basic authentication and integrity protection\n   and can be created without\
    \ accessing on-line (time-stamping)\n   services. However, without the addition\
    \ of a time-stamp or a secure\n   time record the electronic signature does not\
    \ protect against the\n   threat that the signer later denies having created the\
    \ electronic\n   signature (i.e., does not provide non-repudiation of its existence).\n\
    \   The ES-T time-stamp or time record should be created close to the\n   time\
    \ that ES was created to provide protection against repudiation.\n   At this time\
    \ all the data needed to complete the validation may not\n   be available but\
    \ what information is readily available may be used to\n   carry out some of the\
    \ initial checks.  For example, only part of the\n   revocation information may\
    \ be available for verification at that\n   point in time.  Generally, the ES-C\
    \ form cannot be created at the\n   same time as the ES, as it is necessary to\
    \ allow time for any\n   revocation information to be captured.  Also, if a certificate\
    \ is\n   found to be temporarily suspended, it will be necessary to wait until\n\
    \   the end of the suspension period.\n   The signer should only create the ES-C\
    \ in situations where it was\n   prepared to wait for a sufficient length of time\
    \ after creating the\n   ES form before dispatching the ES-C.  This, however,\
    \ has the\n   advantage that the verifier can be presented with the complete set\
    \ of\n   data supporting the validity of the ES.\n   Support for ES-C by the verifier\
    \ is mandated (see clause 6 for\n   specific conformance requirements).\n   An\
    \ Electronic Signature (ES), with the additional validation data\n   forming the\
    \ ES-T and ES-C is illustrated in Figure 1:\n"
- title: +------------------------------------------------------------ES-C-----+
  contents:
  - '+------------------------------------------------------------ES-C-----+

    '
- title: '|+--------------------------------------------ES-T-----+              |'
  contents:
  - '|+--------------------------------------------ES-T-----+              |

    '
- title: '||+------Elect.Signature (ES)----------+ +------------+| +-----------+|'
  contents:
  - '||+------Elect.Signature (ES)----------+ +------------+| +-----------+|

    '
- title: '|||+---------+ +----------+ +---------+| |Time-Stamp  || |Complete   ||'
  contents:
  - '|||+---------+ +----------+ +---------+| |Time-Stamp  || |Complete   ||

    '
- title: '||||Signature| |  Other   | | Digital || |over digital|| |certificate||'
  contents:
  - '||||Signature| |  Other   | | Digital || |over digital|| |certificate||

    '
- title: '||||Policy ID| |  Signed  | |Signature|| |signature   || |and        ||'
  contents:
  - '||||Policy ID| |  Signed  | |Signature|| |signature   || |and        ||

    '
- title: '||||         | |Attributes| |         || +------------+| |revocation ||'
  contents:
  - '||||         | |Attributes| |         || +------------+| |revocation ||

    '
- title: '|||+---------+ +----------+ +---------+|               | |references ||'
  contents:
  - '|||+---------+ +----------+ +---------+|               | |references ||

    '
- title: '||+------------------------------------+               | +-----------+|'
  contents:
  - '||+------------------------------------+               | +-----------+|

    '
- title: '|+-----------------------------------------------------+              |'
  contents:
  - '|+-----------------------------------------------------+              |

    '
- title: +---------------------------------------------------------------------+
  contents:
  - "+---------------------------------------------------------------------+\n   \
    \      Figure 1: Illustration of an ES, ES-T and ES-C\n   The verifiers conformance\
    \ requirements of an ES with a time-stamp of\n   the digital signature is defined\
    \ in subclause 6.2.\n   The ES on its own satisfies the legal requirements for\
    \ electronic\n   signatures as defined in the European Directive on electronic\n\
    \   signatures.  The signers conformance requirements of an ES are\n   defined\
    \ in subclause 6.1, and are met using a structure as indicated\n   in figure 2:\n\
    \               +------Elect.Signature (ES)-----------|\n               |+---------+\
    \ +----------+ +---------+ |\n               ||Signature| |  Other   | | Digital\
    \ | |\n               ||Policy ID| |  Signed  | |Signature| |\n              \
    \ ||         | |Attributes| |         | |\n               |+---------+ +----------+\
    \ +---------+ |\n               |+-----------------------------------+|\n    \
    \              Figure 2: Illustration of an ES\n   Where there are requirements\
    \ for long term signatures without time-\n   stamping the digital signature, then\
    \ a secure record is needed of the\n   time of verification in association with\
    \ the electronic signature\n   (i.e., both must be securely recorded).  In addition\
    \ the certificates\n   and revocation information used at the time of verification\
    \ should to\n   be recorded as indicated in figure 3 as an ES-C(bis).\n   +-------------------------------------------------------ES-C-----+\n\
    \   |                                                                |\n   | +------Elect.Signature\
    \ (ES)----------+|           +-----------+|\n   | |+---------+ +----------+ +---------+||\
    \           |Complete   ||\n   | ||Signature| |  Other   | | Digital |||     \
    \      |certificate||\n   | ||Policy ID| |  Signed  | |Signature|||          \
    \ |and        ||\n   | ||         | |Attributes| |         |||           |revocation\
    \ ||\n   | |+---------+ +----------+ +---------+||           |references ||\n\
    \   | +------------------------------------+|           +-----------+|\n   | \
    \                                                               |\n   +----------------------------------------------------------------+\n\
    \                Figure 3: Illustration of an ES-C(bis)\n   The verifiers conformance\
    \ requirements of an ES-C(bis) is defined in\n   subclause 6.3.\n   Note: A time-stamp\
    \ attached to the electronic signature or a secure\n   time record helps to protect\
    \ the validity of the signature even if\n   some of the verification data associated\
    \ with the signature become\n   compromised AFTER the signature was generated.\
    \  The time-stamp or a\n   secure time record provides evidence that the signature\
    \ was generated\n   BEFORE the event of compromise; hence the signature will maintain\
    \ its\n   validity status.\n"
- title: 2.6  Extended Forms of Validation Data
  contents:
  - "2.6  Extended Forms of Validation Data\n   The complete validation data (ES-C)\
    \ described above may be extended\n   to form an ES with eXtended validation data\
    \ (ES-X) to meet following\n   additional requirements.\n   Firstly, when the\
    \ verifier does not has access to,\n      *  the signer's certificate,\n     \
    \ *  all the CA certificates that make up the full certification\n         path,\n\
    \      *  all the associated revocation status information, as referenced\n  \
    \       in the ES-C.\n   then the values of these certificates and revocation\
    \ information may\n   be added to the ES-C.  This form of extended validation\
    \ data is\n   called a X-Long.\n   Secondly, if there is a risk that any CA keys\
    \ used in the certificate\n   chain may be compromised, then it is necessary to\
    \ additionally time-\n   stamp the validation data by either:\n      *  time-stamping\
    \ all the validation data as held with the ES(ES-\n         C), this eXtended\
    \ validation data is called a Type 1 X-Time-\n         Stamp; or\n      *  time-stamping\
    \ individual reference data as used for complete\n         validation.\n   This\
    \ form of eXtended validation data is called a Type 2 X-Time-\n   Stamp.\n   NOTE:\
    \  The advantages/drawbacks for Type 1 and Type 2 X-Time-Stamp\n   are discussed\
    \ in this document (see clause B.4.6.)\n   If all the above conditions occur then\
    \ a combination of the two\n   formats above may be used.  This form of eXtended\
    \ validation data is\n   called a X-Long-Time-Stamped.\n   Support for the extended\
    \ forms of validation data is optional.\n   An Electronic Signature (ES) , with\
    \ the additional validation data\n   forming the ES-X long is illustrated in Figure\
    \ 4:\n  +-------------------------------------------------------- ES-X Long--+\n\
    \  |+---------------------------------------- EC-C --------+            |\n  ||+----\
    \ Elect.Signature (ES)----+             +--------+| +--------+ |\n  |||+-------+-+-------+-+-------+|\
    \ +----------+|Complete|| |Complete| |\n  ||||Signa- | |Other  | |Digital|| |Time-Stamp||certi-\
    \  || |certi-  | |\n  ||||ture   | |Signed | |Signa- || |over      ||ficate  ||\
    \ |ficate  | |\n  ||||Policy | |Attri- | |ture   || |digital   ||and     || |and\
    \     | |\n  ||||ID     | |butes  | |       || |signature ||revoc.  || |revoc.\
    \  | |\n  |||+-------+ +-------+ +-------+| +----------+|refs    || |data    |\
    \ |\n  ||+-----------------------------+             +--------+| +--------+ |\n\
    \  |+------------------------------------------------------+            |\n  +--------------------------------------------------------------------+\n\
    \          Figure 4: Illustration of an ES and ES-X long.\n   An Electronic Signature\
    \ (ES) , with the additional validation data\n   forming the eXtended Validation\
    \ Data - Type 1 is illustrated in\n   Figure 5:\n  +-----------------------------------------------------------\
    \ ES-X 1 -+\n  |+----------------------------------------- EC-C --------+    \
    \       |\n  || +---- Elect.Signature (ES)----+             +--------+| +-------+\
    \ |\n  || |+-------+ +-------+ +-------+| +----------+|Complete|| |       | |\n\
    \  || ||Signa- | |Other  | |Digital|| |Time-Stamp||certifi-|| | Time- | |\n  ||\
    \ ||ture   | |Signed | |Signa- || |over      ||cate and|| | stamp | |\n  || ||Policy\
    \ | |Attri- | |ture   || |digital   ||revoc.  || | over  | |\n  || ||ID     |\
    \ |butes  | |       || |signature ||refs    || | CES   | |\n  || |+-------+ +-------+\
    \ +-------+| +----------+|        || |       | |\n  || +-----------------------------+\
    \             +--------+| +-------+ |\n  |+-------------------------------------------------------+\
    \           |\n  +--------------------------------------------------------------------+\n\
    \          Figure 5: Illustration of ES with ES-X Type 1\n   An Electronic Signature\
    \ (ES) , with the additional validation data\n   forming the eXtended Validation\
    \ Data - Type 2 is illustrated in\n   Figure 6:\n  +---------------------------------------------------------\
    \ ES-X 2 ---+\n  |+---------------------------------------- EC-C --------+   \
    \         |\n  ||+---- Elect.Signature (ES)----+             +--------+| +--------+\
    \ |\n  |||+-------+ +-------+ +-------+| +----------+|Complete|| |Times   | |\n\
    \  ||||Signa- | |Other  | |Digital|| |Time-Stamp||certs   || |Stamp   | |\n  ||||ture\
    \   | |Signed | |Signa- || |over      ||and     || |over    | |\n  ||||Policy\
    \ | |Attri- | |ture   || |digital   ||revoc.  || |Complete| |\n  ||||ID     |\
    \ |butes  | |       || |signature ||refs    || |certs   | |\n  |||+-------+ +-------+\
    \ +-------+| +----------+|        || |and     | |\n  ||+-----------------------------+\
    \             +--------+| |revoc.  | |\n  ||                                 \
    \                     | |refs    | |\n  |+------------------------------------------------------+\
    \ +--------+ |\n  +--------------------------------------------------------------------+\n\
    \          Figure 6: Illustration of ES with ES-X Type 2\n"
- title: 2.7  Archive Validation Data
  contents:
  - "2.7  Archive Validation Data\n   Before the algorithms, keys and other cryptographic\
    \ data used at the\n   time the ES-C was built become weak and the cryptographic\
    \ functions\n   become vulnerable, or the certificates supporting previous time-\n\
    \   stamps expires, the signed data, the ES-C and any additional\n   information\
    \ (ES-X) should be time-stamped.  If possible this should\n   use stronger algorithms\
    \ (or longer key lengths) than in the original\n   time-stamp.\n   This additional\
    \ data and time-stamp is called Archive Validation Data\n   (ES-A).  The Time-Stamping\
    \ process may be repeated every time the\n   protection used to time-stamp a previous\
    \ ES-A become weak.  An ES-A\n   may thus bear multiple embedded time stamps.\n\
    \   An example of an Electronic Signature (ES), with the additional\n   validation\
    \ data for the ES-C and ES-X forming the ES-A is illustrated\n   in Figure 7.\n\
    \         +-------------------------------- ES-A --------- ----------+\n     \
    \    |  +-------------------- ES-A -----------------+           |\n         |\
    \  |  +--------- ES-X -------------- +         |           |\n         |  |  |..............................|\
    \ +-----+ |  +-----+  |\n         |  |  |..............................| |Time\
    \ | |  |Time |  |\n         |  |  |..............................| |Stamp| | \
    \ |Stamp|  |\n         |  |  |                              | +-----+ |  +-----+\
    \  |\n         |  |  +----------------------------- +         |           |\n\
    \         |  +-------------------------------------------+           |\n     \
    \    +----------------------------------------------------------+\n          \
    \            Figure 7: Illustration of ES -A\n   Support for ES-A is optional.\n"
- title: 2.8  Arbitration
  contents:
  - "2.8  Arbitration\n   The ES-C may be used for arbitration should there be a dispute\n\
    \   between the signer and verifier, provided that:\n      *  a copy of the signature\
    \ policy referenced by the signer is\n         available;\n      *  the arbitrator\
    \ knows where to retrieve the signer's certificate\n         (if not already present),\
    \ all the cross-certificates and the\n         required CRLs and/or OCSPs responses\
    \ referenced in the ES-C;\n      *  none of the issuing key from the certificate\
    \ chain have ever\n         been compromised;\n      *  the cryptography used\
    \ at the time the ES-C was built has not\n         been broken at the time the\
    \ arbitration is performed.\n   When the second condition is not met, then the\
    \ plaintiff must provide\n   an ES-X Long.\n   When it is known by some external\
    \ means that the third condition is\n   not met, then the plaintiff must provide\
    \ an ES-X Time-Stamped.\n   When the two previous conditions are not met, the\
    \ plaintiff must\n   provide the two above information (i.e., an ES-X Time-Stamped\
    \ and\n   Long).\n   When the last condition is not met, the plaintiff must provide\
    \ an\n   ES-A.\n   It should be noticed that a verifier may need to get two time\
    \ stamps\n   at two different instants of time: one soon after the generation\
    \ of\n   the ES and one soon after some grace period allowing any entity from\n\
    \   the certification chain to declare a key compromise.\n"
- title: 2.9  Validation Process
  contents:
  - "2.9  Validation Process\n   The Validation Process validates an electronic signature\
    \ in\n   accordance with the requirements of the signature policy.  The output\n\
    \   status of the validation process can be:\n      *  valid;\n      *  invalid;\n\
    \      *  incomplete verification.\n   A Valid response indicates that the signature\
    \ has passed verification\n   and it complies with the signature validation policy.\n\
    \   A signature validation policy is a part of the signature policy which\n  \
    \ specifies the technical requirements on the signer in creating a\n   signature\
    \ and verifier when validating a signature.\n   An Invalid response indicates\
    \ that either the signature format is\n   incorrect or that the digital signature\
    \ value fails verification\n   (e.g., the integrity checks on the digital signature\
    \ value fails or\n   any of the certificates on which the digital signature verification\n\
    \   depends is known to be invalid or revoked).\n   An Incomplete Validation response\
    \ indicates that the format and\n   digital signature verifications have not failed\
    \ but there is\n   insufficient information to determine if the electronic signature\
    \ is\n   valid under the signature policy.  This can include situations where\n\
    \   additional information, which does not effect the validity of the\n   digital\
    \ signature value, may be available but is invalid.\n   In the case of Incomplete\
    \ Validation, it may be possible to request\n   that the electronic signature\
    \ be checked again at a later date when\n   additional validation information\
    \ might become available.  Also, in\n   the case of incomplete validation, additional\
    \ information may be made\n   available to the application or user, thus allowing\
    \ the application\n   or user to decide what to do with partially correct electronic\n\
    \   signatures.\n   The validation process may also output validation data:\n\
    \      *  a signature time-stamp;\n      *  the complete validation data;\n  \
    \    *  the archive validation data.\n"
- title: 2.10  Example Validation Sequence
  contents:
  - "2.10  Example Validation Sequence\n   Figure 8, and subsequent description, describes\
    \ how the validation\n   process may build up a complete electronic signature\
    \ over time.\n   Soon after receiving the electronic signature (ES) from the signer\n\
    \   (1), the digital signature value may be checked,  the validation\n   process\
    \ must at least add a time-stamp (2), unless the signer has\n   provided one which\
    \ is trusted by the verifier.  The validation\n   process may also validate the\
    \ electronic signature, as required under\n   the identified signature policy,\
    \ using additional data (e.g.,\n   certificates, CRL, etc.) provided by trusted\
    \ service providers.  If\n   the validation process is not complete then the output\
    \ from this\n   stage is the ES-T.\n   When all the additional data (e.g., the\
    \ complete certificate and\n   revocation information) necessary to validate the\
    \ electronic\n   signature first becomes available, then the validation process:\n\
    \      *  obtains all the necessary additional certificate and revocation\n  \
    \       status information;\n      *  completes all the validation checks on the\
    \ ES, using the\n         complete certificate and revocation information  (if\
    \ a time-\n         stamp is not already present, this may be added at the same\n\
    \         stage combining ES-T and ES-C process);\n      *  records the complete\
    \ certificate and revocation references (3);\n      *  indicates the validity\
    \ status to the user (4).\n         +-----------------------------------------\
    \ ES-C ----------+\n         |+----------------------------- ES-T --------+  \
    \          |\n         ||+--- Elect.Signature (ES) ----+            | +--------+\
    \ |\n         |||+-------+ +-------+ +-------+|+----------+| |Complete| |\n  \
    \       ||||Signa- | |Other  | |Digital|||Time-Stamp|| |certifi-| |\n        \
    \ ||||ture   | |Signed | |Signa- |||over      || |cate and| |\n         ||||Policy\
    \ | |Attri- | |ture   |||digital   || |revoca- | |\n         ||||ID     | |butes\
    \  | |       |||signature || |tion    | |\n         |||+-------+ +-------+ +-------+|+----------+|\
    \ |referen-| |\n         ||+------------\\----------------+    ^       | |ces\
    \     | |\n         ||              \\                    |       | +--------+\
    \ |\n         ||               \\ 1                /        |      ^     |\n \
    \        |+----------------\\----------------/---------+      |     |\n      \
    \   +------------------\\--------------/--------------- /------+\n           \
    \                  \\            /2    ----3------/\n          +----------+  \
    \      |          /     /\n          | Signed   |\\       v         /     |\n\
    \          |User data | \\     +--------------------+     +------------+\n   \
    \       +----------+  \\--->| Validation Process |---> |- Valid     |\n      \
    \                       +---|--^-------|--^--+ 4   |- Invalid   |\n          \
    \                       |  |       |  |        |- Validation|\n              \
    \                   v  |       v  |        |  Incomplete|\n                  \
    \           +---------+ +--------+     +------------+\n                      \
    \       |Signature| |Trusted |\n                             | Policy  | |Service\
    \ |\n                             | Issuer  | |Provider|\n                   \
    \          +---------+ +--------+\n   Figure 8: Illustration of an ES with Complete\
    \ validation data (ES-C)\n   At the same time as the validation process creates\
    \ the ES-C, the\n   validation process may provide and/or record the values of\n\
    \   certificates and revocation status information used in ES-C, called\n   the\
    \ ES-X Long (5).  This is illustrated in figure 9:\n  +-----------------------------------------------------\
    \ ES-X ---------+\n  |+---------------------------------------- ES-C --------+\
    \ +--------+ |\n  ||+--- Elect.Signature (ES) ----+            +--------+ | |Complete|\
    \ |\n  |||+-------+ +-------+ +-------+|+----------+|Complete| | |certifi-| |\n\
    \  ||||Signa- | |Other  | |Digital|||Time-Stamp||certifi-| | |cate    | |\n  ||||ture\
    \   | |Signed | |Signa- |||over      ||cate and| | |and     | |\n  ||||Policy\
    \ | |Attri- | |ture   |||digital   ||revoca- | | |revoca- | |\n  ||||ID     |\
    \ |butes  | |       |||signature ||tion    | | |tion    | |\n  |||+-------+ +---|---+\
    \ +-------+|+----------+|referen-| | |Data    | |\n  ||+--------------\\--------------+\
    \    ^       |ces     | | +--------+ |\n  ||                \\               \
    \   |       +--------+ |      ^     |\n  ||                 \\ 1             2/\
    \           ^       |      |     |\n  |+------------------\\--------------/------------|-------+\
    \     /      |\n  +--------------------\\------------/------------/-------------/-------+\n\
    \                        \\          /    ---3----/             /\n   +----------+\
    \          |        /    /   ------------5-----/\n   | Signed   |\\         v\
    \       |     |  /\n   |User data | \\     +--------------------+     +-----------+\n\
    \   +----------+  \\--->| Validation Process |---> | - Valid   |\n           \
    \           +---|--^-------|--^--+ 4   | - Invalid |\n                       \
    \   |  |       |  |        +-----------+\n                          v  |     \
    \  v  |\n                      +---------+ +--------+\n                      |Signature|\
    \ |Trusted |\n                      | Policy  | |Service |\n                 \
    \     | Issuer  | |Provider|\n                      +---------+ +--------+\n \
    \   Figure 9: Illustration ES with eXtended validation data (Long)\n   When the\
    \ validation process creates the ES-C it may also create\n   extended forms of\
    \ validation data.  A first alternative is to time-\n   stamp all data forming\
    \ the Type 1 X-Time-Stamp (6).  This is\n   illustrated in figure 10:\n   +-----------------------------------------------------\
    \ ES-X -------+\n   |+---------------------------------------- ES-C --------+\
    \ +------+ |\n   ||+--- Elect.Signature (ES) ----+            +--------+ | |Time-\
    \ | |\n   |||+-------+ +-------+ +-------+|+----------+|Complete| | |Stamp | |\n\
    \   ||||Signa- | |Other  | |Digital|||Time-Stamp||certifi-| | |over  | |\n   ||||ture\
    \   | |Signed | |Signa- |||over      ||cate and| | |CES   | |\n   ||||Policy |\
    \ |Attri- | |ture   |||digital   ||revoca- | | +------+ |\n   ||||ID     | |butes\
    \  | |       |||signature ||tion    | |     ^    |\n   |||+-------+ +--|----+\
    \ +-------+|+----------+|referen-| |     |    |\n   ||+-------------|---------------+\
    \     ^      |ces     | |     |    |\n   ||              |                   \
    \  |      +--------+ |     |    |\n   ||               \\ 1                 2/\
    \         ^       |     |    |\n   |+----------------\\------------------/----------|-------+\
    \     |    |\n   +------------------\\----------------/-----------/-------------/----+\n\
    \                       \\              /   ----3---/             /\n    +----------+\
    \        |            /   /  ---------------6---/\n    | Signed   |\\       v\
    \           |   |  /\n    |User data | \\     +--------------------+     +-----------+\n\
    \    +----------+  \\--->| Validation Process |---> | - Valid   |\n          \
    \             +---|--^-------|--^--+ 4   | - Invalid |\n                     \
    \      |  |       |  |        +-----------+\n                           v  | \
    \      v  |\n                       +---------+ +--------+\n                 \
    \      |Signature| |Trusted |\n                       | Policy  | |Service |\n\
    \                       | Issuer  | |Provider|\n                       +---------+\
    \ +--------+\n      Figure 10: Illustration of ES with eXtended validation data\
    \ -\n                 Type 1 X-Time-Stamp\n   Another alternative is to time-stamp\
    \ the certificate and revocation\n   information references used to validate the\
    \ electronic signature (but\n   not the signature) (6'); this is called Type 2\
    \ X-Time-Stamped.  This\n   is illustrated in figure 11:\n  +-----------------------------------------------------\
    \ ES-X -----------+\n  |+---------------------------------------- ES-C --------+\
    \ +----------+ |\n  ||+--- Elect.Signature (ES) ----+            +--------+ |\
    \ |Time-Stamp| |\n  |||+-------+ +-------+ +-------+|+----------+|Complete| |\
    \ |over      | |\n  ||||Signa- | |Other  | |Digital|||Time-Stamp||certifi-| |\
    \ |Complete  | |\n  ||||ture   | |Signed | |Signa- |||over      ||cate and| |\
    \ |Certifi-  | |\n  ||||Policy | |Attri- | |ture   |||digital   ||revoc.  | |\
    \ |cate and  | |\n  ||||ID     | |butes  | |       |||signature ||refs    | |\
    \ |revoc.    | |\n  |||+-------+ +---^---+ +-------+|+----^-----++---^----+ |\
    \ |refs      | |\n  ||+--------------\\--------------+     |          |      |\
    \ +----------+ |\n  |+----------------\\------------------/-----------|------+\
    \      ^       |\n  +----------------1-\\----------------/-----------/--------------|-------+\n\
    \                      \\              /  -----3---/               |\n   +----------+\
    \        |           2/  /   ---------------6'-----/\n   | Signed   |\\      \
    \ v           |  |   /\n   |User data | \\     +--------------------+     +-----------+\n\
    \   +----------+  \\--->| Validation Process |---> | - Valid   |\n           \
    \           +---|--^-------|--^--+ 4   | - Invalid |\n                       \
    \   |  |       |  |        +-----------+\n                          v  |     \
    \  v  |\n                      +---------+ +--------+\n                      |Signature|\
    \ |Trusted |\n                      | Policy  | |Service |\n                 \
    \     | Issuer  | |Provider|\n                      +---------+ +--------+\n \
    \   Figure 11: Illustration of ES with eXtended validation data -\n          \
    \     Type 2 X-Time-Stamp\n   Before the algorithms used in any of electronic\
    \ signatures become or\n   are likely, to be compromised or rendered vulnerable\
    \ in the future,\n   it is necessary to time-stamp the entire electronic signature,\n\
    \   including all the values of the validation and user data as an ES\n   with\
    \ Archive validation data (ES-A)\n   An ES-A is illustrated in figure 12:\n"
- title: '-------------------------------------------- ES-A --------------------+'
  contents:
  - '-------------------------------------------- ES-A --------------------+

    '
- title: '----------------------------------------------------------------+     |'
  contents:
  - '----------------------------------------------------------------+     |

    '
- title: +------------------------------- EC-C --------++-----+          |     |
  contents:
  - '+------------------------------- EC-C --------++-----+          |     |

    '
- title: '|                                             ||Time-|          |     |'
  contents:
  - '|                                             ||Time-|          |     |

    '
- title: '|+-- Elect.Signature (ES) -+        +--------+||Stamp|  +-------+     |'
  contents:
  - '|+-- Elect.Signature (ES) -+        +--------+||Stamp|  +-------+     |

    '
- title: '||+------++-------++-------|+------+|Complete|||over |  Complete|     |'
  contents:
  - '||+------++-------++-------|+------+|Complete|||over |  Complete|     |

    '
- title: '|||Signa-||Other  ||Digital||Time- ||certifi-|||CES  |  |certi- |+----|'
  contents:
  - '|||Signa-||Other  ||Digital||Time- ||certifi-|||CES  |  |certi- |+----|

    '
- title: '|||ture  ||Signed ||Signa- ||Stamp ||cate and||+-----+  |ficate |Arch-|'
  contents:
  - '|||ture  ||Signed ||Signa- ||Stamp ||cate and||+-----+  |ficate |Arch-|

    '
- title: '|||Policy||Attri- ||ture   ||over  ||revoca- ||+------+ |and    |ive  |'
  contents:
  - '|||Policy||Attri- ||ture   ||over  ||revoca- ||+------+ |and    |ive  |

    '
- title: '|||ID    ||butes  ||       ||digit.||tion    |||Time- | |revoca-|Time |'
  contents:
  - '|||ID    ||butes  ||       ||digit.||tion    |||Time- | |revoca-|Time |

    '
- title: '||+------++---|---++-------||signa-||referen-|||Stamp-| |tion   |stamp|'
  contents:
  - '||+------++---|---++-------||signa-||referen-|||Stamp-| |tion   |stamp|

    '
- title: '|+------------|------------+|ture  ||ces     |||over  | |data   |+----|'
  contents:
  - '|+------------|------------+|ture  ||ces     |||over  | |data   |+----|

    '
- title: '|             |             +------++--------+|Complete\+-------+  ^  |'
  contents:
  - '|             |             +------++--------+|Complete\+-------+  ^  |

    '
- title: '|             |                ^         ^    ||cert.  |        |  |  |'
  contents:
  - '|             |                ^         ^    ||cert.  |        |  |  |

    '
- title: +-------------|----------------|---------|----+|and rev|        |  |  |
  contents:
  - "+-------------|----------------|---------|----+|and rev|        |  |  |\n   \
    \            \\               |         /     |refs.  |        |  |  |\n     \
    \           \\              |        /      +-------+        |  |  |\n"
- title: '-----------------\-------------|-------/------------------------+  |  |'
  contents:
  - '-----------------\-------------|-------/------------------------+  |  |

    '
- title: +----------+      \            |      /                            /  |
  contents:
  - '+----------+      \            |      /                            /  |

    '
- title: '| Signed   |       \2          |3    /     /--------------7-------/   |'
  contents:
  - '| Signed   |       \2          |3    /     /--------------7-------/   |

    '
- title: '|User data |        \          |    |     /                           |'
  contents:
  - '|User data |        \          |    |     /                           |

    '
- title: +-------\--+         \         |    |    /                            |
  contents:
  - '+-------\--+         \         |    |    /                            |

    '
- title: '---------\------------|--------|----|---/-----------------------------+'
  contents:
  - "---------\\------------|--------|----|---/-----------------------------+\n  \
    \        \\           v        |    |   |\n          1\\        +--------------------+\
    \     +-----------+\n            \\------>| Validation Process |---> | - Valid\
    \   |\n                    +---|--^-------|--^--+ 4   | - Invalid |\n        \
    \                |  |       |  |        +-----------+\n                      \
    \  v  |       v  |\n                    +---------+ +--------+\n             \
    \       |Signature| |Trusted |\n                    | Policy  | |Service |\n \
    \                   | Issuer  | |Provider|\n                    +---------+ +--------+\n\
    \   Figure 12: Illustration of an ES with Archive validation data (ES-A)\n"
- title: 2.11  Additional optional features of an ES
  contents:
  - "2.11  Additional optional features of an ES\n   This document also defines additional\
    \ optional features of an\n   electronic signature to:\n      *  indicate a commitment\
    \ type being made by the signer;\n      *  indicate the role under which a signature\
    \ was created;\n      *  support multiple signatures.\n"
- title: 3. Data structure of an Electronic Signature
  contents:
  - "3. Data structure of an Electronic Signature\n   This clause uses and builds\
    \ upon the Cryptographic Message Syntax\n   (CMS), as defined in RFC 2630 [CMS],\
    \ and Enhanced Security Services\n   (ESS), as defined in RFC 2634 [ESS].  The\
    \ overall structure of\n   Electronic Signature is as defined in [CMS].  The Electronic\n\
    \   Signature (ES) uses attributes defined in [CMS], [ESS] and this\n   document.\
    \  This document defines in full the ES attributes which it\n   uses and are not\
    \ defined elsewhere.\n   The mandated set of attributes and the digital signature\
    \ value is\n   defined as the minimum Electronic Signature (ES) required by this\n\
    \   document.  A signature policy MAY mandate other signed attributes to\n   be\
    \ present.\n"
- title: 3.1  General Syntax
  contents:
  - "3.1  General Syntax\n   The general syntax of the ES is as defined in [CMS].\n"
- title: 3.2  Data Content Type
  contents:
  - "3.2  Data Content Type\n   The data content type of the ES is as defined in [CMS].\n\
    \   The data content type is intended to refer to arbitrary octet\n   strings,\
    \ such as ASCII text files; the interpretation is left to the\n   application.\
    \  Such strings need not have any internal structure\n   (although they could\
    \ have their own ASN.1 definition or other\n   structure).\n"
- title: 3.3  Signed-data Content Type
  contents:
  - "3.3  Signed-data Content Type\n   The Signed-data content type of the ES is as\
    \ defined in [CMS].\n   The signed-data content type consists of a content of\
    \ any type and\n   zero or more signature values.  Any number of signers in parallel\
    \ can\n   sign any type of content.  The typical application of the signed-data\n\
    \   content type represents one signer's digital signature on content of\n   the\
    \ data content type.\n   To make sure that the verifier uses the right certificate,\
    \ this\n   document mandates that the hash of the signers certificate is always\n\
    \   included in the Signing Certificate signed attribute.\n"
- title: 3.4  SignedData Type
  contents:
  - "3.4  SignedData Type\n   The syntax of the SignedData type of the ES is as defined\
    \ in [CMS].\n   The fields of type SignedData have the meanings defined [CMS]\
    \ except\n   that:\n      *  version is the syntax version number.  The value\
    \ of version\n         must be 3.\n      *  The identification of signer's certificate\
    \ used to create the\n         signature is always present as a signed attribute.\n\
    \      *  The degenerate case where there are no signers is not valid in\n   \
    \      this document.\n"
- title: 3.5  EncapsulatedContentInfo Type
  contents:
  - "3.5  EncapsulatedContentInfo Type\n   The syntax of the EncapsulatedContentInfo\
    \ a type of the ES is as\n   defined in [CMS].\n   For the purpose of long term\
    \ validation as defined by this document,\n   it is advisable that either the\
    \ eContent is present, or the data\n   which is signed is archived in such as\
    \ way as to preserve the any\n   data encoding. It is important that the OCTET\
    \ STRING used to generate\n   the signature remains the same every time either\
    \ the verifier or an\n   arbitrator validates the signature.\n   The degenerate\
    \ case where there are no signers is not valid in this\n   document.\n"
- title: 3.6  SignerInfo Type
  contents:
  - "3.6  SignerInfo Type\n   The syntax of the SignerInfo a type of the ES is as\
    \ defined in [CMS].\n   Per-signer information is represented in the type SignerInfo.\
    \  In the\n   case of multiple independent signatures, there is an instance of\
    \ this\n   field for each signer.\n   The fields of type SignerInfo have the meanings\
    \ defined in [CMS]\n   except that signedAttributes must, as a minimum, contain\
    \ the\n   following attributes:\n      *  ContentType as defined in clause 3.7.1.\n\
    \      *  MessageDigest as defined in clause 3.7.2.\n      *  SigningTime as defined\
    \ in clause 3.7.3.\n      *  SigningCertificate as defined in clause 3.8.1.\n\
    \      *  SignaturePolicyId as defined in clause 3.9.1.\n"
- title: 3.6.1  Message Digest Calculation Process
  contents:
  - "3.6.1  Message Digest Calculation Process\n   The message digest calculation\
    \ process is as defined in [CMS].\n"
- title: 3.6.2  Message Signature Generation Process
  contents:
  - "3.6.2  Message Signature Generation Process\n   The input to the digital signature\
    \ generation process is as defined\n   in [CMS].\n"
- title: 3.6.3  Message Signature Verification Process
  contents:
  - "3.6.3  Message Signature Verification Process\n   The procedures for CMS signed\
    \ data validation are as defined in [CMS]\n   and enhanced in this document.\n\
    \   The input to the signature verification process includes the signer's\n  \
    \ public key verified as correct using either the ESS Signing\n   Certificate\
    \ attribute or the Other Signing Certificate attribute.\n"
- title: 3.7  CMS Imported Mandatory Present Attributes
  contents:
  - "3.7  CMS Imported Mandatory Present Attributes\n   The following attributes MUST\
    \ be present with the signed-data defined\n   by this document.  The attributes\
    \ are defined in [CMS].\n"
- title: 3.7.1  Content Type
  contents:
  - "3.7.1  Content Type\n   The syntax of the content-type attribute type of the\
    \ ES is as defined\n   in [CMS].\n"
- title: 3.7.2  Message Digest
  contents:
  - "3.7.2  Message Digest\n   The syntax of the message-digest attribute type of\
    \ the ES is as\n   defined in [CMS].\n"
- title: 3.7.3  Signing Time
  contents:
  - "3.7.3  Signing Time\n   The syntax of the message-digest attribute type of the\
    \ ES is as\n   defined in [CMS] and further qualified by this document.\n   The\
    \ signing-time attribute type specifies the time at which the\n   signer claims\
    \ to have performed the signing process.\n   This present document recommends\
    \ the use of GeneralizedTime.\n"
- title: 3.8  Alternative Signing Certificate Attributes
  contents:
  - "3.8  Alternative Signing Certificate Attributes\n   One, and only one, of the\
    \ following two alternative attributes MUST\n   be present with the signed-data\
    \ defined by this document to identify\n   the signing certificate.  Both attributes\
    \ include an identifier and a\n   hash of the signing certificate.  The first,\
    \ which is adopted in\n   existing standards, may be only used with the SHA-1\
    \ hashing\n   algorithm.  The other shall be used when other hashing algorithms\
    \ are\n   to be supported.\n   The signing certificate attribute is designed to\
    \ prevent the simple\n   substitution and re-issue attacks, and to allow for a\
    \ restricted set\n   of authorization certificates to be used in verifying a signature.\n"
- title: 3.8.1  ESS Signing Certificate Attribute Definition
  contents:
  - "3.8.1  ESS Signing Certificate Attribute Definition\n   The syntax of the signing\
    \ certificate attribute type of the ES is as\n   defined in [ESS], and further\
    \ qualified and profile in this document.\n   The ESS signing certificate attribute\
    \ must be a signed attribute.\n   This document mandates the presence of this\
    \ attribute as a signed CMS\n   attribute, and the sequence must not be empty.\
    \  The certificate used\n   to verify the signature must be identified in the\
    \ sequence, the\n   Signature Validation Policy may mandate other certificate\
    \ references\n   to be present, that may include all the certificates up to the\
    \ point\n   of trust.  The encoding of the ESSCertID for this certificate must\n\
    \   include the issuerSerial field.\n   The issuerAndSerialNumber present in the\
    \ SignerInfo must be\n   consistent with issuerSerial field.  The certificate\
    \ identified must\n   be used during the signature verification process.  If the\
    \ hash of\n   the certificate does not match the certificate used to verify the\n\
    \   signature, the signature must be considered invalid.\n   The sequence of policy\
    \ information field is not used in this\n   document.\n   NOTE: Where an attribute\
    \ certificate is used by the signer to\n   associate a role, or other attributes\
    \ of the signer, with the\n   electronic signature this is placed in the Signer\
    \ Attribute attribute\n   as defined in clause 3.12.3.\n"
- title: 3.8.2  Other Signing Certificate Attribute Definition
  contents:
  - "3.8.2  Other Signing Certificate Attribute Definition\n   The following attribute\
    \ is identical to the ESS SigningCertificate\n   defined above except that this\
    \ attribute can be used with hashing\n   algorithms other than SHA-1.\n   This\
    \ attribute must be used in the same manner as defined above for\n   the ESS SigningCertificate\
    \ attribute.\n   The following object identifier identifies the signing certificate\n\
    \   attribute:\n   id-aa-ets-otherSigCert OBJECT IDENTIFIER ::= { iso(1)\n   \
    \    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n       smime(16)\
    \ id-aa(2) 19 }\n   The signing certificate attribute value has the ASN.1 syntax\n\
    \   OtherSigningCertificate\n   OtherSigningCertificate ::=  SEQUENCE {\n    \
    \   certs        SEQUENCE OF OtherCertID,\n       policies     SEQUENCE OF PolicyInformation\
    \ OPTIONAL\n                    -- NOT USED IN THIS DOCUMENT\n   }\n   OtherCertID\
    \ ::= SEQUENCE {\n        otherCertHash            OtherHash,\n        issuerSerial\
    \             IssuerSerial OPTIONAL\n   }\n   OtherHash ::= CHOICE {\n       sha1Hash\
    \ OtherHashValue,  -- This contains a SHA-1 hash\n       otherHash OtherHashAlgAndValue\n\
    \   }\n   OtherHashValue ::= OCTET STRING\n   OtherHashAlgAndValue ::= SEQUENCE\
    \ {\n     hashAlgorithm  AlgorithmIdentifier,\n     hashValue      OtherHashValue\n\
    \   }\n"
- title: 3.9  Additional Mandatory Attributes
  contents:
  - '3.9  Additional Mandatory Attributes

    '
- title: 3.9.1  Signature policy Identifier
  contents:
  - "3.9.1  Signature policy Identifier\n   This document mandates that a reference\
    \ to the signature policy, is\n   included in the signedData, this reference is\
    \ either explicitly\n   identified or implied by the semantics of the signed content\
    \ and\n   other external data.  A signature policy defines the rules for\n   creation\
    \ and validation of an electronic signature, is included as a\n   signed attribute\
    \ with every signature.  The signature policy\n   identifier must be a signed\
    \ attribute.\n   The following object identifier identifies the signature policy\n\
    \   identifier attribute:\n   id-aa-ets-sigPolicyId OBJECT IDENTIFIER ::= { iso(1)\n\
    \       member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n       smime(16)\
    \ id-aa(2) 15 }\n   Signature-policy-identifier attribute values have ASN.1 type\n\
    \   SignaturePolicyIdentifier.\n   SignaturePolicyIdentifier ::= CHOICE{\n   \
    \         SignaturePolicyId          SignaturePolicyId,\n            SignaturePolicyImplied\
    \     SignaturePolicyImplied }\n   SignaturePolicyId ::= SEQUENCE {\n        \
    \   sigPolicyIdentifier   SigPolicyId,\n           sigPolicyHash         SigPolicyHash,\n\
    \           sigPolicyQualifiers   SEQUENCE SIZE (1..MAX) OF\n                \
    \                 SigPolicyQualifierInfo      OPTIONAL\n                     \
    \                                               }\n   SignaturePolicyImplied ::=\
    \ NULL\n   The presence of the NULL type indicates that the signature policy is\n\
    \   implied by the semantics of the signed data and other external data.\n   The\
    \ sigPolicyId field contains an object-identifier which uniquely\n   identifies\
    \ a specific version of the signature policy.  The syntax of\n   this field is\
    \ as follows:\n      SigPolicyId ::= OBJECT IDENTIFIER\n   The sigPolicyHash field\
    \ contains the identifier of the hash algorithm\n   and the hash of the value\
    \ of the signature policy.\n   If the signature policy is defined using a computer\
    \ processable\n   notation like ASN.1, then the hash is calculated on the value\
    \ without\n   the outer type and length fields and the hashing algorithm must\
    \ be as\n   specified in the field signPolicyHshAlg.\n   If the signature policy\
    \ is defined using another structure, the type\n   of structure and the hashing\
    \ algorithm must be either specified as\n   part of the signature policy, or indicated\
    \ using a signature policy\n   qualifier.\n      SigPolicyHash ::= OtherHashAlgAndValue\n\
    \   A signature policy identifier may be qualified with other information\n  \
    \ about the qualifier.  The semantics and syntax of the qualifier is as\n   associated\
    \ with the object-identifier in the sigPolicyQualifierId\n   field.  The general\
    \ syntax of this qualifier is as follows:\n      SigPolicyQualifierInfo ::= SEQUENCE\
    \ {\n           sigPolicyQualifierId  SigPolicyQualifierId,\n           sigQualifier\
    \          ANY DEFINED BY sigPolicyQualifierId\n   }\n   This document specifies\
    \ the following qualifiers:\n      *  spuri: This contains the web URI or URL\
    \ reference to the\n         signature policy\n      *  spUserNotice: This contains\
    \ a user notice which should be\n         displayed whenever the signature is\
    \ validated.\n   -- sigpolicyQualifierIds defined in this document\n   SigPolicyQualifierId\
    \ ::=  OBJECT IDENTIFIER\n       id-spq-ets-uri OBJECT IDENTIFIER ::= { iso(1)\n\
    \       member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n       smime(16)\
    \ id-spq(5) 1 }\n      SPuri ::= IA5String\n       id-spq-ets-unotice OBJECT IDENTIFIER\
    \ ::= { iso(1)\n       member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n\
    \       smime(16) id-spq(5) 2 }\n      SPUserNotice ::= SEQUENCE {\n         \
    \  noticeRef        NoticeReference OPTIONAL,\n           explicitText     DisplayText\
    \ OPTIONAL\n   }\n      NoticeReference ::= SEQUENCE {\n           organization\
    \     DisplayText,\n           noticeNumbers    SEQUENCE OF INTEGER\n   }\n  \
    \    DisplayText ::= CHOICE {\n           visibleString    VisibleString  (SIZE\
    \ (1..200)),\n           bmpString        BMPString      (SIZE (1..200)),\n  \
    \         utf8String       UTF8String     (SIZE (1..200))\n   }\n"
- title: 3.10  CMS Imported Optional Attributes
  contents:
  - "3.10  CMS Imported Optional Attributes\n   The following attributes MAY be present\
    \ with the signed-data defined\n   by this document.  The attributes are defined\
    \ in ref [CMS] and are\n   imported into this specification and were appropriate\
    \ qualified and\n   profiling by this document.\n"
- title: 3.10.1  Countersignature
  contents:
  - "3.10.1  Countersignature\n   The syntax of the countersignature attribute type\
    \ of the ES is as\n   defined in [CMS].  The countersignature attribute must be\
    \ an unsigned\n   attribute.\n"
- title: 3.11  ESS Imported Optional Attributes
  contents:
  - "3.11  ESS Imported Optional Attributes\n   The following attributes MAY be present\
    \ with the signed-data defined\n   by this document.  The attributes are defined\
    \ in ref [ESS] and are\n   imported into this specification and were appropriate\
    \ qualified and\n   profiling by this document.\n"
- title: 3.11.1 Content Reference Attribute
  contents:
  - "3.11.1 Content Reference Attribute\n   The content reference attribute is a link\
    \ from one SignedData to\n   another.  It may be used to link a reply to the original\
    \ message to\n   which it refers, or to incorporate by reference one SignedData\
    \ into\n   another.\n   The content reference attribute MUST be used as defined\
    \ in [ESS].\n   The content reference MUST be a signed attribute.\n   The syntax\
    \ of the content reference attribute type of the ES is as\n   defined in [ESS].\n"
- title: 3.11.2  Content Identifier Attribute
  contents:
  - "3.11.2  Content Identifier Attribute\n   The content identifier attribute provides\
    \ an identifier for the\n   signed content for use when reference may be later\
    \ required to that\n   content, for example in the content reference attribute\
    \ in other\n   signed data sent later.\n   The content identifier must be a signed\
    \ attribute.\n   The syntax of the content identifier attribute type of the ES\
    \ is as\n   defined in [ESS].\n   The minimal signedContentIdentifier should contain\
    \ a concatenation of\n   user-specific identification information (such as a user\
    \ name or\n   public keying material identification information), a GeneralizedTime\n\
    \   string, and a random number.\n"
- title: 3.11.3  Content Hints Attribute
  contents:
  - "3.11.3  Content Hints Attribute\n   The content hints attribute provides information\
    \ that describes the\n   format of the signed content.  It may be used by the\
    \ signer to\n   indicate to a verifier the precise format that MUST be used to\n\
    \   present the data (e.g., text, voice, video) to a verifier.  This\n   attribute\
    \ MUST be present when it is mandatory to present the signed\n   data to human\
    \ users on verification.\n   The syntax of the content hints attribute type of\
    \ the ES is as\n   defined in ESS (RFC 2634, section 2.9 [9]).\n   When used to\
    \ indicate the precise format of the data to be presented\n   to the user the\
    \ following rules apply:\n   The contentType (defined in RFC 2630 [8]) indicates\
    \ the type of the\n   associated content.  It is an object identifier (i.e., a\
    \ unique\n   string of integers) assigned by an authority that defines the content\n\
    \   type.\n   The UTF8String shall define the presentation format.  The format\
    \ may\n   be defined by MIME types as indicated below.\n   Note 1: The contentType\
    \ can be id-data defined in CMS (RFC 2630 [8]).\n   The UTF8String can be used\
    \ to indicate the encoding of the data, like\n   MIME type.  RFC 2045 [25] provides\
    \ a common structure for encoding a\n   range of electronic documents and other\
    \ multi-media types, see annex\n   B for further information, a system supporting\
    \ verification of\n   electronic signature may present information to users in\
    \ the form\n   identified by the MIME type.\n   id-data OBJECT IDENTIFIER ::=\
    \ { iso(1) member-body(2) us(840)\n   rsadsi(113549) pkcs(1) pkcs7(7) 1 }\n"
- title: 3.12   Additional Optional Attributes
  contents:
  - '3.12   Additional Optional Attributes

    '
- title: 3.12.1  Commitment Type Indication Attribute
  contents:
  - "3.12.1  Commitment Type Indication Attribute\n   There may be situation were\
    \ a signer wants to explicitly indicate to\n   a verifier that by signing the\
    \ data, it illustrates a type of\n   commitment on behalf of the signer.  The\
    \ commitmentTypeIndication\n   attribute conveys such information.\n   The commitmentTypeIndication\
    \ attribute must be a signed attribute.\n   The commitment type may be:\n    \
    \  *  defined as part of the signature policy, in which case the\n         commitment\
    \ type has precise semantics that is defined as part\n         of the signature\
    \ policy.\n      *  be a registered type, in which case the commitment type has\n\
    \         precise semantics defined by registration, under the rules of\n    \
    \     the registration authority.  Such a registration authority may\n       \
    \  be a trading association or a legislative authority.\n   The signature policy\
    \ specifies a set of attributes that it\n   \"recognizes\".  This \"recognized\"\
    \ set includes all those commitment\n   types defined as part of the signature\
    \ policy as well as any\n   externally defined commitment types that the policy\
    \ may choose to\n   recognize.  Only recognized commitment types are allowed in\
    \ this\n   field.\n   The following object identifier identifies the commitment\
    \ type\n   indication attribute:\n"
- title: id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 16}\n"
- title: Commitment-Type-Indication attribute values have ASN.1 type
  contents:
  - 'Commitment-Type-Indication attribute values have ASN.1 type

    '
- title: CommitmentTypeIndication.
  contents:
  - 'CommitmentTypeIndication.

    '
- title: CommitmentTypeIndication ::= SEQUENCE {
  contents:
  - "CommitmentTypeIndication ::= SEQUENCE {\n   commitmentTypeId            CommitmentTypeIdentifier,\n\
    \   commitmentTypeQualifier     SEQUENCE SIZE (1..MAX) OF\n                  \
    \             CommitmentTypeQualifier      OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: CommitmentTypeIdentifier ::= OBJECT IDENTIFIER
  contents:
  - 'CommitmentTypeIdentifier ::= OBJECT IDENTIFIER

    '
- title: CommitmentTypeQualifier ::= SEQUENCE {
  contents:
  - "CommitmentTypeQualifier ::= SEQUENCE {\n    commitmentTypeIdentifier   CommitmentTypeIdentifier,\n\
    \    qualifier                  ANY DEFINED BY\n                             \
    \  commitmentTypeIdentifier\n"
- title: '}'
  contents:
  - "}\n   The use of any qualifiers to the commitment type is outside the scope\n\
    \   of this document.\n   The following generic commitment types are defined in\
    \ this document:\n      id-cti-ets-proofOfOrigin OBJECT IDENTIFIER ::= { iso(1)\
    \ member-\n      body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \      cti(6) 1}\n      id-cti-ets-proofOfReceipt OBJECT IDENTIFIER ::= { iso(1)\
    \ member-\n      body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \      cti(6) 2}\n      id-cti-ets-proofOfDelivery OBJECT IDENTIFIER ::= { iso(1)\n\
    \      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16)\
    \ cti(6) 3}\n      id-cti-ets-proofOfSender OBJECT IDENTIFIER ::= { iso(1) member-\n\
    \      body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n      cti(6)\
    \ 4}\n      id-cti-ets-proofOfApproval OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) cti(6) 5}\n      id-cti-ets-proofOfCreation\
    \ OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9)\n      smime(16) cti(6) 6}\n   These generic commitment types\
    \ have the following meaning:\n   Proof of origin indicates that the signer recognizes\
    \ to have created,\n   approved and sent the message.\n   Proof of receipt indicates\
    \ that signer recognizes to have received\n   the content of the message.\n  \
    \ Proof of delivery indicates that the TSP providing that indication\n   has delivered\
    \ a message in a local store accessible to the recipient\n   of the message.\n\
    \   Proof of sender indicates that the entity providing that indication\n   has\
    \ sent the message (but not necessarily created it).\n   Proof of approval indicates\
    \ that the signer has approved the content\n   of the message.\n   Proof of creation\
    \ indicates that the signer has created the message\n   (but not necessarily approved,\
    \ nor sent it).\n"
- title: 3.12.2  Signer Location attribute
  contents:
  - "3.12.2  Signer Location attribute\n   The signer-location attribute is an attribute\
    \ which specifies a\n   mnemonic for an address associated with the signer at\
    \ a particular\n   geographical (e.g., city) location.  The mnemonic is registered\
    \ in\n   the country in which the signer is located and is used in the\n   provision\
    \ of the Public Telegram Service (according to ITU-T\n   Recommendation F.1 [PTS]).\n\
    \   The signer-location attribute must be a signed attribute.\n   The following\
    \ object identifier identifies the signer-location\n   attribute:\n"
- title: id-aa-ets-signerLocation OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-signerLocation OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 17}\n"
- title: Signer-location attribute values have ASN.1 type SignerLocation.
  contents:
  - "Signer-location attribute values have ASN.1 type SignerLocation.\n   SignerLocation\
    \ ::= SEQUENCE {\n        -- at least one of the following must be present\n \
    \     countryName          [0] DirectoryString      OPTIONAL,\n        -- as used\
    \ to name a Country in X.500\n      localityName         [1] DirectoryString \
    \     OPTIONAL,\n         -- as used to name a locality in X.500\n      postalAdddress\
    \       [2] PostalAddress        OPTIONAL\n"
- title: '}'
  contents:
  - "}\n   PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString\n"
- title: 3.12.3  Signer Attributes attribute
  contents:
  - "3.12.3  Signer Attributes attribute\n   The signer-attributes attribute is an\
    \ attribute which specifies\n   additional attributes of the signer (e.g., role).\n\
    \   It may be either:\n      *  claimed attributes of the signer; or\n      *\
    \  certified attributes of the signer;\n   The signer-attributes attribute must\
    \ be a signed attribute.\n   The following object identifier identifies the signer-attribute\n\
    \   attribute:\n   id-aa-ets-signerAttr OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n\
    \       us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 18}\n   signer-attribute\
    \ attribute values have ASN.1 type SignerAttribute.\n      SignerAttribute ::=\
    \ SEQUENCE OF CHOICE {\n         claimedAttributes      [0]  ClaimedAttributes,\n\
    \         certifiedAttributes    [1]  CertifiedAttributes\n   }\n   ClaimedAttributes\
    \ ::= SEQUENCE OF Attribute\n   CertifiedAttributes ::= AttributeCertificate\n\
    \            -- as defined in X.509 : see section 10.3\n   NOTE:  The claimed\
    \ and certified attribute are imported from ITU-T\n   Recommendations X.501 [16]\
    \ and ITU-T Recommendation X.509:Draft\n   Amendment on Certificate Extensions,\
    \ October 1999.\n"
- title: 3.12.4  Content Time-Stamp attribute
  contents:
  - "3.12.4  Content Time-Stamp attribute\n   The content time-stamp attribute is\
    \ an attribute which is the time-\n   stamp of the signed data content before\
    \ it is signed.\n   The content time-stamp attribute must be a signed attribute.\n\
    \   The following object identifier identifies the signer-attribute\n   attribute:\n\
    \      id-aa-ets-contentTimestamp OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 20}\n   Content\
    \ time-stamp attribute values have ASN.1 type ContentTimestamp:\n   ContentTimestamp::=\
    \ TimeStampToken\n   The value of messageImprint field within TimeStampToken must\
    \ be a\n   hash of the value of eContent field within encapContentInfo within\n\
    \   the signedData.\n   For further information and definition of TimeStampToken\
    \ see [TSP].\n"
- title: 3.13  Support for Multiple Signatures
  contents:
  - '3.13  Support for Multiple Signatures

    '
- title: 3.13.1  Independent Signatures
  contents:
  - "3.13.1  Independent Signatures\n   Multiple independent signatures are supported\
    \ by independent\n   SignerInfo from each signer.\n   Each SignerInfo must include\
    \ all the attributes required under this\n   document and must be processed independently\
    \ by the verifier.\n"
- title: 3.13.2  Embedded Signatures
  contents:
  - "3.13.2  Embedded Signatures\n   Multiple embedded signatures are supported using\
    \ the counter-\n   signature unsigned attribute (see clause 3.10.1).  Each counter\n\
    \   signature is carried in Countersignature held as an unsigned\n   attribute\
    \ to the SignerInfo to which the counter-signature is\n   applied.\n"
- title: 4.  Validation Data
  contents:
  - "4.  Validation Data\n   This clause specifies the validation data structures\
    \ which builds on\n   the electronic signature specified in clause 3.  This includes:\n\
    \      *  Time-Stamp applied to the electronic signature value.\n      *  Complete\
    \ validation data which comprises the time-stamp of the\n         signature value,\
    \ plus references to all the certificates and\n         revocation information\
    \ used for full validation of the\n         electronic signature.\n   The following\
    \ optional eXtended forms of validation data are also\n   defined:\n      *  X-timestamp:\
    \ There are two types of time-stamp used in extended\n         validation data\
    \ defined by this document.\n         -  Type 1 -Time-Stamp which comprises a\
    \ time-stamp over the ES\n            with Complete validation data (ES-C).\n\
    \         -  Type 2 X-Time-Stamp which comprises of a time-stamp over the\n  \
    \          certification path references and the revocation information\n    \
    \        references used to support the ES-C.\n            *  X-Long: This comprises\
    \ a  Complete validation data plus\n               the actual values of all the\
    \ certificates and revocation\n               information used in the ES-C.\n\
    \            *  X-Long-Time-Stamp: This comprises a Type 1 or Type 2 X-\n    \
    \           Timestamp plus the actual values of all the certificates\n       \
    \        and revocation information used in the ES-C.\n   This clause also specifies\
    \ the data structures used in Archive\n   validation data:\n      *  Archive validation\
    \ data comprises a  Complete validation data,\n         the certificate and revocation\
    \ values (as in a X-Long\n         validation data), any other existing X-timestamps,\
    \ plus the\n         Signed User data and an additional archive time-stamp over\
    \ all\n         that data.  An archive time-stamp may be repeatedly applied\n\
    \         after long periods to maintain validity when electronic\n         signature\
    \ and timestamping algorithms weaken.\n   The additional data required to create\
    \ the forms of electronic\n   signature identified above is carried as unsigned\
    \ attributes\n   associated with an individual signature by being placed in the\n\
    \   unsignedAttrs field of SignerInfo.  Thus all the attributes defined\n   in\
    \ clause 4 are unsigned attributes.\n   NOTE:  Where multiple signatures are to\
    \ be supported, as described in\n   clause 3.13, each signature has a separate\
    \ SignerInfo.  Thus, each\n   signature requires its own unsigned attribute values\
    \ to create ES-T,\n   ES-C etc.\n"
- title: 4.1  Electronic Signature Timestamp
  contents:
  - "4.1  Electronic Signature Timestamp\n   An Electronic Signature with Timestamp\
    \ is an Electronic Signature for\n   which part, but not all, of the additional\
    \ data required for\n   validation is available (e.g., some certificates and revocation\n\
    \   information is available but not all).\n   The minimum structure Timestamp\
    \ validation data is the Signature\n   Timestamp Attribute as defined in clause\
    \ 4.1.1 over the ES signature\n   value.\n"
- title: 4.1.1  Signature Timestamp Attribute Definition
  contents:
  - "4.1.1  Signature Timestamp Attribute Definition\n   The Signature Timestamp attribute\
    \ is timestamp of the signature\n   value. It is an unsigned attribute.  Several\
    \ instances of this\n   attribute from different TSAs may occur with an electronic\
    \ signature.\n   The Signature Validation Policy specifies, in the\n   signatureTimestampDelay\
    \ field of TimestampTrustConditions, a maximum\n   acceptable time difference\
    \ which is allowed between the time\n   indicated in the signing time attribute\
    \ and the time indicated by the\n   Signature Timestamp attribute.  If this delay\
    \ is exceeded then the\n   electronic signature must be considered as invalid.\n\
    \   The following object identifier identifies the Signature Timestamp\n   attribute:\n\
    \      id-aa-signatureTimeStampToken OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n      id-aa(2) 14}\n   The\
    \ Signature timestamp attribute value has ASN.1 type\n   SignatureTimeStampToken.\n\
    \   SignatureTimeStampToken ::= TimeStampToken\n   The value of messageImprint\
    \ field within TimeStampToken must be a\n   hash of the value of signature field\
    \ within SignerInfo for the\n   signedData being timestamped.\n   For further\
    \ information and definition of TimeStampToken see [TSP].\n"
- title: 4.2  Complete Validation Data
  contents:
  - "4.2  Complete Validation Data\n   An electronic signature with complete validation\
    \ data is an\n   Electronic Signature for which all the additional data required\
    \ for\n   validation (i.e., all certificates and revocation information) is\n\
    \   available. Complete validation data (ES-C) build on the electronic\n   signature\
    \ Time-Stamp as defined above.\n   The minimum structure of a Complete validation\
    \ data is:\n      *  the Signature Time-Stamp Attribute, as defined in clause\
    \ 4.1.1;\n      *  Complete Certificate Refs, as defined in clause 4.2.1;\n  \
    \    *  Complete Revocation Refs, as defined in clause 4.2.2.\n   The Complete\
    \ validation data MAY also include the following\n   additional information, forming\
    \ a X-Long validation data, for use if\n   later validation processes may not\
    \ have access to this information:\n      *  Complete Certificate Values, as defined\
    \ in clause 4.2.3;\n      *  Complete Revocation Values, as defined in clause\
    \ 4.2.4.\n   The  Complete validation data MAY also include one of the following\n\
    \   additional attributes, forming a X-Time-Stamp validation data, to\n   provide\
    \ additional protection against later CA compromise and provide\n   integrity\
    \ of the validation data used:\n      *  ES-C Time-Stamp, as defined in clause\
    \ 4.2.5; or\n      *  Time-Stamped Certificates and CRLs references, as defined\
    \ in\n           clause 4.2.6.\n   NOTE 1: As long as the CA's are trusted such\
    \ that these keys cannot\n   be compromised or the cryptography used broken, the\
    \ ES-C provides\n   long term proof of a valid electronic signature.\n   A valid\
    \ electronic signature is an electronic signature which passes\n   validation\
    \ according to a signature validation policy.\n   NOTE 2: The ES-C provides the\
    \ following important property for long\n   standing signatures; that is having\
    \ been found once to be valid, must\n   continue to be so months or years later.\
    \  Long after the validity\n   period of the certificates have expired, or after\
    \ the user key has\n   been compromised.\n"
- title: 4.2.1  Complete Certificate Refs Attribute Definition
  contents:
  - "4.2.1  Complete Certificate Refs Attribute Definition\n   The Complete Certificate\
    \ Refs attribute is an unsigned attribute.  It\n   references the full set of\
    \ CA certificates that have been used to\n   validate a ES with Complete validation\
    \ data (ES-C) up to (but not\n   including) the signer's certificate.  Only a\
    \ single instance of this\n   attribute must occur with an electronic signature.\n\
    \   Note: The signer's certified is referenced in the signing certificate\n  \
    \ attribute (see clause 3.1).\n"
- title: id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   \
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 21}\n   The complete\
    \ certificate refs attribute value has the ASN.1 syntax\n   CompleteCertificateRefs.\n\
    \   CompleteCertificateRefs ::=  SEQUENCE OF OTHERCertID\n   OTHERCertID is defined\
    \ in clause 3.8.2.\n   The IssuerSerial that must be present in OTHERCertID. \
    \ The certHash\n   must match the hash of the certificate referenced.\n   NOTE:\
    \  Copies of the certificate values may be held using the\n   Certificate Values\
    \ attribute defined in clause 4.3.1.\n"
- title: 4.2.2  Complete Revocation Refs Attribute Definition
  contents:
  - "4.2.2  Complete Revocation Refs Attribute Definition\n   The Complete Revocation\
    \ Refs attribute is an unsigned attribute.\n   Only a single instance of this\
    \ attribute must occur with an\n   electronic signature.  It references the full\
    \ set of the CRL or OCSP\n   responses that have been used in the validation of\
    \ the signer and CA\n   certificates used in ES with Complete validation data.\n\
    \   The following object identifier identifies the CompleteRevocationRefs\n  \
    \ attribute:\n"
- title: id-aa-ets-revocationRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-revocationRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 22}\n   The complete revocation\
    \ refs attribute value has the ASN.1 syntax\n   CompleteRevocationRefs.\n   CompleteRevocationRefs\
    \ ::=  SEQUENCE OF CrlOcspRef\n   CrlOcspRef ::= SEQUENCE {\n       crlids   \
    \        [0] CRLListID        OPTIONAL,\n       ocspids          [1] OcspListID\
    \       OPTIONAL,\n       otherRev         [2] OtherRevRefs     OPTIONAL\n   }\n\
    \   CompleteRevocationRefs must contain one CrlOcspRef for the signing\n   certificate,\
    \ followed by one for each OTHERCertID in the\n   CompleteCertificateRefs attribute.\
    \  The second and subsequent\n   CrlOcspRef fields must be in the same order as\
    \ the OTHERCertID to\n   which they relate.  At least one of CRLListID or OcspListID\
    \ or\n   OtherRevRefs should be present for all but the \"trusted\" CA of the\n\
    \   certificate path.\n   CRLListID ::=  SEQUENCE {\n       crls        SEQUENCE\
    \ OF CrlValidatedID}\n   CrlValidatedID ::=  SEQUENCE {\n        crlHash     \
    \              OtherHash,\n        crlIdentifier             CrlIdentifier OPTIONAL}\n\
    \   CrlIdentifier ::= SEQUENCE {\n       crlissuer                 Name,\n   \
    \    crlIssuedTime             UTCTime,\n       crlNumber                 INTEGER\
    \ OPTIONAL\n                                               }\n   OcspListID ::=\
    \  SEQUENCE {\n       ocspResponses        SEQUENCE OF OcspResponsesID}\n   OcspResponsesID\
    \ ::=  SEQUENCE {\n       ocspIdentifier              OcspIdentifier,\n      \
    \ ocspRepHash                 OtherHash    OPTIONAL\n                        \
    \                       }\n   OcspIdentifier ::= SEQUENCE {\n        ocspResponderID\
    \    ResponderID,\n                          -- As in OCSP response data\n   \
    \     producedAt      GeneralizedTime\n                          -- As in OCSP\
    \ response data\n                                                }\n   When creating\
    \ an crlValidatedID, the crlHash is computed over the\n   entire DER encoded CRL\
    \ including the signature.  The crlIdentifier\n   would normally be present unless\
    \ the CRL can be inferred from other\n   information.\n   The crlIdentifier is\
    \ to identify the CRL using the issuer name and\n   the CRL issued time which\
    \ must correspond to the time \"thisUpdate\"\n   contained in the issued CRL.\
    \  The crlListID attribute is an unsigned\n   attribute.  In the case that the\
    \ identified CRL is a Delta CRL then\n   references to the set of CRLs to provide\
    \ a complete revocation list\n   must be included.\n   The OcspIdentifier is to\
    \ identify the OSCP response using the issuer\n   name and the time of issue of\
    \ the OCSP response which must correspond\n   to the time \"producedAt\" contained\
    \ in the issued OCSP response.\n   Since it may be needed to make the difference\
    \ between two OCSP\n   responses received within the same second, then the hash\
    \ of the\n   response contained in the OcspResponsesID may be needed to solve\
    \ the\n   ambiguity.\n   NOTE: Copies of the CRL and OCSP responses values may\
    \ be held using\n   the Revocation Values attribute defined in clause 4.3.2.\n\
    \   OtherRevRefs ::= SEQUENCE {\n      otherRevRefType      OtherRevRefType,\n\
    \      otherRevRefs         ANY DEFINED BY otherRevRefType\n   }\n   OtherRevRefType\
    \ ::= OBJECT IDENTIFIER\n   The syntax and semantics of other revocation references\
    \ is outside\n   the scope of this document.  The definition of the syntax of\
    \ the\n   other form of revocation information is as identified by\n   OtherRevRefType.\n"
- title: 4.3  Extended Validation Data
  contents:
  - '4.3  Extended Validation Data

    '
- title: 4.3.1  Certificate Values Attribute Definition
  contents:
  - "4.3.1  Certificate Values Attribute Definition\n   The Certificate Values attribute\
    \ is an unsigned attribute.  Only a\n   single instance of this attribute must\
    \ occur with an electronic\n   signature.  It holds the values of certificates\
    \ referenced in the\n   CompleteCertificateRefs attribute.\n   Note: If an Attribute\
    \ Certificate is used, it is not provided in this\n   structure but must be provided\
    \ by the signer as a signer-attributes\n   attribute (see clause 12.3).\n   The\
    \ following object identifier identifies the CertificateValues\n   attribute:\n\
    \   id-aa-ets-certValues OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n     \
    \  us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 23}\n   The certificate\
    \ values attribute value has the ASN.1 syntax\n   CertificateValues.\n   CertificateValues\
    \ ::=  SEQUENCE OF Certificate\n   Certificate is defined in RFC2459 and ITU-T\
    \ Recommendation X.509 [1])\n"
- title: 4.3.2  Revocation Values Attribute Definition
  contents:
  - "4.3.2  Revocation Values Attribute Definition\n   The Revocation Values attribute\
    \ is an unsigned attribute.  Only a\n   single instance of this attribute must\
    \ occur with an electronic\n   signature.  It holds the values of CRLs and OCSP\
    \ referenced in the\n   CompleteRevocationRefs attribute.\n   The following object\
    \ identifier identifies the Revocation Values\n   attribute:\n      id-aa-ets-revocationValues\
    \ OBJECT IDENTIFIER ::= { iso(1) member-\n      body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9) smime(16)\n      id-aa(2) 24}\n   The revocation values attribute\
    \ value has the ASN.1 syntax\n   RevocationValues.\n   RevocationValues ::=  SEQUENCE\
    \ {\n      crlVals           [0] SEQUENCE OF CertificateList     OPTIONAL,\n \
    \     ocspVals          [1] SEQUENCE OF BasicOCSPResponse   OPTIONAL,\n      otherRevVals\
    \      [2] OtherRevVals\n   }\n   OtherRevVals ::= SEQUENCE {\n      otherRevValType\
    \       OtherRevValType,\n      otherRevVals          ANY DEFINED BY otherRevValType\n\
    \   }\n   OtherRevValType ::= OBJECT IDENTIFIER\n   The syntax and semantics of\
    \ the other revocation values is outside\n   the scope of this document.  The\
    \ definition of the syntax of the\n   other form of revocation information is\
    \ as identified by\n   OtherRevRefType.\n   CertificateList is defined in RFC\
    \ 2459 [RFC2459] and in ITU-T\n   Recommendation X.509 [X509]).\n   BasicOCSPResponse\
    \ is defined in RFC 2560 [OCSP].\n"
- title: 4.3.3  ES-C Time-Stamp Attribute Definition
  contents:
  - "4.3.3  ES-C Time-Stamp Attribute Definition\n   This attribute is used for the\
    \ Type 1 X-Time-Stamped validation data.\n   The ES-C Time-Stamp attribute is\
    \ an unsigned attribute.  It is time-\n   stamp of a hash of the electronic signature\
    \ and the complete\n   validation data (ES-C).  It is a special purpose TimeStampToken\n\
    \   Attribute which time-stamps the ES-C.  Several instances instance of\n   this\
    \ attribute may occur with an electronic signature from different\n   TSAs.\n\
    \   The following object identifier identifies the ES-C Time-Stamp\n   attribute:\n\
    \      id-aa-ets-escTimeStamp OBJECT IDENTIFIER ::= { iso(1) member-\n      body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n      id-aa(2) 25}\n   The\
    \ ES-C time-stamp attribute value has the ASN.1 syntax\n   ESCTimeStampToken.\n\
    \   ESCTimeStampToken ::= TimeStampToken\n   The value of messageImprint field\
    \ within TimeStampToken must be a\n   hash of the concatenated values (without\
    \ the type or length encoding\n   for that value) of the following data objects\
    \ as present in the ES\n   with Complete validation data (ES-C):\n   *  signature\
    \ field within SignerInfo;\n   *  SignatureTimeStampToken attribute;\n   *  CompleteCertificateRefs\
    \ attribute;\n   *  CompleteRevocationRefs attribute.\n   For further information\
    \ and definition of the Time Stamp Token see\n   [TSP].\n"
- title: 4.3.4  Time-Stamped Certificates and CRLs Attribute Definition
  contents:
  - "4.3.4  Time-Stamped Certificates and CRLs Attribute Definition\n   This attribute\
    \ is used for the Type 2 X-Time-Stamp validation data.\n   A TimestampedCertsCRLsRef\
    \ attribute is an unsigned attribute.  It is\n   a list of referenced certificates\
    \ and OCSP responses/CRLs which are\n   been time-stamped to protect against certain\
    \ CA compromises.  Its\n   syntax is as follows:\n   The following object identifier\
    \ identifies the\n   TimestampedCertsCRLsRef attribute:\n      id-aa-ets-certCRLTimestamp\
    \ OBJECT IDENTIFIER ::= { iso(1) member-\n      body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9) smime(16)\n      id-aa(2) 26}\n   The attribute value has\
    \ the ASN.1 syntax TimestampedCertsCRLs.\n   TimestampedCertsCRLs ::= TimeStampToken\n\
    \   The value of messageImprint field within TimeStampToken must be a\n   hash\
    \ of the concatenated values (without the type or length encoding\n   for that\
    \ value) of the following data objects as present in the ES\n   with Complete\
    \ validation data (ES-C):\n      *  CompleteCertificateRefs attribute;\n     \
    \ *  CompleteRevocationRefs attribute.\n"
- title: 4.4  Archive Validation Data
  contents:
  - "4.4  Archive Validation Data\n   Where an electronic signature is required to\
    \ last for a very long\n   time, and a the time-stamp on an electronic signature\
    \ is in danger of\n   being invalidated due to algorithm weakness or limits in\
    \ the validity\n   period of the TSA certificate, then it may be required to time-stamp\n\
    \   the electronic signature several times.  When this is required an\n   archive\
    \ time-stamp attribute may be required.  This time-stamp may be\n   repeatedly\
    \ applied over a period of time.\n"
- title: 4.4.1  Archive Time-Stamp Attribute Definition
  contents:
  - "4.4.1  Archive Time-Stamp Attribute Definition\n   The Archive Time-Stamp attribute\
    \ is time-stamp of the user data and\n   the entire electronic signature.  If\
    \ the Certificate values and\n   Revocation Values attributes are not present\
    \ these attributes must be\n   added to the electronic signature prior to the\
    \ time-stamp.  The\n   Archive Time-Stamp attribute is an unsigned attribute.\
    \  Several\n   instances of this attribute may occur with on electronic signature\n\
    \   both over time and from different TSAs.\n   The following object identifier\
    \ identifies the Nested Archive Time-\n   Stamp attribute:\n      id-aa-ets-archiveTimestamp\
    \ OBJECT IDENTIFIER ::= { iso(1) member-\n      body(2) us(840) rsadsi(113549)\
    \ pkcs(1) pkcs-9(9) smime(16)\n      id-aa(2) 27}\n   Archive time-stamp attribute\
    \ values have the ASN.1 syntax\n   ArchiveTimeStampToken\n   ArchiveTimeStampToken\
    \ ::= TimeStampToken\n   The value of messageImprint field within Time-StampToken\
    \ must be a\n   hash of the concatenated values (without the type or length encoding\n\
    \   for that value) of the following data objects as present in the\n   electronic\
    \ signature:\n      *  encapContentInfo eContent OCTET STRING;\n      *  signedAttributes;\n\
    \      *  signature field within SignerInfo;\n      *  SignatureTimeStampToken\
    \ attribute;\n      *  CompleteCertificateRefs attribute;\n      *  CompleteRevocationData\
    \ attribute;\n      * CertificateValues attribute\n         (If not already present\
    \ this information must be included in\n         the ES-A);\n      *  RevocationValues\
    \ attribute\n         (If not already present this information must be included\
    \ in\n         the ES-A);\n      *  ESCTimeStampToken attribute if present;\n\
    \      *  TimestampedCertsCRLs attribute if present;\n      *  any previous ArchiveTimeStampToken\
    \ attributes.\n   For further information and definition of TimeStampToken see\
    \ [TSP]\n   The time-stamp should be created using stronger algorithms (or longer\n\
    \   key lengths) than in the original electronic signatures.\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1  Protection of Private Key
  contents:
  - "5.1  Protection of Private Key\n   The security of the electronic signature mechanism\
    \ defined in this\n   document depends on the privacy of the signer's private\
    \ key.\n   Implementations must take steps to ensure that private keys cannot\
    \ be\n   compromised.\n"
- title: 5.2  Choice of Algorithms
  contents:
  - "5.2  Choice of Algorithms\n   Implementers should be aware that cryptographic\
    \ algorithms become\n   weaker with time.  As new cryptoanalysis techniques are\
    \ developed and\n   computing performance improves, the work factor to break a\
    \ particular\n   cryptographic algorithm will reduce.  Therefore, cryptographic\n\
    \   algorithm implementations should be modular allowing new algorithms\n   to\
    \ be readily inserted.  That is, implementers should be prepared for\n   the set\
    \ of mandatory to implement algorithms to change over time.\n"
- title: 6.  Conformance Requirements
  contents:
  - "6.  Conformance Requirements\n   This document only defines conformance requirements\
    \ up to a ES with\n   Complete validation data (ES-C).  This means that none of\
    \ the\n   extended and archive forms of Electronic Signature (ES-X, ES-A) need\n\
    \   to be implemented to get conformance to this standard.\n   This document mandates\
    \ support for elements of the signature policy.\n"
- title: 6.1  Signer
  contents:
  - "6.1  Signer\n   A system supporting signers according to this document must,\
    \ at a\n   minimum, support generation of an electronic signature consisting of\n\
    \   the following components:\n      *  The general CMS syntax and content type\
    \ as defined in RFC 2630\n         (see clauses 4.1 and 4.2).\n      *  CMS SignedData\
    \ as defined in RFC 2630 with version set to 3 and\n         at least one SignerInfo\
    \ must be present (see clauses 4.3, 4.4,\n         4.5, 4.6).\n      *  The following\
    \ CMS Attributes as defined in RFC 2630:\n         -  ContentType; This must always\
    \ be present\n            (see clause 3.7.1);\n         -  MessageDigest; This\
    \ must always be present\n            (see clause 3.7.2);\n         -  SigningTime;\
    \ This must always be present\n            (see clause 3.7.3).\n      *  The following\
    \ ESS Attributes as defined in RFC 2634:\n         -  SigningCertificate: This\
    \ must be set as defined in clauses\n            3.8.1 and 3.8.2.\n      *  The\
    \ following Attributes as defined in clause 3.9:\n         -  SignaturePolicyIdentifier;\
    \ This must always be present.\n      *  Public Key Certificates as defined in\
    \ ITU-T Recommendation\n         X.509 [1] and profiled in RFC 2459 [7] (see clause\
    \ 9.1).\n"
- title: 6.2  Verifier using time-stamping
  contents:
  - "6.2  Verifier using time-stamping\n   A system supporting verifiers according\
    \ to this document with time-\n   stamping facilities must, at a minimum, support:\n\
    \      *  Verification of the mandated components of an electronic\n         signature,\
    \ as defined in clause 5.1.\n      *  Signature Time-Stamp attribute, as defined\
    \ in clause 4.1.1.\n      *  Complete Certificate Refs attribute, as defined in\
    \ clause\n         4.2.1.\n      *  Complete Revocation Refs Attribute, as defined\
    \ in clause\n         4.2.2.\n      *  Public Key Certificates, as defined in\
    \ ITU-T Recommendation\n         X.509 and profiled in RFC 2459.\n      *  Either\
    \ of:\n         -  Certificate Revocation Lists, as defined in ITU-T\n       \
    \     Recommendation X.509 [1] and profiled in RFC 2459 [7]; or\n         -  On-line\
    \ Certificate Status Protocol responses, as defined in\n            RFC 2560.\n"
- title: 6.3     Verifier using secure records
  contents:
  - "6.3     Verifier using secure records\n   A system supporting verifiers according\
    \ to the present document\n   shall, at a minimum, support:\n      *  Verification\
    \ of the mandated components of an electronic\n         signature, as defined\
    \ in subclause 5.1.\n      *  Complete Certificate Refs attribute, as defined\
    \ in subclause\n         4.2.1.\n      *  Complete Revocation Refs Attribute,\
    \ as defined in subclause\n         9.2.2.\n      *  A record shall be maintained,\
    \ which cannot be undetectably\n         modified, of the electronic signature\
    \ and the time when the\n         signature was first validated using the referenced\
    \ certificates\n         and revocation information.\n      *  Public Key Certificates,\
    \ as defined in ITU-T Recommendation\n         X.509 [1] and profiled in RFC 2459\
    \ [7] (see subclause 10.1).\n      *  Either of:\n         -  Certificate Revocation\
    \ Lists, as defined in ITU-T\n            Recommendation X.509 [1] and profiled\
    \ in RFC 2459 [7] Or\n         -  On-line Certificate Status Protocol, as defined\
    \ in RFC 2560\n            [8] (see subclause 10.3).\n"
- title: 7. References
  contents:
  - "7. References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [ESS] \
    \     Hoffman, P., \"Enhanced Security Services for S/MIME\", RFC\n          \
    \    2634, June 1999.\n   [CMS]      Housley, R., \"Cryptographic Message Syntax\"\
    , RFC 2630,\n              June 1999.\n   [OCSP]     Myers, M., Ankney, R., Malpani,\
    \ A., Galperin, S. and C.\n              Adams, \"On-line Status Certificate Protocol\"\
    , RFC 2560,\n              June 1999.\n   [TSP]      Adams, C., Cain, P., Pinkas,\
    \ D. and R. Zuccherato,\n              \"Internet X.509 Public Key Infrastructure\
    \ Time-Stamp\n              Protocol (TSP)\", RFC 3161, August 2001.\n   [PTS]\
    \      Public Telegram Service. ITU-T Recommendation F1.\n   [RFC2459]  Housley,\
    \ R., Ford, W., Polk, W. and D. Solo, \"Internet\n              X.509 Public Key\
    \ Infrastructure, Certificate and CRL\n              Profile\", RFC 2459, January\
    \ 1999.\n   [PKCS9]    RSA Laboratories, \"The Public-Key Cryptography Standards\n\
    \              (PKCS)\", RSA Data Security Inc., Redwood City, California,\n \
    \             November 1993 Release.\n   [ISONR]    ISO/IEC 10181-5:  Security\
    \ Frameworks in Open Systems.\n              Non-Repudiation Framework. April\
    \ 1997.\n   [TS101733] ETSI Standard TS 101 733 V.1.2.2 (2000-12) Electronic\n\
    \              Signature Formats.  Note: copies of ETSI TS 101 733 can be\n  \
    \            freely downloaded from the ETSI web site www.etsi.org.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   This Informational RFC has been produced in ETSI TC-SEC.\n\
    \      ETSI\n      F-06921 Sophia Antipolis, Cedex - FRANCE\n      650 Route des\
    \ Lucioles - Sophia Antipolis\n      Valbonne - France\n      Tel: +33 4 92 94\
    \ 42 00  Fax: +33 4 93 65 47 16\n      secretariat@etsi.fr\n      http://www.etsi.org\n\
    \   Contact Point\n      Harri Rasilainen\n      ETSI\n      650 Route des Lucioles\n\
    \      F-06921 Sophia Antipolis, Cedex\n      FRANCE\n      EMail: harri.rasilainen@etsi.fr\n\
    \      Denis Pinkas\n      Integris\n      68, Route de Versailles\n      78434\
    \ Louveciennes CEDEX\n      FRANCE\n      EMail: Denis.Pinkas@bull.net\n     \
    \ John Ross\n      Security & Standards\n      192 Moulsham Street\n      Chelmsford,\
    \ Essex\n      CM2 0LG\n      United Kingdom\n      EMail: ross@secstan.com\n\
    \      Nick Pope\n      Security & Standards\n      192 Moulsham Street\n    \
    \  Chelmsford, Essex\n      CM2 0LG\n      United Kingdom\n      EMail: pope@secstan.com\n"
- title: 'Annex A (normative): ASN.1 Definitions'
  contents:
  - "Annex A (normative): ASN.1 Definitions\n   This annex provides a summary of all\
    \ the ASN.1 syntax definitions for\n   new syntax defined in this document.\n"
- title: A.1  Definitions Using X.208 (1988) ASN.1 Syntax
  contents:
  - "A.1  Definitions Using X.208 (1988) ASN.1 Syntax\n   NOTE:  The ASN.1 module\
    \ defined in clause A.1 has precedence over\n   that defined in Annex A-2 in the\
    \ case of any conflict.\n      ETS-ElectronicSignatureFormats-88syntax { iso(1)\
    \ member-body(2)\n      us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-mod(0)\
    \ 5}\n"
- title: DEFINITIONS EXPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS EXPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: -- EXPORTS All -
  contents:
  - '-- EXPORTS All -

    '
- title: IMPORTS
  contents:
  - 'IMPORTS

    '
- title: '-- Crypographic Message Syntax (CMS): RFC 2630'
  contents:
  - "-- Crypographic Message Syntax (CMS): RFC 2630\n  ContentInfo, ContentType, id-data,\
    \ id-signedData, SignedData,\n  EncapsulatedContentInfo, SignerInfo, id-contentType,\n\
    \  id-messageDigest, MessageDigest, id-signingTime, SigningTime,\n  id-countersignature,\
    \ Countersignature\n  FROM CryptographicMessageSyntax\n    { iso(1) member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) modules(0) cms(1)\
    \ }\n"
- title: '-- ESS Defined attributes: RFC 2634'
  contents:
  - '-- ESS Defined attributes: RFC 2634

    '
- title: -- (Enhanced Security Services for S/MIME)
  contents:
  - "-- (Enhanced Security Services for S/MIME)\n  id-aa-signingCertificate, SigningCertificate,\
    \ IssuerSerial,\n  id-aa-contentReference, ContentReference,\n  id-aa-contentIdentifier,\
    \ ContentIdentifier\n  FROM ExtendedSecurityServices\n     { iso(1) member-body(2)\
    \ us(840) rsadsi(113549)\n       pkcs(1) pkcs-9(9) smime(16) modules(0) ess(2)\
    \ }\n"
- title: -- Internet X.509 Public Key Infrastructure
  contents:
  - '-- Internet X.509 Public Key Infrastructure

    '
- title: '-- Certificate and CRL Profile: RFC 2459'
  contents:
  - "-- Certificate and CRL Profile: RFC 2459\n  Certificate, AlgorithmIdentifier,\
    \ CertificateList, Name,\n  GeneralNames, GeneralName, DirectoryString,Attribute,\n\
    \  AttributeTypeAndValue, AttributeType, AttributeValue,\n  PolicyInformation,\
    \ BMPString, UTF8String\n  FROM PKIX1Explicit88\n  {iso(1) identified-organization(3)\
    \ dod(6) internet(1)\n   security(5) mechanisms(5) pkix(7) id-mod(0) id-pkix1-explicit-\n\
    \   88(1)}\n"
- title: -- X.509 '97 Authentication Framework
  contents:
  - '-- X.509 ''97 Authentication Framework

    '
- title: AttributeCertificate
  contents:
  - "AttributeCertificate\n  FROM AuthenticationFramework\n  {joint-iso-ccitt ds(5)\
    \ module(1) authenticationFramework(7) 3}\n"
- title: -- The imported AttributeCertificate is defined using the X.680 1997
  contents:
  - '-- The imported AttributeCertificate is defined using the X.680 1997

    '
- title: -- ASN.1 Syntax,
  contents:
  - '-- ASN.1 Syntax,

    '
- title: -- an equivalent using the 88 ASN.1 syntax may be used.
  contents:
  - '-- an equivalent using the 88 ASN.1 syntax may be used.

    '
- title: -- OCSP 2560
  contents:
  - '-- OCSP 2560

    '
- title: BasicOCSPResponse, ResponderID
  contents:
  - "BasicOCSPResponse, ResponderID\n  FROM OCSP {-- OID not assigned -- }\n"
- title: -- Time Stamp Protocol Work in Progress
  contents:
  - '-- Time Stamp Protocol Work in Progress

    '
- title: TimeStampToken
  contents:
  - "TimeStampToken\n  FROM PKIXTSP\n  {iso(1) identified-organization(3) dod(6) internet(1)\n\
    \  security(5) mechanisms(5) pkix(7) id-mod(0) id-mod-tsp(13)}\n"
- title: -- S/MIME Object Identifier arcs used in this document
  contents:
  - '-- S/MIME Object Identifier arcs used in this document

    '
- title: -- ===================================================
  contents:
  - '-- ===================================================

    '
- title: -- S/MIME  OID arc used in this document
  contents:
  - '-- S/MIME  OID arc used in this document

    '
- title: -- id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - '-- id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2)

    '
- title: --             us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 16 }
  contents:
  - '--             us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 16 }

    '
- title: -- S/MIME Arcs
  contents:
  - '-- S/MIME Arcs

    '
- title: -- id-mod  OBJECT IDENTIFIER ::= { id-smime 0 }
  contents:
  - '-- id-mod  OBJECT IDENTIFIER ::= { id-smime 0 }

    '
- title: -- modules
  contents:
  - '-- modules

    '
- title: -- id-ct   OBJECT IDENTIFIER ::= { id-smime 1 }
  contents:
  - '-- id-ct   OBJECT IDENTIFIER ::= { id-smime 1 }

    '
- title: -- content types
  contents:
  - '-- content types

    '
- title: -- id-aa   OBJECT IDENTIFIER ::= { id-smime 2 }
  contents:
  - '-- id-aa   OBJECT IDENTIFIER ::= { id-smime 2 }

    '
- title: -- attributes
  contents:
  - '-- attributes

    '
- title: -- id-spq  OBJECT IDENTIFIER ::= { id-smime 5 }
  contents:
  - '-- id-spq  OBJECT IDENTIFIER ::= { id-smime 5 }

    '
- title: -- signature policy qualifier
  contents:
  - '-- signature policy qualifier

    '
- title: -- id-cti  OBJECT IDENTIFIER ::= { id-smime 6 }
  contents:
  - '-- id-cti  OBJECT IDENTIFIER ::= { id-smime 6 }

    '
- title: -- commitment type identifier
  contents:
  - '-- commitment type identifier

    '
- title: -- Definitions of Object Identifier arcs used in this document
  contents:
  - '-- Definitions of Object Identifier arcs used in this document

    '
- title: -- ===========================================================
  contents:
  - '-- ===========================================================

    '
- title: -- The allocation of OIDs to specific objects are given below with the
  contents:
  - '-- The allocation of OIDs to specific objects are given below with the

    '
- title: -- associated ASN.1 syntax definition
  contents:
  - '-- associated ASN.1 syntax definition

    '
- title: -- OID used referencing electronic signature mechanisms based on this
  contents:
  - '-- OID used referencing electronic signature mechanisms based on this

    '
- title: -- standard for use with the IDUP API (see annex D)
  contents:
  - '-- standard for use with the IDUP API (see annex D)

    '
- title: id-etsi-es-IDUP-Mechanism-v1 OBJECT IDENTIFIER ::=
  contents:
  - "id-etsi-es-IDUP-Mechanism-v1 OBJECT IDENTIFIER ::=\n  { itu-t(0) identified-organization(4)\
    \ etsi(0)\n     electronic-signature-standard (1733) part1 (1)\n         idupMechanism\
    \ (4)etsiESv1(1) }\n"
- title: -- CMS Attributes Defined in this document
  contents:
  - '-- CMS Attributes Defined in this document

    '
- title: -- =======================================
  contents:
  - '-- =======================================

    '
- title: -- Mandatory Electronic Signature Attributes
  contents:
  - '-- Mandatory Electronic Signature Attributes

    '
- title: -- OtherSigningCertificate
  contents:
  - "-- OtherSigningCertificate\n    id-aa-ets-otherSigCert OBJECT IDENTIFIER ::=\
    \ { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16)\
    \ id-aa(2) 19 }\n"
- title: OtherSigningCertificate ::=  SEQUENCE {
  contents:
  - "OtherSigningCertificate ::=  SEQUENCE {\n    certs        SEQUENCE OF OtherCertID,\n\
    \    policies     SEQUENCE OF PolicyInformation OPTIONAL\n                 --\
    \ NOT USED IN THIS DOCUMENT\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherCertID ::= SEQUENCE {
  contents:
  - "OtherCertID ::= SEQUENCE {\n     otherCertHash            OtherHash,\n     issuerSerial\
    \             IssuerSerial OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherHash ::= CHOICE {
  contents:
  - "OtherHash ::= CHOICE {\n    sha1Hash     OtherHashValue,  -- This contains a\
    \ SHA-1 hash\n    otherHash    OtherHashAlgAndValue\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherHashValue ::= OCTET STRING
  contents:
  - 'OtherHashValue ::= OCTET STRING

    '
- title: OtherHashAlgAndValue ::= SEQUENCE {
  contents:
  - "OtherHashAlgAndValue ::= SEQUENCE {\n  hashAlgorithm    AlgorithmIdentifier,\n\
    \  hashValue        OtherHashValue\n"
- title: '}'
  contents:
  - '}

    '
- title: -- Signature Policy Identifier
  contents:
  - "-- Signature Policy Identifier\n    id-aa-ets-sigPolicyId OBJECT IDENTIFIER ::=\
    \ { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16)\
    \ id-aa(2) 15 }\n"
- title: '"SignaturePolicy CHOICE {'
  contents:
  - "\"SignaturePolicy CHOICE {\n         SignaturePolicyId          SignaturePolicyId,\n\
    \         SignaturePolicyImplied     SignaturePolicyImplied\n"
- title: '}'
  contents:
  - '}

    '
- title: SignaturePolicyId ::= SEQUENCE {
  contents:
  - "SignaturePolicyId ::= SEQUENCE {\n        sigPolicyIdentifier   SigPolicyId,\n\
    \        sigPolicyHash         SigPolicyHash,\n        sigPolicyQualifiers   SEQUENCE\
    \ SIZE (1..MAX) OF\n                              SigPolicyQualifierInfo OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: SignaturePolicyImplied ::= NULL
  contents:
  - 'SignaturePolicyImplied ::= NULL

    '
- title: SigPolicyId ::= OBJECT IDENTIFIER
  contents:
  - 'SigPolicyId ::= OBJECT IDENTIFIER

    '
- title: SigPolicyHash ::= OtherHashAlgAndValue
  contents:
  - 'SigPolicyHash ::= OtherHashAlgAndValue

    '
- title: SigPolicyQualifierInfo ::= SEQUENCE {
  contents:
  - "SigPolicyQualifierInfo ::= SEQUENCE {\n        sigPolicyQualifierId  SigPolicyQualifierId,\n\
    \        sigQualifier          ANY DEFINED BY sigPolicyQualifierId\n"
- title: '}'
  contents:
  - '}

    '
- title: SigPolicyQualifierId ::=
  contents:
  - "SigPolicyQualifierId ::=\n        OBJECT IDENTIFIER\n    id-spq-ets-uri OBJECT\
    \ IDENTIFIER ::= { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n\
    \    smime(16) id-spq(5) 1 }\n   SPuri ::= IA5String\n    id-spq-ets-unotice OBJECT\
    \ IDENTIFIER ::= { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n\
    \    smime(16) id-spq(5) 2 }\n   SPUserNotice ::= SEQUENCE {\n        noticeRef\
    \        NoticeReference   OPTIONAL,\n        explicitText     DisplayText   \
    \    OPTIONAL\n"
- title: '}'
  contents:
  - "}\n   NoticeReference ::= SEQUENCE {\n        organization     DisplayText,\n\
    \        noticeNumbers    SEQUENCE OF INTEGER\n"
- title: '}'
  contents:
  - "}\n   DisplayText ::= CHOICE {\n        visibleString    VisibleString  (SIZE\
    \ (1..200)),\n        bmpString        BMPString      (SIZE (1..200)),\n     \
    \   utf8String       UTF8String     (SIZE (1..200))\n"
- title: '}'
  contents:
  - '}

    '
- title: -- Optional Electronic Signature Attributes
  contents:
  - '-- Optional Electronic Signature Attributes

    '
- title: -- Commitment Type
  contents:
  - '-- Commitment Type

    '
- title: id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 16}\n"
- title: CommitmentTypeIndication ::= SEQUENCE {
  contents:
  - "CommitmentTypeIndication ::= SEQUENCE {\n  commitmentTypeId                 CommitmentTypeIdentifier,\n\
    \  commitmentTypeQualifier          SEQUENCE SIZE (1..MAX) OF\n              \
    \                     CommitmentTypeQualifier   OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: CommitmentTypeIdentifier ::= OBJECT IDENTIFIER
  contents:
  - 'CommitmentTypeIdentifier ::= OBJECT IDENTIFIER

    '
- title: CommitmentTypeQualifier ::= SEQUENCE {
  contents:
  - "CommitmentTypeQualifier ::= SEQUENCE {\n    commitmentTypeIdentifier   CommitmentTypeIdentifier,\n\
    \    qualifier                  ANY DEFINED BY commitmentTypeIdentifier\n"
- title: '}'
  contents:
  - "}\n    id-cti-ets-proofOfOrigin OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    cti(6) 1}\n    id-cti-ets-proofOfReceipt\
    \ OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2) us(840) rsadsi(113549) pkcs(1)\
    \ pkcs-9(9) smime(16)\n    cti(6) 2}\n    id-cti-ets-proofOfDelivery OBJECT IDENTIFIER\
    \ ::= { iso(1) member-\n    body(2)  us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\
    \ smime(16)\n    cti(6) 3}\n    id-cti-ets-proofOfSender OBJECT IDENTIFIER ::=\
    \ { iso(1) member-\n    body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \   cti(6) 4}\n    id-cti-ets-proofOfApproval OBJECT IDENTIFIER ::= { iso(1) member-\n\
    \    body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    cti(6) 5}\n\
    \    id-cti-ets-proofOfCreation OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    cti(6) 6}\n"
- title: -- Signer Location
  contents:
  - "-- Signer Location\n   id-aa-ets-signerLocation OBJECT IDENTIFIER ::= { iso(1)\
    \ member-\n   body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n   id-aa(2)\
    \ 17}\n"
- title: SignerLocation ::= SEQUENCE {
  contents:
  - "SignerLocation ::= SEQUENCE {\n       -- at least one of the following must be\
    \ present\n      countryName      [0]  DirectoryString    OPTIONAL,\n       --\
    \ as used to name a Country in X.500\n      localityName     [1]  DirectoryString\
    \    OPTIONAL,\n       -- as used to name a locality in X.500\n      postalAdddress\
    \   [2]  PostalAddress      OPTIONAL\n"
- title: '}'
  contents:
  - "}\n  PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString\n"
- title: -- Signer Attributes
  contents:
  - "-- Signer Attributes\n    id-aa-ets-signerAttr OBJECT IDENTIFIER ::= { iso(1)\
    \ member-body(2)\n    us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2)\
    \ 18}\n"
- title: SignerAttribute ::= SEQUENCE OF CHOICE {
  contents:
  - "SignerAttribute ::= SEQUENCE OF CHOICE {\n      claimedAttributes     [0] ClaimedAttributes,\n\
    \      certifiedAttributes   [1] CertifiedAttributes\n"
- title: '}'
  contents:
  - '}

    '
- title: ClaimedAttributes ::= SEQUENCE OF Attribute
  contents:
  - 'ClaimedAttributes ::= SEQUENCE OF Attribute

    '
- title: 'CertifiedAttributes ::= AttributeCertificate  -- as defined in X.509 :'
  contents:
  - 'CertifiedAttributes ::= AttributeCertificate  -- as defined in X.509 :

    '
- title: see section 10.3
  contents:
  - 'see section 10.3

    '
- title: -- Content Time-Stamp
  contents:
  - "-- Content Time-Stamp\n    id-aa-ets-contentTimestamp OBJECT IDENTIFIER ::= {\
    \ iso(1) member-\n    body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \    id-aa(2) 20}\n"
- title: ContentTimestamp::= TimeStampToken
  contents:
  - 'ContentTimestamp::= TimeStampToken

    '
- title: -- Validation Data
  contents:
  - '-- Validation Data

    '
- title: -- Signature Time-Stamp
  contents:
  - "-- Signature Time-Stamp\n    id-aa-signatureTimeStampToken OBJECT IDENTIFIER\
    \ ::= { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \    id-aa(2) 14}\n"
- title: SignatureTimeStampToken ::= TimeStampToken
  contents:
  - 'SignatureTimeStampToken ::= TimeStampToken

    '
- title: -- Complete Certificate Refs.
  contents:
  - '-- Complete Certificate Refs.

    '
- title: id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   \
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 21}\n"
- title: CompleteCertificateRefs ::=  SEQUENCE OF OTHERCertID
  contents:
  - 'CompleteCertificateRefs ::=  SEQUENCE OF OTHERCertID

    '
- title: -- Complete Revocation Refs
  contents:
  - "-- Complete Revocation Refs\n   id-aa-ets-revocationRefs OBJECT IDENTIFIER ::=\
    \ { iso(1) member-\n   body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n\
    \   id-aa(2) 22}\n"
- title: CompleteRevocationRefs ::=  SEQUENCE OF CrlOcspRef
  contents:
  - 'CompleteRevocationRefs ::=  SEQUENCE OF CrlOcspRef

    '
- title: CrlOcspRef ::= SEQUENCE {
  contents:
  - "CrlOcspRef ::= SEQUENCE {\n    crlids           [0] CRLListID      OPTIONAL,\n\
    \    ocspids          [1] OcspListID     OPTIONAL,\n    otherRev         [2] OtherRevRefs\
    \   OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: CRLListID ::=  SEQUENCE {
  contents:
  - "CRLListID ::=  SEQUENCE {\n    crls        SEQUENCE OF CrlValidatedID}\n"
- title: CrlValidatedID ::=  SEQUENCE {
  contents:
  - "CrlValidatedID ::=  SEQUENCE {\n     crlHash                   OtherHash,\n \
    \    crlIdentifier             CrlIdentifier OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: CrlIdentifier ::= SEQUENCE {
  contents:
  - "CrlIdentifier ::= SEQUENCE {\n    crlissuer                 Name,\n    crlIssuedTime\
    \             UTCTime,\n    crlNumber                 INTEGER OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: OcspListID ::=  SEQUENCE {
  contents:
  - "OcspListID ::=  SEQUENCE {\n    ocspResponses        SEQUENCE OF OcspResponsesID}\n"
- title: OcspResponsesID ::=  SEQUENCE {
  contents:
  - "OcspResponsesID ::=  SEQUENCE {\n    ocspIdentifier              OcspIdentifier,\n\
    \    ocspRepHash                 OtherHash    OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: OcspIdentifier ::= SEQUENCE {
  contents:
  - "OcspIdentifier ::= SEQUENCE {\n  ocspResponderID    ResponderID,\n          \
    \          -- as in OCSP response data\n  producedAt      GeneralizedTime\n  \
    \                  -- as in OCSP response data\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherRevRefs ::= SEQUENCE {
  contents:
  - "OtherRevRefs ::= SEQUENCE {\n   otherRevRefType         OtherRevRefType,\n  \
    \ otherRevRefs            ANY DEFINED BY otherRevRefType\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherRevRefType ::= OBJECT IDENTIFIER
  contents:
  - 'OtherRevRefType ::= OBJECT IDENTIFIER

    '
- title: -- Certificate Values
  contents:
  - '-- Certificate Values

    '
- title: id-aa-ets-certValues OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-certValues OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 23}\n"
- title: CertificateValues ::=  SEQUENCE OF Certificate
  contents:
  - 'CertificateValues ::=  SEQUENCE OF Certificate

    '
- title: -- Certificate Revocation Values
  contents:
  - '-- Certificate Revocation Values

    '
- title: id-aa-ets-revocationValues OBJECT IDENTIFIER ::= { iso(1) member-
  contents:
  - "id-aa-ets-revocationValues OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    id-aa(2) 24}\n"
- title: RevocationValues ::=  SEQUENCE {
  contents:
  - "RevocationValues ::=  SEQUENCE {\n   crlVals          [0] SEQUENCE OF CertificateList\
    \     OPTIONAL,\n   ocspVals         [1] SEQUENCE OF BasicOCSPResponse   OPTIONAL,\n\
    \   otherRevVals     [2] OtherRevVals\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherRevVals ::= SEQUENCE {
  contents:
  - "OtherRevVals ::= SEQUENCE {\n   otherRevValType  OtherRevValType,\n  otherRevVals\
    \      ANY DEFINED BY otherRevValType\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherRevValType ::= OBJECT IDENTIFIER
  contents:
  - 'OtherRevValType ::= OBJECT IDENTIFIER

    '
- title: -- ES-C Time-Stamp
  contents:
  - '-- ES-C Time-Stamp

    '
- title: id-aa-ets-escTimeStamp OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-escTimeStamp OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 25}\n"
- title: ESCTimeStampToken ::= TimeStampToken
  contents:
  - 'ESCTimeStampToken ::= TimeStampToken

    '
- title: -- Time-Stamped Certificates and CRLs
  contents:
  - '-- Time-Stamped Certificates and CRLs

    '
- title: id-aa-ets-certCRLTimestamp OBJECT IDENTIFIER ::= { iso(1) member-
  contents:
  - "id-aa-ets-certCRLTimestamp OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    id-aa(2) 26}\n"
- title: TimestampedCertsCRLs ::= TimeStampToken
  contents:
  - 'TimestampedCertsCRLs ::= TimeStampToken

    '
- title: -- Archive Time-Stamp
  contents:
  - '-- Archive Time-Stamp

    '
- title: id-aa-ets-archiveTimestamp OBJECT IDENTIFIER ::= { iso(1) member-
  contents:
  - "id-aa-ets-archiveTimestamp OBJECT IDENTIFIER ::= { iso(1) member-\n    body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\n    id-aa(2) 27}\n"
- title: ArchiveTimeStampToken ::= TimeStampToken
  contents:
  - 'ArchiveTimeStampToken ::= TimeStampToken

    '
- title: END -- ETS-ElectronicSignatureFormats-88syntax --
  contents:
  - 'END -- ETS-ElectronicSignatureFormats-88syntax --

    '
- title: A.2  Definitions Using X.680 1997 ASN.1 Syntax
  contents:
  - 'A.2  Definitions Using X.680 1997 ASN.1 Syntax

    '
- title: 'NOTE:  The ASN.1 module defined in clause A.1 has precedence over that'
  contents:
  - 'NOTE:  The ASN.1 module defined in clause A.1 has precedence over that

    '
- title: defined in clause A.2 in the case of any conflict.
  contents:
  - "defined in clause A.2 in the case of any conflict.\n      ETS-ElectronicSignatureFormats-97Syntax\
    \ { iso(1) member-body(2)\n      us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16)\
    \ id-mod(0) 6}\n"
- title: DEFINITIONS EXPLICIT TAGS ::=
  contents:
  - 'DEFINITIONS EXPLICIT TAGS ::=

    '
- title: BEGIN
  contents:
  - 'BEGIN

    '
- title: -- EXPORTS All -
  contents:
  - '-- EXPORTS All -

    '
- title: IMPORTS
  contents:
  - 'IMPORTS

    '
- title: '-- Cryptographic Message Syntax (CMS): RFC 2630'
  contents:
  - "-- Cryptographic Message Syntax (CMS): RFC 2630\n  ContentInfo, ContentType,\
    \ id-data, id-signedData, SignedData,\n  EncapsulatedContentInfo, SignerInfo,\
    \ id-contentType,\n  id-messageDigest, MessageDigest, id-signingTime,\n  SigningTime,\
    \ id-countersignature, Countersignature\n   FROM CryptographicMessageSyntax\n\
    \    { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16)\
    \ modules(0) cms(1) }\n"
- title: '-- ESS Defined attributes: RFC 2634 (Enhanced Security Services'
  contents:
  - '-- ESS Defined attributes: RFC 2634 (Enhanced Security Services

    '
- title: -- for S/MIME)
  contents:
  - "-- for S/MIME)\n   id-aa-signingCertificate, SigningCertificate, IssuerSerial,\n\
    \   id-aa-contentReference, ContentReference,\n   id-aa-contentIdentifier, ContentIdentifier\n\
    \  FROM ExtendedSecurityServices\n    { iso(1) member-body(2) us(840) rsadsi(113549)\n\
    \       pkcs(1) pkcs-9(9) smime(16) modules(0) ess(2) }\n"
- title: -- Internet X.509 Public Key Infrastructure
  contents:
  - '-- Internet X.509 Public Key Infrastructure

    '
- title: '- - Certificate and CRL Profile:RFC 2459'
  contents:
  - "- - Certificate and CRL Profile:RFC 2459\n   Certificate, AlgorithmIdentifier,\
    \ CertificateList, Name,\n   GeneralNames, GeneralName, DirectoryString, Attribute,\n\
    \   AttributeTypeAndValue, AttributeType, AttributeValue,\n   PolicyInformation.\n\
    \  FROM PKIX1Explicit93\n    {iso(1) identified-organization(3) dod(6) internet(1)\n\
    \     security(5) mechanisms(5) pkix(7) id-mod(0)\n     id-pkix1-explicit-88(1)}\n"
- title: -- X.509 '97 Authentication Framework
  contents:
  - "-- X.509 '97 Authentication Framework\n        AttributeCertificate\n       \
    \ FROM AuthenticationFramework\n        {joint-iso-ccitt ds(5) module(1) authenticationFramework(7)\
    \ 3}\n"
- title: -- OCSP 2560
  contents:
  - "-- OCSP 2560\n      BasicOCSPResponse, ResponderID\n  FROM OCSP\n"
- title: --  { OID not assigned }
  contents:
  - '--  { OID not assigned }

    '
- title: -- Time Stamp Protocol Work in Progress TimeStampToken
  contents:
  - "-- Time Stamp Protocol Work in Progress TimeStampToken\n  FROM PKIXTSP\n  {iso(1)\
    \ identified-organization(3) dod(6) internet(1)\n   security(5) mechanisms(5)\
    \ pkix(7) id-mod(0) id-mod-tsp(13)}\n"
- title: -- S/MIME Object Identifier arcs used in this document
  contents:
  - '-- S/MIME Object Identifier arcs used in this document

    '
- title: -- ===================================================
  contents:
  - '-- ===================================================

    '
- title: -- S/MIME  OID arc used in this document
  contents:
  - '-- S/MIME  OID arc used in this document

    '
- title: -- id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - '-- id-smime OBJECT IDENTIFIER ::= { iso(1) member-body(2)

    '
- title: --             us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 16 }
  contents:
  - '--             us(840) rsadsi(113549) pkcs(1) pkcs-9(9) 16 }

    '
- title: -- S/MIME Arcs
  contents:
  - '-- S/MIME Arcs

    '
- title: -- id-mod  OBJECT IDENTIFIER ::= { id-smime 0 }
  contents:
  - '-- id-mod  OBJECT IDENTIFIER ::= { id-smime 0 }

    '
- title: -- modules
  contents:
  - '-- modules

    '
- title: -- id-ct   OBJECT IDENTIFIER ::= { id-smime 1 }
  contents:
  - '-- id-ct   OBJECT IDENTIFIER ::= { id-smime 1 }

    '
- title: -- content types
  contents:
  - '-- content types

    '
- title: -- id-aa   OBJECT IDENTIFIER ::= { id-smime 2 }
  contents:
  - '-- id-aa   OBJECT IDENTIFIER ::= { id-smime 2 }

    '
- title: -- attributes
  contents:
  - '-- attributes

    '
- title: -- id-spq  OBJECT IDENTIFIER ::= { id-smime 5 }
  contents:
  - '-- id-spq  OBJECT IDENTIFIER ::= { id-smime 5 }

    '
- title: -- signature policy qualifier
  contents:
  - '-- signature policy qualifier

    '
- title: -- id-cti  OBJECT IDENTIFIER ::= { id-smime 6 }
  contents:
  - '-- id-cti  OBJECT IDENTIFIER ::= { id-smime 6 }

    '
- title: -- commitment type identifier
  contents:
  - '-- commitment type identifier

    '
- title: -- Definitions of Object Identifier arcs used in this document
  contents:
  - '-- Definitions of Object Identifier arcs used in this document

    '
- title: -- ===========================================================
  contents:
  - '-- ===========================================================

    '
- title: -- The allocation of OIDs to specific objects are given below with the
  contents:
  - '-- The allocation of OIDs to specific objects are given below with the

    '
- title: -- associated ASN.1 syntax definition
  contents:
  - '-- associated ASN.1 syntax definition

    '
- title: -- OID used referencing electronic signature mechanisms based on this
  contents:
  - '-- OID used referencing electronic signature mechanisms based on this

    '
- title: -- standard for use with the IDUP API (see annex D)
  contents:
  - '-- standard for use with the IDUP API (see annex D)

    '
- title: id-etsi-es-IDUP-Mechanism-v1 OBJECT IDENTIFIER ::=
  contents:
  - "id-etsi-es-IDUP-Mechanism-v1 OBJECT IDENTIFIER ::=\n  { itu-t(0) identified-organization(4)\
    \ etsi(0)\n   electronic-signature-standard (1733) part1 (1)\n   idupMechanism\
    \ (4)etsiESv1(1) }\n"
- title: -- CMS Attributes Defined in this document
  contents:
  - '-- CMS Attributes Defined in this document

    '
- title: -- =======================================
  contents:
  - '-- =======================================

    '
- title: -- Mandatory Electronic Signature Attributes
  contents:
  - '-- Mandatory Electronic Signature Attributes

    '
- title: -- OtherSigningCertificate
  contents:
  - '-- OtherSigningCertificate

    '
- title: id-aa-ets-otherSigCert OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-otherSigCert OBJECT IDENTIFIER ::= { iso(1)\n    member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 19 }\n"
- title: OtherSigningCertificate ::=  SEQUENCE {
  contents:
  - "OtherSigningCertificate ::=  SEQUENCE {\n    certs        SEQUENCE OF OtherCertID,\n\
    \    policies     SEQUENCE OF PolicyInformation OPTIONAL\n                 --\
    \ NOT USED IN THIS DOCUMENT\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherCertID ::= SEQUENCE {
  contents:
  - "OtherCertID ::= SEQUENCE {\n     otherCertHash            OtherHash,\n     issuerSerial\
    \             IssuerSerial OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherHash ::= CHOICE {
  contents:
  - "OtherHash ::= CHOICE {\n    sha1Hash OtherHashValue,  -- This contains a SHA-1\
    \ hash\n    otherHash OtherHashAlgAndValue\n"
- title: '}'
  contents:
  - '}

    '
- title: OtherHashValue ::= OCTET STRING
  contents:
  - 'OtherHashValue ::= OCTET STRING

    '
- title: OtherHashAlgAndValue ::= SEQUENCE {
  contents:
  - "OtherHashAlgAndValue ::= SEQUENCE {\n  hashAlgorithm  AlgorithmIdentifier,\n\
    \  hashValue    OtherHashValue\n"
- title: '}'
  contents:
  - '}

    '
- title: -- Signature Policy Identifier
  contents:
  - '-- Signature Policy Identifier

    '
- title: id-aa-ets-sigPolicyId OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-sigPolicyId OBJECT IDENTIFIER ::= { iso(1)\n    member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs9(9)\n    smime(16) id-aa(2) 15 }\n"
- title: '"SignaturePolicy CHOICE {'
  contents:
  - "\"SignaturePolicy CHOICE {\n         SignaturePolicyId          SignaturePolicyId,\n\
    \         SignaturePolicyImplied     SignaturePolicyImplied\n"
- title: '}'
  contents:
  - '}

    '
- title: SignaturePolicyId ::= SEQUENCE {
  contents:
  - "SignaturePolicyId ::= SEQUENCE {\n        sigPolicyIdentifier   SigPolicyId,\n\
    \        sigPolicyHash         SigPolicyHash,\n        sigPolicyQualifiers   SEQUENCE\
    \ SIZE (1..MAX) OF\n                                SigPolicyQualifierInfo OPTIONAL\n"
- title: '}'
  contents:
  - '}

    '
- title: SignaturePolicyImplied ::= NULL
  contents:
  - 'SignaturePolicyImplied ::= NULL

    '
- title: SigPolicyId ::= OBJECT IDENTIFIER
  contents:
  - 'SigPolicyId ::= OBJECT IDENTIFIER

    '
- title: SigPolicyHash ::= OtherHashAlgAndValue
  contents:
  - 'SigPolicyHash ::= OtherHashAlgAndValue

    '
- title: SigPolicyQualifierInfo ::= SEQUENCE {
  contents:
  - "SigPolicyQualifierInfo ::= SEQUENCE {\n        sigPolicyQualifierId    SIG-POLICY-QUALIFIER.&id\n\
    \                                 ({SupportedSigPolicyQualifiers}),\n        qualifier\
    \               SIG-POLICY-QUALIFIER.&Qualifier\n                            \
    \    ({SupportedSigPolicyQualifiers}\n                                 {@sigPolicyQualifierId})OPTIONAL\
    \ }\n"
- title: SupportedSigPolicyQualifiers SIG-POLICY-QUALIFIER ::=
  contents:
  - "SupportedSigPolicyQualifiers SIG-POLICY-QUALIFIER ::=\n                     \
    \      { noticeToUser | pointerToSigPolSpec }\n"
- title: SIG-POLICY-QUALIFIER ::= CLASS {
  contents:
  - "SIG-POLICY-QUALIFIER ::= CLASS {\n        &id             OBJECT IDENTIFIER UNIQUE,\n\
    \        &Qualifier      OPTIONAL }\n"
- title: WITH SYNTAX {
  contents:
  - "WITH SYNTAX {\n        SIG-POLICY-QUALIFIER-ID     &id\n        [SIG-QUALIFIER-TYPE\
    \ &Qualifier] }\n"
- title: noticeToUser SIG-POLICY-QUALIFIER ::= {
  contents:
  - "noticeToUser SIG-POLICY-QUALIFIER ::= {\n      SIG-POLICY-QUALIFIER-ID id-sqt-unotice\
    \ SIG-QUALIFIER-TYPE\n                                            SPUserNotice\n\
    \                                                        }\n"
- title: pointerToSigPolSpec SIG-POLICY-QUALIFIER ::= {
  contents:
  - "pointerToSigPolSpec SIG-POLICY-QUALIFIER ::= {\n      SIG-POLICY-QUALIFIER-ID\
    \ id-sqt-uri SIG-QUALIFIER-TYPE SPuri }\n    id-spq-ets-uri OBJECT IDENTIFIER\
    \ ::= { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n \
    \   smime(16) id-spq(5) 1 }\n   SPuri ::= IA5String\n  id-spq-ets-unotice OBJECT\
    \ IDENTIFIER ::= { iso(1)\n    member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)\n\
    \    smime(16) id-spq(5) 2 }\n   SPUserNotice ::= SEQUENCE {\n        noticeRef\
    \        NoticeReference OPTIONAL,\n        explicitText     DisplayText OPTIONAL\n"
- title: '}'
  contents:
  - "}\n   NoticeReference ::= SEQUENCE {\n        organization     DisplayText,\n\
    \        noticeNumbers    SEQUENCE OF INTEGER\n"
- title: '}'
  contents:
  - "}\n   DisplayText ::= CHOICE {\n        visibleString    VisibleString  (SIZE\
    \ (1..200)),\n        bmpString        BMPString      (SIZE (1..200)),\n     \
    \   utf8String       UTF8String     (SIZE (1..200))\n"
- title: '}'
  contents:
  - '}

    '
- title: -- Optional Electronic Signature Attributes
  contents:
  - '-- Optional Electronic Signature Attributes

    '
- title: -- Commitment Type
  contents:
  - '-- Commitment Type

    '
- title: id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-commitmentType OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 16}\n"
- title: CommitmentTypeIndication ::= SEQUENCE {
  contents:
  - "CommitmentTypeIndication ::= SEQUENCE {\n  commitmentTypeId CommitmentTypeIdentifier,\n\
    \  commitmentTypeQualifier SEQUENCE SIZE (1..MAX) OF\n                       \
    \                    CommitmentTypeQualifier\n                               \
    \            OPTIONAL}\n"
- title: CommitmentTypeIdentifier ::= OBJECT IDENTIFIER
  contents:
  - 'CommitmentTypeIdentifier ::= OBJECT IDENTIFIER

    '
- title: CommitmentTypeQualifier ::= SEQUENCE {
  contents:
  - "CommitmentTypeQualifier ::= SEQUENCE {\n        commitmentQualifierId       COMMITMENT-QUALIFIER.&id,\n\
    \        qualifier                   COMMITMENT-QUALIFIER.&Qualifier\n       \
    \                                           OPTIONAL }\n"
- title: COMMITMENT-QUALIFIER ::= CLASS {
  contents:
  - "COMMITMENT-QUALIFIER ::= CLASS {\n                    &id             OBJECT\
    \ IDENTIFIER UNIQUE,\n                    &Qualifier      OPTIONAL }\n"
- title: WITH SYNTAX {
  contents:
  - "WITH SYNTAX {\n         COMMITMENT-QUALIFIER-ID     &id\n                   \
    \     [COMMITMENT-TYPE &Qualifier] }\n  id-cti-ets-proofOfOrigin OBJECT IDENTIFIER\
    \ ::= { iso(1)\n      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n\
    \      smime(16) cti(6) 1}\n  id-cti-ets-proofOfReceipt OBJECT IDENTIFIER ::=\
    \ { iso(1)\n      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n  \
    \    smime(16) cti(6) 2}\n  id-cti-ets-proofOfDelivery OBJECT IDENTIFIER ::= {\
    \ iso(1)\n      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    \
    \  smime(16) cti(6) 3}\n  id-cti-ets-proofOfSender OBJECT IDENTIFIER ::= { iso(1)\n\
    \      member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16)\
    \ cti(6) 4}\n  id-cti-ets-proofOfApproval OBJECT IDENTIFIER ::= { iso(1)\n   \
    \   member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) cti(6)\
    \ 5}\n  id-cti-ets-proofOfCreation OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) cti(6) 6}\n"
- title: -- Signer Location
  contents:
  - '-- Signer Location

    '
- title: id-aa-ets-signerLocation OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-signerLocation OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 17}\n"
- title: SignerLocation ::= SEQUENCE {
  contents:
  - "SignerLocation ::= SEQUENCE {\n                       -- at least one of the\
    \ following must be present\n      countryName [0] DirectoryString OPTIONAL,\n\
    \        -- As used to name a Country in X.500\n      localityName [1] DirectoryString\
    \ OPTIONAL,\n         -- As used to name a locality in X.500\n      postalAdddress\
    \ [2] PostalAddress OPTIONAL }\n  PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString\n"
- title: -- Signer Attributes
  contents:
  - '-- Signer Attributes

    '
- title: id-aa-ets-signerAttr OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-signerAttr OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 18}\n"
- title: SignerAttribute ::= SEQUENCE OF CHOICE {
  contents:
  - "SignerAttribute ::= SEQUENCE OF CHOICE {\n      claimedAttributes  [0] ClaimedAttributes,\n\
    \      certifiedAttributes [1] CertifiedAttributes }\n"
- title: ClaimedAttributes ::= SEQUENCE OF Attribute
  contents:
  - 'ClaimedAttributes ::= SEQUENCE OF Attribute

    '
- title: CertifiedAttributes ::= AttributeCertificate
  contents:
  - 'CertifiedAttributes ::= AttributeCertificate

    '
- title: '-- As defined in X.509 : see section 10.3'
  contents:
  - '-- As defined in X.509 : see section 10.3

    '
- title: -- Content Time-Stamp
  contents:
  - '-- Content Time-Stamp

    '
- title: id-aa-ets-contentTimestamp OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-contentTimestamp OBJECT IDENTIFIER ::= { iso(1)\n      member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n      smime(16) id-aa(2) 20}\n"
- title: ContentTimestamp::= TimeStampToken
  contents:
  - 'ContentTimestamp::= TimeStampToken

    '
- title: -- Validation Data
  contents:
  - '-- Validation Data

    '
- title: -- Signature Time-Stamp
  contents:
  - '-- Signature Time-Stamp

    '
- title: id-aa-signatureTimeStampToken OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-signatureTimeStampToken OBJECT IDENTIFIER ::= { iso(1)\n     member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16) id-aa(2) 14}\n"
- title: SignatureTimeStampToken ::= TimeStampToken
  contents:
  - 'SignatureTimeStampToken ::= TimeStampToken

    '
- title: -- Complete Certificate Refs.
  contents:
  - '-- Complete Certificate Refs.

    '
- title: id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-certificateRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n   \
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 21}\n"
- title: CompleteCertificateRefs ::=  SEQUENCE OF OTHERCertID
  contents:
  - 'CompleteCertificateRefs ::=  SEQUENCE OF OTHERCertID

    '
- title: -- Complete Revocation Refs
  contents:
  - '-- Complete Revocation Refs

    '
- title: id-aa-ets-revocationRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-revocationRefs OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 22}\n"
- title: CompleteRevocationRefs ::=  SEQUENCE OF CrlOcspRef
  contents:
  - 'CompleteRevocationRefs ::=  SEQUENCE OF CrlOcspRef

    '
- title: CrlOcspRef ::= SEQUENCE {
  contents:
  - "CrlOcspRef ::= SEQUENCE {\n    crlids           [0] CRLListID   OPTIONAL,\n \
    \   ocspids          [1] OcspListID  OPTIONAL,\n  otherRev     [2] OtherRevRefs\
    \ OPTIONAL\n                                          }\n"
- title: CRLListID ::=  SEQUENCE {
  contents:
  - "CRLListID ::=  SEQUENCE {\n    crls        SEQUENCE OF CrlValidatedID}\n"
- title: CrlValidatedID ::=  SEQUENCE {
  contents:
  - "CrlValidatedID ::=  SEQUENCE {\n     crlHash                   OtherHash,\n \
    \    crlIdentifier             CrlIdentifier OPTIONAL}\n"
- title: CrlIdentifier ::= SEQUENCE {
  contents:
  - "CrlIdentifier ::= SEQUENCE {\n    crlissuer                 Name,\n    crlIssuedTime\
    \             UTCTime,\n    crlNumber                 INTEGER OPTIONAL\n     \
    \                                       }\n"
- title: OcspListID ::=  SEQUENCE {
  contents:
  - "OcspListID ::=  SEQUENCE {\n    ocspResponses        SEQUENCE OF OcspResponsesID}\n"
- title: OcspResponsesID ::=  SEQUENCE {
  contents:
  - "OcspResponsesID ::=  SEQUENCE {\n    ocspIdentifier              OcspIdentifier,\n\
    \    ocspRepHash                 OtherHash    OPTIONAL\n                     \
    \                       }\n"
- title: OcspIdentifier ::= SEQUENCE {
  contents:
  - "OcspIdentifier ::= SEQUENCE {\n  ocspResponderID    ResponderID,\n          \
    \              -- As in OCSP response data\n  producedAt      GeneralizedTime\n\
    \                        -- As in OCSP response data\n                       \
    \                      }\n"
- title: OtherRevRefs ::= SEQUENCE {
  contents:
  - "OtherRevRefs ::= SEQUENCE {\n   otherRevRefType  OTHER-REVOCATION-REF.&id,\n\
    \  otherRevRefs  OTHER-REVOCATION-REF.&Type\n                                \
    \              }\n"
- title: OTHER-REVOCATION-REF ::= CLASS {
  contents:
  - "OTHER-REVOCATION-REF ::= CLASS {\n    &Type,\n    &id  OBJECT IDENTIFIER UNIQUE\
    \ }\n  WITH SYNTAX {\n    &Type ID &id }\n"
- title: -- Certificate Values
  contents:
  - '-- Certificate Values

    '
- title: id-aa-ets-certValues OBJECT IDENTIFIER ::= { iso(1) member-body(2)
  contents:
  - "id-aa-ets-certValues OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n    us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9) smime(16) id-aa(2) 23}\n"
- title: CertificateValues ::=  SEQUENCE OF Certificate
  contents:
  - 'CertificateValues ::=  SEQUENCE OF Certificate

    '
- title: -- Certificate Revocation Values
  contents:
  - '-- Certificate Revocation Values

    '
- title: id-aa-ets-revocationValues OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-revocationValues OBJECT IDENTIFIER ::= { iso(1)\n     member-body(2)us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16) id-aa(2) 24}\n"
- title: RevocationValues ::=  SEQUENCE {
  contents:
  - "RevocationValues ::=  SEQUENCE {\n   crlVals          [0] SEQUENCE OF CertificateList\
    \ OPTIONAL,\n   ocspVals         [1] SEQUENCE OF BasicOCSPResponse OPTIONAL,\n\
    \   otherRevVals      [2] OtherRevVals }\n"
- title: OtherRevVals ::= SEQUENCE {
  contents:
  - "OtherRevVals ::= SEQUENCE {\n   otherRevValType  OTHER-REVOCATION-VAL.&id,\n\
    \  otherRevVals  OTHER-REVOCATION-VAL.&Type\n                                \
    \               }\n"
- title: OTHER-REVOCATION-VAL ::= CLASS {
  contents:
  - "OTHER-REVOCATION-VAL ::= CLASS {\n    &Type,\n    &id  OBJECT IDENTIFIER UNIQUE\
    \ }\n  WITH SYNTAX {\n    &Type ID &id }\n"
- title: -- ES-C Time-Stamp
  contents:
  - '-- ES-C Time-Stamp

    '
- title: id-aa-ets-escTimeStamp OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-escTimeStamp OBJECT IDENTIFIER ::= { iso(1)\n     member-body(2) us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n     smime(16) id-aa(2) 25}\n"
- title: ESCTimeStampToken ::= TimeStampToken
  contents:
  - 'ESCTimeStampToken ::= TimeStampToken

    '
- title: -- Time-Stamped Certificates and CRLs
  contents:
  - '-- Time-Stamped Certificates and CRLs

    '
- title: id-aa-ets-certCRLTimestamp OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-certCRLTimestamp OBJECT IDENTIFIER ::= { iso(1)\n    member-body(2)\
    \ us(840) rsadsi(113549) pkcs(1) pkcs-9(9)\n    smime(16) id-aa(2) 26}\n"
- title: TimestampedCertsCRLs ::= TimeStampToken
  contents:
  - 'TimestampedCertsCRLs ::= TimeStampToken

    '
- title: -- Archive Time-Stamp
  contents:
  - '-- Archive Time-Stamp

    '
- title: id-aa-ets-archiveTimestamp OBJECT IDENTIFIER ::= { iso(1)
  contents:
  - "id-aa-ets-archiveTimestamp OBJECT IDENTIFIER ::= { iso(1)\n   member-body(2)us(840)\
    \ rsadsi(113549) pkcs(1) pkcs-9(9)\n   smime(16) id-aa(2) 27}\n"
- title: ArchiveTimeStampToken ::= TimeStampToken
  contents:
  - 'ArchiveTimeStampToken ::= TimeStampToken

    '
- title: END                -- ETS-ElectronicSignatureFormats-97Syntax
  contents:
  - 'END                -- ETS-ElectronicSignatureFormats-97Syntax

    '
- title: 'Annex B (informative): General Description'
  contents:
  - "Annex B (informative): General Description\n   This annex captures the concepts\
    \ that apply to this document and the\n   rational for the elements of the specification\
    \ defined using ASN.1 in\n   the main text of this document.\n   The specification\
    \ below includes a description why the component is\n   needed, with a brief description\
    \ of the vulnerabilities and threats\n   and the manner by which they are countered.\n"
- title: B.1  The Signature Policy
  contents:
  - "B.1  The Signature Policy\n   The signature policy is a set of rules for the\
    \ creation and\n   validation of an electronic signature, under which the signature\
    \ can\n   be determined to be valid.  A given legal/contractual context may\n\
    \   recognize a particular signature policy as meeting its requirements.\n   A\
    \ signature policy may be issued, for example, by a party relying on\n   the electronic\
    \ signatures and selected by the signer for use with\n   that relying party. \
    \ Alternatively, a signature policy may be\n   established through an electronic\
    \ trading association for use amongst\n   its members. Both the signer and verifier\
    \ use the same signature\n   policy.\n   The signature policy may be explicitly\
    \ identified or may be implied\n   by the semantics of the data being signed and\
    \ other external data\n   like a contract being referenced which itself refers\
    \ to a signature\n   policy.\n   An explicit signature policy has a globally unique\
    \ reference, which\n   is bound to an electronic signature by the signer as part\
    \ of the\n   signature calculation.\n   The signature policy needs to be available\
    \ in human readable form so\n   that it can be assessed to meet the requirements\
    \ of the legal and\n   contractual context in which it is being applied.  To facilitate\
    \ the\n   automatic processing of an electronic signature the parts of the\n \
    \  signature policy which specify the electronic rules for the creation\n   and\
    \ validation of the electronic signature also needs to be in a\n   computer processable\
    \ form.\n   The signature policy thus includes the following:\n      *  Information\
    \ about the signature policy that can be displayed to\n         the signer or\
    \ the verifiers.\n      *  Rules, which apply to functionality, covered by this\
    \ document\n         (referred to as the Signature Validation Policy).\n     \
    \ *  Rules which may be implied through adoption of Certificate\n         Policies\
    \ that apply to the electronic signature (e.g., rules\n         for ensuring the\
    \ secrecy of the private signing key).\n      *  Rules, which relate to the environment\
    \ used by the signer,\n         e.g., the use of an agreed CAD (Card Accepting\
    \ Device) used in\n         conjunction with a smart card.\n   An explicit Signature\
    \ Validation Policy may be structured so that it\n   can be computer processable.\
    \  Any format of the signature validation\n   policy is allowed by this document.\
    \  However, for a given explicit\n   signature policy there must be one definitive\
    \ form that has a unique\n   binary encoded value.\n   The Signature Validation\
    \ Policy includes rules regarding use of TSPs\n   (CA, Attribute Authorities,\
    \ Time Stamping Authorities) as well as\n   rules defining the components of the\
    \ electronic signature that must\n   be provided by the signer with data required\
    \ by the verifier to\n   provide long term proof.\n"
- title: B.2  Signed Information
  contents:
  - "B.2  Signed Information\n   The information being signed may be defined as a\
    \ MIME-encapsulated\n   message which can be used to signal the format of the\
    \ content in\n   order to select the right display or application.  It can be\
    \ composed\n   of formatted text (e.g., EDIFACT), free text or of fields from\
    \ an\n   electronic form (e-form).  For example, the Adobe(tm) format \"pdf\"\n\
    \   may be used or the eXtensible Mark up Language (XML).\n"
- title: B.3  Components of an Electronic Signature
  contents:
  - 'B.3  Components of an Electronic Signature

    '
- title: B.3.1  Reference to the Signature Policy
  contents:
  - "B.3.1  Reference to the Signature Policy\n   The definition of electronic signature\
    \ includes: \"a commitment has\n   been explicitly endorsed under a \"Signature\
    \ policy\", at a given time,\n   by a signer under an identifier, e.g., a name\
    \ or a pseudonym, and\n   optionally a role\".\n   When two independent parties\
    \ want to evaluate an electronic\n   signature, it is fundamental that they get\
    \ the same result.  To meet\n   this requirement same signature policy must be\
    \ used by the signer and\n   verifier.\n   The signature policy may be explicitly\
    \ identified or may be implied\n   by the semantics of the data being signed and\
    \ other external data\n   which designate the signature policy to be used.\n \
    \  By signing over the signature policy identifier the signer explicitly\n   indicates\
    \ that he or she has applied the signature policy in creating\n   the signature.\
    \  Thus, undertakes any explicit or implied commitments.\n   In order to unambiguously\
    \ identify an explicit signature policy that\n   is to be used to verify the signature\
    \ an identifier and hash of the\n   \"Signature policy\" shall be part of the\
    \ signed data.  Additional\n   information about the explicit policy (e.g., web\
    \ reference to the\n   document) may be carried as \"qualifiers\" to the signature\
    \ policy\n   identifier.\n   When the signature policy not explicitly identified,\
    \ but is implied\n   by the semantics of the data being signed, then the signature\
    \ will\n   include a signature policy identifier that indicates that the\n   signature\
    \ policy is implied.  In this case the verification rules\n   must be determined\
    \ by using other external data which will designate\n   the signature policy to\
    \ be used.  If it may be determined from the\n   context that all the documents\
    \ to be verified refer to the same\n   signature policy, then that policy may\
    \ be predetermined or fixed\n   within the application.\n   In order to identify\
    \ unambiguously the \"Signature Validation Policy\"\n   to be used to verify the\
    \ signature an identifier and hash of the\n   \"Signature policy\" must be part\
    \ of the signed data.  Additional\n   information about the policy (e.g., web\
    \ reference to the document)\n   may be carried as \"qualifiers\" to the signature\
    \ policy identifier.\n"
- title: B.3.2  Commitment Type Indication
  contents:
  - "B.3.2  Commitment Type Indication\n   The definition of electronic signature\
    \ includes: \"a commitment has\n   been explicitly endorsed under a signature\
    \ policy, at a given time,\n   by a signer under an identifier, e.g., a name or\
    \ a pseudonym, and\n   optionally a role\".\n   The commitment type can be indicated\
    \ in the electronic signature\n   either:\n      *  explicitly using a \"commitment\
    \ type indication\" in the\n         electronic signature;\n      *  implicitly\
    \ or explicitly from the semantics of the signed data.\n   If the indicated commitment\
    \ type is explicit using a \"commitment type\n   indication\" in the electronic\
    \ signature, acceptance of a verified\n   signature implies acceptance of the\
    \ semantics of that commitment\n   type. The semantics of explicit commitment\
    \ types indications must be\n   specified either as part of the signature policy\
    \ or may be registered\n   for generic use across multiple policies.\n   If a\
    \ signature includes a commitment type indication other than one\n   of those\
    \ recognized under the signature policy the signature must be\n   treated as invalid.\n\
    \   How commitment is indicated using the semantics of the data being\n   signed\
    \ is outside the scope of this document.\n   NOTE:  Examples of commitment indicated\
    \ through the semantics of the\n   data being signed, are:\n      *  An explicit\
    \ commitment made by the signer indicated by the type\n         of data being\
    \ signed over.  Thus, the data structure being\n         signed can have an explicit\
    \ commitment within the context of\n         the application (e.g., EDIFACT purchase\
    \ order).\n      *  An implicit commitment which is a commitment made by the signer\n\
    \         because the data being signed over has specific semantics\n        \
    \ (meaning) which is only interpretable by humans, (i.e., free\n         text).\n"
- title: B.3.3  Certificate Identifier from the Signer
  contents:
  - "B.3.3  Certificate Identifier from the Signer\n   The definition of the ETSI\
    \ electronic signature includes: \"a\n   commitment has been explicitly endorsed\
    \ under a signature policy, at\n   a given time, by a signer under an identifier,\
    \ e.g., a name or a\n   pseudonym, and optionally a role.\"\n   In many real life\
    \ environments users will be able to get from\n   different CAs or even from the\
    \ same CA, different certificates\n   containing the same public key for different\
    \ names.  The prime\n   advantage is that a user can use the same private key\
    \ for different\n   purposes.  Multiple use of the private key is an advantage\
    \ when a\n   smart card is used to protect the private key, since the storage\
    \ of a\n   smart card is always limited.  When several CAs are involved, each\n\
    \   different certificate may contain a different identity, e.g., as a\n   national\
    \ or as an employee from a company.  Thus when a private key\n   is used for various\
    \ purposes, the certificate is needed to clarify\n   the context in which the\
    \ private key was used when generating the\n   signature.  Where there is the\
    \ possibility of multiple use of private\n   keys it is necessary for the signer\
    \ to indicate to the verifier the\n   precise certificate to be used.\n   Many\
    \ current schemes simply add the certificate after the signed data\n   and thus\
    \ are subject to various substitution attacks.  An example of\n   a substitution\
    \ attack is a \"bad\" CA that would issue a certificate to\n   someone with the\
    \ public key of someone else.  If the certificate from\n   the signer was simply\
    \ appended to the signature and thus not\n   protected by the signature, any one\
    \ could substitute one certificate\n   by another and the message would appear\
    \ to be signed by some one\n   else.\n   In order to counter this kind of attack,\
    \ the identifier of the signer\n   has to be protected by the digital signature\
    \ from the signer.\n   Although it does not provide the same advantages as the\
    \ previous\n   technique, another technique to counter that threat has been\n\
    \   identified.  It requires all CAs to perform a Proof Of Possession of\n   the\
    \ private key at the time of registration.  The problem with that\n   technique\
    \ is that it does not provide any guarantee at the time of\n   verification and\
    \ only some proof \"after the event\" may be obtained,\n   if and only if the\
    \ CA keeps the Proof Of Possession in audit trail.\n   In order to identify unambiguously\
    \ the certificate to be used for the\n   verification of the signature an identifier\
    \ of the certificate from\n   the signer must be part of the signed data.\n"
- title: B.3.4  Role Attributes
  contents:
  - "B.3.4  Role Attributes\n   The definition of electronic signature includes: \"\
    a commitment has\n   been explicitly endorsed under a non repudiation security\
    \ policy, at\n   a given time, by a signer under an identifier, e.g., a name or\
    \ a\n   pseudonym, and optionally a role.\"\n   While the name of the signer is\
    \ important, the position of the signer\n   within a company or an organization\
    \ can be even more important.  Some\n   contracts may only be valid if signed\
    \ by a user in a particular role,\n   e.g., a Sales Director.  In many cases whom\
    \ the sales Director really\n   is, is not that important but being sure that\
    \ the signer is empowered\n   by his company to be the Sales Director is fundamental.\n\
    \   This document defines two different ways for providing this feature:\n   \
    \   *  by placing a claimed role name in the CMS signed attributes\n         field;\n\
    \      *  by placing a attribute certificate containing a certified role\n   \
    \      name in the CMS signed attributes field.\n   NOTE:  Another possible approach\
    \ would have been to use additional\n   attributes containing the roles name(s)\
    \ in the signer's certificate.\n   However, it was decided not to follow this\
    \ approach as it breaks the\n   basic philosophy of the certificate being issued\
    \ for one primary\n   purpose.  Also, by using separate certificates for management\
    \ of the\n   signer's identity certificate and management of additional roles\
    \ can\n   simplify the management, as new identity keys need not be issued if\
    \ a\n   use of role is to be changed.\n"
- title: B.3.4.1  Claimed Role
  contents:
  - "B.3.4.1  Claimed Role\n   The signer may be trusted to state his own role without\
    \ any\n   certificate to corroborate this claim.  In which case the claimed\n\
    \   role can be added to the signature as a signed attribute.\n"
- title: B.3.4.2  Certified Role
  contents:
  - "B.3.4.2  Certified Role\n   Unlike public key certificates that bind an identifier\
    \ to a public\n   key, Attribute Certificates bind the identifier of a certificate\
    \ to\n   some attributes, like a role.  An Attribute Certificate is NOT issued\n\
    \   by a CA but by an Attribute Authority (AA).  The Attribute Authority\n   will\
    \ be most of the time under the control of an organization or a\n   company that\
    \ is best placed to know which attributes are relevant for\n   which individual.\n\
    \   The Attribute Authority may use or point to public key certificates\n   issued\
    \ by any CA, provided that the appropriate trust may be placed\n   in that CA.\
    \  Attribute Certificates may have various periods of\n   validity.  That period\
    \ may be quite short, e.g., one day.  While this\n   requires that a new Attribute\
    \ Certificate is obtained every day,\n   valid for that day, this can be advantageous\
    \ since revocation of such\n   certificates may not be needed.  When signing,\
    \ the signer will have\n   to specify which Attribute Certificate it selects.\
    \  In order to do\n   so, a reference to the Attribute Certificate will have to\
    \ be included\n   in the signed data in order to be protected by the digital signature\n\
    \   from the signer.\n   In order to identify unambiguously the attribute certificate(s)\
    \ to be\n   used for the verification of the signature an identifier of the\n\
    \   attribute certificate(s) from the signer must be part of the signed\n   data.\n"
- title: B.3.5  Signer Location
  contents:
  - "B.3.5  Signer Location\n   In some transactions the purported location of the\
    \ signer at the time\n   he or she applies his signature may need to be indicated.\
    \  For this\n   reason an optional location indicator must be able to be included.\n\
    \   In order to provide indication of the location of the signer at the\n   time\
    \ he or she applied his signature a  location attribute may be\n   included in\
    \ the signature.\n"
- title: B.3.6  Signing Time
  contents:
  - "B.3.6  Signing Time\n   The definition of electronic signature includes: \"a\
    \ commitment has\n   been explicitly endorsed under a signature policy, at a given\
    \ time,\n   by a signer under an identifier, e.g., a name or a pseudonym, and\n\
    \   optionally a role.\"\n   There are several ways to address this problem. \
    \ The solution adopted\n   in this document is to sign over a time which the signer\
    \ claims is\n   the signing time (i.e., claimed signing time) and to require a\n\
    \   trusted time stamp to be obtained when building a ES with Time-Stamp.\n  \
    \ When a verifier accepts a signature, the two times must be within\n   acceptable\
    \ limits.\n   The solution that is adopted in this document offers the major\n\
    \   advantage that electronic signatures can be generated without any\n   on-line\
    \ connection to a trusted time source (i.e., they may be\n   generated off-line).\n\
    \   Thus two dates and two signatures are required:\n      *  a signing time indicated\
    \ by the signer and which is part of the\n         data signed by the signer (i.e.,\
    \ part of the basic electronic\n         signature);\n      *  a time indicated\
    \ by a Time-Stamping Authority (TSA) which is\n         signed over the digital\
    \ signature value of the basic electronic\n         signature.  The signer, verifier\
    \ or both may obtain the TSA\n         time-stamp.\n   In order for an electronic\
    \ signature to be valid under a signature\n   policy, it must be time-stamped\
    \ by a TSA where the signing time as\n   indicated by the signer and the time\
    \ of time stamping as indicated by\n   a TSA must be \"close enough\" to meet\
    \ the requirements of the\n   signature validation policy.\n   \"Close enough\"\
    \ means a few minutes, hours or even days according to\n   the \"Signature Validation\
    \ Policy\".\n   NOTE:  The need for Time-Stamping is further explained in clause\n\
    \   B.4.5.  A further optional attribute is defined in this document to\n   time-stamp\
    \ the content, to provide proof of the existence of the\n   content, at the time\
    \ indicated by the time-stamp.\n   Using this optional attribute a trusted secure\
    \ time may be obtained\n   before the document is signed and included under the\
    \ digital\n   signature.  This solution requires an on-line connection to a trusted\n\
    \   time-stamping service before generating the signature and may not\n   represent\
    \ the precise signing time, since it can be obtained in\n   advance.  However,\
    \ this optional attribute may be used by the signer\n   to prove that the signed\
    \ object existed before the date included in\n   the time-stamp (see 3.12.3, Content\
    \ Time-Stamp).\n   Also, the signing time should be between the time indicated\
    \ by this\n   time-stamp and time indicated by the ES-T time-stamp.\n"
- title: B.3.7  Content Format
  contents:
  - "B.3.7  Content Format\n   When presenting signed data to a human user it may\
    \ be important that\n   there is no ambiguity as to the presentation of the signed\n\
    \   information to the relying party.  In order for the appropriate\n   representation\
    \ (text, sound or video) to be selected by the relying\n   party a content hint\
    \ may be indicated by the signer.  If a relying\n   party system does not use\
    \ the format specified in the content hints\n   to present the data to the relying\
    \ party, the electronic signature\n   may not be valid.\n"
- title: B.4  Components of Validation Data
  contents:
  - 'B.4  Components of Validation Data

    '
- title: B.4.1  Revocation Status Information
  contents:
  - "B.4.1  Revocation Status Information\n   A verifier will have to prove that the\
    \ certificate of the signer was\n   valid at the time of the signature.  This\
    \ can be done by either:\n      *  using Certificate Revocation Lists (CRLs);\n\
    \      *  using responses from an on-line certificate status server (for\n   \
    \      example; obtained through the OCSP protocol).\n"
- title: B.4.2  CRL Information
  contents:
  - "B.4.2  CRL Information\n   When using CRLs to get revocation information, a verifier\
    \ will have\n   to make sure that he or she gets at the time of the first\n  \
    \ verification the appropriate certificate revocation information from\n   the\
    \ signer's CA. This should be done as soon as possible to minimize\n   the time\
    \ delay between the generation and verification of the\n   signature.  This involves\
    \ checking that the signer certificate serial\n   number is not included in the\
    \ CRL.  The signer, the verifier or any\n   other third party may obtain either\
    \ this CRL.  If obtained by the\n   signer, then it must be conveyed to the verifier.\
    \  It may be\n   convenient to archive the CRL for ease of subsequent verification\
    \ or\n   arbitration.\n   Alternatively, provided the CRL is archived elsewhere\
    \ which is\n   accessible for the purpose of arbitration, then the serial number\
    \ of\n   the CRL used may be archived together with the verified electronic\n\
    \   signature.\n   It may happen that the certificate serial number appears in\
    \ the CRL\n   but with the status \"suspended\" (i.e., on hold).  In such a case,\
    \ the\n   electronic signature is not yet valid, since it is not possible to\n\
    \   know whether the certificate will or will not be revoked at the end\n   of\
    \ the suspension period.  If a decision has to be taken immediately\n   then the\
    \ signature has to be considered as invalid.  If a decision\n   can wait until\
    \ the end of the suspension period, then two cases are\n   possible:\n      *\
    \  the certificate serial number has disappeared from the list and\n         thus\
    \ the certificate can be considered as valid and that CRL\n         must be captured\
    \ and archived either by the verifier or\n         elsewhere and be kept accessible\
    \ for the purpose of\n         arbitration.\n      *  the certificate serial number\
    \ has been maintained on the list\n         with the status definitively revoked\
    \ and thus the electronic\n         signature must be considered as invalid and\
    \ discarded.\n   At this point the verifier may be convinced that he or she got\
    \ a\n   valid signature, but is not yet in a position to prove at a later\n  \
    \ time that the signature was verified as valid.  Before addressing\n   this point,\
    \ an alternative to CRL is to use OCSP responses.\n"
- title: B.4.3  OCSP Information
  contents:
  - "B.4.3  OCSP Information\n   When using OCSP to get revocation information , a\
    \ verifier will have\n   to make sure that he or she gets at the time of the first\n\
    \   verification an OCSP response that contains the status \"valid\".  This\n\
    \   should be done as soon as possible after the generation of the\n   signature.\
    \  The signer, the verifier or any other third party may\n   fetch this OCSP response.\
    \ Since OSCP responses are transient and thus\n   are not archived by any TSP\
    \ including CA, it is the responsibility of\n   every verifier to make sure that\
    \ it is stored in a safe place.  The\n   simplest way is to store them associated\
    \ with the electronic\n   signature.  An alternative would be to store them in\
    \ some storage so\n   that they can then be easily retrieved.\n   In the same\
    \ way as for the case of the CRL, it may happen that the\n   certificate is declared\
    \ as invalid but with the secondary status\n   \"suspended\".\n   In such a case,\
    \ the electronic signature is not yet valid, since it\n   is not possible to know\
    \ whether the certificate will or will not be\n   revoked at the end of the suspension\
    \ period.  If a decision has to be\n   taken immediately then the electronic signature\
    \ has to be considered\n   as invalid.  If a decision can wait until the end of\
    \ the suspension\n   period, then two cases are possible:\n      *  An OCSP response\
    \ with a valid status is obtained at a later\n         date and thus the certificate\
    \ can be considered as valid and\n         that OCSP response must be captured.\n\
    \      *  An OCSP response with an invalid status is obtained with a\n       \
    \  secondary status indicating that the certificate is\n         definitively\
    \ revoked and thus the electronic signature must be\n         considered as invalid\
    \ and discarded.\n   As in the CRL case, at this point, the verifier may be convinced\
    \ that\n   he or she got a valid signature, but is not yet in a position to\n\
    \   prove at a later time that the signature was verified as valid.\n"
- title: B.4.4  Certification Path
  contents:
  - "B.4.4  Certification Path\n   A verifier will have to prove that the certification\
    \ path was valid,\n   at the time of the signature, up to a trust point according\
    \ to the\n   naming constraints and the certificate policy constraints from the\n\
    \   \"Signature Validation Policy\".  It will be necessary to capture all\n  \
    \ the certificates from the certification path, starting with those\n   from the\
    \ signer and ending up with those of the self-signed\n   certificate from one\
    \ trusted root of the \"Signature Validation\n   Policy\".  In addition, it will\
    \ be necessary to capture the Authority\n   Revocation Lists (ARLs) to prove than\
    \ none of the CAs from the chain\n   was revoked at the time of the signature.\n\
    \   As in the OCSP case, at this point, the verifier may be convinced\n   that\
    \ he or she got a valid signature, but is not yet in a position to\n   prove at\
    \ a later time that the signature was verified as valid.\n"
- title: B.4.5  Time-Stamping for Long Life of Signature
  contents:
  - "B.4.5  Time-Stamping for Long Life of Signature\n   An important property for\
    \ long standing signatures is that a\n   signature, having been found once to\
    \ be valid, must continue to be so\n   months or years later.\n   A signer, verifier\
    \ or both may be required to provide on request,\n   proof that a digital signature\
    \ was created or verified during the\n   validity period of the all the certificates\
    \ that make up the\n   certificate path.  In this case, the signer, verifier or\
    \ both will\n   also be required to provide proof that all the user and CA\n \
    \  certificates used were not revoked when the signature was created or\n   verified.\n\
    \   It would be quite unacceptable, to consider a signature as invalid\n   even\
    \ if the keys or certificates were later compromised.  Thus there\n   is a need\
    \ to be able to demonstrate that the signature keys was valid\n   around the time\
    \ that the signature was created to provide long term\n   evidence of the validity\
    \ of a signature.\n   It could be the case that a certificate was valid at the\
    \ time of the\n   signature but revoked some time later.  In this event, evidence\
    \ must\n   be provided that the document was signed before the signing key was\n\
    \   revoked.\n   Time-Stamping by a Time Stamping Authority (TSA) can provide\
    \ such\n   evidence.  A time stamp is obtained by sending the hash value of the\n\
    \   given data to the TSA.  The returned \"time-stamp\" is a signed\n   document\
    \ that contains the hash value, the identity of the TSA, and\n   the time of stamping.\
    \  This proves that the given data existed before\n   the time of stamping.  Time-Stamping\
    \ a digital signature (by sending\n   a hash of the signature to the TSA) before\
    \ the revocation of the\n   signer's private key, provides evidence that the signature\
    \ has been\n   created before the key was revoked.\n   If a recipient wants to\
    \ hold a valid electronic signature he will\n   have to ensure that he has obtained\
    \ a valid time stamp for it, before\n   that key (and any key involved in the\
    \ validation) is revoked.  The\n   sooner the time-stamp is obtained after the\
    \ signing time, the better.\n   It is important to note that signatures may be\
    \ generated \"off-line\"\n   and time-stamped at a later time by anyone, for example\
    \ by the signer\n   or any recipient interested in the value of the signature.\
    \  The time\n   stamp can thus be provided by the signer together with the signed\n\
    \   document, or obtained by the recipient following receipt of the\n   signed\
    \ document.\n   The time stamp is NOT a component of the Electronic Signature,\
    \ but\n   the essential component of the ES with Time-Stamp.\n   It is required\
    \ in this document that signer's digital signature value\n   is time-stamped by\
    \ a trusted source, known as a Time-Stamping\n   Authority.\n   This document\
    \ requires that the signer's digital signature value is\n   time-stamped by a\
    \ trusted source before the electronic signature can\n   become a ES with Complete\
    \ validation data (ES-C).  The acceptable\n   TSAs are specified in the Signature\
    \ Validation Policy.\n   Should both the signer and verifier be required to time-stamp\
    \ the\n   signature value to meet the requirements of the signature policy, the\n\
    \   signature policy MAY specify a permitted time delay between the two\n   time\
    \ stamps.\n"
- title: B.4.6  Time-Stamping before CA Key Compromises
  contents:
  - "B.4.6  Time-Stamping before CA Key Compromises\n   Time-Stamped extended electronic\
    \ signatures are needed when there is\n   a requirement to safeguard against the\
    \ possibility of a CA key in the\n   certificate chain ever being compromised.\
    \  A verifier may be required\n   to provide on request, proof that the certification\
    \ path and the\n   revocation information used a the time of the signature were\
    \ valid,\n   even in the case where one of the issuing keys or OCSP responder\
    \ keys\n   is later compromised.\n   The current document defines two ways of\
    \ using time-stamps to protect\n   against this compromise:\n      *  Time-Stamp\
    \ the ES with Complete validation data, when an OCSP\n         response is used\
    \ to get the status of the certificate from the\n         signer.\n      *  Time-Stamp\
    \ only the certification path and revocation\n         information references\
    \ when a CRL is used to get the status of\n         the certificate from the signer.\n\
    \   NOTE:  the signer, verifier or both may obtain the time-stamp.\n"
- title: B.4.6.1  Time-Stamping the ES with Complete validation data
  contents:
  - "B.4.6.1  Time-Stamping the ES with Complete validation data\n   When an OCSP\
    \ response is used, it is necessary to time stamp in\n   particular that response\
    \ in the case the key from the responder would\n   be compromised.  Since the\
    \ information contained in the OCSP response\n   is user specific and time specific,\
    \ an individual time stamp is\n   needed for every signature received.  Instead\
    \ of placing the time\n   stamp only over the certification path references and\
    \ the revocation\n   information references, which include the OCSP response,\
    \ the time\n   stamp is placed on the ES-C.  Since the certification path and\n\
    \   revocation information references are included in the ES with\n   Complete\
    \ validation data they are also protected.  For the same\n   cryptographic price,\
    \ this provides an integrity mechanism over the ES\n   with Complete validation\
    \ data.  Any modification can be immediately\n   detected.  It should be noticed\
    \ that other means of\n   protecting/detecting the integrity of the ES with Complete\
    \ Validation\n   Data exist and could be used.\n   Although the technique requires\
    \ a time stamp for every signature, it\n   is well suited for individual users\
    \ wishing to have an integrity\n   protected copy of all the validated signatures\
    \ they have received.\n   By time-stamping the complete electronic signature,\
    \ including the\n   digital signature as well as the references to the certificates\
    \ and\n   revocation status information used to support validation of that\n \
    \  signature, the time-stamp ensures that there is no ambiguity in the\n   means\
    \ of validating that signature.\n   This technique is referred to as ES with eXtended\
    \ validation data\n   (ES-X), type 1 Time-Stamped in this document.\n   NOTE:\
    \  Trust is achieved in the references by including a hash of the\n   data being\
    \ referenced.\n   If it is desired for any reason to keep a copy of the additional\
    \ data\n   being referenced, the additional data may be attached to the\n   electronic\
    \ signature, in which case the electronic signature becomes\n   a ES-X Long as\
    \ defined by this document.\n   A ES-X Long Time-Stamped is simply the concatenation\
    \ of a ES-X Time-\n   Stamped with a copy of the additional data being referenced.\n"
- title: B.4.6.2  Time-Stamping Certificates and Revocation Information
  contents:
  - "B.4.6.2  Time-Stamping Certificates and Revocation Information\n   References\
    \ Time-Stamping each ES with Complete validation data as\n   defined above may\
    \ not be efficient, particularly when the same set of\n   CA certificates and\
    \ CRL information is used to validate many\n   signatures.\n   Time-Stamping CA\
    \ certificates will stop any attacker from issuing\n   bogus CA certificates that\
    \ could be claimed to existing before the CA\n   key was compromised.  Any bogus\
    \ time-stamped CA certificates will\n   show that the certificate was created\
    \ after the legitimate CA key was\n   compromised.  In the same way, time-stamping\
    \ CA CRLs, will stop any\n   attacker from issuing bogus CA CRLs which could be\
    \ claimed to\n   existing before the CA key was compromised.\n   Time-Stamping\
    \ of commonly used certificates and CRLs can be done\n   centrally, e.g., inside\
    \ a company or by a service provider.  This\n   method reduces the amount of data\
    \ the verifier has to time-stamp, for\n   example it could reduce to just one\
    \ time stamp per day (i.e., in the\n   case were all the signers use the same\
    \ CA and the CRL applies for the\n   whole day).  The information that needs to\
    \ be time stamped is not the\n   actual certificates and CRLs but the unambiguous\
    \ references to those\n   certificates and CRLs.\n   To comply with extended validation\
    \ data, type 2 Time-stamped, this\n   document requires the following:\n     \
    \ *  All the CA certificates references and revocation information\n         references\
    \ (i.e., CRLs) used in validating the ES-C are covered\n         by one or more\
    \ time-stamp.\n   Thus a ES-C with a time-stamp signature value at time T1, can\
    \ be\n   proved valid if all the CA and CRL references are time-stamped at\n \
    \  time T1+.\n"
- title: B.4.7  Time-Stamping for Long Life of Signature
  contents:
  - "B.4.7  Time-Stamping for Long Life of Signature\n   Advances in computing increase\
    \ the probability of being able to break\n   algorithms and compromise keys. \
    \ There is therefore a requirement to\n   be able to protect electronic signatures\
    \ against this probability.\n   Over a period of time weaknesses may occur in\
    \ the cryptographic\n   algorithms used to create an electronic signature (e.g.,\
    \ due to the\n   time available for cryptoanalysis, or improvements in\n   cryptoanalytical\
    \ techniques).  Before this such weaknesses become\n   likely, a verifier should\
    \ take extra measures to maintain the\n   validity of the electronic signature.\
    \  Several techniques could be\n   used to achieve this goal depending on the\
    \ nature of the weakened\n   cryptography.  In order to simplify, a single technique,\
    \ called\n   Archive validation data, covering all the cases is being used in\
    \ this\n   document.\n   Archive validation data consists of the Complete validation\
    \ data and\n   the complete certificate and revocation data, time stamped together\n\
    \   with the electronic signature.  The Archive validation data is\n   necessary\
    \ if the hash function and the crypto algorithms that were\n   used to create\
    \ the signature are no longer secure.  Also, if it\n   cannot be assumed that\
    \ the hash function used by the Time Stamping\n   Authority is secure, then nested\
    \ time-stamps of Archived Electronic\n   Signature are required.\n   The potential\
    \ for Trusted Service Provider (TSP) key compromise\n   should be significantly\
    \ lower than user keys, because TSP(s) are\n   expected to use stronger cryptography\
    \ and better key protection.  It\n   can be expected that new algorithms (or old\
    \ ones with greater key\n   lengths) will be used.  In such a case, a sequence\
    \ of time-stamps\n   will protect against forgery.  Each time-stamp needs to be\
    \ affixed\n   before either the compromise of the signing key or of the cracking\
    \ of\n   the algorithms used by the TSA.  TSAs (Time-Stamping Authorities)\n \
    \  should have long keys (e.g., which at the time of drafting this\n   document\
    \ was 2048 bits for the signing RSA algorithm) and/or a \"good\"\n   or different\
    \ algorithm.\n   Nested time-stamps will also protect the verifier against key\n\
    \   compromise or cracking the algorithm on the old electronic\n   signatures.\n\
    \   The process will need to be performed and iterated before the\n   cryptographic\
    \ algorithms used for generating the previous time stamp\n   are no longer secure.\
    \  Archive validation data may thus bear multiple\n   embedded time stamps.\n"
- title: B.4.8  Reference to Additional Data
  contents:
  - "B.4.8  Reference to Additional Data\n   Using type 1 or 2 of Time-Stamped extended\
    \ validation data verifiers\n   still needs to keep track of all the components\
    \ that were used to\n   validate the signature, in order to be able to retrieve\
    \ them again\n   later on.  These components may be archived by an external source\n\
    \   like a trusted service provider, in which case referenced information\n  \
    \ that is provided as part of the ES with Complete validation data\n   (ES-C)\
    \ is adequate.  The actual certificates and CRL information\n   reference in the\
    \ ES-C can be gathered when needed for arbitration.\n"
- title: B.4.9  Time-Stamping for Mutual Recognition
  contents:
  - "B.4.9  Time-Stamping for Mutual Recognition\n   In some business scenarios both\
    \ the signer and the verifier need to\n   time-stamp their own copy of the signature\
    \ value.  Ideally the two\n   time-stamps should be as close as possible to each\
    \ other.\n   Example: A contract is signed by two parties A and B representing\n\
    \   their respective organizations, to time-stamp the signer and verifier\n  \
    \ data two approaches are possible:\n      *  under the terms of the contract\
    \ pre-defined common \"trusted\"\n         TSA may be used;\n      *  if both\
    \ organizations run their own time-stamping services, A\n         and B can have\
    \ the transaction time-stamped by these two time-\n         stamping services.\
    \  In the latter case, the electronic\n         signature will only be considered\
    \ as valid, if both time-stamps\n         were obtained in due time (i.e., there\
    \ should not be a long\n         delay between obtaining the two time-stamps).\
    \  Thus, neither A\n         nor B can repudiate the signing time indicated by\
    \ their own\n         time-stamping service.\n   Therefore, A and B do not need\
    \ to agree on a common \"trusted\" TSA to\n   get a valid transaction.\n   It\
    \ is important to note that signatures may be generated \"off-line\"\n   and time-stamped\
    \ at a later time by anyone, e.g., by the signer or\n   any recipient interested\
    \ in validating the signature.  The time-stamp\n   over the signature from the\
    \ signer can thus be provided by the signer\n   together with the signed document,\
    \ and /or obtained by the verifier\n   following receipt of the signed document.\n\
    \   The business scenarios may thus dictate that one or more of the\n   long-term\
    \ signature time-stamping methods describe above be used.\n   This will need to\
    \ be part of a mutually agreed the Signature\n   Validation Policy with is part\
    \ of the overall signature policy under\n   which digital signature may be used\
    \ to support the business\n   relationship between the two parties.\n"
- title: B.4.10  TSA Key Compromise
  contents:
  - "B.4.10  TSA Key Compromise\n   TSA servers should be built in such a way that\
    \ once the private\n   signature key is installed, that there is minimal likelihood\
    \ of\n   compromise over as long as possible period.  Thus the validity period\n\
    \   for the TSA's keys should be as long as possible.\n   Both the ES-T and the\
    \ ES-C contain at least one time stamp over the\n   signer's signature.  In order\
    \ to protect against the compromise of\n   the private signature key used to produce\
    \ that time-stamp, the\n   Archive validation data can be used when a different\
    \ Time-Stamping\n   Authority key is involved to produce the additional time-stamp.\
    \  If\n   it is believed that the TSA key used in providing an earlier time-\n\
    \   stamp may ever be compromised (e.g., outside its validity period),\n   then\
    \ the ES-A should be used.  For extremely long periods this may be\n   applied\
    \ repeatedly using new TSA keys.\n"
- title: B.5  Multiple Signatures
  contents:
  - "B.5  Multiple Signatures\n   Some electronic signatures may only be valid if\
    \ they bear more than\n   one signature.  This is the case generally when a contract\
    \ is signed\n   between two parties.  The ordering of the signatures may or may\
    \ not\n   be important, i.e., one may or may not need to be applied before the\n\
    \   other. Several forms of multiple and counter signatures may need to\n   be\
    \ supported, which fall into two basic categories:\n      *  independent signatures;\n\
    \      *  embedded signatures.\n   Independent signatures are parallel signatures\
    \ where the ordering of\n   the signatures is not important.  The capability to\
    \ have more than\n   one independent signature over the same data must be provided.\n\
    \   Embedded signatures are applied one after the other and are used\n   where\
    \ the order the signatures are applied is important.  The\n   capability to sign\
    \ over signed data must be provided.\n   These forms are described in clause 3.13.\
    \  All other multiple\n   signature schemes, e.g., a signed document with a countersignature,\n\
    \   double countersignatures or multiple signatures, can be reduced to\n   one\
    \ or more occurrence of the above two cases.\n"
- title: 'Annex C (informative):  Identifiers and roles'
  contents:
  - 'Annex C (informative):  Identifiers and roles

    '
- title: C.1  Signer Name Forms
  contents:
  - "C.1  Signer Name Forms\n   The name used by the signer, held as the subject in\
    \ the signer's\n   certificate, must uniquely identify the entity.  The name must\
    \ be\n   allocated and verified on registration with the Certification\n   Authority,\
    \ either directly or indirectly through a Registration\n   Authority, before being\
    \ issued with a Certificate.\n   This document places no restrictions on the form\
    \ of the name.  The\n   subject's name may be a distinguished name, as defined\
    \ in [RFC2459],\n   held in the subject field of the certificate, or any other\
    \ name form\n   held in the X.509 subjectAltName certificate extension field.\
    \  In the\n   case that the subject has no distinguished name, the subject name\
    \ can\n   be an empty sequence and the subjectAltName extension must be\n   critical.\n"
- title: C.2  TSP Name Forms
  contents:
  - "C.2  TSP Name Forms\n   All TSP name forms (Certification Authorities, Attribute\
    \ Authorities\n   and Time-Stamping Authorities) must be in the form of a distinguished\n\
    \   name held in the subject field of the certificate.\n   The TSP name form must\
    \ include the legal jurisdiction (i.e., country)\n   under which it operates and\
    \ an identification for the organization\n   providing the service.\n"
- title: C.3  Roles and Signer Attributes
  contents:
  - "C.3  Roles and Signer Attributes\n   Where a signer signs as an individual but\
    \ wishes to also identify\n   him/herself as acting on behalf of an organization,\
    \ it may be\n   necessary to provide two independent forms of identification.\
    \  The\n   first identity, with is directly associated with the signing key\n\
    \   identifies him/her as an individual.  The second, which is managed\n   independently,\
    \ identifies that person acting as part of the\n   organization, possibly with\
    \ a given role.\n   In this case the first identity is carried in the\n   subject/subjectAltName\
    \ field of the signer's certificate as described\n   above.\n   This document\
    \ supports the following means of providing a second form\n   of identification:\n\
    \      *  by placing a secondary name field containing a claimed role in\n   \
    \      the CMS signed attributes field;\n      *  by placing an attribute certificate\
    \ containing a certified role\n         in the CMS signed attributes field.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
