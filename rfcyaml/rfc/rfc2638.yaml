- title: __initial_text__
  contents:
  - '    A Two-bit Differentiated Services Architecture for the Internet

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document was originally submitted as an internet draft in\n\
    \   November of 1997. As one of the documents predating the formation of\n   the\
    \ IETF's Differentiated Services Working Group, many of the ideas\n   presented\
    \ here, in concert with Dave Clark's subsequent presentation\n   to the December\
    \ 1997 meeting of the IETF Integrated Services Working\n   Group, were key to\
    \ the work which led to RFCs 2474 and 2475 and the\n   section on allocation remains\
    \ a timely proposal. For this reason, and\n   to provide a reference, it is being\
    \ submitted in its original form.\n   The forwarding path portion of this document\
    \ is intended as a record\n   of where we were at in late 1997 and not as an indication\
    \ of future\n   direction.\n   The postscript version of this document includes\
    \ Clark's slides as an\n   appendix. The postscript version of this document also\
    \ includes many\n   figures that aid greatly in its readability.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This document presents a differentiated services architecture\
    \ for the\n   internet. Dave Clark and Van Jacobson each presented work on\n \
    \  differentiated services at the Munich IETF meeting [2,3]. Each\n   explained\
    \ how to use one bit of the IP header to deliver a new kind\n   of service to\
    \ packets in the internet. These were two very different\n   kinds of service\
    \ with quite different policy assumptions. Ensuing\n   discussion has convinced\
    \ us that both service types have merit and\n   that both service types can be\
    \ implemented with a set of very similar\n   mechanisms. We propose an architectural\
    \ framework that permits the\n   use of both of these service types and exploits\
    \ their similarities in\n   forwarding path mechanisms. The major goals of this\
    \ architecture are\n   each shared with one or both of those two proposals: keep\
    \ the\n   forwarding path simple, push complexity to the edges of the network\n\
    \   to the extent possible, provide a service that avoids assumptions\n   about\
    \ the type of traffic using it, employ an allocation policy that\n   will be compatible\
    \ with both long-term and short-term provisioning,\n   make it possible for the\
    \ dominant Internet traffic model to remain\n   best-effort.\n   The major contributions\
    \ of this document are to present two distinct\n   service types, a set of general\
    \ mechanisms for the forwarding path\n   that can be used to implement a range\
    \ of differentiated services and\n   to propose a flexible framework for provisioning\
    \ a differentiated\n   services network. It is precisely this kind of architecture\
    \ that is\n   needed for expedient deployment of differentiated services: we need\
    \ a\n   framework and set of primitives that can be implemented in the\n   short-term\
    \ and provide interoperable services, yet can provide a\n   \"sandbox\" for experimentation\
    \ and elaboration that can lead in time\n   to more levels of differentiation\
    \ within each service as needed.\n   At the risk of belaboring an analogy, we\
    \ are motivated to provide\n   services tiers in somewhat the same fashion as\
    \ the airlines do with\n   first class, business class and coach class. The latter\
    \ also has\n   tiering built in due to the various restrictions put on the purchase.\n\
    \   A part of the analogy we want to stress is that best effort traffic,\n   like\
    \ coach class seats on an airplane, is still expected to make up\n   the bulk\
    \ of internet traffic. Business and first class carry a small\n   number of passengers,\
    \ but are quite important to the economics of the\n   airline industry. The various\
    \ economic forces and realities combine\n   to dictate the relative allocation\
    \ of the seats and to try to fill\n   the airplane. We don't expect that differentiated\
    \ services will\n   comprise all the traffic on the internet, but we do expect\
    \ that new\n   services will lead to a healthy economic and service environment.\n\
    \   This document is organized into sections describing service\n   architecture,\
    \ mechanisms, the bandwidth allocation architecture, how\n   this architecture\
    \ might interoperate with RSVP/int-serv work, and\n   gives recommendations for\
    \ deployment.\n"
- title: 2. Architecture
  contents:
  - '2. Architecture

    '
- title: 2.1 Background
  contents:
  - "2.1 Background\n   The current internet delivers one type of service, best-effort,\
    \ to\n   all traffic. A number of proposals have been made concerning the\n  \
    \ addition of enhanced services to the Internet. We focus on two\n   particular\
    \ methods of adding a differentiated level of service to IP,\n   each designated\
    \ by one bit [1,2,3]. These services represent a\n   radical departure from the\
    \ Internet's traditional service, but they\n   are also a radical departure from\
    \ traditional \"quality of service\"\n   architectures which rely on circuit-based\
    \ models. Both these\n   proposals seek to define a single common mechanism that\
    \ is used by\n   interior network routers, pushing most of the complexity and\
    \ state of\n   differentiated services to the network edges. Both use bandwidth\
    \ as\n   the resource that is being requested and allocated. Clark and\n   Wroclawski\
    \ defined an \"Assured\" service that follows \"expected\n   capacity\" usage\
    \ profiles that are statistically provisioned [3]. The\n   assurance that the\
    \ user of such a service receives is that such\n   traffic is unlikely to be dropped\
    \ as long as it stays within the\n   expected capacity profile. The exact meaning\
    \ of \"unlikely\" depends on\n   how well provisioned the service is. An Assured\
    \ service traffic flow\n   may exceed its Profile, but the excess traffic is not\
    \ given the same\n   assurance level. Jacobson defined a \"Premium\" service that\
    \ is\n   provisioned according to peak capacity Profiles that are strictly not\n\
    \   oversubscribed and that is given its own high-priority queue in\n   routers\
    \ [2]. A Premium service traffic flow is shaped and hard-\n   limited to its provisioned\
    \ peak rate and shaped so that bursts are\n   not injected into the network. Premium\
    \ service presents a \"virtual\n   wire\" where a flow's bursts may queue at the\
    \ shaper at the edge of\n   the network, but thereafter only in proportion to\
    \ the indegree of\n   each router. Despite their many similarities, these two\
    \ approaches\n   result in fundamentally different services. The former uses buffer\n\
    \   management to provide a \"better effort\" service while the latter\n   creates\
    \ a service with little jitter and queueing delay and no need\n   for queue management\
    \ on the Premium packets's queue.\n   An Assured service was introduced in [3]\
    \ by Clark and Wroclawski,\n   though we have made some alterations in its specification\
    \ for our\n   architecture. Further refinements and an \"Expected Capacity\"\n\
    \   framework are given in Clark and Fang [10].  This framework is\n   focused\
    \ on \"providing different levels of best-effort service at\n   times of network\
    \ congestion\" but also mentions that it is possible to\n   have a separate router\
    \ queue to implement a \"guaranteed\" level of\n   assurance.  We believe this\
    \ framework and our Two-bit architecture\n   are compatible but this needs further\
    \ exploration.  As Premium\n   service has not been documented elsewhere, we describe\
    \ it next and\n   follow this with a description of the two-bit architecture.\n"
- title: 2.2 Premium service
  contents:
  - "2.2 Premium service\n   In [2], a Premium service was presented that is fundamentally\n\
    \   different from the Internet's current best effort service. This\n   service\
    \ is not meant to replace best effort but primarily to meet an\n   emerging demand\
    \ for a commercial service that can share the network\n   with best effort traffic.\
    \ This is desirable economically, since the\n   same network can be used for both\
    \ kinds of traffic. It is expected\n   that Premium traffic would be allocated\
    \ a small percentage of the\n   total network capacity, but that it would be priced\
    \ much higher. One\n   use of such a service might be to create \"virtual leased\
    \ lines\",\n   saving the cost of building and maintaining a separate network.\n\
    \   Premium service, not unlike a standard telephone line, is a capacity\n   which\
    \ the customer expects to be there when the receiver is lifted,\n   although it\
    \ may, depending on the household, be idle a good deal of\n   the time.  Provisioning\
    \ Premium traffic in this way reduces the\n   capacity of the best effort internet\
    \ by the amount of Premium\n   allocated, in the worst case, thus it would have\
    \ to be priced\n   accordingly. On the other hand, whenever that capacity is not\
    \ being\n   used it is available to best effort traffic. In contrast to normal\n\
    \   best effort traffic which is bursty and requires queue management to\n   deal\
    \ fairly with congestive episodes, this Premium service by design\n   creates\
    \ very regular traffic patterns and small or nonexistent\n   queues.\n   Premium\
    \ service levels are specified as a desired peak bit-rate for a\n   specific flow\
    \ (or aggregation of flows). The user contract with the\n   network is not to\
    \ exceed the peak rate. The network contract is that\n   the contracted bandwidth\
    \ will be available when traffic is sent.\n   First-hop routers (or other edge\
    \ devices) filter the packets entering\n   the network, set the Premium bit of\
    \ those that match a Premium\n   service specification, and perform traffic shaping\
    \ on the flow that\n   smooths all traffic bursts before they enter the network.\
    \ This\n   approach requires no changes in hosts. A compliant router along the\n\
    \   path needs two levels of priority queueing, sending all packets with\n   the\
    \ Premium bit set first. Best-effort traffic is unmarked and queued\n   and sent\
    \ at the lower priority. This results in two \"virtual\n   networks\": one which\
    \ is identical to today's Internet with buffers\n   designed to absorb traffic\
    \ bursts; and one where traffic is limited\n   and shaped to a contracted peak-rate,\
    \ but packets move through a\n   network of queues where they experience almost\
    \ no queueing delay.\n   In this architecture, forwarding path decisions are made\
    \ separately\n   and more simply than the setting up of the service agreements\
    \ and\n   traffic profiles. With the exception of policing and shaping at\n  \
    \ administrative or \"trust\" boundaries, the only actions that need to\n   be\
    \ handled in the forwarding path are to classify a packet into one\n   of two\
    \ queues on a single bit and to service the two queues using\n   simple priority.\
    \ Shaping must include both rate and burst parameters;\n   the latter is expected\
    \ to be small, in the one or two packet range.\n   Policing at boundaries enforces\
    \ rate compliance, and may be\n   implemented by a simple token bucket. The admission\
    \ and set-up\n   procedures are expected to evolve, in time, to be dynamically\n\
    \   configurable and fairly complex while the mechanisms in the\n   forwarding\
    \ path remain simple.\n   A Premium service built on this architecture can be\
    \ deployed in a\n   useful way once the forwarding path mechanisms are in place\
    \ by making\n   static allocations. Traffic flows can be designated for special\n\
    \   treatment through network management configuration. Traffic flows\n   should\
    \ be designated by the source, the destination, or any\n   combination of fields\
    \ in the packet header. First-hop (of leaf)\n   routers will filter flows on all\
    \ or part of the header tuple\n   consisting of the source IP address, destination\
    \ IP address, protocol\n   identifier, source port number, and destination port\
    \ number. Based on\n   this classification, a first-hop router performs traffic\
    \ shaping and\n   sets the designated Premium bit of the precedence field. End-hosts\n\
    \   are thus not required to be \"differentiated services aware\", though\n  \
    \ if and when end-systems become universally \"aware\", they might do\n   their\
    \ own shaping and first-hop routers merely police.\n   Adherence to the subscribed\
    \ rate and burst size must be enforced at\n   the entry to the network, either\
    \ by the end-system or by the first-\n   hop router. Within an intranet, administrative\
    \ domain, or \"trust\n   region\" the packets can then be classified and serviced\
    \ solely on the\n   Premium bit. Where packets cross a boundary, the policing\
    \ function is\n   critical. The entered region will check the prioritized packet\
    \ flow\n   for conformance to a rate the two regions have agreed upon,\n   discarding\
    \ packets that exceed the rate. It is thus in the best\n   interests of a region\
    \ to ensure conformance to the agreed-upon rate\n   at the egress. This requirement\
    \ means that Premium traffic is burst-\n   free and, together with the no oversubscription\
    \ rule, leads directly\n   to the observation that Premium queues can easily be\
    \ sized to prevent\n   the need to drop packets and thus the need for a queue\
    \ management\n   policy. At each router, the largest queue size is related to\
    \ the in-\n   degree of other routers and is thus quite small, on the order of\
    \ ten\n   packets.\n   Premium bandwidth allocations must not be oversubscribed\
    \ as they\n   represent a commitment by the network and should be priced\n   accordingly.\
    \ Note that, in this architecture, Premium traffic will\n   also experience considerably\
    \ less delay variation than either best\n   effort traffic or the Assured data\
    \ traffic of [3]. Premium rates\n   might be configured on a subscription basis\
    \ in the near-term, or on-\n   demand when dynamic set-up or signaling is available.\n\
    \   Figure 1 shows how a Premium packet flow is established within a\n   particular\
    \ administrative domain, Company A, and sent across the\n   access link to Company\
    \ A's ISP. Assume that the host's first-hop\n   router has been configured to\
    \ match a flow from the host's IP address\n   to a destination IP address that\
    \ is reached through ISP. A Premium\n   flow is configured from a host with a\
    \ rate which is both smaller than\n   the total Premium allocation Company A has\
    \ from the ISP, r bytes per\n   second, and smaller than the amount of that allocation\
    \ has been\n   assigned to other hosts in Company A. Packets are not marked in\
    \ any\n   special way when they leave the host. The first-hop router clears the\n\
    \   Premium bit on all arriving packets, sets the Premium bit on all\n   packets\
    \ in the designated flow, shapes packets in the Premium flow to\n   a configured\
    \ rate and burst size, queues best-effort unmarked packets\n   in the low priority\
    \ queue and shaped Premium packets in the high\n   priority queue, and sends packets\
    \ from those two queues at simple\n   priority. Intermediate routers internal\
    \ to Company A enqueue packets\n   in one of two output queues based on the Premium\
    \ bit and service the\n   queues with simple priority. Border routers perform\
    \ quite different\n   tasks, depending on whether they are processing an egress\
    \ flow or an\n   ingress flow. An egress border router may perform some reshaping\
    \ on\n   the aggregate Premium traffic to conform to rate r, depending on the\n\
    \   number of Premium flows aggregated. Ingress border routers only need\n   to\
    \ perform a simple policing function that can be implemented with a\n   token\
    \ bucket. In the example, the ISP accepts all Premium packets\n   from A as long\
    \ as the flow does not exceed r bytes per second.\n   Figure 1. Premium traffic\
    \ flow from end-host to organization's ISP\n"
- title: 2.3 Two-bit differentiated services architecture
  contents:
  - "2.3 Two-bit differentiated services architecture\n   Clark's and Jacobson's proposals\
    \ are markedly similar in the location\n   and type of functional blocks that\
    \ are needed to implement them.\n   Furthermore, they implement quite different\
    \ services which are not\n   incompatible in a network. The Premium service implements\
    \ a\n   guaranteed peak bandwidth service with negligible queueing delay that\n\
    \   cannot starve best effort traffic and can be allocated in a fairly\n   straightforward\
    \ fashion. This service would seem to have a strong\n   appeal for commercial\
    \ applications, video broadcasts, voice-over-IP,\n   and VPNs. On the other hand,\
    \ this service may prove both too\n   restrictive (in its hard limits) and overdesigned\
    \ (no overallocation)\n   for some applications. The Assured service implements\
    \ a service that\n   has the same delay characteristics as (undropped) best effort\
    \ packets\n   and the firmness of its guarantee depends on how well individual\n\
    \   links are provisioned for bursts of Assured packets. On the other\n   hand,\
    \ it permits traffic flows to use any additional available\n   capacity without\
    \ penalty and occasional dropped packets for short\n   congestive periods may\
    \ be acceptable to many users. This service\n   might be what an ISP would provide\
    \ to individual customers who are\n   willing to pay a bit more for internet service\
    \ that seems unaffected\n   by congestive periods. Both services are only as good\
    \ as their\n   admission control schemes, though this can be more difficult for\n\
    \   traffic which is not peak-rate allocated.\n   There may be some additional\
    \ benefits of deploying both services. To\n   the extent that Premium service\
    \ is a conservative allocation of\n   resources, unused bandwidth that had been\
    \ allocated to Premium might\n   provide some \"headroom\" for underallocated\
    \ or burst periods of\n   Assured traffic or for best effort. Network elements\
    \ that deploy both\n   services will be performing RED queue management on all\
    \ non-Premium\n   traffic, as suggested in [4], and the effects of mixing the\
    \ Premium\n   streams with best effort might serve to reduce burstiness in the\n\
    \   latter. A strength of the Assured service is that it allows bursts to\n  \
    \ happen in their natural fashion, but this also makes the\n   provisioning, admission\
    \ control and allocation problem more difficult\n   so it may take more time and\
    \ experimentation before this admission\n   policy for this service is completely\
    \ defined. A Premium service\n   could be deployed that employs static allocations\
    \ on peak rates with\n   no statistical sharing.\n   As there appear to be a number\
    \ of advantages to an architecture that\n   permits these two types of service\
    \ and because, as we shall see, they\n   can be made to share many of the same\
    \ mechanisms, we propose\n   designating two bit-patterns from the IP header precedence\
    \ field. We\n   leave the explicit designation of these bit-patterns to the standards\n\
    \   process thus we use the shorthand notation of denoting each pattern\n   by\
    \ a bit, one we will call the Premium or P-bit, the other we call\n   the assurance\
    \ or A-bit. It is possible for a network to implement\n   only one of these services\
    \ and to have network elements that only\n   look at the one applicable bit, but\
    \ we focus on the two service\n   architecture. Further, we assume the case where\
    \ no changes are made\n   in the hosts, appropriate packet marking all being done\
    \ in the\n   network, at the first-hop, or leaf, router. We describe the\n   forwarding\
    \ path architecture in this section, assuming that the\n   service has been allocated\
    \ through mechanisms we will discuss in\n   section 4.\n   In a more general sense,\
    \ Premium service denotes packets that are\n   enqueued at a higher priority than\
    \ the ordinary best-effort queue.\n   Similarly, Assured service denotes packets\
    \ that are treated\n   preferentially with respect to the dropping probability\
    \ within the\n   \"normal\" queue. There are a number of ways to add more service\
    \ levels\n   within each of these service types [7], but this document takes the\n\
    \   position of specifying the base-level services of Premium and\n   Assured.\n\
    \   The forwarding path mechanisms can be broken down into those that\n   happen\
    \ at the input interface, before packet forwarding, and those\n   that happen\
    \ at the output interface, after packet forwarding.\n   Intermediate routers only\
    \ need to implement the post packet\n   forwarding functions, while leaf and border\
    \ routers must perform\n   functions on arriving packets before forwarding. We\
    \ describe the\n   mechanisms this way for illustration; other ways of composing\
    \ their\n   functions are possible.\n   Leaf routers are configured with a traffic\
    \ profile for a particular\n   flow based on its packet header. This functionality\
    \ has been defined\n   by the RSVP Working Group in RFC 2205. Figure 2 shows what\
    \ happens to\n   a packet that arrives at the leaf router, before it is passed\
    \ to the\n   forwarding engine. All arriving packets must have both the A-bit\
    \ and\n   the P-bit cleared after which packets are classified on their header.\n\
    \   If the header does not match any configured values, it is immediately\n  \
    \ forwarded. Matched flows pass through individual Markers that have\n   been\
    \ configured from the usage profile for that flow: service class\n   (Premium\
    \ or Assured), rate (peak for Premium, \"expected\" for\n   Assured), and permissible\
    \ burst size (may be optional for Premium).\n   Assured flow packets emerge from\
    \ the Marker with their A-bits set\n   when the flow is in conformance to its\
    \ Profile, but the flow is\n   otherwise unchanged. For a Premium flow, the Marker\
    \ will hold packets\n   when necessary to enforce their configured rate. Thus\
    \ Premium flow\n   packets emerge from the Marker in a shaped flow with their\
    \ P-bits\n   set. (It is possible for Premium flow packets to be dropped inside\
    \ of\n   the Marker as we describe below.) Packets are passed to the\n   forwarding\
    \ engine when they emerge from Markers. Packets that have\n   either their P or\
    \ A bits set we will refer to as Marked packets.\n   Figure 2. Block diagram of\
    \ leaf router input functionality\n   Figure 3 shows the inner workings of the\
    \ Marker. For both Assured and\n   Premium packets, a token bucket \"fills\" at\
    \ the flow rate that was\n   specified in the usage profile. For Assured service,\
    \ the token bucket\n   depth is set by the Profile's burst size. For Premium service,\
    \ the\n   token bucket depth must be limited to the equivalent of only one or\n\
    \   two packets. (We suggest a depth of one packet in early deployments.)\n  \
    \ When a token is present, Assured flow packets have their A-bit set to\n   one,\
    \ otherwise the packet is passed to the forwarding engine. For\n   Premium-configured\
    \ Marker, arriving packets that see a token present\n   have their P-bits set\
    \ and are forwarded, but when no token is\n   present, Premium flow packets are\
    \ held until a token arrives. If a\n   Premium flow bursts enough to overflow\
    \ the holding queue, its packets\n   will be dropped. Though the flow set up data\
    \ can be used to configure\n   a size limit for the holding queue (this would\
    \ be the meaning of a\n   \"burst\" in Premium service), it is not necessary.\
    \ Unconfigured\n   holding queues should be capable of holding at least two bandwidth-\n\
    \   delay products, adequate for TCP connections. A smaller value might\n   be\
    \ used to suit delay requirements of a specific application.\n   Figure 3. Markers\
    \ to implement the two different services\n   In practice, the token bucket should\
    \ be implemented in bytes and a\n   token is considered to be present if the number\
    \ of bytes in the\n   bucket is equal or larger to the size of the packet. For\
    \ Premium, the\n   bucket can only be allowed to fill to the maximum packet size;\
    \ while\n   Assured may fill to the configured burst parameter. Premium traffic\n\
    \   is held until a sufficient byte credit has accumulated and this\n   holding\
    \ buffer provides the only real queue the flow sees in the\n   network. For Assured,\
    \ traffic, we just test if the bytes in the\n   bucket are sufficient for the\
    \ packet size and set A if so. If not,\n   the only difference is that A is not\
    \ set. Assured traffic goes into a\n   queue following this step and potentially\
    \ sees a queue at every hop\n   along its path.\n   Each output interface of a\
    \ router must have two queues and must\n   implement a test on the P-bit to select\
    \ a packet's output queue. The\n   two queues must be serviced by simple priority,\
    \ Premium packets\n   first. Each output interface must implement the RED-based\
    \ RIO\n   mechanism described in [3] on the lower priority queue. RIO uses two\n\
    \   thresholds for when to begin dropping packets, a lower one based on\n   total\
    \ queue occupancy for ordinary best effort traffic and one based\n   on the number\
    \ of packets enqueued that have their A-bit set. This\n   means that any action\
    \ preferential to Assured service traffic will\n   only be taken when the queue's\
    \ capacity exceeds the threshold value\n   for ordinary best effort service. In\
    \ this case, only unmarked packets\n   will be dropped (using the RED algorithm)\
    \ unless the threshold value\n   for Assured service is also reached. Keeping\
    \ an accurate count of the\n   number of A-bit packets currently in a queue requires\
    \ either testing\n   the A-bit at both entry and exit of the queue or some additional\n\
    \   state in the router. Figure 4 is a block diagram of the output\n   interface\
    \ for all routers.\n   Figure 4. Router output interface for two-bit architecture\n\
    \   The packet output of a leaf router is thus a shaped stream of packets\n  \
    \ with P-bits set mingled with an unshaped best effort stream of\n   packets,\
    \ some of which may have A-bits set. Premium service clearly\n   cannot starve\
    \ best effort traffic because it is both burst and\n   bandwidth controlled. Assured\
    \ service might rely only on a\n   conservative allocation to prevent starvation\
    \ of unmarked traffic,\n   but bursts of Assured traffic might then close out\
    \ best-effort\n   traffic at bottleneck queues during congestive periods.\n  \
    \ After [3], we designate the forwarding path objects that test flows\n   against\
    \ their usage profiles \"Profile Meters\". Border routers will\n   require Profile\
    \ Meters at their input interfaces. The bilateral\n   agreement between adjacent\
    \ administrative domains must specify a peak\n   rate on all P traffic and a rate\
    \ and burst for A traffic (and\n   possibly a start time and duration). A Profile\
    \ Meter is required at\n   the ingress of a trust region to ensure that differentiated\
    \ service\n   packet flows are in compliance with their agreed-upon rates. Non-\n\
    \   compliant packets of Premium flows are discarded while non-compliant\n   packets\
    \ of Assured flows have their A-bits reset. For example, in\n   figure 1, if the\
    \ ISP has agreed to supply Company A with r bytes/sec\n   of Premium service,\
    \ P-bit marked packets that enter the ISP through\n   the link from Company A\
    \ will be dropped if they exceed r. If instead,\n   the service in figure 1 was\
    \ Assured service, the packets would simply\n   be unmarked, forwarded as best\
    \ effort.\n   The simplest border router input interface is a Profile Meter\n\
    \   constructed from a token bucket configured with the contracted rate\n   across\
    \ that ingress link (see figure 5). Each type, Premium or\n   Assured, and each\
    \ interface must have its own profile meter\n   corresponding to a particular\
    \ class across a particular boundary.\n   (This is in contrast to models where\
    \ every flow that crosses the\n   boundary must be separately policed and/or shaped.)\
    \ The exact\n   mechanisms required at a border router input interface depend\
    \ on the\n   allocation policy deployed; a more complex approach is presented\
    \ in\n   section 4.\n   Figure 5. Border router input interface Profile Meters\n"
- title: 3. Mechanisms
  contents:
  - '3. Mechanisms

    '
- title: 3.1 Forwarding Path Primitives
  contents:
  - "3.1 Forwarding Path Primitives\n   Section 2.3 introduced the forwarding path\
    \ objects of Markers and\n   Profile Meters. In this section we specify the primitive\
    \ building\n   blocks required to compose them. The primitives are: general\n\
    \   classifier, bit-pattern classifier, bit setter, priority queues,\n   policing\
    \ token bucket and shaping token bucket. These primitives can\n   compose a Marker\
    \ (either a policing or a shaping token bucket plus a\n   bit setter) and a Profile\
    \ Meter (a policing token bucket plus a\n   dropper or bit setter).\n   General\
    \ Classifier: Leaf or first-hop routers must perform a\n   transport-level signature\
    \ matching based on a tuple in the packet\n   header, a functionality which is\
    \ part of any RSVP-capable router.  As\n   described above, packets whose tuples\
    \ match one of the configured\n   flows are conformance tested and have the appropriate\
    \ service bit\n   set.  This function is memory- and processing-intensive, but\
    \ is kept\n   at the edges of the network where there are fewer flows.\n   Bit-pattern\
    \ classifier: This primitive comprises a simple two-way\n   decision based on\
    \ whether a particular bit-pattern in the IP header\n   is set or not. As in figure\
    \ 4, the P-bit is tested when a packet\n   arrives at a non-leaf router to determine\
    \ whether to enqueue it in\n   the high priority output queue or the low priority\
    \ packet queue. The\n   A-bit of packets bound for the low priority queue is tested\
    \ to 1)\n   increment the count of Assured packets in the queue if set and 2)\n\
    \   determine which drop probability will be used for that packet.\n   Packets\
    \ exiting the low priority queue must also have the A-bit\n   tested so that the\
    \ count of enqueued Assured packets can be\n   decremented if necessary.\n   Bit\
    \ setter: The A-bits and P-bits must be set or cleared in several\n   places.\
    \ A functional block that sets the appropriate bits of the IP\n   header to a\
    \ configured bit-pattern would be the most general.\n   Priority queues: Every\
    \ network element must include (at least) two\n   levels of simple priority queueing.\
    \ The high priority queue is for\n   the Premium traffic and the service rule\
    \ is to send packets in that\n   queue first and to exhaustion. Recall that Premium\
    \ traffic must never\n   be oversubscribed, thus Premium traffic should see little\
    \ or no\n   queue.\n   Shaping token bucket:This is the token bucket required\
    \ at the leaf\n   router for Premium traffic and shown in figure 3. As we shall\
    \ see,\n   shaping is also useful at egress points of a trust region. An\n   arriving\
    \ packet is immediately forwarded if there is a token present\n   in the bucket,\
    \ otherwise the packet is enqueued until the bucket\n   contains tokens sufficient\
    \ to send it. Shaping requires clocking\n   mechanisms, packet memory, and some\
    \ state block for each flow and is\n   thus a memory and computation-intensive\
    \ process.\n   Policing token bucket: This is the token bucket required for Profile\n\
    \   Meters and shown in figure 5. Policing token buckets never hold\n   arriving\
    \ packets, but check on arrival to see if a token is available\n   for the packet's\
    \ service class. If so, the packet is forwarded\n   immediately. If not, the policing\
    \ action is taken, dropping for\n   Premium and reclassifying or unmarking for\
    \ Assured.\n"
- title: 3.2 Passing configuration information
  contents:
  - "3.2 Passing configuration information\n    Clearly, mechanisms are required to\
    \ communicate the information\n   about the request to the leaf router. This configuration\
    \ information\n   is the rate, burst, and whether it is a Premium or Assured type.\n\
    \   There may also need to be a specific field to set or clear this\n   configuration.\
    \ This information can be passed in a number of ways,\n   including using the\
    \ semantics of RSVP, SNMP, or directly set by a\n   network administrator in some\
    \ other way. There must be some\n   mechanisms for authenticating the sender of\
    \ this information. We\n   expect configuration to be done in a variety of ways\
    \ in early\n   deployments and a protocol and mechanism for this to be a topic\
    \ for\n   future standards work.\n"
- title: 3.3 Discussion
  contents:
  - "3.3 Discussion\n   The requirements of shapers motivate their placement at the\
    \ edges of\n   the network where the state per router can be smaller than in the\n\
    \   middle of a network. The greatest burden of flow matching and shaping\n  \
    \ will be at leaf routers where the speeds and buffering required\n   should be\
    \ less than those that might be required deeper in the\n   network. This functionality\
    \ is not required at every network element\n   on the path. Routers that are internal\
    \ to a trust region will not\n   need to shape traffic. Border routers may need\
    \ or desire to shape the\n   aggregate flow of Marked packets at their egress\
    \ in order to ensure\n   that they will not burst into non-compliance with the\
    \ policing\n   mechanism at the ingress to the other domain (though this may not\
    \ be\n   necessary if the in-degree of the router is low). Further, the\n   shaping\
    \ would be applied to an aggregation of all the Premium flows\n   that exit the\
    \ domain via that path, not to each flow individually.\n   These mechanisms are\
    \ within reach of today's technology and it seems\n   plausible to us that Premium\
    \ and Assured services are all that is\n   needed in the Internet. If, in time,\
    \ these services are found\n   insufficient, this architecture provides a migration\
    \ path for\n   delivering other kinds of service levels to traffic. The A- and\
    \ P-\n   bits would continue to be used to identify traffic that gets Marked\n\
    \   service, but further filter matching could be done on packet headers\n   to\
    \ differentiate service levels further. Using the bits this way\n   reduces the\
    \ number of packets that have to have further matching done\n   on them rather\
    \ than filtering every incoming packet. More queue\n   levels and more complex\
    \ scheduling could be added for P-bit traffic\n   and more levels of drop priority\
    \ could be added for A-bit traffic if\n   experience shows them to be necessary\
    \ and processing speeds are\n   sufficient. We propose that the services described\
    \ here be considered\n   as \"at least\" services. Thus, a network element should\
    \ at least be\n   capable of mapping all P-bit traffic to Premium service and\
    \ of\n   mapping all A-bit traffic to be treated with one level of priority in\n\
    \   the \"best effort\" queue (it appears that the single level of A-bit\n   traffic\
    \ should map to a priority that is equivalent to the best level\n   in a multi-level\
    \ element that is also in the path).\n   On the other hand, what is the downside\
    \ of deploying an architecture\n   for both classes of service if later experience\
    \ convinces us that\n   only one of them is needed? The functional blocks of both\
    \ service\n   classes are similar and can be provided by the same mechanism,\n\
    \   parameterized differently. If Assured service is not used, very\n   little\
    \ is lost. A RED-managed best effort queue has been strongly\n   recommended in\
    \ [4] and, to the extent that the deployment of this\n   architecture pushes the\
    \ deployment of RED-managed best effort queues,\n   it is clearly a positive.\
    \ If Premium service goes unused, the two-\n   queues with simple priority service\
    \ is not required and the shaping\n   function of the Marker may be unused, thus\
    \ these would impose an\n   unnecessary implementation cost.\n"
- title: 4. The Architectural Framework for Marked Traffic Allocation
  contents:
  - "4. The Architectural Framework for Marked Traffic Allocation\n   Thus far we\
    \ have focused on the service definitions and the\n   forwarding path mechanisms.\
    \ We now turn to the problem of allocating\n   the level of Marked traffic throughout\
    \ the Internet. We observe that\n   most organizations have fixed portions of\
    \ their budgets, including\n   data communications, that are determined on an\
    \ annual or quarterly\n   basis. Some additional monies might be attached to specific\
    \ projects\n   for discretionary costs that arise in the shorter term. In turn,\n\
    \   service providers (ISPs and NSPs) must do their planning on annual\n   and\
    \ quarterly bases and thus cannot be expected to provide\n   differentiated services\
    \ purely \"on call\". Provisioning sets up static\n   levels of Marked traffic\
    \ while call set-up creates an allocation of\n   Marked traffic for a single flow's\
    \ duration. Static levels can be\n   provisioned with time-of-day specifications,\
    \ but cannot be changed in\n   response to a dynamic message. We expect both kinds\
    \ of bandwidth\n   allocation to be important. The purchasers of Marked services\
    \ can\n   generally be expected to work on longer-term budget cycles where\n \
    \  these services will be accounted for similarly to many information\n   services\
    \ today. A mail-order house may wish to purchase a fixed\n   allocation of bandwidth\
    \ in and out of its web-server to give\n   potential customers a \"fast\" feel\
    \ when browsing their site. This\n   allocation might be based on hit rates of\
    \ the previous quarter or\n   some sort of industry-based averages. In addition,\
    \ there needs to be\n   a dynamic allocation capability to respond to particular\
    \ events, such\n   as a demonstration, a network broadcast by a company's CEO,\
    \ or a\n   particular network test. Furthermore, a dynamic capability may be\n\
    \   needed in order to meet a precommitted service level when the\n   particular\
    \ source or destination is allowed to be \"anywhere on the\n   Internet\". \"\
    Dynamic\" covers the range from a telephoned or e-mailed\n   request to a signalling\
    \ type model. A strictly statically allocated\n   scenario is expected to be useful\
    \ in initial deployment of\n   differentiated services and to make up a major\
    \ portion of the Marked\n   traffic for the forseeable future.\n   Without a \"\
    per call\" dynamic set up, the preconfiguring of usage\n   profiles can always\
    \ be construed as \"paying for bits you don't use\"\n   whether the type of service\
    \ is Premium or Assured. We prefer to think\n   of this as paying for the level\
    \ of service that one expects to have\n   available at any time, for example paying\
    \ for a telephone line. A\n   customer might pay an additional flat fee to have\
    \ the privilege of\n   calling a wide local area for no additional charge or might\
    \ pay by\n   the call. Although a customer might pay on a \"per call\" basis for\n\
    \   every call made anywhere, it generally turns out not to be the most\n   economical\
    \ option for most customers. It's possible similar pricing\n   structures might\
    \ arise in the internet.\n   We use Allocation to refer to the process of making\
    \ Marked traffic\n   commitments anywhere along this continuum from strictly preallocated\n\
    \   to dynamic call set-up and we require an Allocation architecture\n   capable\
    \ of encompassing this entire spectrum in any mix. We further\n   observe that\
    \ Allocation must follow organizational hierarchies, that\n   is each organization\
    \ must have complete responsibility for the\n   Allocation of the Marked traffic\
    \ resource within its domain. Finally,\n   we observe that the only chance of\
    \ success for incremental deployment\n   lies in an Allocation architecture that\
    \ is made up of bilateral\n   agreements, as multilateral agreements are much\
    \ too complex to\n   administer. Thus, the Allocation architecture is made up\
    \ of\n   agreements across boundaries as to the amount of Marked traffic that\n\
    \   will be allowed to pass. This is similar to \"settlement\" models used\n \
    \  today.\n"
- title: '4.1 Bandwidth Brokers: Allocating and Controlling Bandwidth Shares'
  contents:
  - "4.1 Bandwidth Brokers: Allocating and Controlling Bandwidth Shares\n   The goal\
    \ of differentiated services is controlled sharing of some\n   organization's\
    \ Internet bandwidth. The control can be done\n   independently by individuals,\
    \ i.e., users set bit(s) in their packets\n   to distinguish their most important\
    \ traffic, or it can be done by\n   agents that have some knowledge of the organization's\
    \ priorities and\n   policies and allocate bandwidth with respect to those policies.\n\
    \   Independent labeling by individuals is simple to implement but\n   unlikely\
    \ to be sufficient since it's unreasonable to expect all\n   individuals to know\
    \ all their organization's priorities and current\n   network use and always mark\
    \ their traffic accordingly.  Thus this\n   architecture is designed with agents\
    \ called bandwidth brokers (BB)\n   [2], that can be configured with organizational\
    \ policies, keep track\n   of the current allocation of marked traffic, and interpret\
    \ new\n   requests to mark traffic in light of the policies and current\n   allocation.\n\
    \   We note that such agents are inherent in any but the most trivial\n   notions\
    \ of sharing.  Neither individuals nor the routers their\n   packets transit have\
    \ the information necessary to decide which\n   packets are most important to\
    \ the organization.  Since these agents\n   must exist, they can be used to allocate\
    \ bandwidth for end-to-end\n   connections with far less state and simpler trust\
    \ relationships than\n   deploying per flow or per filter guarantees in all network\
    \ elements\n   on an end-to-end path. BBs make it possible for bandwidth allocation\n\
    \   to follow organizational hierarchies and, in concert with the\n   forwarding\
    \ path mechanisms discussed in section 3, reduce the state\n   required to set\
    \ up and maintain a flow over architectures that\n   require checking the full\
    \ flow header at every network element.\n   Organizationally, the BB architecture\
    \ is motivated by the observation\n   that multilateral agreements rarely work\
    \ and this architecture allows\n   end-to-end services to be constructed out of\
    \ purely bilateral\n   agreements. BBs only need to establish relationships of\
    \ limited trust\n   with their peers in adjacent domains, unlike schemes that\
    \ require the\n   setting of flow specifications in routers throughout an end-to-end\n\
    \   path. In practical technical terms, the BB architecture makes it\n   possible\
    \ to keep state on an administrative domain basis, rather than\n   at every router\
    \ and the service definitions of Premium and Assured\n   service make it possible\
    \ to confine per flow state to just the leaf\n   routers.\n   BBs have two responsibilities.\
    \ Their primary one is to parcel out\n   their region's Marked traffic allocations\
    \ and set up the leaf routers\n   within the local domain. The other is to manage\
    \ the messages that are\n   sent across boundaries to adjacent regions' BBs. A\
    \ BB is associated\n   with a particular trust region, one per domain. A BB has\
    \ a policy\n   database that keeps the information on who can do what when and\
    \ a\n   method of using that database to authenticate requesters. Only a BB\n\
    \   can configure the leaf routers to deliver a particular service to\n   flows,\
    \ crucial for deploying a secure system. If the deployment of\n   Differentiated\
    \ Services has advanced to the stage where dynamically\n   allocated, marked flows\
    \ are possible between two adjacent domains,\n   BBs also provide the hook needed\
    \ to implement this. Each domain's BB\n   establishes a secure association with\
    \ its peer in the adjacent domain\n   to negotiate or configure a rate and a service\
    \ class (Premium or\n   Assured) across the shared boundary and through the peer's\
    \ domain. As\n   we shall see, it is possible for some types of service and\n\
    \   particularly in early implementations, that this \"secure association\"\n\
    \   is not automatic but accomplished through human negotiation and\n   subsequent\
    \ manual configuration of the adjacent BBs according to the\n   negotiated agreement.\
    \ This negotiated rate is a capability that a BB\n   controls for all hosts in\
    \ its region.\n   When an allocation is desired for a particular flow, a request\
    \ is\n   sent to the BB. Requests include a service type, a target rate, a\n \
    \  maximum burst, and the time period when service is required. The\n   request\
    \ can be made manually by a network administrator or a user or\n   it might come\
    \ from another region's BB. A BB first authenticates the\n   credentials of the\
    \ requester, then verifies there exists unallocated\n   bandwidth sufficient to\
    \ meet the request. If a request passes these\n   tests, the available bandwidth\
    \ is reduced by the requested amount and\n   the flow specification is recorded.\
    \ In the case where the flow has a\n   destination outside this trust region,\
    \ the request must fall within\n   the class allocation through the \"next hop\"\
    \ trust region that was\n   established through a bilateral agreement of the two\
    \ trust regions.\n   The requester's BB informs the adjacent region's BB that\
    \ it will be\n   using some of this rate allocation. The BB configures the appropriate\n\
    \   leaf router with the information about the packet flow to be given a\n   service\
    \ at the time that the service is to commence. This\n   configuration is \"soft\
    \ state\" that the BB will periodically refresh.\n   The BB in the adjacent region\
    \ is responsible for configuring the\n   border router to permit the allocated\
    \ packet flow to pass and for any\n   additional configurations and negotiations\
    \ within and across its\n   borders that will allow the flow to reach its final\
    \ destination.\n   At DMZs, there must be an unambiguous way to determine the\
    \ local\n   source of a packet. An interface's source could be determined from\n\
    \   its MAC address which would then be used to classify packets as\n   coming\
    \ across a logical link directly from the source domain\n   corresponding to that\
    \ MAC address. Thus with this understanding we\n   can continue to use figures\
    \ illustrating a single pipe between two\n   different domains.\n   In this way,\
    \ all agreements and negotiations are performed between\n   two adjacent domains.\
    \ An initial request might cause communication\n   between BBs on several domains\
    \ along a path, but each communication\n   is only between two adjacent BBs. Initially,\
    \ these agreements will be\n   prenegotiated and fairly static. Some may become\
    \ more dynamic as the\n   service evolves.\n"
- title: 4.2 Examples
  contents:
  - "4.2 Examples\n   This section gives examples of BB transactions in a non-trivial,\n\
    \   multi-transit-domain Internet. The BB framework allows operating\n   points\
    \ across a spectrum from \"no signalling across boundaries\" to\n   \"each flow\
    \ set up dynamically\". We might expect to move across this\n   spectrum over\
    \ time, as the necessary mechanisms are ubiquitously\n   deployed and BBs become\
    \ more sophisticated, but the statically\n   allocated portions of the spectrum\
    \ should always have uses. We\n   believe the ability to support this wide spectrum\
    \ of choices\n   simultaneously will be important both in incremental deployment\
    \ and\n   in allowing ISPs to make a wide range of offerings and pricings to\n\
    \   users. The examples of this section roughly follow the spectrum of\n   increasing\
    \ sophistication. Note that we assume that domains contract\n   for some amount\
    \ of Marked traffic which can be requested as either\n   Assured or Premium in\
    \ each individual flow setup transaction. The\n   examples say \"Marked\" although\
    \ actual transactions would have to\n   specify either Assured or Premium.\n \
    \  A statically configured example with no BB messages exchanged: Here\n   all\
    \ allocations are statically preallocated through purely bilateral\n   agreements\
    \ between users (individual TCPs, individual hosts, campus\n   networks, or whole\
    \ ISPs) [6]. The allocations are in the form of\n   usage profiles of rate, burst,\
    \ and a time during which that profile\n   is to be active. Users and providers\
    \ negotiate these Profiles which\n   are then installed in the user domain BB\
    \ and in the provider domain\n   BB. No BB messages cross the boundary; we assume\
    \ this negotiation is\n   done by human representatives of each domain. In this\
    \ case, BBs only\n   have to perform one of their two functions, that of allocating\
    \ this\n   Profile within their local domain. It is even possible to set all of\n\
    \   this suballocations up in advance and then the BB only needs to set\n   up\
    \ and tear down the Profile at the proper time and to refresh the\n   soft state\
    \ in the leaf routers. From the user domain BB, the Profile\n   is sent as soft\
    \ state to the first hop router of the flow during the\n   specified time. These\
    \ Profiles might be set using RSVP, a variant of\n   RSVP, SNMP, or some vendor-specific\
    \ mechanism. Although this static\n   approach can work for all Marked traffic,\
    \ due to the strictly not\n   oversubscribed requirement, it is only appropriate\
    \ for Premium\n   traffic as long as it is kept to a small percentage of the bottleneck\n\
    \   path through a domain or is otherwise constrained to a well-known\n   behavior.\
    \ Similar restrictions might hold for Assured depending on\n   the expectation\
    \ associated with the service.\n   In figure 6, we show an example of setting\
    \ a Profile in a leaf\n   router. A usage profile has been negotiated with the\
    \ ISP for the\n   entire domain and the BB parcels it out among individual flows\
    \ as\n   requested. The leaf router mechanism is that shown in figure 3, with\n\
    \   the token bucket set to the parameters from the usage profile. The\n   ISP's\
    \ BB would configure its own Profile Meter at the ingress router\n   from that\
    \ customer to ensure the Profile was maintained. This\n   mechanism was shown\
    \ in figure 5. We assume that the time duration and\n   start times for any Profile\
    \ to be active are maintained in the BB.\n   The Profile is sent to the ingress\
    \ device or cleared from the ingress\n   device by messages sent from the BB.\
    \ In this example, we assume that\n   van@lbl wants to talk to ddc@mit. The LBL-BB\
    \ is sent a request from\n   Van asking that premium service be assigned to a\
    \ flow that is\n   designated as having source address \"V:4\" and going to destination\n\
    \   address \"D:8\". This flow should be configured for a rate of 128kb/sec\n\
    \   and allocated from 1pm to 3pm. The request must be \"signed\" in a\n   secure,\
    \ verifiable manner. The request might be sent as data to the\n   LBL-BB, an e-mail\
    \ message to a network administrator, or in a phone\n   call to a network administrator.\
    \ The LBL-BB receives this message,\n   verifies that there is 128kb/sec of unused\
    \ Premium service for the\n   domain from 1-3pm, then sends a message to Leaf1\
    \ that sets up an\n   appropriate Profile Meter. The message to Leaf1 might be\
    \ an RSVP\n   message, or SNMP, or some proprietary method. All the domains passed\n\
    \   must have sufficient reserve capacity to meet this request.\n   Figure 6.\
    \ Bandwidth Broker setting Profiles in leaf routers\n   A statically configured\
    \ example with BB messages exchanged: Next we\n   present an example where all\
    \ allocations are statically preallocated\n   but BB messages are exchanged for\
    \ greater flexibility. Figure 7 shows\n   an end-to-end example for Marked traffic\
    \ in a statically allocated\n   internet. The numbers at the trust region boundaries\
    \ indicate the\n   total statically allocated Marked packet rates that will be\
    \ accepted\n   across those boundaries. For example, 100kbps of Marked traffic\
    \ can\n   be sent from LBL to ESNet; a Profile Meter at the ESNet egress\n   boundary\
    \ would have a token bucket set to rate 100kbps. (There MAY be\n   a shaper set\
    \ at LBL's egress to ensure that the Marked traffic\n   conforms to the aggregate\
    \ Profile.) The tables inside the transit\n   network \"bubbles\" show their policy\
    \ databases and reflect the values\n   after the transaction is complete. In Figure\
    \ 7, V wants to transmit a\n   flow from LBL to D at MIT at 10 Kbps. As in figure\
    \ 6, a request for\n   this profile is made of LBL's BB. LBL's BB authenticates\
    \ the request\n   and checks to see if there is 10kbps left in its Marked allocation\n\
    \   going in that direction. There is, so the LBL-BB passes a message to\n   the\
    \ ESNet-BB saying that it would like to use 10kbps of its Marked\n   allocation\
    \ for this flow. ESNet authenticates the message, checks its\n   database and\
    \ sees that it has a 10kbps Marked allocation to NEARNet\n   (the next region\
    \ in that direction) that is being unused. The policy\n   is that ESNet-BB must\
    \ always inform (\"ask\") NEARNet-BB when it is\n   about to use part of its allocation.\
    \ NEARNET-BB authenticates the\n   message, checks its database and discovers\
    \ that 20kbps of the\n   allocation to MIT is unused and the policy at that boundary\
    \ is to not\n   inform MIT when part of the allocation is about to be used (\"\
    <50 ok\"\n   where the total allocation is 50). The dotted lines indicate the\n\
    \   \"implied\" transaction, that is the transaction that would have\n   happened\
    \ if the policy hadn't said \"don't ask me\". Now each BB can\n   pass an \"ok\"\
    \ message to this request across its boundary. This allows\n   V to send to D,\
    \ but not vice versa. It would also be possible for the\n   request to originate\
    \ from D.\n   Figure 7. End-to-end example with static allocation.\n   Consider\
    \ the same example where the ESNet-BB finds all of its Marked\n   allocation to\
    \ NEARNet, 10 kbps, in use. With static allocations,\n   ESNet must transmit a\
    \ \"no\" to this request back to the LBL-BB.\n   Presumably, the LBL-BB would\
    \ record this information to complain to\n   ESNet about the overbooking at the\
    \ end of the month! One solution to\n   this sort of \"busy signal\" is for ESNet\
    \ to get better at anticipating\n   its customers needs or require long advance\
    \ bookings for every flow,\n   but it's also possible for bandwidth brokerage\
    \ decisions to become\n   dynamic.\n   Figure 8. End-to-end static allocation\
    \ example with no remaining\n   allocation\n   Dynamic Allocation and additional\
    \ mechanism: As we shall see, dynamic\n   allocation requires more complex BBs\
    \ as well as more complex border\n   policing, including the necessity to keep\
    \ more state. However, it\n   enables an important service with a small increase\
    \ in state.\n   The next set of figures (starting with figure 9) show what happens\
    \ in\n   the case of dynamic allocation. As before, V requests 10kbps to talk\n\
    \   to D at MIT. Since the allocation is dynamic, the border policers do\n   not\
    \ have a preset value, instead being set to reflect the current\n   peak value\
    \ of Marked traffic permitted to cross that boundary. The\n   request is sent\
    \ to the LBL-BB.\n   Figure 9. First step in end-to-end dynamic allocation example.\n\
    \   In figure 10, note that ESNet has no allocation set up to NEARNet.\n   This\
    \ system is capable of dynamic allocations in addition to static,\n   so it asks\
    \ NEARNet if it can \"add 10\" to its allocation from ESNet.\n   As in the figure\
    \ 7 example, MIT's policy is set to \"don't ask\" for\n   this case, so the dotted\
    \ lines represent \"implicit transactions\"\n   where no messages were exchanged.\
    \ However, NEARNet does update its\n   table to indicate that it is now using\
    \ 20kbps of the Marked\n   allocation to MIT.\n   Figure 10. Second step in end-to-end\
    \ dynamic allocation example\n   In figure 11, we see the third step where MIT's\
    \ \"virtual ok\" allows\n   the NEARNet-BB to tell its border router to increase\
    \ the Marked\n   allocation across the ESNet-NEARNet boundary by 10 kbps.\n  \
    \ Figure 11. Third step in end-to-end dynamic allocation example\n   Figure 11\
    \ shows NEARNet-BB's \"ok\" for that request transmitted back\n   to ESNet-BB.\
    \ This causes ESNet-BB to send its border router a message\n   to create a 10\
    \ kbps subclass for the flow \"V->D\". This is required in\n   order to ensure\
    \ that the 10kpbs that has just been dynamically\n   allocated gets used only\
    \ for that connection. Note that this does\n   require that the per flow state\
    \ be passed from LBL-BB to ESNet-BB,\n   but this is the only boundary that needs\
    \ that level of flow\n   information and this further classification will only\
    \ need to be done\n   at that one boundary router and only on packets coming from\
    \ LBL. Thus\n   dynamic allocation requires more complex Profile Metering than\
    \ that\n   shown in figure 5.\n   Figure 12. Fourth step in end-to-end dynamic\
    \ allocation example.\n   In figure 12, the ESNet border router gives the \"ok\"\
    \ that a subclass\n   has been created, causing the ESNet-BB to send an \"ok\"\
    \ to the LBL-BB\n   which lets V know the request has been approved.\n   Figure\
    \ 13. Final step in end-to-end dynamic allocation example\n   For dynamic allocation,\
    \ a basic version of a CBQ scheduler [5] would\n   have all the required functionality\
    \ to set up the subclasses. RSVP\n   currently provides a way to move the TSpec\
    \ for the flow.\n   For multicast flows, we assume that packets that are bound\
    \ for at\n   least one egress can be carried through a domain at that level of\n\
    \   service to all egress points. If a particular multicast branch has\n   been\
    \ subscribed to at best-effort when upstream branches are Marked,\n   it will\
    \ have its bit settings cleared before it crosses the boundary.\n   The information\
    \ required for this flow identification is used to\n   augment the existing state\
    \ that is already kept on this flow because\n   it is a multicast flow. We note\
    \ that we are already \"catching\" this\n   flow, but now we must potentially\
    \ clear the bit-pattern.\n"
- title: 5. RSVP/int-serv and this architecture
  contents:
  - "5. RSVP/int-serv and this architecture\n   Much work has been done in recent\
    \ years on the definition of related\n   integrated services for the internet\
    \ and the specification of the\n   RSVP signalling protocol. The two-bit architecture\
    \ proposed in this\n   work can easily interoperate with those specifications.\
    \ In this\n   section we first discuss how the forwarding mechanisms described\
    \ in\n   section 3 can be used to support integrated services. Second, we\n  \
    \ discuss how RSVP could interoperate with the administrative structure\n   of\
    \ the BBs to provide better scaling.\n"
- title: 5.1 Providing Controlled-Load and Guaranteed Service
  contents:
  - "5.1 Providing Controlled-Load and Guaranteed Service\n   We believe that the\
    \ forwarding path mechanisms described in section 3\n   are general enough that\
    \ they can also be used to provide the\n   Controlled-Load service [8] and a version\
    \ of the Guaranteed Quality\n   of Service [9], as developed by the int-serv WG.\
    \ First note that\n   Premium service can be thought of as a constrained case\
    \ of\n   Controlled-Load service where the burst size is limited to one packet\n\
    \   and where non-conforming packets are dropped. A network element that\n   has\
    \ implemented the mechanisms to support premium service can easily\n   support\
    \ the more general controlled-load service by making one or\n   more minor parameter\
    \ adjustments, e.g. by lifting the constraint on\n   the token bucket size, or\
    \ configuring the Premium service rate with\n   the peak traffic rate parameter\
    \ in the Controlled-Load specification,\n   and by changing the policing action\
    \ on out-of-profile packets from\n   dropping to sending the packets to the Best-effort\
    \ queue.\n   It is also possible to implement Guaranteed Quality of Service using\n\
    \   the mechanisms of Premium service. From RFC 2212 [9]: \"The definition\n \
    \  of guaranteed service relies on the result that the fluid delay of a\n   flow\
    \ obeying a token bucket (r, b) and being served by a line with\n   bandwidth\
    \ R is bounded by b/R as long as R is no less than r.\n   Guaranteed service with\
    \ a service rate R, where now R is a share of\n   bandwidth rather than the bandwidth\
    \ of a dedicated line approximates\n   this behavior.\" The service model of Premium\
    \ clearly fits this model.\n   RFC 2212 states that \"Non-conforming datagrams\
    \ SHOULD be treated as\n   best-effort datagrams.\" Thus, a policing Profile Meter\
    \ that drops\n   non-conforming datagrams would be acceptable, but it's also possible\n\
    \   to change the action for non-compliant packets from a drop to sending\n  \
    \ to the best-effort queue.\n"
- title: 5.2 RSVP and BBs
  contents:
  - "5.2 RSVP and BBs\n   In this section we discuss how RSVP signaling can be used\
    \ in\n   conjunction with the BBs described in section 4 to deliver a more\n \
    \  scalable end-to-end resource set up for Integrated Services. First we\n   note\
    \ that the BB architecture has three major differences with the\n   original RSVP\
    \ resource set up model:\n   1. There exist apriori bilateral business relations\
    \ between BBs of\n   adjacent trust regions before one can set up end-to-end resource\n\
    \   allocation; real-time signaling is used only to activate/confirm the\n   availability\
    \ of pre-negotiated Marked bandwidth, and to dynamically\n   readjust the allocation\
    \ amount when necessary. We note that this\n   real-time signaling across domains\
    \ is not required, but depends on\n   the nature of the bilateral agreement (e.g.,\
    \ the agreement might\n   state \"I'll tell you whenever I'm going to use some\
    \ of my allocation\"\n   or not).\n   2. A few bits in the packet header, i.e.\
    \ the P-bit and A-bit, are\n   used to mark the service class of each packet,\
    \ therefore a full\n   packet classification (by checking all relevant fields\
    \ in the header)\n   need be done only once at the leaf router; after that packets\
    \ will be\n   served according to their class bit settings.\n   3. RSVP resource\
    \ set up assumes that resources will be reserved hop-\n   by-hop at each router\
    \ along the entire end-to-end path.\n   RSVP messages sent to leaf routers by\
    \ hosts can be intercepted and\n   sent to the local domain's BB. The BB processes\
    \ the message and, if\n   the request is approved, forwards a message to the leaf\
    \ router that\n   sets up appropriate per-flow packet classification. A message\
    \ should\n   also be sent to the egress border router to add to the aggregate\n\
    \   Marked traffic allocation for packet shaping by the Profile Meter on\n   outbound\
    \ traffic. (Its possible that this is always set to the full\n   allocation.)\
    \ An RSVP message must be sent across the boundary to\n   adjacent ISP's border\
    \ router, either from the local domain's border\n   router or from the local domain's\
    \ BB. If the ISP is also implementing\n   the RSVP with a BB and diff-serv framework,\
    \ its border router\n   forwards the message to the ISP's local BB. A similar\
    \ process (to\n   what happened in the first domain) can be carried out in the\
    \ ISP\n   domain, then an RSVP message gets forwarded to the next ISP along the\n\
    \   path. Inside a domain, packets are served solely according to the\n   Marked\
    \ bits. The local BB knows exactly how much Premium traffic is\n   permitted to\
    \ enter at each border router and from which border router\n   packets exit.\n"
- title: 6. Recommendations
  contents:
  - "6. Recommendations\n   This document has presented a reference architecture for\n\
    \   differentiated services. Several variations can be envisioned,\n   particularly\
    \ for early and partial deployments, but we do not\n   enumerate all of these\
    \ variations here. There has been a great market\n   demand for differentiated\
    \ services lately. As one of the many efforts\n   to meet that demand this memo\
    \ sketches out the framework of a\n   flexible architecture for offering differential\
    \ services, and in\n   particular defines a simple set of packet forwarding path\
    \ mechanisms\n   to support two basic types of differential services. Although\
    \ there\n   remain a number of issues and parameters that need further\n   exploration\
    \ and refinement, we believe it is both possible and\n   feasible at this time\
    \ to start deployment of differentiated services\n   incrementally. First, given\
    \ that the basic mechanisms required in the\n   packet forwarding path are clearly\
    \ understood, both Assured and\n   Premium services can be implemented today with\
    \ manually configured\n   BBs and static resource allocation. Initially we recommend\n\
    \   conservative choices on the amount of Marked traffic that is admitted\n  \
    \ into the network. Second, we plan to continue the effort started with\n   this\
    \ memo and the experimental work of the authors to define and\n   deploy increasingly\
    \ sophisticated BBs. We hope to turn the experience\n   gained from in-progress\
    \ trial implementations on ESNet and CAIRN into\n   future proposals to the IETF.\n\
    \   Future revisions of this memo will present the receiver-based and\n   multicast\
    \ flow allocations in detail.    After this step is finished,\n   we believe the\
    \ basic picture of an scalable, robust, secure resource\n   management and allocation\
    \ system will be completed. In this memo, we\n   described how the proposed architecture\
    \ supports two services that\n   seem to us to provide at least a good starting\
    \ point for trial\n   deployment of differentiated services. Our main intent is\
    \ to define\n   an architecture with three services, Premium, Assured, and Best\n\
    \   effort, that can be determined by specific bit- patterns, but not to\n   preclude\
    \ additional levels of differentiation within each service. It\n   seems that\
    \ more experimentation and experience is required before we\n   could standardize\
    \ more than one level per service class. Our base-\n   level approach says that\
    \ everyone has to provide \"at least\" Premium\n   service and Assured service\
    \ as documented. We feel rather strongly\n   about both 1) that we should not\
    \ try to define, at this time,\n   something beyond the minimalist two service\
    \ approach and 2) that the\n   architecture we define must be open-ended so that\
    \ more levels of\n   differentiation might be standardized in the future. We believe\
    \ this\n   architecture is completely compatible with approaches that would\n\
    \   define more levels of differentiation within a particular service, if\n  \
    \ the benefits of doing so become well understood.\n"
- title: 7. Acknowledgments
  contents:
  - "7. Acknowledgments\n   The authors have benefited from many discussions, both\
    \ in person and\n   electronically and wish to particularly thank Dave Clark who\
    \ has been\n   responsible for the genesis of many of the ideas presented here,\n\
    \   though he does not agree with all of the content this document. We\n   also\
    \ thank Sally Floyd for comments on an earlier draft. A comment\n   from Jon Crowcroft\
    \ was partially responsible for our including\n   section 5. Comments from Fred\
    \ Baker made us try to make it clearer\n   that we are defining two base-level\
    \ services, irrespective of the bit\n   patterns used to encode them.\n"
- title: 8. Security Considerations
  contents:
  - "8. Security Considerations\n   There are no security considerations associated\
    \ with this document.\n"
- title: 9. References
  contents:
  - "9. References\n   [1] D. Clark, \"Adding Service Discrimination to the Internet\"\
    ,\n       Proceedings of the 23rd Annual Telecommunications Policy Research\n\
    \       Conference (TPRC), Solomons, MD, October 1995.\n   [2] V. Jacobson, \"\
    Differentiated Services Architecture\", talk in the\n       Int-Serv WG at the\
    \ Munich IETF, August, 1997.\n   [3] Clark, D. and J. Wroclawski, \"An Approach\
    \ to Service Allocation\n       in the Internet\", Work in Progress, also talk\
    \ by D. Clark in the\n       Int-Serv WG at the Munich IETF, August, 1997.\n \
    \  [4] Braden, et al., \"Recommendations on Queue Management and\n       Congestion\
    \ Avoidance in the Internet\", RFC 2309, April 1998.\n   [4] Braden, R., Zhang,\
    \ L., Berson, S., Herzog, S. and S. Jamin,\n       \"Resource Reservation Protocol\
    \ (RSVP) - Version 1 Functional\n       Specification\", RFC 2205, September 1997.\n\
    \   [5] S. Floyd and V. Jacobson, \"Link-sharing and Resource Management\n   \
    \    Models for Packet Networks\", IEEE/ACM Transactions on Networking,\n    \
    \   pp 365-386, August 1995.\n   [6] D. Clark, private communication, October\
    \ 26, 1997.\n   [7] \"Advanced QoS Services for the Intelligent Internet\", Cisco\n\
    \       Systems White Paper, 1997.\n   [8] Wroclawski, J., \"Specification of\
    \ the Controlled-Load Network\n       Element Service\", RFC 2211, September 1997.\n\
    \   [9] Shenker, S., Partirdge, C. and R. Guerin, \"Specification of\n       Guaranteed\
    \ Quality of Service\", RFC 2212, September 1997.\n   [10] D. Clark and W. Fang,\
    \ \"Explicit Allocation of Best Effort packet\n       Delivery Service\", IEEE/ACM\
    \ Transactions on Networking, August,\n       1998, Vol6, No 4, pp. 362-373. also\
    \ at: http://\n       diffserv.lcs.mit.edu/Papers/exp-alloc-ddc-wf.pdf\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Kathleen Nichols\n   Cisco Systems, Inc.\n   170 West\
    \ Tasman Drive\n   San Jose, CA 95134-1706\n   Phone: 408-525-4857\n   EMail:\
    \   kmn@cisco.com\n   Van Jacobson\n   Cisco Systems, Inc.\n   170 West Tasman\
    \ Drive\n   San Jose, CA 95134-1706\n   EMail: van@cisco.com\n   Lixia Zhang\n\
    \   UCLA\n   4531G Boelter Hall\n   Los Angeles, CA  90095\n   Phone: 310-825-2695\n\
    \   EMail: lixia@cs.ucla.edu\n"
- title: 'Appendix: A Combined Approach to Differential Service in the Internet by'
  contents:
  - "Appendix: A Combined Approach to Differential Service in the Internet by\n  \
    \        David D. Clark\n   After the draft-nichols-diff-svc-00 was submitted,\
    \ the co-authors had\n   a discussion with Dave Clark and John Wroclawski which\
    \ resulted in\n   Clark's using the presentation slot for the draft at the December\n\
    \   1997 IETF Integrated Services Working Group meeting. A reading of the\n  \
    \ slides shows that it was Clark's proposal on \"mechanisms\",\n   \"services\"\
    , and \"rules\" and how to proceed in the standards process\n   that has guided\
    \ much of the process in the subsequently formed IETF\n   Differentiated Services\
    \ Working Group. We believe Dave Clark's talk\n   gave us a solid approach for\
    \ bringing quality of service to the\n   Internet in a manner that is compatible\
    \ with its strengths.\n   The slides presented at the December 1997 IETF Integrated\
    \ Services\n   Working Group are included with the Postscript version.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
