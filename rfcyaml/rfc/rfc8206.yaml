- contents:
  - '       BGPsec Considerations for Autonomous System (AS) Migration

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document discusses considerations and methods for supporting
    and\n   securing a common method for Autonomous System (AS) migration within\n
    \  the BGPsec protocol.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8206.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   2\n     1.2.  Documentation Note  . . . . . . . . . . . . . . . . . .
    .   3\n   2.  General Scenario  . . . . . . . . . . . . . . . . . . . . . .   3\n
    \  3.  RPKI Considerations . . . . . . . . . . . . . . . . . . . . .   3\n     3.1.
    \ Origin Validation . . . . . . . . . . . . . . . . . . . .   4\n     3.2.  Path
    Validation . . . . . . . . . . . . . . . . . . . . .   5\n       3.2.1.  Outbound
    Announcements (PE-->CE)  . . . . . . . . . .   5\n       3.2.2.  Inbound Announcements
    (CE-->PE) . . . . . . . . . . .   6\n   4.  Requirements  . . . . . . . . . .
    . . . . . . . . . . . . . .   6\n   5.  Solution  . . . . . . . . . . . . . .
    . . . . . . . . . . . .   6\n     5.1.  Outbound (PE-->CE)  . . . . . . . . .
    . . . . . . . . . .   8\n     5.2.  Inbound (CE-->PE) . . . . . . . . . . . .
    . . . . . . . .   8\n     5.3.  Other Considerations  . . . . . . . . . . . .
    . . . . . .   9\n     5.4.  Example . . . . . . . . . . . . . . . . . . . . .
    . . . .   9\n   6.  IANA Considerations . . . . . . . . . . . . . . . . . . .
    . .  13\n   7.  Security Considerations . . . . . . . . . . . . . . . . . . .
    \ 14\n   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  14\n
    \    8.1.  Normative References  . . . . . . . . . . . . . . . . . .  14\n     8.2.
    \ Informative References  . . . . . . . . . . . . . . . . .  15\n   Acknowledgements
    \ . . . . . . . . . . . . . . . . . . . . . . . .  16\n   Authors' Addresses  .
    . . . . . . . . . . . . . . . . . . . . . .  17\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   A method of managing a BGP Autonomous System Number (ASN)
    migration\n   is described in RFC 7705 [RFC7705].  Since it concerns the handling\n
    \  of AS_PATH attributes, it is necessary to ensure that the process and\n   features
    are properly supported in BGPsec [RFC8205] because BGPsec is\n   explicitly designed
    to protect against changes in the BGP AS_PATH,\n   whether by choice, by misconfiguration,
    or by malicious intent.  It\n   is critical that the BGPsec protocol framework
    be able to support\n   this operationally necessary tool without creating an unacceptable\n
    \  security risk or exploit in the process.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in BCP\n   14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  - contents:
    - "1.2.  Documentation Note\n   This document uses ASNs from the range reserved
      for documentation as\n   described in RFC 5398 [RFC5398].  In the examples used
      here, they are\n   intended to represent Globally Unique ASNs, not ASNs reserved
      for\n   private use as documented in Section 10 of RFC 1930 [RFC1930].\n"
    title: 1.2.  Documentation Note
  title: 1.  Introduction
- contents:
  - "2.  General Scenario\n   This document assumes that the reader has read and understood
    the ASN\n   migration method discussed in RFC 7705 [RFC7705] including its\n   examples
    (see Section 2 of the referenced document), as they will be\n   heavily referenced
    here.  The use case being discussed in RFC 7705\n   [RFC7705] is as follows: For
    whatever the reason, a provider is in\n   the process of merging two or more ASes,
    where eventually one\n   subsumes the other(s).  BGP AS confederations [RFC5065]
    are not\n   enabled between the ASes, but a mechanism is being used to modify\n
    \  BGP's default behavior and allow the migrating Provider Edge (PE)\n   router
    to masquerade as the old ASN for the Provider-Edge-to-\n   Customer-Edge (PE-CE)
    eBGP (external BGP) session, or to manipulate\n   the AS_PATH, or both.  While
    BGPsec [RFC8205] does have a method to\n   handle standard confederation implementations,
    it is not applicable\n   in this exact case.  This migration requires a slightly
    different\n   solution in BGPsec than for a standard confederation because unlike\n
    \  in a confederation, eBGP peers may not be peering with the \"correct\"\n   external
    ASN, and the forward-signed updates are for a public ASN,\n   rather than a private
    one; so, there is no expectation that the BGP\n   speaker would strip the affected
    signatures before propagating the\n   route to its eBGP neighbors.\n   In the
    examples in Section 5.4, AS64510 is being subsumed by AS64500,\n   and both ASNs
    represent a Service Provider (SP) network (see Figures\n   1 and 2 in RFC 7705
    [RFC7705]).  AS64496 and 64499 represent\n   end-customer networks.  References
    to PE, CE, and P routers mirror\n   the diagrams and references in RFC 7705.\n"
  title: 2.  General Scenario
- contents:
  - "3.  RPKI Considerations\n   The methods and implementation discussed in RFC 7705
    [RFC7705] are\n   widely used during network integrations resulting from mergers
    and\n   acquisitions, as well as network redesigns; therefore, it is\n   necessary
    to support this capability on any BGPsec-enabled routers/\n   ASNs.  What follows
    is a discussion of the potential issues to be\n   considered regarding how ASN
    migration and BGPsec [RFC8205]\n   validation might interact.\n   One of the primary
    considerations for this document and migration is\n   that service providers (SPs)
    rarely stop after one\n   merger/acquisition/divestiture; they end up accumulating
    several\n   legacy ASNs over time.  Since SPs are using migration methods that\n
    \  are transparent to customers and therefore do not require\n   coordination
    with customers, they do not have as much control over\n   the length of the transition
    period as they might with something\n   completely under their administrative
    control (e.g., a key roll).\n   Because they are not forcing a simultaneous migration
    (i.e., both\n   ends switch to the new ASN at an agreed-upon time), there is no\n
    \  incentive for a given customer to complete the move from the old ASN\n   to
    the new one.  This leaves many SPs with multiple legacy ASNs that\n   don't go
    away very quickly, if at all.  As solutions were being\n   proposed for Resource
    Public Key Infrastructure (RPKI)\n   implementations to solve this transition
    case, the WG carefully\n   considered operational complexity and hardware scaling
    issues\n   associated with maintaining multiple legacy ASN keys on routers\n   throughout
    the combined network.  While SPs who choose to remain in\n   this transition phase
    indefinitely invite added risks because of the\n   operational complexity and
    scaling considerations associated with\n   maintaining multiple legacy ASN keys
    on routers throughout the\n   combined network, saying \"don't do this\" is of
    limited utility as a\n   solution.  As a result, this solution attempts to minimize
    the\n   additional complexity during the transition period, on the assumption\n
    \  that it will likely be protracted.  Note that while this document\n   primarily
    discusses service provider considerations, it is not solely\n   applicable to
    SPs, as enterprises often migrate between ASNs using\n   the same functionality.
    \ What follows is a discussion of origin and\n   path validation functions and
    how they interact with ASN migrations.\n"
  - contents:
    - "3.1.  Origin Validation\n   Route Origin Validation as defined by RFC 6480
      [RFC6480] does not\n   require modification to enable AS migration, as the existing
      protocol\n   and procedure allow for a solution.  In the scenario discussed
      in RFC\n   7705 [RFC7705], AS64510 is being replaced by AS64500.  If there are\n
      \  any existing routes originated by AS64510 on the router being moved\n   into
      the new ASN, new Route Origination Authorizations (ROAs) for the\n   routes
      with the new ASN should be generated, and they should be\n   treated as new
      routes to be added to AS64500.  However, we also need\n   to consider the situation
      where one or more other PEs are still in\n   AS64510 and are originating one
      or more routes that may be distinct\n   from any that the router under migration
      is originating.  PE1 (which\n   is now a part of AS64500 and instructed to use
      \"Replace Old AS\" as\n   defined in [RFC7705] to remove AS64510 from the path)
      needs to be\n   able to properly handle routes originated from AS64510.  If
      the route\n   now shows up as originating from AS64500, any downstream peers'\n
      \  validation check will fail unless a ROA is *also* available for\n   AS64500
      as the origin ASN.  In addition to generating a ROA for 65400\n   for any prefixes
      originated by the router being moved, it may be\n   necessary to generate ROAs
      for 65400 for prefixes that are\n   originating on routers still in 65410, since
      the AS replacement\n   function will change the origin AS in some cases.  This
      means that\n   there will be multiple ROAs showing different ASes authorized
      to\n   originate the same prefixes until all routers originating prefixes\n
      \  from AS64510 are migrated to AS64500.  Multiple ROAs of this type are\n   permissible
      per Section 3.2 of RFC 6480 [RFC6480] so managing origin\n   validation during
      a migration like this is merely applying the\n   defined case where a set of
      prefixes are originated from more than\n   one ASN.  Therefore, for each ROA
      that authorizes the old ASN (e.g.,\n   AS64510) to originate a prefix, a new
      ROA MUST also be created that\n   authorizes the replacing ASN (e.g., AS64500)
      to originate the same\n   prefix.\n"
    title: 3.1.  Origin Validation
  - contents:
    - "3.2.  Path Validation\n   BGPsec path validation requires that each router
      in the AS path\n   cryptographically sign its update to assert that \"every
      Autonomous\n   System (AS) on the path of ASes listed in the UPDATE message
      has\n   explicitly authorized the advertisement of the route to the\n   subsequent
      AS in the path\" (see Section 1 of RFC 8205 [RFC8205]).\n   Since the referenced
      AS-migration technique explicitly modifies the\n   AS_PATH between two eBGP
      peers who are not coordinating with one\n   another (are not in the same administrative
      domain), no level of\n   trust can be assumed; therefore, it may be difficult
      to identify\n   legitimate manipulation of the AS_PATH for migration activities
      when\n   compared to manipulation due to misconfiguration or malicious intent.\n"
    - contents:
      - "3.2.1.  Outbound Announcements (PE-->CE)\n   When PE1 is moved from AS64510
        to AS64500, it will be provisioned\n   with the appropriate keys for AS64500
        to allow it to forward-sign\n   routes using AS64500.  However, there is no
        guidance in the BGPsec\n   protocol specification [RFC8205] on whether or
        not the forward-signed\n   ASN value is required to match the configured remote
        AS to validate\n   properly.  That is, if CE1's BGP session is configured
        as \"remote AS\n   64510\", the presence of \"local AS 64510\" on PE1 will
        ensure that\n   there is no ASN mismatch on the BGP session itself, but if
        CE1\n   receives updates from its remote neighbor (PE1) forward-signed from\n
        \  AS64500, there is no guidance as to whether the BGPsec validator on\n   CE1
        still considers those valid by default.  Section 6.3 of RFC 4271\n   [RFC4271]
        mentions this match between the ASN of the peer and the\n   AS_PATH data,
        but it is listed as an optional validation, rather than\n   a requirement.
        \ We cannot assume that this mismatch will be allowed\n   by vendor implementations,
        so using it as a means to solve this\n   migration case is likely to be problematic.\n"
      title: 3.2.1.  Outbound Announcements (PE-->CE)
    - contents:
      - "3.2.2.  Inbound Announcements (CE-->PE)\n   Inbound is more complicated,
        because the CE doesn't know that PE1 has\n   changed ASNs, so it is forward-signing
        all of its routes with\n   AS64510, not AS64500.  The BGPsec speaker cannot
        manipulate previous\n   signatures and therefore cannot manipulate the previous
        AS path\n   without causing a mismatch that will invalidate the route.  If
        the\n   updates are simply left intact, the ISP would still need to publish\n
        \  and maintain valid and active public keys for AS 64510 if it is to\n   appear
        in the BGPsec_PATH signature so that receivers can validate\n   that the BGPsec_PATH
        signature arrived intact/whole.  However, if the\n   updates are left intact,
        this will cause the AS path length to be\n   increased, which is unacceptable
        as discussed in RFC 7705 [RFC7705].\n"
      title: 3.2.2.  Inbound Announcements (CE-->PE)
    title: 3.2.  Path Validation
  title: 3.  RPKI Considerations
- contents:
  - "4.  Requirements\n   In order to be deployable, any solution to the described
    problem\n   needs to consider the following requirements, listed in no particular\n
    \  order.  BGPsec:\n   o  MUST support AS migration for both inbound and outbound
    route\n      announcements (see Sections 3.2.1 and 3.2.2), without reducing\n
    \     BGPsec's protections for route path.\n   o  MUST NOT require any reconfiguration
    on the remote eBGP neighbor\n      (CE).\n   o  SHOULD NOT require global (i.e.,
    network-wide) configuration\n      changes to support migration.  The goal is
    to limit required\n      configuration changes to the devices (PEs) being migrated.\n
    \  o  MUST NOT lengthen the AS path during migration.\n   o  MUST operate within
    existing trust boundaries, e.g., can't expect\n      remote side to accept pCount=0
    (see Section 4.2 of RFC 8205\n      [RFC8205]) from untrusted/non-confederation
    neighbor.\n"
  title: 4.  Requirements
- contents:
  - "5.  Solution\n   As noted in Section 4.2 of RFC 8205 [RFC8205], BGPsec already
    has a\n   solution for hiding ASNs where increasing the AS path length is\n   undesirable.
    \ So a simple solution would be to retain the keys for\n   AS64510 on PE1 and
    forward-sign towards CE1 with AS64510 and\n   pCount=0.  However, this would mean
    passing a pCount=0 between two\n   ASNs that are in different administrative and
    trust domains such that\n   it could represent a significant attack vector to
    manipulate BGPsec-\n   signed paths.  The expectation for legitimate instances
    of pCount=0\n   (to make a route server that is not part of the transit path\n
    \  invisible) is that there is some sort of existing trust relationship\n   between
    the operators of the route server and the downstream peers\n   such that the peers
    could be explicitly configured by policy to\n   accept pCount=0 announcements
    only on the sessions where they are\n   expected.  For the same reason that things
    like \"Local AS\" [RFC7705]\n   are used for ASN migration without end-customer
    coordination, it is\n   unrealistic to assume any sort of coordination between
    the SP and the\n   administrators of CE1 to ensure that they will by policy accept\n
    \  pCount=0 signatures during the transition period; therefore, this is\n   not
    a workable solution.\n   A better solution presents itself when considering how
    to handle\n   routes coming from the CE toward the PE, where the routes are\n
    \  forward-signed to AS64510, but will eventually need to show AS64500\n   in
    the outbound route announcement.  Because both AS64500 and AS64510\n   are in
    the same administrative domain, a signature from AS64510\n   forward-signed to
    AS64500 with pCount=0 would be acceptable as it\n   would be within the appropriate
    trust boundary so that each BGP\n   speaker could be explicitly configured to
    accept pCount=0 where\n   appropriate between the two ASNs.  At the very simplest,
    this could\n   potentially be used at the eBGP boundary between the two ASNs during\n
    \  migration.  Since the AS_PATH manipulation described above usually\n   happens
    at the PE router on a per-session basis and does not happen\n   network-wide simultaneously,
    it is not generally appropriate to apply\n   this AS-hiding technique across all
    routes exchanged between the two\n   ASNs, as it may result in routing loops and
    other undesirable\n   behavior.  Therefore, the most appropriate place to implement
    this is\n   on the local PE that still has eBGP sessions with peers expecting
    to\n   peer with AS64510 (using the transition mechanisms detailed in RFC\n   7705
    [RFC7705]).  Since that PE has been moved to AS64500, it is not\n   possible for
    it to forward-sign AS64510 with pCount=0 without some\n   minor changes to the
    BGPsec behavior to address this use case.\n   AS migration is using AS_PATH and
    remote AS manipulation to act as if\n   a PE under migration exists simultaneously
    in both ASNs even though\n   it is only configured with one global ASN.  This
    document describes\n   applying a similar technique to the BGPsec signatures generated
    for\n   routing updates processed through this migration machinery.  Each\n   routing
    update that is received from or destined to an eBGP neighbor\n   that is still
    using the old ASN (64510) will be signed twice, once\n   with the ASN to be hidden
    and once with the ASN that will remain\n   visible.  In essence, we are treating
    the update as if the PE had an\n   internal BGP hop and the update was passed
    across an eBGP session\n   between AS64500 and AS64510, configured to use and
    accept pCount=0,\n   while eliminating the processing and storage overhead of
    creating an\n   actual eBGP session between the two ASNs within the PE router.
    \ This\n   will result in a properly secured AS path in the affected route\n   updates,
    because the PE router will be provisioned with valid keys\n   for both AS64500
    and AS64510.  An important distinction here is that\n   while AS migration under
    standard BGP4 is manipulating the AS_PATH\n   attribute, BGPsec uses an attribute
    called the \"Secure_Path\" (see\n   Section 3.1 of RFC 8205 [RFC8205]) and BGPsec-capable
    neighbors do\n   not exchange AS_PATH information in their route announcements.\n
    \  However, a BGPsec neighbor peering with a non-BGPsec-capable neighbor\n   will
    use the information found in the Secure_Path to reconstruct a\n   standard AS_PATH
    for updates sent to that neighbor.  Unlike in the\n   Secure_Path where the ASN
    to be hidden is still present but ignored\n   when considering the AS path (due
    to pCount=0), when reconstructing\n   an AS_PATH for a non-BGPsec neighbor, the
    pCount=0 ASNs will not\n   appear in the AS_PATH at all (see Section 4.4 of RFC
    8205 [RFC8205]).\n   This document is not changing existing AS_PATH reconstruction\n
    \  behavior, merely highlighting it for clarity.\n   The procedure to support
    AS migration in BGPsec is slightly different\n   depending on whether the PE under
    migration is receiving the routes\n   from one of its eBGP peers (\"inbound\"
    as in Section 3.2.2) or\n   destined toward the eBGP peers (\"outbound\" as in
    Section 3.2.1).\n"
  - contents:
    - "5.1.  Outbound (PE-->CE)\n   When a PE router receives an update destined for
      an eBGP neighbor\n   that is locally configured with AS-migration mechanisms
      as discussed\n   in RFC 7705 [RFC7705], it MUST generate a valid BGPsec signature
      as\n   defined in RFC 8205 [RFC8205] for _both_ configured ASNs.  It MUST\n
      \  generate a signature from the new (global) ASN forward-signing to the\n   old
      (local) ASN with pCount=0, and then it MUST generate a forward\n   signature
      from the old (local) ASN to the target eBGP ASN with\n   pCount=1 as normal.\n"
    title: 5.1.  Outbound (PE-->CE)
  - contents:
    - "5.2.  Inbound (CE-->PE)\n   When a PE router receives an update from an eBGP
      neighbor that is\n   locally configured with AS-migration mechanisms (i.e.,
      the opposite\n   direction of the previous route flow), it MUST generate a signature\n
      \  from the old (local) ASN forward-signing to the new (global) ASN with\n   pCount=0.
      \ It is not necessary to generate the second signature from\n   the new (global)
      ASN because the Autonomous System Border Router\n   (ASBR) will generate that
      when it forward-signs towards its eBGP\n   peers as defined in normal BGPsec
      operation.  Note that a signature\n   is not normally added when a routing update
      is sent across an iBGP\n   (internal BGP) session.  The requirement to sign
      updates in iBGP\n   represents a change to the normal behavior for this specific\n
      \  AS-migration scenario only.\n"
    title: 5.2.  Inbound (CE-->PE)
  - contents:
    - "5.3.  Other Considerations\n   In the inbound case discussed in Section 5.2,
      the PE is adding BGPsec\n   attributes to routes received from or destined to
      an iBGP neighbor\n   and using pCount=0 to mask them.  While this is not prohibited
      by\n   BGPsec [RFC8205], BGPsec-capable routers that receive updates from\n
      \  BGPsec-enabled iBGP neighbors MUST accept updates with new (properly\n   formed)
      BGPsec attributes, including the presence of pCount=0 on a\n   previous signature,
      or they will interfere with this method.  In a\n   similar fashion, any BGPsec-capable
      route-reflectors in the path of\n   these updates MUST reflect them transparently
      to their BGPsec-capable\n   clients.\n   In order to secure this set of signatures,
      the PE router MUST be\n   provisioned with valid keys for _both_ configured
      ASNs (old and new),\n   and the key for the old ASN MUST be kept valid until
      all eBGP\n   sessions are migrated to the new ASN.  Downstream neighbors will
      see\n   this as a valid BGPsec path, as they will simply trust that their\n
      \  upstream neighbor accepted pCount=0 because it was explicitly\n   configured
      to do so based on a trust relationship and business\n   relationship between
      the upstream and its neighbor (the old and new\n   ASNs).\n   Additionally,
      Section 4 of RFC 7705 [RFC7705] discusses methods in\n   which AS migrations
      can be completed for iBGP peers such that a\n   session between two routers
      will be treated as iBGP even if the\n   neighbor ASN is not the same ASN on
      each peer's global configuration.\n   As far as BGPsec is concerned, this requires
      the same procedure as\n   when the routers migrating are applying AS-migration
      mechanisms to\n   eBGP peers, but the router functioning as the \"ASBR\" between
      old and\n   new ASN is different.  In eBGP, the router being migrated has direct\n
      \  eBGP sessions to the old ASN and signs from old ASN to new with\n   pCount=0
      before passing the update along to additional routers in its\n   global (new)
      ASN.  In iBGP, the router being migrated is receiving\n   updates (that may
      have originated either from eBGP neighbors or other\n   iBGP neighbors) from
      its downstream neighbors in the old ASN and MUST\n   sign those updates from
      old ASN to new with pCount=0 before sending\n   them on to other peers.\n"
    title: 5.3.  Other Considerations
  - contents:
    - "5.4.  Example\n   The following example will illustrate the method being used
      above.\n   As with previous examples, PE1 is the router being migrated, AS64510\n
      \  is the old ASN, which is being subsumed by AS64500, the ASN to be\n   permanently
      retained.  64505 is another external peer, used to\n   demonstrate what the
      announcements will look like to a third-party\n   peer that is not part of the
      migration.  Some additional notation is\n   used to delineate the details of
      each signature as follows:\n   The origin BGPsec Signature Segment takes the
      form:\n   sig(Target ASN, (pCount,...,Origin ASN), NLRI) key.\n   Intermediate
      BGPsec Signature Segments take the form:\n   sig(Target ASN,...,(pCount,...,Signer
      ASN),...,NLRI) key.\n   (pCount,...,ASN) refers to the new Secure_Path Segment
      added to the\n   BGPsec_PATH attribute by the ASN (Origin ASN or Signer ASN).\n
      \  \"Equivalent AS_PATH\" refers to what the AS_PATH would look like if it\n
      \  was reconstructed to be sent to a non-BGPsec peer, while the\n   Securedpath
      shows the AS path as represented between BGPsec peers.\n   Note: The representation
      of Signature Segment generation is being\n   simplified here somewhat for the
      sake of brevity; the actual details\n   of the signing process are as described
      in Sections 4.1 and 4.2 of\n   [RFC8205].  For example, what is covered by the
      signature also\n   includes Flags, Algorithm Suite Identifier, NLRI length,
      etc.  Also,\n   the key is not carried in the update; instead, the Subject Key\n
      \  Identifier (SKI) is carried.\n   Before Merger\n                                       64505\n
      \                                      |\n             ISP B                     ISP
      A\n   CE-1 <--- PE-1 <------------------- PE-2 <--- CE-2\n   64496     Old_ASN:
      64510   Old_ASN: 64500     64499\n   CE-2 to PE-2:  sig(64500, (pCount=1,...,64499),
      N)K_64499-CE2\n                  Equivalent AS_PATH=(64499)\n                  Securedpath=(64499)\n
      \                 length=sum(pCount)=1\n   PE-2 to 64505: sig(64505,...,(pCount=1,...,64500),...,N)K_64500-PE2\n
      \                 sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n                  Equivalent
      AS_PATH=(64500,64499)\n                  Securedpath=(64500,64499)\n                  length=sum(pCount)=2\n
      \  PE-2 to PE-1:  sig(64510,...,(pCount=1,...,64500),...,N)K_64500-PE2\n                  sig(64500,
      (pCount=1,...,64499), N)K_64499-CE2\n                  Equivalent AS_PATH=(64500,64499)\n
      \                 Securedpath=(64500,64499)\n                  length=sum(pCount)=2\n
      \  PE-1 to CE-1:  sig(64496,...,(pCount=1,...,64510),...,N)K_64510-PE1\n                  sig(64510,...,(pCount=1,...,64500),...,N)K_64500-PE2\n
      \                 sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n                  Equivalent
      AS_PATH= (64510,64500,64499)\n                  Securedpath=(64510,64500,64499)\n
      \                 length=sum(pCount)=3\n   Migrating, route flow outbound PE-1
      to CE-1\n                                     64505\n                                     |\n
      \          ISP A'                    ISP A'\n CE-1 <--- PE-1 <-------------------
      PE-2 <--- CE-2\n 64496     Old_ASN: 64510   Old_ASN: 64500     64499\n           New_ASN:
      64500   New_ASN: 64500\n CE-2 to PE-2:  sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n
      \               Equivalent AS_PATH=(64499)\n                Securedpath=(64499)\n
      \               length=sum(pCount)=1\n PE-2 to 64505: sig(64505,...,(pCount=1,...,64500),...,N)K_64500-PE2\n
      \               sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n                Equivalent
      AS_PATH=(64500,64499)\n                Securedpath=(64500,64499)\n                length=sum(pCount)=2\n
      PE-2 to PE-1:  sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n                Equivalent
      AS_PATH=(64499)\n                Securedpath=(64499)\n                length=sum(pCount)=1\n
      #PE-2 sends to PE-1 (in iBGP) the exact same update\n #as it received from AS64499.\n
      PE-1 to CE-1:  sig(64496,...,(pCount=1,...,64510),...,N)K_64510-PE1\n                sig(64510,...,(pCount=0,...,64500),...,N)K_64500-PE2
      (*)\n                sig(64500, (pCount=1,...,64499), N)K_64499-CE2\n                Equivalent
      AS_PATH=(64510,64499)\n                Securedpath=(64510, 64500 (pCount=0),64499)\n
      \               length=sum(pCount)=2 (length is NOT 3)\n #PE-1 adds the Secure_Path
      Segment in (*) acting as AS64500\n #PE-1 accepts (*) with pCount=0 acting as
      AS64510,\n #as it would if it received (*) from an eBGP peer\n   Migrating,
      route flow inbound CE-1 to PE-1\n                                    64505\n
      \                                   |\n          ISP A'                    ISP
      A'\n"
    - 'CE-1 ---> PE-1 -------------------> PE-2 ---> CE-2

      '
    - "64496     Old_ASN: 64510   Old_ASN: 64500     64499\n          New_ASN: 64500
      \  New_ASN: 64500\n"
    - "CE-1 to PE-1:  sig(64510, (pCount=1,...,64496), N)K_64496-CE1\n               Equivalent
      AS_PATH=(64496)\n               Securedpath=(64496)\n               length=sum(pCount)=1\n"
    - "PE-1 to PE-2:  sig(64500,...,(pCount=0,...,64510),...,N)K_64510-PE1 (**)\n
      \              sig(64510, (pCount=1,...,64496), N)K_64496-CE1\n               Equivalent
      AS_PATH=(64496)\n               Securedpath=(64510 (pCount=0),64496)\n               length=sum(pCount)=1
      (length is NOT 2)\n"
    - '#PE-1 adds the Secure_Path Segment in (**) acting as AS64510

      '
    - '#PE-1 accepts (**) with pCount=0 acting as AS64500,

      '
    - '#as it would if it received (**) from an eBGP peer

      '
    - '#PE-1, as AS64500, sends the update including (**) to PE-2 (in iBGP)

      '
    - "PE-2 to 64505: sig(64505,...,(pCount=1,...,64500),...,N)K_64500-PE2\n               sig(64500,...,(pCount=0,...,64510),...,N)K_64510-PE1\n
      \              sig(64510, (pCount=1,...,64496), N)K_64496-CE1\n               Equivalent
      AS_PATH=(64500,64496)\n               Securedpath=(64500,64510 (pCount=0), 64496)\n
      \              length=sum(pCount)=2 (length is NOT 3)\n"
    - "PE-2 to CE-2:  sig(64499,...,(pCount=1,...,64500),...,N)K_64500-PE2\n               sig(64500,...,(pCount=0,...,64510),...,N)K_64510-PE1\n
      \              sig(64510, (pCount=1,...,64496), N)K_64496-CE1\n               Equivalent
      AS_PATH=(64500,64496)\n               Securedpath=(64500, 64510 (pCount=0),
      64496)\n               length=sum(pCount)=2 (length is NOT 3)\n"
    title: 5.4.  Example
  title: 5.  Solution
- contents:
  - "6.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   RFC 7705 [RFC7705] discusses a process by which
    one ASN is migrated\n   into and subsumed by another.  Because this process involves\n
    \  manipulating the AS_Path in a BGP route to make it deviate from the\n   actual
    path that it took through the network, this migration process\n   is attempting
    to do exactly what BGPsec is working to prevent.\n   BGPsec MUST be able to manage
    this legitimate use of AS_Path\n   manipulation without generating a vulnerability
    in the RPKI route\n   security infrastructure, and this document was written to
    define the\n   method by which the protocol can meet this need.\n   The solution
    discussed above is considered to be reasonably secure\n   from exploitation by
    a malicious actor because it requires both\n   signatures to be secured as if
    they were forward-signed between two\n   eBGP neighbors.  This requires any router
    using this solution to be\n   provisioned with valid keys for both the migrated
    and subsumed ASN so\n   that it can generate valid signatures for each of the
    two ASNs it is\n   adding to the path.  If the AS's keys are compromised, or zero-length\n
    \  keys are permitted, this does potentially enable an AS_PATH\n   shortening
    attack, but these are existing security risks for BGPsec.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC7705]  George, W. and S. Amante, \"Autonomous System Migration\n              Mechanisms
      and Their Effects on the BGP AS_PATH\n              Attribute\", RFC 7705, DOI
      10.17487/RFC7705, November 2015,\n              <https://www.rfc-editor.org/info/rfc7705>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8205]  Lepinski, M., Ed.
      and K. Sriram, Ed., \"BGPsec Protocol\n              Specification\", RFC 8205,
      DOI 10.17487/RFC8205,\n              September 2017, <https://www.rfc-editor.org/info/rfc8105>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC1930]  Hawkinson, J. and T. Bates, \"Guidelines
      for creation,\n              selection, and registration of an Autonomous System
      (AS)\",\n              BCP 6, RFC 1930, DOI 10.17487/RFC1930, March 1996,\n
      \             <https://www.rfc-editor.org/info/rfc1930>.\n   [RFC4271]  Rekhter,
      Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A\n              Border Gateway Protocol
      4 (BGP-4)\", RFC 4271,\n              DOI 10.17487/RFC4271, January 2006,\n
      \             <https://www.rfc-editor.org/info/rfc4271>.\n   [RFC5065]  Traina,
      P., McPherson, D., and J. Scudder, \"Autonomous\n              System Confederations
      for BGP\", RFC 5065,\n              DOI 10.17487/RFC5065, August 2007,\n              <https://www.rfc-editor.org/info/rfc5065>.\n
      \  [RFC5398]  Huston, G., \"Autonomous System (AS) Number Reservation for\n
      \             Documentation Use\", RFC 5398, DOI 10.17487/RFC5398,\n              December
      2008, <https://www.rfc-editor.org/info/rfc5398>.\n   [RFC6480]  Lepinski, M.
      and S. Kent, \"An Infrastructure to Support\n              Secure Internet Routing\",
      RFC 6480, DOI 10.17487/RFC6480,\n              February 2012, <https://www.rfc-editor.org/info/rfc6480>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgements\n   Thanks to Kotikalapudi Sriram, Shane Amante, Warren Kumari,
    Terry\n   Manderson, Keyur Patel, Alia Atlas, and Alvaro Retana for their\n   review
    comments.\n   The authors particularly wish to acknowledge Kotikalapudi Sriram,\n
    \  Oliver Borchert, and Michael Baer for their review and suggestions\n   for
    the examples in Section 5.4, which made an important contribution\n   to the quality
    of the text.\n   Additionally, the solution presented in this document is an amalgam\n
    \  of several Secure Inter-Domain Routing (SIDR) interim meeting\n   discussions
    plus a discussion at IETF 85, collected and articulated\n   thanks to Sandy Murphy.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Wesley George\n   Neustar\n   45980 Center Oak Plaza\n
    \  Sterling, VA  20166\n   United States of America\n   Email: wesgeorge@puck.nether.net\n
    \  Sandy Murphy\n   PARSONS, Inc.\n   7110 Samuel Morse Drive\n   Columbia, MD
    \ 21046\n   United States of America\n   Phone: +1 443-430-8000\n   Email: sandy@tislabs.com\n"
  title: Authors' Addresses
