- contents:
  - "           RADIUS Attributes for Softwire Mechanisms Based on\n                        Address
    plus Port (A+P)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   IPv4-over-IPv6 transition mechanisms provide IPv4 connectivity\n
    \  services over IPv6 native networks during the IPv4/IPv6 coexistence\n   period.
    \ DHCPv6 options have been defined to configure clients for\n   Lightweight 4over6,
    Mapping of Address and Port with Encapsulation\n   (MAP-E), Mapping of Address
    and Port using Translation (MAP-T)\n   unicast softwire mechanisms, and multicast
    softwires.  However, in\n   many networks, configuration information is stored
    in an\n   Authentication, Authorization, and Accounting (AAA) server, which\n
    \  utilizes the Remote Authentication Dial In User Service (RADIUS)\n   protocol
    to provide centralized management for users.  When a new\n   transition mechanism
    is developed, new RADIUS attributes need to be\n   defined correspondingly.\n
    \  This document defines new RADIUS attributes to carry softwire\n   configuration
    parameters based on Address plus Port from a AAA server\n   to a Broadband Network
    Gateway.  Both unicast and multicast\n   attributes are covered.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8658.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n   2.  Terminology\n   3.  New RADIUS
    Attributes\n     3.1.  Softwire46-Configuration Attribute\n       3.1.1.  Softwire46
    Attributes\n         3.1.1.1.  Softwire46-MAP-E Attribute\n         3.1.1.2.  Softwire46-MAP-T
    Attribute\n         3.1.1.3.  Softwire46-Lightweight-4over6 Attribute\n       3.1.2.
    \ Softwire46 Sub-attributes\n       3.1.3.  Specification of the Softwire46 Sub-attributes\n
    \        3.1.3.1.  Softwire46-Rule Attribute\n         3.1.3.2.  Softwire46-BR
    Attribute\n         3.1.3.3.  Softwire46-DMR Attribute\n         3.1.3.4.  Softwire46-V4V6Bind
    Attribute\n         3.1.3.5.  Softwire46-PORTPARAMS Attribute\n       3.1.4.  Sub-attributes
    for Softwire46-Rule\n         3.1.4.1.  Rule-IPv6-Prefix Attribute\n         3.1.4.2.
    \ Rule-IPv4-Prefix Attribute\n         3.1.4.3.  EA-Length Attribute\n       3.1.5.
    \ Attributes for Softwire46-v4v6Bind\n         3.1.5.1.  IPv4-Address Attribute\n
    \        3.1.5.2.  Bind-IPv6-Prefix Attribute\n       3.1.6.  Attributes for Softwire46-PORTPARAMS\n
    \        3.1.6.1.  PSID-Offset Attribute\n         3.1.6.2.  PSID-Len Attribute\n
    \        3.1.6.3.  PSID Attribute\n     3.2.  Softwire46-Priority Attribute\n
    \      3.2.1.  Softwire46-Option-Code\n     3.3.  Softwire46-Multicast Attribute\n
    \      3.3.1.  ASM-Prefix64 Attribute\n       3.3.2.  SSM-Prefix64 Attribute\n
    \      3.3.3.  U-Prefix64 Attribute\n   4.  A Sample Configuration Process with
    RADIUS\n   5.  Table of Attributes\n   6.  Security Considerations\n   7.  IANA
    Considerations\n     7.1.  New RADIUS Attributes\n     7.2.  RADIUS Softwire46
    Configuration and Multicast\n           Attributes\n     7.3.  Softwire46 Mechanisms
    and Their Identifying Option\n           Codes\n   8.  References\n     8.1.  Normative
    References\n     8.2.  Informative References\n   Appendix A.  DHCPv6 to RADIUS
    Field Mappings\n     A.1.  OPTION_S46_RULE (89) to Softwire46-Rule Sub-TLV Field\n
    \          Mappings\n     A.2.  OPTION_S46_BR (90) to Softwire46-BR Field Mappings\n
    \    A.3.  OPTION_S46_DMR (91) to Softwire46-DMR\n     A.4.  OPTION_S46_V4V6BIND
    (92) to Softwire46-V4V6Bind\n     A.5.  OPTION_S46_PORTPARAMS (93) to Softwire46-PORTPARAMS\n
    \          Field Mappings\n     A.6.  OPTION_S46_PRIORITY (111) to Softwire46-PORTPARAMS\n
    \          Field Mappings\n     A.7.  OPTION_V6_PREFIX64 (113) to Softwire46-Multicast\n
    \          Attribute Field Mappings\n   Acknowledgements\n   Contributors\n   Authors'
    Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Providers have started deploying and transitioning to IPv6.
    \ Several\n   IPv4 service continuity mechanisms based on Address plus Port (A+P)\n
    \  [RFC6346] have been proposed for providing unicast IPv4-over-\n   IPv6-only
    infrastructure, such as Mapping of Address and Port with\n   Encapsulation (MAP-E)
    [RFC7597], Mapping of Address and Port using\n   Translation (MAP-T) [RFC7599],
    and Lightweight 4over6 [RFC7596].\n   Also, [RFC8114] specifies a generic solution
    for the delivery of IPv4\n   multicast services to IPv4 clients over an IPv6 multicast
    network.\n   For each of these mechanisms, DHCPv6 options have been specified
    for\n   client configuration.\n   In many networks, user configuration information
    is stored in an\n   Authentication, Authorization, and Accounting (AAA) server.
    \ AAA\n   servers generally communicate using the Remote Authentication Dial In\n
    \  User Service (RADIUS) [RFC2865] protocol.  In a fixed broadband\n   network,
    a Broadband Network Gateway (BNG) acts as the access gateway\n   for users.  That
    is, the BNG acts as both a AAA client to the AAA\n   server and a DHCPv6 server
    for DHCPv6 messages sent by clients.\n   Throughout this document, the term \"BNG\"
    describes a device\n   implementing both the AAA client and DHCPv6 server functions.\n
    \  Since IPv4-in-IPv6 softwire configuration information is stored in a\n   AAA
    server and user configuration information is mainly transmitted\n   through DHCPv6
    between the BNGs and Customer Premises Equipment (CEs,\n   a.k.a., CPE), new RADIUS
    attributes are needed to propagate the\n   information from the AAA servers to
    BNGs so that they can be provided\n   to CEs using the existing DHCPv6 options.\n
    \  The RADIUS attributes defined in this document provide the\n   configuration
    to populate the corresponding DHCPv6 options for\n   unicast and multicast softwire
    configurations, specifically:\n   *  \"Mapping of Address and Port with Encapsulation
    (MAP-E)\" [RFC7597]\n      (DHCPv6 options defined in [RFC7598]).\n   *  \"Mapping
    of Address and Port using Translation (MAP-T)\" [RFC7599]\n      (DHCPv6 options
    defined in [RFC7598]).\n   *  \"Lightweight 4over6: An Extension to the Dual-Stack
    Lite\n      Architecture\" [RFC7596] (DHCPv6 options defined in [RFC7598]).\n
    \  *  \"Unified IPv4-in-IPv6 Softwire Customer Premises Equipment (CPE):\n      A
    DHCPv6-Based Prioritization Mechanism\" [RFC8026].\n   *  \"Delivery of IPv4 Multicast
    Services to IPv4 Clients over an IPv6\n      Multicast Network\" [RFC8114] (DHCPv6
    options defined in\n      [RFC8115]).\n   The contents of the attributes defined
    in this document have a 1:1\n   mapping into the fields of the various DHCPv6
    options in [RFC7598],\n   [RFC8026], and [RFC8115].  Table 1 shows how the DHCPv6
    options map\n   to the corresponding RADIUS attribute.  For detailed mappings
    between\n   each DHCPv6 option field and the corresponding RADIUS attribute or\n
    \  field, see Appendix A.\n          | DHCPv6 Option              | RADIUS Attribute
    \     |\n          | OPTION_S46_RULE (89)       | Softwire46-Rule       |\n          |
    OPTION_S46_BR (90)         | Softwire46-BR         |\n          | OPTION_S46_DMR
    (91)        | Softwire46-DMR        |\n          | OPTION_S46_V4V6BIND (92)   |
    Softwire46-V4V6Bind   |\n          | OPTION_S46_PORTPARAMS (93) | Softwire46-PORTPARAMS
    |\n          | OPTION_S46_PRIORITY (111)  | Softwire46-Priority   |\n          |
    OPTION_V6_PREFIX64 (113)   | Softwire46-Multicast  |\n               Table 1:
    Mapping between DHCPv6 Options and\n                            RADIUS Attributes\n
    \  A RADIUS attribute for Dual-Stack Lite [RFC6333] is defined in\n   [RFC6519].\n
    \  This document targets deployments where a trusted relationship is in\n   place
    between the RADIUS client and server.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,
    as shown here.\n   The reader should be familiar with the concepts and terms defined
    in\n   [RFC7596], [RFC7597], [RFC7599], and [RFC8026].\n   The terms \"multicast
    Basic Bridging BroadBand\" element (mB4) and\n   \"multicast Address Family Transition
    Router\" element (mAFTR) are\n   defined in [RFC8114].\n   Softwire46 (S46) is
    used throughout to denote any of the IPv4-in-IPv6\n   softwire mechanisms listed
    above.  Additionally, the following\n   abbreviations are used within the document:\n
    \  BNG:      Broadband Network Gateway\n   BR:       Border Relay\n   CE:       Customer
    Edge\n   CoA:      Change-of-Authorization\n   DMR:      Default Mapping Rule\n
    \  EA:       Embedded Address\n   lwAFTR:   Lightweight Address Family Transition
    Router\n   MAP-E:    Mapping of Address and Port with Encapsulation\n   MAP-T:
    \   Mapping of Address and Port using Translation\n   PSID:     Port Set Identifier\n
    \  TLV:      Type, Length, Value\n"
  title: 2.  Terminology
- contents:
  - "3.  New RADIUS Attributes\n   This section defines the following attributes:\n
    \  1.  Softwire46-Configuration Attribute (Section 3.1):\n       This attribute
    carries the configuration information for MAP-E,\n       MAP-T, and Lightweight
    4over6.  The configuration information for\n       each Softwire46 mechanism is
    carried in the corresponding\n       Softwire46 attributes.  Different attributes
    are required for\n       each Softwire46 mechanism.\n   2.  Softwire46-Priority
    Attribute (Section 3.2):\n       Depending on the deployment scenario, a client
    may support\n       several different Softwire46 mechanisms.  Therefore, a client
    may\n       request configuration for more than one Softwire46 mechanism at a\n
    \      time.  The Softwire46-Priority Attribute contains information\n       allowing
    the client to prioritize which mechanism to use,\n       corresponding to OPTION_S46_PRIORITY
    defined in [RFC8026].\n   3.  Softwire46-Multicast Attribute (Section 3.3):\n
    \      This attribute conveys the IPv6 prefixes to be used in [RFC8114]\n       to
    synthesize IPv4-embedded IPv6 addresses.  The BNG uses the\n       IPv6 prefixes
    returned in the RADIUS Softwire46-Multicast\n       Attribute to populate the
    DHCPv6 PREFIX64 Option [RFC8115].\n   All of these attributes are allocated from
    the RADIUS \"Extended Type\"\n   code space per [RFC6929].\n   All of these attribute
    designs follow [RFC6158] and [RFC6929].\n   This document adheres to the guidance
    in [RFC8044] for defining new\n   RADIUS attributes.\n"
  - contents:
    - "3.1.  Softwire46-Configuration Attribute\n   This attribute is of type \"tlv\",
      as defined in \"Remote Authentication\n   Dial-In User Service (RADIUS) Protocol
      Extensions\" [RFC6929].  It\n   contains some sub-attributes, with the following
      requirements:\n   *  The Softwire46-Configuration Attribute MUST contain one
      or more of\n      the following attributes: Softwire46-MAP-E, Softwire46-MAP-T,
      and/\n      or Softwire46-Lightweight-4over6.\n   *  The Softwire46-Configuration
      Attribute conveys the configuration\n      information for MAP-E, MAP-T, or
      Lightweight 4over6.  The BNG\n      SHALL use the configuration information
      returned in the RADIUS\n      attribute to populate the DHCPv6 Softwire46 container
      option(s)\n      defined in Section 5 of [RFC7598].\n   *  The Softwire46-Configuration
      Attribute MAY appear in an Access-\n      Accept packet.  It MAY also appear
      in an Access-Request packet to\n      indicate a preferred Softwire46 configuration.
      \ However, the\n      server is not required to honor such a preference.\n   *
      \ The Softwire46-Configuration Attribute MAY appear in a CoA-Request\n      packet.\n
      \  *  The Softwire46-Configuration Attribute MAY appear in an\n      Accounting-Request
      packet.\n   *  The Softwire46-Configuration Attribute MUST NOT appear in any\n
      \     other RADIUS packet.\n   The Softwire46-Configuration Attribute is structured
      as follows:\n   Type\n      241\n   Length\n      Indicates the total length,
      in bytes, of all fields of this\n      attribute, including the Type, Length,
      Extended-Type, and the\n      entire length of the embedded attributes.\n   Extended-Type\n
      \     9\n   Value\n      Contains one or more of the following attributes.  Each
      attribute\n      type may appear once at most:\n      Softwire46-MAP-E\n         For
      configuring MAP-E clients.  For the construction of this\n         attribute,
      refer to Section 3.1.1.1.\n      Softwire46-MAP-T\n         For configuring
      MAP-T clients.  For the construction of this\n         attribute, refer to Section
      3.1.1.2.\n      Softwire46-Lightweight-4over6\n         For configuring Lightweight
      4over6 clients.  For the\n         construction of this attribute, refer to
      Section 3.1.1.3.\n   The Softwire46-Configuration Attribute is associated with
      the\n   following identifier: 241.9.\n"
    - contents:
      - "3.1.1.  Softwire46 Attributes\n   The Softwire46 attributes can only be encapsulated
        in the\n   Softwire46-Configuration Attribute.  Depending on the deployment\n
        \  scenario, a client might request more than one transition mechanism\n   at
        a time.  There MUST be at least one Softwire46 attribute\n   encapsulated
        in one Softwire46-Configuration Attribute.  There MUST\n   be at most one
        instance of each type of Softwire46 attribute\n   encapsulated in one Softwire46-Configuration
        Attribute.\n   There are three types of Softwire46 attributes, namely:\n   1.
        \ Softwire46-MAP-E (Section 3.1.1.1)\n   2.  Softwire46-MAP-T (Section 3.1.1.2)\n
        \  3.  Softwire46-Lightweight 4over6 (Section 3.1.1.3)\n   Each type of Softwire46
        attribute contains a number of sub-\n   attributes, defined in Section 3.1.3.
        \ The hierarchy of the\n   Softwire46 attributes is shown in Figure 1.  Section
        3.1.2 describes\n   which sub-attributes are mandatory, optional, or not permitted
        for\n   each defined Softwire46 attribute.\n   S                      /                    |\n
        \  o  /                  | 1.Softwire46-Rule --+ 2.Rule-IPv4-Prefix\n   f
        | Softwire46-MAP-E--+                     |\n   t |                   | 2.Softwire46-BR
        \    | 3.EA-Length\n   w |                   |                      \\\n   i
        |                   |                               /1.PSID-Offset\n   r |
        \                  |                              |\n   e |                   |
        3.Softwire46-PORTPARAMS -----+ 2.PSID-Len\n   4 |                    \\                             |\n
        \  6 |                                                  | 3.PSID\n   C |\n
        \  o |                                          /1.Rule-IPv6-Prefix\n   n
        |                    /                    |\n   f |                   | 1.Softwire46-Rule---+
        2.Rule-IPv4-Prefix\n   i | Softwire46-MAP-T--+                     |\n   g
        |                   | 2.Softwire46-DMR    | 3.EA-Length\n   u |                   |
        \                     \\\n   r |                   |                               /1.PSID-Offset\n
        \  a |                   |                              |\n   t |                   |
        3.Softwire46-PORTPARAMS------+ 2.PSID-Len\n   i |                    \\                             |\n
        \  o |                                                  | 3.PSID\n   n |                                                   \\\n
        \    |\n   A |                                              /1.IPv4-Address\n
        \  t |                    /                        |\n   t |                   |
        1.Softwire46-V4V6Bind --+ 2.Bind-IPv6-Prefix\n   r | Softwire46-       |                          \\\n
        \  i | Lightweight-4over6+ 2.Softwire46-BR               /1.PSID-Offset\n
        \  b  \\                  |                              |\n   u                     |
        3.Softwire46-PORTPARAMS  ----+ 2.PSID-Len\n   t                      \\                             |\n
        \  e                                                    | 3.PSID\n                  Figure
        1: Softwire46 Attribute Hierarchy\n"
      - contents:
        - "3.1.1.1.  Softwire46-MAP-E Attribute\n   The Softwire46-MAP-E attribute
          is designed to carry the configuration\n   information for MAP-E.  The structure
          of Softwire46-MAP-E is shown\n   below:\n   TLV-Type\n      1\n   TLV-Length\n
          \     Indicates the length of this attribute, including the TLV-Type,\n
          \     TLV-Length, and TLV-Value fields.\n   TLV-Value\n      Contains a
          set of sub-attributes, with the following requirements:\n      It MUST contain
          Softwire46-Rule, defined in Section 3.1.3.1.\n      It MUST contain Softwire46-BR,
          defined in Section 3.1.3.2.\n      It MAY contain Softwire46-PORTPARAMS,
          defined in Section 3.1.3.5.\n"
        title: 3.1.1.1.  Softwire46-MAP-E Attribute
      - contents:
        - "3.1.1.2.  Softwire46-MAP-T Attribute\n   The Softwire46-MAP-T attribute
          is designed to carry the configuration\n   information for MAP-T.  The structure
          of Softwire46-MAP-T is shown\n   below:\n   TLV-Type\n      2\n   TLV-Length\n
          \     Indicates the length of this attribute, including the TLV-Type,\n
          \     TLV-Length, and TLV-Value fields.\n   TLV-Value\n      Contains a
          set of sub-attributes, with the following requirements:\n      It MUST contain
          Softwire46-Rule, defined in Section 3.1.3.1.\n      It MUST contain Softwire46-DMR,
          defined in Section 3.1.3.3.\n      It MAY contain Softwire46-PORTPARAMS,
          defined in Section 3.1.3.5.\n"
        title: 3.1.1.2.  Softwire46-MAP-T Attribute
      - contents:
        - "3.1.1.3.  Softwire46-Lightweight-4over6 Attribute\n   The Softwire46-Lightweight-4over6
          attribute is designed to carry the\n   configuration information for Lightweight
          4over6.  The structure of\n   Softwire46-Lightweight-4over6 is shown below:\n
          \  TLV-Type\n      3\n   TLV-Length\n      Indicates the length of this
          attribute, including the TLV-Type,\n      TLV-Length, and TLV-Value fields.\n
          \  TLV-Value\n      Contains a set of sub-attributes as follows:\n      It
          MUST contain Softwire46-BR, defined in Section 3.1.3.2.\n      It MUST contain
          Softwire46-V4V6Bind, defined in Section 3.1.3.4.\n      It MAY contain Softwire46-PORTPARAMS,
          defined in Section 3.1.3.5.\n"
        title: 3.1.1.3.  Softwire46-Lightweight-4over6 Attribute
      title: 3.1.1.  Softwire46 Attributes
    - contents:
      - "3.1.2.  Softwire46 Sub-attributes\n   Table 2 shows which encapsulated sub-attributes
        are mandatory,\n   optional, or not permitted for each defined Softwire46
        attribute.\n      | Sub-attributes        | MAP-E | MAP-T | Lightweight 4over6
        |\n      | Softwire46-BR         | 1+    | 0     | 1+                 |\n
        \     | Softwire46-Rule       | 1     | 1     | 0                  |\n      |
        Softwire46-DMR        | 0     | 1     | 0                  |\n      | Softwire46-V4V6Bind
        \  | 0     | 0     | 1                  |\n      | Softwire46-PORTPARAMS |
        0-1   | 0-1   | 0-1                |\n                    Table 2: Softwire46
        Sub-attributes\n   The following list defines the meaning of the Table 2 entries.\n
        \  0     Not permitted\n   0-1   Optional; zero or one instance of the attribute
        may be present.\n   1     Mandatory; only one instance of the attribute must
        be present.\n   1+    Mandatory; one or more instances of the attribute may
        be\n         present.\n"
      title: 3.1.2.  Softwire46 Sub-attributes
    - contents:
      - '3.1.3.  Specification of the Softwire46 Sub-attributes

        '
      - contents:
        - "3.1.3.1.  Softwire46-Rule Attribute\n   Softwire46-Rule can only be encapsulated
          in Softwire46-MAP-E\n   (Section 3.1.1.1) or Softwire46-MAP-T (Section 3.1.1.2).
          \ Depending\n   on the deployment scenario, one Basic Mapping Rule (BMR)
          and zero or\n   more Forwarding Mapping Rules (FMRs) MUST be included in\n
          \  Softwire46-MAP-E and Softwire46-MAP-T.\n   Each type of Softwire46-Rule
          also contains a number of sub-\n   attributes, including Rule-IPv6-Prefix,
          Rule-IPv4-Prefix, and EA-\n   Length.  The structure of the sub-attributes
          for Softwire46-Rule is\n   defined in Section 3.1.4.\n   Defining multiple
          TLV types achieves the same design goals as the\n   \"Softwire46 Rule Flags\"
          defined in Section 4.1 of [RFC7598].  Using a\n   TLV type set to 5 is equivalent
          to setting the F flag in the\n   OPTION_S46_RULE S46 Rule Flags field.\n
          \  TLV-Type\n      4 Basic Mapping Rule only (not to be used for forwarding)\n
          \     5 Forwarding Permitted Mapping Rule\n   TLV-Length\n      Indicates
          the length of this attribute, including the TLV-Type,\n      TLV-Length,
          and TLV-Value fields.\n   Data Type\n      The attribute Softwire46-Rule
          is of type \"tlv\" (Section 3.13 of\n      [RFC8044]).\n   TLV-Value\n      This
          field contains a set of attributes as follows:\n      Rule-IPv6-Prefix\n
          \        This attribute contains the IPv6 prefix for use in the MAP\n         rule.
          \ Refer to Section 3.1.4.1.\n      Rule-IPv4-Prefix\n         This attribute
          contains the IPv4 prefix for use in the MAP\n         rule.  Refer to Section
          3.1.4.2.\n      EA-Length\n         This attribute contains the Embedded
          Address (EA) bit length.\n         Refer to Section 3.1.4.3.\n"
        title: 3.1.3.1.  Softwire46-Rule Attribute
      - contents:
        - "3.1.3.2.  Softwire46-BR Attribute\n   Softwire46-BR can only be encapsulated
          in Softwire46-MAP-E\n   (Section 3.1.1.1) or Softwire46-Lightweight-4over6
          (Section 3.1.1.3).\n   There MUST be at least one Softwire46-BR included
          in each\n   Softwire46-MAP-E or Softwire46-Lightweight-4over6.\n   The structure
          of Softwire46-BR is shown below:\n   TLV-Type\n      6\n   TLV-Length\n
          \     18 octets\n   Data Type\n      The attribute Softwire46-BR is of type
          \"ipv6addr\" (Section 3.9 of\n      [RFC8044]).\n   TLV-Value\n      br-ipv6-address.
          \ A fixed-length field of 16 octets that specifies\n      the IPv6 address
          for the Softwire46 Border Relay (BR).\n"
        title: 3.1.3.2.  Softwire46-BR Attribute
      - contents:
        - "3.1.3.3.  Softwire46-DMR Attribute\n   Softwire46-DMR may only appear in
          Softwire46-MAP-T (Section 3.1.1.2).\n   There MUST be exactly one Softwire46-DMR
          included in one Softwire46-\n   MAP-T.\n   The structure of Softwire46-DMR
          is shown below:\n   TLV-Type\n      7\n   TLV-Length\n      4 + length of
          dmr-ipv6-prefix specified in octets.\n   Data Type\n      The attribute
          Softwire46-DMR is of type \"ipv6prefix\" (Section 3.10\n      of [RFC8044]).\n
          \  TLV-Value\n      A variable-length (dmr-prefix6-len) field specifying
          the IPv6\n      prefix (dmr-ipv6-prefix) for the BR.  This field is right-padded\n
          \     with zeros to the nearest octet boundary when dmr-prefix6-len is\n
          \     not divisible by 8.  Prefixes with lengths from 0 to 96 are\n      allowed.\n"
        title: 3.1.3.3.  Softwire46-DMR Attribute
      - contents:
        - "3.1.3.4.  Softwire46-V4V6Bind Attribute\n   Softwire46-V4V6Bind may only
          be encapsulated in Softwire46-\n   Lightweight-4over6 (Section 3.1.1.3).
          \ There MUST be exactly one\n   Softwire46-V4V6Bind included in each Softwire46-Lightweight-4over6.\n
          \  The structure of Softwire46-V4V6Bind is shown below:\n   TLV-Type\n      8\n
          \  TLV-Length\n      Indicates the length of this attribute, including the
          TLV-Type,\n      TLV-Length, and TLV-Value fields.\n   Data Type\n      The
          attribute Softwire46-V4V6Bind is of type \"tlv\" (Section 3.13\n      of
          [RFC8044]).\n   TLV-Value\n      This field contains a set of attributes
          as follows:\n      IPv4-Address\n         This attribute contains an IPv4
          address, used to specify the\n         full or shared IPv4 address of the
          CE.  Refer to\n         Section 3.1.5.1.\n      Bind-IPv6-Prefix\n         This
          attribute contains an IPv6 prefix used to indicate which\n         configured
          prefix the Softwire46 CE should use for constructing\n         the softwire.
          \ Refer to Section 3.1.5.2.\n"
        title: 3.1.3.4.  Softwire46-V4V6Bind Attribute
      - contents:
        - "3.1.3.5.  Softwire46-PORTPARAMS Attribute\n   Softwire46-PORTPARAMS is
          optional.  It is used to specify port set\n   information for IPv4 address
          sharing between clients.\n   Softwire46-PORTPARAMS MAY be included in any
          of the Softwire46\n   attributes.\n   The structure of Softwire46-PORTPARAMS
          is shown below:\n   TLV-Type\n      9\n   TLV-Length\n      Indicates the
          length of this attribute, including the TLV-Type,\n      TLV-Length, and
          TLV-Value fields.\n   Data Type\n      The attribute Softwire46-PORTPARAMS
          is of type \"tlv\" (Section 3.13\n      of [RFC8044]).\n   TLV-Value\n      This
          field contains a set of attributes as follows:\n      PSID-Offset\n         This
          attribute specifies the numeric value for the Softwire46\n         algorithm's
          excluded port range/offset bits (a bits).  Refer to\n         Section 3.1.6.1.\n
          \     PSID-Len\n         This attribute specifies the number of significant
          bits in the\n         PSID field (also known as 'k').  Refer to Section
          3.1.6.2.\n      PSID\n         This attribute specifies the PSID value.
          \ Refer to\n         Section 3.1.6.3.\n"
        title: 3.1.3.5.  Softwire46-PORTPARAMS Attribute
      title: 3.1.3.  Specification of the Softwire46 Sub-attributes
    - contents:
      - "3.1.4.  Sub-attributes for Softwire46-Rule\n   There are two types of Softwire46-Rule:
        the Basic Mapping Rule and\n   the Forwarding Mapping Rule, indicated by the
        value in the TLV-Type\n   field of Softwire46-Rule (Section 3.1.3.1).\n   Each
        type of Softwire46-Rule also contains a number of sub-attributes\n   as detailed
        in the following subsections.\n"
      - contents:
        - "3.1.4.1.  Rule-IPv6-Prefix Attribute\n   Rule-IPv6-Prefix is REQUIRED for
          every Softwire46-Rule.  There MUST\n   be exactly one Rule-IPv6-Prefix encapsulated
          in each type of\n   Softwire46-Rule.\n   Rule-IPv6-Prefix follows the framed
          IPv6 prefix designed in [RFC3162]\n   and [RFC8044].\n   The structure of
          Rule-IPv6-Prefix is shown below:\n   TLV-Type\n      10\n   TLV-Length\n
          \     4 + length of rule-ipv6-prefix specified in octets.\n   Data Type\n
          \     The attribute Rule-IPv6-Prefix is of type \"ipv6prefix\"\n      (Section
          3.10 of [RFC8044]).\n   TLV-Value\n      A variable-length field that specifies
          an IPv6 prefix (rule-\n      ipv6-prefix) appearing in the MAP rule.\n"
        title: 3.1.4.1.  Rule-IPv6-Prefix Attribute
      - contents:
        - "3.1.4.2.  Rule-IPv4-Prefix Attribute\n   This attribute is used to convey
          the MAP Rule IPv4 prefix.  The\n   structure of Rule-IPv4-Prefix is shown
          below:\n   TLV-Type\n      11\n   TLV-Length\n      4 + length of rule-ipv4-prefix
          specified in octets.\n   Data Type\n      The attribute Rule-IPv4-Prefix
          is of type \"ipv4prefix\"\n      (Section 3.11 of [RFC8044]).\n   TLV-Value\n
          \     A variable-length field that specifies an IPv4 prefix (rule-\n      ipv4-prefix)
          appearing in the MAP rule.\n"
        title: 3.1.4.2.  Rule-IPv4-Prefix Attribute
      - contents:
        - "3.1.4.3.  EA-Length Attribute\n   This attribute is used to convey the
          Embedded Address (EA) bit\n   length.  The structure of EA-Length is shown
          below:\n   TLV-Type\n      12\n   TLV-Length\n      6 octets\n   Data Type\n
          \     The attribute EA-Length is of type \"integer\" (Section 3.1 of\n      [RFC8044]).\n
          \  TLV-Value\n      EA-len; 32 bits long.  Specifies the Embedded Address
          (EA) bit\n      length.  Allowed values range from 0 to 48.\n"
        title: 3.1.4.3.  EA-Length Attribute
      title: 3.1.4.  Sub-attributes for Softwire46-Rule
    - contents:
      - '3.1.5.  Attributes for Softwire46-v4v6Bind

        '
      - contents:
        - "3.1.5.1.  IPv4-Address Attribute\n   The IPv4-Address MAY be used to specify
          the full or shared IPv4\n   address of the CE.\n   The structure of IPv4-Address
          is shown below:\n   TLV-Type\n      13\n   TLV-Length\n      6 octets\n
          \  Data Type\n      The attribute IPv4-Address is of type \"ipv4addr\" (Section
          3.8 of\n      [RFC8044]).\n   TLV-Value\n      32 bits long.  Specifies
          the IPv4 address (ipv4-address) to appear\n      in Softwire46-V4V6Bind
          (Section 3.1.3.4).\n"
        title: 3.1.5.1.  IPv4-Address Attribute
      - contents:
        - "3.1.5.2.  Bind-IPv6-Prefix Attribute\n   The Bind-IPv6-Prefix is used by
          the CE to identify the correct IPv6\n   prefix to be used as the tunnel
          source.\n   The structure of Bind-IPv6-Prefix is shown below:\n   TLV-Type\n
          \     14\n   TLV-Length\n      4 + length of bind-ipv6-prefix specified
          in octets.\n   Data Type\n      The attribute Bind-IPv6-Prefix is of type
          \"ipv6prefix\"\n      (Section 3.10 of [RFC8044]).\n   TLV-Value\n      A
          variable-length field specifying the IPv6 prefix or address for\n      the
          Softwire46 CE (bind-ipv6-prefix).  This field is right-padded\n      with
          zeros to the nearest octet boundary when the prefix length is\n      not
          divisible by 8.\n"
        title: 3.1.5.2.  Bind-IPv6-Prefix Attribute
      title: 3.1.5.  Attributes for Softwire46-v4v6Bind
    - contents:
      - '3.1.6.  Attributes for Softwire46-PORTPARAMS

        '
      - contents:
        - "3.1.6.1.  PSID-Offset Attribute\n   This attribute is used to convey the
          Port Set Identifier offset as\n   defined in [RFC7597].  This attribute
          is encoded in 32 bits as per\n   the recommendation in Appendix A.2.1 of
          [RFC6158].\n   The structure of PSID-Offset is shown below:\n   TLV-Type\n
          \     15\n   TLV-Length\n      6 octets\n   Data Type\n      The attribute
          PSID-Offset is of type \"integer\" (Section 3.1 of\n      [RFC8044]).\n
          \  TLV-Value\n      Contains the PSID-Offset (8 bits) right justified, and
          the unused\n      bits in this field MUST be set to zero.  This field specifies
          the\n      numeric value for the Softwire46 algorithm's excluded port range/\n
          \     offset bits (a bits), as per Section 5.1 of [RFC7597].\n      Default
          values for this field are specific to the softwire\n      mechanism being
          implemented and are defined in the relevant\n      specification document.\n"
        title: 3.1.6.1.  PSID-Offset Attribute
      - contents:
        - "3.1.6.2.  PSID-Len Attribute\n   This attribute is used to convey the PSID
          length as defined in\n   [RFC7597].  This attribute is encoded in 32 bits
          as per the\n   recommendation in Appendix A.2.1 of [RFC6158].\n   The structure
          of PSID-Len is shown below:\n   TLV-Type\n      16\n   TLV-Length\n      6
          octets\n   Data Type\n      The attribute PSID-Len is of type \"integer\"
          (Section 3.1 of\n      [RFC8044]).\n   TLV-Value\n      Contains the PSID-len
          (8 bits) right justified, and the unused\n      bits in this field MUST
          be set to zero.  This field specifies the\n      number of significant bits
          in the PSID field (also known as 'k').\n      When set to 0, the PSID field
          is to be ignored.  After the first a\n      bits, there are k bits in the
          port number representing the value\n      of the PSID.  Subsequently, the
          address-sharing ratio would be\n      2^k.\n"
        title: 3.1.6.2.  PSID-Len Attribute
      - contents:
        - "3.1.6.3.  PSID Attribute\n   This attribute is used to convey the PSID
          as defined in [RFC7597].\n   This attribute is encoded in 32 bits as per
          the recommendation in\n   Appendix A.2.1 of [RFC6158].\n   The structure
          of PSID is shown below:\n   TLV-Type\n      17\n   TLV-Length\n      6 octets\n
          \  Data Type\n      The attribute PSID is of type \"integer\" (Section 3.1
          of\n      [RFC8044]).\n   TLV-Value\n      Contains the PSID (16 bits) right
          justified, and the unused bits\n      in this field MUST be set to zero.\n
          \     The PSID value algorithmically identifies a set of ports assigned\n
          \     to a CE.  The first k bits on the left of this 2-octet field are\n
          \     the PSID value.  The remaining (16-k) bits on the right are\n      padding
          zeros.\n"
        title: 3.1.6.3.  PSID Attribute
      title: 3.1.6.  Attributes for Softwire46-PORTPARAMS
    title: 3.1.  Softwire46-Configuration Attribute
  - contents:
    - "3.2.  Softwire46-Priority Attribute\n   The Softwire46-Priority Attribute includes
      an ordered list of\n   Softwire46 mechanisms allowing the client to prioritize
      which\n   mechanism to use, corresponding to OPTION_S46_PRIORITY defined in\n
      \  [RFC8026].  The following requirements apply:\n      The Softwire46-Priority
      Attribute MAY appear in an Access-Accept\n      packet.  It MAY also appear
      in an Access-Request packet.\n      The Softwire46-Priority Attribute MAY appear
      in a CoA-Request\n      packet.\n      The Softwire46-Priority Attribute MAY
      appear in an Accounting-\n      Request packet.\n      The Softwire46-Priority
      Attribute MUST NOT appear in any other\n      RADIUS packet.\n   The Softwire46-Priority
      Attribute is structured as follows:\n   Type\n      241\n   Length\n      Indicates
      the length of this attribute, including the Type,\n      Length, Extended-Type
      and Value fields.\n   Extended-Type\n      10\n   TLV-Value\n      The attribute
      includes one or more Softwire46-Option-Code TLVs: A\n      Softwire46-Priority
      Attribute MUST contain at least one\n      Softwire46-Option-Code TLV (Section
      3.2.1).\n      Softwire46 mechanisms are prioritized in the appearance order
      in\n      the Softwire46-Priority Attribute.  That is, the first-appearing\n
      \     mechanism is most preferred.\n   The Softwire46-Priority Attribute is
      associated with the following\n   identifier: 241.10.\n"
    - contents:
      - "3.2.1.  Softwire46-Option-Code\n   This attribute is used to convey an option
        code assigned to a\n   Softwire46 mechanism [RFC8026].  This attribute is
        encoded in 32 bits\n   as per the recommendation in Appendix A.2.1 of [RFC6158].\n
        \  The structure of Softwire46-Option-Code is shown below:\n   TLV-Type\n
        \     18\n   TLV-Length\n      6 octets\n   Data Type\n      The attribute
        Softwire46-Option-Code is of type \"integer\"\n      (Section 3.1 of [RFC8044]).\n
        \  TLV-Value\n      A 32-bit IANA-registered option code representing a Softwire46\n
        \     mechanism (Softwire46-option-code).  The codes and their\n      corresponding
        Softwire46 mechanisms are listed in Section 7.3.\n"
      title: 3.2.1.  Softwire46-Option-Code
    title: 3.2.  Softwire46-Priority Attribute
  - contents:
    - "3.3.  Softwire46-Multicast Attribute\n   The Softwire46-Multicast Attribute
      conveys the IPv6 prefixes to be\n   used to synthesize multicast and unicast
      IPv4-embedded IPv6 addresses\n   as per [RFC8114].  This attribute is of type
      \"tlv\" and contains\n   additional TLVs.  The following requirements apply:\n
      \  *  The BNG SHALL use the IPv6 prefixes returned in the RADIUS\n      Softwire46-Multicast
      Attribute to populate the DHCPv6 PREFIX64\n      Option [RFC8115].\n   *  This
      attribute MAY be used in Access-Request packets as a hint to\n      the RADIUS
      server.  For example, if the BNG is preconfigured for\n      Softwire46-Multicast,
      these prefixes may be inserted in the\n      attribute.  The RADIUS server MAY
      ignore the hint sent by the BNG,\n      and it MAY assign a different Softwire46-Multicast
      Attribute.\n   *  The Softwire46-Multicast Attribute MAY appear in an Access-\n
      \     Request, Access-Accept, CoA-Request, and Accounting-Request\n      packet.\n
      \  *  The Softwire46-Multicast Attribute MUST NOT appear in any other\n      RADIUS
      packet.\n   *  The Softwire46-Multicast Attribute MAY contain ASM-Prefix64\n
      \     (Section 3.3.1), SSM-Prefix64 (Section 3.3.2), and U-Prefix64\n      (Section
      3.3.3).\n   *  The Softwire46-Multicast Attribute MUST include ASM-Prefix64
      or\n      SSM-Prefix64, and it MAY include both.\n   *  The U-Prefix64 MUST
      be present when SSM-Prefix64 is present.\n      U-Prefix64 MAY be present when
      ASM-Prefix64 is present.\n   The Softwire46-Multicast Attribute is structured
      as follows:\n   Type\n      241\n   Length\n      This field indicates the total
      length in bytes of all fields of\n      this attribute, including the Type,
      Length, Extended-Type, and the\n      entire length of the embedded attributes.\n
      \  Extended-Type\n      11\n   Value\n      This field contains a set of attributes
      as follows:\n      ASM-Prefix64\n         This attribute contains the Any-Source
      Multicast (ASM) IPv6\n         prefix.  Refer to Section 3.3.1.\n      SSM-Prefix64\n
      \        This attribute contains the Source-Source Multicast (SSM) IPv6\n         prefix.
      \ Refer to Section 3.3.2.\n      U-Prefix64\n         This attribute contains
      the IPv4 prefix used for address\n         translation.  Refer to Section 3.3.3.\n
      \  The Softwire46-Multicast Attribute is associated with the following\n   identifier:
      241.11.\n"
    - contents:
      - "3.3.1.  ASM-Prefix64 Attribute\n   The ASM-Prefix64 attribute is structured
        as follows:\n   TLV-Type\n      19\n   TLV-Length\n      16 octets.  The length
        of asm-prefix64 must be /96 [RFC8115].\n   Data Type\n      The attribute
        ASM-Prefix64 is of type \"ipv6prefix\" (Section 3.10\n      of [RFC8044]).\n
        \  TLV-Value\n      This field specifies the IPv6 multicast prefix (asm-prefix64)
        to\n      be used to synthesize the IPv4-embedded IPv6 addresses of the\n
        \     multicast groups in the ASM mode.  The conveyed multicast IPv6\n      prefix
        MUST belong to the ASM range.\n"
      title: 3.3.1.  ASM-Prefix64 Attribute
    - contents:
      - "3.3.2.  SSM-Prefix64 Attribute\n   The SSM-Prefix64 attribute is structured
        as follows:\n   Type\n      20\n   TLV-Length\n      16 octets.  The length
        of ssm-prefix64 must be /96 [RFC8115].\n   Data Type\n      The attribute
        SSM-Prefix64 is of type \"ipv6prefix\" (Section 3.10\n      of [RFC8044]).\n
        \  TLV-Type\n      This field specifies the IPv6 multicast prefix (ssm-prefix64)
        to\n      be used to synthesize the IPv4-embedded IPv6 addresses of the\n
        \     multicast groups in the SSM mode.  The conveyed multicast IPv6\n      prefix
        MUST belong to the SSM range.\n"
      title: 3.3.2.  SSM-Prefix64 Attribute
    - contents:
      - "3.3.3.  U-Prefix64 Attribute\n   The structure of U-Prefix64 is shown below:\n
        \  TLV-Type\n      21\n   TLV-Length\n      4 + length of unicast-prefix.
        \ As specified in [RFC6052], the\n      unicast-prefix prefix length MUST
        be set to 32, 40, 48, 56, 64, or\n      96.\n   Data Type\n      The attribute
        U-Prefix64 is of type \"ipv6prefix\" (Section 3.10 of\n      [RFC8044]).\n
        \  TLV-Value\n      This field identifies the IPv6 unicast prefix (u-prefix64)
        to be\n      used in the SSM mode for constructing the IPv4-embedded IPv6\n
        \     addresses representing the IPv4 multicast sources in the IPv6\n      domain.
        \ It may also be used to extract the IPv4 address from the\n      received
        multicast data flows.\n"
      title: 3.3.3.  U-Prefix64 Attribute
    title: 3.3.  Softwire46-Multicast Attribute
  title: 3.  New RADIUS Attributes
- contents:
  - "4.  A Sample Configuration Process with RADIUS\n   Figure 2 illustrates how the
    RADIUS and DHCPv6 protocols interwork to\n   provide CE with softwire configuration
    information.\n   CE                             BNG                     AAA Server\n
    \  |-------1.DHCPv6 Solicit------->|                               |\n   |(ORO
    with unicast and/or       |                               |\n   |    multicast
    container option |                               |\n   |    codes(s))                  |
    \                              |\n   |<----4.DHCPv6 Advertisement----|                               |\n
    \  |     (container option(s))     |                               |\n   |-------5.DHCPv6
    \ Request------>|                               |\n   |     (container option(s))
    \    |                               |\n   |<--------6.DHCPv6 Reply--------|                               |\n
    \  |     (container option(s))     |                               |\n                DHCPv6
    \                        RADIUS\n          Figure 2: Interaction between DHCPv6
    and AAA Server with\n                           RADIUS Authentication\n   1.  The
    CE creates a DHCPv6 Solicit message.  For unicast softwire\n       configuration,
    the message includes an OPTION_REQUEST_OPTION (6)\n       with the Softwire46
    Container option code(s) as defined in\n       [RFC7598].  OPTION_S46_CONT_MAPE
    (94) should be included for MAP-\n       E, OPTION_S46_CONT_MAPT (95) for MAP-T,
    and OPTION_S46_CONT_LW\n       (96) for Lightweight 4over6.  For multicast configuration,
    the\n       option number for OPTION_V6_PREFIX64 (113) is included in the\n       client's
    Option Request Option (ORO).  The message is sent to the\n       BNG.\n   2.  On
    receipt of the DHCPv6 Solicit message, the BNG constructs a\n       RADIUS Access-Request
    message containing a User-Name Attribute\n       (1) (containing either a CE Media
    Access Control (MAC) address,\n       interface-id, or both) and a User-Password
    Attribute (2) (with a\n       preconfigured shared password between the CE and
    AAA server as\n       defined in [RFC2865]).  The Softwire46-Configuration Attribute\n
    \      and/or Softwire46-Multicast Attribute are also included (as\n       requested
    by the client).  The resulting message is sent to the\n       AAA server.\n   3.
    \ The AAA server authenticates the request.  If this is successful,\n       and
    a suitable configuration is available, an Access-Accept\n       message is sent
    to the BNG containing the requested\n       Softwire46-Configuration Attribute
    or Softwire46-Multicast\n       Attribute.  It is the responsibility of the AAA
    server to ensure\n       the consistency of the provided configuration.\n   4.
    \ The BNG maps the received softwire configuration into the\n       corresponding
    fields in the DHCPv6 softwire configuration\n       option(s).  These are included
    in the DHCPv6 Advertise message,\n       which is sent to the CE.\n   5.  The
    CE sends a DHCPv6 Request message.  In the ORO, the option\n       codes of any
    of the required softwire options that were received\n       in the DHCPv6 Advertise
    message are included.\n   6.  The BNG sends a DHCPv6 Reply message to the client
    containing the\n       softwire container option(s) enumerated in the ORO.\n   The
    authorization operation could be done independently after the\n   authentication
    process.  In this case, steps 1-5 are completed as\n   above, then the following
    steps are performed:\n   6a.  When the BNG receives the DHCPv6 Request, it constructs
    a RADIUS\n        Access-Request message, which contains a Service-Type Attribute\n
    \       (6) with the value \"Authorize Only\" (17), the corresponding\n        Softwire46-Configuration
    Attribute, and a State Attribute\n        obtained from the previous authentication
    process according to\n        [RFC5080].  The resulting message is sent to the
    AAA server.\n   7a.  The AAA server checks the authorization request.  If it is\n
    \       approved, an Access-Accept message is returned to the BNG with\n        the
    corresponding Softwire46-Configuration Attribute.\n   8a.  The BNG sends a Reply
    message to the client containing the\n        softwire container options enumerated
    in the ORO.\n   In addition to the above, the following points need to be considered:\n
    \  *  In the configuration message flows described above, the Message-\n      Authenticator
    (type 80) [RFC2869] should be used to protect both\n      Access-Request and Access-Accept
    messages.\n   *  If the BNG does not receive the corresponding\n      Softwire46-Configuration
    Attribute in the Access-Accept message,\n      it may fall back to creating the
    DHCPv6 softwire configuration\n      options using the preconfigured Softwire46
    configuration if this\n      is present.\n   *  If the BNG receives an Access-Reject
    from the AAA server, then the\n      Softwire46 configuration must not be supplied
    to the client.\n   *  As specified in Section 18.2.5 of [RFC8415] (\"Creation
    and\n      Transmission of Rebind Messages\") if the DHCPv6 server to which\n
    \     the DHCPv6 Renew message was sent at time T1 has not responded by\n      time
    T2, the CE (DHCPv6 client) should enter the Rebind state and\n      attempt to
    contact any available server.  In this situation, a\n      secondary BNG receiving
    the DHCPv6 message must initiate a new\n      Access-Request message towards the
    AAA server.  The secondary BNG\n      includes the Softwire46-Configuration Attribute
    in this Access-\n      Request message.\n   *  For Lightweight 4over6, the CE's
    binding state needs to be\n      synchronized between the clients and the Lightweight
    AFTR\n      (lwAFTR)/BR.  This can be achieved in two ways: static\n      preconfiguration
    of the bindings on both the AAA server and lwAFTR\n      or on demand, whereby
    the AAA server updates the lwAFTR with the\n      CE's binding state as it is
    created or deleted.\n   In some deployments, the DHCP server may use the Accounting-Request\n
    \  to report the softwire configuration returned to a requesting host to\n   a
    AAA server.  It is the responsibility of the DHCP server to ensure\n   the consistency
    of the configuration provided to the requesting\n   hosts.  Reported data to a
    AAA server may be required for various\n   operational purposes (e.g., regulatory).\n
    \  A configuration change (e.g., BR address) may result in an exchange\n   of
    CoA-Requests between the BNG and the AAA server, as shown in\n   Figure 3.  Concretely,
    when the BNG receives a CoA-Request message\n   containing Softwire46 attributes,
    it sends a DHCPv6 Reconfigure\n   message to the appropriate CE to inform that
    CE that an updated\n   configuration is available.  Upon receipt of such a message,
    the CE\n   sends a DHCPv6 Renew or Information-Request in order to receive the\n
    \  updated Softwire46 configuration.  In deployments where the BNG\n   embeds
    a DHCPv6 relay, CoA-Requests can be used following the\n   procedure specified
    in [RFC6977].\n           CE                          BNG                    AAA
    Server\n           |---DHCPv6 Solicit--------->|                            |\n
    \          |<--DHCPv6 Reconfigure------|                            |\n                 Figure
    3: Change of Configuration Example\n"
  title: 4.  A Sample Configuration Process with RADIUS
- contents:
  - "5.  Table of Attributes\n   This document specifies three new RADIUS attributes,
    and their\n   formats are as follows:\n   *  Softwire46-Configuration Attribute:
    241.9\n   *  Softwire46-Priority Attribute: 241.10\n   *  Softwire46-Multicast
    Attribute: 241.11\n   Table 3 describes which attributes may be found in which
    kinds of\n   packets and in what quantity.\n   |Request|Accept|Reject|Challenge|Acct|CoA-Req|
    #    | Attribute     |\n   | 0-1   | 0-1  | 0    | 0       |0-1 | 0-1   |241.9
    | Softwire46-   |\n   | 0-1   | 0-1  | 0    | 0       |0-1 | 0-1   |241.10| Softwire46-
    \  |\n   | 0-1   | 0-1  | 0    | 0       |0-1 | 0-1   |241.11| Softwire46-   |\n
    \                       Table 3: Table of Attributes\n"
  title: 5.  Table of Attributes
- contents:
  - "6.  Security Considerations\n   Section 9 of [RFC7596] discusses security issues
    related to\n   Lightweight 4over6; Section 10 of [RFC7597] discusses security
    issues\n   related to MAP-E; Section 13 of [RFC7599] discusses security issues\n
    \  related to MAP-T; and Section 9 of [RFC8114] discusses security\n   issues
    related to the delivery of IPv4 multicast services to IPv4\n   clients over an
    IPv6 multicast network.\n   This document does not introduce any security issues
    inherently\n   different from those already identified in Section 8 of [RFC2865]
    and\n   Section 6 of [RFC5176] for CoA messages.  Known security\n   vulnerabilities
    of the RADIUS protocol discussed in Section 7 of\n   [RFC2607] and Section 7 of
    [RFC2869] apply to this specification.\n   These well-established properties of
    the RADIUS protocol place some\n   limitations on how it can safely be used, since
    there is some\n   inherent requirement to trust the counterparty to not misbehave.\n
    \  Accordingly, this document targets deployments where a trusted\n   relationship
    is in place between the RADIUS client and server, with\n   communication optionally
    secured by IPsec or Transport Layer Security\n   (TLS) [RFC6614].  The use of
    IPsec [RFC4301] for providing security\n   when RADIUS is carried in IPv6 is discussed
    in [RFC3162].\n   Security considerations for interactions between a Softwire46
    CE and\n   the BNG are discussed in Section 9 of [RFC7598] (DHCPv6 options for\n
    \  the configuration of Softwire46 address and port-mapped clients),\n   Section
    3 of [RFC8026] (a DHCPv6-based Softwire46 prioritization\n   mechanism), and Section
    5 of [RFC8115] (DHCPv6 options for\n   configuration of IPv4-embedded IPv6 prefixes).\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   IANA has made new code point assignments for RADIUS
    attributes as\n   described in the following subsections.  The assignments should
    use\n   the RADIUS registry available at <https://www.iana.org/assignments/\n
    \  radius-types/>.\n"
  - contents:
    - "7.1.  New RADIUS Attributes\n   IANA has assigned the attribute types defined
      in this document from\n   the RADIUS namespace as described in Section 2 (IANA
      Considerations)\n   of [RFC3575], in accordance with BCP 26 [RFC8126].\n   IANA
      has registered three new RADIUS attributes from the \"Short\n   Extended Space\"
      section of [RFC6929].  The attributes are the\n   Softwire46-Configuration Attribute,
      Softwire46-Priority Attribute,\n   and Softwire46-Multicast Attribute:\n      |
      Type   | Description              | Data Type | Reference   |\n      | 241.9
      \ | Softwire46-Configuration | tlv       | Section 3.1 |\n      | 241.10 | Softwire46-Priority
      \     | tlv       | Section 3.2 |\n      | 241.11 | Softwire46-Multicast     |
      tlv       | Section 3.3 |\n                       Table 4: New RADIUS Attributes\n"
    title: 7.1.  New RADIUS Attributes
  - contents:
    - "7.2.  RADIUS Softwire46 Configuration and Multicast Attributes\n   IANA has
      created a new registry called \"RADIUS Softwire46\n   Configuration and Multicast
      Attributes\".\n   All attributes in this registry have one or more parent RADIUS\n
      \  attributes in nesting (refer to [RFC6929]).\n   This registry has been initially
      populated with the following values:\n    | Value  | Description                   |
      Data Type  | Reference |\n    | 0      | Reserved                      |            |
      \          |\n    | 1      | Softwire46-MAP-E              | tlv        | Section
      \  |\n    | 2      | Softwire46-MAP-T              | tlv        | Section   |\n
      \   | 3      | Softwire46-Lightweight-4over6 | tlv        | Section   |\n    |
      4      | Softwire46-Rule (BMR)         | tlv        | Section   |\n    | 5      |
      Softwire46-Rule (FMR)         | tlv        | Section   |\n    | 6      | Softwire46-BR
      \                | ipv6addr   | Section   |\n    | 7      | Softwire46-DMR                |
      ipv6prefix | Section   |\n    | 8      | Softwire46-V4V6Bind           | tlv
      \       | Section   |\n    | 9      | Softwire46-PORTPARAMS         | tlv        |
      Section   |\n    | 10     | Rule-IPv6-Prefix              | ipv6prefix | Section
      \  |\n    | 11     | Rule-IPv4-Prefix              | ipv4prefix | Section   |\n
      \   | 12     | EA-Length                     | integer    | Section   |\n    |
      13     | IPv4-Address                  | ipv4addr   | Section   |\n    | 14
      \    | Bind-IPv6-Prefix              | ipv6prefix | Section   |\n    | 15     |
      PSID-Offset                   | integer    | Section   |\n    | 16     | PSID-Len
      \                     | integer    | Section   |\n    | 17     | PSID                          |
      integer    | Section   |\n    | 18     | Softwire46-Option-Code        | integer
      \   | Section   |\n    | 19     | ASM-Prefix64                  | ipv6prefix
      | Section   |\n    | 20     | SSM-Prefix64                  | ipv6prefix | Section
      \  |\n    | 21     | U-Prefix64                    | ipv6prefix | Section   |\n
      \   | 22-255 | Unassigned                    |            |           |\n     Table
      5: RADIUS Softwire46 Configuration and Multicast Attributes\n   The registration
      procedure for this registry is Standards Action as\n   defined in [RFC8126].\n"
    title: 7.2.  RADIUS Softwire46 Configuration and Multicast Attributes
  - contents:
    - "7.3.  Softwire46 Mechanisms and Their Identifying Option Codes\n   The Softwire46-Priority
      Attribute conveys an ordered list of option\n   codes assigned to Softwire46
      mechanisms, for which IANA has created\n   and will maintain a new registry
      titled \"Option Codes Permitted in\n   the Softwire46-Priority Attribute\".\n
      \  Table 6 shows the initial version of allowed option codes and the\n   Softwire46
      mechanisms that they represent.  The option code for DS-\n   Lite is derived
      from the IANA-allocated RADIUS Attribute Type value\n   for DS-Lite [RFC6519].
      \ The option codes for MAP-E, MAP-T, and\n   Lightweight 4over6 are the TLV-Type
      values for the MAP-E, MAP-T, and\n   Lightweight 4over6 attributes defined in
      Section 3.1.1.\n            | Option Code | Softwire46 Mechanism | Reference
      |\n            | 1           | MAP-E                | [RFC7597] |\n            |
      2           | MAP-T                | [RFC7599] |\n            | 3           |
      Lightweight 4over6   | [RFC7596] |\n            | 144         | DS-Lite              |
      [RFC6519] |\n                 Table 6: Option Codes to S46 Mechanisms\n   Additional
      option codes may be added to this list in the future using\n   the IETF Review
      process described in Section 4.8 of [RFC8126].\n"
    title: 7.3.  Softwire46 Mechanisms and Their Identifying Option Codes
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n              \"Remote
      Authentication Dial In User Service (RADIUS)\",\n              RFC 2865, DOI
      10.17487/RFC2865, June 2000,\n              <https://www.rfc-editor.org/info/rfc2865>.\n
      \  [RFC3162]  Aboba, B., Zorn, G., and D. Mitton, \"RADIUS and IPv6\",\n              RFC
      3162, DOI 10.17487/RFC3162, August 2001,\n              <https://www.rfc-editor.org/info/rfc3162>.\n
      \  [RFC3575]  Aboba, B., \"IANA Considerations for RADIUS (Remote\n              Authentication
      Dial In User Service)\", RFC 3575,\n              DOI 10.17487/RFC3575, July
      2003,\n              <https://www.rfc-editor.org/info/rfc3575>.\n   [RFC5080]
      \ Nelson, D. and A. DeKok, \"Common Remote Authentication\n              Dial
      In User Service (RADIUS) Implementation Issues and\n              Suggested
      Fixes\", RFC 5080, DOI 10.17487/RFC5080, December\n              2007, <https://www.rfc-editor.org/info/rfc5080>.\n
      \  [RFC5176]  Chiba, M., Dommety, G., Eklund, M., Mitton, D., and B.\n              Aboba,
      \"Dynamic Authorization Extensions to Remote\n              Authentication Dial
      In User Service (RADIUS)\", RFC 5176,\n              DOI 10.17487/RFC5176, January
      2008,\n              <https://www.rfc-editor.org/info/rfc5176>.\n   [RFC6052]
      \ Bao, C., Huitema, C., Bagnulo, M., Boucadair, M., and X.\n              Li,
      \"IPv6 Addressing of IPv4/IPv6 Translators\", RFC 6052,\n              DOI 10.17487/RFC6052,
      October 2010,\n              <https://www.rfc-editor.org/info/rfc6052>.\n   [RFC6158]
      \ DeKok, A., Ed. and G. Weber, \"RADIUS Design Guidelines\",\n              BCP
      158, RFC 6158, DOI 10.17487/RFC6158, March 2011,\n              <https://www.rfc-editor.org/info/rfc6158>.\n
      \  [RFC6929]  DeKok, A. and A. Lior, \"Remote Authentication Dial In User\n
      \             Service (RADIUS) Protocol Extensions\", RFC 6929,\n              DOI
      10.17487/RFC6929, April 2013,\n              <https://www.rfc-editor.org/info/rfc6929>.\n
      \  [RFC8026]  Boucadair, M. and I. Farrer, \"Unified IPv4-in-IPv6\n              Softwire
      Customer Premises Equipment (CPE): A DHCPv6-Based\n              Prioritization
      Mechanism\", RFC 8026, DOI 10.17487/RFC8026,\n              November 2016, <https://www.rfc-editor.org/info/rfc8026>.\n
      \  [RFC8044]  DeKok, A., \"Data Types in RADIUS\", RFC 8044,\n              DOI
      10.17487/RFC8044, January 2017,\n              <https://www.rfc-editor.org/info/rfc8044>.\n
      \  [RFC8115]  Boucadair, M., Qin, J., Tsou, T., and X. Deng, \"DHCPv6\n              Option
      for IPv4-Embedded Multicast and Unicast IPv6\n              Prefixes\", RFC
      8115, DOI 10.17487/RFC8115, March 2017,\n              <https://www.rfc-editor.org/info/rfc8115>.\n
      \  [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8415]  Mrugalski, T., Siodelski,
      M., Volz, B., Yourtchenko, A.,\n              Richardson, M., Jiang, S., Lemon,
      T., and T. Winters,\n              \"Dynamic Host Configuration Protocol for
      IPv6 (DHCPv6)\",\n              RFC 8415, DOI 10.17487/RFC8415, November 2018,\n
      \             <https://www.rfc-editor.org/info/rfc8415>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [LIGHTWEIGHT-4OVER6]\n              Xie, C.,
      Sun, Q., Qiong, Q., Zhou, C., Tsou, T., and Z.\n              Liu, \"Radius
      Extension for Lightweight 4over6\", Work in\n              Progress, Internet-Draft,
      draft-sun-softwire-lw4over6-\n              radext-01, 6 March 2014, <https://tools.ietf.org/html/\n
      \             draft-sun-softwire-lw4over6-radext-01>.\n   [RADIUS-EXT]\n              Wang,
      Q., Meng, W., Wang, C., and M. Boucadair, \"RADIUS\n              Extensions
      for IPv4-Embedded Multicast and Unicast IPv6\n              Prefixes\", Work
      in Progress, Internet-Draft, draft-wang-\n              radext-multicast-radius-ext-00,
      2 December 2015,\n              <https://tools.ietf.org/html/draft-wang-radext-multicast-\n
      \             radius-ext-00>.\n   [RFC2607]  Aboba, B. and J. Vollbrecht, \"Proxy
      Chaining and Policy\n              Implementation in Roaming\", RFC 2607,\n
      \             DOI 10.17487/RFC2607, June 1999,\n              <https://www.rfc-editor.org/info/rfc2607>.\n
      \  [RFC2869]  Rigney, C., Willats, W., and P. Calhoun, \"RADIUS\n              Extensions\",
      RFC 2869, DOI 10.17487/RFC2869, June 2000,\n              <https://www.rfc-editor.org/info/rfc2869>.\n
      \  [RFC4301]  Kent, S. and K. Seo, \"Security Architecture for the\n              Internet
      Protocol\", RFC 4301, DOI 10.17487/RFC4301,\n              December 2005, <https://www.rfc-editor.org/info/rfc4301>.\n
      \  [RFC6333]  Durand, A., Droms, R., Woodyatt, J., and Y. Lee, \"Dual-\n              Stack
      Lite Broadband Deployments Following IPv4\n              Exhaustion\", RFC 6333,
      DOI 10.17487/RFC6333, August 2011,\n              <https://www.rfc-editor.org/info/rfc6333>.\n
      \  [RFC6346]  Bush, R., Ed., \"The Address plus Port (A+P) Approach to\n              the
      IPv4 Address Shortage\", RFC 6346,\n              DOI 10.17487/RFC6346, August
      2011,\n              <https://www.rfc-editor.org/info/rfc6346>.\n   [RFC6519]
      \ Maglione, R. and A. Durand, \"RADIUS Extensions for Dual-\n              Stack
      Lite\", RFC 6519, DOI 10.17487/RFC6519, February\n              2012, <https://www.rfc-editor.org/info/rfc6519>.\n
      \  [RFC6614]  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,\n              \"Transport
      Layer Security (TLS) Encryption for RADIUS\",\n              RFC 6614, DOI 10.17487/RFC6614,
      May 2012,\n              <https://www.rfc-editor.org/info/rfc6614>.\n   [RFC6977]
      \ Boucadair, M. and X. Pougnard, \"Triggering DHCPv6\n              Reconfiguration
      from Relay Agents\", RFC 6977,\n              DOI 10.17487/RFC6977, July 2013,\n
      \             <https://www.rfc-editor.org/info/rfc6977>.\n   [RFC7596]  Cui,
      Y., Sun, Q., Boucadair, M., Tsou, T., Lee, Y., and I.\n              Farrer,
      \"Lightweight 4over6: An Extension to the Dual-\n              Stack Lite Architecture\",
      RFC 7596, DOI 10.17487/RFC7596,\n              July 2015, <https://www.rfc-editor.org/info/rfc7596>.\n
      \  [RFC7597]  Troan, O., Ed., Dec, W., Li, X., Bao, C., Matsushima, S.,\n              Murakami,
      T., and T. Taylor, Ed., \"Mapping of Address and\n              Port with Encapsulation
      (MAP-E)\", RFC 7597,\n              DOI 10.17487/RFC7597, July 2015,\n              <https://www.rfc-editor.org/info/rfc7597>.\n
      \  [RFC7598]  Mrugalski, T., Troan, O., Farrer, I., Perreault, S., Dec,\n              W.,
      Bao, C., Yeh, L., and X. Deng, \"DHCPv6 Options for\n              Configuration
      of Softwire Address and Port-Mapped\n              Clients\", RFC 7598, DOI
      10.17487/RFC7598, July 2015,\n              <https://www.rfc-editor.org/info/rfc7598>.\n
      \  [RFC7599]  Li, X., Bao, C., Dec, W., Ed., Troan, O., Matsushima, S.,\n              and
      T. Murakami, \"Mapping of Address and Port using\n              Translation
      (MAP-T)\", RFC 7599, DOI 10.17487/RFC7599, July\n              2015, <https://www.rfc-editor.org/info/rfc7599>.\n
      \  [RFC8114]  Boucadair, M., Qin, C., Jacquenet, C., Lee, Y., and Q.\n              Wang,
      \"Delivery of IPv4 Multicast Services to IPv4 Clients\n              over an
      IPv6 Multicast Network\", RFC 8114,\n              DOI 10.17487/RFC8114, March
      2017,\n              <https://www.rfc-editor.org/info/rfc8114>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  DHCPv6 to RADIUS Field Mappings\n   The following sections detail
    the mappings between the softwire\n   DHCPv6 option fields and the relevant RADIUS
    attributes as defined in\n   this document.\n"
  - contents:
    - "A.1.  OPTION_S46_RULE (89) to Softwire46-Rule Sub-TLV Field Mappings\n    |
      OPTION_S46_RULE Field | Softwire46-Rule Name |   TLV Subfield   |\n    |         flags
      \        |         N/A          | TLV-type (4, 5)  |\n    |         ea-len        |
      \     EA-Length       |      EA-len      |\n    |      prefix4-len      |   Rule-IPv4-Prefix
      \  |  Prefix-Length   |\n    |      ipv4-prefix      |   Rule-IPv4-Prefix   |
      rule-ipv4-prefix |\n    |      prefix6-len      |   Rule-IPv6-Prefix   |  Prefix-Length
      \  |\n    |      ipv6-prefix      |   Rule-IPv6-Prefix   | rule-ipv6-prefix
      |\n     Table 7: OPTION_S46_RULE to Softwire46-Rule Sub-TLV Field Mappings\n"
    title: A.1.  OPTION_S46_RULE (89) to Softwire46-Rule Sub-TLV Field Mappings
  - contents:
    - "A.2.  OPTION_S46_BR (90) to Softwire46-BR Field Mappings\n             | OPTION_S46_BR
      Field | Softwire46-BR Subfield |\n             |   br-ipv6-address   |    br-ipv6-address
      \    |\n                 Table 8: OPTION_S46_BR to Softwire46-BR\n                              Field
      Mappings\n"
    title: A.2.  OPTION_S46_BR (90) to Softwire46-BR Field Mappings
  - contents:
    - "A.3.  OPTION_S46_DMR (91) to Softwire46-DMR\n            | OPTION_S46_DMR Field
      | Softwire46-DMR Subfield |\n            |   dmr-prefix6-len    |     dmr-prefix6-len
      \    |\n            |   dmr-ipv6-prefix    |     dmr-ipv6-prefix     |\n                Table
      9: OPTION_S46_DMR to Softwire46-DMR\n                              Field Mappings\n"
    title: A.3.  OPTION_S46_DMR (91) to Softwire46-DMR
  - contents:
    - "A.4.  OPTION_S46_V4V6BIND (92) to Softwire46-V4V6Bind\n     | OPTION_S46_V4V6BIND
      | Softwire46-V4V6Bind |   TLV Subfield   |\n     |        Field        |         Name
      \       |                  |\n     |     ipv4-address    |     IPv4-Address
      \   |   ipv4-address   |\n     |   bindprefix6-len   |   Bind-IPv6-Prefix  |
      \ Prefix-Length   |\n     |   bind-ipv6-prefix  |   Bind-IPv6-Prefix  | bind-ipv6-prefix
      |\n           Table 10: OPTION_S46_V4V6BIND to Softwire46-V4V6Bind\n                              Field
      Mappings\n"
    title: A.4.  OPTION_S46_V4V6BIND (92) to Softwire46-V4V6Bind
  - contents:
    - "A.5.  OPTION_S46_PORTPARAMS (93) to Softwire46-PORTPARAMS Field Mappings\n
      \  |    OPTION_S46_PORTPARAMS    | Softwire46-PORTPARAMS |     TLV     |\n   |
      \           Field            |          Name         |   Subfield  |\n   |            offset
      \          |      PSID-Offset      | PSID-Offset |\n   |           PSID-len
      \         |        PSID-Len       |   PSID-len  |\n   |             PSID            |
      \         PSID         |     PSID    |\n          Table 11: OPTION_S46_PORTPARAMS
      to Softwire46-PORTPARAMS\n                               Field Mappings\n"
    title: A.5.  OPTION_S46_PORTPARAMS (93) to Softwire46-PORTPARAMS Field Mappings
  - contents:
    - "A.6.  OPTION_S46_PRIORITY (111) to Softwire46-PORTPARAMS Field Mappings\n          |
      OPTION_S46_PRIORITY Field |  Softwire46-Priority   |\n          |      s46-option-code
      \     | Softwire46-option-code |\n                     Table 12: OPTION_S46_PRIORITY
      to\n                   Softwire46-PORTPARAMS Field Mappings\n"
    title: A.6.  OPTION_S46_PRIORITY (111) to Softwire46-PORTPARAMS Field Mappings
  - contents:
    - "A.7.  OPTION_V6_PREFIX64 (113) to Softwire46-Multicast Attribute Field\n      Mappings\n
      \   | OPTION_V6_PREFIX64 Field | Softwire46-Multicast |  TLV Subfield |\n    |
      \       asm-length        |     ASM-Prefix64     | Prefix-Length |\n    |      ASM_mPrefix64
      \      |     ASM-Prefix64     |  asm-prefix64 |\n    |        ssm-length        |
      \    SSM-Prefix64     | Prefix-Length |\n    |      SSM_mPrefix64       |     SSM-Prefix64
      \    |  ssm-prefix64 |\n    |      unicast-length      |      U-Prefix64      |
      Prefix-Length |\n    |        uPrefix64         |      U-Prefix64      |   u-prefix64
      \ |\n    Table 13: OPTION_V6_PREFIX64 to Softwire46-Multicast Field Mappings\n"
    title: A.7.  OPTION_V6_PREFIX64 (113) to Softwire46-Multicast Attribute Field
  title: Appendix A.  DHCPv6 to RADIUS Field Mappings
- contents:
  - "Acknowledgements\n   The authors would like to thank Peter Lothberg, Wojciech
    Dec, Ian\n   Farrer, Suresh Krishnan, Qian Wang, Wei Meng, Cui Wang, Alan Dekok,\n
    \  Stefan Winter, and Yu Tianpeng for their valuable comments regarding\n   this
    document.\n   This document was merged with [LIGHTWEIGHT-4OVER6] and [RADIUS-EXT].\n
    \  Thanks to everyone who contributed to this document.\n   Many thanks to Al
    Morton, Bernie Volz, Joel Halpern, and Donald\n   Eastlake for the review.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   Bing Liu\n   Huawei Technologies Co., Ltd.\n   China\n   Email:
    leo.liubing@huawei.com\n   Peter Deacon\n   IEA Software, Inc.\n   United States
    of America\n   Email: peterd@iea-software.com\n   Qiong Sun\n   China Telecom\n
    \  China\n   Email: sunqiong@ctbri.com.cn\n   Qi Sun\n   Tsinghua University\n
    \  China\n   Email: sunqibupt@gmail.com\n   Cathy Zhou\n   Huawei Technologies\n
    \  China\n   Email: cathy.zhou@huawei.com\n   Tina Tsou\n   Huawei Technologies
    (USA)\n   United States of America\n   Email: Tina.Tsou.Zouting@huawei.com\n   ZiLong
    Liu\n   Tsinghua University\n   China\n   Email: liuzilong8266@126.com\n   Yong
    Cui\n   Tsinghua University\n   China\n   Email: yong@csnet1.cs.tsinghua.edu.cn\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Sheng Jiang (editor)\n   China\n   Hai-Dian District,
    Beijing, 100095\n   Q14, Huawei Campus, No.156 Beiqing Road\n   Huawei Technologies
    Co., Ltd.\n   Email: jiangsheng@huawei.com\n   Yu Fu (editor)\n   China\n   Hai-Dian
    District, Beijing, 100190\n   No.4 South 4th Street, Zhongguancun\n   CNNIC\n
    \  Email: eleven711711@foxmail.com\n   Chongfeng Xie\n   China\n   Beijing\n   China
    Telecom\n   Email: xiechf.bri@chinatelecom.cn\n   Tianxiang Li\n   China\n   100084\n
    \  Beijing\n   Tsinghua University\n   Email: peter416733@gmail.com\n   Mohamed
    Boucadair (editor)\n   Orange\n   35000 Rennes\n"
  title: Authors' Addresses
