- title: __initial_text__
  contents:
  - '                     Classical IP and ARP over ATM

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo defines an initial application of classical IP and ARP\
    \ in\n   an Asynchronous Transfer Mode (ATM) network environment configured as\n\
    \   a Logical IP Subnetwork (LIS) as described in Section 3.  This memo\n   does\
    \ not preclude the subsequent development of ATM technology into\n   areas other\
    \ than a LIS; specifically, as single ATM networks grow to\n   replace many ethernet\
    \ local LAN segments and as these networks become\n   globally connected, the\
    \ application of IP and ARP will be treated\n   differently.  This memo considers\
    \ only the application of ATM as a\n   direct replacement for the \"wires\" and\
    \ local LAN segments connecting\n   IP end-stations (\"members\") and routers\
    \ operating in the \"classical\"\n   LAN-based paradigm. Issues raised by MAC\
    \ level bridging and LAN\n   emulation are beyond the scope of this paper.\n \
    \  This memo introduces general ATM technology and nomenclature.\n   Readers are\
    \ encouraged to review the ATM Forum and ITU-TS (formerly\n   CCITT) references\
    \ for more detailed information about ATM\n   implementation agreements and standards.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This memo could not have come into being without the critical\
    \ review\n   from Jim Forster of Cisco Systems, Drew Perkins of FORE Systems,\
    \ and\n   Bryan Lyles, Steve Deering, and Berry Kercheval of XEROX PARC.  The\n\
    \   concepts and models presented in [1], written by Dave Piscitello and\n   Joseph\
    \ Lawrence, laid the structural groundwork for this work. ARP\n   [3] written\
    \ by Dave Plummer and Inverse ARP [12] written by Terry\n   Bradley and Caralyn\
    \ Brown are the foundation of ATMARP presented in\n   this memo.  This document\
    \ could have not been completed without the\n   expertise of the IP over ATM Working\
    \ Group of the IETF and the ad hoc\n   PVC committee at the Amsterdam IETF meeting.\n"
- title: 1. Conventions
  contents:
  - "1. Conventions\n   The following language conventions are used in the items of\n\
    \   specification in this document:\n   o   MUST, SHALL, or MANDATORY -- the item\
    \ is an absolute requirement\n       of the specification.\n   o   SHOULD or RECOMMEND\
    \ -- this item should generally be followed for\n       all but exceptional circumstances.\n\
    \   o   MAY or OPTIONAL -- the item is truly optional and may be followed\n  \
    \     or ignored according to the needs of the implementor.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   The goal of this specification is to allow compatible and\n\
    \   interoperable implementations for transmitting IP datagrams and ATM\n   Address\
    \ Resolution Protocol (ATMARP) requests and replies over ATM\n   Adaptation Layer\
    \ 5 (AAL5)[2,6].\n   Note: this memo defines only the operation of IP and address\n\
    \   resolution over ATM, and is not meant to describe the operation of\n   ATM\
    \ networks. Any reference to virtual connections, permanent virtual\n   connections,\
    \ or switched virtual connections applies only to virtual\n   channel connections\
    \ used to support IP and address resolution over\n   ATM, and thus are assumed\
    \ to be using AAL5.  This memo places no\n   restrictions or requirements on virtual\
    \ connections used for other\n   purposes.\n   Initial deployment of ATM provides\
    \ a LAN segment replacement for:\n      1)  Local area networks (e.g., Ethernets,\
    \ Token Rings and FDDI).\n      2)  Local-area backbones between existing (non-ATM)\
    \ LANs.\n      3)  Dedicated circuits or frame relay PVCs between IP routers.\n\
    \   Note: In 1), local IP routers with one or more ATM interfaces will be\n  \
    \ able to connect islands of ATM networks.  In 3), public or private\n   ATM Wide\
    \ Area networks will be used to connect IP routers, which in\n   turn may or may\
    \ not connect to local ATM networks.  ATM WANs and LANs\n   may be interconnected.\n\
    \   Private ATM networks (local or wide area) will use the private ATM\n   address\
    \ structure specified in the ATM Forum UNI specification [9].\n   This structure\
    \ is modeled after the format of an OSI Network Service\n   Access Point Address.\
    \  A private ATM address uniquely identifies an\n   ATM endpoint.  Public networks\
    \ will use either the address structure\n   specified in ITU-TS recommendation\
    \ E.164 or the private network ATM\n   address structure.  An E.164 address uniquely\
    \ identifies an interface\n   to a public network.\n   The characteristics and\
    \ features of ATM networks are different than\n   those found in LANs:\n   o \
    \  ATM provides a Virtual Connection (VC) switched environment. VC\n       setup\
    \ may be done on either a Permanent Virtual Connection (PVC)\n       or dynamic\
    \ Switched Virtual Connection (SVC) basis. SVC call\n       management signalling\
    \ is performed via implementations of the\n       Q.93B protocol [7,9].\n   o\
    \   Data to be passed by a VC is segmented into 53 octet quantities\n       called\
    \ cells (5 octets of ATM header and 48 octets of data).\n   o   The function of\
    \ mapping user Protocol Data Units (PDUs) into the\n       information field of\
    \ the ATM cell and vice versa is performed in\n       the ATM Adaptation Layer\
    \ (AAL).  When a VC is created a specific\n       AAL type is associated with\
    \ the VC.  There are four different AAL\n       types, which are referred to individually\
    \ as \"AAL1\", \"AAL2\",\n       \"AAL3/4\", and \"AAL5\".  (Note: this memo concerns\
    \ itself with the\n       mapping of IP and ATMARP over AAL5 only.  The other\
    \ AAL types are\n       mentioned for introductory purposes only.)  The AAL type\
    \ is known\n       by the VC end points via the call setup mechanism and is not\n\
    \       carried in the ATM cell header.  For PVCs the AAL type is\n       administratively\
    \ configured at the end points when the Connection\n       (circuit) is set up.\
    \  For SVCs, the AAL type is communicated\n       along the VC path via Q.93B\
    \ as part of call setup establishment\n       and the end points use the signaled\
    \ information for\n       configuration.  ATM switches generally do not care about\
    \ the AAL\n       type of VCs.  The AAL5 format specifies a packet format with\
    \ a\n       maximum size of (64K - 1) octets of user data. Cells for an AAL5\n\
    \       PDU are transmitted first to last, the last cell indicating the\n    \
    \   end of the PDU.  ATM standards guarantee that on a given VC, cell\n      \
    \ ordering is preserved end-to-end.  NOTE: AAL5 provides a non-\n       assured\
    \ data transfer service - it is up to higher-level\n       protocols to provide\
    \ retransmission.\n   o   ATM Forum signalling defines point-to-point and point-to-\n\
    \       multipoint Connection setup [9].  Multipoint-to-multipoint VCs\n     \
    \  are not yet specified by ITU-TS or ATM Forum.\n   o   An ATM Forum ATM endpoint\
    \ address is either encoded as an NSAP\n       Address (NSAPA) or is an E.164\
    \ Public-UNI address [9].  In some\n       cases, both an ATM endpoint address\
    \ and an E.164 Public UNI\n       address are needed by an ATMARP client to reach\
    \ another host or\n       router.  Since the use of ATM endpoint addresses and\
    \ E.164 public\n       UNI addresses by ATMARP are analogous to the use of Ethernet\n\
    \       addresses, the notion of \"hardware address\" is extended to\n       encompass\
    \ ATM addresses in the context of ATMARP, even though ATM\n       addresses need\
    \ not have hardware significance.  ATM Forum NSAPAs\n       use the same basic\
    \ format as U.S. GOSIP NSAPAs [11].  Note: ATM\n       Forum addresses should\
    \ not be construed as being U.S. GOSIP\n       NSAPAs.  They are not, the administration\
    \ is different, which\n       fields get filled out are different, etc.\n   This\
    \ memo describes the initial deployment of ATM within \"classical\"\n   IP networks\
    \ as a direct replacement for local area networks\n   (ethernets) and for IP links\
    \ which interconnect routers, either\n   within or between administrative domains.\
    \ The \"classical\" model here\n   refers to the treatment of the ATM host adapter\
    \ as a networking\n   interface to the IP protocol stack operating in a LAN-based\
    \ paradigm.\n   Characteristics of the classical model are:\n    o  The same maximum\
    \ transmission unit (MTU) size is used for all VCs\n       in a LIS [2].  (Refer\
    \ to Section 5.)\n    o  Default LLC/SNAP encapsulation of IP packets.\n    o\
    \  End-to-end IP routing architecture stays the same.\n    o  IP addresses are\
    \ resolved to ATM addresses by use of an ATMARP\n       service within the LIS\
    \ - ATMARPs stay within the LIS.  From a\n       client's perspective, the ATMARP\
    \ architecture stays faithful to\n       the basic ARP model presented in [3].\n\
    \    o  One IP subnet is used for many hosts and routers. Each VC\n       directly\
    \ connects two IP members within the same LIS.\n   Future memos will describe\
    \ the operation of IP over ATM when ATM\n   networks become globally deployed\
    \ and interconnected.\n   The deployment of ATM into the Internet community is\
    \ just beginning\n   and will take many years to complete. During the early part\
    \ of this\n   period, we expect deployment to follow traditional IP subnet\n \
    \  boundaries for the following reasons:\n    o  Administrators and managers of\
    \ IP subnetworks will tend to\n       initially follow the same models as they\
    \ currently have deployed.\n       The mindset of the community will change slowly\
    \ over time as ATM\n       increases its coverage and builds its credibility.\n\
    \    o  Policy administration practices rely on the security, access,\n      \
    \ routing, and filtering capability of IP Internet gateways: i.e.,\n       firewalls.\
    \ ATM will not be allowed to \"back-door\" around these\n       mechanisms until\
    \ ATM provides better management capability than\n       the existing services\
    \ and practices.\n    o  Standards for global IP over ATM will take some time\
    \ to complete\n       and deploy.\n   This memo details the treatment of the classical\
    \ model of IP and\n   ATMARP over ATM. This memo does not preclude the subsequent\
    \ treatment\n   of ATM networks within the IP framework as ATM becomes globally\n\
    \   deployed and interconnected; this will be the subject of future\n   documents.\
    \ This memo does not address issues related to transparent\n   data link layer\
    \ interoperability.\n"
- title: 3.  IP Subnetwork Configuration
  contents:
  - "3.  IP Subnetwork Configuration\n   In the LIS scenario, each separate administrative\
    \ entity configures\n   its hosts and routers within a closed logical IP subnetwork.\
    \  Each\n   LIS operates and communicates independently of other LISs on the same\n\
    \   ATM network. Hosts connected to ATM communicate directly to other\n   hosts\
    \ within the same LIS. Communication to hosts outside of the\n   local LIS is\
    \ provided via an IP router. This router is an ATM\n   Endpoint attached to the\
    \ ATM network that is configured as a member\n   of one or more LISs.  This configuration\
    \ may result in a number of\n   disjoint LISs operating over the same ATM network.\
    \ Hosts of differing\n   IP subnets MUST communicate via an intermediate IP router\
    \ even though\n   it may be possible to open a direct VC between the two IP members\n\
    \   over the ATM network.\n   The requirements for IP members  (hosts, routers)\
    \ operating in an ATM\n   LIS configuration are:\n   o   All members have the\
    \ same IP network/subnet number and address\n       mask [8].\n   o   All members\
    \ within a LIS are directly connected to the ATM\n       network.\n   o   All\
    \ members outside of the LIS are accessed via a router.\n   o   All members of\
    \ a LIS MUST have a mechanism for resolving IP\n       addresses to ATM addresses\
    \ via ATMARP (based on [3]) and vice\n       versa via InATMARP (based on [12])\
    \ when using SVCs.  Refer to\n       Section 6 \"Address Resolution\" in this\
    \ memo.\n   o   All members of a LIS MUST have a mechanism for resolving VCs to\n\
    \       IP addresses via InATMARP (based on [12]) when using PVCs.  Refer\n  \
    \     to Section 6 \"Address Resolution\" in this memo.\n   o   All members within\
    \ a LIS MUST be able to communicate via ATM with\n       all other members in\
    \ the same LIS; i.e., the virtual Connection\n       topology underlying the intercommunication\
    \ among the members is\n       fully meshed.\n   The following list identifies\
    \ a set of ATM specific parameters that\n   MUST be implemented in each IP station\
    \ connected to the ATM network:\n   o   ATM Hardware Address (atm$ha). The ATM\
    \ address of the individual\n       IP station.\n   o   ATMARP Request Address\
    \ (atm$arp-req). atm$arp-req is the ATM\n       address of an individual ATMARP\
    \ server located within the LIS.\n       In an SVC environment, ATMARP requests\
    \ are sent to this address\n       for the resolution of target protocol addresses\
    \ to target ATM\n       addresses.  That server MUST have authoritative responsibility\n\
    \       for resolving ATMARP requests of all IP members within the LIS.\n    \
    \   Note: if the LIS is operating with PVCs only, then this parameter\n      \
    \ may be set to null and the IP station is not required to send\n       ATMARP\
    \ requests to the ATMARP server.\n   It is RECOMMENDED that routers providing\
    \ LIS functionality over the\n   ATM network also support the ability to interconnect\
    \ multiple LISs.\n   Routers that wish to provide interconnection of differing\
    \ LISs MUST\n   be able to support multiple sets of these parameters (one set\
    \ for\n   each connected LIS) and be able to associate each set of parameters\n\
    \   to a specific IP network/ subnet number. In addition, it is\n   RECOMMENDED\
    \ that a router be able to provide this multiple LIS\n   support with a single\
    \ physical ATM interface that may have one or\n   more individual ATM endpoint\
    \ addresses.  Note: this does not\n   necessarily mean different End System Identifiers\
    \ (ESIs) when NSAPAs\n   are used.  The last octet of an NSAPA is the NSAPA Selector\
    \ (SEL)\n   field which can be used to differentiate up to 256 different LISs\
    \ for\n   the same ESI. (Refer to Section 5.1.3.1, \"Private Networks\" in [9].)\n"
- title: 4.  Packet Format
  contents:
  - "4.  Packet Format\n   Implementations MUST support IEEE 802.2 LLC/SNAP encapsulation\
    \ as\n   described in [2].  LLC/SNAP encapsulation is the default packet\n   format\
    \ for IP datagrams.\n   This memo recognizes that other encapsulation methods\
    \ may be used\n   however, in the absence of other knowledge or agreement, LLC/SNAP\n\
    \   encapsulation is the default.\n   This memo recognizes the future deployment\
    \ of end-to-end signalling\n   within ATM that will allow negotiation of encapsulation\
    \ method on a\n   per-VC basis.  Signalling negotiations are beyond the scope\
    \ of this\n   memo.\n"
- title: 5.  MTU Size
  contents:
  - "5.  MTU Size\n   The default MTU size for IP members operating over the ATM network\n\
    \   SHALL be 9180 octets. The LLC/SNAP header is 8 octets, therefore the\n   default\
    \ ATM AAL5 protocol data unit size is 9188 octets [2].  In\n   classical IP subnets,\
    \ values other than the default can be used if\n   and only if all members in\
    \ the LIS have been configured to use the\n   non-default value.\n   This memo\
    \ recognizes the future deployment of end-to-end signalling\n   within ATM that\
    \ will allow negotiation of MTU size on a per-VC basis.\n   Signalling negotiations\
    \ are beyond the scope of this document.\n"
- title: 6.  Address Resolution
  contents:
  - "6.  Address Resolution\n   Address resolution within an ATM logical IP subnet\
    \ SHALL make use of\n   the ATM Address Resolution Protocol (ATMARP) (based on\
    \ [3]) and the\n   Inverse ATM Address Resolution Protocol (InATMARP) (based on\
    \ [12]) as\n   defined in this memo.  ATMARP is the same protocol as the ARP\n\
    \   protocol presented in [3] with extensions needed to support ARP in a\n   unicast\
    \ server ATM environment.  InATMARP is the same protocol as the\n   original InARP\
    \ protocol presented in [12] but applied to ATM\n   networks.  All IP stations\
    \ MUST support these protocols as updated\n   and extended in this memo.  Use\
    \ of these protocols differs depending\n   on whether PVCs or SVCs are used.\n"
- title: 6.1 Permanent Virtual Connections
  contents:
  - "6.1 Permanent Virtual Connections\n   An IP station MUST have a mechanism (eg.\
    \ manual configuration) for\n   determining what PVCs it has, and in particular\
    \ which PVCs are being\n   used with LLC/SNAP encapsulation.  The details of the\
    \ mechanism are\n   beyond the scope of this memo.\n   All IP members supporting\
    \ PVCs are required to use the Inverse ATM\n   Address Resolution Protocol (InATMARP)\
    \ (refer to [12]) on those VCs\n   using LLC/SNAP encapsulation.  In a strict\
    \ PVC environment, the\n   receiver SHALL infer the relevant VC from the VC on\
    \ which the\n   InATMARP request (InARP_REQUEST) or response (InARP_REPLY) was\n\
    \   received.  When the ATM source and/or target address is unknown, the\n   corresponding\
    \ ATM address length in the InATMARP packet MUST be set\n   to zero (0) indicating\
    \ a null length, otherwise the appropriate\n   address field should be filled\
    \ in and the corresponding length set\n   appropriately. InATMARP packet format\
    \ details are presented later in\n   this memo.\n   Directly from [12]: \"When\
    \ the requesting station receives the InARP\n   reply, it may complete the [ATM]ARP\
    \ table entry and use the provided\n   address information.  Note: as with [ATM]ARP,\
    \ information learned via\n   In[ATM]ARP  may be aged or invalidated under certain\
    \ circumstances.\"\n   It is the responsibility of each IP station supporting\
    \ PVCs to re-\n   validate [ATM]ARP table entries as part of the aging process.\
    \  See\n   Section 6.5 on \"ATMARP Table Aging\".\n"
- title: 6.2 Switched Virtual Connections
  contents:
  - "6.2 Switched Virtual Connections\n   SVCs require support for ATMARP in the non-broadcast,\
    \ non-multicast\n   environment that ATM networks currently provide. To meet this\
    \ need a\n   single ATMARP Server MUST be located within the LIS. This server\
    \ MUST\n   have authoritative responsibility for resolving the ATMARP requests\n\
    \   of all IP members within the LIS.\n   The server itself does not actively\
    \ establish connections.  It\n   depends on the clients in the LIS to initiate\
    \ the ATMARP registration\n   procedure.  An individual client connects to the\
    \ ATMARP server using\n   a point-to-point VC. The server, upon the completion\
    \ of an ATM\n   call/connection of a new VC specifying LLC/SNAP encapsulation,\
    \ will\n   transmit an InATMARP request to determine the IP address of the\n \
    \  client.  The InATMARP reply from the client contains the information\n   necessary\
    \ for the ATMARP Server to build its ATMARP table cache. This\n   information\
    \ is used to generate replies to the ATMARP requests it\n   receives.\n   The\
    \ ATMARP Server mechanism requires that each client be\n   administratively configured\
    \ with the ATM address of the ATMARP Server\n   atm$arp-req as defined earlier\
    \ in this memo. There is to be one and\n   only one ATMARP Server operational\
    \ per logical IP subnet. It is\n   RECOMMENDED that the ATMARP Server also be\
    \ an IP station. This\n   station MUST be administratively configured to operate\
    \ and recognize\n   itself as the ATMARP Server for a LIS. The ATMARP Server MUST\
    \ be\n   configured with an IP address for each logical IP subnet it is\n   serving\
    \ to support InATMARP requests.\n   This memo recognizes that a single ATMARP\
    \ Server is not as robust as\n   multiple servers which synchronize their databases\
    \ correctly. This\n   document is defining the client-server interaction by using\
    \ a simple,\n   single server approach as a reference model, and does not prohibit\n\
    \   more robust approaches which use the same client-server interface.\n"
- title: 6.3 ATMARP Server Operational Requirements
  contents:
  - "6.3 ATMARP Server Operational Requirements\n   The ATMARP server accepts ATM\
    \ calls/connections from other ATM end\n   points. At call setup and if the VC\
    \ supports LLC/SNAP encapsulation,\n   the ATMARP server will transmit to the\
    \ originating ATM station an\n   InATMARP request (InARP_REQUEST) for each logical\
    \ IP subnet the\n   server is configured to serve. After receiving an InATMARP\
    \ reply\n   (InARP_REPLY), the server will examine the IP address and the ATM\n\
    \   address. The server will add (or update) the <ATM address, IP\n   address>\
    \ map entry and timestamp into its ATMARP table.  If the\n   InATMARP IP address\
    \ duplicates a table entry IP address and the\n   InATMARP ATM address does not\
    \ match the table entry ATM address and\n   there is an open VC associated with\
    \ that table entry, the InATMARP\n   information is discarded and no modifications\
    \ to the table are made.\n   ATMARP table entries persist until aged or invalidated.\
    \ VC call tear\n   down does not remove ATMARP table entries.\n   The ATMARP server,\
    \ upon receiving an ATMARP request (ARP_REQUEST),\n   will generate the corresponding\
    \ ATMARP reply (ARP_REPLY) if it has an\n   entry in its ATMARP table.  Otherwise\
    \ it will generate a negative\n   ATMARP reply (ARP_NAK).  The ARP_NAK response\
    \ is an extension to the\n   ARMARP protocol and is used to improve the robustness\
    \ of the ATMARP\n   server mechanism.  With ARP_NAK, a client can determine the\n\
    \   difference between a catastrophic server failure and an ATMARP table\n   lookup\
    \ failure.  The ARP_NAK packet format is the same as the\n   received ARP_REQUEST\
    \ packet format with the operation code set to\n   ARP_NAK, i.e., the ARP_REQUEST\
    \ packet data is merely copied for\n   transmission with the ARP_REQUEST operation\
    \ code reset to ARP_NAK.\n   Updating the ATMARP table information timeout, the\
    \ short form: when\n   the server receives an ATMARP request over a VC, where\
    \ the source IP\n   and ATM address match the association already in the ATMARP\
    \ table and\n   the ATM address matches that associated with the VC, the server\
    \ may\n   update the timeout on the source ATMARP table entry: i.e., if the\n\
    \   client is sending ATMARP requests to the server over the same VC that\n  \
    \ it used to register its ATMARP entry, the server should examine the\n   ATMARP\
    \ requests and note that the client is still \"alive\" by updating\n   the timeout\
    \ on the client's ATMARP table entry.\n   Adding robustness to the address resolution\
    \ mechanism using ATMARP:\n   when the server receives an ARP_REQUEST over a VC,\
    \ it examines the\n   source information.  If there is no IP address associated\
    \ with the VC\n   over which the ATMARP request was received and if the source\
    \ IP\n   address is not associated with any other connection, then the server\n\
    \   will add the <ATM address, IP address> entry and timestamp into its\n   ATMARP\
    \ table and associate the entry with this VC.\n"
- title: 6.4 ATMARP Client Operational Requirements
  contents:
  - "6.4 ATMARP Client Operational Requirements\n   The ATMARP client is responsible\
    \ for contacting the ATMARP server to\n   register its own ATMARP information\
    \ and to gain and refresh its own\n   ATMARP entry/information about other IP\
    \ members.  This means, as\n   noted above, that ATMARP clients MUST be configured\
    \ with the ATM\n   address of the ATMARP server. ATMARP clients MUST:\n      1.\
    \ Initiate the VC connection to the ATMARP server for\n         transmitting and\
    \ receiving ATMARP and InATMARP packets.\n      2. Respond to ARP_REQUEST and\
    \ InARP_REQUEST packets received on\n         any VC appropriately.  (Refer to\
    \ Section 7, \"Protocol Operation\"\n         in [12].)\n      3. Generate and\
    \ transmit ARP_REQUEST packets to the ATMARP server\n         and to process ARP_REPLY\
    \ and ARP_NAK packets from the server\n         appropriately.  ARP_REPLY packets\
    \ should be used to\n         build/refresh its own client ATMARP table entries.\n\
    \      4. Generate and transmit InARP_REQUEST packets as needed and to\n     \
    \    process InARP_REPLY packets appropriately.  InARP_REPLY packets\n       \
    \  should be used to build/refresh its own client ATMARP table\n         entries.\
    \  (Refer to Section 7, \"Protocol Operation\" in [12].)\n      5. Provide an\
    \ ATMARP table aging function to remove its own old\n         client ATMARP tables\
    \ entries after a convenient period of time.\n   Note: if the client does not\
    \ maintain an open VC to the server, the\n   client MUST refresh its ATMARP information\
    \ with the server at least\n   once every 20 minutes.  This is done by opening\
    \ a VC to the server\n   and exchanging the initial InATMARP packets.\n"
- title: 6.5 ATMARP Table Aging
  contents:
  - "6.5 ATMARP Table Aging\n   An ATMARP client or server MUST have knowledge of\
    \ any open VCs it has\n   (permanent or switched), their association with an ATMARP\
    \ table\n   entry, and in particular, which VCs support LLC/SNAP encapsulation.\n\
    \   Client ATMARP table entries are valid for a maximum time of 15\n   minutes.\n\
    \   Server ATMARP table entries are valid for a minimum time of 20\n   minutes.\n\
    \   Prior to aging an ATMARP table entry, an ATMARP server MUST generate\n   an\
    \ InARP_REQUEST on any open VC associated with that entry. If an\n   InARP_REPLY\
    \ is received, that table entry is updated and not deleted.\n   If there is no\
    \ open VC associated with the table entry, the entry is\n   deleted.\n   When\
    \ an ATMARP table entry ages, an ATMARP client MUST invalidate the\n   table entry.\
    \ If there is no open VC associated with the invalidated\n   entry, that entry\
    \ is deleted. In the case of an invalidated entry and\n   an open VC, the ATMARP\
    \ client must revalidate the entry prior to\n   transmitting any non address resolution\
    \ traffic on that VC. In the\n   case of a PVC, the client validates the entry\
    \ by transmitting an\n   InARP_REQUEST and updating the entry on receipt of an\
    \ InARP_REPLY. In\n   the case of an SVC, the client validates the entry by transmitting\
    \ an\n   ARP_REQUEST to the ATMARP Server and updating the entry on receipt of\n\
    \   an ARP_REPLY. If a VC with an associated invalidated ATMARP table\n   entry\
    \ is closed, that table entry is removed.\n"
- title: 6.6 ATMARP and InATMARP Packet Format
  contents:
  - "6.6 ATMARP and InATMARP Packet Format\n   Internet addresses are assigned independently\
    \ of ATM addresses.  Each\n   host implementation MUST know its own IP and ATM\
    \ address(es) and MUST\n   respond to address resolution requests appropriately.\
    \  IP members\n   MUST also use ATMARP and InATMARP to resolve IP addresses to\
    \ ATM\n   addresses when needed.\n   The ATMARP and InATMARP protocols use the\
    \ same hardware type\n   (ar$hrd), protocol type (ar$pro), and operation code\
    \ (ar$op) data\n   formats as the ARP and InARP protocols [3,12].  The location\
    \ of these\n   fields within the ATMARP packet are in the same byte position as\n\
    \   those in ARP and InARP packets.  A unique hardware type value has\n   been\
    \ assigned for ATMARP.  In addition, ATMARP makes use of an\n   additional operation\
    \ code for ARP_NAK.  The remainder of the\n   ATMARP/InATMARP packet format is\
    \ different than the ARP/InARP packet\n   format.\n   The ATMARP and InATMARP\
    \ protocols have several fields that have the\n   following format and values:\n\
    \   Data:\n     ar$hrd     16 bits  Hardware type\n     ar$pro     16 bits  Protocol\
    \ type\n     ar$shtl     8 bits  Type & length of source ATM number (q)\n    \
    \ ar$sstl     8 bits  Type & length of source ATM subaddress (r)\n     ar$op \
    \     16 bits  Operation code (request, reply, or NAK)\n     ar$spln     8 bits\
    \  Length of source protocol address (s)\n     ar$thtl     8 bits  Type & length\
    \ of target ATM number (x)\n     ar$tstl     8 bits  Type & length of target ATM\
    \ subaddress (y)\n     ar$tpln     8 bits  Length of target protocol address (z)\n\
    \     ar$sha     qoctets  source ATM number\n     ar$ssa     roctets  source ATM\
    \ subaddress\n     ar$spa     soctets  source protocol address\n     ar$tha  \
    \   xoctets  target ATM number\n     ar$tsa     yoctets  target ATM subaddress\n\
    \     ar$tpa     zoctets  target protocol address\n   Where:\n     ar$hrd  - \
    \ assigned to ATM Forum address family and is\n                19 decimal (0x0013)\
    \ [4].\n     ar$pro  -  see Assigned Numbers for protocol type number for\n  \
    \              the protocol using ATMARP. (IP is 0x0800).\n     ar$op   -  The\
    \ operation type value (decimal):\n                ARP_REQUEST   = 1\n       \
    \         ARP_REPLY     = 2\n                InARP_REQUEST = 8\n             \
    \   InARP_REPLY   = 9\n                ARP_NAK       = 10\n     ar$spln -  length\
    \ in octets of the source protocol address. For\n                IP ar$spln is\
    \ 4.\n     ar$tpln -  length in octets of the target protocol address. For\n \
    \               IP ar$tpln is 4.\n     ar$sha  -  source ATM number (E.164 or\
    \ ATM Forum NSAPA)\n     ar$ssa  -  source ATM subaddress (ATM Forum NSAPA)\n\
    \     ar$spa  -  source protocol address\n     ar$tha  -  target ATM number (E.164\
    \ or ATM Forum NSAPA)\n     ar$tsa  -  target ATM subaddress (ATM Forum NSAPA)\n\
    \     ar$tpa  -  target protocol address\n   The encoding of the 8-bit type and\
    \ length value for ar$shtl,\n   ar$sstl, ar$thtl, and ar$tstl is as follows:\n\
    \     MSB   8     7     6     5     4     3     2     1   LSB\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \        |  0  | 1/0 |   Octet length of address         |\n        +-----+-----+-----+-----+-----+-----+-----+-----+\n\
    \   Where:\n     bit.8   (reserved) = 0  (for future use)\n     bit.7   (type)\
    \     = 0  ATM Forum NSAPA format\n                        = 1  E.164 format\n\
    \     bit.6-1 (length)   = 6 bit unsigned octet length of address\n          \
    \                (MSB = bit.6, LSB = bit.1)\n   ATM addresses in Q.93B (as defined\
    \ by the ATM Forum UNI 3.0\n   signalling specification [9]) include a \"Calling\
    \ Party Number\n   Information Element\" and a \"Calling Party Subaddress Information\n\
    \   Element\".  These Information Elements (IEs) SHOULD map to\n   ATMARP/InATMARP\
    \ source ATM number and source ATM subaddress\n   respectively.  Furthermore,\
    \ ATM Forum defines a \"Called Party Number\n   Information Element\" and a \"\
    Called Party Subaddress Information\n   Element\". These IEs map to ATMARP/InATMARP\
    \ target ATM number and\n   target ATM subaddress respectively.\n   The ATM Forum\
    \ defines three structures for the combined use of number\n   and subaddress [9]:\n\
    \                        ATM Number      ATM Subaddress\n                    \
    \  --------------    --------------\n        Structure 1   ATM Forum NSAPA   \
    \     null\n        Structure 2       E.164              null\n        Structure\
    \ 3       E.164         ATM Forum NSAPA\n   IP members MUST register their ATM\
    \ endpoint address with their ATMARP\n   server using the ATM address structure\
    \ appropriate for their ATM\n   network connection: i.e., LISs implemented over\
    \ ATM LANs following\n   ATM Forum UNI 3.0 should register using Structure 1;\
    \ LISs implemented\n   over an E.164 \"public\" ATM network should register using\
    \ Structure 2.\n   A LIS implemented over a combination of ATM LANs and public\
    \ ATM\n   networks may need to register using Structure 3.  Implementations\n\
    \   based on this memo MUST support all three ATM address structures.\n   ATMARP\
    \ and InATMARP requests and replies for ATM address structures 1\n   and 2 MUST\
    \ indicate a null ATM subaddress; i.e., ar$sstl.type = 1 and\n   ar$sstl.length\
    \ = 0 and ar$tstl.type = 1 and ar$tstl.length = 0.  When\n   ar$sstl.length and\
    \ ar$tstl.length =0, the ar$tsa and ar$ssa fields\n   are not present.\n   Note:\
    \ the ATMARP packet format presented in this memo is general in\n   nature in\
    \ that the ATM number and ATM subaddress fields SHOULD map\n   directly to the\
    \ corresponding Q.93B fields used for ATM\n   call/connection setup signalling\
    \ messages.  The IP over ATM Working\n   Group expects ATM Forum NSAPA numbers\
    \ (Structure 1) to predominate\n   over E.164 numbers (Structure 2) as ATM endpoint\
    \ identifiers within\n   ATM LANs.  The ATM Forum's VC Routing specification is\
    \ not complete\n   at this time and therefore its impact on the operational use\
    \ of ATM\n   Address Structure 3 is undefined. The ATM Forum will be defining\
    \ this\n   relationship in the future.  It is for this reason that IP members\n\
    \   need to support all three ATM address structures.\n"
- title: 6.7 ATMARP/InATMARP Packet Encapsulation
  contents:
  - "6.7 ATMARP/InATMARP Packet Encapsulation\n   ATMARP and InATMARP packets are\
    \ to be encoded in AAL5 PDUs using\n   LLC/SNAP encapsulation. The format of the\
    \ AAL5 CPCS-SDU payload field\n   for ATMARP/InATMARP PDUs is:\n             \
    \  Payload Format for ATMARP/InATMARP PDUs:\n               +------------------------------+\n\
    \               |        LLC 0xAA-AA-03        |\n               +------------------------------+\n\
    \               |        OUI 0x00-00-00        |\n               +------------------------------+\n\
    \               |     Ethertype 0x08-06        |\n               +------------------------------+\n\
    \               |                              |\n               |   ATMARP/InATMARP\
    \ Packet     |\n               |                              |\n            \
    \   +------------------------------+\n   The LLC value of 0xAA-AA-03 (3 octets)\
    \ indicates the presence of a\n   SNAP header.\n   The OUI value of 0x00-00-00\
    \ (3 octets) indicates that the following\n   two-bytes is an ethertype.\n   The\
    \ Ethertype value of 0x08-06 (2 octets) indicates ARP [4].\n   The total size\
    \ of the LLC/SNAP header is fixed at 8-octets. This\n   aligns the start of the\
    \ ATMARP packet on a 64-bit boundary relative\n   to the start of the AAL5 CPCS-SDU.\n\
    \   The LLC/SNAP encapsulation for ATMARP/InATMARP presented here is\n   consistent\
    \ with the treatment of multiprotocol encapsulation of IP\n   over ATM AAL5 as\
    \ specified in [2] and in the format of ATMARP over\n   IEEE 802 networks as specified\
    \ in [5].\n   Traditionally, address resolution requests are broadcast to all\n\
    \   directly connected IP members within a LIS. It is conceivable in the\n   future\
    \ that larger scaled ATM networks may handle ATMARP requests to\n   destinations\
    \ outside the originating LIS, perhaps even globally;\n   issues raised by ATMARP'ing\
    \ outside the LIS or by a global ATMARP\n   mechanism are beyond the scope of\
    \ this memo.\n"
- title: 7.  IP Broadcast Address
  contents:
  - "7.  IP Broadcast Address\n   ATM does not support broadcast addressing, therefore\
    \ there are no\n   mappings available from IP broadcast addresses to ATM broadcast\n\
    \   services. Note: this lack of mapping does not restrict members from\n   transmitting\
    \ or receiving IP datagrams specifying any of the four\n   standard IP broadcast\
    \ address forms as described in [8].  Members,\n   upon receiving an IP broadcast\
    \ or IP subnet broadcast for their LIS,\n   MUST process the packet as if addressed\
    \ to that station.\n"
- title: 8.  IP Multicast Address
  contents:
  - "8.  IP Multicast Address\n   ATM does not support multicast address services,\
    \ therefore there are\n   no mappings available from IP multicast addresses to\
    \ ATM multicast\n   services.  Current IP multicast implementations (i.e., MBONE\
    \ and IP\n   tunneling, see [10]) will continue to operate over ATM based logical\n\
    \   IP subnets if operated in the WAN configuration.\n   This memo recognizes\
    \ the future development of ATM multicast service\n   addressing by the ATM Forum.\
    \ When available and widely implemented,\n   the roll-over from the current IP\
    \ multicast architecture to this new\n   ATM architecture will be straightforward.\n"
- title: 9.  Security
  contents:
  - "9.  Security\n   Not all of the security issues relating to IP over ATM are clearly\n\
    \   understood at this time, due to the fluid state of ATM\n   specifications,\
    \ newness of the technology, and other factors.\n   It is believed that ATM and\
    \ IP facilities for authenticated call\n   management, authenticated end-to-end\
    \ communications, and data\n   encryption will be needed in globally connected\
    \ ATM networks.  Such\n   future security facilities and their use by IP networks\
    \ are beyond\n   the scope of this memo.\n   There are known security issues relating\
    \ to host impersonation via\n   the address resolution protocols used in the Internet\
    \ [13].  No\n   special security mechanisms have been added to the address resolution\n\
    \   mechanism defined here for use with networks using IP over ATM.\n"
- title: 10.  Open Issues
  contents:
  - "10.  Open Issues\n   o   Interim Local Management Interface (ILMI) services will\
    \ not be\n       generally implemented initially by some providers and vendors\
    \ and\n       will not be used to obtain the ATM address network prefix from\n\
    \       the network [9].  Meta-signalling does provide some of this\n       functionality\
    \ and in the future we need to document the options.\n   o   Well known ATM address(es)\
    \ for ATMARP servers?  It would be very\n       handy if a mechanism were available\
    \ for determining the \"well\n       known\" ATM address(es) for the client's\
    \ ATMARP server in the LIS.\n   o   There are many VC management issues which\
    \ have not yet been\n       addressed by this specification and which await the\
    \ unwary\n       implementor.  For example, one problem that has not yet been\n\
    \       resolved is how two IP members decide which of duplicate VCs can\n   \
    \    be released without causing VC thrashing.  If two IP stations\n       simultaneously\
    \ established VCs to each other, it is tempting to\n       allow only one of these\
    \ VCs to be established, or to release one\n       of these VCs immediately after\
    \ it is established.  If both IP\n       stations simultaneously decide to release\
    \ opposite VCs, a\n       thrashing effect can be created where VCs are repeatedly\n\
    \       established and immediately released.  For the time being, the\n     \
    \  safest strategy is to allow duplicate VCs to be established and\n       simply\
    \ age them like any other VCs.\n"
- title: References
  contents:
  - "References\n   [1] Piscitello, D., and J. Lawrence, \"IP and ARP over the SMDS\n\
    \       Service\", RFC 1209, Bell Communications Research, March 1991.\n   [2]\
    \ Heinanen, J., \"Multiprotocol Encapsulation over ATM Adaptation\n       Layer\
    \ 5\", RFC 1483, Telecom Finland, July 1993.\n   [3] Plummer, D., \"An Ethernet\
    \ Address Resolution Protocol - or -\n       Converting Network Addresses to 48.bit\
    \ Ethernet Address for\n       Transmission on Ethernet Hardware\", STD 37, RFC\
    \ 826, MIT,\n       November 1982.\n   [4] Reynolds, J., and J. Postel, \"Assigned\
    \ Numbers\", STD 2, RFC 1340,\n       USC/Information Sciences Institute, July\
    \ 1992.\n   [5] Postel, J., and J. Reynolds, \"A Standard for the Transmission\
    \ of\n       IP Datagrams over IEEE 802 Networks\", STD 43, RFC 1042,\n      \
    \ USC/Information Sciences Institute, February 1988.\n   [6] CCITT, \"Draft Recommendation\
    \ I.363\", CCITT Study Group XVIII,\n       Geneva, 19-29 January 1993.\n   [7]\
    \ CCITT, \"Draft text for Q.93B\", CCITT Study Group XI, 23 September\n      \
    \ - 2 October 1992.\n   [8] Braden, R., \"Requirements for Internet Hosts -- Communication\n\
    \       Layers\", STD 3, RFC 1122, USC/Information Sciences Institute,\n     \
    \  October 1989.\n   [9] ATM Forum, \"ATM User-Network Interface Specification\
    \ Version\n       3.0.\", ATM Forum, 480 San Antonio Road, Suite 100, Mountain\
    \ View,\n       CA 94040, June 1993.\n  [10] Deering, S., \"Host Extensions for\
    \ IP Multicasting\", STD 5, RFC\n       1112, Stanford University, August 1989.\n\
    \  [11] Colella, R., and Gardner, E., and R. Callon, \"Guidelines for OSI\n  \
    \     NSAP Allocation in the Internet\", RFC 1237, NIST, Mitre, DEC,\n       July\
    \ 1991.\n  [12] Bradely, T., and C. Brown, \"Inverse Address Resolution Protocol\"\
    ,\n       RFC 1293, Wellfleet Communications, Inc., January 1992.\n  [13] Bellovin,\
    \ S., \"Security Problems in the TCP/IP Protocol Suite\",\n       ACM Computer\
    \ Communications Review, Vol. 19, Issue 2, pp. 32-48,\n       1989.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are discussed in Section 9.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mark Laubach\n   Hewlett-Packard Laboratories\n   1501 Page\
    \ Mill Road\n   Palo Alto, CA 94304\n   Phone: 415-857-3513\n   Fax:   415-857-8526\n\
    \   EMail: laubach@hpl.hp.com\n"
