- title: __initial_text__
  contents:
  - "                  COMMENTS ON PROTOCOL RE: NWG/RFC #36\n   We offer the following\
    \ suggestions to be considered as additions to\n   the April 28th 1970 protocol\
    \ grammar specifications.\n   ERROR MESSAGES\n        <ERR> <Code> <Command in\
    \ error>\n   It is desirable to include debugging aids in the initial protocol\
    \ for\n   checking out Network Control Programs, etc.\n   There are three classes\
    \ of errors--content errors, status errors, and\n   resource allocation or exhaustion.\
    \ <Code> specifies the class and the\n   offending member of the class.  The command\
    \ is returned to the\n   sending NCP for identification and analysis.\n   Examples\
    \ of status errors are: messages sent over blocked links and\n   attempts to unblock\
    \ an unblocked link.  Examples of content errors\n   are: an invalid RFC complete;\
    \ a message sent on a link not connected;\n   closing of an unconnected link;\
    \ and an attempt to unblock an\n   unconnected link.  Examples of resource errors\
    \ are:  a request for a\n   non-existent program and connection table overflow,\
    \ etc.  Resource\n   errors should be followed by a <CLS> in response to the <RFC>.\n\
    \   QUERIES\n        <QRY> <My   Socket>  < >\n   or   <QRY> <Your Socket>  <Text>\n\
    \   Queries provide an extension to the <ERR> facility as well as limited\n  \
    \ error recovery, thus avoiding re-initialization of an NCP.\n   The first command\
    \ requests the remote NCP to supply the status of all\n   connections to the user\
    \ specified by the user number in <My socket>.\n   The second is the reply; <Text>\
    \ contains the connection status\n   information.  If an NCP wants the status\
    \ of all connections to a\n   remote HOST, the <My Socket> is zero.\n   PROGRAM\
    \ TERMINATION NOTIFICATION\n        <TER> <My Socket>\n   This command supplements\
    \ rather than replaces <CLS>.  It severs all\n   communication between a program\
    \ and those programs in a given HOST to\n   which it is connected.  This command\
    \ performs what would otherwise be\n   handled by multiple <CLS> commands. <My\
    \ Socket> contains the sender's\n   user number.\n   HOST STATUS\n        <HCU>\n\
    \        <HGD>\n   These messages (HOST coming up and HOST voluntarily going down)\
    \ are\n   compatible with asynchronous, interrupt-driven programs, as opposed\n\
    \   to the more conventional post/poll method.\n   TRANSMIT AND BROADCAST\n  \
    \      <TRN> <Body>\n        <BDC> <Body>\n   Unlike the previous commands, these\
    \ are not sent over the control\n   link, but rather over links assigned to user\
    \ programs.  The prefix of\n   <TRN> or <BDC> indicates, to the receiving NCP,\
    \ the disposition of\n   the message body. <TRN> indicates a message to be passed\
    \ to a single\n   process. <BDC> specifies to the destination NCP that the message\
    \ is\n   to be distributed over all receiving connections linked to the\n   sender.\
    \  In response to a system call by the user to an NCP\n   requesting <BDC>, the\
    \ NCP generates one <BDC> to each HOST to which\n   the sender is connected.\n\
    \   RFC AND DYNAMIC RECONNECTION\n   This protocol is complex; it proliferates\
    \ control messages; it causes\n   queues (to become associated with re-entrant\
    \ procedures) that are\n   artificially imposed via the protocol (remote AEN assignment);\
    \ and\n   discounts the situation where only controlling process \"A\" has\n \
    \  knowledge that slave process \"B\" should be \"rung out\" in a dynamic\n  \
    \ reconnection.\n   The <ERR>, etc., are suggestions for inclusion as additions\
    \ in the\n   April 28th protocol specifications.  The above criticism is, of\n\
    \   course, not intended to affect modification of the RFC structure by\n   April\
    \ 28th, nor to reflect on those who planned it.  We have not\n   studied the problem.\
    \  It is meant, however, to voice our concern\n   about complexity and resulting\
    \ response times.  This is a difficult\n   problem and it deserves more study\
    \ after we have exercised the\n   current RFC specifications.  We hope to offer\
    \ constructive\n   suggestions with respect to the RFC in the future.\n   JFH:hs\n\
    \         [ This RFC was put into machine readable form for entry ]\n        \
    \  [ into the online RFC archives by Mario Vitale 08/99 ]\n"
