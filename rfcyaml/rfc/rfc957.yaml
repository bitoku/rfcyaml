- title: __initial_text__
  contents:
  - '              Experiments in Network Clock Synchronization

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This RFC discusses some experiments in clock synchronization\
    \ in the\n   ARPA-Internet community, and requests discussion and suggestions\
    \ for\n   improvements.  Distribution of this memo is unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.      Introduction\n   2.      Design of the Synchronization\
    \ Algorithm\n   2.1.    The Logical Clock\n   2.2.    Linear Phase Adjustments\n\
    \   2.3.    Nonlinear Phase Adjustments\n   3.      Synchronizing Network Clocks\n\
    \   3.1.    Reference Clocks and Reference Hosts\n   3.2.    Distribution of Timing\
    \ Information\n   4.      Experimental Validation of the Design\n   4.1.    Experiment\
    \ Design\n   4.2.    Experiment Execution\n   4.3.    Discussion of Results\n\
    \   4.3.1.  On Power-Grid Clocks\n   4.3.2.  On Clocks Synchronized via Network\
    \ Links\n   4.3.3.  On the Accuracy of Radio Clocks\n   4.3.3.1. The Spectracom\
    \ 8170 WWVB Radio Clock\n   4.3.3.2. The True Time 468-DC GOES Radio Clock\n \
    \  4.3.3.3. The Heath GC-1000 WWV Radio Clock\n   4.3.4.  On Handling Disruptions\n\
    \   4.4.    Additional Experiments\n   5.      Summary and Conclusions\n   6.\
    \      References\n"
- title: List of Figures
  contents:
  - "List of Figures\n   Figure 1. Clock Registers\n   Figure 2. Network Configuration\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: List of Tables
  contents:
  - "List of Tables\n   Table 1. Experiment Hosts\n   Table 2. Link Measurements\n\
    \   Table 3. First Derivative of Delay\n   Table 4. GOES Radio Clock Offsets\n\
    \   Table 5. WWV Radio Clock Offsets\n   Table 6. ISI-MCON-GW Clock Statistics\n\
    \   Table 7. LL-GW Clock Statistics\n   Table 8. LL-GW Clock Statistics\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   One of the services frequently neglected in computer network\
    \ design\n   is a high-quality, time-of-day clock capable of generating accurate\n\
    \   timestamps with small residual errors compared to intrinsic one-way\n   network\
    \ delays.  Such a service would be useful for tracing the\n   progress of complex\
    \ transactions, synchronizing cached data bases,\n   monitoring network performance\
    \ and isolating problems.\n   Several mechanisms have been specified in the Internet\
    \ protocol suite\n   to record and transmit the time at which an event takes place,\n\
    \   including the ICMP Timestamp message [6], Time Protocol [7], Daytime\n   protocol\
    \ [8] and IP Timestamp option [9].  A new Network Time\n   Protocol [12] has been\
    \ proposed as well.  Additional information on\n   network time synchronization\
    \ can be found in the References at the\n   end of this document.  Synchronization\
    \ protocols are described in [3]\n   and [12] and synchronization algorithms in\
    \ [2], [5], [10] and [11].\n   Experimental results on measured roundtrip delays\
    \ in the Internet are\n   discussed in [4].  A comprehensive mathematical treatment\
    \ of clock\n   synchronization can be found in [1].\n   Several mechanisms have\
    \ been specified in the Internet protocol suite\n   to record and transmit the\
    \ time at which an event takes place,\n   including the ICMP Timestamp message\
    \ [6], Time protocol [7], Daytime\n   protocol [8] and IP Timestamp option [9].\
    \  Issues on time\n   synchronization are discussed in [4] and synchronization\
    \ algorithms\n   in [2] and [5].  Experimental results on measured roundtrip delays\
    \ in\n   the Internet are discussed in [2].  A comprehensive mathematical\n  \
    \ treatment of the subject can be found in [1], while an interesting\n   discussion\
    \ on mutual-synchonization techniques can be found in [10].\n   There are several\
    \ ways accurate timestamps can be generated.  One is\n   to provide at every service\
    \ point an accurate, machine-readable clock\n   synchronized to a central reference,\
    \ such as the National Bureau of\n   Standards (NBS).  Such clocks are readily\
    \ available in several models\n   ranging in accuracies of a few hundred milliseconds\
    \ to less than a\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   millisecond and are typically\
    \ synchronized to special ground-based or\n   satellite-based radio broadcasts.\
    \  While the expense of the clocks\n   themselves, currently in the range $300\
    \ to $3000, can often be\n   justified, all require carefully sited antennas well\
    \ away from\n   computer-generated electromagnetic noise, as well as shielded\n\
    \   connections to the clocks.  In addition, these clocks can require a\n   lengthy\
    \ synchonization period upon power-up, so that a battery-backup\n   power supply\
    \ is required for reliable service in the event of power\n   interruptions.\n\
    \   If the propagation delays in the network are stable or can be\n   predicted\
    \ accurately, timestamps can be generated by a central\n   server, equipped with\
    \ a clock such as described above, in response to\n   requests from remote service\
    \ points.  However, there are many\n   instances where the trans-network delay\
    \ to obtain a timestamp would\n   be intolerable, such as when timestamping a\
    \ message before\n   transmission.  In addition, propagation delays are usually\
    \ not\n   predictable with precisions in the order required, due to\n   probabilistic\
    \ queuing and channel-contention delays.\n   In principle, a clock of sufficient\
    \ accuracy can be provided at each\n   service point using a stable, crystal-controlled\
    \ clock which is\n   corrected from time to time by messages from a central server.\n\
    \   Suitable inexpensive, crystal-controlled clock interfaces are\n   available\
    \ for virtually any computer.  The interesting problem\n   remaining is the design\
    \ of the synchronization algorithm and protocol\n   used to transmit the corrections.\
    \  In this document one such design\n   will be described and its performance\
    \ assessed.  This design has been\n   incorprated as an integral part of the network\
    \ routing and control\n   protocols of the Distributed Computer Network (DCnet)\
    \ architecture\n   [5], clones of which have been established at several sites\
    \ in the US\n   and Europe.  These protocols have been in use since 1979 and been\n\
    \   continuously tested and refined since then.\n"
- title: 2.  Design of the Synchronization Algorithm
  contents:
  - "2.  Design of the Synchronization Algorithm\n   The synchronization algorithm\
    \ is distributed in nature, with protocol\n   peers maintained in every host on\
    \ the network.  Peers communicate\n   with each other on a pairwise basis using\
    \ special control messages,\n   called Hello messages, exchanged periodically\
    \ over the ordinary data\n   links between them.  The Hello messages contain information\
    \ necessary\n   for each host to calculate the delay and offset between the local\n\
    \   clock of the host and the clock of every other host on the network\n   and\
    \ are also used to drive the routing algorithm.\n   The synchronization algorithm\
    \ includes several features to improve\n   the accuracy and stability of the local\
    \ clock in the case of host or\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   link failures.  In following\
    \ sections the design of the algorithm is\n   summarized.  Full design details\
    \ are given in [5] along with a formal\n   description of the Hello protocol.\n"
- title: 2.1.  The Logical Clock
  contents:
  - "2.1.  The Logical Clock\n   In the DCnet model each service point, or host, is\
    \ equipped with a\n   hardware clock, usually in the form of an off-the-shelf\
    \ interface.\n   Using this and software registers, a logical clock is constructed\n\
    \   including a 48-bit Clock Register, which increments at a 1000 Hz\n   rate,\
    \ a 32-bit Clock-Adjust Register, which is used to slew the Clock\n   Register\
    \ in response to raw corrections received over the net, and a\n   Counter Register,\
    \ which is used in some interface designs as an\n   auxilliary counter.  The configuration\
    \ and decimal point of these\n   registers are shown in Figure 1.\n          \
    \ Clock Register                                   \n           0            \
    \   16               32              \n           +---------------+---------------+---------------+\n\
    \           |               |               |               |\n           +---------------+---------------+---------------+\n\
    \                                           A                \n              \
    \                       decimal point          \n           Clock-Adjust Register\
    \                            \n                           0               16 \
    \              \n                           +---------------+---------------+\n\
    \                           |               |               |\n              \
    \             +---------------+---------------+\n                            \
    \               A                \n                                     decimal\
    \ point          \n           Counter Register                               \
    \  \n                           0              16                \n          \
    \                 +---------------+                \n                        \
    \   |               |                \n                           +---------------+\
    \                \n                                           A              \
    \  \n                                     decimal point          \n          \
    \             Figure 1. Clock Registers\n   The Clock Register and Clock-Adjust\
    \ Register are implemented in\n   memory.  In typical clock interface designs\
    \ such as the DEC KMV11-A\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   the Counter Register is implemented\
    \ in the interface as a buffered\n   counter driven by a crystal oscillator. \
    \ A counter overflow is\n   signalled by an interrupt, which results in an increment\
    \ of the Clock\n   Register at bit 15 and the propagation of carries as required.\
    \  The\n   time of day is determined by reading the Counter Register, which does\n\
    \   not disturb its counting process, and adding its value to that of the\n  \
    \ Clock Register with decimal points aligned.\n   In other interface designs such\
    \ as the simple LSI-11 event-line\n   mechanism, each tick of the clock is signalled\
    \ by an interrupt at\n   intervals of 10, 16-2/3 or 20 ms, depending on interface\
    \ and clock\n   source.  When this occurs the appropriate number of milliseconds,\n\
    \   expressed to 32 bits in precision, is added to the Clock Register\n   with\
    \ decimal points aligned.\n   It should be noted at this point that great care\
    \ in operating system\n   design is necessary in order to preserve the full accuracy\
    \ of\n   timestamps with respect to the application program, which must be\n \
    \  protected from pre-emption, excessive device latencies and so forth.\n   In\
    \ addition, the execution times of all sequences operating with the\n   interrupt\
    \ system disabled must be strictly limited.  Since the PDP11\n   operating system\
    \ most often used in the DCnet (the \"Fuzzball\"\n   operating system) has been\
    \ constructed with these considerations\n   foremost in mind, it has been especially\
    \ useful for detailed network\n   performance testing and evaluation.  Other systems,\
    \ in particular the\n   various Unix systems, have not been found sufficiently\
    \ accurate for\n   this purpose.\n   Left uncorrected, the host logical clock\
    \ runs at the rate of its\n   intrinsic oscillator, whether derived from a crystal\
    \ or the power\n   frequency.  The correction mechanism uses the Clock-Adjust\
    \ Register,\n   which is updated from time to time as raw corrections are received.\n\
    \   The corrections are computed using roundtrip delays and offsets\n   derived\
    \ from the routing algorithm, described later in this document,\n   which are\
    \ relatively noisy compared to the precision of the logical\n   clock.  A carefully\
    \ designed smoothing mechansim insures stability,\n   as well as isolation from\
    \ large transients that occur due to link\n   retransmissions, host reboots and\
    \ similar disruptions.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 2.2.  Linear Phase Adjustments
  contents:
  - "2.2.  Linear Phase Adjustments\n   The correction is introduced as a signed 32-bit\
    \ integer in\n   milliseconds.  If the magnitude of the correction is less than\
    \ 128\n   ms, the low-order 16 bits replaces bits 0-15 in the Clock-Adjust\n \
    \  register. At suitable intervals, depending on the jitter of the\n   intrinsic\
    \ oscillator, the value of this register is divided by a\n   fixed value, forming\
    \ a quotient which is first added to the Clock\n   Register, then subtracted from\
    \ the Clock-Adjust Register.  This\n   technique has several advantages:\n   \
    \   1.  The clock never runs backwards;  that is, successive\n          timestamps\
    \ always increase monotonically.\n      2.  In the event of loss of correction\
    \ information, the clock\n          slews to the last correction received.\n \
    \     3.  The rate of slew is proportional to the magnitude of the last\n    \
    \      correction.  This allows rapid settling in case of large\n          corrections,\
    \ but provides high stability in case of small\n          corrections.\n     \
    \ 4.  The sequence of computations preserves the highest precision\n         \
    \ and minimizes the propagation of round-off errors.\n   Experience has indicated\
    \ the choice of 256 as appropriate for the\n   dividend above, which yields a\
    \ maximum slew-rate magnitude less than\n   0.5 ms per adjustment interval and\
    \ a granularity of about 2.0\n   microseconds, which is of the same order as the\
    \ intrinsic tolerance\n   of the crystal oscillators used in typical clock interfaces.\
    \  In the\n   case of crystal-derived clocks, an adjustment interval of four\n\
    \   seconds has worked well, which yields a maximum slew-rate magnitude\n   of\
    \ 125 microseconds per second.  In the case of power-frequency\n   clocks or especially\
    \ noisy links, the greatly increased jitter\n   requires shorter adjustment intervals\
    \ in the range of 0.5 second,\n   which yields a maximum slew-rate magnitude of\
    \ 1.0 ms per second.\n   In most cases, independent corrections are generated\
    \ over each link\n   at intervals of 30 seconds or less.  Using the above choices\
    \ a single\n   sample error of 128 ms causes an error at the next sample interval\
    \ no\n   greater than about 7.5 ms with the longer adjustment interval and 30\n\
    \   ms with the shorter.  The number of adjustment intervals to reduce\n   the\
    \ residual error by half is about 177, or about 12 minutes with the\n   longer\
    \ interval and about 1.5 minutes with the shorter.  This\n   completely characterizes\
    \ the linear dynamics of the mechanism.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 2.3.  Nonlinear Phase Adjustments
  contents:
  - "2.3.  Nonlinear Phase Adjustments\n   When the magnitude of the correction exceeds\
    \ 128 ms, the possiblity\n   exists that the clock is so far out of synchronization\
    \ with the\n   reference host that the best action is an immediate and wholesale\n\
    \   replacement of Clock Register contents, rather than a graduated\n   slewing\
    \ as described above.  In practice the necessity to do this is\n   rare and occurs\
    \ when the local host or reference host is rebooted,\n   for example. This is\
    \ fortunate, since step changes in the clock can\n   result in the clock apparently\
    \ running backward, as well as incorrect\n   delay and offset measurements of\
    \ the synchronization mechanism\n   itself.\n   However, it sometimes happens\
    \ that, due to link retransmissions or\n   occasional host glitches, a single\
    \ correction sample will be computed\n   with magnitude exceeding 128 ms.  In\
    \ practice this happens often\n   enough that a special procedure has been incorporated\
    \ into the\n   design.  If a sample exceeding the limit is received, its value\
    \ is\n   saved temporarily and does not affect the Clock-Adjust Register.  In\n\
    \   addition, a timer is initialized, if not already running, to count\n   down\
    \ to zero in a specified time, currently 30 seconds.\n   If the timer is already\
    \ running when a new correction sample with\n   magnitude exceeeding 128 ms arrives,\
    \ its value and the saved sample\n   value are averaged with equal weights to\
    \ form a new saved sample\n   value. If a new correction sample arrives with magnitude\
    \ less than\n   128 ms, the timer is stopped and the saved sample value discarded.\n\
    \   If the timer counts down to zero, the saved sample value replaces the\n  \
    \ contents of the Clock Register and the Clock-Adjust Register is set\n   to zero.\
    \  This procedure has the effect that occasional spikes in\n   correction values\
    \ are discarded, but legitimate step changes are\n   prefiltered and then used\
    \ to reset the clock after no more than a\n   30-second delay.\n"
- title: 3.  Synchronizing Network Clocks
  contents:
  - "3.  Synchronizing Network Clocks\n   The algorithms described in the previous\
    \ section are designed to\n   achieve a high degree of accuracy and stability\
    \ of the logical clocks\n   in each participating host.  In this section algorithms\
    \ will be\n   described which synchronize these logical clocks to each other and\
    \ to\n   standard time derived from NBS broadcasts.  These algorithms are\n  \
    \ designed to minimize the cumulative errors using linear synchronizing\n   techniques.\
    \ See [10] for a discussion of algorithms using nonlinear\n   techniques.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 3.1.  Reference Clocks and Reference Hosts
  contents:
  - "3.1.  Reference Clocks and Reference Hosts\n   The accuracy of the entire network\
    \ of logical clocks depends on the\n   accuracy of the device used as the reference\
    \ clock.  In the DCnet\n   clones the reference clock takes the form of a precision\
    \ crystal\n   oscillator which is synchronized via radio or satellite with the\
    \ NBS\n   standard clocks in Boulder, CO.  The date and time derived from the\n\
    \   oscillator can be sent continuously or read upon command via a serial\n  \
    \ asynchronous line.  Stand-alone units containing the oscillator,\n   synchronizing\
    \ receiver and controlling microprocessor are available\n   from a number of manufacturers.\n\
    \   The device driver responsible for the reference clock uses its\n   serial-line\
    \ protocol to derive both an \"on-time\" timestamp relative\n   to the logical\
    \ clock of the reference host and an absolute time\n   encoded in messages sent\
    \ by the clock.  About once every 30 seconds\n   the difference between these\
    \ two quantities is calculated and used to\n   correct the logical clock according\
    \ to the mechanisms described\n   previously.  The corrected logical clock is\
    \ then used to correct all\n   other logical clocks in the network.  Note the\
    \ different\n   nomenclature:  The term \"reference clock\" applies to the physical\n\
    \   clock itself, while the term \"reference host\" applies to the logical\n \
    \  clock of the host to which it is connected. Each has an individual\n   address,\
    \ delay and offset in synchronizing messages.\n   There are three different commercial\
    \ units used as reference clocks\n   in DCnet clones.  One of these uses the LF\
    \ radio broadcasts on 60 KHz\n   from NBS radio WWVB, another the HF radio broadcasts\
    \ on 5, 10 and 15\n   MHz from NBS radio WWV or WWVH and the third the UHF broadcasts\
    \ from\n   a GOES satellite.  The WWVB and GOES clocks claim accuracies in the\n\
    \   one-millisecond range.  The WWV clock claims accuracies in the 100-ms\n  \
    \ range, although actual accuracies have been measured somewhat better\n   than\
    \ that.\n   All three clocks include some kind of quality indication in their\n\
    \   messages, although of widely varying detail.  At present this\n   indication\
    \ is used only to establish whether the clock is\n   synchronized to the NBS clocks\
    \ and convey this information to the\n   network routing algorithm as described\
    \ later.  All clocks include\n   some provision to set the local-time offset and\
    \ propagation delay,\n   although for DCnet use all clocks are set at zero offset\
    \ relative to\n   Universal Time (UT).  Due to various uncertaincies in propagation\n\
    \   delay, serial-line speed and interrupt latencies, the absolute\n   accuracy\
    \ of timestamps derived from a reference host equipped with a\n   WWVB or GOES\
    \ reference clock is probably no better than a couple of\n   milliseconds.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 3.2.  Distribution of Timing Information
  contents:
  - "3.2.  Distribution of Timing Information\n   The timekeeping accuracy at the\
    \ various hosts in the network depends\n   critically on the precision whith which\
    \ corrections can be\n   distributed throughout the network.  In the DCnet design\
    \ a\n   distributed routing algorithm is used to determine minimum-delay\n   routes\
    \ between any two hosts in the net.  The algorithms used, which\n   are described\
    \ in detail in [5] and only in outline form here, provide\n   reachability and\
    \ delay information, as well as clock offsets, between\n   neighboring hosts by\
    \ means of periodic exchanges of routing packets\n   called Hello messages. This\
    \ information is then incorporated into a\n   set of routing tables maintained\
    \ by each host and spread throughout\n   the network by means of the Hello messages.\n\
    \   The detailed mechanisms to accomplish these functions have been\n   carefully\
    \ designed to minimize timing uncertaincies.  For instance,\n   all timestamping\
    \ is done in the drivers themselves, which are given\n   the highest priority\
    \ for resource access.  The mechanism to measure\n   roundtrip delays on the individual\
    \ links is insensitive to the delays\n   inherent in the processing of the Hello\
    \ message itself, as well as\n   the intervals between transmissions.  Finally,\
    \ care is taken to\n   isolate and discard transient timing errors that occur\
    \ when a host is\n   rebooted or a link is restarted.\n   The routing algorithm\
    \ uses a table called the Host Table, which\n   contains for each host in the\
    \ network the computed roundtrip delay\n   and clock offset, in milliseconds.\
    \  In order to separately identify\n   each reference clock, if there is more\
    \ than one in the network, a\n   separate entry is used for each clock, as well\
    \ as each host.  The\n   delay and offset fields of the host itself are set to\
    \ zero, as is the\n   delay field of each attached reference clock.  The offset\
    \ field of\n   each attached reference clock is recomputed periodically as described\n\
    \   above.\n   Hello messages containing a copy of the Host Table are sent\n \
    \  periodically to each neighbor host via the individual links\n   connecting\
    \ them.  In the case of broadcast networks the Hello message\n   is broadcast\
    \ to all hosts sharing the same cable.  The Hello message\n   also contains a\
    \ timestamp inserted at the time of transmission, as\n   well as information used\
    \ to accurately compute the roundtrip delay on\n   point-to-point links.\n   A\
    \ host receiving a Hello message processes the message for each host\n   in turn,\
    \ including those corresponding to the reference clocks.  It\n   adds the delay\
    \ field in the message to the previously determined\n   roundtrip link delay and\
    \ compares this with the entry already in its\n   Host Table.  If the sum is greater\
    \ than the delay field in the Host\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   Table, nothing further is done.\
    \  If the sum is less, an update\n   procedure is executed.  The update procedure,\
    \ described in detail in\n   [5], causes the new delay to replace the old and\
    \ the routing to be\n   amended accordingly.\n   The update procedure also causes\
    \ a new correction sample to be\n   computed as the difference between the timestamp\
    \ in the Hello message\n   and the local clock, which is used to correct the local\
    \ clock as\n   described above.  In addition, the sum of this correction sample\
    \ plus\n   the offset field in the Hello message replaces the offset field in\n\
    \   the Hello Table.  The effect of these procedures is that the local\n   clock\
    \ is corrected relative to the neighbor clock only if the\n   neighbor is on the\
    \ path of least delay relative to the selected\n   reference clock.  If there\
    \ is no route to the reference clock, as\n   determined by the routing algorithm,\
    \ no corrections are computable\n   and the local clock free-runs relative to\
    \ the last received\n   correction.\n   As the result of the operation of the\
    \ routing algorithm, all local\n   clocks in the network will eventually stabilize\
    \ at a constant offset\n   relative to the reference clock, depending upon the\
    \ drift rates of\n   the individual oscillators.  For most applications the offset\
    \ is\n   small and can be neglected.  For the most precise measurements the\n\
    \   computed offset in the Host Table entry associated with any host,\n   including\
    \ the reference clock, can be used to adjust the apparent\n   time relative to\
    \ the local clock of that host.  However, since the\n   computed offsets are relatively\
    \ noisy, it is necessary to smooth them\n   using some algorithm depending upon\
    \ application.  For this reason,\n   the computed offsets are provided separately\
    \ from the local time.\n"
- title: 4.  Experimental Validation of the Design
  contents:
  - "4.  Experimental Validation of the Design\n   The original DCnet was established\
    \ as a \"port expander\" net connected\n   to an ARPAnet IMP in 1978.  It was\
    \ and is intended as an experimental\n   testbed for the development of protocols\
    \ and measurement of network\n   performance.  Since then the DCnet network-layer\
    \ protocols have\n   evolved to include multi-level routing, logical addressing,\n\
    \   multicasting and time synchronization.  Several DCnet clones have\n   been\
    \ established in the US and Europe and connected to the DARPA\n   Internet system.\
    \  The experiments described below were performed\n   using the DCnet clone at\
    \ Linkabit East, near Washington, DC, and\n   another at Ford Motor Division,\
    \ near Detroit, MI.  Other clones at\n   Ford Aerospace and the Universities of\
    \ Maryland and Michigan were\n   used for calibration and test, while clones at\
    \ various sites in\n   Norway and Germany were used for occasional tests.  Additional\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   ARPANET gateways of the WIDEBAND/EISN\
    \ satellite system were also\n   included in the experiments in order to determine\
    \ the feasability of\n   synchronizing clocks across the ARPANET.\n   There were\
    \ four principal issues of interest in the experiments:\n      1.  What are the\
    \ factors affecting accuracy of a network of clocks\n          using the power\
    \ grid as the basic timing source, together with\n          corrections broadcast\
    \ from a central point?\n      2.  What are the factors affecting accuracy of\
    \ a network of clocks\n          synchronized via links used also to carry ordinary\
    \ data.\n      3.  How does the accuracy of the various radio clocks - WWVB, GOES\n\
    \          and WWV compare?\n      4.  What is the best way to handle disruptions,\
    \ such as a leap\n          second?\n   These issues will be discussed in turn\
    \ after presentation of the\n   experiment design and execution.\n"
- title: 4.1.  Experiment Design
  contents:
  - "4.1.  Experiment Design\n   Figure 2 shows the configuration used in a series\
    \ of tests conducted\n   during late June and early July of 1985.  The tests involved\
    \ six\n   hosts, three reference clocks and several types of communication\n \
    \  links.  The tests were designed to coincide with the insertion of a\n   leap\
    \ second in the standard time broadcast by NBS, providing an\n   interesting test\
    \ of system stability in the face of such disruptions.\n   The test was also designed\
    \ to test the feasability of using the power\n   grid as a reference clock, with\
    \ corrections broadcast as described\n   above, but not used to adjust the local\
    \ clock.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n      ARPAnet                 \
    \             |                      \n      - - - - - - - - - - - - - - - - -\
    \ -  |  - - - - - - - - - - \n                                       56K |   \
    \                   \n      +---------+     +---------+     +----+----+ 1.2 +---------+\
    \ \n      |   WWV   | 1.2 |         | 4.8 |         +-----+  WWVB   | \n     \
    \ |  radio  +-----+  DCN6   +-----+  DCN1   |async|  radio  | \n      |  clock\
    \  |async|         |DDCMP|         +--+  |  clock  | \n      +---------+     +---------+\
    \     +----+----+  |  +---------+ \n                       Ethernet          \
    \  |       |              \n      DCnet     ===o===============o=======o===  \
    \  | 1822/DH      \n                   |               |               |     \
    \         \n              +----+----+     +----+----+     +----+----+        \
    \ \n      power   |         |     |         |     |         |    power\n     \
    \ freq <--+  DCN3   |     |  DCN5   |     |  DCN7   +--> freq \n      60 Hz  \
    \ |         |     |         |     |         |    60 Hz\n              +---------+\
    \     +----+----+     +---------+         \n                               9.6\
    \ |                              \n      - - - - - - - - - - - - - -  |  - - -\
    \ - - - - - - - - - - - \n                                   | DDCMP         \
    \               \n                              +----+----+     +---------+  \
    \       \n                              |         | 1.2 |  GOES   |         \n\
    \      FORDnet                 |  FORD1  +-----+satellite|         \n        \
    \                      |         |async|  clock  |         \n                \
    \              +---------+     +---------+         \n                    Figure\
    \ 2. Network Configuration\n   Only those hosts and links directly participating\
    \ in the tests are\n   shown in Figure 2.  All hosts shown operate using the DCnet\
    \ protocols\n   and timekeeping algorithms summarized in this document and detailed\n\
    \   in [5].  The DCnet hosts operate as one self-contained net of the\n   Internet\
    \ systems, while the FORDnet hosts operate as another with\n   distinct net numbers.\
    \  The gateway functions connecting the two nets\n   are distributed in the DCN5\
    \ and FORD1 hosts and the link connecting\n   them.  This means that, although\
    \ the clock offsets of individual\n   DCnet hosts are visible to other DCnet hosts\
    \ and the clock offsets of\n   individual FORDnet hosts are visible to other FORDnet\
    \ hosts, only the\n   clock offset of the gateway host on one net is visible to\
    \ hosts on\n   the other net.\n   In Figure 2 the links are labelled with both\
    \ the intrinsic speed, in\n   kilobits per second, as well as the link protocol\
    \ type.  The DDCMP\n   links use microprocessor-based DMA interfaces that retransmit\
    \ in case\n   of message failure.  The 1822/DH link connecting DCN1 and DCN7\n\
    \   operates at DMA speeds over a short cable.  The Ethernet link uses\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   DMA interfaces that retransmit\
    \ only in case of collisions.  The\n   asynchronous links are used only to connect\
    \ the reference clocks to\n   the hosts over a short cable.\n   While all hosts\
    \ and links were carrying normal traffic throughout the\n   test period, the incidence\
    \ of retransmissions was very low, perhaps\n   no more than a few times per day\
    \ on any link.  However, the DDCMP\n   link protocol includes the use of short\
    \ control messages exhanged\n   between the microprocessors about once per second\
    \ in the absence of\n   link traffic. These messages, together with retransmissions\
    \ when they\n   occur, cause small uncertaincies in Hello message delays that\n\
    \   contribute to the total measurement error.  An additional uncertaincy\n  \
    \ (less than 0.5 per-cent on average) in Hello message length can be\n   introduced\
    \ when the link protocol makes use of character-stuffing or\n   bit-stuffing techniques\
    \ to achieve code transparency, such as with\n   the LAPB link-level protocol\
    \ of X.25.  However, the particular links\n   used in the tests use a count field\
    \ in the header, so that no\n   stuffing is required.\n   Although the timekeeping\
    \ algorithms have been carefully designed to\n   be insensitive to traffic levels,\
    \ it sometimes happens that an\n   intense burst of traffic results in a shortage\
    \ of memory buffers in\n   the various hosts.  In the case of the Ethernet interfaces,\
    \ which\n   have internal buffers, this can result in additional delays while\
    \ the\n   message is held in the interface pending delivery to the host.\n   Conditions\
    \ where these delays become significant occur perhaps once\n   or twice a day\
    \ in the present system and were observed occasionally\n   during the tests. \
    \ As described above, the correction-sample\n   processing incorporates a filtering\
    \ procedure that discards the vast\n   majority of glitches due to this and other\
    \ causes.\n"
- title: 4.2.  Experiment Execution
  contents:
  - "4.2.  Experiment Execution\n   The series of experiments conducted in late June\
    \ and early July of\n   1985 involved collecting data on the delays and offsets\
    \ of the six\n   hosts and three reference clocks shown in Figure 2.  In order\
    \ to\n   accomplish this, a special program was installed in a Unix 4.2bsd\n \
    \  system connected to the Ethernet link but not shown in Figure 2.  The\n   program\
    \ collected each 128-octet Hello message broadcast from DCN1\n   every 16 seconds\
    \ and appended it bit-for-bit to the data base.  The\n   total volume of raw data\
    \ collected amounted to almost 0.7 megabyte\n   per day.\n   The raw Hello-message\
    \ data were processed to extract only the\n   timestamp and measured clock offsets\
    \ for the hosts shown in Table 1\n   and then reformatted as an ASCII file, one\
    \ line per Hello message.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n        Host    Clock   Drift \
    \  Experiment Use                 \n        Name    ID      (ppm)            \
    \                      \n        ------------------------------------------------------\
    \ \n        DCN1    WWVB    -2.5    WWVB reference host            \n        DCN3\
    \    -       60-Hz   power-grid (unlocked)          \n        DCN5    DCN1   \
    \ 6.8     Ethernet host                  \n        DCN6    DCN1    -1.7    DDCMP\
    \ host, WWV reference host \n        DCN7    DCN1    60-Hz   power-grid (locked)\
    \            \n        FORD1   GOES    17.9    GOES reference host           \
    \ \n        WWV     -       -       WWV reference clock            \n        WWVB\
    \    -       -       WWVB reference clock           \n                       Table\
    \ 1. Experiment Hosts\n   In Table 1 the Clock ID column shows the reference host\
    \ selected as\n   the master clock for each host shown.  In this particular\n\
    \   configuration host DCN1 was locked to host WWVB, while hosts DCN5,\n   DCN6\
    \ and DCN7 were locked to DCN1.  Although the offset of GOES can\n   not be directly\
    \ determined from the Hello messages exchanged between\n   DCnet and FORDnet hosts,\
    \ the offset of FORD1 relative to GOES was\n   determined by observation to be\
    \ in the order of a millisecond, so for\n   all practical purposes the offset\
    \ of FORD1 represents the offset of\n   GOES.  In addition, since the WWVB clock\
    \ was considered by experience\n   the most accurate and reliable and the offset\
    \ of DCN1 relative to\n   WWVB was negligible, DCN1 was considered the reference\
    \ clock with\n   offset zero relative to the NBS clocks.\n   During the setup\
    \ phase of the experiments the intrinsic drift rates\n   of the crystal oscillators\
    \ in the four hosts DCN1, DCN5, DCN6 and\n   FORD1 equipped with them was measured\
    \ as shown in the \"Drift\" column\n   in Table 1.  The two hosts DCN3 and DCN7\
    \ are equipped with\n   line-frequency clocks. For experimental purposes DCN3\
    \ was unlocked\n   and allowed to free-run at the line-frequency rate, while DCN7\n\
    \   remained locked.\n   An ASCII file consisting of about 0.2 megabyte of reformatted\
    \ data,\n   was collected for each Universal-Time (UT) day of observation\n  \
    \ beginning on 28 June and continuing through 8 July.  Each file was\n   processed\
    \ by a program that produces an eight-color display of\n   measured offsets as\
    \ a function of time of observation.  Since the\n   display technique uses a bit-map\
    \ display and each observation\n   overwrites the bit-map in an inclusive-OR fashion,\
    \ the sample\n   dispersion is immediately apparent. Over eight samples per pixel\
    \ on\n   the time axis are available in a 24-hour collection period.  On the\n\
    \   other hand, the fine granularity of almost four samples per minute\n   allows\
    \ zooming the display to focus on interesting short-term\n   fluctuations, such\
    \ as in the case of the WWV clock.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 4.3.  Discussion of Results
  contents:
  - "4.3.  Discussion of Results\n   Each of the four previously mentioned issues\
    \ of interest will be\n   discussed in following subsections.\n"
- title: 4.3.1.  On Power-Grid Clocks
  contents:
  - "4.3.1.  On Power-Grid Clocks\n   Telephone interviews with operators and supervisors\
    \ of the Potomac\n   Electric Power Company (PEPCO), the electric utility serving\
    \ the\n   Washington, DC, area, indicate that there are three major operating\n\
    \   regions or grids, one east of the Rockies, a second west of the\n   Rockies\
    \ and a third in parts of Texas.  The member electric utilities\n   in each grid\
    \ operate on a synchronous basis, so that clocks anywhere\n   within the grid\
    \ should keep identical time.  However, in the rare\n   case when a utility drops\
    \ off the grid, no attempt is made to\n   re-establish correct time upon rejoining\
    \ the grrd.  In the much more\n   common case when areas within the grid are isolated\
    \ due to local\n   thunderstorms, for example, clock synchronization is also disrupted.\n\
    \   The experiments provided an opportunity to measure with exquisite\n   precision\
    \ the offset between a clock connected to the eastern grid\n   (DCN3) and the\
    \ NBS clocks.  The results, confirmed by the telephone\n   interviews, show a\
    \ gradual gain in time of between four and six\n   seconds during the interval\
    \ from about 1700 local time to 0800 the\n   next morning, followed by a more\
    \ rapid loss in time between 0800 and\n   1700.  If the time was slewed uniformly\
    \ throughout these extremes,\n   the rate would be about 100 ppm.\n   The actual\
    \ slewing rates depend on the demand, which itself is a\n   function of weather,\
    \ day of the week and season of the year.  Similar\n   effects occur in the western\
    \ and Texas grids, with more extreme\n   variations in the Texas grid due to the\
    \ smaller inertia of the\n   system, and less extreme variations in the western\
    \ grid, due to\n   smaller extremes in temperature, less total industrial demand\
    \ and a\n   larger fraction of hydro-electric generation.\n   The uilities consider\
    \ timekeeping a non-tariffed service provided as\n   a convenience to the customer.\
    \  In the eastern grid a control station\n   in Ohio manually establishes the\
    \ baseline system output, which\n   indirectly affects the clock offset and slewing\
    \ rate.  The local time\n   is determined at the control station with respect\
    \ to a WWVB radio\n   clock. The maximum slewing rate is specified as .025 Hz\
    \ (about 400\n   ppm), which is consistent with the maximum rates observed.  In\
    \ the\n   western grid the baseline system output is adjusted automatically\n\
    \   using a servomechanism driven by measured offsets from the NBS\n   clocks.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   Given the considerations above,\
    \ it would seem feasable for hosts to\n   synchronize logical clocks to a particular\
    \ power grid, but only if\n   corrections were transmitted often enough to maintain\
    \ the required\n   accuracy and these corrections were delivered to the hosts\n\
    \   essentially at the same time.  Assuming a worst-case 400-ppm slewing\n   rate\
    \ and one minute between correction broadcasts, for example, it\n   would in principle\
    \ be possible to achieve accuracies in the 20-ms\n   range.  There are a number\
    \ of prediction and smoothing techniques\n   that could be used to inhance accuracy\
    \ and reduce the overhead of the\n   broadcasts.\n   Host DCN3, which uses a line-frequency\
    \ clock interface, was unlocked\n   during the experiment period so that the offset\
    \ between the PEPCO\n   clock, which is locked to the eastern power grid, could\
    \ be measured\n   with respect to the reference host DCN1.  Host DCN7, which uses\
    \ the\n   same interface, remained locked to DCN1.  In spite of the previously\n\
    \   noted instability of the power grid, DCN7 remained typically within\n   30\
    \ ms of DCN1 and only infrequently exceeded 100 ms in the vicinity\n   of large\
    \ changes in system load that occured near 0800 and 1700 local\n   time. Over\
    \ the seven-day period from 2 July through 8 July the mean\n   offset was less\
    \ than a millisecond with standard deviation about 24\n   ms, while the maximum\
    \ was 79 ms and minimum -116 ms.\n   Experiments were also carried out using ICMP\
    \ Timestamp messages with\n   hosts known to use line-frequency clock interfaces\
    \ in California,\n   Norway and Germany.  The results indicated that the western\
    \ power\n   grid is rather more stable than the eastern grid and that the\n  \
    \ overseas grids are rather less stable.  In the Oslo, Munich and\n   Stuttgart\
    \ areas, for example, the diurnal variation was observed to\n   exceed ten seconds.\n"
- title: 4.3.2.  On Clocks Synchronized via Network Links
  contents:
  - "4.3.2.  On Clocks Synchronized via Network Links\n   As mentioned previously,\
    \ all network links used to synchronize the\n   clocks were carrying normal data\
    \ traffic throughout the experiment\n   period.  It would therefore be of interest\
    \ to investigate how this\n   affects the accuracy of the individual clocks.\n\
    \   Table 2 summarizes the mean and standard deviation of the measured\n   offsets\
    \ between the WWVB radio clock and various hosts as shown in\n   Figure 2.  Measurements\
    \ were made over the 24-hour period for each of\n   several days during the experimental\
    \ period.  Each entry shown in\n   Table 2 includes the mean of the statistic\
    \ over these days, together\n   with the maximum variation.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n      Host  Mean          Deviation\
    \    Link Type and Speed        \n      -----------------------------------------------------------\
    \ \n      DCN1  .08/.02       0.53/.02     WWVB radio clock (1200 bps)\n     \
    \ DCN5  -13.61/.04    1.1/0.4      Ethernet (10 Mbps)         \n      DCN6  0.27/.18\
    \      5.8/1.0      DDCMP (4800 bps)           \n      FORD1 38.5/1.6      2.5/0.5\
    \      DDCMP (9600 bps)           \n                       Table 2. Link Measurements\n\
    \   The departure of the mean shown in Table 2 from zero is related to\n   the\
    \ drift of the crystal oscillator used in the hardware interface\n   (see Table\
    \ 1).  As described previously, FORD1 was synchonized to the\n   GOES radio clock\
    \ with neglible offset, so that the mean and standard\n   deviation shown can\
    \ be accurately interpreted to apply to the GOES\n   radio clock as well.\n  \
    \ The results show that the uncertaincies inherent in the\n   synchronization\
    \ algorithm and protocols is in the same order as that\n   of the reference clocks\
    \ and is related to the speed of the links\n   connected the reference hosts to\
    \ the other hosts in the network.\n   Further discussion on the FORD1/GOES statistics\
    \ can be found in the\n   next section.\n   Further insight into the error process\
    \ can be seen in Table 3, which\n   shows the first derivative of delay.\n   \
    \              Host    Dev     Max     Min     Error \n                 -------------------------------------\
    \ \n                 DCN3    2.3     12      -17     10    \n                \
    \ DCN5    1.5     45      -45     5     \n                 DCN6    9       94\
    \      -54     40    \n                 DCN7    1.4     6       -7      5    \
    \ \n                 FORD1   3.4     68      -51     15    \n                \
    \   Table 3. First Derivative of Delay\n   The mean and standard deviation of\
    \ delay were computed for all hosts\n   on a typical day during the experimental\
    \ period.  In all cases the\n   magnitude of the mean was less than one.  The\
    \ standard deviation,\n   maximum and minimum for each link is summarized by host\
    \ in Table 3.\n   A common characteristic of the distribution in most cases was\
    \ that\n   only a handful of samples approached the maximum or minimum extrema,\n\
    \   while the vast majority of samples were much less than this.  The\n   \"Error\"\
    \ colum in Table 3 indicates the magnitude of the estimated\n   error when these\
    \ extrema are discarded.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   A very interesting feature of\
    \ the observations was the unexpectedly\n   low standard deviation of DCN3, which\
    \ was locked to the power grid\n   and thus would be expected to show wide variations.\
    \  Upon analysis,\n   this turned out to be a natural consequence of the fact\
    \ that the\n   Hello messages are generated as the result of interrupts based\
    \ on the\n   line frequency when the local clock had just been incremented by\n\
    \   1/60th of a second.\n   The synchronizing protocol and implementation were\
    \ carefully\n   constructed to minimize the loss of accuracy due to sharing of\
    \ the\n   network links between data and control traffic, as long as sufficient\n\
    \   resources (in particular, packet buffers) are available.  Since the\n   various\
    \ network links shown in Figure 2 operate over a wide range of\n   rates, it is\
    \ possible that undisciplined bursts of traffic can swamp\n   a host or gateway\
    \ and precipitate a condition of buffer starvation.\n   While most hosts using\
    \ paths through the experimental configuration\n   were relatively well-disciplined\
    \ in their packetization and\n   retransmission policies, some Unix 4.2bsd systems\
    \ were notorious\n   exceptions.  On occasion these hosts were observed sending\
    \ floods of\n   packets, with only a small amount of data per packet, together\
    \ with\n   excessive retransmissions.  As expected, this caused massive\n   congestion,\
    \ unpredictable link delays and occasional clock\n   synchronizing errors.\n \
    \  The synchronizing algorithms described above successfully cope with\n   almost\
    \ all instances of congestion as described, since delay-induced\n   errors tend\
    \ to be isolated, while inherent anti-spike and smoothing\n   properties of the\
    \ synchronizing algorithm help to preserve accuracies\n   in any case.  Only one\
    \ case was found during the ten-day experiment\n   period where a host was mistakenly\
    \ synchronized outside the\n   linear-tracking window due to congestion.  Even\
    \ in this case the host\n   was quickly resynchronized to the correct time when\
    \ the congestion\n   was cleared.\n"
- title: 4.3.3.  On the Accuracy of Radio Clocks
  contents:
  - "4.3.3.  On the Accuracy of Radio Clocks\n   One of the more potent motivations\
    \ for the experiments was to assess\n   the accuracy of the various radio clocks\
    \ and to determine whether the\n   WWV radio clock was an appropriate replacement\
    \ for the expensive WWVB\n   or GOES clocks.  A secondary consideration, discussed\
    \ further in the\n   next section, was how the various clocks handled disruptions\
    \ due to\n   power interruptions, leap seconds and so forth.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - 'Experiments in Network Clock Synchronization

    '
- title: 4.3.3.1.  The Spectracom 8170 WWVB Radio Clock
  contents:
  - "4.3.3.1.  The Spectracom 8170 WWVB Radio Clock\n   As the result of several years\
    \ of experience with the WWVB radio\n   clock, which is manufactured by Spectracom\
    \ Corporation as Model 8170,\n   it was chosen as the reference for comparison\
    \ for the GOES and WWV\n   radio clocks.  Washington, DC, is near the 100-microvolt/meter\n\
    \   countour of the WWVB transmitter at Boulder, CO, well in excess of\n   the\
    \ 25-microvolt/meter sensitivity of the receiver.  The antenna is\n   located\
    \ in a favorable location on the roof of a four-storey building\n   in an urban\
    \ area.\n   Using the data from the instruction manual, the propagation delay\
    \ for\n   the path from Boulder to Washington is about 8 ms, while the\n   intrinsic\
    \ receiver delay is about 17 ms.  The clock is read via a\n   1200-bps asynchronous\
    \ line, which introduces an additional delay of\n   about 7 ms between the on-time\
    \ transition of the first character and\n   the interrupt at the middle of the\
    \ first stop bit.  Thus, the WWVB\n   radio clock indications should be late by\
    \ 8 + 17 + 7 = 32 ms relative\n   to NBS standard time.  While it is possible\
    \ to include this delay\n   directly in the clock indication, this was not done\
    \ in the\n   experiments.  In order to account for this, 32 ms should be\n   subtracted\
    \ from all indications derived from this clock.  The\n   uncertaincy in the indication\
    \ due to all causes is estimated to be a\n   couple of milliseconds.\n"
- title: 4.3.3.2.  The True Time 468-DC GOES Radio Clock
  contents:
  - "4.3.3.2.  The True Time 468-DC GOES Radio Clock\n   The GOES radio clock is manufactured\
    \ by True Time Division of\n   Kinemetrics, Incorporated, as Model 468-DC.  It\
    \ uses the\n   Geosynchronous Orbiting Environmental Satellite (GOES), which\n\
    \   includes an NBS-derived clock channel.  Early in the experiment\n   period\
    \ there was some ambiguity as to the exact longitude of the\n   satellite and\
    \ also whether the antenna was correctly positioned.\n   This was reflected in\
    \ the rather low quality-of-signal indications\n   and occasional signal loss\
    \ reported by the clock and also its\n   apparent offset compared with the other\
    \ radio clocks.\n   Table 4 shows a summary of offset statistics for the GOES\
    \ radio clock\n   by day (all day numbers refer to July, 1985).\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n                 Day     Mean \
    \   Dev     Max     Min   \n                 ------------------------------------\
    \ \n                 2       31.6    9.4     53      -76  \n                 3\
    \       19.8    22.1    53      -64  \n                 4       42.8    17.1 \
    \   >150    19   \n                 5       39.3    2.2     54      -45  \n  \
    \               6       37.8    2.7     53      19   \n                 7    \
    \   62.2    13.0    89      22   \n                 8       38.2    2.8     90\
    \      -7   \n                   Table 4. GOES Radio Clock Offsets\n    On all\
    \ days except days 5, 6 and 8 long periods of poor-quality\n   signal reception\
    \ were evident.  Since the antenna and satellite\n   configuration are known to\
    \ be marginal, these conditions are not\n   considered representative of the capabilities\
    \ of the clock.  When the\n   data from these days are discarded, the mean offset\
    \ is 38.4 ms with\n   standard deviation in the range 2.2 to 2.8.  The maximum\
    \ offset is 90\n   ms and the minimum is -45 ms;  however, only a very small number\
    \ of\n   samples are this large - most excursions are limited to 10 ms of the\n\
    \   mean.\n   In order to compute the discrepancy between the GOES and WWVB clocks,\n\
    \   it is necessary to subtract the WWVB clock delay from the mean\n   offsets\
    \ computed above.  Thus, the GOES clock indications are 38.4 -\n   32 = 6.4 ms\
    \ late with respect to the WWVB clock indications.  which\n   is probably within\
    \ the bounds of experiment error.\n"
- title: 4.3.3.3.  The Heath GC-1000 WWV Radio Clock
  contents:
  - "4.3.3.3.  The Heath GC-1000 WWV Radio Clock\n   The WWV radio clock is manufactured\
    \ by Heath Company as Model\n   GC-1000.  It uses a three-channel scanning WWV/WWVH\
    \ receiver on 5, 10\n   and 15 MHz together with a microprocessor-based controller.\
    \  The\n   receiver is connected to an 80-meter dipole up about 15 meters and\n\
    \   located in a quiet suburban location.  Signal reception from the Fort\n  \
    \ Collins transmitters was average to poor during the experiment period\n   due\
    \ to low sunspot activity together with a moderate level of\n   geomagnetic disturbances,\
    \ but was best during periods of darkness\n   over the path.  The clock locked\
    \ at one of the frequencies for\n   varying periods up to an hour from two to\
    \ several times a day.\n   The propagation delay on the path between Fort Collins\
    \ and Washington\n   is estimated at about 10 ms and can vary up to a couple of\n\
    \   milliseconds over the day and night.  While it is possible to include\n  \
    \ this delay in the clock indications, which are already corrected for\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   the intrinsic receiver delay,\
    \ this was not done in the experiments.\n   During periods of lock, the clock\
    \ indications are claimed to be\n   accurate to within 100 ms.\n   Table 5 shows\
    \ a summary of offset statistics for the WWV radio clock\n   by day (all day numbers\
    \ refer to July, 1985).\n                 Day     Mean    Dev     Max     Min\
    \   \n                 ------------------------------------  \n              \
    \   2       -31     36      110     -119  \n                 3       -42     38\
    \      184     -141  \n                 4       -21     38      61      -133 \
    \ \n                 5       -31     37      114     -136  \n                \
    \ 6       -48     42      53      -160  \n                 7       -100    80\
    \      86      -315  \n                 8       -71     70      115     -339 \
    \ \n                    Table 5. WWV Radio Clock Offsets\n   On inspection of\
    \ the detailed plots of offsets versus time the data\n   reveal an interesting\
    \ sawtooth variation with period about 25 cycles\n   per hour and amplitude about\
    \ 90 ms.  Once the clock has locked for\n   some time the variation decreases\
    \ in frequency and sometimes\n   disappears.  This behavior is precisely what\
    \ would be expected of a\n   phase-locked oscillator and accounts for the rather\
    \ large standard\n   deviations in Table 5.\n   On inspection of the plots of\
    \ offsets versus time, it is apparent\n   that by far the best accuracies are\
    \ obtained at or in the periods of\n   lock, which is most frequent during periods\
    \ of darkness over the\n   propagation path, which occured roughly between 0800\
    \ UT and 1100 UT\n   during the experiment period.  Excluding all data except\
    \ that\n   collected during this period, the mean offset is -21.3 ms with\n  \
    \ standard deviation in the range 29-31.  The maximum offset is 59 ms\n   and\
    \ the minimum is -118 ms.\n   In order to compute the discrepancy between the\
    \ WWV and WWVB clocks,\n   it is necessary to subtract the total of the propagation\
    \ delay plus\n   WWVB clock delay from the mean offsets computed above.  Thus,\
    \ the WWV\n   clock indications are -21.3 - 10 - 32 = -72.3 ms late (72.3 ms early)\n\
    \   with respect to the WWVB clock indications.  Considering the large\n   standard\
    \ deviations noted above, it is probably not worthwhile to\n   include this correction\
    \ in the WWV clock indications.\n   On exceptional occasions excursions in offset\
    \ over 300 ms relative to\n   the WWVB clock were observed.  Close inspection\
    \ of the data showed\n   that this was due to an extended period (a day or more)\
    \ in which lock\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   was not achieved on any frequency.\
    \  The master oscillator uses a\n   3.6-MHz crystal oscillator trimmed by a digital/analog\
    \ converter and\n   register which is loaded by the microprocessor.  The occasional\n\
    \   excursions in offset were apparently due to incorrect register values\n  \
    \ as the result of noisy reception conditions and excessive intervals\n   between\
    \ lock.  On occasion the oscillator frequency was observed in\n   error over 4\
    \ ppm due to this cause, which could result in a\n   cumulative error of almost\
    \ 400 ms per day if uncorrected.\n"
- title: 4.3.4.  On Handling Disruptions
  contents:
  - "4.3.4.  On Handling Disruptions\n   The experiment period was intentionally selected\
    \ to coincide with the\n   insertion of a leap second in the worldwide time broadcasts.\
    \  The\n   intent was to examine the resulting behavior of the various radio\n\
    \   clocks and the synchronization algorithm when an additional second\n   was\
    \ introduced at 2400 UT on 30 June.\n   As it turned out, radio reception conditions\
    \ at the time of insertion\n   were quite poor on all WWV frequencies, the WWVB\
    \ frequency and the\n   GOES frequency.  Thus, all three clocks took varying periods\
    \ up to\n   several hours to resynchonize and correct the indicated time.  In\n\
    \   fact, the only time signals heard around the time of interest were\n   those\
    \ from Canadian radio CHU, but the time code of the Canadian\n   broadcasts is\
    \ incompatible with the of the US broadcasts.\n   As mentioned above, the WWVB\
    \ clock was used as the master during the\n   experiment period.  About two hours\
    \ after insertion of the leap\n   second the clock resynchronized and all hosts\
    \ in the experimental\n   network were corrected shortly afterwards.  Since the\
    \ magnitude of\n   the correction exceeded 128 ms, the correction was of a step\
    \ nature,\n   but was not performed simultaneously in all hosts due to the\n \
    \  individual timing of the Hello messages.  Thus, if timing-critical\n   network\
    \ operations happened to take place during the correction\n   process, inconsistent\
    \ timestamps could result.\n   The lesson drawn from this experience is quite\
    \ clear.  Accurate time\n   synchronization requires by its very nature long integration\
    \ times,\n   so that epochal events which disrupt the process must be predicted\
    \ in\n   advance and applied in all hosts independently.  In principle, this\n\
    \   would not be hard to do and could even be integrated into the\n   operation\
    \ of the step-correction procedure described earlier, perhaps\n   in the form\
    \ of bits included in Hello messages which trigger a\n   one-second correction\
    \ at the next rollover from 2400 to 0000 hours.\n   In order for such an out-of-band\
    \ correction to be effective, advance\n   notice of the leap second must be available.\
    \  At present, this\n   information is not available in the broadcast format and\
    \ must be\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   obtained via the news media.\
    \  In fact, there are spare bits in the\n   broadcast format that could be adapted\
    \ for this purpose, but this\n   would require reprogramming both the transmitting\
    \ and receiving\n   equipment. Nevertheless, this feature should be considered\
    \ for future\n   systems.\n"
- title: 4.4.  Additional Experiments
  contents:
  - "4.4.  Additional Experiments\n   A set of experiments was performed using two\
    \ WIDEBAND/EISN gateways\n   equipped with WWVB radio clocks and connected to\
    \ the ARPANET.  These\n   experiments were designed to determine the limits of\
    \ accuracy when\n   comparing these clocks via ARPANET paths.  One of the gateways\n\
    \   (ISI-MCON-GW) is located at the Information Sciences Institute near\n   Los\
    \ Angeles, while the other (LL-GW) is located at Lincoln\n   Laboratories near\
    \ Boston.  Both gateways consist of PDP11/44\n   computers running the EPOS operating\
    \ system and clock-interface\n   boards with oscillators phase-locked to the WWVB\
    \ clock.\n   The clock indications of the WIDEBAND/EISN gateways were compared\n\
    \   with the DCNet WWVB reference clock using ICMP Timestamp messages\n   [6],\
    \ which record the individual timestamps with a precision of a\n   millisecond.\
    \  This technique is not as accurate as the one described\n   in Section 3, since\
    \ the protocol implementation involves the\n   user-process level, which can be\
    \ subject to minor delays due to\n   process scheduling and interprocess-message\
    \ queueing.  However,\n   calibration measurements made over several of the links\
    \ shown in\n   Figure 2 indicate that the measurement errors are dominated by\
    \ the\n   individual link variations and not by the characteristics of the\n \
    \  measurement technique itself.\n   Measurements were made separately with each\
    \ gateway by sending an\n   ICMP Timestamp Request message from the ARPANET address\
    \ of DCN1 to\n   the ARPANET address of the gateway and computing the round-trip\
    \ delay\n   and clock offset from the ICMP Timestamp Reply message.  This process\n\
    \   was continued for 1000 message exchanges, which took about seven\n   minutes.\
    \ Table 6 shows the statistics obtained with ISI-MCON-GW and\n   Table 7 those\
    \ with LL-GW (all numbers are milliseconds).\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n            ISI-MCON-GW     Mean\
    \    Dev     Max     Min    \n             --------------------------------------------\
    \  \n             Offset          -16     40      126     -908  \n           \
    \  Delay           347     59      902     264   \n                 Table 6. ISI-MCON-GW\
    \ Clock Statistics\n             LL-GW (a)       Mean    Dev     Max     Min \
    \  \n             --------------------------------------------  \n           \
    \  Offset          -23     15      32      -143  \n             Delay        \
    \   310     25      536     252   \n                    Table 7. LL-GW Clock Statistics\n\
    \   The smaller values of standard deviation and extreme for LL-GW are\n   probably\
    \ due to the shorter ARPANET path involved.  The confidence in\n   the mean offset\
    \ can be estimated by dividing the standard deviation\n   by the square root of\
    \ the number of samples (1000), which suggests\n   that the mean offsets are accurate\
    \ to within a couple of miliseconds.\n   The mean offsets of the WIDEBAND/EISN\
    \ clocks as a group relative to\n   the DCN1 clock may thus indicate a minor discrepancy\
    \ in the setting\n   of the delay-compensation switches.\n   It is well known\
    \ that ARPANET paths exhibit wide variations in\n   delays, with occasional delays\
    \ reaching surprising values up to many\n   seconds.  In order to improve the\
    \ estimates a few samples were\n   removed from both the offset and delay data,\
    \ including all those with\n   magnitude greater than one second.\n   The above\
    \ experiments involve a burst of activity over a relatively\n   short time during\
    \ which the ratio of the measurement traffic to other\n   network traffic may\
    \ be nontrivial.  Another experiment with LL-GW was\n   designed with intervals\
    \ of ten seconds between ICMP messages and\n   operated over a period of about\
    \ three hours.  The results are shown\n   in Table 8.\n             LL-GW (b)\
    \       Mean    Dev     Max     Min  \n             --------------------------------------------\
    \ \n             Offset          -16     93      990     -874 \n             Delay\
    \           371     108     977     240  \n                    Table 8. LL-GW\
    \ Clock Statistics\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   Note that the standard deviations\
    \ and extrema are higher than in the\n   previous experiments, but the mean offset\
    \ is about the same.\n   The results of these experiments suggest that time synchronization\n\
    \   via ARPANET paths can yield accuracies to the order of a few\n   milliseconds,\
    \ but only if relatively large numbers of samples are\n   available.  The number\
    \ of samples can be reduced and the accuracy\n   improved by using the techniques\
    \ of Section 3 modified for ICMP\n   Timestamp messages and the longer, more noisy\
    \ paths involved.\n"
- title: 5.  Summary and Conclusions
  contents:
  - "5.  Summary and Conclusions\n   The experiments described above were designed\
    \ to verify the correct\n   operation of the DCnet time-synchronization algorithms\
    \ and protocols\n   under a variety of scenarios, including the use of line-frequency\n\
    \   clocks, three types of radio clocks and various types of\n   interprocessor\
    \ links.  They involved the collection and processing of\n   many megabytes of\
    \ data collected over a ten-day period that included\n   the insertion of a leap\
    \ second in the standard NBS time scale.  Among\n   the lessons learned were the\
    \ following:\n      1.  The algorithms and protocols operate as designed, yielding\n\
    \          accuracies throughout the experimental net in the order of a\n    \
    \      few milliseconds to a few tens of milliseconds, depending on\n        \
    \  the topology and link type.\n      2.  Glitches due to congestion, rebooted\
    \ hosts and link failures\n          are acceptably low, even in the face of massive\
    \ congestion\n          resulting from inappropriate host implementations elsewhere\
    \ in\n          the Internet.\n      3.  A synchronization scenario where the\
    \ clocks in all hosts are\n          locked to the line frequency and corrections\
    \ are broadcast\n          from a central time standard will work only if all\
    \ hosts are\n          on the same power grid, which is unlikely in the present\n\
    \          Internet configuration, but may be appropriate for some\n         \
    \ applications.\n      4.  In spite of the eastern power grid wandering over as\
    \ much as\n          six seconds in a day, it is possible to achieve accuracies\
    \ in\n          the 30-ms range using line-frequency interface clocks and\n  \
    \        corrections broadcast on the local net.\n      5.  Radio clocks can vary\
    \ widely in accuracy depending on signal\n          reception conditions.  Absolute\
    \ time can be determined to\n          within a couple of milliseconds using WWVB\
    \ and GOES radio\n          clocks, but only if they are calibrated using an independent\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n          standard such as a portable\
    \ clock.  The inexpensive WWV clocks\n          perform surprisingly well most\
    \ of the time, but can be in\n          error up to a significant fraction of\
    \ a second under some\n          conditions.\n      6.  Adjustments in the time\
    \ scale due to leap seconds must be\n          anticipated before they occur.\
    \  The synchronization protocol\n          must include a mechanism to broadcast\
    \ an adjustment in advance\n          of its occurance, so that it can be incorporated\
    \ in each host\n          simultaneously.  There is a need to incorporate advance\
    \ notice\n          of leap seconds in the broadcast time code.\n      7.  Time\
    \ synchronization via ARPANET paths can yield accuracies in\n          the order\
    \ of a few milliseconds, but only if relatively large\n          numbers of samples\
    \ are available.  Further work is needed to\n          develop efficient protocols\
    \ capable of similar accuracies but\n          using smaller numbers of samples.\n"
- title: 6.  References
  contents:
  - "6.  References\n   1.  Lindsay, W.C., and A.V.  Kantak.  Network Synchronization\
    \ of\n       Random Signals.  IEEE Trans.  Comm.  COM-28, 8 (August 1980),\n \
    \      1260-1266.\n   2.  Mills, D.L.  Time Synchronization in DCNET Hosts.  DARPA\
    \ Internet\n       Project Report IEN-173, COMSAT Laboratories, February 1981.\n\
    \   3.  Mills, D.L.  DCNET Internet Clock Service.  DARPA Network Working\n  \
    \     Group Report RFC-778, COMSAT Laboratories, April 1981.\n   4.  Mills, D.L.\
    \  Internet Delay Experiments.  DARPA Network Working\n       Group Report RFC-889,\
    \ M/A-COM Linkabit, December 1983.\n   5.  Mills, D.L.  DCN Local-Network Protocols.\
    \  DARPA Network Working\n       Group Report RFC-891, M/A-COM Linkabit, December\
    \ 1983.\n   6.  Postel, J.  Internet Control Message Protocol.  DARPA Network\n\
    \       Working Group Report RFC-792, USC Information Sciences Institute,\n  \
    \     September 1981.\n   7.  Postel, J.  Time Protocol.  DARPA Network Working\
    \ Group Report\n       RFC-868, USC Information Sciences Institute, May 1983.\n\
    \   8.  Postel, J.  Daytime Protocol.  DARPA Network Working Group Report\n  \
    \     RFC-867, USC Information Sciences Institute, May 1983.\n"
- title: RFC 957                                                   September 1985
  contents:
  - 'RFC 957                                                   September 1985

    '
- title: Experiments in Network Clock Synchronization
  contents:
  - "Experiments in Network Clock Synchronization\n   9.  Su, Z.  A Specification\
    \ of the Internet Protocol (IP) Timestamp\n       Option.  DARPA Network Working\
    \ Group Report RFC-781.  SRI\n       International, May 1981.\n   10. Marzullo,\
    \ K., and S.  Owicki.  Maintaining the Time in a\n       Distributed System. \
    \ ACM Operating Systems Review 19, 3 (July\n       1985), 44-54.\n   11. Mills,\
    \ D.L.  Algorithms for Synchronizing Network Clocks.  DARPA\n       Network Working\
    \ Group Report RFC-956, M/A-COM Linkabit, September\n       1985.\n   12. Mills,\
    \ D.L.  Network Time Protocol (NTP).  DARPA Network Working\n       Group Report\
    \ RFC-958, M/A-COM Linkabit, September 1985.\n"
