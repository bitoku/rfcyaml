Abstract This document defines a method for the support of GMPLS asymmetric bandwidth bidirectional Label Switched Paths (LSPs).
The approach presented is applicable to any switching technology and builds on the original Resource Reservation Protocol (RSVP) model for the transport of traffic related parameters.
This document moves the experiment documented in RFC 5467 to the standards track and obsoletes RFC 5467.
[RFC3473] introduced explicit support for bidirectional Label Switched Paths (LSPs).
The defined support matched the switching technologies covered by GMPLS, notably Time Division
Multiplexing (TDM) and lambdas; specifically, it only supported bidirectional LSPs with symmetric bandwidth allocation.
Symmetric bandwidth requirements are conveyed using the semantics objects defined in [RFC2205] and [RFC2210].
GMPLS asymmetric bandwidth bidirectional LSPs are bidirectional LSPs that have different bandwidth reservations in each direction.
Support for bidirectional LSPs with asymmetric bandwidth was previously discussed in the context of Ethernet, notably [RFC6060] and [RFC6003].
In that context, asymmetric bandwidth support was considered to be a capability that was unlikely to be deployed, and hence [RFC5467] was published as Experimental.
The MPLS Transport Profile, MPLS TP, requires that asymmetric bandwidth bidirectional LSPs be supported (see [RFC5654]); therefore, this document is being published on the Standards Track.
This document has no technical changes from the approach defined in [RFC5467].
This document moves the experiment documented in [RFC5467] to the standards track and obsoletes [RFC5467].
This document also removes the Ethernet  technology specific alternative approach discussed in the appendix of [RFC5467] and maintains only one approach that is suitable for use with any technology.
Background Bandwidth parameters are transported within RSVP ([RFC2210], [RFC3209], and [RFC3473])
via several objects that are opaque to RSVP.
While opaque to RSVP, these objects support a particular model for the communication of bandwidth information between an RSVP session sender (ingress) and receiver (egress).
The original model of communication, defined in [RFC2205] and maintained in [RFC3209], used the SENDER TSPEC and ADSPEC objects in Path messages and the FLOWSPEC object in Resv messages.
The SENDER TSPEC object was used to indicate a sender's data generation capabilities.
The FLOWSPEC object was issued by the receiver and indicated the resources that should be allocated to the associated data traffic.
The ADSPEC object was used to inform the receiver and intermediate hops of the actual resources available for the associated data traffic.
With the introduction of bidirectional LSPs in [RFC3473], the model of communication of bandwidth parameters was implicitly changed.
In the context of [RFC3473] bidirectional LSPs, the SENDER TSPEC object indicates the desired resources for both upstream and downstream directions.
The FLOWSPEC object is simply confirmation of the allocated resources.
The definition of the ADSPEC object is either unmodified and only has meaning for downstream traffic, or is implicitly or explicitly ([RFC4606] and [RFC6003]) irrelevant.
The approach for supporting asymmetric bandwidth bidirectional LSPs defined in this document builds on the original RSVP model for the transport of traffic related parameters and GMPLS's support for bidirectional LSPs.
The defined approach is generic and can be applied to any switching technology supported by GMPLS.
With this approach, the existing SENDER TSPEC, ADSPEC, and FLOWSPEC objects are complemented with the addition of new UPSTREAM TSPEC, UPSTREAM ADSPEC, and UPSTREAM FLOWSPEC objects.
The existing objects are used in the original fashion defined in [RFC2205] and [RFC2210], and refer only to traffic associated with the LSP flowing in the downstream direction.
The new objects are used in exactly the same fashion as the old objects, but refer to the upstream traffic flow Figure 1 shows the bandwidth related objects used for asymmetric bandwidth bidirectional LSPs.
Generic Asymmetric Bandwidth Bidirectional LSPs
The extensions defined in this document are limited to Point to Point (P2P) LSPs.
Support for Point to Multipoint (P2MP)
bidirectional LSPs is not currently defined and, as such, not covered in this document.
Conventions Used in This Document
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "
SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
Generalized Asymmetric Bandwidth Bidirectional LSPs
The setup of an asymmetric bandwidth bidirectional LSP is signaled using the bidirectional procedures defined in [RFC3473] together with the inclusion of the new UPSTREAM FLOWSPEC, UPSTREAM TSPEC, and UPSTREAM ADSPEC objects.
The new upstream objects carry the same information and are used in the same fashion as the existing downstream objects; they differ in that they relate to traffic flowing in the upstream direction while the existing objects relate to traffic flowing in the downstream direction.
The new objects also differ in that they are carried in messages traveling in the opposite direction.
The format of an UPSTREAM FLOWSPEC object is the same as a FLOWSPEC object [RFC2210].
This includes the definition of class types and their formats.
The class number of the UPSTREAM FLOWSPEC object is 120 (of the form 0bbbbbbb).
The Path message of an asymmetric bandwidth bidirectional LSP MUST contain an UPSTREAM FLOWSPEC object and MUST use the bidirectional LSP formats and procedures defined in [RFC3473].
The C Type of the UPSTREAM FLOWSPEC object MUST match the C Type of the SENDER
TSPEC object used in the Path message.
The contents of the UPSTREAM FLOWSPEC object MUST be constructed using a format and procedures consistent with those used to construct the FLOWSPEC object that will be used for the LSP, e.g., [RFC2210] or [RFC4328].
Nodes processing a Path message containing an UPSTREAM FLOWSPEC object MUST use the contents of the UPSTREAM FLOWSPEC object in the upstream label and the resource allocation procedure defined in Section 3.1 of [RFC3473].
Consistent with [RFC3473], a node that is unable to allocate a label or internal resources based on the contents of the UPSTREAM FLOWSPEC object MUST issue a PathErr message with a "Routing problem/MPLS label allocation failure" indication.
The format of an UPSTREAM TSPEC object is the same as a SENDER TSPEC object, which includes the definition of class types and their formats.
The class number of the UPSTREAM TSPEC object is 121 (of the form 0bbbbbbb).
The UPSTREAM TSPEC object describes the traffic flow that originates at the egress.
The UPSTREAM TSPEC object MUST be included in any Resv message that corresponds to a Path message containing an UPSTREAM FLOWSPEC object.
The C Type of the UPSTREAM TSPEC object MUST match the C Type of the corresponding UPSTREAM FLOWSPEC object.
The contents of the UPSTREAM TSPEC object MUST be constructed using a format and procedures consistent with those used to construct the FLOWSPEC object that will be used for the LSP, e.g., [RFC2210] or [RFC4328].
The contents of the UPSTREAM TSPEC object MAY differ from contents of the UPSTREAM FLOWSPEC object based on application data transmission requirements.
When an UPSTREAM TSPEC object is received by an ingress, the ingress MAY determine that the original reservation is insufficient to satisfy the traffic flow.
In this case, the ingress MAY tear down the LSP and send a PathTear message.
Alternatively, the ingress MAY issue a Path message with an updated UPSTREAM FLOWSPEC object to modify the resources requested for the upstream traffic flow.
This modification might require the LSP to be re routed, and in extreme cases might result in the LSP being torn down when sufficient resources are not available along the path of the LSP.
The format of an UPSTREAM ADSPEC object is the same as an ADSPEC object.
This includes the definition of class types and their formats.
The class number of the UPSTREAM ADSPEC object is 122 (of the form 0bbbbbbb).
The UPSTREAM ADSPEC object MAY be included in any Resv message that corresponds to a Path message containing an UPSTREAM FLOWSPEC object.
The C Type of the UPSTREAM TSPEC object MUST be consistent with the C Type of the corresponding UPSTREAM FLOWSPEC object.
The contents of the UPSTREAM ADSPEC object MUST be constructed using a format and procedures consistent with those used to construct the ADSPEC object that will be used for the LSP, e.g., [RFC2210] or [RFC6003].
The UPSTREAM ADSPEC object is processed using the same procedures as the ADSPEC object and, as such, MAY be updated or added at transit nodes.
This section presents the RSVP message related formats as modified by this section.
This document modifies formats defined in [RFC2205], [RFC3209], and [RFC3473].
See [RFC5511] for the syntax used by RSVP.
Unmodified formats are not listed.
Three new objects are defined in this section:
The format of the flow descriptor list for bidirectional asymmetric
LSPs is: <flow descriptor list
<SE flow descriptor> <FF flow descriptor list
<SE filter spec list> <SE filter spec list> is unmodified by this document.
This extension reuses and extends semantics and procedures defined in [RFC2205], [RFC3209], and [RFC3473] to support bidirectional LSPs with asymmetric bandwidth.
Three new objects are defined to indicate the use of asymmetric bandwidth.
Each of these objects is defined with class numbers in the form 0bbbbbbb.
Per [RFC2205], nodes not supporting this extension will not recognize the new class numbers and will respond with an "Unknown Object Class" error.
The error message will propagate to the ingress, which can then take action to avoid the path with the incompatible node or can simply terminate the session.
The IANA has made the assignments described below in the "Class Names, Class Numbers, and Class Types" section of the "RSVP PARAMETERS" registry.
The class named UPSTREAM FLOWSPEC has been assigned in the 0bbbbbbb range (120) with the following definition: Class Types or C types:
Same values as FLOWSPEC object
The class named UPSTREAM TSPEC has been assigned in the 0bbbbbbb range (121) with the following definition: Class Types or C types: Same values as SENDER TSPEC object (C Num 12) 5.3.
The class named UPSTREAM ADSPEC has been assigned in the 0bbbbbbb range (122) with the following definition: Class Types or C types: Same values as ADSPEC object (C Num 13) 6.
This document introduces new message objects for use in GMPLS signaling [RFC3473]   specifically the UPSTREAM TSPEC, UPSTREAM ADSPEC, and UPSTREAM FLOWSPEC objects.
These objects parallel the existing SENDER TSPEC, ADSPEC, and FLOWSPEC objects but are used in the opposite direction.
As such, any vulnerabilities that are due to the use of the old objects now apply to messages flowing in the reverse direction.
From a message standpoint, this document does not introduce any new signaling messages or change the relationship between LSRs that are adjacent in the control plane.
As such, this document introduces no additional message  or neighbor related security considerations.
See [RFC3473] for relevant security considerations and [RFC5920] for a more general discussion on RSVP TE security discussions.
