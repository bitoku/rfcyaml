- title: __initial_text__
  contents:
  - '    AES-CCM Elliptic Curve Cryptography (ECC) Cipher Suites for TLS

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the use of the Advanced Encryption Standard\
    \ (AES)\n   in the Counter and CBC-MAC Mode (CCM) of operation within Transport\n\
    \   Layer Security (TLS) to provide confidentiality and data-origin\n   authentication.\
    \  The AES-CCM algorithm is amenable to compact\n   implementations, making it\
    \ suitable for constrained environments,\n   while at the same time providing\
    \ a high level of security.  The\n   cipher suites defined in this document use\
    \ Elliptic Curve\n   Cryptography (ECC) and are advantageous in networks with\
    \ limited\n   bandwidth.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7251.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . .   3\n   2.  ECC-Based AES-CCM Cipher Suites . . . . . . . . . . . .\
    \ . . .   3\n     2.1.  AEAD Algorithms . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.2.  Requirements on Curves and Hashes . . . . . . . . . . .\
    \ .   5\n   3.  TLS Versions  . . . . . . . . . . . . . . . . . . . . . . . .\
    \   5\n   4.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n   5.  Security Considerations . . . . . . . . . . . . . . . . . . .   6\n\
    \     5.1.  Perfect Forward Secrecy . . . . . . . . . . . . . . . . .   6\n  \
    \   5.2.  Counter Reuse . . . . . . . . . . . . . . . . . . . . . .   6\n    \
    \ 5.3.  Hardware Security Modules . . . . . . . . . . . . . . . .   6\n   6. \
    \ Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   6\n   7.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .   7\n     7.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .   7\n     7.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .   8\n   Appendix A.  Recommended\
    \ Curves and Algorithms  . . . . . . . . .   9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document describes the use of Advanced Encryption Standard\
    \ (AES)\n   [AES] in Counter with CBC-MAC Mode (CCM) [CCM] in several TLS cipher\n\
    \   suites.  AES-CCM provides both authentication and confidentiality\n   (encryption\
    \ and decryption) and uses as its only primitive the AES\n   encrypt block cipher\
    \ operation.  This makes it amenable to compact\n   implementations, which are\
    \ advantageous in constrained environments.\n   Of course, adoption outside of\
    \ constrained environments is necessary\n   to enable interoperability, such as\
    \ that between web clients and\n   embedded servers, or between embedded clients\
    \ and web servers.  The\n   use of AES-CCM has been specified for the IPsec Encapsulating\n\
    \   Security Payload (ESP) [RFC4309] and 802.15.4 wireless networks\n   [IEEE802154].\n\
    \   Authenticated encryption, in addition to providing confidentiality\n   for\
    \ the plaintext that is encrypted, provides a way to check its\n   integrity and\
    \ authenticity.  Authenticated Encryption with Associated\n   Data, or AEAD [RFC5116],\
    \ adds the ability to check the integrity and\n   authenticity of some associated\
    \ data that is not encrypted.  This\n   memo utilizes the AEAD facility within\
    \ TLS 1.2 [RFC5246] and the AES-\n   CCM-based AEAD algorithms defined in [RFC5116]\
    \ and [RFC6655].  All of\n   these algorithms use AES-CCM; some have shorter authentication\
    \ tags\n   and are therefore more suitable for use across networks in which\n\
    \   bandwidth is constrained and message sizes may be small.\n   The cipher suites\
    \ defined in this document use Ephemeral Elliptic\n   Curve Diffie-Hellman (ECDHE)\
    \ as their key establishment mechanism;\n   these cipher suites can be used with\
    \ DTLS [RFC6347].\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  ECC-Based AES-CCM Cipher Suites
  contents:
  - "2.  ECC-Based AES-CCM Cipher Suites\n   The cipher suites defined in this document\
    \ are based on the AES-CCM\n   Authenticated Encryption with Associated Data (AEAD)\
    \ algorithms\n   AEAD_AES_128_CCM and AEAD_AES_256_CCM described in [RFC5116].\
    \  The\n   following cipher suites are defined:\n      CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CCM\
    \ = {0xC0,0xAC}\n      CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CCM = {0xC0,0xAD}\n\
    \      CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 = {0xC0,0xAE}\n      CipherSuite\
    \ TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8 = {0xC0,0xAF}\n   These cipher suites make\
    \ use of the AEAD capability in TLS 1.2\n   [RFC5246].  Note that each of these\
    \ AEAD algorithms uses AES-CCM.\n   Cipher suites ending with \"8\" use eight-octet\
    \ authentication tags;\n   the other cipher suites have 16-octet authentication\
    \ tags.\n   The HMAC truncation option described in Section 7 of [RFC6066] (which\n\
    \   negotiates the \"truncated_hmac\" TLS extension) does not have an\n   effect\
    \ on the cipher suites defined in this note, because they do not\n   use HMAC\
    \ to protect TLS records.\n   The \"nonce\" input to the AEAD algorithm is as\
    \ defined in [RFC6655].\n   In DTLS, the 64-bit seq_num field is the 16-bit DTLS\
    \ epoch field\n   concatenated with the 48-bit sequence_number field.  The epoch\
    \ and\n   sequence_number appear in the DTLS record layer.\n   This construction\
    \ allows the internal counter to be 32 bits long,\n   which is a convenient size\
    \ for use with CCM.\n   These cipher suites make use of the default TLS 1.2 Pseudorandom\n\
    \   Function (PRF), which uses HMAC with the SHA-256 hash function.\n   The ECDHE_ECDSA\
    \ key exchange is performed as defined in [RFC4492],\n   with the following additional\
    \ stipulations:\n   o  Curves with a cofactor equal to one SHOULD be used; this\n\
    \      simplifies their use.\n   o  The uncompressed point format MUST be supported.\
    \  Other point\n      formats MAY be used.\n   o  The client SHOULD offer the\
    \ elliptic_curves extension, and the\n      server SHOULD expect to receive it.\n\
    \   o  The client MAY offer the ec_point_formats extension, but the\n      server\
    \ need not expect to receive it.\n   o  Fundamental ECC algorithms [RFC6090] MAY\
    \ be used as an\n      implementation method.\n   o  If the server uses a certificate,\
    \ then the requirements in RFC\n      4492 apply: \"The server's certificate MUST\
    \ contain an ECDSA-\n      capable public key and be signed with ECDSA.\"  Guidance\
    \ on\n      acceptable choices of hashes and curves that can be used with each\n\
    \      cipher suite is detailed in Section 2.2.  The Signature Algorithms\n  \
    \    extension (Section 7.4.1.4.1 of [RFC5246]) SHOULD be used to\n      indicate\
    \ support of those signature and hash algorithms.  If a\n      client certificate\
    \ is used, the same criteria SHOULD apply to it.\n   Implementations of these\
    \ cipher suites will interoperate with\n   [RFC4492] but can be more compact than\
    \ a full implementation of that\n   RFC.\n"
- title: 2.1.  AEAD Algorithms
  contents:
  - "2.1.  AEAD Algorithms\n   The following AEAD algorithms are used:\n      AEAD_AES_128_CCM\
    \ is used in the TLS_ECDHE_ECDSA_WITH_AES_128_CCM\n      cipher suite,\n     \
    \ AEAD_AES_256_CCM is used in the TLS_ECDHE_ECDSA_WITH_AES_256_CCM\n      cipher\
    \ suite,\n      AEAD_AES_128_CCM_8 is used in the\n      TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8\
    \ cipher suite, and\n      AEAD_AES_256_CCM_8 is used in the\n      TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\
    \ cipher suite.\n"
- title: 2.2.  Requirements on Curves and Hashes
  contents:
  - "2.2.  Requirements on Curves and Hashes\n   Implementations SHOULD select elliptic\
    \ curves and hash functions so\n   that AES-128 is used with a curve and a hash\
    \ function supporting a\n   128-bit security level, and AES-256 is used with a\
    \ curve and a hash\n   function supporting a 192-bit or 256-bit security level.\
    \  More\n   detailed guidance on cryptographic parameter selection is given in\n\
    \   [SP800-57] (see especially Tables 2 and 3).\n   Appendix A describes suitable\
    \ curves and hash functions that are\n   widely available.\n"
- title: 3.  TLS Versions
  contents:
  - "3.  TLS Versions\n   These cipher suites make use of the authenticated encryption\
    \ with\n   additional data defined in TLS 1.2 [RFC5288].  They MUST NOT be\n \
    \  negotiated in older versions of TLS.  Clients MUST NOT offer these\n   cipher\
    \ suites if they do not offer TLS 1.2 or later.  Servers that\n   select an earlier\
    \ version of TLS MUST NOT select one of these cipher\n   suites.  Earlier versions\
    \ do not have support for AEAD; for instance,\n   the TLSCiphertext structure\
    \ does not have the \"aead\" option in TLS\n   1.1.  Because TLS has no way for\
    \ the client to indicate that it\n   supports TLS 1.2 but not earlier versions,\
    \ a non-compliant server\n   might potentially negotiate TLS 1.1 or earlier and\
    \ select one of the\n   cipher suites in this document.  Clients MUST check the\
    \ TLS version\n   and generate a fatal \"illegal_parameter\" alert if they detect\
    \ an\n   incorrect version.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   IANA has assigned the values for the cipher suites\
    \ defined in\n   Section 2 from the \"TLS Cipher Suite Registry\".  The DTLS-OK\
    \ column\n   has been marked as \"Y\" for each of these algorithms.\n"
- title: 5.  Security Considerations
  contents:
  - '5.  Security Considerations

    '
- title: 5.1.  Perfect Forward Secrecy
  contents:
  - "5.1.  Perfect Forward Secrecy\n   The perfect forward secrecy properties of ephemeral\
    \ Diffie-Hellman\n   cipher suites are discussed in the security analysis of [RFC5246].\n\
    \   This analysis applies to the ECDHE cipher suites.\n"
- title: 5.2.  Counter Reuse
  contents:
  - "5.2.  Counter Reuse\n   AES-CCM security requires that the counter never be reused.\
    \  The IV\n   construction in Section 2 is designed to prevent counter reuse.\n"
- title: 5.3.  Hardware Security Modules
  contents:
  - "5.3.  Hardware Security Modules\n   A cipher suite can be implemented in such\
    \ a way that the secret keys\n   and private keys are stored inside a Hardware\
    \ Security Module (HSM),\n   and the cryptographic operations involving those\
    \ keys are performed\n   by the HSM on data provided by an application interacting\
    \ with the\n   HSM through an interface such as that defined by the Cryptographic\n\
    \   Token Interface Standard [PKCS11].  When an AEAD cipher suite, such\n   as\
    \ those in this note, are implemented in this way, special handling\n   of the\
    \ nonce is required.  This is because the \"salt\" part of the\n   nonce is set\
    \ to the client_write_IV or server_write_IV, which is a\n   function of the TLS\
    \ master secret.\n   Another potential issue with the Cryptographic Token Interface\n\
    \   Standard is that the use of the DecryptUpdate function is not\n   possible\
    \ with the CCM decrypt operation or the decrypt operation of\n   any other authenticated\
    \ encryption method.  This is because the\n   DecryptUpdate requires that post-decryption\
    \ plaintext be returned\n   before the authentication check is completed.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   This document borrows heavily from [RFC5288].  Thanks\
    \ are due to\n   Robert Cragie for his great help in making this work complete,\n\
    \   correct, and useful, and to Peter Dettman for his review.  Thanks\n   also\
    \ to Mike StJohns for pointing out the HSM issues.\n   This document is motivated\
    \ by the considerations raised in the Zigbee\n   Smart Energy 2.0 working group.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [AES]      National Institute of Standards and\
    \ Technology,\n              \"Specification for the Advanced Encryption Standard\n\
    \              (AES)\", FIPS 197, November 2001.\n   [CCM]      National Institute\
    \ of Standards and Technology,\n              \"Recommendation for Block Cipher\
    \ Modes of Operation: The\n              CCM Mode for Authentication and Confidentiality\"\
    , SP\n              800-38C, May 2004.\n   [RFC2119]  Bradner, S., \"Key words\
    \ for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC\
    \ 2119, March 1997.\n   [RFC4492]  Blake-Wilson, S., Bolyard, N., Gupta, V., Hawk,\
    \ C., and B.\n              Moeller, \"Elliptic Curve Cryptography (ECC) Cipher\
    \ Suites\n              for Transport Layer Security (TLS)\", RFC 4492, May 2006.\n\
    \   [RFC5116]  McGrew, D., \"An Interface and Algorithms for Authenticated\n \
    \             Encryption\", RFC 5116, January 2008.\n   [RFC5246]  Dierks, T.\
    \ and E. Rescorla, \"The Transport Layer Security\n              (TLS) Protocol\
    \ Version 1.2\", RFC 5246, August 2008.\n   [RFC5288]  Salowey, J., Choudhury,\
    \ A., and D. McGrew, \"AES Galois\n              Counter Mode (GCM) Cipher Suites\
    \ for TLS\", RFC 5288,\n              August 2008.\n   [RFC5639]  Lochter, M.\
    \ and J. Merkle, \"Elliptic Curve Cryptography\n              (ECC) Brainpool\
    \ Standard Curves and Curve Generation\", RFC\n              5639, March 2010.\n\
    \   [RFC6066]  Eastlake, D., \"Transport Layer Security (TLS) Extensions:\n  \
    \            Extension Definitions\", RFC 6066, January 2011.\n   [RFC6090]  McGrew,\
    \ D., Igoe, K., and M. Salter, \"Fundamental Elliptic\n              Curve Cryptography\
    \ Algorithms\", RFC 6090, February 2011.\n   [RFC6347]  Rescorla, E. and N. Modadugu,\
    \ \"Datagram Transport Layer\n              Security Version 1.2\", RFC 6347,\
    \ January 2012.\n   [RFC6655]  McGrew, D. and D. Bailey, \"AES-CCM Cipher Suites\
    \ for\n              Transport Layer Security (TLS)\", RFC 6655, July 2012.\n\
    \   [SP800-57] National Institute of Standards and Technology,\n             \
    \ \"Recommendation for Key Management - Part 1: General\n              (Revision\
    \ 3)\", SP 800-57 Part 1, July 2012.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [IEEE802154]\n              IEEE, \"Wireless\
    \ Personal Area Networks\", IEEE Standard\n              802.15.4-2006, 2006.\n\
    \   [PKCS11]   RSA Laboratories, \"PKCS #11: Cryptographic Token Interface\n \
    \             Standard version 2.20\", Public Key Cryptography Standards\n   \
    \           PKCS#11-v2.20, 2004.\n   [RFC4309]  Housley, R., \"Using Advanced\
    \ Encryption Standard (AES) CCM\n              Mode with IPsec Encapsulating Security\
    \ Payload (ESP)\", RFC\n              4309, December 2005.\n"
- title: Appendix A.  Recommended Curves and Algorithms
  contents:
  - "Appendix A.  Recommended Curves and Algorithms\n   This memo does not mandate\
    \ any particular elliptic curves or\n   cryptographic algorithms, for the sake\
    \ of flexibility.  However,\n   since the main motivation for the AES-CCM-ECC\
    \ cipher suites is their\n   suitability for constrained environments, it is valuable\
    \ to identify\n   a particular suitable set of curves and algorithms.\n   This\
    \ appendix identifies a set of elliptic curves and cryptographic\n   algorithms\
    \ that meet the requirements of this note and that are\n   widely supported and\
    \ believed to be secure.\n   The curves and hash algorithms recommended for each\
    \ cipher suite are:\n      An implementation that includes either\n      TLS_ECDHE_ECDSA_WITH_AES_128_CCM\
    \ or\n      TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8 SHOULD support the secp256r1\n\
    \      curve and the SHA-256 hash function.\n      An implementation that includes\
    \ either\n      TLS_ECDHE_ECDSA_WITH_AES_256_CCM or\n      TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8\
    \ SHOULD support the secp384r1\n      curve and the SHA-384 hash function, and\
    \ MAY support the secp521r1\n      curve and the SHA-512 hash function.\n   More\
    \ information about the secp256r1, secp384r1, and secp521r1 curves\n   is available\
    \ in Appendix A of [RFC4492].\n   It is not necessary to implement the above curves\
    \ and hash functions\n   in order to conform to this specification.  Other elliptic\
    \ curves,\n   such as the Brainpool curves [RFC5639], for example, meet the\n\
    \   criteria laid out in this memo.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   David McGrew\n   Cisco Systems\n   13600 Dulles Technology\
    \ Drive\n   Herndon, VA  20171\n   USA\n   EMail: mcgrew@cisco.com\n   Daniel\
    \ V. Bailey\n   Ruhr-University Bochum\n   Universitatsstr. 150\n   44801 Bochum\n\
    \   Germany\n   EMail: danbailey@sth.rub.de\n   Matthew Campagna\n   Certicom\
    \ Corp.\n   5520 Explorer Drive #400\n   Mississauga, Ontario  L4W 5L1\n   Canada\n\
    \   EMail: mcampagna@gmail.com\n   Robert Dugal\n   Certicom Corp.\n   4701 Tahoe\
    \ Blvd., Building A\n   Mississauga, Ontario  L4W 0B5\n   Canada\n   EMail: rdugal@certicom.com\n"
