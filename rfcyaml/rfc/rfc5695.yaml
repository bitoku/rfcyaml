- title: __initial_text__
  contents:
  - '         MPLS Forwarding Benchmarking Methodology for IP Flows

    '
- title: Abstract
  contents:
  - "Abstract\n   This document describes a methodology specific to the benchmarking\n\
    \   of Multiprotocol Label Switching (MPLS) forwarding devices, limited\n   to\
    \ the most common MPLS packet forwarding scenarios and delay\n   measurements\
    \ for each, considering IP flows.  It builds upon the\n   tenets set forth in\
    \ RFC 2544, RFC 1242, and other IETF Benchmarking\n   Methodology Working Group\
    \ (BMWG) efforts.  This document seeks to\n   extend these efforts to the MPLS\
    \ paradigm.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the BSD License.\n   This document may\
    \ contain material from IETF Documents or IETF\n   Contributions published or\
    \ made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Document Scope ..................................................3\n  \
    \ 3. Key Words To Reflect Requirements ...............................4\n   4.\
    \ Test Methodology ................................................4\n      4.1.\
    \ Test Considerations ........................................5\n           4.1.1.\
    \ Abbreviations Used ..................................5\n           4.1.2. IGP\
    \ Support .........................................6\n           4.1.3. Label\
    \ Distribution Support ..........................6\n           4.1.4. Frame Formats\
    \ .......................................7\n           4.1.5. Frame Sizes .........................................9\n\
    \           4.1.6. Time-to-Live (TTL) or Hop Limit ....................12\n  \
    \         4.1.7. Trial Duration .....................................12\n    \
    \       4.1.8. Traffic Verification ...............................12\n      \
    \     4.1.9. Address Resolution and Dynamic Protocol State ......13\n   5. Reporting\
    \ Format ...............................................13\n   6. MPLS Forwarding\
    \ Benchmarking Tests .............................14\n      6.1. Throughput ................................................15\n\
    \           6.1.1. Throughput for MPLS Label Push .....................16\n  \
    \         6.1.2. Throughput for MPLS Label Swap .....................17\n    \
    \       6.1.3. Throughput for MPLS Label Pop (Unlabeled) ..........18\n      \
    \     6.1.4. Throughput for MPLS Label Pop (Aggregate) ..........19\n        \
    \   6.1.5. Throughput for MPLS Label Pop (PHP) ................20\n      6.2.\
    \ Latency Measurement .......................................21\n      6.3. Frame-Loss\
    \ Rate (FLR) Measurement .........................22\n      6.4. System Recovery\
    \ ...........................................23\n      6.5. Reset .....................................................23\n\
    \   7. Security Considerations ........................................25\n  \
    \ 8. Acknowledgement ................................................25\n   9.\
    \ References .....................................................25\n      9.1.\
    \ Normative References ......................................25\n      9.2. Informative\
    \ References ....................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Over the past several years, there has been an increase\
    \ in the use of\n   MPLS as a forwarding architecture in new and existing network\n\
    \   designs.  MPLS, defined in [RFC3031], is a foundation technology and\n   the\
    \ basis for many advanced technologies such as Layer 3 MPLS VPNs,\n   Layer 2\
    \ MPLS VPNs, and MPLS Traffic Engineering.\n   However, there is no standard method\
    \ defined to compare and contrast\n   the foundational MPLS packet forwarding\
    \ capabilities of network\n   devices.  This document proposes a methodology using\
    \ common criteria\n   (such as throughput, latency, frame-loss rate, system recovery,\n\
    \   reset, etc.) to evaluate MPLS forwarding of any implementation.\n"
- title: 2.  Document Scope
  contents:
  - "2.  Document Scope\n   The benchmarking methodology principles outlined in RFC\
    \ 2544\n   [RFC2544] are independent of forwarding techniques; however, they\n\
    \   don't fully address MPLS benchmarking.  The workload on network\n   forwarding\
    \ device resources that MPLS forwarding places is different\n   from that of IP\
    \ forwarding; therefore, MPLS forwarding benchmarking\n   specifics are desired.\n\
    \   The purpose of this document is to describe a methodology specific to\n  \
    \ the benchmarking of MPLS forwarding devices.  The methods described\n   are\
    \ limited in scope to the most common MPLS packet forwarding\n   scenarios and\
    \ corresponding performance measurements in a laboratory\n   setting.  It builds\
    \ upon the tenets set forth in RFC 2544 [RFC2544],\n   RFC 1242 [RFC1242], and\
    \ other IETF Benchmarking Methodology Working\n   Group (BMWG) efforts.  In other\
    \ words, this document is not a\n   replacement for, but a complement to, RFC\
    \ 2544.\n   This document focuses on the MPLS label stack [RFC3032] that has only\n\
    \   one entry, as it is the fundamental of MPLS forwarding.  It is\n   expected\
    \ that future documents may cover the benchmarking of MPLS\n   applications such\
    \ as Layer 3 VPN (L3VPN) [RFC4364], Layer 2 VPN\n   (L2VPN) [RFC4664], Fast ReRoute\
    \ [RFC4090], etc., which require more\n   than one entry in the MPLS label stack.\n\
    \   Moreover, to address the majority of current deployments' needs, this\n  \
    \ document focuses on having IP packets as the MPLS payload.  In other\n   words,\
    \ label distribution for IP Forwarding Equivalence Class (FEC)\n   [RFC3031] is\
    \ prescribed (see Section 4.1.3) by this document.  It is\n   expected that future\
    \ documents may focus on having non-IP packets as\n   the MPLS payload.\n   Note\
    \ that the presence of an MPLS label stack does not require the\n   length of\
    \ MPLS payload (which is an IP packet, per this document) to\n   be changed; hence,\
    \ the effective maximum size of a frame can increase\n   by Z octets (where Z\
    \ = 4 x number of label stack entries), as\n   observed in current deployments.\
    \  This document focuses on\n   benchmarking such a scenario.\n"
- title: 3.  Key Words To Reflect Requirements
  contents:
  - "3.  Key Words To Reflect Requirements\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119\n   [RFC2119].  RFC 2119 defines the use of these key words\
    \ to help make\n   the intent of Standards Track documents as clear as possible.\
    \  While\n   this document uses these keywords, this document is not a Standards\n\
    \   Track document.\n"
- title: 4.  Test Methodology
  contents:
  - "4.  Test Methodology\n   The set of methodologies described in this document\
    \ will use the\n   topology described in this section.  An effort has been made\
    \ to\n   exclude superfluous equipment needs such that each test can be\n   carried\
    \ out with a minimal number of devices.  Figure 1 illustrates\n   the sample topology\
    \ in which the Device Under Test (DUT) is connected\n   to the test ports on the\
    \ test tool in accord with Figure 1 of RFC\n   2544.\n                       \
    \   +-----------------+\n          +---------+     |                 |     +---------+\n\
    \          | Test    |     |                 |     | Test    |\n          | Port\
    \ A1 +-----+ DA1         DB1 +-----+ Port B1 |\n          +---------+     |  \
    \               |     +---------+\n          +---------+     |       DUT     \
    \  |     +---------+\n          | Test    |     |                 |     | Test\
    \    |\n          | Port A2 +-----+ DA2         DB2 +-----+ Port B2 |\n      \
    \    +---------+     |                 |     +---------+\n               ... \
    \       | ...         ... |        ...\n          +---------+     |          \
    \       |     +---------+\n          | Test    |     |                 |     |\
    \ Test    |\n          | Port Ap +-----+ DAp         DBp +-----+ Port Bp |\n \
    \         +---------+     +-----------------+     +---------+\n          Figure\
    \ 1: Topology for MPLS Forwarding Benchmarking\n   A represents a Tx-side Module\
    \ of the test tool, whereas B represents\n   an Rx-side Module of the same test\
    \ tool.  Of course, the suffixed\n   numbers (1, 2, ..., p) represent ports on\
    \ a Module.\n   Similarly, DA represents an Rx-side Module of the DUT, whereas\
    \ DB\n   represents a Tx-side Module.  The suffixed numbers (1, 2, ..., p)\n \
    \  represent ports on a Module.\n   p = the number of {DA, DB} pair ports on the\
    \ DUT.  It is determined\n   by the maximum unidirectional forwarding throughput\
    \ of the DUT and\n   the load capacity of the port media (e.g., interface) connecting\
    \ the\n   DUT to the test tool.\n   For example, if the DUT's maximum forwarding\
    \ throughput is 100 frames\n   per second (fps) and the load capacity of the port\
    \ media (e.g.,\n   interface) is 50 fps, then p >= 2 is needed to sufficiently\
    \ test the\n   maximum frame forwarding.\n   The exact throughput is a measured\
    \ quantity obtained through testing.\n   Throughput may vary depending on the\
    \ number of ports used and other\n   factors.  The number of ports (p) used SHOULD\
    \ be reported.  Please\n   see \"Test Setup\" in Section 6.  Following Figure\
    \ 1 from Section 6 of\n   RFC 2544 is recommended.\n"
- title: 4.1.  Test Considerations
  contents:
  - "4.1.  Test Considerations\n   This methodology assumes a full-duplex, uniform\
    \ medium topology.  The\n   medium used MUST be reported in each test result.\
    \  Issues regarding\n   mixed transmission media, speed mismatches, media header\
    \ differences,\n   etc., are not under consideration.  Traffic affecting features\
    \ such\n   as Flow control, Quality of Service (QoS), Graceful Restart, etc.\n\
    \   MUST be disabled, unless explicitly requested in the test case.\n   Additionally,\
    \ any non-essential traffic MUST also be avoided.\n"
- title: 4.1.1.  Abbreviations Used
  contents:
  - "4.1.1.  Abbreviations Used\n   The terms used in this document remain consistent\
    \ with those defined\n   in \"Benchmarking Terminology for Network Interconnect\
    \ Devices\" RFC\n   1242 [RFC1242].  This terminology SHOULD be consulted before\
    \ using or\n   applying the recommendations of this document.\n   Please refer\
    \ to Figure 1 for a topology view of the network.  The\n   following abbreviations\
    \ are used in this document:\n   M  := Module on a device (i.e., Line-Card or\
    \ Slot; could be A or B)\n   p  := Port number (i.e., port on the Module; could\
    \ be 1, 2, etc.)\n   RN := Remote Network (i.e., network that is reachable via\
    \ a port of a\n   module; could be B1RN1 or B2RN5 to mean the first network reachable\n\
    \   via port 1 of module B, e.g., B1, or the fifth network reachable via\n   port\
    \ 2 of module B, etc.).  RN is considered to be the IP Prefix FEC\n   from the\
    \ MPLS perspective.\n"
- title: 4.1.2.  IGP Support
  contents:
  - "4.1.2.  IGP Support\n   It is RECOMMENDED that all of the ports (A1, DA1, DB1,\
    \ and A2) on the\n   DUT and test tool support a dynamic Interior Gateway Protocol\
    \ (IGP)\n   for routing such as IS-IS, OSPF, RIP, etc.  Furthermore, there are\n\
    \   testing considerations in this document that the device be able to\n   provide\
    \ a stable control plane during heavy forwarding workloads.  In\n   particular,\
    \ the procedures defined in Section 11.3 of RFC 2544 must\n   be followed.  This\
    \ is to ensure that control plane instability during\n   load conditions is not\
    \ the contributing factor towards frame\n   forwarding performance.\n   The route\
    \ distribution method (OSPF, IS-IS, Enhanced Interior Gateway\n   Routing Protocol\
    \ (EIGRP), RIP, Static, etc.), if used, MUST be\n   reported.  Furthermore, if\
    \ any specific configuration is used to\n   maintain control plane stability during\
    \ the test (i.e., Control Plane\n   Protection, Control Plane Rate Limiting, etc.),\
    \ then it MUST also be\n   reported.\n"
- title: 4.1.3.  Label Distribution Support
  contents:
  - "4.1.3.  Label Distribution Support\n   The DUT and test tool must support at\
    \ least one protocol for\n   exchanging MPLS label/FEC bindings for Prefix Forwarding\
    \ Equivalence\n   Class (FEC) [RFC3031].  The DUT and test tool MUST be capable\
    \ of\n   learning and advertising MPLS label/FEC bindings via the chosen\n   protocol(s)\
    \ and use them during packet forwarding all the time\n   (including when the label/FEC\
    \ bindings change).  The most commonly\n   used protocols are Label Distribution\
    \ Protocol (LDP) [RFC5036],\n   Resource Reservation Protocol-Traffic Engineering\
    \ (RSVP-TE)\n   [RFC3209], and Border Gateway Protocol (BGP) [RFC3107].\n   All\
    \ of the ports (A1, DA1, DB1, B1, etc.) either on the DUT or the\n   test tool\
    \ used in the testing SHOULD support LDP, RSVP-TE, and BGP\n   for IPv4 or IPv6\
    \ Prefix Forwarding Equivalence Classes (FECs).\n   Static labels SHOULD NOT be\
    \ used to establish the MPLS label switched\n   paths (LSPs), unless specified\
    \ explicitly by the test case.\n   This is because the use of a static label is\
    \ quite uncommon in the\n   production networks.\n   The IPv4 and IPv6 Explicit\
    \ NULL labels (label values 0 and 2) are\n   sometimes used to identify the payload\
    \ of an MPLS packet on an LSP\n   [RFC3032].  Explicit NULL labels are not used\
    \ in the tests described\n   in this document because the tests are limited to\
    \ the use of no more\n   than one non-reserved MPLS label in the label stack of\
    \ all packets\n   to, from, or through the DUT.\n"
- title: 4.1.4.  Frame Formats
  contents:
  - "4.1.4.  Frame Formats\n   This section explains the frame formats for IP and\
    \ MPLS packets\n   (Section 4.1.4.1), the usage of IP as the mandatory Layer 3\
    \ protocol\n   and as the MPLS packet payload (Section 4.1.4.2), change in frame\n\
    \   format during forwarding (Section 4.1.4.3), and recommended frame\n   formats\
    \ for the MPLS benchmarking (Section 4.1.4.4).\n"
- title: 4.1.4.1.  Frame Format for IP versus MPLS
  contents:
  - "4.1.4.1.  Frame Format for IP versus MPLS\n   A test frame carrying an IP packet\
    \ is illustrated in Figure 2 below.\n   Note that RFC 2544 [RFC2544] prescribes\
    \ using such a frame as the\n   test frame over the chosen Layer 2 media.\n  \
    \       +---------+--------------+-----------------------+\n         | Layer 2\
    \ | Layer 3 = IP | Layer 4 = UDP         |\n         +---------+--------------+-----------------------+\n\
    \                 Figure 2: Frame Format for IP Packets\n   Unlike a test frame\
    \ carrying an IP packet, a test frame carrying an\n   MPLS packet contains an\
    \ \"MPLS label stack\" [RFC3032] immediately\n   after the Layer 2 header (and\
    \ before the IP header, if any) as\n   illustrated in Figure 3 below.\n      \
    \   +---------+-------+--------------+-----------------------+\n         | Layer\
    \ 2 | MPLS  | Layer 3 = IP | Layer 4 = UDP         |\n         +---------+-------+--------------+-----------------------+\n\
    \                Figure 3: Frame Format for MPLS Packets\n   The MPLS label stack\
    \ is represented as a sequence of \"label stack\n   entries\", where each label\
    \ stack entry is 4 octets, as illustrated in\n   Figure 1 of [RFC3032].  This\
    \ document requires exactly one entry in\n   the MPLS label stack in an MPLS packet.\n\
    \   MPLS label values used in any test case MUST be outside the reserved\n   label\
    \ value (0-15) unless stated otherwise.\n"
- title: 4.1.4.2.  MPLS Packet Payload
  contents:
  - "4.1.4.2.  MPLS Packet Payload\n   This document prescribes using an IP packet\
    \ as the MPLS payload (as\n   illustrated in Figure 3 above).  Generically speaking,\
    \ this document\n   mandates the test frame to include IP (either IPv4 or IPv6)\
    \ as the\n   Layer 3 protocol, in accord with Section 8 of [RFC2544] and\n   independent\
    \ of the MPLS label stack presence, for three reasons:\n   1. This enables using\
    \ IP Prefix Forwarding Equivalence Class (FEC)\n      [RFC3031], which is a must\
    \ for every MPLS network.\n   2. This provides the foundation or baseline for\
    \ the benchmarking of\n      various other MPLS applications such as L3VPN, L2VPN,\
    \ TE-FRR, etc.\n   3. This enables leveraging RFC 2544 [RFC2544], which prescribes\
    \ using\n      IP packets with UDP data as the test frames.  (Note that [RFC5180]\n\
    \      also uses this prescription for IPv6 benchmarking).\n   While the usage\
    \ of non-IP payloads is possible, it requires an MPLS\n   application, e.g., L2VPN,\
    \ whose benchmarking may be covered in\n   separate BMWG documents (MPLS L2VPN\
    \ Benchmarking, for example) in the\n   future.  This is also explained in Section\
    \ 2.\n"
- title: 4.1.4.3.  Change in Frame Format Due to MPLS Push and Pop
  contents:
  - "4.1.4.3.  Change in Frame Format Due to MPLS Push and Pop\n   A frame carrying\
    \ an IP or MPLS packet may go through any of the three\n   MPLS forwarding operations:\
    \ label push (or LSP Ingress), label swap,\n   and label pop (or LSP Egress),\
    \ as defined in [RFC3031].  It is\n   important to understand the change of the\
    \ frame format from IP to\n   MPLS or vice versa depending on the forwarding operation.\n\
    \   In a label push (or LSP Ingress) operation, the DUT receives a frame\n   containing\
    \ an IP packet and forwards a frame containing an MPLS\n   packet if the corresponding\
    \ forwarding lookup for the IP destination\n   points to a label push operation.\n\
    \   In a label swap operation, the DUT receives a frame containing an\n   MPLS\
    \ packet and forwards a frame containing an MPLS packet if the\n   corresponding\
    \ forwarding lookup for the label value points to a label\n   swap operation.\n\
    \   In a label pop (or LSP Egress) operation, the DUT receives a frame\n   containing\
    \ an MPLS packet and forwards a frame containing an IP\n   packet if the corresponding\
    \ forwarding lookup for the label value\n   points to a label pop operation.\n"
- title: 4.1.4.4.  Frame Formats to Be Used for Benchmarking
  contents:
  - "4.1.4.4.  Frame Formats to Be Used for Benchmarking\n   This document prescribes\
    \ using two test frame formats to\n   appropriately test the forwarding operations:\
    \ (1) Frame format for IP\n   and (2) Frame format for MPLS.  Both formats are\
    \ explained in Section\n   4.1.4.1.  Additionally, the format of the test frame\
    \ may change\n   depending on the forwarding operation.\n   1. For test cases\
    \ involving the label push operation, the test tool\n      must use the frame\
    \ format for IP packets (Figure 2) to send the\n      test frames to the DUT,\
    \ and must use the frame format for MPLS\n      packets (Figure 3) to receive\
    \ the test frames from the DUT.\n   2. For test cases involving the label swap\
    \ operation, the test tool\n      must use the frame format for MPLS packets (Figure\
    \ 3) to send the\n      test frames to the DUT, and must use the frame format\
    \ for MPLS\n      packets (Figure 3) to receive the test frames from the DUT.\n\
    \   3. For test cases involving the label pop operation, the test tool\n     \
    \ must use the frame format for MPLS packets (Figure 3) to send the\n      test\
    \ frames to the DUT, and must use the frame format for IP\n      packets (Figure\
    \ 2) to receive the test frames from the DUT.\n"
- title: 4.1.5.  Frame Sizes
  contents:
  - "4.1.5.  Frame Sizes\n   Two types of port media are commonly deployed: Ethernet\
    \ and POS\n   (Packet Over Synchronous Optical Network).  This section identifies\n\
    \   the frame sizes that SHOULD be used for each media type, if supported\n  \
    \ by the DUT; Section 4.1.5.1 covers Ethernet and Section 4.1.5.2\n   covers POS.\n\
    \   First, it is important to note the possible increase in frame size\n   due\
    \ to the presence of an MPLS label stack in the frame (as explained\n   in Section\
    \ 4.1.4.3).\n   As observed in the current deployments, presence of an MPLS label\n\
    \   stack in a Layer 2 frame is assumed to be transparent to Layer3=IP,\n   which\
    \ continues to follow the conventional maximum frame payload size\n   [RFC3032]\
    \ (1500 octets for Ethernet, say).  This means that the\n   effective maximum\
    \ frame payload size [RFC3032] of the resulting Layer\n   2 frame is Z octets\
    \ more than the conventional maximum frame payload\n   size, where Z = 4 x number\
    \ of entries in the label stack.\n   Hence, to ensure successful delivery of Layer\
    \ 2 frames carrying MPLS\n   packets and realistic benchmarking, it is RECOMMENDED\
    \ to set the\n   media MTU value to the effective maximum frame payload size\n\
    \   [RFC3032], which equals Z octets + conventional maximum frame payload\n  \
    \ size.  It is expected that such a change in the media MTU value only\n   impacts\
    \ the effective Maximum Frame Payload Size for MPLS packets,\n   but not for IP\
    \ packets.\n   Note that this document requires exactly a single entry in the\
    \ MPLS\n   label stack in an MPLS packet.  In other words, the depth of the\n\
    \   label stack is set to one, e.g., Z = 4 x 1 = 4 octets.  Furthermore,\n   in\
    \ accord with Sections 9 and 9.1 of RFC 2544, this document\n   prescribes that\
    \ each test case is run with different (Layer 2) frame\n   sizes in different\
    \ trials.  Additionally, results MAY also be\n   collected with multiple simultaneous\
    \ frame sizes (sometimes referred\n   to as an Interactive Multimodal Information\
    \ Extraction (IMIX) to\n   simulate real network traffic according to the frame\
    \ size ordering\n   and usage).  There is no standard for mixtures of frame sizes,\
    \ and\n   the results are subject to wide interpretation (see Section 18 of RFC\n\
    \   2544).  When running trials using multiple simultaneous frame sizes,\n   the\
    \ DUT configuration MUST remain the same.\n"
- title: 4.1.5.1.  Frame Sizes To Be Used on Ethernet Media
  contents:
  - "4.1.5.1.  Frame Sizes To Be Used on Ethernet Media\n   Ethernet media, in all\
    \ its types, has become the most commonly\n   deployed port media in MPLS networks.\
    \  If any test case execution\n   (such as the Label Push case) requires the test\
    \ tool to send (or\n   receive) a Layer 2 frame containing an IP packet, then\
    \ the following\n   frame sizes SHOULD be used for benchmarking over Ethernet\
    \ media: 64,\n   128, 256, 512, 1024, 1280, and 1518 octets.  This is in-line\
    \ with\n   Sections 9 and 9.1 of RFC 2544.  Figure 4 illustrates the header\n\
    \   sizes for an untagged Ethernet frame containing an IP payload (per\n   RFC\
    \ 2544).\n            <----------------64-1518B------------------------>\n   \
    \         <--18B---><-----------46-1500B------------------->\n            +---------+---------+----------------------------+\n\
    \            | Layer 2 | Layer 3 | Layer 4 (and higher)       |\n            +---------+---------+----------------------------+\n\
    \               Figure 4: Frame Size for Label Push Cases\n      Note 1: The 64-\
    \ and 1518-octet frame size represents the minimum\n      and maximum length of\
    \ an untagged Ethernet frame, as per IEEE\n      802.3 [IEE8023].  A frame size\
    \ commonly used in operational\n      environments may range from 68 to 1522 octets,\
    \ which are the\n      minimum and maximum lengths of a single VLAN-tagged frame,\
    \ as per\n      IEEE 802.1D [IEE8021].\n      Note 2: While jumbo frames are outside\
    \ the scope of the 802.3 IEEE\n      standard, tests SHOULD be executed with the\
    \ frame sizes that are\n      supported by the DUT.  Examples of commonly used\
    \ jumbo (Ethernet)\n      frame sizes are: 4096, 8192, and 9216 octets.\n   If\
    \ any test case execution (such as Label Swap and Label Pop cases)\n   requires\
    \ the test tool to transmit (or receive) a Layer 2 frame\n   containing an MPLS\
    \ packet, then the untagged Layer 2 frame must\n   include an additional 4 octets\
    \ for the MPLS header, resulting in the\n   following frame sizes to be used for\
    \ benchmarking over Ethernet\n   media: 68, 132, 260, 516, 1028, 1284, and 1522\
    \ octets.  Figure 5\n   illustrates the header sizes for an untagged Ethernet\
    \ frame\n   containing an MPLS packet.\n            <------------------68-1522B------------------------------>\n\
    \            <--18B---><--4B--><-----------46-1500B------------------->\n    \
    \        +---------+-------+---------+----------------------------+\n        \
    \    | Layer 2 | MPLS  | Layer 3 | Layer 4 (and higher)       |\n            +---------+-------+---------+----------------------------+\n\
    \                 Figure 5: Frame Size for Label Swap and Pop Cases\n      Note:\
    \ The Media MTU on the link between the test tool and the DUT\n      must be changed,\
    \ if needed, to accommodate the effective maximum\n      frame payload size [RFC3032]\
    \ resulting from adding an MPLS label\n      stack to the IP packet.  As clarified\
    \ in Section 3.1 of RFC 3032,\n      most Layer 2 media drivers are capable of\
    \ sending and receiving\n      Layer 2 frames with effective maximum frame payload\
    \ size.  Many\n      vendors also allow the Media MTU to be changed for MPLS,\
    \ without\n      changing it for IP.  The recommended link MTU value for MPLS\
    \ is Z\n      octets more than the conventional maximum frame payload size\n \
    \     [RFC3032] (for example, the conventional maximum frame payload\n      size\
    \ for Ethernet is 1500 octets).  This document prescribes Z=4\n      octets. \
    \ If a vendor DUT doesn't allow such an MTU change, then\n      the benchmarking\
    \ cannot be performed for the true maximum frame\n      payload size [RFC3032]\
    \ and this must be reported.\n"
- title: 4.1.5.2.  Frame Sizes to Be Used on POS Media
  contents:
  - "4.1.5.2.  Frame Sizes to Be Used on POS Media\n   Packet over SONET (POS) media\
    \ are commonly used for edge uplinks and\n   high-bandwidth core links.  POS may\
    \ use one of various encapsulations\n   techniques (such as PPP, High-Level Data\
    \ Link Control (HDLC), Frame\n   Relay, etc.), resulting in the Layer 2 header\
    \ (~4 octets) being less\n   than that of the Ethernet media.  The rest of the\
    \ frame format\n   (illustrated in Figures 2 and 3) remains pretty much unchanged.\n\
    \   If the MPLS forwarding characterization of POS interfaces on the DUT\n   is\
    \ desired, then the following frame sizes SHOULD be used:\n      Label Push test\
    \ cases:          47, 64, 128, 256, 512, 1024,\n                             \
    \         1280, 1518, 2048, and 4096 octets.\n      Label Swap and Pop test cases:\
    \  51, 68, 132, 260, 516, 1028,\n                                      1284, 1522,\
    \ 2052, and 4100 octets.\n"
- title: 4.1.6.  Time-to-Live (TTL) or Hop Limit
  contents:
  - "4.1.6.  Time-to-Live (TTL) or Hop Limit\n   The TTL value in the frame header\
    \ MUST be large enough to allow a TTL\n   decrement to happen and still be forwarded\
    \ through the DUT.  The\n   aforementioned TTL field may be referring to either\
    \ the MPLS TTL,\n   IPv4 TTL, or IPv6 Hop Limit depending on the exact forwarding\n\
    \   scenario under evaluation.\n   If TTL/Hop Limit decrement, as specified in\
    \ [RFC3443], is a\n   configurable option on the DUT, the setting SHOULD be reported.\n"
- title: 4.1.7.  Trial Duration
  contents:
  - "4.1.7.  Trial Duration\n   Unless otherwise specified, the test portion of each\
    \ trial SHOULD be\n   no less than 30 seconds when static routing is in place,\
    \ and no less\n   than 200 seconds when a dynamic routing protocol and LDP (default\
    \ LDP\n   holddown timer is 180 seconds) are being used.  If the holddown timer\n\
    \   default value is changed, then it should be reported and the trial\n   duration\
    \ should still be 20 seconds more than the holddown timer\n   value.\n   The longer\
    \ trial time used for dynamic routing protocols is to verify\n   that the DUT\
    \ is able to maintain a stable control plane when the\n   data-forwarding plane\
    \ is under stress.\n"
- title: 4.1.8.  Traffic Verification
  contents:
  - "4.1.8.  Traffic Verification\n   In all cases, sent traffic MUST be accounted\
    \ for, whether it was\n   received on the wrong port, the correct port, or not\
    \ received at all.\n   Specifically, traffic loss (also referred to as frame loss)\
    \ is\n   defined as the traffic (i.e., one or more frames) not received where\n\
    \   expected (i.e., received on the incorrect port, or received with\n   incorrect\
    \ Layer 2 or above header information, etc.).  In addition,\n   the presence or\
    \ absence of the MPLS label stack, every field value\n   inside the label stack,\
    \ if present, ethertype (0x8847 or 0x8848\n   versus 0x0800 or 0x86DD), frame\
    \ sequencing, and frame check sequence\n   (FCS) MUST be verified in the received\
    \ frame.\n   Many test tools may, by default, only verify that they have received\n\
    \   the embedded signature on the receive side.  However, for MPLS header\n  \
    \ presence verification, some tests will require the MPLS header to be\n   pushed\
    \ while others will require a swap or pop.  Hence, this document\n   requires\
    \ the test tool to verify the MPLS stack depth.  An even\n   greater level of\
    \ verification would be to check if the correct label\n   was pushed.  However,\
    \ some test tools are not capable of checking the\n   received label value for\
    \ correctness.  Test tools SHOULD verify that\n   the packets received carry the\
    \ expected MPLS label.\n"
- title: 4.1.9.  Address Resolution and Dynamic Protocol State
  contents:
  - "4.1.9.  Address Resolution and Dynamic Protocol State\n   If a test setup utilizes\
    \ any dynamic protocols for control plane\n   signaling (e.g., ARP, PPP (including\
    \ MPLSCP), OSPF, LDP, etc.), then\n   all state for the protocols MUST be pre-established\
    \ before the test\n   case is executed (i.e., packet streams are started).\n"
- title: 5.  Reporting Format
  contents:
  - "5.  Reporting Format\n   For each test case, it is RECOMMENDED that the following\
    \ variables be\n   reported in addition to the specific parameters requested by\
    \ the test\n   case:\n      Parameter                        Units or Examples\n\
    \      Prefix Forwarding Equivalence    IPv4, IPv6, Both\n      Class (FEC)\n\
    \      Label Distribution Protocol      LDP, RSVP-TE, BGP (or\n              \
    \                         combinations)\n      MPLS Forwarding Operation     \
    \   Push, Swap, Pop\n      IGP                              ISIS, OSPF, EIGRP,\
    \ RIP,\n                                       static.\n      Throughput     \
    \                  Frames per second and\n                                   \
    \    bits per second\n      Port Media                       GigE (Gigabit Ethernet),\n\
    \                                       POS, ATM, etc.\n      Port Speed     \
    \                  1 gbps, 100 Mbps, etc.\n      Interface Encapsulation     \
    \     Ethernet, Ethernet\n                                       VLAN, PPP, HDLC,\
    \ etc.\n      Frame Size (Section 4.1.5)       Octets\n      p (Number of {DA,\
    \ DB} pair       1,2, etc.\n      ports per Figure 1)\n   The individual test\
    \ cases may have additional reporting requirements\n   that may refer to other\
    \ RFCs.\n"
- title: 6.  MPLS Forwarding Benchmarking Tests
  contents:
  - "6.  MPLS Forwarding Benchmarking Tests\n   MPLS is a different forwarding paradigm\
    \ from IP.  Unlike IP packets\n   and IP forwarding, an MPLS packet may contain\
    \ more than one MPLS\n   header and may go through one of three forwarding operations:\
    \ push\n   (or LSP Ingress), swap, or pop (or LSP Egress), as defined in\n   [RFC3031].\
    \  Such characteristics desire further granularity in MPLS\n   forwarding benchmarking\
    \ than those described in RFC 2544.  Thus, the\n   benchmarking may include, but\
    \ is not limited to:\n      1. Throughput\n      2. Latency\n      3. Frame-Loss\
    \ Rate\n      4. System Recovery\n      5. Reset\n      6. MPLS TC (previously\
    \ known as EXP [RFC5462]) field Operations\n         (including explicit-null\
    \ cases)\n      7. Negative Scenarios (TTL expiry, etc.)\n      8. Multicast\n\
    \   However, this document focuses only on the first five categories,\n   inline\
    \ with the spirit of RFC 2544.  All the benchmarking test cases\n   described\
    \ in this document are expected to, at a minimum, follow the\n   \"Test Setup\"\
    \ and \"Test Procedure\" below:\n   Test Setup\n      Referring to Figure 1, a\
    \ single port (p = 1) on both A and B\n      Modules SHOULD be used.  However,\
    \ if the forwarding throughput of\n      the DUT is more than that of the media\
    \ rate of a single port, then\n      additional ports on A and B Modules MUST\
    \ be enabled as follows: if\n      the DUT can be configured with the A and B\
    \ ports so as to exceed\n      the DUT's forwarding throughput without overloading\
    \ any B ports,\n      then those MUST be enabled; if, on the other hand, the DUT's\n\
    \      forwarding throughput capacity is greater than what can be\n      achieved\
    \ enabling all ports, then all An and Bn ports MUST be\n      enabled.  In the\
    \ case where more than one A and B port is enabled,\n      the procedures described\
    \ in Section 16 of RFC 2544 must be\n      followed to accommodate the multi-port\
    \ scenario.  The frame\n      formats transmitted and received must be in accord\
    \ with Sections\n      4.1.4.3 and 4.1.4.4, and frame sizes must be in accord\
    \ with\n      Section 4.1.5.\n      Note: The test tool must be configured not\
    \ to advertise a prefix\n      or FEC to the DUT on more than one port.  In other\
    \ words, the DUT\n      must associate a FEC with one and only one DB port.  The\
    \ Equal\n      Cost Multi-Path (ECMP) behavior in MPLS networks uses heuristics\n\
    \      [RFC4928]; hence, the usage of ECMP is NOT permitted by this\n      document\
    \ to ensure the deterministic forwarding behavior during\n      benchmarking.\n\
    \   Test Procedure\n      In accord with Section 26 of RFC 2544 [RFC2544], the\
    \ traffic is\n      sent from test tool port(s) Ap to the DUT at a constant load\
    \ for a\n      fixed-time interval, and is received from the DUT on test tool\n\
    \      port(s) Bp.  As described in Section 4.1.4.3, the frame may\n      contain\
    \ either an IP packet or an MPLS packet depending on the\n      test case need.\
    \  Furthermore, the IP packet must be either an IPv4\n      or IPv6 packet, depending\
    \ on whether the MPLS benchmarking is done\n      for IPv4 or IPv6.\n      If\
    \ any frame loss is detected, then a new iteration is needed\n      where the\
    \ offered load is decreased and the sender will transmit\n      again.  An iterative\
    \ search algorithm MUST be used to determine\n      the maximum offered frame\
    \ rate with a zero frame loss.\n      This maximum offered frame rate that results\
    \ in zero frame loss\n      through the DUT is defined as the Throughput in Section\
    \ 3.17 of\n      [RFC1242] for that test case.  Informally, this rate is referred\n\
    \      to as the No-Drop Rate (NDR).\n      Each iteration should involve varying\
    \ the offered load of the\n      traffic, while keeping the other parameters (test\
    \ duration, number\n      of ports, number of addresses, frame size, etc.) constant,\
    \ until\n      the maximum rate at which none of the offered frames are dropped\n\
    \      is determined.\n"
- title: 6.1.  Throughput
  contents:
  - "6.1.  Throughput\n   This section contains the description of the tests that\
    \ are related\n   to the characterization of a DUT's MPLS traffic forwarding.\n"
- title: 6.1.1.  Throughput for MPLS Label Push
  contents:
  - "6.1.1.  Throughput for MPLS Label Push\n   Objective\n      To obtain the DUT's\
    \ Throughput (as per RFC 2544) during label push\n      or LSP Ingress forwarding\
    \ operation (i.e., IP to MPLS).\n   Test Setup\n      In addition to the \"Test\
    \ Setup\" described in Section 6, the test\n      tool must advertise the IP prefix(es),\
    \ i.e., RNx (using a routing\n      protocol as per Section 4.1.2) and associated\
    \ MPLS label-FEC\n      binding(s) (using a label distribution protocol as per\
    \ Section\n      4.1.3) on its receive ports Bp to the DUT.  The test tool may\n\
    \      learn the IP prefix(es) on its transmit ports Ap from the DUT.\n      MPLS\
    \ and/or the label distribution protocol must be enabled only\n      on the test\
    \ tool receive ports Bp and DUT transmit ports DBp.\n   Discussion\n      The\
    \ DUT's MPLS forwarding table (also referred to as Incoming\n      Label Map (ILM)\
    \ to Next Hop Label Forwarding Entry (NHLFE) mapping\n      table per Section\
    \ 3.11 of [RFC3031]) must contain a non-reserved\n      MPLS label value as the\
    \ outgoing label for each learned IP prefix\n      corresponding to the label-FEC\
    \ binding, resulting in the DUT\n      performing the IP-to-MPLS forwarding operation.\
    \  The test tool\n      must receive MPLS packets on receive ports Bp (from the\
    \ DUT) with\n      the same label values that were advertised.\n   Procedure\n\
    \      Please see \"Test Procedure\" in Section 6.  Additionally, the test\n \
    \     tool MUST send the frames containing IP packets (with the IP\n      destination\
    \ belonging to the advertised IP prefix(es)) on transmit\n      ports Ap, and\
    \ expect to receive frames containing MPLS packets on\n      receive ports Bp,\
    \ as described in Section 4.1.4.4.\n   Reporting Format\n      The result should\
    \ be reported as per Section 5 and RFC 2544.\n      Results for each test SHOULD\
    \ be in the form of a table with a row\n      for each of the tested frame sizes.\
    \  Additional columns SHOULD\n      include offered load and measured throughput.\n"
- title: 6.1.2.  Throughput for MPLS Label Swap
  contents:
  - "6.1.2.  Throughput for MPLS Label Swap\n   Objective\n      To obtain the DUT's\
    \ Throughput (as per RFC 2544) during label\n      swapping operation (i.e., MPLS-to-MPLS).\n\
    \   Test Setup\n      In addition to the setup described in Section 6, the test\
    \ tool\n      must advertise IP prefix(es) (using a routing protocol as per\n\
    \      Section 4.1.2) and associated MPLS label-FEC bindings (using a\n      label\
    \ distribution protocol as per Section 4.1.3) on the receive\n      ports Bp,\
    \ and then learn the IP prefix(es) as well as the label-\n      FEC binding(s)\
    \ on the transmit ports Ap.  The test tool must use\n      the learned MPLS label\
    \ values and learned IP prefix values in the\n      frames transmitted on ports\
    \ Ap to the DUT.\n      MPLS and/or label distribution protocol must be enabled\
    \ on the\n      test tool ports Bp and Ap, and the DUT ports DBp and DAp.\n  \
    \ Discussion\n      The DUT's MPLS forwarding table (also referred to as ILM to\
    \ NHLFE\n      mapping table per Section 3.11 of [RFC3031]) must contain non-\n\
    \      reserved MPLS label values as the outgoing and incoming labels for\n  \
    \    the learned IP prefixes, resulting in an MPLS-to-MPLS forwarding\n      operation,\
    \ e.g., label swap.  The test tool must receive MPLS\n      packets on receive\
    \ ports Bp (from the DUT) with the same label\n      values that were advertised\
    \ using the label distribution protocol.\n      The received frames must contain\
    \ the same number of MPLS headers\n      as those of transmitted frames.\n   Procedure\n\
    \      Please see \"Test Procedure\" in Section 6.  Additionally, the test\n \
    \     tool must send frames containing MPLS packets (with the IP\n      destination\
    \ belonging to the advertised IP prefix(es)) on its\n      transmit ports Ap,\
    \ and expect to receive frames containing MPLS\n      packets on its receive ports\
    \ Bp, as described in Section 4.1.4.4.\n   Reporting Format\n      The result\
    \ should be reported as per Section 5 and RFC 2544.\n      Results for each test\
    \ SHOULD be in the form of a table with a row\n      for each of the tested frame\
    \ sizes.\n"
- title: 6.1.3.  Throughput for MPLS Label Pop (Unlabeled)
  contents:
  - "6.1.3.  Throughput for MPLS Label Pop (Unlabeled)\n   Objective\n      To obtain\
    \ the DUT's Throughput (as per RFC 2544) during label pop\n      or LSP Egress\
    \ forwarding operation (i.e., MPLS-to-IP) using\n      \"Unlabeled\" outgoing\
    \ label.\n   Test Setup\n      In addition to the setup described in Section 6,\
    \ the test tool\n      must advertise the IP prefix(es) (using a routing protocol\
    \ as per\n      Section 4.1.2) without any MPLS label-FEC bindings on the receive\n\
    \      ports Bp, and then learn the IP prefix(es) as well as the FEC-\n      label\
    \ binding(s) on the transmit ports Ap.  The test tool must use\n      the learned\
    \ MPLS label values and learned IP prefix values in the\n      frames transmitted\
    \ on ports Ap.\n      MPLS and/or label distribution protocol must be enabled\
    \ only on\n      the test tool port(s) Ap and DUT port(s) DAp.\n   Discussion\n\
    \      The DUT's MPLS forwarding table (also referred to as ILM to NHLFE\n   \
    \   mapping table per Section 3.11 of [RFC3031]) must contain an\n      Unlabeled\
    \ outgoing label (also known as untagged) for the learned\n      IP prefix, resulting\
    \ in an MPLS-to-IP forwarding operation.\n   Procedure\n      Please see \"Test\
    \ Procedure\" in Section 6.  Additionally, the test\n      tool must send frames\
    \ containing MPLS packets on its transmit\n      ports Ap (with the IP destination\
    \ belonging to the IP prefix(es)\n      advertised on port Bp), and expect to\
    \ receive frames containing IP\n      packets on its receive ports Bp, as described\
    \ in Section 4.1.4.4.\n   Reporting Format\n      The result should be reported\
    \ as per Section 5 and RFC 2544.\n      Results for each test SHOULD be in the\
    \ form of a table with a row\n      for each of the tested frame sizes.\n"
- title: 6.1.4.  Throughput for MPLS Label Pop (Aggregate)
  contents:
  - "6.1.4.  Throughput for MPLS Label Pop (Aggregate)\n   Objective\n      To obtain\
    \ the DUT's Throughput (as per RFC 2544) during label pop\n      or LSP Egress\
    \ forwarding operation (i.e., MPLS-to-IP) using the\n      \"Aggregate\" outgoing\
    \ label [RFC3031].\n   Test Setup\n      In addition to the setup described in\
    \ Section 6, the DUT must be\n      provisioned such that it allocates an aggregate\
    \ outgoing label\n      (please see Section 3.20 in [RFC3031]) to an IP prefix,\
    \ which\n      aggregates a set of prefixes learned on ports DBp from the test\n\
    \      tool.  The prefix aggregation can be performed using BGP\n      aggregation\
    \ (Section 9.2.2.2 of [RFC4271]), IGP aggregation\n      (Section 16.5 of [RFC2328]),\
    \ etc.\n      The DUT must advertise the aggregating IP prefix along with the\n\
    \      associated MPLS label-FEC binding on ports DAp to the test tool.\n    \
    \  The test tool then must use the learned MPLS label values and\n      learned\
    \ IP prefix values in frames transmitted on ports Ap to the\n      DUT.  The test\
    \ tool must receive frames containing IP packets on\n      ports Bp from the DUT.\n\
    \      MPLS and/or label distribution protocol must be enabled only on\n     \
    \ the test tool port(s) Ap and DUT port(s) DAp.\n   Discussion\n      The DUT's\
    \ MPLS forwarding table (also referred to as ILM to NHLFE\n      mapping table\
    \ per Section 3.11 of [RFC3031]) must contain an\n      aggregate outgoing label\
    \ and IP forwarding table must contain a\n      valid entry for the learned prefix(es),\
    \ resulting in MPLS-to-IP\n      forwarding operation (i.e., MPLS header removal\
    \ followed by IP\n      lookup).\n   Procedure\n      Please see \"Test Procedure\"\
    \ in Section 6.  Additionally, the test\n      tool must send frames containing\
    \ MPLS packets on its transmit\n      ports Ap (with IP destination belonging\
    \ to the IP prefix(es)\n      advertised on port Bp), and expect to receive frames\
    \ containing IP\n      packets on its receive ports Bp, as described in Section\
    \ 4.1.4.4.\n   Reporting Format\n      The result should be reported as per Section\
    \ 5 and RFC 2544.\n      Results for each test SHOULD be in the form of a table\
    \ with a row\n      for each of the tested frame sizes.\n"
- title: 6.1.5.  Throughput for MPLS Label Pop (PHP)
  contents:
  - "6.1.5.  Throughput for MPLS Label Pop (PHP)\n   Objective\n      To obtain the\
    \ DUT's Throughput (as per RFC 2544) during label pop\n      (i.e., MPLS-to-IP)\
    \ or penultimate hop popping (PHP) using the\n      \"imp-null\" outgoing label.\n\
    \   Test Setup\n      In addition to the setup described in Section 6, the test\
    \ tool\n      must be set up to advertise the IP prefix(es) (using a routing\n\
    \      protocol as per Section 4.1.2) and associated MPLS label-FEC\n      binding\
    \ with a reserved MPLS label value = 3 (using a label\n      distribution protocol\
    \ as per Section 4.1.3) on its receive ports\n      Bp.  The test tool must learn\
    \ the IP prefix(es) as well as the\n      MPLS label-FEC bindings on its transmit\
    \ ports Ap.  The test tool\n      then must use the learned MPLS label values\
    \ and learned IP prefix\n      values in the frames transmitted on ports Ap to\
    \ the DUT.  The test\n      tool must receive frames containing IP packets on\
    \ receive ports Bp\n      (from the DUT).\n      MPLS and/or label distribution\
    \ protocol must be enabled on the\n      test tool ports Bp and Ap, and DUT ports\
    \ DBp and DAp.\n   Discussion\n      This test case characterizes Penultimate\
    \ Hop Popping (PHP), which\n      is described in RFC 3031.\n      The DUT's MPLS\
    \ forwarding table (also referred to as ILM to NHLFE\n      mapping table per\
    \ Section 3.11 of [RFC3031]) must contain a\n      reserved MPLS label value =\
    \ 3 (e.g., pop or imp-null) as the\n      outgoing label for the learned prefix(es),\
    \ resulting in MPLS-to-IP\n      forwarding operation.\n      This test case characterizes\
    \ DUT's penultimate hop popping (PHP)\n      functionality.\n   Procedure\n  \
    \    Please see \"Test Procedure\" in Section 6.  Additionally, the test\n   \
    \   tool must send frames containing MPLS packets on its transmit\n      ports\
    \ Ap (with IP destination belonging to advertised IP\n      prefix(es)), and expect\
    \ to receive frames containing IP packets on\n      its receive ports Bp, as described\
    \ in Section 4.1.4.4.\n   Reporting Format\n      The result should be reported\
    \ as per Section 5 and RFC 2544.\n      Results for each test SHOULD be in the\
    \ form of a table with a row\n      for each of the tested frame sizes.\n"
- title: 6.2.  Latency Measurement
  contents:
  - "6.2.  Latency Measurement\n   Latency measurement measures the time taken by\
    \ the DUT to forward the\n   MPLS packet during various MPLS switching paths such\
    \ as IP-to-MPLS,\n   MPLS-to-MPLS, or MPLS-to-IP involving an MPLS label stack.\n\
    \   Objective\n      To obtain the average latency induced by the DUT during MPLS\n\
    \      packet forwarding for each of five forwarding operations.\n   Test Setup\n\
    \      Follow the \"Test Setup\" guidelines established for each of the\n    \
    \  five MPLS forwarding operations in Sections 6.1.1 (for IP-to-\n      MPLS),\
    \ 6.1.2 (for MPLS-to-MPLS), 6.1.3 (for MPLS-to-IP Unlabeled),\n      6.1.4 (for\
    \ MPLS-to-IP Aggregate), and 6.1.5 (for MPLS-to-IP PHP),\n      one by one.\n\
    \   Procedure\n      Please refer to Section 26.2 in RFC 2544 in addition to following\n\
    \      the associated procedure for each MPLS forwarding operation in\n      accord\
    \ with the test setup described earlier:\n         IP-to-MPLS forwarding     \
    \ (Push)         Section 6.1.1\n         MPLS-to-MPLS forwarding    (Swap)   \
    \      Section 6.1.2\n         MPLS-to-IP forwarding      (Pop)          Section\
    \ 6.1.3\n         MPLS-to-IP forwarding      (Aggregate)    Section 6.1.4\n  \
    \       MPLS-to-IP forwarding      (PHP)          Section 6.1.5\n   Reporting\
    \ Format\n      The result should be reported as per Section 5 and RFC 2544.\n"
- title: 6.3.  Frame-Loss Rate (FLR) Measurement
  contents:
  - "6.3.  Frame-Loss Rate (FLR) Measurement\n   Frame-Loss Rate (FLR) measurement\
    \ measures the percentage of MPLS\n   frames that were not forwarded during various\
    \ switching paths such as\n   IP-to-MPLS (push), MPLS-to-IP (swap), or MPLS-IP\
    \ (pop) by the DUT\n   under overloaded state.\n   Please refer to RFC 2544, Section\
    \ 26.3, for more details.\n   Objective\n      To obtain the frame-loss rate,\
    \ as defined in RFC 1242, for each of\n      the three MPLS forwarding operations\
    \ of a DUT, throughout the\n      range of input data rates and frame sizes.\n\
    \   Test Setup\n      Follow the \"Test Setup\" guidelines established for each\
    \ of the\n      five MPLS forwarding operations in Sections 6.1.1 (for IP-to-\n\
    \      MPLS), 6.1.2 (for MPLS-to-MPLS), 6.1.3 (for MPLS-to-IP Unlabeled),\n  \
    \    6.1.4 (for MPLS-to-IP Aggregate), and 6.1.5 (for MPLS-to-IP PHP),\n     \
    \ one by one.\n   Procedure\n      Please refer to Section 26.3 of RFC 2544 [RFC2544]\
    \ and follow the\n      associated procedure for each MPLS forwarding operation\
    \ one-by-one\n      in accord with the test setup described earlier:\n       \
    \  IP-to-MPLS forwarding      (Push)         Section 6.1.1\n         MPLS-to-MPLS\
    \ forwarding    (Swap)         Section 6.1.2\n         MPLS-to-IP forwarding \
    \     (Pop)          Section 6.1.3\n         MPLS-to-IP forwarding      (Aggregate)\
    \    Section 6.1.4\n         MPLS-to-IP forwarding      (PHP)          Section\
    \ 6.1.5\n      A misdirected frame, that is, a frame received on the wrong Bn,\
    \ is\n      considered lost.  If the test tool is capable of checking received\n\
    \      MPLS label values, a frame with the wrong MPLS label is considered\n  \
    \    lost.\n   Reporting Format\n      The result should be reported as per Section\
    \ 5 and RFC 2544.\n"
- title: 6.4.  System Recovery
  contents:
  - "6.4.  System Recovery\n   Objective\n      To characterize the speed at which\
    \ a DUT recovers from an overload\n      condition.\n   Test Setup\n      Follow\
    \ the \"Test Setup\" guidelines established for each of the\n      five MPLS forwarding\
    \ operations in Sections 6.1.1 (for IP-to-\n      MPLS), 6.1.2 (for MPLS-to-MPLS),\
    \ 6.1.3 (for MPLS-to-IP Unlabeled),\n      6.1.4 (for MPLS-to-IP Aggregate), and\
    \ 6.1.5 (for MPLS-to-IP PHP),\n      one by one.\n   Procedure\n      Please refer\
    \ to Section 26.5 of RFC 2544 and follow the associated\n      procedure for each\
    \ MPLS forwarding operation in the referenced\n      sections one-by-one in accord\
    \ with the test setup described\n      earlier:\n         IP-to-MPLS forwarding\
    \      (Push)         Section 6.1.1\n         MPLS-to-MPLS forwarding    (Swap)\
    \         Section 6.1.2\n         MPLS-to-IP forwarding      (Pop)          Section\
    \ 6.1.3\n         MPLS-to-IP forwarding      (Aggregate)    Section 6.1.4\n  \
    \       MPLS-to-IP forwarding      (PHP)          Section 6.1.5\n   Reporting\
    \ Format\n      The result should be reported as per Section 5 and RFC 2544.\n"
- title: 6.5.  Reset
  contents:
  - "6.5.  Reset\n   The \"reset\" aspects of benchmarking are described in [RFC2544],\
    \ but\n   these procedures need to be clarified in order to ensure consistency.\n\
    \   This document does not specify the reset procedures.  These need to\n   be\
    \ addressed in a separate document and will more generally apply to\n   IP and\
    \ MPLS test cases.\n   The text below describes the MPLS forwarding benchmarking-specific\n\
    \   setup that will have to be used in conjunction with the procedures\n   from\
    \ the separate document to make this test case meaningful.\n   Objective\n   \
    \   To characterize the speed at which a DUT recovers from a device or\n     \
    \ software reset.\n   Test Setup\n      Follow the \"Test Setup\" guidelines established\
    \ for each of the\n      five MPLS forwarding operations in Sections 6.1.1 (for\
    \ IP-to-\n      MPLS), 6.1.2 (for MPLS-to-MPLS), 6.1.3 (for MPLS-to-IP Unlabeled),\n\
    \      6.1.4 (for MPLS-to-IP Aggregate), and 6.1.5 (for MPLS-to-IP PHP),\n   \
    \   one by one.\n      For this test case, the requirements of LDP and a routing\
    \ protocol\n      are removed and replaced by static configurations.  For the\
    \ IP-to-\n      MPLS forwarding, static route configurations should be applied.\n\
    \      For the MPLS-to-MPLS and MPLS-to-IP, static label configurations\n    \
    \  must be applied.\n      For this test, all Graceful Restart features MUST be\
    \ disabled.\n   Discussion\n      This test case is intended to provide insight\
    \ into how long an\n      MPLS device could take to be fully operational after\
    \ any of the\n      reset events.  It is quite likely that the time an IP/MPLS\
    \ device\n      takes to become fully operational after any of the reset events\n\
    \      may be different from that of an IP-only device.\n      Modern devices\
    \ now have many more reset options that were not\n      available when Section\
    \ 26.6 of RFC 2544 was published.  Moreover,\n      different reset events on\
    \ modern devices may produce different\n      results, hence, needing clarity\
    \ and consistency in reset\n      procedures beyond what's specified in RFC 2544.\n\
    \   Procedure\n      Please follow the procedure from the separate document for\
    \ each\n      MPLS forwarding operation one-by-one:\n         IP-to-MPLS forwarding\
    \      (Push)         Section 6.1.1\n         MPLS-to-MPLS forwarding    (Swap)\
    \         Section 6.1.2\n         MPLS-to-IP forwarding      (Pop)          Section\
    \ 6.1.3\n         MPLS-to-IP forwarding      (Aggregate)    Section 6.1.4\n  \
    \       MPLS-to-IP forwarding      (PHP)          Section 6.1.5\n   Reporting\
    \ Format\n      The result should be reported as per Section 5 and as per the\n\
    \      separate document.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Benchmarking activities, as described in this\
    \ memo, are limited to\n   technology characterization using controlled stimuli\
    \ in a laboratory\n   environment, with dedicated address space and the constraints\n\
    \   specified in the sections above.\n   The benchmarking network topology will\
    \ be an independent test setup\n   and MUST NOT be connected to devices that may\
    \ forward the test\n   traffic into a production network or misroute traffic to\
    \ the test\n   management network.\n   Furthermore, benchmarking is performed\
    \ on a \"black-box\" basis,\n   relying solely on measurements observable external\
    \ to the DUT/SUT\n   (System Under Test).\n   Special capabilities SHOULD NOT\
    \ exist in the DUT/SUT specifically for\n   benchmarking purposes.  Any implications\
    \ for network security arising\n   from the DUT/SUT SHOULD be identical in the\
    \ lab and in production\n   networks.\n   There are no specific security considerations\
    \ within the scope of\n   this document.\n"
- title: 8.  Acknowledgement
  contents:
  - "8.  Acknowledgement\n   The authors would like to thank Mo Khalid, who motivated\
    \ us to write\n   this document.  We would like to thank Rodney Dunn, Chip Popoviciu,\n\
    \   Jeff Byzek, Jay Karthik, Rajiv Papneja, Samir Vapiwala, Silvija\n   Andrijic\
    \ Dry, Scott Bradner, Al Morton, and Bill Cerveny for their\n   careful review\
    \ and suggestions.\n   This document was originally prepared using 2-Word-v2.0.template.dot.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2544] Bradner, S. and J. McQuaid, \"Benchmarking Methodology for\n\
    \             Network Interconnect Devices\", RFC 2544, March 1999.\n   [RFC1242]\
    \ Bradner, S., \"Benchmarking Terminology for Network\n             Interconnection\
    \ Devices\", RFC 1242, July 1991.\n   [RFC3031] Rosen, E., Viswanathan, A., and\
    \ R. Callon, \"Multiprotocol\n             Label Switching Architecture\", RFC\
    \ 3031, January 2001.\n   [RFC3032] Rosen, E., Tappan, D., Fedorkow, G., Rekhter,\
    \ Y.,\n             Farinacci, D., Li, T., and A. Conta, \"MPLS Label Stack\n\
    \             Encoding\", RFC 3032, January 2001.\n   [RFC3107] Rekhter, Y. and\
    \ E. Rosen, \"Carrying Label Information in\n             BGP-4\", RFC 3107, May\
    \ 2001.\n   [RFC5036] Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n\
    \             \"LDP Specification\", RFC 5036, October 2007.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [RFC5180] Popoviciu, C., Hamza, A., Van de Velde,\
    \ G., and D.\n             Dugatkin, \"IPv6 Benchmarking Methodology for Network\n\
    \             Interconnect Devices\", RFC 5180, May 2008.\n   [RFC3209] Awduche,\
    \ D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n             and G. Swallow,\
    \ \"RSVP-TE: Extensions to RSVP for LSP\n             Tunnels\", RFC 3209, December\
    \ 2001.\n   [RFC4364] Rosen, E. and Y. Rekhter, \"BGP/MPLS IP Virtual Private\n\
    \             Networks (VPNs)\", RFC 4364, February 2006.\n   [RFC4271] Rekhter,\
    \ Y., Ed., Li, T., Ed., and S. Hares, Ed., \"A Border\n             Gateway Protocol\
    \ 4 (BGP-4)\", RFC 4271, January 2006.\n   [RFC4664] Andersson, L., Ed., and E.\
    \ Rosen, Ed., \"Framework for Layer\n             2 Virtual Private Networks (L2VPNs)\"\
    , RFC 4664, September\n             2006.\n   [IEE8021] Mick Seaman (editor),\
    \ \"IEEE Std 802.1D-2004, MAC Bridges\",\n             Feb 2004.\n   [IEE8023]\
    \ LAN/MAN Standards Committee of the IEEE Computer Society,\n             \"IEEE\
    \ Std 802.3as-2006, Part 3: Carrier Sense Multiple\n             Access with Collision\
    \ Detection (CSMA/CD) Access Method and\n             Physical Layer Specifications,\
    \ Amendment 3: Frame format\n             extensions\", Nov 2006.\n   [RFC3443]\
    \ Agarwal, P. and B. Akyol, \"Time To Live (TTL) Processing in\n             Multi-Protocol\
    \ Label Switching (MPLS) Networks\", RFC 3443,\n             January 2003.\n \
    \  [RFC2328] Moy, J., \"OSPF Version 2\", STD 54, RFC 2328, April 1998.\n   [RFC5462]\
    \ Andersson, L. and R. Asati, \"Multiprotocol Label Switching\n             (MPLS)\
    \ Label Stack Entry: \"EXP\" Field Renamed to \"Traffic\n             Class\"\
    \ Field\", RFC 5462, February 2009.\n   [RFC4928] Swallow, G., Bryant, S., and\
    \ L. Andersson, \"Avoiding Equal\n             Cost Multipath Treatment in MPLS\
    \ Networks\", BCP 128, RFC\n             4928, June 2007.\n   [RFC4090] Pan, P.,\
    \ Ed., Swallow, G., Ed., and A. Atlas, Ed., \"Fast\n             Reroute Extensions\
    \ to RSVP-TE for LSP Tunnels\", RFC 4090,\n             May 2005.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Aamer Akhter\n   Cisco Systems\n   7025 Kit Creek Road\n\
    \   RTP, NC 27709\n   USA\n   EMail: aakhter@cisco.com\n   Rajiv Asati\n   Cisco\
    \ Systems\n   7025 Kit Creek Road\n   RTP, NC 27709\n   USA\n   EMail: rajiva@cisco.com\n\
    \   Carlos Pignataro\n   Cisco Systems\n   7200-12 Kit Creek Road\n   RTP, NC\
    \ 27709\n   USA\n   EMail: cpignata@cisco.com\n"
