- title: __initial_text__
  contents:
  - "                        THE DARPA INTERNET GATEWAY\n                        \
    \       Robert Hinden\n                               Alan Sheltzer\n        \
    \               Bolt Beranek and Newman Inc.\n                              10\
    \ Moulton St.\n                      Cambridge, Massachusetts 02238\n        \
    \                      September 1982\n                               Prepared\
    \ for\n                 Defense Advanced Research Projects Agency\n          \
    \       Information Processing Techniques Office\n                           1400\
    \ Wilson Boulevard\n                         Arlington, Virginia 22209\n"
- title: This RFC is a status report on the Internet Gateway developed by BBN. It
  contents:
  - 'This RFC is a status report on the Internet Gateway developed by BBN. It

    '
- title: describes the Internet Gateway as of September 1982.  This memo presents
  contents:
  - 'describes the Internet Gateway as of September 1982.  This memo presents

    '
- title: detailed descriptions of message formats and gateway procedures, however
  contents:
  - 'detailed descriptions of message formats and gateway procedures, however

    '
- title: this is not an implementation specification, and such details are
  contents:
  - "this is not an implementation specification, and such details are \n"
- title: subject to change.
  contents:
  - "subject to change.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n                             Table of Contents\n     1 \
    \  INTRODUCTION.......................................... 1\n     2   BACKGROUND............................................\
    \ 2\n     3   FORWARDING INTERNET DATAGRAMS......................... 5\n     3.1\
    \   Input............................................... 5\n     3.2   IP Header\
    \ Checks.................................... 6\n     3.3   Routing.............................................\
    \ 7\n     3.4   Redirects........................................... 9\n     3.5\
    \   Fragmentation....................................... 9\n     3.6   Header\
    \ Rebuild..................................... 10\n     3.7   Output.............................................\
    \ 10\n     4   PROTOCOLS SUPPORTED BY THE GATEWAY................... 12\n    \
    \ 4.1   Cross-Net Debugging Protocol....................... 12\n     4.2   Host\
    \ Monitoring Protocol........................... 12\n     4.3   ICMP...............................................\
    \ 14\n     4.4   Gateway-to-Gateway Protocol........................ 14\n    \
    \ 4.4.1   Determining Connectivity to Networks............. 14\n     4.4.2   Determining\
    \ Connectivity to Neighbors............ 16\n     4.4.3   Exchanging Routing Information...................\
    \ 17\n     4.4.4   Computing Routes................................. 19\n    \
    \ 4.4.5   Non-Routing Gateways............................. 22\n     4.4.6   Adding\
    \ New Neighbors and Networks................ 23\n     4.5   Exterior Gateway Protocol..........................\
    \ 24\n     5   GATEWAY SOFTWARE..................................... 26\n    \
    \ 5.1   Software Structure................................. 26\n     5.1.1   Device\
    \ Drivers................................... 27\n     5.1.2   Network Software.................................\
    \ 27\n     5.1.3   Shared Gateway Software.......................... 29\n    \
    \ 5.2   Gateway Processes.................................. 29\n     5.2.1   Network\
    \ Processes................................ 29\n     5.2.2   GGP Process......................................\
    \ 30\n     5.2.3   HMP Process...................................... 31\n    \
    \ APPENDIX A. GGP Message Formats.......................... 32\n     APPENDIX\
    \ B. Information Maintained by Gateways........... 39\n     APPENDIX C. GGP Events\
    \ and Responses..................... 41\n     REFERENCES...............................................\
    \ 43\n     DARPA Internet Gateway                             September 1982\n\
    \     RFC 823\n     1  INTRODUCTION\n          This document explains the design\
    \ of  the  Internet  gateway\n     used  in  the  Defense  Advanced  Research\
    \ Project Agency (DARPA)\n     Internet program.  The gateway design was  originally\
    \  documented\n     in  IEN-30,  \"Gateway  Routing:  An Implementation Specification\"\
    \n     [2], and was later updated in IEN-109, \"How to Build  a  Gateway\"\n \
    \    [3].   This  document  reflects changes made both in the internet\n     protocols\
    \ and in the gateway design since  these  documents  were\n     released.  It\
    \ supersedes both IEN-30 and IEN-109.\n          The Internet gateway described\
    \ in this document is based  on\n     the  work  of many people; in particular,\
    \ special credit is given\n     to V. Strazisar, M. Brescia, E. Rosen, and J.\
    \ Haverty.\n          The gateway's primary purpose is to route internet datagrams\n\
    \     to their destination networks.  These datagrams are generated and\n    \
    \ processed as described in RFC 791,  \"Internet  Protocol  -  DARPA\n     Internet\
    \  Program  Protocol  Specification\"  [1].   This document\n     describes  how\
    \  the  gateway  forwards  datagrams,  the   routing\n     algorithm  and  protocol\
    \  used  to  route  them, and the software\n     structure  of  the  current \
    \  gateway.    The   current   gateway\n     implementation  is written in macro-11\
    \ assembly language and runs\n     in the DEC PDP-11 or LSI-11 16-bit processor.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n     2  BACKGROUND\n          The gateway system has undergone a series\
    \ of  changes  since\n     its  inception,  and  it  is  continuing  to  evolve\
    \  as research\n     proceeds in the Internet community.  This document describes\
    \  the\n     implementation as of mid-1982.\n          Early versions of gateway\
    \ software  were  implemented  using\n     the   BCPL   language   and   the \
    \ ELF  operating  system.   This\n     implementation evolved into one  which\
    \  used  the  MOS  operating\n     system  for  increased  performance.   In \
    \ late 1981, we began an\n     effort to produce a  totally  new  gateway  implementation.\
    \   The\n     primary  motivation  for  this was the need for a system oriented\n\
    \     towards  the  requirements  of  an   operational   communications\n    \
    \ facility,  rather than the research testbed environment which was\n     associated\
    \ with the BCPL implementation.   In  addition,  it  was\n     generally   recognized\
    \   that   the   complexity   and  buffering\n     requirements of future gateway\
    \  configurations  were  beyond  the\n     capabilities of the PDP-11/LSI-11 and\
    \ BCPL architecture.  The new\n     gateway implementation therefore had a second\
    \ goal of producing a\n     highly  space-efficient  implementation in order to\
    \ provide space\n     for buffers and for the extra  mechanisms,  such  as  monitoring,\n\
    \     which are needed for an operational environment.\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n          This document\
    \  describes  the  implementation  of  this  new\n     gateway  which  incorporates\
    \  several  mechanisms  for operations\n     activities,  is coded in assembly\
    \  language  for  maximum  space-\n     efficiency,  but otherwise is fundamentally\
    \ the same architecture\n     as the older, research-oriented, implementations.\n\
    \          One of the results of recent research  is  the  thesis  that\n    \
    \ gateways  should be viewed as elements of a gateway system, where\n     the\
    \  gateways   act   as   a   loosely-coupled   packet-switching\n     communications\
    \   system.   For  reasons  of  maintainability  and\n     operability,  it  is\
    \  easiest  to  build  such  a  system  in  an\n     homogeneous  fashion  where\
    \  all  gateways  are  under  a  single\n     authority and control,  as  is \
    \ the  practice  in  other  network\n     implementations.\n          In order\
    \ to create  a  system  architecture  that  permitted\n     multiple  sets of\
    \ gateways with each set under single control but\n     acting together to implement\
    \ a composite single Internet  System,\n     new  protocols  needed to be developed.\
    \  These protocols, such as\n     the \"Exterior Gateway Protocol,\" will be introduced\
    \ in the  later\n     releases of the gateway implementation.\n          We  also\
    \  anticipate  further   changes   to   the   gateway\n     architecture  and\
    \  implementation  to  introduce  support for new\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     capabilities,\
    \ such as large numbers of networks, access  control,\n     and  other  requirements\
    \ which have been proposed by the Internet\n     research community.  This document\
    \ represents a snapshot  of  the\n     current implementation, rather than a specification.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n     3  FORWARDING INTERNET DATAGRAMS\n          This section describes\
    \ how the  gateway  forwards  datagrams\n     between  networks.   A host computer\
    \ that wants an IP datagram to\n     reach a host on another network  must  send\
    \  the  datagram  to  a\n     gateway to be forwarded.  Before it is sent into\
    \ the network, the\n     host attaches to the datagram a local network  header\
    \  containing\n     the address of the gateway.\n     3.1  Input\n          When\
    \ a gateway receives a message, the  gateway  checks  the\n     message's  local\
    \  network header for possible errors and performs\n     any actions  required\
    \  by  the  host-to-network  protocol.   This\n     processing involves functions\
    \ such as verifying the local network\n     header checksum or  generating  a\
    \  local  network  acknowledgment\n     message.   If  the  header indicates that\
    \ the message contains an\n     Internet datagram, the datagram is passed to the\
    \ Internet  header\n     check  routine.   All  other  messages  received that\
    \ do not pass\n     these tests are discarded.\n     DARPA Internet Gateway  \
    \                           September 1982\n     RFC 823\n     3.2  IP Header\
    \ Checks\n          The Internet header  check  routine  performs  a  number \
    \ of\n     validity tests on the IP header.  Datagrams that fail these tests\n\
    \     are discarded causing an HMP trap to  be  sent  to  the  Internet\n    \
    \ Network  Operations  Center (INOC) [7].  The following checks are\n     currently\
    \ performed:\n          o  Proper IP Version Number\n          o  Valid IP Header\
    \ Length ( >= 20 bytes)\n          o  Valid IP Message Length\n          o  Valid\
    \ IP Header Checksum\n          o  Non-Zero Time to Live field\n     After a datagram\
    \ passes these checks,  its  Internet  destination\n     address  is examined\
    \ to determine if the datagram is addressed to\n     the gateway.  Each of the\
    \ gateway's internet addresses  (one  for\n     each  network  interface)  is\
    \  checked  against  the  destination\n     address in the datagram.  If a match\
    \ is not found,  the  datagram\n     is passed to the forwarding routine.\n  \
    \        If the datagram is addressed to the gateway itself,  the  IP\n     options\
    \  in  the IP header are processed.  Currently, the gateway\n     supports the\
    \ following IP options:\n     DARPA Internet Gateway                         \
    \    September 1982\n     RFC 823\n          o  NOP\n          o  End of Option\
    \ List\n          o  Loose Source and Record Route\n          o  Strict Source\
    \ and Record Route\n     The datagram is next processed according to the protocol\
    \  in  the\n     IP  header.  If  the protocol is not supported by the gateway,\
    \ it\n     replies with an ICMP error message  and  discards  the  datagram.\n\
    \     The  gateway  does  not  support  IP  reassembly,  so  fragmented\n    \
    \ datagrams which are addressed to the gateway are discarded.\n     3.3  Routing\n\
    \          The gateway must make a routing decision for  all  datagrams\n    \
    \ that  are to be to forwarded.  The routing algorithm provides two\n     pieces\
    \ of information for the gateway:  1) the network  interface\n     that  should\
    \ be used to send this datagram and 2) the destination\n     address that should\
    \ be put in the local  network  header  of  the\n     datagram.\n          The\
    \ gateway maintains a dynamic Routing Table which contains\n     an  entry  for\
    \  each  reachable network.  The entry consists of a\n     network number and\
    \ the address of the  neighbor  gateway  on  the\n     shortest  route  to  the\
    \  network, or else an indication that the\n     DARPA Internet Gateway      \
    \                       September 1982\n     RFC 823\n     gateway is directly\
    \ connected to the network.  A neighbor gateway\n     is  one  which  shares \
    \ a  common network with this gateway.  The\n     distance metric that is  used\
    \  to  determine  which  neighbor  is\n     closest  is  defined  as the \"number\
    \ of hops,\" where a gateway is\n     considered to be zero hops from its directly\
    \ connected  networks,\n     one  hop  from a network that is reachable via one\
    \ other gateway,\n     etc.  The Gateway-to-Gateway Protocol (GGP) is used to\
    \ update the\n     Routing  Table (see Section 4.4 describing the Gateway-to-Gateway\n\
    \     Protocol).\n          The gateway tries to match the destination  network\
    \  address\n     in  the IP header of the datagram to be forwarded, with a network\n\
    \     in its Routing Table.  If no match is found,  the  gateway  drops\n    \
    \ the datagram and sends an ICMP Destination Unreachable message to\n     the\
    \ IP source.  If the gateway does find an entry for the network\n     in  its\
    \  table,  it  will use the network address of the neighbor\n     gateway entry\
    \ as the local network  destination  address  of  the\n     datagram.   However,\
    \ if the final destination network is one that\n     the gateway is directly connected\
    \ to, the destination address  in\n     the  local network header is created from\
    \ the destination address\n     in the IP header of the datagram.\n     DARPA\
    \ Internet Gateway                             September 1982\n     RFC 823\n\
    \     3.4  Redirects\n          If the routing procedure decides that an IP datagram\
    \  is  to\n     be  sent back out the same network interface that it was read\
    \ in,\n     then this gateway is not on the shortest path  to  the  IP  final\n\
    \     destination.   Nevertheless, the datagram will still be forwarded\n    \
    \ to the next address chosen by  the  routing  procedure.   If  the\n     datagram\
    \  is  not  using  the  IP Source Route Option, and the IP\n     source network\
    \ of the datagram is the same as the network of  the\n     next  gateway  chosen\
    \  by the routing procedure, an ICMP Redirect\n     message will be sent  to \
    \ the  IP  source  host  indicating  that\n     another  gateway  should  be used\
    \ to send traffic to the final IP\n     destination.\n     3.5  Fragmentation\n\
    \          The datagram is passed to the  fragmentation  routine  after\n    \
    \ the  routing decision has been made.  If the next network through\n     which\
    \ the datagram must pass has a maximum message size  that  is\n     smaller  than\
    \  the  size  of  the  datagram, the datagram must be\n     fragmented.   Fragmentation\
    \  is  performed   according   to   the\n     algorithm  described  in the Internet\
    \ Protocol Specification [1].\n     Certain IP options must be copied  into  the\
    \  IP  header  of  all\n     DARPA Internet Gateway                          \
    \   September 1982\n     RFC 823\n     fragments, and others appear only in the\
    \ first fragment according\n     to the IP specification.  If a datagram must\
    \ be  fragmented,  but\n     the  Don't  fragment bit is set, the datagram is\
    \ discarded and an\n     ICMP error message is sent to the IP source of the datagram.\n\
    \     3.6  Header Rebuild\n          The datagram (or the fragments of the original\
    \  datagram  if\n     fragmentation  was  needed)  is  next  passed  to  a routine\
    \ that\n     rebuilds  the  Internet  header.  The  Time  to  Live  field   is\n\
    \     decremented by one and the IP checksum is recomputed.\n          The  local\
    \  network  header  is  now   built.    Using   the\n     information  obtained\
    \  from  its  routing  procedure, the gateway\n     chooses the network interface\
    \ it considers  proper  to  send  the\n     datagram  and  to  build  the  destination\
    \  address  in the local\n     network header.\n     3.7  Output\n          The\
    \ datagram is now enqueued on an output queue for delivery\n     towards  its\
    \ destination.  A limit is enforced on the size of the\n     output queue for\
    \ each network interface so that  a  slow  network\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     does  not  unfairly\
    \  use  up  all of the gateway's buffers.  If a\n     datagram cannot be enqueued\
    \ due to the limit on the output  queue\n     length, it is dropped and an HMP\
    \ trap is sent to the INOC.  These\n     traps, and others of a similar nature,\
    \ are  used  by  operational\n     personnel to monitor the operations of the\
    \ gateways.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     4  PROTOCOLS SUPPORTED BY THE GATEWAY\n          A\
    \ number of  protocols  are  supported  by  the  gateway  to\n     provide   dynamic\
    \   routing,  monitoring,  debugging,  and  error\n     reporting.  These protocols\
    \ are described below.\n     4.1  Cross-Net Debugging Protocol\n          The\
    \ Cross-Net Debugging Protocol (XNET) [8] is used to  load\n     the  gateway\
    \  and  to  examine  and  deposit  data.   The gateway\n     supports the following\
    \ XNET op-codes:\n          o  NOP\n          o  Debug\n          o  End Debug\n\
    \          o  Deposit\n          o  Examine\n          o  Create Process\n   \
    \  4.2  Host Monitoring Protocol\n          The Host Monitoring Protocol (HMP)\
    \ [6] is  used  to  collect\n     measurements   and   status   information  \
    \ from   the  gateways.\n     Exceptional conditions in the gateways are reported\
    \ in HMP traps.\n     The status of a gateway's interfaces, neighbors, and the\
    \ networks\n     which it can reach are reported in the HMP status message.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n          Two types of gateway statistics, the Host Traffic Matrix\
    \ and\n     the  gateway  throughput,  are currently defined by the HMP.  The\n\
    \     Host Traffic Matrix records the number  of  datagrams  that  pass\n    \
    \ through  the  gateway  with  a  given IP source, destination, and\n     protocol\
    \ number.   The  gateway  throughput  message  collects  a\n     number  of  important\
    \ counters that are kept by the gateway.  The\n     current gateway reports the\
    \ following values:\n          o  Datagrams dropped because destination net unreachable\n\
    \          o  Datagrams dropped because destination host unreachable\n       \
    \   o  Per Interface:\n                  Datagrams received with IP errors\n \
    \                 Datagrams received for this gateway\n                  Datagrams\
    \ received to be forwarded\n                  Datagrams looped\n             \
    \     Bytes received\n                  Datagrams sent, originating at this gateway\n\
    \                  Datagrams sent to destination hosts\n                  Datagrams\
    \ dropped due to flow control limitations\n                  Datagrams dropped\
    \ due to full queue\n                  Bytes sent\n          o  Per Neighbor:\n\
    \                  Routing updates sent to\n                  Routing updates\
    \ received from\n                  Datagrams sent, originating here\n        \
    \          Datagrams forwarded to\n                  Datagrams dropped due to\
    \ flow control limitations\n                  Datagrams dropped due to full queue\n\
    \                  Bytes sent\n     DARPA Internet Gateway                   \
    \          September 1982\n     RFC 823\n     4.3  ICMP\n          The gateway\
    \ will generate the following ICMP messages  under\n     appropriate  circumstances\
    \  as  defined by the ICMP specification\n     [4]:\n          o  Echo Reply\n\
    \          o  Destination Unreachable\n          o  Source Quench\n          o\
    \  Redirect\n          o  Time Exceeded\n          o  Parameter Problem\n    \
    \      o  Information Reply\n     4.4  Gateway-to-Gateway Protocol\n         \
    \ The gateway uses the Gateway-to-Gateway  Protocol  (GGP)  to\n     determine\
    \  connectivity  to networks and neighbor gateways; it is\n     also used in \
    \ the  implementation  of  a  dynamic,  shortest-path\n     routing  algorithm.\
    \  The current GGP message formats (for release\n     1003 of the gateway software)\
    \ are presented in Appendix A.\n     4.4.1  Determining Connectivity to Networks\n\
    \          When a gateway  starts  running  it  assumes  that  all  its\n    \
    \ neighbor  gateways  are  \"down,\"  that  it  is  disconnected from\n     DARPA\
    \ Internet Gateway                             September 1982\n     RFC 823\n\
    \     networks to which it is attached, and that the distance  reported\n    \
    \ in  routing  updates  from  each  neighbor  to  each  network  is\n     \"infinity.\"\
    \n          The gateway first determines the state of  its  connectivity\n   \
    \  to  networks  to  which it is physically attached.  The gateway's\n     connection\
    \ to a network is declared up if it can send and receive\n     internet  datagrams\
    \  on its interface to that network.  Note that\n     the method that the gateway\
    \ uses to determine its connectivity to\n     a  network  is network-dependent.\
    \  In some networks, the host-to-\n     network protocol determines whether or\
    \ not datagrams can be  sent\n     and  received  on  the  host  interface.  \
    \ In these networks, the\n     gateway simply checks-status information provided\
    \ by the protocol\n     in order to determine if it can communicate with the network.\
    \  In\n     other networks, where  the  host-to-network  protocols  are  less\n\
    \     sophisticated,  it  may  be  necessary  for  the  gateway to send\n    \
    \ datagrams to itself to determine if it can communicate  with  the\n     network.\
    \   In  these networks, the gateways periodically poll the\n     network using\
    \ GGP network interface status messages [Appendix  A]\n     to determine if the\
    \ network interface is operational.\n          The gateway has two rules relevant\
    \ to computing distances to\n     networks:   1) if the gateway can send and receive\
    \ traffic on its\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     network interface, its distance to the network is zero;\
    \  2) if it\n     cannot send and receive traffic on the interface, its distance\
    \ to\n     the network is \"infinity.\"  Note  that  if  a  gateway's  network\n\
    \     interface is not working, it may still be able to send traffic to\n    \
    \ the network on  an  alternate  route  via  one  of  its  neighbor\n     gateways.\n\
    \     4.4.2  Determining Connectivity to Neighbors\n          The gateway determines\
    \ connectivity to neighbors using a  \"K\n     out  of  N\"  algorithm.   Every\
    \ 15 seconds, the gateway sends GGP\n     Echo messages  [Appendix  A]  to  each\
    \  of  its  neighbors.   The\n     neighbors  respond  by  sending GGP echo replies.\
    \  If there is no\n     reply to K out of  N  (current  values  are  K=3  and\
    \  N=4)  echo\n     messages sent to a neighbor, the neighbor is declared down.\
    \  If a\n     neighbor is down and J out of M (current values are J=2 and  M=4)\n\
    \     echo  replies  are  received,  the neighbor is declared to be up.\n    \
    \ The values of J,K,M,N  and  the  time  interval  are  operational\n     parameters\
    \ which can be adjusted as required.\n     DARPA Internet Gateway            \
    \                 September 1982\n     RFC 823\n     4.4.3  Exchanging Routing\
    \ Information\n          The gateway sends routing information in GGP Routing\
    \  Update\n     messages.  The gateway receives and transmits routing information\n\
    \     reliably using sequence-numbered messages  and  a  retransmission\n    \
    \ and acknowledgment scheme as explained below.  For each neighbor,\n     the\
    \ gateway remembers the Receive Sequence  Number,  R,  that  it\n     received\
    \  in  the  most recent routing update from that neighbor.\n     This value is\
    \ initialized with the sequence number in  the  first\n     Routing  Update  received\
    \  from  a neighbor after that neighbor's\n     status is set to \"up.\"  On receipt\
    \ of a  routing  update  from  a\n     neighbor,  the  gateway subtracts the Receive\
    \ Sequence Number, R,\n     from the sequence number in the routing update, S.\
    \ If this  value\n     (S-R)  is greater than or equal to zero, then the gateway\
    \ accepts\n     the routing update, sends an acknowledgment (see Appendix  A)\
    \  to\n     the  neighbor  containing the sequence number S, and replaces the\n\
    \     Receive Sequence Number, R, with S. If this value (S-R)  is  less\n    \
    \ than  zero,  the  gateway  rejects the routing update and sends a\n     negative\
    \  acknowledgment  [Appendix  A]  to  the  neighbor   with\n     sequence number\
    \ R.\n          The gateway has a  Send  Sequence  Number,  N,  for  sending\n\
    \     routing  updates  to  all of its neighbors.  This sequence number\n    \
    \ DARPA Internet Gateway                             September 1982\n     RFC\
    \ 823\n     can be initialized to any value.  The  Send  Sequence  Number  is\n\
    \     incremented  each  time  a  new  routing  update  is created.  On\n    \
    \ receiving an acknowledgment for a  routing  update,  the  gateway\n     subtracts\
    \  the  sequence  number  acknowledged,  A, from the Send\n     Sequence Number,\
    \ N.  If the value (N-A) is non-zero, then an  old\n     routing  update  is being\
    \ acknowledged.  The gateway continues to\n     retransmit the most recent routing\
    \ update to  the  neighbor  that\n     sent  the  acknowledgment.   If (N-A) is\
    \ zero, the routing update\n     has been acknowledged.  Note that only the  most\
    \  recent  routing\n     update  must  be  acknowledged;  if  a  second  routing\
    \ update is\n     generated before the first routing update is  acknowledged,\
    \  only\n     the second routing update must be acknowledged.\n          If  a\
    \  negative  acknowledgment  is  received,  the  gateway\n     subtracts  the\
    \  sequence  number negatively acknowledged, A, from\n     its Send Sequence Number,\
    \ N.  If this value (N-A)  is  less  than\n     zero, then the gateway replaces\
    \ its Send Sequence Number, N, with\n     the sequence number negatively acknowledged\
    \ plus  one,  A+1,  and\n     retransmits the routing update to all of its neighbors.\
    \  If (N-A)\n     is greater than or equal to zero, then the gateway  continues\
    \  to\n     retransmit  the routing update using sequence number N.  In order\n\
    \     to maintain the correct sequence numbers at all gateways, routing\n    \
    \ updates  must  be  retransmitted  to  all  neighbors  if the Send\n     DARPA\
    \ Internet Gateway                             September 1982\n     RFC 823\n\
    \     Sequence Number changes, even if the routing information does not\n    \
    \ change.\n          The gateway retransmits routing updates  periodically  until\n\
    \     they  are  acknowledged  and  whenever  its  Send Sequence Number\n    \
    \ changes.  The gateway sends routing  updates  only  to  neighbors\n     that\
    \ are in the \"up\" state.\n     4.4.4  Computing Routes\n          A routing\
    \ update  contains  a  list  of  networks  that  are\n     reachable  through\
    \  this  gateway, and the distance in \"number of\n     hops\"  to  each  network\
    \  mentioned.   The  routing  update  only\n     contains information about a\
    \ network if the gateway believes that\n     it is as close or closer to that\
    \ network then the neighbor  which\n     is  to receive the routing update.  The\
    \ network address may be an\n     internet class A, B, or C address.\n       \
    \   The information inside a  routing  update  is  processed  as\n     follows.\
    \   The gateway contains an N x K distance matrix, where N\n     is the number\
    \ of  networks  and  K  is  the  number  of  neighbor\n     gateways.   An  entry\
    \  in this matrix, represented as dm(I,J), is\n     the distance to network I\
    \ from neighbor J as reported in the most\n     DARPA Internet Gateway       \
    \                      September 1982\n     RFC 823\n     recent routing update\
    \ from neighbor J.  The gateway also contains\n     a vector indicating  the \
    \ connectivity  between  itself  and  its\n     neighbor  gateways.   The  values\
    \  in this vector are computed as\n     discussed above (see Section 4.4.2, Determining\
    \  Connectivity  to\n     Neighbors).   The value of the Jth entry of this vector,\
    \ which is\n     the connectivity between the gateway and  the  Jth  neighbor,\
    \  is\n     represented as d(J).\n          The gateway copies the routing update\
    \ received from the  Jth\n     neighbor  into  the  appropriate row of the distance\
    \ matrix, then\n     updates its routes as follows.  The gateway calculates a\
    \  minimum\n     distance  vector  which  contains  the  minimum  distance to\
    \ each\n     network  from  the  gateway.   The  Ith  entry  of  this  vector,\n\
    \     represented as MinD(I) is:\n       MinD(I) = minimum over all neighbors\
    \ of d(J) + dm(I,J)\n     where d(J) is the  distance  between  the  gateway \
    \ and  the  Jth\n     neighbor,  and  dm(I,J)  is the distance from the Jth neighbor\
    \ to\n     the Ith network.  If the Ith network is attached to  the  gateway\n\
    \     and  the  gateway  can  send  and  receive traffic on its network\n    \
    \ interface (see Section 4.4.2), then  the  gateway  sets  the  Ith\n     entry\
    \ of the minimum distance vector to zero.\n     DARPA Internet Gateway       \
    \                      September 1982\n     RFC 823\n          Using the minimum\
    \ distance vector, the  gateway  computes  a\n     list  of  neighbor gateways\
    \ through which to send traffic to each\n     network.  The entry for a  given\
    \  network  contains  one  of  the\n     neighbors that is the minimum distance\
    \ away from that network.\n          After updating its  routes  to  the  networks,\
    \  the  gateway\n     computes  the  new  routing  updates to be sent to its neighbors.\n\
    \     The gateway reports a network to a neighbor  only  if  it  is  as\n    \
    \ close  to  or closer to that network than its neighbor.  For each\n     network\
    \ I, the routing update contains the address of the network\n     and the minimum\
    \ distance to that network which is MinD(I).\n          Finally, the gateway must\
    \ determine whether it  should  send\n     routing  updates to its neighbors.\
    \  The gateway sends new updates\n     to its neighbors if every one of the following\
    \  three  conditions\n     occurs:   1)  one  of the gateway's interfaces changes\
    \ state,  2)\n     one of the gateway's neighbor gateways changes state, and \
    \ 3) the\n     gateway  receives  a  routing  update  from  a  neighbor  that\
    \ is\n     different from the update that it had  previously  received  from\n\
    \     that  neighbor.   The  gateway  sends  routing  updates  only  to\n    \
    \ neighbors that are currently in the \"up\" state.\n          The gateway requests\
    \ a routing update  from  neighbors  that\n     are  in  the  \"up\"  state, \
    \ but  from which it has yet received a\n     DARPA Internet Gateway         \
    \                    September 1982\n     RFC 823\n     routing update.  Routing\
    \ updates are  requested  by  setting  the\n     appropriate  bit  in  the routing\
    \ update being sent [Appendix A].\n     Similarly, if a gateway receives from\
    \ a neighbor a routing update\n     in  which the bit requesting a routing update\
    \ is set, the gateway\n     sends the neighbor the most recent routing update.\n\
    \     4.4.5  Non-Routing Gateways\n          A Non-routing Gateway is a gateway\
    \  that  forwards  internet\n     traffic,  but  does  not  implement  the  GGP\
    \  routing algorithm.\n     Networks that are behind a Non-routing Gateway are\
    \ known a-priori\n     to  Routing Gateways.  There can be one or more of these\
    \ networks\n     which are considered to be directly connected to the  Non-routing\n\
    \     Gateway.   A  Routing  Gateway  will forward a datagram to a Non-\n    \
    \ routing Gateway if it is addressed to a network behind  the  Non-\n     routing\
    \   Gateway.    Routing  Gateways  currently  do  not  send\n     Redirects for\
    \  Non-routing  Gateways.   A  Routing  Gateway  will\n     always  use  another\
    \  Routing Gateway as a path instead of a Non-\n     routing Gateways if both\
    \ exist and are the same  number  of  hops\n     away from the destination network.\
    \  The Non-routing Gateways path\n     will be used only when the Routing Gateway\
    \ path is down; when the\n     Routing Gateway path comes back up, it will be\
    \ used again.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     4.4.6  Adding New Neighbors and Networks\n        \
    \  Gateways  dynamically  add  routing  information  about  new\n     neighbors\
    \   and  new  networks  to  their  tables.   The  gateway\n     maintains a list\
    \ of neighbor gateway addresses.  When  a  routing\n     update  is  received,\
    \ the gateway searches this list of addresses\n     for the Internet source address\
    \ of the  routing  update  message.\n     If  the  Internet  source  address \
    \ of  the routing update is not\n     contained in the list of neighbor  addresses,\
    \  the  gateway  adds\n     this  address  to  the  list  of  neighbor addresses\
    \ and sets the\n     neighbor's connectivity status to \"down.\"   Routing  updates\
    \  are\n     not  accepted  from neighbors until the GGP polling mechanism has\n\
    \     determined that the neighbor is up.\n          This strategy of adding \
    \ new  neighbors  requires  that  one\n     gateway   in  each  pair  of  neighbor\
    \  gateways  must  have  the\n     neighbor's address configured in its tables.\
    \  The newest  gateway\n     can be given a complete list of neighbors, thus avoiding\
    \ the need\n     to re-configure older gateways when new gateways are installed.\n\
    \          Gateways obtain routing information about  new  networks  in\n    \
    \ several  steps.   The  gateway has a list of all the networks for\n     which\
    \ it currently maintains routing information.  When a routing\n     update  is\
    \  received,  if the routing update contains information\n     DARPA Internet\
    \ Gateway                             September 1982\n     RFC 823\n     about\
    \ a new network, the gateway adds this network to the list of\n     networks \
    \ for  which it maintains routing information.  Next, the\n     gateway adds \
    \ the  new  network  to  its  distance  matrix.   The\n     distance  matrix comprises\
    \ the is the matrix of distances (number\n     of hops) to networks as reported\
    \  in  routing  updates  from  the\n     neighbor  gateways.   The  gateway  sets\
    \  the distance to all new\n     networks to \"infinity,\" and then  computes\
    \  new  routes  and  new\n     routing updates as outlined above.\n     4.5  Exterior\
    \ Gateway Protocol\n          The Exterior Gateway Protocol (EGP) is used to permit\
    \  other\n     gateways  and  gateway systems to pass routing information to the\n\
    \     DARPA Internet gateways.  The use of the EGP permits the user  to\n    \
    \ perceive  all  of  the networks and gateways as part of one total\n     Internet\
    \ system, even though the \"exterior\" gateways are disjoint\n     and  may  use\
    \  a  routing  algorithm  that  is  different and not\n     compatible with  that\
    \  used  in  the  \"interior\"  gateways.   The\n     important elements of the\
    \ EGP are:\n     o Neighbor Acquisition\n          The procedure by which a gateway\
    \ requests that it  become  a\n          neighbor  of  another  gateway.  This\
    \ is used when a gateway\n          wants to become a neighbor  of  another  in\
    \  order  to  pass\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n          routing information.  This includes the capability\
    \ to accept\n          or refuse the request.\n     o Neighbor Up/Down\n     \
    \     The procedure by which a gateway decides if another  gateway\n         \
    \ is up or down.\n     o Network Reachability Information\n          The facility\
    \ used to pass routing and  neighbor  information\n          between gateways.\n\
    \     o Gateway Going Down\n          The ability of a gateway to inform other\
    \ gateways that it is\n          going  down  and  no  longer  has  any  routes\
    \  to any other\n          networks.  This permits a gateway to go down in  an\
    \  orderly\n          way without disrupting the rest of the Internet system.\n\
    \     A complete description of the EGP can be found  in  IEN-209,  the\n    \
    \ \"Exterior Gateway Protocol\" [10].\n     DARPA Internet Gateway           \
    \                  September 1982\n     RFC 823\n     5  GATEWAY SOFTWARE\n  \
    \        The DARPA Internet Gateway  runs  under  the  MOS  operating\n     system\
    \ [9] which provides facilities for:\n          o Multiple processes\n       \
    \   o Interprocess communication\n          o Buffer management\n          o Asynchronous\
    \ input/output\n          o Shareable real-time clock\n     There is a MOS process\
    \ for  each  network  that  the  gateway  is\n     directly  connected  to.  \
    \ A  data  structure  called  a NETBLOCK\n     contains variables of interest\
    \ for each network and  pointers  to\n     local  network  routines.   Network\
    \  processes run common gateway\n     code while  network-specific  functions\
    \  are  dispatched  to  the\n     routines  pointed  to  in the NETBLOCK.  There\
    \ are also processes\n     for gateway functions which require their own timing,\
    \ such as GGP\n     and HMP.\n     5.1  Software Structure\n          The gateway\
    \ software can be divided conceptually into  three\n     parts:   MOS Device Drivers,\
    \ Network software, and Shared Gateway\n     software.\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     5.1.1  Device\
    \ Drivers\n          The gateway has a set of  routines  to  handle  sending \
    \ and\n     receiving  data  for  each type of hardware interface.  There are\n\
    \     routines for initialization,  initiation,  and  interruption  for\n    \
    \ both  the  transmit  and  receive sides of a device.  The gateway\n     supports\
    \ the following types of devices:\n          a)  ACC LSI-11 1822\n          b)\
    \  DEC IMP11a 1822\n          c)  ACC LHDH 1822\n          d)  ACC VDH11E\n  \
    \        e)  ACC VDH11C\n          f)  Proteon Ring Network\n          g)  RSRE\
    \ HDLC\n          h)  Interlan Ethernet\n          i)  BBN Fibernet\n        \
    \  j)  ACC XQ/CP X.25 **\n          k)  ACC XQ/CP HDH  **\n     5.1.2  Network\
    \ Software\n          For each connected network, the gateway has a set  of  eight\n\
    \     routines  which  handle  local  network  functions.   The network\n    \
    \ routines and their functions are described briefly below.\n     _______________\n\
    \     ** Planned, not yet supported.\n     DARPA Internet Gateway            \
    \                 September 1982\n     RFC 823\n          Up.net    Perform  local\
    \  network  initialization  such   as\n                    flapping the 1822 ready\
    \ line.\n          Sg.net    Handle specific  local  network  timing  functions\n\
    \                    such as timing out 1822 Destination Deads.\n          Rc.net\
    \    A message  has  been  received  from  the  network\n                    interface.\
    \  Check for any input errors.\n          Wc.net    A message has  been  transmitted\
    \  to  the  network\n                    interface.  Check for any output errors.\n\
    \          Rs.net    Set up a buffer (or buffers) to  receive  messages\n    \
    \                on the network interface.\n          Ws.net    Transmit a message\
    \ to the network interface.\n          Hc.net    Check the local network  header\
    \  of  the  received\n                    message.    Perform  any  local  network\
    \  protocol\n                    tasks.\n          Hb.net    Rebuild the local\
    \ network header.\n          There are  network  routines  for  the  following\
    \  types  of\n     networks:\n          o  Arpanet (a,b,c,k)\n          o  Satnet\
    \ (d,e,k)\n          o  Proteon Ring Network (f)\n          o  Packet Radio Network\
    \ (a,b,c)\n          o  Rsre HDLC Null Network (g)\n          o  Ethernet (h)\n\
    \          o  Fibernet (i)\n          o  Telenet X.25 (j) **\n     Note: The letters\
    \ in parentheses refer to the device drivers used\n     _______________\n    \
    \ ** Planned, not yet supported.\n     DARPA Internet Gateway                \
    \             September 1982\n     RFC 823\n     for each type of network as described\
    \ in the previous section.\n     5.1.3  Shared Gateway Software\n          The\
    \ internet processing of a datagram is performed by a body\n     of  code  which\
    \  is  shared  by the network processes.  This code\n     includes  routines \
    \ to  check   the   IP   header,   perform   IP\n     fragmentation, calculate\
    \ the IP checksum, forward a datagram, and\n     implement the routing, monitoring,\
    \ and error reporting protocols.\n     5.2  Gateway Processes\n     5.2.1  Network\
    \ Processes\n          When the gateway starts up, each network process  calls\
    \  its\n     local network initialization routine and read start routine.  The\n\
    \     read start routine sets up two maximum network size  buffers  for\n    \
    \ receiving datagrams.  The network process then waits for an input\n     complete\
    \ signal from the network device driver.\n          When a message has been received,\
    \ the MOS  Operating  System\n     signals  the  appropriate  network process\
    \ with an input complete\n     signal.  The network process wakes up and executes\
    \ the  net  read\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     complete  routine.   After  the  message  has been\
    \ processed, the\n     network process waits for more input.\n          The  net\
    \  read  complete  routine  is  the   major   message\n     processing  loop \
    \ in  the  gateway.   The  following  actions are\n     performed when a message\
    \ has been received:\n          o  Call Local Network Read Complete Routine\n\
    \          o  Start more reads\n          o  Check local Network Header\n    \
    \      o  Check Internet header\n          o  Check if datagram is for the gateway\n\
    \          o  Forward the datagram if necessary\n          o  Send ICMP error\
    \ message if necessary.\n     5.2.2  GGP Process\n          The GGP process periodically\
    \ sends GGP echos to each of  the\n     gateway's neighbors to determine neighbor\
    \ connectivity, and sends\n     interface  status  messages  addressed  to  itself\
    \  to  determine\n     network  connectivity.   The  GGP  process also sends out\
    \ routing\n     updates when necessary.  The details of the algorithms  currently\n\
    \     implemented  by  the  GGP  process  are  given  in  Section  4.4,\n    \
    \ Gateway-to-Gateway Protocol, and in Appendix C.\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     5.2.3  HMP Process\n\
    \          The  HMP  process  handles  timer-based  gateway  statistics\n    \
    \ collection and the periodic transmission of traps.\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     APPENDIX A. GGP\
    \ Message Formats\n          Note that the GGP protocol is currently undergoing\
    \ extensive\n     changes to introduce the Exterior Gateway Protocol facility;\
    \ this\n     is the vehicle needed to permit  gateways  in  other  systems  to\n\
    \     exchange  routing information with the gateways described in this\n    \
    \ document.\n          Each GGP message consists of an Internet header followed\
    \  by\n     one  of the messages explained below.  The values (in decimal) in\n\
    \     the Internet header used in a GGP message are as follows.\n     Version\
    \                  4.\n     IHL                      Internet header length in\
    \ 32-bit words.\n     Type of Service          0.\n     Total Length         \
    \    Length of Internet header  and  data  in\n                              octets.\n\
    \     ID, Flags,\n     Fragment Offset          0.\n     Time to Live        \
    \     Time to live in seconds.  This field  is\n                             \
    \ decremented   at   least  once  by  each\n                              machine\
    \ that processes the datagram.\n     Protocol                 Gateway Protocol\
    \ = 3.\n     Header Checksum          The 16 bit one's complement of the one's\n\
    \                              complement  sum  of  all 16-bit words in\n    \
    \                          the header.  For computing the checksum,\n        \
    \                      the checksum field should be zero.\n     DARPA Internet\
    \ Gateway                             September 1982\n     RFC 823\n     Source\
    \ Address           The address of the  gateway's  interface\n               \
    \               from which the message is sent.\n     Destination Address    \
    \  The address of the gateway to which  the\n                              message\
    \ is sent.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     ROUTING UPDATE\n      0                   1\n     \
    \ 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n  \
    \   !Gateway Type   !  unused (0)   !                 ; 2 bytes\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !     Sequence Number           !                 ; 2 bytes\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !  need-update  !  n-distances  !                 ; 2 bytes\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !  distance 1   !   n1-dist     !                 ; 2 bytes\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !   net11       !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ; 1, 2 or 3\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \ ;   bytes\n     !   net12       !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ; 1, 2 or\
    \ 3\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ ;   bytes\n      \
    \                               .\n                                     .\n  \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     !   net1n1      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\
    \  ; n1 nets at\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ;   dist\
    \ 1\n                                     .                      ...\n       \
    \                              .                  ; ndist groups\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \                  ;    of nets\n     !  distance n   !   nn-dist     !      \
    \            ; 2 bytes\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !   netn1       !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  ; 1, 2 or 3\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \  ;   bytes\n     !   netn2       !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  ; 1, 2 or\
    \ 3\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+  ;   bytes\n     \
    \                           .\n                                .\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     !   netnnn      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!  ; nn nets at\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\
    \  ;  dist n\n     Gateway Type             12 (decimal)\n     Sequence Number\
    \          The  16-bit  sequence  number  used   to\n                        \
    \      identify routing updates.\n     need-update              An 8-bit field.\
    \  This byte is set  to  1\n     DARPA Internet Gateway                      \
    \       September 1982\n     RFC 823\n                              if the source\
    \ gateway requests a routing\n                              update from the destination\
    \ gateway, and\n                              set to 0 if not.\n     n-distances\
    \              An   8-bit   field.    The   number   of\n                    \
    \          distance-groups reported in this update.\n                        \
    \      Each  distance-group   consists   of   a\n                            \
    \  distance  value  and  a  number of nets,\n                              followed\
    \ by the actual net numbers which\n                              are reachable\
    \ at that distance.  Not all\n                              distances need be\
    \ reported.\n     distance 1               hop count (or  other  distance  measure)\n\
    \                              which applies to this distance-group.\n     n1-dist\
    \                  number of nets  which  are  reported  in\n                \
    \              this distance-group.\n     net11                    1, 2, or 3\
    \ bytes for the  first  net  at\n                              distance \"distance\
    \ 1\".\n     net12                    second net\n     ...\n     net1n1      \
    \             etc.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     ACKNOWLEDGMENT or NEGATIVE ACKNOWLEDGMENT\n      0\
    \                   1                   2                   3\n      0 1 2 3 4\
    \ 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | Gateway Type  |  Unused       |        Sequence number        |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     Gateway\
    \ Type             Acknowledgments are  type  2.   Negative\n                \
    \              acknowledgments are type 10.\n     Sequence Number          The\
    \  16-bit  sequence  number  that  the\n                              gateway\
    \  is  acknowledging or negatively\n                              acknowledging.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n     GGP ECHO and ECHO REPLY\n      0                   1         \
    \          2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     | Gateway Type  |            Unused                             |\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     Gateway\
    \ Type             8 for echo message; 0 for echo reply.\n     Source Address\
    \           In an echo message, this is the  address\n                       \
    \       of  the  gateway  on the same network as\n                           \
    \   the neighbor to which it is sending  the\n                              echo\
    \ message.  In an echo reply message,\n                              the source\
    \ and destination addresses are\n                              simply  reversed,\
    \  and  the remainder is\n                              returned unchanged.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n     NETWORK INTERFACE STATUS\n      0                   1        \
    \           2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8\
    \ 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \     ! Gateway Type  !                  unused                       !\n    \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     Gateway\
    \ Type             9\n     Source Address\n     Destination Address      The address\
    \  of  the  gateway's  network\n                              interface.   The\
    \  gateway  can  send Net\n                              Interface Status messages\
    \ to  itself  to\n                              determine  if  it  is  able  to\
    \ send and\n                              receive   traffic   on    its    network\n\
    \                              interface.\n     DARPA Internet Gateway       \
    \                      September 1982\n     RFC 823\n     APPENDIX B. Information\
    \ Maintained by Gateways\n          In order to implement the shortest-path  routing\
    \  algorithm,\n     gateways  must  maintain  information about their connectivity\
    \ to\n     networks  and  other  gateways.   This   section   explains   the\n\
    \     information  maintained  by each gateway; this information can be\n    \
    \ organized into the following tables and variables.\n     o  Number of Networks\n\
    \          The number of  networks  for  which  the  gateway  maintains\n    \
    \      routing information and to which it can forward traffic.\n     o  Number\
    \ of Neighbors\n          The number of  neighbor  gateways  with  which  the\
    \  gateway\n          exchanges routing information.\n     o  Gateway Addresses\n\
    \          The addresses of the gateway's network interfaces.\n     o  Neighbor\
    \ Gateway Addresses\n          The address of each  neighbor  gateway's  network\
    \  interface\n          that is on the same network as this gateway.\n     o \
    \ Neighbor Connectivity Vector\n          A vector of the connectivity between\
    \ this gateway  and  each\n          of its neighbors.\n     o  Distance Matrix\n\
    \          A matrix of the routing updates received from  the  neighbor\n    \
    \      gateways.\n     DARPA Internet Gateway                             September\
    \ 1982\n     RFC 823\n     o  Minimum Distance Vector\n          A vector containing\
    \ the minimum distance to each network.\n     o  Routing Updates from Non-Routing\
    \ Gateways\n          The routing updates that would have been received from \
    \ each\n          non-routing  neighbor  gateway which does not participate in\n\
    \          this routing strategy.\n     o  Routing Table\n          A table containing,\
    \ for each network, a list of the neighbor\n          gateways on a minimum-distance\
    \ route to the network.\n     o  Send Sequence Number\n          The sequence\
    \ number that will  be  used  to  send  the  next\n          routing update.\n\
    \     o  Receive Sequence Numbers\n          The sequence numbers that the gateway\
    \ received in  the  last\n          routing update from each of its neighbors.\n\
    \     o  Received Acknowledgment Vector\n          A  vector  indicating  whether\
    \  or  not  each  neighbor  has\n          acknowledged  the sequence number in\
    \ the most recent routing\n          update sent.\n     DARPA Internet Gateway\
    \                             September 1982\n     RFC 823\n     APPENDIX C. GGP\
    \ Events and Responses\n          The following list shows the GGP  events  that\
    \  occur  at  a\n     gateway  and  the  gateway's responses.  The variables and\
    \ tables\n     referred to are listed above.\n     o  Connectivity to an attached\
    \ network changes.\n          a. Update the Minimum Distance Vector.\n       \
    \   b. Recompute the Routing Updates.\n          c. Recompute the Routing Table.\n\
    \          d. If any routing update has changed, send the  new  routing\n    \
    \         updates to the neighbors.\n     o  Connectivity to a neighbor gateway\
    \ changes.\n          a. Update the Neighbor Connectivity Vector.\n          b.\
    \ Recompute the Minimum Distance Vector.\n          c. Recompute the Routing Updates.\n\
    \          d. Recompute the Routing Table.\n          e. If any routing update\
    \ has changed, send the  new  routing\n             updates to the neighbors.\n\
    \     o  A Routing Update message is received.\n          a. Compare the Internet\
    \ source address of the Routing Update\n             message to the Neighbor Addresses.\
    \  If the address is not\n             on the list, add it to the list  of  Neighbor\
    \  Addresses,\n             increment  the  Number  of Neighbors, and set the\
    \ Receive\n             Sequence Number for this neighbor to the sequence  number\n\
    \             in the Routing Update message.\n          b. Compare the Receive\
    \ Sequence Number for this neighbor  to\n             the  sequence  number  in\
    \  the  Routing Update message to\n             determine whether or not to accept\
    \ this message.  If  the\n             message  is  rejected,  send  a  Negative\
    \  Acknowledgment\n             message.   If  the   message   is   accepted,\
    \   send   an\n             Acknowledgment  message  and  proceed  with the following\n\
    \             steps.\n     DARPA Internet Gateway                            \
    \ September 1982\n     RFC 823\n          c. Compare the  networks  reported \
    \ in  the  Routing  Update\n             message  to  the Number of Networks.\
    \  If new networks are\n             reported, enter them in the network vectors,\
    \ increase the\n             number  of  networks,  and  expand the Distance Matrix\
    \ to\n             account for the new networks.\n          d. Copy the routing\
    \ update received into the appropriate row\n             of the Distance Matrix.\n\
    \          e. Recompute the Minimum Distance Vector.\n          f. Recompute the\
    \ Routing Updates.\n          g. Recompute the Routing Table.\n          h. If\
    \ any routing update has changed, send the  new  routing\n             updates\
    \ to the neighbors.\n     o  An Acknowledgment message is received.\n        \
    \     Compare the sequence number in the message  to  the  Send\n            \
    \ Sequence   Number.    If  the  Send  Sequence  Number  is\n             acknowledged,\
    \  update   the   entry   in   the   Received\n             Acknowledgment  Vector\
    \  for  the  neighbor  that sent the\n             acknowledgment.\n     o  A\
    \ Negative Acknowledgment message is received.\n             Compare the sequence\
    \ number in the message  to  the  Send\n             Sequence Number.  If necessary,\
    \ replace the Send Sequence\n             Number, and retransmit the routing updates.\n\
    \     DARPA Internet Gateway                             September 1982\n    \
    \ RFC 823\n     REFERENCES\n     [1]  Postel,  J.  (ed.),  \"Internet  Protocol\
    \  -  DARPA  Internet\n          Program  Protocol  Specification,\"  RFC 791,\
    \ USC/Information\n          Sciences Institute, September 1981.\n     [2]  Strazisar,\
    \  V.,   \"Gateway   Routing:    An   Implementation\n          Specification,\"\
    \ IEN-30, Bolt Beranek and Newman Inc., August\n          1979.\n     [3]  Strazisar,\
    \ V., \"How  to  Build  a  Gateway,\"  IEN-109,  Bolt\n          Beranek and Newman\
    \ Inc., August 1979.\n     [4]  Postel, J.,  \"Internet  Control  Message  Protocol\
    \  -  DARPA\n          Internet   Program   Protocol   Specification,\"   RFC\
    \   792,\n          USC/Information Sciences Institute, September 1981.\n    \
    \ [5]  Postel, J., \"Assigned  Numbers,\"  RFC  790,  USC/Information\n      \
    \    Sciences Institute, September 1981.\n     [6]  Littauer, B., Huang, A., \
    \ Hinden,  R.,  \"A  Host  Monitoring\n          Protocol,\"  IEN-197, Bolt Beranek\
    \ and Newman Inc., September\n          1981.\n     [7]  Santos,  P.,  Chalstrom,\
    \   H.,   Linn,   J.,   Herman,   J.,\n          \"Architecture   of   a   Network\
    \   Monitoring,  Control  and\n          Management System,\" Proc. of  the  5th\
    \  Int.  Conference  on\n          Computer Communication, October 1980.\n   \
    \  [8]  Haverty, J., \"XNET Formats for Internet Protocol Version 4,\"\n     \
    \     IEN-158, Bolt Beranek and Newman Inc., October 1980.\n     [9]  Mathis,\
    \ J., Klemba, K., Poggio,  \"TIU  Notebook-  Volume  2,\n          Software Documentation,\"\
    \ SRI, May 1979.\n     [10] Rosen,  E.,  \"Exterior  Gateway  Protocol,\"  IEN-209,\
    \   Bolt\n          Beranek and Newman Inc., August 1982.\n"
