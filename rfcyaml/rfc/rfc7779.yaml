- title: __initial_text__
  contents:
  - "    Directional Airtime Metric Based on Packet Sequence Numbers for\n       \
    \     Optimized Link State Routing Version 2 (OLSRv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies a Directional Airtime (DAT) link metric\
    \ for\n   usage in Optimized Link State Routing version 2 (OLSRv2).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for examination, experimental implementation, and\n   evaluation.\n\
    \   This document defines an Experimental Protocol for the Internet\n   community.\
    \  This document is a product of the Internet Engineering\n   Task Force (IETF).\
    \  It represents the consensus of the IETF\n   community.  It has received public\
    \ review and has been approved for\n   publication by the Internet Engineering\
    \ Steering Group (IESG).  Not\n   all documents approved by the IESG are a candidate\
    \ for any level of\n   Internet Standard; see Section 2 of RFC 5741.\n   Information\
    \ about the current status of this document, any errata,\n   and how to provide\
    \ feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7779.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Applicability Statement . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Directional Airtime Metric Rationale  . . . . . . . . . .\
    \ . .   5\n   5.  Metric Functioning and Overview . . . . . . . . . . . . . .\
    \ .   6\n   6.  Protocol Constants  . . . . . . . . . . . . . . . . . . . . .\
    \   7\n   7.  Protocol Parameters . . . . . . . . . . . . . . . . . . . . .  \
    \ 8\n     7.1.  Recommended Values  . . . . . . . . . . . . . . . . . . .   8\n\
    \   8.  Data Structures . . . . . . . . . . . . . . . . . . . . . . .   8\n  \
    \   8.1.  Initial Values  . . . . . . . . . . . . . . . . . . . . .   9\n   9.\
    \  Packets and Messages  . . . . . . . . . . . . . . . . . . . .  10\n     9.1.\
    \  Definitions . . . . . . . . . . . . . . . . . . . . . . .  10\n     9.2.  Requirements\
    \ for Using DAT Metric in OLSRv2\n           Implementations . . . . . . . . .\
    \ . . . . . . . . . . . .  10\n     9.3.  Link-Loss Data Gathering  . . . . .\
    \ . . . . . . . . . . .  11\n     9.4.  HELLO Message Processing  . . . . . .\
    \ . . . . . . . . . .  12\n   10. Timer Event Handling  . . . . . . . . . . .\
    \ . . . . . . . . .  12\n     10.1.  Packet Timeout Processing  . . . . . . .\
    \ . . . . . . . .  12\n     10.2.  Metric Update  . . . . . . . . . . . . . .\
    \ . . . . . . .  13\n   11. Security Considerations . . . . . . . . . . . . .\
    \ . . . . . .  14\n   12. References  . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  14\n     12.1.  Normative References . . . . . . . . . . . . . .\
    \ . . . .  14\n     12.2.  Informative References . . . . . . . . . . . . . .\
    \ . . .  15\n   Appendix A.  Future Work  . . . . . . . . . . . . . . . . . .\
    \ . .  17\n   Appendix B.  OLSR.org Metric History  . . . . . . . . . . . . .\
    \ .  17\n   Appendix C.  Link-Speed Stabilization . . . . . . . . . . . . . .\
    \  18\n   Appendix D.  Packet-Loss Hysteresis . . . . . . . . . . . . . . .  19\n\
    \   Appendix E.  Example DAT Values . . . . . . . . . . . . . . . . .  19\n  \
    \ Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . .  20\n   Authors'\
    \ Addresses  . . . . . . . . . . . . . . . . . . . . . . .  21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   One of the major shortcomings of Optimized Link State Routing\
    \ (OLSR)\n   [RFC3626] is the lack of a granular link-cost metric between OLSR\n\
    \   routers.  Operational experience with OLSR networks gathered since\n   its\
    \ publication has revealed that wireless networks links can have\n   highly variable\
    \ and heterogeneous properties.  This makes a hop-count\n   metric insufficient\
    \ for effective OLSR routing.\n   Based on this experience, OLSRv2 [RFC7181] integrates\
    \ the concept of\n   link metrics directly into the core specification of the\
    \ routing\n   protocol.  The OLSRv2 routing metric is an external process, and\
    \ it\n   can be any kind of dimensionless additive cost function that reports\n\
    \   to the OLSRv2 protocol.\n   Since 2004, the OLSR.org [OLSR.org] implementation\
    \ of OLSR has\n   included an Estimated Transmission Count (ETX) metric [MOBICOM04]\
    \ as\n   a proprietary extension.  While this metric is not perfect, it proved\n\
    \   to be sufficient for a long time for Community Mesh Networks (see\n   Appendix\
    \ B).  But the increasing maximum data rate of IEEE 802.11\n   made the ETX metric\
    \ less efficient than in the past, which is one\n   reason to move to a different\
    \ metric.\n   This document describes a Directional Airtime routing metric for\n\
    \   OLSRv2, a successor of the OLSR.org ETX-derived routing metric for\n   OLSR.\
    \  It takes both the loss rate and the link speed into account to\n   provide\
    \ a more accurate picture of the links within the network.\n   This specification\
    \ allows OLSRv2 deployments with a metric defined by\n   the IETF Mobile Ad Hoc\
    \ Networks (MANET) working group.  It enables\n   easier interoperability testing\
    \ between implementations and targets\n   to deliver a useful baseline to compare\
    \ with, for experiments with\n   this metric as well as other metrics.  Appendix\
    \ A contains a few\n   possible steps to improve the Directional Airtime metric.\
    \  Future\n   experiments should also determine whether the DAT metric can be\n\
    \   useful for other IETF protocols, both inside and outside of the MANET\n  \
    \ working group.  This could lead to either moving this document to the\n   Standards\
    \ Track or replacing it with an improved document.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n\
    \   The terminology introduced in [RFC5444], [RFC7181], and [RFC6130],\n   including\
    \ the terms \"packet\", \"message\" and \"TLV\", are to be\n   interpreted as\
    \ described therein.\n   Additionally, this document uses the following terminology\
    \ and\n   notational conventions:\n   DAT -  Directional Airtime (metric).  The\
    \ link metric specified in\n      this document, which is a directional variant\
    \ of ETT.  It does not\n      take reverse path loss into account.\n   QUEUE -\
    \  A first in, first out queue of integers.\n   QUEUE[TAIL] -  The most recent\
    \ element in the queue.\n   add(QUEUE, value) -  Adds a new element to the TAIL\
    \ of the queue.\n   remove(QUEUE) -  Removes the HEAD element of the queue.\n\
    \   sum(QUEUE) -  An operation that returns the sum of all elements in a\n   \
    \   QUEUE.\n   diff_seqno(new, old) -  An operation that returns the positive\n\
    \      distance between two elements of the circular sequence number\n      space\
    \ defined in Section 5.1 of [RFC5444].  Its value is either\n      (new - old)\
    \ if this result is positive, or else its value is\n      (new - old + 65536).\n\
    \   MAX(a, b) -  The maximum of a and b.\n   MIN(a, b) -  The minimum of a and\
    \ b.\n   UNDEFINED -  A value not in the normal value range of a variable.\n \
    \  airtime -  The time a transmitted packet blocks the link layer, e.g.,\n   \
    \   a wireless link.\n   ETX -  Expected Transmission Count.  A link metric proportional\
    \ to\n      the number of transmissions to successfully send an IP packet over\n\
    \      a link.\n   ETT -  Estimated Travel Time.  A link metric proportional to\
    \ the\n      amount of airtime needed to successfully transmit an IP packet\n\
    \      over a link, not considering Layer 2 overhead created by preamble,\n  \
    \    backoff time, and queuing.\n"
- title: 3.  Applicability Statement
  contents:
  - "3.  Applicability Statement\n   The Directional Airtime metric was designed and\
    \ tested (see\n   [COMNET15]) in wireless IEEE 802.11 OLSRv2 networks [RFC7181].\
    \  These\n   networks employ link-layer retransmission to increase the delivery\n\
    \   probability.  A dynamic rate selection algorithm selects the unicast\n   data\
    \ rate independently for each neighbor.\n   As specified in OLSRv2, the metric\
    \ calculates only the incoming link\n   cost.  It neither calculates the outgoing\
    \ metric, nor decides the\n   link status (heard, symmetric, lost).\n   The metric\
    \ works both for nodes that can send/receive [RFC5444]\n   packet sequence numbers\
    \ and those that do not have this capability.\n   In the absence of such sequence\
    \ numbers, the metric calculates the\n   packet loss based on HELLO message [RFC6130]\
    \ timeouts.\n   The metric must learn about the unicast data rate towards each\
    \ one-\n   hop neighbor from an external process, either by configuration or by\n\
    \   an external measurement process.  This measurement could be done via\n   gathering\
    \ cross-layer data from the operating system, via an external\n   daemon like\
    \ Dynamic Link Exchange Protocol [DLEP], or via indirect\n   Layer 3 measurements\
    \ like packet-pair (see [MOBICOM04]).\n   The metric uses [RFC5444] multicast\
    \ control traffic to determine the\n   link packet loss.  The administrator should\
    \ take care that link-layer\n   multicast transmission do not have a higher reception\
    \ probability\n   than the slowest unicast transmission without retransmission.\
    \  For\n   example, with 802.11g, it might be necessary to increase the data-\n\
    \   rate of the multicast transmissions, e.g., set the multicast data-\n   rate\
    \ to 6 Mbit/s.\n   The metric can only handle a certain range of packet loss and\
    \ unicast\n   data-rate.  The maximum packet loss that can be encoded into the\n\
    \   metric is a loss of 7 of 8 packets (87.5%), without link-layer\n   retransmissions.\
    \  The unicast data-rate that can be encoded by this\n   metric can be between\
    \ 1 kbit/s and 2 Gbit/s.  This metric has been\n   designed for data-rates of\
    \ 1 Mbit/s and hundreds of Mbit/s.\n"
- title: 4.  Directional Airtime Metric Rationale
  contents:
  - "4.  Directional Airtime Metric Rationale\n   The Directional Airtime metric has\
    \ been inspired by the publications\n   on the ETX [MOBICOM03] and ETT [MOBICOM04]\
    \ metric, but differs from\n   both of these in several ways.\n   Instead of measuring\
    \ the combined loss probability of a bidirectional\n   transmission of a packet\
    \ over a link in both directions, the\n   Directional Airtime metric measures\
    \ the incoming loss rate and\n   integrates the incoming link speed into the metric\
    \ cost.  There are\n   multiple reasons for this decision:\n   o  OLSRv2 [RFC7181]\
    \ defines the link metric as directional costs\n      between routers.\n   o \
    \ Not all link-layer implementations use acknowledgement mechanisms.\n      Most\
    \ link-layer implementations that do use them use less airtime\n      and a more\
    \ robust modulation for the acknowledgement than the data\n      transmission,\
    \ which makes it more likely for the data transmission\n      to be disrupted\
    \ compared to the acknowledgement.\n   o  Incoming packet loss and link speed\
    \ can be measured locally, while\n      symmetric link loss would need an additional\
    \ signaling TLV in the\n      HELLO [RFC6130] and would delay metric calculation\
    \ by up to one\n      HELLO interval.\n   The Directional Airtime metric does\
    \ not integrate the packet size\n   into the link cost.  Doing so is not feasible\
    \ in most link-state\n   routing protocol implementations.  The routing decision\
    \ of most\n   operation systems does not take packet size into account.\n   Multiplying\
    \ all link costs of a topology with the size of a data-\n   plane packet would\
    \ never change the Dijkstra result in any way.\n   The queue-based packet-loss\
    \ estimator specified in this document has\n   been tested extensively in the\
    \ OLSR.org ETX implementation; see\n   Appendix B.  The output is the average\
    \ of the packet loss over a\n   configured time period.\n   The metric normally\
    \ measures the loss of a link by tracking the\n   incoming [RFC5444] packet sequence\
    \ numbers.  Without these packet\n   sequence numbers, the metric does calculate\
    \ the loss of the link\n   based on the received and lost [RFC6130] HELLO messages.\
    \  It uses the\n   incoming HELLO interval time (or if not present, the validity\
    \ time)\n   to decide when a HELLO is lost.\n   When a neighbor router resets,\
    \ its packet sequence number might jump\n   to a random value.  The metric tries\
    \ to detect jumps in the packet\n   sequence number and removes them from the\
    \ data set because the\n   previously gathered link-loss data should still be\
    \ valid (see\n   Section 9.3).  The link-loss data is only removed from memory\
    \ when a\n   link times out completely and its Link Set Tuple is removed from\
    \ the\n   database.\n"
- title: 5.  Metric Functioning and Overview
  contents:
  - "5.  Metric Functioning and Overview\n   The Directional Airtime metric is calculated\
    \ for each Link Set entry,\n   as defined in [RFC6130], Section 7.1.\n   The metric\
    \ processes two kinds of data into the metric value, namely\n   packet-loss rate\
    \ and link speed.  The link speed is taken from an\n   external process not defined\
    \ in this document.  The current packet-\n   loss rate is defined in this document\
    \ by keeping track of packet\n   reception and packet-loss events.  It could also\
    \ be calculated by an\n   external process with a compatible output.\n   Multiple\
    \ incoming packet-loss/reception events must be combined into\n   a loss rate\
    \ to get a smooth metric.  Experiments with exponential\n   weighted moving average\
    \ (EWMA) lead to a highly fluctuating or a slow\n   converging metric (or both).\
    \  To get a smoother and more controllable\n   metric result, this metric uses\
    \ two fixed-length queues to measure\n   and average the incoming packet events,\
    \ one queue for received\n   packets and one for the estimated number of packets\
    \ sent by the other\n   side of the link.\n   Because the rate of incoming packets\
    \ is not uniform over time, the\n   queue contains a number of counters, each\
    \ representing a fixed time\n   interval.  Incoming packet-loss and packet-reception\
    \ events are\n   accumulated in the current queue element until a timer adds a\
    \ new\n   empty counter to both queues and removes the oldest counter from\n \
    \  both.\n   In addition to the packet loss stored in the queue, this metric uses\n\
    \   a timer to detect a total link loss.  For every [RFC6130] HELLO\n   interval\
    \ in which the metric received no packet from a neighbor, it\n   scales the number\
    \ of received packets in the queue based on the total\n   time interval the queue\
    \ represents compared to the total time of the\n   lost HELLO intervals.\n   The\
    \ average packet-loss ratio is calculated as the sum of the 'total\n   packets'\
    \ counters divided by the sum of the 'packets received'\n   counters.  This value\
    \ is then divided through the current link speed\n   and then scaled into the\
    \ range of metrics allowed for OLSRv2.\n   The metric value is then used as L_in_metric\
    \ of the Link Set (as\n   defined in Section 8.1. of [RFC7181]).\n   While this\
    \ document does not add new [RFC5444] elements to HELLO\n   [RFC6130] or TC messages\
    \ [RFC7181], it works best when both the\n   INTERVAL_TIME message TLV is present\
    \ in the HELLO messages and when\n   each [RFC5444] packet contains an interface-specific\
    \ sequence number.\n   It also adds a number of new data entries to be stored\
    \ for each\n   [RFC6130] link.\n"
- title: 6.  Protocol Constants
  contents:
  - "6.  Protocol Constants\n   This specification defines the following constants,\
    \ which define the\n   range of metric values that can be encoded by the DAT metric\
    \ (see\n   Table 1).  They cannot be changed without making the metric outputs\n\
    \   incomparable and should only be changed for a MANET with a very slow\n   or\
    \ a very fast link layer.  See Appendix E for example metric values.\n   DAT_MAXIMUM_LOSS\
    \ -  Fraction of the loss rate used in this routing\n      metric.  Loss rate\
    \ will be between 0/DAT_MAXIMUM_LOSS and\n      (DAT_MAXIMUM_LOSS-1)/DAT_MAXIMUM_LOSS.\n\
    \   DAT_MINIMUM_BITRATE -  Minimal bitrate in Bit/s used by this routing\n   \
    \   metric.\n                      +---------------------+-------+\n         \
    \             |         Name        | Value |\n                      +---------------------+-------+\n\
    \                      |   DAT_MAXIMUM_LOSS  |   8   |\n                     \
    \ |                     |       |\n                      | DAT_MINIMUM_BITRATE\
    \ |  1000 |\n                      +---------------------+-------+\n         \
    \             Table 1: DAT Protocol Constants\n"
- title: 7.  Protocol Parameters
  contents:
  - "7.  Protocol Parameters\n   This specification defines the following parameters\
    \ for this routing\n   metric.  These parameters are:\n   DAT_MEMORY_LENGTH -\
    \  Queue length for averaging packet loss.  All\n      received and lost packets\
    \ within the queue length are used to\n      calculate the cost of the link.\n\
    \   DAT_REFRESH_INTERVAL -  Interval in seconds between two metric\n      recalculations\
    \ as described in Section 10.2.  This value SHOULD be\n      smaller than a typical\
    \ HELLO interval.  The interval can be a\n      fraction of a second.\n   DAT_HELLO_TIMEOUT_FACTOR\
    \ -  Multiplier relative to the HELLO_INTERVAL\n      (see Section 5.3.1 of [RFC6130])\
    \ after which the DAT metric\n      considers a HELLO as lost.\n   DAT_SEQNO_RESTART_DETECTION\
    \ -  Threshold in the number of missing\n      packets (based on received packet\
    \ sequence numbers) at which point\n      the router considers the neighbor has\
    \ restarted.  This parameter\n      is only used for loss estimation based on\
    \ packet sequence numbers.\n      This number MUST be larger than DAT_MAXIMUM_LOSS.\n"
- title: 7.1.  Recommended Values
  contents:
  - "7.1.  Recommended Values\n   The proposed values of the protocol parameters are\
    \ for Community Mesh\n   Networks, which mostly use routers that are not mobile.\
    \  Using this\n   metric for mobile networks might require shorter DAT_REFRESH_INTERVAL\n\
    \   and/or DAT_MEMORY_LENGTH.\n   DAT_MEMORY_LENGTH  := 64\n   DAT_REFRESH_INTERVAL\
    \  := 1\n   DAT_HELLO_TIMEOUT_FACTOR  := 1.2\n   DAT_SEQNO_RESTART_DETECTION \
    \ := 256\n"
- title: 8.  Data Structures
  contents:
  - "8.  Data Structures\n   This specification extends the Link Set of the Interface\
    \ Information\n   Base, as defined in Section 7.1 of [RFC6130], by the adding\
    \ the\n   following elements to each Link Tuple:\n   L_DAT_received -  A QUEUE\
    \ with DAT_MEMORY_LENGTH integer elements.\n      Each entry contains the number\
    \ of successfully received packets\n      within an interval of DAT_REFRESH_INTERVAL.\n\
    \   L_DAT_total -  A QUEUE with DAT_MEMORY_LENGTH integer elements.  Each\n  \
    \    entry contains the estimated number of packets transmitted by the\n     \
    \ neighbor, based on the received packet sequence numbers within an\n      interval\
    \ of DAT_REFRESH_INTERVAL.\n   L_DAT_packet_time -  The time when the next [RFC5444]\
    \ packet should\n      have arrived.\n   L_DAT_hello_interval -  The interval\
    \ between two HELLO messages of\n      the links neighbor as signaled by the INTERVAL_TIME\
    \ TLV [RFC5497]\n      of NHDP messages [RFC6130].\n   L_DAT_lost_packet_intervals\
    \ -  The estimated number of HELLO\n      intervals from this neighbor from which\
    \ the metric has not\n      received a single packet.\n   L_DAT_rx_bitrate - \
    \ The current bitrate of incoming unicast traffic\n      for this neighbor.\n\
    \   L_DAT_last_pkt_seqno -  The last received packet sequence number\n      received\
    \ from this link.\n   Methods to obtain the value of L_DAT_rx_bitrate are out\
    \ of the scope\n   of this specification.  Such methods may include static configuration\n\
    \   via a configuration file or dynamic measurement through mechanisms\n   described\
    \ in a separate specification (e.g., [DLEP]).  Any Link Tuple\n   with L_status\
    \ = HEARD or L_status = SYMMETRIC MUST have a specified\n   value of L_DAT_rx_bitrate\
    \ if it is to be used by this routing metric.\n   The incoming bitrate value should\
    \ be stabilized by a hysteresis\n   filter to improve the stability of this metric.\
    \  See Appendix D for\n   an example.\n   This specification updates the L_in_metric\
    \ field of the Link Set of\n   the Interface Information Base, as defined in Section\
    \ 8.1. of\n   [RFC7181]).\n"
- title: 8.1.  Initial Values
  contents:
  - "8.1.  Initial Values\n   When generating a new tuple in the Link Set, as defined\
    \ in item 3 of\n   Section 12.5 of [RFC6130], the values of the elements specified\
    \ in\n   Section 8 are set as follows:\n   o  L_DAT_received := 0, ..., 0.  The\
    \ queue always has\n      DAT_MEMORY_LENGTH elements.\n   o  L_DAT_total := 0,\
    \ ..., 0.  The queue always has DAT_MEMORY_LENGTH\n      elements.\n   o  L_DAT_packet_time\
    \ := EXPIRED (no earlier [RFC5444] packet\n      received).\n   o  L_DAT_hello_interval\
    \ := UNDEFINED (no earlier NHDP HELLO\n      received).\n   o  L_DAT_lost_packet_intervals\
    \ := 0 (no HELLO interval without\n      packets).\n   o  L_DAT_last_pkt_seqno\
    \ := UNDEFINED (no earlier [RFC5444] packet\n      with sequence number received).\n"
- title: 9.  Packets and Messages
  contents:
  - "9.  Packets and Messages\n   This section describes the necessary changes of\
    \ [RFC7181]\n   implementations with DAT metric for the processing and modification\n\
    \   of the incoming and outgoing [RFC5444] data.\n"
- title: 9.1.  Definitions
  contents:
  - "9.1.  Definitions\n   For the purpose of this section, note the following definitions:\n\
    \   o  \"pkt_seqno\" is defined as the [RFC5444] packet sequence number of\n \
    \     the received packet.\n   o  \"interval_time\" is the time encoded in the\
    \ INTERVAL_TIME message\n      TLV of a received HELLO message [RFC6130].\n  \
    \ o  \"validity_time\" is the time encoded in the VALIDITY_TIME message\n    \
    \  TLV of a received HELLO message [RFC6130].\n"
- title: 9.2.  Requirements for Using DAT Metric in OLSRv2 Implementations
  contents:
  - "9.2.  Requirements for Using DAT Metric in OLSRv2 Implementations\n   An implementation\
    \ of OLSRv2 using the metric specified by this\n   document SHOULD include the\
    \ following parts into its [RFC5444]\n   output:\n   o  An INTERVAL_TIME message\
    \ TLV in each HELLO message, as defined in\n      [RFC6130], Section 4.3.2.\n\
    \   o  An interface-specific packet sequence number as defined in\n      [RFC5444],\
    \ Section 5.1 that is incremented by 1 for each outgoing\n      [RFC5444] packet\
    \ on the interface.\n   An implementation of OLSRv2 using the metric specified\
    \ by this\n   document that inserts packet sequence numbers in some, but not all,\n\
    \   outgoing [RFC5444] packets will make this metric ignore all packets\n   without\
    \ the sequence number.  Putting the INTERVAL_TIME TLV into\n   some, but not all,\
    \ HELLO messages will make the timeout-based loss\n   detection slower.  This\
    \ will only matter in the absence of packet\n   sequence numbers.\n"
- title: 9.3.  Link-Loss Data Gathering
  contents:
  - "9.3.  Link-Loss Data Gathering\n   For each incoming [RFC5444] packet, additional\
    \ processing SHOULD be\n   carried out after the packet messages have been processed\
    \ as\n   specified in [RFC6130] and [RFC7181] as described in this section.\n\
    \   [RFC5444] packets without packet sequence numbers MUST NOT be\n   processed\
    \ in the way described in this section.\n   The router updates the Link Set Tuple\
    \ corresponding to the originator\n   of the packet:\n   1.  If L_DAT_last_pkt_seqno\
    \ = UNDEFINED, then:\n       *  L_DAT_received[TAIL] := 1.\n       *  L_DAT_total[TAIL]\
    \ := 1.\n   2.  Otherwise:\n       *  L_DAT_received[TAIL] := L_DAT_received[TAIL]\
    \ + 1.\n       *  diff := diff_seqno(pkt_seqno, L_DAT_last_pkt_seqno).\n     \
    \  *  If diff > DAT_SEQNO_RESTART_DETECTION, then:\n             diff := 1.\n\
    \       *  L_DAT_total[TAIL] := L_DAT_total[TAIL] + diff.\n   3.  L_DAT_last_pkt_seqno\
    \ := pkt_seqno.\n   4.  If L_DAT_hello_interval != UNDEFINED, then:\n       *\
    \  L_DAT_packet_time := current time + (L_DAT_hello_interval *\n          DAT_HELLO_TIMEOUT_FACTOR).\n\
    \   5.  L_DAT_lost_packet_intervals := 0.\n"
- title: 9.4.  HELLO Message Processing
  contents:
  - "9.4.  HELLO Message Processing\n   For each incoming HELLO Message, after it\
    \ has been processed as\n   defined in Section 12 of [RFC6130], the Link Set Tuple\
    \ corresponding\n   to the incoming HELLO message MUST be updated.\n   1.  If\
    \ the HELLO message contains an INTERVAL_TIME message TLV, then:\n          L_DAT_hello_interval\
    \ := interval_time.\n   2.  Otherwise:\n          L_DAT_hello_interval := validity_time.\n\
    \   3.  If L_DAT_last_pkt_seqno = UNDEFINED, then:\n       *  L_DAT_received[TAIL]\
    \ := L_DAT_received[TAIL] + 1.\n       *  L_DAT_total[TAIL] := L_DAT_total[TAIL]\
    \ + 1.\n       *  L_DAT_packet_time := current time + (L_DAT_hello_interval *\n\
    \          DAT_HELLO_TIMEOUT_FACTOR).\n"
- title: 10.  Timer Event Handling
  contents:
  - "10.  Timer Event Handling\n   In addition to changes in the [RFC5444] processing/generation\
    \ code,\n   the DAT metric also uses two timer events.\n"
- title: 10.1.  Packet Timeout Processing
  contents:
  - "10.1.  Packet Timeout Processing\n   When L_DAT_packet_time has timed out, the\
    \ following step MUST be\n   done:\n   1.  If L_DAT_last_pkt_seqno = UNDEFINED,\
    \ then:\n          L_DAT_total[TAIL] := L_DAT_total[TAIL] + 1.\n   2.  Otherwise:\n\
    \          L_DAT_lost_packet_intervals := L_DAT_lost_packet_intervals +\n    \
    \      1.\n   3.  L_DAT_packet_time := L_DAT_packet_time + L_DAT_hello_interval.\n"
- title: 10.2.  Metric Update
  contents:
  - "10.2.  Metric Update\n   Once every DAT_REFRESH_INTERVAL, all L_in_metric values\
    \ in all Link\n   Set entries MUST be recalculated:\n   1.  sum_received := sum(L_DAT_received).\n\
    \   2.  sum_total := sum(L_DAT_total).\n   3.  If L_DAT_hello_interval != UNDEFINED\
    \ and\n       L_DAT_lost_packet_intervals > 0, then:\n       *  lost_time_proportion\
    \ := L_DAT_hello_interval *\n          L_DAT_lost_packet_intervals / DAT_MEMORY_LENGTH.\n\
    \       *  sum_received := sum_received *\n          MAX(0, 1 - lost_time_proportion);\n\
    \   4.  If sum_received < 1, then:\n          L_in_metric := MAXIMUM_METRIC, as\
    \ defined in [RFC7181],\n          Section 5.6.1.\n   5.  Otherwise:\n       *\
    \  loss := MIN(sum_total / sum_received, DAT_MAXIMUM_LOSS).\n       *  bitrate\
    \ := MAX(L_DAT_rx_bitrate, DAT_MINIMUM_BITRATE).\n       *  L_in_metric := (2^24\
    \ / DAT_MAXIMUM_LOSS) * loss / (bitrate /\n          DAT_MINIMUM_BITRATE).\n \
    \  6.  remove(L_DAT_total)\n   7.  add(L_DAT_total, 0)\n   8.  remove(L_DAT_received)\n\
    \   9.  add(L_DAT_received, 0)\n   The calculated L_in_metric value should be\
    \ stabilized by a hysteresis\n   function.  See Appendix D for an example.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   Artificial manipulation of metrics values can\
    \ drastically alter\n   network performance.  In particular, advertising a higher\
    \ L_in_metric\n   value may decrease the amount of incoming traffic, while advertising\n\
    \   lower L_in_metric may increase the amount of incoming traffic.\n   For example,\
    \ by artificially attracting mesh routes and then dropping\n   the incoming traffic,\
    \ an attacker may achieve a Denial of Service\n   (DoS) against other mesh nodes.\
    \  Similarly, an attacker may achieve\n   Man-in-the-Middle (MITM) attacks or\
    \ traffic analysis by concentrating\n   traffic being routed over a node the attacker\
    \ controls (and end-to-\n   end encryption is not used or somehow broken).  Protection\
    \ mechanisms\n   against such MITM or DoS attacks are nevertheless out of scope\
    \ of\n   this document.\n   Security threats also include potential attacks on\
    \ the integrity of\n   the control traffic passively monitored by DAT to measure\
    \ link\n   quality.  For example, an attacker might inject packets pretending\
    \ to\n   be somebody else and using incorrect sequence numbers.  This attack\n\
    \   can be prevented by the true originator of the [RFC5444] packets by\n   adding\
    \ an ICV Packet TLV and TIMESTAMP Packet TLV [RFC7182] to each\n   packet.  This\
    \ allows the receiver to drop all incoming packets that\n   have a forged packet\
    \ source, both packets generated by the attacker,\n   or replayed packets.  However,\
    \ the security mechanism described in\n   [RFC7183] does not protect the sequence\
    \ number used by the DAT metric\n   because it only signs the [RFC5444] messages,\
    \ not the [RFC5444]\n   packet header (which contains the [RFC5444] packet sequence\
    \ number).\n"
- title: 12.  References
  contents:
  - '12.  References

    '
- title: 12.1.  Normative References
  contents:
  - "12.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC5444]  Clausen, T., Dearlove, C., Dean, J., and C. Adjih,\n          \
    \    \"Generalized Mobile Ad Hoc Network (MANET) Packet/Message\n            \
    \  Format\", RFC 5444, DOI 10.17487/RFC5444, February 2009,\n              <http://www.rfc-editor.org/info/rfc5444>.\n\
    \   [RFC5497]  Clausen, T. and C. Dearlove, \"Representing Multi-Value\n     \
    \         Time in Mobile Ad Hoc Networks (MANETs)\", RFC 5497,\n             \
    \ DOI 10.17487/RFC5497, March 2009,\n              <http://www.rfc-editor.org/info/rfc5497>.\n\
    \   [RFC6130]  Clausen, T., Dearlove, C., and J. Dean, \"Mobile Ad Hoc\n     \
    \         Network (MANET) Neighborhood Discovery Protocol (NHDP)\",\n        \
    \      RFC 6130, DOI 10.17487/RFC6130, April 2011,\n              <http://www.rfc-editor.org/info/rfc6130>.\n\
    \   [RFC7181]  Clausen, T., Dearlove, C., Jacquet, P., and U. Herberg,\n     \
    \         \"The Optimized Link State Routing Protocol Version 2\",\n         \
    \     RFC 7181, DOI 10.17487/RFC7181, April 2014,\n              <http://www.rfc-editor.org/info/rfc7181>.\n"
- title: 12.2.  Informative References
  contents:
  - "12.2.  Informative References\n   [RFC3626]  Clausen, T., Ed. and P. Jacquet,\
    \ Ed., \"Optimized Link\n              State Routing Protocol (OLSR)\", RFC 3626,\n\
    \              DOI 10.17487/RFC3626, October 2003,\n              <http://www.rfc-editor.org/info/rfc3626>.\n\
    \   [RFC7182]  Herberg, U., Clausen, T., and C. Dearlove, \"Integrity\n      \
    \        Check Value and Timestamp TLV Definitions for Mobile Ad\n           \
    \   Hoc Networks (MANETs)\", RFC 7182, DOI 10.17487/RFC7182,\n              April\
    \ 2014, <http://www.rfc-editor.org/info/rfc7182>.\n   [RFC7183]  Herberg, U.,\
    \ Dearlove, C., and T. Clausen, \"Integrity\n              Protection for the\
    \ Neighborhood Discovery Protocol (NHDP)\n              and Optimized Link State\
    \ Routing Protocol Version 2\n              (OLSRv2)\", RFC 7183, DOI 10.17487/RFC7183,\
    \ April 2014,\n              <http://www.rfc-editor.org/info/rfc7183>.\n   [COMNET15]\
    \ Barz, C., Fuchs, C., Kirchhoff, J., Niewiejska, J., and H.\n              Rogge,\
    \ \"OLSRv2 for Community Networks: Using Directional\n              Airtime Metric\
    \ with external radios\", Elsevier Computer\n              Networks 2015, DOI\
    \ 10.1016/j.comnet.2015.09.022, September\n              2015, <http://dx.doi.org/10.1016/j.comnet.2015.09.022>.\n\
    \   [CONFINE]  \"Community Networks Testbed for the Future Internet\n        \
    \      (CONFINE)\", <http://www.confine-project.eu>.\n   [DLEP]     Ratliff, S.,\
    \ Berry, B., Jury, S., Satterwhite, D., and R.\n              Taylor, \"Dynamic\
    \ Link Exchange Protocol (DLEP)\", Work in\n              Progress, draft-ietf-manet-dlep-22,\
    \ April 2016.\n   [BATMAN]   Neumann, A., Aichele, C., Lindner, M., and S. Wunderlich,\n\
    \              \"Better Approach To Mobile Ad-hoc Networking\n              (B.A.T.M.A.N.)\"\
    , Work in Progress, draft-wunderlich-\n              openmesh-manet-routing-00,\
    \ April 2008.\n   [MOBICOM03]\n              De Couto, D., Aguayo, D., Bicket,\
    \ J., and R. Morris, \"A\n              High-Throughput Path Metric for Multi-Hop\
    \ Wireless\n              Routing\", Proceedings of the MOBICOM Conference,\n\
    \              DOI 10.1145/938985.939000, 2003.\n   [MOBICOM04]\n            \
    \  Draves, R., Padhye, J., and B. Zill, \"Routing in Multi-\n              Radio,\
    \ Multi-Hop Wireless Mesh Networks\", Proceedings of\n              the MOBICOM\
    \ Conference, DOI 10.1145/1023720.1023732, 2004.\n   [OLSR.org] \"OLSR.org Wiki\"\
    , <http://www.olsr.org/>.\n   [FREIFUNK] \"Freifunk Wireless Community Networks\"\
    ,\n              <http://www.freifunk.net>.\n   [FUNKFEUER]\n              \"\
    Austria Wireless Community Network\",\n              <http://www.funkfeuer.at>.\n"
- title: Appendix A.  Future Work
  contents:
  - "Appendix A.  Future Work\n   As the DAT metric proved to work reasonably well\
    \ for non- or slow-\n   moving ad hoc networks [COMNET15], it should be considered\
    \ a solid\n   first step on a way to better MANET metrics.  There are multiple\n\
    \   parts of the DAT metric that need to be reviewed again in the context\n  \
    \ of real world deployments and can be subject to later improvements.\n   The\
    \ easiest part of the DAT metric to change and test would be the\n   timings parameters.\
    \  A 1-minute interval for packet-loss statistics\n   might be a good compromise\
    \ for some MANETs, but could easily be too\n   large or to small for others. \
    \ More data is needed to verify or\n   improve the current parameter selection.\n\
    \   The DAT metric considers only the multicast [RFC5444] packet loss for\n  \
    \ estimating the link, but it would be good to integrate the unicast\n   data\
    \ loss into the loss estimation.  This information could be\n   provided directly\
    \ from the link layer.  This could increase the\n   accuracy of the loss rate\
    \ estimation in scenarios where the\n   assumptions regarding the ratio of multicast\
    \ vs. unicast loss do not\n   hold.\n   The packet-loss averaging algorithm could\
    \ also be improved.  While\n   the DAT metric provides a stable sliding time interval\
    \ to average the\n   incoming packet loss and does not give the recent input too\
    \ much\n   influence, first experiments suggest that the algorithm tends to be\n\
    \   less agile in detecting major changes of link quality.  This makes it\n  \
    \ less suited for mobile networks.  A more agile algorithm is needed\n   for detecting\
    \ major changes while filtering out random fluctuations\n   regarding frame loss.\
    \  However, the current \"queue of counters\"\n   algorithm suggested for DAT\
    \ outperforms the binary queue algorithm\n   and the exponential aging algorithms\
    \ used for the ETX metric in the\n   OLSR [RFC3626] codebase of OLSR.org.\n"
- title: Appendix B.  OLSR.org Metric History
  contents:
  - "Appendix B.  OLSR.org Metric History\n   The Funkfeuer [FUNKFEUER] and Freifunk\
    \ networks [FREIFUNK] are based\n   on OLSR [RFC3626] or B.A.T.M.A.N. [BATMAN]\
    \ wireless community\n   networks with hundreds of routers in permanent operation.\
    \  The Vienna\n   Funkfeuer network in Austria, for instance, consists of 400\
    \ routers\n   covering the whole city of Vienna and beyond, spanning roughly 40\
    \ km\n   in diameter.  It has been supplying its users with Internet access\n\
    \   since 2003.  A particularity of the Vienna Funkfeuer network is that\n   it\
    \ manages to provide Internet access through a city-wide, large-\n   scale Wi-Fi\
    \ MANET, with just a single Internet uplink.\n   Operational experience of the\
    \ OLSR project [OLSR.org] with these\n   networks has revealed that the use of\
    \ hop-count as a routing metric\n   leads to unsatisfactory network performance.\
    \  Experiments with the\n   ETX metric [MOBICOM03] were therefore undertaken in\
    \ parallel in the\n   Berlin Freifunk network as well as in the Vienna Funkfeuer\
    \ network in\n   2004, and found satisfactory, i.e., sufficiently easy to implement\n\
    \   and providing sufficiently good performance.  This metric has now\n   been\
    \ in operational use in these networks for several years.\n   The ETX metric of\
    \ a link is the estimated number of transmissions\n   required to successfully\
    \ send a packet (each packet equal to or\n   smaller than MTU) over that link,\
    \ until a link-layer acknowledgement\n   is received.  The ETX metric is additive,\
    \ i.e., the ETX metric of a\n   path is the sum of the ETX metrics for each link\
    \ on this path.\n   While the ETX metric delivers a reasonable performance, it\
    \ does not\n   handle networks with heterogeneous links that have different bitrates\n\
    \   well.  When using the ETX metric, since every wireless link is\n   characterized\
    \ only by its packet-loss ratio, long-ranged links with\n   low bitrate (with\
    \ low loss ratios) are preferred over short-ranged\n   links with high bitrate\
    \ (with higher but reasonable loss ratios).\n   Such conditions, when they occur,\
    \ can degrade the performance of a\n   network considerably, by not taking advantage\
    \ of higher capacity\n   links.\n   Because of this, the OLSR.org project has\
    \ implemented the Directional\n   Airtime metric for OLSRv2, which has been inspired\
    \ by the Estimated\n   Travel Time (ETT) metric [MOBICOM04].  This metric uses\
    \ a\n   unidirectional packet loss, but also takes the bitrate into account\n\
    \   to create a more accurate description of the relative costs or\n   capabilities\
    \ of OLSRv2 links.\n"
- title: Appendix C.  Link-Speed Stabilization
  contents:
  - "Appendix C.  Link-Speed Stabilization\n   The DAT metric specifies how to generate\
    \ a reasonably stable packet-\n   loss rate value based on incoming packet reception/loss\
    \ events, but\n   the source of the link speed used in this document is considered\
    \ an\n   external process.\n   In the presence of a Layer 2 technology with variable\
    \ link speed, it\n   is likely that the raw link speed will be fluctuating too\
    \ fast to be\n   useful for the DAT metric.\n   The amount of stabilization necessary\
    \ for the link speed depends on\n   the implementation of the MAC layer, especially\
    \ the rate-control\n   algorithm.\n   Experiments with the Linux 802.11 Wi-Fi\
    \ stack have shown that a\n   simple Median filter over a series of raw link-speed\
    \ measurements can\n   smooth the calculated value without introducing intermediate\
    \ link-\n   speed values one would obtain by using averaging or an exponential\n\
    \   weighted moving average.\n"
- title: Appendix D.  Packet-Loss Hysteresis
  contents:
  - "Appendix D.  Packet-Loss Hysteresis\n   While the DAT metric uses a sliding window\
    \ to compute a reasonably\n   stable frame loss, the implementation might choose\
    \ to integrate an\n   additional hysteresis to prevent undesirable oscillations\
    \ between two\n   values (i.e., metric flapping).\n   In Section 10.2, DAT calculates\
    \ a fractional loss rate.  The fraction\n   of \"loss := sum_total / sum_received\"\
    \ may result in minor\n   fluctuations in the advertised L_in_metric due to minimal\
    \ changes in\n   sum_total or sum_received, which can cause undesirable protocol\n\
    \   churn.\n   A hysteresis function applied to the fraction could reduce the\
    \ amount\n   of changes in the loss rate and help to further stabilize the metric\n\
    \   output.\n"
- title: Appendix E.  Example DAT Values
  contents:
  - "Appendix E.  Example DAT Values\n   The DAT metric value can be expressed in\
    \ terms of link speed (bit/s)\n   or used airtime (s).  When using the default\
    \ protocol constants (see\n   Section 6), DAT encodes link speeds between 119\
    \ bit/s and 2 Gbit/s.\n   Table 2 contains a few examples for metric values and\
    \ their meaning\n   as a link speed:\n                 +---------------------------+-----------+\n\
    \                 |           Metric          |   bit/s   |\n                \
    \ +---------------------------+-----------+\n                 |     MINIMUM_METRIC\
    \ (1)    |  2 Gbit/s |\n                 |                           |       \
    \    |\n                 | MAXIMUM_METRIC (16776960) | 119 bit/s |\n         \
    \        |                           |           |\n                 |       \
    \     2000           |  1 Mbit/s |\n                 +---------------------------+-----------+\n\
    \                      Table 2: DAT Link Cost Examples\n   A path metric value\
    \ could also be expressed as a link speed, but this\n   would be less intuitive.\
    \  An easier way to transform a path metric\n   value into a textual representation\
    \ is to divide it by the hop count\n   of the path and express the path cost as\
    \ the average link speed\n   together with the hop count (see Table 3).\n    \
    \                +---------+------+---------------+\n                    |  Metric\
    \ | hops | average bit/s |\n                    +---------+------+---------------+\n\
    \                    |    4    |  2   |    1 Gbit/s   |\n                    |\
    \         |      |               |\n                    | 4000000 |  6   |   \
    \ 3 kbit/s   |\n                    +---------+------+---------------+\n     \
    \                 Table 3: DAT Link Cost Examples\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The authors would like to acknowledge the network administrators\
    \ from\n   Freifunk Berlin [FREIFUNK] and Funkfeuer Vienna [FUNKFEUER] for\n \
    \  endless hours of testing and suggestions to improve the quality of\n   the\
    \ original ETX metric for the OLSR.org routing daemon.\n   This effort/activity\
    \ is supported by the European Community Framework\n   Program 7 within the Future\
    \ Internet Research and Experimentation\n   Initiative (FIRE), Community Networks\
    \ Testbed for the Future Internet\n   ([CONFINE]), contract FP7-288535.\n   The\
    \ authors would like to gratefully acknowledge the following people\n   for intense\
    \ technical discussions, early reviews, and comments on the\n   specification\
    \ and its components (listed alphabetically): Teco Boot\n   (Infinity Networks),\
    \ Juliusz Chroboczek (PPS, University of Paris 7),\n   Thomas Clausen, Christopher\
    \ Dearlove (BAE Systems Advanced Technology\n   Centre), Ulrich Herberg (Fujitsu\
    \ Laboratories of America), Markus\n   Kittenberger (Funkfeuer Vienna), Joseph\
    \ Macker (Naval Research\n   Laboratory), Fabian Nack (Freie Universitaet Berlin),\
    \ and Stan\n   Ratliff (Cisco Systems).\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Henning Rogge\n   Fraunhofer FKIE\n   Email: henning.rogge@fkie.fraunhofer.de\n\
    \   URI:   http://www.fkie.fraunhofer.de\n   Emmanuel Baccelli\n   INRIA\n   Email:\
    \ Emmanuel.Baccelli@inria.fr\n   URI:   http://www.emmanuelbaccelli.org/\n"
