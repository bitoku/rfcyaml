- title: __initial_text__
  contents:
  - "                               TCP-ON-A-LAN\n                              M.A.\
    \ PADLIPSKY\n                           THE MITRE CORPORATION\n              \
    \            Bedford, Massachusetts\f          The sometimes-held position that\
    \ the DoD Standard\n     Transmission Control Protocol (TCP) and Internet Protocol\
    \ (IP)\n     are inappropriate for use \"on\" a Local Area Network (LAN) is\n\
    \     shown to be fallacious.  The paper is a companion piece to\n     M82-47,\
    \ M82-49, M82-50, and M82-51.\n                              \"TCP-ON-A-LAN\"\n\
    \                              M. A. Padlipsky\n     Thesis\n          It is the\
    \ thesis of this paper that fearing \"TCP-on-a-LAN\"\n     is a Woozle which needs\
    \ slaying.  To slay the \"TCP-on-a-LAN\"\n     Woozle, we need to know three things:\
    \  What's a Woozle?  What's a\n     LAN?  What's a TCP?\n     Woozles\n      \
    \    The first is rather straightforward [1]:\n               One fine winter's\
    \ day when Piglet was brushing away the\n          snow in front of his house,\
    \ he happened to look up, and\n          there was Winnie-the-Pooh.  Pooh was\
    \ walking round and round\n          in a circle, thinking of something else,\
    \ and when Piglet\n          called to him, he just went on walking.\n       \
    \        \"Hallo!\" said Piglet, \"what are you doing?\"\n               \"Hunting,\"\
    \ said Pooh.\n               \"Hunting what?\"\n               \"Tracking something,\"\
    \ said Winnie-the-Pooh very\n          mysteriously.\n               \"Tracking\
    \ what?\" said Piglet, coming closer.\n               \"That's just what I ask\
    \ myself.  I ask myself, What?\"\n               \"What do you think you'll answer?\"\
    \n               \"I shall have to wait until I catch up with it,\" said\n   \
    \       Winnie-the-Pooh.  \"Now look there.\"  He pointed to the\n          ground\
    \ in front of him.  \"What do you see there?\n               \"Tracks,\" said\
    \ Piglet, \"Paw-marks.\"  he gave a little\n          squeak of excitement.  \"\
    Oh, Pooh!  Do you think it's a--a--a\n          Woozle?\"\n          Well, they\
    \ convince each other that it is a Woozle, keep\n     \"tracking,\" convince each\
    \ other that it's a herd of Hostile\n     Animals, and get duly terrified before\
    \ Christopher Robin comes\n     along and points out that they were following\
    \ their own tracks\n     all the long.\n          In other words, it is our contention\
    \ that expressed fears\n     about the consequences of using a particular protocol\
    \ named \"TCP\"\n     in a particular environment called a Local Area Net stem\
    \ from\n     misunderstandings of the protocol and the environment, not from\n\
    \     the technical facts of the situation.\n     RFC 872                    \
    \                        September 1982\n     LAN's\n          The second thing\
    \ we need to know is somewhat less\n     straightforward:  A LAN is, properly\
    \ speaking [2], a\n     communications mechanism (or subnetwork) employing a transmission\n\
    \     technology suitable for relatively short distances (typically a\n     few\
    \ kilometers) at relatively high bit-per-second rates\n     (typically greater\
    \ than a few hundred kilobits per second) with\n     relatively low error rates,\
    \ which exists primarily to enable\n     suitably attached computer systems (or\
    \ \"Hosts\") to exchange bits,\n     and secondarily, though not necessarily,\
    \ to allow terminals of\n     the teletypewriter and CRT classes to exchange bits\
    \ with Hosts.\n     The Hosts are, at least in principle, heterogeneous; that\
    \ is,\n     they are not merely multiple instances of the same operating\n   \
    \  system.  The Hosts are assumed to communicate by means of layered\n     protocols\
    \ in order to achieve what the ARPANET tradition calls\n     \"resource sharing\"\
    \ and what the newer ISO tradition calls \"Open\n     System Interconnection.\"\
    \  Addressing typically can be either\n     Host-Host (point-to-point) or \"broadcast.\"\
    \ (In some environments,\n     e.g., Ethernet, interesting advantage can be taken\
    \ of broadcast\n     addressing; in other environments, e.g., LAN's which are\n\
    \     constituents of ARPA- or ISO-style \"internets\", broadcast\n     addressing\
    \ is deemed too expensive to implement throughout the\n     internet as a whole\
    \ and so may be ignored in the constituent LAN\n     even if available as part\
    \ of the Host-LAN interface.)\n          Note that no assumptions are made about\
    \ the particular\n     transmission medium or the particular topology in play.\
    \  LAN\n     media can be twisted-pair wires, CATV or other coaxial-type\n   \
    \  cables, optical fibers, or whatever.  However, if the medium is a\n     processor-to-processor\
    \ bus it is likely that the system in\n     question is going to turn out to \"\
    be\" a moderately closely\n     coupled distributed processor or a somewhat loosely\
    \ coupled\n     multiprocessor rather than a LAN, because the processors are\n\
    \     unlikely to be using either ARPANET or ISO-style layered\n     protocols.\
    \  (They'll usually -- either be homogeneous processors\n     interpreting only\
    \ the protocol necessary to use the transmission\n     medium, or heterogeneous\
    \ with one emulating the expectations of\n     the other.)  Systems like \"PDSC\"\
    \ or \"NMIC\" (the evolutionarily\n     related, bus-oriented, multiple PDP-11\
    \ systems in use at the\n     Pacific Data Services Center and the National Military\n\
    \     Intelligence Center, respectively), then, aren't LANs.\n          LAN topologies\
    \ can be either \"bus,\" \"ring,\" or \"star\".  That\n     is, a digital PBX\
    \ can be a LAN, in the sense of furnishing a\n     transmission medium/communications\
    \ subnetwork for Hosts to do\n     resource sharing/Open System Interconnection\
    \ over, though it\n     might not present attractive speed or failure mode properties.\n\
    \     (It might, though.)  Topologically, it would probably be a\n     neutron\
    \ star.\n     RFC 872                                            September 1982\n\
    \          For our purposes, the significant properties of a LAN are\n     the\
    \ high bit transmission capacity and the good error properties.\n     Intuitively,\
    \ a medium with these properties in some sense\n     \"shouldn't require a heavy-duty\
    \ protocol designed for long-haul\n     nets,\" according to some.  (We will not\
    \ address the issue of\n     \"wasted bandwidth\" due to header sizes. [2], pp.\
    \ 1509f, provides\n     ample refutation of that traditional communications notion.)\n\
    \     However, it must be borne in mind that for our purposes the\n     assumption\
    \ of resource-sharing/OSI type protocols between/among\n     the attached Hosts\
    \ is also extremely significant.  That is, if\n     all you're doing is letting\
    \ some terminals access some different\n     Hosts, but the Hosts don't really\
    \ have any intercomputer\n     networking protocols between them, what you have\
    \ should be viewed\n     as a Localized Communications Network (LCN), not a LAN\
    \ in the\n     sense we're talking about here.\n     TCP\n          The third\
    \ thing we have to know can be either\n     straightforward or subtle, depending\
    \ largely on how aware we are\n     of the context estabished by ARPANET-style\
    \ prococols:  For the\n     visual-minded, Figure 1 and Figure 2 might be all\
    \ that need be\n     \"said.\"  Their moral is meant to be that in ARPANET-style\n\
    \     layering, layers aren't monoliths.  For those who need more\n     explanation,\
    \ here goes:  TCP [3] (we'll take IP later) is a\n     Host-Host protocol (roughly\
    \ equivalent to the functionality\n     implied by some of ISO Level 5 and all\
    \ of ISO Level 4).  Its most\n     significant property is that it presents reliable\
    \ logical\n     connections to protocols above itself.  (This point will be\n\
    \     returned to subsequently.)  Its next most significant property is\n    \
    \ that it is designed to operate in a \"catenet\" (also known as the,\n     or\
    \ an, \"internet\"); that is, its addressing discipline is such\n     that Hosts\
    \ attached to communications subnets other than the one\n     a given Host is\
    \ attached to (the \"proximate net\") can be\n     communicated with as well as\
    \ Hosts on the proximate net.  Other\n     significant properties are those common\
    \ to the breed:  Host-Host\n     protocols (and Transport protocols) \"all\" offer\
    \ mechanisms for\n     flow Control, Out-of-Band Signals, Logical Connection management,\n\
    \     and the like.\n          Because TCP has a catenet-oriented addressing mechanism\n\
    \     (that is, it expresses foreign Host addresses as the\n     \"two-dimensional\"\
    \ entity Foreign Net/Foreign Host because it\n     cannot assume that the Foreign\
    \ Host is attached to the proximate\n     net), to be a full Host-Host protocol\
    \ it needs an adjunct to deal\n     with the proximate net.  This adjunct, the\
    \ Internet Protocol (IP)\n     was designed as a separate protocol from TCP, however,\
    \ in order\n     to allow it to play the same role it plays for TCP for other\n\
    \     Host-Host protocols too.\n     RFC 872                                 \
    \           September 1982\n          In order to \"deal with the proximate net\"\
    , IP possess the\n     following significant properties:  An IP implementation\
    \ maps from\n     a virtualization (or common intermediate representation) of\n\
    \     generic proximate net qualities (such as precedence, grade of\n     service,\
    \ security labeling) to the closest equivalent on the\n     proximate net. It\
    \ determines whether the \"Internet Address\" of a\n     given transmission is\
    \ on the proximate net or not; if so, it\n     sends it; if not, it sends it to\
    \ a \"Gateway\" (where another IP\n     module resides).  That is, IP handles\
    \ internet routing, whereas\n     TCP (or some other Host-Host  protocol) handles\
    \ only internet\n     addressing.  Because some proximate nets will accept smaller\n\
    \     transmissions (\"packets\") than others, IP, qua protocol, also has\n  \
    \   a discipline for allowing packets to be fragmented while in the\n     catenet\
    \ and reassembled at their destination.  Finally (for our\n     purposes), IP\
    \ offers a mechanism to allow the particular protocol\n     it was called by (for\
    \ a given packet) to be identified so that\n     the receiver can demultiplex\
    \ transmissions based on IP-level\n     information only. (This is in accordance\
    \ with the Principle of\n     Layering:  you don't want to have to look at the\
    \ data IP is\n     conveying to find out what to do with it.)\n          Now that\
    \ all seems rather complex, even though it omits a\n     number of mechanisms.\
    \  (For a more complete discussion, see\n     Reference [4].)  But it should be\
    \ just about enough to slay the\n     Woozle, especially if just one more protocol's\
    \ most significant\n     property can be snuck in.  An underpublicized member\
    \ of the\n     ARPANET suite of protocols is called UDP--the \"User Datagram\n\
    \     Protocol.\"  UDP is designed for speed rather than accuracy.  That\n   \
    \  is, it's not \"reliable.\"  All there is to UDP, basically, is a\n     mechanism\
    \ to allow a given packet to be associated with a given\n     logical connection.\
    \ Not a TCP logical connection, mind you, but a\n     UDP logical connection.\
    \  So if all you want is the ability to\n     demultiplex data streams from your\
    \ Host-Host protocol, you use\n     UDP, not TCP.  (\"You\" is usually supposed\
    \ to be a Packetized\n     Speech protocol, but doesn't have to be.)  (And we'll\
    \ worry about\n     Flow Control some other time.)\n     TCP-on-a-LAN\n      \
    \    So whether you're a Host proximate to a LAN or not, and even\n     whether\
    \ your TCP/IP is \"inboard\" or \"outboard\" of you, if you're\n     talking to\
    \ a Host somewhere out there on the catenet, you use IP;\n     and if you're exercising\
    \ some process-level/applications protocol\n     (roughly equivalent to some of\
    \ some versions of ISO L5 and all of\n     L6 and L7) that expects TCP/IP as its\
    \ Host-Host protocol (because\n     it \"wants\" reliable, flow controlled, ordered\
    \ delivery [whoops,\n     forgot that \"ordered\" property earlier--but it doesn't\
    \ matter all\n     that much for present purposes] over logical connections which\n\
    \     allow it to be\n     RFC 872                                           \
    \ September 1982\n     addressed via a Well-Known Socket), you use TCP \"above\"\
    \ IP\n     regardless of whether the other Host is on your proximate net or\n\
    \     not.  But if your application doesn't require the properties of\n     TCP\
    \ (say for Packetized Speech), don't use it--regardless of\n     where or what\
    \ you are.  And if you want to make the decision\n     about whether you're talking\
    \ to a proximate Host explicitly and\n     not even go through IP, you can even\
    \ arrange to do that (though\n     it might make for messy implementation under\
    \ some circumstances).\n     That is, if you want to take advantage of the properties\
    \ of your\n     LAN \"in the raw\" and have or don't need appropriate applications\n\
    \     protocols, the Reference Model to which TCP/IP were designed\n     won't\
    \ stop you.  See Figure 2 if you're visual.  A word of\n     caution, though:\
    \  those applications probably will need protocols\n     of some sort--and they'll\
    \ probably need some sort of Host-Host\n     protocol under them, so unless you\
    \ relish maintaining \"parallel\"\n     suites of protocols....  that is, you\
    \ really would be better off\n     with TCP most of the time locally anyway, because\
    \ you've got to\n     have it to talk to the catenet and it's a nuisance to have\n\
    \     \"something else\" to talk over the LAN--when, of course, what\n     you're\
    \ talking requires a Host-Host protocol.\n          We'll touch on \"performance\"\
    \ issues in a bit more detail\n     later. At this level, though, one point really\
    \ does need to be\n     made:  On the \"reliability\" front, many (including the\
    \ author) at\n     first blush take the TCP checksum to be \"overkill\" for use\
    \ on a\n     LAN, which does, after all, typically present extremely good\n  \
    \   error properties. Interestingly enough, however, metering of TCP\n     implementations\
    \ on several Host types in the research community\n     shows that the processing\
    \ time expended on the TCP checksum is\n     only around 12% of the per-transmission\
    \ processing time anyway.\n     So, again, it's not clear that it's worthwhile\
    \ to bother with an\n     alternate Host-Host protocol for local use (if, that\
    \ is, you need\n     the rest of the properties of TCP other than \"reliability\"\
    --and,\n     of course, always assuming you've got a LAN, not an LCN, as\n   \
    \  distinguished earlier.)\n          Take that, Woozle!\n     Other Significant\
    \ Properties\n          Oh, by the way, one or two other properties of TCP/IP\
    \ really\n     do bear mention:\n          1.   Protocol interpreters for TCP/IP\
    \ exist for a dozen or\n               two different operating systems.\n    \
    \      2.   TCP/IP work, and have been working (though in less\n             \
    \  refined versions) for several years.\n     RFC 872                        \
    \                    September 1982\n          3.   IP levies no constraints on\
    \ the interface protocol\n               presented by the proximate net (though\
    \ some protocols\n               at that level are more wasteful than others).\n\
    \          4.   IP levies no constraints on its users; in particular,\n      \
    \         any proximate net that offers alternate routing can be\n           \
    \    taken advantage of (unlike X.25, which appears to\n               preclude\
    \ alternate routing).\n          5.   IP-bearing Gateways both exist and present\
    \ and exploit\n               properties 3 and 4.\n          6.   TCP/IP are Department\
    \ of Defense Standards.\n          7.   Process (or application) protocols compatible\
    \ with\n               TCP/IP for Virtual Terminal and File Transfer\n       \
    \        (including \"electronic mail\") exist and have been\n               implemented\
    \ on numerous operating systems.\n          8.   \"Vendor-style\" specifications\
    \ of TCP/IP are being\n               prepared under the aegis of the DoD Protocol\
    \ Standards\n               Technical Panel, for those who find the\n        \
    \       research-community-provided specs not to their liking.\n          9. \
    \  The research community has recently reported speeds in\n               excess\
    \ of 300 kb/s on an 800 kb/s subnet, 1.2 Mb/s on a\n               3 Mb/s subnet,\
    \ and 9.2 kbs on a 9.6 kb/s phone\n               line--all using TCP.  (We don't\
    \ know of any numbers for\n               alternative protocol suites, but it's\
    \ unlikely they'd\n               be appreciably better if they confer like\n\
    \               functionality--and they may well be worse if they\n          \
    \     represent implementations which haven't been around\n               enough\
    \ to have been iterated a time or three.)\n          With the partial exception\
    \ of property 8, no other\n     resource-sharing protocol suite can make those\
    \ claims.\n          Note particularly well that none of the above should be\n\
    \     construed as eliminating the need for extremely careful\n     measurement\
    \ of TCP/IP performance in/on a LAN.  (You do, after\n     all, want to know their\
    \ limitations, to guide you in when to\n     bother ringing in \"local\" alternatives--but\
    \ be very careful:  1.\n     they're hard to measure commensurately with alternative\n\
    \     protocols; and 2.  most conventional Hosts can't take [or give]\n     as\
    \ many bits per second as you might imagine.)  It merely\n     dramatically refocuses\
    \ the motivation for doing such measurement.\n     (And levies a constraint or\
    \ two on how you outboard, if you're\n     outboarding.)\n     RFC 872       \
    \                                     September 1982\n     Other Contextual Data\n\
    \          Our case could really rest here, but some amplification of\n     the\
    \ aside above about Host capacities is warranted, if only to\n     suggest that\
    \ some quantification is available to supplement the a\n     priori argument:\
    \  Consider the previously mentioned PDSC.  Its\n     local terminals operate\
    \ in a screen-at-a-time mode, each\n     screen-load comprising some 16 kb.  How\
    \ many screens can one of\n     its Hosts handle in a given second?  Well, we're\
    \ told that each\n     disk fetch requires 17 ms average latency, and each context\n\
    \     switch costs around 2 ms, so allowing 1 ms for transmission of\n     the\
    \ data from the disk and to the \"net\" (it makes the arithmetic\n     easy),\
    \ that would add up to 20 ms \"processing\" time per screen,\n     even if no\
    \ processing were done to the disk image.  Thus, even if\n     the Host were doing\
    \ nothing else, and  even if the native disk\n     I/O software were optimized\
    \ to do 16 kb reads, it could only\n     present 50 screens to its communications\
    \ mechanism\n     (processor-processor bus) per second.  That's 800 kb/s. And\n\
    \     that's well within the range of TCP-achievable rates (cf.  Other\n     Significant\
    \ Property 9).  So in a realistic sample environment,\n     it would certainly\
    \ seem that typical Hosts can't necessarily\n     present so many bits as to overtax\
    \ the protocols anyway.  (The\n     analysis of how many bits typical Hosts can\
    \ accept is more\n     difficult because it depends more heavily on system internals.\n\
    \     However, the point is nearly moot in that even in the intuitively\n    \
    \ unlikely event that receiving were appreciably faster in\n     principle [unlikely\
    \ because of typical operating system\n     constraints on address space sizes,\
    \ the need to do input to a\n     single address space, and the need to share\
    \ buffers in the\n     address space among several processes], you can't accept\
    \ more\n     than you can be given.)\n     Conclusion\n          The sometimes-expressed\
    \ fear that using TCP on a local net\n     is a bad idea is unfounded.\n     References\n\
    \     [1]  Milne, A. A., \"Winnie-the-Pooh\", various publishers.\n     [2]  The\
    \ LAN description is based on Clark, D. D.  et al., \"An\n          Introduction\
    \ to Local Area Networks,\"  IEEE Proc., V. 66, N.\n          11, November 1978,\
    \ pp. 1497-1517, several year's worth of\n          conversations with Dr. Clark,\
    \ and the author's observations\n          of both the open literature and the\
    \ Oral Tradition (which\n          were sufficiently well-thought of to have prompted\
    \ The MITRE\n          Corporation/NBS/NSA Local Nets \"Brain Picking Panel\"\
    \ to have\n     RFC 872                                            September 1982\n\
    \          solicited his testimony during the year he was in FACC's\n        \
    \  employ.*)\n     [3]  The TCP/IP descriptions are based on Postel, J. B.,\n\
    \          \"Internet Protocol Specification,\" and \"Transmission Control\n \
    \         Specification\" in DARPA Internet Program Protocol\n          Specifications,\
    \ USC Information Sciences Institute,\n          September, 1981, and on more\
    \ than 10 years' worth of\n          conversations with Dr. Postel, Dr. Clark\
    \ (now the DARPA\n          \"Internet Architect\") and Dr. Vinton G. Cerf (co-originator\n\
    \          of TCP), and on numerous discussions with several other\n         \
    \ members of the TCP/IP design team, on having edited the\n          referenced\
    \ documents for the PSTP, and, for that matter, on\n          having been one\
    \ of the developers of the ARPANET \"Reference\n          Model.\"\n     [4] \
    \ Padlipsky, M. A., \"A Perspective on the ARPANET Reference\n          Model\"\
    , M82-47, The MITRE Corporation, September 1982; also\n          available in\
    \ Proc. INFOCOM '83.\n     ________________\n     *  In all honesty, as far as\
    \ I know I started the rumor that TCP\n        might be overkill for a LAN at\
    \ that meeting.  At the next TCP\n        design meeting, however, they separated\
    \ IP out from TCP, and\n        everything's been alright for about three years\
    \ now--except\n        for getting the rumor killed.  (I'd worry about Woozles\n\
    \        turning into roosting chickens if it weren't for the facts\n        that:\
    \  1.  People tend to ignore their local guru; 2.  I was\n        trying to encourage\
    \ the IP separation; and 3.  All I ever\n        wanted was some empirical data.)\n\
    \     NOTE:  FIGURE 1. ARM in the Abstract, and FIGURE 2.  ARMS,\n        Somewhat\
    \ Particularized, may be obtained by writing to:  Mike\n        Padlipsky, MITRE\
    \ Corporation, P.O. Box 208, Bedford,\n        Massachusetts, 01730, or sending\
    \ computer mail to\n        Padlipsky@USC-ISIA.\n"
