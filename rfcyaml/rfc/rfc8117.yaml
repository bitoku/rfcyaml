- title: __initial_text__
  contents:
  - '              Current Hostname Practice Considered Harmful

    '
- title: Abstract
  contents:
  - "Abstract\n   Giving a hostname to your computer and publishing it as you roam\
    \ from\n   one network to another is the Internet's equivalent of walking around\n\
    \   with a name tag affixed to your lapel.  This current practice can\n   significantly\
    \ compromise your privacy, and something should change in\n   order to mitigate\
    \ these privacy threats.\n   There are several possible remedies, such as fixing\
    \ a variety of\n   protocols or avoiding disclosing a hostname at all.  This document\n\
    \   describes some of the protocols that reveal hostnames today and\n   sketches\
    \ another possible remedy, which is to replace static\n   hostnames by frequently\
    \ changing randomized values.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8117.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Naming Practices  . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n   3.  Partial Identifiers . . . . . . . . . . . . . . . . . .\
    \ . . .   4\n   4.  Protocols That Leak Hostnames . . . . . . . . . . . . . .\
    \ . .   5\n     4.1.  DHCP  . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ .   5\n     4.2.  DNS Address to Name Resolution  . . . . . . . . . . . . .\
    \   5\n     4.3.  Multicast DNS . . . . . . . . . . . . . . . . . . . . . .  \
    \ 6\n     4.4.  Link-Local Multicast Name Resolution  . . . . . . . . . .   6\n\
    \     4.5.  DNS-Based Service Discovery . . . . . . . . . . . . . . .   7\n  \
    \   4.6.  NetBIOS-over-TCP  . . . . . . . . . . . . . . . . . . . .   7\n   5.\
    \  Randomized Hostnames as a Remedy  . . . . . . . . . . . . . .   8\n   6.  Security\
    \ Considerations . . . . . . . . . . . . . . . . . . .   9\n   7.  IANA Considerations\
    \ . . . . . . . . . . . . . . . . . . . . .   9\n   8.  Informative References\
    \  . . . . . . . . . . . . . . . . . . .   9\n   Acknowledgments . . . . . . .\
    \ . . . . . . . . . . . . . . . . . .  12\n   Authors' Addresses  . . . . . .\
    \ . . . . . . . . . . . . . . . . .  12\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   There is a long established practice of giving names to\
    \ computers.\n   In the Internet protocols, these names are referred to as \"\
    hostnames\"\n   [RFC7719].  Hostnames are normally used in conjunction with a\
    \ domain\n   name suffix to build the Fully Qualified Domain Name (FQDN) of a\
    \ host\n   [RFC1983].  However, it is common practice to use the hostname\n  \
    \ without further qualification in a variety of applications from file\n   sharing\
    \ to network management.  Hostnames are typically published as\n   part of domain\
    \ names and can be obtained through a variety of name\n   lookup and discovery\
    \ protocols.\n   Hostnames have to be unique within the domain in which they are\n\
    \   created and used.  They do not have to be globally unique\n   identifiers,\
    \ but they will always be at least partial identifiers, as\n   discussed in Section\
    \ 3.\n   The disclosure of information through hostnames creates a problem for\n\
    \   mobile devices.  Adversaries that monitor a remote network such as a\n   Wi-Fi\
    \ hot spot can obtain the hostname through passive monitoring or\n   active probing\
    \ of a variety of Internet protocols, such as DHCP or\n   Multicast DNS (mDNS).\
    \  They can correlate the hostname with various\n   other information extracted\
    \ from traffic analysis and other\n   information sources, and they can potentially\
    \ identify the device,\n   device properties, and its user [TRAC2016].\n"
- title: 2.  Naming Practices
  contents:
  - "2.  Naming Practices\n   There are many reasons to give names to computers. \
    \ This is\n   particularly true when computers operate on a network.  Operating\n\
    \   systems like Microsoft Windows or Unix assume that computers have a\n   \"\
    hostname.\"  This enables users and administrators to do things such\n   as ping\
    \ a computer, add its name to an access control list, remotely\n   mount a computer\
    \ disk, or connect to the computer through tools such\n   as telnet or remote\
    \ desktop.  Other operating systems maintain\n   multiple hostnames for different\
    \ purposes, e.g., for use with certain\n   protocols such as mDNS.\n   In most\
    \ consumer networks, naming is pretty much left to the\n   discretion of the user.\
    \  Some will pick names of planets or stars,\n   others will pick names of fruits\
    \ or flowers, and still others will\n   pick whatever suits their mood when they\
    \ unwrap the device.  As long\n   as users are careful to not pick a name already\
    \ in use on the same\n   network, anything goes.  Very often, however, the operating\
    \ system\n   suggests a hostname at the time of installation, which can contain\n\
    \   the user name, the login name, and information learned from the\n   device\
    \ itself such as the brand, model, or maker of the device\n   [TRAC2016].\n  \
    \ In large organizations, collisions are more likely and a more\n   structured\
    \ approach is necessary.  In theory, organizations could use\n   multiple DNS\
    \ subdomains to ease the pressure on uniqueness, but in\n   practice many don't\
    \ and insist on unique flat names, if only to\n   simplify network management.\
    \  To ensure unique names, organizations\n   will set naming guidelines and enforce\
    \ some kind of structured\n   naming.  For example, within the Microsoft corporate\
    \ network,\n   computer names are derived from the login name of the main user,\n\
    \   which leads to names like \"huitema-test2\" for a machine that one of\n  \
    \ the authors used to test software.\n   There is less pressure to assign names\
    \ to small devices including,\n   for example, smart phones, as these devices\
    \ typically do not enable\n   sharing of their disks or remote login.  As a consequence,\
    \ these\n   devices often have manufacturer-assigned names, which vary from\n\
    \   generic names like \"Windows Phone\" to completely unique names like\n   \"\
    BrandX-123456-7890-abcdef\" and often contain the name of the device\n   owner,\
    \ the device's brand name, and often also a hint as to which\n   language the\
    \ device owner speaks [TRAC2016].\n"
- title: 3.  Partial Identifiers
  contents:
  - "3.  Partial Identifiers\n   Suppose an adversary wants to track the people connecting\
    \ to a\n   specific Wi-Fi hot spot, for example, in a railroad station.  Assume\n\
    \   that the adversary is able to retrieve the hostname used by a\n   specific\
    \ laptop.  That, in itself, might not be enough to identify\n   the laptop's owner.\
    \  Suppose, however, that the adversary observes\n   that the laptop name is \"\
    dthaler-laptop\" and that the laptop has\n   established a VPN connection to the\
    \ Microsoft corporate network.  The\n   two pieces of information, put together,\
    \ firmly point to Dave Thaler,\n   employed by Microsoft.  The identification\
    \ is successful.\n   In the example, we saw a login name inside the hostname,\
    \ and that\n   certainly helped identification.  But generic names like \"jupiter\"\
    \ or\n   \"rosebud\" also provide partial identification, especially if the\n\
    \   adversary is capable of maintaining a database recording, among other\n  \
    \ information, the hostnames of devices used by specific users.\n   Generic names\
    \ are picked from vocabularies that include thousands of\n   potential choices.\
    \  Finding the name reduces the scope of the search\n   significantly.  Other\
    \ information such as the visited sites will\n   quickly complement that data\
    \ and can lead to user identification.\n   Also, the special circumstances of\
    \ the network can play a role.\n   Experiments on operational networks such as\
    \ the IETF meeting network\n   have shown that, with the help of external data\
    \ such as the publicly\n   available IETF attendees list or other data sources\
    \ such as\n   Lightweight Directory Access Protocol (LDAP) servers on the network\n\
    \   [TRAC2016], the identification of the device owner can become trivial\n  \
    \ given only partial identifiers in a hostname.\n   Unique names assigned by manufacturers\
    \ do not directly encode a user\n   identifier, but they have the property of\
    \ being stable and unique to\n   the device in a large context.  A unique name\
    \ like \"BrandX-\n   123456-7890-abcdef\" allows efficient tracking across multiple\n\
    \   domains.  In theory, this only allows tracking of the device but not\n   of\
    \ the user.  However, an adversary could correlate the device to the\n   user\
    \ through other means, for example, the one-time capture of some\n   cleartext\
    \ traffic.  Adversaries could then maintain databases linking\n   a unique hostname\
    \ to a user identity.  This will allow efficient\n   tracking of both the user\
    \ and the device.\n"
- title: 4.  Protocols That Leak Hostnames
  contents:
  - "4.  Protocols That Leak Hostnames\n   Many IETF protocols can leak the \"hostname\"\
    \ of a computer.  A non-\n   exhaustive list includes DHCP, DNS address to name\
    \ resolution,\n   Multicast DNS, Link-local Multicast Name Resolution, and DNS\
    \ service\n   discovery.\n"
- title: 4.1.  DHCP
  contents:
  - "4.1.  DHCP\n   Shortly after connecting to a new network, a host can use DHCP\n\
    \   [RFC2131] to acquire an IPv4 address and other parameters [RFC2132].\n   A\
    \ DHCP query can disclose the \"hostname.\"  DHCP traffic is sent to\n   the broadcast\
    \ address and can be easily monitored, enabling\n   adversaries to discover the\
    \ hostname associated with a computer\n   visiting a particular network.  DHCPv6\
    \ [RFC3315] shares similar\n   issues.\n   The problems with the hostname and\
    \ FQDN parameters in DHCP are\n   analyzed in [RFC7819] and [RFC7824].  Possible\
    \ mitigations are\n   described in [RFC7844].\n"
- title: 4.2.  DNS Address to Name Resolution
  contents:
  - "4.2.  DNS Address to Name Resolution\n   The domain name service design [RFC1035]\
    \ includes the specification\n   of the special domain \"in-addr.arpa\" for resolving\
    \ the name of the\n   computer using a particular IPv4 address, using the PTR\
    \ format\n   defined in [RFC1033].  A similar domain, \"ip6.arpa\", is defined\
    \ in\n   [RFC3596] for finding the name of a computer using a specific IPv6\n\
    \   address.\n   Adversaries who observe a particular address in use on a specific\n\
    \   network can try to retrieve the PTR record associated with that\n   address\
    \ and thus the hostname of the computer, or even the FQDN of\n   that computer.\
    \  The retrieval may not be useful in many IPv4 networks\n   due to the prevalence\
    \ of NAT, but it could work in IPv6 networks.\n   Other name lookup mechanisms,\
    \ such as [RFC4620], share similar\n   issues.\n"
- title: 4.3.  Multicast DNS
  contents:
  - "4.3.  Multicast DNS\n   Multicast DNS (mDNS) is defined in [RFC6762].  It enables\
    \ hosts to\n   send DNS queries over multicast and to elicit responses from hosts\n\
    \   participating in the service.\n   If an adversary suspects that a particular\
    \ host is present on a\n   network, the adversary can send mDNS requests to find,\
    \ for example,\n   the A or AAAA records associated with the hostname in the \"\
    .local\"\n   domain.  A positive reply will confirm the presence of the host.\n\
    \   When a new responder starts, it must send a set of multicast queries\n   to\
    \ verify that the name that it advertises is unique on the network\n   and to\
    \ populate the caches of other mDNS hosts.  Adversaries can\n   monitor this traffic\
    \ and discover the hostname of computers as they\n   join the monitored network.\n\
    \   mDNS further allows queries to be sent via unicast to port 5353.  An\n   adversary\
    \ might decide to use unicast instead of multicast in order\n   to hide from,\
    \ e.g., intrusion detection systems.\n"
- title: 4.4.  Link-Local Multicast Name Resolution
  contents:
  - "4.4.  Link-Local Multicast Name Resolution\n   Link-Local Multicast Name Resolution\
    \ (LLMNR) is defined in [RFC4795].\n   The specification did not achieve consensus\
    \ as an IETF standard, but\n   it is widely deployed.  Like mDNS, it enables hosts\
    \ to send DNS\n   queries over multicast and to elicit responses from computers\n\
    \   implementing the LLMNR service.\n   Like mDNS, LLMNR can be used by adversaries\
    \ to confirm the presence\n   of a specific host on a network by issuing a multicast\
    \ request to\n   find the A or AAAA records associated with the hostname in the\n\
    \   \".local\" domain.\n   When an LLMNR responder starts, it sends a set of multicast\
    \ queries\n   to verify that the name that it advertises is unique on the network.\n\
    \   Adversaries can monitor this traffic and discover the hostname of\n   computers\
    \ as they join the monitored network.\n"
- title: 4.5.  DNS-Based Service Discovery
  contents:
  - "4.5.  DNS-Based Service Discovery\n   DNS-based Service Discovery (DNS-SD) is\
    \ described in [RFC6763].  It\n   enables participating hosts to retrieve the\
    \ location of services\n   proposed by other hosts.  It can be used with DNS servers\
    \ or in\n   conjunction with mDNS in a serverless environment.\n   Participating\
    \ hosts publish a service described by an \"instance\n   name\", which is typically\
    \ chosen by the user responsible for the\n   publication.  While this is obviously\
    \ an active disclosure of\n   information, privacy aspects can be mitigated by\
    \ user control.\n   Services should only be published when deciding to do so,\
    \ and the\n   information disclosed in the service name should be well under the\n\
    \   control of the device's owner.\n   In theory, there should not be any privacy\
    \ issue, but in practice the\n   publication of a service also forces the publication\
    \ of the hostname\n   due to a chain of dependencies.  The service name is used\
    \ to publish\n   a PTR record announcing the service.  The PTR record typically\
    \ points\n   to the service name in the local domain.  The service names, in turn,\n\
    \   are used to publish TXT records describing service parameters and SRV\n  \
    \ records describing the service location.\n   SRV records are described in [RFC2782].\
    \  Each record contains four\n   parameters: priority, weight, port number, and\
    \ hostname.  While the\n   service name published in the PTR record is chosen\
    \ by the user, the\n   \"hostname\" in the SRV record is indeed the hostname of\
    \ the device.\n   Adversaries can monitor the mDNS traffic associated with DNS-SD\
    \ and\n   retrieve the hostname of computers advertising any service with DNS-\n\
    \   SD.\n"
- title: 4.6.  NetBIOS-over-TCP
  contents:
  - "4.6.  NetBIOS-over-TCP\n   Amongst other things, NetBIOS-over-TCP [RFC1002] implements\
    \ a name\n   registration and resolution mechanism called the NetBIOS Name\n \
    \  Service.  In practice, NetBIOS resource names are often based on\n   hostnames.\n\
    \   NetBIOS allows an application to register resource names and to\n   resolve\
    \ such names to IP addresses.  In environments without a\n   NetBIOS Name Server,\
    \ the protocol makes extensive use of broadcasts\n   from which resource names\
    \ can be easily extracted.  NetBIOS also\n   allows querying for the names registered\
    \ by a node directly (node\n   status).\n"
- title: 5.  Randomized Hostnames as a Remedy
  contents:
  - "5.  Randomized Hostnames as a Remedy\n   There are several ways to remedy the\
    \ hostname practices.  We could\n   instruct people to just turn off any protocol\
    \ that leaks hostnames,\n   at least when they visit some \"insecure\" place.\
    \  We could also\n   examine each particular standard that publishes hostnames\
    \ and somehow\n   fix the corresponding protocols.  Or, we could attempt to revise\
    \ the\n   way devices manage the hostname parameter.\n   There is a lot of merit\
    \ in turning off unneeded protocols when\n   visiting insecure places.  This amounts\
    \ to attack-surface reduction\n   and is clearly beneficial -- this is an advantage\
    \ of the stealth mode\n   defined in [RFC7288].  However, there are two issues\
    \ with this\n   advice.  First, it relies on recognizing which networks are secure\
    \ or\n   insecure.  This is hard to automate, but relying on end-user judgment\n\
    \   may not always provide good results.  Second, some protocols such as\n   DHCP\
    \ cannot be turned off without losing connectivity, which limits\n   the value\
    \ of this option.  Also, the services that rely on protocols\n   that leak hostnames\
    \ such as mDNS will not be available when switched\n   off.  In addition, not\
    \ always are hostname-leaking protocols well-\n   known, as they might be proprietary\
    \ and come with an installed\n   application instead of being provided by the\
    \ operating system.\n   It may be possible in many cases to examine a protocol\
    \ and prevent it\n   from leaking hostnames.  This is, for example, what is attempted\
    \ for\n   DHCP in [RFC7844].  However, it is unclear that we can identify,\n \
    \  revisit, and fix all the protocols that publish hostnames.  In\n   particular,\
    \ this is impossible for proprietary protocols.\n   We may be able to mitigate\
    \ most of the effects of hostname leakage by\n   revisiting the way platforms\
    \ handle hostnames.  In a way, this is\n   similar to the approach of Media Access\
    \ Control (MAC) address\n   randomization described in [RFC7844].  Let's assume\
    \ that the\n   operating system, at the time of connecting to a new network, picks\
    \ a\n   random hostname and starts publicizing that random name in protocols\n\
    \   such as DHCP or mDNS, instead of the static value.  This will render\n   monitoring\
    \ and identification of users by adversaries much more\n   difficult without preventing\
    \ protocols such as DNS-SD from operating\n   as expected.  This, of course, has\
    \ implications on the applications\n   making use of such protocols, e.g., when\
    \ the hostname is being\n   displayed to users of the application.  They will\
    \ not as easily be\n   able to identify, e.g., network shares or services based\
    \ on the\n   hostname carried in the underlying protocols.  Also, the generation\n\
    \   of new hostnames should be synchronized with the change of other\n   tokens\
    \ used in network protocols such as the MAC or IP address to\n   prevent correlation\
    \ of this information.  For example, if the IP\n   address changes but the hostname\
    \ stays the same, the new IP address\n   can be correlated to belong to the same\
    \ device based on a leaked\n   hostname.\n   Some operating systems, including\
    \ Windows, support \"per network\"\n   hostnames, but some other operating systems\
    \ only support \"global\"\n   hostnames.  In that case, changing the hostname\
    \ may be difficult if\n   the host is multihomed, as the same name will be used\
    \ on several\n   networks.  Other operating systems already use potentially different\n\
    \   hostnames for different purposes, which might be a good model to\n   combine\
    \ both static hostnames and randomized hostnames based on their\n   potential\
    \ use and threat to a user's privacy.\n   Obviously, further studies are required\
    \ before the idea of randomized\n   hostnames can be implemented.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document does not introduce any new protocol.\
    \  It does point to\n   potential privacy issues in a set of existing protocols.\n\
    \   There are obvious privacy gains to changing to randomized hostnames\n   and\
    \ also to changing these names frequently.  However, wide\n   deployment might\
    \ affect security functions or current practices.  For\n   example, incident response\
    \ using hostnames to track the source of\n   traffic might be affected.  It is\
    \ common practice to include\n   hostnames and reverse lookup information at various\
    \ times during an\n   investigation.\n"
- title: 7.  IANA Considerations
  contents:
  - "7.  IANA Considerations\n   This document does not require any IANA actions.\n"
- title: 8.  Informative References
  contents:
  - "8.  Informative References\n   [RFC1002]  NetBIOS Working Group in the Defense\
    \ Advanced Research\n              Projects Agency, Internet Activities Board,\
    \ and End-to-End\n              Services Task Force, \"Protocol standard for a\
    \ NetBIOS\n              service on a TCP/UDP transport: Detailed specifications\"\
    ,\n              STD 19, RFC 1002, DOI 10.17487/RFC1002, March 1987,\n       \
    \       <http://www.rfc-editor.org/info/rfc1002>.\n   [RFC1033]  Lottor, M., \"\
    Domain Administrators Operations Guide\",\n              RFC 1033, DOI 10.17487/RFC1033,\
    \ November 1987,\n              <http://www.rfc-editor.org/info/rfc1033>.\n  \
    \ [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n          \
    \    specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November\
    \ 1987, <http://www.rfc-editor.org/info/rfc1035>.\n   [RFC1983]  Malkin, G., Ed.,\
    \ \"Internet Users' Glossary\", FYI 18,\n              RFC 1983, DOI 10.17487/RFC1983,\
    \ August 1996,\n              <http://www.rfc-editor.org/info/rfc1983>.\n   [RFC2131]\
    \  Droms, R., \"Dynamic Host Configuration Protocol\",\n              RFC 2131,\
    \ DOI 10.17487/RFC2131, March 1997,\n              <http://www.rfc-editor.org/info/rfc2131>.\n\
    \   [RFC2132]  Alexander, S. and R. Droms, \"DHCP Options and BOOTP Vendor\n \
    \             Extensions\", RFC 2132, DOI 10.17487/RFC2132, March 1997,\n    \
    \          <http://www.rfc-editor.org/info/rfc2132>.\n   [RFC2782]  Gulbrandsen,\
    \ A., Vixie, P., and L. Esibov, \"A DNS RR for\n              specifying the location\
    \ of services (DNS SRV)\", RFC 2782,\n              DOI 10.17487/RFC2782, February\
    \ 2000,\n              <http://www.rfc-editor.org/info/rfc2782>.\n   [RFC3315]\
    \  Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n              C.,\
    \ and M. Carney, \"Dynamic Host Configuration Protocol\n              for IPv6\
    \ (DHCPv6)\", RFC 3315, DOI 10.17487/RFC3315, July\n              2003, <http://www.rfc-editor.org/info/rfc3315>.\n\
    \   [RFC3596]  Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,\n      \
    \        \"DNS Extensions to Support IP Version 6\", RFC 3596,\n             \
    \ DOI 10.17487/RFC3596, October 2003,\n              <http://www.rfc-editor.org/info/rfc3596>.\n\
    \   [RFC4620]  Crawford, M. and B. Haberman, Ed., \"IPv6 Node Information\n  \
    \            Queries\", RFC 4620, DOI 10.17487/RFC4620, August 2006,\n       \
    \       <http://www.rfc-editor.org/info/rfc4620>.\n   [RFC4795]  Aboba, B., Thaler,\
    \ D., and L. Esibov, \"Link-local\n              Multicast Name Resolution (LLMNR)\"\
    , RFC 4795,\n              DOI 10.17487/RFC4795, January 2007,\n             \
    \ <http://www.rfc-editor.org/info/rfc4795>.\n   [RFC6762]  Cheshire, S. and M.\
    \ Krochmal, \"Multicast DNS\", RFC 6762,\n              DOI 10.17487/RFC6762,\
    \ February 2013,\n              <http://www.rfc-editor.org/info/rfc6762>.\n  \
    \ [RFC6763]  Cheshire, S. and M. Krochmal, \"DNS-Based Service\n             \
    \ Discovery\", RFC 6763, DOI 10.17487/RFC6763, February 2013,\n              <http://www.rfc-editor.org/info/rfc6763>.\n\
    \   [RFC7288]  Thaler, D., \"Reflections on Host Firewalls\", RFC 7288,\n    \
    \          DOI 10.17487/RFC7288, June 2014,\n              <http://www.rfc-editor.org/info/rfc7288>.\n\
    \   [RFC7719]  Hoffman, P., Sullivan, A., and K. Fujiwara, \"DNS\n           \
    \   Terminology\", RFC 7719, DOI 10.17487/RFC7719, December\n              2015,\
    \ <http://www.rfc-editor.org/info/rfc7719>.\n   [RFC7819]  Jiang, S., Krishnan,\
    \ S., and T. Mrugalski, \"Privacy\n              Considerations for DHCP\", RFC\
    \ 7819, DOI 10.17487/RFC7819,\n              April 2016, <http://www.rfc-editor.org/info/rfc7819>.\n\
    \   [RFC7824]  Krishnan, S., Mrugalski, T., and S. Jiang, \"Privacy\n        \
    \      Considerations for DHCPv6\", RFC 7824,\n              DOI 10.17487/RFC7824,\
    \ May 2016,\n              <http://www.rfc-editor.org/info/rfc7824>.\n   [RFC7844]\
    \  Huitema, C., Mrugalski, T., and S. Krishnan, \"Anonymity\n              Profiles\
    \ for DHCP Clients\", RFC 7844,\n              DOI 10.17487/RFC7844, May 2016,\n\
    \              <http://www.rfc-editor.org/info/rfc7844>.\n   [TRAC2016] Faath,\
    \ M., Winter, R., and F. Weisshaar, \"How Broadcast\n              Data Reveals\
    \ Your Identity and Social Graph\", IEEE,\n              Wireless Communications\
    \ and Mobile Computing Conference\n              (IWCMC), 2016 International,\n\
    \              DOI 10.1109/IWCMC.2016.7577084, September 2016.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to the members of the INTAREA Working Group for discussions\n\
    \   and reviews.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Christian Huitema\n   Private Octopus Inc.\n   Friday\
    \ Harbor, WA  98250\n   United States of America\n   Email: huitema@huitema.net\n\
    \   Dave Thaler\n   Microsoft\n   Redmond, WA  98052\n   United States of America\n\
    \   Email: dthaler@microsoft.com\n   Rolf Winter\n   University of Applied Sciences\
    \ Augsburg\n   Augsburg\n   DE\n   Email: rolf.winter@hs-augsburg.de\n"
