- title: __initial_text__
  contents:
  - '        Legacy Resolver Compatibility for Delegation Signer (DS)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2004).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   As the DNS Security (DNSSEC) specifications have evolved, the syntax\n\
    \   and semantics of the DNSSEC resource records (RRs) have changed.\n   Many\
    \ deployed nameservers understand variants of these semantics.\n   Dangerous interactions\
    \ can occur when a resolver that understands an\n   earlier version of these semantics\
    \ queries an authoritative server\n   that understands the new delegation signer\
    \ semantics, including at\n   least one failure scenario that will cause an unsecured\
    \ zone to be\n   unresolvable.  This document changes the type codes and mnemonics\
    \ of\n   the DNSSEC RRs (SIG, KEY, and NXT) to avoid those interactions.\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The DNSSEC protocol has been through many iterations whose\
    \ syntax and\n   semantics are not completely compatible.  This has occurred as\
    \ part\n   of the ordinary process of proposing a protocol, implementing it,\n\
    \   testing it in the increasingly complex and diverse environment of the\n  \
    \ Internet, and refining the definitions of the initial Proposed\n   Standard.\
    \  In the case of DNSSEC, the process has been complicated by\n   DNS's criticality\
    \ and wide deployment and the need to add security\n   while minimizing daily\
    \ operational complexity.\n   A weak area for previous DNS specifications has\
    \ been lack of detail\n   in specifying resolver behavior, leaving implementors\
    \ largely on\n   their own to determine many details of resolver function.  This,\n\
    \   combined with the number of iterations the DNSSEC specifications have\n  \
    \ been through, has resulted in fielded code with a wide variety of\n   behaviors.\
    \  This variety makes it difficult to predict how a protocol\n   change will be\
    \ handled by all deployed resolvers.  The risk that a\n   change will cause unacceptable\
    \ or even catastrophic failures makes it\n   difficult to design and deploy a\
    \ protocol change.  One strategy for\n   managing that risk is to structure protocol\
    \ changes so that existing\n   resolvers can completely ignore input that might\
    \ confuse them or\n   trigger undesirable failure modes.\n   This document addresses\
    \ a specific problem caused by Delegation\n   Signer's (DS) [RFC3658] introduction\
    \ of new semantics for the NXT RR\n   that are incompatible with the semantics\
    \ in [RFC2535].  Answers\n   provided by DS-aware servers can trigger an unacceptable\
    \ failure mode\n   in some resolvers that implement RFC 2535, which provides a\
    \ great\n   disincentive to sign zones with DS.  The changes defined in this\n\
    \   document allow for the incremental deployment of DS.\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   In this document, the term \"unsecure delegation\" means\
    \ any delegation\n   for which no DS record appears at the parent.  An \"unsecure\
    \ referral\"\n   is an answer from the parent containing an NS RRset and a proof\
    \ that\n   no DS record exists for that name.\n   The key words \"MUST\", \"MUST\
    \ NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\"\
    , \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted\
    \ as described in [RFC2119].\n"
- title: 1.2.  The Problem
  contents:
  - "1.2.  The Problem\n   Delegation Signer (DS) introduces new semantics for the\
    \ NXT RR that\n   are incompatible with the semantics in RFC 2535.  In RFC 2535,\
    \ NXT\n   records were only required to be returned as part of a non-existence\n\
    \   proof.  With DS, an unsecure referral returns, in addition to the NS,\n  \
    \ a proof of non-existence of a DS RR in the form of an NXT and\n   SIG(NXT).\
    \  RFC 2535 didn't specify how a resolver was to interpret a\n   response with\
    \ RCODE=0, AA=0, and both an NS and an NXT in the\n   authority section.  Some\
    \ widely deployed 2535-aware resolvers\n   interpret any answer with an NXT as\
    \ a proof of non-existence of the\n   requested record.  This results in unsecure\
    \ delegations being\n   invisible to 2535-aware resolvers and violates the basic\n\
    \   architectural principle that DNSSEC must do no harm -- the signing of\n  \
    \ zones must not prevent the resolution of unsecured delegations.\n"
- title: 2.  Possible Solutions
  contents:
  - "2.  Possible Solutions\n   This section presents several solutions that were\
    \ considered.\n   Section 3 describes the one selected.\n"
- title: 2.1.  Change SIG, KEY, and NXT type codes
  contents:
  - "2.1.  Change SIG, KEY, and NXT type codes\n   To avoid the problem described\
    \ above, legacy (RFC2535-aware)\n   resolvers need to be kept from seeing unsecure\
    \ referrals that include\n   NXT records in the authority section.  The simplest\
    \ way to do that is\n   to change the type codes for SIG, KEY, and NXT.\n   The\
    \ obvious drawback to this is that new resolvers will not be able\n   to validate\
    \ zones signed with the old RRs.  This problem already\n   exists, however, because\
    \ of the changes made by DS, and resolvers\n   that understand the old RRs (and\
    \ have compatibility issues with DS)\n   are far more prevalent than 2535-signed\
    \ zones.\n"
- title: 2.2.  Change a subset of type codes
  contents:
  - "2.2.  Change a subset of type codes\n   The observed problem with unsecure referrals\
    \ could be addressed by\n   changing only the NXT type code or another subset\
    \ of the type codes\n   that includes NXT.  This has the virtue of apparent simplicity,\
    \ but\n   it risks introducing new problems or not going far enough.  It's\n \
    \  quite possible that more incompatibilities exist between DS and\n   earlier\
    \ semantics.  Legacy resolvers may also be confused by seeing\n   records they\
    \ recognize (SIG and KEY) while being unable to find NXTs.\n   Although it may\
    \ seem unnecessary to fix that which is not obviously\n   broken, it's far cleaner\
    \ to change all of the type codes at once.\n   This will leave legacy resolvers\
    \ and tools completely blinded to\n   DNSSEC -- they will see only unknown RRs.\n"
- title: 2.3.  Replace the DO bit
  contents:
  - "2.3.  Replace the DO bit\n   Another way to keep legacy resolvers from ever seeing\
    \ DNSSEC records\n   with DS semantics is to have authoritative servers only send\
    \ that\n   data to DS-aware resolvers.  It's been proposed that assigning a new\n\
    \   EDNS0 flag bit to signal DS-awareness (tentatively called \"DA\"), and\n \
    \  having authoritative servers send DNSSEC data only in response to\n   queries\
    \ with the DA bit set, would accomplish this.  This bit would\n   presumably supplant\
    \ the DO bit described in [RFC3225].\n   This solution is sufficient only if all\
    \ 2535-aware resolvers zero out\n   EDNS0 flags that they don't understand.  If\
    \ one passed through the DA\n   bit unchanged, it would still see the new semantics,\
    \ and it would\n   probably fail to see unsecure delegations.  Since it's impractical\
    \ to\n   know how every DNS implementation handles unknown EDNS0 flags, this\n\
    \   is not a universal solution.  It could, though, be considered in\n   addition\
    \ to changing the RR type codes.\n"
- title: 2.4.  Increment the EDNS version
  contents:
  - "2.4.  Increment the EDNS version\n   Another possible solution is to increment\
    \ the EDNS version number as\n   defined in [RFC2671], on the assumption that\
    \ all existing\n   implementations will reject higher versions than they support,\
    \ and\n   retain the DO bit as the signal for DNSSEC awareness.  This approach\n\
    \   has not been tested.\n"
- title: 2.5.  Do nothing
  contents:
  - "2.5.  Do nothing\n   There is a large deployed base of DNS resolvers that understand\n\
    \   DNSSEC as defined by the standards track RFC 2535 and [RFC2065] and,\n   due\
    \ to under specification in those documents, interpret any answer\n   with an\
    \ NXT as a non-existence proof.  So long as that is the case,\n   zone owners\
    \ will have a strong incentive to not sign any zones that\n   contain unsecure\
    \ delegations, lest those delegations be invisible to\n   such a large installed\
    \ base.  This will dramatically slow DNSSEC\n   adoption.\n   Unfortunately, without\
    \ signed zones there's no clear incentive for\n   operators of resolvers to upgrade\
    \ their software to support the new\n   version of DNSSEC, as defined in RFC 3658.\
    \  Historical data suggests\n   that resolvers are rarely upgraded, and that old\
    \ nameserver code\n   never dies.\n   Rather than wait years for resolvers to\
    \ be upgraded through natural\n   processes before signing zones with unsecure\
    \ delegations, addressing\n   this problem with a protocol change will immediately\
    \ remove the\n   disincentive for signing zones and allow widespread deployment\
    \ of\n   DNSSEC.\n"
- title: 3.  Protocol changes
  contents:
  - "3.  Protocol changes\n   This document changes the type codes of SIG, KEY, and\
    \ NXT.  This\n   approach is the cleanest and safest of those discussed above,\
    \ largely\n   because the behavior of resolvers that receive unknown type codes\
    \ is\n   well understood.  This approach has also received the most testing.\n\
    \   To avoid operational confusion, it's also necessary to change the\n   mnemonics\
    \ for these RRs.  DNSKEY will be the replacement for KEY,\n   with the mnemonic\
    \ indicating that these keys are not for application\n   use, per [RFC3445]. \
    \ RRSIG (Resource Record SIGnature) will replace\n   SIG, and NSEC (Next SECure)\
    \ will replace NXT.  These new types\n   completely replace the old types, except\
    \ that SIG(0) [RFC2931] and\n   TKEY [RFC2930] will continue to use SIG and KEY.\n\
    \   The new types will have exactly the same syntax and semantics as\n   specified\
    \ for SIG, KEY, and NXT in RFC 2535 and RFC 3658 except for\n   the following:\n\
    \   1) Consistent with [RFC3597], domain names embedded in RRSIG and NSEC\n  \
    \    RRs MUST NOT be compressed,\n   2) Embedded domain names in RRSIG and NSEC\
    \ RRs are not downcased for\n      purposes of DNSSEC canonical form and ordering\
    \ nor for equality\n      comparison, and\n   3) An RRSIG with a type-covered\
    \ field of zero has undefined\n      semantics.  The meaning of such a resource\
    \ record may only be\n      defined by IETF Standards Action.\n   If a resolver\
    \ receives the old types, it SHOULD treat them as unknown\n   RRs and SHOULD NOT\
    \ assign any special meaning to them or give them\n   any special treatment. \
    \ It MUST NOT use them for DNSSEC validations\n   or other DNS operational decision\
    \ making.  For example, a resolver\n   MUST NOT use DNSKEYs to validate SIGs or\
    \ use KEYs to validate RRSIGs.\n   If SIG, KEY, or NXT RRs are included in a zone,\
    \ they MUST NOT receive\n   special treatment.  As an example, if a SIG is included\
    \ in a signed\n   zone, there MUST be an RRSIG for it.  Authoritative servers\
    \ may wish\n   to give error messages when loading zones containing SIG or NXT\n\
    \   records (KEY records may be included for SIG(0) or TKEY).\n   As a clarification\
    \ to previous documents, some positive responses,\n   particularly wildcard proofs\
    \ and unsecure referrals, will contain\n   NSEC RRs.  Resolvers MUST NOT treat\
    \ answers with NSEC RRs as negative\n   answers merely because they contain an\
    \ NSEC.\n"
- title: 4.  IANA Considerations
  contents:
  - '4.  IANA Considerations

    '
- title: 4.1.  DNS Resource Record Types
  contents:
  - "4.1.  DNS Resource Record Types\n   This document updates the IANA registry for\
    \ DNS Resource Record Types\n   by assigning types 46, 47, and 48 to the RRSIG,\
    \ NSEC, and DNSKEY RRs,\n   respectively.\n   Types 24 and 25 (SIG and KEY) are\
    \ retained for SIG(0) [RFC2931] and\n   TKEY [RFC2930] use only.\n   Type 30 (NXT)\
    \ should be marked as Obsolete.\n"
- title: 4.2.  DNS Security Algorithm Numbers
  contents:
  - "4.2.  DNS Security Algorithm Numbers\n   To allow zone signing (DNSSEC) and transaction\
    \ security mechanisms\n   (SIG(0) and TKEY) to use different sets of algorithms,\
    \ the existing\n   \"DNS Security Algorithm Numbers\" registry is modified to\
    \ include the\n   applicability of each algorithm.  Specifically, two new columns\
    \ are\n   added to the registry, showing whether each algorithm may be used for\n\
    \   zone signing, transaction security mechanisms, or both.  Only\n   algorithms\
    \ usable for zone signing may be used in DNSKEY, RRSIG, and\n   DS RRs.  Only\
    \ algorithms usable for SIG(0) and/or TSIG may be used in\n   SIG and KEY RRs.\n\
    \   All currently defined algorithms except for Indirect (algorithm 252)\n   remain\
    \ usable for transaction security mechanisms.  Only RSA/SHA-1\n   [RFC3110], DSA/SHA-1\
    \ [RFC2536], and private algorithms (types 253 and\n   254) may be used for zone\
    \ signing.  Note that the registry does not\n   contain the requirement level\
    \ of each algorithm, only whether or not\n   an algorithm may be used for the\
    \ given purposes.  For example,\n   RSA/MD5, while allowed for transaction security\
    \ mechanisms, is NOT\n   RECOMMENDED, per [RFC3110].\n   Additionally, the presentation\
    \ format algorithm mnemonics from\n   [RFC2535] Section 7 are added to the registry.\
    \  This document assigns\n   RSA/SHA-1 the mnemonic RSASHA1.\n   As before, assignment\
    \ of new algorithms in this registry requires\n   IETF Standards Action.  Additionally,\
    \ modification of algorithm\n   mnemonics or applicability requires IETF Standards\
    \ Action.  Documents\n   defining a new algorithm must address the applicability\
    \ of the\n   algorithm and should assign a presentation mnemonic to the algorithm.\n"
- title: 4.3.  DNSKEY Flags
  contents:
  - "4.3.  DNSKEY Flags\n   Like the KEY resource record, DNSKEY contains a 16-bit\
    \ flags field.\n   This document creates a new registry for the DNSKEY flags field.\n\
    \   Initially, this registry only contains an assignment for bit 7 (the\n   ZONE\
    \ bit).  Bits 0-6 and 8-15 are available for assignment by IETF\n   Standards\
    \ Action.\n"
- title: 4.4.  DNSKEY Protocol Octet
  contents:
  - "4.4.  DNSKEY Protocol Octet\n   Like the KEY resource record, DNSKEY contains\
    \ an eight bit protocol\n   field.  The only defined value for this field is 3\
    \ (DNSSEC).  No\n   other values are allowed, hence no IANA registry is needed\
    \ for this\n   field.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   The changes introduced here do not materially\
    \ affect security.  The\n   implications of trying to use both new and legacy\
    \ types together are\n   not well understood, and attempts to do so would probably\
    \ lead to\n   unintended and dangerous results.\n   Changing type codes will leave\
    \ code paths in legacy resolvers that\n   are never exercised.  Unexercised code\
    \ paths are a frequent source of\n   security holes, largely because those code\
    \ paths do not get frequent\n   scrutiny.\n   Doing nothing, as described in section\
    \ 2.5, will slow DNSSEC\n   deployment.  While this does not decrease security,\
    \ it also fails to\n   increase it.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC2535] Eastlake, D., \"Domain Name System Security Extensions\"\
    , RFC\n             2535, March 1999.\n   [RFC2536] Eastlake, D., \"DSA KEYs and\
    \ SIGs in the Domain Name System\n             (DNS)\", RFC 2536, March 1999.\n\
    \   [RFC2930] Eastlake, D., \"Secret Key Establishment for DNS (TKEY RR)\",\n\
    \             RFC 2930, September 2000.\n   [RFC2931] Eastlake, D., \"DNS Request\
    \ and Transaction Signatures\n             (SIG(0)s)\", RFC 2931, September 2000.\n\
    \   [RFC3110] Eastlake, D., \"RSA/SHA-1 SIGs and RSA KEYs in the Domain\n    \
    \         Name System (DNS)\", RFC 3110, May 2001.\n   [RFC3658] Gudmundsson,\
    \ O., \"Delegation Signer (DS) Resource Record\n             (RR)\", RFC 3658,\
    \ December 2003.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [RFC2065] Eastlake, 3rd, D. and C. Kaufman,\
    \ \"Domain Name System\n             Security Extensions\", RFC 2065, January\
    \ 1997.\n   [RFC2671] Vixie, P., \"Extension Mechanisms for DNS (EDNS0)\", RFC\n\
    \             2671, August 1999.\n   [RFC3225] Conrad, D., \"Indicating Resolver\
    \ Support of DNSSEC\", RFC\n             3225, December 2001.\n   [RFC3445] Massey,\
    \ D., and S. Rose, \"Limiting the Scope of the KEY\n             Resource Record\
    \ (RR)\", RFC 3445, December 2002.\n   [RFC3597] Gustafsson, A., \"Handling of\
    \ Unknown DNS Resource Record\n             (RR) Types\", RFC 3597, September\
    \ 2003.\n"
- title: 7.  Acknowledgments
  contents:
  - "7.  Acknowledgments\n   The changes introduced here and the analysis of alternatives\
    \ had many\n   contributors.  With apologies to anyone overlooked, those include:\n\
    \   Michael Graff, Johan Ihren, Olaf Kolkman, Mark Kosters, Ed Lewis,\n   Bill\
    \ Manning, Paul Vixie, and Suzanne Woolf.\n   Thanks to Jakob Schlyter and Mark\
    \ Andrews for identifying the\n   incompatibility described in section 1.2.\n\
    \   In addition to the above, the author would like to thank Scott Rose,\n   Olafur\
    \ Gudmundsson, and Sandra Murphy for their substantive comments.\n"
- title: 8.  Author's Address
  contents:
  - "8.  Author's Address\n   Samuel Weiler\n   SPARTA, Inc.\n   7075 Samuel Morse\
    \ Drive\n   Columbia, MD 21046\n   USA\n   EMail: weiler@tislabs.com\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (2004). \
    \ This document is subject\n   to the rights, licenses and restrictions contained\
    \ in BCP 78, and\n   except as set forth therein, the authors retain all their\
    \ rights.\n   This document and the information contained herein are provided\
    \ on an\n   \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n\
    \   OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
