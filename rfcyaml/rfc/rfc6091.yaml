- title: __initial_text__
  contents:
  - '  Using OpenPGP Keys for Transport Layer Security (TLS) Authentication

    '
- title: Abstract
  contents:
  - "Abstract\n   This memo defines Transport Layer Security (TLS) extensions and\n\
    \   associated semantics that allow clients and servers to negotiate the\n   use\
    \ of OpenPGP certificates for a TLS session, and specifies how to\n   transport\
    \ OpenPGP certificates via TLS.  It also defines the registry\n   for non-X.509\
    \ certificate types.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6091.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \   2. Terminology .....................................................2\n  \
    \ 3. Changes to the Handshake Message Contents .......................3\n    \
    \  3.1. Client Hello ...............................................3\n      3.2.\
    \ Server Hello ...............................................4\n      3.3. Server\
    \ Certificate .........................................4\n      3.4. Certificate\
    \ Request ........................................6\n      3.5. Client Certificate\
    \ .........................................6\n      3.6. Other Handshake Messages\
    \ ...................................7\n   4. Security Considerations .........................................7\n\
    \   5. IANA Considerations .............................................7\n  \
    \ 6. Acknowledgements ................................................8\n   7.\
    \ References ......................................................8\n      7.1.\
    \ Normative References .......................................8\n      7.2. Informative\
    \ References .....................................8\n   Appendix A.  Changes from\
    \ RFC 5081 .................................9\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The IETF has two sets of standards for public key certificates:\
    \ one\n   set for the use of X.509 certificates [RFC5280], and one for OpenPGP\n\
    \   certificates [RFC4880].  At the time of this writing, TLS [RFC5246]\n   standards\
    \ are defined to use X.509 certificates.  This document\n   specifies a way to\
    \ negotiate the use of OpenPGP certificates for a\n   TLS session, and specifies\
    \ how to transport OpenPGP certificates via\n   TLS.  The proposed extensions\
    \ are backward-compatible with the\n   current TLS specification, so that existing\
    \ client and server\n   implementations that make use of X.509 certificates are\
    \ not affected.\n   These extensions are not backward-compatible with [RFC5081],\
    \ and the\n   major differences are summarized in Appendix A.  Although the OpenPGP\n\
    \   CertificateType value is being reused by this memo with the same\n   number\
    \ as that specified in [RFC5081] but with different semantics,\n   we believe\
    \ that this causes no interoperability issues because the\n   latter was not widely\
    \ deployed.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   The term \"OpenPGP key\" is used in this document as in the\
    \ OpenPGP\n   specification [RFC4880].  We use the term \"OpenPGP certificate\"\
    \ to\n   refer to OpenPGP keys that are enabled for authentication.\n   This document\
    \ uses the same notation and terminology used in the TLS\n   Protocol specification\
    \ [RFC5246].\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
- title: 3.  Changes to the Handshake Message Contents
  contents:
  - "3.  Changes to the Handshake Message Contents\n   This section describes the\
    \ changes to the TLS handshake message\n   contents when OpenPGP certificates\
    \ are to be used for authentication.\n"
- title: 3.1.  Client Hello
  contents:
  - "3.1.  Client Hello\n   In order to indicate the support of multiple certificate\
    \ types,\n   clients MUST include an extension of type \"cert_type\" to the extended\n\
    \   client hello message.  The \"cert_type\" TLS extension is assigned the\n \
    \  value of 9 from the TLS ExtensionType registry.  This value is used\n   as\
    \ the extension number for the extensions in both the client hello\n   message\
    \ and the server hello message.  The hello extension mechanism\n   is described\
    \ in [RFC5246].\n   This extension carries a list of supported certificate types\
    \ the\n   client can use, sorted by client preference.  This extension MUST be\n\
    \   omitted if the client only supports X.509 certificates.  The\n   \"extension_data\"\
    \ field of this extension contains a\n   CertificateTypeExtension structure. \
    \ Note that the\n   CertificateTypeExtension structure is being used both by the\
    \ client\n   and the server, even though the structure is only specified once\
    \ in\n   this document.  Reusing a single specification for both client and\n\
    \   server is common in other specifications, such as the TLS protocol\n   itself\
    \ [RFC5246].\n      enum { client, server } ClientOrServerExtension;\n      enum\
    \ { X.509(0), OpenPGP(1), (255) } CertificateType;\n      struct {\n         select(ClientOrServerExtension)\
    \ {\n            case client:\n               CertificateType certificate_types<1..2^8-1>;\n\
    \            case server:\n               CertificateType certificate_type;\n\
    \         }\n      } CertificateTypeExtension;\n   No new cipher suites are required\
    \ to use OpenPGP certificates.  All\n   existing cipher suites that support a\
    \ key exchange method compatible\n   with the key in the certificate can be used\
    \ in combination with\n   OpenPGP certificates.\n"
- title: 3.2.  Server Hello
  contents:
  - "3.2.  Server Hello\n   If the server receives a client hello that contains the\
    \ \"cert_type\"\n   extension and chooses a cipher suite that requires a certificate,\n\
    \   then two outcomes are possible.  The server MUST either select a\n   certificate\
    \ type from the certificate_types field in the extended\n   client hello or terminate\
    \ the session with a fatal alert of type\n   \"unsupported_certificate\".\n  \
    \ The certificate type selected by the server is encoded in a\n   CertificateTypeExtension\
    \ structure, which is included in the extended\n   server hello message using\
    \ an extension of type \"cert_type\".  Servers\n   that only support X.509 certificates\
    \ MAY omit including the\n   \"cert_type\" extension in the extended server hello.\n"
- title: 3.3.  Server Certificate
  contents:
  - "3.3.  Server Certificate\n   The contents of the certificate message sent from\
    \ server to client\n   and vice versa are determined by the negotiated certificate\
    \ type and\n   the selected cipher suite's key exchange algorithm.\n   If the\
    \ OpenPGP certificate type is negotiated, then it is required to\n   present an\
    \ OpenPGP certificate in the certificate message.  The\n   certificate must contain\
    \ a public key that matches the selected key\n   exchange algorithm, as shown\
    \ below.\n      Key Exchange Algorithm    OpenPGP Certificate Type\n      RSA\
    \                       RSA public key that can be used for\n                \
    \                encryption.\n      DHE_DSS                   DSA public key that\
    \ can be used for\n                                authentication.\n      DHE_RSA\
    \                   RSA public key that can be used for\n                    \
    \            authentication.\n   An OpenPGP certificate appearing in the certificate\
    \ message is sent\n   using the binary OpenPGP format.  The certificate MUST contain\
    \ all\n   the elements required by Section 11.1 of [RFC4880].\n   OpenPGP certificates\
    \ to be transferred are placed in the Certificate\n   structure and tagged with\
    \ the OpenPGPCertDescriptorType\n   \"subkey_cert\".  Since those certificates\
    \ might contain several\n   subkeys, the subkey ID to be used for this session\
    \ is explicitly\n   specified in the OpenPGPKeyID field.  The key ID must be specified\n\
    \   even if the certificate has only a primary key.  The peer, upon\n   receiving\
    \ this type, has to either use the specified subkey or\n   terminate the session\
    \ with a fatal alert of\n   \"unsupported_certificate\".\n   The option is also\
    \ available to send an OpenPGP fingerprint, instead\n   of sending the entire\
    \ certificate, by using the\n   \"subkey_cert_fingerprint\" tag.  This tag uses\
    \ the\n   OpenPGPSubKeyFingerprint structure and requires the primary key\n  \
    \ fingerprint to be specified, as well as the subkey ID to be used for\n   this\
    \ session.  The peer shall respond with a\n   \"certificate_unobtainable\" fatal\
    \ alert if the certificate with the\n   given fingerprint cannot be found.  The\
    \ \"certificate_unobtainable\"\n   fatal alert is defined in Section 5 of [RFC6066].\n\
    \   Implementations of this protocol MUST ensure that the sizes of key\n   IDs\
    \ and fingerprints in the OpenPGPSubKeyCert and\n   OpenPGPSubKeyFingerprint structures\
    \ comply with [RFC4880].  Moreover,\n   it is RECOMMENDED that the keys to be\
    \ used with this protocol have\n   the authentication flag (0x20) set.\n   The\
    \ process of fingerprint generation is described in Section 12.2 of\n   [RFC4880].\n\
    \   The enumerated types \"cert_fingerprint\" and \"cert\" of\n   OpenPGPCertDescriptorType\
    \ that were defined in [RFC5081] are not used\n   and are marked as obsolete by\
    \ this document.  The \"empty_cert\" type\n   has replaced \"cert\" and is a backward-compatible\
    \ way to specify an\n   empty certificate; \"cert_fingerprint\" MUST NOT be used\
    \ with this\n   updated specification, and hence that old alternative has been\n\
    \   removed from the Certificate struct description.\n      enum {\n         \
    \  empty_cert(1),\n           subkey_cert(2),\n           subkey_cert_fingerprint(3),\n\
    \           (255)\n      } OpenPGPCertDescriptorType;\n      uint24 OpenPGPEmptyCert\
    \ = 0;\n      struct {\n          opaque OpenPGPKeyID<8..255>;\n          opaque\
    \ OpenPGPCert<0..2^24-1>;\n      } OpenPGPSubKeyCert;\n      struct {\n      \
    \    opaque OpenPGPKeyID<8..255>;\n          opaque OpenPGPCertFingerprint<20..255>;\n\
    \      } OpenPGPSubKeyFingerprint;\n      struct {\n           OpenPGPCertDescriptorType\
    \ descriptorType;\n           select (descriptorType) {\n                case\
    \ empty_cert: OpenPGPEmptyCert;\n                case subkey_cert: OpenPGPSubKeyCert;\n\
    \                case subkey_cert_fingerprint:\n                    OpenPGPSubKeyCertFingerprint;\n\
    \           }\n      } Certificate;\n"
- title: 3.4.  Certificate Request
  contents:
  - "3.4.  Certificate Request\n   The semantics of this message remain the same as\
    \ in the TLS\n   specification.  However, if this message is sent, and the negotiated\n\
    \   certificate type is OpenPGP, the \"certificate_authorities\" list MUST\n \
    \  be empty.\n"
- title: 3.5.  Client Certificate
  contents:
  - "3.5.  Client Certificate\n   This message is only sent in response to the certificate\
    \ request\n   message.  The client certificate message is sent using the same\n\
    \   formatting as the server certificate message, and it is also required\n  \
    \ to present a certificate that matches the negotiated certificate\n   type. \
    \ If OpenPGP certificates have been selected and no certificate\n   is available\
    \ from the client, then a certificate structure of type\n   \"empty_cert\" that\
    \ contains an OpenPGPEmptyCert value MUST be sent.\n   The server SHOULD respond\
    \ with a \"handshake_failure\" fatal alert if\n   client authentication is required.\n"
- title: 3.6.  Other Handshake Messages
  contents:
  - "3.6.  Other Handshake Messages\n   All the other handshake messages are identical\
    \ to the TLS\n   specification.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   All security considerations discussed in [RFC5246],\
    \ [RFC6066], and\n   [RFC4880] apply to this document.  Considerations about the\
    \ use of\n   the web of trust or identity and certificate verification procedures\n\
    \   are outside the scope of this document.  These are considered issues\n   to\
    \ be handled by the application layer protocols.\n   The protocol for certificate\
    \ type negotiation is identical in\n   operation to cipher suite negotiation as\
    \ described in the TLS\n   specification [RFC5246], with the addition of default\
    \ values when the\n   extension is omitted.  Since those omissions have a unique\
    \ meaning\n   and the same protection is applied to the values as with cipher\n\
    \   suites, it is believed that the security properties of this\n   negotiation\
    \ are the same as with cipher suite negotiation.\n   When using OpenPGP fingerprints\
    \ instead of the full certificates, the\n   discussion in Section 5 of [RFC6066]\
    \ for \"Client Certificate URLs\"\n   applies, especially when external servers\
    \ are used to retrieve keys.\n   However, a major difference is that although\
    \ the\n   \"client_certificate_url\" extension allows identifying certificates\n\
    \   without including the certificate hashes, this is not possible in the\n  \
    \ protocol proposed here.  In this protocol, the certificates, when not\n   sent,\
    \ are always identified by their fingerprint, which serves as a\n   cryptographic\
    \ hash of the certificate (see Section 12.2 of\n   [RFC4880]).\n   The information\
    \ that is available to participating parties and\n   eavesdroppers (when confidentiality\
    \ is not available through a\n   previous handshake) is the number and the types\
    \ of certificates they\n   hold, plus the contents of the certificates.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document uses a registry and the \"cert_type\"\
    \ extension\n   originally defined in [RFC5081].  Existing IANA references have\
    \ been\n   updated to point to this document.\n   In addition, the \"TLS Certificate\
    \ Types\" registry established by\n   [RFC5081] has been updated in the following\
    \ ways:\n   1.  Values 0 (X.509) and 1 (OpenPGP) are defined in this document.\n\
    \   2.  Values from 2 through 223 decimal inclusive are assigned via \"RFC\n \
    \      Required\" [RFC5226].\n   3.  Values from 224 decimal through 255 decimal\
    \ inclusive are\n       reserved for Private Use [RFC5226].\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The authors wish to thank Alfred Hoenes and Ted Hardie\
    \ for their\n   suggestions on improving this document.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4880]   Callas, J., Donnerhacke, L., Finney, H., Shaw, D., and\
    \ R.\n               Thayer, \"OpenPGP Message Format\", RFC 4880,\n         \
    \      November 2007.\n   [RFC5226]   Narten, T. and H. Alvestrand, \"Guidelines\
    \ for Writing an\n               IANA Considerations Section in RFCs\", BCP 26,\
    \ RFC 5226,\n               May 2008.\n   [RFC5246]   Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer Security\n               (TLS) Protocol Version 1.2\"\
    , RFC 5246, August 2008.\n   [RFC6066]   Eastlake 3rd, D., \"Transport Layer Security\
    \ (TLS)\n               Extensions: Extension Definitions\", RFC 6066,\n     \
    \          January 2011.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RFC5081]   Mavrogiannopoulos, N., \"Using OpenPGP\
    \ Keys for Transport\n               Layer Security (TLS) Authentication\", RFC\
    \ 5081,\n               November 2007.\n   [RFC5280]   Cooper, D., Santesson,\
    \ S., Farrell, S., Boeyen, S.,\n               Housley, R., and W. Polk, \"Internet\
    \ X.509 Public Key\n               Infrastructure Certificate and Certificate\
    \ Revocation\n               List (CRL) Profile\", RFC 5280, May 2008.\n"
- title: Appendix A.  Changes from RFC 5081
  contents:
  - "Appendix A.  Changes from RFC 5081\n   This document incorporates a major change\
    \ in the \"Server Certificate\"\n   and \"Client Certificate\" TLS messages that\
    \ will make implementations\n   following this protocol incompatible with those\
    \ following [RFC5081].\n   This change requires the subkey IDs used for TLS authentication\
    \ to be\n   marked explicitly in the handshake procedure.  This was decided in\n\
    \   order to place no limitation on the OpenPGP certificates' contents\n   that\
    \ can be used with this protocol.\n   [RFC5081] required that an OpenPGP key or\
    \ subkey be marked with the\n   authentication flag; thus, authentication would\
    \ have failed if this\n   flag was not set or if this flag was set in more than\
    \ one subkey.\n   The protocol in this memo has no such limitation.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Nikos Mavrogiannopoulos\n   ESAT/COSIC Katholieke Universiteit\
    \ Leuven\n   Kasteelpark Arenberg 10, bus 2446\n   Leuven-Heverlee,   B-3001\n\
    \   Belgium\n   EMail: nikos.mavrogiannopoulos@esat.kuleuven.be\n   Daniel Kahn\
    \ Gillmor\n   Independent\n   119 Herkimer St.\n   Brooklyn, NY  11216-2801\n\
    \   US\n   EMail: dkg@fifthhorseman.net\n"
