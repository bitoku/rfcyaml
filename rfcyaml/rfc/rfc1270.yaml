- title: __initial_text__
  contents:
  - '                      SNMP Communications Services

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Abstract ..............................................\
    \    1\n   2. Introduction ..........................................    1\n \
    \  3. Standardization .......................................    3\n   4. Interoperability\
    \ ......................................    3\n   5. To Transport or Not To Transport\
    \ ......................    3\n   6. Connection Oriented vs. Connectionless ................\
    \    6\n   7. Which Protocol ........................................    8\n \
    \  8. Security Considerations ...............................    9\n   9. Appendix\
    \ ..............................................    9\n   10. References ...........................................\
    \   10\n   11. Acknowledgements .....................................   11\n \
    \  12. Author's Address .....................................   11\n"
- title: 1.  Abstract
  contents:
  - "1.  Abstract\n   This memo is being distributed to members of the Internet community\
    \ as\n   an Informational RFC.  The intent is to present a discussion on the\n\
    \   issues relating to the communications services for SNMP.  While the\n   issues\
    \ discussed may not be directly relevant to the research problems\n   of the Internet,\
    \ they may be interesting to a number of researchers\n   and implementors.\n"
- title: 2.  Introduction
  contents:
  - "2.  Introduction\n   This document discusses various issues to be considered\
    \ when\n   determining the underlying communications services to be used by an\n\
    \   SNMP implementation.\n   As reported in RFC 1052, IAB Recommendations for\
    \ the Development of\n   Internet Network Management Standards [8], a two-prong\
    \ strategy for\n   network management of TCP/IP-based internets was undertaken.\
    \  In the\n   short-term, the Simple Network Management Protocol (SNMP), defined\
    \ in\n   RFC 1067, was to be used to manage nodes in the Internet community.\n\
    \   In the long-term, the use of the OSI network management framework was\n  \
    \ to be examined.  Two documents were produced to define the management\n   information:\
    \ RFC 1065, which defined the Structure of Management\n   Information (SMI), and\
    \ RFC 1066, which defined the Management\n   Information Base (MIB).  Both of\
    \ these documents were designed so as\n   to be compatible with both the SNMP\
    \ and the OSI network management\n   framework.\n   This strategy was quite successful\
    \ in the short-term: Internet-based\n   network management technology was fielded,\
    \ by both the research and\n   commercial communities, within a few months.  As\
    \ a result of this,\n   portions of the Internet community became network manageable\
    \ in a\n   timely fashion.\n   In May of 1990, the core documents were elevated\
    \ to \"Standard\n   Protocols\" with \"Recommended\" status.  As such, the Internet-standard\n\
    \   network management framework consists of: Structure and Identification\n \
    \  of Management Information for TCP/IP-based internets, RFC 1155 [9],\n   which\
    \ describes how managed objects contained in the MIB are defined;\n   Management\
    \ Information Base for Network Management of TCP/IP-based\n   internets, which\
    \ describes the managed objects contained in the MIB,\n   RFC 1156 [10]; and,\
    \ the Simple Network Management Protocol, RFC 1157\n   [1], which defines the\
    \ protocol used to manage these objects.\n   In parallel with this activity, documents\
    \ specifying how to transport\n   SNMP messages over protocols other than UDP/IP\
    \ have been developed and\n   published: SNMP Over Ethernet [3], SNMP Over OSI\
    \ [2], and SNMP Over\n   IPX [6] and it would be suprising if more were not developed.\
    \  These\n   memos have caused a degree of confusion in the community.  This\n\
    \   document is intended to disperse that confusion by discussing the\n   issues\
    \ of relevance to an implementor when choosing how to encapsulate\n   SNMP packets.\n\
    \   None of these documents have been made full Internet Standards. SNMP\n   Over\
    \ ISO and SNMP Over Ethernet are both Experimental protocols. SNMP\n   Over IPX\
    \ [6] is an Internet Draft. Only the SNMP Specification [1] is\n   an Internet\
    \ Standard.\n   No single transport scheme can be considered the absolute best\n\
    \   solution for all circumstances.  This note will argue that, except for\n \
    \  a very small set of special circumstances, operating SNMP over UDP/IP\n   is\
    \ the optimal scheme.\n   This document does not present a standard or a protocol\
    \ for the\n   Internet Community.  For production use in the Internet the SNMP\
    \ and\n   its required communication services are specified in [1].\n"
- title: 3.  Standardization
  contents:
  - "3.  Standardization\n   Currently, the SNMP Specification [1] only specifies\
    \ that the UDP\n   protocol be used to exchange SNMP messages.  While the IAB\
    \ may\n   standardize other protocols for use in exchanging SNMP messages in the\n\
    \   future, only UDP is currently standardized for this purpose.\n   In order\
    \ to claim full compliance with the SNMP Specification, an\n   implementation\
    \ would have to use UDP for SNMP message exchange.\n"
- title: 4.  Interoperability
  contents:
  - "4.  Interoperability\n   Interoperability is the degree to which the equipment\
    \ produced by one\n   vendor can can operate with equipment produced by another\
    \ vendor.\n   Related to Interoperability is compliance with a standard.  Everything\n\
    \   else being equal, a device that complies with some standard is more\n   likely\
    \ to be interoperable than a device that does not.\n   For commercial product\
    \ development, the pros and cons of developing an\n   interoperable product must\
    \ be weighed and a choice made.  Both\n   engineering and marketing organizations\
    \ participate in this process.\n   The Internet is the single largest market for\
    \ SNMP systems.  A large\n   portion of SNMP systems will be developed with the\
    \ Internet as a\n   target environment.  Therefore, it may be expected that the\
    \ Internet's\n   needs and requirements will be the driving force for SNMP.  SNMP\
    \ over\n   UDP/IP is specified as the \"Internet Standard\" protocol.  Therefore,\n\
    \   in order to operate in the Internet and be managed in that environment\n \
    \  on a production basis, a device must support SNMP over UDP/IP.  This\n   situation\
    \ will lead to SNMP over UDP/IP being the most common method\n   of operating\
    \ SNMP.  Therefore, the widest degree of interoperability\n   and widest acceptance\
    \ of a commercial product will be attained by\n   operating SNMP over UDP/IP.\n\
    \   The preponderance of UDP/IP based network management stations also\n   strongly\
    \ suggests that an agent should operate SNMP over UDP/IP.\n   The results of the\
    \ interoperability decision drive a number of\n   technical decisions.  If interoperability\
    \ is desired, then SNMP must be\n   operated over UDP/IP.\n"
- title: 5.  To Transport or Not To Transport
  contents:
  - "5.  To Transport or Not To Transport\n   A major issue is whether SNMP should\
    \ run on top of a transport-layer\n   protocol (such as UDP) or not.  Typically,\
    \ the choice is to run over a\n   transport/network/data link protocol or just\
    \ run over the datalink.\n   In fact, several protocols have been published for\
    \ operating SNMP over\n   several different datalink and transport protocols.\n\
    \   Operation of SNMP over a Transport and Network protocol stack\n   is preferred.\
    \  These protocols provide at least five functions\n   that are of vital importance\
    \ to the movement of SNMP packets\n   through a network:\n          o Routing\n\
    \               The network layer provides routing functions, which\n        \
    \       improves the overall utility of network management.  The\n           \
    \    network has the ability to re-route packets around failed\n             \
    \  areas.  This allows network management to continue\n               operating\
    \ during localized losses of service (It should\n               be noted that\
    \ these losses of service occur not only\n               because of failures,\
    \ but also for non-failure reasons\n               such as preventive maintenance).\n\
    \          o Media Independence\n               The network layer provides a high\
    \ degree of media\n               independence.  By using this capability, many\
    \ different\n               types of network elements may be managed.  Tying SNMP\
    \ to\n               a particular data link protocol limits the management\n \
    \              scope of those SNMP entities to just those devices that\n     \
    \          use that datalink protocol.\n          o End-to-End Checksum\n    \
    \           The end-to-end checksum provided by transport protocols\n        \
    \       improves the reliability of the data transfer.\n          o Multiplexing/Demultiplexing\n\
    \               Transport protocols provide multiplexing and\n               demultiplexing\
    \ services.  These services facilitate the\n               many-to-many management\
    \ relationships possible with SNMP.\n          o Fragmentation and Reassembly\n\
    \               This is related to media independence.  IP allows SNMP\n     \
    \          packets to transit media with differing MTU sizes.  This\n        \
    \       capability is not available for datalink specific\n               transmission\
    \ schemes.\n               Fragmentation and Reassembly does reduce the overall\n\
    \               robustness of network management since, if any single\n      \
    \         fragment is lost along the way, the operation will fail.\n         \
    \      The worse the network operates, the higher the\n               probability\
    \ that a fragment will get lost or delayed.\n               For monitoring and\
    \ data gathering while the network is\n               operating normally, Fragmentation\
    \ and Reassembly is not a\n               problem. When the network is operating\
    \ poorly (and the\n               network operators are typically trying to diagnose\
    \ and\n               repair a failure), small packets should to be used,\n  \
    \             preventing the packet from being fragmented.\n   There are other\
    \ services and functions that are provided by a\n   connection oriented transport.\
    \  These services and functions are not\n   desired for SNMP.  A later section\
    \ will explore this issue in more\n   detail.\n   The main drawbacks that are\
    \ cited with respect to using Transport and\n   Network layers in the managed\
    \ object are: a) Increased development\n   time and b) Increased resource requirements.\
    \  These arguments are\n   less than compelling.\n   There are several excellent\
    \ public domain or freely redistributable\n   UDP/IP stacks that provide enough\
    \ support for SNMP.  The effort\n   required to port the essential components\
    \ of one of these stacks is\n   small compared to the overall effort of installing\
    \ the SNMP software.\n   The additional resources required in the managed object\
    \ to support\n   UDP/IP are minimal.  CPU resources are required only when actually\n\
    \   transmitting or receiving a packet.  The largest single resource\n   requirement\
    \ of a UDP/IP is calculating the UDP checksum, which is\n   very small compared\
    \ to the cost of doing the ASN.1 encoding/decoding,\n   Object Identifier lookup,\
    \ and so on.\n   The author has personal knowledge of a UDP/IP stack that was\n\
    \   developed expressly for the purpose of supporting SNMP.  This stack\n   requires\
    \ less than 4Kb of code space.  It is a minimalist\n   implementation of UDP/IP\
    \ in that it is \"just enough\" so support SNMP.\n   This stack supports UDP,\
    \ IP, ARP, and handles ICMP redirect and echo\n   request messages.  Furthermore,\
    \ this stack was developed by a single\n   person in approximately two months.\
    \  Obviously, neither the\n   development effort nor the memory requirements are\
    \ large.\n   The network overhead of using UDP/IP is relatively small.  A UDP/IP\n\
    \   header requires 28 octets (assuming no IP options).  Since the UDP is\n  \
    \ connectionless, it will generate no overhead traffic of its own (such\n   as\
    \ TCP SYNs, FINs, and ACKs).\n   The growing popularity of internetworking outside\
    \ of The Internet\n   mandates that SNMP operate over, at least, a network layer\
    \ protocol.\n   These internetworks consist of a number of networks all connected\n\
    \   together with routers.  In order to traverse a router, a packet must\n   be\
    \ one of the network layer protocols that the router understands.\n   Therefore,\
    \ for SNMP management to be deployed in an internetwork, the\n   SNMP entities\
    \ in that internetwork must use a network layer protocol.\n   SNMP over a datalink\
    \ can not traverse a router.\n   There are some circumstances where running SNMP\
    \ over some datalink is\n   appropriate.\n   There are schemes are under development\
    \ to provide Out-Of-Band (OOB)\n   management access to network devices.  This\
    \ OOB access is typically\n   provided over point-to-point or dial-up connections.\
    \  Since these\n   connections are dedicated to OOB network management and go\
    \ directly\n   from the network management station to the managed device, a\n\
    \   Transport/Network protocol may not be necessary.\n   Using a Transport/Network\
    \ protocol on these links may be easier from\n   a development point of view though.\
    \  It is probably a simple\n   configuration operation to have the management\
    \ station's IP use a\n   serial port rather than the \"normal\" (e.g., Ethernet)\
    \ port for\n   traffic destined for a particular node.\n   If the Out-Of-Band\
    \ link is also used as a \"primary\" route to some\n   nodes, then the functions\
    \ of a network-layer are required.  These\n   functions are readily supplied by\
    \ using UDP/IP.\n   For a datalink interface and driver (e.g., a PC Ethernet interface\n\
    \   card) that must be manageable independent of the higher level\n   protocol\
    \ suite (which might NOT be manageable), operating SNMP\n   directly over the\
    \ datalink is reasonable.  It is not known, a priori,\n   what higher-level protocol\
    \ services may be available, so those\n   services can not be used.  If an arbitrary\
    \ choice is made for\n   example, to put in an elementary UDP/IP stack, then there\
    \ may be two\n   independent UDP/IPs in the system (which is undesireable as this\n\
    \   would require two IP addresses per managed node), or a new protocol\n   stack\
    \ will be introduced into the environment.\n"
- title: 6.  Connection Oriented vs. Connectionless
  contents:
  - "6.  Connection Oriented vs. Connectionless\n   While this section primarily addresses\
    \ itself to transport layer\n   issues, its basic discussion of connection oriented\
    \ vs connectionless\n   applies to any layer which provides communication services\
    \ for SNMP.\n   For SNMP, connectionless transport service (UDP) is specified\
    \ in the\n   Protocol Specification [1].  This choice was made after careful study\n\
    \   and consideration by the original SNMP developers.\n   The prime motivation\
    \ of this choice is that SNMP must continue to\n   operate (if at all possible)\
    \ when the network is operating at its\n   worst.  For other applications, such\
    \ as Telnet or FTP, the user can\n   always \"try again later\" if the network\
    \ is operating poorly.  On the\n   other hand, the major purpose of a network\
    \ management protocol is to\n   fix the network when it is operating poorly so\
    \ the \"try again later\"\n   strategy is useless.\n   By using a connectionless\
    \ transport protocol, SNMP takes on the\n   responsibility of reliable data transmission\
    \ (A SNMP application may\n   time out outstanding requests and either retransmit\
    \ them or abort\n   them as appropriate).  However, the SNMP requires these functions\n\
    \   only of the sender of a Request PDU (get, getNext, or Set), which\n   typically\
    \ is a network management station.  Since the Agent only\n   generates responses,\
    \ it need not perform any of these functions.\n   This vastly reduces the resource\
    \ and functional requirements on the\n   Agent.\n   If a connection oriented transport\
    \ is used, then a fundamental design\n   choice must be made with respect to connection\
    \ maintenance:\n          (1)  Keep a connection open to each managed object on\
    \ the\n               network,\n          (2)  Establish and tear down connections\
    \ on a per-operation\n               basis, or\n          (3)  Keep a fixed number\
    \ of connections open and, when another\n               connection is needed,\
    \ use some algorithm (e.g., LRU) to\n               select one for closing and\
    \ opening to the new agent.\n   All of these alternatives pose severe problems,\
    \ and because of them,\n   each is undesirable.\n   The first option reduces the\
    \ amount of resources required to perform\n   a single operation in that the connection\
    \ establishment and\n   termination cost is \"amortized\" over many operations.\
    \  On the other\n   hand, keeping a connection open implies that the management\
    \ station\n   needs to maintain a large number of connection records (in the\n\
    \   hundreds or even thousands).  Furthermore, if either side of the\n   connection\
    \ engages in \"keep-alives\" (even though such behavior is\n   frowned upon),\
    \ a large amount of traffic will be generated, consuming\n   a large amount of\
    \ network resources, all for no gain.\n   The second option reduces the amount\
    \ of idle resources such as\n   connection records, but vastly increases the amount\
    \ of resources\n   required to perform an operation.  A connection must be established,\n\
    \   the request Message sent and the response returned, and then the\n   connection\
    \ closed for each operation.  For a TCP, this would\n   typically require 10 separate\
    \ packet transfers plus the TCP Time-Wait\n   (see the Appendix for details).\n\
    \   In the face of pathological network problems, a connection oriented\n   transport\
    \ protocol may simply cease to operate because the\n   probability of getting\
    \ all of these packets through reduces to a very\n   small number.\n   The third\
    \ option requires that the management station maintain\n   connection usage information\
    \ in order to implement the LRU algorithm.\n   This excessively complicates the\
    \ management station.  Furthermore,\n   this option tends to reduce to the second\
    \ option when doing health\n   check polling for a number of agents that is large\
    \ compared to the\n   number of supported connections.\n   A connection oriented\
    \ transport protocol may provide services that\n   are undesirable or unneeded\
    \ by SNMP.\n   For example, one application of network management is to poll nodes\n\
    \   to determine if they are up or not.  When a node is up, it makes\n   little\
    \ difference whether SNMP operates over TCP or UDP.  However, if\n   the node\
    \ goes down then TCP will eventually close the connection.\n   Every poll request\
    \ must then be translated into a TCP Open request\n   while the managed node is\
    \ down.  Once the node comes up, the send\n   must then be done.\n   For connection\
    \ oriented transports, the transport ACK does not\n   necessarily indicate delivery\
    \ of data to the destination application\n   process (for TCP, see section 2.6\
    \ of [4]).  The SNMP would still need\n   its own timeout/retry procedure to ensure\
    \ that the SNMP software\n   actually got the packet.\n   A connection oriented\
    \ transport such as TCP provides flow control for\n   the data stream.  Because\
    \ of the lock-step nature of SNMP protocol\n   exchanges, this is not a service\
    \ that SNMP requires.\n   Architectural purists may argue that an \"Application\"\
    \ layer entity\n   (SNMP) must not perform operations that are properly the realm\
    \ of the\n   Transport layer (timeouts, retransmissions, and so on).  While\n\
    \   architecturally pure, this line of reasoning is not relevant.  The\n   network\
    \ management applications and protocols are monitoring the\n   \"health\" of the\
    \ network and, as a result, have the best information\n   and are in the best\
    \ position to adapt their own behavior to the state\n   of the network, and thereby,\
    \ continuing operations in the face of\n   network adversity.\n"
- title: 7.  Which Protocol
  contents:
  - "7.  Which Protocol\n   The final point of discussion is the actual choice of\
    \ a protocol to\n   support SNMP.\n   If a device is destined for use in the Internet\
    \ then it must operate\n   SNMP over UDP/IP.\n   If the device is operating in\
    \ some other protocol environment, then\n   SNMP ought to use the transport services\
    \ that are native to that\n   environment.  It may make very little sense to introduce\
    \ a new\n   protocol stack into a network in order to provide just one service.\n\
    \   For example, it could require that the network operations staff\n   understand\
    \ and be able to administer and operate two protocol stacks,\n   that hosts and\
    \ routers understand both protocols, and so on.  It may\n   also be bureaucratically\
    \ impossible to introduce UDP/IP into the\n   environment (the \"We are only a\
    \ FOONET shop - if it doesn't speak\n   FOONET, we don't want it\" argument).\n\
    \   References [2] and [6] are experimental standards for operating SNMP\n   over\
    \ IPX and OSI respectively.  In these environments, those\n   standards ought\
    \ to be adhered to.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: 9.  Appendix
  contents:
  - "9.  Appendix\n   This appendix details the TCP packet transfers required to perform\
    \ a\n   single SNMP operation assuming that the connection is established\n  \
    \ only for that operation and that a single SNMP operation (e.g., get\n   request)\
    \ is performed.  We also assume that all operations are\n   \"normal\" i.e., that\
    \ there are no lost packets, no simultaneous opens,\n   no half opens, and no\
    \ simultaneous closes.  We also ignore the\n   possibility of TCP segmentation\
    \ and IP fragmentation.\n   The nomenclature used to illustrate the packet transactions\
    \ is the\n   same as that used in the TCP Specification [4].\n              Packet\
    \  Management                         Managed\n              Number  Station \
    \                           Object\n                               Connection\
    \ Open...\n               1         >--<CTL=SYN>----------------------->\n   \
    \            2         <--<CTL=SYN,ACK>-------------------<\n               3\
    \         >--<CTL=ACK>----------------------->\n                           Connection\
    \ now open,\n                           SNMP Request is sent.\n              \
    \ 4         >--<DATA=SNMP Request>------------->\n                           Response\
    \ comes back\n               5         <--<DATA=SNMP Response, CTL=ACK>---<\n\
    \               6         >--<CTL=ACK>----------------------->\n             \
    \              Operation is complete,\n                           Management station\
    \ initiates the\n                           close.\n               7         >--<CTL=FIN,ACK>------------------->\n\
    \               8         <--<CTL=ACK>-----------------------<\n             \
    \  9         <--<CTL=FIN,ACK>-------------------<\n              10         >--<CTL=ACK>----------------------->\n\
    \                          Wait 2 MSL\n                          Connection now\
    \ closed.\n   Some optimizations are possible IF the TCP has knowledge of the\
    \ type\n   of operation.  However, a general purpose TCP would not be tuned to\n\
    \   SNMP operations so those optimizations would not be done.\n"
- title: 10.  References
  contents:
  - "10.  References\n   [1] Case, J., Fedor, M., Schoffstall, M., and J. Davin, \"\
    Simple\n       Network Management Protocol\", RFC 1157, SNMP Research,\n     \
    \  Performance Systems International, Performance Systems\n       International,\
    \ MIT Laboratory for Computer Science, May 1990.\n   [2] Rose, M., Editor, \"\
    SNMP over OSI\", RFC 1161, Performance Systems\n       International, Inc., June\
    \ 1990.\n   [3] Schoffstall, M., Davin, C., Fedor, M., and J. Case, \"SNMP over\n\
    \       Ethernet\", RFC 1089, Rensselaer Polytechnic Institute, MIT\n       Laboratory\
    \ for Computer Science, NYSERNet, Inc., University of\n       Tennessee at Knoxville,\
    \ February 1989.\n   [4] Postel, J., \"Transmission Control Protocol - DARPA Internet\n\
    \       Program Protocol Specification\", RFC 793, DARPA, September 1981.\n  \
    \ [5] Postel, J., \"User Datagram Protocol\", RFC 768, USC/Information\n     \
    \  Sciences Institute, August 1980.\n   [6] Wormley, R., \"SNMP Over IPX\", draft\
    \ in process, August 1990.\n   [7] Postel, J., Editor, \"IAB Official Protocol\
    \ Standards\", RFC 1250,\n       IAB, August 1991.\n   [8] Cerf, V., \"IAB Recommendations\
    \ for the Development of Internet\n       Network Management Standards\", RFC\
    \ 1052, NRI, April 1988.\n   [9] Rose M., and K. McCloghrie, \"Structure and Identification\
    \ of\n       Management Information for TCP/IP-based internets\", RFC 1155,\n\
    \       Performance Systems International, Hughes LAN Systems, May 1990.\n  [10]\
    \ McCloghrie K., and M. Rose, \"Management Information Base for\n       Network\
    \ Management of TCP/IP-based internets\", RFC 1156, Hughes\n       LAN Systems,\
    \ Performance Systems International, May 1990.\n"
- title: 11.  Acknowledgements
  contents:
  - "11.  Acknowledgements\n   The author wishes to thank Jeff Case, Chuck Davin and\
    \ Keith\n   McCloghrie for their technical and editorial contributions to this\n\
    \   document.\n"
- title: 12.  Author's Address
  contents:
  - "12.  Author's Address\n   Frank Kastenholz\n   Clearpoint Research Corporation\n\
    \   35 Parkwood Drive\n   Hopkinton, Mass. 01748\n   Phone: (508) 435-2000\n \
    \  Email: kasten@europa.clearpoint.com\n"
