- contents:
  - ' Datagram Transport Layer Security (DTLS) Encapsulation of SCTP Packets

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The Stream Control Transmission Protocol (SCTP) is a transport\n
    \  protocol originally defined to run on top of the network protocols\n   IPv4
    or IPv6.  This document specifies how SCTP can be used on top of\n   the Datagram
    Transport Layer Security (DTLS) protocol.  Using the\n   encapsulation method
    described in this document, SCTP is unaware of\n   the protocols being used below
    DTLS; hence, explicit IP addresses\n   cannot be used in the SCTP control chunks.
    \ As a consequence, the\n   SCTP associations carried over DTLS can only be single-homed.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8261.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Overview  . . . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n   2.  Conventions . . . . . . . . . . . . . . . . . . . . . .
    . . .   3\n   3.  Encapsulation and Decapsulation Procedure . . . . . . . . .
    .   3\n   4.  General Considerations  . . . . . . . . . . . . . . . . . . .   4\n
    \  5.  DTLS Considerations . . . . . . . . . . . . . . . . . . . . .   4\n   6.
    \ SCTP Considerations . . . . . . . . . . . . . . . . . . . . .   5\n   7.  IANA
    Considerations . . . . . . . . . . . . . . . . . . . . .   6\n   8.  Security
    Considerations . . . . . . . . . . . . . . . . . . .   7\n   9.  References  .
    . . . . . . . . . . . . . . . . . . . . . . . .   7\n   Acknowledgments . . .
    . . . . . . . . . . . . . . . . . . . . . .  10\n   Authors' Addresses  . . .
    . . . . . . . . . . . . . . . . . . . .  10\n"
  title: Table of Contents
- contents:
  - "1.  Overview\n   The Stream Control Transmission Protocol (SCTP) as defined in\n
    \  [RFC4960] is a transport protocol running on top of the network\n   protocols
    IPv4 [RFC0791] or IPv6 [RFC8200].  This document specifies\n   how SCTP is used
    on top of the Datagram Transport Layer Security\n   (DTLS) protocol.  DTLS 1.0
    is defined in [RFC4347], and the latest\n   version when this RFC was published,
    DTLS 1.2, is defined in\n   [RFC6347].  This encapsulation is used, for example,
    within the\n   WebRTC protocol suite (see [RTC-OVERVIEW] for an overview) for\n
    \  transporting non-SRTP data between browsers.  The architecture of\n   this
    stack is described in [DATA-CHAN].\n                               +----------+\n
    \                              |   SCTP   |\n                               +----------+\n
    \                              |   DTLS   |\n                               +----------+\n
    \                              | ICE/UDP  |\n                               +----------+\n
    \                      Figure 1: Basic Stack Diagram\n   This encapsulation of
    SCTP over DTLS over UDP or ICE/UDP (see\n   [RFC5245]) can provide a NAT traversal
    solution in addition to\n   confidentiality, source authentication, and integrity-protected\n
    \  transfers.  Please note that using ICE does not necessarily imply\n   that
    a different packet format is used on the wire.\n   Please note that the procedures
    defined in [RFC6951] for dealing with\n   the UDP port numbers do not apply here.
    \ When using the encapsulation\n   defined in this document, SCTP is unaware about
    the protocols used\n   below DTLS.\n"
  title: 1.  Overview
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\",
    \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described
    in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all\n   capitals,
    as shown here.\n"
  title: 2.  Conventions
- contents:
  - "3.  Encapsulation and Decapsulation Procedure\n   When an SCTP packet is provided
    to the DTLS layer, the complete SCTP\n   packet, consisting of the SCTP common
    header and a number of SCTP\n   chunks, is handled as the payload of the application-layer
    protocol\n   of DTLS.  When the DTLS layer has processed a DTLS record containing\n
    \  a message of the application-layer protocol, the payload is passed to\n   the
    SCTP layer.  The SCTP layer expects an SCTP common header\n   followed by a number
    of SCTP chunks.\n"
  title: 3.  Encapsulation and Decapsulation Procedure
- contents:
  - "4.  General Considerations\n   An implementation of SCTP over DTLS MUST implement
    and use a path\n   maximum transmission unit (MTU) discovery method that functions\n
    \  without ICMP to provide SCTP/DTLS with an MTU estimate.  An\n   implementation
    of \"Packetization Layer Path MTU Discovery\" [RFC4821]\n   either in SCTP or
    DTLS is RECOMMENDED.\n   The path MTU discovery is performed by SCTP when SCTP
    over DTLS is\n   used for data channels (see Section 5 of [DATA-CHAN]).\n"
  title: 4.  General Considerations
- contents:
  - "5.  DTLS Considerations\n   The DTLS implementation MUST support DTLS 1.0 [RFC4347]
    and SHOULD\n   support the most recently published version of DTLS, which was
    DTLS\n   1.2 [RFC6347] when this RFC was published.  In the absence of a\n   revision
    to this document, the latter requirement applies to all\n   future versions of
    DTLS when they are published as RFCs.  This\n   document will only be revised
    if a revision to DTLS or SCTP makes a\n   revision to the encapsulation necessary.\n
    \  SCTP performs segmentation and reassembly based on the path MTU.\n   Therefore,
    the DTLS layer MUST NOT use any compression algorithm.\n   The DTLS MUST support
    sending messages larger than the current path\n   MTU.  This might result in sending
    IP-level fragmented messages.\n   If path MTU discovery is performed by the DTLS
    layer, the method\n   described in [RFC4821] MUST be used.  For probe packets,
    the\n   extension defined in [RFC6520] MUST be used.\n   If path MTU discovery
    is performed by the SCTP layer and IPv4 is used\n   as the network-layer protocol,
    the DTLS implementation SHOULD allow\n   the DTLS user to enforce that the corresponding
    IPv4 packet is sent\n   with the Don't Fragment (DF) bit set.  If controlling
    the DF bit is\n   not possible (for example, due to implementation restrictions),
    a\n   safe value for the path MTU has to be used by the SCTP stack.  It is\n   RECOMMENDED
    that the safe value not exceed 1200 bytes.  Please note\n   that [RFC1122] only
    requires that end hosts be able to reassemble\n   fragmented IP packets up to
    576 bytes in length.\n   The DTLS implementation SHOULD allow the DTLS user to
    set the\n   Differentiated Services Code Point (DSCP) used for IP packets being\n
    \  sent (see [RFC2474]).  This requires the DTLS implementation to pass\n   the
    value through and the lower layer to allow setting this value.\n   If the lower
    layer does not support setting the DSCP, then the DTLS\n   user will end up with
    the default value used by the protocol stack.\n   Please note that only a single
    DSCP value can be used for all packets\n   belonging to the same SCTP association.\n
    \  Using Explicit Congestion Notification (ECN) in SCTP requires the\n   DTLS
    layer to pass the ECN bits through and its lower layer to expose\n   access to
    them for sent and received packets (see [RFC3168]).  The\n   implementations of
    DTLS and its lower layer have to provide this\n   support.  If this is not possible
    (for example, due to implementation\n   restrictions), ECN can't be used by SCTP.\n"
  title: 5.  DTLS Considerations
- contents:
  - "6.  SCTP Considerations\n   This section describes the usage of the base protocol
    and the\n   applicability of various SCTP extensions.\n"
  - contents:
    - "6.1.  Base Protocol\n   This document uses SCTP [RFC4960] with the following
      restrictions,\n   which are required to reflect that the lower layer is DTLS
      instead of\n   IPv4 and IPv6 and that SCTP does not deal with the IP addresses
      or\n   the transport protocol used below DTLS:\n   o  A DTLS connection MUST
      be established before an SCTP association\n      can be set up.\n   o  Multiple
      SCTP associations MAY be multiplexed over a single DTLS\n      connection.  The
      SCTP port numbers are used for multiplexing and\n      demultiplexing the SCTP
      associations carried over a single DTLS\n      connection.\n   o  All SCTP associations
      are single-homed, because DTLS does not\n      expose any address management
      to its upper layer.  Therefore, it\n      is RECOMMENDED to set the SCTP parameter
      path.max.retrans to\n      association.max.retrans.\n   o  The INIT and INIT-ACK
      chunk MUST NOT contain any IPv4 Address or\n      IPv6 Address parameters.  The
      INIT chunk MUST NOT contain the\n      Supported Address Types parameter.\n
      \  o  The implementation MUST NOT rely on processing ICMP or ICMPv6\n      packets,
      since the SCTP layer most likely is unable to access the\n      SCTP common
      header in the plain text of the packet, which\n      triggered the sending of
      the ICMP or ICMPv6 packet.  This applies\n      in particular to path MTU discovery
      when performed by SCTP.\n   o  If the SCTP layer is notified about a path change
      by its lower\n      layers, SCTP SHOULD retest the path MTU and reset the congestion\n
      \     state to the initial state.  The window-based congestion control\n      method
      specified in [RFC4960] resets the congestion window and\n      slow-start threshold
      to their initial values.\n"
    title: 6.1.  Base Protocol
  - contents:
    - "6.2.  Padding Extension\n   When the SCTP layer performs path MTU discovery
      as specified in\n   [RFC4821], the padding extension defined in [RFC4820] MUST
      be\n   supported and used for probe packets (HEARTBEAT chunks bundled with\n
      \  PADDING chunks [RFC4820]).\n"
    title: 6.2.  Padding Extension
  - contents:
    - "6.3.  Dynamic Address Reconfiguration Extension\n   If the dynamic address
      reconfiguration extension defined in [RFC5061]\n   is used, ASCONF chunks MUST
      use wildcard addresses only.\n"
    title: 6.3.  Dynamic Address Reconfiguration Extension
  - contents:
    - "6.4.  SCTP Authentication Extension\n   The SCTP authentication extension defined
      in [RFC4895] can be used\n   with DTLS encapsulation, but does not provide any
      additional benefit.\n"
    title: 6.4.  SCTP Authentication Extension
  - contents:
    - "6.5.  Partial Reliability Extension\n   Partial reliability as defined in [RFC3758]
      can be used in\n   combination with DTLS encapsulation.  It is also possible
      to use\n   additional Partially Reliable Stream Control Transmission Protocol\n
      \  (PR-SCTP) policies, for example, the ones defined in [RFC7496].\n"
    title: 6.5.  Partial Reliability Extension
  - contents:
    - "6.6.  Stream Reset Extension\n   The SCTP stream reset extension defined in
      [RFC6525] can be used with\n   DTLS encapsulation.  It is used to reset SCTP
      streams and add SCTP\n   streams during the lifetime of the SCTP association.\n"
    title: 6.6.  Stream Reset Extension
  - contents:
    - "6.7.  Interleaving of Large User Messages\n   SCTP as defined in [RFC4960]
      does not support the interleaving of\n   large user messages that need to be
      fragmented and reassembled by the\n   SCTP layer.  The protocol extension defined
      in [RFC8260] overcomes\n   this limitation and can be used with DTLS encapsulation.\n"
    title: 6.7.  Interleaving of Large User Messages
  title: 6.  SCTP Considerations
- contents:
  - "7.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   Security considerations for DTLS are specified
    in [RFC4347] and for\n   SCTP in [RFC4960], [RFC3758], and [RFC6525].  The combination
    of SCTP\n   and DTLS introduces no new security considerations.\n   SCTP should
    not process the IP addresses used for the underlying\n   communication since DTLS
    provides no guarantees about them.\n   It should be noted that the inability to
    process ICMP or ICMPv6\n   messages does not add any security issue.  When SCTP
    is carried over\n   a connection-less lower layer like IPv4, IPv6, or UDP, processing
    of\n   these messages is required to protect other nodes not supporting\n   SCTP.
    \ Since DTLS provides a connection-oriented lower layer, this\n   kind of protection
    is not necessary.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC1122]  Braden, R., Ed., \"Requirements for
      Internet Hosts -\n              Communication Layers\", STD 3, RFC 1122,\n              DOI
      10.17487/RFC1122, October 1989,\n              <https://www.rfc-editor.org/info/rfc1122>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC4347]  Rescorla,
      E. and N. Modadugu, \"Datagram Transport Layer\n              Security\", RFC
      4347, DOI 10.17487/RFC4347, April 2006,\n              <https://www.rfc-editor.org/info/rfc4347>.\n
      \  [RFC4820]  Tuexen, M., Stewart, R., and P. Lei, \"Padding Chunk and\n              Parameter
      for the Stream Control Transmission Protocol\n              (SCTP)\", RFC 4820,
      DOI 10.17487/RFC4820, March 2007,\n              <https://www.rfc-editor.org/info/rfc4820>.\n
      \  [RFC4821]  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n              Discovery\",
      RFC 4821, DOI 10.17487/RFC4821, March 2007,\n              <https://www.rfc-editor.org/info/rfc4821>.\n
      \  [RFC4960]  Stewart, R., Ed., \"Stream Control Transmission Protocol\",\n
      \             RFC 4960, DOI 10.17487/RFC4960, September 2007,\n              <https://www.rfc-editor.org/info/rfc4960>.\n
      \  [RFC6347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n              Security
      Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n              January 2012,
      <https://www.rfc-editor.org/info/rfc6347>.\n   [RFC6520]  Seggelmann, R., Tuexen,
      M., and M. Williams, \"Transport\n              Layer Security (TLS) and Datagram
      Transport Layer Security\n              (DTLS) Heartbeat Extension\", RFC 6520,\n
      \             DOI 10.17487/RFC6520, February 2012,\n              <https://www.rfc-editor.org/info/rfc6520>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [DATA-CHAN]\n              Jesup, R., Loreto,
      S., and M. Tuexen, \"WebRTC Data\n              Channels\", Work in Progress,
      draft-ietf-rtcweb-data-\n              channel-13, January 2015.\n   [RFC0791]
      \ Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n              DOI 10.17487/RFC0791,
      September 1981,\n              <https://www.rfc-editor.org/info/rfc791>.\n   [RFC2474]
      \ Nichols, K., Blake, S., Baker, F., and D. Black,\n              \"Definition
      of the Differentiated Services Field (DS\n              Field) in the IPv4 and
      IPv6 Headers\", RFC 2474,\n              DOI 10.17487/RFC2474, December 1998,\n
      \             <https://www.rfc-editor.org/info/rfc2474>.\n   [RFC3168]  Ramakrishnan,
      K., Floyd, S., and D. Black, \"The Addition\n              of Explicit Congestion
      Notification (ECN) to IP\",\n              RFC 3168, DOI 10.17487/RFC3168, September
      2001,\n              <https://www.rfc-editor.org/info/rfc3168>.\n   [RFC3758]
      \ Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and P.\n              Conrad,
      \"Stream Control Transmission Protocol (SCTP)\n              Partial Reliability
      Extension\", RFC 3758,\n              DOI 10.17487/RFC3758, May 2004,\n              <https://www.rfc-editor.org/info/rfc3758>.\n
      \  [RFC4895]  Tuexen, M., Stewart, R., Lei, P., and E. Rescorla,\n              \"Authenticated
      Chunks for the Stream Control Transmission\n              Protocol (SCTP)\",
      RFC 4895, DOI 10.17487/RFC4895, August\n              2007, <https://www.rfc-editor.org/info/rfc4895>.\n
      \  [RFC5061]  Stewart, R., Xie, Q., Tuexen, M., Maruyama, S., and M.\n              Kozuka,
      \"Stream Control Transmission Protocol (SCTP)\n              Dynamic Address
      Reconfiguration\", RFC 5061,\n              DOI 10.17487/RFC5061, September
      2007,\n              <https://www.rfc-editor.org/info/rfc5061>.\n   [RFC5245]
      \ Rosenberg, J., \"Interactive Connectivity Establishment\n              (ICE):
      A Protocol for Network Address Translator (NAT)\n              Traversal for
      Offer/Answer Protocols\", RFC 5245,\n              DOI 10.17487/RFC5245, April
      2010,\n              <https://www.rfc-editor.org/info/rfc5245>.\n   [RFC6525]
      \ Stewart, R., Tuexen, M., and P. Lei, \"Stream Control\n              Transmission
      Protocol (SCTP) Stream Reconfiguration\",\n              RFC 6525, DOI 10.17487/RFC6525,
      February 2012,\n              <https://www.rfc-editor.org/info/rfc6525>.\n   [RFC6951]
      \ Tuexen, M. and R. Stewart, \"UDP Encapsulation of Stream\n              Control
      Transmission Protocol (SCTP) Packets for End-Host\n              to End-Host
      Communication\", RFC 6951,\n              DOI 10.17487/RFC6951, May 2013,\n
      \             <https://www.rfc-editor.org/info/rfc6951>.\n   [RFC7496]  Tuexen,
      M., Seggelmann, R., Stewart, R., and S. Loreto,\n              \"Additional
      Policies for the Partially Reliable Stream\n              Control Transmission
      Protocol Extension\", RFC 7496,\n              DOI 10.17487/RFC7496, April 2015,\n
      \             <https://www.rfc-editor.org/info/rfc7496>.\n   [RFC8200]  Deering,
      S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\",
      STD 86, RFC 8200,\n              DOI 10.17487/RFC8200, July 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n
      \  [RFC8260]  Stewart, R., Tuexen, M., Loreto, S., and R. Seggelmann,\n              \"Stream
      Schedulers and User Message Interleaving for the\n              Stream Control
      Transmission Protocol\", RFC 8260, November\n              2017.\n   [RTC-OVERVIEW]\n
      \             Alvestrand, H., \"Overview: Real Time Protocols for\n              Browser-based
      Applications\", Work in Progress, draft-ietf-\n              rtcweb-overview-18,
      March 2017.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgments\n   The authors wish to thank David Black, Benoit Claise, Spencer\n
    \  Dawkins, Francis Dupont, Gorry Fairhurst, Stephen Farrell, Christer\n   Holmberg,
    Barry Leiba, Eric Rescorla, Tom Taylor, Joe Touch, and\n   Magnus Westerlund for
    their invaluable comments.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Michael Tuexen\n   Muenster University of Applied Sciences\n
    \  Stegerwaldstrasse 39\n   48565 Steinfurt\n   Germany\n   Email: tuexen@fh-muenster.de\n
    \  Randall R. Stewart\n   Netflix, Inc.\n   Chapin, SC  29036\n   United States
    of America\n   Email: randall@lakerest.net\n   Randell Jesup\n   WorldGate Communications\n
    \  3800 Horizon Blvd, Suite #103\n   Trevose, PA  19053-4947\n   United States
    of America\n   Phone: +1-215-354-5166\n   Email: randell-ietf@jesup.org\n   Salvatore
    Loreto\n   Ericsson\n   Hirsalantie 11\n   Jorvas  02420\n   Finland\n   Email:
    Salvatore.Loreto@ericsson.com\n"
  title: Authors' Addresses
