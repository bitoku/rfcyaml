- contents:
  - '                    MPLS Generic Associated Channel

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents
    in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n
    \  Please review these documents carefully, as they describe your rights\n   and
    restrictions with respect to this document.\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document generalizes the applicability of the pseudowire (PW)\n
    \  Associated Channel Header (ACH), enabling the realization of a\n   control
    channel associated to MPLS Label Switched Paths (LSPs) and\n   MPLS Sections in
    addition to MPLS pseudowires.  In order to identify\n   the presence of this Associated
    Channel Header in the label stack,\n   this document also assigns one of the reserved
    MPLS label values to\n   the Generic Associated Channel Label (GAL), to be used
    as a label\n   based exception mechanism.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Objectives . . . . . . . . . . . . . . . . . . . .
    . . . .  4\n     1.2.  Scope  . . . . . . . . . . . . . . . . . . . . . . . .
    . .  4\n     1.3.  Requirements Language and Terminology  . . . . . . . . . .
    \ 5\n   2.  Generic Associated Channel Header  . . . . . . . . . . . . . .  5\n
    \    2.1.  Definition . . . . . . . . . . . . . . . . . . . . . . . .  6\n     2.2.
    \ Allocation of Channel Types  . . . . . . . . . . . . . . .  6\n   3.  ACH TLVs
    . . . . . . . . . . . . . . . . . . . . . . . . . . .  7\n     3.1.  ACH TLV Payload
    Structure  . . . . . . . . . . . . . . . .  7\n     3.2.  ACH TLV Header . . .
    . . . . . . . . . . . . . . . . . . .  8\n     3.3.  ACH TLV Object . . . . .
    . . . . . . . . . . . . . . . . .  8\n   4.  Generalized Exception Mechanism  .
    . . . . . . . . . . . . . .  9\n     4.1.  Relationship with Existing MPLS OAM
    Alert Mechanisms . . .  9\n     4.2.  GAL Applicability and Usage  . . . . . .
    . . . . . . . . . 10\n       4.2.1.  GAL Processing . . . . . . . . . . . . .
    . . . . . . . 10\n     4.3.  Relationship with RFC 3429 . . . . . . . . . . .
    . . . . . 13\n   5.  Compatibility  . . . . . . . . . . . . . . . . . . . . .
    . . . 14\n   6.  Congestion Considerations  . . . . . . . . . . . . . . . . .
    . 15\n   7.  Major Contributing Authors . . . . . . . . . . . . . . . . . . 15\n
    \  8.  Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 15\n   9.
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 15\n   10. IANA
    Considerations  . . . . . . . . . . . . . . . . . . . . . 16\n   11. References
    . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n     11.1. Normative References
    . . . . . . . . . . . . . . . . . . . 17\n     11.2. Informative References .
    . . . . . . . . . . . . . . . . . 18\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   There is a need for Operations, Administration, and Maintenance
    (OAM)\n   mechanisms that can be used for fault detection, diagnostics,\n   maintenance,
    and other functions on a pseudowire (PW) and a Label\n   Switched Path (LSP).
    \ These functions can be used between any two\n   Label Edge Routers (LERs)/Label
    Switching Router (LSRs) or\n   Terminating Provider Edge routers (T-PEs)/Switching
    Provider Edge\n   routers (S-PEs) along the path of an LSP or PW, respectively\n
    \  [MPLS-TP].  Some of these functions can be supported using existing\n   tools
    such as Virtual Circuit Connectivity Verification (VCCV)\n   [RFC5085], Bidirectional
    Forwarding Detection for MPLS LSPs (BFD-\n   MPLS) [BFD-MPLS], LSP-Ping [RFC4379],
    or BFD-VCCV [BFD-VCCV].\n   However, a requirement has been indicated to augment
    this set of\n   maintenance functions, in particular when MPLS networks are used
    for\n   packet transport services and transport network operations [OAM-REQ].\n
    \  Examples of these functions include performance monitoring, automatic\n   protection
    switching, and support for management and signaling\n   communication channels.
    \ These tools MUST be applicable to, and\n   function in essentially the same
    manner (from an operational point of\n   view) on MPLS PWs, MPLS LSPs, and MPLS
    Sections.  They MUST also\n   operate in-band on the PW or LSP such that they
    do not depend on\n   Packet Switched Network (PSN) routing or on user traffic,
    and MUST\n   NOT depend on dynamic control plane functions.\n   VCCV [RFC5085]
    can use an Associated Channel Header (ACH) to provide\n   a PW associated control
    channel between a PW's endpoints, over which\n   OAM and other control messages
    can be exchanged.  This document\n   generalizes the applicability of the ACH
    to enable the same\n   associated control channel mechanism to be used for Sections,
    LSPs,\n   and PWs.  The associated control channel thus generalized is known as\n
    \  the Generic Associated Channel (G-ACh).  The ACH, specified in RFC\n   4385
    [RFC4385], may be used with additional code points to support\n   additional MPLS
    maintenance functions on the G-ACh.\n   Generalizing the applicability of the
    ACH to LSPs and Sections also\n   requires a method to identify that a packet
    contains an ACH followed\n   by a non-service payload.  Therefore, this document
    also defines a\n   label-based exception mechanism that serves to inform an LSR
    (or LER)\n   that a packet it receives on an LSP or Section belongs to an\n   associated
    control channel.  The label used for that purpose is one\n   of the MPLS reserved
    labels and is referred to as the GAL (G-ACh\n   Label).  The GAL mechanism is
    defined to work together with the ACH\n   for LSPs and MPLS Sections.\n   RFC
    4379 [RFC4379] and BFD-MPLS [BFD-MPLS] define alert mechanisms\n   that enable
    an MPLS LSR to identify and process MPLS OAM packets when\n   these are encapsulated
    in an IP header.  These alert mechanisms are\n   based, for example, on Time To
    Live (TTL) expiration and/or on the\n   use of an IP destination address in the
    range of 127.0.0.0/8 or 0:0:\n   0:0:0:FFFF:127.0.0.0/104 for IPv4 and IPv6, respectively.
    \ These\n   mechanisms are the default mechanisms for identifying MPLS OAM\n   packets
    when encapsulated in an IP header.  However, it may not\n   always be possible
    to use these mechanisms in some MPLS applications,\n   e.g., MPLS Transport Profile
    (MPLS-TP) [MPLS-TP], particularly when\n   IP-based demultiplexing cannot be used.
    \ This document defines a\n   mechanism that is RECOMMENDED for identifying and
    encapsulating MPLS\n   OAM and other maintenance messages when IP based mechanisms
    such as\n   those used in [RFC4379] and [BFD-MPLS] are not available.  Yet, this\n
    \  mechanism MAY be used in addition to IP-based mechanisms.\n   Note that, in
    this document, maintenance functions and packets should\n   be understood in the
    broad sense.  That is, a set of maintenance and\n   management mechanisms that
    include OAM, Automatic Protection\n   Switching (APS), Signaling Communication
    Channel (SCC), and\n   Management Communication Channel (MCC) messages.\n   Also
    note that the GAL and ACH are applicable to MPLS and PWs in\n   general.  This
    document specifies general mechanism and uses MPLS-TP\n   as an example application.
    \ The application of the GAL and ACH to\n   other specific MPLS uses is outside
    the scope of this document.\n"
  - contents:
    - "1.1.  Objectives\n   This document defines a mechanism that provides a solution
      to the\n   extended maintenance needs of emerging applications for MPLS.  It\n
      \  creates a generic control channel mechanism that may be applied to\n   MPLS
      LSPs and Sections, while maintaining compatibility with the PW\n   associated
      channel.  It also normalizes the use of the ACH for PWs in\n   a transport context,
      and defines a label-based exception mechanism to\n   alert LERs/LSRs of the
      presence of an ACH after the bottom of the\n   label stack.\n"
    title: 1.1.  Objectives
  - contents:
    - "1.2.  Scope\n   This document defines the encapsulation header for Section,
      LSP, and\n   PW associated control channel messages.\n   This document does
      not define how associated control channel\n   capabilities are signaled or negotiated
      between LERs/LSRs or between\n   PEs, nor does it define the operation of various
      OAM functions.\n   This document does not deprecate existing MPLS and PW OAM
      mechanisms.\n"
    title: 1.2.  Scope
  - contents:
    - "1.3.  Requirements Language and Terminology\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in RFC 2119 [RFC2119].\n   This document uses the following additional
      terminology:\n   ACH: Associated Channel Header\n   G-ACh: Generic Associated
      Channel\n   GAL: G-ACh Label\n   G-ACh packet: Any packet containing a message
      belonging to a protocol\n   that is carried on a PW, LSP, or MPLS Section associated
      control\n   channel.  Examples include maintenance protocols such as OAM\n   functions,
      signaling communications, or management communications.\n   The terms \"Section\"
      and \"Concatenated Segment\" are defined in\n   [TP-REQ] as follows (note that
      the terms \"Section\" and \"Section Layer\n   Network\" are synonymous):\n   Section
      Layer Network: A section layer is a server layer (which may\n   be MPLS-TP or
      a different technology) that provides for the transfer\n   of the section layer
      client information between adjacent nodes in the\n   transport path layer or
      transport service layer.  Note that G.805\n   [G805] defines the section layer
      as one of the two layer networks in\n   a transmission media layer network.
      \ The other layer network is the\n   physical media layer network.\n   Concatenated
      Segment: A serial-compound link connection as defined in\n   [G805].  A concatenated
      segment is a contiguous part of an LSP or\n   multi-segment PW that comprises
      a set of segments and their\n   interconnecting nodes in sequence.\n"
    title: 1.3.  Requirements Language and Terminology
  title: 1.  Introduction
- contents:
  - "2.  Generic Associated Channel Header\n   VCCV [RFC5085] defines three Control
    Channel (CC) Types that may be\n   used to exchange OAM messages through a PW.
    \ CC Type 1 uses an ACH\n   and is referred to as \"In-band VCCV\"; CC Type 2
    uses the MPLS Router\n   Alert Label to indicate VCCV packets and is referred
    to as \"Out-of-\n   Band VCCV\"; CC Type 3 uses the TTL to force the packet to
    be\n   processed by the targeted router control plane and is referred to as\n
    \  \"MPLS PW Label with TTL == 1\".\n"
  - contents:
    - "2.1.  Definition\n   The use of the ACH, previously limited to PWs, is here
      generalized to\n   also apply to LSPs and to Sections.  Note that for PWs, the
      PWE3\n   control word [RFC4385] MUST be present in the encapsulation of user\n
      \  packets when the ACH is used to realize the associated control\n   channel.\n
      \  The ACH used by CC Type 1 is depicted in figure below:\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |0 0 0 1|Version|   Reserved    |         Channel Type          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                   Figure 1: Associated Channel Header\n   In the above figure,
      the first nibble is set to 0001b to indicate a\n   control channel associated
      with a PW, LSP, or Section.  The Version\n   field is set to 0, as specified
      in RFC 4385 [RFC4385].  Bits 8 to 15\n   of the ACH are reserved and MUST be
      set to 0 and ignored on\n   reception.  Bits 16 to 31 are used to encode the
      possible Channel\n   Types.  This 16-bit field is in network byte order.\n   Note
      that VCCV [RFC5085] also includes mechanisms for negotiating the\n   Control
      Channel and Connectivity Verification (i.e., OAM function)\n   Types between
      PEs.  It is anticipated that similar mechanisms will be\n   applied to LSPs.
      \ Such application will require further\n   specification.  However, such specification
      is beyond the scope of\n   this document.\n   The G-ACh MUST NOT be used to
      transport user traffic.\n"
    title: 2.1.  Definition
  - contents:
    - "2.2.  Allocation of Channel Types\n   The Channel Type field indicates the
      type of message carried on the\n   associated control channel, e.g., IPv4 or
      IPv6 if IP demultiplexing\n   is used for messages sent on the associated control
      channel, or OAM\n   or other maintenance function if IP demultiplexing is not
      used.  For\n   associated control channel packets where IP is not used as the\n
      \  multiplexer, the Channel Type indicates the specific protocol carried\n   in
      the associated control channel.\n   Values for the Channel Type field currently
      used for VCCV are\n   specified elsewhere, e.g., in RFC 4446 [RFC4446] and RFC
      4385\n   [RFC4385].  Additional Channel Type values and the associated\n   maintenance
      functionality will be defined in other documents.  Each\n   document, specifying
      a protocol solution relying on the ACH, MUST\n   also specify the applicable
      Channel Type field value.\n   Note that these values are allocated from the
      PW Associated Channel\n   Type registry [RFC4446], but this document modifies
      the existing\n   policy to accommodate a level of experimentation.  See Section
      10 for\n   further details.\n"
    title: 2.2.  Allocation of Channel Types
  title: 2.  Generic Associated Channel Header
- contents:
  - "3.  ACH TLVs\n   In some applications of the generalized associated control channel,\n
    \  it is necessary to include one or more ACH TLVs to provide additional\n   context
    information to the G-ACh packet.  One use of these ACH TLVs\n   might be to identify
    the source and/or intended destination of the\n   associated channel message.
    \ However, the use of this construct is\n   not limited to providing addressing
    information nor is the\n   applicability restricted to transport network applications.\n
    \  If the G-ACh message MAY be preceded by one or more ACH TLVs, then\n   this
    MUST be explicitly specified in the definition of an ACH Channel\n   Type.  If
    the ACH Channel Type definition does state that one or more\n   ACH TLVs MAY precede
    the G-ACh message, an ACH TLV Header MUST follow\n   the ACH.  If no ACH TLVs
    are required in a specific associated\n   channel packet, but the Channel Type
    nevertheless defines that ACH\n   TLVs MAY be used, an ACH TLV Header MUST be
    present but with a length\n   field set to zero to indicate that no ACH TLV follow
    this header.\n   If an ACH Channel Type specification does not explicitly specify
    that\n   ACH TLVs MAY be used, then the ACH TLV Header MUST NOT be used.\n"
  - contents:
    - "3.1.  ACH TLV Payload Structure\n   This section defines and describes the
      structure of an ACH payload\n   when an ACH TLV Header is present.\n   The following
      figure (Figure 2) shows the structure of a G-ACh packet\n   payload.\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                              ACH                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                         ACH TLV Header                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               ~\n   ~                     zero
      or more ACH TLVs                     ~\n   ~                                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |                                                               ~\n
      \  ~                        G-ACh Message                          ~\n   ~                                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                      Figure
      2: G-ACh Packet Payload\n"
    title: 3.1.  ACH TLV Payload Structure
  - contents:
    - "3.2.  ACH TLV Header\n   The ACH TLV Header defines the length of the set of
      ACH TLVs that\n   follow.\n    0                   1                   2                   3\n
      \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |          Length               |            Reserved           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                        Figure 3: ACH TLV Header\n   The Length field specifies
      the length in octets of the complete set\n   of TLVs including sub-TLVs that
      follow the ACH TLV Header.  A length\n   of zero indicates that no ACH TLV follow
      this header.  Note that no\n   padding is required for the set of ACH TLVs.\n
      \  The Reserved field is for future use and MUST be set to zero on\n   transmission
      and ignored on reception.\n"
    title: 3.2.  ACH TLV Header
  - contents:
    - "3.3.  ACH TLV Object\n   ACH TLVs MAY follow an ACH TLV Header.  The structure
      of ACH TLVs is\n   defined and described in this section.\n   An ACH TLV consists
      of a 16-bit Type field, followed by a 16-bit\n   Length field that specifies
      the number of octets of the Value field,\n   which follows the Length field.
      \ This 32-bit word is followed by zero\n   or more octets of Value information.
      \ The format and semantics of the\n   Value information are defined by the TLV
      Type as recorded in the TLV\n   Type registry.  See Section 10 for further details.
      \ Note that the\n   Value field of ACH TLVs MAY contain sub-TLVs.  Note that
      no padding\n   is required for individual TLVs or sub-TLVs.\n    0                   1
      \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
      5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |           TLV Type            |          Length               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                                                               ~\n   ~                             Value
      \                            ~\n   ~                                                               |\n
      \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                         Figure
      4: ACH TLV Format\n"
    title: 3.3.  ACH TLV Object
  title: 3.  ACH TLVs
- contents:
  - "4.  Generalized Exception Mechanism\n   Generalizing the associated control channel
    mechanism to LSPs and\n   Sections also requires a method to identify that a packet
    contains an\n   ACH followed by a non-service payload.  This document specifies
    that\n   a label is used for that purpose and calls this special label the\n   G-ACh
    Label (GAL).  One of the reserved label values defined in RFC\n   3032 [RFC3032]
    is assigned for this purpose.  IANA assigned the value\n   13 to the GAL.\n   The
    GAL provides an alert based exception mechanism to:\n   o  differentiate specific
    packets (i.e., G-ACh packets) from others,\n      such as user-plane ones.\n   o
    \ indicate that the ACH appears immediately after the bottom of the\n      label
    stack.\n   The GAL MUST only be used where both these purposes apply.\n"
  - contents:
    - "4.1.  Relationship with Existing MPLS OAM Alert Mechanisms\n   RFC 4379 [RFC4379]
      and BFD-MPLS [BFD-MPLS] define alert mechanisms\n   that enable an MPLS LSR
      to identify and process MPLS OAM packets when\n   these are encapsulated in
      an IP header.  These alert mechanisms are\n   based, for example, on Time To
      Live (TTL) expiration and/or on the\n   use of an IP destination address in
      the range of 127.0.0.0/8 or 0:0:\n   0:0:0:FFFF:127.0.0.0/104 for IPv4 and IPv6,
      respectively.\n   These mechanisms are the default mechanisms for identifying
      MPLS OAM\n   packets when encapsulated in an IP header although the mechanism\n
      \  defined in this document MAY also be used.\n"
    title: 4.1.  Relationship with Existing MPLS OAM Alert Mechanisms
  - contents:
    - "4.2.  GAL Applicability and Usage\n   In MPLS-TP, the GAL MUST be used with
      packets on a G-ACh on LSPs,\n   Concatenated Segments of LSPs, and with Sections,
      and MUST NOT be\n   used with PWs.  It MUST always be at the bottom of the label
      stack\n   (i.e., S bit set to 1).  However, in other MPLS environments, this\n
      \  document places no restrictions on where the GAL may appear within\n   the
      label stack or its use with PWs.  Where the GAL is at the bottom\n   of the
      label stack (i.e., S bit set to 1), then it MUST always be\n   followed by an
      ACH.\n   The GAL MUST NOT appear in the label stack when transporting normal\n
      \  user-plane packets.  Furthermore, when present, the GAL MUST NOT\n   appear
      more than once in the label stack.\n   A receiving LSR, LER, or PE MUST NOT
      forward a G-ACh packet to\n   another node based on the GAL label.\n"
    - contents:
      - "4.2.1.  GAL Processing\n   The Traffic Class (TC) field (formerly known as
        the EXP field) of the\n   Label Stack Entry (LSE) containing the GAL follows
        the definition and\n   processing rules specified and referenced in [RFC5462].\n
        \  The Time-To-Live (TTL) field of the LSE that contains the GAL follows\n
        \  the definition and processing rules specified in [RFC3443].\n"
      - contents:
        - "4.2.1.1.  MPLS Label Switched Paths and Segments\n   The following figure
          (Figure 5) depicts two LERs (A and D) and two\n   LSRs (B and C) for a given
          LSP that is established from A to D and\n   switched in B and C.\n        +---+
          \            +---+             +---+             +---+\n        | A |-------------|
          B |-------------| C |-------------| D |\n        +---+             +---+
          \            +---+             +---+\n                     Figure 5: Maintenance
          over an LSP\n   In this example, a G-ACh exists on the LSP that extends
          between LERs\n   A and D, via LSRs B and C.  Only A and D may initiate new
          G-ACh\n   packets.  A, B, C, and D may process and respond to G-ACh packets.\n
          \  The following figure (Figure 6) depicts the format of an MPLS-TP\n   G-ACh
          packet when used for an LSP.\n    0                   1                   2
          \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
          3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |               LSP Label               |  TC |S|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                  GAL                  |  TC |S|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                              ACH                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                  ACH TLV Header (if present)                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                                                               ~\n   ~
          \                    Zero or more ACH TLVs                     ~\n   ~                           (if
          present)                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                                                               ~\n   ~
          \                        G-ACh Message                         ~\n   ~                                                               |\n
          \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n                 Figure
          6: G-ACh Packet Format for an LSP\n   Note that it is possible that the
          LSP may be tunneled in another LSP\n   (e.g., if an MPLS Tunnel exists between
          B and C), and as such other\n   LSEs may be present in the label stack.\n
          \  To send a G-ACh message on the LSP associated control channel, the\n
          \  LER (A) generates a G-ACh message, to which it MAY prepend an ACH TLV\n
          \  Header and appropriate ACH TLVs.  It then adds an ACH, onto which it\n
          \  pushes a GAL LSE.  Finally, the LSP Label LSE is pushed onto the\n   resulting
          packet.\n   o  The TTL field of the GAL LSE MUST be set to at least 1.  The
          exact\n      value of the TTL is application specific.  See Section 4.2.1
          for\n      definition and processing rules.\n   o  The S bit of the GAL
          MUST be set according to its position in the\n      label stack (see Section
          4.2).\n   o  The setting of the TC field of the GAL is application specific.\n
          \     See Section 4.2.1 for definition and processing rules.\n   LSRs MUST
          NOT modify the G-ACh message, the ACH or the GAL towards\n   the targeted
          destination.\n   Note:  This is because once a G-ACh packet has been sent
          on an LSP,\n      no node has visibility of it unless the LSP label TTL
          expires or\n      the GAL is exposed when the LSP label is popped.  If this
          is at\n      the targeted destination, for example, indicated by an address
          in\n      an ACH TLV, then processing can proceed as specified below.  If\n
          \     this is not the targeted destination, but the node has agreed to\n
          \     process packets on that ACH channel, then the processing applied\n
          \     to the packet is out of scope of this document.\n   Upon reception
          of the labeled packet, the targeted destination, after\n   having checked
          both the LSP Label and GAL LSEs fields, SHOULD pass\n   the whole packet
          to the appropriate processing entity.\n"
        title: 4.2.1.1.  MPLS Label Switched Paths and Segments
      - contents:
        - "4.2.1.2.  MPLS Section\n   The following figure (Figure 7) depicts an example
          of an MPLS\n   Section.\n                          +---+             +---+\n
          \                         | A |-------------| Z |\n                          +---+
          \            +---+\n                Figure 7: Maintenance over an MPLS Section\n
          \  With regard to the MPLS Section, a G-ACh exists between A and Z.\n   Only
          A and Z can insert, extract, or process packets on this G-ACh.\n   The following
          figure (Figure 8) depicts the format of a G-ACh packet\n   when used for
          an MPLS Section.  The GAL MAY provide the exception\n   mechanism for a
          control channel in its own right without being\n   associated with a specific
          LSP, thus providing maintenance-related\n   communications across a specific
          link interconnecting two LSRs.  In\n   this case, the GAL is the only label
          in the stack.\n    0                   1                   2                   3\n
          \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                  GAL                  |  TC |S|       TTL     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                             ACH                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                  ACH TLV Header (if present)                  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                                                               ~\n   ~
          \                    Zero or more ACH TLVs                     ~\n   ~                         (if
          present)                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  |                                                               ~\n   ~
          \                        G-ACh message                         ~\n   ~                                                               |\n
          \  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n             Figure
          8: G-ACh Packet Format for an MPLS Section\n   To send a G-ACh message on
          a control channel associated to the\n   Section, the head-end LSR (A) of
          the Section generates a G-ACh\n   message, to which it MAY prepend an ACH
          TLV Header and appropriate\n   ACH TLVs.  Next, the LSR adds an ACH.  Finally,
          it pushes a GAL LSE.\n   o  The TTL field of the GAL MUST be set to at least
          1.  The exact\n      value of the TTL is application specific.  See Section
          4.2.1 for\n      definition and processing rules.\n   o  The S bit of the
          GAL MUST be set according to its position in the\n      label stack. (see
          Section 4.2).\n   o  The setting of the TC field of the GAL is application
          specific.\n      See Section 4.2.1 for definition and processing rules.\n
          \  Intermediate nodes of the MPLS Section MUST NOT modify the G-ACh\n   message,
          the ACH and the GAL towards the tail-end LSR (Z).  Upon\n   reception of
          the G-ACh packet, the tail-end LSR (Z), after having\n   checked the GAL
          LSE fields, SHOULD pass the whole packet to the\n   appropriate processing
          entity.\n"
        title: 4.2.1.2.  MPLS Section
      title: 4.2.1.  GAL Processing
    title: 4.2.  GAL Applicability and Usage
  - contents:
    - "4.3.  Relationship with RFC 3429\n   RFC 3429 [RFC3429] describes the assignment
      of one of the reserved\n   label values, defined in RFC 3032 [RFC3032], to the
      \"OAM Alert Label\"\n   that is used by user-plane MPLS OAM functions for the
      identification\n   of MPLS OAM packets.  The value of 14 is used for that purpose.\n
      \  Both this document and RFC 3429 [RFC3429] therefore describe the\n   assignment
      of reserved label values for similar purposes.  The\n   rationale for the assignment
      of a new reserved label can be\n   summarized as follows:\n   o  Unlike the
      mechanisms described and referenced in RFC 3429\n      [RFC3429], G-ACh messages
      will not reside immediately after the\n      GAL but instead behind the ACH,
      which itself resides after the\n      bottom of the label stack.\n   o  The
      set of maintenance functions potentially operated in the\n      context of the
      G-ACh is wider than the set of OAM functions\n      referenced in RFC 3429 [RFC3429].\n
      \  o  It has been reported that there are existing implementations and\n      running
      deployments using the \"OAM Alert Label\" as described in\n      RFC 3429 [RFC3429].
      \ It is therefore not possible to modify the\n      \"OAM Alert Label\" allocation,
      purpose, or usage.  Nevertheless, it\n      is RECOMMENDED that no further OAM
      extensions based on \"OAM Alert\n      Label\" (Label 14) usage be specified
      or developed.\n"
    title: 4.3.  Relationship with RFC 3429
  title: 4.  Generalized Exception Mechanism
- contents:
  - "5.  Compatibility\n   Procedures for handling a packet received with an invalid
    incoming\n   label are specified in RFC 3031 [RFC3031].\n   An LER, LSR, or PE
    MUST discard received associated channel packets\n   on which all of the MPLS
    or PW labels have been popped if any one of\n   the following conditions is true:\n
    \  o  It is not capable of processing packets on the Channel Type\n      indicated
    by the ACH of the received packet.\n   o  It has not, through means outside the
    scope of this document,\n      indicated to the sending LSR, LER, or PE that it
    will process\n      associated channel packets on the Channel Type indicated by
    the\n      ACH of the received packet.\n   o  The packet is received on an Experimental
    Channel Type that is\n      locally disabled.\n   o  If the ACH was indicated
    by the presence of a GAL, and the first\n      nibble of the ACH of the received
    packet is not 0001b.\n   o  The ACH version is not recognized.\n   In addition,
    the LER, LSR, or PE MAY increment an error counter and\n   MAY also issue a system
    and/or Simple Network Management Protocol\n   (SNMP) notification.\n"
  title: 5.  Compatibility
- contents:
  - "6.  Congestion Considerations\n   The congestion considerations detailed in RFC
    5085 [RFC5085] apply.\n"
  title: 6.  Congestion Considerations
- contents:
  - "7.  Major Contributing Authors\n   The editors would like to thank George Swallow,
    David Ward, and Rahul\n   Aggarwal who made a major contribution to the development
    of this\n   document.\n      George Swallow\n      Cisco Systems\n      Email:
    swallow@cisco.com\n      David Ward\n      Cisco Systems\n      Email: dward@cisco.com\n
    \     Rahul Aggarwal\n      Juniper Networks\n      Email: rahul@juniper.net\n"
  title: 7.  Major Contributing Authors
- contents:
  - "8.  Acknowledgments\n   The editors gratefully acknowledge the contributions
    of Sami Boutros,\n   Italo Busi, Marc Lasserre, Lieven Levrau, and Siva Sivabalan.\n
    \  The authors would also like to thank Malcolm Betts, ITU-T Study Group\n   15,
    and all members of the teams (the Joint Working Team, the MPLS\n   Interoperability
    Design Team in IETF and the MPLS-TP Ad Hoc Team in\n   ITU-T) involved in the
    definition and specification of the MPLS\n   Transport Profile.\n"
  title: 8.  Acknowledgments
- contents:
  - "9.  Security Considerations\n   The security considerations for the associated
    control channel are\n   described in RFC 4385 [RFC4385].  Further security considerations\n
    \  MUST be described in the relevant associated channel type\n   specification.\n
    \  RFC 5085 [RFC5085] provides data plane related security\n   considerations.
    \ These also apply to a G-ACh, whether the alert\n   mechanism uses a GAL or only
    an ACH.\n"
  title: 9.  Security Considerations
- contents:
  - "10.  IANA Considerations\n   IANA allocated label value 13 to the GAL from the
    pool of reserved\n   labels in the \"Multiprotocol Label Switching Architecture
    (MPLS)\n   Label Values\" registry.\n   Channel Types for the Associated Channel
    Header are allocated from\n   the IANA \"PW Associated Channel Type\" registry
    [RFC4446].  The PW\n   Associated Channel Type registry is currently allocated
    based on the\n   IETF consensus process (termed \"IETF Review\" in [RFC5226]).
    \ This\n   allocation process was chosen based on the consensus reached in the\n
    \  PWE3 working group that pseudowire associated channel mechanisms\n   should
    be reviewed by the IETF and only those that are consistent\n   with the PWE3 architecture
    and requirements should be allocated a\n   code point.\n   However, a requirement
    has emerged (see [OAM-REQ]) to allow for\n   optimizations or extensions to OAM
    and other control protocols\n   running in an associated channel to be experimented
    without resorting\n   to the IETF standards process, by supporting experimental
    code\n   points.  This would prevent code points used for such functions from\n
    \  being used from the range allocated through the IETF standards and\n   thus
    protects an installed base of equipment from potential\n   inadvertent overloading
    of code points.  In order to support this\n   requirement, IANA has changed the
    code point allocation scheme for\n   the PW Associated Channel Type be changed
    as follows:\n   0 - 32751 : IETF Review\n   32760 - 32767 : Experimental\n   Code
    points in the experimental range MUST be used according to the\n   guidelines
    of RFC 3692 [RFC3692].  Functions using experimental G-ACh\n   code points MUST
    be disabled by default.  The Channel Type value used\n   for a given experimental
    OAM function MUST be configurable, and care\n   MUST be taken to ensure that different
    OAM functions that are not\n   inter-operable are configured to use different
    Channel Type values.\n   The PW Associated Channel Type registry has been updated
    to include a\n   column indicating whether the ACH is followed by a ACH TLV header\n
    \  (Yes/No).  There are two ACH Channel Type code-points currently\n   assigned
    and in both cases no ACH TLV header is used.  Thus, the new\n   format of the
    PW Channel Type registry is:\n   Registry:\n   Value  Description                   TLV
    Follows  Reference\n   -----  ----------------------------  -----------  ---------\n
    \  0x21   ACH carries an IPv4 packet    No           [RFC4385]\n   0x57   ACH
    carries an IPv6 packet    No           [RFC4385]\n                    Figure 9:
    PW Channel Type Registry\n   IANA created a new registry called the Associated
    Channel Header TLV\n   Registry.  The allocation policy for this registry is IETF
    review.\n   This registry MUST record the following information.  There are no\n
    \  initial entries.\n   Name       Type  Length   Description                  Reference\n
    \                  (octets)\n                        Figure 10: ACH TLV Registry\n"
  title: 10.  IANA Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3031]   Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n
      \              Label Switching Architecture\", RFC 3031, January 2001.\n   [RFC3032]
      \  Rosen, E., Tappan, D., Fedorkow, G., Rekhter, Y.,\n               Farinacci,
      D., Li, T., and A. Conta, \"MPLS Label Stack\n               Encoding\", RFC
      3032, January 2001.\n   [RFC3443]   Agarwal, P. and B. Akyol, \"Time To Live
      (TTL) Processing\n               in Multi-Protocol Label Switching (MPLS) Networks\",\n
      \              RFC 3443, January 2003.\n   [RFC3692]   Narten, T., \"Assigning
      Experimental and Testing Numbers\n               Considered Useful\", BCP 82,
      RFC 3692, January 2004.\n   [RFC4385]   Bryant, S., Swallow, G., Martini, L.,
      and D. McPherson,\n               \"Pseudowire Emulation Edge-to-Edge (PWE3)
      Control Word\n               for Use over an MPLS PSN\", RFC 4385, February
      2006.\n   [RFC4446]   Martini, L., \"IANA Allocations for Pseudowire Edge to\n
      \              Edge Emulation (PWE3)\", BCP 116, RFC 4446, April 2006.\n   [RFC5085]
      \  Nadeau, T. and C. Pignataro, \"Pseudowire Virtual Circuit\n               Connectivity
      Verification (VCCV): A Control Channel for\n               Pseudowires\", RFC
      5085, December 2007.\n   [RFC5226]   Narten, T. and H. Alvestrand, \"Guidelines
      for Writing an\n               IANA Considerations Section in RFCs\", BCP 26,
      RFC 5226,\n               May 2008.\n   [RFC5462]   Andersson, L. and R. Asati,
      \"Multiprotocol Label\n               Switching (MPLS) Label Stack Entry: \"EXP\"
      Field Renamed\n               to \"Traffic Class\" Field\", RFC 5462, February
      2009.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [BFD-MPLS]  Aggarwal, R., Kompella, K., Nadeau,
      T., and G. Swallow,\n               \"BFD For MPLS LSPs\", Work in Progress,
      June 2008.\n   [BFD-VCCV]  Nadeau, T. and C. Pignataro, \"Bidirectional Forwarding\n
      \              Detection (BFD) for the Pseudowire Virtual Circuit\n               Connectivity
      Verification (VCCV)\", Work in Progress,\n               May 2009.\n   [G805]
      \     International Telecommunication Union, \"Generic\n               Functional
      Architecture of Transport Networks\", ITU-\n               T G.805, March 2000.\n
      \  [MPLS-TP]   Bocci, M., Bryant, S., and L. Levrau, \"A Framework for\n               MPLS
      in Transport Networks\", Work in Progress,\n               November 2008.\n
      \  [OAM-REQ]   Vigoureux, M., Ed., Ward, D., Ed., and M. Betts, Ed.,\n               \"Requirements
      for OAM in MPLS Transport Networks\", Work\n               in Progress, March
      2009.\n   [RFC3429]   Ohta, H., \"Assignment of the 'OAM Alert Label' for\n
      \              Multiprotocol Label Switching Architecture (MPLS)\n               Operation
      and Maintenance (OAM) Functions\", RFC 3429,\n               November 2002.\n
      \  [RFC4379]   Kompella, K. and G. Swallow, \"Detecting Multi-Protocol\n               Label
      Switched (MPLS) Data Plane Failures\", RFC 4379,\n               February 2006.\n
      \  [TP-REQ]    Niven-Jenkins, B., Ed., Brungard, D., Ed., Betts, M.,\n               Ed.,
      Sprecher, N., and S. Ueno, \"MPLS-TP Requirements\",\n               Work in
      Progress, May 2009.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Matthew Bocci (editor)\n   Alcatel-Lucent\n   Voyager
    Place, Shoppenhangers Road\n   Maidenhead, Berks  SL6 2PJ\n   UK\n   EMail: matthew.bocci@alcatel-lucent.com\n
    \  Martin Vigoureux (editor)\n   Alcatel-Lucent\n   Route de Villejust\n   Nozay,
    \  91620\n   France\n   EMail: martin.vigoureux@alcatel-lucent.com\n   Stewart
    Bryant (editor)\n   Cisco Systems\n   EMail: stbryant@cisco.com\n"
  title: Authors' Addresses
