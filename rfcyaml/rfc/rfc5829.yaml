- title: __initial_text__
  contents:
  - ''
- title: Link Relation Types for Simple Version Navigation between Web Resources
  contents:
  - 'Link Relation Types for Simple Version Navigation between Web Resources

    '
- title: Abstract
  contents:
  - "Abstract\n   This specification defines a set of link relation types that may\
    \ be\n   used on Web resources for navigation between a resource and other\n \
    \  resources related to version control, such as past versions and\n   working\
    \ copies.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc5829.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Terminology .....................................................3\n  \
    \ 3. Link Relations ..................................................4\n    \
    \  3.1. 'version-history' ..........................................4\n      3.2.\
    \ 'latest-version' ...........................................4\n      3.3. 'working-copy'\
    \ .............................................4\n      3.4. 'working-copy-of'\
    \ ..........................................4\n      3.5. 'predecessor-version'\
    \ ......................................4\n      3.6. 'successor-version' ........................................5\n\
    \   4. IANA Considerations .............................................5\n  \
    \    4.1. 'version-history' Link Relation Registration ...............5\n    \
    \  4.2. 'latest-version' Link Relation Registration ................5\n      4.3.\
    \ 'working-copy' Link Relation Registration ..................5\n      4.4. 'working-copy-of'\
    \ Link Relation Registration ...............6\n      4.5. 'predecessor-version'\
    \ Link Relation Registration ...........6\n      4.6. 'successor-version' Link\
    \ Relation Registration .............6\n   5. Security Considerations .........................................6\n\
    \   6. Acknowledgments .................................................7\n  \
    \ 7. References ......................................................7\n    \
    \  7.1. Normative References .......................................7\n      7.2.\
    \ Informative References .....................................7\n   Appendix A.\
    \  Relationship to Java Content Repository (JCR) and\n                WebDAV ................................................9\n\
    \      A.1.  Example: Use of Link Relations in HTTP Link Header .......10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This specification defines a set of link relation types\
    \ that may be\n   used on Web resources that exist in a system that supports versioning\n\
    \   to navigate among the different resources available, such as past\n   versions\
    \ and working copies.\n   These link relations are used in the AtomPub ([RFC5023])\
    \ bindings of\n   the \"Content Management Interoperability Services\" (CMIS).\
    \  See\n   Section 3.4.3.3 of [CMIS] for further information.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   Versioned Resource\n      When a resource is put under version\
    \ control, it becomes a\n      \"versioned resource\".  Many servers protect versioned\
    \ resources\n      from modifications by considering them \"checked in\", and\
    \ by\n      requiring a \"checkout\" operation before modification, and a\n  \
    \    \"checkin\" operation to get back to the \"checked-in\" state.  Other\n \
    \     servers allow modification, in which case the checkout/checkin\n      operation\
    \ may happen implicitly.\n   Version History\n      A \"version history\" resource\
    \ is a resource that contains all the\n      versions of a particular versioned\
    \ resource.\n   Predecessor, Successor\n      When a versioned resource is checked\
    \ out and then subsequently\n      checked in, the version that was checked out\
    \ becomes a\n      \"predecessor\" of the version created by the checkin.  A client\
    \ can\n      specify multiple predecessors for a new version if the new version\n\
    \      is logically a merge of those predecessors.  The inverse of the\n     \
    \ predecessor relation is the \"successor\" relation.  Therefore, if X\n     \
    \ is a predecessor of Y, then Y is a successor of X.\n   Working Copy\n      A\
    \ \"working copy\" is a resource at a server-defined URL that can be\n      used\
    \ to create a new version of a versioned resource.\n   Checkout\n      A \"checkout\"\
    \ is an operation on a versioned resource that creates\n      a working copy,\
    \ or changes the versioned resource to be a working\n      copy as well (\"in-place\
    \ versioning\").\n   Checkin\n      A \"checkin\" is an operation on a working\
    \ copy that creates a new\n      version of its corresponding versioned resource.\n\
    \      Note: the operations for putting a resource under version control\n   \
    \   and for checking in and checking out depend on the protocol in use\n     \
    \ and are beyond the scope of this document; see [CMIS], [RFC3253],\n      and\
    \ [JSR-283] for examples.\n"
- title: 3.  Link Relations
  contents:
  - "3.  Link Relations\n   The following link relations are defined.\n"
- title: 3.1.  'version-history'
  contents:
  - "3.1.  'version-history'\n   When included on a versioned resource, this link\
    \ points to a resource\n   containing the version history for this resource.\n"
- title: 3.2.  'latest-version'
  contents:
  - "3.2.  'latest-version'\n   When included on a versioned resource, this link points\
    \ to a resource\n   containing the latest (e.g., current) version.\n   The latest\
    \ version is defined by the system.  For linear versioning\n   systems, this is\
    \ probably the latest version by timestamp.  For\n   systems that support branching,\
    \ there will be multiple latest\n   versions, one for each branch in the version\
    \ history.\n   Some systems may allow more than one of these link relations.\n"
- title: 3.3.  'working-copy'
  contents:
  - "3.3.  'working-copy'\n   When included on a versioned resource, this link points\
    \ to a working\n   copy for this resource.\n   Some systems may allow more than\
    \ one of these link relations.\n"
- title: 3.4.  'working-copy-of'
  contents:
  - "3.4.  'working-copy-of'\n   When included on a working copy, this link points\
    \ to the versioned\n   resource from which this working copy was obtained.\n"
- title: 3.5.  'predecessor-version'
  contents:
  - "3.5.  'predecessor-version'\n   When included on a versioned resource, this link\
    \ points to a resource\n   containing the predecessor version in the version history.\n\
    \   Some systems may allow more than one of these link relations in the\n   case\
    \ of multiple branches merging.\n"
- title: 3.6.  'successor-version'
  contents:
  - "3.6.  'successor-version'\n   When included on a versioned resource, this link\
    \ points to a resource\n   containing the successor version in the version history.\n\
    \   Some systems may allow more than one of these link relations in order\n  \
    \ to support branching.\n"
- title: 4.  IANA Considerations
  contents:
  - "4.  IANA Considerations\n   The link relations below have been registered by\
    \ IANA per Section 7.1\n   of [RFC4287]:\n"
- title: 4.1.  'version-history' Link Relation Registration
  contents:
  - "4.1.  'version-history' Link Relation Registration\n   Attribute Value:  version-history\n\
    \   Description:  See Section 3.1.\n   Expected display characteristics:  Undefined;\
    \ this relation can be\n      used for background processing or to provide extended\n\
    \      functionality without displaying its value.\n   Security considerations:\
    \  See Section 5.\n"
- title: 4.2.  'latest-version' Link Relation Registration
  contents:
  - "4.2.  'latest-version' Link Relation Registration\n   Attribute Value:  latest-version\n\
    \   Description:  See Section 3.2.\n   Expected display characteristics:  Undefined;\
    \ this relation can be\n      used for background processing or to provide extended\n\
    \      functionality without displaying its value.\n   Security considerations:\
    \  See Section 5.\n"
- title: 4.3.  'working-copy' Link Relation Registration
  contents:
  - "4.3.  'working-copy' Link Relation Registration\n   Attribute Value:  working-copy\n\
    \   Description:  See Section 3.3.\n   Expected display characteristics:  Undefined;\
    \ this relation can be\n      used for background processing or to provide extended\n\
    \      functionality without displaying its value.\n   Security considerations:\
    \  See Section 5.\n"
- title: 4.4.  'working-copy-of' Link Relation Registration
  contents:
  - "4.4.  'working-copy-of' Link Relation Registration\n   Attribute Value:  working-copy-of\n\
    \   Description:  See Section 3.4.\n   Expected display characteristics:  Undefined;\
    \ this relation can be\n      used for background processing or to provide extended\n\
    \      functionality without displaying its value.\n   Security considerations:\
    \  See Section 5.\n"
- title: 4.5.  'predecessor-version' Link Relation Registration
  contents:
  - "4.5.  'predecessor-version' Link Relation Registration\n   Attribute Value: \
    \ predecessor-version\n   Description:  See Section 3.5.\n   Expected display\
    \ characteristics:  Undefined; this relation can be\n      used for background\
    \ processing or to provide extended\n      functionality without displaying its\
    \ value.\n   Security considerations:  See Section 5.\n"
- title: 4.6.  'successor-version' Link Relation Registration
  contents:
  - "4.6.  'successor-version' Link Relation Registration\n   Attribute Value:  successor-version\n\
    \   Description:  See Section 3.6.\n   Expected display characteristics:  Undefined;\
    \ this relation can be\n      used for background processing or to provide extended\n\
    \      functionality without displaying its value.\n   Security considerations:\
    \  See Section 5.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Automated agents should take care when these\
    \ relations cross\n   administrative domains (e.g., the URI has a different authority\
    \ than\n   the current document).  Such agents should also take care to detect\n\
    \   circular references.\n   Care should be applied when versioned resources are\
    \ subject to\n   differing access policies.  In this case, exposing links may\
    \ leak\n   information even if the linked resource itself is properly secured.\n\
    \   In particular, the syntax of the link target could expose sensitive\n   information\
    \ (see Section 16.2 of [RFC3253] for a similar\n   consideration in WebDAV Versioning).\
    \  Note that this applies to\n   exposing link metadata in general, not only to\
    \ links related to\n   versioning.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Thanks to the members of Content Management Interoperability\
    \ Services\n   (CMIS) Technical Committee (TC) at OASIS for the initial proposal,\n\
    \   and to Jan Algermissen for feedback during IETF review.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC4287]   Nottingham, M., Ed. and R. Sayre,\
    \ Ed., \"The Atom\n               Syndication Format\", RFC 4287, December 2005.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [CMIS]      Brown, A., Gur-Esh, E., McVeigh,\
    \ R., and F.  Mueller,\n               \"Content Management Interoperability Services\
    \ (CMIS)\n               Version 1.0\", OASIS Content Management Interoperability\n\
    \               Services (CMIS) Version 1.0 Committee Specification 01,\n    \
    \           March 2010,  <http://docs.oasis-open.org/cmis/CMIS/\n            \
    \   v1.0/cs01/cmis-spec-v1.0.html>.\n               Latest version available at\n\
    \               <http://docs.oasis-open.org/cmis/CMIS/v1.0/\n               cmis-spec-v1.0.html>\n\
    \   [JSR-283]   Day Software, Nuescheler, D., and P. Piegaze, \"Content\n    \
    \           Repository API for Java(tm) Technology Specification\",\n        \
    \       Java Specification Request 283, August 2009,\n               <http://www.day.com/specs/jcr/2.0/>.\n\
    \   [RFC3253]   Clemm, G., Amsden, J., Ellison, T., Kaler, C., and J.\n      \
    \         Whitehead, \"Versioning Extensions to WebDAV (Web\n               Distributed\
    \ Authoring and Versioning)\", RFC 3253,\n               March 2002.\n   [RFC5023]\
    \   Gregorio, J. and B. de hOra, \"The Atom Publishing\n               Protocol\"\
    , RFC 5023, October 2007.\n   [WEB-LINKING]\n               Nottingham, M., \"\
    Web Linking\", Work in Progress,\n               March 2010.\n"
- title: Appendix A.  Relationship to Java Content Repository (JCR) and WebDAV
  contents:
  - "Appendix A.  Relationship to Java Content Repository (JCR) and WebDAV\n   The\
    \ link relations defined in Section 3 correspond to various\n   properties used\
    \ in WebDAV Versioning [RFC3253] and JCR [JSR-283]:\n   version-history\n    \
    \  WebDAV: the resource identified by the DAV:version-history\n      property\
    \ ([RFC3253], Sections 5.2.1 and 5.3.1).\n      JCR: the node identified by jcr:versionHistory\
    \ property\n      ([JSR-283], Section 3.13.2.4) for versionable nodes, the parent\n\
    \      folder for version nodes.\n   latest-version\n      WebDAV: for version-controlled\
    \ resources, DAV:checked-in\n      ([RFC3253], Section 3.2.1) or DAV:checked-out\
    \ ([RFC3253], Section\n      3.3.1), depending on checkin state.  For version\
    \ resources, a\n      successor version that itself does not have any successors.\n\
    \      JCR: the version node identified by the jcr:baseVersion property\n    \
    \  ([JSR-283], Section 3.13.2.5) for versionable nodes; for version\n      nodes,\
    \ a successor version that itself does not have any\n      successors.\n   working-copy\n\
    \      WebDAV: for version-controlled resources that are checked-out in\n    \
    \  place: the resource itself.  For version resources: each resource\n      identified\
    \ by a member of the DAV:checkout-set property (see\n      [RFC3253], Section\
    \ 3.4.3).\n      JCR: for checked-out versionable nodes: the node itself.\n  \
    \ working-copy-of\n      WebDAV: the resource identified by the DAV:checked-out\
    \ property\n      (see [RFC3253], Section 3.3.1).\n      JCR: for checked-out\
    \ versionable nodes: the node identified by the\n      jcr:baseVersion property\
    \ ([JSR-283], Section 3.13.12.5).\n   predecessor-version\n      WebDAV: each\
    \ resource identified by a member of DAV:predecessor-\n      set ([RFC3253], Sections\
    \ 3.3.2 and 3.4.1).\n      JCR: each node identified by a member of jcr:predecessors\n\
    \      ([JSR-283], Section 3.13.3.3).\n   successor-version\n      WebDAV: each\
    \ resource identified by a member of DAV:successor-set\n      ([RFC3253], Section\
    \ 3.4.2).\n      JCR: each node identified by a member of jcr:successors\n   \
    \   ([JSR-283], Section 3.13.3.4).\n"
- title: 'A.1.  Example: Use of Link Relations in HTTP Link Header'
  contents:
  - "A.1.  Example: Use of Link Relations in HTTP Link Header\n   The \"Web Linking\"\
    \ specification ([WEB-LINKING]) generalizes Atom link\n   relations, and also\
    \ reintroduces the HTTP \"Link\" header as a way to\n   expose link relations\
    \ in HTTP responses.  This will make it possible\n   to expose version links independently\
    \ from a specific vocabulary, be\n   it the Atom Feed Format ([RFC4287]) or WebDAV\
    \ properties ([RFC3253]).\n   For instance, a response to a VERSION-CONTROL request\
    \ ([RFC3253],\n   Section 3.5) could expose a newly created version-history and\n\
    \   checked-in version as link relations:\n   >> Request:\n   VERSION-CONTROL\
    \ /docs/test.txt HTTP/1.1\n   Host: example.net\n   >> Response:\n   HTTP/1.1\
    \ 204 No Content\n   Link: </system/v/84345634/1>; rel=latest-version;\n     \
    \    anchor=</docs/test.txt>\n   Link: </system/vh/84345634>; rel=version-history;\n\
    \         anchor=</docs/test.txt>\n   (Note that in this case, the anchor parameter\
    \ is used, as the\n   response to a VERSION-CONTROL request is not a representation\
    \ of the\n   resource at the Request-URI.)\n   A subsequent HEAD request on that\
    \ resource could expose the version-\n   history and latest-version relations\
    \ as well:\n   >> Request:\n   HEAD /docs/test.txt HTTP/1.1\n   Host: example.net\n\
    \   >> Response:\n   HTTP/1.1 200 OK\n   Content-Type: text/plain; charset=UTF-8\n\
    \   Content-Length: 12345\n   Link: </system/v/84345634/1>; rel=latest-version\n\
    \   Link: </system/vh/84345634>; rel=version-history\n   After creating more versions,\
    \ following the latest-version would then\n   expose predecessors of a version:\n\
    \   >> Request:\n   HEAD /system/v/84345634/3 HTTP/1.1\n   Host: example.net\n\
    \   >> Response:\n   HTTP/1.1 200 OK\n   Content-Type: text/plain; charset=UTF-8\n\
    \   Content-Length: 12323\n   Link: </system/v/84345634/2>; rel=predecessor-version\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Al Brown\n   IBM\n   3565 Harbor Blvd\n   Costa Mesa,\
    \ California 92626\n   USA\n   EMail: albertcbrown@us.ibm.com\n   Geoffrey Clemm\n\
    \   IBM\n   20 Maguire Road\n   Lexington, MA 02421\n   USA\n   EMail: geoffrey.clemm@us.ibm.com\n\
    \   Julian F. Reschke (editor)\n   greenbytes GmbH\n   Hafenweg 16\n   Muenster,\
    \ NW 48155\n   Germany\n   EMail: julian.reschke@greenbytes.de\n   URI:   http://greenbytes.de/tech/webdav/\n"
