- title: __initial_text__
  contents:
  - '                   RTP Payload for Text Conversation

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes how to carry text conversation session contents\n\
    \   in RTP packets. Text conversation session contents are specified in\n   ITU-T\
    \ Recommendation T.140 [1].\n   Text conversation is used alone or in connection\
    \ to other\n   conversational facilities such as video and voice, to form multimedia\n\
    \   conversation services.\n   This RTP payload description contains an optional\
    \ possibility to\n   include redundant text from already transmitted packets in\
    \ order to\n   reduce the risk of text loss caused by packet loss. The redundancy\n\
    \   coding follows RFC 2198.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   This memo defines a payload type for carrying text conversation\n\
    \   session contents in RTP packets. Text conversation session contents\n   are\
    \ specified in ITU-T Recommendation T.140 [1]. Text conversation is\n   used alone\
    \ or in connection to other conversational facilities such\n   as video and voice,\
    \ to form multimedia conversation services. Text in\n   text conversation sessions\
    \ is sent as soon as it is available, or\n   with a small delay for buffering.\n\
    \   The text is supposed to be entered by human users from a keyboard,\n   handwriting\
    \ recognition, voice recognition or any other input method.\n   The rate of character\
    \ entry is usually at a level of a few characters\n   per second or less. Therefore,\
    \ the expected number of characters to\n   transmit is low. Only one or a few\
    \ new characters are expected to be\n   transmitted with each packet.\n   T.140\
    \ specifies that text and other T.140 elements MUST be\n   transmitted in ISO\
    \ 10 646-1 code with UTF-8 transformation. That\n   makes it easy to implement\
    \ internationally useful applications, and\n   to handle the text in modern information\
    \ technology environments.\n   The payload of an RTP packet following this specification\
    \ consists of\n   text encoded according to T.140 without any additional framing.\
    \  A\n   common case will be a single ISO 10646 character, UTF-8 encoded.\n  \
    \ T.140 requires the transport channel to provide characters without\n   duplication\
    \ and in original order.  Text conversation users expect\n   that text will be\
    \ delivered with no or a low level of lost\n   information. If lost information\
    \ can be indicated, the willingness to\n   accept loss is expected to be higher.\n\
    \   Therefore a mechanism based on RTP is specified here. It gives text\n   arrival\
    \ in correct order, without duplications, and with detection\n   and indication\
    \ of losses.  It also includes an optional possibility\n   to repeat data for\
    \ redundancy to lower the risk of loss. Since packet\n   overhead is usually much\
    \ larger than the T.140 contents, the increase\n   in channel load by the redundancy\
    \ scheme is minimal.\n"
- title: 1.1 Terminology
  contents:
  - "1.1 Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\"\
    , \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and\
    \ \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC\
    \ 2119 [4]\n"
- title: 2. Usage of RTP
  contents:
  - "2. Usage of RTP\n   When transport of T.140 text session data in RTP is desired,\
    \ the\n   payload as described in this specification SHOULD be used.\n   A text\
    \ conversation RTP packet as specified by this payload format\n   consists of\
    \ an RTP header as defined in RFC 1889 [2] followed\n   immediately by a block\
    \ of T.140 data, defined here to be a\n   \"T140block\".  There is no additional\
    \ header specific to this payload\n   format.  The T140block contains one or more\
    \ T.140 code elements as\n   specified in [1].  Most T.140 code elements are single\
    \ ISO 10646 [5]\n   characters, but some are multiple character sequences.  Each\n\
    \   character is UTF-8 encoded [6] into one or more octets. This implies\n   that\
    \ each block MUST contain an integral number of UTF-8 encoded\n   characters regardless\
    \ of the number of octets per character. It also\n   implies that any composite\
    \ character sequence (CCS) SHOULD be placed\n   within one block.\n   The T140blocks\
    \ MAY be transmitted redundantly according to the\n   payload format defined in\
    \ RFC 2198 [3].  In that case, the RTP header\n   is followed by one or more redundant\
    \ data block headers, the same\n   number of redundant data fields carrying T140blocks\
    \ from previous\n   packets, and finally the new (primary) T140block for this\
    \ packet.\n"
- title: 2.1 RTP packet header
  contents:
  - "2.1 RTP packet header\n   Each RTP packet starts with a fixed RTP header. The\
    \ following fields\n   of the RTP fixed header are used for T.140 text streams:\n\
    \   Payload Type (PT): The assignment of an RTP payload type is specific\n   \
    \  to the RTP profile under which this payload format is used.  For\n     profiles\
    \ which use dynamic payload type number assignment, this\n     payload format\
    \ is identified by the name \"T140\" (see section 6).\n     If redundancy is used\
    \ per RFC 2198, the Payload Type MUST indicate\n     that payload format (\"RED\"\
    ).\n   Sequence number:  The Sequence Number MUST be increased by one for\n  \
    \   each new transmitted packet. It is used for detection of packet\n     loss\
    \ and packets out of order, and can be used in the process of\n     retrieval\
    \ of redundant text, reordering of text and marking missing\n     text.\n   Timestamp:\
    \ The RTP Timestamp encodes the approximate instance of\n     entry of the primary\
    \ text in the packet. A clock frequency of 1000\n     Hz MUST be used. Sequential\
    \ packets MUST NOT use the same\n     timestamp. Since packets do not represent\
    \ any constant duration,\n     the timestamp cannot be used to directly infer\
    \ packet losses.\n"
- title: 2.2 Additional headers
  contents:
  - "2.2 Additional headers\n   There are no additional headers defined specific to\
    \ this payload\n   format.\n   When redundant transmission of the data according\
    \ to RFC 2198 is\n   desired, the RTP header is followed by one or more redundant\
    \ data\n   block headers, one for each redundant data block to be included.\n\
    \   Each of these headers provides the timestamp offset and length of the\n  \
    \ corresponding data block plus a payload type number indicating this\n   payload\
    \ format (\"T140\").\n"
- title: 2.3 T.140 Text structure
  contents:
  - "2.3 T.140 Text structure\n   T.140 text is UTF-8 coded as specified in T.140\
    \ with no extra\n   framing. When using the format with redundant data, the transmitter\n\
    \   MAY select a number of T140block generations to retransmit in each\n   packet.\
    \ A higher number introduces better protection against loss of\n   text but increases\
    \ the data rate.\n   Since packets are not generated at regular intervals, the\
    \ timestamp\n   is not sufficient to identify a packet in the presence of loss\
    \ unless\n   extra information is provided. Since sequence numbers are not\n \
    \  provided in the redundant header, some additional rules must be\n   followed\
    \ to allow the redundant data corresponding to missing primary\n   data to be\
    \ merged properly into the stream of primary data\n   T140blocks:\n      - Each\
    \ redundant data block MUST contain the same data as a\n        T140block previously\
    \ transmitted as primary data, and be\n        identified with a timestamp offset\
    \ equating to the original\n        timestamp for that T140block.\n      - The\
    \ redundant data MUST be placed in age order with most\n        recent redundant\
    \ T140block last in the redundancy area.\n      - All T140blocks from the oldest\
    \ desired generation up through\n        the generation immediately preceding\
    \ the new (primary)\n        T140block MUST be included.\n   These rules allow\
    \ the sequence numbers for the redundant T140blocks\n   to be inferred by counting\
    \ backwards from the sequence number in the\n   RTP header.  The result will be\
    \ that all the text in the payload will\n   be contiguous and in order.\n"
- title: 3. Recommended procedures
  contents:
  - "3. Recommended procedures\n   This section contains RECOMMENDED procedures for\
    \ usage of the payload\n   format.  Based on the information in the received packets,\
    \ the\n   receiver can:\n      - reorder text received out of order.\n      -\
    \ mark where text is missing because of packet loss.\n      - compensate for lost\
    \ packets by using redundant data.\n"
- title: 3.1 Recommended basic procedure
  contents:
  - "3.1 Recommended basic procedure\n   Packets are transmitted only when there is\
    \ valid T.140 data to\n   transmit. The sequence number is used for sequencing\
    \ of T.140 data.\n   On reception, the RTP sequence number is compared with the\
    \ sequence\n   number of the last correctly received packet. If they are\n   consecutive,\
    \ the (only or primary) T140block is retrieved from the\n   packet.\n"
- title: 3.2 Recommended procedure for compensation for lost packets.
  contents:
  - "3.2 Recommended procedure for compensation for lost packets.\n   For reduction\
    \ of data loss in case of packet loss, redundant data MAY\n   be included in the\
    \ packets following to the procedures in RFC 2198.\n   If network conditions are\
    \ not known, it is RECOMMENDED to use one\n   redundant T140block in each packet.\
    \ If there is a gap in the RTP\n   sequence numbers, and redundant T140blocks\
    \ are available in a\n   subsequent packet, the sequence numbers for the redundant\
    \ T140blocks\n   should be inferred by counting backwards from the sequence number\
    \ in\n   the RTP header for that packet.  If there are redundant T140blocks\n\
    \   with sequence numbers matching those that are missing, the redundant\n   T140blocks\
    \ may be substituted for the missing T140blocks.\n   Both for the case when redundancy\
    \ is used and not used, missing data\n   SHOULD be marked by insertion of a missing\
    \ text marker in the\n   received stream for each missing T140block, as specified\
    \ in ITU-T\n   T.140. Addendum 1 [1].\n"
- title: 3.3 Recommended procedure for compensation for packets out of order.
  contents:
  - "3.3 Recommended procedure for compensation for packets out of order.\n   For\
    \ protection against packets arriving out of order, the following\n   procedure\
    \ MAY be implemented in the receiver.  If analysis of a\n   received packet reveals\
    \ a gap in the sequence and no redundant data\n   is available to fill that gap,\
    \ the received packet can be kept in a\n   buffer to allow time for the missing\
    \ packet(s) to arrive.  It is\n   suggested that the waiting time be limited to\
    \ 0.5 seconds. For the\n   case when redundancy is used the waiting time SHOULD\
    \ be extended to\n   the number of redundancy generations times the T.140 buffering\
    \ timer\n   if this product is known to be greater than 0.5 seconds.\n   If a\
    \ packet with a T140block belonging to the gap arrives before the\n   waiting\
    \ time expires, this T140block is inserted into the gap and\n   then consecutive\
    \ T140blocks from the leading edge of the gap may be\n   consumed.  Any T140block\
    \ which does not arrive before the time limit\n   expires should be treated as\
    \ lost.\n"
- title: 3.4 Transmission during "silent periods" when redundancy is used.
  contents:
  - "3.4 Transmission during \"silent periods\" when redundancy is used.\n   When\
    \ using the redundancy transmission scheme, and there is nothing\n   more to transmit\
    \ from T.140, the latest T140block has a risk of\n   getting old before it is\
    \ transmitted as redundant data. The result is\n   less useful protection against\
    \ packet loss at the end of a text input\n   sequence. For cases where this should\
    \ be avoided, a zero-length\n   primary T140block MAY be transmitted with the\
    \ redundant data.\n   Any zero-length T140blocks that are sent as primary data\
    \ MUST be\n   included as redundant T140blocks on subsequent packets just as normal\n\
    \   text T140blocks would be so that sequence number inference for the\n   redundant\
    \ T140blocks will be correct, as explained in section 2.3.\n   Redundancy for\
    \ the last T140block SHOULD NOT be implemented by\n   repeatedly transmitting\
    \ the same packet (with the same sequence\n   number) because this will cause\
    \ the packet loss count, as reported in\n   RTCP, to decrement.\n"
- title: 4. Examples
  contents:
  - "4. Examples\n   This is an example of a T140 RTP packet without redundancy.\n\
    \    0                   1                   2                   3\n    0 1 2\
    \ 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V=2|P|X| CC=0  |M|   T140 PT   |       sequence number         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                      timestamp (1000Hz)                       |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           synchronization source (SSRC) identifier            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   +                      T.140 encoded data                       +\n   |  \
    \                                                             |\n   +        \
    \                                       +---------------+\n   |              \
    \                                 |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   This is an example of an RTP packet with one redundant T140block.\n    0 \
    \                  1                   2                   3\n    0 1 2 3 4 5\
    \ 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |V=2|P|X| CC=0  |M|  \"RED\" PT   |   sequence number of primary  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |              timestamp  of primary encoding \"P\"               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |           synchronization source (SSRC) identifier            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |1|   T140 PT   |  timestamp offset of \"R\"  | \"R\" block length  |\n  \
    \ +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |0|  \
    \ T140 PT   |                                               |\n   +-+-+-+-+-+-+-+-+\
    \                                               +\n   |                      \
    \                                         |\n   +               \"R\" T.140 encoded\
    \ redundant data                +\n   |                                      \
    \                         |\n   +                                            \
    \   +---------------+\n   |                                               |  \
    \             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+        \
    \       +\n   |                \"P\" T.140 encoded primary data              \
    \   |\n   +                                                               +\n\
    \   +                                               +---------------+\n   |  \
    \                                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Figure: Examples of RTP text packets.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Since the intention of the described payload\
    \ format is to carry text\n   in a text conversation, security measures in the\
    \ form of encryption\n   are of importance. The amount of data in a text conversation\
    \ session\n   is low and therefore any encryption method MAY be selected and\n\
    \   applied to T.140 session contents or to the whole RTP packets. When\n   redundant\
    \ data is included, the same security considerations as for\n   RFC 2198 apply.\n"
- title: 6.  MIME Media Type Registrations
  contents:
  - "6.  MIME Media Type Registrations\n   This document defines a new RTP payload\
    \ name and associated MIME\n   type, T140 (text/t140).\n"
- title: 6.1  Registration of MIME media type text/t140
  contents:
  - "6.1  Registration of MIME media type text/t140\n   MIME media type name: text\n\
    \   MIME subtype name: t140\n   Required parameters: None\n   Optional parameters:\
    \ None\n   Encoding considerations: T140 text can be transmitted with RTP as\n\
    \   specified in RFC 2793.\n   Security considerations: None\n   Interoperability\
    \ considerations: None\n   Published specification: ITU-T T.140 Recommendation.\n\
    \                            RFC 2793.\n   Applications which use this media type:\n\
    \     Text communication terminals and text conferencing tools.\n   Additional\
    \ information: None\n     Magic number(s): None\n     File extension(s): None\n\
    \     Macintosh File Type Code(s): None\n   Person & email address to contact\
    \ for further information:\n     Gunnar Hellstrom\n     e-mail: gunnar.hellstrom@omnitor.se\n\
    \   Intended usage: COMMON\n     Author                      / Change controller:\n\
    \     Gunnar Hellstrom            | IETF avt WG\n     gunnar.hellstrom@omnitor.se\
    \ | c/o Steve Casner casner@cisco.com\n"
- title: 7. Author's Address
  contents:
  - "7. Author's Address\n   Gunnar Hellstrom\n   Omnitor AB\n   Alsnogatan 7, 4 tr\n\
    \   SE-116 41 Stockholm\n   Sweden\n   Phone: +46 708 204 288 / +46 8 556 002\
    \ 03\n   Fax:   +46 8 556 002 06\n   EMail: gunnar.hellstrom@omnitor.se\n"
- title: 8. Acknowledgements
  contents:
  - "8. Acknowledgements\n   The author wants to thank Stephen Casner and Colin Perkins\
    \ for\n   valuable support with reviews and advice on creation of this\n   document,\
    \ to Mickey Nasiri at Ericsson Mobile Communication for\n   providing the development\
    \ environment, and Michele Mizarro for\n   verification of the usability of the\
    \ payload format for its intended\n   purpose.\n"
- title: 9. References
  contents:
  - "9. References\n   [1]  ITU-T Recommendation T.140 (1998) - Text conversation\
    \ protocol\n        for multimedia application, with amendment 1, (2000).\n  \
    \ [2]  Schulzrinne, H., Casner, S., Frederick, R. and V. Jacobson,\n        \"\
    RTP: A Transport Protocol for Real-Time Applications\", RFC\n        1889, January\
    \ 1996.\n   [3]  Perkins, C., Kouvelas, I., Hardman, V., Handley, M. and J.\n\
    \        Bolot, \"RTP Payload for Redundant Audio Data\", RFC 2198,\n        September\
    \ 1997.\n   [4]  Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n\
    \        Levels\", BCP 14, RFC 2119, March 1997.\n   [5]  ISO/IEC 10646-1: (1993),\
    \ Universal Multiple Octet Coded\n        Character Set.\n   [6]  Yergeau, F.,\
    \ \"UTF-8, a transformation format of ISO 10646\",  RFC\n        2279, January\
    \ 1998.\n"
- title: 10. Full Copyright Statement
  contents:
  - "10. Full Copyright Statement\n   Copyright (C) The Internet Society (2000). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
