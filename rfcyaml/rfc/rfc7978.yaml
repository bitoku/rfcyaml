- contents:
  - "         Transparent Interconnection of Lots of Links (TRILL):\n                    RBridge
    Channel Header Extension\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The IETF TRILL (Transparent Interconnection of Lots of Links)\n
    \  protocol includes an optional mechanism (specified in RFC 7178)\n   called
    RBridge Channel for the transmission of typed messages between\n   TRILL switches
    in the same campus and the transmission of such\n   messages between TRILL switches
    and end stations on the same link.\n   This document specifies extensions to the
    RBridge Channel protocol\n   header to support two features as follows: (1) a
    standard method to\n   tunnel payloads whose type can be indicated by Ethertype
    through\n   encapsulation in RBridge Channel messages; and (2) a method to\n   support
    security facilities for RBridge Channel messages.  This\n   document updates RFC
    7178.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7978.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n
    \     1.1. Terminology and Acronyms ...................................4\n   2.
    RBridge Channel Header Extension Format .........................5\n   3. Extended
    RBridge Channel Payload Types ..........................8\n      3.1. Null Payload
    ...............................................8\n      3.2. Ethertyped Payload
    .........................................9\n           3.2.1. RBridge Channel
    Message as the Payload ..............9\n           3.2.2. TRILL Data Packet as
    the Payload ...................10\n           3.2.3. TRILL IS-IS Packet as the
    Payload ..................10\n      3.3. Ethernet Frame ............................................11\n
    \  4. Extended RBridge Channel Security ..............................13\n      4.1.
    Derived Keying Material ...................................14\n      4.2. SType
    None ................................................14\n      4.3. IS-IS CRYPTO_AUTH-Based
    Authentication ....................15\n      4.4. DTLS Pairwise Security ....................................17\n
    \     4.5. Composite Security ........................................18\n   5.
    Extended RBridge Channel Errors ................................18\n      5.1.
    SubERRs ...................................................19\n      5.2. Secure
    Nested RBridge Channel Errors ......................19\n   6. IANA Considerations
    ............................................19\n      6.1. Extended RBridge Channel
    Protocol Number ..................19\n      6.2. RBridge Channel Protocol Subregistries
    ....................20\n           6.2.1. RBridge Channel Error Codes ........................20\n
    \          6.2.2. RBridge Channel SubError Codes .....................20\n           6.2.3.
    Extended RBridge Channel Payload Types\n                  Subregistry ........................................20\n
    \          6.2.4. Extended RBridge Channel Security Types\n                  Subregistry
    ........................................21\n   7. Security Considerations ........................................21\n
    \  8. Normative References ...........................................22\n   9.
    Informative References .........................................23\n   Acknowledgements
    ..................................................25\n   Authors' Addresses ................................................25\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The IETF TRILL base protocol [RFC6325] [RFC7780] has been
    extended\n   with the RBridge Channel [RFC7178] facility to support transmission\n
    \  of typed messages (for example, Bidirectional Forwarding Detection\n   (BFD)
    [RFC7175]) between two TRILL switches (RBridges) in the same\n   campus and the
    transmission of such messages between RBridges and end\n   stations on the same
    link.  When sent between RBridges in the same\n   campus, a TRILL Data packet
    with a TRILL Header is used, and the\n   destination RBridge is indicated by nickname.
    \ When sent between a\n   RBridge and an end station on the same link in either
    direction, a\n   native RBridge Channel message [RFC7178] is used with no TRILL\n
    \  Header, and the destination port or ports are indicated by a Media\n   Access
    Control (MAC) address.  (There is no mechanism to stop end\n   stations on the
    same link from sending native RBridge Channel\n   messages to each other; however,
    such use is outside the scope of\n   this document.)\n   This document updates
    [RFC7178] and specifies extensions to the\n   RBridge Channel header that provide
    two additional facilities as\n   follows:\n      (1) A standard method to tunnel
    payloads, whose type may be\n          indicated by Ethertype, through encapsulation
    in RBridge\n          Channel messages.\n      (2) A method to provide security
    facilities for RBridge Channel\n          messages.  Example uses requiring such
    facilities are the\n          security of Pull Directory messages [RFC7067], address
    flush\n          messages [AddrFlush], and port shutdown messages [TRILL-AF].\n
    \  Use of each of these facilities is optional, except that, as\n   specified
    below, if this header extension is implemented, there are\n   two payload types
    that MUST be implemented.  Both of the above\n   facilities can be used in the
    same packet.  In case of conflict\n   between this document and [RFC7178], this
    document takes precedence.\n"
  - contents:
    - "1.1.  Terminology and Acronyms\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   [RFC2119].\n   This document uses terminology and abbreviations
      defined in [RFC6325]\n   and [RFC7178].  Some of these are listed below for
      convenience along\n   with new terms and abbreviations.\n      application_data
      - A DTLS [RFC6347] message type.\n      Data Label - VLAN or FGL.\n      DTLS
      - Datagram Transport Layer Security [RFC6347].\n      FCS - Frame Check Sequence.\n
      \     FGL - Fine-Grained Label [RFC7172].\n      HKDF - HMAC-based Key Derivation
      Function [RFC5869].\n      IS-IS - Intermediate System to Intermediate System
      [IS-IS].\n      PDU - Protocol Data Unit.\n      MTU - Maximum Transmission
      Unit.\n      RBridge - An alternative term for a TRILL switch.\n      SHA -
      Secure Hash Algorithm [RFC6234].\n      Sz - Campus-wide minimum link MTU [RFC6325]
      [RFC7780].\n      TRILL - Transparent Interconnection of Lots of Links or Tunneled\n
      \        Routing in the Link Layer.\n      TRILL switch - A device that implements
      the TRILL protocol\n         [RFC6325] [RFC7780], sometimes referred to as an
      RBridge.\n"
    title: 1.1.  Terminology and Acronyms
  title: 1.  Introduction
- contents:
  - "2.  RBridge Channel Header Extension Format\n   The general structure of an RBridge
    Channel message between two TRILL\n   switches (RBridges) in the same campus is
    shown in Figure 1 below.\n   The structure of a native RBridge Channel message
    sent between an\n   RBridge and an end station on the same link, in either direction,
    is\n   shown in Figure 2 and, compared with the first case, omits the TRILL\n
    \  Header, inner Ethernet addresses, and Data Label.  A Protocol field\n   in
    the RBridge Channel Header gives the type of RBridge Channel\n   message and indicates
    how to interpret the Channel-Protocol-Specific\n   Payload [RFC7178].\n                      +-----------------------------------+\n
    \                     |           Link Header             |\n                      +-----------------------------------+\n
    \                     |           TRILL Header            |\n                      +-----------------------------------+\n
    \                     |      Inner Ethernet Addresses     |\n                      +-----------------------------------+\n
    \                     |      Data Label (VLAN or FGL)     |\n                      +-----------------------------------+\n
    \                     |      RBridge Channel Header       |\n                      +-----------------------------------+\n
    \                     | Channel-Protocol-Specific Payload |\n                      +-----------------------------------+\n
    \                     |   Link Trailer (FCS if Ethernet)  |\n                      +-----------------------------------+\n
    \                  Figure 1: RBridge Channel Packet Structure\n                      +-----------------------------------+\n
    \                     |       Ethernet Link Header        |\n                      +-----------------------------------+\n
    \                     |      RBridge Channel Header       |\n                      +-----------------------------------+\n
    \                     | Channel-Protocol-Specific Payload |\n                      +-----------------------------------+\n
    \                     |                FCS                |\n                      +-----------------------------------+\n
    \                    Figure 2: Native RBridge Channel Frame\n   The RBridge Channel
    Header looks like this:\n                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2
    2 2 2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9
    0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |
    \        0x8946                | CHV=0 |   Channel Protocol    |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |         Flags         |  ERR  |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    \                              /\n   /                             Channel-Protocol-Specific
    Data    /\n   /-+-+-+-+-+-                                                    /\n
    \                    Figure 3: RBridge Channel Header\n   where 0x8946 is the
    RBridge-Channel Ethertype and CHV is the Channel\n   Header Version.  This document
    is based on RBridge Channel version\n   zero.\n   The header extensions specified
    herein are in the form of an RBridge\n   Channel protocol, the Extended RBridge
    Channel Protocol.  Figure 4\n   below expands the RBridge Channel Header and Protocol-Specific\n
    \  Payload above for the case where the header extension is present.\n                           1
    1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3
    4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n    RBridge Channel Header:\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |         0x8946                | CHV=0 | Channel Protocol=0x004|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |         Flags         |  ERR  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                                     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n    Header
    Extension Specific:        | SubERR| RESV4 | SType | PType |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     | Security Information, variable length (0 length if SType = 0) /\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
    \     |      Tunneled Data, variable length\n      |  ...\n           Figure 4:
    RBridge Channel Header Extension Structure\n   The RBridge Channel Header Protocol
    field is used to indicate that\n   the header extension is present.  Its contents
    MUST be the value\n   allocated for this purpose (see Section 6).  The use of
    an RBridge\n   Channel protocol to indicate extensions makes it easy to determine
    if\n   a remote RBridge in the campus supports extensions since RBridges\n   advertise
    in their LSP which such protocols they support.\n   The Extended RBridge Channel-Protocol-Specific
    Data fields are as\n   follows:\n      SubERR: This field provides further details
    when an error is\n         indicated in the RBridge Channel ERR field.  If ERR
    is zero,\n         then SubERR MUST be sent as zero and ignored on receipt.  See\n
    \        Section 5.\n      RESV4: This field MUST be sent as zero.  If non-zero
    when\n         received, this is an error condition.  See Section 5.\n      SType:
    This field describes the type of security information and\n         features,
    including keying material, being used or provided by\n         the extended RBridge
    Channel message.  See Section 4.\n      PType: Payload Type.  This describes the
    tunneled data.  See\n         Section 3.\n      Security Information: Variable-length
    information.  Length is zero\n         if SType is zero.  See Section 4.\n   The
    RBridge Channel Header Extension is integrated with the RBridge\n   Channel facility.
    \ Extension errors are reported as if they were\n   RBridge Channel errors, using
    newly allocated code points in the ERR\n   field of the RBridge Channel Header
    supplemented by the SubERR field.\n"
  title: 2.  RBridge Channel Header Extension Format
- contents:
  - "3.  Extended RBridge Channel Payload Types\n   The Extended RBridge Channel Protocol
    can carry a variety of payloads\n   as indicated by the PType (Payload Type) field.
    \ Values are shown in\n   the table below with further explanation below the table
    (see also\n   Section 6.2.2).\n         PType  Description         Reference\n
    \        -----  -----------         ---------\n            0   Reserved\n            1
    \  Null                Section 3.1 of RFC 7978\n            2   Ethertyped Payload
    \ Section 3.2 of RFC 7978\n            3   Ethernet Frame      Section 3.3 of
    RFC 7978\n         4-14   Unassigned\n           15   Reserved\n                       Table
    1: Payload Type Values\n   While implementation of the RBridge Channel Header
    Extension is\n   optional, if it is implemented, PType 1 (Null) MUST be implemented\n
    \  and PType 2 (Ethertyped Payload) with the RBridge-Channel Ethertype\n   MUST
    be implemented.  PType 2 for any Ethertypes other than the\n   RBridge-Channel
    Ethertype MAY be implemented.  PType 3 MAY be\n   implemented.\n   The processing
    of any particular extended header RBridge Channel\n   message and its payload
    depends on meeting local security and other\n   policy at the destination TRILL
    switch or end station.\n"
  - contents:
    - "3.1.  Null Payload\n   The Null payload type (PType = 1) is intended to be
      used for testing\n   or for messages such as key negotiation or the like where
      only\n   security information is present.  It indicates that there is no user\n
      \  data payload.  Any tunneled user data after the Security Information\n   field
      is ignored.  If the RBridge Channel Header Extension is\n   implemented, the
      Null Payload MUST be supported in the sense that an\n   \"Unsupported PType\"
      error is not returned (see Section 5).  Any\n   particular use of the Null Payload
      should specify what VLAN or FGL\n   and what priority should be used in the
      inner Data Label of the\n   RBridge Channel message (or in an outer VLAN tag
      for the native\n   RBridge Channel message case) when those values are relevant.\n"
    title: 3.1.  Null Payload
  - contents:
    - "3.2.  Ethertyped Payload\n   A PType of 2 indicates that the payload (tunneled
      data) of the\n   extended RBridge Channel message begins with an Ethertype.
      \ A TRILL\n   switch supporting the RBridge Channel Header Extension MUST support
      a\n   PType of 2 with a payload beginning with the RBridge-Channel\n   Ethertype
      as described in Section 3.2.1.  Other Ethertypes, including\n   the TRILL and
      L2-IS-IS Ethertypes as described in Sections 3.2.2 and\n   3.2.3, MAY be supported.\n"
    - contents:
      - "3.2.1.  RBridge Channel Message as the Payload\n   A PType of 2 whose payload
        has an initial RBridge-Channel Ethertype\n   indicates an encapsulated RBridge
        Channel message.  A typical reason\n   for sending an RBridge Channel message
        inside an extended RBridge\n   Channel message is to provide security services,
        such as\n   authentication or encryption, for the encapsulated message.\n
        \  This RBridge Channel message type looks like the following:\n                        1
        1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |    RBridge-Channel (0x8946)   | CHV=0 | Channel Protocol=0x004|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          Flags        |  ERR  | SubERR| RESV4 | SType |  0x2  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  / Security Information, variable length (0 length if SType = 0) /\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |    RBridge-Channel (0x8946)   | CHV=0 |Nested Channel Protocol|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          Flags        |  ERR  |                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              |\n   |         Nested Channel-Protocol-Specific
        Data ...             /\n   /                                                               /\n
        \        Figure 5: Message Structure with RBridge Channel Payload\n"
      title: 3.2.1.  RBridge Channel Message as the Payload
    - contents:
      - "3.2.2.  TRILL Data Packet as the Payload\n   A PType of 2 whose payload has
        an initial TRILL Ethertype indicates\n   an encapsulated TRILL Data packet
        as shown in Figure 6.  If this\n   Ethertype is supported for PType = 2 and
        the message meets local\n   policy for acceptance, the TRILL Data packet is
        handled as if it had\n   been received by the destination TRILL switch on
        the port where the\n   Extended RBridge Channel message was received.\n                        1
        1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |    RBridge-Channel (0x8946)   | CHV=0 | Channel Protocol=0x004|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          Flags        |  ERR  | SubERR| RESV4 | SType |  0x2  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  / Security Information, variable length (0 length if SType = 0) /\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |        TRILL (0x22F3)         | V |A|C|M| RESV  |F| Hop Count |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |       Egress Nickname         |      Ingress Nickname         |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  /                       Optional Flags Word                     /\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                          Inner.MacDA                          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |    Inner.MacDA continued      |          Inner.MacSA          |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                       Inner.MacSA (cont.)                     |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                 Inner Data Label (2 or 4 bytes)\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
        \  |  TRILL Data Packet payload\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
        \       Figure 6: Message Structure with TRILL Data Packet Payload\n   The
        optional flags word is only present if the F bit in the TRILL\n   Header is
        one [RFC7780].\n"
      title: 3.2.2.  TRILL Data Packet as the Payload
    - contents:
      - "3.2.3.  TRILL IS-IS Packet as the Payload\n   A PType of 2 and an initial
        L2-IS-IS Ethertype indicate that the\n   payload of the Extended RBridge Channel
        protocol message is an\n   encapsulated TRILL IS-IS PDU as shown in Figure
        7.  If this Ethertype\n   is supported for PType = 2, the tunneled TRILL IS-IS
        packet is\n   processed by the destination RBridge if it meets local policy.
        \ One\n   possible use is to expedite the receipt of a link state PDU (LSP)
        by\n   some TRILL switch or switches with an immediate requirement for the\n
        \  link state information.  A link local IS-IS PDU would not normally be\n
        \  sent via this Extended RBridge Channel method except possibly to\n   encrypt
        the PDU since such PDUs can just be transmitted on the link\n   and do not
        normally need RBridge Channel handling.  (Link local IS-IS\n   PDUs are (1)
        Hello, CSNP, PSNP [IS-IS]; (2) MTU-probe, MTU-ack\n   [RFC7176]; and (3) circuit
        scoped FS-LSP, FS-CSNP, and FS-PSNP\n   [RFC7356].)\n                        1
        1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |    RBridge-Channel (0x8946)   | CHV=0 | Channel Protocol=0x004|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |          Flags        |  ERR  | SubERR| RESV4 | SType |  0x2  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  / Security Information, variable length (0 length if SType = 0) /\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
        \  |  L2-IS-IS (0x22F4)            |     0x83      |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  |                         rest of IS-IS PDU\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
        \       Figure 7: Message Structure with TRILL IS-IS Packet Payload\n"
      title: 3.2.3.  TRILL IS-IS Packet as the Payload
    title: 3.2.  Ethertyped Payload
  - contents:
    - "3.3.  Ethernet Frame\n   If PType is 3, the extended RBridge Channel payload
      is an Ethernet\n   frame as might be received from or sent to an end station
      except that\n   the encapsulated Ethernet frame's FCS is omitted, as shown in\n
      \  Figure 8.  (There is still an overall final FCS if the RBridge\n   Channel
      message is being sent on an Ethernet link.) If this PType is\n   implemented
      and the message meets local policy, the encapsulated\n   frame is handled as
      if it had been received on the port on which the\n   Extended RBridge Channel
      message was received.\n   The priority of the RBridge Channel message can be
      copied from the\n   Ethernet frame VLAN tag, if one is present, except that
      priority 7\n   SHOULD only be used for messages critical to establishing or\n
      \  maintaining adjacency and priority 6 SHOULD only be used for other\n   important
      control messages.\n                        1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2
      2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0
      1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   |
      \   RBridge-Channel (0x8946)   |  0x0  | Channel Protocol=0x004|\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |          Flags        |  ERR  | SubERR| RESV4 | SType |  0x3  |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  / Security Information, variable length (0 length if SType = 0) /\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                             MacDA                             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |         MacDA (cont.)         |             MacSA             |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |                          MacSA (cont.)                        |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |  Any Ethernet frame tagging...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
      \  |  Ethernet frame payload...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-...\n
      \         Figure 8: Message Structure with Ethernet Frame Payload\n   In the
      case of a non-Ethernet link, such as a PPP (Point-to-Point\n   Protocol) link
      [RFC6361], the ports on the link are considered to\n   have link-local synthetic
      48-bit MAC addresses constructed as\n   described below.  Such a constructed
      address MAY be used as a MacSA.\n   If the RBridge Channel message is individually
      addressed to a link-\n   local port, the source TRILL switch will have the information
      to\n   construct such a MAC address for the destination TRILL switch port,\n
      \  and that MAC address MAY be used as the MacDA.  By the use of such a\n   MacSA
      and either such a unicast MacDA or a group-addressed MacDA, an\n   Ethernet
      frame can be sent between two TRILL switch ports connected\n   by a non-Ethernet
      link.\n   These synthetic TRILL switch port MAC addresses for non-Ethernet\n
      \  ports are constructed as follows (and as shown in Figure  9): 0xFEFF,\n   the
      nickname of the TRILL switch used in TRILL Hellos sent on that\n   port, and
      the Port ID that the TRILL switch has assigned to that\n   port.  (Both the
      Port ID of the port on which a TRILL Hello is sent\n   and the nickname of the
      sending TRILL switch appear in the Special\n   VLANs and Flags sub-TLV [RFC7176]
      in TRILL IS-IS Hellos.)  The\n   resulting MAC address has the Local bit on
      and the Group bit off\n   [RFC7042].  However, since there will be no Ethernet
      end stations on\n   a non-Ethernet link in a TRILL campus, such synthetic MAC
      addresses\n   cannot conflict on the link with a real Ethernet port address\n
      \  regardless of their values.\n                        1 1 1 1 1 1 1 1 1 1
      2 2 2 2 2 2 2 2 2 2 3 3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |            0xFEFF             |            Nickname           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  |            Port ID            |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                     Figure 9: Synthetic MAC Address\n"
    title: 3.3.  Ethernet Frame
  title: 3.  Extended RBridge Channel Payload Types
- contents:
  - "4.  Extended RBridge Channel Security\n   Table 2 below gives the assigned values
    of the SType (Security Type)\n   field and their meaning.  Use of DTLS Pairwise
    Security (SType = 2)\n   or Composite Security (SType = 3) is RECOMMENDED.\n   While
    IS-IS CRYPTO_AUTH-based authentication is also specified and\n   can be used for
    both pairwise and multi-destination traffic, it\n   provides only authentication
    and is not considered to meet current\n   security standards.  For example, it
    does not provide for key\n   negotiation; thus, its use is NOT RECOMMENDED.\n
    \  The Extended RBridge Channel DTLS-based security specified in\n   Section 4.4
    and the Composite Security specified in Section 4.5 are\n   intended for pairwise
    (known unicast) use.  That is, the case where\n   the M bit in the TRILL Header
    is zero and any Outer.MacDA is\n   individually addressed.\n   Multi-destination
    Extended RBridge Channel packets would be those\n   with the M bit in the TRILL
    Header set to one or, in the native\n   RBridge Channel case, the Outer.MacDA
    would be group addressed.  The\n   DTLS Pairwise Security and Composite Security
    STypes can also be used\n   in the multi-destination case by serially unicasting
    the messages to\n   all data-accessible RBridges (or stations in the native RBridge\n
    \  Channel case) in the recipient group.  For TRILL Data packets, that\n   group
    is specified by the Data Label; for native frames, the group is\n   specified
    by the groupcast destination MAC address.  It is intended\n   to specify a true
    group keyed SType to secure multi-destination\n   packets in a separate document
    [GroupKey].\n      SType  Description                     Reference\n      -----
    \ -----------                     ---------\n          0  None                            Section
    4.2 of RFC 7978\n          1  IS-IS CRYPTO_AUTH-Based         Section 4.3 of RFC
    7978\n               Authentication\n          2  DTLS Pairwise Security          Section
    4.4 of RFC 7978\n          3  Composite Security              Section 4.5 of RFC
    7978\n       4-14  Unassigned\n         15  Reserved\n                           Table
    2: SType Values\n"
  - contents:
    - "4.1.  Derived Keying Material\n   In some cases, it is possible to use material
      derived from IS-IS\n   CRYPTO_AUTH keying material [RFC5310] as an element of
      Extended\n   RBridge Channel security.  It is assumed that the IS-IS keying\n
      \  material is of high quality.  The material actually used is derived\n   from
      the IS-IS keying material as follows:\n      Derived Material =\n         HKDF-Expand-SHA256
      ( IS-IS-key, \"Extended Channel\" | 0x0S, L )\n   where \"|\" indicates concatenation,
      HKDF is as in [RFC5869], SHA256 is\n   as in [RFC6234], IS-IS-key is the input
      IS-IS keying material,\n   \"Extended Channel\" is the 16-character ASCII [RFC20]
      string indicated\n   without any leading length byte or trailing zero byte,
      0x0S is a\n   single byte where S is the SType for which this key derivation
      is\n   being used and the upper nibble is zero, and L is the length of the\n
      \  output-derived material needed.\n   Whenever IS-IS keying material is being
      used as above, the underlying\n   IS-IS CRYPTO_AUTH keying material [RFC5310]
      might expire or be\n   invalidated.  At the time of or before such expiration
      or\n   invalidation, the use of the Derived Material from the IS-IS keying\n
      \  material MUST cease.  Continued security MAY use new derived material\n   from
      currently valid IS-IS CRYPTO_AUTH keying material.\n"
    title: 4.1.  Derived Keying Material
  - contents:
    - "4.2.  SType None\n   No security services are being invoked.  The length of
      the Security\n   Information field (see Figure 4) is zero.\n"
    title: 4.2.  SType None
  - contents:
    - "4.3.  IS-IS CRYPTO_AUTH-Based Authentication\n   This SType provides security
      for Extended RBridge Channel messages\n   similar to that provided for [IS-IS]
      PDUs by the [IS-IS]\n   Authentication TLV.  The Security Information (see Figure
      4) is as\n   shown in Figure 10.\n                                 1 1 1 1 1
      1\n             0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           |  RESV |         Size          |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           |           Key ID              |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \           |                               |\n            +\n            |
      Authentication Data (Variable)\n            +\n            |\n            +-+-+-+-+-+-+-+-+-+-+-+-+-...\n
      \                 Figure 10: SType 1 Security Information\n   o  RESV: Four
      bits that MUST be sent as zero and ignored on receipt.\n   o  Size: Set to 2
      + the size of Authentication Data in bytes.\n   o  Key ID: specifies the keying
      value and authentication algorithm\n      that the Key ID specifies for TRILL
      IS-IS LSP [RFC5310]\n      Authentication TLVs.  The keying material actually
      used is always\n      derived as shown in Section 4.1.\n   o  Authentication
      Data: The authentication data produced by the\n      derived key and algorithm
      associated with the Key ID acting on the\n      part of the TRILL Data packet
      shown.  Length of the authentication\n      data depends on the algorithm.  The
      authentication value is\n      included in the security information field and
      is treated as zero\n      when authentication is calculated.\n   As show in
      Figure 11, the area covered by this authentication starts\n   with the byte
      immediately after the TRILL Header optional Flag Word\n   if it is present.
      \ If the Flag Word is not present, it starts after\n   the TRILL Header Ingress
      Nickname.  In either case, it extends to\n   just before the TRILL Data packet
      link trailer.  For example, for an\n   Ethernet packet it would extend to just
      before the FCS.\n         +-----------------------------+\n         |  Link
      Header                |\n         +-----------------------------+\n         |
      \ TRILL Header               |\n         |  (plus optional Flag Word)  |\n         +-----------------------------+
      \  ^\n         |  Inner Ethernet Addresses   |   |\n         +-----------------------------+
      \  .\n         |  Data Label (VLAN or FGL)   |   |\n         +-----------------------------+
      \  .\n         |  RBridge Channel Header     |   | <-authentication\n         +-----------------------------+
      \  .\n         |  Extended Channel Header    |   |\n         |  (plus Security
      Information)|   .\n         +-----------------------------+   |\n         |
      \ Payload                    |   .\n         +-----------------------------+
      \  v\n         |  Link Trailer               |\n         +-----------------------------+\n
      \               Figure 11: SType 1 Authentication Coverage\n   In the native
      RBridge Channel case, this authentication coverage is\n   as specified in the
      above paragraph except that it starts with the\n   RBridge-Channel Ethertype,
      since there is no TRILL Header, inner\n   Ethernet addresses, or inner Data
      Label (see Figure 12).\n      +-----------------------------+\n      |  Ethernet
      Header            |\n      +-----------------------------+   ^\n      |  RBridge
      Channel Header     |   |\n      +-----------------------------+   .\n      |
      \ Extended Channel Header    |   | <-authentication\n      |  (plus Security
      Information)|   .\n      +-----------------------------+   |\n      |  Payload
      \                   |   .\n      +-----------------------------+   v\n      |
      \ Ethernet Trailer           |\n      +-----------------------------+\n             Figure
      12: Native SType 1 Authentication Coverage\n   RBridges, which are IS-IS routers,
      can reasonably be expected to hold\n   IS-IS CRYPTO_AUTH keying material [RFC5310]
      so that this SType can be\n   used for RBridge Channel messages, which go between
      RBridges.  How\n   end stations might come to hold IS-IS CRYPTO_AUTH keying
      material is\n   beyond the scope of this document.  Thus, this SType might not
      be\n   applicable to native RBridge Channel messages, which are between an\n
      \  RBridge and an end station.\n"
    title: 4.3.  IS-IS CRYPTO_AUTH-Based Authentication
  - contents:
    - "4.4.  DTLS Pairwise Security\n   DTLS [RFC6347] supports key negotiation and
      provides both encryption\n   and authentication.  The RBridge Channel Extended
      Header DTLS\n   Pairwise SType uses a negotiated DTLS version that MUST NOT
      be less\n   than 1.2.\n   When DTLS pairwise security is used, the entire payload
      of the\n   Extended RBridge Channel packet, starting just after the null\n   Security
      Information and ending just before the link trailer, is one\n   or more DTLS
      records [RFC6347].  As specified in [RFC6347], DTLS\n   records MUST be limited
      by the path MTU, in this case so that each\n   record fits entirely within a
      single Extended RBridge Channel\n   message.  A minimum path MTU can be determined
      from the TRILL campus\n   minimum MTU Sz, which will not be less than 1470 bytes,
      by allowing\n   for the TRILL Data packet, extended RBridge Channel, and DTLS
      framing\n   overhead.  With this SType, the security information between the\n
      \  extended RBridge Channel header and the payload is null because all\n   the
      security information is in the payload area.\n   The DTLS Pairwise keying is
      set up between a pair of RBridges,\n   independent of Data Label, using messages
      of a priority configurable\n   at the RBridge level, which defaults to priority
      6.  DTLS message\n   types other than application_data can be the payload of
      an extended\n   RBridge Channel message with a TRILL Header using any Data Label,\n
      \  and, for such DTLS message types, the PType in the RBridge Channel\n   Header
      Extension is ignored.\n   Actual application_data sent within such a message
      using this SType\n   SHOULD use the Data Label and priority as specified for
      that\n   application_data.  In this case, the PType value in the RBridge\n   Channel
      Header Extension applies to the decrypted application_data.\n   TRILL switches
      that implement the extended RBridge Channel DTLS\n   Pairwise SType SHOULD support
      the use of certificates for DTLS, but\n   certificate size may be limited by
      the DTLS requirement that each\n   record fit within a single message.  Appropriate
      certificate contents\n   are out of scope for this document.\n   TRILL switches
      that support the extended RBridge Channel DTLS\n   Pairwise SType MUST support
      the use of pre-shared keys.  If the\n   psk_identity (see [RFC4279]) is two
      bytes, it is interpreted as a Key\n   ID as defined in [RFC5310], and the value
      derived as shown in\n   Section 4.1 from that key is used as a pre-shared key
      for DTLS\n   negotiation.  A psk_identity with a length other than two bytes
      MAY\n   be used to indicate other implementation-dependent pre-shared keys.\n
      \  Pre-shared keys used for DTLS negotiation SHOULD be shared only by\n   the
      pair of endpoints; otherwise, security could be attacked by\n   diverting messages
      to another endpoint holding that pre-shared key.\n"
    title: 4.4.  DTLS Pairwise Security
  - contents:
    - "4.5.  Composite Security\n   Composite Security (SType = 3) is the combination
      of DTLS Pairwise\n   Security and IS-IS CRYPTO_AUTH-Based Authentication.  On\n
      \  transmission, the DTLS record or records to be sent are secured as\n   specified
      in Section 4.4 then used as the payload for the application\n   of Authentication
      as specified in Section 4.3.  On reception, the\n   IS-IS CRYPTO_AUTH-based
      authentication is verified first and an error\n   is returned if it fails.  If
      the IS-IS CRYPTO_AUTH-based\n   authentication succeeds, then the DTLS record
      or records are\n   processed.\n   An advantage of Composite Security is that
      the payload is\n   authenticated and encrypted with a modern security protocol;
      in\n   addition, the RBridge Channel Header and (except in the native case)\n
      \  preceding the MAC addresses and Data Label are provided with some\n   authentication.\n"
    title: 4.5.  Composite Security
  title: 4.  Extended RBridge Channel Security
- contents:
  - "5.  Extended RBridge Channel Errors\n   RBridge Channel Header Extension errors
    are reported like RBridge\n   Channel errors.  The ERR field is set to one of
    the following error\n   codes:\n         Value   RBridge Channel Error Code Meaning\n
    \        -----   ------------------------------------\n           6     Unknown
    or unsupported field value\n           7     Authentication failure\n           8
    \    Error in nested RBridge Channel message\n                      Table 3: Additional
    ERR Values\n"
  - contents:
    - "5.1.  SubERRs\n   If the ERR field is 6, the SubERR field indicates the problematic\n
      \  field or value as shown in the table below.  At this time no\n   suberrror
      codes are assigned under any other ERR field value.\n         Err SubERR  Meaning
      (for ERR = 6)\n         --- ------  -----------------------\n          0          No
      Error; suberrors not allowed\n         1-5         (no suberrors assigned)\n
      \         6     0    Reserved\n          6     1    Non-zero RESV4 nibble\n
      \         6     2    Unsupported SType\n          6     3    Unsupported PType\n
      \         6     4    Unknown Key ID\n          6     5    Unsupported Ethertype
      with PType = 2\n          6     6    Unsupported authentication algorithm for
      SType = 1\n          6     7    Non-zero SubERR with zero ERR field\n         7-14
      \       (no suberrors assigned)\n         15          Reserved\n                          Table
      4: SubERR Values\n"
    title: 5.1.  SubERRs
  - contents:
    - "5.2.  Secure Nested RBridge Channel Errors\n   If\n   o  an extended RBridge
      Channel message is sent with security and with\n      a payload type (PType)
      indicating an Ethertyped payload and the\n      Ethertype indicates a nested
      RBridge Channel message and\n   o  there is an error in the processing of that
      nested message that\n      results in a return RBridge Channel message with
      a non-zero ERR\n      field,\n   then that returned message SHOULD also be nested
      in an extended\n   RBridge Channel message using the same type of security.
      \ In this\n   case, the ERR field in the Extended RBridge Channel envelope is
      set\n   to 8 indicating that there is a nested error in the message being\n
      \  tunneled back.\n"
    title: 5.2.  Secure Nested RBridge Channel Errors
  title: 5.  Extended RBridge Channel Errors
- contents:
  - '6.  IANA Considerations

    '
  - contents:
    - "6.1.  Extended RBridge Channel Protocol Number\n   IANA has assigned 0x004
      from the range assigned by Standards Action\n   [RFC5226] as the RBridge Channel
      protocol number to indicate RBridge\n   Channel Header Extension.\n   The added
      \"RBridge Channel Protocols\" registry in the TRILL\n   Parameters registry
      is as follows:\n         Protocol    Description              Reference\n         --------
      -------------------------- ----------------\n          0x004    RBridge Channel
      Extension  RFC 7978\n"
    title: 6.1.  Extended RBridge Channel Protocol Number
  - contents:
    - "6.2.  RBridge Channel Protocol Subregistries\n   IANA has created three subregistries
      under the \"RBridge Channel\n   Protocols\" registry as detailed in the subsections
      below.\n"
    - contents:
      - "6.2.1.  RBridge Channel Error Codes\n   IANA has assigned three additional
        code points in the \"RBridge\n   Channel Error Codes\" subregistry in the
        \"Transparent Interconnection\n   of Lots of Links (TRILL) Parameters\" registry.
        \ The additional\n   entries are as shown in Table 3 in Section 5 and the
        \"Reference\"\n   column value is \"RFC 7978\" for those rows.\n"
      title: 6.2.1.  RBridge Channel Error Codes
    - contents:
      - "6.2.2.  RBridge Channel SubError Codes\n   IANA has created a subregistry
        indented under the \"RBridge Channel\n   Error Codes\" registry, for RBridge
        Channel SubError Codes.  The\n   initial contents of this subregistry are
        shown in Table 4 in Section\n   5.1 and the fourth column \"Reference\" includes
        value \"RFC 7978\" for\n   all rows.  The header information is as follows:\n
        \     Registry Name: RBridge Channel SubError Codes\n      Registration Procedures:
        IETF Review\n      Reference: RFC 7978\n"
      title: 6.2.2.  RBridge Channel SubError Codes
    - contents:
      - "6.2.3.  Extended RBridge Channel Payload Types Subregistry\n   IANA has created
        an \"Extended RBridge Channel Payload Types\"\n   subregistry after the \"RBridge
        Channel Protocols\" registry in the\n   \"Transparent Interconnection of Lots
        of Links (TRILL) Parameters\"\n   registry.  The header information is as
        follows:\n      Registration Procedures: IETF Review\n      Reference: RFC
        7978\n   The initial registry content is in Table 1 in Section 3 of this\n
        \  document.\n"
      title: 6.2.3.  Extended RBridge Channel Payload Types Subregistry
    - contents:
      - "6.2.4.  Extended RBridge Channel Security Types Subregistry\n   IANA has
        created an \"Extended RBridge Channel Security Types\"\n   subregistry after
        the \"Extended RBridge Channel Payload Types\"\n   registry in the \"Transparent
        Interconnection of Lots of Links (TRILL)\n   Parameters\" registry.  The header
        information is as follows:\n      Registration Procedures: IETF Review\n      Reference:
        RFC 7978\n   The initial registry content is in Table 2 in Section 4 of this\n
        \  document.\n"
      title: 6.2.4.  Extended RBridge Channel Security Types Subregistry
    title: 6.2.  RBridge Channel Protocol Subregistries
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   The RBridge Channel Header Extension has potentially
    positive and\n   negative effects on security.\n   On the positive side, it provides
    optional security that can be used\n   to authenticate and/or encrypt RBridge
    Channel messages.  Some\n   RBridge Channel message payloads, such as BFD [RFC7175],
    provide\n   their own security but where this is not true, consideration should\n
    \  be given, when specifying an RBridge Channel protocol, to\n   recommending
    or requiring use of the security features of the RBridge\n   Channel Header Extension.\n
    \  On the negative side, the optional ability to tunnel more payload\n   types,
    and to tunnel them between TRILL switches and to and from end\n   stations, can
    increase risk unless precautions are taken.  The\n   processing of decapsulated
    extended RBridge Channel payloads is a\n   place where you SHOULD NOT be liberal
    in what you accept.  This is\n   because the tunneling facility makes it easier
    for unexpected\n   messages to pop up in unexpected places in a TRILL campus due
    to\n   accidents or the actions of an adversary.  Local policies SHOULD\n   generally
    be strict and only accept payload types required and then\n   only with adequate
    security for the particular circumstances.\n   See the first paragraph of Section
    4 for recommendations on SType\n   usage.\n   See [RFC7457] for security considerations
    of DTLS.\n   If IS-IS authentication is not being used, then IS-IS CRYPTO_AUTH\n
    \  keying material [RFC5310] would not normally be available but that\n   presumably
    represents a judgment by the TRILL campus operator that no\n   security is needed.\n
    \  See [RFC7178] for general RBridge Channel security considerations and\n   [RFC6325]
    for general TRILL security considerations.\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Normative References\n   [IS-IS]   International Organization for Standardization,\n
    \            \"Information technology -- Telecommunications and\n             information
    exchange between systems -- Intermediate System\n             to Intermediate
    System intra-domain routeing information\n             exchange protocol for use
    in conjunction with the protocol\n             for providing the connectionless-mode
    network service\n             (ISO 8473)\", ISO/IEC 10589:2002, Second Edition,
    2002.\n   [RFC20]   Cerf, V., \"ASCII format for network interchange\", STD 80,\n
    \            RFC 20, DOI 10.17487/RFC0020, October 1969,\n             <http://www.rfc-editor.org/info/rfc20>.\n
    \  [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate\n             Requirement
    Levels\", BCP 14, RFC 2119,\n             DOI 10.17487/RFC2119, March 1997,\n
    \            <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC4279] Eronen, P.,
    Ed., and H. Tschofenig, Ed., \"Pre-Shared Key\n             Ciphersuites for Transport
    Layer Security (TLS)\", RFC 4279,\n             DOI 10.17487/RFC4279, December
    2005,\n             <http://www.rfc-editor.org/info/rfc4279>.\n   [RFC5310] Bhatia,
    M., Manral, V., Li, T., Atkinson, R., White, R.,\n             and M. Fanto, \"IS-IS
    Generic Cryptographic Authentication\",\n             RFC 5310, DOI 10.17487/RFC5310,v
    February 2009,\n             <http://www.rfc-editor.org/info/rfc5310>.\n   [RFC5869]
    Krawczyk, H. and P. Eronen, \"HMAC-based Extract-and-Expand\n             Key
    Derivation Function (HKDF)\", RFC 5869,\n             DOI 10.17487/RFC5869, May
    2010,\n             <http://www.rfc-editor.org/info/rfc5869>.\n   [RFC6325] Perlman,
    R., Eastlake 3rd, D., Dutt, D., Gai, S., and A.\n             Ghanwani, \"Routing
    Bridges (RBridges): Base Protocol\n             Specification\", RFC 6325, DOI
    10.17487/RFC6325, July 2011,\n             <http://www.rfc-editor.org/info/rfc6325>.\n
    \  [RFC6347] Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n             Security
    Version 1.2\", RFC 6347, DOI 10.17487/RFC6347,\n             January 2012, <http://www.rfc-editor.org/info/rfc6347>.\n
    \  [RFC7172] Eastlake 3rd, D., Zhang, M., Agarwal, P., Perlman, R., and\n             D.
    Dutt, \"Transparent Interconnection of Lots of Links\n             (TRILL): Fine-Grained
    Labeling\", RFC 7172,\n             DOI 10.17487/RFC7172, May 2014,\n             <http://www.rfc-editor.org/info/rfc7172>.\n
    \  [RFC7176] Eastlake 3rd, D., Senevirathne, T., Ghanwani, A., Dutt, D.,\n             and
    A. Banerjee, \"Transparent Interconnection of Lots of\n             Links (TRILL)
    Use of IS-IS\", RFC 7176,\n             DOI 10.17487/RFC7176, May 2014,\n             <http://www.rfc-editor.org/info/rfc7176>.\n
    \  [RFC7178] Eastlake 3rd, D., Manral, V., Li, Y., Aldrin, S., and D.\n             Ward,
    \"Transparent Interconnection of Lots of Links\n             (TRILL): RBridge
    Channel Support\", RFC 7178,\n             DOI 10.17487/RFC7178, May 2014,\n             <http://www.rfc-editor.org/info/rfc7178>.\n
    \  [RFC7356] Ginsberg, L., Previdi, S., and Y. Yang, \"IS-IS Flooding\n             Scope
    Link State PDUs (LSPs)\", RFC 7356,\n             DOI 10.17487/RFC7356, September
    2014,\n             <http://www.rfc-editor.org/info/rfc7356>.\n   [RFC7780] Eastlake
    3rd, D., Zhang, M., Perlman, R., Banerjee, A.,\n             Ghanwani, A., and
    S. Gupta, \"Transparent Interconnection of\n             Lots of Links (TRILL):
    Clarifications, Corrections, and\n             Updates\", RFC 7780, DOI 10.17487/RFC7780,
    February 2016,\n             <http://www.rfc-editor.org/info/rfc7780>.\n"
  title: 8.  Normative References
- contents:
  - "9.  Informative References\n   [RFC5226] Narten, T. and H. Alvestrand, \"Guidelines
    for Writing an\n             IANA Considerations Section in RFCs\", BCP 26, RFC
    5226,\n             DOI 10.17487/RFC5226, May 2008,\n             <http://www.rfc-editor.org/info/rfc5226>.\n
    \  [RFC6234] Eastlake 3rd, D. and T. Hansen, \"US Secure Hash Algorithms\n             (SHA
    and SHA-based HMAC and HKDF)\", RFC 6234,\n             DOI 10.17487/RFC6234,
    May 2011,\n             <http://www.rfc-editor.org/info/rfc6234>.\n   [RFC6361]
    Carlson, J. and D. Eastlake 3rd, \"PPP Transparent\n             Interconnection
    of Lots of Links (TRILL) Protocol Control\n             Protocol\", RFC 6361,
    DOI 10.17487/RFC6361, August 2011,\n             <http://www.rfc-editor.org/info/rfc6361>.\n
    \  [RFC7042] Eastlake 3rd, D. and J. Abley, \"IANA Considerations and\n             IETF
    Protocol and Documentation Usage for IEEE 802\n             Parameters\", BCP
    141, RFC 7042, DOI 10.17487/RFC7042,\n             October 2013, <http://www.rfc-editor.org/info/rfc7042>.\n
    \  [RFC7067] Dunbar, L., Eastlake 3rd, D., Perlman, R., and I.\n             Gashinsky,
    \"Directory Assistance Problem and High-Level\n             Design Proposal\",
    RFC 7067, DOI 10.17487/RFC7067, November\n             2013, <http://www.rfc-editor.org/info/rfc7067>.\n
    \  [RFC7175] Manral, V., Eastlake 3rd, D., Ward, D., and A. Banerjee,\n             \"Transparent
    Interconnection of Lots of Links (TRILL):\n             Bidirectional Forwarding
    Detection (BFD) Support\",\n             RFC 7175, DOI 10.17487/RFC7175, May 2014,\n
    \            <http://www.rfc-editor.org/info/rfc7175>.\n   [RFC7457] Sheffer,
    Y., Holz, R., and P. Saint-Andre, \"Summarizing\n             Known Attacks on
    Transport Layer Security (TLS) and\n             Datagram TLS (DTLS)\", RFC 7457,
    DOI 10.17487/RFC7457,\n             February 2015, <http://www.rfc-editor.org/info/rfc7457>.\n
    \  [AddrFlush]\n             Hao, W., Eastlake, D., and Y. Li, \"TRILL: Address
    Flush\n             Message\", Work in Progress, draft-ietf-trill-address-\n             flush-00,
    May 2016.\n   [GroupKey]\n             Eastlake, D., \"TRILL: Group Keying\",
    Work in Progress,\n             draft-eastlake-trill-group-keying-00, July 2016.\n
    \  [TRILL-AF]\n             Eastlake, D., Li, Y., Umair, M., Banerjee, A., and
    F. Hu,\n             \"TRILL: Appointed Forwarders\", Work in Progress,\n             draft-ietf-trill-rfc6439bis-03,
    August 2016.\n"
  title: 9.  Informative References
- contents:
  - "Acknowledgements\n   The contributions of the following are hereby gratefully\n
    \  acknowledged:\n   Stephen Farrell, Jonathan Hardwick, Susan Hares, Gayle Noble,
    Alvaro\n   Retana, Yaron Sheffer, and Peter Yee.\n"
  title: Acknowledgements
- contents:
  - "Authors' Addresses\n   Donald E. Eastlake, 3rd\n   Huawei Technologies\n   155
    Beaver Street\n   Milford, MA 01757\n   United States of America\n   Phone: +1-508-333-2270\n
    \  Email: d3e3e3@gmail.com\n   Mohammed Umair\n   IPinfusion\n   Email: mohammed.umair2@gmail.com\n
    \  Yizhou Li\n   Huawei Technologies\n   101 Software Avenue\n   Nanjing 210012\n
    \  China\n   Phone: +86-25-56622310\n   Email: liyizhou@huawei.com\n"
  title: Authors' Addresses
