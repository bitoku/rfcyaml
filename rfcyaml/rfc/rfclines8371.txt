Abstract This document defines additional identifier type numbers for use with the mobile node identifier option for Mobile IPv6 (MIPv6) as defined by RFC 4283.
The "Mobile Node Identifier Option for Mobile IPv6 (MIPv6)" [RFC4283] has proved to be a popular design tool for providing identifiers for mobile nodes during authentication procedures with Authentication, Authorization, and Accounting (AAA) protocols such as Diameter [RFC6733].
To date, only a single type of identifier has been specified, namely the Mobile Node (MN) NAI.
Other types of identifiers are in common use and are even referenced in RFC 4283.
In this document, we propose adding some basic identifier types that are defined in various telecommunications standards, including types for International Mobile Subscriber Identity (IMSI)
[ThreeGPP IDS], Packet Temporary Mobile Subscriber Identity (P TMSI)
[ThreeGPP IDS], International Mobile station Equipment Identities (IMEI)
[ThreeGPP IDS], and Globally Unique Temporary UE Identity (GUTI)
In addition, we specify the IPv6 address itself and IEEE MAC layer addresses as Mobile Node identifiers.
Defining identifiers that are tied to the physical elements of the device (e.g., the MAC address) help in deployment of Mobile IP because, in many cases, such identifiers are the most natural means for uniquely identifying the device and will avoid additional lookup steps that might be needed if other identifiers were used.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14
when, and only when, they appear in all capitals, as shown here.
New Mobile Node Identifier Types
The following types of identifiers are commonly used to identify mobile nodes.
For each type, references are provided with full details on the format of the type of identifier.
48 Bit Extended Unique Identifier
64 Bit Extended Unique Identifier
Mobile Node Identifier Description 4.
Descriptions of MN Identifier Types
This section provides descriptions for the various MN identifier types.
Description of the IPv6 Address Type
The IPv6 address [RFC4291] is encoded as a 16 octet string containing a full IPv6 address that has been assigned to the mobile node.
The IPv6 address MUST be a unicast routable IPv6 address.
Multicast addresses, link local addresses, and the unspecified IPv6 address MUST NOT be used.
MAY be used as long as any security operations making use of the ULA also take into account the domain in which the ULA is guaranteed to be unique.
Description of the IMSI MN Identifier Type
The International Mobile Subscriber Identity (IMSI) [ThreeGPP IDS] is at most 15 decimal digits (i.e., digits from 0 through 9).
The IMSI MUST be encoded as a string of octets in network order (i.e., high to low for all digits), where each digit occupies 4 bits.
If needed for full octet size, the last digit MUST be padded with 0xf.
For instance, an example IMSI 123456123456789 would be encoded as follows:
0x12, 0x34, 0x56, 0x12, 0x34, 0x56, 0x78, 0x9f 4.3.
Description of the EUI 48 Address
The IEEE EUI 48 address [IEEE802 GUIDELINES] is encoded as 6 octets containing the IEEE EUI 48 address.
Description of the EUI 64 Address Type
The IEEE EUI 64 address [IEEE802 GUIDELINES] is encoded as 8 octets containing the full IEEE EUI 64 address.
Description of the DUID Type
The DUID is the DHCPv6
There are various types of DUIDs, which are distinguished by an initial two  octet type field.
Clients and servers MUST treat DUIDs as opaque values and MUST only compare DUIDs for equality.
This document does not introduce any security mechanisms and does not have any impact on existing security mechanisms.
Mobile node identifiers such as those described in this document are considered to be private information.
If used in the MN identifier extension as defined in [RFC4283], the packet including the MN identifier extension MUST be encrypted so that no personal information or trackable identifiers are inadvertently disclosed to passive observers.
Operators can potentially apply IPsec Encapsulating Security Payload (ESP)
[RFC4303] in transport mode with confidentiality and integrity protection for protecting the identity and location information in MIPv6 signaling messages.
Some MN identifiers contain sensitive identifiers that, as used in protocols specified by other Standards Development Organizations (SDOs), are only used for signaling during initial network entry.
In such protocols, subsequent exchanges then rely on a temporary identifier allocated during the initial network entry.
Managing the association between long lived and temporary identifiers is outside the scope of this document.
The new mobile node identifier types defined in this document have been assigned values from the "Mobile Node Identifier Option Subtypes" registry.
The following values have been registered.
: New Mobile Node Identifier Types See Section 4 for additional information about the identifier types.
The registration procedure is Standards Action [RFC8126].
The expert must ascertain that the identifier type allows unique identification of the mobile device; since all MN identifiers require encryption, there is no additional privacy exposure attendant to the use of new types.
The material in this non normative appendix was originally composed for inclusion in the main body of the specification but was moved into an appendix because there was insufficient support for allocating Radio Frequency Identification (RFID) types at the time.
It was observed that RFID based mobile devices may create privacy exposures unless confidentiality is assured for signaling.
A specification for eliminating unauthorized RFID tracking based on Layer 2 addresses would be helpful.
Much of the following text is due to contributions from Hakima Chaouchi.
For an overview and some initial suggestions about using RFID with IPv6 on mobile devices, see [Using RFID IPv6].
In the context of Internet of Things (IoT) and Industry 4.0, vertical domain, efficient inventory, and tracking items are of major interest, and RFID technology is the identification technology in the hardware design of many such items.
The "TRACK IoT" project [TRACK IoT]
[RFID framework] explored Mobile IPv6 as a mobility management protocol for RFID based mobile devices.
Passive RFID tags (that have no processing resources) need to be handled by the gateway (likely also the RFID reader), which is then the endpoint of the mobility protocol.
It is also the point where the Change of Address (CoA) will be created based on some combination such as the RFID tag and the prefix of that gateway.
The point here is to offer the possibility to passive RFID items to get an IPv6 address and take advantage of the mobility framework to follow the mobile device (passive tag on the item).
One example scenario that has been proposed, which shows the need for mobility management of passive RFID items, would be pieces of art tagged with passive tags that need to be monitored while transported.
Using active RFID tags (where the processing resource is available on the tag), the endpoint of the mobility protocol can be hosted directly on the RFID active tag, which is also called an identification sensor.
A use case for active RFID tags includes traceability of cold food during mobility (transport).
Also, mobility of cars equipped with active RFID tags that we already use for toll payment
can be added with mobility management.
One major effort to connect IETF efforts to EPCglobal (RFID standardization) led to the Object Name Service (ONS), which is the DNS version applied for RFID logical names and page information retrieval.
Attempts have been made to connect IPv6 on the address space to RFID identifier format.
Other initiatives started working on gateways to map tag identifiers with IPv6 addresses and build signaling protocols for the application level.
For instance, tracking of mobile items equipped with a tag can be triggered remotely by a remote correspondent
node until a visiting area where a mobile item equipped with an RFID tag is located.
An RFID reader will be added with an IPv6 to RFID tag translation.
One option is to build a home IPv6 address of that tagged item by using the prefix of the home agent combined with the tag RFID identifier of the mobile item; as the tag ID is unique, the home IPv6 address of that item will be also unique.
Then, the visiting RFID reader will compose the IPv6 care of address of the tagged mobile item by combining the prefix of the RFID reader with the tag ID of the item.
MIPv6 can then normally provide the mobility management of that RFID tagged item.
A different, useful example of tagged items involves items of a factory that can be tracked while they are transported, especially for real time localization and tracking of precious items transported without GPS.
An automotive car manufacturer can assign IPv6 addresses corresponding to RFID tagged cars or mechanical car parts and build a tracking data set of the mobility not only of the cars, but also of the mechanical pieces.
The Tag Data Standard promoted by Electronic Product Code (EPC) [EPC Tag Data] supports several encoding systems or schemes, which are commonly used in RFID applications, including the following:  RFID GID (Global Identifier),  RFID SGTIN (Serialized Global Trade Item Number),  RFID SSCC (Serial Shipping Container Code),  RFID SGLN (Serialized Global Location Number),  RFID GRAI (Global Returnable Asset Identifier),  RFID DOD (Department of Defense ID), and  RFID GIAI (Global Individual Asset Identifier).
For each RFID scheme except GID, there are three representations:  a 64 bit binary representation (for example, SGLN 64), excluding GID,  a 96 bit binary representation (SGLN 96), and  a representation as a URI.
The URI representation for the RFID is actually a URN.
The EPC document has the following language: All categories of URIs are represented as Uniform Reference Names (URNs) as defined by [RFC2141], where the URN Namespace is epc.
The following list includes the above RFID types.
64 bit Serialized Global Trade
96 bit Serialized Global Trade
Mobile Node RFID Identifier Description A.1.
Description of the RFID Types
The material in this appendix has been either quoted or loosely adapted from [EPC Tag Data].
The General Identifier (GID) that is used with RFID is composed of three fields: General Manager Number, Object Class, and Serial Number.
The General Manager Number identifies an organizational entity that is responsible for maintaining the numbers in subsequent fields.
GID encodings include a fourth field, the header, to guarantee uniqueness in the namespace defined by EPC.
Some of the RFID types depend on the Global Trade Item Number (GTIN) code defined in the EAN.UCC General Specifications [EANUCCGS].
A GTIN identifies a particular class of object, such as a particular kind of product or SKU.
The EPC encoding scheme for SGTIN permits the direct embedding of EAN.UCC System standard GTIN and Serial Number codes on EPC tags.
In all cases, the check digit is not encoded.
Two encoding schemes are specified, SGTIN 64 (64 bits) and SGTIN 96 (96 bits).
The Serial Shipping Container Code (SSCC) is defined by the EAN.UCC Specifications.
Unlike the GTIN, the SSCC is already intended for assignment to individual objects and therefore does not require additional fields to serve as an EPC pure identity.
Two encoding schemes are specified, SSCC 64 (64 bits) and SSCC 96 (96 bits).
The Global Location Number (GLN) is defined by the EAN.UCC Specifications.
A GLN can represent either a discrete, unique physical location such as a warehouse slot, or an aggregate physical location such as an entire warehouse.
In addition, a GLN can represent a logical entity that performs a business function such as placing an order.
The Serialized Global Location Number (SGLN) includes the Company Prefix, Location Reference, and Serial Number.
The Global Returnable Asset Identifier (GRAI) is defined by the General EAN.UCC Specifications.
Unlike the GTIN, the GRAI is already intended for assignment to individual objects and therefore does not require any additional fields to serve as an EPC pure identity.
The GRAI includes the Company Prefix, Asset Type, and Serial Number.
The Global Individual Asset Identifier (GIAI) is defined by the General EAN.UCC Specifications.
Unlike the GTIN, the GIAI is already intended for assignment to individual objects and therefore does not require any additional fields to serve as an EPC pure identity.
The GRAI includes the Company Prefix and Individual Asset Reference.
The DoD Construct identifier is defined by the United States Department of Defense (DoD).
This tag data construct may be used to encode tags for shipping goods to the DoD by a supplier who has already been assigned a Commercial and Government Entity (CAGE) code.
Description of the RFID SGTIN 64 Type
The RFID SGTIN 64 is encoded as specified in [EPC Tag Data].
The SGTIN 64 includes five fields: Header, Filter Value (additional data that is used for fast filtering and preselection), Company Prefix Index, Item Reference, and Serial Number.
Only a limited number of Company Prefixes can be represented in the 64 bit tag.
Description of the RFID SGTIN 96 Type
The RFID SGTIN 96 is encoded as specified in [EPC Tag Data].
The SGTIN 96 includes six fields: Header, Filter Value, Partition (an indication of where the subsequent Company Prefix and Item Reference numbers are divided), Company Prefix Index, Item Reference, and Serial Number.
Description of the RFID SSCC 64 Type
The RFID SSCC 64 is encoded as specified in [EPC Tag Data].
The SSCC 64 includes four fields: Header, Filter Value, Company Prefix Index, and Serial Reference.
Only a limited number of Company Prefixes can be represented in the 64 bit tag.
Description of the RFID SSCC 96 Type
The RFID SSCC 96 is encoded as specified in [EPC Tag Data].
The SSCC 96 includes six fields: Header, Filter Value, Partition, Company Prefix, and Serial Reference, as well as 24 bits that remain unallocated and must be zero.
Description of the RFID SGLN 64 Type
The RFID SGLN 64 type is encoded as specified in [EPC Tag Data].
The SGLN 64 includes five fields: Header, Filter Value, Company Prefix Index, Location Reference, and Serial Number.
Description of the RFID SGLN 96 Type
The RFID SGLN 96 type is encoded as specified in [EPC Tag Data].
The SGLN 96 includes six fields: Header, Filter Value, Partition, Company Prefix, Location Reference, and Serial Number.
Description of the RFID GRAI 64 Type
The RFID GRAI 64 type is encoded as specified in [EPC Tag Data].
The GRAI 64 includes five fields: Header, Filter Value, Company Prefix Index, Asset Type, and Serial Number.
Description of the RFID GRAI 96 Type
The RFID GRAI 96 type is encoded as specified in [EPC Tag Data].
The GRAI 96 includes six fields: Header, Filter Value, Partition, Company Prefix, Asset Type, and Serial Number.
Description of the RFID GIAI
The RFID GIAI 64 type is encoded as specified in [EPC Tag Data].
The GIAI 64 includes four fields: Header, Filter Value, Company Prefix Index, and Individual Asset Reference.
Description of the RFID GIAI 96 Type
The RFID GIAI 96 type is encoded as specified in [EPC Tag Data].
The GIAI 96 includes five fields: Header, Filter Value, Partition, Company Prefix, and Individual Asset Reference.
Description of the RFID DoD 64 Type
The RFID DoD 64 type is encoded as specified in [RFID DoD spec].
The DoD 64 type includes four fields: Header, Filter Value, Government Managed Identifier, and Serial Number.
Description of the RFID DoD 96 Type
The RFID DoD 96 type is encoded as specified in [RFID DoD spec].
The DoD 96 type includes four fields: Header, Filter Value, Government Managed Identifier, and Serial Number.
Description of the RFID URI Types
In some cases, it is desirable to encode in URI
form a specific encoding of an RFID tag.
For example, an application may prefer a URI representation for report preparation.
Applications that wish to manipulate any additional data fields on tags may need some representation other than the pure identity forms.
For this purpose, the fields as represented in previous sections are associated with specified fields in the various URI types.
For instance, the URI may have fields such as CompanyPrefix, ItemReference, or SerialNumber.
For details and encoding specifics, consult [EPC Tag Data].
