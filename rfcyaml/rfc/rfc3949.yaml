- contents:
  - '                      File Format for Internet Fax

    '
  title: __initial_text__
- contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of this Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document is a revised version of RFC 2301.  The revisions,\n
    \  summarized in the list attached as Annex B, are based on discussions\n   and
    suggestions for improvements that have been made since RFC 2301\n   was issued
    in March 1998, and on the results of independent\n   implementations and interoperability
    testing.\n   This RFC 2301 revision describes the Tag Image File Format (TIFF)\n
    \  representation of image data specified by the International\n   Telecommunication
    Union (ITU-T) Recommendations for black-and-white\n   and color facsimile.  This
    file format specification is commonly\n   known as TIFF for Fax eXtended (TIFF-FX).
    \ It formally defines\n   minimal, extended, and lossless Joint Bi-level Image
    experts Group\n   (JBIG) profiles (Profiles S, F, J) for black-and-white fax and
    base\n   JPEG, lossless JBIG, and Mixed Raster Content profiles (Profiles C,\n
    \  L, M) for color and grayscale fax.  These profiles correspond to the\n   content
    of the applicable ITU-T Recommendations.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  4\n       1.1. Scope . . . . . . . . . . . . . . . . . . . . . .
    . . . .  5\n       1.2. Approach. . . . . . . . . . . . . . . . . . . . . . .
    . .  5\n       1.3. Overview of this Document . . . . . . . . . . . . . . . .
    \ 5\n   2.  TIFF and Fax . . . . . . . . . . . . . . . . . . . . . . . . .  7\n
    \      2.1. TIFF Overview . . . . . . . . . . . . . . . . . . . . . .  7\n            2.1.1.
    File Structure . . . . . . . . . . . . . . . . . .  8\n            2.1.2. Image
    Structure. . . . . . . . . . . . . . . . . . 10\n            2.1.3. TIFF File
    Structure for Fax Applications . . . . . 11\n       2.2. TIFF Fields for All Fax
    Applications. . . . . . . . . . . 12\n            2.2.1. TIFF Fields required
    for all fax profiles. . . . . 13\n            2.2.2. Additional TIFF Fields required
    for all fax\n                   profiles . . . . . . . . . . . . . . . . . . .
    . . 14\n            2.2.3. TIFF Fields recommended for all fax profiles . . .
    17\n            2.2.4. New TIFF Fields recommended for fax profiles . . . 18\n
    \  3.  Profile S: Minimal Black-and-White Fax Profile . . . . . . . . 20\n       3.1.
    Overview. . . . . . . . . . . . . . . . . . . . . . . . . 20\n       3.2. Required
    TIFF Fields. . . . . . . . . . . . . . . . . . . 21\n            3.2.1. Baseline
    Fields. . . . . . . . . . . . . . . . . . 21\n            3.2.2. Extension Fields
    . . . . . . . . . . . . . . . . . 23\n            3.2.3. New Fields . . . . .
    . . . . . . . . . . . . . . . 23\n       3.3. Recommended TIFF Fields . . . .
    . . . . . . . . . . . . . 23\n       3.4. End of Line (EOL) and Return to Control
    (RTC) . . . . . . 23\n            3.4.1. RTC Exclusion. . . . . . . . . . . .
    . . . . . . . 24\n       3.5. File Structure. . . . . . . . . . . . . . . . .
    . . . . . 24\n       3.6. Profile S: Minimal Black-and-White Profile Summary.
    . . . 26\n   4.  Profile F: Extended Black-and-White Fax Profile. . . . . . .
    . 27\n       4.1. TIFF-F Overview . . . . . . . . . . . . . . . . . . . . . 28\n
    \      4.2. Required TIFF Fields. . . . . . . . . . . . . . . . . . . 29\n            4.2.1.
    Baseline Fields. . . . . . . . . . . . . . . . . . 29\n            4.2.2. Extension
    Fields . . . . . . . . . . . . . . . . . 32\n            4.2.3. New Fields . .
    . . . . . . . . . . . . . . . . . . 32\n       4.3. Recommended TIFF Fields .
    . . . . . . . . . . . . . . . . 32\n            4.3.1. Baseline Fields. . . .
    . . . . . . . . . . . . . . 32\n            4.3.2. Extension Fields . . . . .
    . . . . . . . . . . . . 33\n            4.3.3. New Fields . . . . . . . . . .
    . . . . . . . . . . 33\n       4.4. Technical Implementation Issues . . . . .
    . . . . . . . . 34\n            4.4.1. Strips . . . . . . . . . . . . . . . .
    . . . . . . 34\n            4.4.2. Bit Order. . . . . . . . . . . . . . . . .
    . . . . 34\n            4.4.3. Multi-Page . . . . . . . . . . . . . . . . . .
    . . 35\n            4.4.4. Compression. . . . . . . . . . . . . . . . . . . .
    35\n            4.4.5. Example Use of Page-quality Fields . . . . . . . . 36\n
    \           4.4.6. Practical Guidelines for Writing and Reading\n                   Multi-Page
    TIFF-F Files. . . . . . . . . . . . . . 36\n            4.4.7. Use of TIFF-F for
    Streaming Applications . . . . . 38\n       4.5. Implementation Warnings . . .
    . . . . . . . . . . . . . . 38\n            4.5.1. Uncompressed Data. . . . .
    . . . . . . . . . . . . 38\n            4.5.2. Encoding and Resolution. . . .
    . . . . . . . . . . 38\n            4.5.3. EOL byte-aligned . . . . . . . . .
    . . . . . . . . 39\n            4.5.4. EOL. . . . . . . . . . . . . . . . . .
    . . . . . . 40\n            4.5.5. RTC Exclusion. . . . . . . . . . . . . . .
    . . . . 40\n            4.5.6. Use of EOFB for T.6 Compressed Images. . . . .
    . . 40\n       4.6. Example Use of TIFF-F . . . . . . . . . . . . . . . . . .
    40\n       4.7. Profile F: Extended Black-and-white Fax Profile Summary . 41\n
    \  5.  Profile J: Lossless JBIG Black-and-White Fax Profile . . . . . 43\n       5.1.
    Overview. . . . . . . . . . . . . . . . . . . . . . . . . 43\n       5.2. Required
    TIFF Fields. . . . . . . . . . . . . . . . . . . 44\n            5.2.1. Baseline
    Fields. . . . . . . . . . . . . . . . . . 44\n            5.2.2. Extension Fields
    . . . . . . . . . . . . . . . . . 44\n            5.2.3. New Fields . . . . .
    . . . . . . . . . . . . . . . 44\n       5.3. Recommended TIFF Fields . . . .
    . . . . . . . . . . . . . 45\n       5.4. Profile J: Lossless JBIG Black-and-White
    Profile Summary. 45\n   6.  Profile C: Base Color Fax Profile. . . . . . . . .
    . . . . . . 47\n       6.1. Overview. . . . . . . . . . . . . . . . . . . . .
    . . . . 47\n       6.2. Required TIFF Fields. . . . . . . . . . . . . . . . .
    . . 47\n            6.2.1. Baseline Fields. . . . . . . . . . . . . . . . . .
    47\n            6.2.2. Extension Fields . . . . . . . . . . . . . . . . . 49\n
    \           6.2.3. New Fields . . . . . . . . . . . . . . . . . . . . 50\n       6.3.
    Recommended TIFF Fields . . . . . . . . . . . . . . . . . 52\n       6.4. Profile
    C: Base Color Fax Profile Summary . . . . . . . . 52\n   7.  Profile L: Lossless
    Color Profile. . . . . . . . . . . . . . . 54\n       7.1. Overview. . . . . .
    . . . . . . . . . . . . . . . . . . . 54\n            7.1.1. Color Encoding .
    . . . . . . . . . . . . . . . . . 54\n            7.1.2. JBIG Compression . .
    . . . . . . . . . . . . . . . 55\n       7.2. Required TIFF Fields. . . . . .
    . . . . . . . . . . . . . 55\n            7.2.1. Baseline Fields. . . . . . .
    . . . . . . . . . . . 56\n            7.2.2. Extension Fields . . . . . . . .
    . . . . . . . . . 57\n            7.2.3. New Fields . . . . . . . . . . . . .
    . . . . . . . 57\n       7.3. Recommended TIFF Fields . . . . . . . . . . . .
    . . . . . 57\n       7.4. Profile L: Lossless Color Fax Profile Summary . . .
    . . . 58\n   8.  Profile M: Mixed Raster Content Profile. . . . . . . . . . .
    . 60\n       8.1. Overview. . . . . . . . . . . . . . . . . . . . . . . . . 60\n
    \           8.1.1. MRC 3-layer model. . . . . . . . . . . . . . . . . 60\n            8.1.2.
    A TIFF Representation for the MRC 3-layer model. . 62\n       8.2. Required TIFF
    Fields. . . . . . . . . . . . . . . . . . . 64\n            8.2.1. Baseline Fields.
    . . . . . . . . . . . . . . . . . 64\n            8.2.2. Extension Fields . .
    . . . . . . . . . . . . . . . 66\n            8.2.3. New Fields . . . . . . .
    . . . . . . . . . . . . . 67\n       8.3. Recommended TIFF Fields . . . . . .
    . . . . . . . . . . . 69\n       8.4. Rules and Requirements for Images . . .
    . . . . . . . . . 69\n       8.5. Profile M: MRC Fax Profile Summary. . . . .
    . . . . . . . 71\n   9.  MIME content-types image/tiff and image/tiff-fx. . .
    . . . . . 74\n   10. Security Considerations. . . . . . . . . . . . . . . . .
    . . . 74\n   11. References . . . . . . . . . . . . . . . . . . . . . . . . .
    . 74\n       11.1. Normative References . . . . . . . . . . . . . . . . . . 74\n
    \      11.2. Informative References . . . . . . . . . . . . . . . . . 76\n   Annex
    A: Summary of TIFF Fields for Internet Fax . . . . . . . . . 77\n   Annex B: List
    of technical edits to RFC 2301 . . . . . . . . . . . 81\n   Authors' Addresses
    . . . . . . . . . . . . . . . . . . . . . . . . 82\n   Full Copyright Statement
    . . . . . . . . . . . . . . . . . . . . . 84\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes the use of TIFF (Tag Image File
    Format) to\n   represent the data content and structure generated by the current\n
    \  suite of ITU-T Recommendations for Group 3 facsimile.  These\n   recommendations
    and the TIFF fields described here support the\n   following facsimile profiles:\n
    \  S:  Minimal black-and-white profile, using binary MH compression\n       [T.4]\n
    \  F:  Extended black-and-white profile, using binary MH, MR, and MMR\n       compression
    [T.4, T.6]\n   J:  Lossless JBIG black-and-white profile, with JBIG compression\n
    \      [T.85, T.82]\n   C:  Lossy color and grayscale profile, using JPEG compression
    [T.42,\n       T.81]\n   L:  Lossless color and grayscale profile, using JBIG
    compression\n       [T.43, T.82]\n   M:  Mixed raster content profile [T.44],
    using a combination of\n       existing compression methods\n   Each profile corresponds
    to the content of ITU-T Recommendations\n   shown and is a subset of the full
    TIFF for facsimile specification.\n   Profile S describes a minimal interchange
    set of fields, which will\n   guarantee that, at least, binary black-and-white
    images will be\n   supported.  Implementations are required to support this minimal\n
    \  interchange set of fields.\n   With the intent of specifying a file format
    for Internet fax, this\n   document\n   1. specifies the structure of TIFF files
    for facsimile data,\n   2. defines ITU fax-compatible values for existing TIFF
    fields, and\n   3. defines new TIFF fields and values required for compatibility
    with\n      ITU color fax.\n   This specification of TIFF for facsimile is known
    as TIFF-FX (TIFF\n   for Fax eXtended).  References to the format described by
    this\n   specification should always use the term \"TIFF-FX\", and some profiles\n
    \  in this specification may not be interpreted correctly by other TIFF\n   applications.\n"
  - contents:
    - "1.1.  Scope\n   This document defines a TIFF-based file format specification
      for\n   enabling standardized messaging-based fax over the Internet.  It\n   specifies
      the TIFF fields and field values required for compatibility\n   with the existing
      ITU-T Recommendations for Group 3 black-and-white,\n   grayscale, and color
      facsimile.  TIFF has historically been used for\n   handling fax image files
      in applications such as store-and-forward\n   messaging.  Implementations that
      support this file format\n   specification for import/export may elect to support
      it as a native\n   format.  This document recommends a TIFF file structure compatible\n
      \  with low-memory and page-level streaming implementations.\n   Unless otherwise
      noted, the current TIFF specification [TIFF] and\n   selected TIFF Technical
      Notes [TTN1, TTN2] are the primary references\n   for describing TIFF and defining
      TIFF fields.  This document is the\n   primary reference for defining TIFF field
      values for fax\n   applications.\n"
    title: 1.1.  Scope
  - contents:
    - "1.2.  Approach\n   The basic approach to using TIFF for facsimile data is to
      insert the\n   compressed fax image data into a TIFF file and use TIFF fields
      to\n   encode the parameters that describe the image data.  These fields\n   will
      have values that comply with the ITU-T Recommendations.\n   This approach takes
      advantage of TIFF features and structures that\n   bridge the data formats and
      performance requirements of both legacy\n   fax machines and host-based fax
      applications.  TIFF constructs for\n   pages, images, and strips allow a TIFF
      file to preserve the fax data\n   stream structure and the performance advantages
      that come with it.  A\n   TIFF-based approach also builds on an established
      base of users and\n   implementors and ensures backward compatibility with existing
      TIFF-\n   based IETF proposals and work in progress for Internet fax.\n"
    title: 1.2.  Approach
  - contents:
    - "1.3.  Overview of this Document\n   Section 2 gives an overview of TIFF.  Section
      2.1 describes the\n   structure of TIFF files, including general guidelines
      for structuring\n   multi-page TIFF files.  Section 2.2 lists the TIFF fields
      that are\n   required or recommended for all fax profiles.  The TIFF fields
      used\n   only by specific fax profiles are described in Sections 3 - 8, which\n
      \  describe the individual fax profiles.  These sections also specify\n   the
      ITU-compatible field values (image parameters) for each profile.\n   The full
      set of permitted fields of TIFF for facsimile are included\n   in the current
      TIFF specification, Section 2 of this document, and\n   the sections on specific
      profiles of facsimile operation.  This\n   document defines profiles of TIFF
      for facsimile, where a profile is a\n   subset of the full set of permitted
      fields and field values of TIFF\n   for facsimile.\n   Section 3 defines the
      minimal black-and-white facsimile profile\n   (Profile S), which is required
      in all implementations.  Section 4\n   defines the extended black-and-white
      fax profile (Profile F), which\n   provides a standard definition of TIFF-F.
      \ Section 5 describes the\n   lossless black-and-white profile using JBIG compression
      (Profile J).\n   Section 6 defines the base color profile, required in all color\n
      \  implementations, for the lossy JPEG representation of color and\n   grayscale
      facsimile data (Profile C).  Section 7 defines the lossless\n   JBIG color and
      grayscale facsimile profile (Profile L), and Section 8\n   defines the Mixed
      Raster Content facsimile profile (Profile M).  Each\n   of these sections concludes
      with a table summarizing the required and\n   recommended fields for each profile
      and the values they can have.\n   Section 9 refers to the MIME content types
      used in connection with\n   TIFF for facsimile.  Sections 10 and 11 give Security
      Considerations\n   and References, followed by Authors' Addresses and the Copyright\n
      \  Notice.  Annex A gives a summary of the TIFF fields used or defined\n   in
      this document and provides a convenient reference for\n   implementors.\n   To
      implement only the minimal interchange black-and-white set of\n   fields and
      values (Profile S), one need read only Sections 1, 2, 3,\n   9, and 10.\n   The
      following tree diagram shows the relationship among profiles and\n   between
      profiles and coding methods.\n                        S (MH)\n                       /
      \\\n               B&W    /   \\   Color\n          ------------     ----------\n
      \        /      \\                    \\\n        /        F (MH, MR, MMR)      C
      (JPEG)\n       /                             / \\\n      J (JBIG)                   ----
      \  \\\n                                /        \\\n                               L
      (JBIG)   \\\n                                           \\\n                                            M
      (MRC)\n   A profile is based on a collection of ITU-T facsimile coding methods.\n
      \  For example, Profile S, the minimal profile, is based on Modified\n   Huffman
      (MH) compression, which is defined in ITU-T Rec. T.4.\n   Profile F specifies
      Modified Huffman (MH), Modified READ (MR), and\n   Modified Modified READ (MMR)
      compressions, which are defined in ITU-T\n   Rec. T.4 and T.6.\n   All implementations
      of TIFF for facsimile MUST implement Profile S,\n   which is the root node of
      the tree.  All color implementations of\n   TIFF for facsimile MUST implement
      Profile C.  The implementation of a\n   particular profile MUST also implement
      those profiles on the path\n   that connect it to the root node, and MAY optionally
      implement\n   profiles not on the path connecting it to the root node.  For\n
      \  example, an implementation of Profile M must also implement Profiles\n   C
      and S and may optionally implement Profile F, J, or L.  For another\n   example,
      an implementation of Profile C must also implement Profile S\n   and may optionally
      implement Profile F or J.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \" NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [REQ].\n"
    title: 1.3.  Overview of this Document
  title: 1.  Introduction
- contents:
  - '2.  TIFF and Fax

    '
  - contents:
    - "2.1.  TIFF Overview\n   TIFF provides a means for describing, storing, and
      interchanging\n   raster image data.  A primary goal of TIFF is to provide a
      rich\n   environment within which applications can exchange image data.  The\n
      \  current TIFF specification [TIFF] defines a commonly used core set of\n   TIFF
      fields known as Baseline TIFF.  The current specification, the\n   set of Pagemaker
      TIFF Technical Notes [TTN1], and TIFF Technical Note\n   2 [TTN2] define several
      TIFF extensions.  The TIFF-based\n   specification for fax applications uses
      a subset of Baseline TIFF\n   fields, with selected extensions, as described
      in this document.  In\n   a few cases, this document defines new TIFF fields
      specifically for\n   fax applications.\n"
    - contents:
      - "2.1.1.  File Structure\n   TIFF is designed for raster images, which makes
        it a good match for\n   facsimile documents, which are multi-page raster images.
        \ Each raster\n   image consists of a number of rows or scanlines, each of
        which has\n   the same number of pixels, the unit of sampling.  Each pixel
        has at\n   least one sample or component (exactly one for black-and-white\n
        \  images).\n   A TIFF file begins with an 8-byte image file header.  The
        first two\n   bytes describe the byte order used within the file.  Legal values
        are\n   \"II\" (0x4949) when bytes are ordered from least to most significant\n
        \  (little-endian), and \"MM\" (0x4D4D), when bytes are ordered from most\n
        \  to least significant (big-endian) within a 16- or 32-bit integer.\n   Either
        byte order can be used, except in the case of the minimal\n   black-and-white
        profile, which SHALL use value \"II\".  The next two\n   bytes contain the
        value 42, which identifies the file as a TIFF file\n   and is ordered according
        to the value in the first two bytes of the\n   header.  The last four bytes
        give the offset that points to the first\n   image file directory (IFD).  This
        and all other offsets in a TIFF\n   file are with respect to the beginning
        of the TIFF file.  An IFD can\n   be at any location in the file after the
        header but must begin on a\n   word boundary.\n   An IFD is a sequence of
        tagged fields, sorted in ascending order by\n   tag value.  An IFD consists
        of a 2-byte count of the number of\n   fields, a sequence of field entries,
        and a 4-byte offset to the next\n   IFD.  The fields contain information about
        the image and pointers to\n   the image data.  Each separate raster image
        in the file is\n   represented by an IFD.\n   Each field entry in an IFD has
        12 bytes and consists of a 2-byte Tag,\n   2 bytes identifying the field type
        (e.g., short, long, rational,\n   ASCII), 4 bytes giving the count (number
        of values or offsets), and 4\n   bytes containing either the offset to a field
        value stored outside\n   the IFD or, based on the type and count, the field
        value itself.\n   Resolution and metadata such as dates, names, and descriptions
        are\n   examples of \"long\" field values that do not fit in 4 bytes and\n
        \  therefore use offsets in the field entry.  Details are given in the\n   TIFF
        specification [TIFF].\n   A TIFF file can contain more than one IFD, where
        each IFD is a\n   subfile whose type is given in the NewSubfileType field.
        \ Multiple\n   IFDs can be organized either as a linked list, with the last
        entry in\n   each IFD pointing to the next IFD (the pointer in the last IFD
        is 0),\n   or as a tree, using the SubIFDs field in the primary IFD [TTN1].
        \ The\n   SubIFDs field contains an array of pointers to child IFDs of the\n
        \  primary IFD.\n   Child IFDs describe related images, such as reduced resolution\n
        \  versions of the primary IFD image.  The same IFD can point both to a\n
        \  next IFD and to child IFDs, and child IFDs can themselves point to\n   other
        IFDs.\n   All fax profiles represent a multi-page fax image as a linked list
        of\n   IFDs, with a NewSubfileType field containing a bit that identifies\n
        \  the IFD as one page of a multi-page document.  Each IFD has a\n   PageNumber
        field, identifying the page number in ascending order,\n   starting at 0 for
        the first page.  Although a Baseline TIFF reader is\n   not required to read
        any IFDs beyond the first, an implementation\n   that reads the files that
        comply with this specification SHALL read\n   multiple IFDs.  Only the Mixed
        Raster Content fax profile, described\n   in Section 8, requires the use of
        child IFDs.\n   The following figure illustrates the structure of a multi-page
        TIFF\n   file.\n              +-----------------------+\n              |         Header
        \       |------------+\n              +-----------------------+            |
        First IFD\n              |      IFD (page 0)     |<-----------+ Offset\n          +---|
        \                      |------------+\n    Value |   +-----------------------+
        \           |\n   Offset +-->|      Long Values      |--+         |\n              +-----------------------|
        \ | Strip   |\n              |       Image Data      |<-+ Offset  |\n              |
        \    strip 1 page 0    |  |         |\n              +-----------------------+
        \ |         |\n              |           :           |  :         |\n                                                   |\n
        \             +-----------------------+            | Next IFD\n              |
        \     IFD (page 1)     |<-----------+ Offset\n          +---|                       |------------+\n
        \   Value |   +-----------------------+            |\n   Offset +-->|      Long
        Values      |--+         |\n              +-----------------------|  | Strip
        \  |\n              |       Image Data      |<-+ Offset  |\n              |
        \    strip 1 page 1    |  |         |\n              +-----------------------+
        \ |         |\n              |     strip 2 page 1    |<-+         |\n              +-----------------------+
        \ |         |\n              |          :            |  :         |\n                                                   |\n
        \             +-----------------------+            | Next IFD\n              |
        \     IFD (page 2)     |<-----------+ Offset\n              |          :            |\n"
      title: 2.1.1.  File Structure
    - contents:
      - "2.1.2.  Image Structure\n   An IFD stores an image as one or more strips,
        as shown in the\n   preceding figure.  A strip consists of 1 or more scanlines
        (rows) of\n   raster image data in compressed form.  An image may be stored
        in a\n   single strip or may be divided into several strips, which would\n
        \  require less memory to buffer.  (Baseline TIFF recommends about 8k\n   bytes
        per strip, but existing fax usage is typically one strip per\n   image.)\n
        \  Each IFD requires three strip-related fields: StripOffsets,\n   RowsPerStrip,
        and StripByteCounts.  The StripOffsets field is an\n   array of pointers to
        the strip or strips that contain the actual\n   image data.  The StripByteCounts
        field gives the number of bytes in\n   each strip after compression.  TIFF
        requires that each strip, except\n   the last, contain the same number of
        scanlines, which is given in the\n   RowsPerStrip field.  This document introduces
        the new StripRowCounts\n   field that allows a variable number of scanlines
        per strip, which is\n   required by the Mixed Raster Content fax profile (Section
        8).\n   Image data is stored as uninterpreted, compressed image data streams\n
        \  within a strip.  The formats of these streams follow the ITU-T\n   Recommendations.
        \ The Compression field in the IFD indicates the type\n   of compression,
        and other TIFF fields in the IFD describe image\n   attributes such as color
        encoding and spatial resolution.\n   Compression parameters are stored in
        the compressed data stream\n   rather than in TIFF fields.  This makes the
        TIFF representation and\n   compressed data format specification independent
        of each another.\n   This approach, modeled on [TTN2], allows TIFF to add
        new compression\n   schemes gracefully as they become available.\n   Some
        attributes can be specified both in the compressed data stream\n   and within
        a TIFF field.  It is possible that the two values will\n   differ.  When this
        happens for values required to interpret the data\n   stream, the values in
        the data stream take precedence.  For\n   informational values that are not
        required to interpret the data\n   stream, such as author name, then the TIFF
        field value takes\n   precedence.\n"
      title: 2.1.2.  Image Structure
    - contents:
      - "2.1.3.  TIFF File Structure for Fax Applications\n   The TIFF specification
        has a very flexible file structure that does\n   not specify the ordering
        of IFDs, field values, and image data in a\n   file.  Individual applications
        may require or recommend an ordering.\n   This specification recommends that
        when using a TIFF file for\n   facsimile, a multi-page fax document SHOULD
        be represented as a\n   linked list of IFDs.  It also recommends that a TIFF
        file for\n   facsimile SHOULD order pages in a TIFF file in the same way that
        they\n   are ordered in a fax data stream.  In a TIFF file, a page consists
        of\n   several elements: one or more IFDs (including subIFDs), long field\n
        \  values that are stored outside the IFDs, and image data (in one or\n   more
        strips).\n   The minimal black-and-white profile (Profile S) specifies a required\n
        \  ordering of pages and elements within a page (Section 3.5).  The\n   extended
        black-and-white profile (Profile F) provides guidelines for\n   ordering pages
        and page elements (Section 4.4.6).  Other profiles\n   SHOULD follow these
        guidelines.  This recommendation is intended to\n   simplify the implementation
        of TIFF writers and readers in fax\n   applications and the conversion between
        TIFF file and fax data stream\n   representations.  However, for interchange
        robustness, readers SHOULD\n   be prepared to read TIFF files whose structure
        is consistent with\n   [TIFF], which supports a more flexible file structure
        than is\n   recommended here.\n   This specification introduces an optional
        new GlobalParametersIFD\n   field, defined in Section 2.2.4.  This field has
        type IFD and\n   indicates parameters describing the fax session.  While it
        is often\n   possible to obtain these parameters by scanning the file, it
        is\n   convenient to make them available together in one place for fast and\n
        \  easy access.  If the GlobalParametersIFD occurs in a TIFF file, it\n   SHOULD
        be located in the first IFD, immediately following the 8-byte\n   image file
        header.\n"
      title: 2.1.3.  TIFF File Structure for Fax Applications
    title: 2.1.  TIFF Overview
  - contents:
    - "2.2.  TIFF Fields for All Fax Applications\n   The TIFF specification [TIFF]
      is organized as a baseline set and\n   several extensions, including technical
      notes [TTN1, TTN2] that will\n   be incorporated in the next release of TIFF.
      \ The baseline and\n   extensions have required and optional fields.\n   Facsimile
      applications require (and recommend) a mixture of baseline\n   and extensions
      fields, as well as some new fields that are not part\n   of the TIFF specification
      and that are defined in this document.\n   This sub-section lists the fields
      that are required or recommended\n   for all profiles.  In particular, Section
      2.2.1 lists the fields that\n   are required by all profiles and that have values
      that do not depend\n   on the profile.  Section 2.2.2 lists the fields that
      are required by\n   all profiles and that have values that do depend on the
      profile.\n   Section 2.2.3 lists the fields that are recommended for all profiles.\n
      \  Fields required or recommended by some but not all profiles are given\n   in
      the section (Section 3 - 8) that describes that profile.  The\n   sections for
      each fax profile have subsections for required and\n   recommended fields; each
      subsection organizes the fields according to\n   whether they are baseline,
      extension or new.\n   The fields required for facsimile have only a few legal
      values,\n   specified in the ITU-T Recommendations.  Of these legal values,
      some\n   are required and some are optional, just as they are required\n   (mandatory)
      or optional in fax implementations that conform to the\n   ITU-T Recommendations.
      \ The required and optional values are noted in\n   the sections on the different
      fax profiles.\n   This section describes the fields required or recommended
      by all fax\n   profiles.  The pattern for the description of TIFF fields in
      this\n   document is as follows:\n   FieldName(TagValueInDecimal) = allowable
      values.\n   TYPE\n      WhetherRequiredByTIFForTIFFforFAX\n      Count = (omitted
      if =1) = (if not in current spec but available)\n      Explanation of the field,
      how it's used, and the values it can\n      have.  Default value, if any, as
      specified in [TIFF].\n   When a field's default value is the desired value,
      that field may be\n   omitted from the relevant IFD unless specifically required
      by the\n   text of this specification.\n"
    - contents:
      - "2.2.1.  TIFF fields required for all fax profiles\n   The TIFF fields listed
        in this section SHALL be used by all fax\n   profiles but have field values
        that are not specified by the ITU\n   standards, i.e., the fields do not depend
        on the profile.  The next\n   subsection lists the fields that SHALL be used
        by all fax profiles,\n   but which do have values specified by the ITU-specified
        or profile-\n   specific values.  Fields that SHALL be used by some but not
        all\n   profiles are given in the Sections (3 - 8) that describe the profiles\n
        \  that use them.\n   ImageLength(257)\n   SHORT or LONG\n      RequiredByTIFFBaseline\n
        \     Total number of scanlines in image.\n      No default, must be specified.\n
        \  PageNumber(297)\n   SHORT\n      RequiredByTIFFforFAX, TIFFExtension\n
        \     Count = 2\n      The first number represents the page number (0 for
        the first\n      page); the second number is the total number of pages in
        the\n      document.  If the second value is 0, then the total page count
        is\n      not available.\n      No default, must be specified\n   RowsPerStrip(278)\n
        \  SHORT or LONG\n      RequiredByTIFFBaseline\n      The number of scanlines
        per TIFF strip, except for the last strip.\n      For a single strip image,
        this is the same as the value of the\n      ImageLength field.\n      Default
        = 2**32 - 1 (meaning all scanlines in one strip).\n   StripByteCounts(279)\n
        \  SHORT or LONG\n      RequiredByTIFFBaseline\n      Count = number of strips\n
        \     For each strip, the number of bytes in that strip after\n      compression.\n
        \     No default, must be specified.\n   StripOffsets(273)\n   SHORT or LONG\n
        \     RequiredByTIFFBaseline\n      Count = number of strips\n      For each
        strip, the byte offset from the beginning of the file to\n      the start
        of that strip.\n      No default, must be specified.\n"
      title: 2.2.1.  TIFF fields required for all fax profiles
    - contents:
      - "2.2.2.  Additional TIFF fields required for all fax profiles\n   The TIFF
        fields listed in this section SHALL be used by all fax\n   profiles, but the
        values associated with them depend on the profile\n   being described and
        the associated ITU Recommendations.  Therefore,\n   only the fields are defined
        here; the values applicable to a\n   particular fax profile are described
        in Sections 3 - 8.  Fields that\n   SHALL be used by some but not all profiles
        are given in the section\n   (3 - 8) describing the profile that uses them.\n
        \  BitsPerSample(258)\n   SHORT\n      RequiredByTIFFBaseline\n      Number
        of bits per image sample.\n      Default = 1 (field may be omitted if this
        is the value).\n   Compression(259)\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Compression method used for image data.\n      Default = 1 (no compression,
        so may not be omitted for FAX).\n   FillOrder(266)\n   SHORT\n      RequiredByTIFFforFax\n
        \     The default bit order in Baseline TIFF per [TIFF] is indicated by\n
        \     FillOrder=1, where bits are not reversed before being stored.\n      However,
        TIFF for Fax typically uses the setting of FillOrder=2,\n      where the bit
        order within bytes is reversed before storage (i.e.,\n      bits are stored
        with the Least Significant Bit first).\n      Default = 1 (field may be omitted
        if this is the value)\n      Facsimile data appears on the phone line in bit-reversed
        order\n      relative to its description in the relevant ITU compression\n
        \     Recommendation.  Therefore, a wide majority of facsimile\n      implementations
        choose this natural order for storage.\n      Nevertheless, all readers conforming
        to this specification must be\n      able to read data in both bit orders,
        except in the case of\n      Profile S, which only requires support for FillOrder=2
        (Least\n      Significant Bit first).\n   ImageWidth(256)\n   SHORT or LONG\n
        \     RequiredByTIFFBaseline\n      The number of pixels (columns) per scanline
        (row) of the image\n      No default, must be specified.\n   NewSubFileType(254)\n
        \  LONG\n      RequiredByTIFFforFAX\n      A general indication of the kind
        of data contained in this IFD Bit\n      1 is 1 if the image is a single page
        of a multi-page document.\n      Default = 0 (no subfile bits on, so may not
        be omitted for FAX).\n   PhotometricInterpretation(262)\n   SHORT\n      RequiredByTIFFBaseline\n
        \     The color space of the image data.\n      No default, must be specified.\n
        \  ResolutionUnit(296)\n   SHORT\n      RequiredByTIFFBaseline The unit of
        measure for resolution. 2 =\n      inch, 3 = centimeter; Default = 2 (field
        may be omitted if this is\n      the value)\n   SamplesPerPixel(277)\n   SHORT\n
        \     RequiredByTIFFBaseline\n      The number of color components per pixel;
        SamplesPerPixel is 1 for\n      a black-and-white, grayscale or indexed (palette)
        image.  Default\n      = 1 (field may be omitted if this is the value).\n
        \  XResolution(282)\n   RATIONAL\n      RequiredByTIFFBaseline\n      The
        horizontal resolution of the image in pixels per resolution\n      unit.  The
        ITU-T Recommendations for facsimile specify a small\n      number of horizontal
        resolutions: 100, 200, 300, 400 pixels per\n      inch, and 80, 160 pixels
        per centimeter (or 204, 408 pixels per\n      inch).  The allowed XResolution
        values for each profile are given\n      in the section defining that profile.
        \ Per [T.4], it is\n      permissible for applications to treat the following
        XResolution\n      values as being equivalent: <204, 200> and <400,408> in\n
        \     pixels/inch.  These equivalencies were allowed by [T.4] to permit\n
        \     conversions between inch and metric based facsimile terminals.  To\n
        \     ensure interoperability, if an application accepts any member of\n      the
        pairs then T.4 requires it to accept both (e.g., accept 204 if\n      200
        pixels per inch is accepted).  TIFF for Facsimile Writers\n      SHOULD express
        XResolution in inch-based units, for consistency\n      with historical practice
        and to maximize interoperability.  See\n      the table below for information
        on how to convert from an ITU-T\n      metric value to its inch-based equivalent
        resolution.\n      No default, must be specified\n   YResolution(283)\n   RATIONAL\n
        \     RequiredByTIFFBaseline\n      The vertical resolution of the image in
        pixels per resolution\n      unit.  The ITU-T Recommendations for facsimile
        specify a small\n      number of vertical resolutions: 100, 200, 300, 400
        pixels per\n      inch, and 38.5, 77, 154 pixels per centimeter (or 98, 196,
        391\n      pixels per inch).  The allowed YResolution values for each profile\n
        \     are given in the section defining that profile.  Per [T.4], it is\n
        \     permissible for applications to treat the following YResolution\n      values
        as being equivalent: <98, 100>, <196, 200>, and <391, 400>\n      in pixels/inch.
        \ These equivalencies were allowed by [T.4] to\n      permit conversions between
        inch- and metric-based facsimile\n      terminals.  To insure interoperability,
        if an application accepts\n      any member of the pairs, then T.4 requires
        it to accept both\n      (e.g., accept 98 if 100 pixels per inch is accepted).
        \ TIFF for\n      Facsimile Writers SHOULD express YResolution in inch-based
        units,\n      for consistency with historical practice and to maximize\n      interoperability.
        \ See the table below for information on\n      converting from the metric
        value to its inch based equivalent\n      resolution.\n      No default, must
        be specified.\n   +-----------------------------+-----------------------------+\n
        \  |         XResolution         |         YResolution         |\n   +--------------+--------------+--------------+--------------+\n
        \  |ResolutionUnit|ResolutionUnit|ResolutionUnit|ResolutionUnit|\n   |  =2
        (inch)   |   =3 (cm)    |  =2 (inch)   |   =3 (cm)    |\n   +--------------+--------------+--------------+--------------+\n
        \  |     100      |              |     100      |              |\n   +--------------+--------------+--------------+--------------+\n
        \  |     204      |      80      |      98      |     38.5     |\n   |     200
        \     |              |     100      |              |\n   +--------------+--------------+--------------+--------------+\n
        \  |     204      |      80      |     196      |      77      |\n   |     200
        \     |              |     200      |              |\n   +--------------+--------------+--------------+--------------+\n
        \  |     204      |      80      |     391      |     154      |\n   +--------------+--------------+--------------+--------------+\n
        \  |     300      |              |     300      |              |\n   +--------------+--------------+--------------+--------------+\n
        \  |     408      |     160      |     391      |     154      |\n   |     400
        \     |              |     400      |              |\n   +--------------+--------------+--------------+--------------+\n"
      title: 2.2.2.  Additional TIFF fields required for all fax profiles
    - contents:
      - "2.2.3.  TIFF fields recommended for all fax profiles\n   The TIFF fields
        listed in this section MAY be used by all fax\n   profiles.  However, Profile
        S writers (the minimal fax profile\n   described in Section 3) SHOULD NOT
        use these fields.  Recommended\n   fields that are profile-specific are described
        in Sections 3 - 8.\n   DateTime(306)\n   ASCII\n      OptionalInTIFFBaseline\n
        \     Date/time of image creation in 24-hour format\n      \"YYYY:MM:DD HH:MM:SS\".
        \ No default.\n   DocumentName(269)\n   ASCII\n      OptionalInTIFFExtension(DocumentStorageAndRetrieval)\n
        \     The name of the scanned document.  This is a TIFF extension field,\n
        \     not a Baseline TIFF field.  No default.\n   ImageDescription(270)\n
        \  ASCII\n      OptionalInTIFFBaseline\n      A string describing the contents
        of the image.\n      No default.\n   Orientation(274) = 1 - 8.\n   SHORT\n
        \     OptionalinTIFFBaseline 1: 0th row represents the visual top of the\n
        \     image; the 0th column represents the visual left side of the\n      image.
        \ See the current TIFF spec [TIFF] for further values;\n      Baseline TIFF
        only requires value=1.  Default = 1.\n      Note: It is recommended that a
        writer that is aware of the\n      orientation include this field to give
        a positive indication of\n      the orientation, even if the value is the
        default.  Writers should\n      not generate mirror images, because many readers
        will not properly\n      reverse the image before display or print.\n   Software(305)\n
        \  ASCII\n      OptionalInTIFFBaseline\n      The name and release number
        of the software package that\n      created the image.\n      No default.\n"
      title: 2.2.3.  TIFF fields recommended for all fax profiles
    - contents:
      - "2.2.4.  New TIFF fields recommended for fax profiles\n   The new TIFF fields
        listed in this section MAY be used by all fax\n   profiles.  However, Profile
        S writes (the minimal fax profile\n   described in Section 3) SHOULD NOT use
        these fields.  In addition,\n   support for these new TIFF fields has not
        been included in historical\n   TIFF-F readers described in Section 4 and
        [TIFF-F].  These fields\n   describe \"global\" parameters of the fax session
        that created the\n   image data.  They are optional, not part of the current
        TIFF\n   specification, and are defined in this document.\n   The first new
        field, GlobalParametersIFD, is an IFD that contains\n   global parameters
        and is located in a Primary IFD.\n   GlobalParametersIFD (400) IFD or LONG\n
        \     An IFD containing global parameters.  It is recommended that a\n      TIFF
        writer place this field in the first IFD, where a TIFF reader\n      would
        find it quickly.\n      Each field in the GlobalParametersIFD is a TIFF field
        that is\n      legal in any IFD.  Required baseline fields should not be located\n
        \     in the GlobalParametersIFD but should be in each image IFD.  If a\n
        \     conflict exists between fields in the GlobalParametersIFD and in\n      the
        image IFDs, then the data in the image IFD shall prevail.\n      Among the
        GlobalParametersIFD entries is a new ProfileType field\n      that generally
        describes information in this IFD and in the TIFF\n      file.\n   ProfileType(401)\n
        \  LONG\n      The type of image data stored in this IFD.\n      0 = Unspecified\n
        \     1 = Group 3 fax\n      No default\n   The following new global fields
        are defined in this document as IFD\n   entries for use with fax applications.\n
        \  FaxProfile(402) = 0 - 6.\n   BYTE\n      The profile that applies to this
        file; a profile is subset of the\n      full set of permitted fields and field
        values of TIFF for\n      facsimile.  The currently defined values are:\n
        \     0: does not conform to a profile defined for TIFF for facsimile\n      1:
        minimal black & white lossless, Profile S\n      2: extended black & white
        lossless, Profile F\n      3: lossless JBIG black & white, Profile J\n      4:
        lossy color and grayscale, Profile C\n      5: lossless color and grayscale,
        Profile L\n      6: Mixed Raster Content, Profile M\n   CodingMethods(403)\n
        \  LONG\n      This field indicates which coding methods are used in the file.
        \ A\n      value of 1 in a bit location indicates the corresponding coding\n
        \     method is used.  More than one bit set to 1 means more than one\n      coding
        method is used in the file.\n   Bit 0: unspecified compression\n   Bit 1:
        1-dimensional coding, ITU-T Rec. T.4 (MH - Modified Huffman)\n   Bit 2: 2-dimensional
        coding, ITU-T Rec. T.4 (MR - Modified READ)\n   Bit 3: 2-dimensional coding,
        ITU-T Rec. T.6 (MMR - Modified MR)\n   Bit 4: ITU-T Rec. T.82 coding, using
        ITU-T Rec. T.85 (JBIG)\n   Bit 5: ITU-T Rec. T.81 (Baseline JPEG)\n   Bit
        6: ITU-T Rec. T.82 coding, using ITU-T Rec. T.43 (JBIG color)\n   Bits 7 -
        31: reserved for future use\n   Note: There is a limit of 32 compression types
        to identify standard\n   compression methods.\n   VersionYear(404)\n   BYTE\n
        \     Count: 4\n      The year of the standard specified by the FaxProfile
        field, given\n      as 4 characters, e.g., '1997'; used in lossy and lossless
        color\n      profiles.\n   ModeNumber (405)\n   BYTE\n      The mode of the
        standard specified by the FaxProfile field.  A\n      value of 0 indicates
        Mode 1.0; used in Mixed Raster Content\n      profile.\n"
      title: 2.2.4.  New TIFF fields recommended for fax profiles
    title: 2.2.  TIFF Fields for All Fax Applications
  title: 2.  TIFF and Fax
- contents:
  - "3.  Profile S: Minimal Black-and-White Fax Profile\n   This section defines the
    minimal black-and-white subset of TIFF for\n   facsimile.  This subset is designated
    Profile S.  All implementations\n   of TIFF for facsimile SHALL support the minimal
    subset.\n   Black-and-white mode is the binary fax application most users are\n
    \  familiar with today.  This mode is appropriate for black-and-white\n   text
    and line art.  Black-and-white mode is divided into two levels\n   of capability.
    \ This section describes the minimal interchange set of\n   TIFF fields that must
    be supported by all implementations in order to\n   assure that some form of image,
    albeit black-and-white, can be\n   interchanged.  This minimum interchange set
    is a strict subset of the\n   fields and values defined for the extended black-and-white
    profile\n   (TIFF-F or Profile F) in Section 4, which describes extensions to
    the\n   minimal interchange set of fields that provide a richer set of\n   black-and-white
    capabilities.\n"
  - contents:
    - "3.1.  Overview\n   The minimal interchange portion of the black-and-white facsimile
      mode\n   supports 1-dimensional Modified Huffman (MH) compression, with the\n
      \  original Group 3 fax resolutions, commonly called \"standard\" and\n   \"fine.\"\n
      \  To assure interchange, this profile uses the minimal set of fields\n   with
      a minimal set of values.  There are no recommended fields in\n   this profile.
      \ Further, the TIFF file is required to be \"little-\n   endian\", which means
      that the byte order value in the TIFF header is\n   \"II\".  This profile defines
      a required ordering for the pages in a\n   fax document and for the IFDs and
      image data of a page.  It also\n   requires\n   that a single strip contain
      the image data for each page; see Section\n   3.5.  The image data may contain
      RTC sequences, as specified in\n   Section 3.4.\n"
    title: 3.1.  Overview
  - contents:
    - "3.2.  Required TIFF Fields\n   Besides the fields listed in Section 2.2.1,
      the minimal black-and-\n   white fax profile requires the following fields.
      \ The fields listed\n   in Section 2.2.1 and the fields and fax-specific values
      specified in\n   this subsection must be supported by all implementations.\n"
    - contents:
      - "3.2.1.  Baseline fields\n   BitsPerSample(258) = 1.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Binary data only.\n      Default = 1 (field may be omitted if this is
        the value)\n   Compression(259) = 3.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     3 = 1- or 2- dimensional coding.\n      The value 3 is a TIFF extension
        value [TIFF].  The T4Options field\n      must be specified, and its value
        specifies that the data is\n      encoded with the Modified Huffman (MH) compression
        of [T.4].\n   FillOrder(266) = 2.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     2 = Least Significant Bit first\n      NOTE: Baseline TIFF readers are
        only required to support FillOrder\n      1, where the lowest numbered pixel
        is stored in the MSB of the\n      byte.  However, because many devices, such
        as modems, transmit the\n      LSB first when converting the data to serial
        form, it is common\n      for black-and-white fax products to use the second
        FillOrder = 2,\n      where the lowest numbered pixel is stored in the LSB.
        \ Therefore,\n      this value is specified in the minimal black-and-white
        profile.\n   ImageWidth(256) = 1728.\n   SHORT or LONG\n      RequiredByTIFFBaseline\n
        \     This profile only supports a page width of 1728 pixels.  This\n      width
        corresponds to North American Letter and Legal and to ISO A4\n      size pages.
        \ No default, must be specified.\n   NewSubFileType(254) = (Bit 1=1).\n   LONG\n
        \     RequiredByTIFFforFAX\n      Bit 1 is 1 if the image is a single page
        of a multi-page document.\n      Default = 0 (no subfile bits on, so may not
        be omitted for fax).\n   PhotometricInterpretation(262) = 0.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     0 = pixel value 1 means black.\n      No default, must be specified.\n
        \  ResolutionUnit(296) = 2.\n   SHORT\n      RequiredByTIFFBaseline\n      The
        unit of measure for resolution. 2 = inch.\n      Default = 2 (field may be
        omitted if this is the value).\n   SamplesPerPixel(277) = 1.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     The number of components per pixel; 1 for black-and-white.\n      Default
        = 1 (field may be omitted if this is the value).\n   XResolution(282) = 200,
        204.\n   RATIONAL\n      RequiredByTIFFBaseline\n      The horizontal resolution
        of the image is expressed in pixels per\n      resolution unit.  In pixels/inch,
        the allowed values are 200 and\n      204, which may be treated as equivalent.
        \ See Section 2.2.2 for\n      inch metric equivalency.  No default, must
        be specified.\n   YResolution(283) = 98, 100, 196, 200.\n   RATIONAL\n      RequiredByTIFFBaseline
        The vertical resolution of the image is\n      expressed in pixels per resolution
        unit.  In pixels/inch, the\n      allowed values are 98, 100, 196, and 200;
        98 and 100 may be\n      treated as equivalent, and 196 and 200 may be treated
        as\n      equivalent.  See Section 2.2.2 for inch metric equivalency.  No\n
        \     default, must be specified.\n"
      title: 3.2.1.  Baseline fields
    - contents:
      - "3.2.2.  Extension fields\n   T4Options(292) = (Bit 0 = 0, Bit 1 = 0, Bit
        2 = 0, 1)\n      LONG\n      RequiredTIFFExtension (when Compression = 3)\n
        \     Bit 0 = 0 indicates MH compression.\n      Bit 1 must be 0.\n      Bit
        2 = 1 indicates that EOLs are byte aligned, = 0 EOLs not byte\n      aligned.\n
        \     Default is all bits are 0 (applies when EOLs are not byte aligned)\n
        \  Note: The T4Options field is required when the Compression field has\n
        \  a value of 3.  Bit 0 of this field specifies the compression used (MH\n
        \  only in this profile).  MH coding requires the use of EOL (End of\n   Line)
        codes: Bit 2 indicates whether the EOL codes are byte-aligned\n   or not.
        \ See Section 3.4 for details.\n"
      title: 3.2.2.  Extension fields
    - contents:
      - "3.2.3.  New Fields\n   None.\n"
      title: 3.2.3.  New Fields
    title: 3.2.  Required TIFF Fields
  - contents:
    - "3.3.  Recommended TIFF Fields\n   None.\n"
    title: 3.3.  Recommended TIFF Fields
  - contents:
    - "3.4.  End of Line (EOL) and Return to Control (RTC)\n   TIFF extensions for
      fax, used in this specification, differ from\n   Baseline TIFF in the following
      ways:\n   -  A 12-bit EOL sequence MUST precede each line of MH-compressed\n
      \     image data.  (Baseline TIFF does not use these EOL sequences.)\n   -  The
      EOL sequence MAY be byte-aligned, in which case fill bits are\n      added so
      that the EOL sequence ends on a byte boundary, and any\n      subsequent image
      data begins on a byte boundary.\n   -  If the EOL codes are not byte aligned,
      the image data MAY be\n      followed by an RTC (Return to Control) sequence,
      consisting of 6\n      consecutive EOLs.\n   In conventional fax, an MH-compressed
      fax data stream for a page\n   consists of the following sequence:\n      EOL,
      compressed data (first line), EOL, compressed data, ... ,\n      EOL, compressed
      data (last line), RTC (6 consecutive EOL codes)\n   Baseline TIFF does not use
      EOL codes or Return to Control (RTC)\n   sequences for MH-compressed data.  However,
      the TIFF extension field\n   T4Options used in this specification for MH compression
      (Compression\n   = 3) requires EOLs.\n   Furthermore, Bit 2 in the T4Options
      field indicates whether or not\n   the EOL codes are byte aligned.  If Bit 2
      = 1, indicating the EOL\n   codes are byte aligned, then fill bits have been
      added as necessary\n   before EOL codes so that an EOL code always ends on a
      byte boundary,\n   and the first bit of data following an EOL begins on a byte
      boundary.\n   Without fill bits, an EOL code may end in the middle of a byte.
      \ Byte\n   alignment relieves application software of the burden of bit-shifting\n
      \  every byte while parsing scanlines for line-oriented image\n   manipulation
      (such as writing a TIFF file).  Not all TIFF readers\n   historically used for
      fax are able to deal with non byte aligned\n   data.\n   While TIFF extension
      requires EOL codes, TIFF in fax applications has\n   traditionally prohibited
      RTC sequences.  Implementations that seek\n   common processing and interfaces
      for fax data streams and Internet\n   fax files would prefer that the TIFF data
      include RTC sequences.\n   To reconcile these differences, RTCs are allowed
      in cases where EOL\n   codes are not byte aligned and no fill bits have been
      added to the\n   data.  This corresponds to situations where the fax data is
      simply\n   inserted in a strip without being processed or interpreted.  RTCs\n
      \  should not occur in the data when EOLs have been byte aligned.  This\n   is
      formally specified in the next subsection.\n"
    - contents:
      - "3.4.1.  RTC Exclusion\n   Implementations that seek to maintain strict conformance
        with TIFF\n   and compatibility with the historical use of TIFF for fax SHOULD
        NOT\n   include the RTC sequence when writing TIFF files.  However,\n   implementations
        that need to support \"transparency\" of T.4-generated\n   image data MAY
        include RTCs when writing TIFF files if the flag\n   settings of the T4Options
        field are set for non byte aligned data,\n   i.e., Bit 2 is 0.  Implementors
        of TIFF readers should be aware that\n   there are some existing TIFF implementations
        for fax that include the\n   RTC sequence in MH image data.  Therefore, minimal
        set readers MUST\n   be able to process files that do not include RTCs and
        SHOULD be able\n   to process files that do include RTCs.\n"
      title: 3.4.1.  RTC Exclusion
    title: 3.4.  End of Line (EOL) and Return to Control (RTC)
  - contents:
    - "3.5.  File Structure\n   The TIFF header, described in Section 2.1.1, contains
      two bytes that\n   describe the byte order used within the file.  For the minimal\n
      \  black-and-white profile, these bytes SHALL have the value \"II\"\n   (0x4949),
      denoting that the bytes in the TIFF file are in LSByte-\n   first order (little-endian).
      \ The first or 0th IFD immediately\n   follows the header, so offset to the
      first IFD is 8.  The header\n   values are shown in the following table:\n      +--------+-------------------+--------+-----------+\n
      \     | Offset |   Description     |     Value          |\n      +--------+-------------------+--------+-----------+\n
      \     |   0    |   Byte Order      |  0x4949 (II)       |\n      +--------+-------------------+--------+-----------+\n
      \     |   2    |   Identifier      |  42 decimal        |\n      +--------+-------------------+--------+-----------+\n
      \     |   4    | Offset of 0th IFD |  0x 0000 0008      |\n      +--------+-------------------+--------+-----------+\n
      \  The minimal black-and-white profile SHALL order IFDs and image data\n   within
      a file as follows: (1) There SHALL be an IFD for each page in\n   a multi-page
      fax document; (2) the IFDs SHALL occur in the same order\n   in the file as
      the pages occur in the document; (3) the IFD SHALL\n   precede the image data
      to which it has offsets; (4) the image data\n   SHALL occur in the same order
      in the file as the pages occur in the\n   document; (5) the IFD, the value data,
      and the image data to which it\n   has offsets SHALL precede the next image
      IFD; and (6) the image data\n   for each page SHALL be contained within a single
      strip.\n   As a result of (6), the StripOffsets field will contain the pointer\n
      \  to the image data. With two exceptions, the field entries in the IFD\n   contain
      the field values instead of offsets to field values located\n   outside the
      IFD.  The two exceptions are the values for the\n   XResolution and YResolution
      fields, both of which are type RATIONAL\n   and require 2 4-byte numbers.  These
      \"long\" field values SHALL be\n   placed immediately after the IFD which containing
      the offsets to\n   them, and before the image data pointed to by that IFD.\n
      \  The effect of these requirements is that the IFD for the first page\n   SHALL
      come first in the file after the TIFF header, followed by the\n   long field
      values for XResolution and YResolution, followed by the\n   image data for the
      first page, then the IFD for second page, and so\n   on.  This is shown in the
      following figure.  Each IFD is required to\n   have a PageNumber field, which
      has value 0 for the first page, 1 for\n   the second page, and so on.\n              +-----------------------+\n
      \             |         Header        |------------+\n              +-----------------------+
      \           | First IFD\n              |      IFD (page 0)     | <----------+
      Offset\n          +---|                       |------------+\n          |   |
      \                      |--+         |\n    Value |   +-----------------------+
      \ |         |\n   Offset +-->|      Long Values      |  |         |\n              +-----------------------|
      \ | Strip   |\n              |  Image Data (page 0)  |<-+ Offset  |\n              +-----------------------+
      \           | Next IFD\n              |      IFD (page 1)     | <----------+
      Offset\n          +---|                       |------------+\n          |   |
      \                      |--+         |\n    Value |   +-----------------------+
      \ |         |\n   Offset +-->|      Long Values      |  |         |\n              +-----------------------|
      \ | Strip   |\n              |  Image Data (page 1)  |<-+ Offset  |\n              +-----------------------+
      \           | Next IFD\n              |      IFD (page 2)     | <----------+
      Offset\n              +-----------------------+\n              |          :
      \           |\n   Using this file structure may reduce the memory requirements
      in\n   implementations.  It also provides some support for streaming, in\n   which
      a file can be processed as it is received and before the entire\n   file is
      received.\n"
    title: 3.5.  File Structure
  - contents:
    - "3.6.  Profile S: Minimal Black-and-White Profile Summary\n   The table below
      summarizes the TIFF fields that compose the minimal\n   interchange set for
      black-and-white facsimile.  The Baseline and\n   Extension fields and field
      values MUST be supported by all\n   implementations.  For convenience, certain
      fields that have a value\n   that is a sequence of flag bits are shown with
      integer values\n   corresponding to the flags that are set.  An implementation
      should\n   test the setting of the relevant flag bits individually, however,
      to\n   allow extensions to the sequence of flag bits to be appropriately\n   ignored.
      \ (See, for example, T4Options below.)\n   +---------------------------+--------------------------------+\n
      \  | Baseline Fields           |  Values                        |\n   +---------------------------+--------------------------------+\n
      \  | BitsPerSample             | 1                              |\n   +---------------------------+--------------------------------+\n
      \  | Compression               | 3: 1D Modified Huffman coding  |\n   |                           |
      \    set T4Options = 0 or 4     |\n   +------------------------------------------------------------+\n
      \  +---------------------------+--------------------------------+\n   | FillOrder
      \                | 2: least significant bit first |\n   +---------------------------+--------------------------------+\n
      \  | ImageWidth                | 1728                           |\n   +---------------------------+--------------------------------+\n
      \  | ImageLength               | n: total number of scanlines   |\n   |                           |
      in image                       |\n   +---------------------------+--------------------------------+\n
      \  | NewSubFileType            | 2: Bit 1 identifies single     |\n   |                           |
      page of a multi-page document  |\n   +---------------------------+--------------------------------+\n
      \  | PageNumber                | n,m: page number n followed by |\n   |                           |
      total page count m             |\n   +---------------------------+--------------------------------+\n
      \  | PhotometricInterpretation | 0: pixel value 1 means black   |\n   +---------------------------+--------------------------------+\n
      \  | ResolutionUnit            | 2: inch                        |\n   +---------------------------+--------------------------------+\n
      \  | RowsPerStrip              | number of scanlines per strip  |\n   |                           |
      = ImageLength, with one strip  |\n   +---------------------------+--------------------------------+\n
      \  | SamplesPerPixel           | 1                              |\n   +---------------------------+--------------------------------+\n
      \  | StripByteCounts           | number of bytes in TIFF strip  |\n   +---------------------------+--------------------------------+\n
      \  | StripOffsets              | offset from beginning of       |\n   |                           |
      file to single TIFF strip      |\n   +---------------------------+--------------------------------+\n
      \  | XResolution               | 204, 200 (pixels/inch)         |\n   +---------------------------+--------------------------------+\n
      \  | YResolution               | 98, 196, 100, 200 (pixels/inch)|\n   +---------------------------+--------------------------------+\n
      \  | Extension Fields                                           |\n   +---------------------------+--------------------------------+\n
      \  | T4Options                 | 0: MH coding, EOLs not byte    |\n   |                           |
      \              aligned          |\n   |                           | 4: MH coding,
      EOLs byte aligned|\n   +---------------------------+--------------------------------+\n"
    title: '3.6.  Profile S: Minimal Black-and-White Profile Summary'
  title: '3.  Profile S: Minimal Black-and-White Fax Profile'
- contents:
  - "4.  Profile F: Extended Black-and-White fax profile\n   This section defines
    the extended black-and-white profile or Profile\n   F of TIFF for facsimile.  It
    provides a standard definition of what\n   has historically been known as TIFF
    Class F and now as TIFF-F.  In\n   doing so, it aligns this profile with current
    ITU-T Recommendations\n   for black-and-white fax and with existing industry practice.\n
    \  Implementations of this profile include implementations of Profile S.\n   This
    section describes extensions to the minimal interchange set of\n   fields (Profile
    S) that provide a richer set of black-and-white\n   capabilities.  The fields
    and values described in this section are a\n   superset of the fields and values
    defined for the minimal interchange\n   set in Section 3.  In addition to the
    MH compression, Modified READ\n   (MR) and Modified Modified READ (MMR) compression,
    as described in\n   [T.4] and [T.6] are supported.\n   Section 4.1 gives an overview
    of TIFF-F.  Section 4.2 describes the\n   TIFF fields that SHALL be used in this
    profile.  Section 4.3\n   describes the fields that MAY be used in this profile.
    \ In the spirit\n   of the original TIFF-F specification, Sections 4.4 and 4.5
    discuss\n   technical implementation issues and warnings.  Section 4.6 gives an\n
    \  example of TIFF-F use.  Section 4.7 gives a summary of the required\n   and
    recommended fields and their values.\n"
  - contents:
    - "4.1.  TIFF-F Overview\n   Though it has been in common use for many years,
      TIFF-F has\n   previously never been documented in the form of a standard.  An\n
      \  informal TIFF-F document was originally created by a small group of\n   fax
      experts led by Joe Campbell.  The existence of TIFF-F is noted in\n   [TIFF],
      but it is not defined.  This document serves as the formal\n   definition of
      the F application of [TIFF] for Internet applications.\n   For ease of reference,
      the term TIFF-F will be used throughout this\n   document as a shorthand for
      the extended black-and-white profile of\n   TIFF for facsimile.\n   Up until
      the TIFF 6.0 specification, TIFF supported various \"Classes\"\n   that defined
      the use of TIFF for various applications.  Classes were\n   used to support
      specific applications. In this spirit, TIFF-F has\n   been known historically
      as \"TIFF Class F\".  Previous informal TIFF-F\n   documents [TIFF-F0] used
      the \"Class F\" terminology.  As of TIFF 6.0\n   [TIFF], the TIFF Class concept
      has been eliminated in favor of the\n   concept of Baseline TIFF.  Therefore,
      this document updates the\n   definition of TIFF-F as the F profile of TIFF
      for facsimile, by using\n   Baseline TIFF as defined in [TIFF] as the starting
      point and then\n   adding the TIFF extensions to Baseline TIFF that apply for
      TIFF-F.\n   In almost all cases, the resulting definition of TIFF-F fields and\n
      \  values remains consistent with those used historically in earlier\n   definitions
      of TIFF Class F.  Where some of the values for fields\n   have been updated
      to provide more precise conformance with the ITU-T\n   [T.4] and [T.30] fax
      recommendations, these differences are noted.\n"
    title: 4.1.  TIFF-F Overview
  - contents:
    - "4.2.  Required TIFF Fields\n   This section lists the required fields and the
      values they must have\n   to be ITU-compatible.  Besides the fields listed in
      Section 2.2.1,\n   the extended black-and-white fax profile SHALL use the following\n
      \  fields.\n"
    - contents:
      - "4.2.1.  Baseline fields\n   BitsPerSample(258) = 1.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Binary data only.\n      Default = 1 (field may be omitted if this is
        the value)\n   Compression(259) = 3, 4.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     3 = 1- or 2- dimensional coding, must have T4Options field This is\n
        \     a TIFF Extension value [TIFF].\n      4 = 2-dimensional coding, ITU-T
        Rec. T.6 (MMR - Modified Modified\n      READ, must have T6Options field))
        This is a TIFF Extension value.\n      Default = 1 (and is not applicable;
        field must be specified)\n   NOTE: Baseline TIFF permits use of value 2 for
        Modified Huffman\n   compression, but data is presented in a form that does
        not use EOLs,\n   and so TIFF for facsimile uses Compression=3 instead.  See
        Sections\n   4.4.4, 4.5.1, and 4.5.2 for more information on compression and\n
        \  encoding.\n   FillOrder(266) = 1 , 2.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Profile F readers must be able to read data in both bit orders,\n      but
        the vast majority of facsimile products store data LSB first,\n      exactly
        as it appears on the telephone line.\n         1 = Most Significant Bit first.\n
        \        2 = Least Significant Bit first.\n   ImageWidth(256)\n   SHORT or
        LONG\n      RequiredByTIFFBaseline\n      This profile supports the following
        fixed page widths: 1728, 2592,\n      3456 (corresponding to North American
        Letter and Legal and ISO A4\n      paper sizes), 2048, 3072, 4096 (corresponding
        to ISO B4 paper\n      size), and 2432, 3648, 4864 (corresponding to ISO A3
        paper size).\n      No default; must be specified.\n   NOTE: Historical TIFF-F
        did not include support for the following\n   widths related to higher resolutions:
        2592, 3072, 3648, 3456, 4096,\n   and 4864.  Historical TIFF-F documents also
        included the following\n   values related to A5 and A6 widths: 816 and 1216.
        \ Per the most\n   recent version of [T.4], A5 and A6 documents are no longer
        supported\n   in Group 3 facsimile, so the related width values are now obsolete.\n
        \  See section 4.5.2 for more information on inch/metric equivalencies\n   and
        other implementation details.\n   NewSubFileType(254) = (Bit 1=1).\n   LONG\n
        \     RequiredByTIFFforFAX\n      Bit 1 is 1 if the image is a single page
        of a multi-page document.\n      Default = 0 (no subfile bits on, so may not
        be omitted for fax).\n   NOTE: Bit 1 is always set to 1 for TIFF-F, indicating
        a single page\n   of a multi-page image.  The same bit settings are used when
        TIFF-F is\n   used for a one-page fax image.  See Section 4.4.3 for details
        on\n   multi-page files.\n   PhotometricInterpretation(262) = 0, 1.\n   SHORT\n
        \     RequiredByTIFFBaseline\n      0 = pixel value 1 means black, 1 = pixel
        value 1 means white.\n      This field allows notation of an inverted or negative
        image.\n      No default, must be specified.\n   ResolutionUnit(296) = 2,
        3.\n   SHORT\n      RequiredByTIFFBaseline\n      The unit of measure for
        resolution. 2 = inch, 3 = centimeter; =\n      TIFF-F has traditionally used
        inch-based measurement.\n      Default = 2 (field may be omitted if this is
        the value).\n   SamplesPerPixel(277) = 1.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     1 = monochrome, bi-level in this case (see BitsPerSample).\n      Default
        = 1 (field may be omitted if this is the value).\n   XResolution(282) = 200,
        204, 300, 400, 408\n   RATIONAL\n      RequiredByTIFFBaseline\n      The horizontal
        resolution of the image is expressed in pixels per\n      resolution unit.
        \ In pixels/inch, the allowed values are 200, 204,\n      300, 400, and 408.
        \ See Section 2.2.2 for inch metric equivalency.\n      No default, must be
        specified.\n   NOTE: The values of 200 and 408 have been added to the historical\n
        \  TIFF-F values, for consistency with [T.30].  Some existing TIFF-F\n   implementations
        may also support values of 80 pixels/cm, which is\n   equivalent to 204 pixels
        per inch.  See section 4.5.2 for information\n   on implementation details.\n
        \  YResolution(283) = 98, 100, 196, 200, 300, 391, and 400\n   RATIONAL\n
        \     RequiredByTIFFBaseline\n      The vertical resolution of the image is
        expressed in pixels per\n      resolution unit.  In pixels/inch, the allowed
        values are 98, 100,\n      196, 200, 300, 391, and 400 pixels/inch. See Section
        2.2.2 for\n      inch metric equivalency.\n      No default, must be specified\n
        \  NOTE: The values of 100, 200, and 391 have been added to the\n   historical
        TIFF-F values, for consistency with [T.30].  Some existing\n   TIFF-F implementations
        may also support values of 77 and 38.5 (cm),\n   which are equivalent to 196
        and 98 pixels per inch, respectively. See\n   section 4.5.2 for more information
        on implementation details.\n   NOTE: Not all combinations of XResolution,
        YResolution, and\n   ImageWidth are legal.  The following table gives the
        legal\n   combinations and corresponding paper sizes [T.30].\n   +--------------+-----------------+---------------------------+\n
        \  |   XResolution x YResolution    |         ImageWidth        |\n   +--------------+-----------------+---------+--------+--------+\n
        \  |      200x100, 204x98           |         |        |        |\n   |      200x200,
        204x196          |  1728   |  2048  |  2432  |\n   |           204x391              |
        \        |        |        |\n   +--------------+-----------------+---------+--------+--------+\n
        \  |          300 x 300             |  2592   |  3072  |  3648  |\n   +--------------+-----------------+---------+--------+--------+\n
        \  |     408 x 391, 400 x 400       |  3456   |  4096  |  4864  |\n   +--------------+-----------------+---------+--------+--------+\n
        \                                   |Letter,A4|   B4   |   A3   |\n                                    |
        \ Legal  |        |        |\n                                    +---------+--------+--------+\n
        \                                   |         Paper Size        |\n                                    +---------------------------+\n"
      title: 4.2.1.  Baseline fields
    - contents:
      - "4.2.2.  Extension fields\n   T4Options(292) = (Bit 0 = 0 or 1, Bit 1 = 0,
        Bit 2 = 0 or 1)\n   LONG\n      RequiredTIFFExtension (when Compression =
        3)\n      T4Options was also known as Group3Options in a prior version of\n
        \     [TIFF].\n      Bit 0 = 1 indicates MR compression, = 0 indicates MH
        compression.\n      Bit 1 must be 0.\n      Bit 2 = 1 indicates that EOLs
        are byte aligned, = 0 EOLs not byte\n      aligned.\n      Default is all
        bits are 0 (applies when MH compression is used and\n      EOLs are not byte
        aligned) (See Section 3.2.2.)  The T4Options\n      field is required when
        the Compression field has a value of 3.\n      This field specifies the compression
        used (MH or MR) and whether\n      the EOL codes are byte aligned or not.
        \ If they are byte aligned,\n      then fill bits have been added as necessary
        so that the End of\n      Line (EOL) codes always end on byte boundaries.
        \ See Sections 3.4,\n      4.5.3, and 4.5.4 for details.\n   T6Options(293)
        = (Bit 0 = 0, Bit 1 = 0).\n   LONG\n      RequiredTIFFExtension (when Compression
        = 4)\n      Used to indicate parameterization of 2D Modified Modified READ\n
        \     (MMR) compression.  T6Options was also known as Group4Options in a\n
        \     prior version of [TIFF].  Bit 0 must be 0.\n      Bit 1 = 0 indicates
        uncompressed data mode is not allowed; = 1\n      indicates that uncompressed
        data is allowed (see [TIFF]).  Default\n      is all bits 0.  For FAX, the
        field must be present and have the\n      value 0.  The use of uncompressed
        data where compression would\n      expand the data size is not allowed for
        FAX.\n   NOTE: MMR compressed data is two-dimensional and does not use EOLs.\n
        \  Each MMR encoded image MUST include an \"end-of-facsimile-block\"\n   (EOFB)
        code at the end of each coded strip; see Section 4.5.6.\n"
      title: 4.2.2.  Extension fields
    - contents:
      - "4.2.3.  New fields\n   None.\n"
      title: 4.2.3.  New fields
    title: 4.2.  Required TIFF Fields
  - contents:
    - '4.3.  Recommended TIFF fields

      '
    - contents:
      - "4.3.1.  Baseline fields\n   See Section 2.2.3.\n"
      title: 4.3.1.  Baseline fields
    - contents:
      - "4.3.2.  Extension fields\n   See Section 2.2.3.\n"
      title: 4.3.2.  Extension fields
    - contents:
      - "4.3.3.  New fields\n   See Section 2.2.4 and optional fields below.\n   Three
        new, optional fields, used in the original TIFF-F description\n   to describe
        page quality, are defined in this specification.  The\n   information contained
        in these fields is usually obtained from\n   receiving facsimile hardware
        (if applicable).  They SHOULD NOT be\n   used in writing TIFF-F files for
        facsimile image data that is error\n   corrected or otherwise guaranteed not
        to have coding errors.  Some\n   applications need to understand exactly the
        error content of the\n   data.  For example, a CAD program might wish to verify
        that a  file\n   has a low error level before importing it into a high-accuracy\n
        \  document.  Because Group 3 facsimile devices do not necessarily\n   perform
        error correction on the image data, the quality of a received\n   page must
        be inferred from the pixel count of decoded scanlines.  A\n   \"good\" scan
        line is defined as a line that, when decoded, contains\n   the correct number
        of pixels.  Conversely, a \"bad\" scanline is\n   defined as a line that,
        when decoded, contains an incorrect number of\n   pixels.\n   BadFaxLines(326)\n
        \  SHORT or LONG\n      The number of \"bad\" scanlines encountered by the
        facsimile device\n      during reception.  A \"bad\" scanline is defined as
        a scanline that,\n      when decoded, comprises an incorrect number of pixels.
        \ Note that\n      PercentBad = (BadFaxLines/ImageLength) * 100.\n      No
        default.\n   CleanFaxData(327) = 0, 1, 2.\n   SHORT\n      Indicates whether
        \"bad\" lines encountered during reception are\n      stored in the data,
        or whether \"bad\" lines have been replaced by\n      the receiver.\n      0
        = No \"bad\" lines\n      1 = \"bad\" lines exist but were regenerated by
        the receiver,\n      2 = \"bad\" lines exist but have not been regenerated.\n
        \     No default.\n   NOTE: Many facsimile devices do not actually output
        bad lines.\n   Instead, the previous good line is repeated in place of a bad
        line.\n   Although this substitution, known as line regeneration, results
        in a\n   visual improvement to the image, the data is nevertheless corrupted.\n
        \  The CleanFaxData field describes the error content of the data.  That\n
        \  is, when the BadFaxLines and ImageLength fields indicate that the\n   facsimile
        device encountered lines with an incorrect number of pixels\n   during reception,
        the CleanFaxData field indicates whether these bad\n   lines are actually
        still in the data or whether the receiving\n   facsimile device replaced them
        with regenerated lines.\n   ConsecutiveBadFaxLines(328)\n   LONG or SHORT\n
        \     Maximum number of consecutive \"bad\" scanlines received.  The\n      BadFaxLines
        field indicates only the quantity of bad lines.\n      No Default.\n   NOTE:
        The BadFaxLines and ImageLength data indicate only the quantity\n   of bad
        lines.  The ConsecutiveBadFaxLines field is an indicator of\n   the distribution
        of bad lines and may therefore be a better general\n   indicator of perceived
        image quality.  See Section 4.4.5 for examples\n   of the use of these fields.\n"
      title: 4.3.3.  New fields
    title: 4.3.  Recommended TIFF fields
  - contents:
    - '4.4.  Technical Implementation Issues

      '
    - contents:
      - "4.4.1.  Strips\n   In general, TIFF files divide an image into \"strips\",
        also known as\n   \"bands\".  Each strip contains a few scanlines of the image.
        \ By using\n   strips, a TIFF reader need not load the entire image into memory,\n
        \  enabling it to fetch and decompress small random portions of the\n   image
        as necessary.\n   The number of scanlines in a strip is described by the RowsPerStrip\n
        \  value and the number of bytes in the strip after compression by the\n   StripByteCount
        value.  The location in the TIFF file of each strip is\n   given by the StripOffsets
        values.\n   Strip size is application dependent.  The recommended approach
        for\n   multi-page TIFF-F images is to represent each page as a single strip.\n
        \  Existing TIFF-F usage is typically one strip per page in multi-page\n   TIFF-F
        files.  See Sections 2.1.2 and 2.1.3.\n"
      title: 4.4.1.  Strips
    - contents:
      - "4.4.2.  Bit Order\n   The current TIFF specification [TIFF] does not require
        a Baseline\n   TIFF reader to support FillOrder=2, i.e., lowest numbered 1-bit
        pixel\n   in the least significant bit of a byte.  It further recommends that\n
        \  FillOrder=2 be used only in special purpose applications.\n   Facsimile
        data appears on the phone line in bit-reversed order\n   relative to its description
        in ITU-T Recommendation T.4.  Therefore,\n   most facsimile applications choose
        this natural order for data in a\n   file.  Nevertheless, TIFF-F readers must
        be able to read data in both\n   bit orders and support FillOrder values of
        1 and 2.\n"
      title: 4.4.2.  Bit Order
    - contents:
      - "4.4.3.  Multi-Page\n   Many existing applications already read TIFF-F-like
        files but do not\n   support the multi-page field.  Since a multi-page format
        greatly\n   simplifies file management in fax application software, TIFF-F\n
        \  specifies multi-page documents (NewSubfileType = 2) as the standard\n   case.\n
        \  It is recommended that applications export multiple-page TIFF-F files\n
        \  without manipulating fields and values.  Historically, some TIFF-F\n   writers
        have attempted to produce individual single-page TIFF-F files\n   with modified
        NewSubFileType and PageNumber (page one-of-one) values\n   for export purposes.
        \ However, there is no easy way to link such\n   multiple single-page files
        together into a logical multiple-page\n   document, so this practice is not
        recommended.\n"
      title: 4.4.3.  Multi-Page
    - contents:
      - "4.4.4.  Compression\n   In Group 3 facsimile, there are three compression
        methods which had\n   been standardized as of 1994 and are in common use.
        \ The ITU-T T.4\n   Recommendation [T.4] defines a one-dimensional compression
        method\n   known as Modified Huffman (MH) and a two-dimensional method known
        as\n   Modified READ (MR) (READ is short for Relative Element Address\n   Designate).
        \ In 1984, a somewhat more efficient compression method\n   known as Modified
        Modified READ (MMR) was defined in the ITU-T T.6\n   Recommendation [T.6].
        \ MMR was originally defined for use with Group\n   4 facsimile, so that this
        compression method has been commonly called\n   Group 4 compression.  In 1991,
        the MMR method was approved for use in\n   Group 3 facsimile and has since
        been widely utilized.\n   TIFF-F supports these three compression methods.
        \ The most commonly\n   used is the one-dimensional Modified Huffman (MH)
        compression method.\n   This is specified by setting the Compression field
        value to 3 and\n   then setting bit 0 of the T4Options field to 0.  Alternatively,
        the\n   two dimensional Modified READ (MR) method, which is much less\n   frequently
        used in historical TIFF-F implementations, may be selected\n   by setting
        bit 0 of the T4Options field to 1.  The value of Bit 2 in\n   this field is
        determined by the use of fill bits.\n   Depending upon the application, the
        more efficient two-dimensional\n   Modified Modified READ (MMR)compression
        method from T.6 may be\n   selected by setting the Compression field value
        to 4 and then setting\n   the first two bits (and all unused bits) of the
        T6Options field to 0.\n   More information to aid the implementor in making
        a compression\n   selection is contained in Section 4.5.2.\n   Baseline TIFF
        also permits use of Compression=2 to specify Modified\n   Huffman compression,
        but the data does not use EOLs.  As a result,\n   TIFF-F uses Compression=3
        instead of Compression=2 to specify\n   Modified Huffman compression.\n"
      title: 4.4.4.  Compression
    - contents:
      - "4.4.5.  Example Use of Page-quality Fields\n   Here are examples for writing
        the CleanFaxData, BadFaxLines, and\n   ConsecutiveBadFaxLines fields:\n   1.
        Facsimile hardware does not provide page-quality information: MUST\n      NOT
        write page-quality fields.\n   2. Facsimile hardware provides page-quality
        information, but reports\n      no bad lines.  Write only BadFaxLines = 0.\n
        \  3. Facsimile hardware provides page-quality information and reports\n      bad
        lines.  Write both BadFaxLines and ConsecutiveBadFaxLines.\n      Also write
        CleanFaxData = 1 or 2 if the hardware's regeneration\n      capability is
        known.\n   4. Source image data stream is error corrected or otherwise\n      guaranteed
        to be error free such as for a computer-generated file:\n      SHOULD NOT
        write page-quality fields.\n   TIFF Writers SHOULD only generate these fields
        when the image has\n   been generated from a fax image data stream where error
        correction,\n   e.g., Group 3 Error Correction Mode, was not used.\n"
      title: 4.4.5.  Example Use of Page-quality Fields
    - contents:
      - "4.4.6.  Practical Guidelines for Writing and Reading Multi-Page TIFF-F\n
        \       Files\n   Traditionally, TIFF-F has required readers and writers to
        be able to\n   handle multi-page TIFF-F files.  The experience of various
        TIFF-F\n   implementors has shown that implementing TIFF-F can be greatly\n
        \  simplified if certain practical guidelines are followed when writing\n
        \  multi-page TIFF-F files.\n   The structure for a multi-page TIFF-F file
        will include one IFD per\n   document page.  In this case, this IFD will define
        the attributes for\n   a single page.  A second simplifying guideline is that
        the writer of\n   TIFF-F files SHOULD present IFDs in the same order as the
        actual\n   sequence of pages.  (The pages are numbered within TIFF-F beginning\n
        \  with page 0 as the first page and then ascending (i.e., 0, 1,\n   2, ...).
        \ However, any field values over 4 bytes will be stored\n   separately from
        the IFD.  TIFF-F readers SHOULD expect IFDs to be\n   presented in page order
        but be able to handle exceptions.\n   Per [TIFF], the exact placement of image
        data is not specified.\n   However, the offsets for each image strip are defined
        from within\n   each IFD.  Where possible, another guideline for TIFF-F writers
        is\n   that the image data for each page of a multi-page document SHOULD be\n
        \  contained within a single strip (i.e., one image strip per fax page).\n
        \  A single image strip per page further simplifies TIFF-F file writing\n
        \  for applications such as store and forward messaging, where the file\n
        \  is usually prepared in advance of the transmission, but other\n   assumptions
        may apply for the size of the image strip for\n   applications that require
        \"streaming\" techniques (see section 4.4.7).\n   If a different image strip
        size guideline has been used (e.g.,\n   constant size for image strips that
        may be less than the page size),\n   this will immediately be evident from
        the values/offsets of the\n   fields related to strips.\n   Another simplifying
        guideline is that each IFD SHOULD be placed in\n   the TIFF-F file structure
        at a point preceding the image that the IFD\n   describes.\n   In addition,
        placing the image data in a physical order within the\n   TIFF file structure
        which is consistent with the logical page order\n   simplifies TIFF-F file
        writing and reading.  In practice, TIFF-F\n   readers will need to use the
        strip offsets to find the exact physical\n   location of the image data, whether
        or not it is presented in logical\n   page order.\n   If the image data is
        stored in multiple strips, then the strips\n   SHOULD occur in the file in
        the same order that the data they contain\n   occurs in the facsimile transmission,
        starting from the top of the\n   page.\n   TIFF-F writers MAY follow another
        simplifying guideline, in which the\n   IFD, the value data and the image
        data to which the IFD has offsets\n   precede the next image IFD.  However,
        this guideline has been relaxed\n   compared to the others given here.\n   In
        the case of the minimal profile, which is also the minimal subset\n   of Profile
        F, the SHOULDs and MAYs of these guidelines become SHALLs\n   (see Section
        3.5).\n   A TIFF-F file structured using the guidelines of this section will\n
        \  essentially consist of a linked list of IFDs, presented in ascending\n
        \  page order, each pointing to a single page of image data\n   (one strip
        per page), where the pages of image data are also placed\n   in a logical
        page order sequence within the TIFF-F file structure.\n   (The pages of image
        data may themselves be stored in a contiguous\n   manner, at the option of
        the implementor).\n"
      title: 4.4.6.  Practical Guidelines for Writing and Reading Multi-Page TIFF-F
    - contents:
      - "4.4.7.  Use of TIFF-F for Streaming Applications\n   TIFF-F has historically
        been used for handling fax image files in\n   applications such as store and
        forward messaging, where the entire\n   size of the file is known in advance.
        \ Although TIFF-F may also be\n   used as a file format for cases such as
        streaming applications,\n   assumptions differing from those provided in this
        section (e.g., the\n   entire size and number of pages within the image are
        not known in\n   advance) may be required.  As a result, a definition for
        the\n   streaming application of TIFF-F is beyond the scope of this document.\n"
      title: 4.4.7.  Use of TIFF-F for Streaming Applications
    title: 4.4.  Technical Implementation Issues
  - contents:
    - '4.5.  Implementation Warnings

      '
    - contents:
      - "4.5.1.  Uncompressed data\n   TIFF-F requires the ability to read and write
        at least one-\n   dimensional T.4 Huffman (\"compressed\") data.  Uncompressed
        data is\n   not allowed.  The \"Uncompressed\" bit in T4Options or T6Options
        must\n   be set to 0.\n"
      title: 4.5.1.  Uncompressed data
    - contents:
      - "4.5.2.  Encoding and Resolution\n   Since two-dimensional encoding is not
        required for Group 3\n   compatibility, some historic TIFF-F readers have
        not been able to\n   read such files.  The minimum subset of TIFF-F REQUIRES
        support for\n   one-dimensional (Modified Huffman) files, so this choice maximizes\n
        \  portability.  However, implementors seeking greater efficiency SHOULD\n
        \  use T.6 MMR compression when writing TIFF-F files.  Some TIFF-F\n   readers
        will also support two-dimensional Modified READ files.\n   Implementors who
        wish to have the maximum flexibility in reading\n   TIFF-F files should support
        all three of these compression methods\n   (MH, MR, and MMR).\n   Almost all
        facsimile products support both standard (98 dpi) vertical\n   resolution
        \ and \"fine\" (196 dpi) resolution.  Therefore, fine-\n   resolution files
        are quite portable in the real world.\n   In 1993, the ITU-T added support
        for higher resolutions in the T.30\n   recommendation, including 200 x 200,
        300 x 300, and 400 x 400 in dots\n   per inch-based units.  At the same time,
        support was added for metric\n   dimensions equivalent to the following inch-based
        resolutions: 391v x\n   204h and 391v x 408h.  Therefore, the full set of
        inch-based\n   equivalents of the new resolutions are supported in the TIFF-F\n
        \  writer, as they may appear in some image-data streams received from\n   Group
        3 facsimile devices.  However, many facsimile terminals and\n   older versions
        of TIFF-F readers are likely not to support these\n   higher resolutions.\n
        \  Per [T.4], it is permissible for applications to treat the following\n
        \  XResolution values as equivalent: <204,200> and <400,408>.\n   Similarly,
        the following YResolution values may also be treated as\n   equivalent:  <98,
        100>, <196, 200>, and <391, 400>.  These\n   equivalencies were allowed by
        [T.4] to permit conversions between\n   inch- and metric-based facsimile terminals.\n
        \  The optional support of metric-based resolutions in the TIFF-F reader\n
        \  (i.e., 77 x 38.5 cm) is included for completeness, as they are used\n   in
        some legacy TIFF-F applications, but this use is not recommended\n   for the
        creation of TIFF-F files by a writer.\n"
      title: 4.5.2.  Encoding and Resolution
    - contents:
      - "4.5.3.  EOL byte-aligned\n   The historical convention for TIFF-F has been
        that all EOLs in\n   Modified Huffman or Modified READ data must be byte-aligned.\n
        \  However, Baseline TIFF has permitted use of non byte-aligned EOLs by\n
        \  default, so that a large percentage of TIFF-F reader implementations\n
        \  support both conventions.  Therefore, the minimum subset of TIFF-F,\n   or
        Profile S, as defined in Section 3, includes support for both\n   byte-aligned
        and non-byte-aligned EOLs; see Section 3.2.2.\n   An EOL is said to be byte-aligned
        when Fill bits have been added as\n   necessary before EOL codes so that EOL
        always ends on a byte\n   boundary, thus ensuring an EOL sequence of a one
        byte preceded by a\n   zero nibble: xxxx0000 00000001.\n   Modified Huffman
        compression encodes bits, not bytes.  This means\n   that the end-of-line
        token may end in the middle of a byte.  In byte\n   alignment, extra zero
        bits (Fill) are added so that the first bit of\n   data following an EOL begins
        on a byte boundary.  In effect, byte\n   alignment relieves application software
        of the burden of bit-shifting\n   every byte while parsing scan-lines for
        line-oriented image\n   manipulation (such as writing a TIFF file).\n   For
        Modified READ compression, each line is terminated by an EOL and\n   a one-bit
        tag bit.  Per [T.4], the value of the tag bit is 0 if the\n   next line contains
        two-dimensional data and 1 if the next line is a\n   reference line.  To maintain
        byte alignment, fill bits are added\n   before the EOL/tag bit sequence so
        that the first bit of data\n   following an MR tag bit begins on a byte boundary.\n"
      title: 4.5.3.  EOL byte-aligned
    - contents:
      - "4.5.4.  EOL\n   As illustrated in FIGURE 1/T.4 in [T.4], MH-encoded facsimile\n
        \  documents begin with an EOL, which in TIFF-F may be byte-aligned.\n   The
        last line of the image is not terminated by an EOL.  Similarly,\n   respect,
        images encoded with Modified READ two-dimensional\n   compression begin with
        an EOL, followed by a tag bit.\n"
      title: 4.5.4.  EOL
    - contents:
      - "4.5.5.  RTC Exclusion\n   Aside from EOLs, TIFF-F files have historically
        only contained image\n   data.  This means that applications seeking to maintain
        strict\n   conformance with the rules in [TIFF] and compatibility with\n   historical
        TIFF-F SHOULD NOT include the Return To Control sequence\n   (RTC) (consisting
        of 6 consecutive EOLs) when writing TIFF-F files.\n   However, applications
        intended to support \"transparency\" of [T.4]\n   image data MAY include RTCs
        if the flag settings of the T4Options\n   field are set for non byte aligned
        MH or MR image data.  Implementors\n   of TIFF readers should also be aware
        that there are some existing\n   TIFF-F implementations that include the RTC
        sequence in MH/MR image\n   data.  Therefore, TIFF-F readers MUST be able
        to process files that\n   do not include RTCs and SHOULD be able to process
        files that do\n   include RTCs.\n"
      title: 4.5.5.  RTC Exclusion
    - contents:
      - "4.5.6.  Use of EOFB for T.6 Compressed Images\n   TIFF-F pages encoded with
        the T.6 Modified Modified READ compression\n   method MUST include an \"end-of-facsimile-block\"
        (EOFB) code at the\n   end of each coded strip.  Per [TIFF], the EOFB code
        is followed by\n   pad bits as needed to align on a byte boundary.  TIFF readers
        SHOULD\n   ignore any bits other than pad bits beyond the EOFB.\n"
      title: 4.5.6.  Use of EOFB for T.6 Compressed Images
    title: 4.5.  Implementation Warnings
  - contents:
    - "4.6.  Example Use of TIFF-F\n   The Profile F of TIFF (i.e., TIFF-F content)
      is a secondary component\n   of the VPIM Message, as defined in [VPIM 2].  Voice
      messaging systems\n   can often handle fax store-and-forward capabilities in
      addition to\n   traditional voice message store-and-forward functions. As a
      result,\n   TIFF-F fax messages can optionally be sent between compliant VPIM\n
      \  systems and may be rejected if the recipient system cannot deal with\n   fax.\n
      \  Refer to the VPIM Specification for proper usage of this content.\n"
    title: 4.6.  Example Use of TIFF-F
  - contents:
    - "4.7.  Profile F: Extended Black-and-white Fax Profile Summary\n   Recommended
      fields are shown with an asterisk (*).\n   Required fields or values are shown
      with a double asterisk (**).  If\n   the double asterisk is on the field name,
      then all the listed values\n   are required of implementations; if the double
      asterisks are in the\n   Values column, then only the values suffixed with a
      double asterisk\n   are required of implementations.\n   +---------------------------+--------------------------------+\n
      \  | Baseline Fields           |  Values                        |\n   +---------------------------+--------------------------------+\n
      \  | BitsPerSample             | 1**                            |\n   +---------------------------+--------------------------------+\n
      \  | Compression               | 3**: 1D Modified Huffman and   |\n   |                           |
      \     2D Modified READ coding   |\n   |                           | 4: 2D Modified
      Modified READ   |\n   |                           |    coding                      |\n
      \  +---------------------------+--------------------------------+\n   | DateTime*
      \                | {ASCII}: date/time in 24-hour  |\n   |                           |
      format \"YYYY:MM:DD HH:MM:SS\"   |\n   +---------------------------+--------------------------------+\n
      \  | FillOrder**               | 1: most significant bit first  |\n   |                           |
      2: least significant bit first |\n   +------------------------------------------------------------+\n
      \  | ImageDescription*         | {ASCII}: A string describing   |\n   |                           |
      the contents of the image.     |\n   +---------------------------+--------------------------------+\n
      \  | ImageWidth                | 1728**, 2048, 2432, 2592,      |\n   |                           |
      3072, 3456, 3648, 4096, 4864   |\n   +---------------------------+--------------------------------+\n
      \  | ImageLength**             | n: total number of scanlines   |\n   |                           |
      in image                       |\n   +---------------------------+--------------------------------+\n
      \  | NewSubFileType            | 2**: Bit 1 identifies single   |\n   |                           |
      page of a multi-page document  |\n   +---------------------------+--------------------------------+\n
      \  | Orientation               | 1**-8, Default 1               |\n   +---------------------------+--------------------------------+\n
      \  | PhotometricInterpretation | 0: pixel value 1 means black   |\n   |  **
      \                      | 1: pixel value 1 means white   |\n   +---------------------------+--------------------------------+\n
      \  | ResolutionUnit**          | 2: inch                        |\n   |                           |
      3: centimeter                  |\n   +------------------------------------------------------------+\n
      \  +---------------------------+--------------------------------+\n   | RowsPerStrip**
      \           | n: number of scanlines per     |\n   |                           |
      TIFF strip                     |\n   +---------------------------+--------------------------------+\n
      \  | SamplesPerPixel           | 1**                            |\n   +---------------------------+--------------------------------+\n
      \  | Software*                 | {ASCII}: name & release        |\n   |                           |
      number of creator software     |\n   +---------------------------+--------------------------------+\n
      \  | StripByteCounts**         | <n>: number or bytes in TIFF   |\n   |                           |
      strip                          |\n   +---------------------------+--------------------------------+\n
      \  | StripOffsets**            | <n>: offset from beginning of  |\n   |                           |
      file to each TIFF strip        |\n   +---------------------------+--------------------------------+\n
      \  | XResolution               | 200, 204**, 300, 400, 408      |\n   |                           |
      (written in pixels/inch)       |\n   +---------------------------+--------------------------------+\n
      \  | YResolution               | 98**, 196**, 100,              |\n   |                           |
      200, 300, 391, 400             |\n   |                           | (written
      in pixels/inch)       |\n   +---------------------------+--------------------------------+\n
      \  | Extension Fields                                           |\n   +---------------------------+--------------------------------+\n
      \  | T4Options                 | 0**: required if Compression   |\n   |                           |
      is Modified Huffman, EOLs are  |\n   |                           | not byte
      aligned               |\n   |                           | 1: required if Compression
      is  |\n   |                           | 2D Modified READ, EOLs are     |\n   |
      \                          | not byte aligned               |\n   |                           |
      4**: required if Compression   |\n   |                           | is Modified
      Huffman, EOLs are  |\n   |                           | byte aligned                   |\n
      \  +---------------------------+--------------------------------+\n   | T4Options
      (continued)     | 5: required if Compression     |\n   |                           |
      is 2D Modified READ, EOLs are  |\n   |                           | byte aligned
      \                  |\n   +---------------------------+--------------------------------+\n
      \  | T6Options                 | 0: required if Compression is  |\n   |                           |
      2D Modified Modified READ      |\n   +---------------------------+--------------------------------+\n
      \  | DocumentName*             | {ASCII}: name of scanned       |\n   |                           |
      document                       |\n   +---------------------------+--------------------------------+\n
      \  | PageNumber**              | n,m: page number followed by   |\n   |                           |
      total page count               |\n   +---------------------------+--------------------------------+\n
      \  +---------------------------+--------------------------------+\n   | New
      Fields                                                 |\n   +---------------------------+--------------------------------+\n
      \  | BadFaxLines*              | number of \"bad\" scanlines      |\n   |                           |
      encountered during reception   |\n   +---------------------------+--------------------------------+\n
      \  | CleanFaxData*             | 0: no \"bad\" lines              |\n   |                           |
      1: \"bad\" lines exist, but were |\n   |                           | regenerated
      by receiver        |\n   |                           | 2: \"bad\" lines exist,
      but have |\n   |                           | not been regenerated           |\n
      \  +---------------------------+--------------------------------+\n   | ConsecutiveBadFaxLines*
      \  | Max number of consecutive      |\n   |                           | \"bad\"
      lines received           |\n   +---------------------------+--------------------------------+\n
      \  | GlobalParametersIFD*      | IFD: global parameters IFD     |\n   +---------------------------+--------------------------------+\n
      \  | ProfileType*              | n: type of data stored in file |\n   +---------------------------+--------------------------------+\n
      \  | FaxProfile*               | n: ITU-compatible fax profile  |\n   +---------------------------+--------------------------------+\n
      \  | CodingMethods*            | n: compression algorithms used |\n   |                           |
      in file                        |\n   +---------------------------+--------------------------------+\n"
    title: '4.7.  Profile F: Extended Black-and-white Fax Profile Summary'
  title: '4.  Profile F: Extended Black-and-White fax profile'
- contents:
  - "5.  Profile J: Lossless JBIG Black-and-White Fax profile\n   This section defines
    the lossless JBIG black-and-white profile of\n   TIFF for facsimile, designated
    Profile J.  Implementations of this\n   profile are required to implement Profile
    S as well.\n   The previous section described the extended interchange set of
    TIFF\n   fields for black-and-white fax, which provided support for the MH,\n
    \  MR, and MMR compression of black-and-white images.  This section adds\n   a
    profile with JBIG compression capability.\n"
  - contents:
    - "5.1.  Overview\n   This section describes a black-and-white profile that uses
      JBIG\n   compression.  The ITU-T has approved the single-progression\n   sequential
      mode of JBIG [T.82] for Group 3 facsimile.  JBIG coding\n   offers improved
      compression for halftoned originals.  JBIG\n   compression is used in accordance
      with the application rules given in\n   ITU-T Rec. T.85 [T.85].\n   This profile
      is essentially the extended black-and-white profile with\n   JBIG compression
      used instead of MH, MR, or MMR.\n"
    title: 5.1.  Overview
  - contents:
    - "5.2.  Required TIFF Fields\n   This section lists the required fields and the
      values they must have\n   to be ITU-compatible.  Besides the fields listed in
      Section 2.2.1,\n   the extended black-and-white fax profile requires the following\n
      \  fields.\n"
    - contents:
      - "5.2.1.  Baseline fields\n   The TIFF fields that SHALL be used in this profile
        are the same as\n   those described in Section 4.2.1 for the extended black-and-white\n
        \  profile, with two exceptions: the following text replaces the text in\n
        \  Section 4.2.1 for the Compression and FillOrder fields.\n   Compression(259)
        = 9.\n   SHORT\n      RequiredByTIFFBaseline\n      9 = JBIG coding.  This
        is a TIFF extension value.\n      Default = 1 (and is not applicable; field
        must be specified).\n      Profile J uses ITU-T T.85 profile of T.82; see
        T82Options field.\n   FillOrder(266) = 1, 2.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     1 = Pixels are arranged within a byte such that pixels with lower\n
        \     values are stored in the higher-order bits of the byte, i.e., most\n
        \     significant bit first (MSB).\n      2 = Pixels are arranged within a
        byte such that pixels with lower\n      column values are stored in the lower-order
        bits of the bytes,\n      i.e., least significant bit first (LSB).\n      Profile
        J readers must be able to read data in both bit orders.\n"
      title: 5.2.1.  Baseline fields
    - contents:
      - "5.2.2.  Extension fields\n   Same fields as those in Section 2.2.1.\n"
      title: 5.2.2.  Extension fields
    - contents:
      - "5.2.3.  New fields\n   T82Options(435) = 0\n   LONG\n      Required when
        Compression = 9\n      Individual bits are set to indicate the applicable
        profile of JBIG\n      coding; all bits set to 0 indicates ITU-T T.85 profile
        of T.82;\n      Other values are for further study.\n      Default is all
        bits 0, and field may be omitted if this is the\n      value.  (Field may
        be omitted in Profile J files.)\n   Note: A T.82 decoder can decode a T.85-encoded
        image when it handles\n   the NEWLE marker code as described Corrigendum 1
        in [T.85].\n"
      title: 5.2.3.  New fields
    title: 5.2.  Required TIFF Fields
  - contents:
    - "5.3.  Recommended TIFF Fields\n   See Sections 2.2.3 and 2.2.4.\n"
    title: 5.3.  Recommended TIFF Fields
  - contents:
    - "5.4.  Profile J: Lossless JBIG Black-and-white Fax Profile Summary\n   Recommended
      fields are shown with an asterisk (*).\n   Required fields or values are shown
      with a double asterisk (**).  If\n   the double asterisk is on the field name,
      then all the listed values\n   are required of implementations; if the double
      asterisks are in the\n   Values column, then only the values suffixed with a
      double asterisk\n   are required of implementations.\n"
    - '+---------------------------+--------------------------------+

      '
    - '| Baseline Fields           |  Values                        |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| BitsPerSample             | 1**                            |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| Compression               | 9**: JBIG coding               |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| DateTime*                 | {ASCII}: date/time in 24-hour  |

      '
    - '|                           | format "YYYY:MM:DD HH:MM:SS"   |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| FillOrder**               | 1: most significant bit first  |

      '
    - '|                           | 2: least significant bit first |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| ImageDescription*         | {ASCII}: A string describing   |

      '
    - '|                           | the contents of the image      |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| ImageWidth                | 1728**, 2048, 2432, 2592,      |

      '
    - '|                           | 3072, 3456, 3648, 4096, 4864   |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| ImageLength**             | n: total number of scanlines   |

      '
    - '|                           | in image                       |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| NewSubFileType**          | 2: Bit 1 identifies single     |

      '
    - '|                           | page of a multi-page document  |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| Orientation               | 1**-8, Default 1               |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| PhotometricInterpretation | 0: pixel value 1 means black   |

      '
    - '|  **                       | 1: pixel value 1 means white   |

      '
    - '+---------------------------+--------------------------------+

      '
    - '+---------------------------+--------------------------------+

      '
    - '| ResolutionUnit**          | 2: inch                        |

      '
    - '|                           | 3: centimeter                  |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| RowsPerStrip**            | n: number of scanlines per     |

      '
    - '|                           | TIFF strip                     |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| SamplesPerPixel**         | 1                              |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| Software*                 | {ASCII}: name & release        |

      '
    - '|                           | number of creator software     |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| StripByteCounts**         | <n>: number of bytes in TIFF   |

      '
    - '|                           | strip                          |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| StripOffsets**            | <n>: offset from beginning of  |

      '
    - '|                           | file to each TIFF strip        |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| XResolution               | 200, 204**, 300, 400, 408      |

      '
    - '|                           | (written in pixels/inch)       |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| YResolution               | 98**, 196**, 100,              |

      '
    - '|                           | 200, 300, 391, 400             |

      '
    - '|                           | (written in pixels/inch)       |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| Extension Fields                                           |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| DocumentName*             | {ASCII}: name of document      |

      '
    - '|                           |  scanned                       |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| PageNumber**              | n,m: page number followed by   |

      '
    - '|                           | total page count               |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| New Fields                                                 |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| GlobalParametersIFD*      | IFD: global parameters IFD     |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| T82Options**              | 0: T.85 profile of T.82        |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| ProfileType*              | n: type of data stored in file |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| FaxProfile*               | n: ITU-compatible fax profile  |

      '
    - '+---------------------------+--------------------------------+

      '
    - '| CodingMethods*            | n: compression algorithms used |

      '
    - '|                           | in file                        |

      '
    - '+---------------------------+--------------------------------+

      '
    title: '5.4.  Profile J: Lossless JBIG Black-and-white Fax Profile Summary'
  title: '5.  Profile J: Lossless JBIG Black-and-White Fax profile'
- contents:
  - '6.  Profile C: Base Color Fax profile

    '
  - contents:
    - "6.1.  Overview\n   This section defines the lossy color profile of TIFF for
      facsimile,\n   designated Profile C.  Implementations of this profile are required\n
      \  to also implement Profile S as well.\n   This is the base profile for color
      and grayscale facsimile, which\n   means that all applications that support
      color fax must support this\n   profile.  The basic approach is the lossy JPEG
      compression [T.4,\n   Annex E; T.81] of L*a*b* color data [T.42].  Grayscale
      applications\n   use the L* lightness component; color applications use the
      L*, a* and\n   b* components.\n   This profile uses a new PhotometricInterpretation
      field value to\n   describe the L*a*b* encoding specified in [T.42].  This encoding\n
      \  differs in two ways from the other L*a*b* encodings used in TIFF\n   [TIFF,
      TTN1]: it specifies a different default range for the a* and\n   b* components,
      based on a comprehensive evaluation of existing\n   hardcopy output, and it
      optionally allows selectable range for the\n   L*, a* and b* components.\n"
    title: 6.1.  Overview
  - contents:
    - "6.2.  Required TIFF Fields\n   This section lists the required fields, in addition
      to those given in\n   Section 2.2.1, and the values they must support to be
      compatible with\n   ITU-T Rec. T.42 and Annex E in ITU-T Rec. T.4.\n"
    - contents:
      - "6.2.1.  Baseline Fields\n   ImageWidth(256).\n   SHORT or LONG\n      This
        profile supports the following fixed page widths: 864, 1024,\n      1216,
        1728, 2048, 2432, 2592, 3072, 3456, 3648, 4096, 4864.\n   NewSubFileType(254)
        = (Bit 1=1).\n   LONG\n      RequiredByTIFFforFAX\n      Bit 1 is 1 if the
        image is a single page of a multi-page document.\n      Default = 0 (no subfile
        bits on, so may not be omitted for fax).\n   BitsPerSample(258) = 8.\n   SHORT\n
        \     Count = SamplesPerPixel\n      The base color fax profile requires 8
        bits per sample.\n   Compression(259) = 7.\n   SHORT\n      Base color fax
        profile uses Baseline JPEG compression.  Value 7\n      represents JPEG compression
        as specified in [TTN2].\n   FillOrder(266) = 1 , 2.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Profile C readers must be able to read data in both bit orders,\n      but
        the vast majority of facsimile products store data LSB first,\n      exactly
        as it appears on the telephone line.\n         1 = Most Significant Bit first.\n
        \        2 = Least Significant Bit first.\n   PhotometricInterpretation(262)
        = 10.\n   SHORT\n      Base color fax profile requires pixel values to be
        stored with the\n      CIE L*a*b* encoding defined in ITU-T Rec. T.42.  This
        encoding is\n      indicated by the PhotometricInterpretation value 10, referred
        to\n      as ITULAB.  With this encoding, the minimum sample value is\n      mapped
        to 0, and the maximum sample value is mapped to (2^n - 1),\n      i.e., the
        maximum value, where n is the BitsPerSample value.  The\n      conversion
        from unsigned ITULAB-encoded samples values to signed\n      CIE L*a*b* values
        is determined by the Decode field; see Section\n      6.2.3.\n   NOTE: PhotometricInterpretation
        values 8 and 9 specify encodings for\n   use with 8-bit-per-sample CIE L*a*b*
        [TIFF] and ICC L*a*b* [TTN1]\n   data, but they are fixed encodings, which
        use different minimum and\n   maximum samples than the T.42 default encoding.
        \ As currently\n   defined, they are not able to represent fax-encoded L*a*b*
        data.\n   ResolutionUnit(296) = 2.\n   SHORT\n      The unit of measure for
        resolution. 2 = inch.\n      ITU-T standards only specify inch-based resolutions
        for color fax.\n      Default = 2 (field may be omitted if this is the value).\n
        \  SamplesPerPixel(277) = 1, 3.\n   SHORT\n      1: L* component only, required
        in base color profile\n      3: L*, a*, b* components\n      Encoded according
        to PhotometricInterpretation field\n   XResolution(282) = 100, 200, 300, 400.\n
        \  RATIONAL\n   YResolution(283) = 100, 200, 300, 400.\n   RATIONAL\n      The
        resolution of the image is expressed in pixels per resolution\n      unit.
        \ In pixels per inch, allowed XResolution values are 100,\n      200, 300,
        and 400.  The base color fax profile requires the pixels\n      to be square,
        hence YResolution must equal XResolution.  Base\n      resolution is 200 pixels
        per inch and SHALL be supported by all\n      implementations of this profile.\n
        \  NOTE: The functional equivalence of inch-based and metric-based\n   resolutions
        is maintained, per Annex E.6.5 in [T.4].  See table in\n   Section 2.2.2.\n
        \  NOTE: Not all combinations of XResolution, YResolution and ImageWidth\n
        \  are legal.  The following table gives the legal combinations for\n   inch-based
        resolutions and the corresponding paper sizes [T.30].\n   +--------------------------------+---------------------------+\n
        \  |   XResolution x YResolution    |         ImageWidth        |\n   +--------------------------------+---------------------------+\n
        \  |           100 x 100            |   864   |  1024  |  1216  |\n   +--------------------------------+---------------------------+\n
        \  |           200 x 200            |  1728   |  2048  |  2432  |\n   +--------------------------------+---------------------------+\n
        \  |           300 x 300            |  2592   |  3072  |  3648  |\n   +--------------------------------+---------------------------+\n
        \  |           400 x 400            |  3456   |  4096  |  4864  |\n   +--------------------------------+---------------------------+\n
        \                                   |Letter,A4|   B4   |   A3   |\n                                    |
        \ Legal  |        |        |\n                                    +---------------------------+\n
        \                                   |         Paper Size        |\n                                    +---------------------------+\n"
      title: 6.2.1.  Baseline Fields
    - contents:
      - "6.2.2.  Extension Fields\n   The JPEG compression standard allows for the
        a*b* chroma components\n   of an image to be subsampled relative to the L*
        lightness component.\n   The extension fields ChromaSubSampling and ChromaPositioning
        define\n   the subsampling.  They are the same as YCbCrSubSampling and\n   YCbCrPositioning
        in [TIFF] but have been renamed to reflect their\n   applicability to other
        color spaces.\n   ChromaSubSampling(530).\n   SHORT\n      Count = 2\n      Specifies
        the subsampling factors for the chroma components of a\n      L*a*b* image.
        \ The two subfields of this field,\n      ChromaSubsampleHoriz and ChromaSubsampleVert,
        specify the\n      horizontal and vertical subsampling factors respectively.\n
        \     SHORT 0: ChromaSubsampleHoriz = 1, 2.\n      1: equal numbers of lightness
        and chroma samples horizontally,\n      2: twice as many lightness samples
        as chroma samples horizontally,\n      SHORT 1: ChromaSubsampleVert = 1, 2.\n
        \     1: equal numbers of lightness and chroma samples vertically,\n      2:
        twice as many lightness samples as chroma samples vertically,\n      The default
        value for ChromaSubSampling is (2,2), which is the\n      default for chroma
        subsampling in color fax [T.4, Annex E].  No\n      chroma subsampling, i.e.,
        ChromaSubSampling = (1,1), is an option\n      for color fax.\n   ChromaPositioning(531)
        = 1.\n   SHORT\n      Specifies the spatial positioning of chroma components
        relative to\n      the lightness component.\n      1: centered, value of 1
        means chrominance samples are spatially\n      offset and centered with respect
        to luminance samples.  See the\n      current TIFF specification under YcbCr
        positioning for further\n      information.\n      Default = 1, which is what
        ITU-T T.4, Annex E specifies.\n"
      title: 6.2.2.  Extension Fields
    - contents:
      - "6.2.3.  New Fields\n   Decode(433).\n   SRATIONAL\n      Count = 2 * SamplesPerPixel\n
        \     Describes how to map image sample values into the range of values\n
        \     appropriate for the current color space.  In general, the values\n      are
        taken in pairs and specify the minimum and maximum output\n      value for
        each color component.  For the base color fax profile,\n      Decode has a
        count of 6 values and maps the unsigned ITULAB-\n      encoded sample values
        (Lsample, asample, bsample) to signed L*a*b*\n      values, as follows:\n
        \        L* = Decode[0] + Lsample x (Decode[1]-Decode[0])/(2^n -1)\n         a*
        = Decode[2] + asample x (Decode[3]-Decode[2])/(2^n -1)\n         b* = Decode[4]
        + bsample x (Decode[5]-Decode[4])/(2^n -1)\n      where Decode[0], Decode[2]
        and Decode[4] are the minimum values\n      for L*, a*, and b*; Decode[1],
        Decode[3] and Decode[5] are the\n      maximum values for L*, a*, and b*;
        and n is the BitsPerSample.\n      When n=8,=20  L*=Decode[0] when Lsample=0
        and L*=Decode[1] when\n      Lsample=255.\n   ITU-T Rec. T.42 specifies the
        ITULAB encoding in terms of a range and\n   offset for each component, which
        are related to the minimum and\n   maximum values as follows:\n      minimum
        = - (range x offset) / 2^n - 1\n      maximum = minimum + range\n   The Decode
        field default values depend on the color space.  For the\n   ITULAB color
        space encoding, the default values correspond to the\n   base range and offset,
        as specified in ITU-T Rec. T.42 [T.42].  The\n   following table gives the
        base range and offset values for\n   BitsPerSample=8, and the corresponding
        default minimum and maximum\n   default values for the Decode field, calculated
        using the equations\n   above when PhotometricInterpetation=10.\n   Refer
        to ITU-T Rec. T.42 [T.42] to calculate the range and offset,\n   and hence
        the minimum and maximum values, for other BitsPerSample\n   values.\n                      +-----------------------------------------------+\n
        \                     | ITU-T Rec. T.42  |           Decode           |\n"
      - '+---------+-----------|   base values    |       default values       |

        '
      - '| BitsPer + Component +------------------+----------------------------+

        '
      - '| -Sample |           |  Range | Offset  |      Min     |     Max     |

        '
      - '+---------+-----------+--------+---------+--------------+-------------+

        '
      - '|    8    |    L*     |   100  |    0    |       0      |     100     |

        '
      - '|         +-----------+--------+---------+--------------+-------------+

        '
      - '|         |    a*     |   170  |   128   |  -21760/255  |  21590/255  |

        '
      - '|         +-----------+--------+---------+--------------+-------------+

        '
      - '|         |    b*     |   200  |    96   |  -19200/255  |  31800/255  |

        '
      - "+---------+-----------+--------+---------+--------------+-------------+\n
        \  For example, when PhotometricInterpretation=10 and BitsPerSample=8,\n   the
        default value for Decode is (0, 100, -21760/255, 21590/255,\n   -19200/255,
        31800/255).  For guidelines on the use of the Decode\n   field, see section
        5.2.2 of [GUIDE].\n"
      title: 6.2.3.  New Fields
    title: 6.2.  Required TIFF Fields
  - contents:
    - "6.3.  Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
    title: 6.3.  Recommended TIFF Fields
  - contents:
    - "6.4.  Profile C: Base Color Fax Profile Summary\n   Recommended fields are
      shown with an asterisk (*).\n   Required fields or values are shown with a double
      asterisk (**).  If\n   the double asterisk is on the field name, then all the
      listed values\n   are required of implementations; if the double asterisk is
      in the\n   Values column, then only the values suffixed with a double asterisk\n
      \  are required of implementations.\n   +---------------------------+--------------------------------+\n
      \  | Baseline Fields           | Values                         |\n   +---------------------------+--------------------------------+\n
      \  | BitsPerSample             | 8**: 8 bits per color sample   |\n   +---------------------------+--------------------------------+\n
      \  | Compression**             | 7: JPEG                        |\n   +---------------------------+--------------------------------+\n
      \  | DateTime*                 | {ASCII}: date/time in 24-hour  |\n   |                           |
      format \"YYYY:MM:DD HH:MM:SS\"   |\n   +---------------------------+--------------------------------+\n
      \  | FillOrder**               | 1: most significant bit first  |\n   |                           |
      2: least significant bit first |\n   +---------------------------+--------------------------------+\n
      \  | ImageDescription*         | {ASCII}: A string describing   |\n   |                           |
      the contents of the image      |\n   +---------------------------+--------------------------------+\n
      \  | ImageWidth                | 864, 1024, 1216, 1728**, 2048  |\n   |                           |
      2432, 2592, 3072, 3456, 3648   |\n   |                           | 4096, 4864
      \                    |\n   +---------------------------+--------------------------------+\n
      \  | ImageLength**             | n: total number of scanlines   |\n   |                           |
      in image                       |\n   +---------------------------+--------------------------------+\n
      \  | NewSubFileType**          | 2: Bit 1 identifies single page|\n   |                           |
      of a multi-page document       |\n   +---------------------------+--------------------------------+\n
      \  | Orientation               | 1**-8, Default 1               |\n   +---------------------------+--------------------------------+\n
      \  +------------------------------------------------------------+\n   | PhotometricInterpretation
      | 10**: ITULAB                   |\n   +---------------------------+--------------------------------+\n
      \  | ResolutionUnit**          | 2: inch                        |\n   +---------------------------+--------------------------------+\n
      \  | RowsPerStrip**            | n: number of scanlines per     |\n   |                           |
      TIFF strip                     |\n   +---------------------------+--------------------------------+\n
      \  | SamplesPerPixel           | 1**: L* (lightness)            |\n   |                           |
      3: LAB                         |\n   +---------------------------+--------------------------------+\n
      \  | Software*                 | {ASCII}: name & release number |\n   |                           |
      of creator software            |\n   +---------------------------+--------------------------------+\n
      \  | StripByteCounts**         | <n>: number or bytes in        |\n   |                           |
      TIFF strip                     |\n   +---------------------------+--------------------------------+\n
      \  | StripOffsets**            | <n>: offset from beginning     |\n   |                           |
      of file to each TIFF strip     |\n   +---------------------------+--------------------------------+\n
      \  | XResolution               | 100, 200**, 300, 400 (written  |\n   |                           |
      in pixels/inch)                |\n   +---------------------------+--------------------------------+\n
      \  | YResolution               | 100, 200**, 300, 400           |\n   |                           |
      (must equal XResolution)       |\n   +---------------------------+--------------------------------+\n
      \  | Extension Fields                                           |\n   +---------------------------+--------------------------------+\n
      \  | DocumentName*             | {ASCII}: name of scanned       |\n   |                           |
      document                       |\n   +---------------------------+--------------------------------+\n
      \  | PageNumber**              | n,m: page number followed by   |\n   |                           |
      total page count               |\n   +---------------------------+--------------------------------+\n
      \  | ChromaSubSampling         | (1,1), (2, 2)**                |\n   |                           |
      (1, 1): equal numbers of       |\n   |                           | lightness
      and chroma samples   |\n   |                           | horizontally and vertically
      \   |\n   |                           | (2, 2): twice as many lightness|\n   |
      \                          | samples as chroma samples      |\n   |                           |
      horizontally and vertically    |\n   +---------------------------+--------------------------------+\n
      \  | ChromaPositioning         | 1**: centered                  |\n   +------------------------------------------------------------+\n
      \  +---------------------------+--------------------------------+\n   | New
      Fields                                                 |\n   +---------------------------+--------------------------------+\n
      \  | Decode**                  | minL, maxL, mina, maxa, minb,  |\n   |                           |
      maxb: minimum and maximum      |\n   |                           | values for
      L*a*b*              |\n   +---------------------------+--------------------------------+\n
      \  | GlobalParametersIFD*      | IFD: IFD containing            |\n   |                           |
      global parameters              |\n   +---------------------------+--------------------------------+\n
      \  | ProfileType*              | n: type of data stored in      |\n   |                           |
      TIFF file                      |\n   +---------------------------+--------------------------------+\n
      \  | FaxProfile*               | n: ITU-compatible fax profile  |\n   +---------------------------+--------------------------------+\n
      \  | CodingMethods*            | n: compression algorithms      |\n   |                           |
      used in file                   |\n   +---------------------------+--------------------------------+\n
      \  | VersionYear*              | byte sequence: year of ITU std |\n   +---------------------------+--------------------------------+\n"
    title: '6.4.  Profile C: Base Color Fax Profile Summary'
  title: '6.  Profile C: Base Color Fax profile'
- contents:
  - "7.  Profile L: Lossless Color Profile\n   This section defines the lossless color
    profile of TIFF for\n   facsimile, designated Profile L.  Implementations of this
    profile are\n   required to also implement Profiles S and C as well.\n"
  - contents:
    - "7.1.  Overview\n   This profile, specified in [T.43] and [T.4] Annex G, uses
      JBIG to\n   code three types of color and grayscale images losslessly: one bit\n
      \  per color CMY, CMYK, and RGB images; a palettized (i.e., mapped)\n   color
      image; and continuous tone color and grayscale images.  The\n   last two are
      multi-level and use the L*a*b* encoding specified in\n   [T.42].\n"
    - contents:
      - "7.1.1.  Color Encoding\n   While under development, ITU-T Rec. T.43 was called
        T.Palette, as one\n   of its major additions was palettized color images.
        \ Baseline TIFF\n   only allows RGB color maps, but ITU-T Rec. T.43 requires
        L*a*b* color\n   maps, using the encoding specified in ITU-T Rec. T.42.  Palette
        color\n   images are expressed with indices (bits per sample) of 12 bits or\n
        \  less, or optionally 13 to 16 bits, per [T.43] and Annex G in [T.4].\n   Profile
        L files use the color table in the T.43 data stream rather\n   than the TIFF
        ColorMap field.\n   Enabling T.43 color maps in TIFF requires the extension
        field\n   Indexed, as defined in [TTN1], and the PhotometricInterpretation\n
        \  field value 10, as defined in Section 6.2.1.  The following table\n   shows
        the corresponding PhotometricInterpretation, SamplesPerPixel,\n   BitsPerSample,
        and Indexed field values for the different T.43 image\n   types.\n   +----------------------------------------------------------+\n
        \  | Image Type |PhotometricIn| Samples  | Bits Per | Indexed |\n   |            |-terpretation|
        Per Pixel|  Sample  |         |\n   |------------+-------------+----------+----------+---------|\n
        \  |     RGB    |    2=RGB    |     3    |    1     |    0    |\n   +----------------------------------------------------------+\n
        \  |     CMY    |    5=CMYK   |     3    |    1     |    0    |\n   +------------+-------------+----------+----------+---------+\n
        \  |     CMYK   |    5=CMYK   |     4    |    1     |    0    |\n   +------------+-------------+----------+----------+---------+\n
        \  |   Palette  |  10=ITULAB  |     1    |    n     |    1    |\n   +------------+-------------+----------+----------+---------+\n
        \  |  Grayscale |  10=ITULAB  |     1    |2-8, 9-12 |    0    |\n   +------------+-------------+----------+----------+---------+\n
        \  |    Color   |  10=ITULAB  |     3    |2-8, 9-12 |    0    |\n   +------------+-------------+----------+----------+---------+\n"
      title: 7.1.1.  Color Encoding
    - contents:
      - "7.1.2.  JBIG Compression\n   T.43 uses the single-progression sequential
        mode of JBIG, defined in\n   ITU-T Rec. T.82.  (Other compression methods
        are for further study.)\n   To code multi-level images using JBIG, which is
        a bi-level\n   compression method, an image is resolved into a set of bit-planes,\n
        \  and each bit-plane is then JBIG compressed.  For continuous-tone\n   color
        and grayscale images, Gray code conversion is used.  The Gray\n   code conversion
        is part of the data-stream encoding and is therefore\n   invisible to TIFF.\n"
      title: 7.1.2.  JBIG Compression
    title: 7.1.  Overview
  - contents:
    - "7.2.  Required TIFF Fields\n   This section lists the required fields, in addition
      to those in\n   Section 2.2.1, and the values they must have to be compatible
      with\n   ITU-T Rec. T.43.\n"
    - contents:
      - "7.2.1.  Baseline Fields\n   ImageWidth(256).\n   SHORT or LONG\n      Same
        page widths as the base color profile; see Section 6.2.1.\n      NewSubFileType(254)
        = (Bit 1=1).\n   LONG\n      RequiredByTIFFforFAX\n      Bit 1 is 1 if the
        image is a single page of a multi-page document.\n      Default = 0 (no subfile
        bits on, so may not be omitted for fax).\n   BitsPerSample(258) = 1, 2 - 8,
        9 - 12.\n   SHORT\n      Count = SamplesPerPixel\n      RGB, CMY, CMYK: 1
        bit per sample\n      Continuous tone (L*a*b*): 2 - 8 bits per sample, 9 -
        12 bits\n      optional.  Palette color: 12 or fewer bits per sample.\n      Note:
        More than 8 bits per sample is not baseline TIFF.\n   Compression(259) = 10.\n
        \  SHORT\n      10: ITU-T Rec. T.43 representation, using ITU-T Rec. T.82
        (JBIG)\n      coding\n   FillOrder(266) = 1 , 2.\n   SHORT\n      RequiredByTIFFBaseline\n
        \     Profile L readers must be able to read data in both bit orders,\n      but
        the vast majority of facsimile products store data LSB\n      first, exactly
        as it appears on the telephone line.\n         1 = Most Significant Bit first.\n
        \        2 = Least Significant Bit first.\n   PhotometricInterpretation(262)
        = 2, 5, 10.\n   SHORT\n      2: RGB\n      5: CMYK, including CMY\n      10:
        ITULAB\n      Image data may also be stored as palette-color images, where
        pixel\n      values are represented by a single component that is an index
        into\n      a color map using the ITULAB encoding.  This color map is\n      specified
        by the color palette table embedded in the image data\n      stream.  To use
        palette-color images, set the\n      PhotometricInterpretation to 10, SamplesPerPixel
        to 1, Indexed to\n      1, and use the color map in the data stream.  See
        Section 7.1.1\n      for discussion of the color encoding.\n   ResolutionUnit(296)
        = 2.\n   SHORT\n      The unit of measure for resolution. 2 = inch.\n      ITU-T
        standards only specify inch-based resolutions for color fax.\n      Default
        = 2 (field may be omitted if this is the value).\n   SamplesPerPixel(277)
        = 1, 3, 4.\n   SHORT\n      1: Palette-color image, or L*-only if Indexed
        = 0 and\n         PhotometricInterpretation is 10 (ITULAB).\n      3: RGB,
        or L*a*b*, or CMY if PhotometricInterpretation is 5\n      (CMYK).\n      4:
        CMYK.\n   XResolution(282) = 100, 200, 300, 400.\n   RATIONAL\n   YResolution(283)
        = 100, 200, 300, 400.\n   RATIONAL\n      The resolution of the image is expressed
        in pixels per resolution\n      unit.  In pixels per inch, allowed XResolution
        values are 100,\n      200, 300, and 400.  The lossless color fax profile
        requires the\n      pixels to be square, hence YResolution must equal XResolution.\n
        \     Base resolution is 200 pixels per inch.\n"
      title: 7.2.1.  Baseline Fields
    - contents:
      - "7.2.2.  Extension Fields\n   Indexed(346) = 0, 1.\n   SHORT\n      0: not
        a palette-color image.\n      1: palette-color image.\n      This field is
        used to indicate that each sample value is an index\n      into an array of
        color values specified in the image data stream.\n      Because the color
        map is embedded in the image data stream, the\n      ColorMap field is not
        used in Profile L.  Lossless color fax\n      profile supports palette-color
        images with the ITULAB encoding.\n      The SamplesPerPixel value must be
        1.\n"
      title: 7.2.2.  Extension Fields
    - contents:
      - "7.2.3.  New Fields\n   Decode(433)\n   SRATIONAL\n      Decode is used in
        connection with the ITULAB encoding of image\n      data; see Section 6.2.3.\n"
      title: 7.2.3.  New Fields
    title: 7.2.  Required TIFF Fields
  - contents:
    - "7.3.  Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
    title: 7.3.  Recommended TIFF Fields
  - contents:
    - "7.4.  Profile L: Lossless Color Fax Profile Summary\n   Recommended fields
      are shown with an asterisk (*).\n   Required fields or values are shown with
      a double asterisk (**).  If\n   the double asterisk is on the field name, then
      all the listed values\n   are required of implementations; if the double asterisks
      are in the\n   Values column, then only the values suffixed with a double asterisk\n
      \  are required of implementations.\n   +--------------------+--------------------------------------+\n
      \  |   Baseline Fields  |             Values                   |\n   +--------------------+--------------------------------------+\n
      \  | BitsPerSample      | 1: Binary RGB, CMY(K)                |\n   |                    |
      8**: 8 bits per color sample         |\n   |                    | 9 - 12: optional
      \                    |\n   +--------------------+--------------------------------------+\n
      \  | Compression        | 10**: JBIG, per T.43                 |\n   +--------------------+--------------------------------------+\n
      \  | DateTime*          | {ASCII}:  date/time in the 24-hour   |\n   |                    |
      format \"YYYY:MM:DD HH:MM:SS\"         |\n   +--------------------+--------------------------------------+\n
      \  | FillOrder**        | 1: Most significant bit first        |\n   |                    |
      2: Least significant bit first       |\n   +--------------------+--------------------------------------+\n
      \  | ImageDescription*  | {ASCII}: A string describing the     |\n   |                    |
      contents of the image                |\n   +--------------------+--------------------------------------+\n
      \  | ImageWidth         | 864, 1024, 1216, 1728**, 2048, 2432, |\n   |                    |
      2592, 3072, 3456, 3648, 4096, 4864   |\n   +--------------------+--------------------------------------+\n
      \  | ImageLength**      | n: total number of scanlines in image|\n   +--------------------+--------------------------------------+\n
      \  | NewSubFileType     | 2**: Bit 1 identifies single page of |\n   |                    |
      a multi-page document                |\n   +--------------------+--------------------------------------+\n
      \  +--------------------+--------------------------------------+\n   | Orientation
      \       | 1**-8, Default 1                     |\n   +--------------------+--------------------------------------+\n
      \  | PhotometricInter-  | 2: RGB                               |\n   | pretation
      \         | 5: CMYK                              |\n   |                    |
      10**: ITULAB                         |\n   +--------------------+--------------------------------------+\n
      \  | ResolutionUnit**   | 2: inch                              |\n   +--------------------+--------------------------------------+\n
      \  | RowsPerStrip**     | n: number of scanlines per TIFF strip|\n   +--------------------+--------------------------------------+\n
      \  | SamplesPerPixel    | 1**: L* (lightness)                  |\n   |                    |
      3: LAB, RGB, CMY                     |\n   |                    | 4: CMYK                              |\n
      \  +--------------------+--------------------------------------+\n   | Software*
      \         | {ASCII}: name & release number of    |\n   |                    |
      creator software                     |\n   +--------------------+--------------------------------------+\n
      \  | StripByteCounts**  | <n>: number or bytes in TIFF strip   |\n   +--------------------+--------------------------------------+\n
      \  | StripOffsets**     | <n>: offset from beginning of file to|\n   |                    |
      each TIFF strip                      |\n   +--------------------+--------------------------------------+\n
      \  | XResolution        | 100, 200**, 300, 400 (pixels/inch)   |\n   +--------------------+--------------------------------------+\n
      \  | YResolution        | equal to XResolution (pixels must be |\n   |                    |
      square)                              |\n   +--------------------+--------------------------------------+\n
      \  | Extension Fields                                          |\n   +--------------------+--------------------------------------+\n
      \  | DocumentName*      | {ASCII}: name of scanned document    |\n   +--------------------+--------------------------------------+\n
      \  | PageNumber**       | n,m: page number followed by total   |\n   |                    |
      page count                           |\n   +--------------------+--------------------------------------+\n
      \  | Indexed            | 0: not a palette-color image         |\n   |                    |
      1: palette-color image               |\n   +--------------------+--------------------------------------+\n
      \  | New Fields                                                |\n   +--------------------+--------------------------------------|\n
      \  | Decode             | minL, maxL, mina, maxa, minb, maxb:  |\n   |                    |
      minimum and maximum values for L*a*b*|\n   +--------------------+--------------------------------------+\n
      \  | GlobalParameters   | IFD: global parameters IFD           |\n   | IFD*
      \              |                                      |\n   +-----------------------------------------------------------+\n
      \  +--------------------+--------------------------------------+\n   | ProfileType*
      \      | n: type of data stored in TIFF file  |\n   +--------------------+--------------------------------------+\n
      \  | FaxProfile*        | n: ITU-compatible fax profile        |\n   +--------------------+--------------------------------------+\n
      \  | CodingMethods*     | n: compression algorithms used in    |\n   |                    |
      file                                 |\n   +--------------------+--------------------------------------+\n
      \  | VersionYear*       | byte sequence: year of ITU fax std   |\n   +--------------------+--------------------------------------+\n"
    title: '7.4.  Profile L: Lossless Color Fax Profile Summary'
  title: '7.  Profile L: Lossless Color Profile'
- contents:
  - "8.  Profile M: Mixed Raster Content Profile\n   This section defines the Mixed
    Raster Content profile of TIFF for\n   facsimile, designated Profile M.  Implementations
    of this profile are\n   required to implement Profiles S and C and may optionally
    implement\n   Profiles F, J and L.\n"
  - contents:
    - "8.1.  Overview\n   Unlike previous fax profiles, which use a single coding
      method and\n   resolution for an entire fax page, Mixed Raster Content [T.44]\n
      \  enables different coding methods and resolutions within a single\n   page.
      \ For example, consider a page that contains black-and-white\n   text, which
      is best coded with MMR or JBIG; a color bar chart, best\n   coded with JBIG;
      and a scanned color image, best coded with JPEG.\n   Similarly, although spatial
      resolution of 400 pixels per inch may be\n   best for the black-and-white text,
      200 pixels per inch is usually\n   sufficient for a color image.\n   Rather
      than applying one coding method and resolution to all\n   elements, MRC allows
      multiple coders and resolutions within a page.\n   By itself, MRC does not define
      any new coding methods or resolutions.\n   Instead it defines a 3-layer image
      model for structuring and\n   combining the scanned image data.  The MRC 3-layer
      model has been\n   applied here with the TIFF format to yield a data structure
      that\n   differs from [T.44], though it applies the same coding methods, uses\n
      \  the same compressed image data streams, and is consistent with the\n   TIFF
      principle of a single IFD per image.\n"
    - contents:
      - "8.1.1.  MRC 3-layer model\n   The 3 layers of the MRC model are Foreground
        and Background, which\n   are both multi-level, and Mask, which is bi-level.
        \ Each layer may\n   appear only once on a page and is coded independently
        of the other\n   two layers.  The final image is obtained by using the Mask
        layer to\n   determine whether output pixels come from the Foreground layer
        or the\n   Background layer.  When the Mask layer pixel value is 1, the\n
        \  corresponding pixel from the Foreground layer is selected; when it is\n
        \  0, the corresponding pixel from the Background layer is selected.\n   Details
        are given in the Introduction of [T.44].\n   In our earlier example, the shape
        of the black-and-white text and the\n   mask for the color chart could be
        in the Mask layer, the color of the\n   chart and text in the Foreground layer,
        and the color image in the\n   Background layer.  If a Mask layer pixel has
        a value of 1, the final\n   image pixel will be, depending on the pixel location,
        from either the\n   color chart or text color in the Foreground layer.  If
        a Mask layer\n   pixel has a value of 0, the final image pixel will be from
        the color\n   image in the Background layer.\n   Each layer is an image and,
        when present, is represented by at least\n   one IFD in a TIFF file.  This
        is consistent with TIFF, which provides\n   fields to define the attributes,
        such as resolution, image size, bits\n   per sample, etc., of a single image
        or layer.  The distribution of\n   content among layers is determined by the
        writer, as is the choice of\n   coding method, color encoding, and spatial
        resolution for a layer.\n   Not all pages, and not all parts of a page, require
        3 layers.  If a\n   page has of only one layer, then that layer is the primary
        image\n   whether it is a Background, Mask, or Foreground layer.  If there
        is\n   more than one layer, then the Mask must be one of the layers, in\n
        \  which case it is the primary image.  In all cases, the primary image\n
        \  must be page size.\n   MRC [T.44] allows a page to be transmitted as a
        series of stripes,\n   each consisting of 1, 2 or 3 layers.  The number of
        scanlines in each\n   stripe can vary over the page.  Although [T.44] does
        not allow\n   overlap between images of a single layer, the MRC profile permits\n
        \  overlapping IFDs when one of the IFDs is used only to define a\n   default
        image color.  According to [T.4] Annex H, stripes having more\n   than 1 layer
        SHOULD NOT be more than 256 lines in length unless the\n   capability to receive
        longer stripes has been negotiated.\n   Furthermore, color fax also requires
        the spatial resolutions of\n   Background and Foreground images to be legal
        fax values that are also\n   integer factors of the Mask image resolution.
        \ For example, if the\n   Mask-Layer resolution is 400 pixels per inch, then
        allowable\n   resolutions for the Foreground and Background layers are 100,
        200, or\n   400 pixels per inch; if the Mask is at 300 pixels per inch, then\n
        \  allowable values are 100 and 300.  The Foreground and Background\n   layer
        resolutions can be set independently of each other.\n"
      title: 8.1.1.  MRC 3-layer model
    - contents:
      - "8.1.2.  A TIFF Representation for the MRC 3-layer model\n   In the TIFF representation
        of the 3-layer MRC model, each page is\n   represented by a single IFD, called
        the Primary IFD.  The nextIFD\n   offset associated with a Primary IFD will
        point to the Primary IFD of\n   the next page.  If the page consists of a
        single layer, then the\n   Primary IFD represents that layer.  If more than
        one layer is\n   present, the Primary IFD represents the Mask layer and the
        other\n   layers are represented by a set of child IFDs that are referenced\n
        \  through the SubIFD extension field [TTN1] of the Primary IFD.  To\n   distinguish
        MRC-specific SubIFDs from other SubIFDs, the\n   NewSubFileType field MUST
        have Bit 4 ON, indicating an MRC-related\n   IFD.  A new ImageLayer field
        is also introduced that consists of two\n   values that identify the layer
        (Foreground, Background, or Mask) and\n   the order within the layer (first,
        second, ... image of the layer);\n   see Section 8.2.3.\n   In Profile M,
        the Primary IFD represents a complete layer and\n   corresponds to the primary
        image described in Section 8.1.1.  There\n   must be no other MRC-related
        IFDs or SubIFDs that contain image data\n   corresponding to the layer represented
        by the Primary IFD.\n   MRC [T.44] allows a page to be transmitted as a series
        of stripes.  A\n   strip within an IFD in a Profile M file represents a stripe
        in a\n   [T.44] data stream.  The [T.44] stripes of the Primary image are\n
        \  represented by a single, multiple-strip IFD; the [T.44] stripes of\n   other
        layers are represented as multiple, single-strip IFDs.\n   The layer represented
        by the Primary IFD may consist of strips of\n   image data, but all the strips
        must be part of the single Primary\n   IFD.  For example, if the page consisted
        of only the Background\n   layer, then all strips associated with the Background
        layer must be\n   treated as a single image.  Because MRC allows stripes with
        variable\n   numbers of scanlines, a reader MUST support StripRowCounts field,
        as\n   a writer may use it in place of the RowsPerStrip field to support a\n
        \  variable number of scanlines in each strip of the Primary IFD.  In\n   accordance
        with [TTN2], each strip shall be independently encoded,\n   but coding parameters
        may not change between strips.\n   Layers other than the layer represented
        by the Primary IFD store each\n   strip as a separate IFD, allowing the coding
        parameters to change\n   from strip to strip as described by the MRC standard
        [T.44].  In all\n   cases, if the Mask layer exists, it shall be represented
        by a single\n   IFD and a single set of coding parameters.\n   The use of
        SubIFDs to store child IFDs is described in [TTN1].  When\n   the Mask is
        the primary image, the Background and Foreground layer\n   images are represented
        with child IFDs referenced by the SubIFDs\n   field in the Primary IFD.  There
        are multiple ways to organize the\n   images of the Background and Foreground
        layer images:  (1) the SubIFD\n   field of the Primary IFD is an array of
        pointers to all child image\n   IFDs, one entry per child image; (2) the SubIFD
        field is a single\n   pointer to a linked list of all child image IFDs; (3)
        the SubIFD\n   field is an array of two pointers, where the first pointer
        is to a\n   linked list of all Background layer image IFDs, and the second\n
        \  pointer is to a linked list of all Foreground layer image IFDs.  A\n   Profile
        M writer SHOULD structure the Background and Foreground layer\n   images by
        using (3), as shown in the example below.  Furthermore, the\n   child IFDs
        representing the images of the Background and Foreground\n   layers SHOULD
        be ordered in the file in the same order as they occur\n   on the page.  However,
        a Profile M reader must scan all available\n   child IFDs to locate and identify
        IFDs associated with MRC layers.\n                             (nextIFD)\n"
      - "PRIMARY IFD PAGE 0  -----------------------> PRIMARY IFD PAGE 1--> ...\n
        \         ImageLayer = [2,1]\n          NewSubFileType = 18\n          SubIFD[0]
        ---------------------- SubIFD[1]\n               |                                |\n
        \              V                                V\n            Child IFD                        Child
        IFD\n               ImageLayer = [1,1]               ImageLayer [3,1]\n               NewSubFileType
        = 16              NewSubFileType 16\n               |                                |\n
        \              |(nextIFD)                       |(nextIFD)\n               V
        \                               V\n            Child IFD                        Child
        IFD\n               ImageLayer = [1,2]               ImageLayer [3,2]\n               NewSubFileType
        = 16              NewSubFileType 16\n               |                                |\n
        \              |(nextIFD)                       |(nextIFD)\n               V
        \                               V\n            Child IFD                        Child
        IFD\n               ImageLayer = [1,3]               ImageLayer [3,3]\n               NewSubFileType
        = 16              NewSubFileType 16\n               |                                |\n
        \              |(nextIFD)                       |(nextIFD)\n               V
        \                               V\n               0                                0\n
        \  The XPosition and YPosition TIFF fields specify the offset to the\n   upper
        left corner of the IFD in resolution units, which are inches in\n   Profile
        M; see Section 8.2.2.  The Primary IFD must not use XPosition\n   or YPosition
        fields.\n   MRC [T.44] allows the specification of a default image color that
        is\n   to be applied in the event no image data is transmitted for a given\n
        \  stripe and layer.  The new field ImageBaseColor is used to store\n   default
        image color specifications in Profile M, see 8.2.3.  By\n   setting the StripByteCounts
        array to zero values, an IFD defining a\n   default color but containing no
        encoded image data can be specified.\n   ImageBaseColor can also be used in
        IFDs that contain encoded image\n   data.  In that case, the fields of the
        IFD must accurately reflect\n   the encoding of the image data.  If the StripByteCount
        entry for a\n   given strip is 0, then the ImageBaseColor is used for that
        strip.  If\n   the encoded image data is ITU L*a*b, the ImageBaseColor is\n
        \  interpreted with the encoding parameters of the image data.  If the\n   image
        data is not ITU L*a*b*, the ImageBaseColor is interpreted as\n   8-bit ITU
        L*a*b*; see Section 8.2.3.\n"
      title: 8.1.2.  A TIFF Representation for the MRC 3-layer model
    title: 8.1.  Overview
  - contents:
    - "8.2.  Required TIFF Fields\n   This section describes the TIFF fields required,
      in addition to those\n   in Section 2.2.1, to represent MRC fax images.  Since
      MRC stores fax\n   data as a collection of images corresponding to layers or
      parts of\n   layers, the coding methods, color encodings, and spatial resolutions\n
      \  used by previous profiles apply to Profile M.  Therefore, the\n   descriptions
      here will typically reference the appropriate earlier\n   sections.  Fields
      and values specific to Profile M are pointed out.\n"
    - contents:
      - "8.2.1.  Baseline Fields\n   ImageWidth(256).\n   SHORT or LONG\n      Same
        page widths as Profile C, the base color profile; see Section\n      6.2.1.
        \ In Profile M, the width of a Foreground or Background\n      image in the
        coded data stream may be less than the page width,\n      unless the Background
        or Foreground is the primary image, in which\n      case the width of the
        coded data stream is the page width.  The\n      ImageWidth field will always
        store the actual width of the coded\n      data.\n   NewSubFileType(254) =
        16, 18.\n   LONG\n      For Profile M, the NewSubFileType field has two bits
        that are\n      required.  Bit 1 indicates a single page of a multi-page document\n
        \     and must be set for the Primary IFD; Bit 4 indicates the MRC\n      imaging
        model as described in ITU-T Recommendation T.44 [T.44] and\n      must be
        set for Primary IFDs and all MRC-specific child IFDs.\n   BitsPerSample(258)
        = 1, 2-8, 9-12\n   SHORT\n   SamplesPerPixel(277) = 1, 3, 4.\n   SHORT\n   Compression(259)
        = 1, 3, 4, 7, 9, 10.\n   SHORT\n      For Mask layer, see Sections 4.2.1 and
        5.2.1.  For Foreground and\n      Background layers, see Sections 6.2.1 and
        7.2.1 Compression=1 is\n      not used by previous profiles.  An IFD used
        only to specify the\n      default image color for a layer and strip will
        not have any\n      encoded image data associated with it, i.e., the StripByteCounts\n
        \     field will contain a 0.  Since no image data exists in the IFD,\n      the
        Compression field shall be set to 1, indicating no\n      compression.  A
        Compression field value of 1 is not allowed for\n      any other IFDs.\n   FillOrder(266)
        = 1 , 2.\n   SHORT\n   RequiredByTIFFBaseline\n      Profile M readers must
        be able to read data in both bit orders,\n      but the vast majority of facsimile
        products store data LSB first,\n      exactly as it appears on the telephone
        line\n         1 = Most Significant Bit first.\n         2 = Least Significant
        Bit first.\n   PhotometricInterpretation(262) = 0, 2, 10.\n   SHORT\n      For
        Mask layer, 0.  For Foreground and Background layers, see\n      Sections
        6.2.1 and 7.2.1.\n   ResolutionUnit(296) = 2.\n   SHORT\n      The unit of
        measure for resolution. 2 = inch.\n      ITU-T standards only specify inch-based
        resolutions for color fax\n      Default = 2 (field may be omitted if this
        is the value).\n   StripByteCounts(279)\n   SHORT or LONG\n      In Profile
        M, it is permissible for the StripByteCounts value for\n      a given strip
        to have a zero entry.  This means there is no\n      encoded image data corresponding
        to that strip.  Instead, the\n      current default image color should be
        used for the strip.  The\n      standard default image colors are black for
        the Foreground layer\n      and White for the Background layer.  The ImageBaseColor
        field can\n      be used to specify other default colors; see Section 8.2.3.\n
        \  XResolution(282) = 100, 200, 300, 400.\n   RATIONAL\n   YResolution(283)
        = 100, 200, 300, 400.\n   RATIONAL\n      The resolution of the image is expressed
        in pixels per resolution\n      unit.  In pixels per inch, allowed XResolution
        values for all\n      layers are 100, 200, 300, and 400.  Color fax requires
        the pixels\n      to be square, hence YResolution must equal XResolution for
        all\n      layers.  The resolution of Background and Foreground layers must\n
        \     each be an integer factor of the Primary image, which is the Mask\n
        \     layer, when it is present; see Section 8.4.\n"
      title: 8.2.1.  Baseline Fields
    - contents:
      - "8.2.2.  Extension Fields\n   ChromaSubSampling(530).\n   SHORT\n   ChromaPositioning(531).\n
        \  SHORT\n      For Foreground and Background layers, see Section 6.2.2.\n
        \  Indexed(346) = 0, 1.\n   SHORT\n      For Foreground and Background layers:
        1 indicates a palette-color\n      image; see Section 7.2.2.\n   T4Options(292)
        = 0, 1, 4, 5.\n   SHORT\n   T6Options(293) = 0.\n   SHORT\n      For Mask
        layer, see Section 4.2.2.\n   SubIFDs(330).\n   IFD\n      Count = number
        of child IFDs.  Each value is an offset from the\n      beginning of the TIFF
        file to a child IFD [TTN1].\n   XPosition(286).\n   RATIONAL\n   YPosition(287).\n
        \  RATIONAL\n      Specifies the horizontal and vertical offsets of the top
        left of\n      the IFD from the top left of the Primary IFD in resolution
        units.\n      For example, if the Primary IFD is at 400 pixels per inch, and
        a\n      foreground layer IFD is at 200 pixels per inch and located at\n      pixel
        coordinate (345, 678) with respect to the Primary IFD, the\n      XPosition
        value is 345/400 and the YPosition value is 678/400 in\n      inches.\n      The
        Primary IFD does not use the XPosition or YPosition fields.\n      The XPosition
        and YPosition values must be specified for MRC child\n      IFDs; there is
        no default value.\n"
      title: 8.2.2.  Extension Fields
    - contents:
      - "8.2.3.  New Fields\n   Decode(433).\n   SRATIONAL\n      For Foreground and
        Background layers, see Section 6.2.3.\n   T82Options(435)\n   LONG\n      For
        Mask layer, see Section 5.2.3.\n   ImageBaseColor(434).\n   SHORT\n      Count
        = SamplesPerPixel\n   In areas of an image layer where no image data is available
        (i.e.,\n   where no strips are defined, or where the StripByteCounts entry
        for\n   a given strip is 0), the color specified by ImageBaseColor will be\n
        \  used.\n   If the ImageBaseColor field is used in an IFD that contains image\n
        \  data encoded in ITU L*a*b*, then the ImageBaseColor will be\n   interpreted
        with the color-encoding parameters of the image data\n   (i.e., color gamut,
        illuminant, bit/sample, and decode).  If the\n   ImageBaseColor field is used
        in an IFD that contains image data that\n   is not encoded in ITU L*a*b, then
        the ImageBaseColor SHALL be\n   interpreted as 8 bits/sample, 3 samples/pixel
        ITU L*a*b*.  If the\n   ImageBaseColor field is used in an IFD that contains
        no encoded\n   image data, then the ImageBaseColor SHALL be interpreted as
        8\n   bits/sample, 3 samples/pixel ITU L*a*b*.  If the fax data stream\n   requires
        a different encoding, then transferring the default color\n   value between
        a TIFF file and fax data stream requires a color\n   conversion.\n   A [T.44]
        stripe may contain a Foreground or Background image less\n   than full stripe
        size, with the rest of the stripe assuming a\n   default image color.  In
        this case, the default image color is imaged\n   first, followed by the image
        data.  In Profile M, this is represented\n   as a child IFD containing no
        encoded image data but specifying the\n   default image color in the ImageBaseColor
        field.  A second child IFD\n   contains the image data.  To ensure the default
        image color is imaged\n   first, the order value in the ImageLayer field of
        the IFD defining\n   the ImageBaseColor field MUST have a lower value than
        the order\n   value in the ImageLayer field of the IFD defining the image
        data.\n   To define a child IFD specifying a ImageBaseColor but containing
        no\n   encoded image data, create an IFD with the following settings.\n      ImageLayer[0]:
        \            specified layer\n      ImageLayer[1]:             less than any
        other IFDs corresponding\n                                 to the same layer
        and strip.\n      RowsPerStrip:              strip height\n      ImageLength:
        \              strip height\n      ImageWidth:                full image width\n
        \     BitsPerSample:             8\n      PhotometricInterpretation: 10 (ITULAB)\n
        \     SamplesPerPixel:           3\n      Compression:               1 (none)\n
        \     X/YResolution:             that of the Primary IFD\n      XPosition:
        \                0\n      YPosition:                 the offset from the top
        of the page to\n                                 the beginning of the strip
        in the\n                                 resolution units of inches\n      StripByteCounts:
        \          single 0 value\n      StripOffsets:              single 0 entry\n
        \     NewSubFileType:            bit 4 O     (MRC)\n      ImageBaseColor:
        \           desired color in 8 bit ITULAB\n   For the Foreground layer image,
        the default value for the\n   ImageBaseColor field is black.  For other cases,
        including the\n   Background layer image, the default value is white.\n   StripRowCounts(559).\n
        \  LONG\n      Count = number of strips.\n      The number of scanlines stored
        in a strip.  Profile M allows each\n      fax strip to store a different number
        of scanlines.  For strips\n      with more than one layer, the maximum strip
        size is either 256\n      scanlines or full page size.  The 256 maximum SHOULD
        be used\n      unless the capability to receive longer strips has been\n      negotiated.
        \ This field replaces RowsPerStrip for IFDs with\n      variable-size strips.
        \ Only one of the two fields, StripRowCounts\n      and RowsPerStrip, may
        be used in an IFD.\n   ImageLayer (34732).\n   LONG\n      Count = 2.\n      Image
        layers are defined such that layer 1 is the Background\n      layer, layer
        3 is the Foreground layer, and layer 2 is the Mask\n      layer, which selects
        pixels from the Background and Foreground\n      layers.  The ImageLayer tag
        contains two values, which describe\n      the layer to which the image belongs
        and the order in which it is\n      imaged.\n      ImageLayer[0] = 1, 2, 3.\n
        \     1: Image is a Background image, i.e., the image that will appear\n         whenever
        the Mask contains a value of 0.  Background images\n         typically contain
        low-resolution, continuous-tone imagery.\n      2: Image is the Mask layer.
        \ In MRC, if the Mask layer is present,\n         it must be the Primary IFD
        and be full page in extent.\n      3: Image is a Foreground image, i.e., the
        image that will appear\n         whenever the Mask contains a value of 1.
        \ The Foreground image\n         generally defines the color of text or lines
        but may also\n         contain high-resolution imagery.\n      ImageLayer[1]:\n
        \     1: first image to be imaged in this layer\n      2: second image to
        be imaged in this layer\n      3: ...\n      In Profile M, more than one image
        can exist in a single layer.\n      ImageLayer[1] specifies the order in which
        images within a single\n      layer are to be imaged.  This insures that overlapping
        images\n      within a single layer are imaged correctly.\n      If an IFD
        contains no encoded image data and is used only to\n      specify the ImageBaseColor
        field, the value of ImageLayer[1] must\n      be less than that of any other
        IFD corresponding to the same layer\n      and strip to ensure the image data
        is interpreted as on top of the\n      default color.\n      In Profile M,
        it is possible to have only a single layer.  For\n      example, if a page
        contains only a single continuous-tone\n      photograph, then only the Background
        layer would occur.  In this\n      case, the Background layer will be stored
        as the Primary IFD.\n      ImageLayer[0] will be 1, indicating Background;
        ImageLayer[1] will\n      be 1, as there can be no other IFDs associated with
        that layer.\n      No Mask layer will exist.\n"
      title: 8.2.3.  New Fields
    title: 8.2.  Required TIFF Fields
  - contents:
    - "8.3.  Recommended TIFF Fields\n   See Sections 2.2.3. and 2.2.4.\n"
    title: 8.3.  Recommended TIFF Fields
  - contents:
    - "8.4.  Rules and Requirements for Images\n   Profile M defines a fundamental
      set of rules for images in the 3\n   layer representation.\n   1. If more than
      one layer exists, then the binary Mask layer SHALL be\n      present and be
      the primary image.  The Mask layer SHALL support\n      the binary data representations
      defined in Section 3 and MAY\n      support those defined in Sections 4 and
      5, with the exception that\n      PhotometricInterpretation MUST be 0.  If only
      one layer exists,\n      then the image corresponding to that layer is the primary
      image.\n   2. The Primary IFD defines and extends to the entire page boundary;\n
      \     all attached model images cannot extend beyond the Primary image.\n      Resolution
      differences may cause some pixels to \"hang over\" the\n      page boundary,
      but no new pixels should exist completely beyond\n      the page extent.\n   3.
      The Background and Foreground images SHALL support the color\n      representations
      defined in Section 6 and MAY support those defined\n      in Section 7.  These
      images MAY optionally cover only a portion of\n      the strip or page.\n   4.
      Each Primary IFD and each MRC-specific SubIFD must have an\n      ImageLayer
      field to specify which layer the IFD belongs to, and\n      the imaging order
      of that IFD within the layer.\n   5. Each Primary IFD must have a NewSubFileType
      field value set to 18,\n      indicating a single page of a multi-page document
      (bit 1) and MRC\n      (bit 4).\n   6. Each MRC-specific child IFD must have
      a NewSubFileType field value\n      set to 16, indicating MRC (bit 4).\n   7.
      In MRC fax, each layer is transmitted as a sequence of strips.  If\n      the
      page consists of a single layer, then all strips shall be\n      stored in the
      single Primary IFD.  In this case, coding parameters\n      cannot change between
      strips.  If the page consists of more than\n      one layer, then all strips
      of the Mask layer shall be stored in\n      the single Primary IFD.  All strips
      of the Foreground/Background\n      layers SHALL be stored in separate IFDs,
      referenced by the Primary\n      IFD's SubIFD field, containing an ImageLayer
      field with\n      ImageLayer[0] identifying either Background (layer 1) or\n
      \     Foreground (layer 3), and Imagelayer[1] identifying order in which\n      images
      within a single layer are to be imaged.  The TIFF XPosition\n      and YPosition
      fields are used to indicate the placement of these\n      images with respect
      to the primary image.\n   8. When the Mask image is present, the resolution
      of Background and\n      Foreground images must each be an integer factor of
      the Mask\n      image.  For example, if the Mask image is 400 pixels/inch, then\n
      \     the Background or Foreground image may be at 400 pixels/inch\n      (400/1),
      200 pixels/inch (400/2), or 100 pixels/inch (400/4).\n"
    title: 8.4.  Rules and Requirements for Images
  - contents:
    - "8.5.  Profile M: MRC Fax Profile Summary\n   Recommended fields are shown with
      an asterisk (*).\n   Required fields or values are shown with a double asterisk
      (**).  If\n   the double asterisk is on the field name, then all the listed
      values\n   are required of implementations; if the double asterisk is in the\n
      \  Values column, then only the values suffixed with a double asterisk\n   are
      required of implementations.\n   +------------------+-----------------------------------------+\n
      \  | Baseline Fields  |               Values                    |\n   +------------------+-----------------------------------------+\n
      \  | BitsPerSample    | 1**: binary mask, RGB, CMY(K)           |\n   |                  |
      2 - 8**: bits per color sample          |\n   |                  | 9 - 12: optional
      12 bits/sample         |\n   +------------------+-----------------------------------------+\n
      \  | Compression      | 1: None (ImageBaseColor IFD only)       |\n   |                  |
      3**: Modified Huffman and Modified READ |\n   |                  | 4: Modified
      Modified READ               |\n   |                  | 7**: JPEG                               |\n
      \  |                  | 9: JBIG, per T.85                       |\n   |                  |
      10: JBIG, per T.43                      |\n   +------------------+-----------------------------------------+\n
      \  | DateTime*        | {ASCII): date/time in the 24-hour format|\n   |                  |
      \"YYYY:MM:DD HH:MM:SS\"                   |\n   +------------------+-----------------------------------------+\n
      \  | FillOrder**      | 1: Most significant bit first           |\n   |                  |
      2: Least significant bit first          |\n   +------------------+-----------------------------------------+\n
      \  | ImageDescription*| {ASCII}: A string describing the        |\n   |                  |
      contents of the image.                  |\n   +------------------+-----------------------------------------+\n
      \  | ImageWidth       | 864, 1024, 1216, 1728**, 2048, 2432,    |\n   |                  |
      2592, 3072, 3456, 3648, 4096, 4864      |\n   |                  | Note: legal
      widths for the Primary IFD. |\n   +------------------+-----------------------------------------+\n
      \  | ImageLength**    | n: total number of scanlines in image   |\n   +------------------+-----------------------------------------+\n
      \  | NewSubFileType** | 16, 18:                                 |\n   |                  |
      Bit 1 indicates single page of a multi- |\n   |                  | page document
      on Primary IFD            |\n   |                  | Bit 4 indicates MRC model
      \              |\n   +------------------+-----------------------------------------+\n
      \  +------------------+-----------------------------------------+\n   | Orientation
      \     | 1**-8, Default 1                        |\n   +------------------+-----------------------------------------+\n
      \  | PhotometricInter | 0**:  WhiteIsZero  (Mask Layer)         |\n   | pretation
      \       | 2:  RGB                                 |\n   |                  |
      10**: ITULAB                            |\n   +------------------+-----------------------------------------+\n
      \  | ResolutionUnit** | 2: inch                                 |\n   +------------------+-----------------------------------------+\n
      \  | RowsPerStrip     | n: number or scanlines per strip        |\n   +------------------+-----------------------------------------+\n
      \  | SamplesPerPixel  | 1**: L* (lightness)                     |\n   |                  |
      3: RGB, LAB, CMY                        |\n   |                  | 4: CMYK                                 |\n
      \  +------------------+-----------------------------------------+\n   | Software*
      \       | {ASCII}: name & release number of       |\n   |                  |
      creator software                        |\n   +------------------+-----------------------------------------+\n
      \  | StripByteCounts**| <n>: number or bytes in each strip      |\n   +------------------+-----------------------------------------+\n
      \  | StripOffsets**   | <n>: offset from beginning of file to   |\n   |                  |
      each TIFF strip                         |\n   +------------------+-----------------------------------------+\n
      \  | XResolution      | 100, 200**, 300, 400 (written in        |\n   |                  |
      pixels/inch)                            |\n   +------------------+-----------------------------------------+\n
      \  | YResolution      | equal to XResolution (pixels must be    |\n   |                  |
      square)                                 |\n   +------------------+-----------------------------------------+\n
      \  | Extension Fields                                           |\n   +------------------+-----------------------------------------+\n
      \  | T4Options        | 0**: required if Compression is Modified|\n   |                  |
      Huffman, EOLs not byte aligned          |\n   |                  | 1: required
      if Compression 2D Modified  |\n   |                  | READ, EOLs are not byte
      aligned         |\n   |                  | 4**: required if Compression Modified
      \  |\n   |                  | Huffman, EOLs byte aligned              |\n   |
      \                 | 5: required if Compression 2D Modified  |\n   |                  |
      READ, EOLs are byte aligned             |\n   +------------------+-----------------------------------------+\n
      \  | T6Options        | 0: required if Compression is 2D        |\n   |                  |
      Modified Modified READ                  |\n   +------------------+-----------------------------------------+\n
      \  | DocumentName*    | {ASCII}: name of scanned document       |\n   +------------------+-----------------------------------------+\n
      \  | PageNumber**     | n,m: page number followed by total page |\n   |                  |
      count                                   |\n   +------------------+-----------------------------------------+\n
      \  +------------------+-----------------------------------------+\n   | ChromaSubSampling|
      (1,1), (2, 2)**                         |\n   |                  | (1, 1): equal
      numbers of lightness and  |\n   |                  | chroma samples horizontally
      & vertically|\n   |                  | (2, 2): twice as many lightness samples
      |\n   |                  | as chroma horizontally and vertically   |\n   +------------------+-----------------------------------------+\n
      \  | ChromaPositioning| 1: centered                             |\n   +------------------+-----------------------------------------+\n
      \  | Indexed          | 0: not a palette-color image            |\n   |                  |
      1: palette-color image                  |\n   +------------------+-----------------------------------------+\n
      \  | SubIFDs          | <IFD>: byte offset to FG/BG IFDs        |\n   +------------------+-----------------------------------------+\n
      \  | XPosition        | horizontal offset in primary IFD        |\n   |                  |
      resolution units                        |\n   +------------------+-----------------------------------------+\n
      \  | YPosition        | vertical offset in primary IFD          |\n   |                  |
      resolution units                        |\n   +------------------+-----------------------------------------+\n
      \  | New Fields                                                 |\n   +------------------+-----------------------------------------+\n
      \  | Decode           | minL, maxL, mina, maxa, minb, maxb:     |\n   |                  |
      minimum and maximum values for L*a*b*   |\n   +------------------+-----------------------------------------+\n
      \  | ImageBaseColor   | a,b,c: background color in ITULAB       |\n   +------------------+-----------------------------------------+\n
      \  | StripRowCounts   | <n>: number of scanlines in each strip  |\n   +------------------+-----------------------------------------+\n
      \  | ImageLayer       | n, m: layer number, imaging sequence    |\n   |                  |
      (e.g., strip number)                    |\n   +------------------+-----------------------------------------+\n
      \  | T82Options       | 0: T.85 profile of T.82 coding          |\n   +------------------+-----------------------------------------+\n
      \  | GlobalParameters | IFD: global parameters IFD              |\n   | IFD*
      \            |                                         |\n   +------------------+-----------------------------------------+\n
      \  | ProfileType*     | n: type of data stored in TIFF file     |\n   +------------------+-----------------------------------------+\n
      \  | FaxProfile*      | n: ITU-compatible fax profile           |\n   +------------------+-----------------------------------------+\n
      \  | CodingMethods*   | n: compression algorithms used in file  |\n   +------------------+-----------------------------------------+\n
      \  | ModeNumber*      | n: version of T.44 standard             |\n   +------------------+-----------------------------------------+\n
      \  | VersionYear*     | byte sequence: year of ITU fax standard |\n   +------------------+-----------------------------------------+\n"
    title: '8.5.  Profile M: MRC Fax Profile Summary'
  title: '8.  Profile M: Mixed Raster Content Profile'
- contents:
  - "9.  MIME content-types image/tiff and image/tiff-fx\n   The MIME content-types
    image/tiff and image/tiff-fx are used for\n   TIFF-FX encoded image data, as defined
    in this document.  [TIFF-REG]\n   and [TIFF-FX-REG] describe the registration
    of these MIME content-\n   types.\n"
  title: 9.  MIME content-types image/tiff and image/tiff-fx
- contents:
  - "10.  Security Considerations\n   This document describes a file format for Internet
    fax, which is a\n   series of profiles of TIFF for facsimile.  As such, it does
    not\n   create any security issues not already identified in [TIFF-REG], in\n
    \  its use of fields as defined in [TIFF].  There are also new TIFF\n   fields
    defined within this specification, but they are of a purely\n   descriptive nature,
    so no new security risks are incurred.\n   Further, the encoding specified in
    this document does not in any way\n   preclude the use of any Internet security
    protocol to encrypt,\n   authenticate, or non-repudiate TIFF-encoded facsimile
    messages.\n"
  title: 10.  Security Considerations
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [REQ]         Bradner, S., \"Key words for
      use in RFCs to Indicate\n                 Requirement Levels\", BCP 14, RFC
      2119, March 1997.\n   [T.4]         ITU-T Recommendation T.4, Standardization
      of group 3\n                 facsimile apparatus for document transmission,
      October\n                 1997.\n   [T.6]         ITU-T Recommendation T.6,
      Facsimile coding schemes and\n                 coding control functions for
      group 4 facsimile\n                 apparatus, November 1988\n   [T.30]        ITU-T
      Recommendation T.30 - Procedures for Document\n                 Facsimile Transmission
      in the General Switched\n                 Telephone Network, June 1996\n   [T.42]
      \       ITU-T Recommendation T.42, Continuous-tone colour\n                 representation
      method for facsimile, February 1996\n   [T.43]        ITU-T Recommendation T.43,
      Colour and gray-scale image\n                 representations using lossless
      coding scheme for\n                 facsimile, February 1997\n   [T.44]        ITU-T
      Recommendation T.44, Mixed Raster Content (MRC),\n                 April 1999.\n
      \  [T.81]        ITU-T Recommendation T.81, Information technology -\n                 Digital
      compression and coding of continuous-tone still\n                 images - Requirements
      and guidelines, September 1992\n   [T.85]        ITU-T Recommendation T.85,
      Application profile for\n                 Recommendation T.82 - Progressive
      bi-level image\n                 compression (JBIG coding scheme) for facsimile\n
      \                apparatus, August 1995\n   [T.82]        ITU-T Recommendation
      T.82, Information technology -\n                 Coded representation of picture
      and audio information -\n                 Progressive bi-level image compression,
      March 1995\n   [TIFF]        Tag Image File Format, Revision 6.0, Adobe Developers\n
      \                Association, June 3, 1992,\n                 http://partners.adobe.com/public/developers/en/tiff/\n
      \                TIFF6.pdf\n                 The TIFF 6.0 specification dated
      June 3, 1992\n                 specification (c) 1986-1988, 1992 Adobe Systems\n
      \                Incorporated. All Rights Reserved.\n   [TIFF-F0]     TIFF Class
      F specification, Apr 28, 1990,\n                 ftp://ftp.faximum.com/pub/documents/tiff_f.txt\n
      \  [TIFF-REG]    Parsons, G. and J. Rafferty, \"Tag Image File Format\n                 (TIFF)
      - image/tiff MIME Sub-type Registration\", RFC\n                 3302, September
      2002.\n   [TTN1]        Adobe PageMaker 6.0 TIFF Technical Notes, Sept. 14,\n
      \                1995,\n                 http://partners.adobe.com/public/developers/en/tiff/\n
      \                TIFFPM6.pdf\n   [TTN2]        Draft TIFF Technical Note 2,
      Replacement TIFF/JPEG\n                 specification, March 17, 1995,\n                 ftp://ftp.uu.net/graphics/jpeg/\n
      \  [TIFF-FX-REG] McIntyre, L., Parsons, G., and J. Rafferty, \"Tag Image\n                 File
      Format Fax eXtended (TIFF-FX) - image/tiff-fx MIME\n                 Sub-type
      Registration\", RFC 3250, September 2002.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [GUIDE]       Cancio, V., Moldovan, M., Tamura,
      H., and D. Wing,\n                 \"Implementers Guide for Facsimile Using
      Internet Mail\",\n                 RFC 3249, September 2002.\n   [TIFF-F]      Parsons,
      G. and J. Rafferty, \"Tag Image File Format\n                 (TIFF) - F Profile
      for Facsimile\", RFC 2306, March\n                 1998.\n   [VPIM 2]      Vaudreuil
      G. and G. Parsons, \"Voice Profile for\n                 Internet Mail - version
      2 (VPIMv2)\", RFC 3801, June\n                 2004.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Annex A:  Summary of TIFF Fields for Internet Fax\n   This annex includes tables
    which list by profile the TIFF fields used\n   in the proposed fax file format.
    \ The fields are organized into 3\n   categories:\n      1)  TIFF Baseline Fields\n
    \     2)  TIFF Extension Fields\n      3)  New Fields.\n   The tables include
    the allowed values for each fax profile.  Entries\n   other than explicit numbers
    are described by:\n      n        - single number\n      n, m     - 2 numbers\n
    \     a, b, c  - 3 numbers\n      r        - rational number\n      <n>      -
    array of numbers\n      <b>      - byte sequence\n      {ASCII}  - string\n      IFD
    \     - IFD byte offset\n      <IFD>    - array of IFD byte offsets\n   A blank
    entry in the table indicates that the field is not used by\n   that particular
    fax profile.\n   Table A.1  TIFF Baseline Fields\n           +---------------------------------------------------------+\n
    \          |                       Fax Profile                       |\n           +---------------------------------------------------------|\n
    \          | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n"
  - '+----------|   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |

    '
  - '|   TIFF   |         |          |        |         |        | Content|

    '
  - '|  Field   |    S    |     F    |   J    |    C    |   L    |   M    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| BitsPer  | 1       | 1        | 1      | 8       | 1, 2-8 | 1, 2-8 |

    '
  - '| Sample   |         |          |        |         | 9-12   | 9-12   |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Compres- | 3       | 3, 4     | 9      | 7       | 10     | 3, 4, 7|

    '
  - '| sion     |         |          |        |         |        | 9,10   |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| DateTime |         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| FillOrder| 2       | 1, 2     | 1, 2   | 1, 2    | 1, 2   | 1,2    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| ImageDes-|         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|

    '
  - '| cription |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Image-   | n       | n        | n      | n       | n      | n      |

    '
  - '| Length   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Image-   | 1728    | 1728, 2048, 2432  |   864, 1024, 1216, 1728,  |

    '
  - '| Width    |         | 2592, 3072, 3456  |  2048, 2432, 2592, 3072,  |

    '
  - '|          |         | 3648, 4096, 4864  |  3456, 3648, 4096, 4864   |

    '
  - '|          |         | Note, for the Mixed Raster Content M profile  |

    '
  - '|          |         | these widths apply to the Primary IFD.        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| NewSub-  | 2       | 2        | 2      | 2       | 2      | 16, 18 |

    '
  - '| FileType |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Orien-   | 1       | 1-8      | 1-8    | 1-8     | 1-8    | 1-8    |

    '
  - '| tation   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Photo-   | 0       | 0, 1     | 0, 1   | 10      | 2, 5,  | 0,     |

    '
  - '| metric-  |         |          |        |         | 10     | 2,     |

    '
  - '| Interp-  |         |          |        |         |        | 10     |

    '
  - '| retation |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Resolu-  | 2       | 2, 3     | 2, 3   | 2, 3    | 2, 3   | 2, 3   |

    '
  - '| tionUnit |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| RowsPer- | n       | n        | n      | n       | n      | n      |

    '
  - '| Strip    |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Samples- | 1       | 1        | 1      | 1, 3    | 1, 3, 4| 1, 3, 4|

    '
  - '| PerPixel |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Software |         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Strip-   | n       | <n>      | <n>    | <n>     | <n>    | <n>    |

    '
  - '| Byte-    |         |          |        |         |        |        |

    '
  - '| Counts   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Strip-   | n       | <n>      | <n>    | <n>     | <n>    | <n>    |

    '
  - '| Offsets  |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| XResolu- | 204     | 200, 204, 300     |    100, 200, 300, 400     |

    '
  - '| tion     | 200     | 400, 408          |                           |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| YResolu- | 98, 196 | 98, 196, 100, 200 |    100, 200, 300, 400     |

    '
  - '| tion     | 100,200 | 300, 391, 400     |                           |

    '
  - "+----------+---------+----------+--------+---------+--------+--------+\n   Table
    A.2  TIFF Extension Fields\n           +---------------------------------------------------------+\n
    \          |                       Fax Profile                       |\n           +---------------------------------------------------------|\n
    \          | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n"
  - '+----------|   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |

    '
  - '|   TIFF   |         |          |        |         |        | Content|

    '
  - '|  Field   |    S    |     F    |   J    |    C    |   L    |   M    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Chroma-  |         |          |        | 1       |        | 1      |

    '
  - '| Position-|         |          |        |         |        |        |

    '
  - '| ing      |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Chroma-  |         |          |        | <1, 1>  |        | <1, 1> |

    '
  - '| SubSampl-|         |          |        | <2, 2>  |        | <2, 2> |

    '
  - '| ing      |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Document-|         | {ASCII}  | {ASCII}| {ASCII} | {ASCII}| {ASCII}|

    '
  - '| Name     |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Indexed  |         |          |        |         | 0,1    | 0,1    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Page-    | n, m    | n, m     | n, m   | n, m    | n, m   | n, m   |

    '
  - '| Number   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| SubIFDs  |         |          |        |         |        | <IFD>  |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| T4Options| 0, 4    | 0, 1,    |        |         |        | 0, 1,  |

    '
  - '|          |         | 4, 5     |        |         |        | 4, 5   |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| T6Options|         | 0        |        |         |        | 0      |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| XPosition|         |          |        |         |        | r      |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| YPosition|         |          |        |         |        | r      |

    '
  - "+----------+---------+----------+--------+---------+--------+--------+\n   Table
    A.3   New Fields\n           +---------------------------------------------------------+\n
    \          |                       Fax Profile                       |\n           +---------------------------------------------------------|\n
    \          | Minimal | Extended |  JBIG  |  Lossy  |Lossless| Mixed  |\n"
  - '+----------|   B&W   |    B&W   |  B&W   |  Color  | Color  | Raster |

    '
  - '|   TIFF   |         |          |        |         |        | Content|

    '
  - '|  Field   |    S    |     F    |   J    |    C    |   L    |   M    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| BadFax-  |         | n        |        |         |        |        |

    '
  - '| Lines    |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| CleanFax-|         | 0, 1, 2  |        |         |        |        |

    '
  - '| Data     |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Coding-  |         |          | n      | n       | n      | n      |

    '
  - '| Method   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Consecu- |         | n        |        |         |        |        |

    '
  - '| tiveBad- |         |          |        |         |        |        |

    '
  - '| FaxLines |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Decode   |         |          |        | <r>     | <r>    | <r>    |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Fax-     |         |          | n      | n       | n      | n      |

    '
  - '| Profile  |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Global-  |         | IFD      | IFD    | IFD     | IFD    | IFD    |

    '
  - '| Parame-  |         |          |        |         |        |        |

    '
  - '| tersIFD  |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Image-   |         |          |        |         |        | n, m   |

    '
  - '| Layer    |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| T82-     |         |          | n      |         |        | n      |

    '
  - '| Options  |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Image-   |         |          |        |         |        | <n>    |

    '
  - '| BaseColor|         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Mode-    |         |          |        |         |        | n      |

    '
  - '| Number   |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------|

    '
  - '| Profile- |         |          | n      | n       | n      | n      |

    '
  - '| Type     |         |          |        |         |        |        |

    '
  - '+--------------------------------------------------------------------+

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Strip-   |         |          |        |         |        | <n>    |

    '
  - '| RowCounts|         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - '| Version- |         |          |        | <b>     |<b>     |        |

    '
  - '| Year     |         |          |        |         |        |        |

    '
  - '+----------+---------+----------+--------+---------+--------+--------+

    '
  - "Annex B: List of technical edits to RFC2301\n   This Annex lists technical differences
    between this document and\n   RFC 2301, the Proposed Standard File Format for
    Internet Fax.\n"
  - '+----+---------+-------------------------------------------------+

    '
  - '| No.| Section |             Technical Edit                      |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 1. | 5.2.1   | Added FillOrder=1 to Profile J                  |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 2. | 6.2.1   | Constrained ResolutionUnit to 2 (i.e., inch) for|

    '
  - '|    | 7.2.1   | all color profiles, per ITU-T Recommendations   |

    '
  - '|    | 8.2.1   |                                                 |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 3. | 7.2.1   | Deleted ColorMap field; it re-encoded the color |

    '
  - '|    | 7.4     | palette already in the T.43 data stream         |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 4. | 7.2.2   | Changed TAG value of Indexed field from 364 to  |

    '
  - '|    |         | 346 to agree with Section 8.2.2 and Ref. [TTN1] |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 5. | 8.2.1   | Added text clarifying the use of ImageWidth     |

    '
  - '|    |         | when Background or Foreground layer is Primary  |

    '
  - '|    |         | IFD                                             |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 6. | 8.2.3   | Changed field name from DefaultImageColor to    |

    '
  - '|    |         | ImageBaseColor;                                 |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 7. | 8.2.1   | Added Compression=1 for ImageBaseColor IFDs     |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 8. | 5.2.1   | Redefined compression = 9 to be T.82 (JBIG);    |

    '
  - '|    | 5.2.3   | added T82Options field, with a default value (0)|

    '
  - '|    |         | corresponding to the T.85 application profile   |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 9. | 4.3.3   | Added GlobalParametersIFD, ProfileType,         |

    '
  - '|    | 4.7     | FaxProfile and CodingMethod to the New Fields   |

    '
  - '|    |         | portion of Profile F, per Sec. 2.2.4            |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 10.|  6.2.1  | Deleted BitsPerSample=12 as an option when      |

    '
  - '|    |6.2.3,6.4| Compression=7 due to lack of interop testing.   |

    '
  - '|    |Table A.1|                                                 |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 11.|8.2.1,8.4| Deleted PhotometricInterpretation=5 in Profile M|

    '
  - '|    |Table A.1| due to insufficient interop testing.            |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 12.|7.2.1,7.4| Deleted BitsPerSample=13-16 for Palette-color   |

    '
  - '|    |8.2.1,8.5| due to lack of interop testing.                 |

    '
  - '|    |Table A.1|                                                 |

    '
  - '+----+---------+-------------------------------------------------+

    '
  - '| 13.| Annex B | Deleted Annex B due to discontinued use of      |

    '
  - '|    |         | application parameter; Annex C renamed Annex B  |

    '
  - '+----+---------+-------------------------------------------------+

    '
  title: 'Annex A:  Summary of TIFF Fields for Internet Fax'
- contents:
  - "Authors' Addresses\n   Robert Buckley\n   Xerox Corporation\n   Mailstop 0128-30E\n
    \  800 Phillips Road\n   Webster, NY 14580, USA\n   Phone: +1-585-422-1282\n   Fax:
    \  +1-585-422-2636\n   EMail: rbuckley@crt.xerox.com\n   Dennis Venable\n   Xerox
    Corporation\n   Mailstop 0128-27E\n   800 Phillips Road\n   Webster, NY 14580,
    USA\n   Phone: +1-585-422-3138\n   Fax:   +1-585-422-6117\n   EMail: dvenable@crt.xerox.com\n
    \  Lloyd McIntyre\n   10328 S. Stelling Road\n   Cupertino, CA 95014 USA\n   Phone:
    +1-408-725-1624\n   EMail: lloyd10328@pacbell.net or\n          Lloyd_McIntyre@Dell.com\n
    \  Glenn W. Parsons\n   Nortel Networks\n   P.O. Box 3511, Station C\n   Ottawa,
    ON K1Y 4H7, Canada\n   Phone: +1-613-763-7582\n   Fax:   +1-613-967-5060\n   EMail:
    gparsons@nortel.com\n   James Rafferty\n   Brooktrout Technology\n   410 First
    Avenue\n   Needham, MA 02494 USA\n   Phone: +1-781-433-9462\n   Fax:   +1-781-433-9268\n
    \  EMail: jraff@brooktrout.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the IETF's procedures with respect
    to rights in IETF Documents can\n   be found in BCP 78 and BCP 79.\n   Copies
    of IPR disclosures made to the IETF Secretariat and any\n   assurances of licenses
    to be made available, or the result of an\n   attempt made to obtain a general
    license or permission for the use of\n   such proprietary rights by implementers
    or users of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
