- title: __initial_text__
  contents:
  - "         Using the Elliptic Curve Signature Algorithm (ECDSA)\n             \
    \          for XML Digital Signatures\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   This document is not a candidate for any level of Internet Standard.\n\
    \   The IETF disclaims any knowledge of the fitness of this document for\n   any\
    \ purpose, and in particular notes that it has not had IETF review\n   for such\
    \ things as security, congestion control, or inappropriate\n   interaction with\
    \ deployed protocols.  The RFC Editor has chosen to\n   publish this document\
    \ at its discretion.  Readers of this document\n   should exercise caution in\
    \ evaluating its value for implementation\n   and deployment.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document specifies how to use Elliptic Curve Digital Signature\n\
    \   Algorithm (ECDSA) with XML Signatures.  The mechanism specified\n   provides\
    \ integrity, message authentication, and/or signer\n   authentication services\
    \ for data of any type, whether located within\n   the XML that includes the signature\
    \ or included by reference.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  2\n   2.  ECDSA. . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  2\n   3.  Specifying ECDSA within XMLDSIG  . . . . . . . . . . .\
    \ . . . .  3\n       3.1.  Version, Namespaces, and Identifiers . . . . . . .\
    \ . . .  3\n       3.2.  XML Schema Preamble and DTD Replacement. . . . . . .\
    \ . .  4\n             3.2.1.  XML Schema Preamble. . . . . . . . . . . . . .\
    \ .  4\n             3.2.2.  DTD Replacement. . . . . . . . . . . . . . . . .\
    \  4\n       3.3.  ECDSA Signatures . . . . . . . . . . . . . . . . . . . .  4\n\
    \       3.4.  ECDSA Key Values . . . . . . . . . . . . . . . . . . . .  4\n  \
    \           3.4.1.  Key Value Root Element . . . . . . . . . . . . .  4\n    \
    \         3.4.2.  EC Domain Parameters . . . . . . . . . . . . . .  5\n      \
    \               3.4.2.1.  Field Parameters . . . . . . . . . . .  6\n        \
    \             3.4.2.2.  Curve Parameters . . . . . . . . . . .  8\n          \
    \           3.4.2.3.  Base Point Parameters. . . . . . . . .  9\n            \
    \ 3.4.3.  EC Points  . . . . . . . . . . . . . . . . . . . 10\n   4.  Security\
    \ Considerations  . . . . . . . . . . . . . . . . . . . 11\n   5.  Normative References\
    \ . . . . . . . . . . . . . . . . . . . . . 11\n   6.  Informative References\
    \ . . . . . . . . . . . . . . . . . . . . 12\n   7.  Acknowledgements . . . .\
    \ . . . . . . . . . . . . . . . . . . . 13\n   Appendix A: Aggregate XML Schema\
    \ . . . . . . . . . . . . . . . . . 14\n   Appendix B: Aggregate DTD. . . . .\
    \ . . . . . . . . . . . . . . . . 17\n   Authors' Addresses . . . . . . . . .\
    \ . . . . . . . . . . . . . . . 18\n   Full Copyright Statement . . . . . . .\
    \ . . . . . . . . . . . . . . 19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document specifies how to use the Elliptic Curve Digital\n\
    \   Signature Algorithm (ECDSA) with XML signatures, as specified in\n   [XMLDSIG].\
    \  [XMLDSIG] defines only two digital signature methods: RSA\n   and DSA (DSS)\
    \ signatures.  This document introduces ECDSA signatures\n   as an additional\
    \ method.\n   This document uses both XML Schemas [XML-schema] (normative) and\
    \ DTDs\n   [XML] (informational) to specify the corresponding XML structures.\n"
- title: 2.  ECDSA
  contents:
  - "2.  ECDSA\n   The Elliptic Curve Digital Signature Algorithm (ECDSA) is the\n\
    \   elliptic curve analogue of the DSA (DSS) signature method\n   [FIPS-186-2].\
    \  It is defined in the ANSI X9.62 standard [X9.62].\n   Other compatible specifications\
    \ include FIPS 186-2 [FIPS-186-2], IEEE\n   1363 [IEEE1363], IEEE 1363a [IEEE1363a],\
    \ and SEC1 [SEC1].  [RFC3279]\n   describes ways to carry ECDSA keys in X.509\
    \ certificates.\n   [FIPS-186-2], [SEC2], and [X9.62] provide recommended elliptic\
    \ curve\n   domain parameters for use with ECDSA.\n   Like DSA, ECDSA incorporates\
    \ the use of a hash function.  Currently,\n   the only hash function defined for\
    \ use with ECDSA is the SHA-1\n   message digest algorithm [FIPS-180-1].\n   ECDSA\
    \ signatures are smaller than RSA signatures of similar\n   cryptographic strength.\
    \  ECDSA public keys (and certificates) are\n   smaller than similar strength\
    \ DSA keys and result in improved\n   communication efficiency.  On many platforms,\
    \ ECDSA operations can be\n   computed faster than similar strength RSA or DSA\
    \ operations (see\n   [KEYS] for a security analysis of key sizes across public\
    \ key\n   algorithms).  These advantages of signature size, bandwidth, and\n \
    \  computational efficiency may make ECDSA an attractive choice for\n   XMLDSIG\
    \ implementations.\n"
- title: 3.  Specifying ECDSA within XMLDSIG
  contents:
  - "3.  Specifying ECDSA within XMLDSIG\n   This section specifies how to use ECDSA\
    \ with XML Signature Syntax and\n   Processing [XMLDSIG].  It relies heavily on\
    \ the syntax and namespace\n   defined in [XMLDSIG].\n"
- title: 3.1.  Version, Namespaces, and Identifiers
  contents:
  - "3.1.  Version, Namespaces, and Identifiers\n   This specification makes no provision\
    \ for an explicit version number\n   in the syntax.  If a future version is needed,\
    \ it will use a\n   different namespace.\n   The XML namespace [XML-ns] URI that\
    \ MUST be used by implementations\n   of this (dated) specification is:\n    \
    \  http://www.w3.org/2001/04/xmldsig-more#\n   Elements in the namespace of the\
    \ [XMLDSIG] specification are marked\n   by using the namespace prefix \"dsig\"\
    \ in the remaining sections of\n   this document.\n   The identifier for the ECDSA\
    \ signature algorithm as defined in\n   [Eastlake] is:\n      http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1\n"
- title: 3.2.  XML Schema Preamble and DTD Replacement
  contents:
  - '3.2.  XML Schema Preamble and DTD Replacement

    '
- title: 3.2.1.  XML Schema Preamble
  contents:
  - "3.2.1.  XML Schema Preamble\n   The subsequent preamble is to be used with the\
    \ XML Schema definitions\n   given in the remaining sections of this document.\n\
    \     <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     <xs:schema\n       targetNamespace=\"\
    http://www.w3.org/2001/04/xmldsig-more#\"\n       xmlns:ecdsa=\"http://www.w3.org/2001/04/xmldsig-more#\"\
    \n       xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n       elementFormDefault=\"\
    qualified\" attributeFormDefault=\"unqualified\"\n       version=\"0.2\">\n"
- title: 3.2.2.  DTD Replacement
  contents:
  - "3.2.2.  DTD Replacement\n   To include ECDSA in XML-signature syntax, the following\
    \ definition of\n   the entity Key.ANY SHOULD replace the one in [XMLDSIG]:\n\
    \      <!ENTITY % KeyValue.ANY '| ecdsa:ECDSAKeyValue'>\n"
- title: 3.3.  ECDSA Signatures
  contents:
  - "3.3.  ECDSA Signatures\n   The input to the ECDSA algorithm is the canonicalized\
    \ representation\n   of the dsig:SignedInfo element as specified in Section 3\
    \ of\n   [XMLDSIG].\n   The output of the ECDSA algorithm consists of a pair of\
    \ integers\n   usually referred by the pair (r, s).  The signature value (text\
    \ value\n   of element dsig:SignatureValue - see section 4.2 of [XMLDSIG])\n \
    \  consists of the base64 encoding of the concatenation of two octet-\n   streams\
    \ that respectively result from the octet-encoding of the\n   values r and s.\
    \  This concatenation is described in section E3.1 of\n   [IEEE1363].\n"
- title: 3.4.  ECDSA Key Values
  contents:
  - "3.4.  ECDSA Key Values\n   The syntax used for ECDSA key values closely follows\
    \ the ASN.1 syntax\n   defined in ANSI X9.62 [X9.62].\n"
- title: 3.4.1.  Key Value Root Element
  contents:
  - "3.4.1.  Key Value Root Element\n   The element ECDSAKeyValue is used for encoding\
    \ ECDSA public keys.\n   For use with XMLDSIG, simply use this element inside\
    \ dsig:KeyValue\n   (such as the predefined elements dsig:RSAKeyValue or\n   dsig:DSAKeyValue).\n\
    \   The element consists of an optional subelement DomainParameters and\n   the\
    \ mandatory subelement PublicKey.  If Domainparameters is missing,\n   the application\
    \ implicitly knows about it from other means.\n"
- title: 'Schema Definition:'
  contents:
  - "Schema Definition:\n   <xs:element name=\"ECDSAKeyValue\" type=\"ecdsa:ECDSAKeyValueType\"\
    />\n   <xs:complexType name=\"ECDSAKeyValueType\">\n     <xs:sequence>\n     \
    \  <xs:element name=\"DomainParameters\" type=\"ecdsa:DomainParamsType\"\n   \
    \                minOccurs=\"0\"/>\n       <xs:element name=\"PublicKey\" type=\"\
    ecdsa:ECPointType\"/>\n     </xs:sequence>\n   </xs:complexType>\n"
- title: 'DTD Definition:'
  contents:
  - "DTD Definition:\n   <!ELEMENT ECDSAKeyValue (DomainParameters?, PublicKey)>\n\
    \   <!ELEMENT PublicKey (X, Y)?>\n   <!ELEMENT X EMPTY>\n   <!ATTLIST X Value\
    \ CDATA #REQUIRED>\n   <!ELEMENT Y EMPTY>\n   <!ATTLIST Y Value CDATA #REQUIRED>\n"
- title: 3.4.2.  EC Domain Parameters
  contents:
  - "3.4.2.  EC Domain Parameters\n   Domain parameters can be encoded either explicitly\
    \ using element\n   ExplicitParams, or by reference using element NamedCurve.\
    \  The latter\n   simply consists of an attribute named URN, which bears a uniform\n\
    \   resource name as its value.  For the named curves of standards like\n   [X9.62],\
    \ [FIPS-186-2], or [SEC2], the OIDs of these curves SHOULD be\n   used in this\
    \ attribute, e.g., URN=\"urn:oid:1.2.840.10045.3.1.1\".  The\n   mechanism for\
    \ encoding OIDs in URNs is shown in [RFC3061].\n   Schema Definition:\n      <xs:complexType\
    \ name=\"DomainParamsType\">\n        <xs:choice>\n          <xs:element name=\"\
    ExplicitParams\"\n                      type=\"ecdsa:ExplicitParamsType\"/>\n\
    \          <xs:element name=\"NamedCurve\">\n            <xs:complexType>\n  \
    \            <xs:attribute name=\"URN\" type=\"xs:anyURI\" use=\"required\"/>\n\
    \            </xs:complexType>\n          </xs:element>\n        </xs:choice>\n\
    \      </xs:complexType>\n   DTD Definition:\n      <!ELEMENT DomainParameters\
    \ (ExplicitParams | NamedCurve)>\n      <!ELEMENT NamedCurve EMPTY>\n      <!ATTLIST\
    \ NamedCurve URN CDATA #REQUIRED>\n   The element ExplicitParams is used for explicit\
    \ encoding of domain\n   parameters.  It contains three subelements: FieldParams\
    \ describes the\n   underlying field, CurveParams describes the elliptic curve,\
    \ and\n   BasePointParams describes the base point of the elliptic curve.\n"
- title: 'Schema Definition:'
  contents:
  - "Schema Definition:\n   <xs:complexType name=\"ExplicitParamsType\">\n     <xs:sequence>\n\
    \       <xs:element name=\"FieldParams\" type=\"ecdsa:FieldParamsType\"/>\n  \
    \     <xs:element name=\"CurveParams\" type=\"ecdsa:CurveParamsType\"/>\n    \
    \   <xs:element name=\"BasePointParams\"\n                   type=\"ecdsa:BasePointParamsType\"\
    />\n     </xs:sequence>\n   </xs:complexType>\n"
- title: 'DTD Definition:'
  contents:
  - "DTD Definition:\n   <!ELEMENT ExplicitParams (FieldParams, CurveParams, BasePointParams)>\n"
- title: 3.4.2.1.  Field Parameters
  contents:
  - "3.4.2.1.  Field Parameters\n   The element FieldParams is used for encoding field\
    \ parameters.  The\n   corresponding XML Schema type FieldParamsType is declared\
    \ abstract\n   and will be extended by specialized types for prime field,\n  \
    \ characteristic two field, and odd characteristic extension fields\n   parameters.\n\
    \   The XML Schema type PrimeFieldParamsType is derived from the\n   FieldParamsType\
    \ and is used for encoding prime field parameters.  The\n   type contains the\
    \ order of the prime field as its single subelement\n   P.\n   The XML Schema\
    \ type CharTwoFieldParamsType is derived from\n   FieldParamsType and is used\
    \ for encoding parameters of a\n   characteristic two field.  It is again an abstract\
    \ type and will be\n   extended by specialized types for trinomial and pentanomial\
    \ base\n   fields.  F2m Gaussian Normal Base fields are not supported by this\n\
    \   specification to relieve interoperability.  Common to both\n   specialized\
    \ types is the element M, the extension degree of the\n   field.\n   The XML Schema\
    \ type TnBFieldParamsType is derived from the\n   CharTwoFieldParamsType and is\
    \ used for encoding trinomial base\n   fields.  It adds the single element K,\
    \ which represents the integer\n   k, where x^m + x^k + 1 is the reduction polynomial.\n\
    \   The XML Schema type PnBFieldParamsType is derived from the\n   CharTwoFieldParamsType\
    \ and is used for encoding pentanomial base\n   fields.  It adds the three elements\
    \ K1, K2 and K3, which represent\n   the integers k1, k2 and k3 respectively,\
    \ where x^m + x^k3 + x^k2 +\n   x^k1 + 1 is the reduction polynomial.\n   The\
    \ XML Schema type OddCharExtensionFieldParamsType is derived from\n   the FieldParamsType\
    \ and is used for encoding parameters of an odd\n   characteristic extension field.\
    \  This type contains two elements: M,\n   which represents the extension degree\
    \ of the field m, and W, which\n   represents the integer w, where x^m - w is\
    \ the reduction polynomial.\n   Schema Definition:\n      <xs:complexType name=\"\
    FieldParamsType\" abstract=\"true\"/>\n      <xs:complexType name=\"PrimeFieldParamsType\"\
    >\n        <xs:complexContent>\n          <xs:extension base=\"ecdsa:FieldParamsType\"\
    >\n            <xs:sequence>\n              <xs:element name=\"P\" type=\"xs:positiveInteger\"\
    />\n            </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n\
    \      </xs:complexType>\n      <xs:complexType name=\"CharTwoFieldParamsType\"\
    \ abstract=\"true\">\n        <xs:complexContent>\n          <xs:extension base=\"\
    ecdsa:FieldParamsType\">\n            <xs:sequence>\n              <xs:element\
    \ name=\"M\" type=\"xs:positiveInteger\"/>\n            </xs:sequence>\n     \
    \     </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n\
    \      <xs:complexType name=\"OddCharExtensionFieldParamsType\">\n        <xs:complexContent>\n\
    \          <xs:extension base=\"ecdsa:FieldParamsType\">\n            <xs:sequence>\n\
    \              <xs:element name=\"M\" type=\"xs:positiveInteger\"/>\n        \
    \      <xs:element name=\"W\" type=\"xs:positiveInteger\"/>\n            </xs:sequence>\n\
    \          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n\
    \      <xs:complexType name=\"TnBFieldParamsType\">\n        <xs:complexContent>\n\
    \          <xs:extension base=\"ecdsa:CharTwoFieldParamsType\">\n            <xs:sequence>\n\
    \              <xs:element name=\"K\" type=\"xs:positiveInteger\"/>\n        \
    \    </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n\
    \      </xs:complexType>\n      <xs:complexType name=\"PnBFieldParamsType\">\n\
    \        <xs:complexContent>\n          <xs:extension base=\"ecdsa:CharTwoFieldParamsType\"\
    >\n            <xs:sequence>\n              <xs:element name=\"K1\" type=\"xs:positiveInteger\"\
    />\n              <xs:element name=\"K2\" type=\"xs:positiveInteger\"/>\n    \
    \          <xs:element name=\"K3\" type=\"xs:positiveInteger\"/>\n           \
    \ </xs:sequence>\n          </xs:extension>\n        </xs:complexContent>\n  \
    \    </xs:complexType>\n   DTD Definition:\n      <!ELEMENT FieldParams (P | (M,\
    \ K) | (M, K1, K2, K3) | (M, W))>\n      <!ELEMENT P (#PCDATA)>\n      <!ELEMENT\
    \ M (#PCDATA)>\n      <!ELEMENT K (#PCDATA)>\n      <!ELEMENT K1 (#PCDATA)>\n\
    \      <!ELEMENT K2 (#PCDATA)>\n      <!ELEMENT K3 (#PCDATA)>\n      <!ELEMENT\
    \ W (#PCDATA)>\n"
- title: 3.4.2.2.  Curve Parameters
  contents:
  - "3.4.2.2.  Curve Parameters\n   The element CurveParams is used for encoding parameters\
    \ of the\n   elliptic curve.  The corresponding XML Schema type CurveParamsType\n\
    \   bears the elements A and B representing the coefficients a and b of\n   the\
    \ elliptic curve.  According to the algorithm specified in annex\n   A3.3 of [X9.62],\
    \ the optional element Seed contains the value used to\n   derive the coefficients\
    \ of a randomly generated elliptic curve.\n   Schema Definition:\n      <xs:complexType\
    \ name=\"CurveParamsType\">\n        <xs:sequence>\n          <xs:element name=\"\
    A\" type=\"ecdsa:FieldElemType\"/>\n          <xs:element name=\"B\" type=\"ecdsa:FieldElemType\"\
    />\n          <xs:element name=\"Seed\" type=\"xs:hexBinary\" minOccurs=\"0\"\
    />\n        </xs:sequence>\n      </xs:complexType>\n   DTD Definition:\n    \
    \  <!ELEMENT CurveParams (A, B, Seed?)>\n      <!ELEMENT A EMPTY>\n      <!ATTLIST\
    \ A Value CDATA #REQUIRED>\n      <!ELEMENT B EMPTY>\n      <!ATTLIST B Value\
    \ CDATA #REQUIRED>\n      <!ELEMENT Seed (#PCDATA)>\n"
- title: 3.4.2.3.  Base Point Parameters
  contents:
  - "3.4.2.3.  Base Point Parameters\n   The element BasePointParams is used for encoding\
    \ parameters regarding\n   the base point of the elliptic curve.  BasePoint represents\
    \ the base\n   point itself, Order provides the order of the base point, and\n\
    \   Cofactor optionally provides the cofactor of the base point.\n   Schema Definition:\n\
    \      <xs:complexType name=\"BasePointParamsType\">\n        <xs:sequence>\n\
    \          <xs:element name=\"BasePoint\" type=\"ecdsa:ECPointType\"/>\n     \
    \     <xs:element name=\"Order\" type=\"xs:positiveInteger\"/>\n          <xs:element\
    \ name=\"Cofactor\" type=\"xs:positiveInteger\"\n                      minOccurs=\"\
    0\"/>\n        </xs:sequence>\n      </xs:complexType>\n   DTD Definition:\n \
    \     <!ELEMENT BasePointParams (BasePoint, Order, Cofactor?)>\n      <!ELEMENT\
    \ BasePoint (X, Y)?>\n      <!ELEMENT Order (#PCDATA)>\n      <!ELEMENT Cofactor\
    \ (#PCDATA)>\n"
- title: 3.4.3.  EC Points
  contents:
  - "3.4.3.  EC Points\n   The XML Schema type ECPointType is used for encoding a\
    \ point on the\n   elliptic curve.  It consists of the subelements X and Y, providing\n\
    \   the x and y coordinates of the point.  Point compression\n   representation\
    \ is not supported by this specification for the sake of\n   simple design.\n\
    \   The point at infinity is encoded by omitting both elements X and Y.\n   The\
    \ subelements X and Y are of type FieldElemType.  This is an\n   abstract type\
    \ for encoding elements of the elliptic curves underlying\n   field and is extended\
    \ by specialized types for prime field elements\n   and characteristic two field\
    \ elements.\n   The XML Schema type PrimeFieldElemType is used for encoding prime\n\
    \   field elements.  It contains a single attribute named Value whose\n   value\
    \ represents the field element as an integer.\n   The XML Schema type CharTwoFieldElemType\
    \ is used for encoding\n   characteristic two field elements.  It contains a single\
    \ attribute\n   named Value whose value represents the field element as an octet\n\
    \   string.  The octet string must be composed as shown in paragraph 2 of\n  \
    \ section 4.3.3 of [X9.62].\n   The XML Schema type OddCharExtensionFieldElemType\
    \ is used for\n   encoding odd characteristic extension field elements.  It contains\
    \ a\n   single attribute named Value whose value represents the field element\n\
    \   as an integer.  The integer must be composed as shown in section\n   5.3.3\
    \ of [IEEE1363a].\n   Schema Definition:\n      <xs:complexType name=\"ECPointType\"\
    >\n        <xs:sequence minOccurs=\"0\">\n          <xs:element name=\"X\" type=\"\
    ecdsa:FieldElemType\"/>\n          <xs:element name=\"Y\" type=\"ecdsa:FieldElemType\"\
    />\n        </xs:sequence>\n      </xs:complexType>\n      <xs:complexType name=\"\
    FieldElemType\" abstract=\"true\"/>\n      <xs:complexType name=\"PrimeFieldElemType\"\
    >\n        <xs:complexContent>\n          <xs:extension base=\"ecdsa:FieldElemType\"\
    >\n            <xs:attribute name=\"Value\" type=\"xs:nonNegativeInteger\"\n \
    \                         use=\"required\"/>\n          </xs:extension>\n    \
    \    </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType name=\"\
    CharTwoFieldElemType\">\n        <xs:complexContent>\n          <xs:extension\
    \ base=\"ecdsa:FieldElemType\">\n            <xs:attribute name=\"Value\" type=\"\
    xs:hexBinary\"\n                          use=\"required\"/>\n          </xs:extension>\n\
    \        </xs:complexContent>\n      </xs:complexType>\n      <xs:complexType\
    \ name=\"OddCharExtensionFieldElemType\">\n        <xs:complexContent>\n     \
    \     <xs:extension base=\"ecdsa:FieldElemType\">\n            <xs:attribute name=\"\
    Value\" type=\"xs:nonNegativeInteger\"\n                          use=\"required\"\
    />\n          </xs:extension>\n        </xs:complexContent>\n      </xs:complexType>\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Implementers should ensure that appropriate security\
    \ measures are in\n   place when they deploy ECDSA within XMLDSIG.  In particular,\
    \ the\n   security of ECDSA requires careful selection of both key sizes and\n\
    \   elliptic curve domain parameters.  Selection guidelines for these\n   parameters\
    \ and some specific recommended curves that are considered\n   safe are provided\
    \ in [X9.62], [FIPS-186-2], and [SEC2].  For further\n   security discussion,\
    \ see [XMLDSIG].\n"
- title: 5.  Normative References
  contents:
  - "5.  Normative References\n   [Eastlake]   Eastlake 3rd, D., \"Additional XML\
    \ Security Uniform\n                Resource Identifiers (URIs)\", RFC 4051, April\
    \ 2005.\n   [X9.62]      American National Standards Institute.  ANSI X9.62-1998,\n\
    \                Public Key Cryptography for the Financial Services\n        \
    \        Industry:  The Elliptic Curve Digital Signature\n                Algorithm.\
    \  January 1999.\n   [XMLDSIG]    Eastlake 3rd, D., Reagle, J., and D. Solo, \"\
    (Extensible\n                Markup Language) XML-Signature Syntax and Processing\"\
    ,\n                RFC 3275, March 2002.\n   [XML-schema] Beech, D., Maloney,\
    \ M., Mendelsohn, N., and Thompson,\n                H., XML Schema Part 1: Structures,\
    \ W3C Recommendation,\n                May 2001.  http://www.w3.org/TR/2001/REC-xmlschema-1-\n\
    \                20010502/ Biron, P., and Malhotra, A., ML Schema Part 2:\n  \
    \              Datatypes, W3C Recommendation, May 2001.\n                http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [FIPS-180-1] Federal Information Processing Standards\
    \ Publication\n                (FIPS PUB) 180-1, Secure Hash Standard, April 1995.\n\
    \   [FIPS-186-2] Federal Information Processing Standards Publication\n      \
    \          (FIPS PUB) 186-2, Digital Signature Standard, January\n           \
    \     2000.\n   [IEEE1363]   Institute for Electrical and Electronics Engineers\n\
    \                (IEEE) Standard 1363-2000, Standard Specifications for\n    \
    \            Public Key Cryptography, January 2000.\n   [IEEE1363a]  Institute\
    \ for Electrical and Electronics Engineers\n                (IEEE) Standard 1363,\
    \ Draft Standard Specifications for\n                Public Key Cryptography --\
    \ Amendment 1: Additional\n                Techniques, October 2002.\n   [KEYS]\
    \       Lenstra, A.K. and Verheul, E.R., Selecting Cryptographic\n           \
    \     Key Sizes.  October 1999.  Presented at Public Key\n                Cryptography\
    \ Conference, Melbourne, Australia, January\n                2000.  http://www.cryptosavvy.com/\n\
    \   [RFC3061]    Mealling, M., \"A URN Namespace of Object Identifiers\",\n  \
    \              RFC 3061, February 2001.\n   [RFC3279]    Bassham, L., Polk, W.,\
    \ and R. Housley, \"Algorithms and\n                Identifiers for the Internet\
    \ X.509 Public Key\n                Infrastructure Certificate and Certificate\
    \ Revocation\n                List (CRL) Profile\", RFC 3279, April 2002.\n  \
    \ [SEC1]       Standards for Efficient Cryptography Group, SEC 1:\n          \
    \      Elliptic Curve Cryptography, Version 1.0, September\n                2000.\
    \  http://www.secg.org\n   [SEC2]       Standards for Efficient Cryptography Group,\
    \ SEC 2:\n                Recommended Elliptic Curve Domain Parameters, Version\n\
    \                1.0, September 2000.  http://www.secg.org\n   [XML]        Bray,\
    \ T., Maler, E., Paoli, J., and Sperberg-McQueen, C.\n                M., Extensible\
    \ Markup Language (XML) 1.0 (Second\n                Edition), W3C Recommendation,\
    \ October 2000.\n                http://www.w3.org/TR/2000/REC-xml-20001006\n\
    \   [XML-ns]     Bray, T., Hollander, D., and Layman, A., Namespaces in\n    \
    \            XML, W3C Recommendation, January 1999.\n                http://www.w3.org/TR/1999/REC-xml-names-19990114/\n"
- title: 7.  Acknowledgements
  contents:
  - "7.  Acknowledgements\n   The authors would like to acknowledge the many helpful\
    \ comments of\n   Wolfgang Bauer, Donald Eastlake, Tom Gindin, Chris Hawk, Akihiro\n\
    \   Kato, Shiho Moriai, Joseph M. Reagle Jr., and Francois Rousseau.\n"
- title: Appendix A.  Aggregate XML Schema
  contents:
  - "Appendix A.  Aggregate XML Schema\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   <xs:schema\n     targetNamespace=\"http://www.w3.org/2001/04/xmldsig-more#\"\
    \n     xmlns:ecdsa=\"http://www.w3.org/2001/04/xmldsig-more#\"\n     xmlns:xs=\"\
    http://www.w3.org/2001/XMLSchema\"\n     elementFormDefault=\"qualified\"\n  \
    \   attributeFormDefault=\"unqualified\"\n     version=\"0.2\">\n     <!--ECDSA\
    \ key value root element-->\n     <xs:element name=\"ECDSAKeyValue\" type=\"ecdsa:ECDSAKeyValueType\"\
    />\n     <xs:complexType name=\"ECDSAKeyValueType\">\n       <xs:sequence>\n \
    \        <xs:element name=\"DomainParameters\"\n                     type=\"ecdsa:DomainParamsType\"\
    \ minOccurs=\"0\"/>\n         <xs:element name=\"PublicKey\" type=\"ecdsa:ECPointType\"\
    />\n       </xs:sequence>\n     </xs:complexType>\n     <!--EC domain parameters-->\n\
    \     <xs:complexType name=\"DomainParamsType\">\n       <xs:choice>\n       \
    \  <xs:element name=\"ExplicitParams\"\n                     type=\"ecdsa:ExplicitParamsType\"\
    />\n         <xs:element name=\"NamedCurve\">\n           <xs:complexType>\n \
    \            <xs:attribute name=\"URN\" type=\"xs:anyURI\" use=\"required\"/>\n\
    \           </xs:complexType>\n         </xs:element>\n       </xs:choice>\n \
    \    </xs:complexType>\n     <xs:complexType name=\"FieldParamsType\" abstract=\"\
    true\"/>\n     <xs:complexType name=\"PrimeFieldParamsType\">\n       <xs:complexContent>\n\
    \         <xs:extension base=\"ecdsa:FieldParamsType\">\n           <xs:sequence>\n\
    \             <xs:element name=\"P\" type=\"xs:positiveInteger\"/>\n         \
    \  </xs:sequence>\n         </xs:extension>\n       </xs:complexContent>\n   \
    \  </xs:complexType>\n     <xs:complexType name=\"CharTwoFieldParamsType\" abstract=\"\
    true\">\n       <xs:complexContent>\n         <xs:extension base=\"ecdsa:FieldParamsType\"\
    >\n           <xs:sequence>\n             <xs:element name=\"M\" type=\"xs:positiveInteger\"\
    />\n           </xs:sequence>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"OddCharExtensionFieldParamsType\"\
    >\n       <xs:complexContent>\n         <xs:extension base=\"ecdsa:FieldParamsType\"\
    >\n           <xs:sequence>\n             <xs:element name=\"M\" type=\"xs:positiveInteger\"\
    />\n             <xs:element name=\"W\" type=\"xs:positiveInteger\"/>\n      \
    \     </xs:sequence>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"TnBFieldParamsType\">\n \
    \      <xs:complexContent>\n         <xs:extension base=\"ecdsa:CharTwoFieldParamsType\"\
    >\n           <xs:sequence>\n             <xs:element name=\"K\" type=\"xs:positiveInteger\"\
    />\n           </xs:sequence>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"PnBFieldParamsType\">\n \
    \      <xs:complexContent>\n         <xs:extension base=\"ecdsa:CharTwoFieldParamsType\"\
    >\n           <xs:sequence>\n             <xs:element name=\"K1\" type=\"xs:positiveInteger\"\
    />\n             <xs:element name=\"K2\" type=\"xs:positiveInteger\"/>\n     \
    \        <xs:element name=\"K3\" type=\"xs:positiveInteger\"/>\n           </xs:sequence>\n\
    \         </xs:extension>\n       </xs:complexContent>\n     </xs:complexType>\n\
    \     <xs:complexType name=\"ExplicitParamsType\">\n       <xs:sequence>\n   \
    \      <xs:element name=\"FieldParams\" type=\"ecdsa:FieldParamsType\"/>\n   \
    \      <xs:element name=\"CurveParams\" type=\"ecdsa:CurveParamsType\"/>\n   \
    \      <xs:element name=\"BasePointParams\"\n                     type=\"ecdsa:BasePointParamsType\"\
    />\n       </xs:sequence>\n     </xs:complexType>\n     <xs:complexType name=\"\
    CurveParamsType\">\n       <xs:sequence>\n         <xs:element name=\"A\" type=\"\
    ecdsa:FieldElemType\"/>\n         <xs:element name=\"B\" type=\"ecdsa:FieldElemType\"\
    />\n         <xs:element name=\"Seed\" type=\"xs:hexBinary\" minOccurs=\"0\"/>\n\
    \       </xs:sequence>\n     </xs:complexType>\n     <xs:complexType name=\"BasePointParamsType\"\
    >\n       <xs:sequence>\n         <xs:element name=\"BasePoint\" type=\"ecdsa:ECPointType\"\
    />\n         <xs:element name=\"Order\" type=\"xs:positiveInteger\"/>\n      \
    \   <xs:element name=\"Cofactor\" type=\"xs:positiveInteger\"\n              \
    \       minOccurs=\"0\"/>\n       </xs:sequence>\n     </xs:complexType>\n   \
    \  <!--EC point-->\n     <xs:complexType name=\"ECPointType\">\n       <xs:sequence\
    \ minOccurs=\"0\">\n         <xs:element name=\"X\" type=\"ecdsa:FieldElemType\"\
    />\n         <xs:element name=\"Y\" type=\"ecdsa:FieldElemType\"/>\n       </xs:sequence>\n\
    \     </xs:complexType>\n     <!--Field element-->\n     <xs:complexType name=\"\
    FieldElemType\" abstract=\"true\"/>\n     <xs:complexType name=\"PrimeFieldElemType\"\
    >\n       <xs:complexContent>\n         <xs:extension base=\"ecdsa:FieldElemType\"\
    >\n           <xs:attribute name=\"Value\" type=\"xs:nonNegativeInteger\"\n  \
    \                       use=\"required\"/>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"CharTwoFieldElemType\">\n\
    \       <xs:complexContent>\n         <xs:extension base=\"ecdsa:FieldElemType\"\
    >\n           <xs:attribute name=\"Value\" type=\"xs:hexBinary\"\n           \
    \              use=\"required\"/>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n     <xs:complexType name=\"OddCharExtensionFieldElemType\"\
    >\n       <xs:complexContent>\n         <xs:extension base=\"ecdsa:FieldElemType\"\
    >\n           <xs:attribute name=\"Value\" type=\"xs:nonNegativeInteger\"\n  \
    \                       use=\"required\"/>\n         </xs:extension>\n       </xs:complexContent>\n\
    \     </xs:complexType>\n   </xs:schema>\n"
- title: Appendix B.  Aggregate DTD
  contents:
  - "Appendix B.  Aggregate DTD\n   <!ELEMENT ECDSAKeyValue (DomainParameters?, PublicKey)>\n\
    \   <!ELEMENT PublicKey (X, Y)?>\n   <!ELEMENT X EMPTY>\n   <!ATTLIST X Value\
    \ CDATA #REQUIRED>\n   <!ELEMENT Y EMPTY>\n   <!ATTLIST Y Value CDATA #REQUIRED>\n\
    \   <!ELEMENT DomainParameters (ExplicitParams | NamedCurve)>\n   <!ELEMENT NamedCurve\
    \ EMPTY>\n   <!ATTLIST NamedCurve URN CDATA #REQUIRED>\n   <!ELEMENT ExplicitParams\
    \ (FieldParams, CurveParams, BasePointParams)>\n   <!ELEMENT FieldParams (P |\
    \ (M, K) | (M, K1, K2, K3) | (M, W))>\n   <!ELEMENT P (#PCDATA)>\n   <!ELEMENT\
    \ M (#PCDATA)>\n   <!ELEMENT W (#PCDATA)>\n   <!ELEMENT K (#PCDATA)>\n   <!ELEMENT\
    \ K1 (#PCDATA)>\n   <!ELEMENT K2 (#PCDATA)>\n   <!ELEMENT K3 (#PCDATA)>\n   <!ELEMENT\
    \ CurveParams (A, B, Seed?)>\n   <!ELEMENT A EMPTY>\n   <!ATTLIST A Value CDATA\
    \ #REQUIRED>\n   <!ELEMENT B EMPTY>\n   <!ATTLIST B Value CDATA #REQUIRED>\n \
    \  <!ELEMENT Seed (#PCDATA)>\n   <!ELEMENT BasePointParams (BasePoint, Order,\
    \ Cofactor?)>\n   <!ELEMENT BasePoint (X, Y)?>\n   <!ELEMENT Order (#PCDATA)>\n\
    \   <!ELEMENT Cofactor (#PCDATA)>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Simon Blake-Wilson\n   BCI\n   96 Spadina Ave, Unit 606\n\
    \   Toronto, ON, M5V 2J6, Canada\n   EMail: sblakewilson@bcisse.com\n   Gregor\
    \ Karlinger\n   Federal Staff Office for IT Strategies/Federal Chancellery\n \
    \  Ballhausplatz 2\n   1014 Wien, Austria\n   EMail: gregor.karlinger@cio.gv.at\n\
    \   Tetsutaro Kobayashi\n   NTT Laboratories\n   1-1 Hikarinooka, Yokosuka, 239-0847,\
    \ Japan\n   EMail: kotetsu@isl.ntt.co.jp\n   Yongge Wang\n   University of North\
    \ Carolina at Charlotte\n   9201 University City Blvd\n   Charlotte, NC 28223,\
    \ USA\n   EMail: yonwang@uncc.edu\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
