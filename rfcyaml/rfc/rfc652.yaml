- title: __initial_text__
  contents:
  - ''
- title: 'Request for Comments:  652                   D. Crocker (UCLA-NMC)'
  contents:
  - "Request for Comments:  652                   D. Crocker (UCLA-NMC)\n        \
    \                                                25 Oct. 74\n"
- title: 'NIC #31155'
  contents:
  - 'NIC #31155

    '
- title: 'Online file:  [ISI]<DCROCKER>NAOCRD.TXT'
  contents:
  - "Online file:  [ISI]<DCROCKER>NAOCRD.TXT\n      Telnet Output Carriage-Return\
    \ Disposition Option\n"
- title: 1.  Command name and code
  contents:
  - "1.  Command name and code\n    NAOCRD     10   (Negotiate About Output Carriage-Return\
    \ Disposition)\n"
- title: 2.  Command meanings
  contents:
  - "2.  Command meanings\n        In the following, we are discussing  a  simplex\
    \  connection,  as\n    described in the NAOL and NAOP Telnet options.\n    IAC\
    \ DO NAOCRD        The data sender requests or agrees to negotiate\n         \
    \                about    output    carriage-return    character\n           \
    \              disposition with the  data  receiver.   In  the\n             \
    \            case  where  agreement  has been reached and in\n               \
    \          the absence  of  further  subnegotiations,  the\n                 \
    \        data  receiver is assumed to be handling output\n                   \
    \      carriage-returns.\n    IAC DON'T NAOCRD     The data  sender  refuses \
    \ to  negotiate  about\n                         output  carriage-return  disposition\
    \  with  the\n                         data receiver,  or  demands  a  return\
    \  to  the\n                         unnegotiated default mode.\n    IAC WILL\
    \ NAOCRD      The  data  receiver  requests  or   agrees   to\n              \
    \           negotiate    about    output    carriage-return\n                \
    \         disposition with the sender.  In the case where\n                  \
    \       agreement  has  been reached and in the absence\n                    \
    \     of further subnegotiations, the  data  receiver\n                      \
    \   alone   is   assumed   to  be  handling  output\n                        \
    \ carriage-returns.\n    IAC WON'T NAOCRD     The data receiver refuses  to  negotiate\
    \  about\n                         output  carriage-return disposition, or demands\n\
    \                         a return to the unnegotiated default mode.\n    IAC\
    \ SB NAOCRD DS <8-bit value> IAC SE\n                         The  data  sender\
    \  specifies,  with  the  8-bit\n    IAC SB NAOCRD DR <8-bit value> IAC SE   \
    \     The    data    receiver\n                         specifies,  with  the\
    \  8-bit value, which party\n                         should handle carriage-returns\
    \ and  what  their\n                         disposition should be.  The code\
    \ for DR is 0.\n"
- title: 3.  Default
  contents:
  - "3.  Default\n        DON'T NAOCRD/WON'T NAOCRD.    In   the   default   absence\
    \    of\n    negotiations  concerning  which party, data sender or data receiver,\n\
    \    is handling output carriage-returns, neither party  is  required  to\n  \
    \  handle   carriage-returns  and  neither  party  is  prohibited  from\n    handling\
    \ them; but it is appropriate if at least the  data  receiver\n    handles carriage-returns,\
    \ albeit primitively.\n"
- title: 4.  Motivation for the Option
  contents:
  - "4.  Motivation for the Option\n        Please refer to section 4 of the NAOL\
    \ and  of  the  NAOP  Telnet\n    option descriptions.\n"
- title: 5.  Description of the Option
  contents:
  - "5.  Description of the Option\n        The data sender and the data receiver\
    \ use the 8-bit value  along\n    with the NAOCRD SB commands as follows:\n  \
    \  8-bit value          Meaning\n    0                    Command sender  suggests\
    \  that  he  alone  will\n                         handle carriage-returns, for\
    \ the connection. \n    1 to 250             Command sender suggests that  the\
    \  other  party\n                         alone   should   handle  carriage-returns,\
    \  but\n                         suggests that a delay of the indicated value\
    \ be\n                         used.     The    value   is   the   number   of\n\
    \                         character-times to wait or number  of  NULs  to\n  \
    \                       insert  in  the  data stream before sending the\n    \
    \                     next  data  character.    (See   qualification,\n      \
    \                   below.) \n    251                  Not allowed, in order \
    \ to  be  compatible  with\n                         related Telnet options.\n\
    \    252                  Command sender suggests that  the  other  party\n  \
    \                       alone  handle  carriage-returns,  but  suggests\n    \
    \                     that they be discarded.\n    254                  Command\
    \ sender suggests that  the  other  party\n                         alone   should\
    \   handle   carriage-returns  but\n                         suggests  waiting\
    \  for  a   character   to   be\n                         transmitted  (on  the\
    \ other simplex connection)\n                         before sending more data.\
    \  (See  qualification,\n                         below.)   Note  that, due to\
    \ the assynchrony of\n                         the two simplex connections, phase\
    \ problems can\n                         occur with this option. \n    255   \
    \               Command sender suggests that  the  other  party\n            \
    \             alone   should   handle   carriage-returns  and\n              \
    \           suggests nothing about how it should be done.\n    The guiding rules\
    \ are that:\n        (1) if neither data receiver nor data  sender  wants  to\
    \  handle\n        carriage-returns, the data receiver must do it, and\n     \
    \   (2) if both  data  receiver  and  data  sender  want  to  handle\n       \
    \ carriage-returns, the data sender gets to do it.\n        The reasoning for\
    \ the former rule is that if neither wants to do\n    it,  then  the default in\
    \ the NAOCRD option dominates.  If both want\n    to do it, the sender, who is\
    \  presumed  to  have  special  knowledge\n    about  the data, should be allowed\
    \ to do it, taking into account any\n    suggestions the receiver may make.\n\
    \        Note that carriage-return delays, controlled by the data sender,\n  \
    \  must  consist  of  NUL  characters  inserted  immediately  after the\n    character\
    \ in question.  This is necessary due to the assynchrony  of\n    network  transmissions.\
    \   Due  to the Telnet end-of-line convention,\n    with carriage-returns followed\
    \ by a linefeed, any  NULs  that  would\n    otherwise  be  placed after the carriage-return\
    \ must be placed after\n    the linefeed, regardless of any modifications that\
    \ may  additionally\n    be made to the line feed (see NAOLFD Telnet option).\
    \ \n        As with all option negotiations, neither party should suggest  a\n\
    \    state  already  in  effect  except  to  refuse to negotiate; changes\n  \
    \  should be acknowledged; and once refused, an option  should  not  be\n    resuggested\
    \   until   \"something  changes\"  (e.g.,  another  process\n    starts).\n"
