- title: __initial_text__
  contents:
  - '   Extensible Messaging and Presence Protocol (XMPP): Address Format

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the format for addresses used in the Extensible\n\
    \   Messaging and Presence Protocol (XMPP), including support for\n   non-ASCII\
    \ characters.  This document updates RFC 3920.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This\
    \ document is a product of the Internet Engineering Task Force\n   (IETF).  It\
    \ represents the consensus of the IETF community.  It has\n   received public\
    \ review and has been approved for publication by the\n   Internet Engineering\
    \ Steering Group (IESG).  Further information on\n   Internet Standards is available\
    \ in Section 2 of RFC 5741.\n   Information about the current status of this document,\
    \ any errata,\n   and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6122.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n     1.1.  Overview . . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  3\n     1.2.  Terminology  . . . . . . . . . . . . . . . . . . .\
    \ . . . .  4\n   2.  Addresses  . . . . . . . . . . . . . . . . . . . . . . .\
    \ . . .  4\n     2.1.  Fundamentals . . . . . . . . . . . . . . . . . . . . .\
    \ . .  4\n     2.2.  Domainpart . . . . . . . . . . . . . . . . . . . . . . .\
    \ .  6\n     2.3.  Localpart  . . . . . . . . . . . . . . . . . . . . . . . .\
    \  7\n     2.4.  Resourcepart . . . . . . . . . . . . . . . . . . . . . . .  8\n\
    \   3.  Internationalization Considerations  . . . . . . . . . . . . .  9\n  \
    \ 4.  Security Considerations  . . . . . . . . . . . . . . . . . . .  9\n    \
    \ 4.1.  Reuse of Stringprep  . . . . . . . . . . . . . . . . . . .  9\n     4.2.\
    \  Reuse of Unicode . . . . . . . . . . . . . . . . . . . . .  9\n     4.3.  Address\
    \ Spoofing . . . . . . . . . . . . . . . . . . . . .  9\n       4.3.1.  Address\
    \ Forging  . . . . . . . . . . . . . . . . . . . 10\n       4.3.2.  Address Mimicking\
    \  . . . . . . . . . . . . . . . . . . 10\n   5.  IANA Considerations  . . . .\
    \ . . . . . . . . . . . . . . . . . 13\n     5.1.  Nodeprep Profile of Stringprep\
    \ . . . . . . . . . . . . . . 13\n     5.2.  Resourceprep Profile of Stringprep\
    \ . . . . . . . . . . . . 14\n   6.  Conformance Requirements . . . . . . . .\
    \ . . . . . . . . . . . 14\n   7.  References . . . . . . . . . . . . . . . .\
    \ . . . . . . . . . . 16\n     7.1.  Normative References . . . . . . . . . .\
    \ . . . . . . . . . 16\n     7.2.  Informative References . . . . . . . . . .\
    \ . . . . . . . . 17\n   Appendix A.  Nodeprep  . . . . . . . . . . . . . . .\
    \ . . . . . . . 19\n     A.1.  Introduction . . . . . . . . . . . . . . . . .\
    \ . . . . . . 19\n     A.2.  Character Repertoire . . . . . . . . . . . . . .\
    \ . . . . . 19\n     A.3.  Mapping  . . . . . . . . . . . . . . . . . . . . .\
    \ . . . . 19\n     A.4.  Normalization  . . . . . . . . . . . . . . . . . . .\
    \ . . . 19\n     A.5.  Prohibited Output  . . . . . . . . . . . . . . . . . .\
    \ . . 20\n     A.6.  Bidirectional Characters . . . . . . . . . . . . . . . .\
    \ . 20\n     A.7.  Notes  . . . . . . . . . . . . . . . . . . . . . . . . . .\
    \ 20\n   Appendix B.  Resourceprep  . . . . . . . . . . . . . . . . . . . . 21\n\
    \     B.1.  Introduction . . . . . . . . . . . . . . . . . . . . . . . 21\n  \
    \   B.2.  Character Repertoire . . . . . . . . . . . . . . . . . . . 22\n    \
    \ B.3.  Mapping  . . . . . . . . . . . . . . . . . . . . . . . . . 22\n     B.4.\
    \  Normalization  . . . . . . . . . . . . . . . . . . . . . . 22\n     B.5.  Prohibited\
    \ Output  . . . . . . . . . . . . . . . . . . . . 22\n     B.6.  Bidirectional\
    \ Characters . . . . . . . . . . . . . . . . . 22\n   Appendix C.  Differences\
    \ from RFC 3920 . . . . . . . . . . . . . . 22\n   Appendix D.  Acknowledgements\
    \  . . . . . . . . . . . . . . . . . . 23\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Overview
  contents:
  - "1.1.  Overview\n   The Extensible Messaging and Presence Protocol (XMPP) is an\n\
    \   application profile of the Extensible Markup Language [XML] for\n   streaming\
    \ XML data in close to real time between any two or more\n   network-aware entities.\
    \  The address format for XMPP entities was\n   originally developed in the Jabber\
    \ open-source community in 1999,\n   first described by [XEP-0029] in 2002, and\
    \ defined canonically by\n   [RFC3920] in 2004.\n   As specified in RFC 3920,\
    \ the XMPP address format reuses the\n   \"stringprep\" technology for preparation\
    \ of non-ASCII characters\n   [STRINGPREP], including the Nameprep profile for\
    \ internationalized\n   domain names as specified in [NAMEPREP] and [IDNA2003]\
    \ along with two\n   XMPP-specific profiles for the localpart and resourcepart.\n\
    \   Since the publication of RFC 3920, IDNA2003 has been superseded by\n   IDNA2008\
    \ (see [IDNA-PROTO] and related documents), which is not based\n   on stringprep.\
    \  Following the lead of the IDNA community, other\n   technology communities\
    \ that use stringprep have begun discussions\n   about migrating away from stringprep\
    \ toward more \"modern\" approaches.\n   The XMPP community is participating in\
    \ those discussions (mostly\n   within the PRECIS Working Group) in order to find\
    \ a replacement for\n   the Nodeprep and Resourceprep profiles of stringprep defined\
    \ in RFC\n   3920.  Because all other aspects of revised documentation for XMPP\n\
    \   have been incorporated into [XMPP], the XMPP Working Group decided to\n  \
    \ temporarily split the XMPP address format into a separate document so\n   as\
    \ not to significantly delay publication of improved documentation\n   for XMPP.\
    \  It is expected that this document will be obsoleted as\n   soon as work on\
    \ a new approach to preparation and comparison of\n   internationalized addresses\
    \ has been completed.\n   Therefore, this specification provides corrected documentation\
    \ of the\n   XMPP address format using the internationalization technologies\n\
    \   available in 2004 (when RFC 3920 was published).  Although this\n   document\
    \ normatively references [IDNA2003] and [NAMEPREP], XMPP\n   software implementations\
    \ are encouraged to begin migrating to\n   IDNA2008 (see [IDNA-PROTO] and related\
    \ documents) because the\n   specification that obsoletes this one will use IDNA2008\
    \ rather than\n   IDNA2003.\n   This document updates RFC 3920.\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   Many important terms used in this document are defined\
    \ in [IDNA2003],\n   [STRINGPREP], [UNICODE], and [XMPP].\n   The key words \"\
    MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\",\
    \ \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\"\
    \ in this document are to be interpreted as described in RFC\n   2119 [KEYWORDS].\n"
- title: 2.  Addresses
  contents:
  - '2.  Addresses

    '
- title: 2.1.  Fundamentals
  contents:
  - "2.1.  Fundamentals\n   An XMPP entity is anything that is network-addressable\
    \ and that can\n   communicate using XMPP.  For historical reasons, the native\
    \ address\n   of an XMPP entity is called a Jabber Identifier or JID.  A valid\
    \ JID\n   is a string of [UNICODE] code points, encoded using [UTF-8], and\n \
    \  structured as an ordered sequence of localpart, domainpart, and\n   resourcepart\
    \ (where the first two parts are demarcated by the '@'\n   character used as a\
    \ separator, and the last two parts are similarly\n   demarcated by the '/' character).\n\
    \   The syntax for a JID is defined as follows using the Augmented\n   Backus-Naur\
    \ Form as specified in [ABNF].\n      jid           = [ localpart \"@\" ] domainpart\
    \ [ \"/\" resourcepart ]\n      localpart     = 1*(nodepoint)\n              \
    \        ;\n                      ; a \"nodepoint\" is a UTF-8 encoded Unicode\
    \ code\n                      ; point that satisfies the Nodeprep profile of\n\
    \                      ; stringprep\n                      ;\n      domainpart\
    \    = IP-literal / IPv4address / ifqdn\n                      ;\n           \
    \           ; the \"IPv4address\" and \"IP-literal\" rules are\n             \
    \         ; defined in RFC 3986, and the first-match-wins\n                  \
    \    ; (a.k.a. \"greedy\") algorithm described in RFC\n                      ;\
    \ 3986 applies to the matching process\n                      ;\n            \
    \          ; note well that reuse of the IP-literal rule\n                   \
    \   ; from RFC 3986 implies that IPv6 addresses are\n                      ; enclosed\
    \ in square brackets (i.e., beginning\n                      ; with '[' and ending\
    \ with ']'), which was not\n                      ; the case in RFC 3920\n   \
    \                   ;\n      ifqdn         = 1*(namepoint)\n                 \
    \     ;\n                      ; a \"namepoint\" is a UTF-8 encoded Unicode\n\
    \                      ; code point that satisfies the Nameprep\n            \
    \          ; profile of stringprep\n                      ;\n      resourcepart\
    \  = 1*(resourcepoint)\n                      ;\n                      ; a \"\
    resourcepoint\" is a UTF-8 encoded Unicode\n                      ; code point\
    \ that satisfies the Resourceprep\n                      ; profile of stringprep\n\
    \                      ;\n   All JIDs are based on the foregoing structure.\n\
    \   Each allowable portion of a JID (localpart, domainpart, and\n   resourcepart)\
    \ MUST NOT be zero bytes in length and MUST NOT be more\n   than 1023 bytes in\
    \ length, resulting in a maximum total size\n   (including the '@' and '/' separators)\
    \ of 3071 bytes.\n   For the purpose of communication over an XMPP network (e.g.,\
    \ in the\n   'to' or 'from' address of an XMPP stanza), an entity's address MUST\n\
    \   be represented as a JID, not as a Uniform Resource Identifier [URI]\n   or\
    \ Internationalized Resource Identifier [IRI].  An XMPP IRI\n   [XMPP-URI] is\
    \ in essence a JID prepended with 'xmpp:'; however, the\n   native addressing\
    \ format used in XMPP is that of a mere JID without a\n   URI scheme.  [XMPP-URI]\
    \ is provided only for identification and\n   interaction outside the context\
    \ of XMPP itself, for example when\n   linking to a JID from a web page.  See\
    \ [XMPP-URI] for a description\n   of the process for securely extracting a JID\
    \ from an XMPP URI or IRI.\n      Implementation Note: When dividing a JID into\
    \ its component parts,\n      an implementation needs to match the separator characters\
    \ '@' and\n      '/' before applying any transformation algorithms, which might\n\
    \      decompose certain Unicode code points to the separator characters\n   \
    \   (e.g., U+FE6B SMALL COMMERCIAL AT might decompose into U+0040\n      COMMERCIAL\
    \ AT).\n"
- title: 2.2.  Domainpart
  contents:
  - "2.2.  Domainpart\n   The domainpart of a JID is that portion after the '@' character\
    \ (if\n   any) and before the '/' character (if any); it is the primary\n   identifier\
    \ and is the only REQUIRED element of a JID (a mere\n   domainpart is a valid\
    \ JID).  Typically a domainpart identifies the\n   \"home\" server to which clients\
    \ connect for XML routing and data\n   management functionality.  However, it\
    \ is not necessary for an XMPP\n   domainpart to identify an entity that provides\
    \ core XMPP server\n   functionality (e.g., a domainpart can identify an entity\
    \ such as a\n   multi-user chat service, a publish-subscribe service, or a user\n\
    \   directory).\n   The domainpart for every XMPP service MUST be a fully qualified\n\
    \   domain name (FQDN; see [DNS]), IPv4 address, IPv6 address, or\n   unqualified\
    \ hostname (i.e., a text label that is resolvable on a\n   local network).\n \
    \     Interoperability Note: Domainparts that are IP addresses might not\n   \
    \   be accepted by other services for the sake of server-to-server\n      communication,\
    \ and domainparts that are unqualified hostnames\n      cannot be used on public\
    \ networks because they are resolvable only\n      on a local network.\n   If\
    \ the domainpart includes a final character considered to be a label\n   separator\
    \ (dot) by [IDNA2003] or [DNS], this character MUST be\n   stripped from the domainpart\
    \ before the JID of which it is a part is\n   used for the purpose of routing\
    \ an XML stanza, comparing against\n   another JID, or constructing an [XMPP-URI].\
    \  In particular, the\n   character MUST be stripped before any other canonicalization\
    \ steps\n   are taken, such as application of the [NAMEPREP] profile of\n   [STRINGPREP]\
    \ or completion of the ToASCII operation as described in\n   [IDNA2003].\n   A\
    \ domainpart consisting of a fully qualified domain name MUST be an\n   \"internationalized\
    \ domain name\" as defined in [IDNA2003]; that is, it\n   MUST be \"a domain name\
    \ in which every label is an internationalized\n   label\" and MUST follow the\
    \ rules for construction of\n   internationalized domain names specified in [IDNA2003].\
    \  When\n   preparing a text label (consisting of a sequence of UTF-8 encoded\n\
    \   Unicode code points) for representation as an internationalized label\n  \
    \ in the process of constructing an XMPP domainpart or comparing two\n   XMPP\
    \ domainparts, an application MUST ensure that for each text label\n   it is possible\
    \ to apply without failing the ToASCII operation\n   specified in [IDNA2003] with\
    \ the UseSTD3ASCIIRules flag set (thus\n   forbidding ASCII code points other\
    \ than letters, digits, and\n   hyphens).  If the ToASCII operation can be applied\
    \ without failing,\n   then the label is an internationalized label.  (Note: The\
    \ ToASCII\n   operation includes application of the [NAMEPREP] profile of\n  \
    \ [STRINGPREP] and encoding using the algorithm specified in\n   [PUNYCODE]; for\
    \ details, see [IDNA2003].)  Although XMPP applications\n   do not communicate\
    \ the output of the ToASCII operation (called an\n   \"ACE label\") over the wire,\
    \ it MUST be possible to apply that\n   operation without failing to each internationalized\
    \ label.  If an\n   XMPP application receives as input an ACE label, it SHOULD\
    \ convert\n   that ACE label to an internationalized label using the ToUnicode\n\
    \   operation (see [IDNA2003]) before including the label in an XMPP\n   domainpart\
    \ that will be communicated over the wire on an XMPP network\n   (however, instead\
    \ of converting the label, there are legitimate\n   reasons why an application\
    \ might instead refuse the input altogether\n   and return an error to the entity\
    \ that provided the offending data).\n   A domainpart MUST NOT be zero bytes in\
    \ length and MUST NOT be more\n   than 1023 bytes in length.  This rule is to\
    \ be enforced after any\n   mapping or normalization resulting from application\
    \ of the Nameprep\n   profile of stringprep (e.g., in Nameprep some characters\
    \ can be\n   mapped to nothing, which might result in a string of zero length).\n\
    \   Naturally, the length limits of [DNS] apply, and nothing in this\n   document\
    \ is to be interpreted as overriding those more fundamental\n   limits.\n   In\
    \ the terms of IDNA2008 [IDNA-DEFS], the domainpart of a JID is a\n   \"domain\
    \ name slot\".\n"
- title: 2.3.  Localpart
  contents:
  - "2.3.  Localpart\n   The localpart of a JID is an optional identifier placed before\
    \ the\n   domainpart and separated from the latter by the '@' character.\n   Typically\
    \ a localpart uniquely identifies the entity requesting and\n   using network\
    \ access provided by a server (i.e., a local account),\n   although it can also\
    \ represent other kinds of entities (e.g., a chat\n   room associated with a multi-user\
    \ chat service).  The entity\n   represented by an XMPP localpart is addressed\
    \ within the context of a\n   specific domain (i.e., <localpart@domainpart>).\n\
    \   A localpart MUST be formatted such that the Nodeprep profile of\n   [STRINGPREP]\
    \ can be applied without failing (see Appendix A).  Before\n   comparing two localparts,\
    \ an application MUST first ensure that the\n   Nodeprep profile has been applied\
    \ to each identifier (the profile\n   need not be applied each time a comparison\
    \ is made, as long as it has\n   been applied before comparison).\n   A localpart\
    \ MUST NOT be zero bytes in length and MUST NOT be more\n   than 1023 bytes in\
    \ length.  This rule is to be enforced after any\n   mapping or normalization\
    \ resulting from application of the Nodeprep\n   profile of stringprep (e.g.,\
    \ in Nodeprep some characters can be\n   mapped to nothing, which might result\
    \ in a string of zero length).\n"
- title: 2.4.  Resourcepart
  contents:
  - "2.4.  Resourcepart\n   The resourcepart of a JID is an optional identifier placed\
    \ after the\n   domainpart and separated from the latter by the '/' character.\
    \  A\n   resourcepart can modify either a <localpart@domainpart> address or a\n\
    \   mere <domainpart> address.  Typically a resourcepart uniquely\n   identifies\
    \ a specific connection (e.g., a device or location) or\n   object (e.g., an occupant\
    \ in a multi-user chat room) belonging to the\n   entity associated with an XMPP\
    \ localpart at a domain (i.e.,\n   <localpart@domainpart/resourcepart>).\n   A\
    \ resourcepart MUST be formatted such that the Resourceprep profile\n   of [STRINGPREP]\
    \ can be applied without failing (see Appendix B).\n   Before comparing two resourceparts,\
    \ an application MUST first ensure\n   that the Resourceprep profile has been\
    \ applied to each identifier\n   (the profile need not be applied each time a\
    \ comparison is made, as\n   long as it has been applied before comparison).\n\
    \   A resourcepart MUST NOT be zero bytes in length and MUST NOT be more\n   than\
    \ 1023 bytes in length.  This rule is to be enforced after any\n   mapping or\
    \ normalization resulting from application of the\n   Resourceprep profile of\
    \ stringprep (e.g., in Resourceprep some\n   characters can be mapped to nothing,\
    \ which might result in a string\n   of zero length).\n      Informational Note:\
    \ For historical reasons, the term \"resource\n      identifier\" is often used\
    \ in XMPP to refer to the optional portion\n      of an XMPP address that follows\
    \ the domainpart and the \"/\"\n      separator character; to help prevent confusion\
    \ between an XMPP\n      \"resource identifier\" and the meanings of \"resource\"\
    \ and\n      \"identifier\" provided in Section 1.1 of [URI], this specification\n\
    \      uses the term \"resourcepart\" instead of \"resource identifier\" (as\n\
    \      in RFC 3920).\n   XMPP entities SHOULD consider resourceparts to be opaque\
    \ strings and\n   SHOULD NOT impute meaning to any given resourcepart.  In particular:\n\
    \   o  Use of the '/' character as a separator between the domainpart and\n  \
    \    the resourcepart does not imply that XMPP addresses are\n      hierarchical\
    \ in the way that, say, HTTP addresses are\n      hierarchical; thus for example\
    \ an XMPP address of the form\n      <localpart@domainpart/foo/bar> does not identify\
    \ a resource \"bar\"\n      that exists below a resource \"foo\" in a hierarchy\
    \ of resources\n      associated with the entity \"localpart@domain\".\n   o \
    \ The '@' character is allowed in the resourcepart and is often used\n      in\
    \ the \"nick\" shown in XMPP chatrooms.  For example, the JID\n      <room@chat.example.com/user@host>\
    \ describes an entity who is an\n      occupant of the room <room@chat.example.com>\
    \ with an (asserted)\n      nick of <user@host>.  However, chatroom services do\
    \ not\n      necessarily check such an asserted nick against the occupant's\n\
    \      real JID.\n"
- title: 3.  Internationalization Considerations
  contents:
  - "3.  Internationalization Considerations\n   XMPP servers MUST, and XMPP clients\
    \ SHOULD, support [IDNA2003] for\n   domainparts (including the [NAMEPREP] profile\
    \ of [STRINGPREP]), the\n   Nodeprep (Appendix A) profile of [STRINGPREP] for\
    \ localparts, and the\n   Resourceprep (Appendix B) profile of [STRINGPREP] for\
    \ resourceparts;\n   this enables XMPP addresses to include a wide variety of\
    \ characters\n   outside the US-ASCII range.  Rules for enforcement of the XMPP\n\
    \   address format are provided in [XMPP].\n"
- title: 4.  Security Considerations
  contents:
  - '4.  Security Considerations

    '
- title: 4.1.  Reuse of Stringprep
  contents:
  - "4.1.  Reuse of Stringprep\n   The security considerations described in [STRINGPREP]\
    \ apply to the\n   Nodeprep (Appendix A) and Resourceprep (Appendix B) profiles\
    \ defined\n   in this document for XMPP localparts and resourceparts.  The security\n\
    \   considerations described in [STRINGPREP] and [NAMEPREP] apply to the\n   Nameprep\
    \ profile that is reused here for XMPP domainparts.\n"
- title: 4.2.  Reuse of Unicode
  contents:
  - "4.2.  Reuse of Unicode\n   The security considerations described in [UNICODE-SEC]\
    \ apply to the\n   use of Unicode characters in XMPP addresses.\n"
- title: 4.3.  Address Spoofing
  contents:
  - "4.3.  Address Spoofing\n   There are two forms of address spoofing: forging and\
    \ mimicking.\n"
- title: 4.3.1.  Address Forging
  contents:
  - "4.3.1.  Address Forging\n   In the context of XMPP technologies, address forging\
    \ occurs when an\n   entity is able to generate an XML stanza whose 'from' address\
    \ does\n   not correspond to the account credentials with which the entity\n \
    \  authenticated onto the network (or an authorization identity provided\n   during\
    \ negotiation of SASL authentication [SASL] as described in\n   [XMPP]).  For\
    \ example, address forging occurs if an entity that\n   authenticated as \"juliet@im.example.com\"\
    \ is able to send XML stanzas\n   from \"nurse@im.example.com\" or \"romeo@example.net\"\
    .\n   Address forging is difficult in XMPP systems, given the requirement\n  \
    \ for sending servers to stamp 'from' addresses and for receiving\n   servers\
    \ to verify sending domains via server-to-server authentication\n   (see [XMPP]).\
    \  However, address forging is possible if:\n   o  A poorly implemented server\
    \ ignores the requirement for stamping\n      the 'from' address.  This would\
    \ enable any entity that\n      authenticated with the server to send stanzas\
    \ from any\n      localpart@domainpart as long as the domainpart matches the sending\n\
    \      domain of the server.\n   o  An actively malicious server generates stanzas\
    \ on behalf of any\n      registered account.\n   Therefore, an entity outside\
    \ the security perimeter of a particular\n   server cannot reliably distinguish\
    \ between JIDs of the form\n   <localpart@domainpart> at that server and thus\
    \ can authenticate only\n   the domainpart of such JIDs with any level of assurance.\
    \  This\n   specification does not define methods for discovering or\n   counteracting\
    \ such poorly implemented or rogue servers.  However, the\n   end-to-end authentication\
    \ or signing of XMPP stanzas could help to\n   mitigate this risk, since it would\
    \ require the rogue server to\n   generate false credentials in addition to modifying\
    \ 'from' addresses.\n   Furthermore, it is possible for an attacker to forge JIDs\
    \ at other\n   domains by means of a DNS poisoning attack if DNS security extensions\n\
    \   [DNSSEC] are not used.\n"
- title: 4.3.2.  Address Mimicking
  contents:
  - "4.3.2.  Address Mimicking\n   Address mimicking occurs when an entity provides\
    \ legitimate\n   authentication credentials for and sends XML stanzas from an\
    \ account\n   whose JID appears to a human user to be the same as another JID.\
    \  For\n   example, in some XMPP clients the address \"ju1iet@example.org\"\n\
    \   (spelled with the number one as the third character of the localpart)\n  \
    \ might appear to be the same as \"juliet@example.org (spelled with the\n   lower-case\
    \ version of the letter \"L\"), especially on casual visual\n   inspection; this\
    \ phenomenon is sometimes called \"typejacking\".  A\n   more sophisticated example\
    \ of address mimicking might involve the use\n   of characters from outside the\
    \ familiar Latin extended-A block of\n   Unicode code points, such as the characters\
    \ U+13DA U+13A2 U+13B5\n   U+13AC U+13A2 U+13AC U+13D2 from the Cherokee block\
    \ instead of the\n   similar-looking US-ASCII characters \"STPETER\".\n   In some\
    \ examples of address mimicking, it is unlikely that the\n   average user could\
    \ tell the difference between the real JID and the\n   fake JID.  (Indeed, there\
    \ is no programmatic way to distinguish with\n   full certainty which is the fake\
    \ JID and which is the real JID; in\n   some communication contexts, the JID formed\
    \ of Cherokee characters\n   might be the real JID and the JID formed of US-ASCII\
    \ characters might\n   thus appear to be the fake JID.)  Because JIDs can contain\
    \ almost any\n   properly encoded Unicode code point, it can be relatively easy\
    \ to\n   mimic some JIDs in XMPP systems.  The possibility of address\n   mimicking\
    \ introduces security vulnerabilities of the kind that have\n   also plagued the\
    \ World Wide Web, specifically the phenomenon known as\n   phishing.\n   These\
    \ problems arise because Unicode and ISO/IEC 10646 repertoires\n   have many characters\
    \ that look similar (so-called \"confusable\n   characters\" or \"confusables\"\
    ).  In many cases, XMPP users might\n   perform visual matching, such as when\
    \ comparing the JIDs of\n   communication partners.  Because it is impossible\
    \ to map similar-\n   looking characters without a great deal of context (such\
    \ as knowing\n   the fonts used), stringprep and stringprep-based technologies\
    \ such as\n   Nameprep, Nodeprep, and Resourceprep do nothing to map similar-\n\
    \   looking characters together, nor do they prohibit some characters\n   because\
    \ they look like others.  As a result, XMPP localparts and\n   resourceparts could\
    \ contain confusable characters, producing JIDs\n   that appear to mimic other\
    \ JIDs and thus leading to security\n   vulnerabilities such as the following:\n\
    \   o  A localpart can be employed as one part of an entity's address in\n   \
    \   XMPP.  One common usage is as the username of an instant messaging\n     \
    \ user; another is as the name of a multi-user chat room; and many\n      other\
    \ kinds of entities could use localparts as part of their\n      addresses.  The\
    \ security of such services could be compromised\n      based on different interpretations\
    \ of the internationalized\n      localpart; for example, a user entering a single\
    \ internationalized\n      localpart could access another user's account information,\
    \ or a\n      user could gain access to a hidden or otherwise restricted chat\n\
    \      room or service.\n   o  A resourcepart can be employed as one part of an\
    \ entity's address\n      in XMPP.  One common usage is as the name for an instant\
    \ messaging\n      user's connected resource; another is as the nickname of a\
    \ user in\n      a multi-user chat room; and many other kinds of entities could\
    \ use\n      resourceparts as part of their addresses.  The security of such\n\
    \      services could be compromised based on different interpretations\n    \
    \  of the internationalized resourcepart; for example, two or more\n      confusable\
    \ resources could be bound at the same time to the same\n      account (resulting\
    \ in inconsistent authorization decisions in an\n      XMPP application that uses\
    \ full JIDs), or a user could send a\n      message to someone other than the\
    \ intended recipient in a multi-\n      user chat room.\n   Despite the fact that\
    \ some specific suggestions about identification\n   and handling of confusable\
    \ characters appear in the Unicode Security\n   Considerations [UNICODE-SEC],\
    \ it is also true (as noted in\n   [IDNA-DEFS]) that \"there are no comprehensive\
    \ technical solutions to\n   the problems of confusable characters\".  Mimicked\
    \ JIDs that involve\n   characters from only one script, or from the script typically\n\
    \   employed by a particular user or community of language users, are not\n  \
    \ easy to combat (e.g., the simple typejacking attack previously\n   described,\
    \ which relies on a surface similarity between the\n   characters \"1\" and \"\
    l\" in some presentations).  However, mimicked\n   addresses that involve characters\
    \ from more than one script, or from\n   a script not typically employed by a\
    \ particular user or community of\n   language users, can be mitigated somewhat\
    \ through the application of\n   appropriate registration policies at XMPP services\
    \ and presentation\n   policies in XMPP client software.  Therefore, the following\
    \ policies\n   are encouraged:\n   1.  Because an XMPP service that allows registration\
    \ of XMPP user\n       accounts (localparts) plays a role similar to that of a\
    \ registry\n       for DNS domain names, such a service SHOULD establish a policy\n\
    \       about the scripts or blocks of characters it will allow in\n       localparts\
    \ at the service.  Such a policy is likely to be\n       informed by the languages\
    \ and scripts that are used to write\n       registered account names; in particular,\
    \ to reduce confusion, the\n       service MAY forbid registration of XMPP localparts\
    \ that contain\n       characters from more than one script and to restrict\n\
    \       registrations to characters drawn from a very small number of\n      \
    \ scripts (e.g., scripts that are well-understood by the\n       administrators\
    \ of the service).  Such policies are also\n       appropriate for XMPP services\
    \ that allow temporary or permanent\n       registration of XMPP resourceparts,\
    \ e.g., during resource binding\n       [XMPP] or upon joining an XMPP-based chat\
    \ room [XEP-0045].  For\n       related considerations in the context of domain\
    \ name\n       registration, refer to Section 4.3 of [IDNA-PROTO] and Section\n\
    \       3.2 of [IDNA-RATIONALE].  Note well that methods for enforcing\n     \
    \  such restrictions are out of scope for this document.\n   2.  Because every\
    \ human user of an XMPP client presumably has a\n       preferred language (or,\
    \ in some cases, a small set of preferred\n       languages), an XMPP client SHOULD\
    \ gather that information either\n       explicitly from the user or implicitly\
    \ via the operating system\n       of the user's device.  Furthermore, because\
    \ most languages are\n       typically represented by a single script (or a small\
    \ set of\n       scripts) and most scripts are typically contained in one or more\n\
    \       blocks of characters, an XMPP client SHOULD warn the user when\n     \
    \  presenting a JID that mixes characters from more than one script\n       or\
    \ block, or that uses characters outside the normal range of the\n       user's\
    \ preferred language(s).  This recommendation is not\n       intended to discourage\
    \ communication across different communities\n       of language users; instead,\
    \ it recognizes the existence of such\n       communities and encourages due caution\
    \ when presenting unfamiliar\n       scripts or characters to human users.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   The following sections update the registrations provided\
    \ in\n   [RFC3920].\n"
- title: 5.1.  Nodeprep Profile of Stringprep
  contents:
  - "5.1.  Nodeprep Profile of Stringprep\n   The Nodeprep profile of stringprep is\
    \ defined under Nodeprep\n   (Appendix A).  The IANA has registered Nodeprep in\
    \ the \"Stringprep\n   Profiles\" registry.\n   Name of this profile:\n      Nodeprep\n\
    \   RFC in which the profile is defined:\n      RFC 6122\n   Indicator whether\
    \ or not this is the newest version of the profile:\n      This is the first version\
    \ of Nodeprep\n"
- title: 5.2.  Resourceprep Profile of Stringprep
  contents:
  - "5.2.  Resourceprep Profile of Stringprep\n   The Resourceprep profile of stringprep\
    \ is defined under Resourceprep\n   (Appendix B).  The IANA has registered Resourceprep\
    \ in the\n   \"Stringprep Profiles\" registry.\n   Name of this profile:\n   \
    \   Resourceprep\n   RFC in which the profile is defined:\n      RFC 6122\n  \
    \ Indicator whether or not this is the newest version of the profile:\n      This\
    \ is the first version of Resourceprep\n"
- title: 6.  Conformance Requirements
  contents:
  - "6.  Conformance Requirements\n   This section describes a protocol feature set\
    \ that summarizes the\n   conformance requirements of this specification.  This\
    \ feature set is\n   appropriate for use in software certification, interoperability\n\
    \   testing, and implementation reports.  For each feature, this section\n   provides\
    \ the following information:\n   o  A human-readable name\n   o  An informational\
    \ description\n   o  A reference to the particular section of this document that\n\
    \      normatively defines the feature\n   o  Whether the feature applies to the\
    \ Client role, the Server role,\n      or both (where \"N/A\" signifies that the\
    \ feature is not applicable\n      to the specified role)\n   o  Whether the feature\
    \ MUST or SHOULD be implemented, where the\n      capitalized terms are to be\
    \ understood as described in [KEYWORDS]\n   The feature set specified here attempts\
    \ to adhere to the concepts and\n   formats proposed by Larry Masinter within\
    \ the IETF's NEWTRK Working\n   Group in 2005, as captured in [INTEROP].  Although\
    \ this feature set\n   is more detailed than called for by [REPORTS], it provides\
    \ a suitable\n   basis for the generation of implementation reports to be submitted\
    \ in\n   support of advancing this specification from Proposed Standard to\n \
    \  Draft Standard in accordance with [PROCESS].\n   Feature:  address-domain-length\n\
    \   Description:  Ensure that the domainpart of an XMPP address is at\n      least\
    \ one byte in length and at most 1023 bytes in length, and\n      conforms to\
    \ the underlying length limits of the DNS.\n   Section:  Section 2.2\n   Roles:\
    \  Both MUST.\n   Feature:  address-domain-prep\n   Description:  Ensure that\
    \ the domainpart of an XMPP address conforms\n      to the Nameprep profile of\
    \ stringprep.\n   Section:  Section 2.2\n   Roles:  Client SHOULD, Server MUST.\n\
    \   Feature:  address-localpart-length\n   Description:  Ensure that the localpart\
    \ of an XMPP address is at\n      least one byte in length and at most 1023 bytes\
    \ in length.\n   Section:  Section 2.3\n   Roles:  Both MUST.\n   Feature:  address-localpart-prep\n\
    \   Description:  Ensure that the localpart of an XMPP address conforms\n    \
    \  to the Nodeprep profile of stringprep.\n   Section:  Section 2.3\n   Roles:\
    \  Client SHOULD, Server MUST.\n   Feature:  address-resource-length\n   Description:\
    \  Ensure that the resourcepart of an XMPP address is at\n      least one byte\
    \ in length and at most 1023 bytes in length.\n   Section:  Section 2.4\n   Roles:\
    \  Both MUST.\n   Feature:  address-resource-prep\n   Description:  Ensure that\
    \ the resourcepart of an XMPP address\n      conforms to the Resourceprep profile\
    \ of stringprep.\n   Section:  Section 2.4\n   Roles:  Client SHOULD, Server MUST.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [ABNF]            Crocker, D., Ed. and P. Overell,\
    \ \"Augmented BNF for\n                     Syntax Specifications: ABNF\", STD\
    \ 68, RFC 5234,\n                     January 2008.\n   [DNS]             Mockapetris,\
    \ P., \"Domain names - implementation and\n                     specification\"\
    , STD 13, RFC 1035, November 1987.\n   [IDNA2003]        Faltstrom, P., Hoffman,\
    \ P., and A. Costello,\n                     \"Internationalizing Domain Names\
    \ in Applications\n                     (IDNA)\", RFC 3490, March 2003.\n    \
    \                 See Section 1 for an explanation of why the\n              \
    \       normative reference to an obsoleted specification\n                  \
    \   is needed.\n   [KEYWORDS]        Bradner, S., \"Key words for use in RFCs\
    \ to Indicate\n                     Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [NAMEPREP]        Hoffman, P. and M. Blanchet, \"Nameprep: A\n   \
    \                  Stringprep Profile for Internationalized Domain\n         \
    \            Names (IDN)\", RFC 3491, March 2003.\n                     See Section\
    \ 1 for an explanation of why the\n                     normative reference to\
    \ an obsoleted specification\n                     is needed.\n   [STRINGPREP]\
    \      Hoffman, P. and M. Blanchet, \"Preparation of\n                     Internationalized\
    \ Strings (\"stringprep\")\",\n                     RFC 3454, December 2002.\n\
    \   [UNICODE]         The Unicode Consortium, \"The Unicode Standard,\n      \
    \               Version 3.2.0\", 2000.  The Unicode Standard,\n              \
    \       Version 3.2.0 is defined by The Unicode Standard,\n                  \
    \   Version 3.0 (Reading, MA, Addison-Wesley, 2000.\n                     ISBN\
    \ 0-201-61633-5), as amended by the Unicode\n                     Standard Annex\
    \ #27: Unicode 3.1\n                     (http://www.unicode.org/reports/tr27/)\
    \ and by the\n                     Unicode Standard Annex #28: Unicode 3.2\n \
    \                    (http://www.unicode.org/reports/tr28/).\n   [UNICODE-SEC]\
    \     The Unicode Consortium, \"Unicode Technical Report\n                   \
    \  #36: Unicode Security Considerations\", 2008,\n                     <http://www.unicode.org/reports/tr36/>.\n\
    \   [UTF-8]           Yergeau, F., \"UTF-8, a transformation format of ISO\n \
    \                    10646\", STD 63, RFC 3629, November 2003.\n   [XMPP]    \
    \        Saint-Andre, P., \"Extensible Messaging and Presence\n              \
    \       Protocol (XMPP): Core\", RFC 6120, March 2011.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [DNSSEC]          Arends, R., Austein, R., Larson,\
    \ M., Massey, D.,\n                     and S. Rose, \"DNS Security Introduction\
    \ and\n                     Requirements\", RFC 4033, March 2005.\n   [IDNA-DEFS]\
    \       Klensin, J., \"Internationalized Domain Names for\n                  \
    \   Applications (IDNA): Definitions and Document\n                     Framework\"\
    , RFC 5890, August 2010.\n   [IDNA-PROTO]      Klensin, J., \"Internationalized\
    \ Domain Names in\n                     Applications (IDNA): Protocol\", RFC 5891,\n\
    \                     August 2010.\n   [IDNA-RATIONALE]  Klensin, J., \"Internationalized\
    \ Domain Names for\n                     Applications (IDNA): Background, Explanation,\
    \ and\n                     Rationale\", RFC 5894, August 2010.\n   [INTEROP]\
    \         Masinter, L., \"Formalizing IETF Interoperability\n                \
    \     Reporting\", Work in Progress, October 2005.\n   [IRI]             Duerst,\
    \ M. and M. Suignard, \"Internationalized\n                     Resource Identifiers\
    \ (IRIs)\", RFC 3987,\n                     January 2005.\n   [PROCESS]      \
    \   Bradner, S., \"The Internet Standards Process --\n                     Revision\
    \ 3\", BCP 9, RFC 2026, October 1996.\n   [PUNYCODE]        Costello, A., \"Punycode:\
    \ A Bootstring encoding of\n                     Unicode for Internationalized\
    \ Domain Names in\n                     Applications (IDNA)\", RFC 3492, March\
    \ 2003.\n   [REPORTS]         Dusseault, L. and R. Sparks, \"Guidance on\n   \
    \                  Interoperation and Implementation Reports for\n           \
    \          Advancement to Draft Standard\", BCP 9, RFC 5657,\n               \
    \      September 2009.\n   [RFC3920]         Saint-Andre, P., Ed., \"Extensible\
    \ Messaging and\n                     Presence Protocol (XMPP): Core\", RFC 3920,\n\
    \                     October 2004.\n   [RFC5952]         Kawamura, S. and M.\
    \ Kawashima, \"A Recommendation\n                     for IPv6 Address Text Representation\"\
    , RFC 5952,\n                     August 2010.\n   [SASL]            Melnikov,\
    \ A., Ed. and K. Zeilenga, Ed., \"Simple\n                     Authentication\
    \ and Security Layer (SASL)\",\n                     RFC 4422, June 2006.\n  \
    \ [URI]             Berners-Lee, T., Fielding, R., and L. Masinter,\n        \
    \             \"Uniform Resource Identifier (URI): Generic\n                 \
    \    Syntax\", STD 66, RFC 3986, January 2005.\n   [XEP-0029]        Kaes, C.,\
    \ \"Definition of Jabber Identifiers\n                     (JIDs)\", XSF XEP 0029,\
    \ October 2003.\n   [XEP-0030]        Hildebrand, J., Millard, P., Eatmon, R.,\
    \ and P.\n                     Saint-Andre, \"Service Discovery\", XSF XEP 0030,\n\
    \                     June 2008.\n   [XEP-0045]        Saint-Andre, P., \"Multi-User\
    \ Chat\", XSF XEP 0045,\n                     July 2008.\n   [XEP-0060]      \
    \  Millard, P., Saint-Andre, P., and R. Meijer,\n                     \"Publish-Subscribe\"\
    , XSF XEP 0060, July 2010.\n   [XEP-0165]        Saint-Andre, P., \"Best Practices\
    \ to Discourage JID\n                     Mimicking\", XSF XEP 0045, December\
    \ 2007.\n   [XML]             Paoli, J., Maler, E., Sperberg-McQueen, C.,\n  \
    \                   Yergeau, F., and T. Bray, \"Extensible Markup\n          \
    \           Language (XML) 1.0 (Fourth Edition)\", World Wide\n              \
    \       Web Consortium Recommendation REC-xml-20060816,\n                    \
    \ August 2006,\n                     <http://www.w3.org/TR/2006/REC-xml-20060816>.\n\
    \   [XMPP-URI]        Saint-Andre, P., \"Internationalized Resource\n        \
    \             Identifiers (IRIs) and Uniform Resource Identifiers\n          \
    \           (URIs) for the Extensible Messaging and Presence\n               \
    \      Protocol (XMPP)\", RFC 5122, February 2008.\n"
- title: Appendix A.  Nodeprep
  contents:
  - 'Appendix A.  Nodeprep

    '
- title: A.1.  Introduction
  contents:
  - "A.1.  Introduction\n   This appendix defines the \"Nodeprep\" profile of stringprep.\
    \  As such,\n   it specifies processing rules that will enable users to enter\n\
    \   internationalized localparts in the Extensible Messaging and Presence\n  \
    \ Protocol (XMPP) and have the highest chance of getting the content of\n   the\
    \ strings correct.  (An XMPP localpart is the optional portion of\n   an XMPP\
    \ address that precedes an XMPP domainpart and the '@'\n   separator; it is often\
    \ but not exclusively associated with an instant\n   messaging username.)  These\
    \ processing rules are intended only for\n   XMPP localparts and are not intended\
    \ for arbitrary text or any other\n   aspect of an XMPP address.\n   This profile\
    \ defines the following, as required by [STRINGPREP]:\n   o  The intended applicability\
    \ of the profile: internationalized\n      localparts within XMPP\n   o  The character\
    \ repertoire that is the input and output to\n      stringprep: Unicode 3.2, specified\
    \ in A.2\n   o  The mappings used: specified in A.3\n   o  The Unicode normalization\
    \ used: specified in A.4\n   o  The characters that are prohibited as output:\
    \ specified in A.5\n   o  Bidirectional character handling: specified in A.6\n"
- title: A.2.  Character Repertoire
  contents:
  - "A.2.  Character Repertoire\n   This profile uses Unicode 3.2 with the list of\
    \ unassigned code points\n   in Table A.1, both as defined in Appendix A of [STRINGPREP].\n"
- title: A.3.  Mapping
  contents:
  - "A.3.  Mapping\n   This profile specifies mapping using the following tables from\n\
    \   [STRINGPREP]:\n      Table B.1\n      Table B.2\n"
- title: A.4.  Normalization
  contents:
  - "A.4.  Normalization\n   This profile specifies the use of Unicode Normalization\
    \ Form KC, as\n   described in [STRINGPREP].\n"
- title: A.5.  Prohibited Output
  contents:
  - "A.5.  Prohibited Output\n   This profile specifies the prohibition of using the\
    \ following tables\n   from [STRINGPREP].\n      Table C.1.1\n      Table C.1.2\n\
    \      Table C.2.1\n      Table C.2.2\n      Table C.3\n      Table C.4\n    \
    \  Table C.5\n      Table C.6\n      Table C.7\n      Table C.8\n      Table C.9\n\
    \   In addition, the following additional Unicode characters are also\n   prohibited:\n\
    \      U+0022 (QUOTATION MARK), i.e., \"\n      U+0026 (AMPERSAND), i.e., &\n\
    \      U+0027 (APOSTROPHE), i.e., '\n      U+002F (SOLIDUS), i.e., /\n      U+003A\
    \ (COLON), i.e., :\n      U+003C (LESS-THAN SIGN), i.e., <\n      U+003E (GREATER-THAN\
    \ SIGN), i.e., >\n      U+0040 (COMMERCIAL AT), i.e., @\n"
- title: A.6.  Bidirectional Characters
  contents:
  - "A.6.  Bidirectional Characters\n   This profile specifies checking bidirectional\
    \ strings, as described\n   in Section 6 of [STRINGPREP].\n"
- title: A.7.  Notes
  contents:
  - "A.7.  Notes\n   Because the additional characters prohibited by Nodeprep are\n\
    \   prohibited after normalization, an implementation MUST NOT enable a\n   human\
    \ user to input any Unicode code point whose decomposition\n   includes those\
    \ characters; such code points include but are not\n   necessarily limited to\
    \ the following (refer to [UNICODE] for complete\n   information):\n   o  U+2100\
    \ (ACCOUNT OF)\n   o  U+2101 (ADDRESSED TO THE SUBJECT)\n   o  U+2105 (CARE OF)\n\
    \   o  U+2106 (CADA UNA)\n   o  U+226E (NOT LESS-THAN)\n   o  U+226F (NOT GREATER-THAN)\n\
    \   o  U+2A74 (DOUBLE COLON EQUAL)\n   o  U+FE13 (PRESENTATION FORM FOR VERTICAL\
    \ COLON)\n   o  U+FE60 (SMALL AMPERSAND)\n   o  U+FE64 (SMALL LESS-THAN SIGN)\n\
    \   o  U+FE65 (SMALL GREATER-THAN SIGN)\n   o  U+FE6B (SMALL COMMERCIAL AT)\n\
    \   o  U+FF02 (FULLWIDTH QUOTATION MARK)\n   o  U+FF06 (FULLWIDTH AMPERSAND)\n\
    \   o  U+FF07 (FULLWIDTH APOSTROPHE)\n   o  U+FF0F (FULLWIDTH SOLIDUS)\n   o \
    \ U+FF1A (FULLWIDTH COLON)\n   o  U+FF1C (FULLWIDTH LESS-THAN SIGN)\n   o  U+FF1E\
    \ (FULLWIDTH GREATER-THAN SIGN)\n   o  U+FF20 (FULLWIDTH COMMERCIAL AT)\n"
- title: Appendix B.  Resourceprep
  contents:
  - 'Appendix B.  Resourceprep

    '
- title: B.1.  Introduction
  contents:
  - "B.1.  Introduction\n   This appendix defines the \"Resourceprep\" profile of\
    \ stringprep.  As\n   such, it specifies processing rules that will enable users\
    \ to enter\n   internationalized resourceparts in the Extensible Messaging and\n\
    \   Presence Protocol (XMPP) and have the highest chance of getting the\n   content\
    \ of the strings correct.  (An XMPP resourcepart is the\n   optional portion of\
    \ an XMPP address that follows an XMPP domainpart\n   and the '/' separator.)\
    \  These processing rules are intended only for\n   XMPP resourceparts and are\
    \ not intended for arbitrary text or any\n   other aspect of an XMPP address.\n\
    \   This profile defines the following, as required by [STRINGPREP]:\n   o  The\
    \ intended applicability of the profile: internationalized\n      resourceparts\
    \ within XMPP\n   o  The character repertoire that is the input and output to\n\
    \      stringprep: Unicode 3.2, specified in B.2\n   o  The mappings used: specified\
    \ in B.3\n   o  The Unicode normalization used: specified in B.4\n   o  The characters\
    \ that are prohibited as output: specified in B.5\n   o  Bidirectional character\
    \ handling: specified in B.6\n"
- title: B.2.  Character Repertoire
  contents:
  - "B.2.  Character Repertoire\n   This profile uses Unicode 3.2 with the list of\
    \ unassigned code points\n   in Table A.1, both as defined in Appendix A of [STRINGPREP].\n"
- title: B.3.  Mapping
  contents:
  - "B.3.  Mapping\n   This profile specifies mapping using the following tables from\n\
    \   [STRINGPREP]:\n      Table B.1\n"
- title: B.4.  Normalization
  contents:
  - "B.4.  Normalization\n   This profile specifies the use of Unicode Normalization\
    \ Form KC, as\n   described in [STRINGPREP].\n"
- title: B.5.  Prohibited Output
  contents:
  - "B.5.  Prohibited Output\n   This profile specifies the prohibition of using the\
    \ following tables\n   from [STRINGPREP].\n      Table C.1.2\n      Table C.2.1\n\
    \      Table C.2.2\n      Table C.3\n      Table C.4\n      Table C.5\n      Table\
    \ C.6\n      Table C.7\n      Table C.8\n      Table C.9\n"
- title: B.6.  Bidirectional Characters
  contents:
  - "B.6.  Bidirectional Characters\n   This profile specifies checking bidirectional\
    \ strings, as described\n   in Section 6 of [STRINGPREP].\n"
- title: Appendix C.  Differences from RFC 3920
  contents:
  - "Appendix C.  Differences from RFC 3920\n   Based on consensus derived from implementation\
    \ and deployment\n   experience as well as formal interoperability testing, the\
    \ following\n   substantive modifications were made from RFC 3920.\n   o  Corrected\
    \ the ABNF syntax to ensure consistency with [URI] and\n      [IRI], including\
    \ consistency with RFC 3986 and [RFC5952] with\n      regard to IPv6 addresses\
    \ (e.g., enclosing the IPv6 address in\n      square brackets '[' and ']' -- see\
    \ also Section 4.9.3.19 of\n      [XMPP]).\n   o  Corrected the ABNF syntax to\
    \ prevent zero-length localparts,\n      domainparts, and resourceparts (and also\
    \ noted that the underlying\n      length limits from the DNS apply to domainparts).\n\
    \   o  To avoid confusion with the term \"node\" as used in [XEP-0030] and\n \
    \     [XEP-0060], changed the term \"node identifier\" to \"localpart\" (but\n\
    \      retained the name \"Nodeprep\" for backward compatibility).\n   o  To avoid\
    \ confusion with the terms \"resource\" and \"identifier\" as\n      used in [URI],\
    \ changed the term \"resource identifier\" to\n      \"resourcepart\".\n   o \
    \ Corrected the Nameprep processing rules to require use of the\n      UseSTD3ASCIIRules\
    \ flag.\n"
- title: Appendix D.  Acknowledgements
  contents:
  - "Appendix D.  Acknowledgements\n   Thanks to Ben Campbell, Waqas Hussain, Jehan\
    \ Pages, and Florian Zeitz\n   for their feedback.  Thanks also to Richard Barnes\
    \ and Elwyn Davies\n   for their reviews on behalf of the Security Directorate\
    \ and the\n   General Area Review Team, respectively.\n   The Working Group chairs\
    \ were Ben Campbell and Joe Hildebrand.  The\n   responsible Area Director was\
    \ Gonzalo Camarillo.\n   Some text in this document was borrowed or adapted from\
    \ [IDNA-DEFS],\n   [IDNA-PROTO], [IDNA-RATIONALE], and [XEP-0165].\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Peter Saint-Andre\n   Cisco\n   1899 Wyknoop Street, Suite\
    \ 600\n   Denver, CO  80202\n   USA\n   Phone: +1-303-308-3282\n   EMail: psaintan@cisco.com\n"
