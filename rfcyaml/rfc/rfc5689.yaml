- contents:
  - '  Extended MKCOL for Web Distributed Authoring and Versioning (WebDAV)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This specification extends the Web Distributed Authoring and\n   Versioning
    (WebDAV) MKCOL (Make Collection) method to allow\n   collections of arbitrary
    resourcetype to be created and to allow\n   properties to be set at the same time.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the BSD License.\n   This document may contain material from
    IETF Documents or IETF\n   Contributions published or made publicly available
    before November\n   10, 2008.  The person(s) controlling the copyright in some
    of this\n   material may not have granted the IETF Trust the right to allow\n
    \  modifications of such material outside the IETF Standards Process.\n   Without
    obtaining an adequate license from the person(s) controlling\n   the copyright
    in such materials, this document may not be modified\n   outside the IETF Standards
    Process, and derivative works of it may\n   not be created outside the IETF Standards
    Process, except to format\n   it for publication as an RFC or to translate it
    into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Conventions Used in This Document  . . . . . . . . . .
    . . . .  3\n   3.  WebDAV Extended MKCOL  . . . . . . . . . . . . . . . . . .
    . .  4\n     3.1.  Extended MKCOL Support . . . . . . . . . . . . . . . . . .
    \ 5\n       3.1.1.  Example: Using OPTIONS for the Discovery of\n               Support
    for Extended MKCOL . . . . . . . . . . . . . .  5\n     3.2.  Status Codes . .
    . . . . . . . . . . . . . . . . . . . . .  5\n     3.3.  Additional Precondition
    for Extended MKCOL . . . . . . . .  5\n     3.4.  Example: Successful Extended
    MKCOL Request . . . . . . . .  6\n     3.5.  Example: Unsuccessful Extended MKCOL
    Request . . . . . . .  6\n   4.  Using Extended MKCOL as an Alternative for MKxxx
    Methods . . .  8\n     4.1.  MKCALENDAR Alternative . . . . . . . . . . . . .
    . . . . .  8\n       4.1.1.  Example: Using MKCOL Instead of MKCALENDAR . . .
    . . .  8\n   5.  XML Element Definitions  . . . . . . . . . . . . . . . . . .
    . 10\n     5.1.  mkcol XML Element  . . . . . . . . . . . . . . . . . . . . 10\n
    \    5.2.  mkcol-response XML Element . . . . . . . . . . . . . . . . 10\n   6.
    \ Security Considerations  . . . . . . . . . . . . . . . . . . . 11\n   7.  Acknowledgments
    \ . . . . . . . . . . . . . . . . . . . . . . . 11\n   8.  Normative References
    . . . . . . . . . . . . . . . . . . . . . 11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   WebDAV [RFC4918] defines the HTTP [RFC2616] method MKCOL.
    \ This\n   method is used to create WebDAV collections on the server.  However,\n
    \  several WebDAV-based specifications (e.g., CalDAV [RFC4791]) define\n   \"special\"
    collections -- ones that are identified by additional\n   values in the DAV:resourcetype
    property assigned to the collection\n   resource or by other means.  These \"special\"
    collections are created\n   by new methods (e.g., MKCALENDAR).  The addition of
    a new MKxxx\n   method for each new \"special\" collection adds to server complexity\n
    \  and is detrimental to overall reliability due to the need to make\n   sure
    intermediaries are aware of these methods.\n   This specification defines an extension
    to the WebDAV MKCOL method\n   that adds a request body allowing a client to specify
    WebDAV\n   properties to be set on the newly created collection or resource.  In\n
    \  particular, the DAV:resourcetype property can be used to create a\n   \"special\"
    collection; alternatively, other properties can be used to\n   create a \"special\"
    resource.  This avoids the need to invent new\n   MKxxx methods.\n"
  title: 1.  Introduction
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
    in [RFC2119].\n   This document uses XML DTD fragments (Section 3.2 of\n   [W3C.REC-xml-20081126])
    as a purely notational convention.  WebDAV\n   request and response bodies cannot
    be validated by a DTD due to the\n   specific extensibility rules defined in Section
    17 of [RFC4918] and\n   due to the fact that all XML elements defined by this
    specification\n   use the XML namespace name \"DAV:\".  In particular:\n   1.
    \ Element names use the \"DAV:\" namespace.\n   2.  Element ordering is irrelevant
    unless explicitly stated.\n   3.  Extension elements (elements not already defined
    as valid child\n       elements) may be added anywhere, except when explicitly
    stated\n       otherwise.\n   4.  Extension attributes (attributes not already
    defined as valid for\n       this element) may be added anywhere, except when
    explicitly\n       stated otherwise.\n   When an XML element type in the \"DAV:\"
    namespace is referenced in\n   this document outside of the context of an XML
    fragment, the string\n   \"DAV:\" will be prefixed to the element type.\n   This
    document inherits, and sometimes extends, DTD productions from\n   Section 14
    of [RFC4918].\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  WebDAV Extended MKCOL\n   The WebDAV MKCOL request is extended to allow the
    inclusion of a\n   request body.  The request body is an XML document containing
    a\n   single DAV:mkcol XML element as the root element.  The Content-Type\n   request
    header MUST be set appropriately for an XML body (e.g., set\n   to \"text/xml\"
    or \"application/xml\").  XML-typed bodies for an MKCOL\n   request that do not
    have DAV:mkcol as the root element are reserved\n   for future usage.\n   One
    or more DAV:set XML elements may be included in the DAV:mkcol XML\n   element
    to allow setting properties on the collection as it is\n   created.  In particular,
    to create a collection of a particular type,\n   the DAV:resourcetype XML element
    MUST be included in a DAV:set XML\n   element and MUST specify the expected resource
    type elements for the\n   new resource, which MUST include the DAV:collection
    element that\n   needs to be present for any WebDAV collection.\n   As per the
    PROPPATCH method (Section 9.2 of [RFC4918]), servers MUST\n   process any DAV:set
    instructions in document order (an exception to\n   the normal rule that ordering
    is irrelevant).  If any one instruction\n   fails to execute successfully, all
    instructions MUST fail (i.e.,\n   either all succeed or all fail).  Thus, if any
    error occurs during\n   processing, all executed instructions MUST be undone and
    a proper\n   error result returned.  Failure to set a property value on the\n
    \  collection MUST result in a failure of the overall MKCOL request --\n   i.e.,
    the collection is not created.\n   The response to an extended MKCOL request MUST
    be an XML document\n   containing a single DAV:mkcol-response XML element, which
    MUST\n   contain DAV:propstat XML elements with the status of each property\n
    \  when the request fails due to a failure to set one or more of the\n   properties
    specified in the request body.  The server MAY return a\n   response body in the
    case where the request is successful, indicating\n   success for setting each
    property specified in the request body.\n   When an empty response body is returned
    with a success request status\n   code, the client can assume that all properties
    were set.\n   In all other respects, the behavior of the extended MKCOL request\n
    \  follows that of the standard MKCOL request.\n"
  - contents:
    - "3.1.  Extended MKCOL Support\n   A server supporting the features described
      in this document MUST\n   include \"extended-mkcol\" as a field in the DAV response
      header from\n   an OPTIONS request on any URI that supports use of the extended
      MKCOL\n   method.\n"
    - contents:
      - "3.1.1.  Example: Using OPTIONS for the Discovery of Support for Extended\n
        \       MKCOL\n   >> Request <<\n   OPTIONS /addressbooks/users/ HTTP/1.1\n
        \  Host: addressbook.example.com\n   >> Response <<\n   HTTP/1.1 200 OK\n
        \  Allow: OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, COPY, MOVE\n   Allow:
        MKCOL, PROPFIND, PROPPATCH, LOCK, UNLOCK, REPORT, ACL\n   DAV: 1, 2, 3, access-control,
        extended-mkcol\n   Date: Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Length:
        0\n"
      title: '3.1.1.  Example: Using OPTIONS for the Discovery of Support for Extended'
    title: 3.1.  Extended MKCOL Support
  - contents:
    - "3.2.  Status Codes\n   As per Section 9.3.1 of [RFC4918].\n"
    title: 3.2.  Status Codes
  - contents:
    - "3.3.  Additional Precondition for Extended MKCOL\n   WebDAV ([RFC4918], Section
      16) defines preconditions and\n   postconditions for request behavior.  This
      specification adds the\n   following precondition for the extended MKCOL request.\n
      \  Name:  valid-resourcetype\n   Namespace:  DAV:\n   Use with:  Typically 403
      (Forbidden)\n   Purpose:  (precondition) -- The server MUST support the specified\n
      \     resourcetype value for the specified collection.\n"
    title: 3.3.  Additional Precondition for Extended MKCOL
  - contents:
    - "3.4.  Example: Successful Extended MKCOL Request\n   This example shows how
      the extended MKCOL request is used to create a\n   collection of a fictitious
      type \"special-resource\".  The response\n   body is empty as the request completed
      successfully.\n   >> Request <<\n   MKCOL /home/special/ HTTP/1.1\n   Host:
      special.example.com\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:
      xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:mkcol xmlns:D=\"DAV:\"\n
      \                xmlns:E=\"http://example.com/ns/\">\n     <D:set>\n       <D:prop>\n
      \        <D:resourcetype>\n           <D:collection/>\n           <E:special-resource/>\n
      \        </D:resourcetype>\n         <D:displayname>Special Resource</D:displayname>\n
      \      </D:prop>\n     </D:set>\n   </D:mkcol>\n   >> Response <<\n   HTTP/1.1
      201 Created\n   Cache-Control: no-cache\n   Date: Sat, 11 Nov 2006 09:32:12
      GMT\n"
    title: '3.4.  Example: Successful Extended MKCOL Request'
  - contents:
    - "3.5.  Example: Unsuccessful Extended MKCOL Request\n   This example shows an
      attempt to use the extended MKCOL request to\n   create a collection of a fictitious
      type \"special-resource\", which is\n   not actually supported by the server.
      \ The response body shows that\n   an error occurred specifically with the DAV:resourcetype
      property.\n   >> Request <<\n   MKCOL /home/special/ HTTP/1.1\n   Host: special.example.com\n
      \  Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n
      \  <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:mkcol xmlns:D=\"DAV:\"\n
      \                xmlns:E=\"http://example.com/ns/\">\n     <D:set>\n       <D:prop>\n
      \        <D:resourcetype>\n           <D:collection/>\n           <E:special-resource/>\n
      \        </D:resourcetype>\n         <D:displayname>Special Resource</D:displayname>\n
      \      </D:prop>\n     </D:set>\n   </D:mkcol>\n   >> Response <<\n   HTTP/1.1
      403 Forbidden\n   Cache-Control: no-cache\n   Date: Sat, 11 Nov 2006 09:32:12
      GMT\n   Content-Type: application/xml; charset=\"utf-8\"\n   Content-Length:
      xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n   <D:mkcol-response xmlns:D=\"DAV:\">\n
      \    <D:propstat>\n       <D:prop>\n         <D:resourcetype/>\n       </D:prop>\n
      \      <D:status>HTTP/1.1 403 Forbidden</D:status>\n       <D:error><D:valid-resourcetype
      /></D:error>\n       <D:responsedescription>Resource type is not\n       supported
      by this server</D:responsedescription>\n     </D:propstat>\n     <D:propstat>\n
      \      <D:prop>\n         <D:displayname/>\n       </D:prop>\n       <D:status>HTTP/1.1
      424 Failed Dependency</D:status>\n     </D:propstat>\n   </D:mkcol-response>\n"
    title: '3.5.  Example: Unsuccessful Extended MKCOL Request'
  title: 3.  WebDAV Extended MKCOL
- contents:
  - "4.  Using Extended MKCOL as an Alternative for MKxxx Methods\n   One of the goals
    of this extension is to eliminate the need for other\n   extensions to define
    their own variant of MKCOL to create the special\n   collections they need.  This
    extension can be used as an alternative\n   to existing MKxxx methods in other
    extensions as detailed below.  If\n   a server supports this extension and the
    other extension listed, then\n   the server MUST support use of the extended MKCOL
    method to achieve\n   the same result as the MKxxx method of the other extension.\n"
  - contents:
    - "4.1.  MKCALENDAR Alternative\n   CalDAV defines the MKCALENDAR method to create
      a calendar collection\n   as well as to set properties during creation (Section
      5.3.1 of\n   [RFC4791]).\n   The extended MKCOL method can be used instead by
      specifying both DAV:\n   collection and CALDAV:calendar-collection XML elements
      in the DAV:\n   resourcetype property, set during the extended MKCOL request.\n"
    - contents:
      - "4.1.1.  Example: Using MKCOL Instead of MKCALENDAR\n   The first example
        below shows an MKCALENDAR request containing a\n   CALDAV:mkcalendar XML element
        in the request body and returning a\n   CALDAV:mkcalendar-response XML element
        in the response body.\n   >> MKCALENDAR Request <<\n   MKCALENDAR /home/lisa/calendars/events/
        HTTP/1.1\n   Host: calendar.example.com\n   Content-Type: application/xml;
        charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\"
        ?>\n   <C:mkcalendar xmlns:D=\"DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n
        \    <D:set>\n       <D:prop>\n         <D:displayname>Lisa's Events</D:displayname>\n
        \      </D:prop>\n     </D:set>\n   </C:mkcalendar>\n   >> MKCALENDAR Response
        <<\n   HTTP/1.1 201 Created\n   Cache-Control: no-cache\n   Date: Sat, 11
        Nov 2006 09:32:12 GMT\n   Content-Type: application/xml; charset=\"utf-8\"\n
        \  Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n
        \  <C:mkcalendar-response xmlns:D=\"DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n
        \    <D:propstat>\n       <D:prop>\n         <D:displayname/>\n       </D:prop>\n
        \      <D:status>HTTP/1.1 200 OK</D:status>\n     </D:propstat>\n   </C:mkcalendar-response>\n
        \  The second example shows the equivalent extended MKCOL request with\n   the
        same request and response XML elements.\n   >> MKCOL Request <<\n   MKCOL
        /home/lisa/calendars/events/ HTTP/1.1\n   Host: calendar.example.com\n   Content-Type:
        application/xml; charset=\"utf-8\"\n   Content-Length: xxxx\n   <?xml version=\"1.0\"
        encoding=\"utf-8\" ?>\n   <D:mkcol xmlns:D=\"DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n
        \    <D:set>\n       <D:prop>\n         <D:resourcetype>\n           <D:collection/>\n
        \          <C:calendar/>\n         </D:resourcetype>\n         <D:displayname>Lisa's
        Events</D:displayname>\n       </D:prop>\n     </D:set>\n   </D:mkcol>\n   >>
        MKCOL Response <<\n   HTTP/1.1 201 Created\n   Cache-Control: no-cache\n   Date:
        Sat, 11 Nov 2006 09:32:12 GMT\n   Content-Type: application/xml; charset=\"utf-8\"\n
        \  Content-Length: xxxx\n   <?xml version=\"1.0\" encoding=\"utf-8\" ?>\n
        \  <D:mkcol-response xmlns:D=\"DAV:\"\n                 xmlns:C=\"urn:ietf:params:xml:ns:caldav\">\n
        \    <D:propstat>\n       <D:prop>\n         <D:resourcetype/>\n         <D:displayname/>\n
        \      </D:prop>\n       <D:status>HTTP/1.1 200 OK</D:status>\n     </D:propstat>\n
        \  </D:mkcol-response>\n"
      title: '4.1.1.  Example: Using MKCOL Instead of MKCALENDAR'
    title: 4.1.  MKCALENDAR Alternative
  title: 4.  Using Extended MKCOL as an Alternative for MKxxx Methods
- contents:
  - '5.  XML Element Definitions

    '
  - contents:
    - "5.1.  mkcol XML Element\n   Name:  mkcol\n   Namespace:  DAV:\n   Purpose:
      \ Used in a request to specify properties to be set in an\n      extended MKCOL
      request, as well as any additional information\n      needed when creating the
      resource.\n   Description:  This XML element is a container for the information\n
      \     required to modify the properties on a collection resource as it\n      is
      created in an extended MKCOL request.\n   Definition:\n       <!ELEMENT mkcol
      (set+)>\n"
    title: 5.1.  mkcol XML Element
  - contents:
    - "5.2.  mkcol-response XML Element\n   Name:  mkcol-response\n   Namespace:  DAV:\n
      \  Purpose:  Used in a response to indicate the status of properties\n      that
      were set or failed to be set during an extended MKCOL\n      request.\n   Description:
      \ This XML element is a container for the information\n      returned about
      a resource that has been created in an extended\n      MKCOL request.\n   Definition:\n
      \      <!ELEMENT mkcol-response (propstat+)>\n"
    title: 5.2.  mkcol-response XML Element
  title: 5.  XML Element Definitions
- contents:
  - "6.  Security Considerations\n   This extension does not introduce any new security
    concerns beyond\n   those already described in HTTP [RFC2616] and WebDAV [RFC4918].\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Acknowledgments\n   Thanks to Bernard Desruisseaux, Mike Douglass, Alexey
    Melnikov,\n   Julian Reschke, and Simon Vaillancourt.\n"
  title: 7.  Acknowledgments
- contents:
  - "8.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC2616]  Fielding, R., Gettys, J., Mogul, J., Frystyk, H.,\n              Masinter,
    L., Leach, P., and T. Berners-Lee, \"Hypertext\n              Transfer Protocol
    -- HTTP/1.1\", RFC 2616, June 1999.\n   [RFC4791]  Daboo, C., Desruisseaux, B.,
    and L. Dusseault,\n              \"Calendaring Extensions to WebDAV (CalDAV)\",
    RFC 4791,\n              March 2007.\n   [RFC4918]  Dusseault, L., \"HTTP Extensions
    for Web Distributed\n              Authoring and Versioning (WebDAV)\", RFC 4918,
    June 2007.\n   [W3C.REC-xml-20081126]\n              Maler, E., Yergeau, F., Paoli,
    J., Bray, T., and C.\n              Sperberg-McQueen, \"Extensible Markup Language
    (XML) 1.0\n              (Fifth Edition)\", World Wide Web Consortium\n              Recommendation
    REC-xml-20081126, November 2008,\n              <http://www.w3.org/TR/2008/REC-xml-20081126>.\n"
  title: 8.  Normative References
- contents:
  - "Author's Address\n   Cyrus Daboo\n   Apple Inc.\n   1 Infinite Loop\n   Cupertino,
    CA  95014\n   USA\n   EMail: cyrus@daboo.name\n   URI:   http://www.apple.com/\n"
  title: Author's Address
