- title: __initial_text__
  contents:
  - '              NETCONF over Transport Layer Security (TLS)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Network Configuration Protocol (NETCONF) provides mechanisms\
    \ to\n   install, manipulate, and delete the configuration of network devices.\n\
    \   This document describes how to use the Transport Layer Security (TLS)\n  \
    \ protocol to secure NETCONF exchanges.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . . . 2\n     1.1.  Conventions Used in This Document . . . . . . . .\
    \ . . . . . 2\n   2.  NETCONF over TLS  . . . . . . . . . . . . . . . . . . .\
    \ . . . . 3\n     2.1.  Connection Initiation . . . . . . . . . . . . . . . .\
    \ . . . 3\n     2.2.  Connection Closure  . . . . . . . . . . . . . . . . . .\
    \ . . 4\n   3.  Endpoint Authentication and Identification  . . . . . . . . .\
    \ . 4\n     3.1.  Server Identity . . . . . . . . . . . . . . . . . . . . . .\
    \ 4\n     3.2.  Client Identity . . . . . . . . . . . . . . . . . . . . . . 5\n\
    \   4.  Security Considerations . . . . . . . . . . . . . . . . . . . . 5\n  \
    \ 5.  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 6\n   6.\
    \  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 6\n   7.  Contributor's\
    \ Address . . . . . . . . . . . . . . . . . . . . . 7\n   8.  References  . .\
    \ . . . . . . . . . . . . . . . . . . . . . . . . 7\n     8.1.  Normative References\
    \  . . . . . . . . . . . . . . . . . . . 7\n     8.2.  Informative References\
    \  . . . . . . . . . . . . . . . . . . 7\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The NETCONF protocol [RFC4741] defines a mechanism through\
    \ which a\n   network device can be managed.  NETCONF is connection-oriented,\n\
    \   requiring a persistent connection between peers.  This connection\n   must\
    \ provide integrity, confidentiality, peer authentication, and\n   reliable, sequenced\
    \ data delivery.\n   This document defines \"NETCONF over TLS\", which includes\
    \ support for\n   certificate-based mutual authentication and key derivation,\
    \ utilizing\n   the protected ciphersuite negotiation, mutual authentication,\
    \ and key\n   management capabilities of the TLS (Transport Layer Security)\n\
    \   protocol, described in [RFC5246].\n   Throughout this document, the terms\
    \ \"client\" and \"server\" are used to\n   refer to the two ends of the TLS connection.\
    \  The client actively\n   opens the TLS connection, and the server passively\
    \ listens for the\n   incoming TLS connection.  The terms \"manager\" and \"agent\"\
    \ are used to\n   refer to the two ends of the NETCONF protocol session.  The\
    \ manager\n   issues NETCONF remote procedure call (RPC) commands, and the agent\n\
    \   replies to those commands.  When NETCONF is run over TLS using the\n   mapping\
    \ defined in this document, the client is always the manager,\n   and the server\
    \ is always the agent.\n"
- title: 1.1.  Conventions Used in This Document
  contents:
  - "1.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\"\
    , \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n"
- title: 2.  NETCONF over TLS
  contents:
  - "2.  NETCONF over TLS\n   Since TLS is application-protocol-independent, NETCONF\
    \ can operate on\n   top of the TLS protocol transparently.  This document defines\
    \ how\n   NETCONF can be used within a TLS session.\n"
- title: 2.1.  Connection Initiation
  contents:
  - "2.1.  Connection Initiation\n   The peer acting as the NETCONF manager MUST also\
    \ act as the TLS\n   client.  It MUST connect to the server that passively listens\
    \ for the\n   incoming TLS connection on the TCP port 6513.  It MUST therefore\
    \ send\n   the TLS ClientHello message to begin the TLS handshake.  Once the TLS\n\
    \   handshake has finished, the client and the server MAY begin to\n   exchange\
    \ NETCONF data.  In particular, the client will send complete\n   XML documents\
    \ to the server containing <rpc> elements, and the server\n   will respond with\
    \ complete XML documents containing <rpc-reply>\n   elements.  The client MAY\
    \ indicate interest in receiving event\n   notifications from a server by creating\
    \ a subscription to receive\n   event notifications [RFC5277].  In this case,\
    \ the server replies to\n   indicate whether the subscription request was successful\
    \ and, if it\n   was successful, the server begins sending the event notifications\
    \ to\n   the client as the events occur within the system.\n   All NETCONF messages\
    \ MUST be sent as TLS \"application data\".  It is\n   possible that multiple\
    \ NETCONF messages be contained in one TLS\n   record, or that a NETCONF message\
    \ be transferred in multiple TLS\n   records.\n   This document uses the same\
    \ delimiter sequence (\"]]>]]>\") defined in\n   [RFC4742], which MUST be sent\
    \ by both the client and the server after\n   each XML document in the NETCONF\
    \ exchange.  Since this character\n   sequence can legally appear in plain XML\
    \ in attribute values,\n   comments, and processing instructions, implementations\
    \ of this\n   document MUST ensure that this character sequence is never part\
    \ of a\n   NETCONF message.\n   Implementation of the protocol specified in this\
    \ document MAY\n   implement any TLS cipher suite that provides certificate-based\
    \ mutual\n   authentication [RFC5246].  The server MUST support certificate-based\n\
    \   client authentication.\n   Implementations MUST support TLS 1.2 [RFC5246]\
    \ and are REQUIRED to\n   support the mandatory-to-implement cipher suite, which\
    \ is\n   TLS_RSA_WITH_AES_128_CBC_SHA.  This document is assumed to apply to\n\
    \   future versions of TLS; in which case, the mandatory-to-implement\n   cipher\
    \ suite for the implemented version MUST be supported.\n"
- title: 2.2.  Connection Closure
  contents:
  - "2.2.  Connection Closure\n   A TLS client (NETCONF manager) MUST close the associated\
    \ TLS\n   connection if the connection is not expected to issue any NETCONF RPC\n\
    \   commands later.  It MUST send a TLS close_notify alert before closing\n  \
    \ the connection.  The TLS client MAY choose to not wait for the TLS\n   server\
    \ (NETCONF agent) close_notify alert and simply close the\n   connection, thus\
    \ generating an incomplete close on the TLS server\n   side.  Once the TLS server\
    \ gets a close_notify from the TLS client,\n   it MUST reply with a close_notify\
    \ unless it becomes aware that the\n   connection has already been closed by the\
    \ TLS client (e.g., the\n   closure was indicated by TCP).\n   When no data is\
    \ received from a connection for a long time (where the\n   application decides\
    \ what \"long\" means), a NETCONF peer MAY close the\n   connection.  The NETCONF\
    \ peer MUST attempt to initiate an exchange of\n   close_notify alerts with the\
    \ other NETCONF peer before closing the\n   connection.  The close_notify's sender\
    \ that is unprepared to receive\n   any more data MAY close the connection after\
    \ sending the close_notify\n   alert, thus generating an incomplete close on the\
    \ close_notify's\n   receiver side.\n"
- title: 3.  Endpoint Authentication and Identification
  contents:
  - '3.  Endpoint Authentication and Identification

    '
- title: 3.1.  Server Identity
  contents:
  - "3.1.  Server Identity\n   During the TLS negotiation, the client MUST carefully\
    \ examine the\n   certificate presented by the server to determine if it meets\
    \ the\n   client's expectations.  Particularly, the client MUST check its\n  \
    \ understanding of the server hostname against the server's identity as\n   presented\
    \ in the server Certificate message, in order to prevent man-\n   in-the-middle\
    \ attacks.\n   Matching is performed according to the rules below (following the\n\
    \   example of [RFC4642]):\n   o  The client MUST use the server hostname it used\
    \ to open the\n      connection (or the hostname specified in the TLS \"server_name\"\
    \n      extension [RFC5246]) as the value to compare against the server\n    \
    \  name as expressed in the server certificate.  The client MUST NOT\n      use\
    \ any form of the server hostname derived from an insecure\n      remote source\
    \ (e.g., insecure DNS lookup).  CNAME canonicalization\n      is not done.\n \
    \  o  If a subjectAltName extension of type dNSName is present in the\n      certificate,\
    \ it MUST be used as the source of the server's\n      identity.\n   o  Matching\
    \ is case-insensitive.\n   o  A \"*\" wildcard character MAY be used as the leftmost\
    \ name\n      component in the certificate.  For example, *.example.com would\n\
    \      match a.example.com, foo.example.com, etc., but would not match\n     \
    \ example.com.\n   o  If the certificate contains multiple names (e.g., more than\
    \ one\n      dNSName field), then a match with any one of the fields is\n    \
    \  considered acceptable.\n   If the match fails, the client MUST either ask for\
    \ explicit user\n   confirmation or terminate the connection and indicate the\
    \ server's\n   identity is suspect.\n   Additionally, clients MUST verify the\
    \ binding between the identity of\n   the servers to which they connect and the\
    \ public keys presented by\n   those servers.  Clients SHOULD implement the algorithm\
    \ in Section 6\n   of [RFC5280] for general certificate validation, but MAY supplement\n\
    \   that algorithm with other validation methods that achieve equivalent\n   levels\
    \ of verification (such as comparing the server certificate\n   against a local\
    \ store of already-verified certificates and identity\n   bindings).\n   If the\
    \ client has external information as to the expected identity of\n   the server,\
    \ the hostname check MAY be omitted.\n"
- title: 3.2.  Client Identity
  contents:
  - "3.2.  Client Identity\n   The server MUST verify the identity of the client with\
    \ certificate-\n   based authentication according to local policy to ensure that\
    \ the\n   incoming client request is legitimate before any configuration or\n\
    \   state data is sent to or received from the client.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security considerations described throughout\
    \ [RFC5246] and\n   [RFC4741] apply here as well.\n   This document in its current\
    \ version does not support third-party\n   authentication (e.g., backend Authentication,\
    \ Authorization, and\n   Accounting (AAA) servers) due to the fact that TLS does\
    \ not specify\n   this way of authentication and that NETCONF depends on the transport\n\
    \   protocol for the authentication service.  If third-party\n   authentication\
    \ is needed, BEEP or SSH transport can be used.\n   An attacker might be able\
    \ to inject arbitrary NETCONF messages via\n   some application that does not\
    \ carefully check exchanged messages or\n   deliberately insert the delimiter\
    \ sequence in a NETCONF message to\n   create a DoS attack.  Hence, applications\
    \ and NETCONF APIs MUST\n   ensure that the delimiter sequence defined in Section\
    \ 2.1 never\n   appears in NETCONF messages; otherwise, those messages can be\n\
    \   dropped, garbled, or misinterpreted.  If the delimiter sequence is\n   found\
    \ in a NETCONF message by the sender side, a robust\n   implementation of this\
    \ document should warn the user that illegal\n   characters have been discovered.\
    \  If the delimiter sequence is found\n   in a NETCONF message by the receiver\
    \ side (including any XML\n   attribute values, XML comments, or processing instructions),\
    \ a robust\n   implementation of this document must silently discard the message\n\
    \   without further processing and then stop the NETCONF session.\n   Finally,\
    \ this document does not introduce any new security\n   considerations compared\
    \ to [RFC4742].\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has assigned a TCP port number (6513) in the\
    \ \"Registered Port\n   Numbers\" range with the name \"netconf-tls\".  This port\
    \ will be the\n   default port for NETCONF over TLS, as defined in this document.\n\
    \      Registration Contact:  Mohamad Badra, badra@isima.fr.\n      Transport\
    \ Protocol:  TCP.\n      Port Number:  6513\n      Broadcast, Multicast or Anycast:\
    \ No.\n      Port Name:  netconf-tls.\n      Service Name: netconf.\n      Reference:\
    \ RFC 5539\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   A significant amount of the text in Section 3 was lifted\
    \ from\n   [RFC4642].\n   The author would like to acknowledge David Harrington,\
    \ Miao Fuyou,\n   Eric Rescorla, Juergen Schoenwaelder, Simon Josefsson, Olivier\n\
    \   Coupelon, Alfred Hoenes, and the NETCONF mailing list members for\n   their\
    \ comments on the document.  The author also appreciates Bert\n   Wijnen, Mehmet\
    \ Ersue, and Dan Romascanu for their efforts on issues\n   resolving discussion;\
    \ and Charlie Kaufman, Pasi Eronen, and Tim Polk\n   for the thorough review of\
    \ this document.\n"
- title: 7.  Contributor's Address
  contents:
  - "7.  Contributor's Address\n   Ibrahim Hajjeh\n   Ineovation\n   France\n   EMail:\
    \ ibrahim.hajjeh@ineovation.fr\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4741]  Enns, R., \"NETCONF Configuration Protocol\", RFC 4741,\n\
    \              December 2006.\n   [RFC4742]  Wasserman, M. and T. Goddard, \"\
    Using the NETCONF\n              Configuration Protocol over Secure SHell (SSH)\"\
    , RFC 4742,\n              December 2006.\n   [RFC5246]  Dierks, T. and E. Rescorla,\
    \ \"The Transport Layer Security\n              (TLS) Protocol Version 1.2\",\
    \ RFC 5246, August 2008.\n   [RFC5280]  Cooper, D., Santesson, S., Farrell, S.,\
    \ Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet X.509 Public\
    \ Key\n              Infrastructure Certificate and Certificate Revocation List\n\
    \              (CRL) Profile\", RFC 5280, May 2008.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC4642]  Murchison, K., Vinocur, J., and C.\
    \ Newman, \"Using\n              Transport Layer Security (TLS) with Network News\
    \ Transfer\n              Protocol (NNTP)\", RFC 4642, October 2006.\n   [RFC5277]\
    \  Chisholm, S. and H. Trevino, \"NETCONF Event\n              Notifications\"\
    , RFC 5277, July 2008.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mohamad Badra\n   CNRS/LIMOS Laboratory\n   Campus de cezeaux,\
    \ Bat. ISIMA\n   Aubiere  63170\n   France\n   EMail: badra@isima.fr\n"
