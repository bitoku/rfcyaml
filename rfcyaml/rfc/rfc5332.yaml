- contents:
  - '                     MPLS Multicast Encapsulations

    '
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Abstract\n   RFC 3032 established two data link layer codepoints for MPLS, used
    to\n   distinguish whether the data link layer frame is carrying an MPLS\n   unicast
    or an MPLS multicast packet.  However, this usage was never\n   deployed.  This
    specification updates RFC 3032 by redefining the\n   meaning of these two codepoints.
    \ Both codepoints can now be used to\n   carry multicast packets.  The second
    codepoint (formerly the\n   \"multicast codepoint\") is now to be used only on
    multiaccess media,\n   and it is to mean \"the top label of the following label
    stack is an\n   upstream-assigned label\".\n   RFC 3032 does not specify the destination
    address to be placed in the\n   \"MAC DA\" (Medium Access Layer Destination Address)
    field of an\n   ethernet frame that carries an MPLS multicast packet.  This document\n
    \  provides that specification.\n   This document updates RFC 3032 and RFC 4023.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Specification of Requirements ...................................3\n   3.
    Upstream-Assigned vs. Downstream-Assigned .......................3\n   4. Ethernet
    Codepoints .............................................6\n   5. PPP Protocol
    Field ..............................................6\n   6. GRE Protocol Type
    ...............................................6\n   7. IP Protocol Number ..............................................7\n
    \  8. Ethernet MAC DA for Multicast MPLS ..............................7\n   9.
    IANA Considerations .............................................8\n   10. Security
    Considerations ........................................8\n   11. Normative References
    ...........................................9\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   RFC 3031 [RFC3031] defines the \"Next Hop Label Forwarding
    Entry\"\n   (NHLFE).  The NHLFE for a particular label maps the label into a next\n
    \  hop (among other things).  When an MPLS packet is received, its top\n   label
    is mapped to an NHLFE, and the packet is sent to the next hop\n   specified by
    the NHLFE.\n   We define a particular MPLS label to be a \"multicast label\" in
    a\n   particular context if the NHLFE to which it is mapped, in that\n   context,
    specifies a set of next hops, with the semantics that the\n   packet is to be
    replicated and a copy of the packet sent to each of\n   the specified next hops.
    \ Note that this definition accommodates the\n   case where the set of next hops
    contains a single member.  What makes\n   a label a multicast label in a particular
    context is the semantics\n   attached to the set, i.e., the intention to replicate
    the packet and\n   transmit to all members of the set if the set has more than
    one\n   member.\n   RFC 3032 [RFC3032] established two data link layer codepoints
    for\n   MPLS: one to indicate that the data link layer frame is carrying an\n
    \  MPLS unicast packet, and the other to indicate that the data link\n   layer
    frame is carrying an MPLS multicast packet.  The term\n   \"multicast packet\"
    is not precisely defined in RFC 3032, though one\n   may presume that the \"multicast\"
    codepoint is intended to identify\n   the packet's top label as a multicast label.
    \ However, the multicast\n   codepoint has never been deployed, and further development
    of the\n   procedures for MPLS multicast have shown that, while there is a need\n
    \  for two codepoints, the use of the two codepoints is not properly\n   captured
    by RFC 3032.\n   In particular, there is no need for the codepoint to indicate
    whether\n   the top MPLS label is a multicast label.  When the receiver of an\n
    \  MPLS packet looks up the top label, the NHLFE will specify whether or\n   not
    the label is a multicast label.\n   This document updates RFC 3032 and RFC 4023
    by re-specifying the use\n   of the codepoints.  The old use of the \"multicast
    codepoint\", as\n   specified in those two RFCs, is hereby deprecated.\n   Note
    that an implementation that does MPLS multicast according to RFC\n   3032 and/or
    4023 will be unable to interoperate with implementations\n   that do MPLS multicast
    according to this document.  There may be some\n   deployed platforms that support
    the deprecated use of the codepoints,\n   but those platforms do not support the
    control plane mechanisms to\n   support MPLS multicast.  The absence of the control
    plane will\n   prevent a system that implements the deprecated use of codepoints\n
    \  from attempting to interoperate with a system that uses the\n   codepoints
    as specified herein.  (If an MPLS multicast control plane\n   were to be implemented
    on a platform that only supports the\n   deprecated codepoint, interoperability
    problems such as black holes\n   and/or misrouting would arise.  This does not
    seem like a potential\n   problem in practice.)\n   While RFC 3032 allows an MPLS
    packet to be carried in an ethernet\n   multicast frame, it fails to specify how
    the Medium Access Layer\n   Destination Address (MAC DA) field is to be set in
    that case.  This\n   document provides that specification.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Specification of Requirements
- contents:
  - "3.  Upstream-Assigned vs. Downstream-Assigned\n   Suppose a labeled packet P
    is sent from Label Switching Router (LSR)\n   R1 to LSR R2, where R1 puts label
    L on the packet's label stack, and\n   R2 has to look up label L in order to determine
    the corresponding\n   Forwarding Equivalence Class (FEC), call it F.\n   If the
    binding between L and F was made by R2 and advertised to R1,\n   then the label
    binding is known as \"downstream-assigned\".  RFC 3031\n   only discusses downstream-assigned
    label bindings.\n   If the binding between L and F was made by R1 and advertised
    to R2,\n   then the label binding is known as \"upstream-assigned\".\n   If the
    binding between L and F was made by a third party, say R3, and\n   then advertised
    to both R1 and R2, we also refer to the label binding\n   as \"upstream-assigned\".\n
    \  Upstream-assigned labels are not required to come from the same\n   \"label
    space\" as downstream-assigned labels.  See Section 3.14 of\n   [RFC3031] and
    especially [RFC5331] for a discussion of the notion of\n   \"label space\".  The
    procedures for properly interpreting an upstream-\n   assigned label are given
    in [RFC5331].\n   If Ru and Rd are LSP adjacencies, then they transmit an MPLS
    packet\n   to each other through one of the following mechanisms:\n      1. by
    putting the MPLS packet in a data link layer frame and\n         transmitting
    the frame,\n      2. by transmitting the MPLS packet through an MPLS tunnel, i.e.,\n
    \        by pushing an additional label (or labels) onto the label\n         stack,
    and then invoking mechanism 1, or\n      3. by transmitting the MPLS packet through
    an IP-based tunnel\n         (e.g., via RFC 4023 [RFC4023]), and then invoking
    mechanisms 1\n         and/or 2.\n   In short, an MPLS packet is transmitted through
    a data link, through\n   an MPLS tunnel, or through an IP tunnel.  In any of those
    cases, when\n   the packet emerges through the tunnel, the downstream LSR must
    know\n   whether the label that now appears at the top of the label stack has\n
    \  an upstream-assigned label binding or a downstream-assigned label\n   binding.
    \ For convenience, we will speak of a label with an\n   upstream-assigned label
    binding as an \"upstream-assigned label\".\n   Under certain conditions, specified
    below, multicast labels MAY be\n   upstream-assigned.  The ability to use upstream-assigned
    labels is an\n   OPTIONAL feature.  Upstream-assigned labels MUST NOT be used
    unless\n   it is known that the downstream LSR supports them.  How this is known\n
    \  is outside the scope of this document.\n   This document makes no changes to
    the procedures regarding unicast\n   labels.\n   We discuss three different types
    of data link or tunnel:\n      - Point-to-Point.  A point-to-point data link or
    tunnel associates\n        two systems, such that transmissions on that link or
    tunnel made\n        by one are received by the other, and only by the other.\n
    \       For a given direction of a given point-to-point data link or\n        tunnel,
    the following MUST be the case:  either every MPLS\n        packet will carry
    an upstream-assigned label, or else every MPLS\n        packet will carry a downstream-assigned
    label.  The procedures\n        for determining whether upstream-assigned or downstream-assigned\n
    \       labels are being used are outside the scope of this\n        specification.
    \ However, in the absence of any other\n        information, the use of downstream-assigned
    labels MUST be\n        presumed by default.\n      - Point-to-Multipoint.  A
    point-to-multipoint link or tunnel\n        associates n systems, such that only
    one of them can transmit\n        onto the link or tunnel, and the transmissions
    may be received\n        by the other n-1 systems.\n        The top labels (before
    applying the data link or tunnel\n        encapsulation) of all MPLS packets that
    are transmitted on a\n        particular point-to-multipoint data link or tunnel
    MUST be of\n        the same type; either all upstream-assigned or all downstream-\n
    \       assigned.  This means that all the receivers on the MPLS or IP\n        tunnel
    must know a priori whether upstream-assigned or\n        downstream-assigned labels
    are being used in the tunnel.  How\n        this is known is outside the scope
    of this document.\n      - Multipoint-to-Multipoint.  A multipoint-to-multipoint
    link or\n        tunnel associates n systems, such that any of them can transmit\n
    \       on the link or tunnel, and the transmissions may be received by\n        the
    other n-1 systems.\n        If MPLS packets are transmitted on a particular multipoint-to-\n
    \       multipoint link or tunnel, one of the following scenarios\n        applies:\n
    \        1. It is known (by methods outside the scope of this document)\n            that
    the top label of every MPLS packet on the link or\n            tunnel is downstream-assigned.\n
    \        2. It is known (by methods outside the scope of this document)\n            that
    the top label of every MPLS packet on the link or\n            tunnel is upstream-assigned.\n
    \        3. Some MPLS packets on the link may have upstream-assigned top\n            labels
    while some may have downstream-assigned top labels.\n      If (and only if) the
    third scenario applies, the data link or\n      tunnel encapsulation MUST provide
    a codepoint that specifies\n      whether the top label of the encapsulated MPLS
    packet is\n      upstream-assigned or downstream-assigned.  If a particular type
    of\n      data link or tunnel does not provide such a codepoint, then the\n      third
    scenario MUST NOT be used.\n   The remainder of this document specifies procedures
    for setting the\n   data link layer codepoints and address fields.\n"
  title: 3.  Upstream-Assigned vs. Downstream-Assigned
- contents:
  - "4.  Ethernet Codepoints\n   Ethernet is an example of a multipoint-to-multipoint
    data link.\n   Ethertype 0x8847 is used whenever a unicast ethernet frame carries
    an\n   MPLS packet.\n   Ethertype 0x8847 is also used whenever a multicast ethernet
    frame\n   carries an MPLS packet, EXCEPT for the case where the top label of\n
    \  the MPLS packet has been upstream-assigned.\n   Ethertype 0x8848, formerly
    known as the \"MPLS multicast codepoint\",\n   is to be used only when an MPLS
    packet whose top label is upstream-\n   assigned is carried in a multicast ethernet
    frame.\n"
  title: 4.  Ethernet Codepoints
- contents:
  - "5.  PPP Protocol Field\n   PPP is an example of a point-to-point data link.  When
    a PPP frame is\n   carrying an MPLS packet, the PPP Protocol field is always set
    to\n   0x0281.\n"
  title: 5.  PPP Protocol Field
- contents:
  - "6.  GRE Protocol Type\n   RFC 4023 is modified as described below.\n   If the
    IP destination address of the Generic Routing Encapsulation\n   (GRE) is a unicast
    IP address, then the ethertype value 0x8847 MUST\n   be used in all cases for
    the MPLS-in-GRE encapsulation.\n   If the IP destination address of the GRE encapsulation
    is a multicast\n   IP address, then:\n      - the ethertype value 0x8847 MUST
    be used when the top label of\n        the encapsulated MPLS packet is downstream-assigned,\n
    \     - the ethertype value 0x8848 MUST be used when the top label of\n        the
    encapsulated MPLS packet is upstream-assigned.\n   Through procedures that are
    outside the scope of this specification,\n   it may be known that if the destination
    address of a GRE packet is a\n   multicast IP address, then the top label of the
    GRE payload is\n   upstream-assigned.  In such a case, the occurrence of the 8847\n
    \  codepoint in a GRE packet with a multicast destination IP address\n   MUST
    be considered an error, and the packet MUST be discarded.\n"
  title: 6.  GRE Protocol Type
- contents:
  - "7.  IP Protocol Number\n   RFC 4023 is modified as follows: the IPv4 Protocol
    Number field or\n   the IPv6 Next Header field is always set to 137, whether or
    not the\n   encapsulated MPLS packet is an MPLS multicast packet.\n   If the IP
    destination address of the IP encapsulation is an IP\n   multicast address, the
    IP tunnel may be considered to be a point-to-\n   multipoint tunnel or a multipoint-to-multipoint
    tunnel.  In either\n   case, either all encapsulated MPLS packets in the particular
    tunnel\n   have a downstream-assigned label at the top of the stack, or all\n
    \  encapsulated MPLS packets in that tunnel have an upstream-assigned\n   label
    at the top of the stack.  The means by which this is determined\n   for a particular
    tunnel is outside the scope of this specification.\n"
  title: 7.  IP Protocol Number
- contents:
  - "8.  Ethernet MAC DA for Multicast MPLS\n   When an LSR transmits a multicast
    MPLS packet in a multicast ethernet\n   frame, it MUST set the MAC Destination
    Address to the value\n   01-00-5e-8v-wx-yz, where vwxyz is a 20-bit (five-nibble)
    value set as\n   follows:\n      1. vwxyz MAY be set to 0,\n      2. vwxyz MAY
    be set to the value of one of the MPLS labels on the\n         packet's label
    stack.\n   Which of these procedures is the default procedure in any particular\n
    \  LSR is implementation-dependent.  However, LSRs using the two\n   different
    procedures MUST interoperate.  That is, an LSR MUST NOT\n   filter packets for
    which vwxyz has been set to zero, and it MUST NOT\n   indiscriminately filter
    all packets for which vwxyz has not been set\n   to zero.\n   If an LSR follows
    the procedure of setting vwxyz to the value of one\n   of the MPLS labels on the
    packet's label stack, and if that label\n   stack contains two or more labels,
    then by default, vwxyz MUST be set\n   to the value of the second MPLS label on
    the packet's label stack.\n   By \"the second label\", we mean the label that
    is in the label stack\n   entry that immediately follows the topmost label stack
    entry.  The\n   LSR MAY, if configured to do so, allow a label other than the
    second\n   to be used for this purpose.  If the MPLS packet has only one label,\n
    \  the value of that label will be used instead of the value of the\n   (non-existent)
    second label.\n   It is expected that the LSR will follow the procedures of [RFC5331],\n
    \  pushing on two labels, with the topmost label being a \"context label\"\n   that
    is the same for all MPLS packets being transmitted by the LSR\n   onto the ethernet,
    but with the second label being different for\n   different LSPs.  Thus, if the
    MAC DA value is a function of the\n   second label, more of the LSP-specific information
    about the packet\n   appears in the MAC DA field.  This can be used to filter
    multicast\n   packets with \"unexpected\" non-zero values of vwxyz.  Further\n
    \  discussion of such filtering or its uses is outside the scope of this\n   document.\n
    \  The use of ethernet and/or IP broadcast addresses (as distinguished\n   from
    multicast addresses) does not fall within the scope of this\n   specification.\n"
  title: 8.  Ethernet MAC DA for Multicast MPLS
- contents:
  - "9.  IANA Considerations\n   IANA already owns the set of ethernet multicast addresses
    in the\n   range 01-00-5e-00-00-00 to 01-00-5e-ff-ff-ff.  Addresses in the range\n
    \  01-00-5e-00-00-00 to 01-00-5e-7f-ff-ff are already reserved for use\n   when
    an ethernet multicast frame carries an IP multicast packet.\n   IANA has reserved
    ethernet addresses in the range 01-00-5e-80-00-00\n   to 01-00-5e-8f-ff-ff for
    use when an ethernet multicast frame carries\n   an MPLS multicast packet.  Addresses
    in this range are valid when\n   used with ethertype 8847 or 8848.\n   As this
    document modifies the usage of ethertypes 8847 and 8848, IANA\n   has changed
    the description of these ethertypes as follows.\n   Ethertype 8847 is defined
    as \"MPLS\", as defined in RFC 3032 and in\n   this document.  Ethertype 8848
    is defined as \"MPLS with upstream-\n   assigned label\", as defined in this document.\n"
  title: 9.  IANA Considerations
- contents:
  - "10.  Security Considerations\n   The security considerations of RFC 3032 and
    RFC 4023 apply.\n   Malicious changing of the codepoint may result in loss or
    misrouting\n   of packets.  However, altering the codepoint without also altering\n
    \  the label does not result in a predictable effect.\n   Malicious alteration
    of the MAC DA on an ethernet can result in\n   packets being received by a third
    party, rather than by the intended\n   recipient.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use in RFCs
    to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC3031] Rosen, E., Viswanathan, A., and R. Callon, \"Multiprotocol\n             Label
    Switching Architecture\", RFC 3031, January 2001.\n   [RFC3032] Rosen, E., Tappan,
    D., Fedorkow, G., Rekhter, Y.,\n             Farinacci, D., Li, T., and A. Conta,
    \"MPLS Label Stack\n             Encoding\", RFC 3032, January 2001.\n   [RFC4023]
    Worster, T., Rekhter, Y., and E. Rosen, Ed., \"Encapsulating\n             MPLS
    in IP or Generic Routing Encapsulation (GRE)\", RFC\n             4023, March
    2005.\n   [RFC5331] Aggarwal, R., Rekhter, Y., and E. Rosen, \"MPLS Upstream\n
    \            Label Assignment and Context-Specific Label Space\",  RFC\n             5331,
    August 2008.\n"
  title: 11.  Normative References
- contents:
  - "Authors' Addresses\n   Toerless Eckert\n   Cisco Systems, Inc.\n   170 Tasman
    Drive\n   San Jose, CA, 95134\n   EMail: eckert@cisco.com\n   Eric C. Rosen\n
    \  Cisco Systems, Inc.\n   1414 Massachusetts Avenue\n   Boxborough, MA 01719\n
    \  EMail: erosen@cisco.com\n   Rahul Aggarwal\n   Juniper Networks\n   1194 North
    Mathilda Ave.\n   Sunnyvale, CA 94089\n   EMail: rahul@juniper.net\n   Yakov Rekhter\n
    \  Juniper Networks\n   1194 North Mathilda Ave.\n   Sunnyvale, CA 94089\n   EMail:
    yakov@juniper.net\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2008).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
