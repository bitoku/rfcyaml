- title: __initial_text__
  contents:
  - '        The Intrusion Detection Message Exchange Format (IDMEF)

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
- title: IESG Note
  contents:
  - "IESG Note\n   The content of this RFC was at one time considered by the IETF,\
    \ but\n   the working group concluded before this work was approved as a\n   standards-track\
    \ protocol.  This RFC is not a candidate for any level\n   of Internet Standard.\
    \  The IETF disclaims any knowledge of the\n   fitness of this RFC for any purpose\
    \ and in particular notes that the\n   decision to publish is not based on complete\
    \ IETF review for such\n   things as security, congestion control, or inappropriate\
    \ interaction\n   with deployed protocols.  The IESG has chosen to publish this\n\
    \   document in order to document the work as it was when the working\n   group\
    \ concluded and to encourage experimentation and development of\n   the technology.\
    \  Readers of this RFC should exercise caution in\n   evaluating its value for\
    \ implementation and deployment.\n"
- title: Abstract
  contents:
  - "Abstract\n   The purpose of the Intrusion Detection Message Exchange Format\n\
    \   (IDMEF) is to define data formats and exchange procedures for sharing\n  \
    \ information of interest to intrusion detection and response systems\n   and\
    \ to the management systems that may need to interact with them.\n   This document\
    \ describes a data model to represent information\n   exported by intrusion detection\
    \ systems and explains the rationale\n   for using this model.  An implementation\
    \ of the data model in the\n   Extensible Markup Language (XML) is presented,\
    \ an XML Document Type\n   Definition is developed, and examples are provided.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................4\n\
    \      1.1. About the IDMEF Data Model .................................4\n  \
    \         1.1.1. Problems Addressed by the Data Model ................5\n    \
    \       1.1.2. Data Model Design Goals .............................6\n      1.2.\
    \ About the IDMEF XML Implementation .........................7\n           1.2.1.\
    \ The Extensible Markup Language ......................7\n           1.2.2. Rationale\
    \ for Implementing IDMEF in XML .............8\n   2. Notices and Conventions\
    \ Used in This Document ..................10\n   3. Notational Conventions and\
    \ Formatting Issues ...................10\n      3.1. IDMEF XML Documents .......................................10\n\
    \           3.1.1. The Document Prolog ................................10\n  \
    \         3.1.2. Character Data Processing in IDMEF .................11\n    \
    \       3.1.3. Languages in IDMEF .................................12\n      3.2.\
    \ IDMEF Data Types ..........................................12\n           3.2.1.\
    \ Integers ...........................................12\n           3.2.2. Real\
    \ Numbers .......................................12\n           3.2.3. Characters\
    \ and Strings .............................13\n           3.2.4. Bytes ..............................................14\n\
    \           3.2.5. Enumerated Types ...................................14\n  \
    \         3.2.6. Date-Time Strings ..................................14\n    \
    \       3.2.7. NTP Timestamps .....................................16\n      \
    \     3.2.8. Port Lists .........................................16\n        \
    \   3.2.9. Unique Identifiers .................................17\n   4. The IDMEF\
    \ Data Model and DTD ...................................18\n      4.1. Data Model\
    \ Overview .......................................18\n      4.2. The Message Classes\
    \ .......................................20\n           4.2.1. The IDMEF-Message\
    \ Class ............................20\n           4.2.2. The Alert Class ....................................20\n\
    \           4.2.3. The Heartbeat Class ................................27\n  \
    \         4.2.4. The Core Classes ...................................29\n    \
    \       4.2.5. The Time Classes ...................................41\n      \
    \     4.2.6. The Assessment Classes .............................42\n        \
    \   4.2.7. The Support Classes ................................47\n   5. Extending\
    \ the IDMEF ............................................79\n      5.1. Extending\
    \ the Data Model ..................................79\n      5.2. Extending the\
    \ IDMEF DTD ...................................80\n   6. Special Considerations\
    \ .........................................81\n      6.1. XML Validity and Well-Formedness\
    \ ..........................81\n      6.2. Unrecognized XML Tags .....................................82\n\
    \      6.3. Analyzer-Manager Time Synchronization .....................82\n  \
    \    6.4. NTP Timestamp Wrap-Around .................................84\n    \
    \  6.5. Digital Signatures ........................................85\n   7. Examples\
    \ .......................................................85\n      7.1. Denial-of-Service\
    \ Attacks .................................86\n           7.1.1. The \"teardrop\"\
    \ Attack ..............................86\n           7.1.2. The \"ping of death\"\
    \ Attack .........................87\n      7.2. Port Scanning Attacks .....................................88\n\
    \           7.2.1. Connection to a Disallowed Service .................88\n  \
    \         7.2.2. Simple Port Scanning ...............................89\n    \
    \  7.3. Local Attacks .............................................90\n      \
    \     7.3.1. The \"loadmodule\" Attack ............................90\n      \
    \     7.3.2. The \"phf\" Attack ...................................93\n      \
    \     7.3.3. File Modification ..................................94\n      7.4.\
    \ System Policy Violation ...................................96\n      7.5. Correlated\
    \ Alerts .........................................98\n      7.6. Analyzer Assessments\
    \ ......................................99\n      7.7. Heartbeat ................................................100\n\
    \      7.8. XML Extension ............................................101\n  \
    \ 8. The IDMEF Document Type Definition (Normative) ................104\n   9.\
    \ Security Considerations .......................................117\n   10. IANA\
    \ Considerations ..........................................118\n      10.1. Adding\
    \ Values to Existing Attributes ....................118\n           10.1.1. Attribute\
    \ Registrations ..........................119\n           10.1.2. Registration\
    \ Template ............................130\n      10.2. Adding New Attributes\
    \ and Classes .......................131\n   11. References ...................................................131\n\
    \      11.1. Normative References ....................................131\n  \
    \    11.2. Informative References ..................................132\n   Appendix\
    \ A.  Acknowledgements ....................................134\n   Appendix B.\
    \  The IDMEF Schema Definition (Non-normative) .........135\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Intrusion Detection Message Exchange Format (IDMEF)\
    \ [2] is\n   intended to be a standard data format that automated intrusion\n\
    \   detection systems can use to report alerts about events that they\n   deem\
    \ suspicious.  The development of this standard format will enable\n   interoperability\
    \ among commercial, open source, and research systems,\n   allowing users to mix-and-match\
    \ the deployment of these systems\n   according to their strong and weak points\
    \ to obtain an optimal\n   implementation.\n   The most obvious place to implement\
    \ the IDMEF is in the data channel\n   between an intrusion detection analyzer\
    \ (or \"sensor\") and the manager\n   (or \"console\") to which it sends alarms.\
    \  But there are other places\n   where the IDMEF can be useful:\n   o  a single\
    \ database system that could store the results from a\n      variety of intrusion\
    \ detection products would make it possible for\n      data analysis and reporting\
    \ activities to be performed on \"the\n      whole picture\" instead of just a\
    \ part of it;\n   o  an event correlation system that could accept alerts from\
    \ a\n      variety of intrusion detection products would be capable of\n     \
    \ performing more sophisticated cross-correlation and cross-\n      confirmation\
    \ calculations than one that is limited to a single\n      product;\n   o  a graphical\
    \ user interface that could display alerts from a\n      variety of intrusion\
    \ detection products would enable the user to\n      monitor all of the products\
    \ from a single screen, and require him\n      or her to learn only one interface,\
    \ instead of several; and\n   o  a common data exchange format would make it easier\
    \ for different\n      organizations (users, vendors, response teams, law enforcement)\
    \ to\n      not only exchange data, but also communicate about it.\n   The diversity\
    \ of uses for the IDMEF needs to be considered when\n   selecting its method of\
    \ implementation.\n"
- title: 1.1.  About the IDMEF Data Model
  contents:
  - "1.1.  About the IDMEF Data Model\n   The IDMEF data model is an object-oriented\
    \ representation of the\n   alert data sent to intrusion detection managers by\
    \ intrusion\n   detection analyzers.\n"
- title: 1.1.1.  Problems Addressed by the Data Model
  contents:
  - "1.1.1.  Problems Addressed by the Data Model\n   The data model addresses several\
    \ problems associated with\n   representing intrusion detection alert data:\n\
    \   o  Alert information is inherently heterogeneous.  Some alerts are\n     \
    \ defined with very little information, such as origin, destination,\n      name,\
    \ and time of the event.  Other alerts provide much more\n      information, such\
    \ as ports or services, processes, user\n      information, and so on.  The data\
    \ model that represents this\n      information must be flexible to accommodate\
    \ different needs.\n      An object-oriented model is naturally extensible via\
    \ aggregation\n      and subclassing.  If an implementation of the data model\
    \ extends\n      it with new classes, either by aggregation or subclassing, an\n\
    \      implementation that does not understand these extensions will\n      still\
    \ be able to understand the subset of information that is\n      defined by the\
    \ data model.  Subclassing and aggregation provide\n      extensibility while\
    \ preserving the consistency of the model.\n   o  Intrusion detection environments\
    \ are different.  Some analyzers\n      detect attacks by analyzing network traffic;\
    \ others use operating\n      system logs or application audit trail information.\
    \  Alerts for\n      the same attack, sent by analyzers with different information\n\
    \      sources, will not contain the same information.\n      The data model defines\
    \ support classes that accommodate the\n      differences in data sources among\
    \ analyzers.  In particular, the\n      notions of source and target for the alert\
    \ are represented by the\n      combination of Node, Process, Service, and User\
    \ classes.\n   o  Analyzer capabilities are different.  Depending on the\n   \
    \   environment, one may install a lightweight analyzer that provides\n      little\
    \ information in its alerts, or a more complex analyzer that\n      will have\
    \ a greater impact on the running system but provide more\n      detailed alert\
    \ information.  The data model must allow for\n      conversion to formats used\
    \ by tools other than intrusion detection\n      analyzers, for the purpose of\
    \ further processing the alert\n      information.\n      The data model defines\
    \ extensions to the basic Document Type\n      Definition (DTD) that allow carrying\
    \ both simple and complex\n      alerts.  Extensions are accomplished through\
    \ subclassing or\n      association of new classes.\n   o  Operating environments\
    \ are different.  Depending on the kind of\n      network or operating system\
    \ used, attacks will be observed and\n      reported with different characteristics.\
    \  The data model should\n      accommodate these differences.\n      Significant\
    \ flexibility in reporting is provided by the Node and\n      Service support\
    \ classes.  If additional information must be\n      reported, subclasses may\
    \ be defined that extend the data model\n      with additional attributes.\n \
    \  o  Commercial vendor objectives are different.  For various reasons,\n    \
    \  vendors may wish to deliver more or less information about certain\n      types\
    \ of attacks.\n      The object-oriented approach allows this flexibility while\
    \ the\n      subclassing rules preserve the integrity of the model.\n"
- title: 1.1.2.  Data Model Design Goals
  contents:
  - "1.1.2.  Data Model Design Goals\n   The data model was designed to provide a\
    \ standard representation of\n   alerts in an unambiguous fashion, and to permit\
    \ the relationship\n   between simple and complex alerts to be described.\n"
- title: 1.1.2.1.  Representing Events
  contents:
  - "1.1.2.1.  Representing Events\n   The goal of the data model is to provide a\
    \ standard representation of\n   the information that an intrusion detection analyzer\
    \ reports when it\n   detects an occurrence of some unusual event(s).  These alerts\
    \ may be\n   simple or complex, depending on the capabilities of the analyzer\
    \ that\n   creates them.\n"
- title: 1.1.2.2.  Content-Driven
  contents:
  - "1.1.2.2.  Content-Driven\n   The design of the data model is content-driven.\
    \  This means that new\n   objects are introduced to accommodate additional content,\
    \ not\n   semantic differences between alerts.  This is an important goal, as\n\
    \   the task of classifying and naming computer vulnerabilities is both\n   extremely\
    \ difficult and very subjective.\n   The data model must be unambiguous.  This\
    \ means that while we allow\n   analyzers to be more or less precise than one\
    \ another (i.e., one\n   analyzer may report more information about an event than\
    \ another), we\n   do not allow them to produce contradictory information in two\
    \ alerts\n   describing the same event (i.e., the common subset of information\n\
    \   reported by both analyzers must be identical and inserted in the same\n  \
    \ placeholders within the alert data structure).  Of course, it is\n   always\
    \ possible to insert all \"interesting\" information about an\n   event in extension\
    \ fields of the alert instead of in the fields where\n   it belongs; however,\
    \ such practice reduces interoperability and\n   should be avoided whenever possible.\n"
- title: 1.1.2.3.  Relationship between Alerts
  contents:
  - "1.1.2.3.  Relationship between Alerts\n   Intrusion detection alerts can be transmitted\
    \ at several levels.\n   This document applies to the entire range, from very\
    \ simple alerts\n   (e.g., those alerts that are the result of a single action\
    \ or\n   operation in the system, such as a failed login report) to very\n   complex\
    \ ones (e.g., the aggregation of several events causing an\n   alert to be generated).\n\
    \   As such, the data model must provide a way for complex alerts that\n   aggregate\
    \ several simple alerts to identify those simple alerts in\n   the complex alert's\
    \ content.\n"
- title: 1.2.  About the IDMEF XML Implementation
  contents:
  - "1.2.  About the IDMEF XML Implementation\n   Two implementations of the IDMEF\
    \ were originally proposed to the\n   Intrusion Detection Working Group (IDWG):\
    \ one using the Structure of\n   Management Information (SMI) to describe a Simple\
    \ Network Management\n   Protocol (SNMP) MIB, and the other using a DTD to describe\
    \ XML\n   documents.\n   These proposed implementations were reviewed by the IDWG\
    \ at its\n   September 1999 and February 2000 meetings; it was decided at the\n\
    \   February meeting that the XML solution was best at fulfilling the\n   IDWG\
    \ requirements.\n"
- title: 1.2.1.  The Extensible Markup Language
  contents:
  - "1.2.1.  The Extensible Markup Language\n   The Extensible Markup Language (XML)\
    \ [3] is a simplified version of\n   the Standard Generalized Markup Language\
    \ (SGML), a syntax for\n   specifying text markup defined by the ISO 8879 standard.\
    \  XML is\n   gaining widespread attention as a language for representing and\n\
    \   exchanging documents and data on the Internet, and as the solution to\n  \
    \ most of the problems inherent in HyperText Markup Language (HTML).\n   XML was\
    \ published as a recommendation by the World Wide Web\n   Consortium (W3C) on\
    \ February 10, 1998.\n   XML is a metalanguage -- a language for describing other\
    \ languages --\n   that enables an application to define its own markup.  XML\
    \ allows the\n   definition of customized markup languages for different types\
    \ of\n   documents and different applications.  This differs from HTML, in\n \
    \  which there is a fixed set of identifiers with preset meanings that\n   must\
    \ be \"adapted\" for specialized uses.  Both XML and HTML use\n   elements (tags)\
    \ (identifiers delimited by '<' and '>') and attributes\n   (of the form \"name='value'\"\
    ).  But where \"<p>\" always means\n   \"paragraph\" in HTML, it may mean \"paragraph\"\
    , \"person\", \"price\", or\n   \"platypus\" in XML, or it might have no meaning\
    \ at all, depending on\n   the particular application.\n   NOTE:  XML provides\
    \ both a syntax for declaring document markup and\n      structure (i.e., defining\
    \ elements and attributes, specifying the\n      order in which they appear, and\
    \ so on) and a syntax for using that\n      markup in documents.  Because markup\
    \ declarations look radically\n      different from markup, many people are confused\
    \ as to which syntax\n      is called XML.  The answer is that they both are,\
    \ because they are\n      actually both part of the same language.\n      For\
    \ clarity in this document, we will use the terms \"XML\" and \"XML\n      documents\"\
    \ when speaking in the general case, and the term \"IDMEF\n      markup\" when\
    \ speaking specifically of the elements (tags) and\n      attributes that describe\
    \ IDMEF messages.\n   The publication of XML was followed by the publication of\
    \ a second\n   recommendation [4] by the World Wide Web Consortium, defining the\
    \ use\n   of namespaces in XML documents.  An XML namespace is a collection of\n\
    \   names, identified by a Uniform Resource Identifier (URI) [5].  When\n   using\
    \ namespaces, each tag is identified with the namespace it comes\n   from, allowing\
    \ tags from different namespaces with the same names to\n   occur in the same\
    \ document.  For example, a single document could\n   contain both \"usa:football\"\
    \ and \"europe:football\" tags, each with\n   different meanings.\n   In anticipation\
    \ of the widespread use of XML namespaces, this memo\n   includes the definition\
    \ of the URI to be used to identify the IDMEF\n   namespace.\n"
- title: 1.2.2.  Rationale for Implementing IDMEF in XML
  contents:
  - "1.2.2.  Rationale for Implementing IDMEF in XML\n   XML-based applications are\
    \ being used or developed for a wide variety\n   of purposes, including electronic\
    \ data interchange in a variety of\n   fields, financial data interchange, electronic\
    \ business cards,\n   calendar and scheduling, enterprise software distribution,\
    \ web \"push\"\n   technology, and markup languages for chemistry, mathematics,\
    \ music,\n   molecular dynamics, astronomy, book and periodical publishing, web\n\
    \   publishing, weather observations, real estate transactions, and many\n   others.\n\
    \   XML's flexibility makes it a good choice for these applications; that\n  \
    \ same flexibility makes it a good choice for implementing the IDMEF as\n   well.\
    \  Other, more specific reasons for choosing XML to implement the\n   IDMEF are:\n\
    \   o  XML allows a custom language to be developed specifically for the\n   \
    \   purpose of describing intrusion detection alerts.  It also defines\n     \
    \ a standard way to extend this language, either for later revisions\n      of\
    \ this document (\"standard\" extensions) or for vendor-specific\n      use (\"\
    non-standard\" extensions).\n   o  Software tools for processing XML documents\
    \ are widely available,\n      in both commercial and open source forms.  Numerous\
    \ tools and APIs\n      for parsing and/or validating XML are available in a variety\
    \ of\n      languages, including Java, C, C++, Tcl, Perl, Python, and GNU\n  \
    \    Emacs Lisp.  Widespread access to tools will make adoption of the\n     \
    \ IDMEF by product developers easier, and hopefully, faster.\n   o  XML meets\
    \ IDMEF Requirement 5.1 [2], that message formats support\n      full internationalization\
    \ and localization.  The XML standard\n      requires support for both the UTF-8\
    \ and UTF-16 encodings of ISO/\n      IEC 10646 (Universal Multiple-Octet Coded\
    \ Character Set, \"UCS\")\n      and Unicode, making all XML applications (and\
    \ therefore all IDMEF-\n      compliant applications) compatible with these common\
    \ character\n      encodings.\n      XML also provides support for specifying,\
    \ on a per-element basis,\n      the language in which the element's content is\
    \ written, making\n      IDMEF easy to adapt to \"Natural Language Support\" versions\
    \ of a\n      product.\n   o  XML meets IDMEF Requirement 5.2 [2], that message\
    \ formats must\n      support filtering and aggregation.  XML's integration with\
    \ XSL, a\n      style language, allows messages to be combined, discarded, and\n\
    \      rearranged.\n   o  Ongoing XML development projects, in the W3C and elsewhere,\
    \ will\n      provide object-oriented extensions, database support, and other\n\
    \      useful features.  If implemented in XML, the IDMEF immediately\n      gains\
    \ these features as well.\n   o  XML is free, with no license, no license fees,\
    \ and no royalties.\n"
- title: 2.  Notices and Conventions Used in This Document
  contents:
  - "2.  Notices and Conventions Used in This Document\n   The keywords \"MUST\",\
    \ \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD\
    \ NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to\
    \ be interpreted as described in RFC 2119 [1].\n   An \"IDMEF-compliant application\"\
    \ is a program or program component,\n   such as an analyzer or manager, that\
    \ reads and/or writes messages in\n   the format specified by this memo.\n   An\
    \ \"IDMEF document\" is a message that adheres to the requirements\n   specified\
    \ by this memo and that is exchanged by two or more IDMEF\n   applications.  \"\
    IDMEF message\" is another term for an \"IDMEF\n   document\".\n"
- title: 3.  Notational Conventions and Formatting Issues
  contents:
  - "3.  Notational Conventions and Formatting Issues\n   This document uses three\
    \ notations: Unified Modeling Language to\n   describe the data model [14], XML\
    \ to describe the markup used in\n   IDMEF documents, and IDMEF markup to represent\
    \ the documents\n   themselves.\n"
- title: 3.1.  IDMEF XML Documents
  contents:
  - "3.1.  IDMEF XML Documents\n   This section describes IDMEF XML document formatting\
    \ rules.  Most of\n   these rules are \"inherited\" from the rules for formatting\
    \ XML\n   documents.\n"
- title: 3.1.1.  The Document Prolog
  contents:
  - "3.1.1.  The Document Prolog\n   The format of an IDMEF XML document prolog is\
    \ described in the\n   following sections.\n"
- title: 3.1.1.1.  XML Declaration
  contents:
  - "3.1.1.1.  XML Declaration\n   IDMEF documents being exchanged between IDMEF-compliant\
    \ applications\n   MUST begin with an XML declaration, and MUST specify the XML\
    \ version\n   in use.  Specification of the encoding in use is RECOMMENDED.\n\
    \   An IDMEF message SHOULD therefore start with:\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\"/>\n   IDMEF-compliant applications MAY choose to omit\
    \ the XML declaration\n   internally to conserve space, adding it only when the\
    \ message is sent\n   to another destination (e.g., a web browser).  This practice\
    \ is NOT\n   RECOMMENDED unless it can be accomplished without loss of each\n\
    \   message's version and encoding information.\n   In order to be valid (see\
    \ Section 6.1), an XML document must contain\n   a document type definition. \
    \ However, this represents significant\n   overhead to an IDMEF-compliant application,\
    \ both in the bandwidth it\n   consumes as well as the requirements it places\
    \ on the XML processor\n   (not only to parse the declaration itself, but also\
    \ to parse the DTD\n   it references).\n   Implementors MAY decide, therefore,\
    \ to have analyzers and managers\n   agree out-of-band on the particular document\
    \ type definition they\n   will be using to exchange messages (the standard one\
    \ as defined here,\n   or one with extensions), and then omit the document type\
    \ definition\n   from IDMEF messages.  The method for negotiating this agreement\
    \ is\n   outside the scope of this document.  Note that great care must be\n \
    \  taken in negotiating any such agreements, as the manager may have to\n   accept\
    \ messages from many different analyzers, each using a DTD with\n   a different\
    \ set of extensions.\n"
- title: 3.1.2.  Character Data Processing in IDMEF
  contents:
  - "3.1.2.  Character Data Processing in IDMEF\n   For portability reasons, IDMEF-compliant\
    \ applications SHOULD NOT use,\n   and IDMEF messages SHOULD NOT be encoded in,\
    \ character encodings\n   other than UTF-8 and UTF-16.  Consistent with the XML\
    \ standard, if no\n   encoding is specified for an IDMEF message, UTF-8 is assumed.\n\
    \   NOTE:  The ASCII character set is a subset of the UTF-8 encoding, and\n  \
    \    therefore may be used to encode IDMEF messages.\n   Per the XML standard,\
    \ IDMEF documents encoded in UTF-16 MUST begin\n   with the Byte Order Mark described\
    \ by ISO/IEC 10646 Annex E and\n   Unicode Appendix B (the \"ZERO WIDTH NO-BREAK\
    \ SPACE\" character,\n   #xFEFF).\n"
- title: 3.1.2.1.  Character Entity References
  contents:
  - "3.1.2.1.  Character Entity References\n   It is RECOMMENDED that IDMEF-compliant\
    \ applications use the entity\n   reference form (see Section 3.2.3.1) of the\
    \ characters '&', ,'<',\n   '>', '\"', and ''' (single-quote) whenever writing\
    \ these characters in\n   data, to avoid any possibility of misinterpretation.\n"
- title: 3.1.2.2.  White Space Processing
  contents:
  - "3.1.2.2.  White Space Processing\n   All IDMEF elements MUST support the \"xml:space\"\
    \ attribute.\n"
- title: 3.1.3.  Languages in IDMEF
  contents:
  - "3.1.3.  Languages in IDMEF\n   IDMEF-compliant applications MUST specify the\
    \ language in which their\n   contents are encoded; in general this can be done\
    \ by specifying the\n   \"xml:lang\" attribute for the top-level element and letting\
    \ all other\n   elements \"inherit\" that definition [10].\n"
- title: 3.2.  IDMEF Data Types
  contents:
  - "3.2.  IDMEF Data Types\n   Within an XML IDMEF message, all data will be expressed\
    \ as \"text\" (as\n   opposed to \"binary\"), since XML is a text formatting language.\
    \  We\n   provide typing information for the attributes of the classes in the\n\
    \   data model, however, to convey to the reader the type of data that\n   the\
    \ model expects for each attribute.\n   Each data type in the model has specific\
    \ formatting requirements in\n   an XML IDMEF message; these requirements are\
    \ set forth in this\n   section.\n"
- title: 3.2.1.  Integers
  contents:
  - "3.2.1.  Integers\n   Integer attributes are represented by the INTEGER data type.\
    \  Integer\n   data MUST be encoded in Base 10 or Base 16.\n   Base 10 integer\
    \ encoding uses the digits '0' through '9' and an\n   optional sign ('+' or '-').\
    \  For example, \"123\", \"-456\".\n   Base 16 integer encoding uses the digits\
    \ '0' through '9' and 'a'\n   through 'f' (or their uppercase equivalents), and\
    \ is preceded by the\n   characters \"0x\".  For example, \"0x1a2b\".\n"
- title: 3.2.2.  Real Numbers
  contents:
  - "3.2.2.  Real Numbers\n   Real (floating-point) attributes are represented by\
    \ the REAL data\n   type.  Real data MUST be encoded in Base 10.\n   Real encoding\
    \ is that of the POSIX 1003.1 \"strtod\" library function:\n   an optional sign\
    \ ('+' or '-') followed by a non-empty string of\n   decimal digits, optionally\
    \ containing a radix character, then an\n   optional exponent part.  An exponent\
    \ part consists of an 'e' or 'E',\n   followed by an optional sign, followed by\
    \ one or more decimal digits.\n   For example, \"123.45e02\", \"-567,89e-03\"\
    .\n   IDMEF-compliant applications MUST support both the '.' and ',' radix\n \
    \  characters.\n"
- title: 3.2.3.  Characters and Strings
  contents:
  - "3.2.3.  Characters and Strings\n   Single-character attributes are represented\
    \ by the CHARACTER data\n   type.  Multi-character attributes of known length\
    \ are represented by\n   the STRING data type.\n   Character and string data have\
    \ no special formatting requirements,\n   other than the need to occasionally\
    \ use character references (see\n   Section 3.2.3.1 and Section 3.2.3.2) to represent\
    \ special characters.\n"
- title: 3.2.3.1.  Character Entity References
  contents:
  - "3.2.3.1.  Character Entity References\n   Within XML documents, certain characters\
    \ have special meanings in\n   some contexts.  To include the actual character\
    \ itself in one of\n   these contexts, a special escape sequence, called an entity\n\
    \   reference, must be used.\n   The characters that sometimes need to be escaped,\
    \ and their entity\n   references, are:\n                     +-----------+------------------+\n\
    \                     | Character | Entity Reference |\n                     +-----------+------------------+\n\
    \                     |         & | &amp;            |\n                     |\
    \           |                  |\n                     |         < | &lt;    \
    \         |\n                     |           |                  |\n         \
    \            |         > | &gt;             |\n                     |        \
    \   |                  |\n                     |         \" | &quot;         \
    \  |\n                     |           |                  |\n                \
    \     |         ' | &apos;           |\n                     +-----------+------------------+\n"
- title: 3.2.3.2.  Character Code References
  contents:
  - "3.2.3.2.  Character Code References\n   Any character defined by the ISO/IEC\
    \ 10646 and Unicode standards may\n   be included in an XML document by the use\
    \ of a character reference.\n   A character reference is started with the characters\
    \ '&' and '#', and\n   ended with the character ';'.  Between these characters,\
    \ the\n   character code for the character is inserted.\n   If the character code\
    \ is preceded by an 'x' it is interpreted in\n   hexadecimal (base 16); otherwise,\
    \ it is interpreted in decimal (base\n   10).  For instance, the ampersand (&)\
    \ is encoded as &#38; or &#x0026;\n   and the less-than sign (<) is encoded as\
    \ &#60; or &#x003C;.\n   Any one-, two-, or four-byte character specified in the\
    \ ISO/IEC 10646\n   and Unicode standards can be included in a document using\
    \ this\n   technique.\n"
- title: 3.2.4.  Bytes
  contents:
  - "3.2.4.  Bytes\n   Binary data is represented by the BYTE (and BYTE[]) data type.\n\
    \   Binary data MUST be encoded in its entirety using base64.\n"
- title: 3.2.5.  Enumerated Types
  contents:
  - "3.2.5.  Enumerated Types\n   Enumerated types are represented by the ENUM data\
    \ type, and consist\n   of an ordered list of acceptable values.\n"
- title: 3.2.6.  Date-Time Strings
  contents:
  - "3.2.6.  Date-Time Strings\n   Date-time strings are represented by the DATETIME\
    \ data type.  Each\n   date-time string identifies a particular instant in time;\
    \ ranges are\n   not supported.\n   Date-time strings are formatted according\
    \ to a subset of ISO 8601:\n   2000 [6], as show below.  Section references in\
    \ parentheses refer to\n   sections of the ISO 8601:2000 standard [6].\n   1.\
    \  Dates MUST be formatted as follows:\n          YYYY-MM-DD\n       where YYYY\
    \ is the four-digit year, MM is the two-digit month\n       (01-12), and DD is\
    \ the two-digit day (01-31).  (Section 5.2.1.1,\n       \"Complete representation\
    \ -- Extended format\".)\n   2.  Times MUST be formatted as follows:\n       \
    \   hh:mm:ss\n       where hh is the two-digit hour (00-24), mm is the two-digit\n\
    \       minute (00-59), and ss is the two-digit second (00-60).  (Section\n  \
    \     5.3.1.1, \"Complete representation -- Extended format\".)\n       Note that\
    \ midnight has two representations, 00:00:00 and\n       24:00:00.  Both representations\
    \ MUST be supported by IDMEF-\n       compliant applications; however, the 00:00:00\
    \ representation\n       SHOULD be used whenever possible.\n       Note also that\
    \ this format accounts for leap seconds.  Positive\n       leap seconds are inserted\
    \ between 23:59:59Z and 24:00:00Z and are\n       represented as 23:59:60Z.  Negative\
    \ leap seconds are achieved by\n       the omission of 23:59:59Z.  IDMEF-compliant\
    \ applications MUST\n       support leap seconds.\n   3.  Times MAY be formatted\
    \ to include a decimal fraction of seconds,\n       as follows:\n          hh:mm:ss.ss\
    \ or\n          hh:mm:ss,ss\n       As many digits as necessary may follow the\
    \ decimal sign (at least\n       one digit must follow the decimal sign).  Decimal\
    \ fractions of\n       hours and minutes are not supported.  (Section 5.3.1.3,\n\
    \       \"Representation of decimal fractions\".)\n       IDMEF-compliant applications\
    \ MUST support the use of both decimal\n       signs ('.' and ',').\n       Note\
    \ that the number of digits in the fraction part does not\n       imply anything\
    \ about accuracy -- i.e., \"00.100000\", \"00,1000\",\n       and \"00.1\" are\
    \ all equivalent.\n   4.  Times MUST be formatted to include (a) an indication\
    \ that the\n       time is in Coordinated Universal Time (UTC) or (b) an indication\n\
    \       of the difference between the specified time and Coordinated\n       Universal\
    \ Time.\n       *  Times in UTC MUST be formatted by appending the letter 'Z'\
    \ to\n          the time string as follows:\n             hh:mm:ssZ\n        \
    \     hh:mm:ss.ssZ\n             hh:mm:ss,ssZ\n          (Section 5.3.3, \"Coordinated\
    \ Universal Time (UTC) -- Extended\n          format\".)\n       *  If the time\
    \ is ahead of or equal to UTC, a '+' sign is\n          appended to the time string;\
    \ if the time is behind UTC, a '-'\n          sign is appended.  Following the\
    \ sign, the number of hours and\n          minutes representing the different\
    \ from UTC is appended, as\n          follows:\n             hh:mm:ss+hh:mm\n\
    \             hh:mm:ss-hh:mm\n             hh:mm:ss.ss+hh:mm\n             hh:mm:ss.ss-hh:mm\n\
    \             hh:mm:ss,ss+hh:mm\n             hh:mm:ss,ss-hh:mm\n          The\
    \ difference from UTC MUST be specified in both hours and\n          minutes,\
    \ even if the minutes component is 0.  A \"difference\"\n          of \"+00:00\"\
    \ is equivalent to UTC.  (Section 5.3.4.2, \"Local\n          time and the difference\
    \ with Coordinated Universal Time --\n          Extended Format\".)\n   5.  Date-time\
    \ strings are created by joining the date and time\n       strings with the letter\
    \ 'T', as shown below:\n          YYYY-MM-DDThh:mm:ssZ\n          YYYY-MM-DDThh:mm:ss.ssZ\n\
    \          YYYY-MM-DDThh:mm:ss,ssZ\n          YYYY-MM-DDThh:mm:ss+hh:mm\n    \
    \      YYYY-MM-DDThh:mm:ss-hh:mm\n          YYYY-MM-DDThh:mm:ss.ss+hh:mm\n   \
    \       YYYY-MM-DDThh:mm:ss.ss-hh:mm\n          YYYY-MM-DDThh:mm:ss,ss+hh:mm\n\
    \          YYYY-MM-DDThh:mm:ss,ss-hh:mm\n       (Section 5.4.1, \"Complete representation\
    \ -- Extended format\".)\n   In summary, IDMEF date-time strings MUST adhere to\
    \ one of the nine\n   templates identified in Paragraph 5, above.\n"
- title: 3.2.7.  NTP Timestamps
  contents:
  - "3.2.7.  NTP Timestamps\n   NTP timestamps are represented by the NTPSTAMP data\
    \ type and are\n   described in detail in [7] and [8].  An NTP timestamp is a\
    \ 64-bit\n   unsigned fixed-point number.  The integer part is in the first 32\n\
    \   bits, and the fraction part is in the last 32 bits.\n   Within IDMEF messages,\
    \ NTP timestamps MUST be encoded as two 32-bit\n   hexadecimal values, separated\
    \ by a period ('.').  For example,\n   \"0x12345678.0x87654321\".\n   See also\
    \ Section 6.4 for more information on NTP timestamps.\n"
- title: 3.2.8.  Port Lists
  contents:
  - "3.2.8.  Port Lists\n   Port lists are represented by the PORTLIST data type and\
    \ consist of a\n   comma-separated list of numbers (individual integers) and ranges\
    \ (N-M\n   means ports N through M, inclusive).  Any combination of numbers and\n\
    \   ranges may be used in a single list.  For example,\n   \"5-25,37,42,43,53,69-119,123-514\"\
    .\n"
- title: 3.2.9.  Unique Identifiers
  contents:
  - "3.2.9.  Unique Identifiers\n   There are two types of unique identifiers used\
    \ in this specification.\n   Both types are represented by STRING data types.\n\
    \   These identifiers are implemented as attributes on the relevant XML\n   elements,\
    \ and they must have unique values as follows:\n   1.  The Analyzer class' (Section\
    \ 4.2.4.1) \"analyzerid\" attribute, if\n       specified, MUST have a value that\
    \ is unique across all analyzers\n       in the intrusion detection environment.\n\
    \       The \"analyzerid\" attribute is not required to be globally unique,\n\
    \       only unique within the intrusion detection environment of which\n    \
    \   the analyzer is a member.  It is permissible for two analyzers,\n       in\
    \ different intrusion detection environments, to have the same\n       value for\
    \ \"analyzerid\".\n       The default value is \"0\", which indicates that the\
    \ analyzer\n       cannot generate unique identifiers.\n   2.  The Alert and Heartbeat\
    \ messages (Sections 4.2.2, 4.2.3) must be\n       uniquely identified by the\
    \ couple (analyzerid,messageid), if the\n       analyzer supports the generation\
    \ of message identifiers.\n   3.  The Classification, Source, Target, Node, User,\
    \ Process, Service,\n       File, Address, and UserId classes' (Sections 4.2.4.2,\
    \ 4.2.4.3,\n       4.2.4.4, 4.2.7.2, 4.2.7.3, 4.2.7.4, 4.2.7.5, 4.2.7.6, 4.2.7.2.1,\n\
    \       and 4.2.7.3.1) \"ident\" attribute, if specified, MUST have a value\n\
    \       that is unique across all messages sent by the individual\n       analyzer.\n\
    \       The \"ident\" attribute value MUST be unique for each particular\n   \
    \    combination of data identifying an object, not for each object.\n       Objects\
    \ may have more than one \"ident\" value associated with\n       them.  For example,\
    \ an identification of a host by name would\n       have one value, while an identification\
    \ of that host by address\n       would have another value, and an identification\
    \ of that host by\n       both name and address would have still another value.\n\
    \       Furthermore, different analyzers may produce different values for\n  \
    \     the same information.\n       The \"ident\" attribute by itself provides\
    \ a unique identifier only\n       among all the \"ident\" values sent by a particular\
    \ analyzer.  But\n       when combined with the \"analyzerid\" value for the analyzer,\
    \ a\n       value that is unique across the intrusion detection environment\n\
    \       is created.  Again, there is no requirement for global\n       uniqueness.\n\
    \       The default value is \"0\", which indicates that the analyzer\n      \
    \ cannot generate unique identifiers.\n   The specification of methods for creating\
    \ the unique values contained\n   in these attributes is outside the scope of\
    \ this document.\n"
- title: 4.  The IDMEF Data Model and DTD
  contents:
  - "4.  The IDMEF Data Model and DTD\n   In this section, the individual components\
    \ of the IDMEF data model\n   are explained in detail.  Unified Modeling Language\
    \ (UML) diagrams of\n   the model are provided to show how the components are\
    \ related to each\n   other, and relevant sections of the IDMEF DTD are presented\
    \ to show\n   how the model is translated into XML.\n"
- title: 4.1.  Data Model Overview
  contents:
  - "4.1.  Data Model Overview\n   The relationship between the principal components\
    \ of the data model\n   is shown in Figure 1 (occurrence indicators and attributes\
    \ are\n   omitted).\n   The top-level class for all IDMEF messages is IDMEF-Message;\
    \ each\n   type of message is a subclass of this top-level class.  There are\n\
    \   presently two types of messages defined: Alerts and Heartbeats.\n   Within\
    \ each message, subclasses of the message class are used to\n   provide the detailed\
    \ information carried in the message.\n   It is important to note that the data\
    \ model does not specify how an\n   alert should be classified or identified.\
    \  For example, a port scan\n   may be identified by one analyzer as a single\
    \ attack against multiple\n   targets, while another analyzer might identify it\
    \ as multiple attacks\n   from a single source.  However, once an analyzer has\
    \ determined the\n   type of alert it plans to send, the data model dictates how\
    \ that\n   alert should be formatted.\n                         IDMEF-Message\n\
    \                              /_\\\n                               |\n      \
    \    +--------------------+-------------+\n          |                       \
    \           |\n      +-------+   +--------------+    +-----------+   +----------------+\n\
    \      | Alert |<>-|   Analyzer   |    | Heartbeat |<>-|    Analyzer    |\n  \
    \    +-------+   +--------------+    +-----------+   +----------------+\n    \
    \  |       |   +--------------+    |           |   +----------------+\n      |\
    \       |<>-|  CreateTime  |    |           |<>-|   CreateTime   |\n      |  \
    \     |   +--------------+    |           |   +----------------+\n      |    \
    \   |   +--------------+    |           |   +----------------+\n      |      \
    \ |<>-|  DetectTime  |    |           |<>-| AdditionalData |\n      |       |\
    \   +--------------+    +-----------+   +----------------+\n      |       |  \
    \ +--------------+\n      |       |<>-| AnalyzerTime |\n      |       |   +--------------+\n\
    \      |       |   +--------+   +----------+\n      |       |<>-| Source |<>-|\
    \   Node   |\n      |       |   +--------+   +----------+\n      |       |   |\
    \        |   +----------+\n      |       |   |        |<>-|   User   |\n     \
    \ |       |   |        |   +----------+\n      |       |   |        |   +----------+\n\
    \      |       |   |        |<>-| Process  |\n      |       |   |        |   +----------+\n\
    \      |       |   |        |   +----------+\n      |       |   |        |<>-|\
    \ Service  |\n      |       |   +--------+   +----------+\n      |       |   +--------+\
    \   +----------+\n      |       |<>-| Target |<>-|   Node   |\n      |       |\
    \   +--------+   +----------+\n      |       |   |        |   +----------+\n \
    \     |       |   |        |<>-|   User   |\n      |       |   |        |   +----------+\n\
    \      |       |   |        |   +----------+\n      |       |   |        |<>-|\
    \ Process  |\n      |       |   |        |   +----------+\n      |       |   |\
    \        |   +----------+\n      |       |   |        |<>-| Service  |       +----------------+\n\
    \      |       |   |        |   +----------+  +----| Classification |\n      |\
    \       |   |        |   +----------+  |    +----------------+\n      |      \
    \ |   |        |<>-|   File   |  |    +----------------+\n      |       |   +--------+\
    \   +----------+  | +--|   Assessment   |\n      |       |<>----------------------------+\
    \ |  +----------------+\n      |       |<>------------------------------+  +----------------+\n\
    \      |       |<>---------------------------------| AdditionalData |\n      +-------+\
    \                                   +----------------+\n                     \
    \  Figure 1: Data Model Overview\n"
- title: 4.2.  The Message Classes
  contents:
  - "4.2.  The Message Classes\n   The individual classes are described in the following\
    \ sections.\n"
- title: 4.2.1.  The IDMEF-Message Class
  contents:
  - "4.2.1.  The IDMEF-Message Class\n   All IDMEF messages are instances of the IDMEF-Message\
    \ class; it is\n   the top-level class of the IDMEF data model, as well as the\
    \ IDMEF\n   DTD.  There are currently two types (subclasses) of IDMEF-Message:\n\
    \   Alert and Heartbeat.\n   The IDMEF-Message class has a single attribute:\n\
    \   version\n      The version of the IDMEF-Message specification (this document)\n\
    \      this message conforms to.  Applications specifying a value for\n      this\
    \ attribute MUST specify the value \"1.0\".\n"
- title: 4.2.2.  The Alert Class
  contents:
  - "4.2.2.  The Alert Class\n   Generally, every time an analyzer detects an event\
    \ that it has been\n   configured to look for, it sends an Alert message to its\
    \ manager(s).\n   Depending on the analyzer, an Alert message may correspond to\
    \ a\n   single detected event or multiple detected events.  Alerts occur\n   asynchronously\
    \ in response to outside events.\n   An Alert message is composed of several aggregate\
    \ classes, as shown\n   in Figure 2.  The aggregate classes themselves are described\
    \ in\n   Section 4.2.4, Section 4.2.5, and Section 4.2.6.\n              +-------------------+\n\
    \              |    Alert          |\n              +-------------------+    \
    \        +------------------+\n              | STRING messageid  |<>----------|\
    \     Analyzer     |\n              |                   |            +------------------+\n\
    \              |                   |            +------------------+\n       \
    \       |                   |<>----------|    CreateTime    |\n              |\
    \                   |            +------------------+\n              |       \
    \            |            +------------------+\n              |              \
    \     |<>----------|  Classification  |\n              |                   | \
    \           +------------------+\n              |                   |       0..1\
    \ +------------------+\n              |                   |<>----------|    DetectTime\
    \    |\n              |                   |            +------------------+\n\
    \              |                   |       0..1 +------------------+\n       \
    \       |                   |<>----------|   AnalyzerTime   |\n              |\
    \                   |            +------------------+\n              |       \
    \            |       0..* +------------------+\n              |              \
    \     |<>----------|      Source      |\n              |                   | \
    \           +------------------+\n              |                   |       0..*\
    \ +------------------+\n              |                   |<>----------|     \
    \ Target      |\n              |                   |            +------------------+\n\
    \              |                   |       0..1 +------------------+\n       \
    \       |                   |<>----------|    Assessment    |\n              |\
    \                   |            +------------------+\n              |       \
    \            |       0..* +------------------+\n              |              \
    \     |<>----------|  AdditionalData  |\n              |                   | \
    \           +------------------+\n              +-------------------+\n      \
    \               /_\\\n                      |\n                      +----+------------+-------------+\n\
    \                           |            |             |\n                +-------------------+\
    \   |   +-------------------+\n                |     ToolAlert     |   |   | \
    \ CorrelationAlert |\n                +-------------------+   |   +-------------------+\n\
    \                                        |\n                              +-------------------+\n\
    \                              |   OverflowAlert   |\n                       \
    \       +-------------------+\n                         Figure 2: The Alert Class\n\
    \   The aggregate classes that make up Alert are:\n   Analyzer\n      Exactly\
    \ one.  Identification information for the analyzer that\n      originated the\
    \ alert.\n   CreateTime\n      Exactly one.  The time the alert was created. \
    \ Of the three times\n      that may be provided with an Alert, this is the only\
    \ one that is\n      required.\n   Classification\n      Exactly one.  The \"\
    name\" of the alert, or other information\n      allowing the manager to determine\
    \ what it is.\n   DetectTime\n      Zero or one.  The time the event(s) leading\
    \ up to the alert was\n      detected.  In the case of more than one event, the\
    \ time the first\n      event was detected.  In some circumstances, this may not\
    \ be the\n      same value as CreateTime.\n   AnalyzerTime\n      Zero or one.\
    \  The current time on the analyzer (see Section 6.3).\n   Source\n      Zero\
    \ or more.  The source(s) of the event(s) leading up to the\n      alert.\n  \
    \ Target\n      Zero or more.  The target(s) of the event(s) leading up to the\n\
    \      alert.\n   Assessment\n      Zero or one.  Information about the impact\
    \ of the event, actions\n      taken by the analyzer in response to it, and the\
    \ analyzer's\n      confidence in its evaluation.\n   AdditionalData\n      Zero\
    \ or more.  Information included by the analyzer that does not\n      fit into\
    \ the data model.  This may be an atomic piece of data, or\n      a large amount\
    \ of data provided through an extension to the IDMEF\n      (see Section 5).\n\
    \   Alert is represented in the IDMEF DTD as follows:\n   <!ELEMENT Alert    \
    \                     (\n       Analyzer, CreateTime, DetectTime?, AnalyzerTime?,\n\
    \       Source*, Target*, Classification, Assessment?, (ToolAlert |\n       OverflowAlert\
    \ | CorrelationAlert)?, AdditionalData*\n     )>\n   <!ATTLIST Alert\n       messageid\
    \           CDATA                   '0'\n       %attlist.global;\n     >\n   The\
    \ Alert class has one attribute:\n   messageid\n      Optional.  A unique identifier\
    \ for the alert; see Section 3.2.9.\n"
- title: 4.2.2.1.  The ToolAlert Class
  contents:
  - "4.2.2.1.  The ToolAlert Class\n   The ToolAlert class carries additional information\
    \ related to the use\n   of attack tools or malevolent programs such as Trojan\
    \ horses and can\n   be used by the analyzer when it is able to identify these\
    \ tools.  It\n   is intended to group one or more previously-sent alerts together,\
    \ to\n   say \"these alerts were all the result of someone using this tool\".\n\
    \   The ToolAlert class is composed of three aggregate classes, as shown\n   in\
    \ Figure 3.\n             +------------------+\n             |      Alert    \
    \   |\n             +------------------+\n                     /_\\\n        \
    \              |\n             +------------------+\n             |    ToolAlert\
    \     |\n             +------------------+            +-------------------+\n\
    \             |                  |<>----------|        name       |\n        \
    \     |                  |            +-------------------+\n             |  \
    \                |       0..1 +-------------------+\n             |          \
    \        |<>----------|      command      |\n             |                  |\
    \            +-------------------+\n             |                  |       1..*\
    \ +-------------------+\n             |                  |<>----------|    alertident\
    \     |\n             |                  |            +-------------------+\n\
    \             |                  |            | STRING analyzerid |\n        \
    \     |                  |            +-------------------+\n             +------------------+\n\
    \                       Figure 3: The ToolAlert Class\n   The aggregate classes\
    \ that make up ToolAlert are:\n   name\n      Exactly one.  STRING.  The reason\
    \ for grouping the alerts\n      together, for example, the name of a particular\
    \ tool.\n   command\n      Zero or one.  STRING.  The command or operation that\
    \ the tool was\n      asked to perform, for example, a BackOrifice ping.\n   alertident\n\
    \      One or more.  STRING.  The list of alert identifiers that are\n      related\
    \ to this alert.  Because alert identifiers are only unique\n      across the\
    \ alerts sent by a single analyzer, the optional\n      \"analyzerid\" attribute\
    \ of \"alertident\" should be used to identify\n      the analyzer that a particular\
    \ alert came from.  If the\n      \"analyzerid\" is not provided, the alert is\
    \ assumed to have come\n      from the same analyzer that is sending the ToolAlert.\n\
    \   This is represented in the IDMEF DTD as follows:\n   <!ELEMENT ToolAlert \
    \                    (\n       name, command?, alertident+\n     )>\n   <!ATTLIST\
    \ ToolAlert\n       %attlist.global;\n     >\n"
- title: 4.2.2.2.  The CorrelationAlert Class
  contents:
  - "4.2.2.2.  The CorrelationAlert Class\n   The CorrelationAlert class carries additional\
    \ information related to\n   the correlation of alert information.  It is intended\
    \ to group one or\n   more previously-sent alerts together, to say \"these alerts\
    \ are all\n   related\".\n   The CorrelationAlert class is composed of two aggregate\
    \ classes, as\n   shown in Figure 4.\n             +------------------+\n    \
    \         |      Alert       |\n             +------------------+\n          \
    \           /_\\\n                      |\n             +------------------+\n\
    \             | CorrelationAlert |\n             +------------------+        \
    \    +-------------------+\n             |                  |<>----------|   \
    \     name       |\n             |                  |            +-------------------+\n\
    \             |                  |       1..* +-------------------+\n        \
    \     |                  |<>----------|    alertident     |\n             |  \
    \                |            +-------------------+\n             |          \
    \        |            | STRING analyzerid |\n             |                  |\
    \            +-------------------+\n             +------------------+\n      \
    \             Figure 4: The CorrelationAlert Class\n   The aggregate classes that\
    \ make up CorrelationAlert are:\n   name\n      Exactly one.  STRING.  The reason\
    \ for grouping the alerts\n      together, for example, a particular correlation\
    \ method.\n   alertident\n      One or more.  STRING.  The list of alert identifiers\
    \ that are\n      related to this alert.  Because alert identifiers are only unique\n\
    \      across the alerts sent by a single analyzer, the optional\n      \"analyzerid\"\
    \ attribute of \"alertident\" should be used to identify\n      the analyzer that\
    \ a particular alert came from.  If the\n      \"analyzerid\" is not provided,\
    \ the alert is assumed to have come\n      from the same analyzer that is sending\
    \ the CorrelationAlert.\n   This is represented in the IDMEF DTD as follows.\n\
    \   <!ELEMENT CorrelationAlert              (\n       name, alertident+\n    \
    \ )>\n   <!ATTLIST CorrelationAlert\n       %attlist.global;\n     >\n"
- title: 4.2.2.3.  The OverflowAlert Class
  contents:
  - "4.2.2.3.  The OverflowAlert Class\n   The OverflowAlert carries additional information\
    \ related to buffer\n   overflow attacks.  It is intended to enable an analyzer\
    \ to provide\n   the details of the overflow attack itself.\n   The OverflowAlert\
    \ class is composed of three aggregate classes, as\n   shown in Figure 5.\n  \
    \                +------------------+\n                  |      Alert       |\n\
    \                  +------------------+\n                          /_\\\n    \
    \                       |\n                  +------------------+\n          \
    \        |  OverflowAlert   |\n                  +------------------+        \
    \    +---------+\n                  |                  |<>----------| program\
    \ |\n                  |                  |            +---------+\n         \
    \         |                  |       0..1 +---------+\n                  |   \
    \               |<>----------| size    |\n                  |                \
    \  |            +---------+\n                  |                  |       0..1\
    \ +---------+\n                  |                  |<>----------| buffer  |\n\
    \                  |                  |            +---------+\n             \
    \     +------------------+\n                     Figure 5: The OverflowAlert Class\n\
    \   The aggregate classes that make up OverflowAlert are:\n   program\n      Exactly\
    \ one.  STRING.  The program that the overflow attack\n      attempted to run\
    \ (NOTE: this is not the program that was\n      attacked).\n   size\n      Zero\
    \ or one.  INTEGER.  The size, in bytes, of the overflow (i.e.,\n      the number\
    \ of bytes the attacker sent).\n   buffer\n      Zero or one.  BYTE[].  Some or\
    \ all of the overflow data itself\n      (dependent on how much the analyzer can\
    \ capture).\n   This is represented in the IDMEF DTD as follows:\n   <!ELEMENT\
    \ OverflowAlert                 (\n       program, size?, buffer?\n     )>\n \
    \  <!ATTLIST OverflowAlert\n       %attlist.global;\n     >\n"
- title: 4.2.3.  The Heartbeat Class
  contents:
  - "4.2.3.  The Heartbeat Class\n   Analyzers use Heartbeat messages to indicate\
    \ their current status to\n   managers.  Heartbeats are intended to be sent in\
    \ a regular period,\n   say, every ten minutes or every hour.  The receipt of\
    \ a Heartbeat\n   message from an analyzer indicates to the manager that the analyzer\n\
    \   is up and running; lack of a Heartbeat message (or more likely, lack\n   of\
    \ some number of consecutive Heartbeat messages) indicates that the\n   analyzer\
    \ or its network connection has failed.\n   All managers MUST support the receipt\
    \ of Heartbeat messages; however,\n   the use of these messages by analyzers is\
    \ OPTIONAL.  Developers of\n   manager software SHOULD permit the software to\
    \ be configured on a\n   per-analyzer basis to use/not use Heartbeat messages.\n\
    \   A Heartbeat message is composed of several aggregate classes, as\n   shown\
    \ in Figure 6.  The aggregate classes themselves are described in\n   Sections\
    \ 4.2.4 and 4.2.5.\n               +------------------+\n               |    Heartbeat\
    \     |\n               +------------------+            +------------------+\n\
    \               | STRING messageid |<>----------|     Analyzer     |\n       \
    \        |                  |            +------------------+\n              \
    \ |                  |            +------------------+\n               |     \
    \             |<>----------|    CreateTime    |\n               |            \
    \      |            +------------------+\n               |                  |\
    \       0..1 +------------------+\n               |                  |<>----------|\
    \ HeartbeatInterval|\n               |                  |            +------------------+\n\
    \               |                  |       0..1 +------------------+\n       \
    \        |                  |<>----------|   AnalyzerTime   |\n              \
    \ |                  |            +------------------+\n               |     \
    \             |       0..* +------------------+\n               |            \
    \      |<>----------|  AdditionalData  |\n               |                  |\
    \            +------------------+\n               +------------------+\n     \
    \                  Figure 6: The Heartbeat Class\n   The aggregate classes that\
    \ make up Heartbeat are:\n   Analyzer\n      Exactly one.  Identification information\
    \ for the analyzer that\n      originated the heartbeat.\n   CreateTime\n    \
    \  Exactly one.  The time the heartbeat was created.\n   HeartbeatInterval\n \
    \     Zero or one.  The interval in seconds at which heartbeats are\n      generated.\n\
    \   AnalyzerTime\n      Zero or one.  The current time on the analyzer (see Section\
    \ 6.3).\n   AdditionalData\n      Zero or more.  Information included by the analyzer\
    \ that does not\n      fit into the data model.  This may be an atomic piece of\
    \ data or a\n      large amount of data provided through an extension to the IDMEF\n\
    \      (see Section 5).\n   This is represented in the IDMEF DTD as follows:\n\
    \   <!ELEMENT Heartbeat                     (\n       Analyzer, CreateTime, HeartbeatInterval?,\
    \ AnalyzerTime?,\n       AdditionalData*\n     )>\n   <!ATTLIST Heartbeat\n  \
    \     messageid           CDATA                   '0'\n       %attlist.global;\n\
    \     >\n   The Heartbeat class has one attribute:\n   messageid\n      Optional.\
    \  A unique identifier for the heartbeat; see\n      Section 3.2.9.\n"
- title: 4.2.4.  The Core Classes
  contents:
  - "4.2.4.  The Core Classes\n   The core classes -- Analyzer, Source, Target, Classification,\
    \ and\n   AdditionalData -- are the main parts of Alerts and Heartbeats, as\n\
    \   shown in Figure 7.\n                +-----------+                +----------------+\n\
    \                | Heartbeat |        +-------|    Analyzer    |\n           \
    \     +-----------+        |       +----------------+\n                |     \
    \      |<>---+--+\n                +-----------+     |  |  0..* +----------------+\n\
    \                                  |  +-------| AdditionalData |\n           \
    \                       |          +----------------+\n                +-----------+\
    \     |\n                |   Alert   |     |     0..* +----------------+\n   \
    \             +-----------+     |  +-------|     Source     |\n              \
    \  |           |<>---+  |       +----------------+\n                |        \
    \   |        |  0..* +----------------+\n                |           |       \
    \ +-------|     Target     |\n                |           |        |       +----------------+\n\
    \                |           |<>------+\n                +-----------+       \
    \ |       +----------------+\n                                     +-------| Classification\
    \ |\n                                             +----------------+\n       \
    \                 Figure 7: The Core Classes\n"
- title: 4.2.4.1.  The Analyzer Class
  contents:
  - "4.2.4.1.  The Analyzer Class\n   The Analyzer class identifies the analyzer from\
    \ which the Alert or\n   Heartbeat message originates.  Only one analyzer may\
    \ be encoded for\n   each alert or heartbeat, and that MUST be the analyzer at\
    \ which the\n   alert or heartbeat originated.  Although the IDMEF data model\
    \ does\n   not prevent the use of hierarchical intrusion detection systems\n \
    \  (where alerts get relayed up the tree), it does not provide any way\n   to\
    \ record the identity of the \"relay\" analyzers along the path from\n   the originating\
    \ analyzer to the manager that ultimately receives the\n   alert.\n   The Analyzer\
    \ class is composed of three aggregate classes, as shown\n   in Figure 8.\n  \
    \              +---------------------+\n                |      Analyzer      \
    \ |\n                +---------------------+       0..1 +----------+\n       \
    \         | STRING analyzerid   |<>----------|  Node    |\n                | STRING\
    \ name         |            +----------+\n                | STRING manufacturer\
    \ |\n                | STRING model        |       0..1 +----------+\n       \
    \         | STRING version      |<>----------| Process  |\n                | STRING\
    \ class        |            +----------+\n                | STRING ostype    \
    \   |       0..1 +----------+\n                | STRING osversion    |<>----------|\
    \ Analyzer |\n                +---------------------+            +----------+\n\
    \                       Figure 8: The Analyzer Class\n   The aggregate classes\
    \ that make up Analyzer are:\n   Node\n      Zero or one.  Information about the\
    \ host or device on which the\n      analyzer resides (network address, network\
    \ name, etc.).\n   Process\n      Zero or one.  Information about the process\
    \ in which the analyzer\n      is executing.\n   Analyzer\n      Zero or one.\
    \  Information about the analyzer from which the\n      message may have gone\
    \ through.  The idea behind this mechanism is\n      that when a manager receives\
    \ an alert and wants to forward it to\n      another analyzer, it needs to substitute\
    \ the original analyzer\n      information with its own.  To preserve the original\
    \ analyzer\n      information, it may be included in the new analyzer definition.\n\
    \      This will allow analyzer path tracking.\n   This is represented in the\
    \ IDMEF DTD as follows:\n   <!ELEMENT Analyzer                      (\n      \
    \ Node?, Process?, Analyzer?\n     )>\n   <!ATTLIST Analyzer\n       analyzerid\
    \          CDATA                   '0'\n       name                CDATA     \
    \              #IMPLIED\n       manufacturer        CDATA                   #IMPLIED\n\
    \       model               CDATA                   #IMPLIED\n       version \
    \            CDATA                   #IMPLIED\n       class               CDATA\
    \                   #IMPLIED\n       ostype              CDATA               \
    \    #IMPLIED\n       osversion           CDATA                   #IMPLIED\n \
    \      %attlist.global;\n     >\n   The Analyzer class has eight attributes:\n\
    \   analyzerid\n      Optional (but see below).  A unique identifier for the analyzer;\n\
    \      see Section 3.2.9.\n      This attribute is only \"partially\" optional.\
    \  If the analyzer\n      makes use of the \"ident\" attributes on other classes\
    \ to provide\n      unique identifiers for those objects, then it MUST also provide\
    \ a\n      valid \"analyzerid\" attribute.  This requirement is dictated by the\n\
    \      uniqueness requirements of the \"ident\" attribute (they are unique\n \
    \     only within the context of a particular \"analyzerid\").  If the\n     \
    \ analyzer does not make use of the \"ident\" attributes, however, it\n      may\
    \ also omit the \"analyzerid\" attribute.\n   name\n      Optional.  An explicit\
    \ name for the analyzer that may be easier to\n      understand than the analyzerid.\n\
    \   manufacturer\n      Optional.  The manufacturer of the analyzer software and/or\n\
    \      hardware.\n   model\n      Optional.  The model name/number of the analyzer\
    \ software and/or\n      hardware.\n   version\n      Optional.  The version number\
    \ of the analyzer software and/or\n      hardware.\n   class\n      Optional.\
    \  The class of analyzer software and/or hardware.\n   ostype\n      Optional.\
    \  Operating system name.  On POSIX 1003.1 compliant\n      systems, this is the\
    \ value returned in utsname.sysname by the\n      uname() system call, or the\
    \ output of the \"uname -s\" command.\n   osversion\n      Optional.  Operating\
    \ system version.  On POSIX 1003.1 compliant\n      systems, this is the value\
    \ returned in utsname.release by the\n      uname() system call, or the output\
    \ of the \"uname -r\" command.\n   The \"manufacturer\", \"model\", \"version\"\
    , and \"class\" attributes'\n   contents are vendor-specific, but may be used\
    \ together to identify\n   different types of analyzers (and perhaps make determinations\
    \ about\n   the contents to expect in other vendor-specific fields of IDMEF\n\
    \   messages).\n"
- title: 4.2.4.2.  The Classification Class
  contents:
  - "4.2.4.2.  The Classification Class\n   The Classification class provides the\
    \ \"name\" of an alert, or other\n   information allowing the manager to determine\
    \ what it is.  This name\n   is chosen by the alert provider.\n   The Classification\
    \ class is composed of one aggregate class, as shown\n   in Figure 9.\n      \
    \              +----------------+\n                    | Classification |\n  \
    \                  +----------------+       0..* +-----------+\n             \
    \       | STRING ident   |<>----------| Reference |\n                    | STRING\
    \ text    |            +-----------+\n                    +----------------+\n\
    \                    Figure 9: The Classification Class\n   The aggregate class\
    \ that makes up Classification is:\n   Reference\n      Zero or more.  Information\
    \ about the message, pointing to external\n      documentation sites, that will\
    \ provide background information\n      about the alert.\n   This is represented\
    \ in the IDMEF DTD as follows:\n   <!ELEMENT Classification                (\n\
    \       Reference*\n     )>\n   <!ATTLIST Classification\n       ident       \
    \        CDATA                   '0'\n       text                CDATA       \
    \            #REQUIRED\n     >\n   The Classification class has two attributes:\n\
    \   ident\n      Optional.  A unique identifier for this classification; see\n\
    \      Section 3.2.9.\n   text\n      Required.  A vendor-provided string identifying\
    \ the Alert message.\n"
- title: 4.2.4.3.  The Source Class
  contents:
  - "4.2.4.3.  The Source Class\n   The Source class contains information about the\
    \ possible source(s) of\n   the event(s) that generated an alert.  An event may\
    \ have more than\n   one source (e.g., in a distributed denial-of-service attack).\n\
    \   The Source class is composed of four aggregate classes, as shown in\n   Figure\
    \ 10.\n                  +------------------+\n                  |      Source\
    \      |\n                  +------------------+       0..1 +---------+\n    \
    \              | STRING ident     |<>----------|  Node   |\n                 \
    \ | ENUM spoofed     |            +---------+\n                  | STRING interface\
    \ |       0..1 +---------+\n                  |                  |<>----------|\
    \  User   |\n                  |                  |            +---------+\n \
    \                 |                  |       0..1 +---------+\n              \
    \    |                  |<>----------| Process |\n                  |        \
    \          |            +---------+\n                  |                  |  \
    \     0..1 +---------+\n                  |                  |<>----------| Service\
    \ |\n                  |                  |            +---------+\n         \
    \         +------------------+\n                        Figure 10: The Source\
    \ Class\n   The aggregate classes that make up Source are:\n   Node\n      Zero\
    \ or one.  Information about the host or device that appears to\n      be causing\
    \ the events (network address, network name, etc.).\n   User\n      Zero or one.\
    \  Information about the user that appears to be\n      causing the event(s).\n\
    \   Process\n      Zero or one.  Information about the process that appears to\
    \ be\n      causing the event(s).\n   Service\n      Zero or one.  Information\
    \ about the network service involved in\n      the event(s).\n   This is represented\
    \ in the IDMEF DTD as follows:\n   <!ELEMENT Source                        (\n\
    \       Node?, User?, Process?, Service?\n     )>\n   <!ATTLIST Source\n     \
    \  ident               CDATA                   '0'\n       spoofed           \
    \  %attvals.yesno;         'unknown'\n       interface           CDATA       \
    \            #IMPLIED\n       %attlist.global;\n     >\n   The Source class has\
    \ three attributes:\n   ident\n      Optional.  A unique identifier for this source;\
    \ see Section 3.2.9.\n   spoofed\n      Optional.  An indication of whether the\
    \ source is, as far as the\n      analyzer can determine, a spoofed address used\
    \ for hiding the real\n      origin of the attack.  The permitted values for this\
    \ attribute are\n      shown below.  The default value is \"unknown\".  (See also\n\
    \      Section 10.)\n        +------+---------+----------------------------------------+\n\
    \        | Rank | Keyword | Description                            |\n       \
    \ +------+---------+----------------------------------------+\n        |    0\
    \ | unknown | Accuracy of source information unknown |\n        |      |     \
    \    |                                        |\n        |    1 | yes     | Source\
    \ is believed to be a decoy       |\n        |      |         |              \
    \                          |\n        |    2 | no      | Source is believed to\
    \ be \"real\"        |\n        +------+---------+----------------------------------------+\n\
    \   interface\n      Optional.  May be used by a network-based analyzer with multiple\n\
    \      interfaces to indicate which interface this source was seen on.\n"
- title: 4.2.4.4.  The Target Class
  contents:
  - "4.2.4.4.  The Target Class\n   The Target class contains information about the\
    \ possible target(s) of\n   the event(s) that generated an alert.  An event may\
    \ have more than\n   one target (e.g., in the case of a port sweep).\n   The Target\
    \ class is composed of four aggregate classes, as shown in\n   Figure 11.\n  \
    \                +------------------+\n                  |      Target      |\n\
    \                  +------------------+       0..1 +----------+\n            \
    \      | STRING ident     |<>----------|   Node   |\n                  | ENUM\
    \ decoy       |            +----------+\n                  | STRING interface\
    \ |       0..1 +----------+\n                  |                  |<>----------|\
    \   User   |\n                  |                  |            +----------+\n\
    \                  |                  |       0..1 +----------+\n            \
    \      |                  |<>----------| Process  |\n                  |     \
    \             |            +----------+\n                  |                 \
    \ |       0..1 +----------+\n                  |                  |<>----------|\
    \ Service  |\n                  |                  |            +----------+\n\
    \                  |                  |       0..n +----------+\n            \
    \      |                  |<>----------|   File   |\n                  |     \
    \             |            +----------+\n                  +------------------+\n\
    \                        Figure 11: The Target Class\n   The aggregate classes\
    \ that make up Target are:\n   Node\n      Zero or one.  Information about the\
    \ host or device at which the\n      event(s) (network address, network name,\
    \ etc.) is being directed.\n   User\n      Zero or one.  Information about the\
    \ user at which the event(s) is\n      being directed.\n   Process\n      Zero\
    \ or one.  Information about the process at which the event(s)\n      is being\
    \ directed.\n   Service\n      Zero or one.  Information about the network service\
    \ involved in\n      the event(s).\n   File\n      Optional.  Information about\
    \ file(s) involved in the event(s).\n   This is represented in the IDMEF DTD as\
    \ follows:\n   <!ELEMENT Target                        (\n       Node?, User?,\
    \ Process?, Service?, File*\n     )>\n   <!ATTLIST Target\n       ident      \
    \         CDATA                   '0'\n       decoy               %attvals.yesno;\
    \         'unknown'\n       interface           CDATA                   #IMPLIED\n\
    \       %attlist.global;\n     >\n   The Target class has three attributes:\n\
    \   ident\n      Optional.  A unique identifier for this target, see Section 3.2.9.\n\
    \   decoy\n      Optional.  An indication of whether the target is, as far as\
    \ the\n      analyzer can determine, a decoy.  The permitted values for this\n\
    \      attribute are shown below.  The default value is \"unknown\".  (See\n \
    \     also Section 10.)\n        +------+---------+----------------------------------------+\n\
    \        | Rank | Keyword | Description                            |\n       \
    \ +------+---------+----------------------------------------+\n        |    0\
    \ | unknown | Accuracy of target information unknown |\n        |      |     \
    \    |                                        |\n        |    1 | yes     | Target\
    \ is believed to be a decoy       |\n        |      |         |              \
    \                          |\n        |    2 | no      | Target is believed to\
    \ be \"real\"        |\n        +------+---------+----------------------------------------+\n\
    \   interface\n      Optional.  May be used by a network-based analyzer with multiple\n\
    \      interfaces to indicate which interface this target was seen on.\n"
- title: 4.2.4.5.  The Assessment Class
  contents:
  - "4.2.4.5.  The Assessment Class\n   The Assessment class is used to provide the\
    \ analyzer's assessment of\n   an event -- its impact, actions taken in response,\
    \ and confidence.\n   The Assessment class is composed of three aggregate classes,\
    \ as shown\n   in Figure 12.\n                  +------------------+\n       \
    \           |   Assessment     |\n                  +------------------+     \
    \  0..1 +------------+\n                  |                  |<>----------|  \
    \ Impact   |\n                  |                  |            +------------+\n\
    \                  |                  |       0..* +------------+\n          \
    \        |                  |<>----------|   Action   |\n                  | \
    \                 |            +------------+\n                  |           \
    \       |       0..1 +------------+\n                  |                  |<>----------|\
    \ Confidence |\n                  |                  |            +------------+\n\
    \                  +------------------+\n                      Figure 12: The\
    \ Assessment Class\n   The aggregate classes that make up Assessment are:\n  \
    \ Impact\n      Zero or one.  The analyzer's assessment of the impact of the event\n\
    \      on the target(s).\n   Action\n      Zero or more.  The action(s) taken\
    \ by the analyzer in response to\n      the event.\n   Confidence\n      Zero\
    \ or one.  A measurement of the confidence the analyzer has in\n      its evaluation\
    \ of the event.\n   This is represented in the IDMEF DTD as follows:\n   <!ELEMENT\
    \ Assessment                    (\n       Impact?, Action*, Confidence?\n    \
    \ )>\n   <!ATTLIST Assessment\n       %attlist.global;\n     >\n"
- title: 4.2.4.6.  The AdditionalData Class
  contents:
  - "4.2.4.6.  The AdditionalData Class\n   The AdditionalData class is used to provide\
    \ information that cannot\n   be represented by the data model.  AdditionalData\
    \ can be used to\n   provide atomic data (integers, strings, etc.) in cases where\
    \ only\n   small amounts of additional information need to be sent; it can also\n\
    \   be used to extend the data model and the DTD to support the\n   transmission\
    \ of complex data (such as packet headers).  Detailed\n   instructions for extending\
    \ the data model and the DTD are provided in\n   Section 5.\n   +------+-------------+----------------------------------------------+\n\
    \   | Rank | Keyword     | Description                                  |\n  \
    \ +------+-------------+----------------------------------------------+\n   |\
    \    0 | boolean     | The element contains a boolean value, i.e.,  |\n   |  \
    \    |             | the strings \"true\" or \"false\"                |\n   |\
    \      |             |                                              |\n   |  \
    \  1 | byte        | The element content is a single 8-bit byte   |\n   |    \
    \  |             | (see Section 3.2.4)                          |\n   |      |\
    \             |                                              |\n   |    2 | character\
    \   | The element content is a single character    |\n   |      |            \
    \ | (see Section 3.2.3)                          |\n   |      |             |\
    \                                              |\n   |    3 | date-time   | The\
    \ element content is a date-time string    |\n   |      |             | (see Section\
    \ 3.2.6)                          |\n   |      |             |               \
    \                               |\n   |    4 | integer     | The element content\
    \ is an integer (see       |\n   |      |             | Section 3.2.1)       \
    \                        |\n   |      |             |                        \
    \                      |\n   |    5 | ntpstamp    | The element content is an\
    \ NTP timestamp (see |\n   |      |             | Section 3.2.7)             \
    \                  |\n   |      |             |                              \
    \                |\n   |    6 | portlist    | The element content is a list of\
    \ ports (see  |\n   |      |             | Section 3.2.8)                    \
    \           |\n   |      |             |                                     \
    \         |\n   |    7 | real        | The element content is a real number (see\
    \    |\n   |      |             | Section 3.2.2)                             \
    \  |\n   |      |             |                                              |\n\
    \   |    8 | string      | The element content is a string (see         |\n  \
    \ |      |             | Section 3.2.3)                               |\n   |\
    \      |             |                                              |\n   |  \
    \  9 | byte-string | The element is a byte[] (see Section 3.2.4)  |\n   |    \
    \  |             |                                              |\n   |   10 |\
    \ xmltext     | The element content is XML-tagged data (see  |\n   |      |  \
    \           | Section 5.2)                                 |\n   +------+-------------+----------------------------------------------+\n\
    \   The AdditionalData element is declared in the IDMEF DTD as follows:\n   <!ENTITY\
    \ % attvals.adtype               \"\n       ( boolean | byte | character | date-time\
    \ | integer | ntpstamp |\n         portlist | real | string | byte-string | xmltext\
    \ )\n     \">\n   <!ELEMENT AdditionalData           (\n     (boolean | byte \
    \       | character | date-time |\n      integer | ntpstamp    | portlist  | real\
    \      |\n      string  | byte-string | xmltext  )\n    )>\n   <!ATTLIST AdditionalData\n\
    \       type                %attvals.adtype;        'string'\n       meaning \
    \            CDATA                   #IMPLIED\n       %attlist.global;\n     >\n\
    \   The AdditionalData class has one attribute:\n   meaning\n      Optional. \
    \ A string describing the meaning of the element content.\n      These values\
    \ will be vendor/implementation dependent; the method\n      for ensuring that\
    \ managers understand the strings sent by\n      analyzers is outside the scope\
    \ of this specification.  A list of\n      acceptable meaning keywords is not\
    \ within the scope of the\n      document, although later versions may undertake\
    \ to establish such\n      a list.\n"
- title: 4.2.5.  The Time Classes
  contents:
  - "4.2.5.  The Time Classes\n   The data model provides three classes for representing\
    \ time.  These\n   classes are elements of the Alert and Heartbeat classes.\n\
    \   The time classes are represented in the IDMEF DTD as follows:\n   <!ELEMENT\
    \ ntpstamp          (#PCDATA)         >\n   <!ATTLIST ntpstamp          %attlist.global;\
    \  >\n   <!ELEMENT CreateTime          (#PCDATA) >\n   <!ATTLIST CreateTime\n\
    \       ntpstamp            CDATA                   #REQUIRED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT DetectTime          (#PCDATA) >\n   <!ATTLIST DetectTime\n\
    \       ntpstamp            CDATA                   #REQUIRED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT AnalyzerTime        (#PCDATA) >\n   <!ATTLIST AnalyzerTime\n\
    \       ntpstamp            CDATA                   #REQUIRED\n       %attlist.global;\n\
    \     >\n   The DATETIME format of the <CreateTime> element content is described\n\
    \   in Section 3.2.6.\n   If the date and time represented by the element content\
    \ and the NTP\n   timestamp differ (should \"never\" happen), the value in the\
    \ NTP\n   timestamp MUST be used.\n"
- title: 4.2.5.1.  The CreateTime Class
  contents:
  - "4.2.5.1.  The CreateTime Class\n   The CreateTime class is used to indicate the\
    \ date and time the alert\n   or heartbeat was created by the analyzer.\n"
- title: 4.2.5.2.  The DetectTime Class
  contents:
  - "4.2.5.2.  The DetectTime Class\n   The DetectTime class is used to indicate the\
    \ date and time that the\n   event(s) producing an alert was detected by the analyzer.\
    \  In the\n   case of more than one event, it is the time that the first event\
    \ was\n   detected.  (This may or may not be the same time as CreateTime;\n  \
    \ analyzers are not required to send alerts immediately upon\n   detection).\n"
- title: 4.2.5.3.  The AnalyzerTime Class
  contents:
  - "4.2.5.3.  The AnalyzerTime Class\n   The AnalyzerTime class is used to indicate\
    \ the current date and time\n   on the analyzer.  Its values should be filled\
    \ in as late as possible\n   in the message transmission process, ideally immediately\
    \ before\n   placing the message \"on the wire\".\n   The use of <AnalyzerTime>\
    \ to perform rudimentary time synchronization\n   between analyzers and managers\
    \ is discussed in Section 6.3.\n"
- title: 4.2.6.  The Assessment Classes
  contents:
  - "4.2.6.  The Assessment Classes\n   The data model provides three types of \"\
    assessments\" that an analyzer\n   can make about an event.  These classes are\
    \ aggregates of the\n   Assessment class.\n"
- title: 4.2.6.1.  The Impact Class
  contents:
  - "4.2.6.1.  The Impact Class\n   The Impact class is used to provide the analyzer's\
    \ assessment of the\n   impact of the event on the target(s).  It is represented\
    \ in the IDMEF\n   DTD as follows:\n   <!ENTITY % attvals.severity           \
    \  \"\n       ( info | low | medium | high )\n     \">\n   <!ENTITY % attvals.completion\
    \           \"\n       ( failed | succeeded )\n     \">\n   <!ENTITY % attvals.impacttype\
    \           \"\n       ( admin | dos | file | recon | user | other )\n     \"\
    >\n   <!ELEMENT Impact              (#PCDATA) >\n   <!ATTLIST Impact\n       severity\
    \            %attvals.severity;      #IMPLIED\n       completion          %attvals.completion;\
    \    #IMPLIED\n       type                %attvals.impacttype;    'other'\n  \
    \     %attlist.global;\n     >\n   The Impact class has three attributes:\n  \
    \ severity\n      An estimate of the relative severity of the event.  The permitted\n\
    \      values are shown below.  There is no default value.  (See also\n      Section\
    \ 10.)\n       +------+---------+-----------------------------------------+\n\
    \       | Rank | Keyword | Description                             |\n       +------+---------+-----------------------------------------+\n\
    \       |    0 | info    | Alert represents informational activity |\n       |\
    \      |         |                                         |\n       |    1 |\
    \ low     | Low severity                            |\n       |      |       \
    \  |                                         |\n       |    2 | medium  | Medium\
    \ severity                         |\n       |      |         |              \
    \                           |\n       |    3 | high    | High severity       \
    \                    |\n       +------+---------+-----------------------------------------+\n\
    \   completion\n      An indication of whether the analyzer believes the attempt\
    \ that\n      the event describes was successful or not.  The permitted values\n\
    \      are shown below.  There is no default value.  (See also\n      Section\
    \ 10.)\n           +------+-----------+--------------------------------+\n   \
    \        | Rank | Keyword   | Description                    |\n           +------+-----------+--------------------------------+\n\
    \           |    0 | failed    | The attempt was not successful |\n          \
    \ |      |           |                                |\n           |    1 | succeeded\
    \ | The attempt succeeded          |\n           +------+-----------+--------------------------------+\n\
    \   type\n      The type of attempt represented by this event, in relatively broad\n\
    \      categories.  The permitted values are shown below.  The default\n     \
    \ value is \"other\".  (See also Section 10.)\n   +------+---------+--------------------------------------------------+\n\
    \   | Rank | Keyword | Description                                      |\n  \
    \ +------+---------+--------------------------------------------------+\n   |\
    \    0 | admin   | Administrative privileges were attempted or      |\n   |  \
    \    |         | obtained                                         |\n   |    \
    \  |         |                                                  |\n   |    1 |\
    \ dos     | A denial of service was attempted or completed   |\n   |      |  \
    \       |                                                  |\n   |    2 | file\
    \    | An action on a file was attempted or completed   |\n   |      |       \
    \  |                                                  |\n   |    3 | recon   |\
    \ A reconnaissance probe was attempted or          |\n   |      |         | completed\
    \                                        |\n   |      |         |            \
    \                                      |\n   |    4 | user    | User privileges\
    \ were attempted or obtained       |\n   |      |         |                  \
    \                                |\n   |    5 | other   | Anything not in one\
    \ of the above categories      |\n   +------+---------+--------------------------------------------------+\n\
    \   All three attributes are optional.  The element itself may be empty,\n   or\
    \ may contain a textual description of the impact, if the analyzer\n   is able\
    \ to provide additional details.\n"
- title: 4.2.6.2.  The Action Class
  contents:
  - "4.2.6.2.  The Action Class\n   The Action class is used to describe any actions\
    \ taken by the\n   analyzer in response to the event.  Is is represented in the\
    \ IDMEF\n   DTD as follows:\n   <!ENTITY % attvals.actioncat            \"\n \
    \      ( block-installed | notification-sent | taken-offline | other )\n     \"\
    >\n   <!ELEMENT Action              (#PCDATA) >\n   <!ATTLIST Action\n       category\
    \            %attvals.actioncat;     'other'\n       %attlist.global;\n     >\n\
    \   Action has one attribute:\n   category\n      The type of action taken.  The\
    \ permitted values are shown below.\n      The default value is \"other\".  (See\
    \ also Section 10.)\n   +------+-------------------+----------------------------------------+\n\
    \   | Rank | Keyword           | Description                            |\n  \
    \ +------+-------------------+----------------------------------------+\n   |\
    \    0 | block-installed   | A block of some sort was installed to  |\n   |  \
    \    |                   | prevent an attack from reaching its    |\n   |    \
    \  |                   | destination.  The block could be a     |\n   |      |\
    \                   | port block, address block, etc., or    |\n   |      |  \
    \                 | disabling a user account.              |\n   |      |    \
    \               |                                        |\n   |    1 | notification-sent\
    \ | A notification message of some sort    |\n   |      |                   |\
    \ was sent out-of-band (via pager,       |\n   |      |                   | e-mail,\
    \ etc.).  Does not include the   |\n   |      |                   | transmission\
    \ of this alert.            |\n   |      |                   |               \
    \                         |\n   |    2 | taken-offline     | A system, computer,\
    \ or user was taken  |\n   |      |                   | offline, as when the computer\
    \ is shut  |\n   |      |                   | down or a user is logged off.  \
    \        |\n   |      |                   |                                  \
    \      |\n   |    3 | other             | Anything not in one of the above   \
    \    |\n   |      |                   | categories.                          \
    \  |\n   +------+-------------------+----------------------------------------+\n\
    \      The element itself may be empty, or may contain a textual\n      description\
    \ of the action, if the analyzer is able to provide\n      additional details.\n"
- title: 4.2.6.3.  The Confidence Class
  contents:
  - "4.2.6.3.  The Confidence Class\n   The Confidence class is used to represent\
    \ the analyzer's best\n   estimate of the validity of its analysis.  It is represented\
    \ in the\n   IDMEF DTD as follows:\n   <!ENTITY % attvals.rating             \
    \  \"\n       ( low | medium | high | numeric )\n     \">\n   <!ELEMENT Confidence\
    \          (#PCDATA) >\n   <!ATTLIST Confidence\n       rating              %attvals.rating;\
    \        'numeric'\n       %attlist.global;\n     >\n   The Confidence class has\
    \ one attribute:\n   rating\n      The analyzer's rating of its analytical validity.\
    \  The permitted\n      values are shown below.  The default value is \"numeric\"\
    .  (See\n      also Section 10.)\n   +------+---------+--------------------------------------------------+\n\
    \   | Rank | Keyword | Description                                      |\n  \
    \ +------+---------+--------------------------------------------------+\n   |\
    \    0 | low     | The analyzer has little confidence in its        |\n   |  \
    \    |         | validity                                         |\n   |    \
    \  |         |                                                  |\n   |    1 |\
    \ medium  | The analyzer has average confidence in its       |\n   |      |  \
    \       | validity                                         |\n   |      |    \
    \     |                                                  |\n   |    2 | high \
    \   | The analyzer has high confidence in its validity |\n   |      |        \
    \ |                                                  |\n   |    3 | numeric |\
    \ The analyzer has provided a posterior            |\n   |      |         | probability\
    \ value indicating its confidence in   |\n   |      |         | its validity \
    \                                    |\n   +------+---------+--------------------------------------------------+\n\
    \   This element should be used only when the analyzer can produce\n   meaningful\
    \ information.  Systems that can output only a rough\n   heuristic should use\
    \ \"low\", \"medium\", or \"high\" as the rating value.\n   In this case, the\
    \ element content should be omitted.\n   Systems capable of producing reasonable\
    \ probability estimates should\n   use \"numeric\" as the rating value and include\
    \ a numeric confidence\n   value in the element content.  This numeric value should\
    \ reflect a\n   posterior probability (the probability that an attack has occurred\n\
    \   given the data seen by the detection system and the model used by the\n  \
    \ system).  It is a floating point number between 0.0 and 1.0,\n   inclusive.\
    \  The number of digits should be limited to those\n   representable by a single\
    \ precision floating point value, and may be\n   represented as described in Section\
    \ 3.2.2.\n   NOTE:  It should be noted that different types of analyzers may\n\
    \      compute confidence values in different ways and that in many\n      cases,\
    \ confidence values from different analyzers should not be\n      compared (for\
    \ example, if the analyzers use different methods of\n      computing or representing\
    \ confidence, or are of different types or\n      configurations).  Care should\
    \ be taken when implementing systems\n      that process confidence values (such\
    \ as event correlators) not to\n      make comparisons or assumptions that cannot\
    \ be supported by the\n      system's knowledge of the environment in which it\
    \ is working.\n"
- title: 4.2.7.  The Support Classes
  contents:
  - "4.2.7.  The Support Classes\n   The support classes make up the major parts of\
    \ the core classes, and\n   are shared between them.\n"
- title: 4.2.7.1.  The Reference Class
  contents:
  - "4.2.7.1.  The Reference Class\n   The Reference class provides the \"name\" of\
    \ an alert, or other\n   information allowing the manager to determine what it\
    \ is.\n   The Reference class is composed of two aggregate classes, as shown in\n\
    \   Figure 13.\n                    +----------------+\n                    |\
    \ Reference      |\n                    +----------------+            +------+\n\
    \                    | STRING origin  |<>----------| name |\n                \
    \    | STRING meaning |            +------+\n                    |           \
    \     |            +------+\n                    |                |<>----------|\
    \ url  |\n                    |                |            +------+\n       \
    \             +----------------+\n                      Figure 13: The Reference\
    \ Class\n   The aggregate classes that make up Reference are:\n   name\n     \
    \ Exactly one.  STRING.  The name of the alert, from one of the\n      origins\
    \ listed below.\n   url\n      Exactly one.  STRING.  A URL at which the manager\
    \ (or the human\n      operator of the manager) can find additional information\
    \ about the\n      alert.  The document pointed to by the URL may include an in-depth\n\
    \      description of the attack, appropriate countermeasures, or other\n    \
    \  information deemed relevant by the vendor.\n   This is represented in the IDMEF\
    \ DTD as follows:\n   <!ENTITY % attvals.origin               \"\n       ( unknown\
    \ | vendor-specific | user-specific | bugtraqid | cve |\n         osvdb )\n  \
    \   \">\n   <!ELEMENT Reference                (\n       name, url\n     )>\n\
    \   <!ATTLIST Reference\n       origin              %attvals.origin;        'unknown'\n\
    \       meaning             CDATA                   #IMPLIED\n     >\n   The Reference\
    \ class has two attributes:\n   origin\n      Required.  The source from which\
    \ the name of the alert originates.\n      The permitted values for this attribute\
    \ are shown below.  The\n      default value is \"unknown\".  (See also Section\
    \ 10.)\n   +------+-----------------+------------------------------------------+\n\
    \   | Rank | Keyword         | Description                              |\n  \
    \ +------+-----------------+------------------------------------------+\n   |\
    \    0 | unknown         | Origin of the name is not known          |\n   |  \
    \    |                 |                                          |\n   |    1\
    \ | vendor-specific | A vendor-specific name (and hence, URL); |\n   |      |\
    \                 | this can be used to provide              |\n   |      |  \
    \               | product-specific information             |\n   |      |    \
    \             |                                          |\n   |    2 | user-specific\
    \   | A user-specific name (and hence, URL);   |\n   |      |                \
    \ | this can be used to provide              |\n   |      |                 |\
    \ installation-specific information        |\n   |      |                 |  \
    \                                        |\n   |    3 | bugtraqid       | The\
    \ SecurityFocus (\"Bugtraq\")            |\n   |      |                 | vulnerability\
    \ database identifier        |\n   |      |                 | (http://www.securityfocus.com/bid)\
    \       |\n   |      |                 |                                     \
    \     |\n   |    4 | cve             | The Common Vulnerabilities and Exposures\
    \ |\n   |      |                 | (CVE) name (http://www.cve.mitre.org/)   |\n\
    \   |      |                 |                                          |\n  \
    \ |    5 | osvdb           | The Open Source Vulnerability Database   |\n   |\
    \      |                 | (http://www.osvdb.org)                   |\n   +------+-----------------+------------------------------------------+\n\
    \   meaning\n      Optional.  The meaning of the reference, as understood by the\n\
    \      alert provider.  This field is only valid if the value of the\n      <origin>\
    \ attribute is set to \"vendor-specific\" or \"user-specific\".\n"
- title: 4.2.7.2.  The Node Class
  contents:
  - "4.2.7.2.  The Node Class\n   The Node class is used to identify hosts and other\
    \ network devices\n   (routers, switches, etc.).\n   The Node class is composed\
    \ of three aggregate classes, as shown in\n   Figure 14.\n                   +---------------+\n\
    \                   |     Node      |\n                   +---------------+  \
    \     0..1 +----------+\n                   | STRING ident  |<>----------| location\
    \ |\n                   | ENUM category |            +----------+\n          \
    \         |               |       0..1 +----------+\n                   |    \
    \           |<>----------|   name   |\n                   |               |  \
    \          +----------+\n                   |               |       0..* +----------+\n\
    \                   |               |<>----------|  Address |\n              \
    \     |               |            +----------+\n                   +---------------+\n\
    \                         Figure 14: The Node Class\n   The aggregate classes\
    \ that make up Node are:\n   location\n      Zero or one.  STRING.  The location\
    \ of the equipment.\n   name\n      Zero or one.  STRING.  The name of the equipment.\
    \  This\n      information MUST be provided if no Address information is given.\n\
    \   Address\n      Zero or more.  The network or hardware address of the equipment.\n\
    \      Unless a name (above) is provided, at least one address must be\n     \
    \ specified.\n   This is represented in the IDMEF DTD as follows:\n   <!ENTITY\
    \ % attvals.nodecat              \"\n       ( unknown | ads | afs | coda | dfs\
    \ | dns | hosts | kerberos |\n         nds | nis | nisplus | nt | wfw )\n    \
    \ \">\n   <!ELEMENT Node                          (\n       location?, (name |\
    \ Address), Address*\n     )>\n   <!ATTLIST Node\n       ident               CDATA\
    \                   '0'\n       category            %attvals.nodecat;       'unknown'\n\
    \       %attlist.global;\n     >\n   The Node class has two attributes:\n   ident\n\
    \      Optional.  A unique identifier for the node; see Section 3.2.9.\n   category\n\
    \      Optional.  The \"domain\" from which the name information was\n      obtained,\
    \ if relevant.  The permitted values for this attribute\n      are shown in the\
    \ table below.  The default value is \"unknown\".\n      (See also Section 10\
    \ for extensions to the table.)\n      +------+----------+------------------------------------------+\n\
    \      | Rank | Keyword  | Description                              |\n      +------+----------+------------------------------------------+\n\
    \      |    0 | unknown  | Domain unknown or not relevant           |\n      |\
    \      |          |                                          |\n      |    1 |\
    \ ads      | Windows 2000 Advanced Directory Services |\n      |      |      \
    \    |                                          |\n      |    2 | afs      | Andrew\
    \ File System (Transarc)            |\n      |      |          |             \
    \                             |\n      |    3 | coda     | Coda Distributed File\
    \ System             |\n      |      |          |                            \
    \              |\n      |    4 | dfs      | Distributed File System (IBM)    \
    \        |\n      |      |          |                                        \
    \  |\n      |    5 | dns      | Domain Name System                       |\n \
    \     |      |          |                                          |\n      |\
    \    6 | hosts    | Local hosts file                         |\n      |      |\
    \          |                                          |\n      |    7 | kerberos\
    \ | Kerberos realm                           |\n      |      |          |    \
    \                                      |\n      |    8 | nds      | Novell Directory\
    \ Services                |\n      |      |          |                       \
    \                   |\n      |    9 | nis      | Network Information Services\
    \ (Sun)       |\n      |      |          |                                   \
    \       |\n      |   10 | nisplus  | Network Information Services Plus (Sun) \
    \ |\n      |      |          |                                          |\n  \
    \    |   11 | nt       | Windows NT domain                        |\n      | \
    \     |          |                                          |\n      |   12 |\
    \ wfw      | Windows for Workgroups                   |\n      +------+----------+------------------------------------------+\n"
- title: 4.2.7.2.1.  The Address Class
  contents:
  - "4.2.7.2.1.  The Address Class\n   The Address class is used to represent network,\
    \ hardware, and\n   application addresses.\n   The Address class is composed of\
    \ two aggregate classes, as shown in\n   Figure 15.\n                  +------------------+\n\
    \                  |     Address      |\n                  +------------------+\
    \            +---------+\n                  | STRING ident     |<>----------|\
    \ address |\n                  | ENUM category    |            +---------+\n \
    \                 | STRING vlan-name |       0..1 +---------+\n              \
    \    | INTEGER vlan-num |<>----------| netmask |\n                  |        \
    \          |            +---------+\n                  +------------------+\n\
    \                       Figure 15: The Address Class\n   The aggregate classes\
    \ that make up Address are:\n   address\n      Exactly one.  STRING.  The address\
    \ information.  The format of\n      this data is governed by the category attribute.\n\
    \   netmask\n      Zero or one.  STRING.  The network mask for the address, if\n\
    \      appropriate.\n   This is represented in the IDMEF DTD as follows:\n   <!ENTITY\
    \ % attvals.addrcat              \"\n       ( unknown | atm | e-mail | lotus-notes\
    \ | mac | sna | vm |\n         ipv4-addr | ipv4-addr-hex | ipv4-net | ipv4-net-mask\
    \ |\n         ipv6-addr | ipv6-addr-hex | ipv6-net | ipv6-net-mask )\n     \"\
    >\n   <!ELEMENT Address                       (\n       address, netmask?\n  \
    \   )>\n   <!ATTLIST Address\n       ident               CDATA               \
    \    '0'\n       category            %attvals.addrcat;       'unknown'\n     \
    \  vlan-name           CDATA                   #IMPLIED\n       vlan-num     \
    \       CDATA                   #IMPLIED\n       %attlist.global;\n     >\n  \
    \ The Address class has four attributes:\n   ident\n      Optional.  A unique\
    \ identifier for the address; see Section 3.2.9.\n   category\n      Optional.\
    \  The type of address represented.  The permitted values\n      for this attribute\
    \ are shown below.  The default value is\n      \"unknown\".  (See also Section\
    \ 10.)\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | unknown       | Address type unknown                       |\n   |  \
    \    |               |                                            |\n   |    1\
    \ | atm           | Asynchronous Transfer Mode network address |\n   |      |\
    \               |                                            |\n   |    2 | e-mail\
    \        | Electronic mail address (RFC 2822 [12])    |\n   |      |         \
    \      |                                            |\n   |    3 | lotus-notes\
    \   | Lotus Notes e-mail address                 |\n   |      |              \
    \ |                                            |\n   |    4 | mac           |\
    \ Media Access Control (MAC) address         |\n   |      |               |  \
    \                                          |\n   |    5 | sna           | IBM\
    \ Shared Network Architecture (SNA)      |\n   |      |               | address\
    \                                    |\n   |      |               |          \
    \                                  |\n   |    6 | vm            | IBM VM (\"PROFS\"\
    ) e-mail address            |\n   |      |               |                   \
    \                         |\n   |    7 | ipv4-addr     | IPv4 host address in\
    \ dotted-decimal        |\n   |      |               | notation (a.b.c.d)    \
    \                     |\n   |      |               |                         \
    \                   |\n   |    8 | ipv4-addr-hex | IPv4 host address in hexadecimal\
    \ notation  |\n   |      |               |                                   \
    \         |\n   |    9 | ipv4-net      | IPv4 network address in dotted-decimal\
    \     |\n   |      |               | notation, slash, significant bits       \
    \   |\n   |      |               | (a.b.c.d/nn)                              \
    \ |\n   |      |               |                                            |\n\
    \   |   10 | ipv4-net-mask | IPv4 network address in dotted-decimal     |\n  \
    \ |      |               | notation, slash, network mask in           |\n   |\
    \      |               | dotted-decimal notation (a.b.c.d/w.x.y.z)  |\n   |  \
    \    |               |                                            |\n   |   11\
    \ | ipv6-addr     | IPv6 host address                          |\n   |      |\
    \               |                                            |\n   |   12 | ipv6-addr-hex\
    \ | IPv6 host address in hexadecimal notation  |\n   |      |               |\
    \                                            |\n   |   13 | ipv6-net      | IPv6\
    \ network address, slash, significant   |\n   |      |               | bits  \
    \                                     |\n   |      |               |         \
    \                                   |\n   |   14 | ipv6-net-mask | IPv6 network\
    \ address, slash, network mask  |\n   +------+---------------+--------------------------------------------+\n\
    \   vlan-name\n      Optional.  The name of the Virtual LAN to which the address\n\
    \      belongs.\n   vlan-num\n      Optional.  The number of the Virtual LAN to\
    \ which the address\n      belongs.\n"
- title: 4.2.7.3.  The User Class
  contents:
  - "4.2.7.3.  The User Class\n   The User class is used to describe users.  It is\
    \ primarily used as a\n   \"container\" class for the UserId aggregate class,\
    \ as shown in\n   Figure 16.\n               +---------------+\n             \
    \  |     User      |\n               +---------------+       1..* +--------+\n\
    \               | STRING ident  |<>----------| UserId |\n               | ENUM\
    \ category |            +--------+\n               +---------------+\n       \
    \                  Figure 16: The User Class\n   The aggregate class contained\
    \ in User is:\n   UserId\n      One or more.  Identification of a user, as indicated\
    \ by its type\n      attribute (see Section 4.2.7.3.1).\n   This is represented\
    \ in the IDMEF DTD as follows:\n   <!ENTITY % attvals.usercat              \"\n\
    \       ( unknown | application | os-device )\n     \">\n   <!ELEMENT User   \
    \                       (\n       UserId+\n     )>\n   <!ATTLIST User\n      \
    \ ident               CDATA                   '0'\n       category           \
    \ %attvals.usercat;       'unknown'\n       %attlist.global;\n     >\n   The User\
    \ class has two attributes:\n   ident\n      Optional.  A unique identifier for\
    \ the user; see Section 3.2.9.\n   category\n      Optional.  The type of user\
    \ represented.  The permitted values for\n      this attribute are shown below.\
    \  The default value is \"unknown\".\n      (See also Section 10.)\n        +------+-------------+------------------------------------+\n\
    \        | Rank | Keyword     | Description                        |\n       \
    \ +------+-------------+------------------------------------+\n        |    0\
    \ | unknown     | User type unknown                  |\n        |      |     \
    \        |                                    |\n        |    1 | application\
    \ | An application user                |\n        |      |             |     \
    \                               |\n        |    2 | os-device   | An operating\
    \ system or device user |\n        +------+-------------+------------------------------------+\n"
- title: 4.2.7.3.1.  The UserId Class
  contents:
  - "4.2.7.3.1.  The UserId Class\n   The UserId class provides specific information\
    \ about a user.  More\n   than one UserId can be used within the User class to\
    \ indicate\n   attempts to transition from one user to another, or to provide\n\
    \   complete information about a user's (or process') privileges.\n   The UserId\
    \ class is composed of two aggregate classes, as shown in\n   Figure 17.\n   \
    \                   +--------------+\n                      |    UserId    |\n\
    \                      +--------------+       0..1 +--------+\n              \
    \        | STRING ident |<>----------|  name  |\n                      | ENUM\
    \ type    |            +--------+\n                      | STRING tty   |    \
    \   0..1 +--------+\n                      |              |<>----------| number\
    \ |\n                      |              |            +--------+\n          \
    \            +--------------+\n                        Figure 17: The UserId Class\n\
    \   The aggregate classes that make up UserId are:\n   name\n      Zero or one.\
    \  STRING.  A user or group name.\n   number\n      Zero or one.  INTEGER.  A\
    \ user or group number.\n   This is represented in the IDMEF DTD as follows:\n\
    \   <!ENTITY % attvals.idtype               \"\n       ( current-user | original-user\
    \ | target-user | user-privs |\n         current-group | group-privs | other-privs\
    \ )\n     \">\n   <!ELEMENT UserId                        (\n       (name, number?)\
    \ | (number, name?)\n     )>\n   <!ATTLIST UserId\n       ident              \
    \ CDATA                   '0'\n       type                %attvals.idtype;   \
    \     'original-user'\n       tty                 CDATA                   #IMPLIED\n\
    \       %attlist.global;\n     >\n   The UserId class has three attributes:\n\
    \   ident\n      Optional.  A unique identifier for the user id, see Section 3.2.9.\n\
    \   type\n      Optional.  The type of user information represented.  The\n  \
    \    permitted values for this attribute are shown below.  The default\n     \
    \ value is \"original-user\".  (See also Section 10.)\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | current-user  | The current user id being used by the user |\n   |  \
    \    |               | or process.  On Unix systems, this would   |\n   |    \
    \  |               | be the \"real\" user id, in general.         |\n   |    \
    \  |               |                                            |\n   |    1 |\
    \ original-user | The actual identity of the user or process |\n   |      |  \
    \             | being reported on.  On those systems that  |\n   |      |    \
    \           | (a) do some type of auditing and (b)       |\n   |      |      \
    \         | support extracting a user id from the      |\n   |      |        \
    \       | \"audit id\" token, that value should be     |\n   |      |        \
    \       | used.  On those systems that do not        |\n   |      |          \
    \     | support this, and where the user has       |\n   |      |            \
    \   | logged into the system, the \"login id\"     |\n   |      |            \
    \   | should be used.                            |\n   |      |              \
    \ |                                            |\n   |    2 | target-user   |\
    \ The user id the user or process is         |\n   |      |               | attempting\
    \ to become.  This would apply,   |\n   |      |               | on Unix systems\
    \ for example, when the user |\n   |      |               | attempts to use \"\
    su\", \"rlogin\", \"telnet\",  |\n   |      |               | etc.           \
    \                            |\n   |      |               |                  \
    \                          |\n   |    3 | user-privs    | Another user id the\
    \ user or process has    |\n   |      |               | the ability to use, or\
    \ a user id           |\n   |      |               | associated with a file permission.\
    \  On     |\n   |      |               | Unix systems, this would be the     \
    \       |\n   |      |               | \"effective\" user id in a user or process\
    \   |\n   |      |               | context, and the owner permissions in a   \
    \ |\n   |      |               | file context.  Multiple UserId elements of |\n\
    \   |      |               | this type may be used to specify a list of |\n  \
    \ |      |               | privileges.                                |\n   |\
    \      |               |                                            |\n   |  \
    \  4 | current-group | The current group id (if applicable) being |\n   |    \
    \  |               | used by the user or process.  On Unix      |\n   |      |\
    \               | systems, this would be the \"real\" group    |\n   |      |\
    \               | id, in general.                            |\n   |      |  \
    \             |                                            |\n   |    5 | group-privs\
    \   | Another group id the group or process has  |\n   |      |              \
    \ | the ability to use, or a group id          |\n   |      |               |\
    \ associated with a file permission.  On     |\n   |      |               | Unix\
    \ systems, this would be the            |\n   |      |               | \"effective\"\
    \ group id in a group or process |\n   |      |               | context, and the\
    \ group permissions in a    |\n   |      |               | file context.  On BSD-derived\
    \ Unix         |\n   |      |               | systems, multiple UserId elements\
    \ of this  |\n   |      |               | type would be used to include all the\
    \      |\n   |      |               | group ids on the \"group list\".       \
    \      |\n   |    6 | other-privs   | Not used in a user, group, or process  \
    \    |\n   |      |               | context, only used in the file context.  \
    \  |\n   |      |               | The file permissions assigned to users who |\n\
    \   |      |               | do not match either the user or group      |\n  \
    \ |      |               | permissions on the file.  On Unix systems, |\n   |\
    \      |               | this would be the \"world\" permissions.     |\n   +------+---------------+--------------------------------------------+\n\
    \   tty\n      Optional.  STRING.  The tty the user is using.\n"
- title: 4.2.7.4.  The Process Class
  contents:
  - "4.2.7.4.  The Process Class\n   The Process class is used to describe processes\
    \ being executed on\n   sources, targets, and analyzers.\n   The Process class\
    \ is composed of five aggregate classes, as shown in\n   Figure 18.\n        \
    \             +--------------+\n                     |    Process   |\n      \
    \               +--------------+            +------+\n                     | STRING\
    \ ident |<>----------| name |\n                     |              |         \
    \   +------+\n                     |              |       0..1 +------+\n    \
    \                 |              |<>----------| pid  |\n                     |\
    \              |            +------+\n                     |              |  \
    \     0..1 +------+\n                     |              |<>----------| path |\n\
    \                     |              |            +------+\n                 \
    \    |              |       0..* +------+\n                     |            \
    \  |<>----------| arg  |\n                     |              |            +------+\n\
    \                     |              |       0..* +------+\n                 \
    \    |              |<>----------| env  |\n                     |            \
    \  |            +------+\n                     +--------------+\n            \
    \           Figure 18: The Process Class\n   The aggregate classes that make up\
    \ Process are:\n   name\n      Exactly one.  STRING.  The name of the program\
    \ being executed.\n      This is a short name; path and argument information are\
    \ provided\n      elsewhere.\n   pid\n      Zero or one.  INTEGER.  The process\
    \ identifier of the process.\n   path\n      Zero or one.  STRING.  The full path\
    \ of the program being\n      executed.\n   arg\n      Zero or more.  STRING.\
    \  A command-line argument to the program.\n      Multiple arguments may be specified\
    \ (they are assumed to have\n      occurred in the same order they are provided)\
    \ with multiple uses\n      of arg.\n   env\n      Zero or more.  STRING.  An\
    \ environment string associated with the\n      process; generally of the format\
    \ \"VARIABLE=value\".  Multiple\n      environment strings may be specified with\
    \ multiple uses of env.\n   This is represented in the IDMEF DTD as follows:\n\
    \    <!ELEMENT Process                       (\n       name, pid?, path?, arg*,\
    \ env*\n     )>\n   <!ATTLIST Process\n       ident               CDATA      \
    \             '0'\n       %attlist.global;\n     >\n   The Process class has one\
    \ attribute:\n   ident\n      Optional.  A unique identifier for the process;\
    \ see Section 3.2.9.\n"
- title: 4.2.7.5.  The Service Class
  contents:
  - "4.2.7.5.  The Service Class\n   The Service class describes network services\
    \ on sources and targets.\n   It can identify services by name, port, and protocol.\
    \  When Service\n   occurs as an aggregate class of Source, it is understood that\
    \ the\n   service is one from which activity of interest is originating; and\n\
    \   that the service is \"attached\" to the Node, Process, and User\n   information\
    \ also contained in Source.  Likewise, when Service occurs\n   as an aggregate\
    \ class of Target, it is understood that the service is\n   one to which activity\
    \ of interest is being directed; and that the\n   service is \"attached\" to the\
    \ Node, Process, and User information also\n   contained in Target.  If Service\
    \ occurs in both Source and Target,\n   then information in both locations should\
    \ be the same.  If\n   information is the same in both locations and implementers\
    \ wish to\n   carry it in only one location, they should specify it as an aggregate\n\
    \   of the Target class.\n   The Service class is composed of four aggregate classes,\
    \ as shown in\n   Figure 19.\n            +-----------------------------+\n  \
    \          |   Service                   |\n            +-----------------------------+\
    \       0..1 +----------+\n            | STRING  ident               |<>----------|\
    \   name   |\n            | INTEGER ip_version          |            +----------+\n\
    \            | INTEGER iana_protocol_number|       0..1 +----------+\n       \
    \     | STRING  iana_protocol_name  |<>----------|   port   |\n            | \
    \                            |            +----------+\n            |        \
    \                     |       0..1 +----------+\n            |               \
    \              |<>----------| portlist |\n            |                      \
    \       |            +----------+\n            |                             |\
    \       0..1 +----------+\n            |                             |<>----------|\
    \ protocol |\n            |                             |            +----------+\n\
    \            +-----------------------------+\n                            /_\\\
    \n                             |\n                   +---------+--------+\n  \
    \                 |                  |\n            +-------------+     +-------------+\n\
    \            | SNMPService |     | WebService  |\n            +-------------+\
    \     +-------------+\n                       Figure 19: The Service Class\n \
    \  The aggregate classes that make up Service are:\n   name\n      Zero or one.\
    \  STRING.  The name of the service.  Whenever\n      possible, the name from\
    \ the IANA list of well-known ports SHOULD\n      be used.\n   port\n      Zero\
    \ or one.  INTEGER.  The port number being used.\n   portlist\n      Zero or one.\
    \  PORTLIST.  A list of port numbers being used; see\n      Section 3.2.8 for\
    \ formatting rules.  If a portlist is given, the\n      iana_protocol_number and\
    \ iana_protocol_name MUST apply to all the\n      elements of the list.\n   protocol\n\
    \      Zero or one.  STRING.  Additional information about the protocol\n    \
    \  being used.  The intent of the protocol field is to carry\n      additional\
    \ information related to the protocol being used when the\n      <Service> attributes\
    \ iana_protocol_number or/and\n      iana_protocol_name are filed.\n   A Service\
    \ MUST be specified as either (a) a name or a port or (b) a\n   portlist.  The\
    \ protocol is optional in all cases, but no other\n   combinations are permitted.\n\
    \   Service is represented in the IDMEF DTD as follows:\n   <!ELEMENT Service\
    \                       (\n       (((name, port?) | (port, name?)) | portlist),\
    \ protocol?,\n       SNMPService?, WebService?\n     )>\n   <!ATTLIST Service\n\
    \       ident                CDATA                   '0'\n   ip_version      \
    \     CDATA                   #IMPLIED\n   iana_protocol_number CDATA        \
    \          #IMPLIED\n   iana_protocol_name   CDATA                  #IMPLIED\n\
    \       %attlist.global;\n     >\n   The Service class has four attributes:\n\
    \   ident\n      Optional.  A unique identifier for the service; see Section 3.2.9.\n\
    \   ip_version\n      Optional.  INTEGER.  The IP version number.\n   iana_protocol_number\n\
    \      Optional.  INTEGER.  The IANA protocol number.\n   iana_protocol_name\n\
    \      Optional.  STRING.  The IANA protocol name.\n"
- title: 4.2.7.5.1.  The WebService Class
  contents:
  - "4.2.7.5.1.  The WebService Class\n   The WebService class carries additional\
    \ information related to web\n   traffic.\n   The WebService class is composed\
    \ of four aggregate classes, as shown\n   in Figure 20.\n                   +-------------+\n\
    \                   |   Service   |\n                   +-------------+\n    \
    \                     /_\\\n                          |\n                   +-------------+\n\
    \                   | WebService  |\n                   +-------------+      \
    \      +-------------+\n                   |             |<>----------|     url\
    \     |\n                   |             |            +-------------+\n     \
    \              |             |       0..1 +-------------+\n                  \
    \ |             |<>----------|     cgi     |\n                   |           \
    \  |            +-------------+\n                   |             |       0..1\
    \ +-------------+\n                   |             |<>----------| http-method\
    \ |\n                   |             |            +-------------+\n         \
    \          |             |       0..* +-------------+\n                   |  \
    \           |<>----------|     arg     |\n                   |             | \
    \           +-------------+\n                   +-------------+\n            \
    \          Figure 20: The WebService Class\n   The aggregate classes that make\
    \ up WebService are:\n   url\n      Exactly one.  STRING.  The URL in the request.\n\
    \   cgi\n      Zero or one.  STRING.  The CGI script in the request, without\n\
    \      arguments.\n   http-method\n      Zero or one.  STRING.  The HTTP method\
    \ (PUT, GET) used in the\n      request.\n   arg\n      Zero or more.  STRING.\
    \  The arguments to the CGI script.\n   This is represented in the IDMEF DTD as\
    \ follows:\n   <!ELEMENT WebService                    (\n       url, cgi?, http-method?,\
    \ arg*\n     )>\n   <!ATTLIST WebService\n       %attlist.global;\n     >\n"
- title: 4.2.7.5.2.  The SNMPService Class
  contents:
  - "4.2.7.5.2.  The SNMPService Class\n   The SNMPService class carries additional\
    \ information related to SNMP\n   traffic.  The aggregate classes composing SNMPService\
    \ must be\n   interpreted as described in RFC 3411 [15] and RFC 3584 [16].\n \
    \  The SNMPService class is composed of eight aggregate classes, as\n   shown\
    \ in Figure 21.\n                +-------------+\n                |   Service\
    \   |\n                +-------------+\n                      /_\\\n         \
    \              |\n                +-------------+\n                | SNMPService\
    \ |\n                +-------------+       0..1 +----------------------+\n   \
    \             |             |<>----------|       oid            |\n          \
    \      |             |            +----------------------+\n                |\
    \             |       0..1 +----------------------+\n                |       \
    \      |<>----------|messageProcessingModel|\n                |             |\
    \            +----------------------+\n                |             |       0..1\
    \ +----------------------+\n                |             |<>----------|    securityModel\
    \     |\n                |             |            +----------------------+\n\
    \                |             |       0..1 +----------------------+\n       \
    \         |             |<>----------|    securityName      |\n              \
    \  |             |            +----------------------+\n                |    \
    \         |       0..1 +----------------------+\n                |           \
    \  |<>----------|   securityLevel      |\n                |             |    \
    \        +----------------------+\n                |             |       0..1\
    \ +----------------------+\n                |             |<>----------|    contextName\
    \       |\n                |             |            +----------------------+\n\
    \                |             |       0..1 +----------------------+\n       \
    \         |             |<>----------|   contextEngineID    |\n              \
    \  |             |            +----------------------+\n                |    \
    \         |       0..1 +----------------------+\n                |           \
    \  |<>----------|     command          |\n                |             |    \
    \        +----------------------+\n                +-------------+\n         \
    \            Figure 21: The SNMPService Class\n   The aggregate classes that make\
    \ up SNMPService are:\n   oid\n      Zero or one.  STRING.  The object identifier\
    \ in the request.\n   messageProcessingModel\n      Zero or one.  INTEGER.  The\
    \ SNMP version, typically 0 for SNMPv1,\n      1 for SNMPv2c, 2 for SNMPv2u and\
    \ SNMPv2*, and 3 for SNMPv3; see\n      RFC 3411 [15] Section 5 for appropriate\
    \ values.\n   securityModel\n      Zero or one.  INTEGER.  The identification\
    \ of the security model\n      in use, typically 0 for any, 1 for SNMPv1, 2 for\
    \ SNMPv2c, and 3\n      for USM; see RFC 3411 [15] Section 5 for appropriate values.\n\
    \   securityName\n      Zero or one.  STRING.  The object's security name; see\
    \ RFC 3411\n      [15] Section 3.2.2.\n   securityLevel\n      Zero or one.  INTEGER.\
    \  The security level of the SNMP request;\n      see RFC 3411 [15] Section 3.4.3.\n\
    \   contextName\n      Zero or one.  STRING.  The object's context name; see RFC\
    \ 3411\n      [15] Section 3.3.3.\n   contextEngineID\n      Zero or one.  STRING.\
    \  The object's context engine identifier; see\n      RFC 3411 [15] Section 3.3.2.\n\
    \   command\n      Zero or one.  STRING.  The command sent to the SNMP server\
    \ (GET,\n      SET, etc.).\n   If other fields of an SNMP message are available\
    \ and should be\n   incorporated in the IDMEF alert, they must be located in the\n\
    \   additionaldata structure with the meaning being an object definition\n   defined\
    \ in RFC 3411 [15] Section 5 and the value located within the\n   additionaldata\
    \ payload.\n   This is represented in the IDMEF DTD as follows:\n   <!ELEMENT\
    \ SNMPService                   (\n       oid?, messageProcessingModel?, securityModel?,\
    \ securityName?,\n       securityLevel?, contextName?, contextEngineID?, command?\n\
    \     )>\n   <!ATTLIST SNMPService\n       %attlist.global;\n     >\n"
- title: 4.2.7.6.  The File Class
  contents:
  - "4.2.7.6.  The File Class\n   The File class provides specific information about\
    \ a file or other\n   file-like object that has been created, deleted, or modified\
    \ on the\n   target.  The description can provide either the file settings prior\n\
    \   to the event or the file settings at the time of the event, as\n   specified\
    \ using the \"category\" attribute.\n   The File class is composed of eleven aggregate\
    \ classes, as shown in\n   Figure 22.\n                  +--------------+\n  \
    \                |     File     |\n                  +--------------+        \
    \    +-------------+\n                  |              |<>----------|    name\
    \     |\n                  |              |            +-------------+\n     \
    \             |              |            +-------------+\n                  |\
    \              |<>----------|    path     |\n                  |             \
    \ |            +-------------+\n                  |              |       0..1\
    \ +-------------+\n                  |              |<>----------| create-time\
    \ |\n                  |              |            +-------------+\n         \
    \         |              |       0..1 +-------------+\n                  |   \
    \           |<>----------| modify-time |\n                  |              | \
    \           +-------------+\n                  |              |       0..1 +-------------+\n\
    \                  |              |<>----------| access-time |\n             \
    \     |              |            +-------------+\n                  |       \
    \       |       0..1 +-------------+\n                  |              |<>----------|\
    \  data-size  |\n                  |              |            +-------------+\n\
    \                  |              |       0..1 +-------------+\n             \
    \     |              |<>----------|  disk-size  |\n                  |       \
    \       |            +-------------+\n                  |              |     \
    \  0..* +-------------+\n                  |              |<>----------| FileAccess\
    \  |\n                  |              |            +-------------+\n        \
    \          |              |       0..* +-------------+\n                  |  \
    \            |<>----------|   Linkage   |\n                  |              |\
    \            +-------------+\n                  |              |       0..1 +-------------+\n\
    \                  |              |<>----------|    Inode    |\n             \
    \     |              |            +-------------+\n                  |       \
    \       |       0..* +-------------+\n                  |              |<>----------|\
    \  Checksum   |\n                  |              |            +-------------+\n\
    \                  +--------------+\n                         Figure 22: The File\
    \ Class\n   The aggregate classes that make up File are:\n   name\n      Exactly\
    \ one.  STRING.  The name of the file to which the alert\n      applies, not including\
    \ the path to the file.\n   path\n      Exactly one.  STRING.  The full path to\
    \ the file, including the\n      name.  The path name should be represented in\
    \ as \"universal\" a\n      manner as possible, to facilitate processing of the\
    \ alert.\n      For Windows systems, the path should be specified using the\n\
    \      Universal Naming Convention (UNC) for remote files, and using a\n     \
    \ drive letter for local files (e.g., \"C:\\boot.ini\").  For Unix\n      systems,\
    \ paths on network file systems should use the name of the\n      mounted resource\
    \ instead of the local mount point (e.g.,\n      \"fileserver:/usr/local/bin/foo\"\
    ).  The mount point can be provided\n      using the <Linkage> element.\n   create-time\n\
    \      Zero or one.  DATETIME.  Time the file was created.  Note that\n      this\
    \ is *not* the Unix \"st_ctime\" file attribute (which is not\n      file creation\
    \ time).  The Unix \"st_ctime\" attribute is contained\n      in the \"Inode\"\
    \ class.\n   modify-time\n      Zero or one.  DATETIME.  Time the file was last\
    \ modified.\n   access-time\n      Zero or one.  DATETIME.  Time the file was\
    \ last accessed.\n   data-size\n      Zero or one.  INTEGER.  The size of the\
    \ data, in bytes.  Typically\n      what is meant when referring to file size.\
    \  On Unix UFS file\n      systems, this value corresponds to stat.st_size.  On\
    \ Windows NTFS,\n      this value corresponds to Valid Data Length (VDL).\n  \
    \ disk-size\n      Zero or one.  INTEGER.  The physical space on disk consumed\
    \ by the\n      file, in bytes.  On Unix UFS file systems, this value corresponds\n\
    \      to 512 * stat.st_blocks.  On Windows NTFS, this value corresponds\n   \
    \   to End of File (EOF).\n   FileAccess\n      Zero or more.  Access permissions\
    \ on the file.\n   Linkage\n      Zero or more.  File system objects to which\
    \ this file is linked\n      (other references for the file).\n   Inode\n    \
    \  Zero or one.  Inode information for this file (relevant to Unix).\n   Checksum\n\
    \      Zero or more.  Checksum information for this file.\n   This is represented\
    \ in the IDMEF DTD as follows:\n   <!ENTITY % attvals.filecat              \"\n\
    \       ( current | original )\n     \">\n   <!ELEMENT File                  \
    \        (\n       name, path, create-time?, modify-time?, access-time?,\n   \
    \    data-size?, disk-size?, FileAccess*, Linkage*, Inode?,\n       Checksum*\n\
    \     )>\n   <!ATTLIST File\n       ident               CDATA                \
    \   '0'\n       category            %attvals.filecat;       #REQUIRED\n      \
    \ fstype              CDATA                   #IMPLIED\n       file-type     \
    \      CDATA                   #IMPLIED\n       %attlist.global;\n     >\n   The\
    \ File class has four attributes (one required and three optional):\n   ident\n\
    \      Optional.  A unique identifier for this file; see Section 3.2.9.\n   category\n\
    \      Required.  The context for the information being provided.  The\n     \
    \ permitted values are shown below.  There is no default value.\n      (See also\
    \ Section 10.)\n   +------+----------+-------------------------------------------------+\n\
    \   | Rank | Keyword  | Description                                     |\n  \
    \ +------+----------+-------------------------------------------------+\n   |\
    \    0 | current  | The file information is from after the reported |\n   |  \
    \    |          | change                                          |\n   |    \
    \  |          |                                                 |\n   |    1 |\
    \ original | The file information is from before the         |\n   |      |  \
    \        | reported change                                 |\n   +------+----------+-------------------------------------------------+\n\
    \   fstype\n      Optional.  The type of file system the file resides on.  This\n\
    \      attribute governs how path names and other attributes are\n      interpreted.\n\
    \                +------+---------+-------------------------------------+\n  \
    \              | Rank | Keyword | Description                         |\n    \
    \            +------+---------+-------------------------------------+\n      \
    \          |    0 | ufs     | Berkeley Unix Fast File System      |\n        \
    \        |    1 | efs     | Linux \"efs\" file system             |\n        \
    \        |    2 | nfs     | Network File System                 |\n          \
    \      |    3 | afs     | Andrew File System                  |\n            \
    \    |    4 | ntfs    | Windows NT File System              |\n              \
    \  |    5 | fat16   | 16-bit Windows FAT File System      |\n                |\
    \    6 | fat32   | 32-bit Windows FAT File System      |\n                |  \
    \  7 | pcfs    | \"PC\" (MS-DOS) file system on CD-ROM |\n                |  \
    \  8 | joliet  | Joliet CD-ROM file system           |\n                |    9\
    \ | iso9660 | ISO 9660 CD-ROM file system         |\n                +------+---------+-------------------------------------+\n\
    \   file-type\n      Optional.  The type of file, as a mime-type.\n"
- title: 4.2.7.6.1.  The FileAccess Class
  contents:
  - "4.2.7.6.1.  The FileAccess Class\n   The FileAccess class represents the access\
    \ permissions on a file.\n   The representation is intended to be useful across\
    \ operating systems.\n   The FileAccess class is composed of two aggregate classes,\
    \ as shown\n   in Figure 23.\n                  +--------------+\n           \
    \       |  FileAccess  |\n                  +--------------+            +------------+\n\
    \                  |              |<>----------|   UserId   |\n              \
    \    |              |            +------------+\n                  |         \
    \     |       1..* +------------+\n                  |              |<>----------|\
    \ Permission |\n                  |              |            +------------+\n\
    \                  +--------------+\n                      Figure 23: The FileAccess\
    \ Class\n   The aggregate classes that make up FileAccess are:\n   UserId\n  \
    \    Exactly one.  The user (or group) to which these permissions\n      apply.\
    \  The value of the \"type\" attribute must be \"user-privs\",\n      \"group-privs\"\
    , or \"other-privs\" as appropriate.  Other values for\n      \"type\" MUST NOT\
    \ be used in this context.\n   Permission\n      One or more.  ENUM.  Level of\
    \ access allowed.  The permitted\n      values are shown below.  There is no default\
    \ value.  (See also\n      Section 10.)\n   +------+-------------------+----------------------------------------+\n\
    \   | Rank | Keyword           | Description                            |\n  \
    \ +------+-------------------+----------------------------------------+\n   |\
    \    0 | noAccess          | No access at all is allowed for this   |\n   |  \
    \    |                   | user                                   |\n   |    \
    \  |                   |                                        |\n   |    1 |\
    \ read              | This user has read access to the file  |\n   |      |  \
    \                 |                                        |\n   |    2 | write\
    \             | This user has write access to the file |\n   |      |        \
    \           |                                        |\n   |    3 | execute  \
    \         | This user has the ability to execute   |\n   |      |            \
    \       | the file                               |\n   |      |              \
    \     |                                        |\n   |    4 | search         \
    \   | This user has the ability to search    |\n   |      |                  \
    \ | this file (applies to \"execute\"        |\n   |      |                  \
    \ | permission on directories in Unix)     |\n   |      |                   |\
    \                                        |\n   |    5 | delete            | This\
    \ user has the ability to delete    |\n   |      |                   | this file\
    \                              |\n   |      |                   |            \
    \                            |\n   |    6 | executeAs         | This user has\
    \ the ability to execute   |\n   |      |                   | this file as another\
    \ user              |\n   |      |                   |                       \
    \                 |\n   |    7 | changePermissions | This user has the ability\
    \ to change    |\n   |      |                   | the access permissions on this\
    \ file    |\n   |      |                   |                                 \
    \       |\n   |    8 | takeOwnership     | This user has the ability to take \
    \     |\n   |      |                   | ownership of this file              \
    \   |\n   +------+-------------------+----------------------------------------+\n\
    \   The \"changePermissions\" and \"takeOwnership\" strings represent those\n\
    \   concepts in Windows.  On Unix, the owner of the file always has\n   \"changePermissions\"\
    \ access, even if no other access is allowed for\n   that user.  \"Full Control\"\
    \ in Windows is represented by enumerating\n   the permissions it contains.  The\
    \ \"executeAs\" string represents the\n   set-user-id and set-group-id features\
    \ in Unix.\n   This is represented in the IDMEF DTD as follows:\n   <!ELEMENT\
    \ Permission EMPTY >\n   <!ATTLIST Permission\n       perms               %attvals.fileperm;\
    \      #REQUIRED\n       %attlist.global;\n   >\n   <!ENTITY % attvals.fileperm\
    \ \"( noAccess | read | write | execute |\n     search | delete | executeAs |\
    \ changePermissions |\n     takeOwnership)\" >\n"
- title: 4.2.7.6.2.  The Linkage Class
  contents:
  - "4.2.7.6.2.  The Linkage Class\n   The Linkage class represents file system connections\
    \ between the file\n   described in the <File> element and other objects in the\
    \ file system.\n   For example, if the <File> element is a symbolic link or shortcut,\n\
    \   then the <Linkage> element should contain the name of the object the\n   link\
    \ points to.  Further information can be provided about the object\n   in the\
    \ <Linkage> element with another <File> element, if appropriate.\n   The Linkage\
    \ class is composed of three aggregate classes, as shown in\n   Figure 24.\n \
    \                 +--------------+\n                  |   Linkage    |\n     \
    \             +--------------+            +------+\n                  |      \
    \        |<>----------| name |\n                  |              |           \
    \ +------+\n                  |              |            +------+\n         \
    \         |              |<>----------| path |\n                  |          \
    \    |            +------+\n                  |              |            +------+\n\
    \                  |              |<>----------| File |\n                  | \
    \             |            +------+\n                  +--------------+\n    \
    \                   Figure 24: The Linkage Class\n   The aggregate classes that\
    \ make up Linkage are:\n   name\n      Exactly one.  STRING.  The name of the\
    \ file system object, not\n      including the path.\n   path\n      Exactly one.\
    \  STRING.  The full path to the file system object,\n      including the name.\
    \  The path name should be represented in as\n      \"universal\" a manner as\
    \ possible, to facilitate processing of the\n      alert.\n   File\n      Exactly\
    \ one.  A <File> element may be used in place of the <name>\n      and <path>\
    \ elements if additional information about the file is to\n      be included.\n\
    \   This is represented in the IDMEF DTD as follows:\n   <!ENTITY % attvals.linkcat\
    \              \"\n       ( hard-link | mount-point | reparse-point | shortcut\
    \ | stream |\n         symbolic-link )\n     \">\n   <!ELEMENT Linkage       \
    \                (\n       (name, path) | File\n     )>\n   <!ATTLIST Linkage\n\
    \       category            %attvals.linkcat;       #REQUIRED\n       %attlist.global;\n\
    \     >\n   The Linkage class has one attribute:\n   category\n      The type\
    \ of object that the link describes.  The permitted values\n      are shown below.\
    \  There is no default value.  (See also\n      Section 10.)\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | hard-link     | The <name> element represents another name |\n   |  \
    \    |               | for this file.  This information may be    |\n   |    \
    \  |               | more easily obtainable on NTFS file        |\n   |      |\
    \               | systems than others.                       |\n   |      |  \
    \             |                                            |\n   |    1 | mount-point\
    \   | An alias for the directory specified by    |\n   |      |              \
    \ | the parent's <name> and <path> elements.   |\n   |      |               |\
    \                                            |\n   |    2 | reparse-point | Applies\
    \ only to Windows; excludes symbolic |\n   |      |               | links and\
    \ mount points, which are specific |\n   |      |               | types of reparse\
    \ points.                   |\n   |      |               |                   \
    \                         |\n   |    3 | shortcut      | The file represented\
    \ by a Windows          |\n   |      |               | \"shortcut\".  A shortcut\
    \ is distinguished   |\n   |      |               | from a symbolic link because\
    \ of the        |\n   |      |               | difference in their contents, which\
    \ may be |\n   |      |               | of importance to the manager.        \
    \      |\n   |      |               |                                        \
    \    |\n   |    4 | stream        | An Alternate Data Stream (ADS) in Windows;\
    \ |\n   |      |               | a fork on MacOS.  Separate file system     |\n\
    \   |      |               | entity that is considered an extension of  |\n  \
    \ |      |               | the main <File>.                           |\n   |\
    \    5 | symbolic-link | The <name> element represents the file to  |\n   |  \
    \    |               | which the link points.                     |\n   +------+---------------+--------------------------------------------+\n"
- title: 4.2.7.6.3.  The Inode Class
  contents:
  - "4.2.7.6.3.  The Inode Class\n   The Inode class is used to represent the additional\
    \ information\n   contained in a Unix file system i-node.\n   The Inode class\
    \ is composed of six aggregate classes, as shown in\n   Figure 25.\n         \
    \         +--------------+\n                  |    Inode     |\n             \
    \     +--------------+            +----------------+\n                  |    \
    \          |<>----------|   change-time  |\n                  |              |\
    \            +----------------+\n                  |              |          \
    \  +----------------+\n                  |              |<>----------|     number\
    \     |\n                  |              |            +----------------+\n  \
    \                |              |            +----------------+\n            \
    \      |              |<>----------|  major-device  |\n                  |   \
    \           |            +----------------+\n                  |             \
    \ |            +----------------+\n                  |              |<>----------|\
    \  minor-device  |\n                  |              |            +----------------+\n\
    \                  |              |            +----------------+\n          \
    \        |              |<>----------| c-major-device |\n                  | \
    \             |            +----------------+\n                  |           \
    \   |            +----------------+\n                  |              |<>----------|\
    \ c-minor-device |\n                  |              |            +----------------+\n\
    \                  +--------------+\n                        Figure 25: The Inode\
    \ Class\n   The aggregate classes that make up Inode are:\n   change-time\n  \
    \    Zero or one.  DATETIME.  The time of the last inode change, given\n     \
    \ by the st_ctime element of \"struct stat\".\n   number\n      Zero or one. \
    \ INTEGER.  The inode number.\n   major-device\n      Zero or one.  INTEGER. \
    \ The major device number of the device the\n      file resides on.\n   minor-device\n\
    \      Zero or one.  INTEGER.  The minor device number of the device the\n   \
    \   file resides on.\n   c-major-device\n      Zero or one.  INTEGER.  The major\
    \ device of the file itself, if it\n      is a character special device.\n   c-minor-device\n\
    \      Zero or one.  INTEGER.  The minor device of the file itself, if it\n  \
    \    is a character special device.\n   Note that <number>, <major-device>, and\
    \ <minor-device> must be given\n   together, and the <c-major-device> and <c-minor-device>\
    \ must be given\n   together.\n   This is represented in the IDMEF DTD as follows:\n\
    \   <!ELEMENT Inode                         (\n       change-time?, (number, major-device,\
    \ minor-device)?,\n       (c-major-device, c-minor-device)?\n     )>\n   <!ATTLIST\
    \ Inode\n       %attlist.global;\n     >\n"
- title: 4.2.7.6.4.  The Checksum Class
  contents:
  - "4.2.7.6.4.  The Checksum Class\n   The Checksum class represents checksum information\
    \ associated with\n   the file.  This checksum information can be provided by\
    \ file\n   integrity checkers, among others.\n   The checksum class is composed\
    \ of two aggregate classes, as shown in\n   Figure 26.\n                  +--------------+\n\
    \                  |   Checksum   |\n                  +--------------+      \
    \      +-------+\n                  | algorithm    |<>----------| value |\n  \
    \                |              |            +-------+\n                  |  \
    \            |        0..1+-------+\n                  |              |<>----------|\
    \  key  |\n                  |              |            +-------+\n         \
    \         +--------------+\n                       Figure 26: The Checksum Class\n\
    \   The aggregate classes that make up Checksum are:\n   value\n      Exactly\
    \ one.  STRING.  The value of the checksum.\n   key\n      Zero or one.  STRING.\
    \  The key to the checksum, if appropriate.\n   This is represented in the IDMEF\
    \ DTD as follows:\n   <!ENTITY % attvals.checksumalgos        \"\n         ( MD4\
    \ | MD5 | SHA1 | SHA2-256 | SHA2-384 | SHA2-512 | CRC-32 |\n           Haval |\
    \ Tiger | Gost )\n     \">\n   <!ELEMENT Checksum                      (\n   \
    \    value, key?\n     )>\n   <!ATTLIST Checksum\n       algorithm           %attvals.checksumalgos;\
    \ #REQUIRED\n       %attlist.global;\n     >\n   The Checksum class has one attribute:\n\
    \   algorithm\n      The cryptographic algorithm used for the computation of the\n\
    \      checksum.  The permitted values are shown below.  There is no\n      default\
    \ value.  (See also Section 10.)\n      +------+----------+------------------------------------------+\n\
    \      | Rank | Keyword  | Description                              |\n      +------+----------+------------------------------------------+\n\
    \      |    0 | MD4      | The MD4 algorithm.                       |\n      |\
    \      |          |                                          |\n      |    1 |\
    \ MD5      | The MD5 algorithm.                       |\n      |      |      \
    \    |                                          |\n      |    2 | SHA1     | The\
    \ SHA1 algorithm.                      |\n      |      |          |          \
    \                                |\n      |    3 | SHA2-256 | The SHA2 algorithm\
    \ with 256 bits length. |\n      |      |          |                         \
    \                 |\n      |    4 | SHA2-384 | The SHA2 algorithm with 384 bits\
    \ length. |\n      |      |          |                                       \
    \   |\n      |    5 | SHA2-512 | The SHA2 algorithm with 512 bits length. |\n\
    \      |      |          |                                          |\n      |\
    \    6 | CRC-32   | The CRC algorithm with 32 bits length.   |\n      |      |\
    \          |                                          |\n      |    7 | Haval\
    \    | The Haval algorithm.                     |\n      |      |          | \
    \                                         |\n      |    8 | Tiger    | The Tiger\
    \ algorithm.                     |\n      |      |          |                \
    \                          |\n      |    9 | Gost     | The Gost algorithm.  \
    \                    |\n      +------+----------+------------------------------------------+\n"
- title: 5.  Extending the IDMEF
  contents:
  - "5.  Extending the IDMEF\n   As intrusion detection systems evolve, the IDMEF\
    \ data model and DTD\n   will have to evolve along with them.  To allow new features\
    \ to be\n   added as they are developed, both the data model and the DTD can be\n\
    \   extended as described in this section.  As these extensions mature,\n   they\
    \ can then be incorporated into future versions of the\n   specification.\n"
- title: 5.1.  Extending the Data Model
  contents:
  - "5.1.  Extending the Data Model\n   There are two mechanisms for extending the\
    \ IDMEF data model,\n   inheritance and aggregation:\n   o  Inheritance denotes\
    \ a superclass/subclass type of relationship\n      where the subclass inherits\
    \ all the attributes, operations, and\n      relationships of the superclass.\
    \  This type of relationship is\n      also called a \"is-a\" or \"kind-of\" relationship.\
    \  Subclasses may\n      have additional attributes or operations that apply only\
    \ to the\n      subclass and not to the superclass.\n   o  Aggregation is a form\
    \ of association in which the whole is related\n      to its parts.  This type\
    \ of relationship is also referred to as a\n      \"part-of\" relationship.  In\
    \ this case, the aggregate class\n      contains all of its own attributes and\
    \ as many of the attributes\n      associated with its parts as required and specified\
    \ by occurrence\n      indicators.\n   Of the two mechanisms, inheritance is preferred,\
    \ because it preserves\n   the existing data model structure and also preserves\
    \ the operations\n   (methods) executed on the classes of the structure.\n   Note\
    \ that the rules for extending the IDMEF DTD (see below) set\n   limits on the\
    \ places where extensions to the data model may be made.\n"
- title: 5.2.  Extending the IDMEF DTD
  contents:
  - "5.2.  Extending the IDMEF DTD\n   There are two ways to extend the IDMEF DTD:\n\
    \   1.  The AdditionalData class (see Section 4.2.4.6) allows\n       implementors\
    \ to include arbitrary \"atomic\" data items (integers,\n       strings, etc.)\
    \ in an Alert or Heartbeat message.  This approach\n       SHOULD be used whenever\
    \ possible.  See Section 7.4 and\n       Section 7.5.\n   2.  The AdditionalData\
    \ class allows implementors to extend the IDMEF\n       DTD with additional DTD\
    \ \"modules\" that describe arbitrarily\n       complex data types and relationships.\
    \  The remainder of this\n       section describes this extension method.\n  \
    \ To extend the IDMEF DTD with a new DTD \"module\", the following steps\n   MUST\
    \ be followed:\n   1.  The document declaration MUST define a DTD location that\
    \ defines\n       the namespace and contains the location of the extension DTD,\
    \ and\n       then reference that namespace.\n   2.  Multiple extensions may be\
    \ included by defining multiple\n       namespaces and DTD locations, and referencing\
    \ them.\n   3.  Extension DTDs MUST declare all of their elements and attributes\n\
    \       in a separate XML namespace.  Extension DTDs MUST NOT declare any\n  \
    \     elements or attributes in the \"idmef\" or default namespaces.\n   4.  Extensions\
    \ MUST only be included in IDMEF Alert and Heartbeat\n       messages under an\
    \ <AdditionalData> element whose \"type\" attribute\n       contains the value\
    \ \"xml\".  For example:\n   In this example, the \"vendorco\" namespace is defined\
    \ and then\n   referenced, causing the DTD for the extension to be read by the\
    \ XML\n   parser.\n   <idmef:IDMEF-Message version=\"1.0\"\n     xmlns:xsi=\"\
    http://www.w3.org/2001/XMLSchema-instance\"\n     xmlns:idmef=\"http://iana.org/idmef\"\
    \n     xmlns:vendorco=\"http://vendor.com/idmef\"\n   xsi:schemaLocation=\"http://vendor.com/idmef\
    \ http://v.com/vidmef.xsd\">\n    <idmef:Alert messageid=\"...\">\n         ...\n\
    \    <idmef:AdditionalData type=\"xml\" meaning=\"VendorExtension\">\n     <idmef:xml>\n\
    \      <vendorco:TestVendor a=\"attribute of example\"\n       xmlns:vendorco=\"\
    http://vendor.com/idmef\"\n   xsi:schemaLocation=\"http://vendor.com/idmef http://v.com/vidmef.xsd\"\
    >\n       <vendorco:content>content element of example</vendorco:content>\n  \
    \    </vendorco:TestVendor>\n     </idmef:xml>\n    </idmef:AdditionalData>\n\
    \    </idmef:Alert>\n   </idmef:IDMEF-Message>\n   See Section 7.8 for another\
    \ example of extending the IDMEF DTD.\n"
- title: 6.  Special Considerations
  contents:
  - "6.  Special Considerations\n   This section discusses some of the special considerations\
    \ that must\n   be taken into account by implementors of the IDMEF.\n"
- title: 6.1.  XML Validity and Well-Formedness
  contents:
  - "6.1.  XML Validity and Well-Formedness\n   It is expected that IDMEF-compliant\
    \ applications will not normally\n   include the IDMEF DTD itself in their communications.\
    \  Instead, the\n   DTD will be referenced in the document type definition in\
    \ the IDMEF\n   message.  Such IDMEF documents will be well-formed and valid as\n\
    \   defined in [3].\n   Other IDMEF documents will be specified that do not include\
    \ the\n   document prolog (e.g., entries in an IDMEF-format database).  Such\n\
    \   IDMEF documents will be well-formed but not valid.\n   Generally, well-formedness\
    \ implies that a document has a single\n   element that contains everything else\
    \ (e.g., \"<Book>\") and that all\n   the other elements nest nicely within each\
    \ other without any\n   overlapping (e.g., a \"chapter\" does not start in the\
    \ middle of\n   another \"chapter\").\n   Validity further implies that not only\
    \ is the document well-formed,\n   but it also follows specific rules (contained\
    \ in the Document Type\n   Definition) about which elements are \"legal\" in the\
    \ document, how\n   those elements nest within other elements, and so on (e.g.,\
    \ a\n   \"chapter\" does not begin in the middle of a \"title\").  A document\n\
    \   cannot be valid unless it references a DTD.\n   XML processors are required\
    \ to be able to parse any well-formed\n   document, valid or not.  The purpose\
    \ of validation is to make the\n   processing of that document (what's done with\
    \ the data after it's\n   parsed) easier.  Without validation, a document may\
    \ contain elements\n   in nonsense order, elements \"invented\" by the author\
    \ that the\n   processing application doesn't understand, and so forth.\n   IDMEF\
    \ documents MUST be well-formed.  IDMEF documents SHOULD be valid\n   whenever\
    \ both possible and practical.\n"
- title: 6.2.  Unrecognized XML Tags
  contents:
  - "6.2.  Unrecognized XML Tags\n   On occasion, an IDMEF-compliant application may\
    \ receive a well-\n   formed, or even well-formed and valid, IDMEF message containing\
    \ tags\n   that it does not understand.  The tags may be either:\n   o  Recognized\
    \ as \"legitimate\" (a valid document), but the application\n      does not know\
    \ the semantic meaning of the element's content; or\n   o  Not recognized at all.\n\
    \   IDMEF-compliant applications MUST continue to process IDMEF messages\n   that\
    \ contain unknown tags, provided that such messages meet the well-\n   formedness\
    \ requirement of Section 6.1.  It is up to the individual\n   application to decide\
    \ how to process (or ignore) any content from the\n   unknown elements(s).\n"
- title: 6.3.  Analyzer-Manager Time Synchronization
  contents:
  - "6.3.  Analyzer-Manager Time Synchronization\n   Synchronization of time-of-day\
    \ clocks between analyzers and managers\n   is outside the scope of this document.\
    \  However, the following\n   comments and suggestions are offered:\n   1.  Whenever\
    \ possible, all analyzers and managers should have their\n       time-of-day clocks\
    \ synchronized to an external source such as NTP\n       [7] or SNTP [8] Global\
    \ Positioning System (GPS), Geosynchronous\n       Operational Environmental Satellite\
    \ (GOES), NIST radio station\n       WWV clocks, or some other reliable time standard.\n\
    \   2.  When external time synchronization is not possible, the IDMEF\n      \
    \ provides the <AnalyzerTime> element, which may be used to perform\n       rudimentary\
    \ time synchronization (see below).\n   3.  IDMEF-compliant applications SHOULD\
    \ permit the user to enable/\n       disable the <AnalyzerTime> method of time\
    \ synchronization as a\n       configuration option.\n   A number of caveats apply\
    \ to the use of <AnalyzerTime> for time\n   synchronization:\n   1.  <AnalyzerTime>\
    \ works best in a \"flat\" environment where analyzers\n       report up to a\
    \ single level of managers.  When a tree topology of\n       high-level managers,\
    \ intermediate relays, and analyzers is used,\n       the problem becomes more\
    \ complex.\n   2.  When intermediate message relays (managers or otherwise) are\n\
    \       involved, two scenarios are possible:\n       *  The intermediaries may\
    \ forward entire IDMEF messages, or may\n          perform aggregation or correlation,\
    \ but MUST NOT inject delay.\n          In this case, time synchronization is\
    \ end-to-end between the\n          analyzer and the highest-level manager.\n\
    \       *  The intermediaries may inject delay, due to storage or\n          additional\
    \ processing.  In this case, time synchronization\n          MUST be performed\
    \ at each hop.  This means each intermediary\n          must decompose the IDMEF\
    \ message, adjust all time values, and\n          then reconstruct the message\
    \ before sending it on.\n   3.  When the environment is mixed, with some analyzers\
    \ and managers\n       using external time synchronization and some not, all managers\n\
    \       and intermediaries must perform <AnalyzerTime> synchronization.\n    \
    \   This is because determining whether or not compensation is\n       actually\
    \ needed between two parties rapidly becomes very complex,\n       and requires\
    \ knowledge of other parts of the topology.\n   4.  If an alert can take alternate\
    \ paths, or be stored in multiple\n       locations, the recorded times may be\
    \ different depending on the\n       path taken.\n   The above being said, <AnalyzerTime>\
    \ synchronization is probably\n   still better than nothing in many environments.\
    \  To implement this\n   type of synchronization, the following procedure is suggested:\n\
    \   1.  When an analyzer or manager sends an IDMEF message, it should\n      \
    \ place the current value of its time-of-day clock in an\n       <AnalyzerTime>\
    \ element.  This should occur as late as possible in\n       the message transmission\
    \ process, ideally right before the\n       message is \"put on the wire\".\n\
    \   2.  When a manager receives an IDMEF message, it should compute the\n    \
    \   difference between its own time-of-day clock and the time in the\n       <AnalyzerTime>\
    \ element of the message.  This difference should\n       then be used to adjust\
    \ the times in the <CreateTime> and\n       <DetectTime> elements (NTP timestamps\
    \ should also be adjusted).\n   3.  If the manager is an intermediary and sends\
    \ the IDMEF message on\n       to a higher-level manager, and hop-by-hop synchronization\
    \ is in\n       effect, it should regenerate the <AnalyzerTime> value to contain\n\
    \       the value of its own time-of-day clock.\n"
- title: 6.4.  NTP Timestamp Wrap-Around
  contents:
  - "6.4.  NTP Timestamp Wrap-Around\n   From [8]:\n      Note that, since some time\
    \ in 1968 (second 2,147,483,648) the most\n      significant bit (bit 0 of the\
    \ integer part) has been set and that\n      the 64-bit field will overflow some\
    \ time in 2036 (second\n      4,294,967,296).  Should NTP or SNTP be in use in\
    \ 2036, some\n      external means will be necessary to qualify time relative\
    \ to 1900\n      and time relative to 2036 (and other multiples of 136 years).\n\
    \      There will exist a 200-picosecond interval, henceforth ignored,\n     \
    \ every 136 years when the 64-bit field will be 0, which by\n      convention\
    \ is interpreted as an invalid or unavailable timestamp.\n   IDMEF-compliant applications\
    \ MUST NOT send a zero-valued NTP\n   timestamp unless they mean to indicate that\
    \ it is invalid or\n   unavailable.  If an IDMEF-compliant application must send\
    \ an IDMEF\n   message at the time of rollover, the application should wait for\
    \ 200\n   picoseconds until the timestamp will have a non-zero value.\n   Also\
    \ from [8]:\n      As the NTP timestamp format has been in use for the last 17\
    \ years,\n      it remains a possibility that it will be in use 40 years from\
    \ now\n      when the seconds field overflows.  As it is probably inappropriate\n\
    \      to archive NTP timestamps before bit 0 was set in 1968, a\n      convenient\
    \ way to extend the useful life of NTP timestamps is the\n      following convention:\n\
    \         If bit 0 is set, the UTC time is in the range 1968-2036 and UTC\n  \
    \       time is reckoned from 0h 0m 0s UTC on 1 January 1900.\n         If bit\
    \ 0 is not set, the time is in the range 2036-2104 and UTC\n         time is reckoned\
    \ from 6h 28m 16s UTC on 7 February 2036.\n      Note that when calculating the\
    \ correspondence, 2000 is not a leap\n      year.  Note also that leap seconds\
    \ are not counted in the\n      reckoning.\n   IDMEF-compliant applications in\
    \ use after 2036-02-07T06:28:16Z MUST\n   adhere to the above convention.\n"
- title: 6.5.  Digital Signatures
  contents:
  - "6.5.  Digital Signatures\n   Standard XML digital signature processing rules\
    \ and syntax are\n   specified in [13].  XML Signatures provide integrity, message\n\
    \   authentication, and/or signer authentication services for data of any\n  \
    \ type, whether located within the XML that includes the signature or\n   elsewhere.\n\
    \   The IDMEF requirements document [2] assigns responsibility for\n   message\
    \ integrity and authentication to the communications protocol,\n   not the message\
    \ format.  However, in situations where IDMEF messages\n   are exchanged over\
    \ other, less secure protocols, or in cases where\n   the digital signatures must\
    \ be archived for later use, the inclusion\n   of digital signatures within an\
    \ IDMEF message itself may be\n   desirable.\n   Specifications for the use of\
    \ digital signatures within IDMEF\n   messages are outside the scope of this document.\
    \  However, if such\n   functionality is needed, use of the XML Signature standard\
    \ is\n   RECOMMENDED.\n"
- title: 7.  Examples
  contents:
  - "7.  Examples\n   The examples shown in this section demonstrate how the IDMEF\
    \ is used\n   to encode alert data.  These examples are for illustrative purposes\n\
    \   only, and do not necessarily represent the only (or even the \"best\")\n \
    \  way to encode these particular alerts.  These examples should not be\n   taken\
    \ as guidelines on how alerts should be classified.\n"
- title: 7.1.  Denial-of-Service Attacks
  contents:
  - "7.1.  Denial-of-Service Attacks\n   The following examples show how some common\
    \ denial-of-service attacks\n   could be represented in the IDMEF.\n"
- title: 7.1.1.  The "teardrop" Attack
  contents:
  - "7.1.1.  The \"teardrop\" Attack\n   Network-based detection of the \"teardrop\"\
    \ attack.  This shows the\n   basic format of an alert.\n   <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message xmlns:idmef=\"http://iana.org/idmef\"\
    \n                        version=\"1.0\">\n     <idmef:Alert messageid=\"abc123456789\"\
    >\n       <idmef:Analyzer analyzerid=\"hq-dmz-analyzer01\">\n         <idmef:Node\
    \ category=\"dns\">\n           <idmef:location>Headquarters DMZ Network</idmef:location>\n\
    \           <idmef:name>analyzer01.example.com</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc723b45.0xef449129\"\
    >\n         2000-03-09T10:01:25.93464-05:00\n       </idmef:CreateTime>\n    \
    \   <idmef:Source ident=\"a1b2c3d4\">\n         <idmef:Node ident=\"a1b2c3d4-001\"\
    \ category=\"dns\">\n           <idmef:name>badguy.example.net</idmef:name>\n\
    \           <idmef:Address ident=\"a1b2c3d4-002\"\n                          category=\"\
    ipv4-net-mask\">\n             <idmef:address>192.0.2.50</idmef:address>\n   \
    \          <idmef:netmask>255.255.255.255</idmef:netmask>\n           </idmef:Address>\n\
    \         </idmef:Node>\n       </idmef:Source>\n       <idmef:Target ident=\"\
    d1c2b3a4\">\n         <idmef:Node ident=\"d1c2b3a4-001\" category=\"dns\">\n \
    \          <idmef:Address category=\"ipv4-addr-hex\">\n             <idmef:address>0xde796f70</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n       </idmef:Target>\n\
    \       <idmef:Classification text=\"Teardrop detected\">\n         <idmef:Reference\
    \ origin=\"bugtraqid\">\n           <idmef:name>124</idmef:name>\n           <idmef:url>http://www.securityfocus.com/bid/124</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 7.1.2.  The "ping of death" Attack
  contents:
  - "7.1.2.  The \"ping of death\" Attack\n   Network-based detection of the \"ping\
    \ of death\" attack.  Note the\n   identification of multiple targets, and the\
    \ identification of the\n   source as a spoofed address.\n   NOTE: The URL has\
    \ been cut to fit the IETF formating requirements.\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert messageid=\"abc123456789\">\n    \
    \   <idmef:Analyzer analyzerid=\"bc-sensor01\">\n         <idmef:Node category=\"\
    dns\">\n           <idmef:name>sensor.example.com</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc71f4f5.0xef449129\"\
    >\n         2000-03-09T10:01:25.93464Z\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"a1a2\" spoofed=\"yes\">\n         <idmef:Node ident=\"a1a2-1\">\n  \
    \         <idmef:Address ident=\"a1a2-2\" category=\"ipv4-addr\">\n          \
    \   <idmef:address>192.0.2.200</idmef:address>\n           </idmef:Address>\n\
    \         </idmef:Node>\n       </idmef:Source>\n       <idmef:Target ident=\"\
    b3b4\">\n         <idmef:Node>\n           <idmef:Address ident=\"b3b4-1\" category=\"\
    ipv4-addr\">\n             <idmef:address>192.0.2.50</idmef:address>\n       \
    \    </idmef:Address>\n         </idmef:Node>\n       </idmef:Target>\n      \
    \ <idmef:Target ident=\"c5c6\">\n         <idmef:Node ident=\"c5c6-1\" category=\"\
    nisplus\">\n           <idmef:name>lollipop</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Target>\n       <idmef:Target ident=\"d7d8\">\n         <idmef:Node\
    \ ident=\"d7d8-1\">\n           <idmef:location>Cabinet B10</idmef:location>\n\
    \           <idmef:name>Cisco.router.b10</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Target>\n       <idmef:Classification text=\"Ping-of-death detected\"\
    >\n         <idmef:Reference origin=\"cve\">\n           <idmef:name>CVE-1999-128</idmef:name>\n\
    \           <idmef:url>http://www.cve.mitre.org/cgi-bin/\n           cvename.cgi?name=CVE-1999-128</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 7.2.  Port Scanning Attacks
  contents:
  - "7.2.  Port Scanning Attacks\n   The following examples show how some common port\
    \ scanning attacks\n   could be represented in the IDMEF.\n"
- title: 7.2.1.  Connection to a Disallowed Service
  contents:
  - "7.2.1.  Connection to a Disallowed Service\n   Host-based detection of a policy\
    \ violation (attempt to obtain\n   information via \"finger\").  Note the identification\
    \ of the target\n   service, as well as the originating user (obtained, e.g.,\
    \ through RFC\n   1413 [11]).\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
    \   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert messageid=\"abc123456789\">\n    \
    \   <idmef:Analyzer analyzerid=\"bc-sensor01\">\n         <idmef:Node category=\"\
    dns\">\n           <idmef:name>sensor.example.com</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc72541d.0x00000000\"\
    >\n         2000-03-09T18:47:25+02:00\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"a123\">\n         <idmef:Node ident=\"a123-01\">\n           <idmef:Address\
    \ ident=\"a123-02\" category=\"ipv4-addr\">\n             <idmef:address>192.0.2.200</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n         <idmef:User ident=\"\
    q987-03\" category=\"os-device\">\n           <idmef:UserId ident=\"q987-04\"\
    \ type=\"target-user\">\n             <idmef:name>badguy</idmef:name>\n      \
    \     </idmef:UserId>\n         </idmef:User>\n         <idmef:Service ident=\"\
    a123-03\">\n           <idmef:port>31532</idmef:port>\n         </idmef:Service>\n\
    \       </idmef:Source>\n       <idmef:Target ident=\"z456\">\n         <idmef:Node\
    \ ident=\"z456-01\" category=\"nis\">\n           <idmef:name>myhost</idmef:name>\n\
    \           <idmef:Address ident=\"z456-02\" category=\"ipv4-addr\">\n       \
    \      <idmef:address>192.0.2.50</idmef:address>\n           </idmef:Address>\n\
    \         </idmef:Node>\n         <idmef:Service ident=\"z456-03\">\n        \
    \   <idmef:name>finger</idmef:name>\n           <idmef:port>79</idmef:port>\n\
    \         </idmef:Service>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"Portscan\">\n         <idmef:Reference origin=\"vendor-specific\">\n\
    \           <idmef:name>finger</idmef:name>\n           <idmef:url>http://www.vendor.com/finger</idmef:url>\n\
    \         </idmef:Reference>\n         <idmef:Reference origin=\"vendor-specific\"\
    \n                          meaning=\"general documentation\">\n           <idmef:name>Distributed\
    \ attack</idmef:name>\n           <idmef:url>http://www.vendor.com/distributed</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 7.2.2.  Simple Port Scanning
  contents:
  - "7.2.2.  Simple Port Scanning\n   Network-based detection of a port scan.  This\
    \ shows detection by a\n   single analyzer; see Section 7.5 for the same attack\
    \ as detected by a\n   correlation engine.  Note the use of <portlist> to show\
    \ the ports\n   that were scanned.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                  xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert messageid=\"abc123456789\">\n    \
    \   <idmef:Analyzer analyzerid=\"hq-dmz-analyzer62\">\n         <idmef:Node category=\"\
    dns\">\n           <idmef:location>Headquarters Web Server</idmef:location>\n\
    \           <idmef:name>analyzer62.example.com</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc72b2b4.0x00000000\"\
    >\n         2000-03-09T15:31:00-08:00\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"abc01\">\n         <idmef:Node ident=\"abc01-01\">\n           <idmef:Address\
    \ ident=\"abc01-02\" category=\"ipv4-addr\">\n             <idmef:address>192.0.2.200</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n       </idmef:Source>\n\
    \       <idmef:Target ident=\"def01\">\n         <idmef:Node ident=\"def01-01\"\
    \ category=\"dns\">\n           <idmef:name>www.example.com</idmef:name>\n   \
    \        <idmef:Address ident=\"def01-02\" category=\"ipv4-addr\">\n         \
    \    <idmef:address>192.0.2.50</idmef:address>\n           </idmef:Address>\n\
    \         </idmef:Node>\n         <idmef:Service ident=\"def01-03\">\n       \
    \    <idmef:portlist>5-25,37,42,43,53,69-119,123-514\n           </idmef:portlist>\n\
    \         </idmef:Service>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"simple portscan\">\n         <idmef:Reference origin=\"vendor-specific\"\
    >\n           <idmef:name>portscan</idmef:name>\n           <idmef:url>http://www.vendor.com/portscan</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 7.3.  Local Attacks
  contents:
  - "7.3.  Local Attacks\n   The following examples show how some common local host\
    \ attacks could\n   be represented in the IDMEF.\n"
- title: 7.3.1.  The "loadmodule" Attack
  contents:
  - "7.3.1.  The \"loadmodule\" Attack\n   Host-based detection of the \"loadmodule\"\
    \ exploit.  This attack\n   involves tricking the \"loadmodule\" program into\
    \ running another\n   program; since \"loadmodule\" is set-user-id \"root\", the\
    \ executed\n   program runs with super-user privileges.  Note the use of <User>\
    \ and\n   <Process> to identify the user attempting the exploit and how he's\n\
    \   doing it.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message\
    \ version=\"1.0\"\n                        xmlns:idmef=\"http://iana.org/idmef\"\
    >\n     <idmef:Alert messageid=\"abc123456789\">\n       <idmef:Analyzer analyzerid=\"\
    bc-fs-sensor13\">\n         <idmef:Node category=\"dns\">\n           <idmef:name>fileserver.example.com</idmef:name>\n\
    \         </idmef:Node>\n         <idmef:Process>\n           <idmef:name>monitor</idmef:name>\n\
    \           <idmef:pid>8956</idmef:pid>\n           <idmef:arg>monitor</idmef:arg>\n\
    \           <idmef:arg>-d</idmef:arg>\n           <idmef:arg>-m</idmef:arg>\n\
    \           <idmef:arg>idmanager.example.com</idmef:arg>\n           <idmef:arg>-l</idmef:arg>\n\
    \           <idmef:arg>/var/logs/idlog</idmef:arg>\n         </idmef:Process>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc7221c0.0x4ccccccc\"\
    >\n         2000-03-09T08:12:32.3-05:00\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"a1a2\">\n         <idmef:User ident=\"a1a2-01\" category=\"os-device\"\
    >\n           <idmef:UserId ident=\"a1a2-02\"\n                         type=\"\
    original-user\">\n             <idmef:name>joe</idmef:name>\n             <idmef:number>13243</idmef:number>\n\
    \           </idmef:UserId>\n         </idmef:User>\n         <idmef:Process ident=\"\
    a1a2-03\">\n           <idmef:name>loadmodule</idmef:name>\n           <idmef:path>/usr/openwin/bin</idmef:path>\n\
    \         </idmef:Process>\n       </idmef:Source>\n       <idmef:Target ident=\"\
    z3z4\">\n         <idmef:Node ident=\"z3z4-01\" category=\"dns\">\n          \
    \ <idmef:name>fileserver.example.com</idmef:name>\n         </idmef:Node>\n  \
    \     </idmef:Target>\n       <idmef:Classification text=\"Loadmodule attack\"\
    \n                             ident=\"loadmodule\">\n         <idmef:Reference\
    \ origin=\"bugtraqid\">\n           <idmef:name>33</idmef:name>\n           <idmef:url>http://www.securityfocus.com</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n   The Intrusion Detection System (IDS) could also\
    \ indicate that the\n   target user is the \"root\" user, and show the attempted\
    \ command; the\n   alert might then look like:\n   <?xml version=\"1.0\" encoding=\"\
    UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert messageid=\"abc123456789\">\n    \
    \   <idmef:Analyzer analyzerid=\"bc-fs-sensor13\">\n         <idmef:Node category=\"\
    dns\">\n           <idmef:name>fileserver.example.com</idmef:name>\n         </idmef:Node>\n\
    \         <idmef:Process>\n           <idmef:name>monitor</idmef:name>\n     \
    \      <idmef:pid>8956</idmef:pid>\n           <idmef:arg>monitor</idmef:arg>\n\
    \           <idmef:arg>-d</idmef:arg>\n           <idmef:arg>-m</idmef:arg>\n\
    \           <idmef:arg>idmanager.example.com</idmef:arg>\n           <idmef:arg>-l</idmef:arg>\n\
    \           <idmef:arg>/var/logs/idlog</idmef:arg>\n         </idmef:Process>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc7221c0.0x4ccccccc\"\
    >\n         2000-03-09T08:12:32.3-05:00\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"a1a2\">\n         <idmef:User ident=\"a1a2-01\" category=\"os-device\"\
    >\n           <idmef:UserId ident=\"a1a2-02\" type=\"original-user\">\n      \
    \       <idmef:name>joe</idmef:name>\n             <idmef:number>13243</idmef:number>\n\
    \           </idmef:UserId>\n         </idmef:User>\n         <idmef:Process ident=\"\
    a1a2-03\">\n           <idmef:name>loadmodule</idmef:name>\n           <idmef:path>/usr/openwin/bin</idmef:path>\n\
    \         </idmef:Process>\n       </idmef:Source>\n       <idmef:Target ident=\"\
    z3z4\">\n         <idmef:Node ident=\"z3z4-01\" category=\"dns\">\n          \
    \ <idmef:name>fileserver.example.com</idmef:name>\n         </idmef:Node>\n  \
    \       <idmef:User ident=\"z3z4-02\" category=\"os-device\">\n           <idmef:UserId\
    \ ident=\"z3z4-03\" type=\"target-user\">\n             <idmef:name>root</idmef:name>\n\
    \             <idmef:number>0</idmef:number>\n           </idmef:UserId>\n   \
    \      </idmef:User>\n         <idmef:Process ident=\"z3z4-04\">\n           <idmef:name>sh</idmef:name>\n\
    \           <idmef:pid>25134</idmef:pid>\n           <idmef:path>/bin/sh</idmef:path>\n\
    \         </idmef:Process>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"Loadmodule attack\"\n                             ident=\"loadmodule\"\
    >\n       </idmef:Classification>\n     </idmef:Alert>\n   </idmef:IDMEF-Message>\n\
    \   Note that the identification of the classification is used.\n"
- title: 7.3.2.  The "phf" Attack
  contents:
  - "7.3.2.  The \"phf\" Attack\n   Network-based detection of the \"phf\" attack.\
    \  Note the use of the\n   <WebService> element to provide more details about\
    \ this particular\n   attack.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\
    \   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert messageid=\"abc123456789\">\n    \
    \   <idmef:Analyzer analyzerid=\"bc-sensor01\">\n         <idmef:Node category=\"\
    dns\">\n           <idmef:name>sensor.example.com</idmef:name>\n         </idmef:Node>\n\
    \       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"0xbc71e980.0x00000000\"\
    >\n         2000-03-09T08:12:32-01:00\n       </idmef:CreateTime>\n       <idmef:Source\
    \ ident=\"abc123\">\n         <idmef:Node ident=\"abc123-001\">\n           <idmef:Address\
    \ ident=\"abc123-002\"\n                          category=\"ipv4-addr\">\n  \
    \           <idmef:address>192.0.2.200</idmef:address>\n           </idmef:Address>\n\
    \         </idmef:Node>\n         <idmef:Service ident=\"abc123-003\">\n     \
    \      <idmef:port>21534</idmef:port>\n         </idmef:Service>\n       </idmef:Source>\n\
    \       <idmef:Target ident=\"xyz789\">\n         <idmef:Node ident=\"xyz789-001\"\
    \ category=\"dns\">\n           <idmef:name>www.example.com</idmef:name>\n   \
    \        <idmef:Address ident=\"xyz789-002\"\n                          category=\"\
    ipv4-addr\">\n             <idmef:address>192.0.2.100</idmef:address>\n      \
    \     </idmef:Address>\n         </idmef:Node>\n         <idmef:Service>\n   \
    \        <idmef:port>8080</idmef:port>\n           <idmef:WebService>\n      \
    \       <idmef:url>\n             http://www.example.com/cgi-bin/phf?/etc/group\n\
    \             </idmef:url>\n             <idmef:cgi>/cgi-bin/phf</idmef:cgi>\n\
    \             <idmef:http-method>GET</idmef:http-method>\n           </idmef:WebService>\n\
    \         </idmef:Service>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"phf attack\">\n         <idmef:Reference origin=\"bugtraqid\">\n    \
    \       <idmef:name>629</idmef:name>\n           <idmef:url>\n           http://www.securityfocus.com/bid/629\n\
    \           </idmef:url>\n         </idmef:Reference>\n       </idmef:Classification>\n\
    \     </idmef:Alert>\n   </idmef:IDMEF-Message>\n"
- title: 7.3.3.  File Modification
  contents:
  - "7.3.3.  File Modification\n   Host-based detection of a race condition attack.\
    \  Note the use of the\n   <File> to provide information about the files that\
    \ are used to\n   perform the attack.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert>\n       <idmef:Analyzer analyzerid=\"\
    bids-192.0.2.1\"\n                       ostype=\"Linux\"\n                  \
    \     osversion=\"2.2.16-3\">\n         <idmef:Node category=\"hosts\">\n    \
    \       <idmef:name>etude</idmef:name>\n           <idmef:Address category=\"\
    ipv4-addr\">\n             <idmef:address>192.0.2.1</idmef:address>\n        \
    \   </idmef:Address>\n         </idmef:Node>\n       </idmef:Analyzer>\n     \
    \  <idmef:CreateTime ntpstamp=\"0xbc71e980.0x00000000\">\n         2000-03-09T08:12:32-01:00\n\
    \       </idmef:CreateTime>\n       <idmef:Source spoofed=\"no\">\n         <idmef:Node>\n\
    \           <idmef:location>console</idmef:location>\n           <idmef:Address\
    \ category=\"ipv4-addr\">\n             <idmef:address>192.0.2.1</idmef:address>\n\
    \           </idmef:Address>\n           </idmef:Node>\n       </idmef:Source>\n\
    \       <idmef:Target decoy=\"no\">\n         <idmef:Node>\n           <idmef:location>local</idmef:location>\n\
    \           <idmef:Address category=\"ipv4-addr\">\n             <idmef:address>192.0.2.1</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n         <idmef:User category=\"\
    os-device\">\n           <idmef:UserId type=\"original-user\">\n             <idmef:number>456</idmef:number>\n\
    \           </idmef:UserId>\n           <idmef:UserId type=\"current-user\">\n\
    \             <idmef:name>fred</idmef:name>\n             <idmef:number>456</idmef:number>\n\
    \           </idmef:UserId>\n           <idmef:UserId type=\"user-privs\">\n \
    \            <idmef:number>456</idmef:number>\n           </idmef:UserId>\n  \
    \       </idmef:User>\n         <idmef:File category=\"current\" fstype=\"tmpfs\"\
    >\n           <idmef:name>xxx000238483</idmef:name>\n           <idmef:path>/tmp/xxx000238483</idmef:path>\n\
    \           <idmef:FileAccess>\n             <idmef:UserId type=\"user-privs\"\
    >\n               <idmef:name>alice</idmef:name>\n               <idmef:number>777</idmef:number>\n\
    \             </idmef:UserId>\n             <idmef:permission perms=\"read\" />\n\
    \             <idmef:permission perms=\"write\" />\n             <idmef:permission\
    \ perms=\"delete\" />\n             <idmef:permission perms=\"changePermissions\"\
    \ />\n           </idmef:FileAccess>\n           <idmef:FileAccess>\n        \
    \     <idmef:UserId type=\"group-privs\">\n               <idmef:name>user</idmef:name>\n\
    \               <idmef:number>42</idmef:number>\n             </idmef:UserId>\n\
    \             <idmef:permission perms=\"read\" />\n             <idmef:permission\
    \ perms=\"write\" />\n             <idmef:permission perms=\"delete\" />\n   \
    \        </idmef:FileAccess>\n           <idmef:FileAccess>\n             <idmef:UserId\
    \ type=\"other-privs\">\n               <idmef:name>world</idmef:name>\n     \
    \        </idmef:UserId>\n             <idmef:permission perms=\"noAccess\" />\n\
    \           </idmef:FileAccess>\n           <idmef:Linkage category=\"symbolic-link\"\
    >\n             <idmef:name>passwd</idmef:name>\n             <idmef:path>/etc/passwd</idmef:path>\n\
    \           </idmef:Linkage>\n         </idmef:File>\n       </idmef:Target>\n\
    \       <idmef:Classification text=\"DOM race condition\">\n         <idmef:Reference\
    \ origin=\"vendor-specific\">\n           <idmef:name>DOM race condition</idmef:name>\n\
    \           <idmef:url>file://attack-info/race.html\n           </idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 7.4.  System Policy Violation
  contents:
  - "7.4.  System Policy Violation\n   In this example, logins are restricted to daytime\
    \ hours.  The alert\n   reports a violation of this policy that occurs when a\
    \ user logs in a\n   little after 10:00 pm.  Note the use of <AdditionalData>\
    \ to provide\n   information about the policy being violated.\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\n        \
    \                xmlns:idmef=\"http://iana.org/idmef\">\n     <idmef:Alert messageid=\"\
    abc123456789\">\n       <idmef:Analyzer analyzerid=\"bc-ds-01\">\n         <idmef:Node\
    \ category=\"dns\">\n           <idmef:name>dialserver.example.com</idmef:name>\n\
    \         </idmef:Node>\n       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"\
    0xbc72e7ef.0x00000000\">\n         2000-03-09T22:18:07-05:00\n       </idmef:CreateTime>\n\
    \       <idmef:Source ident=\"s01\">\n         <idmef:Node ident=\"s01-1\">\n\
    \           <idmef:Address category=\"ipv4-addr\">\n             <idmef:address>127.0.0.1</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n         <idmef:Service\
    \ ident=\"s01-2\">\n           <idmef:port>4325</idmef:port>\n         </idmef:Service>\n\
    \       </idmef:Source>\n       <idmef:Target ident=\"t01\">\n         <idmef:Node\
    \ ident=\"t01-1\" category=\"dns\">\n           <idmef:name>mainframe.example.com</idmef:name>\n\
    \         </idmef:Node>\n         <idmef:User ident=\"t01-2\" category=\"os-device\"\
    >\n           <idmef:UserId ident=\"t01-3\" type=\"current-user\">\n         \
    \    <idmef:name>louis</idmef:name>\n             <idmef:number>501</idmef:number>\n\
    \           </idmef:UserId>\n         </idmef:User>\n         <idmef:Service ident=\"\
    t01-4\">\n           <idmef:name>login</idmef:name>\n           <idmef:port>23</idmef:port>\n\
    \         </idmef:Service>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"Login policy violation\">\n         <idmef:Reference origin=\"user-specific\"\
    >\n           <idmef:name>out-of-hours activity</idmef:name>\n           <idmef:url>http://my.company.com/policies\n\
    \           </idmef:url>\n         </idmef:Reference>\n       </idmef:Classification>\n\
    \       <idmef:AdditionalData type=\"date-time\"\n                           \
    \  meaning=\"start-time\">\n         <idmef:date-time>2000-03-09T07:00:00-05:00</idmef:date-time>\n\
    \       </idmef:AdditionalData>\n       <idmef:AdditionalData type=\"date-time\"\
    \n                             meaning=\"stop-time\">\n         <idmef:date-time>2000-03-09T19:30:00-05:00</idmef:date-time>\n\
    \       </idmef:AdditionalData>\n     </idmef:Alert>\n   </idmef:IDMEF-Message>\n"
- title: 7.5.  Correlated Alerts
  contents:
  - "7.5.  Correlated Alerts\n   The following example shows how the port scan alert\
    \ from\n   Section 7.2.2 could be represented if it had been detected and sent\n\
    \   from a correlation engine, instead of a single analyzer.\n   <?xml version=\"\
    1.0\" encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\n        \
    \                xmlns:idmef=\"http://iana.org/idmef\">\n     <idmef:Alert messageid=\"\
    abc123456789\">\n       <idmef:Analyzer analyzerid=\"bc-corr-01\">\n         <idmef:Node\
    \ category=\"dns\">\n           <idmef:name>correlator01.example.com</idmef:name>\n\
    \         </idmef:Node>\n       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"\
    0xbc72423b.0x00000000\">\n         2000-03-09T15:31:07Z\n       </idmef:CreateTime>\n\
    \       <idmef:Source ident=\"a1\">\n         <idmef:Node ident=\"a1-1\">\n  \
    \         <idmef:Address ident=\"a1-2\" category=\"ipv4-addr\">\n            \
    \ <idmef:address>192.0.2.200</idmef:address>\n           </idmef:Address>\n  \
    \       </idmef:Node>\n       </idmef:Source>\n       <idmef:Target ident=\"a2\"\
    >\n         <idmef:Node ident=\"a2-1\" category=\"dns\">\n           <idmef:name>www.example.com</idmef:name>\n\
    \           <idmef:Address ident=\"a2-2\" category=\"ipv4-addr\">\n          \
    \   <idmef:address>192.0.2.50</idmef:address>\n           </idmef:Address>\n \
    \        </idmef:Node>\n         <idmef:Service ident=\"a2-3\">\n           <idmef:portlist>5-25,37,42,43,53,69-119,123-514\n\
    \           </idmef:portlist>\n         </idmef:Service>\n       </idmef:Target>\n\
    \       <idmef:Classification text=\"Portscan\">\n         <idmef:Reference origin=\"\
    vendor-specific\">\n           <idmef:name>portscan</idmef:name>\n           <idmef:url>http://www.vendor.com/portscan</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n       <idmef:CorrelationAlert>\n\
    \         <idmef:name>multiple ports in short time</idmef:name>\n         <idmef:alertident>123456781</idmef:alertident>\n\
    \         <idmef:alertident>123456782</idmef:alertident>\n         <idmef:alertident>123456783</idmef:alertident>\n\
    \         <idmef:alertident>123456784</idmef:alertident>\n         <idmef:alertident>123456785</idmef:alertident>\n\
    \         <idmef:alertident>123456786</idmef:alertident>\n         <idmef:alertident\
    \ analyzerid=\"a1b2c3d4\">987654321\n         </idmef:alertident>\n         <idmef:alertident\
    \ analyzerid=\"a1b2c3d4\">987654322\n         </idmef:alertident>\n       </idmef:CorrelationAlert>\n\
    \     </idmef:Alert>\n   </idmef:IDMEF-Message>\n"
- title: 7.6.  Analyzer Assessments
  contents:
  - "7.6.  Analyzer Assessments\n   Host-based detection of a successful unauthorized\
    \ acquisition of root\n   access through the eject buffer overflow.  Note the\
    \ use of\n   <Assessment> to provide information about the analyzer's evaluation\n\
    \   of and reaction to the attack.\n   <?xml version=\"1.0\" encoding=\"UTF-8\"\
    ?>\n   <idmef:IDMEF-Message version=\"1.0\"\n                        xmlns:idmef=\"\
    http://iana.org/idmef\">\n     <idmef:Alert>\n       <idmef:Analyzer analyzerid=\"\
    bids-192.0.2.1\">\n       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"\
    0xbc71e980.0x00000000\">\n         2000-03-09T08:12:32-01:00\n       </idmef:CreateTime>\n\
    \       <idmef:Source spoofed=\"no\">\n         <idmef:Node>\n           <idmef:location>console</idmef:location>\n\
    \           <idmef:Address category=\"ipv4-addr\">\n             <idmef:address>192.0.2.1</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n       </idmef:Source>\n\
    \       <idmef:Target decoy=\"no\">\n         <idmef:Node>\n           <idmef:location>local</idmef:location>\n\
    \           <idmef:Address category=\"ipv4-addr\">\n             <idmef:address>192.0.2.1</idmef:address>\n\
    \           </idmef:Address>\n         </idmef:Node>\n         <idmef:User category=\"\
    os-device\">\n           <idmef:UserId type=\"original-user\">\n             <idmef:number>456</idmef:number>\n\
    \           </idmef:UserId>\n           <idmef:UserId type=\"current-user\">\n\
    \             <idmef:name>root</idmef:name>\n             <idmef:number>0</idmef:number>\n\
    \           </idmef:UserId>\n           <idmef:UserId type=\"user-privs\">\n \
    \            <idmef:number>0</idmef:number>\n           </idmef:UserId>\n    \
    \     </idmef:User>\n         <idmef:Process>\n           <idmef:name>eject</idmef:name>\n\
    \           <idmef:pid>32451</idmef:pid>\n           <idmef:path>/usr/bin/eject</idmef:path>\n\
    \           <idmef:arg>\\x90\\x80\\x3f\\xff...\\x08/bin/sh</idmef:arg>\n     \
    \    </idmef:Process>\n       </idmef:Target>\n       <idmef:Classification\n\
    \           text=\"Unauthorized administrative access\">\n         <idmef:Reference\
    \ origin=\"vendor-specific\">\n           <idmef:name>Unauthorized user to superuser</idmef:name>\n\
    \           <idmef:url>file://attack-info/u2s.html</idmef:url>\n         </idmef:Reference>\n\
    \       </idmef:Classification>\n       <idmef:Assessment>\n         <idmef:Impact\
    \ severity=\"high\" completion=\"succeeded\"\n                 type=\"admin\"\
    />\n         <idmef:Action category=\"notification-sent\">\n           page\n\
    \           </idmef:Action>\n         <idmef:Action category=\"block-installed\"\
    >\n           disabled user (fred)\n         </idmef:Action>\n         <idmef:Action\
    \ category=\"taken-offline\">\n           logout user (fred)\n         </idmef:Action>\n\
    \         <idmef:Confidence rating=\"high\"/>\n       </idmef:Assessment>\n  \
    \   </idmef:Alert>\n   </idmef:IDMEF-Message>\n"
- title: 7.7.  Heartbeat
  contents:
  - "7.7.  Heartbeat\n   This example shows a Heartbeat message that provides \"I'm\
    \ alive and\n   working\" information to the manager.  Note the use of\n   <AdditionalData>\
    \ elements, with \"meaning\" attributes, to provide some\n   additional information.\n\
    \   <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message version=\"\
    1.0\"\n                  xmlns:idmef=\"http://iana.org/idmef\">\n     <idmef:Heartbeat\
    \ messageid=\"abc123456789\">\n       <idmef:Analyzer analyzerid=\"hq-dmz-analyzer01\"\
    >\n         <idmef:Node category=\"dns\">\n           <idmef:location>Headquarters\
    \ DMZ Network</idmef:location>\n           <idmef:name>analyzer01.example.com</idmef:name>\n\
    \         </idmef:Node>\n       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"\
    0xbc722ebe.0x00000000\">\n         2000-03-09T14:07:58Z\n       </idmef:CreateTime>\n\
    \       <idmef:AdditionalData type=\"real\" meaning=\"%memused\">\n         <idmef:real>62.5</idmef:real>\n\
    \       </idmef:AdditionalData>\n       <idmef:AdditionalData type=\"real\" meaning=\"\
    %diskused\">\n         <idmef:real>87.1</idmef:real>\n       </idmef:AdditionalData>\n\
    \     </idmef:Heartbeat>\n   </idmef:IDMEF-Message>\n"
- title: 7.8.  XML Extension
  contents:
  - "7.8.  XML Extension\n   The following example shows how to extend the IDMEF DTD.\
    \  In the\n   example, the VendorCo company has decided it wants to add geographic\n\
    \   information to the Node class.  To do this, VendorCo creates a\n   Document\
    \ Type Definition or DTD that defines how their class will be\n   formatted:\n\
    \   <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n             \
    \  xmlns:vendorco=\"http://vendor.com/idmef\"\n               targetNamespace=\"\
    http://vendor.com/idmef\"\n               elementFormDefault=\"qualified\" >\n\
    \     <xsd:annotation>\n       <xsd:documentation>\n         Intrusion Detection\
    \ Message Exchange Format (IDMEF) Extension\n         for geographic information\n\
    \       </xsd:documentation>\n     </xsd:annotation>\n     <xsd:complexType name=\"\
    NodeGeoType\">\n       <xsd:sequence>\n       <xsd:element name=\"latitude\"\n\
    \                    type=\"xsd:string\" />\n       <xsd:element name=\"longitude\"\
    \n                    type=\"xsd:string\" />\n       <xsd:element name=\"elevation\"\
    \n                    type=\"xsd:string\"\n                    minOccurs=\"0\"\
    \n                    maxOccurs=\"1\" />\n           </xsd:sequence>\n       <xsd:attribute\
    \ name=\"node-ident\"\n                      type=\"xsd:integer\"\n          \
    \            use=\"required\"/>\n     </xsd:complexType>\n     <xsd:element name=\"\
    NodeGeography\" type=\"vendorco:NodeGeoType\" />\n   </xsd:schema>\n   The VendorCo:NodeGeography\
    \ class will contain the geographic data in\n   three aggregate classes, VendorCo:latitude,\
    \ VendorCo:longitude, and\n   VendorCo:elevation.  To associate the information\
    \ in this class with\n   a particular node, the \"VendorCo:node-ident\" attribute\
    \ is provided;\n   it must contain the same value as the \"ident\" attribute on\
    \ the\n   relevant Node element.\n   To make use of this DTD now, VendorCo follows\
    \ the rules in\n   Section 5.2 and defines a parameter entity called \"x-vendorco\"\
    \ within\n   the Document Type Definition, and then references this entity.  In\n\
    \   the alert, the VendorCo elements are included under the\n   AdditionalData\
    \ element, with a \"type\" attribute of \"xml\", as shown\n   below.\n   <?xml\
    \ version=\"1.0\" encoding=\"UTF-8\"?>\n   <idmef:IDMEF-Message version=\"1.0\"\
    \n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xmlns:idmef=\"\
    http://iana.org/idmef\"\n        xmlns:vendorco=\"http://v.com/idmef\"\n     \
    \   xsi:schemaLocation=\"http://v.com/idmef http://v.com/geo.xsd\">\n     <idmef:Alert\
    \ messageid=\"abc123456789\">\n       <idmef:Analyzer analyzerid=\"hq-dmz-analyzer01\"\
    >\n         <idmef:Node category=\"dns\">\n           <idmef:location>Headquarters\
    \ DMZ Network</idmef:location>\n           <idmef:name>analyzer01.example.com</idmef:name>\n\
    \         </idmef:Node>\n       </idmef:Analyzer>\n       <idmef:CreateTime ntpstamp=\"\
    0xbc723b45.0xef449129\">\n         2000-03-09T10:01:25.93464-05:00\n       </idmef:CreateTime>\n\
    \       <idmef:Source ident=\"a1b2c3d4\">\n         <idmef:Node ident=\"a1b2c3d4-001\"\
    \ category=\"dns\">\n           <idmef:name>badguy.example.net</idmef:name>\n\
    \           <idmef:Address ident=\"a1b2c3d4-002\" category=\"ipv4-net-mask\">\n\
    \             <idmef:address>192.0.2.50</idmef:address>\n             <idmef:netmask>255.255.255.255</idmef:netmask>\n\
    \           </idmef:Address>\n         </idmef:Node>\n       </idmef:Source>\n\
    \       <idmef:Target ident=\"d1c2b3a4\">\n         <idmef:Node ident=\"d1c2b3a4-001\"\
    \ category=\"dns\">\n           <idmef:Address category=\"ipv4-addr-hex\">\n \
    \            <idmef:address>0xde796f70</idmef:address>\n           </idmef:Address>\n\
    \         </idmef:Node>\n       </idmef:Target>\n       <idmef:Classification\
    \ text=\"Teardrop\">\n         <idmef:Reference origin=\"bugtraqid\">\n      \
    \     <idmef:name>124</idmef:name>\n           <idmef:url>http://www.securityfocus.com/bid/124</idmef:url>\n\
    \         </idmef:Reference>\n       </idmef:Classification>\n       <idmef:AdditionalData\
    \ type=\"xml\" meaning=\"node geo info\">\n         <idmef:xml>\n           <vendorco:NodeGeography\n\
    \             xmlns:vendorco=\"http://vendor.com/idmef\"\n      xsi:schemaLocation=\"\
    http://v.com/idmef http://v.com/geo.xsd\"\n             vendorco:node-ident=\"\
    a1b2c3d4-001\">\n           <vendorco:latitude>38.89</vendorco:latitude>\n   \
    \        <vendorco:longitude>-77.02</vendorco:longitude>\n         </vendorco:NodeGeography>\n\
    \         </idmef:xml>\n       </idmef:AdditionalData>\n     </idmef:Alert>\n\
    \   </idmef:IDMEF-Message>\n"
- title: 8.  The IDMEF Document Type Definition (Normative)
  contents:
  - "8.  The IDMEF Document Type Definition (Normative)\n   <?xml version=\"1.0\"\
    \ encoding=\"UTF-8\"?>\n   <!-- ***************************************************************\n\
    \    *******************************************************************\n   \
    \ *** Intrusion Detection Message Exchange Format (IDMEF) XML DTD ***\n    ***\
    \                Version 1.0, 07 March 2006                   ***\n    ***   \
    \                                                          ***\n    *** The use\
    \ and extension of the IDMEF XML DTD are described in ***\n    *** RFC 4765, \"\
    The Intrusion Detection Message Exchange         ***\n    *** Format\",  H. Debar,\
    \ D. Curry, B. Feinstein.                 ***\n    *******************************************************************\n\
    \    *************************************************************** -->\n   <!--\
    \ ===============================================================\n    ===================================================================\n\
    \    === SECTION 1.  Attribute list declarations.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!--\n\
    \    | Attributes of the IDMEF element.  In general, the fixed values of\n   \
    \ | these attributes will change each time a new version of the DTD\n    | is\
    \ released.\n    -->\n   <!ENTITY % attlist.idmef                \"\n       version\
    \             CDATA                   #FIXED    '1.0'\n     \">\n   <!--\n   \
    \ | Attributes of all elements.  These are the \"XML\" attributes that\n    |\
    \ every element should have.  Space handling, language, and name\n    | space.\n\
    \    -->\n   <!ENTITY % attlist.global               \"\n       xmlns:idmef  \
    \       CDATA                   #FIXED\n           'http://iana.org/idmef'\n \
    \      xmlns               CDATA                   #FIXED\n           'http://iana.org/idmef'\n\
    \       xml:space           (default | preserve)    'default'\n       xml:lang\
    \            NMTOKEN                 #IMPLIED\n     \">\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 2.  Attribute value declarations.  Enumerated values for\n    ===\
    \            many of the element-specific attribute lists.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!--\n\
    \    | Values for the Action.category attribute.\n    -->\n   <!ENTITY % attvals.actioncat\
    \            \"\n       ( block-installed | notification-sent | taken-offline\
    \ | other )\n     \">\n   <!--\n    | Values for the Address.category attribute.\n\
    \    -->\n   <!ENTITY % attvals.addrcat              \"\n       ( unknown | atm\
    \ | e-mail | lotus-notes | mac | sna | vm |\n         ipv4-addr | ipv4-addr-hex\
    \ | ipv4-net | ipv4-net-mask |\n         ipv6-addr | ipv6-addr-hex | ipv6-net\
    \ | ipv6-net-mask )\n     \">\n   <!--\n    | Values for the AdditionalData.type\
    \ attribute.\n    -->\n   <!ENTITY % attvals.adtype               \"\n       (\
    \ boolean | byte | character | date-time | integer | ntpstamp |\n         portlist\
    \ | real | string | byte-string | xmltext )\n     \">\n   <!--\n    | Values for\
    \ the Impact.completion attribute.\n    -->\n   <!ENTITY % attvals.completion\
    \           \"\n       ( failed | succeeded )\n     \">\n   <!--\n    | Values\
    \ for the File.category attribute.\n    -->\n   <!ENTITY % attvals.filecat   \
    \           \"\n       ( current | original )\n     \">\n   <!ENTITY % attvals.fileperm\
    \ \"( noAccess | read | write | execute |\n     search | delete | executeAs |\
    \ changePermissions |\n     takeOwnership)\" >\n   <!--\n    | Values for the\
    \ UserId.type attribute.\n    -->\n   <!ENTITY % attvals.idtype              \
    \ \"\n       ( current-user | original-user | target-user | user-privs |\n   \
    \      current-group | group-privs | other-privs )\n     \">\n   <!--\n    | Values\
    \ for the Impact.type attribute.\n    -->\n   <!ENTITY % attvals.impacttype  \
    \         \"\n       ( admin | dos | file | recon | user | other )\n     \">\n\
    \   <!--\n    | Values for the Linkage.category attribute.\n    -->\n   <!ENTITY\
    \ % attvals.linkcat              \"\n       ( hard-link | mount-point | reparse-point\
    \ | shortcut | stream |\n         symbolic-link )\n     \">\n   <!--\n    | Values\
    \ for the Checksum.algorithm attribute\n    -->\n   <!ENTITY % attvals.checksumalgos\
    \        \"\n         ( MD4 | MD5 | SHA1 | SHA2-256 | SHA2-384 | SHA2-512 | CRC-32\
    \ |\n           Haval | Tiger | Gost )\n     \">\n   <!--\n    | Values for the\
    \ Node.category attribute.\n    -->\n   <!ENTITY % attvals.nodecat           \
    \   \"\n       ( unknown | ads | afs | coda | dfs | dns | hosts | kerberos |\n\
    \         nds | nis | nisplus | nt | wfw )\n     \">\n   <!--\n    | Values for\
    \ the Reference.origin attribute.\n    -->\n   <!ENTITY % attvals.origin     \
    \          \"\n       ( unknown | vendor-specific | user-specific | bugtraqid\
    \ | cve |\n         osvdb )\n     \">\n   <!--\n    | Values for the Confidence.rating\
    \ attribute.\n    -->\n   <!ENTITY % attvals.rating               \"\n       (\
    \ low | medium | high | numeric )\n     \">\n   <!--\n    | Values for the Impact.severity\
    \ attribute.\n    -->\n   <!ENTITY % attvals.severity             \"\n       (\
    \ info | low | medium | high )\n     \">\n   <!--\n    | Values for the User.category\
    \ attribute.\n    -->\n   <!ENTITY % attvals.usercat              \"\n       (\
    \ unknown | application | os-device )\n     \">\n   <!--\n    | Values for yes/no\
    \ attributes such as Source.spoofed and\n    | Target.decoy.\n    -->\n   <!ENTITY\
    \ % attvals.yesno                \"\n       ( unknown | yes | no )\n     \">\n\
    \   <!-- ===============================================================\n   \
    \ ===================================================================\n    ===\
    \ SECTION 3.  Top-level element declarations.  The IDMEF-Message\n    ===    \
    \        element and the types of messages it can include.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ IDMEF-Message                 (\n       (Alert | Heartbeat)*\n     )>\n   <!ATTLIST\
    \ IDMEF-Message\n       %attlist.global;\n       %attlist.idmef;\n     >\n   <!ELEMENT\
    \ Alert                         (\n       Analyzer, CreateTime, DetectTime?, AnalyzerTime?,\n\
    \       Source*, Target*, Classification, Assessment?, (ToolAlert |\n       OverflowAlert\
    \ | CorrelationAlert)?, AdditionalData*\n     )>\n   <!ATTLIST Alert\n       messageid\
    \           CDATA                   '0'\n       %attlist.global;\n     >\n   <!ELEMENT\
    \ Heartbeat                     (\n       Analyzer, CreateTime, HeartbeatInterval?,\
    \ AnalyzerTime?,\n       AdditionalData*\n     )>\n   <!ATTLIST Heartbeat\n  \
    \     messageid           CDATA                   '0'\n       %attlist.global;\n\
    \     >\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 4.  Subclasses of the Alert element that provide more\n    === \
    \           data for specific types of alerts.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ CorrelationAlert              (\n       name, alertident+\n     )>\n   <!ATTLIST\
    \ CorrelationAlert\n       %attlist.global;\n     >\n   <!ELEMENT OverflowAlert\
    \                 (\n       program, size?, buffer?\n     )>\n   <!ATTLIST OverflowAlert\n\
    \       %attlist.global;\n     >\n   <!ELEMENT ToolAlert                     (\n\
    \       name, command?, alertident+\n     )>\n   <!ATTLIST ToolAlert\n       %attlist.global;\n\
    \     >\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 5.  The AdditionalData element.  This element allows an\n    ===\
    \             alert to include additional information that cannot\n    ===   \
    \          be encoded elsewhere in the data model.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ AdditionalData           (\n     (boolean | byte        | character | date-time\
    \ |\n      integer | ntpstamp    | portlist  | real      |\n      string  | byte-string\
    \ | xmltext   )\n    )>\n   <!ATTLIST AdditionalData\n       type            \
    \    %attvals.adtype;        'string'\n       meaning             CDATA      \
    \             #IMPLIED\n       %attlist.global;\n     >\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 6.  Elements related to identifying entities - analyzers\n    ===\
    \            (the senders of these messages), sources (of\n    ===           \
    \ attacks), and targets (of attacks).\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ Analyzer                      (\n       Node?, Process?, Analyzer?\n     )>\n\
    \   <!ATTLIST Analyzer\n       analyzerid          CDATA                   '0'\n\
    \       name                CDATA                   #IMPLIED\n       manufacturer\
    \        CDATA                   #IMPLIED\n       model               CDATA  \
    \                 #IMPLIED\n       version             CDATA                 \
    \  #IMPLIED\n       class               CDATA                   #IMPLIED\n   \
    \    ostype              CDATA                   #IMPLIED\n       osversion  \
    \         CDATA                   #IMPLIED\n       %attlist.global;\n     >\n\
    \   <!ELEMENT Classification                (\n       Reference*\n     )>\n  \
    \ <!ATTLIST Classification\n       ident               CDATA                 \
    \  '0'\n       text                CDATA                   #REQUIRED\n     >\n\
    \   <!ELEMENT Source                        (\n       Node?, User?, Process?,\
    \ Service?\n     )>\n   <!ATTLIST Source\n       ident               CDATA   \
    \                '0'\n       spoofed             %attvals.yesno;         'unknown'\n\
    \       interface           CDATA                   #IMPLIED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Target                        (\n       Node?, User?, Process?,\
    \ Service?, File*\n     )>\n   <!ATTLIST Target\n       ident               CDATA\
    \                   '0'\n       decoy               %attvals.yesno;         'unknown'\n\
    \       interface           CDATA                   #IMPLIED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Assessment                    (\n       Impact?, Action*,\
    \ Confidence?\n     )>\n   <!ATTLIST Assessment\n       %attlist.global;\n   \
    \  >\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 7.  Support elements used for providing detailed info\n    === \
    \           about entities - addresses, names, etc.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ Reference                (\n       name, url\n     )>\n   <!ATTLIST Reference\n\
    \       origin              %attvals.origin;        'unknown'\n       meaning\
    \             CDATA                   #IMPLIED\n     >\n   <!ELEMENT Node    \
    \                      (\n       location?, (name | Address), Address*\n     )>\n\
    \   <!ATTLIST Node\n       ident               CDATA                   '0'\n \
    \      category            %attvals.nodecat;       'unknown'\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Address                       (\n       address, netmask?\n\
    \     )>\n   <!ATTLIST Address\n       ident               CDATA             \
    \      '0'\n       category            %attvals.addrcat;       'unknown'\n   \
    \    vlan-name           CDATA                   #IMPLIED\n       vlan-num   \
    \         CDATA                   #IMPLIED\n       %attlist.global;\n     >\n\
    \   <!ELEMENT File                          (\n       name, path, create-time?,\
    \ modify-time?, access-time?,\n       data-size?, disk-size?, FileAccess*, Linkage*,\
    \ Inode?,\n       Checksum*\n     )>\n   <!ATTLIST File\n       ident        \
    \       CDATA                   '0'\n       category            %attvals.filecat;\
    \       #REQUIRED\n       fstype              CDATA                   #IMPLIED\n\
    \       file-type           CDATA                   #IMPLIED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Permission EMPTY >\n   <!ATTLIST Permission\n       perms\
    \               %attvals.fileperm;      #REQUIRED\n       %attlist.global;\n \
    \  >\n   <!ELEMENT FileAccess                    (\n       UserId, Permission+\n\
    \     )>\n   <!ATTLIST FileAccess\n       %attlist.global;\n     >\n   <!ELEMENT\
    \ Inode                         (\n       change-time?, (number, major-device,\
    \ minor-device)?,\n       (c-major-device, c-minor-device)?\n     )>\n   <!ATTLIST\
    \ Inode\n       %attlist.global;\n     >\n   <!ELEMENT Linkage               \
    \        (\n       (name, path) | File\n     )>\n   <!ATTLIST Linkage\n      \
    \ category            %attvals.linkcat;       #REQUIRED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Checksum                      (\n       value, key?\n  \
    \   )>\n   <!ATTLIST Checksum\n       algorithm           %attvals.checksumalgos;\
    \ #REQUIRED\n       %attlist.global;\n     >\n   <!ELEMENT Process           \
    \            (\n       name, pid?, path?, arg*, env*\n     )>\n   <!ATTLIST Process\n\
    \       ident               CDATA                   '0'\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Service                       (\n       (((name, port?)\
    \ | (port, name?)) | portlist), protocol?,\n       SNMPService?, WebService?\n\
    \     )>\n   <!ATTLIST Service\n       ident                CDATA            \
    \       '0'\n   ip_version           CDATA                   #IMPLIED\n   iana_protocol_number\
    \ CDATA                  #IMPLIED\n   iana_protocol_name   CDATA             \
    \     #IMPLIED\n       %attlist.global;\n     >\n   <!ELEMENT SNMPService    \
    \               (\n       oid?, messageProcessingModel?, securityModel?, securityName?,\n\
    \       securityLevel?, contextName?, contextEngineID?, command?\n     )>\n  \
    \ <!ATTLIST SNMPService\n       %attlist.global;\n     >\n   <!ELEMENT User  \
    \                        (\n       UserId+\n     )>\n   <!ATTLIST User\n     \
    \  ident               CDATA                   '0'\n       category          \
    \  %attvals.usercat;       'unknown'\n       %attlist.global;\n     >\n   <!ELEMENT\
    \ UserId                        (\n       (name, number?) | (number, name?)\n\
    \     )>\n   <!ATTLIST UserId\n       ident               CDATA              \
    \     '0'\n       type                %attvals.idtype;        'original-user'\n\
    \       tty                 CDATA                   #IMPLIED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT WebService                    (\n       url, cgi?, http-method?,\
    \ arg*\n     )>\n   <!ATTLIST WebService\n       %attlist.global;\n     >\n  \
    \ <!-- ===============================================================\n    ===================================================================\n\
    \    === SECTION 8.  Simple elements with sub-elements or attributes of a\n  \
    \  ===            special nature.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ Action              (#PCDATA) >\n   <!ATTLIST Action\n       category      \
    \      %attvals.actioncat;     'other'\n       %attlist.global;\n     >\n   <!ELEMENT\
    \ CreateTime          (#PCDATA) >\n   <!ATTLIST CreateTime\n       ntpstamp  \
    \          CDATA                   #REQUIRED\n       %attlist.global;\n     >\n\
    \   <!ELEMENT DetectTime          (#PCDATA) >\n   <!ATTLIST DetectTime\n     \
    \  ntpstamp            CDATA                   #REQUIRED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT AnalyzerTime        (#PCDATA) >\n   <!ATTLIST AnalyzerTime\n\
    \       ntpstamp            CDATA                   #REQUIRED\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Confidence          (#PCDATA) >\n   <!ATTLIST Confidence\n\
    \       rating              %attvals.rating;        'numeric'\n       %attlist.global;\n\
    \     >\n   <!ELEMENT Impact              (#PCDATA) >\n   <!ATTLIST Impact\n \
    \      severity            %attvals.severity;      #IMPLIED\n       completion\
    \          %attvals.completion;    #IMPLIED\n       type                %attvals.impacttype;\
    \    'other'\n       %attlist.global;\n     >\n   <!ELEMENT alertident       \
    \   (#PCDATA) >\n   <!ATTLIST alertident\n       analyzerid          CDATA   \
    \                #IMPLIED\n       %attlist.global;\n     >\n   <!-- ===============================================================\n\
    \    ===================================================================\n   \
    \ === SECTION 9.  Simple elements with no sub-elements and no special\n    ===\
    \ attributes.\n    ===================================================================\n\
    \    =============================================================== -->\n   <!ELEMENT\
    \ boolean           (#PCDATA)         >\n   <!ATTLIST boolean           %attlist.global;\
    \  >\n   <!ELEMENT byte              (#PCDATA)         >\n   <!ATTLIST byte  \
    \            %attlist.global;  >\n   <!ELEMENT character         (#PCDATA)   \
    \      >\n   <!ATTLIST character         %attlist.global;  >\n   <!ELEMENT date-time\
    \         (#PCDATA)         >\n   <!ATTLIST date-time         %attlist.global;\
    \  >\n   <!ELEMENT integer           (#PCDATA)         >\n   <!ATTLIST integer\
    \           %attlist.global;  >\n   <!ELEMENT ntpstamp          (#PCDATA)    \
    \     >\n   <!ATTLIST ntpstamp          %attlist.global;  >\n   <!ELEMENT real\
    \              (#PCDATA)         >\n   <!ATTLIST real              %attlist.global;\
    \  >\n   <!ELEMENT string            (#PCDATA)         >\n   <!ATTLIST string\
    \            %attlist.global;  >\n   <!ELEMENT byte-string       (#PCDATA)   \
    \      >\n   <!ATTLIST byte-string       %attlist.global;  >\n   <!ELEMENT xmltext\
    \           ANY               >\n   <!ATTLIST xmltext           %attlist.global;\
    \  >\n   <!ELEMENT access-time       (#PCDATA)         >\n   <!ATTLIST access-time\
    \       %attlist.global;  >\n   <!ELEMENT address           (#PCDATA)        \
    \ >\n   <!ATTLIST address           %attlist.global;  >\n   <!ELEMENT arg    \
    \           (#PCDATA)         >\n   <!ATTLIST arg               %attlist.global;\
    \  >\n   <!ELEMENT buffer            (#PCDATA)         >\n   <!ATTLIST buffer\
    \            %attlist.global;  >\n   <!ELEMENT c-major-device    (#PCDATA)   \
    \      >\n   <!ATTLIST c-major-device    %attlist.global;  >\n   <!ELEMENT c-minor-device\
    \    (#PCDATA)         >\n   <!ATTLIST c-minor-device    %attlist.global;  >\n\
    \   <!ELEMENT cgi               (#PCDATA)         >\n   <!ATTLIST cgi        \
    \       %attlist.global;  >\n   <!ELEMENT change-time       (#PCDATA)        \
    \ >\n   <!ATTLIST change-time       %attlist.global;  >\n   <!ELEMENT command\
    \           (#PCDATA)         >\n   <!ATTLIST command           %attlist.global;\
    \  >\n   <!ELEMENT create-time       (#PCDATA)         >\n   <!ATTLIST create-time\
    \       %attlist.global;  >\n   <!ELEMENT data-size         (#PCDATA)        \
    \ >\n   <!ATTLIST data-size         %attlist.global;  >\n   <!ELEMENT disk-size\
    \         (#PCDATA)         >\n   <!ATTLIST disk-size         %attlist.global;\
    \  >\n   <!ELEMENT env               (#PCDATA)         >\n   <!ATTLIST env   \
    \            %attlist.global;  >\n   <!ELEMENT http-method       (#PCDATA)   \
    \      >\n   <!ATTLIST http-method       %attlist.global;  >\n   <!ELEMENT location\
    \          (#PCDATA)         >\n   <!ATTLIST location          %attlist.global;\
    \  >\n   <!ELEMENT major-device      (#PCDATA)         >\n   <!ATTLIST major-device\
    \      %attlist.global;  >\n   <!ELEMENT minor-device      (#PCDATA)         >\n\
    \   <!ATTLIST minor-device      %attlist.global;  >\n   <!ELEMENT modify-time\
    \       (#PCDATA)         >\n   <!ATTLIST modify-time       %attlist.global; \
    \ >\n   <!ELEMENT name              (#PCDATA)         >\n   <!ATTLIST name   \
    \           %attlist.global;  >\n   <!ELEMENT netmask           (#PCDATA)    \
    \     >\n   <!ATTLIST netmask           %attlist.global;  >\n   <!ELEMENT number\
    \            (#PCDATA)         >\n   <!ATTLIST number            %attlist.global;\
    \  >\n   <!ELEMENT oid               (#PCDATA)         >\n   <!ATTLIST oid   \
    \            %attlist.global;  >\n   <!ELEMENT path              (#PCDATA)   \
    \      >\n   <!ATTLIST path              %attlist.global;  >\n   <!ELEMENT permission\
    \        (#PCDATA)         >\n   <!ATTLIST permission        %attlist.global;\
    \  >\n   <!ELEMENT pid               (#PCDATA)         >\n   <!ATTLIST pid   \
    \            %attlist.global;  >\n   <!ELEMENT port              (#PCDATA)   \
    \      >\n   <!ATTLIST port              %attlist.global;  >\n   <!ELEMENT portlist\
    \          (#PCDATA)         >\n   <!ATTLIST portlist          %attlist.global;\
    \  >\n   <!ELEMENT program           (#PCDATA)         >\n   <!ATTLIST program\
    \           %attlist.global;  >\n   <!ELEMENT protocol          (#PCDATA)    \
    \     >\n   <!ATTLIST protocol          %attlist.global;  >\n   <!ELEMENT size\
    \              (#PCDATA)         >\n   <!ATTLIST size              %attlist.global;\
    \  >\n   <!ELEMENT url               (#PCDATA)         >\n   <!ATTLIST url   \
    \            %attlist.global;  >\n   <!ELEMENT HeartbeatInterval (#PCDATA)   \
    \      >\n   <!ATTLIST HeartbeatInterval %attlist.global;  >\n   <!ELEMENT messageProcessingModel\
    \ (#PCDATA)    >\n   <!ATTLIST messageProcessingModel %attlist.global;>\n   <!ELEMENT\
    \ securityModel     (#PCDATA)         >\n   <!ATTLIST securityModel     %attlist.global;\
    \  >\n   <!ELEMENT securityName      (#PCDATA)         >\n   <!ATTLIST securityName\
    \      %attlist.global;  >\n   <!ELEMENT securityLevel     (#PCDATA)         >\n\
    \   <!ATTLIST securityLevel     %attlist.global;  >\n   <!ELEMENT contextName\
    \       (#PCDATA)         >\n   <!ATTLIST contextName       %attlist.global; \
    \ >\n   <!ELEMENT contextEngineID   (#PCDATA)         >\n   <!ATTLIST contextEngineID\
    \   %attlist.global;  >\n   <!ELEMENT value             (#PCDATA)         >\n\
    \   <!ATTLIST value             %attlist.global;  >\n   <!ELEMENT key        \
    \       (#PCDATA)         >\n   <!ATTLIST key               %attlist.global; \
    \ >\n   <!-- End of IDMEF DTD -->\n"
- title: 9.  Security Considerations
  contents:
  - "9.  Security Considerations\n   This document describes a data representation\
    \ for exchanging\n   security-related information between intrusion detection\
    \ system\n   implementations.  Although there are no security concerns directly\n\
    \   applicable to the format of this data, the data itself may contain\n   security-sensitive\
    \ information whose confidentiality, integrity,\n   and/or availability may need\
    \ to be protected.\n   This suggests that the systems used to collect, transmit,\
    \ process,\n   and store this data should be protected against unauthorized use\
    \ and\n   that the data itself should be protected against unauthorized access.\n\
    \   The means for achieving this protection are outside the scope of this\n  \
    \ document.\n   Section 5 of [2] describes the required and recommended security\n\
    \   characteristics of the transmission protocol that will be used to\n   deliver\
    \ IDMEF data from analyzers to managers.  These requirements\n   include message\
    \ confidentiality, message integrity, non-repudiation,\n   and avoidance of duplicate\
    \ messages.  Both standard and proposed\n   protocols exist that provide these\
    \ features.\n   Where a protocol that does not meet the requirements of Section\
    \ 5 of\n   [2] is used to exchange IDMEF messages, it may be desirable to use\n\
    \   digital signatures to certify the integrity of these messages; this\n   is\
    \ discussed in Section 6.5 of this document.\n"
- title: 10.  IANA Considerations
  contents:
  - "10.  IANA Considerations\n   Section 5 describes how to use the AdditionalData\
    \ class to include\n   arbitrary \"atomic\" data items in an IDMEF message, as\
    \ well as how\n   AdditionalData may be used to extend the DTD itself by adding\
    \ new\n   classes and attributes.\n   From time to time, it may be desirable to\
    \ move an extension from its\n   private or local use status (as all extensions\
    \ made via the above\n   mechanism are) to \"standard\" status that should be\
    \ supported by all\n   implementations.\n   This may be accomplished as described\
    \ in this section.\n"
- title: 10.1.  Adding Values to Existing Attributes
  contents:
  - "10.1.  Adding Values to Existing Attributes\n   Several of the attributes specified\
    \ in this document have lists of\n   permissible values that they may contain.\
    \  To allow the addition of\n   new values to these lists, the IANA created a\
    \ repository for\n   attribute values called \"Intrusion Detection Message Exchange\
    \ Format\n   (IDMEF) Attribute Values\".\n   Following the policies outlined in\
    \ [9], this repository is\n   \"Specification Required\" by RFC.  Section 10.1.1\
    \ describes the\n   initial values for this repository.\n   To create a new attribute,\
    \ you MUST publish an RFC to document the\n   type.  In the RFC, include a copy\
    \ of the registration template found\n   in Section 10.1.2 of this document. \
    \ Put the template in your IANA\n   Considerations section, filling in the appropriate\
    \ fields.  You MUST\n   describe any interoperability and security issues in your\
    \ document.\n   When adding a new attribute value to the repository, the IANA\
    \ shall\n   assign the next rank number in numerical sequence for the value.\n"
- title: 10.1.1.  Attribute Registrations
  contents:
  - "10.1.1.  Attribute Registrations\n   IDMEF Class Name:  Reference\n   IDMEF Attribute\
    \ Name:  origin\n   Registered Values:\n   +------+-----------------+------------------------------------------+\n\
    \   | Rank | Keyword         | Description                              |\n  \
    \ +------+-----------------+------------------------------------------+\n   |\
    \    0 | unknown         | Origin of the name is not known          |\n   |  \
    \  1 | vendor-specific | A vendor-specific name (and hence, URL); |\n   |    \
    \  |                 | this can be used to provide              |\n   |      |\
    \                 | product-specific information             |\n   |    2 | user-specific\
    \   | A user-specific name (and hence, URL);   |\n   |      |                \
    \ | this can be used to provide              |\n   |      |                 |\
    \ installation-specific information        |\n   |    3 | bugtraqid       | The\
    \ SecurityFocus (\"Bugtraq\")            |\n   |      |                 | vulnerability\
    \ database identifier        |\n   |      |                 | (http://www.securityfocus.com/bid)\
    \       |\n   |    4 | cve             | The Common Vulnerabilities and Exposures\
    \ |\n   |      |                 | (CVE) name (http://cve.mitre.org/)       |\n\
    \   |    5 | osvdb           | The Open Source Vulnerability Database   |\n  \
    \ |      |                 | (http://www.osvdb.org)                   |\n   +------+-----------------+------------------------------------------+\n\
    \   IDMEF Class Name:  Source\n   IDMEF Attribute Name:  spoofed\n   Registered\
    \ Values:\n        +------+---------+----------------------------------------+\n\
    \        | Rank | Keyword | Description                            |\n       \
    \ +------+---------+----------------------------------------+\n        |    0\
    \ | unknown | Accuracy of source information unknown |\n        |    1 | yes \
    \    | Source is believed to be a decoy       |\n        |    2 | no      | Source\
    \ is believed to be \"real\"        |\n        +------+---------+----------------------------------------+\n\
    \   IDMEF Class Name:  Target\n   IDMEF Attribute Name:  decoy\n   Registered\
    \ Values:\n        +------+---------+----------------------------------------+\n\
    \        | Rank | Keyword | Description                            |\n       \
    \ +------+---------+----------------------------------------+\n        |    0\
    \ | unknown | Accuracy of target information unknown |\n        |    1 | yes \
    \    | Target is believed to be a decoy       |\n        |    2 | no      | Target\
    \ is believed to be \"real\"        |\n        +------+---------+----------------------------------------+\n\
    \   IDMEF Class Name:  AdditionalData\n   IDMEF Attribute Name:  type\n   Registered\
    \ Values:\n   +------+-------------+----------------------------------------------+\n\
    \   | Rank | Keyword     | Description                                  |\n  \
    \ +------+-------------+----------------------------------------------+\n   |\
    \    0 | boolean     | The element contains a boolean value, i.e.,  |\n   |  \
    \    |             | the strings \"true\" or \"false\"                |\n   |\
    \    1 | byte        | The element content is a single 8-bit byte   |\n   |  \
    \    |             | (see Section 3.2.4)                          |\n   |    2\
    \ | character   | The element content is a single character    |\n   |      |\
    \             | (see Section 3.2.3)                          |\n   |    3 | date-time\
    \   | The element content is a date-time string    |\n   |      |            \
    \ | (see Section 3.2.6)                          |\n   |    4 | integer     |\
    \ The element content is an integer (see       |\n   |      |             | Section\
    \ 3.2.1)                               |\n   |    5 | ntpstamp    | The element\
    \ content is an NTP timestamp (see |\n   |      |             | Section 3.2.7)\
    \                               |\n   |    6 | portlist    | The element content\
    \ is a list of ports (see  |\n   |      |             | Section 3.2.8)       \
    \                        |\n   |    7 | real        | The element content is a\
    \ real number (see    |\n   |      |             | Section 3.2.2)            \
    \                   |\n   |    8 | string      | The element content is a string\
    \ (see         |\n   |      |             | Section 3.2.3)                   \
    \            |\n   |    9 | byte-string | The element content is a byte[] (see\
    \         |\n   |      |             | Section 3.2.4)                        \
    \       |\n   |   10 | xmltext     | The element content is XML-tagged data (see\
    \  |\n   |      |             | Section 5.2)                                 |\n\
    \   +------+-------------+----------------------------------------------+\n  \
    \ IDMEF Class Name:  Impact\n   IDMEF Attribute Name:  severity\n   Registered\
    \ Values:\n       +------+---------+-----------------------------------------+\n\
    \       | Rank | Keyword | Description                             |\n       +------+---------+-----------------------------------------+\n\
    \       |    0 | info    | Alert represents informational activity |\n       |\
    \      |         |                                         |\n       |    1 |\
    \ low     | Low severity                            |\n       |      |       \
    \  |                                         |\n       |    2 | medium  | Medium\
    \ severity                         |\n       |      |         |              \
    \                           |\n       |    3 | high    | High severity       \
    \                    |\n       +------+---------+-----------------------------------------+\n\
    \   IDMEF Class Name:  Impact\n   IDMEF Attribute Name:  completion\n   Registered\
    \ Values:\n           +------+-----------+--------------------------------+\n\
    \           | Rank | Keyword   | Description                    |\n          \
    \ +------+-----------+--------------------------------+\n           |    0 | failed\
    \    | The attempt was not successful |\n           |    1 | succeeded | The attempt\
    \ succeeded          |\n           +------+-----------+--------------------------------+\n\
    \   IDMEF Class Name:  Impact\n   IDMEF Attribute Name:  type\n   Registered Values:\n\
    \   +------+---------+--------------------------------------------------+\n  \
    \ | Rank | Keyword | Description                                      |\n   +------+---------+--------------------------------------------------+\n\
    \   |    0 | admin   | Administrative privileges were attempted or      |\n  \
    \ |      |         | obtained                                         |\n   |\
    \    1 | dos     | A denial of service was attempted or completed   |\n   |  \
    \  2 | file    | An action on a file was attempted or completed   |\n   |    3\
    \ | recon   | A reconnaissance probe was attempted or          |\n   |      |\
    \         | completed                                        |\n   |    4 | user\
    \    | User privileges were attempted or obtained       |\n   |    5 | other \
    \  | Anything not in one of the above categories      |\n   +------+---------+--------------------------------------------------+\n\
    \   IDMEF Class Name:  Action\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n   +------+-------------------+----------------------------------------+\n\
    \   | Rank | Keyword           | Description                            |\n  \
    \ +------+-------------------+----------------------------------------+\n   |\
    \    0 | block-installed   | A block of some sort was installed to  |\n   |  \
    \    |                   | prevent an attack from reaching its    |\n   |    \
    \  |                   | destination.  The block could be a     |\n   |      |\
    \                   | port block, address block, etc., or    |\n   |      |  \
    \                 | disabling a user account.              |\n   |    1 | notification-sent\
    \ | A notification message of some sort    |\n   |      |                   |\
    \ was sent out-of-band (via pager,       |\n   |      |                   | e-mail,\
    \ etc.).  Does not include the   |\n   |      |                   | transmission\
    \ of this alert.            |\n   |    2 | taken-offline     | A system, computer,\
    \ or user was taken  |\n   |      |                   | offline, as when the computer\
    \ is shut  |\n   |      |                   | down or a user is logged off.  \
    \        |\n   |    3 | other             | Anything not in one of the above \
    \      |\n   |      |                   | categories.                        \
    \    |\n   +------+-------------------+----------------------------------------+\n\
    \   IDMEF Class Name:  Confidence\n   IDMEF Attribute Name:  rating\n   Registered\
    \ Values:\n   +------+---------+--------------------------------------------------+\n\
    \   | Rank | Keyword | Description                                      |\n  \
    \ +------+---------+--------------------------------------------------+\n   |\
    \    0 | low     | The analyzer has little confidence in its        |\n   |  \
    \    |         | validity                                         |\n   |    1\
    \ | medium  | The analyzer has average confidence in its       |\n   |      |\
    \         | validity                                         |\n   |    2 | high\
    \    | The analyzer has high confidence in its validity |\n   |    3 | numeric\
    \ | The analyzer has provided a posterior            |\n   |      |         |\
    \ probability value indicating its confidence in   |\n   |      |         | its\
    \ validity                                     |\n   +------+---------+--------------------------------------------------+\n\
    \   IDMEF Class Name:  Node\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n      +------+----------+------------------------------------------+\n\
    \      | Rank | Keyword  | Description                              |\n      +------+----------+------------------------------------------+\n\
    \      |    0 | unknown  | Domain unknown or not relevant           |\n      |\
    \    1 | ads      | Windows 2000 Advanced Directory Services |\n      |    2 |\
    \ afs      | Andrew File System (Transarc)            |\n      |    3 | coda \
    \    | Coda Distributed File System             |\n      |    4 | dfs      | Distributed\
    \ File System (IBM)            |\n      |    5 | dns      | Domain Name System\
    \                       |\n      |    6 | hosts    | Local hosts file        \
    \                 |\n      |    7 | kerberos | Kerberos realm                \
    \           |\n      |    8 | nds      | Novell Directory Services           \
    \     |\n      |    9 | nis      | Network Information Services (Sun)       |\n\
    \      |   10 | nisplus  | Network Information Services Plus (Sun)  |\n      |\
    \   11 | nt       | Windows NT domain                        |\n      |   12 |\
    \ wfw      | Windows for Workgroups                   |\n      +------+----------+------------------------------------------+\n\
    \   IDMEF Class Name:  Address\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | unknown       | Address type unknown                       |\n   |  \
    \  1 | atm           | Asynchronous Transfer Mode network address |\n   |    2\
    \ | e-mail        | Electronic mail address (RFC 822)          |\n   |    3 |\
    \ lotus-notes   | Lotus Notes e-mail address                 |\n   |    4 | mac\
    \           | Media Access Control (MAC) address         |\n   |    5 | sna  \
    \         | IBM Shared Network Architecture (SNA)      |\n   |      |        \
    \       | address                                    |\n   |    6 | vm       \
    \     | IBM VM (\"PROFS\") e-mail address            |\n   |    7 | ipv4-addr\
    \     | IPv4 host address in dotted-decimal        |\n   |      |            \
    \   | notation (a.b.c.d)                         |\n   |    8 | ipv4-addr-hex\
    \ | IPv4 host address in hexadecimal notation  |\n   |    9 | ipv4-net      |\
    \ IPv4 network address in dotted-decimal     |\n   |      |               | notation,\
    \ slash, significant bits          |\n   |      |               | (a.b.c.d/nn)\
    \                               |\n   |   10 | ipv4-net-mask | IPv4 network address\
    \ in dotted-decimal     |\n   |      |               | notation, slash, network\
    \ mask in           |\n   |      |               | dotted-decimal notation (a.b.c.d/w.x.y.z)\
    \  |\n   |   11 | ipv6-addr     | IPv6 host address                          |\n\
    \   |   12 | ipv6-addr-hex | IPv6 host address in hexadecimal notation  |\n  \
    \ |   13 | ipv6-net      | IPv6 network address, slash, significant   |\n   |\
    \      |               | bits                                       |\n   |  \
    \ 14 | ipv6-net-mask | IPv6 network address, slash, network mask  |\n   +------+---------------+--------------------------------------------+\n\
    \   IDMEF Class Name:  User\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n        +------+-------------+------------------------------------+\n\
    \        | Rank | Keyword     | Description                        |\n       \
    \ +------+-------------+------------------------------------+\n        |    0\
    \ | unknown     | User type unknown                  |\n        |    1 | application\
    \ | An application user                |\n        |    2 | os-device   | An operating\
    \ system or device user |\n        +------+-------------+------------------------------------+\n\
    \   IDMEF Class Name:  UserId\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | current-user  | The current user id being used by the user |\n   |  \
    \    |               | or process.  On Unix systems, this would   |\n   |    \
    \  |               | be the \"real\" user id, in general.         |\n   |    1\
    \ | original-user | The actual identity of the user or process |\n   |      |\
    \               | being reported on.  On those systems that  |\n   |      |  \
    \             | (a) do some type of auditing and (b)       |\n   |      |    \
    \           | support extracting a user id from the      |\n   |      |      \
    \         | \"audit id\" token, that value should be     |\n   |      |      \
    \         | used.  On those systems that do not        |\n   |      |        \
    \       | support this, and where the user has       |\n   |      |          \
    \     | logged into the system, the \"login id\"     |\n   |      |          \
    \     | should be used.                            |\n   |    2 | target-user\
    \   | The user id the user or process is         |\n   |      |              \
    \ | attempting to become.  This would apply,   |\n   |      |               |\
    \ on Unix systems for example, when the user |\n   |      |               | attempts\
    \ to use \"su\", \"rlogin\", \"telnet\",  |\n   |      |               | etc.\
    \                                       |\n   |    3 | user-privs    | Another\
    \ user id the user or process has    |\n   |      |               | the ability\
    \ to use, or a user id           |\n   |      |               | associated with\
    \ a file permission.  On     |\n   |      |               | Unix systems, this\
    \ would be the            |\n   |      |               | \"effective\" user id\
    \ in a user or process   |\n   |      |               | context, and the owner\
    \ permissions in a    |\n   |      |               | file context.  Multiple UserId\
    \ elements of |\n   |      |               | this type may be used to specify\
    \ a list of |\n   |      |               | privileges.                       \
    \         |\n   |    4 | current-group | The current group id (if applicable)\
    \ being |\n   |      |               | used by the user or process.  On Unix \
    \     |\n   |      |               | systems, this would be the \"real\" group\
    \    |\n   |      |               | id, in general.                          \
    \  |\n   |    5 | group-privs   | Another group id the group or process has  |\n\
    \   |      |               | the ability to use, or a group id          |\n  \
    \ |      |               | associated with a file permission.  On     |\n   |\
    \      |               | Unix systems, this would be the            |\n   |  \
    \    |               | \"effective\" group id in a group or process |\n   |  \
    \    |               | context, and the group permissions in a    |\n   |    \
    \  |               | file context.  On BSD-derived Unix         |\n   |      |\
    \               | systems, multiple UserId elements of this  |\n   |      |  \
    \             | type would be used to include all the      |\n   |      |    \
    \           | group ids on the \"group list\".             |\n   |    6 | other-privs\
    \   | Not used in a user, group, or process      |\n   |      |              \
    \ | context, only used in the file context.    |\n   |      |               |\
    \ The file permissions assigned to users who |\n   |      |               | do\
    \ not match either the user or group      |\n   |      |               | permissions\
    \ on the file.  On Unix systems, |\n   |      |               | this would be\
    \ the \"world\" permissions.     |\n   +------+---------------+--------------------------------------------+\n\
    \   IDMEF Class Name:  File\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n   +------+----------+-------------------------------------------------+\n\
    \   | Rank | Keyword  | Description                                     |\n  \
    \ +------+----------+-------------------------------------------------+\n   |\
    \    0 | current  | The file information is from after the reported |\n   |  \
    \    |          | change                                          |\n   |    1\
    \ | original | The file information is from before the         |\n   |      |\
    \          | reported change                                 |\n   +------+----------+-------------------------------------------------+\n\
    \   IDMEF Class Name:  File\n   IDMEF Attribute Name:  fstype\n   Registered Values:\n\
    \         +------+---------+-------------------------------------+\n         |\
    \ Rank | Keyword | Description                         |\n         +------+---------+-------------------------------------+\n\
    \         |    0 | ufs     | Berkeley Unix Fast File System      |\n         |\
    \    1 | efs     | Linux \"efs\" file system             |\n         |    2 |\
    \ nfs     | Network File System                 |\n         |    3 | afs     |\
    \ Andrew File System                  |\n         |    4 | ntfs    | Windows NT\
    \ File System              |\n         |    5 | fat16   | 16-bit Windows FAT File\
    \ System      |\n         |    6 | fat32   | 32-bit Windows FAT File System  \
    \    |\n         |    7 | pcfs    | \"PC\" (MS-DOS) file system on CD-ROM |\n\
    \         |    8 | joliet  | Joliet CD-ROM file system           |\n         |\
    \    9 | iso9660 | ISO 9660 CD-ROM file system         |\n         +------+---------+-------------------------------------+\n\
    \   IDMEF Class Name:  FileAccess\n   IDMEF Attribute Name:  permission\n   Registered\
    \ Values:\n   +------+-------------------+----------------------------------------+\n\
    \   | Rank | Keyword           | Description                            |\n  \
    \ +------+-------------------+----------------------------------------+\n   |\
    \    0 | noAccess          | No access at all is allowed for this   |\n   |  \
    \    |                   | user                                   |\n   |    1\
    \ | read              | This user has read access to the file  |\n   |    2 |\
    \ write             | This user has write access to the file |\n   |    3 | execute\
    \           | This user has the ability to execute   |\n   |      |          \
    \         | the file                               |\n   |    4 | search     \
    \       | This user has the ability to search    |\n   |      |              \
    \     | this file (applies to \"execute\"        |\n   |      |              \
    \     | permission on directories in Unix)     |\n   |    5 | delete         \
    \   | This user has the ability to delete    |\n   |      |                  \
    \ | this file                              |\n   |    6 | executeAs         |\
    \ This user has the ability to execute   |\n   |      |                   | this\
    \ file as another user              |\n   |    7 | changePermissions | This user\
    \ has the ability to change    |\n   |      |                   | the access permissions\
    \ on this file    |\n   |    8 | takeOwnership     | This user has the ability\
    \ to take      |\n   |      |                   | ownership of this file     \
    \            |\n   +------+-------------------+----------------------------------------+\n\
    \   IDMEF Class Name:  Linkage\n   IDMEF Attribute Name:  category\n   Registered\
    \ Values:\n   +------+---------------+--------------------------------------------+\n\
    \   | Rank | Keyword       | Description                                |\n  \
    \ +------+---------------+--------------------------------------------+\n   |\
    \    0 | hard-link     | The <name> element represents another name |\n   |  \
    \    |               | for this file.  This information may be    |\n   |    \
    \  |               | more easily obtainable on NTFS file        |\n   |      |\
    \               | systems than others.                       |\n   |    1 | mount-point\
    \   | An alias for the directory specified by    |\n   |      |              \
    \ | the parent's <name> and <path> elements.   |\n   |    2 | reparse-point |\
    \ Applies only to Windows; excludes symbolic |\n   |      |               | links\
    \ and mount points, which are specific |\n   |      |               | types of\
    \ reparse points.                   |\n   |    3 | shortcut      | The file represented\
    \ by a Windows          |\n   |      |               | \"shortcut\".  A shortcut\
    \ is distinguished   |\n   |      |               | from a symbolic link because\
    \ of the        |\n   |      |               | difference in their contents, which\
    \ may be |\n   |      |               | of importance to the manager.        \
    \      |\n   |    4 | stream        | An Alternate Data Stream (ADS) in Windows;\
    \ |\n   |      |               | a fork on MacOS.  Separate file system     |\n\
    \   |      |               | entity that is considered an extension of  |\n  \
    \ |      |               | the main <File>.                           |\n   |\
    \    5 | symbolic-link | The <name> element represents the file to  |\n   |  \
    \    |               | which the link points.                     |\n   +------+---------------+--------------------------------------------+\n\
    \   IDMEF Class Name:  Checksum\n   IDMEF Attribute Name:  algorithm\n   Registered\
    \ Values:\n      +------+----------+------------------------------------------+\n\
    \      | Rank | Keyword  | Description                              |\n      +------+----------+------------------------------------------+\n\
    \      |    0 | MD4      | The MD4 algorithm.                       |\n      |\
    \    1 | MD5      | The MD5 algorithm.                       |\n      |    2 |\
    \ SHA1     | The SHA1 algorithm.                      |\n      |    3 | SHA2-256\
    \ | The SHA2 algorithm with 256 bits length. |\n      |    4 | SHA2-384 | The\
    \ SHA2 algorithm with 384 bits length. |\n      |    5 | SHA2-512 | The SHA2 algorithm\
    \ with 512 bits length. |\n      |    6 | CRC-32   | The CRC algorithm with 32\
    \ bits length.   |\n      |    7 | Haval    | The Haval algorithm.           \
    \          |\n      |    8 | Tiger    | The Tiger algorithm.                 \
    \    |\n      |    9 | Gost     | The Gost algorithm.                      |\n\
    \      +------+----------+------------------------------------------+\n"
- title: 10.1.2.  Registration Template
  contents:
  - "10.1.2.  Registration Template\n   IDMEF Class Name:\n      <provide the name\
    \ of the class that contains the attribute to\n      which you want to add a new\
    \ value, e.g., \"Address\">\n   IDMEF Attribute Name:\n      <provide the name\
    \ of the attribute to which you want to add a new\n      value, e.g., \"category\"\
    >\n   New Attribute Value to Be Defined:\n      <provide the name of the new attribute\
    \ value that you want to add,\n      e.g., \"sneaker-net\">\n   Meaning of New\
    \ Attribute Value:\n      <describe in detail what the attribute value means --\
    \ i.e., if an\n      analyzer sends this value, what is it telling the receiver\
    \ of the\n      information?>\n   Contact Person and E-Mail Address:\n      <your\
    \ name and e-mail address>\n"
- title: 10.2.  Adding New Attributes and Classes
  contents:
  - "10.2.  Adding New Attributes and Classes\n   To the extent possible, the IDMEF\
    \ classes and attributes specified in\n   this document have been designed to\
    \ accommodate all current and near-\n   future needs.  Although it is recognized\
    \ that the addition of new\n   classes, as well as the addition of new attributes\
    \ to existing\n   classes, will be necessary in the future, these actions should\
    \ not be\n   taken lightly.\n   Any addition of new attributes or classes should\
    \ only be undertaken\n   when the current classes and attributes simply cannot\
    \ be used to\n   represent the information in a \"clean\" way -- and such additions\n\
    \   should only be made to represent generally-useful types of data.\n   Vendor-specific\
    \ information, obscure information provided by only a\n   particular type of analyzer\
    \ or used only by a particular type of\n   manager, \"pet\" attributes, and the\
    \ like are not good reasons to make\n   class and attribute additions.\n   At\
    \ the time this RFC was written, the first anticipated case for\n   which new\
    \ classes and attributes will need to be added is to handle\n   host-based intrusion\
    \ detection systems.  However, such additions\n   should not be made until some\
    \ level of consensus has been reached\n   about the set of data that will be provided\
    \ by these systems.\n   Following the policies outlined in [9], the addition of\
    \ new classes\n   and attributes to the IDMEF requires \"IETF Consensus\".\n \
    \  To add new attributes or classes, you MUST publish an RFC to document\n   them,\
    \ and get that RFC approved by the IESG.  Typically, the IESG\n   will seek input\
    \ on prospective additions from appropriate persons\n   (e.g., a relevant working\
    \ group if one exists).  You MUST describe\n   any interoperability and security\
    \ issues in your document.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [1]   Bradner, S., \"Key words for use in RFCs\
    \ to Indicate Requirement\n         Levels\", BCP 14, RFC 2119, March 1997.\n\
    \   [2]   Wood, M. and M. Erlinger, \"Intrusion Detection Mesage Exchange\n  \
    \       Requirements\", RFC 4766, March 2007.\n   [3]   Sperberg-McQueen, C.,\
    \ Paoli, J., Maler, E., and T. Bray,\n         \"Extensible Markup Language (XML)\
    \ 1.0 (Second Edition)\", World\n         Wide Web Consortium\n         FirstEdition\
    \ http://www.w3.org/TR/2000/REC-xml-20001006,\n         October 2000.\n   [4]\
    \   Bray, T., Hollander, D., and A. Layman, \"Namespaces in XML\",\n         World\
    \ Wide Web Consortium\n         Recommendation http://www.w3.org/TR/1999/\n  \
    \       REC-xml-names-19990114, January 1999.\n   [5]   Berners-Lee, T., Fielding,\
    \ R., and L. Masinter, \"Uniform\n         Resource Identifier (URI): Generic\
    \ Syntax\", STD 66, RFC 3986,\n         January 2005.\n   [6]   International\
    \ Organization for Standardization, \"Data elements\n         and interchange\
    \ formats - Information interchange -\n         Representation of dates and times\"\
    , ISO Standard 8601, Second\n         Edition, December 2000.\n   [7]   Mills,\
    \ D., \"Network Time Protocol (Version 3) Specification,\n         Implementation\"\
    , RFC 1305, March 1992.\n   [8]   Mills, D., \"Simple Network Time Protocol (SNTP)\
    \ Version 4 for\n         IPv4, IPv6 and OSI\", RFC 4330, January 2006.\n   [9]\
    \   Narten, T. and H. Alvestrand, \"Guidelines for Writing an IANA\n         Considerations\
    \ Section in RFCs\", BCP 26, RFC 2434,\n         October 1998.\n   [10]  Phillips,\
    \ A. and M. Davis, \"Tags for Identifying Languages\",\n         BCP 47, RFC 4646,\
    \ September 2006.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [11]  St. Johns, M., \"Identification Protocol\"\
    , RFC 1413,\n         February 1993.\n   [12]  Resnick, P., \"Internet Message\
    \ Format\", RFC 2822, April 2001.\n   [13]  Eastlake, D., Reagle, J., and D. Solo,\
    \ \"(Extensible Markup\n         Language) XML-Signature Syntax and Processing\"\
    , RFC 3275,\n         March 2002.\n   [14]  Rumbaugh, J., Jacobson, I., and G.\
    \ Booch, \"The Unified Modeling\n         Language Reference Model\", ISBN 020130998X,\
    \ 1998.\n   [15]  Harrington, D., Presuhn, R., and B. Wijnen, \"An Architecture\n\
    \         for Describing Simple Network Management Protocol (SNMP)\n         Management\
    \ Frameworks\", STD 62, RFC 3411, December 2002.\n   [16]  Frye, R., Levi, D.,\
    \ Routhier, S., and B. Wijnen, \"Coexistence\n         between Version 1, Version\
    \ 2, and Version 3 of the\n         Internet-standard Network Management Framework\"\
    , BCP 74,\n         RFC 3584, August 2003.\n"
- title: Appendix A.  Acknowledgements
  contents:
  - "Appendix A.  Acknowledgements\n   The following individuals contributed substantially\
    \ to this document\n   and should be recognized for their efforts.  This document\
    \ would not\n   exist without their help:\n   Dominique Alessandri, IBM Corporation\n\
    \   Spencer Allain, Teknowledge Corporation\n   James L. Burden, California Independent\
    \ Systems Operator\n   Marc Dacier, IBM Corporation\n   Oliver Dain, MIT Lincoln\
    \ Laboratory\n   Nicolas Delon, Prelude Hybrid IDS project\n   David J. Donahoo,\
    \ AFIWC\n   Michael Erlinger, Harvey Mudd College\n   Reinhard Handwerker, Internet\
    \ Security Systems, Inc.\n   Ming-Yuh Huang, The Boeing Company\n   Glenn Mansfield,\
    \ Cyber Solutions, Inc.\n   Joe McAlerney, Silicon Defense\n   Cynthia McLain,\
    \ MIT Lincoln Laboratory\n   Paul Osterwald, Intrusion.com\n   Jean-Philippe Pouzol\n\
    \   James Riordan, IBM Corporation\n   Paul Sangree, Cisco Systems\n   Stephane\
    \ Schitter, IBM Corporation\n   Michael J. Slifcak, Trusted Network Technologies,\
    \ Inc.\n   Steven R. Snapp, CyberSafe Corporation\n   Stuart Staniford-Chen, Silicon\
    \ Defense\n   Michael Steiner, University of Saarland\n   Maureen Stillman, Nokia\
    \ IP Telephony\n   Vimal Vaidya, AXENT\n   Yoann Vandoorselaere, Prelude Hybrid\
    \ IDS project\n   Andy Walther, Harvey Mudd College\n   Andreas Wespi, IBM Corporation\n\
    \   John C. C. White, MITRE\n   Eric D. Williams, Information Brokers, Inc.\n\
    \   S. Felix Wu, University of California Davis\n"
- title: Appendix B.  The IDMEF Schema Definition (Non-normative)
  contents:
  - "Appendix B.  The IDMEF Schema Definition (Non-normative)\n   <?xml version=\"\
    1.0\"?>\n   <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n     \
    \          xmlns:idmef=\"http://iana.org/idmef\"\n               targetNamespace=\"\
    http://iana.org/idmef\"\n               elementFormDefault=\"qualified\" >\n \
    \    <xsd:annotation>\n       <xsd:documentation>\n         Intrusion Detection\
    \ Message Exchange Format (IDMEF) Version 1.0\n       </xsd:documentation>\n \
    \    </xsd:annotation>\n     <!-- Section 1 -->\n     <!-- Omitted.  This section\
    \ did namespace magic and is not\n          needed with XSD validation. -->\n\
    \     <!-- Section 2 -->\n     <!--\n       Values for the Action.category attribute.\n\
    \     -->\n     <xsd:simpleType name=\"action-category\">\n       <xsd:restriction\
    \ base=\"xsd:token\">\n         <xsd:enumeration value=\"block-installed\"   />\n\
    \         <xsd:enumeration value=\"notification-sent\" />\n         <xsd:enumeration\
    \ value=\"taken-offline\"     />\n         <xsd:enumeration value=\"other\"  \
    \           />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n\
    \       Values for the Address.category attribute.\n      -->\n     <xsd:simpleType\
    \ name=\"address-category\">\n       <xsd:restriction base=\"xsd:token\">\n  \
    \       <xsd:enumeration value=\"unknown\"       />\n         <xsd:enumeration\
    \ value=\"atm\"           />\n         <xsd:enumeration value=\"e-mail\"     \
    \   />\n         <xsd:enumeration value=\"lotus-notes\"   />\n         <xsd:enumeration\
    \ value=\"mac\"           />\n         <xsd:enumeration value=\"sna\"        \
    \   />\n         <xsd:enumeration value=\"vm\"            />\n         <xsd:enumeration\
    \ value=\"ipv4-addr\"     />\n         <xsd:enumeration value=\"ipv4-addr-hex\"\
    \ />\n         <xsd:enumeration value=\"ipv4-net\"      />\n         <xsd:enumeration\
    \ value=\"ipv4-net-mask\" />\n         <xsd:enumeration value=\"ipv6-addr\"  \
    \   />\n         <xsd:enumeration value=\"ipv6-addr-hex\" />\n         <xsd:enumeration\
    \ value=\"ipv6-net\"      />\n         <xsd:enumeration value=\"ipv6-net-mask\"\
    \ />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n      | Values\
    \ for the Impact.severity attribute.\n      -->\n     <xsd:simpleType name=\"\
    impact-severity\">\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration\
    \ value=\"info\" />\n         <xsd:enumeration value=\"low\" />\n         <xsd:enumeration\
    \ value=\"medium\" />\n         <xsd:enumeration value=\"high\" />\n       </xsd:restriction>\n\
    \     </xsd:simpleType>\n     <!--\n       Values for the Impact.completion attribute.\n\
    \      -->\n     <xsd:simpleType name=\"impact-completion\">\n       <xsd:restriction\
    \ base=\"xsd:token\">\n         <xsd:enumeration value=\"failed\" />\n       \
    \  <xsd:enumeration value=\"succeeded\" />\n       </xsd:restriction>\n     </xsd:simpleType>\n\
    \     <!--\n      | Values for the Impact.type attribute.\n      -->\n     <xsd:simpleType\
    \ name=\"impact-type\">\n       <xsd:restriction base=\"xsd:token\">\n       \
    \  <xsd:enumeration value=\"admin\" />\n         <xsd:enumeration value=\"dos\"\
    \   />\n         <xsd:enumeration value=\"file\"  />\n         <xsd:enumeration\
    \ value=\"recon\" />\n         <xsd:enumeration value=\"user\"  />\n         <xsd:enumeration\
    \ value=\"other\" />\n       </xsd:restriction>\n     </xsd:simpleType>\n    \
    \ <!--\n       Values for the File.category attribute.\n      -->\n     <xsd:simpleType\
    \ name=\"file-category\">\n       <xsd:restriction base=\"xsd:token\">\n     \
    \    <xsd:enumeration value=\"current\"  />\n         <xsd:enumeration value=\"\
    original\" />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n\
    \       Values for the FileAccess.Permissions attribute\n     -->\n     <xsd:simpleType\
    \ name=\"file-permission\">\n       <xsd:restriction base=\"xsd:token\">\n   \
    \      <xsd:enumeration value=\"noAccess\"/>\n         <xsd:enumeration value=\"\
    read\"/>\n         <xsd:enumeration value=\"write\"/>\n         <xsd:enumeration\
    \ value=\"execute\"/>\n         <xsd:enumeration value=\"search\" />\n       \
    \  <xsd:enumeration value=\"delete\" />\n         <xsd:enumeration value=\"executeAs\"\
    \ />\n         <xsd:enumeration value=\"changePermissions\" />\n         <xsd:enumeration\
    \ value=\"takeOwnership\" />\n       </xsd:restriction>\n     </xsd:simpleType>\n\
    \     <!--\n       Values for the Id.type attribute.\n      -->\n     <xsd:simpleType\
    \ name=\"id-type\">\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration\
    \ value=\"current-user\"  />\n         <xsd:enumeration value=\"original-user\"\
    \ />\n         <xsd:enumeration value=\"target-user\"   />\n         <xsd:enumeration\
    \ value=\"user-privs\"    />\n         <xsd:enumeration value=\"current-group\"\
    \ />\n         <xsd:enumeration value=\"group-privs\"   />\n         <xsd:enumeration\
    \ value=\"other-privs\"   />\n       </xsd:restriction>\n     </xsd:simpleType>\n\
    \     <!--\n      | Values for the Linkage.category attribute.\n      -->\n  \
    \   <xsd:simpleType name=\"linkage-category\">\n       <xsd:restriction base=\"\
    xsd:token\">\n         <xsd:enumeration value=\"hard-link\"     />\n         <xsd:enumeration\
    \ value=\"mount-point\"   />\n         <xsd:enumeration value=\"reparse-point\"\
    \ />\n         <xsd:enumeration value=\"shortcut\"      />\n         <xsd:enumeration\
    \ value=\"stream\"        />\n         <xsd:enumeration value=\"symbolic-link\"\
    \ />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n       | Values\
    \ for the Checksum.algorithm attribute\n     -->\n     <xsd:simpleType name=\"\
    checksum-algorithm\">\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration\
    \ value=\"MD4\" />\n         <xsd:enumeration value=\"MD5\" />\n         <xsd:enumeration\
    \ value=\"SHA1\" />\n         <xsd:enumeration value=\"SHA2-256\" />\n       \
    \  <xsd:enumeration value=\"SHA2-384\" />\n         <xsd:enumeration value=\"\
    SHA2-512\" />\n         <xsd:enumeration value=\"CRC-32\" />\n         <xsd:enumeration\
    \ value=\"Haval\" />\n         <xsd:enumeration value=\"Tiger\" />\n         <xsd:enumeration\
    \ value=\"Gost\" />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n\
    \      | Values for the Node.category attribute.\n      -->\n     <xsd:simpleType\
    \ name=\"node-category\">\n       <xsd:restriction base=\"xsd:token\">\n     \
    \    <xsd:enumeration value=\"unknown\"  />\n         <xsd:enumeration value=\"\
    ads\"      />\n         <xsd:enumeration value=\"afs\"      />\n         <xsd:enumeration\
    \ value=\"coda\"     />\n         <xsd:enumeration value=\"dfs\"      />\n   \
    \      <xsd:enumeration value=\"dns\"      />\n         <xsd:enumeration value=\"\
    hosts\"    />\n         <xsd:enumeration value=\"kerberos\" />\n         <xsd:enumeration\
    \ value=\"nds\"      />\n         <xsd:enumeration value=\"nis\"      />\n   \
    \      <xsd:enumeration value=\"nisplus\"  />\n         <xsd:enumeration value=\"\
    nt\"       />\n         <xsd:enumeration value=\"wfw\"      />\n       </xsd:restriction>\n\
    \     </xsd:simpleType>\n     <!--\n      | Values for the reference.origin attribute.\n\
    \      -->\n     <xsd:simpleType name=\"reference-origin\">\n       <xsd:restriction\
    \ base=\"xsd:token\">\n         <xsd:enumeration value=\"unknown\" />\n      \
    \   <xsd:enumeration value=\"vendor-specific\" />\n         <xsd:enumeration value=\"\
    user-specific\" />\n         <xsd:enumeration value=\"bugtraqid\" />\n       \
    \  <xsd:enumeration value=\"cve\" />\n         <xsd:enumeration value=\"osvdb\"\
    \ />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n      | Values\
    \ for the Confidence.rating attribute.\n      -->\n     <xsd:simpleType name=\"\
    confidence-rating\">\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration\
    \ value=\"low\"    />\n         <xsd:enumeration value=\"medium\" />\n       \
    \  <xsd:enumeration value=\"high\"   />\n         <xsd:enumeration value=\"numeric\"\
    \ />\n       </xsd:restriction>\n     </xsd:simpleType>\n     <!--\n      | Values\
    \ for the User.category attribute.\n      -->\n     <xsd:simpleType name=\"user-category\"\
    >\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration value=\"\
    unknown\"     />\n         <xsd:enumeration value=\"application\" />\n       \
    \  <xsd:enumeration value=\"os-device\"   />\n       </xsd:restriction>\n    \
    \ </xsd:simpleType>\n     <!--\n     / Values for the additionaldata.type attribute.\n\
    \     -->\n     <xsd:simpleType name=\"additionaldata-type\">\n       <xsd:restriction\
    \ base=\"xsd:token\">\n         <xsd:enumeration value=\"boolean\"     />\n  \
    \       <xsd:enumeration value=\"byte\"        />\n         <xsd:enumeration value=\"\
    character\"   />\n         <xsd:enumeration value=\"date-time\"   />\n       \
    \  <xsd:enumeration value=\"integer\"     />\n         <xsd:enumeration value=\"\
    ntpstamp\"    />\n         <xsd:enumeration value=\"portlist\"    />\n       \
    \  <xsd:enumeration value=\"real\"        />\n         <xsd:enumeration value=\"\
    string\"      />\n         <xsd:enumeration value=\"byte-string\" />\n       \
    \  <xsd:enumeration value=\"xml\"         />\n       </xsd:restriction>\n    \
    \ </xsd:simpleType>\n     <!--\n      | Values for yes/no attributes such as Source.spoofed\
    \ and\n      | Target.decoy.\n      -->\n     <xsd:simpleType name=\"yes-no-type\"\
    >\n       <xsd:restriction base=\"xsd:token\">\n         <xsd:enumeration value=\"\
    unknown\" />\n         <xsd:enumeration value=\"yes\"     />\n         <xsd:enumeration\
    \ value=\"no\"      />\n       </xsd:restriction>\n     </xsd:simpleType>\n  \
    \   <xsd:simpleType name=\"port-range\">\n       <xsd:restriction base=\"xsd:string\"\
    >\n         <xsd:pattern value=\"[0-9]{1,5}(\\-[0-9]{1,5})?\"/>\n       </xsd:restriction>\n\
    \     </xsd:simpleType>\n     <xsd:simpleType name=\"port-list\">\n       <xsd:list\
    \ itemType=\"idmef:port-range\" />\n     </xsd:simpleType>\n     <xsd:simpleType\
    \ name=\"ntpstamp\">\n       <xsd:restriction base=\"xsd:string\">\n         <xsd:pattern\
    \ value=\"0x[A-Fa-f0-9]{8}.0x[A-Fa-f0-9]{8}\"/>\n       </xsd:restriction>\n \
    \    </xsd:simpleType>\n     <xsd:simpleType name=\"mime-type\">\n       <xsd:restriction\
    \ base=\"xsd:string\">\n       </xsd:restriction>\n     </xsd:simpleType>\n  \
    \   <!-- Section 3: Top-level element declarations.  The IDMEF-Message\n     \
    \     element and the types of messages it can include. -->\n     <xsd:complexType\
    \ name=\"IDMEF-Message\" >\n       <xsd:choice minOccurs=\"1\" maxOccurs=\"unbounded\"\
    >\n         <xsd:element ref=\"idmef:Alert\"     />\n         <xsd:element ref=\"\
    idmef:Heartbeat\" />\n       </xsd:choice>\n       <xsd:attribute name=\"version\"\
    \ type=\"xsd:decimal\"\n                      fixed=\"1.0\" />\n     </xsd:complexType>\n\
    \     <xsd:element name=\"IDMEF-Message\" type=\"idmef:IDMEF-Message\" />\n  \
    \   <xsd:complexType name=\"Alert\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"Analyzer\"\n                      type=\"idmef:Analyzer\" />\n      \
    \   <xsd:element name=\"CreateTime\"\n                      type=\"idmef:TimeWithNtpstamp\"\
    \ />\n         <xsd:element name=\"DetectTime\"\n                      type=\"\
    idmef:TimeWithNtpstamp\"\n                      minOccurs=\"0\"\n            \
    \          maxOccurs=\"1\" />\n         <xsd:element name=\"AnalyzerTime\"\n \
    \                     type=\"idmef:TimeWithNtpstamp\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"Source\"\
    \n                      type=\"idmef:Source\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n         <xsd:element name=\"\
    Target\"\n                      type=\"idmef:Target\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n         <xsd:element name=\"\
    Classification\"\n                      type=\"idmef:Classification\" />\n   \
    \      <xsd:element name=\"Assessment\"\n                      type=\"idmef:Assessment\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:choice minOccurs=\"0\" maxOccurs=\"1\">\n           <xsd:element\
    \ name=\"ToolAlert\"\n                        type=\"idmef:ToolAlert\" />\n  \
    \         <xsd:element name=\"OverflowAlert\"\n                        type=\"\
    idmef:OverflowAlert\" />\n           <xsd:element name=\"CorrelationAlert\"\n\
    \                        type=\"idmef:CorrelationAlert\" />\n         </xsd:choice>\n\
    \         <xsd:element name=\"AdditionalData\"\n                      type=\"\
    idmef:AdditionalData\"\n                      minOccurs=\"0\"\n              \
    \        maxOccurs=\"unbounded\" />\n       </xsd:sequence>\n       <xsd:attribute\
    \ name=\"messageid\"\n                      type=\"xsd:string\"\n            \
    \          default=\"0\" />\n     </xsd:complexType>\n     <xsd:element name=\"\
    Alert\" type=\"idmef:Alert\" />\n     <xsd:complexType name=\"Heartbeat\">\n \
    \      <xsd:sequence>\n         <xsd:element name=\"Analyzer\" type=\"idmef:Analyzer\"\
    \ />\n         <xsd:element name=\"CreateTime\"\n                      type=\"\
    idmef:TimeWithNtpstamp\" />\n         <xsd:element name=\"HeartbeatInterval\"\n\
    \                      type=\"xsd:integer\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"AnalyzerTime\"\
    \n                      type=\"idmef:TimeWithNtpstamp\"\n                    \
    \  minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"AdditionalData\"\n                      type=\"idmef:AdditionalData\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"unbounded\"\
    \ />\n       </xsd:sequence>\n       <xsd:attribute name=\"messageid\"\n     \
    \                 type=\"xsd:string\"\n                      default=\"0\" />\n\
    \     </xsd:complexType>\n     <xsd:element name=\"Heartbeat\"\n             \
    \     type=\"idmef:Heartbeat\" />\n     <!-- Section 4: Subclasses of the Alert\
    \ class that provide\n          more data for specific types of alerts. -->\n\
    \     <xsd:complexType name=\"CorrelationAlert\">\n       <xsd:sequence>\n   \
    \      <xsd:element name=\"name\"\n                      type=\"xsd:string\" />\n\
    \         <xsd:element name=\"alertident\"\n                      type=\"idmef:Alertident\"\
    \n                      minOccurs=\"1\"\n                      maxOccurs=\"unbounded\"\
    \ />\n       </xsd:sequence>\n     </xsd:complexType>\n     <xsd:complexType name=\"\
    OverflowAlert\">\n       <xsd:sequence>\n         <xsd:element name=\"program\"\
    \n                      type=\"xsd:string\" />\n         <xsd:element name=\"\
    size\"\n                      type=\"xsd:string\" />\n         <xsd:element name=\"\
    buffer\"\n                      type=\"xsd:hexBinary\" />\n       </xsd:sequence>\n\
    \     </xsd:complexType>\n     <xsd:complexType name=\"ToolAlert\">\n       <xsd:sequence>\n\
    \         <xsd:element name=\"name\"\n                      type=\"xsd:string\"\
    \ />\n         <xsd:element name=\"command\"\n                      type=\"xsd:string\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"alertident\"\n                      type=\"\
    idmef:Alertident\"\n                      minOccurs=\"1\"\n                  \
    \    maxOccurs=\"unbounded\" />\n       </xsd:sequence>\n     </xsd:complexType>\n\
    \     <!-- Section 5: The AdditionalData element.  This element allows an\n  \
    \        alert to include additional information that cannot be encoded\n    \
    \      elsewhere in the data model. -->\n     <xsd:complexType name=\"AdditionalData\"\
    >\n       <xsd:choice>\n         <xsd:element name=\"boolean\"\n             \
    \         type=\"xsd:boolean\" />\n         <xsd:element name=\"byte\"\n     \
    \                 type=\"xsd:byte\" />\n         <xsd:element name=\"character\"\
    >\n           <xsd:simpleType>\n             <xsd:restriction base=\"xsd:string\"\
    >\n               <xsd:minLength value=\"1\"/>\n               <xsd:maxLength\
    \ value=\"1\"/>\n             </xsd:restriction>\n           </xsd:simpleType>\n\
    \         </xsd:element>\n         <xsd:element name=\"date-time\"\n         \
    \             type=\"xsd:dateTime\" />\n         <xsd:element name=\"integer\"\
    \n                      type=\"xsd:integer\" />\n         <xsd:element name=\"\
    ntpstamp\"\n                      type=\"idmef:ntpstamp\" />\n         <xsd:element\
    \ name=\"portlist\"\n                      type=\"idmef:port-list\" />\n     \
    \    <xsd:element name=\"real\"\n                      type=\"xsd:decimal\" />\n\
    \         <xsd:element name=\"string\"\n                      type=\"xsd:string\"\
    \ />\n         <xsd:element name=\"byte-string\"\n                      type=\"\
    xsd:hexBinary\" />\n         <xsd:element name=\"xml\"\n                     \
    \ type=\"idmef:xmltext\" />\n       </xsd:choice>\n       <xsd:attribute name=\"\
    type\"\n                      type=\"idmef:additionaldata-type\" />\n       <xsd:attribute\
    \ name=\"meaning\"\n                      type=\"xsd:string\" />\n     </xsd:complexType>\n\
    \     <!-- Section 6: Elements related to identifying entities -\n          analyzers\
    \ (the senders of these messages), sources (of\n          attacks), and targets\
    \ (of attacks). -->\n     <xsd:complexType name=\"Analyzer\">\n       <xsd:sequence>\n\
    \         <xsd:element name=\"Node\"\n                      type=\"idmef:Node\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"Process\"\n                      type=\"idmef:Process\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"Analyzer\"\n                      type=\"idmef:Analyzer\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n       </xsd:sequence>\n       <xsd:attribute name=\"analyzerid\"\n    \
    \                  type=\"xsd:string\"\n                      default=\"0\" />\n\
    \       <xsd:attribute name=\"name\"\n                      type=\"xsd:string\"\
    \ />\n       <xsd:attribute name=\"manufacturer\"\n                      type=\"\
    xsd:string\" />\n       <xsd:attribute name=\"model\"\n                      type=\"\
    xsd:string\" />\n       <xsd:attribute name=\"version\"\n                    \
    \  type=\"xsd:string\" />\n       <xsd:attribute name=\"class\"\n            \
    \          type=\"xsd:string\" />\n       <xsd:attribute name=\"ostype\"\n   \
    \                   type=\"xsd:string\" />\n       <xsd:attribute name=\"osversion\"\
    \n                      type=\"xsd:string\" />\n     </xsd:complexType>\n    \
    \ <xsd:complexType name=\"Source\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"Node\"\n                      type=\"idmef:Node\"\n                 \
    \     minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"User\"\n                      type=\"idmef:User\"\n                 \
    \     minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"Process\"\n                      type=\"idmef:Process\"\n           \
    \           minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n      \
    \   <xsd:element name=\"Service\"\n                      type=\"idmef:Service\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n       </xsd:sequence>\n       <xsd:attribute name=\"ident\"\n         \
    \             type=\"xsd:string\"\n                      default=\"0\" />\n  \
    \     <xsd:attribute name=\"spoofed\"\n                      type=\"idmef:yes-no-type\"\
    \n                      default=\"unknown\" />\n       <xsd:attribute name=\"\
    interface\"\n                      type=\"xsd:string\" />\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"Target\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"Node\"\n                      type=\"idmef:Node\"\n                 \
    \     minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"User\"\n                      type=\"idmef:User\"\n                 \
    \     minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"Process\"\n                      type=\"idmef:Process\"\n           \
    \           minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n      \
    \   <xsd:element name=\"Service\"\n                      type=\"idmef:Service\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"File\"\n                      type=\"idmef:File\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"unbounded\"\
    \ />\n       </xsd:sequence>\n       <xsd:attribute name=\"ident\"\n         \
    \             type=\"xsd:string\"\n                      default=\"0\" />\n  \
    \     <xsd:attribute name=\"decoy\"\n                      type=\"idmef:yes-no-type\"\
    \n                      default=\"unknown\" />\n       <xsd:attribute name=\"\
    interface\"\n                      type=\"xsd:string\" />\n     </xsd:complexType>\n\
    \     <!-- Section 7: Support elements used for providing detailed info\n    \
    \      about entities - addresses, names, etc. -->\n     <xsd:complexType name=\"\
    Address\">\n       <xsd:sequence>\n         <xsd:element name=\"address\"\n  \
    \                    type=\"xsd:string\" />\n         <xsd:element name=\"netmask\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n       </xsd:sequence>\n      \
    \ <xsd:attribute name=\"ident\"\n                      type=\"xsd:string\"\n \
    \                     default=\"0\" />\n       <xsd:attribute name=\"category\"\
    \n                      type=\"idmef:address-category\"\n                    \
    \  default=\"unknown\" />\n       <xsd:attribute name=\"vlan-name\"\n        \
    \              type=\"xsd:string\" />\n       <xsd:attribute name=\"vlan-num\"\
    \n                      type=\"xsd:string\" />\n     </xsd:complexType>\n    \
    \ <xsd:complexType name=\"Assessment\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"Impact\"\n                      type=\"idmef:Impact\"\n             \
    \         minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n        \
    \ <xsd:element name=\"Action\"\n                      type=\"idmef:Action\"\n\
    \                      minOccurs=\"0\"\n                      maxOccurs=\"unbounded\"\
    \ />\n         <xsd:element name=\"Confidence\"\n                      type=\"\
    idmef:Confidence\"\n                      minOccurs=\"0\"\n                  \
    \    maxOccurs=\"1\" />\n       </xsd:sequence>\n     </xsd:complexType>\n   \
    \  <xsd:complexType name=\"Reference\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"name\"\n                      type=\"xsd:string\" />\n         <xsd:element\
    \ name=\"url\"\n                      type=\"xsd:string\" />\n       </xsd:sequence>\n\
    \       <xsd:attribute name=\"origin\"\n                      type=\"idmef:reference-origin\"\
    \n                      default=\"unknown\" />\n       <xsd:attribute name=\"\
    meaning\"\n                      type=\"xsd:string\" />\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"Classification\">\n       <xsd:sequence>\n     \
    \    <xsd:element name=\"Reference\"\n                      type=\"idmef:Reference\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"unbounded\"\
    \ />\n       </xsd:sequence>\n       <xsd:attribute name=\"ident\"\n         \
    \             type=\"xsd:string\"\n                      default=\"0\" />\n  \
    \     <xsd:attribute name=\"text\"\n                      type=\"xsd:string\"\n\
    \                      use=\"required\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"File\">\n       <xsd:sequence>\n         <xsd:element name=\"name\"\n\
    \                      type=\"xsd:string\" />\n         <xsd:element name=\"path\"\
    \n                      type=\"xsd:string\" />\n         <xsd:element name=\"\
    create-time\"\n                      type=\"xsd:dateTime\"\n                 \
    \     minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"modify-time\"\n                      type=\"xsd:dateTime\"\n        \
    \              minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n   \
    \      <xsd:element name=\"access-time\"\n                      type=\"xsd:dateTime\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"data-size\"\n                      type=\"\
    xsd:integer\"\n                      minOccurs=\"0\"\n                      maxOccurs=\"\
    1\" />\n         <xsd:element name=\"disk-size\"\n                      type=\"\
    xsd:integer\"\n                      minOccurs=\"0\"\n                      maxOccurs=\"\
    1\" />\n         <xsd:element name=\"FileAccess\"\n                      type=\"\
    idmef:FileAccess\"\n                      minOccurs=\"0\"\n                  \
    \    maxOccurs=\"unbounded\" />\n         <xsd:element name=\"Linkage\"\n    \
    \                  type=\"idmef:Linkage\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n         <xsd:element name=\"\
    Inode\"\n                      type=\"idmef:Inode\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"Checksum\"\
    \n                      type=\"idmef:Checksum\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n       </xsd:sequence>\n\
    \       <xsd:attribute name=\"ident\"\n                      type=\"xsd:string\"\
    \n                      default=\"0\" />\n       <xsd:attribute name=\"category\"\
    \n                      type=\"idmef:file-category\"\n                      use=\"\
    required\" />\n       <xsd:attribute name=\"fstype\"\n                      type=\"\
    xsd:string\"\n                      use=\"required\" />\n       <xsd:attribute\
    \ name=\"file-type\"\n                      type=\"idmef:mime-type\" />\n    \
    \ </xsd:complexType>\n     <xsd:complexType name=\"Permission\">\n       <xsd:attribute\
    \ name=\"perms\"\n                      type=\"idmef:file-permission\"\n     \
    \                 use=\"required\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"FileAccess\">\n       <xsd:sequence>\n         <xsd:element name=\"UserId\"\
    \n                      type=\"idmef:UserId\" />\n         <xsd:element name=\"\
    permission\"\n                      type=\"idmef:Permission\"\n              \
    \        minOccurs=\"1\"\n                      maxOccurs=\"unbounded\" />\n \
    \      </xsd:sequence>\n     </xsd:complexType>\n     <xsd:complexType name=\"\
    Inode\">\n       <xsd:sequence>\n         <xsd:element name=\"change-time\"\n\
    \                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:sequence minOccurs=\"\
    0\" maxOccurs=\"1\">\n           <xsd:element name=\"number\"\n              \
    \          type=\"xsd:string\" />\n           <xsd:element name=\"major-device\"\
    \n                        type=\"xsd:string\" />\n           <xsd:element name=\"\
    minor-device\"\n                        type=\"xsd:string\" />\n         </xsd:sequence>\n\
    \         <xsd:sequence minOccurs=\"0\" maxOccurs=\"1\">\n           <xsd:element\
    \ name=\"c-major-device\"\n                        type=\"xsd:string\" />\n  \
    \         <xsd:element name=\"c-minor-device\"\n                        type=\"\
    xsd:string\" />\n         </xsd:sequence>\n       </xsd:sequence>\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"Linkage\">\n       <xsd:choice>\n         <xsd:sequence>\n\
    \           <xsd:element name=\"name\" type=\"xsd:string\" />\n           <xsd:element\
    \ name=\"path\" type=\"xsd:string\" />\n         </xsd:sequence>\n         <xsd:element\
    \ name=\"File\" type=\"idmef:File\" />\n       </xsd:choice>\n       <xsd:attribute\
    \ name=\"category\"\n                      type=\"idmef:linkage-category\"\n \
    \                     use=\"required\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"Checksum\">\n       <xsd:sequence>\n         <xsd:element name=\"value\"\
    \n                      type=\"xsd:string\" />\n         <xsd:element name=\"\
    key\"\n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n       </xsd:sequence>\n      \
    \ <xsd:attribute name=\"algorithm\"\n                      type=\"idmef:checksum-algorithm\"\
    \n                      use=\"required\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"Node\">\n       <xsd:sequence>\n         <xsd:element name=\"location\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:choice>\n       \
    \    <xsd:element name=\"name\"\n                        type=\"xsd:string\" />\n\
    \           <xsd:element name=\"Address\"\n                        type=\"idmef:Address\"\
    \ />\n         </xsd:choice>\n         <xsd:element name=\"Address\"\n       \
    \               type=\"idmef:Address\"\n                      minOccurs=\"0\"\n\
    \                      maxOccurs=\"unbounded\" />\n       </xsd:sequence>\n  \
    \     <xsd:attribute name=\"ident\"\n                      type=\"xsd:string\"\
    \n                      default=\"0\" />\n       <xsd:attribute name=\"category\"\
    \n                      type=\"idmef:node-category\"\n                      default=\"\
    unknown\" />\n     </xsd:complexType>\n     <xsd:complexType name=\"Process\"\
    >\n       <xsd:sequence>\n         <xsd:element name=\"name\"\n              \
    \        type=\"xsd:string\" />\n         <xsd:element name=\"pid\"\n        \
    \              type=\"xsd:integer\"\n                      minOccurs=\"0\"\n \
    \                     maxOccurs=\"1\" />\n         <xsd:element name=\"path\"\n\
    \                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"arg\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n         <xsd:element name=\"\
    env\"\n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"unbounded\" />\n       </xsd:sequence>\n\
    \       <xsd:attribute name=\"ident\"\n                      type=\"xsd:string\"\
    \n                      default=\"0\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"Service\">\n       <xsd:sequence>\n         <xsd:choice>\n          \
    \ <xsd:sequence>\n             <xsd:element name=\"name\"\n                  \
    \        type=\"xsd:string\" />\n             <xsd:element name=\"port\"\n   \
    \                       type=\"xsd:integer\"\n                          minOccurs=\"\
    0\"\n                          maxOccurs=\"1\" />\n           </xsd:sequence>\n\
    \           <xsd:sequence>\n             <xsd:element name=\"port\"\n        \
    \                  type=\"xsd:integer\" />\n             <xsd:element name=\"\
    name\"\n                          type=\"xsd:string\"\n                      \
    \    minOccurs=\"0\"\n                          maxOccurs=\"1\" />\n         \
    \  </xsd:sequence>\n           <xsd:element name=\"portlist\"\n              \
    \          type=\"idmef:port-list\" />\n         </xsd:choice>\n         <xsd:element\
    \ name=\"protocol\"\n                      type=\"xsd:string\"\n             \
    \         minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n        \
    \ <xsd:element name=\"SNMPService\"\n                      type=\"idmef:SNMPService\"\
    \n                      minOccurs=\"0\"\n                      maxOccurs=\"1\"\
    \ />\n         <xsd:element name=\"WebService\"\n                      type=\"\
    idmef:WebService\"\n                      minOccurs=\"0\"\n                  \
    \    maxOccurs=\"1\" />\n       </xsd:sequence>\n       <xsd:attribute name=\"\
    ident\"\n                      type=\"xsd:string\"\n                      default=\"\
    0\" />\n       <xsd:attribute name=\"ip_version\"\n                      type=\"\
    xsd:integer\" />\n       <xsd:attribute name=\"iana_protocol_number\"\n      \
    \                type=\"xsd:integer\" />\n       <xsd:attribute name=\"iana_protocol_name\"\
    \n                      type=\"xsd:string\" />\n     </xsd:complexType>\n    \
    \ <xsd:complexType name=\"WebService\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"url\"\n                      type=\"xsd:anyURI\" />\n         <xsd:element\
    \ name=\"cgi\"\n                      type=\"xsd:string\"\n                  \
    \    minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n         <xsd:element\
    \ name=\"http-method\"\n                      type=\"xsd:string\"\n          \
    \            minOccurs=\"0\"\n                      maxOccurs=\"1\" />\n     \
    \    <xsd:element name=\"arg\"\n                      type=\"xsd:string\"\n  \
    \                    minOccurs=\"0\"\n                      maxOccurs=\"unbounded\"\
    \ />\n       </xsd:sequence>\n     </xsd:complexType>\n     <xsd:complexType name=\"\
    SNMPService\">\n       <xsd:sequence>\n         <xsd:element name=\"oid\"\n  \
    \                    type=\"xsd:string\"\n                      minOccurs=\"0\"\
    \n                      maxOccurs=\"1\" />\n         <xsd:element name=\"messageProcessingModel\"\
    \n                      type=\"xsd:integer\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"securityModel\"\
    \n                      type=\"xsd:integer\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"securityName\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"securityLevel\"\
    \n                      type=\"xsd:integer\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"contextName\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"contextEngineID\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n         <xsd:element name=\"command\"\
    \n                      type=\"xsd:string\"\n                      minOccurs=\"\
    0\"\n                      maxOccurs=\"1\" />\n       </xsd:sequence>\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"User\">\n       <xsd:sequence>\n         <xsd:element\
    \ name=\"UserId\"\n                      type=\"idmef:UserId\"\n             \
    \         minOccurs=\"1\"\n                      maxOccurs=\"unbounded\" />\n\
    \       </xsd:sequence>\n       <xsd:attribute name=\"ident\"\n              \
    \        type=\"xsd:string\"\n                      default=\"0\" />\n       <xsd:attribute\
    \ name=\"category\"\n                      type=\"idmef:user-category\"\n    \
    \                  default=\"unknown\" />\n     </xsd:complexType>\n     <xsd:complexType\
    \ name=\"UserId\" >\n       <xsd:choice>\n         <xsd:sequence>\n          \
    \ <xsd:element name=\"name\"\n                        type=\"xsd:string\" />\n\
    \           <xsd:element name=\"number\"\n                        type=\"xsd:integer\"\
    \n                        minOccurs=\"0\"\n                        maxOccurs=\"\
    1\" />\n         </xsd:sequence>\n         <xsd:sequence>\n           <xsd:element\
    \ name=\"number\"\n                        type=\"xsd:integer\" />\n         \
    \  <xsd:element name=\"name\"\n                        type=\"xsd:string\"\n \
    \                       minOccurs=\"0\"\n                        maxOccurs=\"\
    1\" />\n         </xsd:sequence>\n       </xsd:choice>\n       <xsd:attribute\
    \ name=\"ident\"\n                      type=\"xsd:string\"\n                \
    \      default=\"0\" />\n       <xsd:attribute name=\"type\"\n               \
    \       type=\"idmef:id-type\"\n                      default=\"original-user\"\
    \ />\n       <xsd:attribute name=\"tty\"\n                      type=\"xsd:string\"\
    \ />\n     </xsd:complexType>\n     <!-- Section 8: Simple elements with sub-elements\
    \ or attributes\n          of a special nature. -->\n     <xsd:complexType name=\"\
    Action\">\n       <xsd:simpleContent>\n         <xsd:extension base=\"xsd:string\"\
    \ >\n           <xsd:attribute name=\"category\"\n                          type=\"\
    idmef:action-category\"\n                          default=\"other\" />\n    \
    \     </xsd:extension>\n       </xsd:simpleContent>\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"Confidence\">\n       <xsd:simpleContent>\n    \
    \     <xsd:extension base=\"xsd:string\" >\n           <xsd:attribute name=\"\
    rating\"\n                          type=\"idmef:confidence-rating\"\n       \
    \                   use=\"required\" />\n         </xsd:extension>\n       </xsd:simpleContent>\n\
    \     </xsd:complexType>\n     <xsd:complexType name=\"TimeWithNtpstamp\">\n \
    \      <xsd:simpleContent>\n         <xsd:extension base=\"xsd:dateTime\">\n \
    \          <xsd:attribute name=\"ntpstamp\"\n                          type=\"\
    idmef:ntpstamp\"\n                          use=\"required\"/>\n         </xsd:extension>\n\
    \       </xsd:simpleContent>\n     </xsd:complexType>\n     <xsd:complexType name=\"\
    Impact\">\n       <xsd:simpleContent>\n         <xsd:extension base=\"xsd:string\"\
    \ >\n           <xsd:attribute name=\"severity\"\n                          type=\"\
    idmef:impact-severity\" />\n           <xsd:attribute name=\"completion\"\n  \
    \                        type=\"idmef:impact-completion\" />\n           <xsd:attribute\
    \ name=\"type\" type=\"idmef:impact-type\"\n                          default=\"\
    other\" />\n         </xsd:extension>\n       </xsd:simpleContent>\n     </xsd:complexType>\n\
    \     <xsd:complexType name=\"Alertident\">\n       <xsd:simpleContent>\n    \
    \     <xsd:extension base=\"xsd:string\" >\n           <xsd:attribute name=\"\
    analyzerid\"\n                          type=\"xsd:string\" />\n         </xsd:extension>\n\
    \       </xsd:simpleContent>\n     </xsd:complexType>\n     <xsd:complexType name=\"\
    xmltext\">\n       <xsd:complexContent mixed=\"true\">\n         <xsd:restriction\
    \ base=\"xsd:anyType\">\n           <xsd:sequence>\n             <xsd:any namespace=\"\
    ##other\"\n                      processContents=\"lax\"\n                   \
    \   minOccurs=\"0\"\n                      maxOccurs=\"unbounded\" />\n      \
    \     </xsd:sequence>\n         </xsd:restriction>\n       </xsd:complexContent>\n\
    \     </xsd:complexType>\n   </xsd:schema>\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Herve Debar\n   France Telecom R & D\n   42 Rue des Coutures\n\
    \   Caen  14000\n   FR\n   Phone: +33 2 31 75 92 61\n   EMail: herve.debar@orange-ftgroup.com\n\
    \   URI:   http://www.francetelecom.fr/\n   David A. Curry\n   Guardian Life Insurance\
    \ Company of America\n   7 Hanover Square, 24th Floor\n   New York, NY  10004\n\
    \   US\n   Phone: +1 212 919-3086\n   EMail: david_a_curry@glic.com\n   URI: \
    \  http://www.glic.com/\n   Benjamin S. Feinstein\n   SecureWorks, Inc.\n   PO\
    \ Box 95007\n   Atlanta, GA 30347\n   US\n   Phone: +1 404 327-6339\n   Email:\
    \ bfeinstein@acm.org\n   URI:   http://www.secureworks.com/\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document\
    \ is subject to the rights, licenses and restrictions\n   contained in BCP 78,\
    \ and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE\
    \ INTERNET ENGINEERING TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED,\
    \ INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION\
    \ HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY\
    \ OR FITNESS FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at\n   ietf-ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
