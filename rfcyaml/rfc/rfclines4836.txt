Abstract This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing IEEE 802.3 Medium Attachment Units (MAUs).
This document obsoletes RFC 3636.
It amends that specification by moving MAU type OBJECT IDENTITY definitions and relevant textual conventions into a separate Internet Assigned Number Authority (IANA) maintained MIB module.
In addition, management information is added to enable support for Ethernet in the First Mile (EFM) and 10GBASE CX4 MAUs.
This document defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing IEEE 802.3 [IEEE802.3] Medium Attachment Units (MAUs).
The previous version of this document, RFC 3636 [RFC3636], defined a single MIB module.
This document splits the original MIB module into two, putting frequently updated object identities and textual conventions into a separate, IANA maintained MIB module, in order to decrease the need of updating the basic MAU MIB module.
The first version of the IANA maintained MIB module also extends the list of managed objects to support Ethernet in the First Mile (EFM) and 10GBASE CX4 interfaces.
Ethernet technology, as defined by the 802.3 Working Group of the IEEE, continues to evolve, with scalable increases in speed, new types of cabling and interfaces, and new features.
This evolution may require changes in the managed objects in order to reflect this new functionality.
This document, as with other documents issued by this working group, reflects a certain stage in the evolution of Ethernet technology.
In the future, this document might be revised, or new documents might be issued by the Ethernet Interfaces and Hub MIB Working Group, in order to reflect the evolution of Ethernet technology.
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
Overview Instances of these object types represent attributes of an IEEE 802.3 MAU.
Several types of MAUs are defined in the IEEE 802.3 CSMA/CD standard [IEEE802.3].
These MAUs may be connected to IEEE 802.3 repeaters or to 802.3 (Ethernet like) interfaces.
For convenience, this document refers to these devices as "repeater MAUs" and "interface MAUs.
" The definitions presented here are based on Section 30.5, "Layer Management for 10 Mb/s, 100 Mb/s, 1000 Mb/s, and 10 Gb/s Medium Attachment Units (MAUs)", Section 30.6, "Management for link Auto  Negotiation", and Annex 30A, "GDMO Specifications for 802.3 managed object classes" of IEEE Std.
This specification is intended to provide for management of all types of Ethernet/802.3 MAUs.
The management definitions provided in this document are intended to be a superset of those defined by RFC 3636
In order to decrease the need of updating the basic MAU MIB module due to the new MAU type, Media Available state, Auto Negotiation capability and/or Jack type introduction, all relevant object identities and textual conventions have been moved to a separate, IANA maintained MIB module IANA MAU MIB, the first version of which is defined in this document.
Thus when a new MAU type, Media Available state, Auto Negotiation capability, and/or Jack type is defined by the IEEE 802.3 working group, only the IANA maintained module needs to be revised, leaving the basic MAU MIB module defined in this document unchanged.
In addition, the new definitions are added to the IANA maintained MIB module, to support Ethernet in the First Mile (EFM) and 10GBASE CX4 interfaces, defined in IEEE Std 802.3ah 2004
respectively, now part of IEEE Std
It should be noted that the changes made in this revision will not be entirely backward compatible with MIB modules that currently import MAU type object identity descriptors from the MAU MIB; such modules will need to be revised to import those DESCRIPTORS from the IANA  MAU MIB.
Similarly, any management applications that process the object identity definitions (e.g., to present the DESCRIPTION text to a user) will need to get those definitions from the IANA MAU MIB instead of the MAU MIB.
While it is true that changes that require such adjustments are not strictly compliant with the SMIv2 rules governing MIB module revisions (see [RFC2578] Section 10), in this case continued high maintenance costs that would result from not making these changes make the deviation from the rules justified.
It should be noted that the working group was not able to find any examples of MIB modules or management applications that would actually be negatively affected by the changes.
It is assumed that an agent implementing MAU MIB will also implement (at least)
the 'system' group defined in the SNMPv2 MIB [RFC3418].
The following sections identify other MIBs that such an agent should implement.
Relationship to the Interfaces MIB
The sections of this document that define interface
MAU related objects specify an extension to the Interfaces MIB [RFC2863].
An agent implementing these interface MAU related objects MUST also implement the relevant groups of the ifCompliance3 MODULE COMPLIANCE statement of the Interface MIB.
The value of the object ifMauIfIndex is the same as the value of 'ifIndex' used to instantiate the interface to which the given MAU is connected.
It is REQUIRED that an agent implementing the interface MAU related objects in the MAU MIB will also fully comply with the dot3Compliance2 MODULE COMPLIANCE statement of the Ethernet like Interfaces MIB, [RFC3635].
Furthermore, when the interface MAU related objects are used to manage a 10GBASE W PHY
i.e., when ifMauType is equal to dot3MauType10GigBaseW or any other 10GBASE W variant
then the agent MUST also support the Ethernet WAN Interface Sublayer (WIS) MIB [RFC3637] and must follow the interface layering model specified therein.
In that case the value of the object ifMauIfIndex is the same as the value of 'ifIndex' for the layer at the top of the stack, i.e., for the ifTable entry that has 'ifType' equal to ethernetCsmacd(6).
If the interface MAU related objects are used to manage a PHY that allows the MAU type to be changed dynamically, then the agent SHALL create ifTable, ifStackTable, and ifInvStackTable entries that pertain to the WIS when ifMauDefaultType is changed to a 10GBASEW variant (i.e., one of dot3MauType10GigBaseW, dot3MauType10GigBaseEW, dot3MauType10GigBaseLW, or dot3MauType10GigBaseSW) from any other type, and shall destroy the WIS related entries when ifMauDefaultType is changed to a non  10GBASE W type.
The agent SHALL also change the values of 'ifConnectorPresent' and 'ifHighSpeed' in the ifTable entry indexed by ifMauIfIndex as specified in [RFC3635] and [RFC3637] when ifMauDefaultType is manipulated in this way, but SHALL NOT otherwise alter that entry.
(Note that repeater ports are not represented as interfaces in the Interface MIB.)
Relationship to the 802.3 Repeater MIB Module
The section of this document that defines repeater MAU related objects specifies an extension to the 802.3 Repeater MIB defined in [RFC2108].
An agent implementing these repeater MAU related objects MUST also comply with the snmpRptrModCompl compliance statement of the 802.3 Repeater MIB module.
The values of 'rpMauGroupIndex' and 'rpMauPortIndex' used to instantiate a repeater MAU variable SHALL be the same as the values of 'rptrPortGroupIndex' and 'rptrPortIndex' used to instantiate the port that the given MAU is connected to.
In some situations, a MAU can be "internal"   i.e., its functionality is implemented entirely within a device.
For example, a managed repeater may contain an internal repeater MAU and/or an internal interface MAU through which management communications originating on one of the repeater's external ports pass, in order to reach the management agent associated with the repeater.
Such internal MAUs may or may not be managed.
If they are managed, objects describing their attributes should appear in the appropriate MIB subtree: dot3RpMauBasicGroup for internal repeater MAUs and dot3IfMauBasicGroup for internal interface MAUs.
This section contains the mapping between relevant managed objects (attributes) defined in [IEEE802.3] Clause 30, and managed objects defined in this document.
The following IEEE 802.3 managed objects have not been included in the MAU MIB for the following reasons.
Unmapped IEEE 802.3 Managed Objects 3.5.
Addition of New MAU Types 3.5.1.
The dot3MauType OBJECT IDENTIFIER and its OBJECT IDENTITY definitions has been moved from the MAU MIB into the IANA maintained IANA MAU  MIB, the first version of which is defined in this document.
When a new IEEE 802.3 MAU is defined, IANA can re issue a version of IANA MAU MIB with the new dot3MauType OBJECT IDENTITY and its matching IANAifMauTypeListBits textual convention value and, possibly, with new IANAifMauMediaAvailable, IANAifMauAutoNegCapBits, and/or IANAifJackType values.
An Expert Review, as defined in RFC 2434 [RFC2434], is REQUIRED for the addition of the new MAU, Media Available states, Auto Negotiation capabilities, and/or Jack types.
In some cases, new MAU types may require additional managed objects or may have side effects on the behavior of existing managed objects.
In such cases a standards track specification (which may be a new document or a revision of this document) is also REQUIRED.
Any such document is REQUIRED to note any special properties of the MAU types that it defines for example, side effects on the ifStackTable as noted in this document for 10GBASE W MAUs.
The syntax of ifMauTypeListBits is changed to be a textual convention, such that the enumerated integer values are now defined in the textual convention IANAifMauTypeListBits, which can be re  specified (with additional values, when defined by IEEE 802.3) in the IANA maintained MIB module without issuing a new version of this document.
The syntax of ifMauMediaAvailable and rpMauMediaAvailable is changed to be a textual convention, such that the enumerated integer values are now defined in the textual convention IANAifMauMediaAvailable, which can be re specified (with additional values, when defined by IEEE 802.3) in the IANA maintained MIB module without issuing a new version of this document.
The syntax of ifMauAutoNegCapabilityBits, ifMauAutoNegCapAdvertisedBits, and ifMauAutoNegCapReceivedBits
objects is changed to be a textual convention, such that the enumerated integer values are now defined in the textual convention IANAifMauAutoNegCapBits, which can be re specified (with additional values, when defined by IEEE 802.3) in the IANA maintained MIB module without issuing a new version of this document.
The JackType Textual Convention has been deprecated in favor of the IANAifJackType defined in the IANA maintained MIB module, so the new Jack types can be added (when defined by IEEE 802.3) without issuing a new version of this document.
Integer32, Counter64, OBJECT TYPE, MODULE IDENTITY, NOTIFICATION TYPE, mib 2 FROM SNMPv2
IANAifMauTypeListBits, IANAifMauMediaAvailable, IANAifMauAutoNegCapBits, IANAifJackType FROM
IANA MAU MIB   http://www.iana.org/assignments/ianamau mib ;
mauMod MODULE IDENTITY LAST UPDATED
In Body: subscribe your email address Chair:
Alcatel Lucent Schagen 33 3461
GL Linschoten Netherlands Phone:  31 348 407 775 EMail
Bazel St., P.O.B. 10173 Petach Tikva 10173
972 3 924 3491 EMail: edward.beili@actelis.com" DESCRIPTION "Management information for 802.3 MAUs.
The following reference is used throughout this MIB module: [IEEE802.3] refers to: IEEE Std 802.3, 2005 Edition: 'IEEE Standard for Information technology Telecommunications and information exchange between systems Local and metropolitan area networks Specific requirements Part 3:
Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications'.
Of particular interest is Clause 30, 'Management'.
This version of this MIB module is part of RFC 4836; see the RFC itself for full legal notices."
Updated to reference IANA maintaned textual conventions for MAU types, Media Availability state, Auto Negotiation capabilities, and jack types, instead of using internally defined values.
This version is published as RFC 4836."
"Updated to include support for 10 Gb/s MAUs.
This resulted in the following revisions: Added OBJECT IDENTITY definitions for 10 gigabit MAU types Added fiberLC jack type to JackType TC
Extended ifMauTypeListBits with bits for the 10 gigabit MAU types
Added enumerations to ifMauMediaAvailable, and updated its DESCRIPTION to reflect behaviour at 10 Gb/s Added 64 bit version of ifMauFalseCarriers and added mauIfGrpHCStats object group to contain the new object Deprecated mauModIfCompl2 and replaced it with mauModIfCompl3, which includes the new object group This version published as RFC 3636.
This version published as RFC 2668.
Updated to include support for 1000 Mb/sec MAUs and flow control negotiation."
"Version published as RFC 2239."
1993 DESCRIPTION "Initial version, published as RFC 1515."
This TC has been deprecated in favour of IANAifJackType.
Common enumeration values for repeater and interface MAU jack types.
current DESCRIPTION "Table of descriptive and status information about the MAU(s) attached to the ports of a repeater."
An entry in the table, containing information about a single MAU."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the group containing the port to which the MAU described by this entry is connected.
In practice, a group will generally be a field replaceable unit (i.e., module, card, or board) that can fit in the physical system enclosure, and the group number will correspond to a number marked on the physical enclosure.
The group denoted by a particular value of this object is the same as the group denoted by the same value of rptrGroupIndex."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the repeater port within group rpMauGroupIndex to which the MAU described by this entry is connected."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same port (rpMauPortIndex).
"This object identifies the MAU type.
Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA MAU MIB module, as OBJECT IDENTITIES of dot3MauType.
If the MAU type is unknown, the object identifier zeroDotZero is returned.
The current state of the MAU.
This object MAY be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle, and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of rpMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected.
The MAU MAY return other(1) value for the rpMauJabberState and rpMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power on cycle of at least one half second would.
The agent is not required to return the value reset(6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
"This object identifies Media Available state of the MAU, complementary to the rpMauStatus.
Values for the standard IEEE
802.3 Media Available states are defined in the IANA maintained IANA MAU MIB module, as IANAifMauMediaAvailable TC.
"A count of the number of times that rpMauMediaAvailable for this MAU instance leaves the state available(3).
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange."
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent MUST always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value.
"A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX,
dot3MauType100BaseFX, and all 1000Mbps types, this counter will always indicate zero.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange.
"A count of the number of false carrier events during IDLE in 100BASE X links.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event.
This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX, and all 1000Mbps types.
For all other MAU types, this counter will always indicate zero.
The approximate minimum time for rollover of this counter is 7.4 hours.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange."
The rpJackTable applies to MAUs attached to repeaters   which have one or more external jacks (connectors).
SEQUENCE OF RpJackEntry MAX ACCESS
current DESCRIPTION "Information about the external jacks attached to MAUs attached to the ports of a repeater."
An entry in the table, containing information about a particular jack."
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU (rpMauIndex)."
The Basic Interface MAU Table
SEQUENCE OF IfMauEntry MAX ACCESS
current DESCRIPTION "Table of descriptive and status information about MAU(s) attached to an interface."
An entry in the table, containing information about a single MAU."
read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the interface to which the MAU described by this entry is connected."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same interface (ifMauIfIndex).
"This object identifies the MAU type.
Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA MAU MIB module, as OBJECT IDENTITIES of dot3MauType.
If the MAU type is unknown, the object identifier zeroDotZero is returned.
This object represents the operational type of the MAU, as determined by either 1)
the result of the auto negotiation function or 2) if auto negotiation is not enabled or is not implemented for this MAU, by the value of the object ifMauDefaultType.
In case 2), a set to the object ifMauDefaultType will force the MAU into the new operating mode."
, standby(4), shutdown(5), reset(6) } MAX ACCESS
The current state of the MAU.
This object MAY be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of ifMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected.
The MAU MAY return other(1) value for the ifMauJabberState and ifMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power on cycle of at least one half second would.
The agent is not required to return the value reset(6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
"This object identifies Media Available state of the MAU, complementary to the ifMauStatus.
Values for the standard IEEE
802.3 Media Available states are defined in the IANA maintained IANA MAU MIB module, as IANAifMauMediaAvailable TC.
"A count of the number of times that ifMauMediaAvailable for this MAU instance leaves the state available(3).
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent MUST always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value."
"A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
This counter will always indicate zero for MAUs of type dot3MauTypeAUI and those of speeds above 10Mbps.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.
"A count of the number of false carrier events during IDLE in 100BASE X and 1000BASE X links.
For all other MAU types, this counter will always indicate zero.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms for 100BASE X and once per 10us for 1000BASE X until the next CarrierEvent.
This counter can roll over very quickly.
A management station is advised to poll the ifMauHCFalseCarriers instead of this counter in order to avoid loss of information.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.
This object has been deprecated in favour of ifMauTypeListBits.
A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be.
The value is a sum that initially takes the value zero.
Then, for each type capability of this MAU, 2 raised to the power noted below is added to the sum.
For example, a MAU that has the capability to be only 10BASE T would have a value of 512 (2  9).
In contrast, a MAU that supports both 10Base T (full duplex) and 100BASE TX (full duplex) would have a value of ((2  11)
10BASE T  half duplex mode 11
If auto negotiation is present on this MAU, this object will map to ifMauAutoNegCapability."
"This object identifies the default administrative baseband MAU type to be used in conjunction with the operational MAU type denoted by ifMauType.
The set of possible values for this object is the same as the set defined for the ifMauType object.
This object represents the administratively configured type of the MAU.
If auto negotiation is not enabled or is not implemented for this MAU, the value of this object determines the operational type of the MAU.
In this case, a set to this object will force the MAU into the specified operating mode.
If auto negotiation is implemented and enabled for this MAU, the operational type of the MAU is determined by auto negotiation, and the value of this object denotes the type to which the MAU will automatically revert if/when auto negotiation is later disabled.
It may be necessary to provide for underlying hardware implementations which do not follow the exact behavior specified above.
In particular, when ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by this object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
"This object indicates whether or not auto negotiation is supported on this MAU."
"A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be.
If auto negotiation is present on this MAU, this object will map to ifMauAutoNegCapabilityBits.
Note that this MAU may be capable of operating as a MAU type that is beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauTypeListBits TC."
"A count of the number of false carrier events during IDLE in 100BASE X and 1000BASE X links.
For all other MAU types, this counter will always indicate zero.
This counter does not increment at the symbol rate.
This counter is a 64 bit version of ifMauFalseCarriers.
Since the 32 bit version of this counter can roll over very quickly, management stations are advised to poll the 64 bit version instead, in order to avoid loss of information.
Discontinuities in the value of this counter can occur at re initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.
current DESCRIPTION "Information about the external jacks attached to MAUs attached to an interface."
An entry in the table, containing information about a particular jack."
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU."
{ ifJackEntry 1 } ifJackType OBJECT TYPE SYNTAX
SEQUENCE OF IfMauAutoNegEntry MAX ACCESS
current DESCRIPTION "Configuration and status objects for the auto negotiation function of MAUs attached to interfaces.
The ifMauAutoNegTable applies to systems in which auto negotiation is supported on one or more MAUs attached to interfaces.
Note that if auto negotiation is present and enabled, the ifMauType object reflects the result of the auto negotiation function."
ifMauAutoNegRemoteFaultAdvertised INTEGER, ifMauAutoNegRemoteFaultReceived   INTEGER } ifMauAutoNegAdminStatus OBJECT
INTEGER { enabled(1), disabled(2) } MAX ACCESS
Setting this object to enabled(1) will cause the interface that has the auto negotiation signaling ability to be enabled.
If the value of this object is disabled(2) then the interface will act as it would if it had no auto negotiation signaling.
Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object ifMauDefaultType.
When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by the ifMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
"A value indicating whether the remote end of the link is using auto negotiation signaling.
It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received."
"A value indicating the current status of the auto negotiation process.
The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE802.3].
This object has been deprecated in favour of ifMauAutoNegCapabilityBits.
A value that uniquely identifies the set of capabilities of the local auto negotiation entity.
The value is a sum that initially takes the value zero.
Then, for each capability of this interface, 2 raised to the power noted below is added to the sum.
For example, an interface that has the capability to support only 100Base TX half duplex would have a value of 32768 (2  15).
In contrast, an interface that supports both 100Base TX half duplex and 100Base
TX full duplex would have a value of 98304 ((2  15)
this MIB may have capabilities that extend beyond the scope of this MIB.
This object has been deprecated in favour of ifMauAutoNegCapAdvertisedBits.
A value that uniquely identifies the set of capabilities advertised by the local auto negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Capabilities in this object that are not available in ifMauAutoNegCapability cannot be enabled."
This object has been deprecated in favour of ifMauAutoNegCapReceivedBits.
A value that uniquely identifies the set of capabilities received from the remote auto negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Note that interfaces that support this MIB may be attached to remote auto negotiation entities that have capabilities beyond the scope of this MIB."
"If the value of this object is set to restart(1) then this will force auto negotiation to begin link renegotiation.
If auto negotiation signaling is disabled, a write to this object has no effect.
Setting the value of this object to norestart(2) has no effect.
"A value that uniquely identifies the set of capabilities of the local auto negotiation entity.
Note that interfaces that support
this MIB may have capabilities that extend beyond the scope of this MIB.
Note that the local auto negotiation entity may support some capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.
A value that uniquely identifies the set of capabilities advertised by the local auto negotiation entity.
Capabilities in this object that are not available in ifMauAutoNegCapabilityBits cannot be enabled.
Note that the local auto negotiation entity may advertise some capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.
"A value that uniquely identifies the set of capabilities received from the remote auto negotiation entity.
Note that interfaces that support this MIB may be attached to remote auto negotiation entities that have capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.
INTEGER { noError(1), offline(2), linkFailure(3), autoNegError(4) }
A value that identifies any local fault indications that this MAU has detected and will advertise at the next auto negotiation interaction for 1000Mbps MAUs."
"A value that identifies any fault indications received from the far end of a link by the local auto negotiation entity for 1000Mbps MAUs."
The Basic Broadband MAU Table   broadMauBasicTable
SEQUENCE OF BroadMauBasicEntry MAX ACCESS
This entire table has been deprecated.
There have been no reported implementations of this table, and it is unlikely that there ever will be.
IEEE recommends that broadband MAU types should not be used for new installations.
Table of descriptive and status information about the broadband MAUs connected to interfaces."
An entry in the table, containing information about a single broadband MAU.
This variable uniquely identifies the interface to which the MAU described by this entry is connected."
This variable uniquely identifies the MAU connected to interface broadMauIfIndex that is described by this entry."
This object indicates the type of frequency multiplexing/cabling system used to separate the transmit and receive paths for the 10BROAD36 MAU.
The value other(1) is returned if the split type is not either single or dual.
The value single(2) indicates a single cable system.
The value dual(3) indicates a dual cable system, offset normally zero.
This variable indicates the transmit carrier frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
This variable indicates the translation offset frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
} rpMauJabberTrap NOTIFICATION TYPE OBJECTS
whenever a managed repeater MAU enters the jabber state.
The agent MUST throttle the generation of consecutive rpMauJabberTraps so that there is at least a five second gap between them."
"This trap is sent whenever a managed interface MAU enters the jabber state.
The agent MUST throttle the generation of consecutive ifMauJabberTraps so that there is at least a five second gap between them."
Basic conformance group for MAUs attached to repeater ports.
This group is also the conformance specification for RFC 1515 implementations."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with 100 Mb/s or greater capability."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with managed jacks."
Basic conformance group for MAUs attached to interfaces.
This group also provides a conformance specification for RFC 1515 implementations."
This object group has been deprecated in favor of mauIfGrpHighCapacity."
ifMauAutoNegRemoteSignaling, ifMauAutoNegConfig, ifMauAutoNegCapability, ifMauAutoNegCapAdvertised, ifMauAutoNegCapReceived
This object group has been deprecated in favor of mauIfGrpAutoNeg2."
broadMauIfIndex, broadMauIndex, broadMauXmtRcvSplitType, broadMauXmtCarrierFreq, broadMauTranslationFreq } STATUS
This object group is deprecated.
There have been no reported implementations of this group, and it was felt to be unlikely that there will be any future implementations."
, ifMauDefaultType, ifMauAutoNegSupported } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with 100 Mb/s or greater capability."
ifMauAutoNegRemoteSignaling, ifMauAutoNegConfig, ifMauAutoNegCapabilityBits, ifMauAutoNegCapAdvertisedBits, ifMauAutoNegCapReceivedBits, ifMauAutoNegRestart } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with managed auto negotiation."
Compliances mauModRpCompl MODULE COMPLIANCE STATUS
This compliance is deprecated and replaced by mauModRpCompl2, which corrects an oversight by allowing rpMauStatus to be implemented read only.
"Implementation of this optional group is recommended for MAUs that have 100Mb/s or greater capability."
Implementation of this optional group is recommended for MAUs that have one or more external jacks."
This compliance is deprecated and replaced by mauModIfCompl2.
"Implementation of this optional group is recommended for MAUs that have 100Mb/s capability."
"Implementation of this group is recommended for MAUs attached to interfaces."
This compliance is deprecated and replaced by mauModIfCompl3.
Implementation of this optional group is recommended for MAUs that have 100Mb/s or greater capability."
that support managed auto negotiation.
"Implementation of this group is recommended for MAUs attached to interfaces."
"Write access is not required."
current DESCRIPTION "Compliance for MAUs attached to repeater ports.
Note that compliance with this compliance statement requires compliance with the snmpRptrModCompl MODULE COMPLIANCE statement of the SNMP REPEATER MIB (RFC 2108).
"Implementation of this optional group is recommended for MAUs that have 100Mb/s or greater capability."
Implementation of this optional group is recommended for MAUs that have one or more external jacks."
"Write access is not required."
current DESCRIPTION "Compliance for MAUs attached to interfaces.
Note that compliance with this compliance statement requires compliance with the ifCompliance3 MODULE COMPLIANCE statement of the IF MIB (RFC 2863) and the dot3Compliance2 MODULE COMPLIANCE statement of the EtherLike MIB (RFC3635).
Implementation of this optional group is recommended for MAUs that have 100Mb/s or greater capability."
that support managed auto negotiation.
"Implementation of this group is recommended for MAUs attached to interfaces."
"Write access is not required."
MAU TC Definitions IANA MAU MIB DEFINITIONS ::
BEGIN IMPORTS MODULE IDENTITY, OBJECT IDENTITY, mib 2 FROM SNMPv2 SMI TEXTUAL CONVENTION FROM SNMPv2 TC ; ianaMauMIB
4676 Admiralty Way, Suite 330 Marina del Rey
, CA 90292 Tel:  1 310 823 9358
This MIB module defines dot3MauType OBJECT IDENTITIES and IANAifMauListBits, IANAifMauMediaAvailable, IANAifMauAutoNegCapBits, and IANAifJackType TEXTUAL CONVENTIONs, specifying enumerated values of the ifMauTypeListBits, ifMauMediaAvailable / rpMauMediaAvailable, ifMauAutoNegCapabilityBits / ifMauAutoNegCapAdvertisedBits / ifMauAutoNegCapReceivedBits and ifJackType / rpJackType objects respectively, defined in the MAU MIB.
It is intended that each new MAU type, Media Availability state, Auto Negotiation capability and/or Jack type defined by the IEEE 802.3 working group and approved for publication in a revision of IEEE Std 802.3 will be added to this MIB module, provided that it is suitable for being managed by the base objects in the MAU MIB.
An Expert Review, as defined in RFC 2434 [RFC2434], is REQUIRED for such additions.
The following reference is used throughout this MIB module: [IEEE802.3] refers to: IEEE Std 802.3, 2005 Edition: 'IEEE Standard for Information technology Telecommunications and information exchange between systems Local and metropolitan area networks Specific requirements Part 3:
Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications'.
This reference should be updated as appropriate when new MAU types, Media Availability states, Auto Negotiation capabilities, and/or Jack types are added to this MIB module.
The initial version of this MIB module was published in RFC 4836; for full legal notices see the RFC itself.
Supplementary information may be available at: http://www.ietf.org/copyrights/ianamib.html" REVISION
"Initial version of this MIB as published in RFC 4836."
The most recent version of this textual convention is available in the online version of this MIB module on the IANA web site.
Requests for new values should be made to IANA via email (iana@iana.org).
Note that changes in this textual convention SHALL be synchronized with relevant changes in the dot3MauType OBJECT IDENTITIES.
MAU's true state is unknown; e.g., during initialization available(3)
a fault has been detected at the remote end of the link.
In case of PAF (2BASE TL / 10PASS TS PHYs), all PMEs in the aggregation group have detected a link fault wisFrameLoss(13)
WIS loss of frame, 10GBASE W only wisSignalLoss(14)
PCS Bit Error Ratio monitor reporting excessive error ratio dxsLinkFault(17)
, XAUI only availableReduced(19) link normal, reduced bandwidth
, 2BASE TL / 10PASS TS only ready(20)
at least one PME in the aggregation group is detecting handshake tones, 2BASE TL / 10PASS TS only If the MAU is a 10M b/s link or fiber type (FOIRL, 10BASE T, 10BASE F), then this is equivalent to the link test fail state/low light function.
For an AUI, 10BASE2, 10BASE5, or 10BROAD36 MAU, this indicates whether loopback is detected on the DI circuit.
The value of this attribute persists between packets for MAU types AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASEFP.
At power up or following a reset, the Media Available state will be unknown(2) for AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE FP MAUs.
For these MAUs loopback will be tested on each transmission during which no collision is detected.
If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission, then loopback will be detected.
The Media Available state will only change during noncollided transmissions for AUI, 10BASE2, 10BASE5, 10BROAD36, and 10BASE FP MAUs.
For 100BASE T2, 100BASE T4, 100BASE TX, 100BASE FX, 100BASE LX10, and 100BASE BX10 PHYs the enumerations match the states within the link integrity state diagram.
Any MAU that implements management of [IEEE802.3] Clause 28 Auto Negotiation, will map remote fault indication to remoteFault(5).
Any MAU that implements management of Clause 37 Auto Negotiation, will map the received RF1 and RF2 bits as follows:
Offline maps to offline(10), Link Failure maps to remoteFault(5), and Auto Negotiation Error maps to autoNegError(11).
The value remoteFault(5) applies to 10BASE FB remote fault indication, the 100BASE X far end fault indication, and nonspecified remote faults from a system running Clause 28 Auto Negotiation.
The value remoteJabber(7), remoteLink loss(8), or remoteTest(9) SHOULD be used instead of remoteFault(5)
where the reason for remote fault is identified in the remote signaling protocol.
Where a Clause 22 MII or Clause 35 GMII is present, a logic one in the remote fault bit maps to the value remoteFault(5), a logic zero in the link status bit maps to the enumeration notAvailable(4).
The value notAvailable(4) takes precedence over remoteFault(5).
For 2BASE TL and 10PASS TS PHYs, the value unknown(2) maps to the condition where the PHY (PCS with connected PMEs) is initializing, the value ready(20) maps to the condition where the interface is down and
at least one PME in the aggregation group is ready for handshake, the value available(3) maps to the condition where all the PMEs in the aggregation group are up,
the value notAvailable(4) maps to the condition where all the PMEs in the aggregation group are down and no handshake tones are detected, the value availableReduced(19) maps to the condition where the interface is up, a link fault is detected at the receive direction by one or more PMEs in the aggregation group, but at least one PME is up and the enumeration pmdLinkFault(12)
maps to the condition where a link fault is detected at the receive direction by all of the PMEs in the aggregation group.
For 10 Gb/s the enumerations map to value of the link fault variable within the Link Fault Signaling state diagram as follows:
the value OK maps to the value available(3), the value Local Fault maps to the value notAvailable(4), and the value Remote Fault maps to the value remoteFault(5).
The value pmdLinkFault(12), wisFrameLoss(13), wisSignalLoss(14), pcsLinkFault(15), excessiveBER(16), or dxsLinkFault(17)
SHOULD be used instead of the value notAvailable(4), where the reason for the Local Fault state can be identified through the use of the Clause 45 MDIO Interface.
Where multiple reasons for the Local Fault state can be identified, only the highest precedence error SHOULD be reported.
This precedence in descending order is as follows:
pxsLinkFault pmdLinkFault wisFrameLoss wisSignalLoss pcsLinkFault excessiveBER dxsLinkFault.
Where a Clause 45 MDIO interface is present a logic zero in the PMA/PMD Receive link status bit
([IEEE802.3] Section 45.2.1.2.2) maps to the value pmdLinkFault(12)
, logic one in the LOF status bit (Section 45.2.2.10.4) maps to the value wisFrameLoss(13), a logic one in the LOS status bit
(Section 45.2.2.10.5) maps to the value wisSignalLoss, a logic zero in the PCS Receive link status bit
(Section 45.2.3.2.2) maps to the value pcsLinkFault(15),
a logic one in the 10GBASE R PCS Latched high BER status bit (Section 45.2.3.12.2) maps to the value excessiveBER, a logic zero in the DTE XS receive link status bit (Section 45.2.5.2.2) maps to the value dxsLinkFault(17) and a logic zero in the PHY XS transmit link status bit (Section 45.2.4.2.2) maps to the value pxsLinkFault(18).
The most recent version of this textual convention is available in the online version of this MIB module on the IANA web site.
Requests for new values should be made to IANA via email (iana@iana.org).
The most recent version of this textual convention is available in the online version of this MIB module on the IANA web site.
Requests for new values should be made to IANA via email (iana@iana.org).
Common enumeration values for repeater and interface MAU jack types.
This data type is used as the syntax of the ifJackType and rpJackType objects in the (updated) definition of MAU MIB's ifJackTable and rpJackTable respectively.
The most recent version of this textual convention is available in the online version of this MIB module on the IANA web site.
Requests for new values should be made to IANA via email (iana@iana.org)."
(see rpMauType and ifMauType of MAU MIB for usage)
The following definitions has been moved from RFC 3636 and   no longer appear in its revision.
Note that it is strongly recommended that agents return either dot3MauType10BaseTHD or dot3MauType10BaseTFD if the duplex mode is known.
However, management applications should be prepared to receive this MAU type value from older agent implementations.
Note that it is strongly recommended that agents return either dot3MauType10BaseFLHD or dot3MauType10BaseFLFD if the duplex mode is known.
However, management applications should be prepared to receive this MAU type value from older agent implementations.
Note that 10BROAD36 MAUs can be attached to interfaces but not to repeaters."
current DESCRIPTION "PCS/PMA, unknown PMD, half duplex mode"
26 } dot3MauType1000BaseCXHD OBJECT IDENTITY STATUS
} dot3MauType1000BaseCXFD OBJECT IDENTITY STATUS
32 } dot3MauType10GigBaseR OBJECT IDENTITY STATUS
current DESCRIPTION "R PCS/PMA, unknown PMD.
current DESCRIPTION "R fiber over 1550 nm optics"
"R fiber over 1310 nm optics"
current DESCRIPTION "W PCS/PMA, unknown PMD.
"W fiber over 1550 nm optics"
"W fiber over 1310 nm optics"
current DESCRIPTION "Voice grade UTP copper, up to 750m
current DESCRIPTION "Two sigle mode fiber, long wavelength, 10km" REFERENCE   "
The IANA MAU MIB does not define any management objects.
Instead, it defines a set of textual conventions which are used by the MAU MIB and may be used by other MIB modules to define management objects.
Meaningful security considerations can only be written for MIB modules that define management objects.
There are a number of management objects defined in the MAU MIB that have a MAX ACCESS clause of read write.
Setting these objects can have a serious effect on the operation of the network, including:  enabling or disabling a MAU  changing a MAU's default type  enabling, disabling, or restarting autonegotiation  modifying the capabilities that a MAU advertizes during autonegotiation.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
Some of the readable objects in the MAU MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
In some environments, it may be undesirable to allow unauthorized parties to access statistics or status information about individual links in a network.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPsec), even then, there is no control as to who on the secure network is allowed to access and
the objects in the MAU MIB module.
It is RECOMMENDED that the implementors consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Furthermore, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of the MAU MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
This document defines first version of the IANA maintained IANA MAU  MIB module.
It is intended that each new MAU type, Media Available state, Auto Negotiation capability, and/or Jack type defined by the IEEE 802.3 working group and approved for publication in a revision of IEEE Std 802.3 will be added to the IANA maintaned MIB module, provided that it is suitable for being managed by the base objects in the MAU MIB module.
For each new MAU type added, a short description of the MAU technology and, wherever possible, a reference to a publicly available specification SHOULD be specified.
An Expert Review, as defined in RFC 2434 [RFC2434], is REQUIRED, for each modification.
