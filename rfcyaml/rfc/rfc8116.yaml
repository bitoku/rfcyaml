- title: __initial_text__
  contents:
  - "                        Security Threats to the\n        Optimized Link State\
    \ Routing Protocol Version 2 (OLSRv2)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document analyzes common security threats to the Optimized\
    \ Link\n   State Routing Protocol version 2 (OLSRv2) and describes their\n   potential\
    \ impacts on Mobile Ad Hoc Network (MANET) operations.  It\n   also analyzes which\
    \ of these security vulnerabilities can be\n   mitigated when using the mandatory-to-implement\
    \ security mechanisms\n   for OLSRv2 and how the vulnerabilities are mitigated.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc8116.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n     1.1.  OLSRv2 Overview . . . . . . . . . . . . . . . . .\
    \ . . . .   5\n       1.1.1.  Neighborhood Discovery  . . . . . . . . . . . .\
    \ . . .   5\n       1.1.2.  MPR Selection . . . . . . . . . . . . . . . . . .\
    \ . .   6\n       1.1.3.  Link State Advertisement  . . . . . . . . . . . . .\
    \ .   6\n     1.2.  Link State Vulnerability Taxonomy . . . . . . . . . . . .\
    \   6\n     1.3.  OLSRv2 Attack Vectors . . . . . . . . . . . . . . . . . .  \
    \ 7\n   2.  Terminology . . . . . . . . . . . . . . . . . . . . . . . . .   7\n\
    \   3.  Topology Map Acquisition  . . . . . . . . . . . . . . . . . .   7\n  \
    \   3.1.  Attack on Jittering . . . . . . . . . . . . . . . . . . .   8\n    \
    \ 3.2.  Hop Count and Hop Limit Attacks . . . . . . . . . . . . .   8\n      \
    \ 3.2.1.  Modifying the Hop Limit . . . . . . . . . . . . . . .   8\n       3.2.2.\
    \  Modifying the Hop Count . . . . . . . . . . . . . . .   9\n   4.  Effective\
    \ Topology  . . . . . . . . . . . . . . . . . . . . .  10\n     4.1.  Incorrect\
    \ Forwarding  . . . . . . . . . . . . . . . . . .  10\n     4.2.  Wormholes .\
    \ . . . . . . . . . . . . . . . . . . . . . . .  11\n     4.3.  Sequence Number\
    \ Attacks . . . . . . . . . . . . . . . . .  12\n       4.3.1.  Message Sequence\
    \ Number . . . . . . . . . . . . . . .  12\n       4.3.2.  Advertised Neighbor\
    \ Sequence Number (ANSN)  . . . . .  12\n     4.4.  Indirect Jamming  . . . .\
    \ . . . . . . . . . . . . . . . .  12\n   5.  Inconsistent Topology . . . . .\
    \ . . . . . . . . . . . . . . .  15\n     5.1.  Identity Spoofing . . . . . .\
    \ . . . . . . . . . . . . . .  15\n     5.2.  Link Spoofing . . . . . . . . .\
    \ . . . . . . . . . . . . .  17\n       5.2.1.  Inconsistent Topology Maps Due\
    \ to Link State\n               Advertisements  . . . . . . . . . . . . . . .\
    \ . . . .  18\n   6.  Mitigation of Security Vulnerabilities for OLSRv2 . . .\
    \ . . .  19\n     6.1.  Inherent OLSRv2 Resilience  . . . . . . . . . . . . .\
    \ . .  19\n     6.2.  Resilience by Using RFC 7183 with OLSRv2  . . . . . . .\
    \ .  20\n       6.2.1.  Topology Map Acquisition  . . . . . . . . . . . . . .\
    \  21\n       6.2.2.  Effective Topology  . . . . . . . . . . . . . . . . .  21\n\
    \       6.2.3.  Inconsistent Topology . . . . . . . . . . . . . . . .  22\n  \
    \   6.3.  Correct Deployment  . . . . . . . . . . . . . . . . . . .  22\n   7.\
    \  Security Considerations . . . . . . . . . . . . . . . . . . .  22\n   8.  References\
    \  . . . . . . . . . . . . . . . . . . . . . . . . .  23\n     8.1.  Normative\
    \ References  . . . . . . . . . . . . . . . . . .  23\n     8.2.  Informative\
    \ References  . . . . . . . . . . . . . . . . .  23\n   Authors' Addresses  .\
    \ . . . . . . . . . . . . . . . . . . . . . .  26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Optimized Link State Routing Protocol version 2 (OLSRv2)\n\
    \   [RFC7181] is a successor to OLSR [RFC3626] as a routing protocol for\n   Mobile\
    \ Ad Hoc Networks (MANETs).  OLSRv2 retains the same basic\n   algorithms as its\
    \ predecessor; however, it offers various\n   improvements, e.g., a modular and\
    \ flexible architecture allowing\n   extensions (such as for security) to be developed\
    \ as add-ons to the\n   basic protocol.  Such building blocks and modules include\
    \ [RFC5148],\n   [RFC5444], [RFC5497], [RFC6130], [RFC7182], [RFC7183], [RFC7187],\n\
    \   [RFC7188], [RFC7466], etc.\n   The developments reflected in OLSRv2 have been\
    \ motivated by increased\n   real-world deployment experiences, e.g., from networks\
    \ such as\n   FunkFeuer [FUNKFEUER], and the requirements to be addressed for\n\
    \   continued successful operation of these networks.  With participation\n  \
    \ in such networks increasing (the FunkFeuer community network has,\n   e.g.,\
    \ roughly 400 individual participants at the time of publication\n   of this document),\
    \ operating under the assumption that participants\n   can be \"trusted\" to behave\
    \ in a non-destructive way, is naive.  With\n   deployment in the wider Internet,\
    \ and a resultant increase in user\n   numbers, an increase in attacks and abuses\
    \ has followed necessitating\n   a change in recommended practices.  For example,\
    \ SMTP servers, which\n   were initially available for use by everyone on the\
    \ Internet, require\n   authentication and accounting for users today [RFC5068].\n\
    \   As OLSRv2 is often used in wireless environments, it is potentially\n   exposed\
    \ to different kinds of security threats, some of which are of\n   greater significance\
    \ when compared to wired networks.  As radio\n   signals can be received as well\
    \ as transmitted by any compatible\n   wireless device within radio range, there\
    \ are commonly no physical\n   constraints on the conformation of nodes and communication\
    \ links that\n   make up the network (as could be expected for wired networks).\n\
    \   A first step towards hardening against attacks disrupting the\n   connectivity\
    \ of a network is to understand the vulnerabilities of the\n   routing protocol\
    \ managing the connectivity.  Therefore, this document\n   analyzes OLSRv2 in\
    \ order to understand its inherent vulnerabilities\n   and resilience.  The authors\
    \ do not claim completeness of the\n   analysis but hope that the identified attacks,\
    \ as presented, form a\n   meaningful starting point for developing and deploying\
    \ increasingly\n   well-secured OLSRv2 networks.\n   This document describes security\
    \ vulnerabilities of OLSRv2 when it is\n   used without the mandatory-to-implement\
    \ security mechanisms, as\n   specified in Section 23.5 of [RFC7181].  It also\
    \ analyzes which of\n   these security vulnerabilities can be mitigated when using\
    \ the\n   mandatory-to-implement security mechanisms for OLSRv2 and how the\n\
    \   vulnerabilities are mitigated.  This separation is important since,\n   as\
    \ explicitly stated in [RFC7181]:\n      Any deployment of OLSRv2 SHOULD use the\
    \ security mechanism\n      specified in [RFC7183] but MAY use another mechanism\
    \ if more\n      appropriate in an OLSRv2 deployment.  For example, for longer-term\n\
    \      OLSRv2 deployments, alternative security mechanisms (e.g.,\n      rekeying)\
    \ SHOULD be considered.\n   Moreover, this document is also based on the assumption\
    \ that no\n   additional security mechanism such as IPsec is used in the IP layer,\n\
    \   or other mechanisms on lower layers, as not all MANET deployments may\n  \
    \ be able to accommodate such common protection mechanisms (e.g.,\n   because\
    \ of limited resources of MANET routers).\n   As NHDP is a fundamental component\
    \ of OLSRv2, the vulnerabilities of\n   NHDP, discussed in [RFC7186], also apply\
    \ to OLSRv2.\n   It should be noted that many OLSRv2 implementations are configurable,\n\
    \   and so an attack on the configuration system (such as [RFC7939] and\n   [RFC7184])\
    \ can be used to adversely affect the operation of an OLSRv2\n   implementation.\n"
- title: 1.1.  OLSRv2 Overview
  contents:
  - "1.1.  OLSRv2 Overview\n   OLSRv2 contains three basic processes: neighborhood\
    \ discovery,\n   Multipoint Relay (MPR) selection, and Link State Advertisements\n\
    \   (LSAs).  They are described in the sections below with sufficient\n   details\
    \ to allow elaboration of the analyses in this document.\n"
- title: 1.1.1.  Neighborhood Discovery
  contents:
  - "1.1.1.  Neighborhood Discovery\n   Neighborhood discovery is the process whereby\
    \ each router discovers\n   the routers that are in direct communication range\
    \ of itself (1-hop\n   neighbors) and detects with which of these it can establish\n\
    \   bidirectional communication.  Each router sends HELLO messages\n   periodically,\
    \ listing the identifiers of all the routers from which\n   it has recently received\
    \ a HELLO message as well as the \"status\" of\n   the link (heard or verified\
    \ bidirectional).  A router A receiving a\n   HELLO message from a neighbor router\
    \ B, in which B indicates it has\n   recently received a HELLO message from A,\
    \ considers the link A-B to\n   be bidirectional.  As B lists identifiers of all\
    \ its neighbors in its\n   HELLO message, A learns the \"neighbors of its neighbors\"\
    \ (2-hop\n   neighbors) through this process.  HELLO messages are sent\n   periodically;\
    \ however, certain events may trigger non-periodic\n   HELLOs.  OLSRv2 [RFC7181]\
    \ uses NHDP [RFC6130] as its neighborhood\n   discovery mechanism.  The vulnerabilities\
    \ of NHDP are analyzed in\n   [RFC7186].\n"
- title: 1.1.2.  MPR Selection
  contents:
  - "1.1.2.  MPR Selection\n   Multipoint Relay (MPR) selection is the process whereby\
    \ each router\n   is able to identify a set of relays for efficiently conducting\n\
    \   network-wide broadcasts.  Each router designates, from among its\n   bidirectional\
    \ neighbors, a subset (the \"MPR set\") such that an\n   OLSRv2-specific multicast\
    \ message transmitted by the router and\n   relayed by the MPR set can be received\
    \ by all its 2-hop neighbors.\n   MPR selection is encoded in outgoing NHDP HELLO\
    \ messages.\n   In their HELLO messages, routers may express their \"willingness\"\
    \ to\n   be selected as an MPR using an integer between 0 and 7 (\"will never\"\
    \n   to \"will always\").  This is taken into consideration for the MPR\n   calculation\
    \ and is useful, for example, when an OLSRv2 network is\n   \"planned\".  The\
    \ set of routers having selected a given router as an\n   MPR is the MPR selector\
    \ set of that router.  A study of the MPR\n   flooding algorithm can be found\
    \ in [MPR-FLOODING].\n"
- title: 1.1.3.  Link State Advertisement
  contents:
  - "1.1.3.  Link State Advertisement\n   Link State Advertisement (LSA) is the process\
    \ whereby routers\n   determine which link state information to advertise through\
    \ the\n   network.  Each router must advertise, at least, all links between\n\
    \   itself and its MPR selectors in order to allow all routers to\n   calculate\
    \ shortest paths.  Such LSAs are carried in Topology Control\n   (TC) messages,\
    \ which are broadcast through the network using the MPR\n   flooding process described\
    \ in Section 1.1.2.  As a router selects\n   MPRs only from among bidirectional\
    \ neighbors, links advertised in TC\n   are also bidirectional and routing paths\
    \ calculated by OLSRv2 contain\n   only bidirectional links.  TCs are sent periodically;\
    \ however,\n   certain events may trigger non-periodic TCs.\n"
- title: 1.2.  Link State Vulnerability Taxonomy
  contents:
  - "1.2.  Link State Vulnerability Taxonomy\n   Proper functioning of OLSRv2 assumes\
    \ that:\n   o  each router signals its presence in the network and the topology\n\
    \      information that it obtained correctly;\n   o  each router can acquire\
    \ and maintain a topology map that\n      accurately reflects the effective network\
    \ topology; and,\n   o  that the network converges, i.e., that all routers in\
    \ the network\n      will have sufficiently identical topology maps.\n   An OLSRv2\
    \ network can be disrupted by breaking any of these\n   assumptions, specifically\
    \ that (a) routers may be prevented from\n   acquiring a topology map of the network,\
    \ (b) routers may acquire a\n   topology map that does not reflect the effective\
    \ network topology,\n   and (c) two or more routers may acquire inconsistent topology\
    \ maps.\n"
- title: 1.3.  OLSRv2 Attack Vectors
  contents:
  - "1.3.  OLSRv2 Attack Vectors\n   Besides \"radio jamming\", attacks on OLSRv2\
    \ consist of a compromised\n   OLSRv2 router injecting apparently correct, but\
    \ invalid, control\n   traffic (TCs, HELLOs) into the network.  A compromised\
    \ OLSRv2 router\n   can either (a) advertise erroneous information about itself\
    \ (its\n   identification and its willingness to serve as an MPR), henceforth\n\
    \   called identity spoofing, or (b) advertise erroneous information\n   about\
    \ its relationship to other routers (pretend existence of links\n   to other routers),\
    \ henceforth called link spoofing.  Such attacks may\n   disrupt the LSA process\
    \ by targeting the MPR flooding mechanism or by\n   causing incorrect link state\
    \ information to be included in TCs,\n   causing routers to have incomplete, inaccurate,\
    \ or inconsistent\n   topology maps.  In a different class of attacks, a compromised\
    \ OLSRv2\n   router injects control traffic designed so as to cause an in-router\n\
    \   resource exhaustion, e.g., by causing the algorithms calculating\n   routing\
    \ tables or MPR sets to be invoked continuously, preventing the\n   internal state\
    \ of a router from converging, which depletes the energy\n   of battery-driven\
    \ routers, etc.\n"
- title: 2.  Terminology
  contents:
  - "2.  Terminology\n   This document uses the terminology and notation defined in\
    \ [RFC5444],\n   [RFC6130], and [RFC7181].  Additionally, it defines the following\n\
    \   terminology:\n   Compromised OLSRv2 router:  An attacker that eavesdrops on\
    \ the\n      network traffic and/or generates syntactically correct OLSRv2\n \
    \     control messages.  Control messages emitted by a compromised\n      OLSRv2\
    \ router may contain additional information or omit\n      information, as compared\
    \ to a control message generated by a non-\n      compromised OLSRv2 router located\
    \ in the same topological position\n      in the network.\n   Legitimate OLSRv2\
    \ router:  An OLSRv2 router that is not a compromised\n      OLSRv2 router.\n"
- title: 3.  Topology Map Acquisition
  contents:
  - "3.  Topology Map Acquisition\n   Topology Map Acquisition relates to the ability\
    \ for any given router\n   in the network to acquire a representation of the network\n\
    \   connectivity.  A router that is unable to acquire a topology map is\n   incapable\
    \ of calculating routing paths and participating in\n   forwarding data.  Topology\
    \ map acquisition can be hindered by (i) TCs\n   not being delivered to (all)\
    \ routers in the network, such as what\n   happens in case of flooding disruption,\
    \ or (ii) in case of \"jamming\"\n   of the communication channel.\n   The jamming\
    \ and flooding disruption due to identity spoofing and link\n   spoofing have\
    \ been discussed in [RFC7186].\n"
- title: 3.1.  Attack on Jittering
  contents:
  - "3.1.  Attack on Jittering\n   OLSRv2 incorporates a jittering mechanism: a random,\
    \ but bounded,\n   delay on outgoing control traffic [RFC5148].  This may be necessary\n\
    \   when link layers (such as 802.11 [IEEE802.11]) are used that do not\n   guarantee\
    \ collision-free delivery of frames and where jitter can\n   reduce the probability\
    \ of collisions of frames on lower layers.\n   In OLSRv2, TC forwarding is jittered\
    \ by a value between 0 and\n   MAX_JITTER.  In order to reduce the number of transmissions,\
    \ when a\n   control message is due for transmission, OLSRv2 piggybacks all queued\n\
    \   messages into a single transmission.  Thus, if a compromised OLSRv2\n   router\
    \ sends many TCs within a very short time interval, the jitter\n   time of the\
    \ attacked router tends towards 0.  This renders jittering\n   ineffective and\
    \ can lead to collisions on the link layer.\n   In addition to causing more collisions,\
    \ forwarding a TC with little\n   or no jittering can make sure that the TC message\
    \ forwarded by a\n   compromised router arrives before the message forwarded by\
    \ legitimate\n   routers.  The compromised router can thus inject malicious content\
    \ in\n   the TC: for example, if the message identification is spoofed, the\n\
    \   legitimate message will be discarded as a duplicate message.  This\n   preemptive\
    \ action is important for some of the attacks introduced in\n   the following\
    \ sections.\n"
- title: 3.2.  Hop Count and Hop Limit Attacks
  contents:
  - "3.2.  Hop Count and Hop Limit Attacks\n   The hop count and hop limit fields\
    \ are the only parts of a TC that\n   are modified when forwarding; therefore,\
    \ they are not protected by\n   integrity check mechanisms.  A compromised OLSRv2\
    \ router can modify\n   either of these when forwarding TCs.\n"
- title: 3.2.1.  Modifying the Hop Limit
  contents:
  - "3.2.1.  Modifying the Hop Limit\n   A compromised OLSRv2 router can decrease\
    \ the hop limit when\n   forwarding a TC.  This will reduce the scope of forwarding\
    \ for the\n   message and may lead to some routers in the network not receiving\n\
    \   that TC.  Note that this is not necessarily the same as not relaying\n   the\
    \ message (i.e., setting the hop limit to 0), as is illustrated in\n   Figure\
    \ 1.\n                                 .---.\n                               \
    \  | X |\n                               --'---' __\n                        \
    \      /          \\\n                             /            \\\n         \
    \                .---.              .---.\n             TC ----->   | A |    \
    \          | C |\n                         '---'              '---'\n        \
    \                     \\    .---.   /\n                              \\-- | B\
    \ |__/\n                                  '---'\n                        Figure\
    \ 1: Hop Limit Attack\n   A TC arrives at and is forwarded by router A such that\
    \ it is received\n   by both B and the malicious X.  X can forward the TC without\
    \ any\n   delay (including without jitter) such that its transmissions arrive\n\
    \   before that of B at C.  Before forwarding, it significantly reduces\n   the\
    \ hop limit of the message.  Router C receives the TC, processes\n   (and forwards)\
    \ it, and marks it as already received -- causing it to\n   discard further copies\
    \ received from B.  Thus, if the TC is forwarded\n   by C, it has a very low hop\
    \ limit and will not reach the whole\n   network.\n"
- title: 3.2.2.  Modifying the Hop Count
  contents:
  - "3.2.2.  Modifying the Hop Count\n   A compromised OLSRv2 router can modify the\
    \ hop count when forwarding\n   a TC.  This may have two consequences: (i) if\
    \ the hop count is set to\n   the maximum value, then the TC will be forwarded\
    \ no further or (ii)\n   artificially manipulating the hop count may affect the\
    \ validity time\n   as calculated by recipients, when using distance-dependent\
    \ validity\n   times as defined in [RFC5497] (e.g., as part of a Fish Eye extension\n\
    \   to OLSR2 [OLSR-FSR] [OLSR-FSR-Scaling]).\n              v_time(3hops)=9s \
    \ v_time(4hops)=12s   v_time(5hops)=15s\n     .---.           .---.          .---.\
    \           .---.\n     | A |-- ... --> | B | -------> | X |---------->| C |\n\
    \     `---'           `---'          `---'           `---'\n     Figure 2: Different\
    \ Validity Times Based on the Distance in Hops\n   In Figure 2, router A sends\
    \ a TC with a validity time of 9 seconds\n   for routers in a 3-hop distance,\
    \ 12 seconds for routers in a 4-hop\n   distance, and 15 seconds in a 5-hop distance.\
    \  If X is a compromised\n   OLSRv2 router and modifies the hop count (say, by\
    \ decreasing it to\n   3), then C will calculate the validity time of received\
    \ information\n   to 9 seconds -- after which it expires unless refreshed.  If\
    \ TCs from\n   A are sent less frequently than that up to 4 hops, this causes\
    \ links\n   advertised in such TCs to be only intermittently available to C.\n"
- title: 4.  Effective Topology
  contents:
  - "4.  Effective Topology\n   Link state protocols assume that each router can acquire\
    \ an accurate\n   topology map that reflects the effective network topology. \
    \ This\n   implies that the routing protocol is able to identify a path from a\n\
    \   source to a destination, and this path is valid for forwarding data\n   traffic.\
    \  If an attacker disturbs the correct protocol behavior, the\n   perceived topology\
    \ map of a router can permanently differ from the\n   effective topology.\n  \
    \ Consider the example in Figure 3(a), which illustrates the topology\n   map\
    \ as acquired by router S.  This topology map indicates that the\n   routing protocol\
    \ has identified that for S, a path exists to D via B,\n   which it therefore\
    \ assumes can be used for transmitting data.  If B\n   does not forward data traffic\
    \ from S, then the topology map in S does\n   not accurately reflect the effective\
    \ network topology.  Rather, the\n   effective network topology from the point\
    \ of view of S would be as\n   indicated in Figure 3(b): D is not part of the\
    \ network reachable from\n   router S.\n           .---.    .---.    .---.   \
    \        .---.    .---.\n           | S |----| B |----| D |           | S |----|\
    \ B |\n           `---'    `---'    `---'           `---'    `---'\n         \
    \          (a)                             (b)\n                Figure 3: Incorrect\
    \ Data Traffic Forwarding\n   Some of the attacks related to NHDP, such as message\
    \ timing attacks\n   and indirect channel overloading, are discussed in [RFC7186].\
    \  Other\n   threats specific to OLSRv2 are further detailed in this section.\n"
- title: 4.1.  Incorrect Forwarding
  contents:
  - "4.1.  Incorrect Forwarding\n   OLSRv2 routers exchange information using link-local\
    \ transmissions\n   (link-local multicast or limited broadcast) for their control\n\
    \   messages, with the routing process in each router retransmitting\n   received\
    \ messages destined for network-wide diffusion.  Thus, if the\n   operating system\
    \ in a router is not configured to enable forwarding,\n   this will not affect\
    \ the operating of the routing protocol or the\n   topology map acquired by the\
    \ routing protocol.  It will, however,\n   cause a discrepancy between the effective\
    \ topology and the topology\n   map, as indicated in Figures 3(a) and 3(b).\n\
    \   This situation is not hypothetical.  A common error seen when\n   deploying\
    \ OLSRv2-based networks using a Linux-based computer as a\n   router is to neglect\
    \ enabling IP forwarding, which effectively\n   becomes an accidental attack of\
    \ this type.\n"
- title: 4.2.  Wormholes
  contents:
  - "4.2.  Wormholes\n   A wormhole, depicted in the example in Figure 4, may be established\n\
    \   between two collaborating devices that are connected by an out-of-\n   band\
    \ channel.  These devices send traffic through the \"tunnel\" to\n   their alter\
    \ ego, which \"replays\" the traffic.  Thus, routers D and S\n   appear as if\
    \ direct neighbors and are reachable from each other in 1\n   hop through the\
    \ tunnel, with the path through the MANET being 100\n   hops long.\n        .---.\
    \                                     .---.\n        | S |----   ....100-hop-long\
    \ path  ... ---| D |\n        `---.                                   / `---'\n\
    \            \\                                  /\n             \\          \
    \                      /\n              \\X=============================X\n  \
    \                 1-hop path via wormhole\n        Figure 4: Wormholing between\
    \ Two Collaborating Devices Not\n                   Participating in the Routing\
    \ Protocol\n   The consequences of such a wormhole in the network depend on the\n\
    \   detailed behavior of the wormhole.  If the wormhole relays only\n   control\
    \ traffic, but not data traffic, the same considerations as in\n   Section 4.1\
    \ apply.  If, however, the wormhole relays all traffic\n   (control and data alike),\
    \ it is identical, connectivity wise, to a\n   usable link - and the routing protocol\
    \ will correctly generate a\n   topology map reflecting the effective network\
    \ topology.  The\n   efficiency of the topology obtained depends on (i) the wormhole\n\
    \   characteristics, (ii) how the wormhole presents itself, and (iii) how\n  \
    \ paths are calculated.\n   Assuming that paths are calculated with unit cost\
    \ for all links,\n   including the \"link\" presented by the wormhole, if the\
    \ real\n   characteristics of the wormhole are as if it were a path of more than\n\
    \   100 hops (e.g., with respect to delay, bandwidth, etc.), then the\n   presence\
    \ of the wormhole results in a degradation in performance as\n   compared to using\
    \ the non-wormhole path.  Conversely, if the \"link\"\n   presented by the wormhole\
    \ has better characteristics, the wormhole\n   results in improved performance.\n\
    \   If paths are calculated using non-unit-costs for all links, and if\n   the\
    \ cost of the \"link\" presented by the wormhole correctly represents\n   the\
    \ actual cost (e.g., if the cost is established through\n   measurements across\
    \ the wormhole), then the wormhole may, in the\n   worst case, cause no degradation\
    \ in performance or, in the best case,\n   improve performance by offering a better\
    \ path.  If the cost of the\n   \"link\" presented by the wormhole is misrepresented,\
    \ then the same\n   considerations as for unit-cost links apply.\n   An additional\
    \ consideration with regard to wormholes is that they may\n   present topologically\
    \ attractive paths for the network; however, it\n   may be undesirable to have\
    \ data traffic transit such a path.  An\n   attacker could, by virtue of introducing\
    \ a wormhole, acquire the\n   ability to record and inspect transiting data traffic.\n"
- title: 4.3.  Sequence Number Attacks
  contents:
  - "4.3.  Sequence Number Attacks\n   OLSRv2 uses two different sequence numbers\
    \ in TCs to (i) avoid\n   processing and forwarding the same message more than\
    \ once (Message\n   Sequence Number) and to (ii) ensure that old information,\
    \ arriving\n   late due to, e.g., long paths or other delays, is not allowed to\n\
    \   overwrite more recent information generated (Advertised Neighbor\n   Sequence\
    \ Number (ANSN)).\n"
- title: 4.3.1.  Message Sequence Number
  contents:
  - "4.3.1.  Message Sequence Number\n   An attack may consist of a compromised OLSRv2\
    \ router spoofing the\n   identity of another router in the network and transmitting\
    \ a large\n   number of TCs, each with different Message Sequence Numbers.\n \
    \  Subsequent TCs with the same sequence numbers, originating from the\n   router\
    \ whose identity was spoofed, would hence be ignored until\n   eventually information\
    \ concerning these \"spoofed\" TCs expires.\n"
- title: 4.3.2.  Advertised Neighbor Sequence Number (ANSN)
  contents:
  - "4.3.2.  Advertised Neighbor Sequence Number (ANSN)\n   An attack may consist\
    \ of a compromised OLSRv2 router spoofing the\n   identity of another router in\
    \ the network and transmitting a single\n   TC with an ANSN significantly larger\
    \ than that which was last used by\n   the legitimate router.  Routers will retain\
    \ this larger ANSN as \"the\n   most recent information\" and discard subsequent\
    \ TCs with lower\n   sequence numbers as being \"old\".\n"
- title: 4.4.  Indirect Jamming
  contents:
  - "4.4.  Indirect Jamming\n   Indirect jamming is an attack in which a compromised\
    \ OLSRv2 router\n   is, by its actions, causing legitimate routers to generate\
    \ inordinate\n   amounts of control traffic, thereby increasing both channel\n\
    \   occupation and the overhead incurred in each router for processing\n   this\
    \ control traffic.  This control traffic will be originated from\n   legitimate\
    \ routers; thus, to the wider network, the malicious device\n   may remain undetected.\n\
    \   The general mechanism whereby a malicious router can cause indirect\n   jamming\
    \ is for it to participate in the protocol by generating\n   plausible control\
    \ traffic and to tune this control traffic to in turn\n   trigger receiving routers\
    \ to generate additional traffic.  For\n   OLSRv2, such an indirect attack can\
    \ be directed at the neighborhood\n   discovery mechanism and the LSA mechanism,\
    \ respectively.\n   One efficient indirect jamming attack in OLSRv2 is to target\
    \ control\n   traffic destined for network-wide diffusion.  This is illustrated\
    \ in\n   Figure 5.\n   The malicious router X selects router A as an MPR at time\
    \ t0 in a\n   HELLO.  This causes X to appear as MPR selector for A and,\n   consequently,\
    \ A sets X to be advertised in its \"Neighbor Set\" and\n   increments the associated\
    \ \"Advertised Neighbor Sequence Number\"\n   (ANSN).  Router A must then advertise\
    \ the link between itself and X\n   in subsequent outgoing TCs (t1), also including\
    \ the ANSN in such TCs.\n   Upon X having received this TC, it declares the link\
    \ between itself\n   and A as no longer valid (t2) in a HELLO (indicating the\
    \ link to A as\n   LOST).  Since only symmetric links are advertised by OLSRv2\
    \ routers,\n   A will (upon receipt hereof) remove X from the set of advertised\n\
    \   neighbors and increment the ANSN.  Router A will then, in subsequent\n   TCs,\
    \ advertise the remaining set of advertised neighbors (i.e., with\n   X removed)\
    \ and the corresponding ANSN (t3).  Upon X having received\n   this information\
    \ in another TC from A, it may repeat this cycle,\n   alternating advertising\
    \ the link A-X as \"LOST\" and as \"MPR\".\n              broadcast TC    ANS={}\
    \         TC:()\n               (X-A) ANSN      ANSN++          ANSN\n      .---.\
    \        .---.        .---.        .---.\n      | A |        | A |        | A\
    \ |        | A |\n      '---'        '---'        '---'        '---'\n       \
    \ ^            |            ^            |\n        |            |           \
    \ |            |\n        | select     |            |indicate    |\n        |\
    \ as MPR     |            |as LOST     |\n      .---.        .---.        .---.\
    \        .---.\n      | X |        | X |        | X |        | X |\n      '---'\
    \        '---'        '---'        '---'\n        t0           t1            t2\
    \           t3\n   Description: The malicious X flips between link status MPR\
    \ and LOST.\n          Figure 5: Indirect Jamming in Link State Advertisement\n\
    \   Routers receiving a TC message will parse and process this message,\n   specifically\
    \ updating their topology map as a consequence of\n   successful receipt.  If\
    \ the ANSN between two successive TCs from the\n   same router has incremented,\
    \ then the topology has changed and\n   routing sets are to be recalculated. \
    \ This has the potential to be a\n   computationally costly operation.\n   A compromised\
    \ OLSRv2 router may chose to conduct this attack against\n   all its neighbors,\
    \ thus maximizing its disruptive impact on the\n   network with relatively little\
    \ overhead of its own: other than\n   participating in the neighborhood discovery\
    \ procedure, the\n   compromised OLSRv2 router will monitor TCs generated by its\
    \ neighbors\n   and alternate the advertised status for each such neighbor between\n\
    \   \"MPR\" and \"LOST\".  The compromised OLSRv2 router will indicate its\n \
    \  willingness to be selected as an MPR as 0 (thus avoiding selection as\n   an\
    \ MPR) and may ignore all other protocol operations while still\n   remaining\
    \ effective as an attacker.\n   The basic operation of OLSRv2 employs periodic\
    \ message emissions, and\n   by this attack it can be ensured that each such periodic\
    \ message will\n   entail routing table recalculation in all routers in the network.\n\
    \   If the routers in the network have \"triggered TCs\" enabled, this\n   attack\
    \ may also cause an increased TC frequency.  Triggered TCs are\n   intended to\
    \ allow a (stable) network to have relatively low TC\n   emission frequencies\
    \ yet still allow link breakage or link emergence\n   to be advertised through\
    \ the network rapidly.  A minimum message\n   interval (typically much smaller\
    \ than the regular periodic message\n   interval) is imposed to rate-limit worst-case\
    \ message emissions.\n   This attack can cause the TC interval to permanently\
    \ become equal to\n   the minimum message interval.  [RFC7181] proposes as default\
    \ that the\n   minimum TC interval be 0.25 x TC_INTERVAL (TC_INTERVAL being the\n\
    \   maximum interval between two TC messages from the same OLSRv2\n   router).\n\
    \   Indirect jamming by a compromised OLSRv2 router can thus have two\n   effects:\
    \ (i) it may cause increased frequency of TC generation and\n   transmission,\
    \ and (ii) it will cause additional routing table\n   recalculation in all routers\
    \ in the network.\n"
- title: 5.  Inconsistent Topology
  contents:
  - "5.  Inconsistent Topology\n   Inconsistent topology maps can occur by a compromised\
    \ OLSRv2 router\n   employing either identity spoofing or link spoofing for conducting\
    \ an\n   attack against an OLSRv2 network.  The threats related to NHDP, such\n\
    \   as identity spoofing in NHDP, link spoofing in NHDP, and creating\n   loops,\
    \ have been illustrated in [RFC7186].  This section mainly\n   addresses the vulnerabilities\
    \ in [RFC7181].\n"
- title: 5.1.  Identity Spoofing
  contents:
  - "5.1.  Identity Spoofing\n   Identity spoofing can be employed by a compromised\
    \ OLSRv2 router via\n   the neighborhood discovery process and via the LSA process.\
    \  Either\n   of them causes inconsistent topology maps in routers in the network.\n\
    \   The creation of inconsistent topology maps due to neighborhood\n   discovery\
    \ has been discussed in [RFC7186].  For OLSRv2, the attack on\n   the LSA process\
    \ can also cause inconsistent topology maps.\n   An inconsistent topology map\
    \ may occur when the compromised OLSRv2\n   router takes part in the LSA process\
    \ by selecting a neighbor as an\n   MPR, which in turn advertises the spoofed\
    \ identities of the\n   compromised OLSRv2 router.  This attack will alter the\
    \ topology maps\n   of all routers of the network.\n        A -- B -- C -- D --\
    \ E -- F -- X\n                                    (X spoofs A)\n   Description:\
    \ A compromised OLSRv2 router X spoofs the identity of A,\n   leading to a wrongly\
    \ perceived topology.\n                        Figure 6: Identity Spoofing\n \
    \  In Figure 6, router X spoofs the address of router A.  If X selects F\n   as\
    \ an MPR, all routers in the network will be informed about the link\n   F-A by\
    \ the TCs originating from F.  Assuming that (the real) A\n   selects B as an\
    \ MPR, the link B-A will also be advertised in the\n   network.\n   When calculating\
    \ paths, B and C will calculate paths to A via B, as\n   illustrated in Figure\
    \ 7(a); for these routers, the shortest path to A\n   is via B.  E and F will\
    \ calculate paths to A via F, as illustrated in\n   Figure 7(b); for these routers,\
    \ the shortest path to A is via the\n   compromised OLSRv2 router X, and these\
    \ are thus disconnected from the\n   real A.  D will have a choice, as the path\
    \ calculated to A via B is\n   of the same length as the path via the compromised\
    \ OLSRv2 router X,\n   as illustrated in Figure 7(c).\n   In general, the following\
    \ observations can be made:\n   o  The network will be split in two, with those\
    \ routers closer to B\n      than to X reaching A, whereas those routers closer\
    \ to X than to B\n      will be unable to reach A.\n   o  Routers beyond B, i.e.,\
    \ routers beyond 1 hop away from A, will be\n      unable to detect this identity\
    \ spoofing.\n   The identity spoofing attack via the LSA procedure has a higher\n\
    \   impact than the attack on the neighborhood discovery procedure since\n   it\
    \ alters the topology maps of all routers in the network and not\n   only in the\
    \ 2-hop neighborhood.  However, the attack is easier to\n   detect by other routers\
    \ in the network.  Since the compromised OLSRv2\n   router is advertised in the\
    \ whole network, routers whose identities\n   are spoofed by the compromised OLSRv2\
    \ router can detect the attack.\n   For example, when A receives a TC from F advertising\
    \ the link F-A, it\n   can deduce that some entity is injecting incorrect link\
    \ state\n   information as it does not have F as one of its direct neighbors.\n\
    \                                                 (X spoofs A)\n      A < ----\
    \ B < ---- C           E ----> F ----> X\n      (a) Routers B and C          \
    \ (b) Routers E and F\n         A < --- B < --- C < --- D ---> E ---> F ---->\
    \ X\n                                                    (X spoofs A)\n   Description:\
    \ These paths appear as calculated by the different\n   routers in the network\
    \ in presence of a compromised OLSRv2 router X,\n   spoofing the address of A.\n\
    \                     Figure 7: Routing Paths towards A\n   As the compromised\
    \ OLSRv2 router X does not itself send the TCs, but\n   rather, by virtue of MPR\
    \ selection, ensures that the addresses it\n   spoofs are advertised in TCs from\
    \ its MPR selector F, the attack may\n   be difficult to counter.  Simply ignoring\
    \ TCs that originate from F\n   may also suppress the link state information for\
    \ other, legitimate,\n   MPR selectors of F.\n   Thus, identity spoofing by a\
    \ compromised OLSRv2 router, participating\n   in the LSA process by selecting\
    \ MPRs only, creates a situation\n   wherein two or more routers have substantially\
    \ inconsistent topology\n   maps: traffic for an identified destination is, depending\
    \ on where in\n   the network it appears, delivered to different routers.\n"
- title: 5.2.  Link Spoofing
  contents:
  - "5.2.  Link Spoofing\n   Link spoofing is a situation in which a router advertises\
    \ non-\n   existing links to another router (possibly not present in the\n   network).\
    \  Essentially, TCs and HELLOs both advertise links to direct\n   neighbor routers\
    \ with the difference being the scope of the\n   advertisement.  Thus, link spoofing\
    \ consists of a compromised OLSRv2\n   router reporting that it has neighbors\
    \ routers that are either not\n   present in the network or are effectively not\
    \ neighbors of the\n   compromised OLSRv2 router.\n   It can be noted that a situation\
    \ similar to link spoofing may occur\n   temporarily in an OLSR or OLSRv2 network\
    \ without compromised OLSRv2\n   routers: if A was, but is no more, a neighbor\
    \ of B, then A may still\n   be advertising a link to B for the duration of the\
    \ time it takes for\n   the neighborhood discovery process to determine this changed\n\
    \   neighborhood.\n   In the context of this document, link spoofing refers to\
    \ a persistent\n   situation where a compromised OLSRv2 router intentionally advertises\n\
    \   links to other routers for which it is not a direct neighbor.\n"
- title: 5.2.1.  Inconsistent Topology Maps Due to Link State Advertisements
  contents:
  - "5.2.1.  Inconsistent Topology Maps Due to Link State Advertisements\n   Figure\
    \ 8 illustrates a network in which the compromised OLSRv2 router\n   X spoofs\
    \ links to an existing router A by participating in the LSA\n   process and including\
    \ this non-existing link in its advertisements.\n   A --- B --- C --- D --- E\
    \ --- F --- G --- H --- X\n                             (X spoofs the link to\
    \ A)\n   Description: The compromised OLSRv2 router X advertises a spoofed\n \
    \  link to A in its TCs; thus, all routers will record both of the links\n   X-A\
    \ and B-A.\n                          Figure 8: Link Spoofing\n   As TCs are flooded\
    \ through the network, all routers will receive and\n   record information describing\
    \ a link X-A in this link state\n   information.  If A has selected router B as\
    \ an MPR, B will likewise\n   flood this link state information through the network;\
    \ thus, all\n   routers will receive and record information describing a link\
    \ B-A.\n   When calculating routing paths, B, C, and D will calculate paths to\
    \ A\n   via B, as illustrated in Figure 9(a); for these routers, the shortest\n\
    \   path to A is via B.  F and G will calculate paths to A via X, as\n   illustrated\
    \ in Figure 9(b); for these routers, the shortest path to A\n   is via X, and\
    \ these are thus disconnected from the real router A.  E\n   will have a choice:\
    \ the path calculated to A via B is of the same\n   length as the path via X,\
    \ as illustrated in Figure 9(b).\n   A < --- B < --- C < --- D           F --->\
    \ G ---> X ---> A\n       (a) Routers B, C, and D           (b) Routers F and\
    \ G\n   A < --- B < --- C < --- D < --- E ---> F ---> G ---> X ---> A\n      \
    \                    (c) Router E\n   Description: These paths appear as calculated\
    \ by the different\n   routers in the network in the presence of a compromised\
    \ OLSRv2 router\n   X, spoofing a link to router A.\n                 Figure 9:\
    \ Routing Paths towards Router A\n   In general, the following observations can\
    \ be made:\n   o  The network will be separated in two: routers closer to B than\
    \ X\n      will reach A, whereas routers closer to X than B will be unable to\n\
    \      reach A.\n   o  Routers beyond B, i.e., routers beyond 1 hop away from\
    \ A, will be\n      unable to detect this link spoofing.\n"
- title: 6.  Mitigation of Security Vulnerabilities for OLSRv2
  contents:
  - "6.  Mitigation of Security Vulnerabilities for OLSRv2\n   As described in Section\
    \ 1, [RFC7183] specifies a security mechanism\n   for OLSRv2 that is mandatory\
    \ to implement.  However, deployments may\n   choose to use different security\
    \ mechanisms if more appropriate.\n   Therefore, it is important to understand\
    \ both the inherent resilience\n   of OLSRv2 against security vulnerabilities\
    \ when not using the\n   mechanisms specified in [RFC7183] and the protection\
    \ that [RFC7183]\n   provides when used in a deployment.\n"
- title: 6.1.  Inherent OLSRv2 Resilience
  contents:
  - "6.1.  Inherent OLSRv2 Resilience\n   OLSRv2 (even when used without the mandatory-to-implement\
    \ security\n   mechanisms in [RFC7183]) provides some inherent resilience against\n\
    \   part of the attacks described in this document.  In particular, it\n   provides\
    \ the following resilience:\n   o  Sequence numbers: OLSRv2 employs message sequence\
    \ numbers, which\n      are specific per the router identity and message type.\
    \  Routers\n      keep an \"information freshness\" number (ANSN) incremented\
    \ each\n      time the content of an LSA from a router changes.  This allows\n\
    \      rejecting both \"old\" information and duplicate messages, and it\n   \
    \   provides some protection against \"message replay\".  However, this\n    \
    \  also presents an attack vector (Section 4.3).\n   o  Ignoring unidirectional\
    \ links: The neighborhood discovery process\n      detects and admits only bidirectional\
    \ links for use in MPR\n      selection and LSA.  Jamming attacks may affect only\
    \ reception of\n      control traffic; however, OLSRv2 will correctly recognize,\
    \ and\n      ignore, such a link that is not bidirectional.\n   o  Message interval\
    \ bounds: The frequency of control messages, with\n      minimum intervals imposed\
    \ for HELLO and TCs.  This may limit the\n      impact from an indirect jamming\
    \ attack (Section 4.4).\n   o  Additional reasons for rejecting control messages:\
    \ The OLSRv2\n      specification includes a list of reasons for which an incoming\n\
    \      control message should be rejected as malformed -- and allows that\n  \
    \    a protocol extension may recognize additional reasons for OLSRv2\n      to\
    \ consider a message malformed.  Together with the flexible\n      message format\
    \ [RFC5444], this allows addition of security\n      mechanisms, such as digital\
    \ signatures, while remaining compliant\n      with the OLSRv2 standard specification.\n"
- title: 6.2.  Resilience by Using RFC 7183 with OLSRv2
  contents:
  - "6.2.  Resilience by Using RFC 7183 with OLSRv2\n   [RFC7183] specifies mechanisms\
    \ for integrity and replay protection\n   for NHDP and OLSRv2 using the generalized\
    \ packet/message format\n   described in [RFC5444] and the TLV definitions in\
    \ [RFC7182].  The\n   specification describes how to add an Integrity Check Value\
    \ (ICV) in\n   a TLV to each control message, providing integrity protection of\
    \ the\n   content of the message using Hashed Message Authentication Code\n  \
    \ (HMAC) / SHA-256.  In addition, a timestamp TLV is added to the\n   message\
    \ prior to creating the ICV, enabling replay protection of\n   messages.  The\
    \ document specifies how to sign outgoing messages and\n   how to verify incoming\
    \ messages, as well as under which circumstances\n   an invalid message is rejected.\
    \  Because of the HMAC/SHA-256 ICV, a\n   shared key between all routers in the\
    \ MANET is assumed.  A router\n   without valid credentials is not able to create\
    \ an ICV that can be\n   correctly verified by other routers in the MANET; therefore,\
    \ such an\n   incorrectly signed message will be rejected by other MANET routers,\n\
    \   and the router cannot participate in the OLSRv2 routing process\n   (i.e.,\
    \ the malicious router will be ignored by other legitimate\n   routers).  [RFC7183]\
    \ does not address the case where a router with\n   valid credentials has been\
    \ compromised.  Such a compromised router\n   will not be excluded from the routing\
    \ process, and other means of\n   detecting such a router are necessary if required\
    \ in a deployment:\n   for example, using an asymmetric key extension to [RFC7182]\
    \ that\n   allows revocation of the access of one particular router.\n   In the\
    \ following sections, each of the vulnerabilities described\n   earlier in this\
    \ document will be evaluated in terms of whether OLSRv2\n   with the mechanisms\
    \ in [RFC7183] provides sufficient protection\n   against the attack.  It is implicitly\
    \ assumed in each of the\n   following sections that [RFC7183] is used with OLSRv2.\n"
- title: 6.2.1.  Topology Map Acquisition
  contents:
  - "6.2.1.  Topology Map Acquisition\n   Attack on Jittering:  As only OLSRv2 routers\
    \ with valid credentials\n      can participate in the routing process, a malicious\
    \ router cannot\n      reduce the jitter time of an attacked router to 0 by sending\
    \ many\n      TC messages in a short time.  The attacked router would reject all\n\
    \      the incoming messages as \"invalid\" and not forward them.  The same\n\
    \      applies for the case where a malicious router wants to assure that\n  \
    \    by forcing a 0 jitter interval, the message arrives before the\n      same\
    \ message forwarded by legitimate routers.\n   Modifying the Hop Limit and the\
    \ Hop Count:  As the hop limit and hop\n      count are not protected by [RFC7183]\
    \ (since they are mutable\n      fields that change at every hop), this attack\
    \ is still feasible.\n      It is possible to apply [RFC5444] packet-level protection\
    \ by using\n      ICV Packet TLV defined in [RFC7182] to provide hop-by-hop\n\
    \      integrity protection -- at the expense of a requirement of\n      pairwise\
    \ trust between all neighbor routers.\n"
- title: 6.2.2.  Effective Topology
  contents:
  - "6.2.2.  Effective Topology\n   Incorrect Forwarding:  As only OLSRv2 routers\
    \ with valid credentials\n      can participate in the routing process, a malicious\
    \ router will\n      not be part of the topology of other legitimate OLSRv2 routers.\n\
    \      Therefore, no data traffic will be sent to the malicious router\n     \
    \ for forwarding.\n   Wormholes:  Since a wormhole consists of at least two devices\n\
    \      forwarding (unmodified) traffic, this attack is still feasible and\n  \
    \    undetectable by the OLSRv2 routing process since the attack does\n      not\
    \ involve the OLSRv2 protocol itself (but rather lower layers).\n      By using\
    \ [RFC7183], it can at least be assured that the content of\n      the control\
    \ messages is not modified while being forwarded via the\n      wormhole.  Moreover,\
    \ the timestamp TLV assures that the forwarding\n      can only be done in a short\
    \ time window after the actual TC\n      message has been sent.\n   Message Sequence\
    \ Number:  As the message sequence number is included\n      in the ICV calculation,\
    \ OLSRv2 is protected against this attack.\n   Advertised Neighbor Sequence Number\
    \ (ANSN):  As the ANSN is included\n      in the ICV calculation, OLSRv2 is protected\
    \ against this attack.\n   Indirect Jamming:  Since the control messages of a\
    \ malicious router\n      will be rejected by other legitimate OLSRv2 routers\
    \ in the MANET,\n      this attack is mitigated.\n"
- title: 6.2.3.  Inconsistent Topology
  contents:
  - "6.2.3.  Inconsistent Topology\n   Identity Spoofing:  Since the control messages\
    \ of a malicious router\n      will be rejected by other legitimate OLSRv2 routers\
    \ in the MANET,\n      a router without valid credentials may spoof its identity\
    \ (e.g.,\n      IP source address or message originator address), but the messages\n\
    \      will be ignored by other routers.  As the mandatory mechanism in\n    \
    \  [RFC7183] uses shared keys amongst all MANET routers, a single\n      compromised\
    \ router may spoof its identity and cause harm to the\n      network stability.\
    \  Removing this one malicious router, once\n      detected, implies rekeying\
    \ all other routers in the MANET.\n      Asymmetric keys, particularly when using\
    \ identity-based signatures\n      (such as those specified in [RFC7859]), may\
    \ give the possibility\n      of revoking single routers and verifying their identity\
    \ based on\n      the ICV itself.\n   Link Spoofing:  Similar to identity spoofing,\
    \ a malicious router\n      without valid credentials may spoof links, but its\
    \ control\n      messages will be rejected by other routers, thereby mitigating\
    \ the\n      attack.\n   Inconsistent Topology Maps Due to LSAs:  The same considerations\
    \ for\n      link spoofing apply.\n"
- title: 6.3.  Correct Deployment
  contents:
  - "6.3.  Correct Deployment\n   Other than implementing OLSRv2, including appropriate\
    \ security\n   mechanisms, the way in which the protocol is deployed is also\n\
    \   important to ensure proper functioning and threat mitigation.  For\n   example,\
    \ Section 4.1 discussed considerations due to an incorrect\n   forwarding-policy\
    \ setting, and Section 4.2 discussed considerations\n   for when intentional wormholes\
    \ are present in a deployment.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   This document does not specify a protocol or\
    \ a procedure but reflects\n   on security considerations for OLSRv2 and for its\
    \ constituent parts,\n   including NHDP.  The document initially analyses threats\
    \ to topology\n   map acquisition, with the assumption that no security mechanism\n\
    \   (including the mandatory-to-implement mechanisms from [RFC7182] and\n   [RFC7183])\
    \ is in use.  Then, it proceeds to discuss how the use of\n   [RFC7182] and [RFC7183]\
    \ mitigate the identified threats.  When\n   [RFC7183] is used with routers using\
    \ a single shared key, the\n   protection offered is not effective if a compromised\
    \ router has valid\n   credentials.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC6130]  Clausen, T., Dearlove, C., and J. Dean,\
    \ \"Mobile Ad Hoc\n              Network (MANET) Neighborhood Discovery Protocol\
    \ (NHDP)\",\n              RFC 6130, DOI 10.17487/RFC6130, April 2011,\n     \
    \         <http://www.rfc-editor.org/info/rfc6130>.\n   [RFC7181]  Clausen, T.,\
    \ Dearlove, C., Jacquet, P., and U. Herberg,\n              \"The Optimized Link\
    \ State Routing Protocol Version 2\",\n              RFC 7181, DOI 10.17487/RFC7181,\
    \ April 2014,\n              <http://www.rfc-editor.org/info/rfc7181>.\n   [RFC7186]\
    \  Yi, J., Herberg, U., and T. Clausen, \"Security Threats for\n             \
    \ the Neighborhood Discovery Protocol (NHDP)\", RFC 7186,\n              DOI 10.17487/RFC7186,\
    \ April 2014,\n              <http://www.rfc-editor.org/info/rfc7186>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [FUNKFEUER]\n              Funkfeuer, \"Funkfeuer\"\
    , <https://www.funkfeuer.at/>.\n   [IEEE802.11]\n              IEEE, \"IEEE Standard\
    \ for Information technology -\n              Telecommunications and information\
    \ exchange between\n              systems Local and metropolitan area networks\
    \ - Specfic\n              requirements Part 11: Wireless LAN Medium Access Control\n\
    \              and Physical (PHY) Specifications\", IEEE Std 802.11-2016,\n  \
    \            DOI 10.1109/IEEESTD.2016.7786995, December 2016.\n   [MPR-FLOODING]\n\
    \              Qayyum, A., Viennot, L., and A. Laouiti, \"Multipoint\n       \
    \       Relaying: An Efficient Technique for Flooding in Mobile\n            \
    \  Wireless Networks\", Proceedings of the 35th Annual Hawaii\n              International\
    \ Conference on System Sciences (HICSS\n              '01), IEEE Computer Society,\
    \ 2001.\n   [OLSR-FSR] Clausen, T., \"Combining Temporal and Spatial Partial\n\
    \              Topology for MANET routing - Merging OLSR and FSR\",\n        \
    \      Proceedings of the 2003 IEEE Conference of Wireless\n              Personal\
    \ Multimedia Communications (WPMC '03), 2003.\n   [OLSR-FSR-Scaling]\n       \
    \       Adjih, C., Baccelli, E., Clausen, T., Jacquet, P., and G.\n          \
    \    Rodolakis, \"Fish Eye OLSR Scaling Properties\", IEEE\n              Journal\
    \ of Communication and Networks (JCN), Special Issue\n              on Mobile\
    \ Ad Hoc Networks, December 2004.\n   [RFC3626]  Clausen, T., Ed. and P. Jacquet,\
    \ Ed., \"Optimized Link\n              State Routing Protocol (OLSR)\", RFC 3626,\n\
    \              DOI 10.17487/RFC3626, October 2003,\n              <http://www.rfc-editor.org/info/rfc3626>.\n\
    \   [RFC5068]  Hutzler, C., Crocker, D., Resnick, P., Allman, E., and T.\n   \
    \           Finch, \"Email Submission Operations: Access and\n              Accountability\
    \ Requirements\", BCP 134, RFC 5068,\n              DOI 10.17487/RFC5068, November\
    \ 2007,\n              <http://www.rfc-editor.org/info/rfc5068>.\n   [RFC5148]\
    \  Clausen, T., Dearlove, C., and B. Adamson, \"Jitter\n              Considerations\
    \ in Mobile Ad Hoc Networks (MANETs)\",\n              RFC 5148, DOI 10.17487/RFC5148,\
    \ February 2008,\n              <http://www.rfc-editor.org/info/rfc5148>.\n  \
    \ [RFC5444]  Clausen, T., Dearlove, C., Dean, J., and C. Adjih,\n            \
    \  \"Generalized Mobile Ad Hoc Network (MANET) Packet/Message\n              Format\"\
    , RFC 5444, DOI 10.17487/RFC5444, February 2009,\n              <http://www.rfc-editor.org/info/rfc5444>.\n\
    \   [RFC5497]  Clausen, T. and C. Dearlove, \"Representing Multi-Value\n     \
    \         Time in Mobile Ad Hoc Networks (MANETs)\", RFC 5497,\n             \
    \ DOI 10.17487/RFC5497, March 2009,\n              <http://www.rfc-editor.org/info/rfc5497>.\n\
    \   [RFC7182]  Herberg, U., Clausen, T., and C. Dearlove, \"Integrity\n      \
    \        Check Value and Timestamp TLV Definitions for Mobile Ad\n           \
    \   Hoc Networks (MANETs)\", RFC 7182, DOI 10.17487/RFC7182,\n              April\
    \ 2014, <http://www.rfc-editor.org/info/rfc7182>.\n   [RFC7183]  Herberg, U.,\
    \ Dearlove, C., and T. Clausen, \"Integrity\n              Protection for the\
    \ Neighborhood Discovery Protocol (NHDP)\n              and Optimized Link State\
    \ Routing Protocol Version 2\n              (OLSRv2)\", RFC 7183, DOI 10.17487/RFC7183,\
    \ April 2014,\n              <http://www.rfc-editor.org/info/rfc7183>.\n   [RFC7184]\
    \  Herberg, U., Cole, R., and T. Clausen, \"Definition of\n              Managed\
    \ Objects for the Optimized Link State Routing\n              Protocol Version\
    \ 2\", RFC 7184, DOI 10.17487/RFC7184, April\n              2014, <http://www.rfc-editor.org/info/rfc7184>.\n\
    \   [RFC7187]  Dearlove, C. and T. Clausen, \"Routing Multipoint Relay\n     \
    \         Optimization for the Optimized Link State Routing Protocol\n       \
    \       Version 2 (OLSRv2)\", RFC 7187, DOI 10.17487/RFC7187, April\n        \
    \      2014, <http://www.rfc-editor.org/info/rfc7187>.\n   [RFC7188]  Dearlove,\
    \ C. and T. Clausen, \"Optimized Link State Routing\n              Protocol Version\
    \ 2 (OLSRv2) and MANET Neighborhood\n              Discovery Protocol (NHDP) Extension\
    \ TLVs\", RFC 7188,\n              DOI 10.17487/RFC7188, April 2014,\n       \
    \       <http://www.rfc-editor.org/info/rfc7188>.\n   [RFC7466]  Dearlove, C.\
    \ and T. Clausen, \"An Optimization for the\n              Mobile Ad Hoc Network\
    \ (MANET) Neighborhood Discovery\n              Protocol (NHDP)\", RFC 7466, DOI\
    \ 10.17487/RFC7466, March\n              2015, <http://www.rfc-editor.org/info/rfc7466>.\n\
    \   [RFC7859]  Dearlove, C., \"Identity-Based Signatures for Mobile Ad Hoc\n \
    \             Network (MANET) Routing Protocols\", RFC 7859,\n              DOI\
    \ 10.17487/RFC7859, May 2016,\n              <http://www.rfc-editor.org/info/rfc7859>.\n\
    \   [RFC7939]  Herberg, U., Cole, R., Chakeres, I., and T. Clausen,\n        \
    \      \"Definition of Managed Objects for the Neighborhood\n              Discovery\
    \ Protocol\", RFC 7939, DOI 10.17487/RFC7939,\n              August 2016, <http://www.rfc-editor.org/info/rfc7939>.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Thomas Clausen\n   Phone: +33-6-6058-9349\n   Email: T.Clausen@computer.org\n\
    \   URI:   http://www.thomasclausen.org\n   Ulrich Herberg\n   Email: ulrich@herberg.name\n\
    \   URI:   http://www.herberg.name\n   Jiazi Yi\n   Ecole Polytechnique\n   91128\
    \ Palaiseau Cedex\n   France\n   Phone: +33 1 77 57 80 85\n   Email: jiazi@jiaziyi.com\n\
    \   URI:   http://www.jiaziyi.com/\n"
