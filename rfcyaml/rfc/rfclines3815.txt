Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects for the Multiprotocol Label Switching, Label Distribution Protocol (LDP).
This document defines 4 MIB Modules which together support the configuration and monitoring of the Label Distribution Protocol (LDP).
The Label Distribution Protocol (LDP)
[RFC3036] is one type of Multiprotocol Label Switching (MPLS) protocols described in [RFC3031] and [RFC3032].
all 4 MIB Modules allows an operator to configure LDP sessions using 3 different Layer 2 media.
The Layer 2 media supported by the MIB Modules are Ethernet, ATM and Frame Relay as described in [RFC3036], [RFC3034] and [RFC3035].
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in RFC 2119
For an introduction to the concepts of MPLS, see [RFC3031].
For further on LDP refer to [RFC3037] and [RFC3215].
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Structure of the MIB Modules
This section describes the structure of the LDP MIB Modules.
There are 4 MIB Modules in this document.
These MIB Modules are the MPLS LDP STD MIB, the MPLS LDP GENERIC STD MIB, the MPLS LDP ATM STD  MIB and the MPLS LDP FRAME RELAY STD MIB.
The MPLS LDP STD MIB defines objects which are common to all LDP implementations.
The MPLS LDP GENERIC STD MIB defines Layer 2 Per Platform Label Space objects for use with the MPLS LDP STD MIB.
The MPLS LDP ATM STD MIB defines Layer 2 Asynchronous Transfer Mode (ATM) objects for use with the MPLS LDP STD MIB.
The MPLS LDP FRAME RELAY STD MIB defines Layer 2 FRAME RELAY objects for use with the MPLS LDP STD MIB.
The MPLS LDP STD MIB Module MUST be implemented and at least one of the Layer
2 MIB Modules MUST be implemented by an Agent developer on an Label Switching Router (LSR) or Label Edge Router (LER).
As an example, if a Label Switching Router (LSR) or Label Edge Router (LER) implementation intends to support LDP utilizing a Layer 2 of Ethernet, then the MPLS LDP STD MIB and the MPLS LDP GENERIC STD MIB Modules MUST implemented.
If an LSR/LER implementation intends to support LDP utilizing a Layer 2 of ATM, then the MPLS LDP STD MIB Module and the MPLS LDP ATM MIB Module MUST be implemented.
If an LSR/LER implementation intends to support LDP utilizing a Layer 2 of FRAME RELAY, then the MPLS LDP STD MIB Module and the MPLS LDP FRAME  RELAY STD MIB Module MUST be implemented.
An LDP implementation that utilizes all three Layer 2 media (Ethernet, Frame Relay, ATM) MUST support all 4 MIB Modules.
Each of the Modules will be discussed in detail in the following sections.
There are 2 compliance statements for each MIB Module.
One compliance statement is for full compliance which allows both configuration and monitoring via SNMP.
The other compliance statement is for read only compliance which allows only monitoring via SNMP.
The LDP Specification [RFC3036] does not specify the use of VPNs or multicast for LDP, and thus, objects related to these areas have not been included.
[RFC2684] does not describe VP merge capability and so this feature has not been included.
These areas need to be specified in the LDP Specification or other specifications prior to being added in this or any other MIB document.
Interface Indexing Interface Indexes as specified in [RFC2863] are used in these MIB Modules.
The descriptions of the ifIndexes denote which ifIndex is being used.
The use of ifIndex is for actual existing connections.
Differences from the LDP Specification
Currently, there are 3 differences between this specification and the LDP Specification.
As described in the Introduction, this document is almost entirely based on the LDP specification.
The differences are documented here.
The first difference is that the LDP Entity Table contains some DEFVAL clauses which are not specified explicitly in the LDP Specification.
These values, although not documented in the LDP Specification, are widely used by existing LDP MIB implementations and thus, have been adopted within this MPLS LDP STD MIB module.
Please note, they can certainly be changed during row creation or a subsequent SET request.
A second difference is the mplsLdpEntityGenericLRTable in the MPLS
LDP GENERIC STD MIB Module.
This table, although provided as a way to reserve a range of generic labels, does not exist in the LDP Specification.
It was added to the MIB due to a request from the working group and because this table was considered useful for reserving a range of generic labels.
The third difference is documented by the TEXTUAL CONVENTION, MplsAtmVcIdentifier which is in the MPLS TC STD MIB [RFC3811].
This TC was added to restrict vci values to be greater than 31 as described in RFC 3035
The MPLS LDP STD MIB Module
This MIB Module contains objects which are common to all LDP implementations.
This MIB Module MUST always be implemented along with one or more of the Layer 2 MIB Modules.
This MIB Module IMPORTS IndexInteger and IndexIntegerNextFree TEXTUAL CONVENTIONs from [RFC3289], and IMPORTS InetAddressPrefixLength, InetAddressType, InetAddressInetPortNumber TEXTUAL CONVENTIONs from [RFC3291].
The mplsLdpEntityTable table allows the Label Edge Router (LER) or the Label Switching Router (LSR) to initiate and/or receive requests to establish LDP sessions.
As the LDP protocol distributes labels and establishes sessions with Peers most of the tables in this module are populated by the agent as instructed by the LDP protocol.
The exception is the mplsFecTable and the mplsLdpLspFecTable which can be configured by the operator to specify Forwarding Equivalence Class information for an LSP.
Some scalars and each table in the MPLS LDP STD MIB Module are described in the following subsections.
There are several scalar objects in the LDP MIB module.
The mplsLdpLsrId is a read only scalar object which reports Label Switching Router's (LSR's) Identifier.
This MUST be a globally unique value, such as the 32 bit router ID assigned to the LSR.
The mplsLdpLsrLoopDetectionCapable scalar object denotes whether the LSR is capable of supporting loop detection and if so, which form of loop detection.
There are two LastChange scalar objects, mplsLdpEntityLastChange and
These objects give an indication of there was a change in the number of entries in the table, or if any of the values in the respective tables changed.
Please see the object's description for more details.
The mplsLdpEntityIndexNext scalar object is described in the next section.
The MPLS LDP STD MIB provides objects to configure/set up potential LDP sessions on a specific LSR/LER.
The mplsLdpEntityTable is used to configure information which is used by the LDP protocol to setup potential LDP Sessions.
Each entry/row in this table represents a single LDP Entity.
There is no maximum number of LDP Entities specified.
However, there is an mplsLdpEntityIndexNext object which should be retrieved by the command generator prior to creating an LDP Entity.
If the mplsLdpEntityIndexNext object is zero, this indicates that the LSR/LER is not able to create another LDP Entity at that time.
After Session Establishment One way to manually modify a session's parameters is by using SNMP to change the MIB objects related to that session.
Please note, special care should be taken if MIB objects which are used in the MPLS LDP Session Initialization need to be modified.
If the modification of any of these MIB variables takes place anytime after the start of session intialization, then the entire session must be halted.
Any information learned by that session must be discarded.
The objects should then be modified, and session initialization started.
Assuming that the configuration was done correctly, then a new session will be created.
For example, assume that an operator wishes to change the configuration of a Label Range which is used by a Session that has already been established.
The operator should change the mplsLdpEntityAdminStatus to "disable(2)".
Setting the mplsLdpEntityAdminStatus to "disable(2)" will cause the session to be torn down (i.e., this will signal to LDP that it should send out tear down messages for that session).
Also, all information related to that session should be removed from this MIB by the Agent.
This includes Peer information (i.e., relevant row in the mplsPeerTable) and Session statistics (i.e., relevant row in the mplsLdpSessionTable).
Also, if the MPLS LSR STD MIB module [RFC3813] is implemented and the optional Mapping Table objects are implemented, then all information related to the LSPs in this session should be removed from these MIB modules.
[For more information please see the section on "The Mapping Tables".]
At this point, the operator could modify the Label Range.
Lastly, the operator should set the mplsLdpEntityAdminStatus to "enable(1)".
At this point session initialization should occur.
The LDP Entity goes through the Session Initialization in order to communicate the new Label Ranges to the Peer and establish new LSPs.
The LDP Entity Statistics Table
The mplsLpdEntityStatsTable is a read only table which contains statistical information related to failed attempts to establish sessions.
Each row in this table AUGMENTS an mplsLdpEntityEntry.
This table could be used to give insight into how to reconfigure values so that a session could be successfully established.
For example, if the mplsLdpEntityStatsSessionRejectedLRErrors Counter object was increasing, then this would indicate that the Label Range (LR) may need to be adjusted.
The mplsLdpPeerTable is a read only table which contains information about LDP Peers known to LDP Entities.
In other words, the Peer information is learned by LDP through initialization or discovery.
This table should be populated by the agent as directed by the LDP protocol.
A row in this table is related to one or more rows in the Hello Adjacency Table and related to a single row in the Session Table.
The values in the Peer table are specific to a Peer and may or may not be the same values used in the session.
The reason is that the Peer and Entity negotiate certain values.
The Entity's values are configured in the mplsLdpEntityTable and the Peer's values are learned (and placed into the mplsLdpPeerTable).
The mplsLdpSessionTable shows the values used in establishing the session.
One example, of when the Peer's values and the Session's values may differ is with the Peer's Path Limit information.
The Peer's Path Limit information is learned from the session initialization phase.
The actual value for the Path Vector Limit is the Peer's value and may not be the same value that appears in the session.
There could be a mismatch in this value between the Entity and the Peer.
In the event of a mismatch, then the session will use the Path Limit set by the Entity (and not the Peer).
The Peer Table information was placed in a separate table from the Session information to allow for a more comprehensive and coherent MIB model.
The mplsLdpSessionTable is a read only table.
Each entry in this table represents a single session between an LDP Entity and a Peer.
The mplsLdpSessionEntry AUGMENTS the mplsLdpPeerEntry.
The information in this table is learned during session establishment.
rows in this table will appear during session intialization.
The LDP Session Statistics Table
The mplsLdpSessionStatsTable is a read only table which contains statistical information on sessions.
This table AUGMENTS the mplsLdpPeerTable.
The LDP Hello Adjacency Table
This is a table of all adjacencies between all LDP Entities and all LDP Peers.
A Session may have one or more adjacencies.
A session should not have zero adjacencies, because this indicates that the session has lost contact with the Peer.
A session which has zero Hello Adjacencies should be removed.
The Label Information Base (LIB) contains information about labels learned by the LSR.
The LIB for LDP, CR LDP and MPLS RSVP (i.e., all currently defined MPLS protocols) is represented in the LSR MIB [RFC3813].
The LIB is represented by the LSR MIB's mplsXCTable (mpls Cross Connect Table), mplsInSegmentTable (mpls In Segment Table) and the mplsOutSegmentTable (mpls Out Segment Table).
The mplsXCTable models the cross connection of the incoming label with a specific outgoing label.
The mplsInSegmentTable stores the incoming label's information, and the mplsOutSegmentTable stores the outgoing label's information.
The LDP Session that created the LSP and the LSP's (incoming label, outgoing label) pair along with other information is contained in the MPLS LSR STD MIB module's mplsXCTable, the mplsInSegmentTable and the mplsOutSegmentTable.
In order to utilize the MPLS LSR STD
MIB module's mplsXCTable, mplsInSegmentTable and mplsOutSegmentTable for LDP LSPs, there needs to be a mechanism to associate LDP sessions with LDP LSPs created as a result of those LDP sessions.
The mplsInSegmentLdpLspTable and mplsOutSegmentLdpLspTable in this MIB contain information to find the LDP LSP entries in the mplsInSegmentTable, mplsOutSegmentTable and the mplsXCTable.
These two tables, the mplsInSegmentLdpLspTable and mplsOutSegmentLdpLspTable, have been made optional in the conformance section of the MIB.
They only need to be supported if the LSR MIBs mplsInSegmentTable, mplsOutSegmentTable and mplsXCTable are implemented.
As discussed in the section, "Changing Values after Session Establishment", if a session is torn down, then all the information related to this session, must be removed from the both LDP MIB and, if implemented, from the LSR MIB.
The mplsLdpFecTable is a table which contains FEC (Forwarding Equivalence Class) information.
Each entry/row represents a single FEC Element.
There is also an LDP LSP FEC Table, mplsLdpLspFecTable, which associates FECs with the LSPs.
The LDP Session Peer Address Table
The mplsLdpSessionPeerAddrTable is a table which extends the mplsLdpSessionTable.
This table is a read only table which stores Addresses learned after session initialization via Address Message advertisement.
Currently, there are several notifications which are specific for LDP.
These are described in this section.
There are no objects which enable or disable notifications from being generated.
[RFC3413] contains MIB modules which can be implemented that will enable or disable these notifications from being generated.
The mplsLdpInitSessionThresholdExceeded notification indicates to the operator that there may be a misconfigured mplsLdpEntityEntry because the session associated with this Entity is not being established, and the Entity keeps trying to establish the session.
A side effect of this situation is that a row in the mplsLdpSessionTable may not be reaching the operational state as indicated by the mplsLdpSessionState object.
If the value of mplsLdpEntityInitSessionThreshold is 0 (zero)
then this is equal to specifying the value of infinity for the threshold, and the mplsLdpInitSessionThresholdExceeded notification will never be sent.
The mplsLdpPathVectorLimitMismatch notification is generated when there is a mismatch in the Path Vector Limits between the Entity and Peer during session initialization.
The session uses the value which is configured as the Entity's Path Vector Limit.
However, a notification should be generated to indicate that a mismatch occurred.
For further details, please see Section 3.5.3 of the LDP Specification [RFC3036].
The mplsLdpSessionUp and mplsLdpSessionDown notifications are generated when there is an appropriate change in the mplsLdpSessionState object, e.g., when sessions change state (Up to Down for the mplsLdpSessionDown notification, or Down to Up for the mplsLdpSessionUp notification).
There was discussion about combining these two notifications into a single notification, however, some NMS applications can utilize two different notifications, rather than having to parse the varbind list of a single notification.
For example, the SessionDown is matched to a SessionUp notification more easily by some NMS applications, than having to parse a Varbind list in a SessionChange type of notification.
LDP Notification Frequency LDP Notifications are expected to be few in number when LDP is ubiquitously deployed in a relatively stable network.
A notification receiver, e.g., an NMS, that receives these notifications should not be overwhelmed by the frequency of LDP notifications.
If this assertion proves to be inaccurate, then a throttling object to throttle these notifications may be added to future versions of the MPLS LDP STD MIB.
MODULE COMPLIANCE, OBJECT GROUP, NOTIFICATION GROUP FROM SNMPv2
[RFC2580] RowStatus, TimeInterval, TruthValue, TimeStamp, StorageType FROM SNMPv2 TC
[RFC2579] InetAddressPrefixLength, InetAddressType, InetAddress, InetPortNumber FROM INET ADDRESS
IndexInteger, IndexIntegerNextFree FROM DIFFSERV MIB
[RFC3289] mplsStdMIB, MplsLabelDistributionMethod, MplsLdpIdentifier, MplsLdpLabelType, MplsLspType, MplsLsrIdentifier,
Inc. Hans Sjostrand (hans@ipunplugged.com) ipUnplugged James V. Luciani (james luciani@mindspring.com)
loa@pi.se MPLS Working Group, email: mpls@uu.net
The initial version of this MIB module was published in RFC 3815.
For full legal notices see the RFC itself or see: http://www.ietf.org/copyrights/ianamib.html
This MIB contains managed object definitions for the 'Multiprotocol Label Switching, Label Distribution Protocol, LDP' document."
Initial version published as part of RFC 3815."
The MPLS Label Distribution Protocol's   Label Switching Router Objects   mplsLdpLsrId OBJECT
"A indication of whether this Label Switching Router supports loop detection.
Loop Detection is not supported on this LSR.
Loop Detection is supported but by a method other than those listed below.
Loop Detection is supported by Hop Count only.
Loop Detection is supported by Path Vector only.
Loop Detection is supported by both Hop Count And Path Vector.
Since Loop Detection is determined during Session Initialization, an individual session may not be running with loop detection.
This object simply gives an indication of whether or not the LSR has the ability to support Loop Detection and which types."
MAX ACCESS read only STATUS current DESCRIPTION
"The value of sysUpTime at the time of the most recent addition or deletion of an entry to/from the mplsLdpEntityTable/mplsLdpEntityStatsTable, or the most recent change in value of any objects in the mplsLdpEntityTable.
If no such changes have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
"This object contains an appropriate value to be used for mplsLdpEntityIndex when creating entries in the mplsLdpEntityTable.
The value 0 indicates that no unassigned entries are available."
{ mplsLdpEntityObjects 2 } mplsLdpEntityTable OBJECT TYPE SYNTAX
"This table contains information about the MPLS Label Distribution Protocol Entities which exist on this Label Switching Router (LSR) or Label Edge Router (LER)."
An entry in this table represents an LDP entity.
An entry can be created by a network administrator or by an SNMP agent as instructed by LDP.
REFERENCE "RFC3036, LDP Specification, Section on LDP Identifiers."
{ mplsLdpEntityEntry 1 } mplsLdpEntityIndex OBJECT TYPE SYNTAX
"This index is used as a secondary index to uniquely identify this row.
Before creating a row in this table, the 'mplsLdpEntityIndexNext' object should be retrieved.
That value should be used for the value of this index when creating a row in this table.
if a value of zero (0) is retrieved, that indicates that no rows can be created in this table at this time.
A secondary index (this object) is meaningful to some but not all, LDP implementations.
For example an LDP implementation which uses PPP would use this index to differentiate PPP sub links.
Another way to use this index is to give this the value of ifIndex.
However, this is dependant on the implementation."
"The version number of the LDP protocol which will be used in the session initialization message.
Section 3.5.3 in the LDP Specification specifies that the version of the LDP protocol is negotiated during session establishment.
The value of this object represents the value that is sent in the initialization message.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
"The administrative status of this LDP Entity.
If this object is changed from 'enable' to 'disable' and this entity has already attempted to establish contact with a Peer, then all contact with that Peer is lost and all information from that Peer needs to be removed from the MIB.
(This implies that the network management subsystem should clean up any related entry in the mplsLdpPeerTable.
This further implies that a 'tear down' for that session is issued and the session and all information related to that session cease to exist).
At this point the operator is able to change values which are related to this entity.
When the admin status is set back to 'enable', then this Entity will attempt to establish a new session with the Peer."
The value of unknown(1) indicates that the operational status cannot be determined at this time.
The value of unknown should be a transient condition before changing to enabled(2) or disabled(3)."
The default value is the well known value of this port."
REFERENCE "RFC3036, LDP Specification, Section 3.10, Well known Numbers, and Section 3.10.1.
The default value is the well known value for this port."
REFERENCE "RFC3036, LDP Specification, Section 2.4.1, Basic Discovery Mechanism, Section 2.4.2, Extended Discovery Mechanism, Section 3.10, Well known Numbers, and Section 3.10.1.
"The maximum PDU Length that is sent in the Common Session Parameters of an Initialization Message.
According to the LDP Specification [RFC3036] a value of 255 or less specifies the default maximum length of 4096 octets, this is why the value of this object starts at 256.
The operator should explicitly choose the default value (i.e., 4096), or some other value.
The receiving LSR MUST calculate the maximum PDU length for the session by using the smaller of its and its peer's proposals for Max PDU Length.
" REFERENCE "RFC3036, LDP Specification, Section 3.5.3.
"The 16 bit integer value which is the proposed keep alive hold timer for this LDP Entity."
"The 16 bit integer value which is the proposed Hello hold timer for this LDP Entity.
The Hello Hold time in seconds.
An LSR maintains a record of Hellos received from potential peers.
This object represents the Hold Time in the Common Hello Parameters TLV of the Hello Message.
A value of 0 is a default value and should be interpretted in conjunction with the mplsLdpEntityTargetPeer object.
If the value of this object is 0: if the value of the mplsLdpEntityTargetPeer object is false(2), then this specifies that the Hold Time's actual default value is 15 seconds
(i.e., the default Hold time for Link Hellos is 15 seconds).
Otherwise if the value of the mplsLdpEntityTargetPeer object is true(1), then this specifies that the Hold Time's actual default value is 45 seconds (i.e., the default Hold time for Targeted Hellos is 45 seconds).
A value of 65535 means infinite (i.e., wait forever).
All other values represent the amount of time in seconds to wait for a Hello Message.
Setting the hold time to a value smaller than 15 is not recommended, although not forbidden according to RFC3036.
" REFERENCE "RFC3036, LDP Specification, Section 3.5.2., Hello Message."
"When attempting to establish a session with a given Peer, the given LDP Entity should send out the SNMP notification, 'mplsLdpInitSessionThresholdExceeded', when the number of Session Initialization messages sent exceeds this threshold.
The notification is used to notify an operator when this Entity and its Peer are possibly engaged in an endless sequence of messages as each NAKs the other's Initialization messages with Error Notification messages.
Setting this threshold which triggers the notification is one way to notify the operator.
The notification should be generated each time this threshold is exceeded and for every subsequent Initialization message which is NAK'd with an Error Notification message after this threshold is exceeded.
A value of 0 (zero) for this object indicates that the threshold is infinity, thus the SNMP notification will never be generated.
REFERENCE "RFC3036, LDP Specification, Section 2.5.3 Session Initialization."
"The LDP Entity can be configured to use either conservative or liberal label retention mode.
If the value of this object is conservative(1) then advertized label mappings are retained only if they will be used to forward packets, i.e., if label came from a valid next hop.
If the value of this object is liberal(2) then all advertized label mappings are retained whether they are from a valid next hop or not."
"If the value of this object is 0 (zero) then Loop Detection for Path Vectors is disabled.
Otherwise, if this object has a value greater than zero, then Loop Dection for Path Vectors is enabled, and the Path Vector Limit is this value.
Also, the value of the object, 'mplsLdpLsrLoopDetectionCapable', must be set to either 'pathVector(4)' or 'hopCountAndPathVector(5)', if this object has a value greater than 0 (zero), otherwise it is ignored.
REFERENCE "RFC3036, LDP Specification, Section 2.8 Loop Dection, Section 3.4.5 Path Vector TLV."
"If the value of this object is 0 (zero), then Loop Detection using Hop Counters is disabled.
If the value of this object is greater than 0 (zero)
then Loop Detection using Hop Counters is enabled, and this object specifies this Entity's maximum allowable value for the Hop Count.
Also, the value of the object mplsLdpLsrLoopDetectionCapable must be set to either 'hopCount(3)' or 'hopCountAndPathVector(5)' if this object has a value greater than 0 (zero), otherwise it is ignored.
"This specifies whether the loopback or interface address is to be used as the transport address in the transport address TLV of the hello message.
If the value is interface(1), then the IP address of the interface from which
hello messages are sent is used as the transport address in the hello message.
Otherwise, if the value is loopback(2), then the IP address of the loopback interface is used as the transport address in the hello message.
"If this LDP entity uses targeted peer then set this to true."
"The type of the internetwork layer address used for the Extended Discovery.
This object indicates how the value of mplsLdpEntityTargetPeerAddr is to be interpreted."
"The value of the internetwork layer address used for the Extended Discovery.
The value of mplsLdpEntityTargetPeerAddrType specifies how this address is to be interpreted."
"Specifies the optional parameters for the LDP Initialization Message.
If the value is generic(1) then no optional parameters will be sent in the LDP Initialization message associated with this Entity.
If the value is atmParameters(2) then a row must be created in the mplsLdpEntityAtmTable, which corresponds to this entry.
If the value is frameRelayParameters(3) then a row must be created in the mplsLdpEntityFrameRelayTable, which corresponds to this entry."
REFERENCE "RFC3036, LDP Specification, Section 3.5.3., Initialization Message."
"The value of sysUpTime on the most recent occasion at which any one or more of this entity's counters suffered a discontinuity.
The relevant counters are the specific instances associated with this entity of any Counter32 object contained in the 'mplsLdpEntityStatsTable'.
If no such discontinuities have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
{ mplsLdpEntityEntry 21 } mplsLdpEntityStorageType  OBJECT
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again: the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable, which enables a new session to be initiated."
The MPLS LDP Entity Statistics Table   mplsLdpEntityStatsTable OBJECT
"This table is a read only table which augments the mplsLdpEntityTable.
The purpose of this table is to keep statistical information about the LDP Entities on the LSR."
A row in this table contains statistical information about an LDP Entity.
Some counters contained in a row are for fatal errors received during a former LDP Session associated with this entry.
For example, an LDP PDU received on a TCP connection during an LDP Session contains a fatal error.
That error is counted here, because the session is terminated.
If the error is NOT fatal (i.e., the Session remains), then the error is counted in the mplsLdpSessionStatsEntry."
A count of the Session Initialization messages which were sent or received by this LDP Entity and were NAK'd.
In other words, this counter counts the number of session initializations that failed.
{ mplsLdpEntityStatsEntry 1 } mplsLdpEntityStatsSessionRejectedNoHelloErrors OBJECT
A count of the Session Rejected/No
Hello Error Notification Messages sent or received by this LDP Entity.
{ mplsLdpEntityStatsEntry 2 } mplsLdpEntityStatsSessionRejectedAdErrors OBJECT TYPE SYNTAX
A count of the Session Rejected/Parameters Advertisement Mode Error Notification Messages sent or received by this LDP Entity.
{ mplsLdpEntityStatsEntry 3 } mplsLdpEntityStatsSessionRejectedMaxPduErrors OBJECT TYPE SYNTAX
A count of the Session Rejected/Parameters Max Pdu Length Error Notification Messages sent or received by this LDP Entity.
A count of the Session Rejected/Parameters Label Range Notification Messages sent or received by this LDP Entity.
"This object counts the number of Bad LDP Identifier Fatal Errors detected by the session(s)
(past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Bad PDU Length Fatal Errors detected by the session(s)
(past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Bad Message Length Fatal Errors detected by the session(s)
(past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Bad TLV Length Fatal Errors detected by the session(s)
(past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Malformed TLV Value Fatal Errors detected by the session(s)
(past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Session Keep Alive Timer
Expired Errors detected by the session(s) (past and present) associated with this LDP Entity.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of mplsLdpEntityDiscontinuityTime.
"This object counts the number of Shutdown Notifications received related to session(s) (past and present) associated with this LDP Entity.
{ mplsLdpEntityStatsEntry 12 } mplsLdpEntityStatsShutdownSentNotifications OBJECT TYPE SYNTAX
"This object counts the number of Shutdown Notfications sent related to session(s) (past and present) associated with this LDP Entity.
The MPLS LDP Peer Table   mplsLdpSessionObjects
MAX ACCESS read only STATUS current DESCRIPTION
{ mplsLdpSessionObjects 1 } mplsLdpPeerTable OBJECT TYPE SYNTAX
SEQUENCE OF MplsLdpPeerEntry MAX ACCESS
current DESCRIPTION "Information about LDP peers known by Entities in the mplsLdpEntityTable.
The information in this table is based on information from the Entity Peer interaction during session initialization but is not appropriate for the mplsLdpSessionTable, because objects in this table may or may not be used in session establishment."
current DESCRIPTION "Information about a single Peer which is related to a Session.
This table is augmented by the mplsLdpSessionTable.
"The LDP identifier of this LDP Peer."
"If the value of this object is 0 (zero) then Loop Dection for Path Vectors for this Peer is disabled.
Otherwise, if this object has a value greater than zero, then Loop Dection for Path  Vectors for this Peer is enabled and the Path Vector Limit is this value."
REFERENCE "RFC3036, LDP Specification, Section 2.8 Loop Dection, Section 3.4.5 Path Vector TLV."
{ mplsLdpPeerEntry 3 } mplsLdpPeerTransportAddrType OBJECT TYPE SYNTAX
The type of the Internet address for the mplsLdpPeerTransportAddr object.
The LDP specification describes this as being either an IPv4 Transport Address or IPv6 Transport Address which is used in opening the LDP session's TCP connection, or if the optional TLV is not present, then this is the IPv4/IPv6 source address for the UPD packet carrying the Hellos.
This object specifies how the value of the mplsLdpPeerTransportAddr object should be interpreted."
REFERENCE "RFC3036, LDP Specification, Section 2.5.2 Transport Connection Establishment and Section 3.5.2.1 Hello Message Procedures."
The Internet address advertised by the peer in the Hello Message or the Hello source address.
The type of this address is specified by the value of the mplsLdpPeerTransportAddrType object.
" REFERENCE "RFC3036, LDP Specification, Section 2.5.2 Transport Connection Establishment and Section 3.5.2.1 Hello Message Procedures."
The MPLS LDP Sessions Table
A table of Sessions between the LDP Entities and LDP Peers.
This table AUGMENTS the mplsLdpPeerTable.
Each row in this table represents a single session."
An entry in this table represents information on a single session between an LDP Entity and LDP Peer.
The information contained in a row is read only.
Please note:  the Path Vector Limit for the Session is the value which is configured in the corresponding mplsLdpEntityEntry.
The Peer's Path Vector Limit is in the mplsLdpPeerPathVectorLimit object in the mplsLdpPeerTable.
Values which may differ from those configured are noted in the objects of this table, the mplsLdpAtmSessionTable and the mplsLdpFrameRelaySessionTable.
A value will differ if it was negotiated between the Entity and the Peer.
Values may or may not be negotiated.
For example, if the values are the same then no negotiation takes place.
If they are negotiated, then they may differ.
"The value of sysUpTime at the time this Session entered its current state as denoted by the mplsLdpSessionState object."
The current state of the session, all of the states 1 to 5 are based on the state machine for session negotiation behavior."
REFERENCE "RFC3036, LDP Specification, Section 2.5.4, Initialization State Machine."
During session establishment the LSR/LER takes either the active role or the passive role based on address comparisons.
This object indicates whether this LSR/LER was behaving in an active role or passive role during this session's establishment.
The value of unknown(1), indicates that the role is not able to be determined at the present time.
"The version of the LDP Protocol which this session is using.
This is the version of the LDP protocol which has been negotiated during session initialization.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3, Initialization Message."
"The keep alive hold time remaining for this session."
The negotiated KeepAlive Time which represents the amount of seconds between keep alive messages.
The mplsLdpEntityKeepAliveHoldTimer related to this Session is the value that was proposed as the KeepAlive Time for this session.
This value is negotiated during session initialization between the entity's proposed value (i.e., the value configured in mplsLdpEntityKeepAliveHoldTimer) and the peer's proposed KeepAlive Hold Timer value.
This value is the smaller of the two proposed values."
REFERENCE "RFC3036, LDP Specification, Section 3.5.3, Initialization Message."
"The value of maximum allowable length for LDP PDUs for this session.
This value may have been negotiated during the Session Initialization.
This object is related to the mplsLdpEntityMaxPduLength object.
The mplsLdpEntityMaxPduLength object specifies the requested LDP PDU length, and this object reflects the negotiated LDP PDU length between the Entity and the Peer.
" REFERENCE "RFC3036, LDP Specification, Section 3.5.3, Initialization Message."
"The value of sysUpTime on the most recent occasion at which any one or more of this session's counters suffered a discontinuity.
The relevant counters are the specific instances associated with this session of any Counter32 object contained in the mplsLdpSessionStatsTable.
The initial value of this object is the value of sysUpTime when the entry was created in this table.
Also, a command generator can distinguish when a session between a given Entity and Peer goes away and a new session is established.
This value would change and thus indicate to the command generator that this is a different session."
A table of statistics for Sessions between LDP Entities and LDP Peers.
This table AUGMENTS the mplsLdpPeerTable."
{ mplsLdpSessionObjects 4 } mplsLdpSessionStatsEntry OBJECT TYPE SYNTAX
An entry in this table represents statistical information on a single session between an LDP Entity and LDP Peer.
"This object counts the number of Unknown Message Type Errors detected by this LSR/LER during this session.
"This object counts the number of Unknown TLV Errors detected by this LSR/LER during this session.
The MPLS LDP Hello Adjacency Table   mplsLdpHelloAdjacencyObjects
{ mplsLdpSessionObjects 5 } mplsLdpHelloAdjacencyTable OBJECT
A table of Hello Adjacencies for Sessions."
"Each row represents a single LDP Hello Adjacency.
An LDP Session can have one or more Hello Adjacencies.
An identifier for this specific adjacency."
"If the value of this object is 65535, this means that the hold time is infinite (i.e., wait forever).
Otherwise, the time remaining for this Hello Adjacency to receive its next Hello Message.
This interval will change when the 'next' Hello Message which corresponds to this Hello Adjacency is received unless it is infinite."
"The Hello hold time which is negotiated between the Entity and the Peer.
The entity associated with this Hello Adjacency issues a proposed Hello Hold Time value in the mplsLdpEntityHelloHoldTimer object.
The peer also proposes a value and this object represents the negotiated value.
A value of 0 means the default, which is 15 seconds for Link Hellos and 45 seconds for Targeted Hellos.
A value of 65535 indicates an infinite hold time."
INTEGER { link(1), targeted(2) } MAX ACCESS
"This adjacency is the result of a 'link' hello if the value of this object is link(1).
Otherwise, it is a result of a 'targeted' hello, targeted(2)."
the next 2 tables map to the   MPLS LSR STD MIB's MplsInSegmentTable   and MplsOutSegmentTable.
(XC) information is not   represented here as it can be gleaned   from the MPLS LSR STD MIB.
A table of LDP LSP's which map to the mplsInSegmentTable in the MPLS LSR STD MIB module."
An entry in this table represents information on a single LDP LSP which is represented by a session's index triple (mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the index for the mplsInSegmentTable (mplsInSegmentLdpLspLabelIndex) from the MPLS LSR STD MIB.
The information contained in a row is read only.
"This contains the same value as the mplsInSegmentIndex in the MPLS LSR STD MIB's mplsInSegmentTable."
"The type of LSP connection."
SEQUENCE OF MplsOutSegmentLdpLspEntry MAX ACCESS
A table of LDP LSP's which map to the mplsOutSegmentTable in the MPLS LSR STD MIB."
An entry in this table represents information on a single LDP LSP which is represented by a session's index triple (mplsLdpEntityLdpId, mplsLdpEntityIndex, mplsLdpPeerLdpId) AND the index (mplsOutSegmentLdpLspIndex) for the mplsOutSegmentTable.
The information contained in a row is read only.
This contains the same value as the mplsOutSegmentIndex in the MPLS LSR STD MIB's mplsOutSegmentTable."
"The type of LSP connection."
{ mplsLdpSessionObjects 8 } mplsFecLastChange OBJECT TYPE SYNTAX
MAX ACCESS read only STATUS current DESCRIPTION
"The value of sysUpTime at the time of the most recent addition/deletion of an entry to/from the mplsLdpFectTable or the most recent change in values to any objects in the mplsLdpFecTable.
If no such changes have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
"This object contains an appropriate value to be used for mplsFecIndex when creating entries in the mplsFecTable.
The value 0 indicates that no unassigned entries are available."
"This table represents the FEC (Forwarding Equivalence Class)
Information associated with an LSP."
"Each row represents a single FEC Element.
The index which uniquely identifies this entry."
"The type of the FEC.
If the value of this object is 'prefix(1)' then the FEC type described by this row is an address prefix.
If the value of this object is 'hostAddress(2)' then the FEC type described by this row is a host address.
"The value of this object is the type of the Internet address.
The value of this object, decides how the value of the mplsFecAddr object is interpreted.
"The value of this object is interpreted based on the value of the 'mplsFecAddrType' object.
This address is then further interpretted as an being used with the address prefix, or as the host address.
This further interpretation is indicated by the 'mplsFecType' object.
In other words, the FEC element is populated according to the Prefix FEC Element value encoding, or the Host Address FEC Element encoding."
REFERENCE "RFC3036, Section 3.4.1 FEC TLV."
If the value of the 'mplsFecType' is 'hostAddress(2)' then this object is undefined.
If the value of 'mplsFecType' is 'prefix(1)' then the value of this object is the length in bits of the address prefix represented by 'mplsFecAddr', or zero.
If the value of this object is zero, this indicates that the prefix matches all addresses.
In this case the address prefix MUST also be zero
(i.e., 'mplsFecAddr' should have the value of zero.)
" REFERENCE "RFC3036, Section 3.4.1.
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
If the value of this object is 'active(1)', then none of the writable objects of this entry can be modified, except to set this object to 'destroy(6)'.
if this row is being referenced by any entry in the mplsLdpLspFecTable, then a request to destroy this row, will result in an inconsistentValue error."
TimeStamp MAX ACCESS read only STATUS current DESCRIPTION
"The value of sysUpTime at the time of the most recent addition/deletion of an entry to/from the mplsLdpLspFecTable or the most recent change in values to any objects in the mplsLdpLspFecTable.
If no such changes have occurred since the last re initialization of the local management subsystem, then this object contains a zero value."
SEQUENCE OF MplsLdpLspFecEntry MAX ACCESS
A table which shows the relationship between LDP LSPs and FECs.
Each row represents a single LDP LSP to FEC association."
MAX ACCESS not accessible STATUS
"An entry represents a LDP LSP to FEC association.
"If the value is inSegment(1), then this indicates that the following index, mplsLdpLspFecSegmentIndex, contains the same value as the mplsInSegmentLdpLspIndex.
Otherwise, if the value of this object is outSegment(2),  then this indicates that following index, mplsLdpLspFecSegmentIndex, contains the same value as the mplsOutSegmentLdpLspIndex."
"This index is interpretted by using the value of the mplsLdpLspFecSegment.
If the mplsLdpLspFecSegment is inSegment(1), then this index has the same value as mplsInSegmentLdpLspIndex.
If the mplsLdpLspFecSegment is outSegment(2), then this index has the same value as mplsOutSegmentLdpLspIndex."
This index identifies the FEC entry in the mplsFecTable associated with this session.
In other words, the value of this index is the same as the value of the mplsFecIndex that denotes the FEC associated with this Session."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
If the value of this object is 'active(1)', then none of the writable objects of this entry can be modified.
The Agent should delete this row when the session ceases to exist.
If an operator wants to associate the session with a different FEC, the recommended procedure is (as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object) is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
This will also cause this entry to be deleted.
Then, set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated.
Once the session is initiated, an entry may be added to this table to associate the new session with a FEC."
This information is associated with a specific Session   because Label Address Messages are sent after session   initialization has taken place.
SEQUENCE OF MplsLdpSessionPeerAddrEntry MAX ACCESS
"This table 'extends' the mplsLdpSessionTable.
This table is used to store Label Address Information from Label Address Messages received by this LSR from Peers.
This table is read only and should be updated when Label Withdraw Address Messages are received, i.e., Rows should be deleted as appropriate.
since more than one address may be contained in a Label Address Message, this table 'sparse augments', the mplsLdpSessionTable's information."
An entry in this table represents information on a session's single next hop address which was advertised in an Address Message from the LDP peer.
The information contained in a row is read only.
current DESCRIPTION "An index which uniquely identifies this entry within a given session."
"The internetwork layer address type of this Next Hop Address as specified in the Label Address Message associated with this Session.
The value of this object indicates how to interpret the value of mplsLdpSessionPeerNextHopAddr."
The type of this address is specified by the value of the mplsLdpSessionPeerNextHopAddrType.
" REFERENCE "RFC3036, Section 2.7.
"This notification is generated when the value of the 'mplsLdpEntityInitSessionThreshold' object is not zero, and the number of Session Initialization messages exceeds the value of the 'mplsLdpEntityInitSessionThreshold' object."
"This notification is sent when the 'mplsLdpEntityPathVectorLimit' does NOT match the value of the 'mplsLdpPeerPathVectorLimit' for a specific Entity.
"This notification is sent when the value of 'mplsLdpSessionState' leaves the 'operational(5)' state."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read create and read write.
In other words, both monitoring and configuration are available when using this MODULE COMPLIANCE.
This group must be supported if the LSR MIB is implemented, specifically the mplsInSegmentTable, the mplsOutSegmentTable or the mplsXCTable."
OBJECT mplsLdpEntityTargetPeerAddrType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2)
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses.
OBJECT mplsLdpEntityTargetPeerAddr SYNTAX InetAddress (SIZE(0 4 16))
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
OBJECT mplsLdpEntityRowStatus SYNTAX RowStatus { active(1) }
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required."
OBJECT mplsFecAddrType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2)
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses."
OBJECT mplsFecAddr SYNTAX InetAddress (SIZE(0 4 16)) DESCRIPTION "
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
OBJECT mplsFecRowStatus SYNTAX RowStatus { active(1) }
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required."
OBJECT mplsLdpLspFecRowStatus SYNTAX RowStatus { active(1) }
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required.
OBJECT mplsLdpSessionPeerNextHopAddrType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2)
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses."
OBJECT mplsLdpSessionPeerNextHopAddr SYNTAX InetAddress (SIZE(0 4 16)) DESCRIPTION "
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read only.
In other words, only monitoring is available by implementing this MODULE COMPLIANCE."
This group must be supported if the LSR MIB is implemented, specifically the mplsInSegmentTable, the mplsOutSegmentTable or the mplsXCTable."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
OBJECT mplsLdpEntityRowStatus SYNTAX RowStatus { active(1) } MIN ACCESS   read only DESCRIPTION "Write access is not required, and active is the only status that needs to be supported.
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required.
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses."
MIN ACCESS    read only DESCRIPTION
"Write access is not required.
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
"Write access is not required."
OBJECT mplsFecRowStatus SYNTAX RowStatus { active(1) }
MIN ACCESS   read only DESCRIPTION "Write access is not required, and active is the only status that needs to be supported.
"Write access is not required."
OBJECT mplsLdpLspFecRowStatus SYNTAX RowStatus { active(1) } MIN ACCESS   read only DESCRIPTION "Write access is not required, and active is the only status that needs to be supported."
OBJECT mplsLdpSessionPeerNextHopAddrType SYNTAX InetAddressType { unknown(0), ipv4(1), ipv6(2)
An implementation is only required to support 'unknown(0)', IPv4 and globally unique IPv6 addresses."
OBJECT mplsLdpSessionPeerNextHopAddr SYNTAX InetAddress (SIZE(0 4 16)) DESCRIPTION "
An implementation is only required to support IPv4 and globally unique IPv6 addresses."
"These objects are for LDP implementations which interface to the Label Information Base (LIB) in the MPLS LSR STD MIB.
The LIB is represented in the mplsInSegmentTable, mplsOutSegmentTable and mplsXCTable."
The notification for an MPLS LDP implementation."
The MPLS LDP ATM STD MIB Module
This MIB Module MUST be supported if LDP uses ATM as the Layer 2 medium.
There are three tables in this MIB Module.
Two tables are for configuring LDP to use ATM.
These tables are the mplsLdpEntityAtmTable and the mplsLdpEntityAtmLRTable.
The third table is the mplsLdpAtmSessionTable which is a read only table.
This MIB Module IMPORTS the AtmVpIdentifier TEXTUAL CONVENTION from [RFC2514].
The LDP Entity ATM Table
The mplsLdpEntityAtmTable provides a way to configure information which would be contained in the "Optional Parameter" portion of an LDP PDU Initialization Message.
The LDP Entity ATM Label Range Table
The mplsLdpEntityAtmLRTable provides a way to configure information which would be contained in the "ATM Label Range Components" portion of an LDP PDU Intialization Message, see  [RFC3035] and [RFC3036].
The LDP ATM Session Table
The MPLS LDP ATM Session Table is a read only table which contains session information specific to ATM.
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2
[RFC2580] RowStatus, StorageType FROM SNMPv2 TC
Multiprotocol Label Switching (mpls) Working Group" CONTACT INFO "Joan Cucchiara (jcucchiara@mindspring.com)
Inc. Hans Sjostrand (hans@ipunplugged.com) ipUnplugged James V. Luciani (james luciani@mindspring.com)
loa@pi.se MPLS Working Group, email: mpls@uu.net
The initial version of this MIB module was published in RFC 3815.
For full legal notices see the RFC itself or see: http://www.ietf.org/copyrights/ianamib.html
SEQUENCE OF MplsLdpEntityAtmEntry MAX ACCESS
"This table contains ATM specific information which could be used in the 'Optional Parameters' and other ATM specific information.
This table 'sparse augments' the mplsLdpEntityTable when ATM is the Layer 2 medium."
An entry in this table represents the ATM parameters and ATM information for this LDP entity.
"This value represents either the InterfaceIndex or 0
The value of zero means that the InterfaceIndex is not known.
However, if the InterfaceIndex is known, then it must be represented by this value.
If an InterfaceIndex becomes known, then the network management entity (e.g., SNMP agent) responsible for this object MUST change the value from 0 (zero) to the value of the InterfaceIndex.
If an ATM Label is being used in forwarding data, then the value of this object MUST be the InterfaceIndex."
This is the EXACT value for the ATM Session Parameter, field M (for ATM Merge Capabilities).
The ATM Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'M, ATM Merge Capabilities Specifies the merge capabilities of an ATM switch.
Non merge and VC merge
The interoperability of VP merge capable switches with non VP
merge capable switches is a subject for future study.
When the LSRs differ on the use of VP merge, the session is established, but VP merge is not used.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
{ mplsLdpEntityAtmEntry 2 } mplsLdpEntityAtmLRComponents OBJECT
This also represents the number of entries in the mplsLdpEntityAtmLRTable which correspond to this entry.
This is the EXACT value for the ATM Session Parameter, field N (for Number of label range components).
The ATM Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'N, Number of label range components Specifies the number of ATM Label Range Components included in the TLV.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
{ mplsLdpEntityAtmEntry 3 } mplsLdpEntityAtmVcDirectionality OBJECT
"If the value of this object is 'bidirectional(0)', a given VCI, within a given VPI, is used as a label for both directions independently.
If the value of this object is 'unidirectional(1)', a given VCI within a VPI designates one direction.
This is the EXACT value for the ATM Session Parameter, field D (for VC Directionality).
The ATM Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'D, VC Directionality A value of 0 specifies bidirectional VC capability, meaning the LSR can (within a given VPI) support the use of a given VCI as a label for both link directions independently.
A value of 1 specifies unidirectional VC capability, meaning (within a given VPI)
a given VCI may appear in a label mapping for one direction on the link only.
When either or both of the peers specifies unidirectional VC capability, both LSRs use unidirectional VC label assignment for the link as follows.
The LSRs compare their LDP Identifiers as unsigned integers.
The LSR with the larger LDP Identifier may assign only odd numbered VCIs in the VPI/VCI range as labels.
The system with the smaller LDP Identifier may assign only even numbered VCIs in the VPI/VCI range as labels.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
"The peer LSR may be connected indirectly by means of an ATM VP so that the VPI values may be different on either endpoint so the label MUST be encoded entirely within the VCI field.
"The default VPI value for the non MPLS connection.
The default value of this is 0 (zero)
but other values may be configured.
This object allows a different value to be configured.
The Default VCI value for a non MPLS connection.
The default value of this is 32 but other values may be configured.
This object allows a different value to be configured.
This non MPLS connection is used to carry unlabeled (IP) packets.
The default value is the same as the default value of the 'mplsLdpEntityAtmDefaultControlVpi', however another value may be configured.
"VCI value of the VCC supporting unlabeled traffic.
This non MPLS connection is used to carry unlabeled (IP) packets.
The default value is the same as the default value of the 'mplsLdpEntityAtmDefaultControlVci', however another value may be configured.
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again: the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated."
LDP Entity ATM Label Range Table
mplsLdpEntityAtmLRTable OBJECT TYPE SYNTAX SEQUENCE OF MplsLdpEntityAtmLREntry
MAX ACCESS not accessible STATUS current DESCRIPTION
"The MPLS LDP Entity ATM Label Range (LR) Table.
The purpose of this table is to provide a mechanism for configuring a contiguous range of vpi's with a contiguous range of vci's, or a 'label range' for LDP Entities.
LDP Entities which use ATM must have at least one entry in this table.
There must exist at least one entry in this table for every LDP Entity that has 'mplsLdpEntityOptionalParameters' object with a value of 'atmSessionParameters'."
MAX ACCESS not accessible STATUS current DESCRIPTION
"A row in the LDP Entity ATM Label Range Table.
One entry in this table contains information on a single range of labels represented by the configured Upper and Lower Bounds VPI/VCI pairs.
These are the same data used in the Initialization Message.
The ranges for a specific LDP Entity are UNIQUE and non overlapping.
For example, for a specific LDP Entity index, there could be one entry having LowerBound vpi/vci   0/32, and UpperBound vpi/vci   0/100, and a second entry for this same interface with LowerBound vpi/vci   0/101 and UpperBound vpi/vci   0/200.
However, there could not be a third entry with LowerBound vpi/vci
0/200 and UpperBound vpi/vci   0/300
because this label range overlaps with the second entry (i.e., both entries now have 0/200).
A row will not become active unless a unique and non overlapping range is specified.
At least one label range entry for a specific LDP Entity MUST include the default VPI/VCI  values denoted in the LDP Entity Table.
A request to create a row with an overlapping range should result in an inconsistentValue error.
mplsLdpEntityAtmLRRowStatus    RowStatus } mplsLdpEntityAtmLRMinVpi OBJECT
MAX ACCESS not accessible STATUS current DESCRIPTION
"The minimum VPI number configured for this range.
The value of zero is a valid value for the VPI portion of the label."
MAX ACCESS not accessible STATUS current DESCRIPTION
"The minimum VCI number configured for this range."
MAX ACCESS read create STATUS current DESCRIPTION
"The maximum VPI number configured for this range."
MAX ACCESS read create STATUS current DESCRIPTION
"The maximum VCI number configured for this range."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
} mplsLdpEntityAtmLRRowStatus OBJECT TYPE SYNTAX
RowStatus MAX ACCESS read create STATUS current DESCRIPTION
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again:  the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated."
A table which relates sessions in the 'mplsLdpSessionTable' and their label range intersections.
There could be one or more label range intersections between an LDP Entity and LDP Peer using ATM as the underlying  media.
Each row represents a single label range intersection.
This table cannot use the 'AUGMENTS' clause because there is not necessarily a one to one mapping between this table and the mplsLdpSessionTable."
An entry in this table represents information on a single label range intersection between an LDP Entity and LDP Peer.
The information contained in a row is read only.
MAX ACCESS not accessible STATUS current DESCRIPTION
"The minimum VPI number for this range."
MAX ACCESS not accessible STATUS current DESCRIPTION
"The minimum VCI number for this range."
MAX ACCESS read only STATUS current DESCRIPTION
"The maximum VPI number for this range."
MAX ACCESS read only STATUS current DESCRIPTION
"The maximum VCI number for this range."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read create and read write.
In other words, both monitoring and configuration are available when using this MODULE COMPLIANCE.
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required."
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read only.
In other words, only monitoring is available by implementing this MODULE COMPLIANCE."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
mplsLdpEntityAtmLRMaxVpi MIN ACCESS   read only DESCRIPTION
"Write access is not required."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION "Write access is not required, and active is the only status that needs to be supported."
mplsLdpAtmGroup OBJECT GROUP OBJECTS { mplsLdpEntityAtmIfIndexOrZero, mplsLdpEntityAtmMergeCap, mplsLdpEntityAtmLRComponents, mplsLdpEntityAtmVcDirectionality, mplsLdpEntityAtmLsrConnectivity, mplsLdpEntityAtmDefaultControlVpi, mplsLdpEntityAtmDefaultControlVci, mplsLdpEntityAtmUnlabTrafVpi, mplsLdpEntityAtmUnlabTrafVci, mplsLdpEntityAtmStorageType, mplsLdpEntityAtmRowStatus, mplsLdpEntityAtmLRMaxVpi, mplsLdpEntityAtmLRMaxVci, mplsLdpEntityAtmLRStorageType, mplsLdpEntityAtmLRRowStatus, mplsLdpSessionAtmLRUpperBoundVpi, mplsLdpSessionAtmLRUpperBoundVci } STATUS
current DESCRIPTION "Objects that apply to all MPLS LDP implementations using ATM as the Layer 2."
The MPLS LDP FRAME RELAY STD MIB Module
This MIB Module MUST be supported if LDP uses FRAME RELAY as the Layer 2 medium.
There are three tables in this MIB Module.
Two tables are to configure LDP for using Frame Relay.
These tables are the mplsLdpEntityFrameRelayTable and the mplsLdpEntityFrameRelayLRTable.
The third table, mplsLdpFrameRelaySessionTable, is a read only table.
This MIB Module IMPORTS the DLCI TEXTUAL CONVENTION from [RFC2115].
The LDP Entity Frame Relay Table The mplsLdpEntityFrameRelayTable provides a way to configure information which would be contained in the "Optional Parameter" portion of an LDP PDU Initialization Message.
The LDP Entity Frame Relay Label Range Table
The mplsLdpEntityFrameRelayLRTable provides a way to configure information which would be contained in the "Frame Relay Label Range Components" portion of an LDP PDU Intialization Message, see [RFC3034] and [RFC3036].
The LDP Frame Relay Session Table
The mplsLdpFrameRelaySessionTable is a table which contains session information specific to Frame Relay.
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2
[RFC2580] RowStatus, StorageType FROM SNMPv2 TC
Multiprotocol Label Switching (mpls) Working Group" CONTACT INFO "Joan Cucchiara (jcucchiara@mindspring.com)
Inc. Hans Sjostrand (hans@ipunplugged.com) ipUnplugged James V. Luciani (james luciani@mindspring.com)
loa@pi.se MPLS Working Group, email: mpls@uu.net
The initial version of this MIB module was published in RFC 3815.
For full legal notices see the RFC itself or see: http://www.ietf.org/copyrights/ianamib.html
"This table contains Frame Relay specific information which could be used in the 'Optional Parameters' and other Frame Relay specific information.
This table 'sparse augments' the mplsLdpEntityTable when Frame Relay is the Layer 2 medium."
An entry in this table represents the Frame Relay optional parameters associated with the LDP entity.
"This value represents either the InterfaceIndex of the 'ifLayer' where the Frame Relay Labels 'owned' by this entry were created, or 0 (zero).
The value of zero means that the InterfaceIndex is not known.
For example, if the InterfaceIndex is created subsequent to the Frame Relay Label's creation, then it would not be known.
However, if the InterfaceIndex is known, then it must be represented by this value.
If an InterfaceIndex becomes known, then the network management entity (e.g., SNMP agent) responsible for this object MUST change the value from 0 (zero) to the value of the InterfaceIndex.
If an Frame Relay Label is being used in forwarding data, then the value of this object MUST be the InterfaceIndex."
{ mplsLdpEntityFrameRelayEntry 1 } mplsLdpEntityFrameRelayMergeCap OBJECT
"This represents whether or not the Frame Relay merge capability is supported.
This is the EXACT value for the Frame Relay Session Parameter, field M (for Frame Relay Merge Capabilities).
The Frame Relay Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'M, Frame Relay Merge Capabilities Specifies the merge capabilities of a Frame Relay switch.
The following values are supported in this version of the specification:
Frame Relay LSRs may freely interoperate.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
This also represents the number of entries in the mplsLdpEntityFrameRelayLRTable which correspond to this entry.
This is the EXACT value for the Frame Relay Session Parameter, field N (for Number of label range components).
The Frame Relay Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'N, Number of label range components Specifies the number of Frame Relay Label Range Components included in the TLV.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
"If the value of this object is 'bidirectional(0)', then the LSR supports the use of a given DLCI as a label for both directions independently.
If the value of this object is 'unidirectional(1)', then the LSR uses the given DLCI as a label in only one direction.
This is the EXACT value for the Frame Relay Session Parameter, field D (for VC Directionality).
The Frame Relay Session Parameter is an optional parameter in the Initialization Message.
The description from rfc3036.txt is: 'D, VC Directionality A value of 0 specifies bidirectional VC capability, meaning the LSR can support the use of a given DLCI as a label for both link directions independently.
A value of 1 specifies unidirectional VC capability, meaning a given DLCI may appear in a label mapping for one direction on the link only.
When either or both of the peers specifies unidirectional VC capability, both LSRs use unidirectional VC label assignment for the link as follows.
The LSRs compare their LDP Identifiers as unsigned integers.
The LSR with the larger LDP Identifier may assign only odd numbered DLCIs in the range as labels.
The system with the smaller LDP Identifier may assign only even numbered DLCIs in the range as labels.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again: the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated."
SEQUENCE OF MplsLdpEntityFrameRelayLREntry MAX ACCESS
"This table contains information about the Optional Parameters for the Frame Relay Session in the LDP Initialization Message, specifically it contains information about the Frame Relay Label Range Components.
If the value of the object 'mplsLdpEntityOptionalParameters' contains the value of 'frameRelaySessionParameters(3)' then there must be at least one corresponding entry in this table."
An entry in this table represents the Frame Relay Label Range Component associated with the LDP entity.
"The lower bound which is supported.
This value should be the same as that in the Frame Relay Label Range Component's Minimum DLCI field.
The value of zero is valid for the minimum DLCI field of the label."
RFC3034, Use of Label Switching on Frame Relay Networks Specification."
"The upper bound which is supported.
This value should be the same as that in the Frame Relay Label Range Component's Maximum DLCI field."
"This object specifies the length of the DLCI bits.
This is the EXACT value for the Len field of the Frame Relay Label Range Component.
The description from rfc3036.txt is: '
Len This field specifies the number of bits of the DLCI.
The following values are supported:
Len values 1 and 3 are reserved.'
Please refer to the following reference for a complete description of this feature.
REFERENCE "RFC3036, LDP Specification, Section 3.5.3 Initialization Message."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again: the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated."
LDP Frame Relay Session Information
A table of Frame Relay label range intersections between the LDP Entities and LDP Peers.
Each row represents a single label range intersection.
this table cannot use the 'AUGMENTS' clause because there is not necessarily a one to one mapping between this table and the mplsLdpSessionTable."
An entry in this table represents information on a single label range intersection between an LDP Entity and LDP Peer.
The information contained in a row is read only.
"The lower bound of DLCIs which are supported.
The value of zero is a valid value for the minimum DLCI field of the label."
RFC3034, Use of Label Switching on Frame Relay Networks Specification."
{ mplsLdpFrameRelaySessionEntry 1 } mplsLdpFrameRelaySessionMaxDlci OBJECT TYPE SYNTAX
"The upper bound of DLCIs which are supported."
"This object specifies the DLCI bits."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read create and read write.
In other words, both monitoring and configuration are available when using this MODULE COMPLIANCE.
{ active(1) } WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required.
WRITE SYNTAX RowStatus { createAndGo(4), destroy(6
) } DESCRIPTION "Support for createAndWait and notInService is not required."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read only.
In other words, only monitoring is available by implementing this MODULE COMPLIANCE."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
{ active(1) } MIN ACCESS
"Write access is not required, and active is the only status that needs to be supported."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
mplsLdpEntityFrameRelayLRLen MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION "Write access is not required, and active is the only status that needs to be supported."
mplsLdpFrameRelayGroup OBJECT GROUP OBJECTS { mplsLdpEntityFrameRelayIfIndexOrZero, mplsLdpEntityFrameRelayMergeCap, mplsLdpEntityFrameRelayLRComponents, mplsLdpEntityFrameRelayVcDirectionality, mplsLdpEntityFrameRelayStorageType, mplsLdpEntityFrameRelayRowStatus, mplsLdpEntityFrameRelayLRMaxDlci, mplsLdpEntityFrameRelayLRLen, mplsLdpEntityFrameRelayLRStorageType, mplsLdpEntityFrameRelayLRRowStatus, mplsLdpFrameRelaySessionMaxDlci,
mplsLdpFrameRelaySessionLen } STATUS    current DESCRIPTION "Objects that apply to all MPLS LDP implementations using Frame Relay as the Layer 2.
The MPLS LDP GENERIC STD MIB Module
This MIB Module MUST be supported if LDP uses a Per Platform Label Space.
This MIB Module contains a Label Range (LR) table for configuring MPLS Generic Label Ranges.
Although the LDP Specification does not provide a way for configuring Label Ranges for Generic Labels, the MIB does provide a way to reserve a range of generic labels because this was thought to be useful by the working group.
MODULE COMPLIANCE, OBJECT GROUP FROM SNMPv2
[RFC2580] RowStatus, StorageType FROM SNMPv2 TC
Multiprotocol Label Switching (mpls) Working Group" CONTACT INFO "Joan Cucchiara (jcucchiara@mindspring.com)
Inc. Hans Sjostrand (hans@ipunplugged.com) ipUnplugged James V. Luciani (james luciani@mindspring.com)
loa@pi.se MPLS Working Group, email: mpls@uu.net
The initial version of this MIB module was published in RFC 3815.
For full legal notices see the RFC itself or see: http://www.ietf.org/copyrights/ianamib.html
The MPLS LDP Entity Generic Label Range Table   mplsLdpEntityGenericLRTable
OBJECT TYPE SYNTAX SEQUENCE OF MplsLdpEntityGenericLREntry MAX ACCESS
not accessible STATUS current DESCRIPTION
"The MPLS LDP Entity Generic Label Range (LR) Table.
The purpose of this table is to provide a mechanism for configurating a contiguous range of generic labels, or a 'label range' for LDP Entities.
LDP Entities which use Generic Labels must have at least one entry in this table.
In other words, this table 'extends' the mpldLdpEntityTable for Generic Labels."
"A row in the LDP Entity Generic Label Range (LR) Table.
One entry in this table contains information on a single range of labels represented by the configured Upper and Lower Bounds pairs.
NOTE: there is NO corresponding LDP message which relates to the information in this table, however, this table does provide a way for a user to 'reserve' a generic label range.
The ranges for a specific LDP Entity are UNIQUE and non overlapping.
A row will not be created unless a unique and non overlapping range is specified.
MAX ACCESS not accessible STATUS
The minimum label configured for this range."
MAX ACCESS not accessible STATUS
"The maximum label configured for this range."
"This value of this object is perPlatform(1), then this means that the label space type is per platform.
If this object is perInterface(2), then this means that the label space type is per Interface."
REFERENCE "RFC3036, LDP Specification, Section 2.2.1, Label Spaces."
"This value represents either the InterfaceIndex of the 'ifLayer' where these Generic Label would be created, or 0
The value of zero means that the InterfaceIndex is not known.
However, if the InterfaceIndex is known, then it must be represented by this value.
If an InterfaceIndex becomes known, then the network management entity (e.g., SNMP agent) responsible for this object MUST change the value from 0 (zero) to the value of the InterfaceIndex."
"The storage type for this conceptual row.
Conceptual rows having the value 'permanent(4)' need not allow write access to any columnar objects in the row."
RowStatus MAX ACCESS read create STATUS current DESCRIPTION
"The status of this conceptual row.
All writable objects in this row may be modified at any time, however, as described in  detail in the section entitled, 'Changing Values After Session Establishment', and again described in the DESCRIPTION clause of the mplsLdpEntityAdminStatus object, if a session has been initiated with a Peer, changing objects in this table will wreak havoc with the session and interrupt traffic.
To repeat again:  the recommended procedure is to set the mplsLdpEntityAdminStatus to down, thereby explicitly causing a session to be torn down.
Then, change objects in this entry, then set the mplsLdpEntityAdminStatus to enable which enables a new session to be initiated.
There must exist at least one entry in this table for every LDP Entity that has a generic label configured."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read create and read write.
In other words, both monitoring and configuration are available when using this MODULE COMPLIANCE.
) } DESCRIPTION "Support for createAndWait and notInService is not required."
MODULE COMPLIANCE STATUS current DESCRIPTION
"The Module is implemented with support for read only.
In other words, only monitoring is available by implementing this MODULE COMPLIANCE."
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
MIN ACCESS   read only DESCRIPTION
"Write access is not required."
OBJECT GROUP OBJECTS { mplsLdpEntityGenericLabelSpace, mplsLdpEntityGenericIfIndexOrZero, mplsLdpEntityGenericLRStorageType
, mplsLdpEntityGenericLRRowStatus } STATUS    current DESCRIPTION "Objects that apply to all MPLS LDP implementations using Generic Labels as the Layer 2."
This Security Considerations section consists of 4 subsections, one for each of the MIB Modules in this document.
Security Considerations for MPLS LDP STD MIB
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
the mplsLdpEntityTable contains objects to provision potential LDP sessions on the Label Switching Router (LSR) or Label Edge Router (LER).
The mplsLdpLspFecTable contains objects which associate an LSP with a FEC.
Unauthorized access to objects in these tables, could result in disruption of traffic on the network.
This is especially true if an LDP session has been established.
The use of stronger mechanisms such as SNMPv3 security should be considered where possible.
Specifically, SNMPv3 VACM and USM MUST be used with any v3 agent which implements this MIB.
Administrators should consider whether read access to these objects should be allowed, since read access may be undesirable under certain circumstances.
Some of the readable objects in this MIB module i.e., (objects with a MAX ACCESS other than not accessible), may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
If an Administrator does not want to reveal the LDP LSP topology of the network, then these tables should be considered sensitive/vulnerable.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These tables extend the mplsLdpEntityTable in the MPLS  LDP MIB.
Unauthorized access to objects in these tables, could result in disruption of traffic on the network.
This is especially true if an LDP session has been established.
The use of stronger mechanisms such as SNMPv3 security should be considered where possible.
Specifically, SNMPv3 VACM and USM MUST be used with any v3 agent which implements this MIB.
Administrators should consider whether read access to these objects should be allowed, since read access may be undesirable under certain circumstances.
Some of the readable objects in this MIB module i.e., (objects with a MAX ACCESS other than not accessible), may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
the mplsLdpEntityAtmTable and mplsLdpEntityAtmLRTable show the Label Ranges for ATM.
If an Administrator does not want to reveal this information then these tables should be considered sensitive/vulnerable and treated accordingly.
LDP FRAME RELAY STD MIB
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
and mplsLdpEntityFrameRelayLRTable contain objects to provision potential LDP sessions on the Label Switching Router (LSR) or Label Edge Router (LER) over Layer 2 of Frame Relay.
These tables extend the mplsLdpEntityTable in the MPLS LDP MIB.
Unauthorized access to objects in these tables, could result in disruption of traffic on the network.
This is especially true if an LDP session has been established.
The use of stronger mechanisms such as SNMPv3 security should be considered where possible.
Specifically, SNMPv3 VACM and USM MUST be used with any v3 agent which implements this MIB.
Administrators should consider whether read access to these objects should be allowed, since read access may be undesirable under certain circumstances.
Some of the readable objects in this MIB module i.e., (objects with a MAX ACCESS other than not accessible), may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
and mplsLdpEntityFrameRelayLRTable show the Label Ranges for Frame Relay.
If an Administrator does not want to reveal this information then these tables should be considered sensitive/vulnerable and treated accordingly.
There are a number of management objects defined in this MIB module with a MAX ACCESS clause of read write and/or read create.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
These are the tables and objects and their sensitivity/vulnerability:
the mplsLdpEntityGenericLRTable contains objects to provision potential LDP sessions on the Label Switching Router (LSR) or Label Edge Router (LER) over Layer 2 of Ethernet.
This table extends the mplsLdpEntityTable in the MPLS LDP MIB.
Unauthorized access to objects in these tables, could result in disruption of traffic on the network.
This is especially true if an LDP session has been established.
The use of stronger mechanisms such as SNMPv3 security should be considered where possible.
Specifically, SNMPv3 VACM and USM MUST be used with any v3 agent which implements this MIB.
Administrators should consider whether read access to these objects should be allowed, since read access may be undesirable under certain circumstances.
Some of the readable objects in this MIB module i.e., (objects with a MAX ACCESS other than not accessible), may be considered sensitive or vulnerable in some network environments.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
These are the tables and objects and their sensitivity/vulnerability:
the mplsLdpEntityGenericLRTable shows the Label Ranges for ethernet.
If an Administrator does not want to reveal this information then these tables should be considered sensitive/vulnerable and treated accordingly.
Additional Security Considerations The following paragraphs describe additional security considerations which are applicable to all 4 of the MIB Modules in this document.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is RECOMMENDED that implementers consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Further, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module, is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
As described in [MPLSMGMT] and as requested in the MPLS TC STD MIB [MPLSTCMIB], MPLS related standards track MIB modules should be rooted under the mplsStdMIB subtree.
MIB Modules contained in this document, each of the following "IANA Considerations" subsections lists new IANA assignments under the mplsStdMIB subtree.
New assignments can only be made via a Standards Action as specified in [RFC2434].
IANA Considerations for MPLS LDP STD MIB
The IANA has assigned { mplsStdMIB 4 } to the MPLS LDP STD MIB module specified in this document.
The IANA has assigned { mplsStdMIB 5 } to the MPLS LDP ATM STD MIB module specified in this document.
IANA Considerations for MPLS LDP FRAME RELAY STD MIB
The IANA has assigned { mplsStdMIB 6 } to the MPLS LDP FRAME RELAY
STD MIB module specified in this document.
The IANA has assigned { mplsStdMIB 7 } to the MPLS LDP GENERIC STD  MIB module specified in this document.
