- title: __initial_text__
  contents:
  - "                 Comments on Byte Size for Connections\n     There are at least\
    \ the following three views on the use of\nbyte size for network connections*:\n\
    \     1)   Byte size should not be used at all.\n     2)   Byte size is solely\
    \ for the convenience of NCP's.\n     3)   Byte size choice is a user-level prerogative.\n\
    \     According to the first view, network connections are bit\nstreams, and messages\
    \ should contain bit counts (i.e., a\nbyte size of 1).  This view existed before\
    \ the \"Glitch Cleaning\"\nof RFC 107, and was discarded in favour of byte stream\
    \ because\nof stated reasons of efficiency in storage management and\nmessage\
    \ concatenation.\n     The second view represents a special interpretation of\n\
    entirely a 2nd level (i.e., NCP) issue.  There is no require-\nment that 3rd level\
    \ user processes be able to specify byte size.\nThis view is indicated in RFC\
    \ 151 by Shoshani.\n----------------------\n* Byte size for connection is the\
    \ byte size selected by\nsending NCP, as explained in RFC 107 (Output of Host-Host\n\
    Protocol Glitch Cleaning Committee).\n     According to the third view user processes\
    \ are always\nallowed to choose byte size for connection, either explicitly\n\
    (specify a specific byte size parameter) or implicitly (byte\nsize depends on\
    \ I/O mode).  An NCP is allowed to use a default\nbyte size, if the user does\
    \ not specify it.\n                            The Correct View\n            \
    \                ________________\n     The third view should be considered the\
    \ correct interpre-\ntation of RFC 107.  In fact, RFC 107 states on page 2, \"\
    the\nchoice of the byte size for a connection is a 3rd level protocol\nissue.\"\
    \   To be consistent with TELNET, ICP, and other 3rd\nlevel protocols which require\
    \ that a specific byte size be\nused for connection, it is imperative that corresponding\
    \ 3rd\nlevel processes be able to specify (and_impose) a particular\nbyte size\
    \ to the NCP.  NCP implementors should take note of it.\n         On Specifying\
    \ Fixed Byte Sizes in 3rd Level Protocols\n         -----------------------------------------------------\n\
    \     Holding the view that byte size choice is a 3rd level\nissue, we are still\
    \ faced with the following two questions.\nFirst, is it appropriate for 3rd level\
    \ protocols to legislate\na specific byte size for all connections using that\
    \ protocol?\nSecond, if it is appropriate to specify byte size, then what\nshould\
    \ this choice be?\n     There are two arguments in favour of using specific\n\
    byte size in 3rd level protocols.  First is that a potential\nmismatch problem\
    \ exists because RFC 107 does not require\nthat NCPs be capable of handling all\
    \ byte sizes 1 through 255.\nUsing a fixed byte size of 8-bits or 8-bit multiples\
    \ resolves\nthe problem as this is acceptable to all hosts (including\nterminal\
    \ IMPs).\n     The second argument is one of efficiency.  If it is agreed\nbefore\
    \ hand that only a specific byte size would be used,\nit is possible to make programs\
    \ more efficient (i.e., reduce\nprogram space, and possibly run time).  The efficiency\
    \ argument\nassumes that the byte size for connection represents the natural\n\
    byte structure of data being transferred over the connection.\n     For TELNET\
    \ and ICP, the byte size choice is straight\nforward as data is naturally in 8-bit\
    \ multiples (8-bit ASCII\ncharacters in TELNET, and 32-bit socket numbers in ICP).\
    \  But\nfor data transfer protocols, the byte size choice is more complex,\nas\
    \ data may be structured in a variety of byte sizes.  Specifying\na byte size\
    \ for a data transfer connection reduces efficiency\nin instances where connection\
    \ byte size does not correspond\nto data byte size.  Further, filler fields will\
    \ be required\nfor data blocks which are not a multiple of the fixed byte\nsize.\
    \  This imposes an additional overhead.\n     Even if all hosts were to accept\
    \ arbitrary byte sizes,\nand the 3rd level protocol does not legislate a specific\
    \ byte\nsize, the inefficiency problem will not be solved entirely.\nUnder current\
    \ specifications \"the byte size is fixed for the\nlife of a connection\".*  This\
    \ means that byte size cannot be\nvaried during the life of a connection even\
    \ if structure of\ndata varies.  The problem of inefficiency is solved only for\n\
    instances in which data has a constant byte structure.\n     Given the current\
    \ state of the network, it appears that\nspecifying fixed byte size in 3rd level\
    \ protocols is a good\nidea.  This eliminates the potential byte size mismatch\
    \ problem,\nand improves efficiency at least for TELNET and ICP.  In data\ntransfer,\
    \ the efficiency issue is more complex, as discussed\nearlier.  It is not clear\
    \ that overall efficiency would be\ndegraded if a fixed byte size was required.\n\
    \                    On Reopening the Byte Size Issue\n                    --------------------------------\n\
    \     The above discussion exposes certain weaknesses in the\nefficiency arguments\
    \ for having byte streams on network connec-\ntions.  In moving from bit stream\
    \ to byte stream, we may have\nlost generality, and it is not clear how much overall\
    \ efficiency\nis gained.  Sometimes, the gain in NCP efficiency may be at the\n\
    expense of user process efficiencies.\n--------------------\n*    RFC 107, page\
    \ 2\n     It is also clear that for efficiency arguments to hold,\nthe byte size\
    \ choice should not be an NCP prerogative.  It\nis the combined efficiency, rather\
    \ than NCP efficiency which\nshould be our primary concern.  Restricting byte\
    \ size choice\nto NCPs has the further disadvantage of potential byte size\nmismatch\
    \ not only between communicating NPCs but also at the\nuser-NCP interface.  Therefore,\
    \ allowing a user process to\nspecify byte size is a step in the right direction,\
    \ given\nthat we have adopted byte streams.\n     It is our opinion that the issue\
    \ of bit stream and byte\nstream be set aside until serious consideration can\
    \ be given\nto a major Host-Host Protocol overhaul.  At a later stage\nwe will\
    \ have a better idea of the relative efficiency merits.\n       [ This RFC was\
    \ put into machine readable form for entry ]\n       [ into the online RFC archives\
    \ by BBN Corp. under the   ]\n       [ direction of Alex McKenzie.           \
    \        12/96   ]\n"
