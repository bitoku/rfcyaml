- title: __initial_text__
  contents:
  - "                        URI Resolution Services\n                      Necessary\
    \ for URN Resolution\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   Retrieving the resource identified by a Uniform Resource Identifier\n\
    \   (URI) [1] is only one of the operations that can be performed on a\n   URI.\
    \  One might also ask for and get a list of other identifiers that\n   are aliases\
    \ for the original URI or a bibliographic description of\n   the resource the\
    \ URI denotes, for example. This applies to both\n   Uniform Resource Names (URNs)\
    \ and Uniform Resource Locators (URLs).\n   Uniform Resource Characteristics (URCs)\
    \ are discussed in this\n   document but only as descriptions of resources rather\
    \ than\n   identifiers.\n   A service in the network providing access to a resource\
    \ may provide\n   one or some of these options, but it need not provide all of\
    \ them.\n   This memo specifies an initial set of these operations that can be\n\
    \   used to describe the interactions provided by a given access service.\n  \
    \ It also suggests guidelines that should be adhered to when those\n   operations\
    \ are encoded in a protocol.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   In the course of formulating current proposals [2] regarding\
    \ URNs\n   [3], it became apparent that requiring servers to manage all of the\n\
    \   desired functions or requiring clients to process varied information\n   returned\
    \ by a server was unrealistic and a barrier to adoption. There\n   needed to be\
    \ some way for a client to be able to identify a server\n   that specialized in\
    \ the complex and another that specialized in the\n   simple (but fast). Also,\
    \ in subsequent conversations it became\n   obvious that, in most cases, some\
    \ of the operations were\n   inappropriate or difficult for certain identifiers.\n\
    \   The Problem\n   In the process of learning about a resource in the Internet,\
    \ there\n   are a variety of possible functions that may be important and/or\n\
    \   useful, such as discovery of locators, names, descriptions, and\n   accessing\
    \ the resource itself. A given service may support only a\n   subset of these;\
    \ hence, it is important to describe such an access\n   service by the types of\
    \ functions supported and the resources of\n   which it has some knowledge. For\
    \ example, in the framework for an RDS\n   described in [5] the RDS itself may\
    \ provide URLs [6][7], while the\n   resolvers may provide descriptions, URLs,\
    \ or even the resources\n   themselves. The design of an RDS, as proposed in RFC\
    \ 2168 [2], may be\n   more generous and provide all of the above.\n   This problem\
    \ requires some well understood set of identifiers that\n   specify those operations.\
    \ But an exhaustive set would both be\n   impossible and not very necessary. Thus,\
    \ this document will list\n   several operations, as well as, lay out requirements\
    \ for specifying\n   new operations.\n   The purpose of this document is to define\
    \ a list of such functions\n   and short names for them and then use them in defining\
    \ the interface\n   to an access service. Previous versions of this document referred\
    \ to\n   services where the arguments were specific types of URIs such as URNs\n\
    \   or URLs.  These services were called \"N2L\" and \"L2L\",for example.\n  \
    \ Their use has been changed in favor of the more general URI form.\n   Design\
    \ Criteria\n   To meet these requirements a fairly simple design criteria was\
    \ used.\n   The need to identify the operation with some token such that its\n\
    \   operands, algorithm, and errors were known proved sufficient to meet\n   these\
    \ requirements.\n"
- title: 2. General Specification
  contents:
  - "2. General Specification\n   To provide a framework both for the specifications\
    \ in this document\n   and for future work to be written by others, the guidelines\
    \ below are\n   suggested for documents that seek to specify new operations. Any\n\
    \   specification of a member of this set of operations should address\n   these\
    \ issues with respect to its operands, algorithm, output, and\n   errors.\n  \
    \ Due to the small number of listed functions, a registration mechanism\n   was\
    \ dismissed as premature. If this list grows, a registration\n   mechanism will\
    \ probably be needed.\n   Also, due to the experimental nature of this document\
    \ and the systems\n   that use its specifications, the use of words like MUST\
    \ and SHALL are\n   limited. Where used they reflect a case where this specification\n\
    \   could cause harm to existing, non-experimental systems such as HTTP\n   and\
    \ URNs.  Thus, the key words \"MUST\", \"MUST NOT\", \"REQUIRED\",\n   \"SHALL\"\
    , \"SHALL NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",\n   and\
    \ \"OPTIONAL\" in this document are to be interpreted as described in\n   RFC\
    \ 2119.\n"
- title: 2.1 Operands
  contents:
  - "2.1 Operands\n   Operands must contain the following pieces of information:\n\
    \      * name of the operation\n      * case insensitive mnemonic for the operation\n\
    \      * number of operands\n      * type of each operand\n      * format of each\
    \ operand\n"
- title: 2.2 Algorithm
  contents:
  - "2.2 Algorithm\n   The exact algorithm for the operation must either be specified\n\
    \   completely or it must be considered opaque and defined by the server\n   or\
    \ application.\n"
- title: 2.3 Output
  contents:
  - "2.3 Output\n   Output must specify one of the following:\n      * there is no\
    \ output\n      * the output is undefined\n      * the output itself and its content\n\
    \      * the fact that the output is an object and the object's\n        type\
    \ and format\n      * any non-protocol specific errors\n"
- title: 2.4 Error Conditions
  contents:
  - "2.4 Error Conditions\n   All errors that are considered applicable across all\
    \ implementations\n   and application environments must be included. Errors that\
    \ depend on\n   the system conveying the service are not included. Thus, many\
    \ of the\n   expected errors such as service availability or operation syntax\
    \ are\n   not included in this document since they are implementation\n   dependent.\n"
- title: 2.5 Security Considerations
  contents:
  - "2.5 Security Considerations\n   Any security considerations relating to the service\
    \ provided must be\n   specified. This does NOT include considerations dealing\
    \ with the\n   protocol used to convey the service or to those that normally\n\
    \   accompany the results of the service. For example, a service that\n   returned\
    \ a single URL would need to discuss the situation where\n   someone maliciously\
    \ inserts an incorrect URL into the resolver but\n   NOT the case where someone\
    \ sends personal information across the\n   Internet to the resource identified\
    \ by the correct URL.\n"
- title: 3. Encoding The Operations
  contents:
  - "3. Encoding The Operations\n   To be useful, these operations have to be used\
    \ within some system or\n   protocol. In many cases, these systems and protocols\
    \ will place\n   restrictions on which operations make sense and how those that\
    \ do are\n   syntactically represented. It is sufficient for those protocols to\n\
    \   define new operations within their own protocol specification\n   documents\
    \ but care should be taken to make this fact well known.\n   Also, a given system\
    \ or protocol will have its own output\n   specifications that may restrict the\
    \ output formats of a given\n   operation.  Additionally, a given protocol may\
    \ have better solution\n   for output than the ones given here. For example, the\
    \ result of an\n   operation that converts a URI to more than one URL may be encoded\
    \ in\n   a protocol-specific manner that conveys information about the\n   closeness\
    \ of each resource on the network.\n   Thus, the requirements on encoding these\
    \ operations within a given\n   system are as follows:\n      * which subset of\
    \ the operations are allowed\n      * how the operator is encoded\n      * how\
    \ the operands are encoded\n      * how the error codes are returned\n   The text/uri-list\
    \ MIME Media Type is specified in Section 5. This\n   Media Type is merely a suggestion\
    \ for experimental systems that need\n   a simple implementation. It is included\
    \ here merely as an example to\n   show completeness (however simple it may be).\n"
- title: 4. The Incomplete Set
  contents:
  - '4. The Incomplete Set

    '
- title: 4.1 I2L (URI to URL)
  contents:
  - "4.1 I2L (URI to URL)\n      * Name: URI to URL\n      * Mnemonic: I2L\n     \
    \ * Number of Operands: 1\n      * Type of Each Operand: First operand is a URI.\n\
    \      * Format of Each Operand: First operand is encoded as a URI.\n      * Algorithm:\
    \ Opaque\n      * Output: One and only one URL\n      * Errors Conditions:\n \
    \          o Malformed URI\n           o URI is syntactically valid but does not\
    \ exist in any form.\n           o URI exists but there is no available output\
    \ from this\n             operation.\n           o URI existed in the past but\
    \ nothing is currently known\n             about it.\n           o Access denied\n\
    \      * Security Considerations:\n           o Malicious Redirection\n      \
    \       One of the fundamental dangers related to any service such\n         \
    \    as this is that a malicious entry in a resolver's database\n            \
    \ will cause clients to resolve the URI into the wrong URL.\n             The\
    \ possible intent may be to cause the client to retrieve\n             a resource\
    \ containing fraudulent or damaging material.\n           o Denial of Service\n\
    \             By removing the URL to which the URI maps, a malicious\n       \
    \      intruder may remove the client's ability to retrieve the\n            \
    \ resource.\n   This operation is used to map a single URI to a single URL. It\
    \ is\n   used by lightweight clients that do not have the ability to select\n\
    \   from a list of URLs or understand a URC. The algorithm for this\n   mapping\
    \ is dependent on the URI scheme.\n"
- title: 4.2 I2Ls (URI to URLs)
  contents:
  - "4.2 I2Ls (URI to URLs)\n      * Name: URI to URLs\n      * Mnemonic: I2LS\n \
    \     * Number of Operands: 1\n      * Type of Each Operand: First operand is\
    \ a URI.\n      * Format of Each Operand: First operand is encoded as a URI.\n\
    \      * Algorithm: Opaque\n      * Output: A list of zero or more URLs\n    \
    \  * Errors:\n           o Malformed URI\n           o URI is syntactically valid\
    \ but does not exist in any form.\n           o URI exists but there is no available\
    \ output from this\n             operation.\n           o URI existed in the past\
    \ but nothing is currently known\n             about it.\n           o Access\
    \ denied\n      * Security Considerations:\n           o Malicious Redirection\
    \ (see I2L)\n           o Denial of Service (see I2L)\n   This operation is used\
    \ to map a single URI to 0 or more URLs. It is\n   used by a client that can pick\
    \ from a list of URLs based on some\n   criteria that are important to the client.\
    \ The client should not make\n   any assumptions about the order of the URLs returned.\
    \ No matter what\n   the particular media type, the result should be a list of\
    \ the URLs\n   that may be used to obtain an instance of the resource identified\
    \ by\n   the URI. All URIs shall be encoded according to the URL [7] and URN\n\
    \   [3] specifications.\n"
- title: 4.3 I2R (URI to Resource)
  contents:
  - "4.3 I2R (URI to Resource)\n      * Name: URI to Resource\n      * Mnemonic: I2R\n\
    \      * Number of Operands: 1\n      * Type of Each Operand: First operand is\
    \ a URI.\n      * Format of Each Operand: First operand is encoded as a URI.\n\
    \      * Algorithm: Opaque\n      * Output: An instance of the resource named\
    \ by the URI.\n      * Errors:\n           o Malformed URI\n           o URI is\
    \ syntactically valid but does not exist in any form.\n           o URI exists\
    \ but there is no available output from this\n             operation.\n      \
    \     o URI existed in the past but nothing is currently known\n             about\
    \ it.\n           o Access denied\n      * Security Considerations:\n        \
    \   o Malicious Redirection (see I2L)\n           o Denial of Service (see I2L)\n\
    \   This operation is used to return a single instance of the resource\n   that\
    \ is named by the URI. The format of the output is dependent on\n   the resource\
    \ itself.\n"
- title: 4.4 I2Rs (URI to Resources)
  contents:
  - "4.4 I2Rs (URI to Resources)\n      * Name: URI to Resources\n      * Mnemonic:\
    \ I2Rs\n      * Number of Operands: 1\n      * Type of Each Operand: First operand\
    \ is a URI.\n      * Format of Each Operand: First operand is encoded as a URI.\n\
    \      * Algorithm: Opaque\n      * Output: Zero or more instances of the resource\
    \ named by the URI.\n      * Errors:\n           o Malformed URI\n           o\
    \ URI is syntactically valid but does not exist in any form.\n           o URI\
    \ exists but there is no available output from this\n             operation.\n\
    \           o URI existed in the past but nothing is currently known\n       \
    \      about it.\n           o Access denied\n      * Security Considerations:\n\
    \           o Malicious Redirection (see I2L)\n           o Denial of Service\
    \ (see I2L)\n   This operation is used to return multiple instances of a resource,\n\
    \   for example, GIF and JPEG versions of an image. The judgment about\n   the\
    \ resources being \"the same\" resides with the naming authority that\n   issued\
    \ the URI.\n   The output shall be a MIME multipart/alternative [4] message with\
    \ the\n   alternative versions of the resource in separate body parts. If there\n\
    \   is only one version of the resource identified by the URN, it MAY be\n   returned\
    \ without the multipart/alternative wrapper.\n"
- title: 4.5 I2C (URI to URC)
  contents:
  - "4.5 I2C (URI to URC)\n      * Name: URI to URC * Mnemonic: I2C * Number of Operands:\
    \ 1 * Type\n      of Each Operand: First operand is a URI.  * Format of Each\n\
    \      Operand: First operand is encoded as a URI.  * Algorithm: Opaque *\n  \
    \    Output: A URC * Errors:\n           o Malformed URI\n           o URI is\
    \ syntactically valid but does not exist in any form.\n           o URI exists\
    \ but there is no available output from this\n             operation.\n      \
    \     o URI existed in the past but nothing is currently known\n             about\
    \ it.\n           o Access denied * Security Considerations:\n           o Malicious\
    \ Redirection (see I2L)\n           o Denial of Service (see I2L)\n   Uniform\
    \ Resource Characteristics are descriptions of resources. This\n   request allows\
    \ the client to obtain a description of the resource\n   identified by a URI,\
    \ as opposed to the resource itself or simply the\n   resource's URLs. The description\
    \ might be a bibliographic citation, a\n   digital signature, or a revision history.\
    \ This memo does not specify\n   the content of any response to a URC request.\
    \ That content is\n   expected to vary from one server to another.\n"
- title: 4.6 I2CS (URI to URCs)
  contents:
  - "4.6 I2CS (URI to URCs)\n      * Name: URI to URCs\n      * Mnemonic: I2CS\n \
    \     * Number of Operands: 1\n      * Type of Each Operand: First operand is\
    \ a URI.\n      * Format of Each Operand: First operand is encoded as a URI.\n\
    \      * Algorithm: Opaque\n      * Output: Zero or more URCs\n      * Errors:\n\
    \           o Malformed URI\n           o URI is syntactically valid but does\
    \ not exist in any form.\n           o URI exists but there is no available output\
    \ from this\n             operation.\n           o URI existed in the past but\
    \ nothing is currently known\n             about it.\n           o Access denied\n\
    \      * Security Considerations:\n           o Malicious Redirection (see I2L)\n\
    \           o Denial of Service (see I2L)\n   URCs can come in different formats\
    \ and types. This operation returns\n   zero or more URCs that are appropriate\
    \ for the given URI.\n"
- title: 4.7 I2N (URI to URN)
  contents:
  - "4.7 I2N (URI to URN)\n      * Name: URI to URN\n      * Mnemonic: I2N\n     \
    \ * Number of Operands: 1\n      * Type of Each Operand: First operand is a URN.\n\
    \      * Format of Each Operand: First operand is encoded as a URI.\n      * Algorithm:\
    \ Opaque\n      * Output: One and only one URN\n      * Errors:\n           o\
    \ Malformed URI\n           o URI is syntactically valid but does not exist in\
    \ any form.\n           o URI exists but there is no available output from this\n\
    \             operation.\n           o URI existed in the past but nothing is\
    \ currently known\n             about it.\n           o Access denied\n      *\
    \ Security Considerations:\n           o Malicious Redirection (see I2L)\n   \
    \        o Denial of Service (see I2L)\n   While URNs are supposed to identify\
    \ one and only one resource, that\n   does not mean that a resource may have one\
    \ and only one URN. For\n   example, consider a resource that one organization\
    \ wishes to name\n   'foo'; another organization, in agreement with the first,\
    \ wants to\n   call the resource 'bar'. Both organizations can agree that both\
    \ names\n   'name' the same resource and that the URNs 'foo' and 'bar' are\n \
    \  equivalent.\n   The result is a URN, known to the server, that identifies the\
    \ same\n   resource as the input URN.\n   Extreme care should be taken with this\
    \ service as it toys with the\n   idea of equality with respect to URNs. As mentioned\
    \ in several URN\n   documents, the idea of equality is very domain specific.\
    \ For example,\n   a URN pointing to a weather map for a particular day and a\
    \ URN\n   pointing to the map as it changes from day to day would NOT be\n   returned\
    \ in this example because they point to do different\n   resources. Some other\
    \ concept of temporary equivalence is at work.\n   This service instead deals\
    \ with resources that have two different\n   names where there is a binding between\
    \ the names that is agreed by\n   both name assigners. I.e., both namespaces MUST\
    \ have agreed that the\n   each name can be used in place of the other and the\
    \ meaning does not\n   change.\n"
- title: 4.8 I2Ns (URI to URNs)
  contents:
  - "4.8 I2Ns (URI to URNs)\n      * Name: URI to URNs\n      * Mnemonic: I2NS\n \
    \     * Number of Operands: 1\n      * Type of Each Operand: First operand is\
    \ a URI.\n      * Format of Each Operand: First operand is encoded as a URI.\n\
    \      * Algorithm: Opaque\n      * Output: A list of URNs\n      * Errors:\n\
    \           o Malformed URI\n           o URI is syntactically valid but does\
    \ not exist in any form.\n           o URI exists but there is no available output\
    \ from this\n             operation.\n           o URI existed in the past but\
    \ nothing is currently known\n             about it.\n           o Access denied\n\
    \      * Security Considerations:\n           o Malicious Redirection (see I2L)\n\
    \           o Denial of Service (see I2L)\n   This operation simply returns zero\
    \ or more URNs following the same\n   criteria and cautions as the I2N operation.\n"
- title: '4.9 I=I (Is URI equal to URI):'
  contents:
  - "4.9 I=I (Is URI equal to URI):\n      * Name: URI = URI\n      * Mnemonic: I=I\n\
    \      * Number of Operands: 2\n      * Type of Each Operand: Both operands are\
    \ URIs.\n      * Format of Each Operand: Both operands are encoded as a URIs.\n\
    \      * Algorithm: Opaque\n      * Output: TRUE or FALSE\n      * Errors:\n \
    \          o Malformed URIs\n           o URIs are syntactically valid but do\
    \ not exist in any form.\n           o URIs exist but there is no available output\
    \ from this\n             operation.\n           o URIs existed in the past but\
    \ nothing is currently known\n             about them.\n           o Access denied\n\
    \      * Security Considerations:\n           o Malicious Redirection (see I2L)\n\
    \           o Denial of Service (see I2L)\n   This operation is used to determine\
    \ whether two given URIs are\n   considered to be equal by the server being asked\
    \ the question. The\n   algorithm used to determine equality is opaque. No assertions\
    \ are\n   made about whether or not the URIs exhibits characteristics of URNs\n\
    \   or URLs.\n"
- title: 5. The text/uri-list Internet Media Type
  contents:
  - "5. The text/uri-list Internet Media Type\n   Several of the resolution service\
    \ requests, such as I2Ls, I2Ns,\n   result in a list of URIs being returned to\
    \ the client. The text/uri-\n   list Internet Media Type is defined to provide\
    \ a simple format for\n   the automatic processing of such lists of URIs.\n  \
    \ This is a copy of the IANA registration of the text/uri-list Media\n   Type.\n\
    \    Date: Fri, 18 Apr 97 08:36:07 PDT\n    From: Ron Daniel Jr. <rdaniel@lanl.gov>\n\
    \    To: iana@iana.org, rdaniel@lanl.gov\n    Subject: Request for MIME media\
    \ type Text/IETF Tree - uri-list\n    Name : Ron Daniel Jr.\n    E-mail : rdaniel@lanl.gov\n\
    \    MIME media type name : Text\n    MIME subtype name : IETF Tree -uri-list\n\
    \    Required parameters : none\n    Optional parameters : charset\n    Currently,\
    \ URIs can be represented using US-ASCII. However, there\n    are many non-standard\
    \ URIs which use special character sets.\n    Discussion of how to best achieve\
    \ internationalization of URIs is\n    underway. This registration will be updated\
    \ with a discussion of the\n    URI charsets once that discussion has concluded.\n\
    \    Encoding considerations : Some transfer protocols, such as SMTP,\n    place\
    \ limits on the length of lines. Very long URIs might exceed\n    those limits.\
    \ Systems must therefore be prepared to use a suitable\n    content transfer encoding.\
    \ This is anticipated to be a rare\n    occurance.\n    Security considerations\
    \ : Client software should be aware of the\n    security considerations of URIs.\
    \  For example, accessing some URIs\n    can result in sending a death threat\
    \ to a head of state, frequently\n    prompting a visit from the relevant protective\
    \ service.  Accessing\n    other URIs may result in financial obligations, or\
    \ access to\n    resources considered inappropriate by one's employer.\n    While\
    \ the legitimate provider of a uri-list could exploit these\n    properties for\
    \ good or ill, it is more likely that uri-lists will be\n    falsified in order\
    \ to exploit such characteristics of URIs.\n    Additionally, the lookup and reverse\
    \ lookup potential of the uri-\n    list may be attractive to traffic analysts.\
    \ URI lists may also\n    reveal confidential information, such as the location\
    \ of sensitive\n    information.\n    Because of these considerations, external\
    \ confidentiality measures\n    should be available to protect uri-list responses\
    \ when appropriate.\n    Interoperability considerations : none known\n    Published\
    \ specification : Uniform Resource Locators (URLs) and\n    Uniform Resource Names\
    \ (URNs) are two instances of the more general\n    class of identifiers known\
    \ as Uniform Resource Identifiers (URIs).\n    URN resolution methods frequently\
    \ wish to return lists of URLs for a\n    resource so that fault-tolerance and\
    \ load balancing can be achieved.\n    The text/uri-list format is intended to\
    \ be a very simple format for\n    communicating such lists of URLs (and URNs)\
    \ in a form suitable for\n    automatic processing.\n    The format of text/uri-list\
    \ resources is:\n    1) Any lines beginning with the '#' character are comment\
    \ lines\n        and are ignored during processing. (Note that URIs may contain\n\
    \        the '#' character, so it is only a comment character when it is\n   \
    \     the first character on a line.)\n    2) The remaining non-comment lines\
    \ shall be URIs (URNs or URLs),\n        encoded according to the URL or URN specifications\
    \ (RFC2141,\n        RFC1738 and RFC2396). Each URI shall appear on one and only\
    \ one\n        line. Very long URIs are not broken in the text/uri-list format.\n\
    \        Content-transfer-encodings may be used to enforce line length\n     \
    \   limitations.\n    3) As for all text/* formats, lines are terminated with\
    \ a CRLF pair.\n    In applications where one URI has been mapped to a list of\
    \ URIs, the\n    first line of the text/uri-list response SHOULD be a comment\
    \ giving\n    the original URI.\n    An example of the format is given below:\n\
    \      # urn:isbn:0-201-08372-8\n      http://www.huh.org/books/foo.html\n   \
    \   http://www.huh.org/books/foo.pdf\n      ftp://ftp.foo.org/books/foo.txt\n\
    \    Applications which use this media : URN resolvers are the initial\n    applications.\
    \ Web clients and proxies are applications that are\n    likely to support this\
    \ format in the future.\n    Additional information :\n    1. Magic number(s)\
    \ : none at this time\n    2. File extension(s) : .uris or .uri recommended\n\
    \    3. Macintosh file type code : URIs recommended\n    This media type is the\
    \ product of the URN working group of the IETF.\n    Person to contact for further\
    \ information :\n    1. Name : Ron Daniel Jr.\n    2. E-mail : rdaniel@lanl.gov\n\
    \    Intended usage : Limited Use\n    The text/uri-list media type is intended\
    \ for use in applications\n    which utilize URIs for replicated resources.\n\
    \    Author/Change controller : Ron Daniel Jr.\n    Los Alamos National Laboratory\n\
    \    rdaniel@lanl.gov\n   In applications where one URI has been mapped to a list\
    \ of URIs, such\n   as in response to the I2Ls request, the first line of the\
    \ text/uri-\n   list response SHOULD be a comment giving the original URI. An\
    \ example\n   of such a result for the I2L request is shown below in Figure 1.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   Communications with a server may be of a sensitive\
    \ nature. Some\n   servers will hold information that should only be released\
    \ to\n   authorized users. The results from servers may be the target of\n   spoofing,\
    \ especially once electronic commerce transactions are common\n   and there is\
    \ money to be made by directing users to pirate\n   repositories rather than repositories\
    \ that pay royalties to rights-\n   holders. Server requests may be of interest\
    \ to traffic analysts. The\n   requests may also be subject to spoofing.\n   The\
    \ \"Access denied\" error message assumes a system within which the\n   operation\
    \ is being performed that can convey an authenticated concept\n   of access control.\
    \ Thus, the \"Access denied\" message should only be\n   returned by systems that\
    \ have an appropriate method of determining\n   access control.\n"
- title: 7. References
  contents:
  - "7. References\n   [1] Berners-Lee, T., \"Universal Resource Identifiers in WWW:\
    \ A\n       Unifying Syntax for the Expression of Names and Addresses of\n   \
    \    Objects on the Network as Used in the World-Wide Web\", RFC 1630,\n     \
    \  June 1994.\n   [2] Daniel, R., and Mealling, M., \"Resolution of Uniform Resource\n\
    \       Identifiers using the Domain Name System\", RFC 2168, February\n     \
    \  1997.\n   [3] Moats, R., \"URN Syntax\", RFC 2141, January 1997.\n   [4] Freed,\
    \ N. and N. Borenstein, \"Multipurpose Internet Mail\n       Extensions (MIME)\
    \ Part One: Format of Internet Message Bodies\",\n       RFC 2045, November 1996.\n\
    \   [5] Sollins, K., \"Architectural Principles of Uniform Resource Name\n   \
    \    Resolution\", RFC 2276, January 1998.\n   [6] Kunze, J., \"Functional Recommendations\
    \ for Internet Resource\n       Locators\", RFC 1736, February 1995.\n   [7] Berners-Lee,\
    \ T., Masinter, L. and M. McCahill, \"Uniform Resource\n       Locators (URL)\"\
    , RFC 1738, December 1994.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Michael Mealling\n   Network Solutions\n   505 Huntmar\
    \ Park Drive\n   Herndon, VA 22070\n   Phone: (703) 742-0400\n   Fax:   (703)\
    \ 742-9552\n   EMail: michaelm@rwhois.net\n   Ron Daniel\n   Advanced Computing\
    \ Lab, MS B287\n   Los Alamos National Laboratory\n   Los Alamos, NM, USA, 87545\n\
    \   Phone: (505) 665-0597\n   Fax:   (505) 665-4939\n   EMail: rdaniel@lanl.gov\n"
- title: 9.  Full Copyright Statement
  contents:
  - "9.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
