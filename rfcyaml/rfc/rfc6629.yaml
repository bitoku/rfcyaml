- title: __initial_text__
  contents:
  - "                Considerations on the Application of the\n           Level 3\
    \ Multihoming Shim Protocol for IPv6 (Shim6)\n"
- title: Abstract
  contents:
  - "Abstract\n   This document discusses some considerations on the applicability\
    \ of\n   the level 3 multihoming Shim protocol for IPv6 (Shim6)\n   and associated\
    \ support protocols and mechanisms to provide site\n   multihoming capabilities\
    \ in IPv6.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any\n   errata, and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6629.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \   2. Deployment Scenarios ............................................4\n  \
    \ 3. Addresses and Shim6 .............................................6\n    \
    \  3.1. Protocol Version (IPv4 vs. IPv6) ...........................6\n      3.2.\
    \ Prefix Lengths .............................................7\n      3.3. Address\
    \ Generation and Configuration .......................7\n      3.4. Use of CGA\
    \ vs. HBA .........................................7\n   4. Shim6 in Multihomed\
    \ Nodes .......................................8\n   5. Shim6 Capabilities .............................................10\n\
    \      5.1. Fault Tolerance ...........................................10\n  \
    \         5.1.1. Establishing Communications After an Outage ........10\n    \
    \       5.1.2. Short-Lived and Long-Lived Communications ..........11\n      5.2.\
    \ Load Balancing ............................................11\n      5.3. Traffic\
    \ Engineering .......................................12\n   6. Application Considerations\
    \ .....................................12\n   7. Interaction with Other Protocols\
    \ and Mechanisms ................13\n      7.1. Shim6 and Mobile IPv6 .....................................13\n\
    \           7.1.1. Multihomed Home Network ............................14\n  \
    \         7.1.2. Shim6 Between the HA and the MN ....................16\n    \
    \  7.2. Shim6 and SEND ............................................16\n      7.3.\
    \ Shim6, SCTP and MPTCP .....................................17\n      7.4. Shim6\
    \ and NEMO ............................................18\n      7.5. Shim6 and\
    \ HIP .............................................18\n      7.6. Shim6 and Firewalls\
    \ .......................................19\n      7.7. Shim6 and NPTv6 ...........................................20\n\
    \   8. Security Considerations ........................................23\n  \
    \    8.1. Privacy Considerations ....................................24\n   9.\
    \ Contributors ...................................................24\n   10. Acknowledgements\
    \ ..............................................24\n   11. References ....................................................25\n\
    \      11.1. Normative References .....................................25\n  \
    \    11.2. Informative References ...................................26\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Site multihoming is an arrangement by which a site may use\
    \ multiple\n   paths to the rest of the Internet to provide better reliability\
    \ for\n   traffic passing in and out of the site than would be possible with a\n\
    \   single path.  Some of the motivations for operators to multihome\n   their\
    \ network are described in [RFC3582].\n   In IPv4, site multihoming is achieved\
    \ by injecting the additional\n   state required to allow session resilience over\
    \ re-homing events\n   [RFC4116] into the global Internet routing system (sometimes\
    \ referred\n   to as the Default-Free Zone, or DFZ).  There is concern that this\n\
    \   approach will not scale [RFC3221] [RFC4984].\n   Site multihoming in IPv6\
    \ can be achieved as in IPv4, thus facing\n   similar scalability concerns.  However,\
    \ IPv6's large address space\n   enables a different solution for site multihoming\
    \ in IPv6: to assign\n   multiple addresses to each host, one or more from each\
    \ provider.\n   Deploying site multihoming in this way does not impact the routing\n\
    \   system.  So such a site multihoming strategy may be extended to a\n   large\
    \ number of sites, and may be applied to small sites that would\n   not be eligible\
    \ for site multihoming based on the injection of routes\n   to Provider Independent\
    \ (PI) prefixes.  A drawback of this\n   multihoming approach is that it does\
    \ not provide transport-layer\n   stability across re-homing events.\n   Shim6\
    \ provides layer-3 support for making re-homing events\n   transparent to the\
    \ transport layer by means of a shim approach.  Once\n   a Shim6 session has been\
    \ established, the failure detection mechanism\n   defined for Shim6 allows finding\
    \ new, valid locator combinations in\n   case of failure and using these locators\
    \ to continue the\n   communication.  However, Shim6 does not provide failure\
    \ protection to\n   the communication establishment, so if a host within a multihomed\n\
    \   site attempts to establish a communication with a remote host and\n   selects\
    \ an address that corresponds to a failed transit path, the\n   communication\
    \ will fail.  State information relating to the\n   multihoming of two endpoints\
    \ exchanging unicast traffic is retained\n   on the endpoints themselves, rather\
    \ than in the network.\n   Communications between Shim6-capable hosts and Shim6-incapable\
    \ hosts\n   proceed as normal, but without the benefit of transport-layer\n  \
    \ stability.  The Shim6 approach is thought to have better scaling\n   properties\
    \ with respect to the state held in the DFZ than the PI\n   approach.  In order\
    \ to successfully deploy Shim6 in a multihomed\n   site, additional mechanisms\
    \ may be required to solve issues, such as\n   selecting the source address appropriate\
    \ to the destination and to\n   the outgoing provider, or to allow the network\
    \ manager to perform\n   traffic engineering.  Such problems are not specific\
    \ to Shim6, but\n   are relevant to the hosts of any site that is connected to\
    \ multiple\n   transit providers, and that receives an IPv6 prefix from each of\
    \ the\n   providers [RFC5220].  Some of these mechanisms are not defined today.\n\
    \   However, note that once a Shim6 session has been established, Shim6\n   reduces\
    \ the impact of these problems, because if a working path\n   exists, Shim6 will\
    \ find it.\n   This note describes the applicability of the Level 3 multihoming\n\
    \   (hereafter Shim6) protocol defined in [RFC5533] and the failure\n   detection\
    \ mechanisms defined in [RFC5534].\n   The terminology used in this document,\
    \ including terms like locator\n   and Upper-Layer Identifier (ULID), is defined\
    \ in [RFC5533].\n"
- title: 2.  Deployment Scenarios
  contents:
  - "2.  Deployment Scenarios\n   The goal of the Shim6 protocol is to support locator\
    \ agility in\n   established communications; different layer-3 endpoint addresses\
    \ may\n   be used to exchange packets belonging to the same transport-layer\n\
    \   session, all the time presenting a consistent identifier pair to\n   upper-layer\
    \ protocols.\n   In order to be useful, the Shim6 protocol requires that at least\
    \ one\n   of the peers have more than one address that could be used on the\n\
    \   wire (as locators).  In the event of communications failure between\n   an\
    \ active pair of addresses, the Shim6 protocol attempts to\n   reestablish communication\
    \ by trying different combinations of\n   locators.\n   While other multi-addressing\
    \ scenarios are not precluded, the\n   scenario in which the Shim6 protocol is\
    \ expected to operate is that\n   of a multihomed site that is connected to multiple\
    \ transit providers,\n   and that receives an IPv6 prefix from each of them. \
    \ This\n   configuration is intended to provide protection for the end-site in\n\
    \   the event of a failure in some subset of the available transit\n   providers,\
    \ without requiring the end-site to acquire PI address space\n   or requiring\
    \ any particular cooperation between the transit\n   providers.\n    ,------------------------------------.\
    \       ,----------------.\n    |        Rest of the Internet        +-------+\
    \ Remote Host R  |\n    `--+-----------+------------------+--'       `----------------'\n\
    \       |           |                  |            LR[1] ... LR[m]\n   ,---+----.\
    \  ,---+----.        ,----+---.\n   | ISP[1] |  | ISP[2] | ...... | ISP[n] |\n\
    \   `---+----'  `---+----'        `----+---'\n       |           |           \
    \       |\n   ,---+-----------+------------------+---.\n   |   Multi-Homed Site\
    \ S assigned        |\n   |   prefixes P[1], P[2], ..., P[n]     |\n   |     \
    \                                 |\n   |  ,--------. L[1] = P[1]:iid[1],    \
    \  |\n   |  | Host H | L[2] = P[2]:iid[2], ...  |\n   |  `--------' L[n] = P[n]:iid[n]\
    \       |\n   `--------------------------------------'\n                     \
    \            Figure 1\n   In the scenario illustrated in Figure 1, host H communicates\
    \ with\n   some remote host R.  Each of the addresses L[i] configured on host\
    \ H\n   in the multihomed site S can be reached through provider ISP[i] only,\n\
    \   since ISP[i] is solely responsible for advertising a covering prefix\n   for\
    \ P[i] to the rest of the Internet.\n   The use of locator L[i] on H hence causes\
    \ inbound traffic towards H\n   to be routed through ISP[i].  Changing the locator\
    \ from L[i] to L[j]\n   will have the effect of re-routing inbound traffic to\
    \ H from ISP[i]\n   to ISP[j].  This is the central mechanism by which the Shim6\
    \ protocol\n   aims to provide multihoming functionality: by changing locators,\
    \ host\n   H can change the upstream ISP used to route inbound packets towards\n\
    \   itself.  Regarding the outbound traffic to H, the path taken in this\n   case\
    \ depends on both the actual locator LR[j] used for R, and the\n   administrative\
    \ exit selection policy of site S.  As discussed in\n   Section 4, the site should\
    \ deliver outgoing packets that have a\n   source address derived from the prefix\
    \ of ISP[i] to that particular\n   provider, in order to prevent those packets\
    \ from being filtered due\n   to ingress filtering [RFC2827] being applied by\
    \ the providers.  It is\n   worth noting that in a scenario such as the one depicted\
    \ in Figure 1,\n   the paths followed by inbound and outbound traffic are determined,\
    \ to\n   a large extent, by the locators in use for the communication.  This\n\
    \   is not a particular issue of Shim6, but it is common to any\n   deployment\
    \ in which hosts are configured with addresses received from\n   different providers.\
    \  Traffic Engineering in such sites will likely\n   involve proper configuration\
    \ of address selection policies in the\n   hosts, by means of mechanisms such\
    \ as the ones discussed in Section\n   4.\n   The Shim6 protocol has other potential\
    \ applications beyond site\n   multihoming.  For example, since Shim6 is a host-based\
    \ protocol, it\n   can also be used to support host multihoming.  In this case,\
    \ a\n   failure in communication between a multihomed host and some other\n  \
    \ remote host might be repaired by selecting a locator associated with\n   a different\
    \ interface.\n   To allow nodes to benefit from the capabilities provided by Shim6,\n\
    \   (discussed in Section 5) such as fault tolerance, nodes should be\n   configured\
    \ to initiate a Shim6 session with any peer node if they\n   have multiple locators\
    \ to use.  Note that this configuration can be\n   performed transparently to\
    \ the applications, in the sense that\n   applications do not need to be aware\
    \ of the Shim6 functionality\n   provided by the node; in particular, nodes are\
    \ not forced to use the\n   Shim6 API [RFC6316] to benefit from Shim6.  The Shim6\
    \ session should\n   be created after the two nodes have been communicating for\
    \ some time,\n   i.e., using the deferred context establishment facility provided\
    \ by\n   Shim6.  Otherwise, the cost of the Shim6 4-way handshake used for\n \
    \  establishing the session may exceed the benefits provided for short-\n   lived\
    \ communications (see Section 5.1.2).  More advanced node\n   configuration may\
    \ involve configuring different delays for initiating\n   the session for different\
    \ applications, for example, based on a per-\n   port configuration.  Nodes being\
    \ able to use a single locator for the\n   communication should not initiate the\
    \ creation of a Shim6 context,\n   but should participate if another node initiates\
    \ it.  Note that\n   Shim6-aware applications can override this behavior by means\
    \ of the\n   Shim6 API [RFC6316].\n"
- title: 3.  Addresses and Shim6
  contents:
  - '3.  Addresses and Shim6

    '
- title: 3.1.  Protocol Version (IPv4 vs. IPv6)
  contents:
  - "3.1.  Protocol Version (IPv4 vs. IPv6)\n   The Shim6 protocol is defined only\
    \ for IPv6.  While some Shim6-like\n   approaches have been suggested to support\
    \ IPv4 addresses as a locator\n   [SHIM6-ESD], it is not clear if such extensions\
    \ are feasible.\n   The Shim6 protocol, as specified for IPv6, incorporates cryptographic\n\
    \   elements in the construction of locators (see [RFC3972] and\n   [RFC5535]).\
    \  Since IPv4 addresses are insufficiently large to contain\n   addresses constructed\
    \ in this fashion, direct use of Shim6 with IPv4\n   addresses is not possible.\n\
    \   In addition, there are other factors to take into account when\n   considering\
    \ the support of IPv4 addresses, in particular, IPv4\n   locators.  Using multiple\
    \ IPv4 addresses in a single host in order to\n   support the Shim6 style of multihoming\
    \ would result in an increased\n   IPv4 address consumption, which would be problematic\
    \ considering that\n   the IPv4 address space has been exhausted.  Besides, Shim6\
    \ may\n   experience additional problems if locators become translated on the\n\
    \   wire.  Address translation is more likely to involve IPv4 addresses.\n   IPv4\
    \ addresses can be translated to other IPv4 addresses (for\n   example, a private\
    \ IPv4 address into a public IPv4 address and vice\n   versa) or to/from IPv6\
    \ addresses (for example, as defined by NAT64\n   [RFC6146]).  When address translation\
    \ occurs, a locator exchanged by\n   Shim6 could be different from the address\
    \ needed to reach the\n   corresponding host, either because the translated version\
    \ of the\n   locator exchanged by Shim6 is not known or because the translation\n\
    \   state no longer exists in the translator device.  Besides, the\n   translated\
    \ locators will not be verifiable with the current\n   Cryptographically Generated\
    \ Address (CGA) and Hash-Based Address\n   (HBA) verification mechanisms, which\
    \ protect the locators as seen by\n   the node for which they are configured.\n"
- title: 3.2.  Prefix Lengths
  contents:
  - "3.2.  Prefix Lengths\n   The Shim6 protocol does not assume that all the prefixes\
    \ assigned to\n   the multihomed site have the same prefix length.\n   However,\
    \ the use of CGA [RFC3972] and HBA [RFC5535] involves encoding\n   information\
    \ in the lower 64 bits of the locators.  This imposes the\n   requirement that\
    \ all interface addresses should be able to\n   accommodate 64-bit interface identifiers\
    \ on Shim6-capable hosts.\n   Note that this is imposed by RFC 4291 [RFC4291].\n"
- title: 3.3.  Address Generation and Configuration
  contents:
  - "3.3.  Address Generation and Configuration\n   The security of the Shim6 protocol\
    \ is based on the use of CGA and HBA\n   addresses.\n   The CGA and HBA generation\
    \ process can use the information provided\n   by the stateless auto-configuration\
    \ mechanism defined in [RFC4862]\n   with the additional considerations presented\
    \ in [RFC3972] and\n   [RFC5535].\n   Stateful address auto-configuration using\
    \ DHCP [RFC3315] is not\n   currently supported, because there is no defined mechanism\
    \ to convey\n   the CGA Parameter Data Structure and other relevant information\
    \ from\n   the DHCP server to the host.  An analysis of the possible\n   interactions\
    \ between DHCPv6 and CGA can be found in [DHCPv6-CGA].\n"
- title: 3.4.  Use of CGA vs. HBA
  contents:
  - "3.4.  Use of CGA vs. HBA\n   The choice between CGA and HBA is a trade-off between\
    \ flexibility and\n   performance.\n   The use of HBA is more efficient in the\
    \ sense that addresses require\n   less computation than CGA, involving only hash\
    \ operations for both\n   the generation and the verification of locator sets.\
    \  However, the\n   locators of an HBA set are determined during the generation\
    \ process\n   and cannot be subsequently changed; the addition of new locators\
    \ to\n   that initial set is not supported.  Therefore, a node using an HBA as\n\
    \   a ULID for a Shim6 session can only use the locators associated to\n   that\
    \ HBA for the considered Shim6 session.  If the node wants to use\n   a new set\
    \ of locators, it has to generate a new HBA including the\n   prefixes of the\
    \ new locators (which will result with very high\n   probability in different\
    \ addresses to those of the previous set).\n   New sessions initiated with a ULID\
    \ belonging to the new HBA address\n   set could use the new locators.\n   The\
    \ use of CGA is more computationally expensive, involving public-\n   key cryptography\
    \ in the verification of locator sets.  However, CGAs\n   are more flexible in\
    \ the sense that they support the dynamic\n   modification of locator sets.\n\
    \   Therefore, CGAs are well suited to support dynamic environments such\n   as\
    \ mobile hosts, where the locator set must be changed frequently.\n   HBAs are\
    \ better suited for sites where the prefix set remains\n   relatively stable.\n\
    \   It should be noted that since HBAs are defined as a CGA extension, it\n  \
    \ is possible to generate an address that incorporates the strengths of\n   both\
    \ HBA and CGA, i.e., that a single address can be used as an HBA,\n   enabling\
    \ computationally-cheap validation amongst a fixed set of\n   addresses, and also\
    \ as a CGA, enabling dynamic manipulation of the\n   locator set.  For additional\
    \ details, see [RFC5535].\n"
- title: 4.  Shim6 in Multihomed Nodes
  contents:
  - "4.  Shim6 in Multihomed Nodes\n   Shim6 multihomed nodes are likely to experience\
    \ problems related to\n   the attachment to different provision domains.  Note\
    \ that these\n   problems are not specific to Shim6.  [RFC6418] discusses the\
    \ problems\n   associated with nodes with multiple interfaces, which may involve\n\
    \   difficulties in\n   o  managing the configuration associated with different\
    \ providers.\n   o  finding the appropriate DNS server to resolve a query and\
    \ to match\n      DNS answers to providers.\n   o  routing the packets to the\
    \ right provider.\n   o  selecting the source address appropriate to the destination\
    \ and to\n      the outgoing provider.\n   o  performing session management appropriately.\n\
    \   Some of these problems may also arise in single-interface hosts\n   connected\
    \ to multiple networks, for example, in configurations in\n   which a customer\
    \ network receives multiple Provider Aggregatable\n   prefixes.  These problems\
    \ are relevant to other solutions supporting\n   multihoming, such as Stream Control\
    \ Transmission Protocol (SCTP)\n   [RFC4960], Multipath TCP (MPTCP) [RFC6182],\
    \ or Host Identity Protocol\n   (HIP) [RFC4423].  Note also that single-homed\
    \ nodes implementing\n   Shim6 to improve communications with other nodes having\
    \ multiple\n   addresses will not experience these problems.\n   The compatibility\
    \ of Shim6 with configurations or mechanisms\n   developed to solve any multihoming\
    \ problem has to be carefully\n   considered on a case-by-case basis.  However,\
    \ the interaction of\n   Shim6 with some of the solutions discussed in [IPv6NAT]\
    \ is commented\n   on in the next paragraphs.\n   In order to configure source\
    \ and destination address selection, tools\n   such as DHCPv6 can be used to disseminate\
    \ an [RFC3484] policy table\n   to a host [6MAN].  The impact to Shim6 using this\
    \ solution, which\n   disseminates the policy table to the hosts, is the following:\
    \ Shim6\n   selects the ULID pair to use in communication according to the\n \
    \  mechanism described in [RFC3484].  In case different locator pairs\n   need\
    \ to be explored, nodes also use the rules defined by [RFC3484] to\n   identify\
    \ valid pairs, and to establish an order among them, as\n   described in [RFC5534].\n\
    \   When a locator has been selected by a host to be used as the source\n   address\
    \ for a Shim6 session, Shim6 has no means to enforce an\n   appropriate path for\
    \ that source address in either the host or the\n   network.  For IPv6 nodes,\
    \ the next-hop router to use for a given set\n   of destinations can be configured\
    \ through Extensions to Router\n   Advertisements, through Default Router Preference\
    \ and More-Specific\n   Routes [RFC4191], the use of a DHCPv6 option, or the use\
    \ of a routing\n   protocol.  It is also possible to rely on routers that consider\n\
    \   source addresses in their forwarding decisions in addition to the\n   usual\
    \ destination-based forwarding.  All these solutions are\n   compatible with Shim6\
    \ operation.  Note that an improper matching of\n   source address and egress\
    \ provider may result in packets being\n   dropped if the provider performs ingress\
    \ filtering [RFC2827], i.e.,\n   dropping packets that come from customer networks\
    \ with source\n   addresses not belonging to the prefix assigned to them to prevent\n\
    \   address spoofing.\n   For some particular configurations, i.e., for a walled-garden\
    \ or\n   closed service, the node may need to identify the most appropriate\n\
    \   DNS server to resolve a particular query.  For an analysis of this\n   problem,\
    \ the reader is referred to [IPv6NAT].\n   Finally, note that Shim6 is built to\
    \ handle communication problems,\n   so it may recover from the misconfiguration\
    \ (or lack) of some of the\n   mechanisms used to handle the aforementioned problems.\
    \  For example,\n   if any notification is received from the router dropping the\
    \ packets\n   with legitimate source addresses as a result of ingress filtering,\n\
    \   the affected locator could be associated with a low preference (or\n   not\
    \ be used at all).  But even if such a notification is not\n   received, or not\
    \ processed by the Shim6 layer, the defective source\n   address or next-hop selection\
    \ will be treated as a communication\n   failure.  Therefore, Shim6 re-homing\
    \ could finally select a working\n   path in which packets are not filtered, if\
    \ this path exists.  This\n   behavior results from the powerful end-to-end resilience\
    \ properties\n   exhibited by the REAchability Protocol (REAP) [RFC5534].\n"
- title: 5.  Shim6 Capabilities
  contents:
  - '5.  Shim6 Capabilities

    '
- title: 5.1.  Fault Tolerance
  contents:
  - '5.1.  Fault Tolerance

    '
- title: 5.1.1.  Establishing Communications After an Outage
  contents:
  - "5.1.1.  Establishing Communications After an Outage\n   If a host within a multihomed\
    \ site attempts to establish a\n   communication with a remote host and selects\
    \ a locator that\n   corresponds to a failed transit path, bidirectional communication\n\
    \   between the two hosts will not succeed.  In order to establish a new\n   communication,\
    \ the initiating host must try different combinations of\n   (source, destination)\
    \ locator pairs until it finds a pair that works.\n   The mechanism for this default\
    \ address selection is described in\n   [RFC3484].  As a result of the use of\
    \ this mechanism, some failures\n   may not be recovered, even if a valid alternative\
    \ path exists between\n   two communicating hosts.  For example, assuming a failure\
    \ in ISP[1]\n   (see Figure 1), and host H initiating a communication with host\
    \ R,\n   the source address selection algorithm described in [RFC3484] may\n \
    \  result in the selection of the source address corresponding to ISP[1]\n   for\
    \ every destination address being tried by the application.\n   However, note\
    \ that if R is the node initiating the communication, it\n   will find a valid\
    \ path provided that the application at R tries every\n   available address for\
    \ H.\n   Since a Shim6 context is normally established between two hosts only\n\
    \   after initial communication has been set up, there is no opportunity\n   for\
    \ Shim6 to participate in the discovery of a suitable, initial\n   (source, destination)\
    \ locator pair.  The same consideration holds for\n   referrals, as described\
    \ in Section 6.\n"
- title: 5.1.2.  Short-Lived and Long-Lived Communications
  contents:
  - "5.1.2.  Short-Lived and Long-Lived Communications\n   The Shim6 context establishment\
    \ operation requires a 4-way packet\n   exchange, and involves some overhead on\
    \ the participating hosts in\n   memory and CPU.\n   For short-lived communications\
    \ between two hosts, the benefit of\n   establishing a Shim6 context might not\
    \ exceed the cost, perhaps\n   because the protocols concerned are fault tolerant\
    \ and can arrange\n   their own recovery (e.g., DNS) or because the frequency\
    \ of re-homing\n   events is sufficiently low that the probability of such a failure\n\
    \   occurring during a short-lived exchange is not considered\n   significant.\n\
    \   It is anticipated that the exchange of Shim6 context will provide the\n  \
    \ most benefit for exchanges between hosts that are long-lived.  For\n   this\
    \ reason, the default behavior of Shim6-capable hosts is expected\n   to employ\
    \ deferred context-establishment.  Deferred context setup\n   ensures that session-establishment\
    \ time will not be increased by the\n   use of Shim6.  This default behavior can\
    \ be overridden by\n   applications that prefer immediate context establishment,\
    \ regardless\n   of transaction longevity, by using [RFC6316].\n   Note that all\
    \ the above considerations refer to the lifetime of the\n   interaction between\
    \ the peers, and not the lifetime of a particular\n   connection (e.g., TCP connection).\
    \  In other words, the Shim6 context\n   is established between ULID pairs and\
    \ it affects all the\n   communication between these ULIDs.  So, two nodes with\
    \ multiple\n   short-lived communications using the same ULID pair would benefit\
    \ as\n   much from the Shim6 features as two nodes having a single long-lived\n\
    \   communication.  One example of such a scenario would be a web-client\n   software\
    \ downloading web content from a server over multiple TCP\n   connections.  Each\
    \ TCP connection is short-lived, but the\n   communication/contact between the\
    \ two ULID could be long-lived.\n"
- title: 5.2.  Load Balancing
  contents:
  - "5.2.  Load Balancing\n   The Shim6 protocol does not support load balancing within\
    \ a single\n   context: all packets associated with a particular context are\n\
    \   exchanged using a single locator pair per direction, with the\n   exception\
    \ of forked contexts, which are created upon explicit\n   requests from the upper-layer\
    \ protocol.\n   It may be possible to extend the Shim6 protocol to use multiple\n\
    \   locator pairs in a single context, but the impact of such an\n   extension\
    \ on upper-layer protocols (e.g., on TCP congestion control)\n   should be considered\
    \ carefully.\n   When many contexts are considered together in aggregation, e.g.,\
    \ on a\n   single host that participates in many simultaneous contexts or in a\n\
    \   site full of hosts, some degree of load sharing should occur\n   naturally\
    \ due to the selection of different locator pairs in each\n   context.  However,\
    \ there is no mechanism defined to ensure that this\n   natural load sharing is\
    \ arranged to provide a statistical balance\n   between transit providers.\n \
    \  Note that the use of transport-layer solutions enhanced with\n   mechanisms\
    \ to allow the use of multiple paths for a transport session\n   are more amenable\
    \ for achieving load-balancing.  One such solution is\n   MPTCP [RFC6182].\n"
- title: 5.3.  Traffic Engineering
  contents:
  - "5.3.  Traffic Engineering\n   For sites with prefixes obtained from different\
    \ providers, the paths\n   followed by inbound and outbound traffic are determined\
    \ to a large\n   extent by the locators selected for each communication.  This\
    \ is not\n   a particular issue of Shim6, but it is common to any deployment in\n\
    \   which hosts are configured with addresses received from different\n   providers.\
    \  Traffic engineering in such sites will likely involve\n   proper configuration\
    \ of the address selection policies defined by\n   [RFC3484].\n   The Shim6 protocol\
    \ provides some lightweight traffic engineering\n   capabilities in the form of\
    \ the Locator Preferences option, which\n   allows a host to inform a remote host\
    \ of local preferences for\n   locator selection.  In this way, the host can influence\
    \ the incoming\n   path for the communication.  This mechanism is only available\
    \ after a\n   Shim6 context has been established, and it is a host-based capability\n\
    \   rather than a site-based capability.  There is no defined mechanism\n   that\
    \ would allow use of the Locator Preferences option amongst a site\n   full of\
    \ hosts to be managed centrally by the administrator of the\n   site.\n"
- title: 6.  Application Considerations
  contents:
  - "6.  Application Considerations\n   Shim6 provides multihoming support without\
    \ forcing changes in the\n   applications running on the host.  The fact that\
    \ an address has been\n   generated according to the CGA or HBA specification\
    \ does not require\n   any specific action from the application, e.g., it can\
    \ obtain remote\n   CGA or HBA addresses as a result of a getaddrinfo() call to\
    \ trigger a\n   DNS Request.  The storage of CGA or HBA addresses in DNS does\
    \ not\n   require any modification to this protocol, since they are recorded\n\
    \   using AAAA records.  Moreover, neither the ULID/locator management\n   [RFC5533]\
    \ nor the failure detection and recovery [RFC5534] functions\n   require application\
    \ awareness.\n   However, a specific API [RFC6316] has been developed for those\n\
    \   applications that might require additional capabilities in ULID/\n   locator\
    \ management, such as the locator pair in use for a given\n   context, or the\
    \ set of local or remote locators available for it.\n   This API can also be used\
    \ to disable Shim6 operation when required.\n   It is worth noting that callbacks\
    \ can benefit naturally from Shim6\n   support.  In a callback, an application\
    \ in B retrieves IP_A, the IP\n   address of a peer A, and B uses IP_A to establish\
    \ a new communication\n   with A.  As long as the address exchanged, IP_A, is\
    \ the ULID for the\n   initial communication between A and B, and B uses the same\
    \ address as\n   in the initial communication, and this initial communication\
    \ is alive\n   (or the context has not been deleted), the new communication could\n\
    \   use the locators exchanged by Shim6 for the first communication.  In\n   this\
    \ case, communication could proceed even if the ULID of A is not\n   reachable.\n\
    \   However, Shim6 does not provide specific protection to current\n   applications\
    \ when they use referrals.  A referral is the exchange of\n   the IP address IP_A\
    \ of a party A by party B to party C, so that party\n   C could use IP_A to communicate\
    \ with party A.  In a normal case, the\n   ULID IP_A would be the only information\
    \ sent by B to C as a referral.\n   But if IP_A is no longer valid as the locator\
    \ in A, C could have\n   trouble establishing a communication with A.  Increased\
    \ failure\n   protection for referrals could be obtained if B exchanged the whole\n\
    \   list of alternative locators of A; although, in this case the\n   application\
    \ protocol should be modified.  Note that B could send to C\n   the current locator\
    \ of A, instead of the ULID of A, as a way of using\n   the most recent reachability\
    \ information about A.  While in this case\n   no modification of the application\
    \ protocol is required, some\n   concerns arise: host A may not accept one of\
    \ its locators as ULID for\n   initiating a communication, and if a CGA are used,\
    \ the locator may\n   not be a CGA so a Shim6 context among A and C could not\
    \ be created.\n"
- title: 7.  Interaction with Other Protocols and Mechanisms
  contents:
  - "7.  Interaction with Other Protocols and Mechanisms\n   In this section we discuss\
    \ the interaction between Shim6 and other\n   protocols and mechanisms.  Before\
    \ starting the discussion, it is\n   worth noting that at the time of this writing,\
    \ there is a lack of\n   experience with the combination of Shim6 and these protocols\
    \ and\n   mechanisms.  Therefore, the conclusions stated should be reviewed as\n\
    \   real experience is gained in the use of Shim6.\n"
- title: 7.1.  Shim6 and Mobile IPv6
  contents:
  - "7.1.  Shim6 and Mobile IPv6\n   Here, we consider some scenarios in which the\
    \ Shim6 protocol and the\n   Mobile IPv6 (MIPv6) protocol [RFC6275] might be used\
    \ simultaneously.\n"
- title: 7.1.1.  Multihomed Home Network
  contents:
  - "7.1.1.  Multihomed Home Network\n   In this case, the Home Network of the Mobile\
    \ Node (MN) is multihomed.\n   This implies the availability of multiple Home\
    \ Network prefixes,\n   resulting in multiple Home Addresses (HoAs) for each MN.\
    \  Since the\n   MN is a node within a multihomed site, it seems reasonable to\
    \ expect\n   that the MN should be able to benefit from the multihoming\n   capabilities\
    \ provided by the Shim6 protocol.  Moreover, the MN needs\n   to be able to obtain\
    \ the multihoming benefits, even when it is\n   roaming away from the Home Network:\
    \ if the MN is away from the Home\n   Network while the Home Network suffers a\
    \ failure in a transit path,\n   the MN should be able to continue communicating\
    \ using alternate paths\n   to reach the Home Network.\n   The resulting scenario\
    \ is the following:\n       +------------------------------------+\n       | \
    \              Internet             |\n       +------------------------------------+\n\
    \          |                   |\n        +----+              +----+\n       \
    \ |ISP1|              |ISP2|\n        +----+              +----+\n          |\
    \                   |\n       +------------------------------------+\n       |\
    \   Multihomed Home Network          |\n       |   Prefixes: P1 and P2       \
    \       |\n       |                                    |\n       |           \
    \        Home Agent       |\n       |                   //               |\n \
    \      +------------------//----------------+\n                         //\n \
    \                       //\n                      +-----+\n                  \
    \    | MN  | HoA1, HoA2\n                      +-----+\n                     \
    \ Figure 2\n   So, in this configuration, the Shim6 protocol is used to provide\n\
    \   multiple communication paths to all the nodes within the multihomed\n   sites\
    \ (including the mobile nodes), and the MIPv6 protocol is used to\n   support\
    \ mobility of the multihomed site's mobile nodes.\n   The proposed protocol architecture\
    \ would be the following:\n      +--------------+\n      |  Application |\n  \
    \    +--------------+\n      |  Transport   |\n      +--------------+\n      |\
    \      IP      |\n      | +----------+ |\n      | |  IPSec   | |\n      | +----------+<--ULIDs\n\
    \      | | Shim6    | |\n      | +----------+<--HoAs\n      | | MIPv6    | |\n\
    \      | +----------+<--CoAs\n      |              |\n      +--------------+\n\
    \          Figure 3\n   In this architecture, the upper-layer protocols and IPSec\
    \ would use\n   ULIDs of the Shim6 protocol (see Section 16.1 in [RFC5533] for\
    \ more\n   detail on the interaction between Shim6 and IPsec).  Only the HoAs\n\
    \   will be presented by the upper layers to the Shim6 layer as potential\n  \
    \ ULIDs.  Two Shim6 entities will exchange their own available HoAs as\n   locators.\
    \  Therefore, Shim6 provides failover between different HoAs\n   and allows preservation\
    \ of established communications when an outage\n   affects the path through the\
    \ ISP that has delegated the HoA used for\n   initiating the communication (similar\
    \ to the case of a host within a\n   multihomed site).  The Care-of Addresses\
    \ (CoAs) are not presented to\n   the Shim6 layer and are not included in the\
    \ local locator set in this\n   case.  The CoAs are managed by the MIPv6 layer,\
    \ which binds each HoA\n   to a CoA.  For example, if a single CoA, CoA1, is available\
    \ for the\n   MN in the foreign link to which it is attached, every HoA should\
    \ have\n   a bind to CoA1.\n   So, in this case, the upper-layer protocols select\
    \ a ULID pair for\n   the communication.  The Shim6 protocol translates the ULID\
    \ pair to an\n   alternative locator in case that is needed.  Both the ULIDs and\
    \ the\n   alternative locators are HoAs.  Next, the MIPv6 layer maps the\n   selected\
    \ HoA to the corresponding CoA, which is the actual address\n   included in the\
    \ wire.\n   The Shim6 context is established between the MN and the Correspondent\n\
    \   Node (CN), and it would allow the communication to use all the\n   available\
    \ HoAs to provide fault tolerance.  The MIPv6 protocol is\n   used between the\
    \ MN and the Home Agent (HA) in the case of the\n   bidirectional tunnel mode,\
    \ and between the MN and the CN in case of\n   the Route Optimization (RO) mode.\n"
- title: 7.1.2.  Shim6 between the HA and the MN
  contents:
  - "7.1.2.  Shim6 between the HA and the MN\n   Another scenario where a Shim6-MIPv6\
    \ interaction may be useful is the\n   case where a Shim6 context is established\
    \ between the MN and the HA\n   in order to provide fault tolerance capabilities\
    \ to the bidirectional\n   tunnel between them.\n   Consider the case where the\
    \ HA has multiple addresses (whether\n   because the Home Network is multihomed\
    \ or because the HA has multiple\n   interfaces) and/or the MN has multiple addresses\
    \ (whether because the\n   visited network is multihomed or because the MN has\
    \ multiple\n   interfaces).  In this case, if a failure affects the address pair\n\
    \   that is being used to run the tunnel between the MN and HA,\n   additional\
    \ mechanisms need to be used to preserve the communication.\n   One possibility\
    \ would be to use MIPv6 capabilities, by simply\n   changing the CoA used as the\
    \ tunnel endpoint.  However, MIPv6 lacks\n   the failure detection mechanisms\
    \ that would allow the MN and/or the\n   HA to detect the failure and trigger\
    \ the usage of an alternative\n   address.  Shim6 provides such a failure detection\
    \ protocol, so one\n   possibility would be re-using the failure detection function\
    \ from the\n   Shim6 failure detection protocol in MIPv6.  In this case, the Shim6\n\
    \   protocol wouldn't be used to create Shim6 context and provide fault\n   tolerance,\
    \ but just its failure detection functionality would be\n   re-used.\n   The other\
    \ possibility would be to use the Shim6 protocol to create a\n   Shim6 context\
    \ between the HA and the MN, so that the Shim6 detects\n   any failure and re-homes\
    \ the communication in a transparent fashion\n   to MIPv6.  In this case, the\
    \ Shim6 protocol would be associated with\n   the tunnel interface.\n"
- title: 7.2.  Shim6 and SEND
  contents:
  - "7.2.  Shim6 and SEND\n   Secure Neighbor Discovery (SEND) [RFC3971] uses CGAs\
    \ to prove address\n   ownership for Neighbor Discovery [RFC4861].  The Shim6\
    \ protocol can\n   use either CGAs or HBAs to protect locator sets included in\
    \ Shim6\n   contexts.  It is expected that some hosts will need to participate\
    \ in\n   both SEND and Shim6 simultaneously.\n   In the case that both the SEND\
    \ and Shim6 protocols are using the CGA\n   technique to generate addresses, there\
    \ is no conflict; the host will\n   generate addresses for both purposes as CGAs,\
    \ and since it will be in\n   control of the associated private key, the same\
    \ CGA can be used for\n   the different protocols.\n   In the case that a Shim6-capable\
    \ host is using HBAs to protect its\n   locator sets, the host will need to generate\
    \ an address that is both\n   a valid CGA and a valid HBA, as defined in [RFC5535].\
    \  In this case,\n   the CGA Parameter Data Structure containing a valid public\
    \ key and\n   the Multi-Prefix extension are included as inputs to the hash\n\
    \   function.\n"
- title: 7.3.  Shim6, SCTP, and MPTCP
  contents:
  - "7.3.  Shim6, SCTP, and MPTCP\n   Both the SCTP [RFC4960] and MPTCP [RFC6182]\
    \ protocols provide a\n   reliable, stream-based communications channel between\
    \ two hosts that\n   provides a superset of the capabilities of TCP.  One notable\
    \ feature\n   of these two protocols is that they allow the exchange of endpoint\n\
    \   addresses between hosts in order to recover from the failure of a\n   particular\
    \ endpoint pair, or to benefit from multipath communication\n   in the MPTCP case,\
    \ in a manner that is conceptually similar to\n   locator selection in Shim6.\n\
    \   SCTP and MPTCP are transport-layer protocols, higher in the protocol\n   stack\
    \ than Shim6; hence, there is no fundamental incompatibility that\n   would prevent\
    \ a Shim6-capable host from communicating using SCTP or\n   MPTCP.\n   However,\
    \ since either SCTP or MPTCP, and Shim6 aim to exchange\n   addressing information\
    \ between hosts in order to meet the same\n   generic goal, it is possible that\
    \ their simultaneous use might result\n   in unexpected behavior, e.g., lead to\
    \ race conditions.\n   The capabilities of these transport protocols with respect\
    \ to path\n   maintenance of a reliable, connection-oriented stream protocol are\n\
    \   more extensive than the more general layer-3 locator agility provided\n  \
    \ by Shim6.  Therefore, it is recommended that Shim6 not be used for\n   SCTP\
    \ or MPTCP sessions, and that path maintenance be provided solely\n   by SCTP\
    \ or MPTCP.  There are at least two ways to enforce this\n   behavior.  One option\
    \ is to make the stack, and in particular the\n   Shim6 sublayer, aware of the\
    \ use of SCTP or MPTCP, and in this case\n   refrain from creating a Shim6 context.\
    \  The other option is that the\n   upper transport layer indicates, using a Shim6-capable\
    \ API like the\n   one proposed in [RFC6316], that no Shim6 context must be created\
    \ for\n   this particular communication.\n   In general, the issues described\
    \ here may also arise for protocols\n   that handle different addresses for two\
    \ communicating nodes at a\n   higher level than the network layer to improve\
    \ reliability,\n   performance, congestion control, etc.\n"
- title: 7.4.  Shim6 and NEMO
  contents:
  - "7.4.  Shim6 and NEMO\n   The Network Mobility (NEMO) [RFC3963] protocol extensions\
    \ to MIPv6\n   allow a Mobile Network to communicate through a bidirectional tunnel\n\
    \   via a Mobile Router (MR) to a NEMO-compliant HA located in a Home\n   Network.\n\
    \   If either or both the MR or HA are multihomed, then an established\n   Shim6\
    \ context preserves the integrity of the bidirectional tunnel\n   between them\
    \ in the event that a transit failure occurs in the\n   connecting path.\n   Once\
    \ the tunnel between MR and HA is established, hosts within the\n   Mobile Network\
    \ that are Shim6-capable can establish contexts with\n   remote hosts in order\
    \ to receive the same multihoming benefits as any\n   host located within the\
    \ Home Network.\n"
- title: 7.5.  Shim6 and HIP
  contents:
  - "7.5.  Shim6 and HIP\n   Shim6 and HIP [RFC4423] are architecturally similar in\
    \ the sense that\n   both solutions allow two hosts to use different locators\
    \ to support\n   communications between stable ULIDs.  The signaling exchange\
    \ to\n   establish the demultiplexing context on the hosts is very similar for\n\
    \   both protocols.  However, there are a few key differences.  First,\n   Shim6\
    \ avoids defining a new namespace for ULIDs, preferring instead\n   to use a routable\
    \ locator as a ULID, while HIP uses public keys and\n   hashes thereof as ULIDs.\
    \  The use of a routable locator as the ULID\n   better supports deferred context\
    \ establishment, application\n   callbacks, and application referrals, and avoids\
    \ management and\n   resolution costs of a new namespace, but requires additional\
    \ security\n   mechanisms to securely bind the ULID with the locators.  Second,\n\
    \   Shim6 uses an explicit context header on data packets for which the\n   ULIDs\
    \ differ from the locators in use (this header is only needed\n   after a failure/re-homing\
    \ event occurs), while HIP may compress this\n   context-tag function into the\
    \ Encapsulating Security Payload (ESP)\n   Security Parameter Index (SPI) field\
    \ [RFC5201].  Third, HIP as\n   presently defined requires the use of public-key\
    \ operations in its\n   signaling exchange and ESP encryption in the data plane,\
    \ while the\n   use of Shim6 requires neither (if only HBA addresses are used).\
    \  By\n   default, HIP provides data protection, while this is a non-goal for\n\
    \   Shim6.\n   Shim6 aimed to provide a solution to a specific problem, multihoming,\n\
    \   which minimizes deployment disruption, while HIP is considered more\n   of\
    \ an experimental approach intended to solve several more general\n   problems\
    \ (mobility, multihoming, and loss of end-to-end addressing\n   transparency)\
    \ through an explicit identifier/locator split.\n   Communicating hosts that are\
    \ willing to run HIP (perhaps extended\n   with Shim6's failure detection protocol)\
    \ likely have no reason to\n   also run Shim6.  In this sense, HIP may be viewed\
    \ as a possible long-\n   term evolution or extension of the Shim6 architecture,\
    \ or one\n   possible implementation of the Extended Shim6 Design (ESD)\n   [SHIM6-ESD].\n"
- title: 7.6.  Shim6 and Firewalls
  contents:
  - "7.6.  Shim6 and Firewalls\n   The ability of Shim6 to divert the communication\
    \ to different paths\n   may be affected by certain firewall configurations. \
    \ For example,\n   consider a deployment in which one of the peers of a Shim6\
    \ session is\n   protected by a firewall (i.e., all the paths to the locators\
    \ of that\n   peer traverse the firewall).  The firewall implements the Simple\n\
    \   Security model [RFC4864], in which incoming packets are checked\n   against\
    \ a state resulting from outgoing traffic, either associated\n   with the locator\
    \ of the internal node ('endpoint independent\n   filtering') or to both the locators\
    \ of the internal and external\n   nodes ('address dependent filtering' or 'address\
    \ and port dependent\n   filtering').  If the external node changes the locator\
    \ associated\n   with the internal node, the packet will be discarded by the firewall.\n\
    \   In addition, if the firewall implements 'address dependent filtering'\n  \
    \ or 'address and port dependent filtering', any change by the external\n   node\
    \ in the locator used to identify itself will also result in the\n   packet being\
    \ discarded by the firewall.\n   This issue could be mitigated by making the firewalls\
    \ aware of the\n   different locators that could be associated with a given\n\
    \   communication.  If the firewall is implemented in the communication\n   node\
    \ itself, the firewall could inspect the Shim6 control packet\n   exchange to\
    \ obtain this information, or the Shim6 software module\n   could explicitly inform\
    \ the firewall software module.  For firewalls\n   located outside the node, the\
    \ Shim6 control packet exchange can be\n   used to associate the alternate locators\
    \ to the communication state,\n   although it may not work for topologies in which\
    \ both directions for\n   the communication do not traverse the firewall, or in\
    \ which the\n   firewall is not traversed after a locator change.  The detail\
    \ of any\n   of such mechanisms is out of the scope of this document.\n   However,\
    \ note that a failure in using the alternative locators does\n   not impact the\
    \ communication between the nodes as long as the path\n   between them defined\
    \ by the initial locator pair remains available.\n   In this case, data packets\
    \ flow between the communicating nodes as\n   for any non-Shim6 communication.\n"
- title: 7.7.  Shim6 and NPTv6
  contents:
  - "7.7.  Shim6 and NPTv6\n   Address translation techniques such as Network Prefix\
    \ Translation\n   (NPTv6) [RFC6296] may be used until workable solutions to avoid\n\
    \   renumbering or facilitate multihoming are developed [RFC5902].  We\n   now\
    \ consider the impact of NPTv6 in Shim6 operation.  Some of the\n   considerations\
    \ stated in this section may also be applicable to other\n   types of IPv6 NAT.\n\
    \   The main purpose of Shim6 is to provide locator agility below\n   transport\
    \ protocols.  To prevent the risk of redirection attacks by\n   abusing the locator\
    \ exchange facilities provided by Shim6, the\n   protocol is built upon the cryptographic\
    \ properties of CGA and HBA\n   addresses.  When the CGA address of a node is\
    \ used as the local ULID,\n   the locators configured in the node can be signed\
    \ with the private\n   key associated with the CGA.  A peer receiving a Shim6\
    \ message\n   performs a hash of the CGA Parameter Data Structure information\n\
    \   received, including a public key, to assure that this key is bound to\n  \
    \ the CGA address, and then checks the signature protecting the\n   locators.\
    \  When an HBA address of a node is used as the local ULID,\n   the HBA address\
    \ securely chains the ULID and other locators of the\n   node by means of a hash.\
    \  For both the CGA and the HBA, the locators\n   can be exchanged at the four-way\
    \ handshake used to establish the\n   Shim6 context, or once the context has been\
    \ established by means of\n   an Update Request message.\n   When a node behind\
    \ an NPTv6 communicates, the NAT device translates\n   the address assigned to\
    \ this internal node to an address of its\n   address pool.  This operation results\
    \ in a mismatch between the\n   address seen by external hosts and the address\
    \ configured in the\n   internal node, which is the locator that would be conveyed\
    \ in a Shim6\n   locator exchange and is also the address for which the security\n\
    \   defined in the CGA and HBA specifications are provided.  Then, the\n   validation\
    \ processes performed by an external node may prevent the\n   creation of the\
    \ Shim6 context, or may allow the context to be created\n   but render the alternative\
    \ locator of the internal host unusable.\n   However, note that the failure in\
    \ creating a Shim6 context, or in\n   using the alternative locators, does not\
    \ impact the communication\n   between the nodes as long as the path between them\
    \ defined by the\n   initial locator pair remains available.  Data packets flow\
    \ between\n   the communicating nodes as for any non-Shim6 communication.  Not\n\
    \   creating the Shim6 context, or not being able to convey the local\n   locators\
    \ to the peer node, affect the added value provided by Shim6,\n   i.e., the ability\
    \ to preserve the communication in case any of the\n   locators fail.  Therefore,\
    \ using Shim6 with NPTv6 does not provide\n   less functionality than using IPv6\
    \ in the same scenario.\n   We now illustrate some cases that may occur when combining\
    \ Shim6 and\n   NPTv6.  The following discussion does not aim to be exhaustive\
    \ in the\n   cases that may arise, but just aims to provide some examples of\n\
    \   possible situations.  We assume a scenario in which host A is located\n  \
    \ behind a NPTv6 device for its locator IP_A1, but it is connected to\n   the\
    \ public IPv6 Internet for its locator IP_A2.  Once translated,\n   locator IP_A1\
    \ appears to external nodes as IP_T.  Node A communicates\n   with node B, with\
    \ public addresses IP_B1 and IP_B2.\n                   +-----+\n            \
    \       |  A  |\n                   +-----+\n              IP_A1 |  | IP_A2\n\
    \                    |  |\n                    |  +-----+\n                  \
    \  |        |\n                +--------+   |\n                | NPTv6  |   |\n\
    \                +--------+   |\n               IP_T |        |\n            \
    \        |        |\n           +--------------------------+\n           |   \
    \      Internet         |\n           +--------------------------+\n         \
    \            |  |\n               IP_B1 |  | IP_B2\n                   +-----+\n\
    \                   |  B  |\n                   +-----+\n                   Figure\
    \ 4\n   We first discuss some issues related with the four-way handshake used\n\
    \   to establish the Shim6 context.  When the locator information is\n   included\
    \ in the Shim6 exchange, either in the I2 or R2 messages, the\n   receiver is\
    \ required to validate the ULID of the peer node by\n   performing the CGA or\
    \ HBA address validation procedure.  In case the\n   validation fails, the message\
    \ containing the information is silently\n   discarded.  In the scenario depicted\
    \ in Figure 4, some of the cases\n   that may occur are:\n   o  Node A initiates\
    \ the exchange, with IP_B1 as the destination\n      address and IP_A1 as the\
    \ source address, which is a CGA.  Node A\n      includes IP_A2 as an alternative\
    \ locator in the I2 message.  Node\n      B sees IP_T as the ULID for A, so when\
    \ it validates the CGA with\n      the information contained in I2, the validation\
    \ fails because the\n      CGA Parameter Data Structure contains information bound\
    \ to IP_A1.\n      Therefore, B silently discards the received I2 message.  Without\n\
    \      receiving a valid I2 message, B does not create the Shim6 context.\n  \
    \    Without receiving the R2 message, A also does not create the Shim6\n    \
    \  context.  However, data communication can proceed as long as the\n      path\
    \ between IP_A1 and IP_B1 is valid.  A similar case occurs if\n      IP_A1 and\
    \ IP_A2 form an HBA, instead of using CGAs for securing\n      the communication.\n\
    \   o  Node A initiates the exchange with IP_B1 as the destination\n      address\
    \ and IP_A2 (its public address) as the source address,\n      which is a CGA.\
    \  Node A includes IP_A1 as an alternative locator\n      in the I2 message. \
    \ In this case, B can successfully validate\n      IP_A2 as a CGA.  Regarding\
    \ the validation of IP_A1 as an\n      alternative locator for A, the Shim6 specification\
    \ [RFC5533]\n      indicates that it should perform this check when the I2 message\
    \ is\n      received, but it may perform it later on, provided that the check\n\
    \      is performed before using it as a locator.  In case the validation\n  \
    \    is performed when I2 is received, the I2 message would be silently\n    \
    \  discarded, with the same result as for the previous case.  In case\n      the\
    \ validation is performed later, the Shim6 context would be\n      established\
    \ in both nodes A and B, but B could not send to IP_A1,\n      and packets sent\
    \ by A from IP_A1 will not be received by B.  Note\n      that in this case both\
    \ IP_B1 and IP_B2 could be used by A and B,\n      as long as the locator for\
    \ A is IP_A2, so limited locator agility\n      may be achieved.\n   o  Node B\
    \ initiates the exchange with IP_B1 as the source address,\n      and IP_A2 as\
    \ the destination address, which is a CGA.  This case\n      is similar to the\
    \ previous one, although it is the R2 message sent\n      by A that cannot be\
    \ validated.  While A can create a context with\n      B, B cannot do the same\
    \ for A.  Data communication using IP_B1 and\n      IP_A2 can proceed.  However,\
    \ A may try to use IP_B2 as an\n      alternative locator, but the data packets\
    \ sent carrying the Shim6\n      Extension Header will not be associated by B\
    \ to any established\n      context, so they will be discarded.  The same occurs\
    \ for packets\n      sent by A with IP_A1 as the source address.\n   We can also\
    \ consider the case in which node A does not exchange its\n   own locators in\
    \ the Shim6 establishment exchange.  For example, a\n   Shim6 context can be established\
    \ between CGA IP_A2 and IP_B1.  B can\n   convey locator IP_B2 in the four-way\
    \ handshake, and validation will\n   be correctly done by A.  Later on, A may\
    \ send an Update Request\n   message to inform B about its locator IP_A1.  Validation\
    \ for this\n   message will fail in B, and B will send a Shim6 Error message to\
    \ A.\n   Neither A nor B will use IP_A1 as a locator.  However, IP_A2, IP_B1,\n\
    \   and IP_B2 can still be used as valid locators for the communication.\n   Finally,\
    \ note that modification of the Shim6 control packets by the\n   NPTv6 would not\
    \ be able to generate a valid signature when a CGA is\n   being used or a Parameter\
    \ Data Structure binding the translated\n   locator to the other locators of a\
    \ node when an HBA is being used.\n   Therefore, the same failure cases described\
    \ before would remain.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   This section considers the applicability of the\
    \ Shim6 protocol from a\n   security perspective, i.e., which security features\
    \ can be expected\n   by applications and users of the Shim6 protocol.\n   First\
    \ of all, it should be noted that the Shim6 protocol is not a\n   security protocol,\
    \ unlike HIP, for instance.  This means that, as\n   opposed to HIP, it is an\
    \ explicit non-goal of the Shim6 protocol to\n   provide enhanced security for\
    \ the communications that use the Shim6\n   protocol.  The goal of the Shim6 protocol\
    \ design, in terms of\n   security, is not to introduce new vulnerabilities that\
    \ were not\n   present in the current non-Shim6 enabled communications.  In\n\
    \   particular, it is an explicit non-goal of Shim6 protocol security to\n   provide\
    \ protection from on-path attackers.  On-path attackers are\n   able to sniff\
    \ and spoof packets in the current Internet, and they are\n   able to do the same\
    \ in Shim6 communications (as long as the\n   communication flows through the\
    \ path on which they are located).\n   Summarizing, the Shim6 protocol does not\
    \ provide data packet\n   protection from on-path attackers.\n   However, the\
    \ Shim6 protocol does use several security techniques.\n   The goal of these security\
    \ measures is to protect the Shim6 signaling\n   protocol from new attacks resulting\
    \ from the adoption of the Shim6\n   protocol.  In particular, the use of HBA/CGA\
    \ prevents on-path and\n   off-path attackers from injecting new locators into\
    \ the locator set\n   of a Shim6 context, thus preventing redirection attacks\
    \ [RFC4218].\n   Moreover, the usage of probes before re-homing to a different\
    \ locator\n   as a destination address prevents flooding attacks from off-path\n\
    \   attackers.  Note that for nodes using CGA addresses, security depends\n  \
    \ on the secure handling of the private key associated with the\n   signature\
    \ and validation of locators.  In particular, any address\n   configuration method\
    \ must assure that the private key remains secret,\n   as discussed in Section\
    \ 3.3.\n   In addition, the usage of a 4-way handshake for establishing the\n\
    \   Shim6 context protects against DoS attacks, so hosts implementing the\n  \
    \ Shim6 protocol should not be more vulnerable to DoS attacks than\n   regular\
    \ IPv6 hosts.\n   Finally, many Shim6 signaling messages contain a Context Tag,\
    \ meaning\n   that only attackers that know the Context Tag can forge them.  As\
    \ a\n   consequence, only on-path attackers can generate false Shim6\n   signaling\
    \ packets for an established context.  The impact of these\n   attacks would be\
    \ limited since they would not be able to add\n   additional locators to the locator\
    \ set (because of the HBA/CGA\n   protection).  In general, the possible attacks\
    \ have similar effects\n   to the ones that an on-path attacker can launch on\
    \ any regular IPv6\n   communication.  The residual threats are described in the\
    \ Security\n   Considerations of the Shim6 protocol specification [RFC5533].\n"
- title: 8.1.  Privacy Considerations
  contents:
  - "8.1.  Privacy Considerations\n   The Shim6 protocol is designed to provide some\
    \ basic privacy\n   features.  In particular, HBAs are generated in such a way\
    \ that the\n   different addresses assigned to a host cannot be trivially linked\n\
    \   together as belonging to the same host, since there is nothing in\n   common\
    \ in the addresses themselves.  Similar features are provided\n   when the CGA\
    \ protection is used.  This means that it is not trivial\n   to determine that\
    \ a set of addresses is assigned to a single Shim6\n   host.\n   However, the\
    \ Shim6 protocol does exchange the locator set in clear\n   text, and it also\
    \ uses a fixed Context Tag when using different\n   locators in a given context.\
    \  This implies that an attacker observing\n   the Shim6 context establishment\
    \ exchange or seeing different payload\n   packets exchanged through different\
    \ locators, but with the same\n   Context Tag, can determine the set of addresses\
    \ assigned to a host.\n   However, this requires that the attacker be located\
    \ along the path\n   and can capture the Shim6 signaling packets.\n"
- title: 9.  Contributors
  contents:
  - "9.  Contributors\n   The analysis on the interaction between the Shim6 protocol\
    \ and the\n   other protocols presented in this note benefited from the advice\
    \ of\n   various people including Tom Henderson, Erik Nordmark, Hesham\n   Soliman,\
    \ Vijay Devarpalli, John Loughney, and Dave Thaler.\n"
- title: 10.  Acknowledgements
  contents:
  - "10.  Acknowledgements\n   Joe Abley's work was supported, in part, by the US\
    \ National Science\n   Foundation (research grant SCI-0427144) and DNS-OARC.\n\
    \   Marcelo Bagnulo worked on this document while visiting Ericsson\n   Research\
    \ Laboratory Nomadiclab.\n   Alberto Garcia-Martinez was supported, in part, by\
    \ the eeCONTET\n   project (TEC2011-29688-C02-02, granted by the Spanish Science\
    \ and\n   Innovation Ministry).\n   Shinta Sugimoto reviewed this document and\
    \ provided comments and\n   text.\n   Brian Carpenter, Jari Arkko, Joel Halpern,\
    \ Iljitsch van Beijnum, Sam\n   Xia, Carsten Bormann, Dan Wing, Stephen Farrell,\
    \ and Stewart Bryant\n   reviewed this document and provided comments.\n"
- title: 11.  References
  contents:
  - '11.  References

    '
- title: 11.1.  Normative References
  contents:
  - "11.1.  Normative References\n   [RFC2827]    Ferguson, P. and D. Senie, \"Network\
    \ Ingress Filtering:\n                Defeating Denial of Service Attacks which\
    \ employ IP\n                Source Address Spoofing\", BCP 38, RFC 2827, May\
    \ 2000.\n   [RFC3315]    Droms, R., Ed., Bound, J., Volz, B., Lemon, T., Perkins,\n\
    \                C., and M. Carney, \"Dynamic Host Configuration Protocol\n  \
    \              for IPv6 (DHCPv6)\", RFC 3315, July 2003.\n   [RFC3484]    Draves,\
    \ R., \"Default Address Selection for Internet\n                Protocol version\
    \ 6 (IPv6)\", RFC 3484, February 2003.\n   [RFC3963]    Devarapalli, V., Wakikawa,\
    \ R., Petrescu, A., and P.\n                Thubert, \"Network Mobility (NEMO)\
    \ Basic Support\n                Protocol\", RFC 3963, January 2005.\n   [RFC3971]\
    \    Arkko, J., Ed., Kempf, J., Zill, B., and P. Nikander,\n                \"\
    SEcure Neighbor Discovery (SEND)\", RFC 3971, March\n                2005.\n \
    \  [RFC3972]    Aura, T., \"Cryptographically Generated Addresses (CGA)\",\n \
    \               RFC 3972, March 2005.\n   [RFC4291]    Hinden, R. and S. Deering,\
    \ \"IP Version 6 Addressing\n                Architecture\", RFC 4291, February\
    \ 2006.\n   [RFC4423]    Moskowitz, R. and P. Nikander, \"Host Identity Protocol\n\
    \                (HIP) Architecture\", RFC 4423, May 2006.\n   [RFC4861]    Narten,\
    \ T., Nordmark, E., Simpson, W., and H. Soliman,\n                \"Neighbor Discovery\
    \ for IP version 6 (IPv6)\", RFC 4861,\n                September 2007.\n   [RFC4862]\
    \    Thomson, S., Narten, T., and T. Jinmei, \"IPv6 Stateless\n              \
    \  Address Autoconfiguration\", RFC 4862, September 2007.\n   [RFC4960]    Stewart,\
    \ R., Ed., \"Stream Control Transmission\n                Protocol\", RFC 4960,\
    \ September 2007.\n   [RFC5201]    Moskowitz, R., Nikander, P., Jokela, P., Ed.,\
    \ and T.\n                Henderson, \"Host Identity Protocol\", RFC 5201, April\n\
    \                2008.\n   [RFC5533]    Nordmark, E. and M. Bagnulo, \"Shim6:\
    \ Level 3 Multihoming\n                Shim Protocol for IPv6\", RFC 5533, June\
    \ 2009.\n   [RFC5534]    Arkko, J. and I. van Beijnum, \"Failure Detection and\n\
    \                Locator Pair Exploration Protocol for IPv6 Multihoming\",\n \
    \               RFC 5534, June 2009.\n   [RFC5535]    Bagnulo, M., \"Hash-Based\
    \ Addresses (HBA)\", RFC 5535,\n                June 2009.\n   [RFC6146]    Bagnulo,\
    \ M., Matthews, P., and I. van Beijnum, \"Stateful\n                NAT64: Network\
    \ Address and Protocol Translation from\n                IPv6 Clients to IPv4\
    \ Servers\", RFC 6146, April 2011.\n   [RFC6182]    Ford, A., Raiciu, C., Handley,\
    \ M., Barre, S., and J.\n                Iyengar, \"Architectural Guidelines for\
    \ Multipath TCP\n                Development\", RFC 6182, March 2011.\n   [RFC6275]\
    \    Perkins, C., Ed., Johnson, D., and J. Arkko, \"Mobility\n               \
    \ Support in IPv6\", RFC 6275, July 2011.\n   [RFC6316]    Komu, M., Bagnulo,\
    \ M., Slavov, K., and S. Sugimoto, Ed.,\n                \"Sockets Application\
    \ Program Interface (API) for\n                Multihoming Shim\", RFC 6316, July\
    \ 2011.\n"
- title: 11.2.  Informative References
  contents:
  - "11.2.  Informative References\n   [6MAN]       Matsumoto, A., Fujisaki, T., Kato,\
    \ J., and T. Chown,\n                \"Distributing Address Selection Policy using\
    \ DHCPv6\",\n                Work in Progress, February 2012.\n   [DHCPv6-CGA]\
    \ Jiang, S. and S. Shen, \"Analysis of Possible DHCPv6 and\n                CGA\
    \ Interactions\", Work in Progress, March 2012.\n   [IPv6NAT]    Matsushima, S.,\
    \ Okimoto, T., Troan, O., Miles, D., and\n                D.  Wing, \"IPv6 Multihoming\
    \ without Network Address\n                Translation\", Work in Progress, February\
    \ 2012.\n   [RFC3221]    Huston, G., \"Commentary on Inter-Domain Routing in the\n\
    \                Internet\", RFC 3221, December 2001.\n   [RFC3582]    Abley,\
    \ J., Black, B., and V. Gill, \"Goals for IPv6 Site-\n                Multihoming\
    \ Architectures\", RFC 3582, August 2003.\n   [RFC4116]    Abley, J., Lindqvist,\
    \ K., Davies, E., Black, B., and V.\n                Gill, \"IPv4 Multihoming\
    \ Practices and Limitations\", RFC\n                4116, July 2005.\n   [RFC4191]\
    \    Draves, R. and D. Thaler, \"Default Router Preferences\n                and\
    \ More-Specific Routes\", RFC 4191, November 2005.\n   [RFC4218]    Nordmark,\
    \ E. and T. Li, \"Threats Relating to IPv6\n                Multihoming Solutions\"\
    , RFC 4218, October 2005.\n   [RFC4864]    Van de Velde, G., Hain, T., Droms,\
    \ R., Carpenter, B.,\n                and E. Klein, \"Local Network Protection\
    \ for IPv6\", RFC\n                4864, May 2007.\n   [RFC4984]    Meyer, D.,\
    \ Ed., Zhang, L., Ed., and K. Fall, Ed.,\n                \"Report from the IAB\
    \ Workshop on Routing and\n                Addressing\", RFC 4984, September 2007.\n\
    \   [RFC5220]    Matsumoto, A., Fujisaki, T., Hiromi, R., and K.\n           \
    \     Kanayama, \"Problem Statement for Default Address\n                Selection\
    \ in Multi-Prefix Environments: Operational\n                Issues of RFC 3484\
    \ Default Rules\", RFC 5220, July 2008.\n   [RFC5902]    Thaler, D., Zhang, L.,\
    \ and G. Lebovitz, \"IAB Thoughts on\n                IPv6 Network Address Translation\"\
    , RFC 5902, July 2010.\n   [RFC6296]    Wasserman, M. and F. Baker, \"IPv6-to-IPv6\
    \ Network Prefix\n                Translation\", RFC 6296, June 2011.\n   [RFC6418]\
    \    Blanchet, M. and P. Seite, \"Multiple Interfaces and\n                Provisioning\
    \ Domains Problem Statement\", RFC 6418,\n                November 2011.\n   [SHIM6-ESD]\
    \  Nordmark, E., \"Extended Shim6 Design for ID/loc split\n                and\
    \ Traffic Engineering\", Work in Progress, February\n                2008.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Joe Abley\n   ICANN\n   12025 Waterfront Drive\n   Suite\
    \ 300\n   Los Angeles, CA 90094\n   USA\n   Phone: +1 519 670 9327\n   EMail:\
    \ joe.abley@icann.org\n   Marcelo Bagnulo\n   U. Carlos III de Madrid\n   Av.\
    \ Universidad 30\n   Leganes, Madrid  28911\n   Spain\n   Phone: +34 91 6248814\n\
    \   EMail: marcelo@it.uc3m.es\n   URI:   http://www.it.uc3m.es/\n   Alberto Garcia-Martinez\n\
    \   U. Carlos III de Madrid\n   Av. Universidad 30\n   Leganes, Madrid  28911\n\
    \   Spain\n   Phone: +34 91 6248782\n   EMail: alberto@it.uc3m.es\n   URI:   http://www.it.uc3m.es/\n"
