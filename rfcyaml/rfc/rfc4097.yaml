- title: __initial_text__
  contents:
  - '        Middlebox Communications (MIDCOM) Protocol Evaluation

    '
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides an evaluation of the applicability of SNMP\n\
    \   (Simple Network Management Protocol), RSIP (Realm Specific Internet\n   Protocol),\
    \ Megaco, Diameter, and COPS (Common Open Policy Service) as\n   the MIDCOM (Middlebox\
    \ Communications) protocol.  A summary of each of\n   the proposed protocols against\
    \ the MIDCOM requirements and the MIDCOM\n   framework is provided.  Compliancy\
    \ of each of the protocols against\n   each requirement is detailed.  A conclusion\
    \ summarizes how each of\n   the protocols fares in the evaluation.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   Overview..........................................................\
    \  2\n   Conventions Used in This Document.................................  3\n\
    \   1.  Protocol Proposals............................................  3\n  \
    \     1.1.  SNMP....................................................  3\n    \
    \   1.2.  RSIP....................................................  5\n      \
    \ 1.3.  Megaco..................................................  7\n       1.4.\
    \  Diameter................................................  8\n       1.5.  COPS....................................................\
    \ 10\n   2.  Item Level Compliance Evaluation.............................. 11\n\
    \       2.1.  Protocol Machinery...................................... 11\n  \
    \     2.2.  Protocol Semantics...................................... 20\n    \
    \   2.3.  General Security Requirements........................... 27\n   3. \
    \ Conclusions................................................... 29\n   4.  Security\
    \ Considerations....................................... 30\n   5.  References....................................................\
    \ 31\n       5.1.  Normative References.................................... 31\n\
    \       5.2.  Informative References.................................. 33\n  \
    \ 6.  Acknowledgements.............................................. 33\n   Appendix\
    \ A - SNMP Overview........................................ 34\n   Appendix B\
    \ - RSIP with Tunneling.................................. 35\n   Appendix C -\
    \ Megaco Modeling Approach............................. 37\n   Appendix D - Diameter\
    \ IPFilter Rule............................... 39\n   Contributors .....................................................\
    \ 42\n"
- title: Overview
  contents:
  - "Overview\n   This document provides an evaluation of the applicability of SNMP\n\
    \   (Simple Network Management Protocol), RSIP (Realm Specific Internet\n   Protocol),\
    \ Megaco, Diameter and COPS (Common Open Policy Service) as\n   the MIDCOM (Middlebox\
    \ Communications) protocol.  This evaluation\n   provides overviews of the protocols\
    \ and general statements of\n   applicability based upon the MIDCOM framework\
    \ [2] and requirements\n   [1] documents.\n   The process for the protocol evaluation\
    \ was fairly straightforward as\n   individuals volunteered to provide an individual\
    \ document evaluating\n   a specific protocol.  Thus, some protocols that might\
    \ be considered\n   as reasonably applicable as the MIDCOM protocol are not evaluated\
    \ in\n   this document since there were no volunteers to champion the work.\n\
    \   The individual protocol documents for which there were volunteers\n   were\
    \ submitted for discussion on the list with feedback being\n   incorporated into\
    \ an updated document.  The updated versions of these\n   documents formed the\
    \ basis for the content of this WG document.\n   Section 1 contains a list of\
    \ the proposed protocols submitted for the\n   purposes of the protocol evaluation\
    \ with some background information\n   on the protocols and similarities and differences\
    \ with regards to the\n   applicability to the framework [2] provided.\n   Section\
    \ 2 provides the item level evaluation of the proposed\n   protocols against the\
    \ Requirements [1].\n   Section 3 provides a summary of the evaluation.  A table\
    \ containing a\n   numerical breakdown for each of the protocols, with regards\
    \ to its\n   applicability to the requirements, for the following categories is\n\
    \   provided: Fully met, Partially met through the use of extensions,\n   Partially\
    \ met through other changes to the protocol, or Failing to be\n   met.  This summary\
    \ is not meant to provide a conclusive statement of\n   the suitability of the\
    \ protocols, but rather to provide information\n   to be considered as input into\
    \ the overall protocol decision process.\n   In order for this document to serve\
    \ as a complete evaluation of the\n   protocols, some of the background information\
    \ and more detailed\n   aspects of the proposals documenting enhancements and\
    \ applications of\n   the protocols to comply with the MIDCOM framework and requirements\n\
    \   are included in Appendices.\n"
- title: Conventions Used in this Document
  contents:
  - "Conventions Used in this Document\n   The key words \"MUST\", \"MUST NOT\", \"\
    REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\"\
    , \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in BCP 14, RFC 2119 [4].\n"
- title: 1.  Protocol Proposals
  contents:
  - "1.  Protocol Proposals\n   The following protocols were submitted to the MIDCOM\
    \ WG for\n   consideration:\n   o  SNMP\n   o  RSIP\n   o  Megaco\n   o  Diameter\n\
    \   o  COPS\n   The following provides an overview of each of the protocols and\
    \ the\n   applicability of each protocol to the MIDCOM framework.\n"
- title: 1.1.  SNMP
  contents:
  - "1.1.  SNMP\n   This section provides a general statement with regards to the\n\
    \   applicability of SNMP as the MIDCOM protocol.  A general overview and\n  \
    \ some specific details of SNMP are provided in Appendix A.  This\n   evaluation\
    \ of SNMP is specific to SNMPv3, which provides the security\n   required for\
    \ MIDCOM usage.  SNMPv1 and SNMPv2c would be inappropriate\n   for MIDCOM since\
    \ they have been declared Historic, and because their\n   messages have only trivial\
    \ security.  Some specifics with regards to\n   existing support for NAT and Firewall\
    \ Control are provided in section\n   1.1.2.  The differences between the SNMP\
    \ framework and the MIDCOM\n   framework are addressed in section 1.1.3.\n"
- title: 1.1.1.  SNMP General Applicability
  contents:
  - "1.1.1.  SNMP General Applicability\n   The primary advantages of SNMPv3 are that\
    \ it is a mature, well\n   understood protocol, currently deployed in various\
    \ scenarios, with\n   mature toolsets available for SNMP managers and agents.\n\
    \   Application intelligence is captured in MIB modules, rather than in\n   the\
    \ messaging protocol.  MIB modules define a data model of the\n   information\
    \ that can be collected and configured for a managed\n   functionality.  The SNMP\
    \ messaging protocol transports the data in a\n   standardized format without\
    \ needing to understand the semantics of\n   the data being transferred.  The\
    \ endpoints of the communication\n   understand the semantics of the data.\n \
    \  Partly due to the lack of security in SNMPv1 and SNMPv2c, and partly\n   due\
    \ to variations in configuration requirements across vendors, few\n   MIB modules\
    \ have been developed that enable standardized\n   configuration of managed devices\
    \ across vendors.  Since monitoring\n   can be done using only a least-common-denominator\
    \ subset of\n   information across vendors, many MIB modules have been developed\
    \ to\n   provide standardized monitoring of managed devices.  As a result,\n \
    \  SNMP has been used primarily for monitoring rather than for\n   configuring\
    \ network nodes.\n   SNMPv3 builds upon the design of widely-deployed SNMPv1 and\
    \ SNMPv2c\n   versions.  Specifically, SNMPv3 shares the separation of data\n\
    \   modeling (MIBs) from the protocol to transfer data, so all existing\n   MIBs\
    \ can be used with SNMPv3.  SNMPv3 also uses the SMIv2 standard,\n   and it shares\
    \ operations and transport with SNMPv2c.  The major\n   difference between SNMPv3\
    \ and earlier versions is the addition of\n   strong message security and controlled\
    \ access to data.\n   SNMPv3 uses the architecture detailed in RFC 3411 [5], where\
    \ all SNMP\n   entities are capable of performing certain functions, such as the\n\
    \   generation of requests, response to requests, the generation of\n   asynchronous\
    \ notifications, the receipt of notifications, and the\n   proxy-forwarding of\
    \ SNMP messages.  SNMP is used to read and\n   manipulate virtual databases of\
    \ managed-application-specific\n   operational parameters and statistics, which\
    \ are defined in MIB\n   modules.\n"
- title: 1.1.2.  SNMP Existing Support for NAT and Firewall Control
  contents:
  - "1.1.2.  SNMP Existing Support for NAT and Firewall Control\n   For configuring\
    \ NATs, a NAT MIB module [16] has been developed.  The\n   NAT MIB module meets\
    \ all of the MIDCOM requirements concerning NAT\n   control with the exception\
    \ of grouping of policy rules (requirement\n   2.2.3.).  In order to support this,\
    \ an additional grouping table in\n   the NAT MIB module is required.\n   Existing\
    \ work for firewall control with SNMP only considered the\n   monitoring of firewalls\
    \ and not the configuration.  Further work is\n   required towards the development\
    \ of MIBs for configuring firewalls.\n"
- title: 1.1.3.  Architectural Differences between SNMP and MIDCOM
  contents:
  - "1.1.3.  Architectural Differences between SNMP and MIDCOM\n   The SNMP management\
    \ framework provides functions equivalent to those\n   defined by the MIDCOM framework,\
    \ although there are a few\n   architectural differences.\n   Traditionally, SNMP\
    \ entities have been called Manager and Agent.\n   Manager and agent are now recognized\
    \ as entities designed to support\n   particular configurations of SNMPv3 functions.\
    \  A traditional manager\n   is an entity capable of generating requests and receiving\n\
    \   notifications, and a traditional agent is an entity capable of\n   responding\
    \ to requests and generating notifications.  The SNMP use of\n   the term agent\
    \ is different from its use in the MIDCOM framework: The\n   SNMP Manager corresponds\
    \ to the MIDCOM agent and the SNMP Agent\n   corresponds to the MIDCOM PDP.  The\
    \ SNMP evaluation assumes that the\n   MIDCOM PDP (SNMP Agent) is physically part\
    \ of the middlebox, which is\n   allowed by the MIDCOM framework as described\
    \ in section 6.0 of [2].\n   Thus, for the purpose of this evaluation, the SNMP\
    \ agent corresponds\n   to the Middlebox.\n   While this evaluation is based on\
    \ the assumption that the SNMP agent\n   corresponds to the middlebox, SNMP does\
    \ not force such a restriction.\n   Proxy means many things to many people.  SNMP\
    \ can be deployed using\n   intermediate entities to forward messages, or to help\
    \ distribute\n   policies to the middlebox, similar to the proxy capabilities\
    \ of the\n   other candidate protocols.  Since proxy adds configuration and\n\
    \   deployment complexity and is not necessary to meet the specified\n   MIDCOM\
    \ requirements, the use of a proxy agent or mid-level manager is\n   not considered\
    \ in this evaluation.  Further details on SNMP proxy\n   capabilities are provided\
    \ in Appendix A.\n   Although the SNMP management framework does not have the\
    \ concept of a\n   session, session-like associations can be established through\
    \ the use\n   of managed objects.  In order to implement the MIDCOM protocol based\n\
    \   on SNMP, a MIDCOM MIB module is required.  All requests from the\n   MIDCOM\
    \ agent to the Middlebox would be performed using write access\n   to managed\
    \ objects defined in the MIDCOM MIB module.  Replies to\n   requests are signaled\
    \ by the Middlebox (SNMP agent), by modifying the\n   managed objects.  The MIDCOM\
    \ agent (SNMP manager) can receive this\n   information by reading or polling,\
    \ if required, the corresponding\n   managed object.\n"
- title: 1.2.  RSIP
  contents:
  - "1.2.  RSIP\n   The RSIP framework and detailed protocol are defined in RFC 3102\
    \ [17]\n   and RFC 3103 [18] respectively.\n"
- title: 1.2.1.  Framework Elements in Common to MIDCOM and RSIP
  contents:
  - "1.2.1.  Framework Elements in Common to MIDCOM and RSIP\n   The following framework\
    \ elements are common to MIDCOM and RSIP listed\n   by their MIDCOM names, with\
    \ the RSIP name indicated in parenthesis:\n   o  Hosts\n   o  Applications\n \
    \  o  Middleboxes (RSIP gateways)\n   o  Private domain (private realm)\n   o\
    \  External domain (public realm)\n   o  Middlebox communication protocol (RSIP)\n\
    \   o  MIDCOM agent registration (host registration)\n   o  MIDCOM session (RSIP\
    \ session)\n   o  MIDCOM Filter (local / remote address and port number(s) pairs)\n"
- title: 1.2.2.  MIDCOM Framework Elements Not Supported by RSIP
  contents:
  - "1.2.2.  MIDCOM Framework Elements Not Supported by RSIP\n   The following MIDCOM\
    \ framework elements are not supported by RSIP:\n   o  Policy actions and rules.\
    \  RSIP always implicitly assumes a permit\n      action.  To support MIDCOM,\
    \ a more general and explicit action\n      parameter would have to be defined.\
    \  RSIP requests specifying\n      local / remote address and port number(s) pairs\
    \ would have to be\n      extended to include an action parameter, in MIDCOM rules.\n\
    \   o  MIDCOM agents.  RSIP makes no distinction between applications and\n  \
    \    agents; address assignment operations can be performed equally by\n     \
    \ applications and agents.\n   o  Policy Decision Points.  RSIP assumes that middleboxes\
    \ grant or\n      deny requests with reference to a policy known to them; the\
    \ policy\n      could be determined jointly by the middlebox and a policy decision\n\
    \      point; such joint determination is not addressed by the RSIP\n      framework,\
    \ nor is it specifically precluded.\n"
- title: 1.2.3.  RSIP Framework Elements Not Supported by MIDCOM
  contents:
  - "1.2.3.  RSIP Framework Elements Not Supported by MIDCOM\n   The following elements\
    \ are unique to the RSIP framework.  If RSIP\n   were adopted as the basis for\
    \ the MIDCOM protocol, they could be\n   added to the MIDCOM framework:\n   o\
    \  RSIP client: that portion of the application (or agent) that talks\n      to\
    \ the RSIP gateway using RSIP.\n   o  RSIP server: that portion of an RSIP gateway\
    \ that talks to\n      applications using RSIP.\n   o  Realm Specific Address\
    \ IP (RSA-IP) and Realm Specific Address and\n      Port IP (RSAP-IP): RSIP distinguishes\
    \ between filters that include\n      all ports on an IP address and those that\
    \ do not.\n   o  Demultiplexing Fields: Any set of packet header or payload fields\n\
    \      that an RSIP gateway uses to route an incoming packet to an RSIP\n    \
    \  host.  RSIP allows a gateway to perform, and an application to\n      control,\
    \ packet routing to hosts in the private domain based on\n      more than IP header\
    \ fields.\n   o  Host-to-middlebox tunnels: RSIP assumes that data communicated\n\
    \      between a private realm host and a public realm host is\n      transferred\
    \ through the private realm by a tunnel between the\n      inner host and the\
    \ middle box, where it is converted to and from\n      native IP based communications\
    \ to the public realm host.\n"
- title: 1.2.4.  Comparison of MIDCOM and RSIP Frameworks
  contents:
  - "1.2.4.  Comparison of MIDCOM and RSIP Frameworks\n   RSIP with tunneling, has\
    \ the advantage that the public realm IP\n   addresses and port numbers are known\
    \ to the private realm host\n   application, thus no translation is needed for\
    \ protocols such as SDP,\n   the FTP control protocol, RTSP, SMIL, etc.  However,\
    \ this does\n   require that an RSIP server and a tunneling protocol be implemented\n\
    \   in the middlebox and an RSIP client and the tunneling protocol be\n   implemented\
    \ in the private realm host.  The host modifications can\n   generally be made\
    \ without modification to the host application or\n   requiring the implementation\
    \ of a host application agent.  This is\n   viewed as a significant advantage\
    \ over NAT (Network Address\n   Translation).\n   Further details on the evaluation\
    \ of RSIP with regards to tunneling\n   in the context of NAT support are available\
    \ in Appendix B of this\n   document.\n"
- title: 1.3.  Megaco
  contents:
  - '1.3.  Megaco

    '
- title: 1.3.1.  Megaco Architectural Model
  contents:
  - "1.3.1.  Megaco Architectural Model\n   Megaco is a master-slave, transaction-oriented\
    \ protocol defined in\n   RFC 3015 [20] in which Media Gateway Controllers (MGC)\
    \ control the\n   operation of Media Gateways (MG).  Originally designed to control\
    \ IP\n   Telephony gateways, it is used between an application-unaware device\n\
    \   (the Media Gateway) and an intelligent entity (the Media Gateway\n   Controller)\
    \ having application awareness.\n   The Megaco model includes the following key\
    \ concepts:\n   1. Terminations: Logical entities on the MG that act as sources\
    \ or\n      sink of packet streams.  A termination can be physical or\n      ephemeral\
    \ and is associated with a single MGC.\n   2. Context: An association between\
    \ Terminations for sharing media\n      between the Terminations.  Terminations\
    \ can be added, subtracted\n      from a Context and can be moved from one Context\
    \ to another.  A\n      Context and all of its Terminations are associated with\
    \ a single\n      MGC.\n   3. Virtual Media Gateways: A physical MG can be partitioned\
    \ into\n      multiple virtual MGs allowing multiple Controllers to interact\n\
    \      with disjoint sets of Contexts/Terminations within a single\n      physical\
    \ device.\n   4. Transactions/Messages: Each Megaco command applies to one\n \
    \     Termination within a Context and generates a unique response.\n      Commands\
    \ may be replicated implicitly so that they act on all\n      Terminations of\
    \ a given Context through wildcarding of Termination\n      identifiers.  Multiple\
    \ commands addressed to different Contexts\n      can be grouped in a Transaction\
    \ structure.  Similarly, multiple\n      Transactions can be concatenated into\
    \ a Message.\n   5. Descriptors/Properties: A Termination is described by a number\
    \ of\n      characterizing parameters or Properties, which are grouped in a\n\
    \      set of Descriptors that are included in commands and responses.\n   6.\
    \ Events and signals: A Termination can be programmed to perform\n      certain\
    \ actions or to detect certain events and notify the Agent.\n   7. Packages: Packages\
    \ are groups of properties, events, etc.\n      associated with a Termination.\
    \  Packages are simple means of\n      extending the protocol to serve various\
    \ types of devices or\n      Middleboxes.\n"
- title: 1.3.2.  Comparison of the Megaco and MIDCOM Architectural Frameworks
  contents:
  - "1.3.2.  Comparison of the Megaco and MIDCOM Architectural Frameworks\n   In the\
    \ MIDCOM architecture, the Middlebox plays the role of an\n   application-unaware\
    \ device being controlled by the application-aware\n   Agent.  In the Megaco architecture,\
    \ the Media Gateway controller\n   serves a role similar to the MIDCOM Agent (MA)\
    \ and the Media Gateway\n   serves a role similar to the Middlebox (MB).  One\
    \ major difference\n   between the Megaco model and the MIDCOM protocol requirements\
    \ is that\n   MIDCOM requires that the MIDCOM Agent establish the session.\n \
    \  Whereas, the Megaco definition is that a MG (Middlebox) establishes\n   communication\
    \ with an MGC (MIDCOM Agent).\n"
- title: 1.4.  Diameter
  contents:
  - '1.4.  Diameter

    '
- title: 1.4.1.  Diameter Architecture
  contents:
  - "1.4.1.  Diameter Architecture\n   Diameter is designed to support AAA for network\
    \ access.  It is meant\n   to operate through networks of Diameter nodes, which\
    \ both act upon\n   and route messages toward their final destinations.  Endpoints\
    \ are\n   characterized as either clients, which perform network access\n   control,\
    \ or servers, which handle authentication, authorization and\n   accounting requests\
    \ for a particular realm.  Intermediate nodes\n   perform relay, proxy, redirect,\
    \ and translation services.  Design\n   requirements for the protocol include\
    \ robustness in the face of\n   bursty message loads and server failures, resistance\
    \ to specific DOS\n   attacks and protection of message contents, and extensibility\n\
    \   including support for vendor-specific attributes and message types.\n   The\
    \ protocol is designed as a base protocol in RFC 3588 [24] to be\n   supported\
    \ by all implementations, plus extensions devoted to specific\n   applications.\
    \  Messages consist of a header and an aggregation of\n   \"Attribute-Value Pairs\
    \ (AVPs)\", each of which is a tag-length-value\n   construct.  The header includes\
    \ a command code, which determines the\n   processing of the message and what\
    \ other AVP types must or may be\n   present.  AVPs are strongly typed.  Some\
    \ basic and compound types are\n   provided by the base protocol specification,\
    \ while others may be\n   added by application extensions.  One of the types provided\
    \ in the\n   base is the IPFilterRule, which may be sufficient to express the\n\
    \   Policy Rules that MIDCOM deals with.\n   Messaging takes the form of request-answer\
    \ exchanges.  Some exchanges\n   may take multiple round-trips to complete.  The\
    \ protocol is\n   connection-oriented at both the transport and application levels.\
    \  In\n   addition, the protocol is tied closely to the idea of sessions, which\n\
    \   relate sequences of message exchanges through use of a common session\n  \
    \ identifier.  Each application provides its own definition of the\n   semantics\
    \ of a session.  Multiple sessions may be open\n   simultaneously.\n"
- title: 1.4.2.  Comparison of Diameter With MIDCOM Architectural Requirements
  contents:
  - "1.4.2.  Comparison of Diameter With MIDCOM Architectural Requirements\n   The\
    \ MIDCOM Agent does not perform the functions of a Diameter client,\n   nor does\
    \ the Middlebox support the functions of a Diameter server.\n   Thus the MIDCOM\
    \ application would introduce two new types of\n   endpoints into the Diameter\
    \ architecture.  Moreover, the MIDCOM\n   requirements do not at this time imply\
    \ any type of intermediate node.\n   A general assessment might be that Diameter\
    \ meets and exceeds MIDCOM\n   architectural requirements, however the connection\
    \ orientation may be\n   too heavy for the number of relationships the Middlebox\
    \ must support.\n   Certainly the focus on extensibility, request-response messaging\n\
    \   orientation, and treatment of the session, are all well-matched to\n   what\
    \ MIDCOM needs.  At this point, MIDCOM is focused on simple\n   point-to-point\
    \ relationships, so the proxying and forwarding\n   capabilities provided by Diameter\
    \ are not needed.  Most of the\n   commands and AVPs defined in the base protocol\
    \ are also surplus to\n   MIDCOM requirements.\n"
- title: 1.5.  COPS
  contents:
  - "1.5.  COPS\n   Overall, COPS, defined in RFC 2748 [25], and COPS-PR, defined\
    \ in RFC\n   3084 [26], have similar compliancy with regards to the MIDCOM\n \
    \  protocol requirements.  In this document, references to COPS are\n   generally\
    \ applicable to both COPS and COPS-PR.  However, COPS-PR is\n   explicitly identified\
    \ to meet two of the requirements.  The only\n   other major difference between\
    \ COPS-PR and COPS, as applied to the\n   MIDCOM protocol, would be the description\
    \ of the MIDCOM policy rule\n   attributes with COPS-PR MIDCOM PIB attributes\
    \ rather than COPS MIDCOM\n   client specific objects.\n"
- title: 1.5.1.  COPS Protocol Architecture
  contents:
  - "1.5.1.  COPS Protocol Architecture\n   COPS is a simple query and response protocol\
    \ that can be used to\n   exchange policy information between a policy server\
    \ (Policy Decision\n   Point or PDP) and its clients (Policy Enforcement Points\
    \ or PEPs).\n   COPS was defined to be a simple and extensible protocol.  The\
    \ main\n   characteristics of COPS include the following:\n   1. The protocol\
    \ employs a client/server model.  The PEP sends\n      requests, updates, and\
    \ deletions to the remote PDP and the PDP\n      returns decisions back to the\
    \ PEP.\n   2. The protocol uses TCP as its transport protocol for reliable\n \
    \     exchange of messages between policy clients and a server.\n   3. The protocol\
    \ is extensible in that it is designed to leverage\n      self-identifying objects\
    \ and can support diverse client specific\n      information without requiring\
    \ modification of the COPS protocol.\n   4. The protocol was created for the general\
    \ administration,\n      configuration, and enforcement of policies.\n   5. COPS\
    \ provides message level security for authentication, replay\n      protection,\
    \ and message integrity.  COPS can make use of existing\n      protocols for security\
    \ such as IPSEC [22] or TLS [21] to\n      authenticate and secure the channel\
    \ between the PEP and the PDP.\n   6. The protocol is stateful in two main aspects:\n\
    \     (1) Request/Decision state is shared and kept synchronized in a\n      \
    \   transactional manner between client and server.  Requests from\n         the\
    \ client PEP are installed or remembered by the remote PDP\n         until they\
    \ are explicitly deleted by the PEP.  At the same\n         time, Decisions from\
    \ the remote PDP can be generated\n         asynchronously at any time for a currently\
    \ installed request\n         state.\n     (2) State from various events (Request/Decision\
    \ pairs) may be\n         inter-associated.  The server may respond to new queries\n\
    \         differently because of previously installed, related\n         Request/Decision\
    \ state(s).\n   7. The protocol is also stateful in that it allows the server\
    \ to push\n      configuration information to the client, and then allows the\n\
    \      server to remove such state from the client when it is no longer\n    \
    \  applicable.\n"
- title: 1.5.2.  Comparison of COPS and the MIDCOM Framework
  contents:
  - "1.5.2.  Comparison of COPS and the MIDCOM Framework\n   In the MIDCOM framework,\
    \ the Middlebox enforces the policy controlled\n   by an application-aware Agent.\
    \  Thus, when compared to the COPS\n   architecture, the Middlebox serves as the\
    \ PEP (COPS Client) and the\n   MIDCOM Agent serves as the PDP (COPS Policy Server).\
    \  One major\n   difference between the COPS protocol model and the MIDCOM protocol\n\
    \   requirements is that MIDCOM requires that the MIDCOM Agent establish\n   the\
    \ session.  Whereas, the COPS definition is that a PEP (Middlebox)\n   establishes\
    \ communication with a PDP (MIDCOM Agent).\n"
- title: 2.  Item Level Compliance Evaluation
  contents:
  - "2.  Item Level Compliance Evaluation\n   This section contains a review of the\
    \ protocol's level of compliance\n   to each of the MIDCOM Requirements [1]. \
    \ The following key will be\n   used to identify the level of compliancy of each\
    \ of the individual\n   protocols:\n   T =  Total Compliance.  Meets the requirement\
    \ fully.\n   P+ = Partial Compliance+.  Fundamentally meets the requirement\n\
    \        through the use of extensions (e.g., packages, additional\n        parameters,\
    \ etc).\n   P =  Partial Compliance.  Meets some aspect of the requirement,\n\
    \        however, the necessary changes require more than an extension\n     \
    \   and/or are inconsistent with the design intent of the\n        protocol.\n\
    \   F =  Failed Compliance.  Does not meet the requirement.\n"
- title: 2.1.  Protocol Machinery
  contents:
  - "2.1.  Protocol Machinery\n   This section describes the compliancy of the proposed\
    \ protocols\n   against the protocol machinery requirements from section 2.1 of\
    \ the\n   requirements document [1].  A short description of each of the\n   protocols\
    \ is provided to substantiate the evaluation.\n"
- title: 2.1.1.  Ability to Establish Association Between Agent and Middlebox.
  contents:
  - "2.1.1.  Ability to Establish Association Between Agent and Middlebox.\n   SNMP:\
    \ T, RSIP: P+, Megaco: P, Diameter: T, COPS: P\n   SNMP:  SNMPv3 provides mutual\
    \ authentication at the user level\n      (where the user can be an application\
    \ or a host if desired) via\n      shared secrets.  Each authenticated principal\
    \ is associated with a\n      group that has access rights that control the principals\
    \ ability\n      to perform operations on specific subsets of data.  Failure to\n\
    \      authenticate can generate a SNMP notification (administrator\n      configurable\
    \ choice).\n   RSIP: RSIP allows sessions to be established between middleboxes\n\
    \      and applications and MIDCOM agents.  Authorization credentials\n      would\
    \ have to be added to the session establishment request to\n      allow the middlebox\
    \ to authorize the session requestor.\n   Megaco: There is a directionality component\
    \ implicit in this\n      requirement in that the MA initiates the establishment\
    \ of the\n      authorized session.  Megaco defines this association to be\n \
    \     established in the opposite direction, i.e., the Middlebox(MG)\n      initiates\
    \ the establishment.  If this restriction is not\n      considered, then Megaco\
    \ makes the syntax and semantics available\n      for the endpoint to initiate\
    \ the connection.\n   Diameter: Although this is out of scope, the Diameter specification\n\
    \      describes several ways to discover a peer.  Having done so, a\n      Diameter\
    \ node establishes a transport connection (TCP, TLS, or\n      SCTP) to the peer.\
    \  The two peers then exchange Capability\n      Exchange Request/Answer messages\
    \ to identify each other and\n      determine the Diameter applications each supports.\n\
    \      If the connection between two peers is lost, Diameter prescribes\n    \
    \  procedures whereby it may be re-established.  To ensure that loss\n      of\
    \ connectivity is detected quickly, Diameter provides the\n      Device-Watchdog\
    \ Request/Answer messages, to be used when traffic\n      between the two peers\
    \ is low.\n      Diameter provides an extensive state machine to govern the\n\
    \      relationship between two peers.\n   COPS: COPS does not meet the directionality\
    \ part of the\n      requirement.  The definition of COPS allows a PEP (Middlebox)\
    \ to\n      establish communication with a PDP (MIDCOM Agent).  However,\n   \
    \   nothing explicitly prohibits a PDP from establishing communication\n     \
    \ with a PEP.  The PEP could have local policies dictating what\n      action\
    \ to take when it is contacted by an unknown PDP.  These\n      actions, defined\
    \ in the local policies, would ensure the proper\n      establishment of an authorized\
    \ association.\n"
- title: 2.1.2.  Agent Can Relate to Multiple Middleboxes
  contents:
  - "2.1.2.  Agent Can Relate to Multiple Middleboxes\n   SNMP: T, RSIP: P, Megaco:\
    \ T, Diameter: T, COPS: T\n   SNMP:  An SNMP manager can communicate simultaneously\
    \ with several\n      Middleboxes.\n   RSIP: RSIP sessions are identified by their\
    \ IP source and\n      destination addresses and their TCP / UDP port numbers.\
    \  Thus each\n      RSIP client can communicate with multiple servers, and each\
    \ server\n      can communicate with multiple clients.  However, RSIP did not\n\
    \      explicitly include agents in its design.  The architecture and\n      semantics\
    \ of RSIP messages do not preclude agents, thus the RSIP\n      architecture could\
    \ certainly be extended to explicitly include\n      agents; therefore RSIP is\
    \ deemed partially compliant to this\n      requirement.\n   Megaco: Megaco allows\
    \ an MA to control several Middleboxes.  Each\n      message carries an identifier\
    \ of the endpoint that transmitted the\n      message allowing the recipient to\
    \ determine the source.\n   Diameter: Diameter allows connection to more than\
    \ one peer (and\n      encourages this for improved reliability).  Whether the\
    \ Diameter\n      connection state machine is too heavy to support the number\
    \ of\n      connections needed is a matter for discussion.\n   COPS: COPS PDPs\
    \ are designed to communicate with several PEPs.\n"
- title: 2.1.3.  Middlebox Can Relate to Multiple Agents
  contents:
  - "2.1.3.  Middlebox Can Relate to Multiple Agents\n   SNMP: T, RSIP: P, Megaco:\
    \ T, Diameter: T, COPS: T\n   SNMP:  An SNMP agent can communicate with several\
    \ SNMP managers\n      Simultaneously.\n   RSIP: Refer to 2.1.2.\n   Megaco: Megaco\
    \ has the concept of Virtual Media Gateways (VMG),\n      allowing multiple MGCs\
    \ to communicate simultaneously with the same\n      MG.  Applying this model\
    \ to MIDCOM would allow the same middlebox\n      (MG) to have associations with\
    \ multiple MIDCOM Agents (MGCs).\n   Diameter: Diameter allows connection to more\
    \ than one peer and\n      encourages this for improved reliability.  Whether\
    \ the Diameter\n      connection state machine is too heavy to support the number\
    \ of\n      connections needed is a matter for discussion.  The Middlebox and\n\
    \      Agent play symmetric roles as far as Diameter peering is\n      concerned.\n\
    \   COPS: The COPS-PR framework specifies that a PEP should have a\n      unique\
    \ PDP in order to achieve effective policy control.  The\n      COPS-PR protocol\
    \ would allow the scenario whereby a PEP\n      establishes communication with\
    \ multiple PDPs by creating a COPS\n      client instance per PDP.\n"
- title: 2.1.4.  Deterministic Outcome When Multiple Requests are Presented to
  contents:
  - "2.1.4.  Deterministic Outcome When Multiple Requests are Presented to\n     \
    \   the Middlebox Simultaneously\n   SNMP: T, RSIP: T, Megaco: T, Diameter: T,\
    \ COPS: T\n   SNMP:  While the architectural design of SNMP can permit race\n\
    \      conditions to occur, there are mechanisms defined as part of the\n    \
    \  SNMPv3 standard, such as view-based access control and advisory\n      locking\
    \ that can be used to prevent the conditions, and MIB\n      modules may also\
    \ contain special functionality, such as RMONs\n      OwnerString, to prevent\
    \ conflicts.  Deterministic behavior of SNMP\n      agents when being accessed\
    \ by multiple managers is important for\n      several management applications\
    \ and supported by SNMP.\n   RSIP: All RSIP requests are defined to be atomic.\
    \  Near simultaneous\n      requests are executed as is they were sequential.\n\
    \   Megaco: Megaco supports the concept of VMGs to make these\n      interactions\
    \ deterministic and to avoid resource access conflicts.\n      Each VMG has a\
    \ single owner, in a MGC, and there can be no overlap\n      between the sets\
    \ of Terminations belonging to multiple VMGs.  The\n      Megaco protocol messages\
    \ also include the identifier of the\n      sending entity, so that the MG can\
    \ easily determine to whom to\n      send the response or asynchronously report\
    \ certain events.\n   Diameter: Diameter depends partly upon the transport protocol\
    \ to\n      provide flow control when the server becomes heavily loaded.  It\n\
    \      also has application-layer messaging to indicate that it is too\n     \
    \ busy or out of space (Diameter_TOO_BUSY and Diameter_OUT_OF_SPACE\n      result\
    \ codes).\n   COPS: COPS has built-in support for clear state and policy\n   \
    \   instances.  This would allow the creation of well-behaved MIDCOM\n      state\
    \ machines.\n"
- title: 2.1.5.  Known and Stable State
  contents:
  - "2.1.5.  Known and Stable State\n   SNMP: T, RSIP: T, Megaco: T, Diameter: P,\
    \ COPS: T\n   SNMP:  Requests are atomic in SNMP.  MIB modules can define which\n\
    \      data is persistent across reboots, so a known startup state can be\n  \
    \    established.  The manager can poll the agent to determine the\n      current\
    \ state.\n   RSIP: RSIP assumes that on middlebox start-up no sessions are\n \
    \     defined, and thus no allocations have been made.  In effect, all\n     \
    \ resources are released upon restart after failure.\n   Megaco: Megaco has extensive\
    \ audit capabilities to synchronize\n      states between the MG and the MGC.\
    \  Megaco also provides the MGC\n      with the ability to do mass resets, as\
    \ well as individual resets.\n      The MGC can always release resources in the\
    \ MG.  The MG can also\n      initiate the release of resources by the MGC.\n\
    \   Diameter: Diameter documentation does not discuss the degree of\n      atomicity\
    \ of message processing, so this would have to be\n      specified in the MIDCOM\
    \ extension.\n   COPS: The COPS protocol maintains synchronized states between\n\
    \      Middleboxes and MA hence all the states are known on both sides.\n"
- title: 2.1.6.  Middlebox Status Report
  contents:
  - "2.1.6.  Middlebox Status Report\n   SNMP: T, RSIP: T, Megaco: T, Diameter: T,\
    \ COPS: T\n   SNMP:  The status of a middlebox can be reported using asynchronous\n\
    \      communications, or via polling.\n   RSIP: All RSIP client requests have\
    \ explicit server responses.\n      Additionally, a client may explicitly request\
    \ server status using\n      a QUERY request.\n   Megaco: Megaco has extensive\
    \ audit capabilities for the MG to\n      report status information to the MGC.\
    \  It can also report some\n      status updates using the ServiceChange command.\n\
    \   Diameter: Diameter provides a number of response codes by means of\n     \
    \ which a server can indicate error conditions reflecting status of\n      the\
    \ server as a whole.  The Disconnect-Peer-Request provides a\n      means in the\
    \ extreme case to terminate a connection with a peer\n      gracefully, informing\
    \ the other end about the reason for the\n      disconnection.\n   COPS: The COPS\
    \ Report message is designed to indicate any\n      asynchronous conditions/events.\n"
- title: 2.1.7.  Middlebox Can Generate Unsolicited Messages
  contents:
  - "2.1.7.  Middlebox Can Generate Unsolicited Messages\n   SNMP: T, RSIP: T, Megaco:\
    \ T, Diameter: T, COPS: T\n   SNMP:  SNMPv3 supports both confirmed and unconfirmed\
    \ asynchronous\n      notifications.\n   RSIP: An RSIP server will send an unsolicited\
    \ DE_REGISTER_RESPONSE\n      to force an RSIP host to relinquish all of its bindings\
    \ and\n      terminate its relationship with the RSIP gateway.  An RSIP server\n\
    \      can send an asynchronous ERROR_RESPONSE to indicate less severe\n     \
    \ conditions.\n   Megaco: Megaco supports the asynchronous notification of events\n\
    \      using the Notify command.\n   Diameter: The Diameter protocol permits either\
    \ peer in a connection\n      to originate transactions.  Thus the protocol supports\
    \ Middlebox-\n      originated messages.\n   COPS: The COPS Report message is\
    \ designed to indicate any\n      asynchronous conditions/events.\n"
- title: 2.1.8.  Mutual Authentication
  contents:
  - "2.1.8.  Mutual Authentication\n   SNMP: T, RSIP: T, Megaco: T, Diameter: T, COPS:\
    \ T\n   SNMP: SNMPv3 meets this requirement.  SNMPv3 supports user\n      authentication\
    \ and explicitly supports symmetric secret key\n      encryption between MIDCOM\
    \ agent (SNMP manager) and Middlebox (SNMP\n      agent), thus supporting mutual\
    \ authentication.  The default\n      authentication and encryption methods are\
    \ specified in RFC 3414\n      [11] (MD5, SHA-1, and DES).  Different users at\
    \ the same\n      management application (MIDCOM agent) can authenticate themselves\n\
    \      with different authentication and encryption methods, and\n      additional\
    \ methods can be added to SNMPv3 entities as needed.\n   RSIP: This requirement\
    \ can be met by operating RSIP over IPSec as\n      described in RFC 3104 [19].\
    \  The RSIP framework recommends all\n      communication between an RSIP host\
    \ and gateway be authenticated.\n      Authentication, in the form of a message\
    \ hash appended to the end\n      of each RSIP protocol packet, can serve to authenticate\
    \ the RSIP\n      host and gateway to one another, provide message integrity,\
    \ and\n      avoid replay attacks with an anti-replay counter.  However, the\n\
    \      message hash and replay counter parameters would need to be\n      defined\
    \ for the RSIP protocol.\n   Megaco: Megaco provides for the use of IPSec [22]\
    \ for all security\n      mechanisms including mutual authentication, integrity\
    \ check and\n      encryption.  Use of IKE is recommended with support of RSA\n\
    \      signatures and public key encryption.\n   Diameter: The Diameter base protocol\
    \ assumes that messages are\n      secured by using either IPSec or TLS [21].\
    \  Diameter requires that\n      when using the latter, peers must mutually authenticate\n\
    \      themselves.\n   COPS: COPS has built-in message level security for authentication,\n\
    \      replay protection, and message integrity.  COPS can also use TLS\n    \
    \  or IPSec.\n"
- title: 2.1.9.  Termination of session by either party
  contents:
  - "2.1.9.  Termination of session by either party\n   SNMP: T, RSIP: T, Megaco:\
    \ T, Diameter: T, COPS: T\n   SNMP: Each SNMPv3 message is authenticated and authorized,\
    \ so each\n      message could be considered to have its own session, which\n\
    \      automatically terminates after processing.  Processing may be\n      stopped\
    \ for a number of reasons, such as security, and a response\n      is sent.\n\
    \      Either peer may stop operating, and be unavailable for further\n      operations.\
    \  The authentication and/or authorization parameters of\n      a principal may\
    \ be changed between operations if desired, to\n      prevent further authentication\
    \ or authorization for security\n      reasons.\n      Additionally, managed objects\
    \ can be defined for realizing\n      sessions that persist beyond processing\
    \ of a single message.  The\n      MIB module would need to specify the responsibility\
    \ for cleanup of\n      the objects following normal/abnormal termination.\n \
    \  RSIP: An RSIP client may terminate a session with a\n      DE_REGISTER_REQUEST.\
    \  An RSIP server may terminate a session with\n      an unsolicited DE_REGISTER_RESPONSE,\
    \ and then respond to\n      subsequent requests on the session with a REGISTER_FIRST\
    \ error.\n   Megaco: The Megaco protocol allows both peers to terminate the\n\
    \      association with proper reason code.\n   Diameter: Either peer in a connection\
    \ may issue a Disconnect-Peer-\n      Request to end the connection gracefully.\n\
    \   COPS: COPS allows both the PEP and PDP to terminate a session.\n"
- title: 2.1.10.  Indication of Success or Failure
  contents:
  - "2.1.10.  Indication of Success or Failure\n   SNMP: T, RSIP: T, Megaco: T, Diameter:\
    \ T, COPS: T\n   SNMP: Each operation request has a corresponding response message\n\
    \      that contains an error status to indicate success or failure.  For\n  \
    \    complex requests that the middlebox cannot complete immediately,\n      the\
    \ corresponding MIB module may be designed to also provide\n      asynchronous\
    \ notifications of the success or failure of the\n      complete transaction,\
    \ and/or may provide pollable objects that\n      indicate the success or failure\
    \ of the complete transaction.  For\n      example, see ifAdminStatus and ifOperStatus\
    \ in RFC 2863 [28].\n   RSIP: All RSIP requests result in a paired RSIP response\
    \ if the\n      request was successful or an ERROR_RESPONSE if the request was\
    \ not\n      successful.\n   Megaco: Megaco defines a special descriptor called\
    \ an Error\n      descriptor that contains the error code and an optional\n  \
    \    explanatory string.\n   Diameter: Every Diameter request is matched by a\
    \ response, and this\n      response contains a result code as well as other information.\n\
    \   COPS: The COPS Report message directly fulfills this requirement.\n"
- title: 2.1.11.  Version Interworking
  contents:
  - "2.1.11.  Version Interworking\n   SNMP: T, RSIP: T, Megaco: T, Diameter: T, COPS:\
    \ T\n   SNMP: SNMP has a separation of the protocol to carry data, and the\n \
    \     data that defines additional management functionality.  Additional\n   \
    \   functionality can be added easily through MIBs.  Capability\n      exchange\
    \ in SNMP is usually uni-directional.  Managers can query\n      the middlebox\
    \ (SNMP agent) to determine which MIBs are supported.\n      In addition, multiple\
    \ message versions can be supported\n      simultaneously, and are identified\
    \ by a version number in the\n      message header.\n   RSIP: Each RSIP message\
    \ contains a version parameter.\n   Megaco: Version interworking and negotiation\
    \ are supported both for\n      the protocol and any extension Packages.\n   Diameter:\
    \ The Capabilities Exchange Request/Answer allows two peers\n      to determine\
    \ information about what each supports, including\n      protocol version and\
    \ specific applications.\n   COPS: The COPS protocol can carry a MIDCOM version\
    \ number and\n      capability negotiation between the COPS client and the COPS\n\
    \      server.  This capability negotiation mechanism allows the COPS\n      client\
    \ and server to communicate the supported\n      features/capabilities.  This\
    \ would allow seamless version\n      interworking.\n"
- title: 2.1.12.  Deterministic Behaviour in the Presence of Overlapping
  contents:
  - "2.1.12.  Deterministic Behaviour in the Presence of Overlapping\n         Rules\n\
    \   SNMP: T, RSIP: T, Megaco: P, Diameter: T, COPS: T\n   SNMP: Rulesets would\
    \ be defined in MIBs.  The priority of rulesets,\n      and the resolution of\
    \ conflict, can be defined in the MIB module\n      definition.  The SNMPConf\
    \ policy MIB defines mechanisms to achieve\n      deterministic behavior in the\
    \ presence of overlapping rule sets.\n   RSIP: All requests for allocation of\
    \ IP addresses, or ports or both\n      resulting in rule overlap are rejected\
    \ by an RSIP server with a\n      LOCAL_ADDR_INUSE error.\n   Megaco: This is\
    \ met with the help of a model that separates Megaco\n      protocol elements\
    \ from the overlapping Policy rules (see Appendix\n      C).  However, new behavior\
    \ for the Megaco protocol elements needs\n      to be specified as part of a new\
    \ MIDCOM specific Package.\n   Diameter: The IPFilterRule type specification,\
    \ which would probably\n      be used as the type of a Policy Rule AVP, comes\
    \ with an extensive\n      semantic description providing a deterministic outcome,\
    \ which the\n      individual Agent cannot know unless it knows all of the Policy\n\
    \      Rules installed on the Middlebox.  Rules for the appropriate\n      direction\
    \ are evaluated in order, with the first matched rule\n      terminating the evaluation.\
    \  Each packet is evaluated once.  If no\n      rule matches, the packet is dropped\
    \ if the last rule evaluated was\n      a permit, and passed if the last rule\
    \ was a deny.  The\n      IPFilterRule format and further details on its applicability\
    \ to\n      this requirement are provided in Appendix D.\n   COPS: The COPS protocol\
    \ provides transactional-based communication\n      between the PEP and PDP, hence\
    \ the behavior is totally\n      deterministic provided the middlebox state machine\
    \ is designed\n      correctly.  The COPS protocol features encourage and support\
    \ good\n      state machine design.\n"
- title: 2.2.  Protocol Semantics
  contents:
  - "2.2.  Protocol Semantics\n   This section contains the individual protocols as\
    \ evaluated against\n   the protocol semantic requirements from section 2.2 of\
    \ the\n   requirements document [1].  A short description of each of the\n   protocols\
    \ is provided to substantiate the evaluation.\n"
- title: 2.2.1.  Extensibility
  contents:
  - "2.2.1.  Extensibility\n   SNMP: T, RSIP: T, Megaco: T, Diameter: T, COPS: T\n\
    \   SNMP: Extensibility is a basic feature of the SNMP management\n      Framework.\n\
    \   RSIP: All RSIP messages consist of three mandatory fields (protocol\n    \
    \  version, message type, and message length) and a sequence of\n      parameterType\
    \ / length / value 3-tuples.  New messages may be\n      defined by defining new\
    \ values for the message type field.  New\n      parameter types may be defined,\
    \ and existing messages may be\n      extended, by defining new parameterType\
    \ values.  If new messages,\n      parameters, or both are added in a non-backward\
    \ compatible way, a\n      new value of the protocol version field may be defined.\
    \  This may\n      be desirable even of the additions are backward compatible.\n\
    \   Megaco: Megaco is easily extensible through new Packages, which\n      allow\
    \ definition of new attributes and behavior of a Termination.\n   Diameter: Diameter\
    \ provides a great deal of flexibility for\n      extensions, including allowance\
    \ for vendor-defined commands and\n      AVPs and the ability to flag each AVP\
    \ as must-understand or\n      ignorable if not understood.\n   COPS: The COPS\
    \ protocol is extensible, since it was designed to\n      separate the Protocol\
    \ from the Policy Control Information.\n"
- title: 2.2.2.  Support of Multiple Middlebox Types
  contents:
  - "2.2.2.  Support of Multiple Middlebox Types\n   SNMP: T, RSIP: P+, Megaco: T,\
    \ Diameter: P+, COPS: T\n   SNMP: SNMP explicitly supports managing different\
    \ device types with\n      different capabilities.  First the managed object called\n\
    \      sysObjectID from basic MIB-II [3] identifies the type of box.  For\n  \
    \    boxes with variable capabilities, SNMP can check the availability\n     \
    \ of corresponding MIBs.\n   RSIP: All types of middleboxes are supported so long\
    \ as the ruleset\n      action is permit.  Other actions would require the definition\
    \ of a\n      new RSIP message parameter with values for permit and the other\n\
    \      desired actions.\n   Megaco: Megaco can support multiple Middlebox types\
    \ on the same\n      interface either by designing the properties representing\
    \ the\n      Policy Rules to provide this support, or by using multiple\n    \
    \  terminations in the same session, each representing one type of\n      action.\
    \  In the latter case, the Megaco Context can be used as a\n      convenient means\
    \ of managing the related terminations as a group.\n      However, the inherent\
    \ idea of flow between terminations of a\n      context is irrelevant and would\
    \ have to be discarded.\n   Diameter: Any necessary additional AVPs or values\
    \ must be specified\n      as part of the MIDCOM application extension (see <2.2.8>\
    \ below).\n   COPS: COPS allows a PDP to provide filters and actions to multiple\n\
    \      PEP functions through a single COPS session.\n"
- title: 2.2.3.  Ruleset Groups
  contents:
  - "2.2.3.  Ruleset Groups\n   SNMP: T, RSIP: P+, Megaco: T, Diameter: T, COPS: T\n\
    \   SNMP: This requirement can be realized via the SNMP management\n      framework\
    \ by an appropriate definition of a MIB module.  The\n      SNMPConf WG has already\
    \ defined an SNMP Policy MIB that permits\n      the definitions of policy rulesets\
    \ and grouping of rulesets.\n   RSIP: RSIP currently only allows one IP address,\
    \ or address and\n      port range, to be assigned to a bind-ID.  RSIP could implement\n\
    \      rulesets as required by adding an optional bind-ID parameter to\n     \
    \ the ASSIGN_REQUESTs to extend an existing ruleset rather than\n      creating\
    \ a new one.  Similarly, the FREE_REQUESTs would have to be\n      extended by\
    \ adding optional, local and remote, address and port\n      parameters.\n   Megaco:\
    \ The Megaco context can be used to group terminations to be\n      managed together.\
    \  For example, all of the terminations, each\n      representing an instantiation\
    \ of a Policy Rule, can be deleted in\n      one command by doing a wildcarded\
    \ Subtract from the context.\n      However, the inherent idea of media flows\
    \ between terminations of\n      a context would be irrelevant in this application\
    \ of the protocol.\n   Diameter: Diameter allows message syntax definitions where\
    \ multiple\n      instances of the same AVP (for example, a Policy Rule AVP whose\n\
    \      syntax and low-level semantics are defined by the IPFilterRule\n      type\
    \ definition) may be present.  If a tighter grouping is\n      required, the set\
    \ of Diameter base types includes the Grouped\n      type.  MIDCOM can choose\
    \ how to make use of these capabilities to\n      meet the ruleset group requirement\
    \ when defining its application\n      extension to the Diameter protocol.\n \
    \  COPS: The COPS-PR Handle State may be used to associate the set of\n      closely\
    \ related policy objects.  As the Middlebox learns\n      additional requirements,\
    \ the Middlebox adds these resource\n      requirements under the same handle\
    \ ID, which constitutes the\n      required aggregation.\n"
- title: 2.2.4.  Lifetime Extension
  contents:
  - "2.2.4.  Lifetime Extension\n   SNMP: P+, RSIP: T, Megaco: T, Diameter: T, COPS:\
    \ P+\n   SNMP: This requirement can be realized via the SNMP management\n    \
    \  framework by an appropriate definition of a MIB module.  The\n      SNMPConf\
    \ WG has developed a Policy MIB module that includes a\n      pmPolicySchedule\
    \ object with a modifiable lifetime.\n   RSIP: A client may request an explicit\
    \ lease time when a request is\n      made to assign one or more IP addresses,\
    \ ports or both.  The\n      server may grant the requested lease time, or assign\
    \ one if none\n      was requested.  Subsequently, the lease time may be extended\
    \ if a\n      client's EXTEND_REQUEST is granted by the server.\n   Megaco: The\
    \ MG can report the imminent expiry of a policy rule to\n      the MGC, which\
    \ can then extend or delete the corresponding\n      Termination.\n   Diameter:\
    \ The Diameter concept of a session includes the session\n      lifetime, grace\
    \ period, and lifetime extension.  It may make sense\n      to associate the Diameter\
    \ session with the lifetime of a MIDCOM\n      Policy Rule, in which case support\
    \ for lifetime extension comes\n      ready-made.\n   COPS: COPS allows a PDP\
    \ to send unsolicited decisions to the PEP.\n      However, the unsolicited events\
    \ will be relevant to the COPS\n      MIDCOM specific client or the MIDCOM specific\
    \ PIB which needs to\n      be defined.  This would allow the PDP to extend the\
    \ lifetime of an\n      existing ruleset.\n"
- title: 2.2.5.  Handling of Mandatory/Optional Nature of Unknown Attributes
  contents:
  - "2.2.5.  Handling of Mandatory/Optional Nature of Unknown Attributes\n   SNMP:\
    \ T, RSIP: T, Megaco: P+, Diameter: P+, COPS: T\n   SNMP: Unknown attributes in\
    \ a read operation are flagged as\n      exceptions in the Response message, but\
    \ the rest of the read\n      succeeds.  In a write operation (a SET request),\
    \ all attributes\n      are validated before the write is performed.  If there\
    \ are unknown\n      attributes, the request fails and no writes are done.  Unknown\n\
    \      attributes are flagged as exceptions in the Response message, and\n   \
    \   the error status is reported.\n   RSIP: All options of all requests are fully\
    \ specified.  Not\n      understood parameters must be reported by an ERROR_RESPONSE\
    \ with\n      an EXTRA_PARM error value, with the entire request otherwise\n \
    \     ignored.\n   Megaco: Megaco entities provide Error codes in response messages.\n\
    \      If a command marked \"Optional\" in a transaction fails, the\n      remaining\
    \ commands will continue.  However, the specified\n      requirement deals with\
    \ rules of processing properties that need\n      definition in new Package.\n\
    \   Diameter: Indication of the mandatory or optional status of AVPs is\n    \
    \  fully supported, provided it is enabled in the AVP definition.  No\n      guidance\
    \ is imposed regarding the return of diagnostic information\n      for optional\
    \ AVPs.\n   COPS: COPS provides for the exchange of capabilities and\n      limitations\
    \ between the PEP and PDP to ensure well-known outcomes\n      are understood\
    \ for scenarios with unknown attributes.  There is\n      also clear error handling\
    \ for situations when the request is\n      rejected.\n"
- title: 2.2.6.  Actionable Failure Reasons
  contents:
  - "2.2.6.  Actionable Failure Reasons\n   SNMP: T, RSIP: P+, Megaco: T, Diameter:\
    \ T, COPS: T\n   SNMP: The SNMPv3 protocol returns error codes and exception codes\n\
    \      in Response messages, to permit the requestor to modify their\n      request.\
    \  Errors and exceptions indicate the attribute that caused\n      the error,\
    \ and an error code identifies the nature of the error\n      encountered.\n \
    \     If desired, a MIB can be designed to provide additional data about\n   \
    \   error conditions either via asynchronous notifications or polled\n      objects.\n\
    \   RSIP: RSIP defines a fairly large number of very specific error\n      values.\
    \  It is anticipated that additional error values will also\n      have to be\
    \ defined along with the new messages and parameters\n      required for MIDCOM.\n\
    \   Megaco: The MG can provide Error codes in response messages\n      allowing\
    \ the MGC to modify its behavior.  Megaco uses transaction\n      identifiers\
    \ for correlation between a response and a command.  If\n      the same transaction\
    \ id is received more than once, the receiving\n      entity silently discards\
    \ the message, thus providing some\n      protection against replay attacks.\n\
    \   Diameter: Diameter provides an extensive set of failure reasons in\n     \
    \ the base protocol.\n   COPS: COPS uses an error object to identify a particular\
    \ COPS\n      protocol error.  The error sub-code field may contain additional\n\
    \      detailed COPS client (MIDCOM Middlebox) specific error codes.\n"
- title: 2.2.7.  Multiple Agents Operating on the Same Ruleset.
  contents:
  - "2.2.7.  Multiple Agents Operating on the Same Ruleset.\n   SNMP: T, RSIP: P,\
    \ Megaco: P, Diameter: T, COPS: P\n   SNMP: The SNMP framework supports multiple\
    \ managers working on the\n      same managed objects.  The View-based Access\
    \ Control Model (VACM,\n      RFC 3415 [14]) even offers means to customize the\
    \ access rights of\n      different managers in a fine-grained way.\n   RSIP:\
    \ RSIP neither explicitly permits nor precludes an operation on\n      a binding\
    \ by a host that had not originally create the binding.\n      However, to support\
    \ this requirement, the RSIP semantics must be\n      extended to explicitly permit\
    \ any authorized host to request\n      operations on a binding; this does not\
    \ require a change to the\n      protocol.\n   Megaco: If the Megaco state machine\
    \ on the Middle Box is decoupled\n      from the Middle Box policy rule management,\
    \ this requirement can\n      be met with local policies on the Middle Box.  However,\
    \ this\n      violates the spirit of the Megaco protocol, thus Megaco is\n   \
    \   considered partially compliant to this requirement.\n   Diameter: The Diameter\
    \ protocol, as currently defined, would allow\n      multiple agents to operate\
    \ on the same ruleset.\n   COPS: It is possible to use COPS to operate the same\
    \ resource with\n      multiple agents.  An underlying resource management function,\n\
    \      separate from the COPS state machine, on the Middlebox will handle\n  \
    \    the arbitration when resource conflicts happen.\n"
- title: 2.2.8.  Transport of Filtering Rules
  contents:
  - "2.2.8.  Transport of Filtering Rules\n   SNMP: P+, RSIP: P+, Megaco: P+, Diameter:\
    \ P+, COPS: P+\n   SNMP: This requirement can be met by an appropriate definition\
    \ of a\n      MIDCOM MIB module.  SMI, the language used for defining MIB\n  \
    \    modules, is flexible enough to allow the implementation of a MIB\n      module\
    \ to meet the semantics of this requirement.\n   RSIP: To support this requirement,\
    \ a new optional enumeration\n      parameter, transportProtocol, can be added\
    \ to the RSIP\n      ASSIGN_REQUESTs.  When the parameter is included, the binding\n\
    \      created applies only to the use of the bound addresses and ports,\n   \
    \   by the specific transportProtocol.  When the parameter is not\n      included,\
    \ the binding applies to the use of all the bound\n      addresses and ports,\
    \ by any transport protocol, thus maintaining\n      backward compatibility with\
    \ the current definition of RSIP.\n   Megaco: Megaco protocol can meet this requirement\
    \ by defining a new\n      property for the transport of filtering rules.\n  \
    \ Diameter: While Diameter defines the promising IPFilterRule data\n      type\
    \ (see 2.1.12 above), there is no existing message, which would\n      convey\
    \ this to a Middlebox along with other required MIDCOM\n      attributes.  A new\
    \ MIDCOM application extension of Diameter would\n      have to be defined.\n\
    \   COPS: The COPS protocol can meet this requirement by using a COPS\n      MIDCOM\
    \ specific client or a MIDCOM specific PIB.\n"
- title: 2.2.9.  Mapped Port Parity
  contents:
  - "2.2.9.  Mapped Port Parity\n   SNMP: P+, RSIP: P+, Megaco: P+, Diameter: P+,\
    \ COPS: P+\n   SNMP: This requirement can be met by an appropriate definition\
    \ of a\n      MIDCOM MIB module.\n   RSIP: To support this requirement, a new\
    \ optional boolean\n      parameter, portOddity, can be added to the RSIP ASSIGN_REQUESTs.\n\
    \      If the parameter is TRUE, the remote port number of the binding\n     \
    \ created would have the same oddity as the local port.  If the\n      parameter\
    \ is not specified, or is FALSE, the remote port's oddity\n      is independent\
    \ of the local port's oddity, thus maintaining\n      backward compatibility with\
    \ the current definition of RSIP.\n   Megaco: Megaco can be easily extended using\
    \ a MIDCOM specific\n      Package to support this feature.\n   Diameter: This\
    \ capability is not part of the current IPFilterRule\n      type definition. \
    \ Rather than modify the IPFilterRule type, MIDCOM\n      could group it with\
    \ other AVPs which add the missing information.\n   COPS: The COPS protocol has\
    \ all the flexibility to meet this\n      requirement by using a COPS MIDCOM specific\
    \ client or a MIDCOM\n      specific PIB.\n"
- title: 2.2.10.  Consecutive Range of Port Numbers
  contents:
  - "2.2.10.  Consecutive Range of Port Numbers\n   SNMP: P+, RSIP: T, Megaco: P+,\
    \ Diameter: P+, COPS: P+\n   SNMP: This requirement can be met by an appropriate\
    \ definition of a\n      MIDCOM MIB module.  SMI, the language used for defining\
    \ MIB\n      modules, is flexible enough to allow the implementation of a MIB\n\
    \      module to meet the semantics of this requirement.\n   RSIP: The ports parameter\
    \ of the RSIP ASSIGN_REQUESTs specifically\n      allows multiple, consecutive\
    \ port numbers to be specified.\n   Megaco: Megaco can be easily extended using\
    \ a MIDCOM specific\n      Package to support this feature.\n   Diameter: This\
    \ capability is not part of the current IPFilterRule\n      type definition. \
    \ Rather than modify the IPFilterRule type, MIDCOM\n      could group it with\
    \ other AVPs which add the missing information.\n   COPS: The COPS protocol has\
    \ all the flexibility to meet this\n      requirement by using a COPS MIDCOM specific\
    \ client or a MIDCOM\n      specific PIB.\n"
- title: 2.2.11.  More Precise Rulesets Contradicting Overlapping Rulesets
  contents:
  - "2.2.11.  More Precise Rulesets Contradicting Overlapping Rulesets\n   SNMP: P+,\
    \ RSIP: P+, Megaco: P+, Diameter: T, COPS: P+\n   SNMP: This requirement can be\
    \ met by an appropriate definition of a\n      MIDCOM MIB module.\n   RSIP: To\
    \ support this requirement, a new optional boolean\n      parameter, overlapOK,\
    \ can be added to the RSIP ASSIGN_REQUESTs.\n      If the parameter is TRUE, the\
    \ binding may overlap with an existing\n      binding.  If the parameter is unspecified,\
    \ or is FALSE, the\n      binding will not overlap with an existing binding, thus\n\
    \      maintaining backward compatibility with the current definition of\n   \
    \   RSIP.\n   Megaco: This requirement would be met if the policy in the\n   \
    \   Middlebox allows contradictory, overlapping policy rules to be\n      installed.\n\
    \   Diameter: Allowed by the IPFilterRule semantics described in\n      Appendix\
    \ D.\n   COPS: The COPS protocol has all the flexibility to meet this\n      requirement\
    \ by using a COPS MIDCOM specific client or a MIDCOM\n      specific PIB.\n"
- title: 2.3.  General Security Requirements
  contents:
  - "2.3.  General Security Requirements\n   This section contains the individual\
    \ protocols as evaluated against\n   the General Security requirements from section\
    \ 2.3 of the\n   requirements document [1].  A short description of each of the\n\
    \   protocols is provided to substantiate the evaluation.\n"
- title: 2.3.1.  Message Authentication, Confidentiality and Integrity
  contents:
  - "2.3.1.  Message Authentication, Confidentiality and Integrity\n   SNMP: T, RSIP:\
    \ T, Megaco: T, Diameter: T, COPS: T\n   SNMP:  SNMPv3 includes the User-based\
    \ Security Model (USM,\n      RFC 3414 [11]), which defines three standardized\
    \ methods for\n      providing authentication, confidentiality, and integrity.\n\
    \      Additionally, USM has specific built-in mechanisms for preventing\n   \
    \   replay attacks including unique protocol engine IDs, timers and\n      counters\
    \ per engine and time windows for the validity of messages.\n   RSIP: This requirement\
    \ can be met by operating RSIP over IPSec.  The\n      RSIP framework recommends\
    \ all communication between an RSIP host\n      and gateway be authenticated.\
    \  Authentication, in the form of a\n      message hash appended to the end of\
    \ each RSIP protocol packet, can\n      serve to authenticate the RSIP host and\
    \ gateway to one another,\n      provide message integrity, and avoid replay attacks\
    \ with an anti-\n      replay counter.  However, the message hash and replay counter\n\
    \      parameters would need to be defined for the RSIP protocol.\n   Megaco:\
    \ Megaco provides for these functions with the combined usage\n      of IPSEC\
    \ [22] or TLS [21].\n   Diameter: Diameter relies on either IPSEC or TLS for these\n\
    \      functions.\n   COPS: COPS has built-in message level security for authentication,\n\
    \      replay protection, and message integrity.  COPS can also use TLS\n    \
    \  or IPSec, thus reusing existing security mechanisms that have\n      interoperated\
    \ in the markets.\n"
- title: 2.3.2.  Optional Confidentiality Protection
  contents:
  - "2.3.2.  Optional Confidentiality Protection\n   SNMP: T, RSIP: T, Megaco: T,\
    \ Diameter: T, COPS: T\n   SNMP:  SNMPv3 includes the User-based Security Model,\
    \ which defines\n      three standardized methods for providing authentication,\n\
    \      confidentiality, and integrity, and is open to add further\n      methods.\
    \  The method to use can be optionally chosen.\n   RSIP: Refer to 2.3.1.\n   Megaco:\
    \ Refer to 2.3.1\n   Diameter: Implementation support of IPSEC ESP (RFC 2406 [23])\
    \ in\n      Diameter applications is not optional.  Deployment of either IPSEC\n\
    \      or TLS is optional.\n   COPS: Refer to 2.3.1.\n"
- title: 2.3.3.  Operate Across Untrusted Domains
  contents:
  - "2.3.3.  Operate Across Untrusted Domains\n   SNMP: T, RSIP: T, Megaco: T, Diameter:\
    \ T, COPS: T\n   SNMP:  The User-based Security Model of SNMPv3 defines three\n\
    \      standardized methods for providing authentication,\n      confidentiality,\
    \ and integrity, and it is open to add further\n      methods.  These methods\
    \ operate securely across untrusted domains.\n   RSIP: Refer to 2.3.1.\n   Megaco:\
    \ Refer to 2.3.1.\n   Diameter: The Diameter specification [24] recommends the\
    \ use of\n      TLS [21] across untrusted domains.\n   COPS: Refer to 2.3.1\n"
- title: 2.3.4.  Mitigates Replay Attacks on Control Messages
  contents:
  - "2.3.4.  Mitigates Replay Attacks on Control Messages\n   SNMP: T, RSIP: T, Megaco:\
    \ T, Diameter: T, COPS: T\n   SNMP:  The User-based Security Model for SNMPv3\
    \ has specific built-\n      in mechanisms for preventing replay attacks including\
    \ unique\n      protocol engine IDs, timers and counters per engine and time\n\
    \      windows for the validity of messages.\n   RSIP: Refer to 2.3.1\n   Megaco:\
    \ Megaco commands and responses include matching transaction\n      identifiers.\
    \  The recipient receiving the same transaction id\n      multiple times would\
    \ discard the message, thus providing some\n      protection against replay attacks.\
    \  If even stronger protection\n      against replay attack is needed, Megaco\
    \ provides for the use of\n      IPSec or TLS.\n   Diameter: Diameter requires\
    \ that implementations support the replay\n      protection mechanisms of IPSEC.\n\
    \   COPS: Refer to 2.3.1\n"
- title: 3.  Conclusions
  contents:
  - "3.  Conclusions\n   The overall statistics with regards to the number of Fully\
    \ Compliant,\n   Partially Compliant (P+ and P) and Failing Compliancy requirements\n\
    \   for each of the protocols is summarized in table 1.\n                 T  \
    \          P+           P            F\n   -----------------------------------------------------------------\n\
    \   SNMP          22           5            0            0\n   RSIP          17\
    \           7            3            0\n   Megaco        19           5     \
    \       3            0\n   Diameter      21           5            1         \
    \   0\n   COPS          20           5            2            0\n           \
    \      Table 1: Totals across all Requirements\n   In considering the P+ category\
    \ of compliancy, an important aspect is\n   the mechanism for support of extensibility.\
    \  The extension mechanism\n   provided by SNMP and COPS-PR using MIBs and PIBs\
    \ respectively,\n   provides extensions with no impact to the protocol.  Diameter\n\
    \   extensions require protocol changes, thus has a higher impact,\n   although\
    \ the extensions can be handled by other Diameter entities\n   without being understood.\
    \  Megaco's extension mechanisms of packages\n   also requires protocol changes\
    \ that must be understand by both\n   sending and receiving entities, also being\
    \ considered higher impact.\n   The RSIP extension mechanism has the largest impact\
    \ on the existing\n   protocol and is based upon defining the necessary new parameters.\n\
    \   The SNMP management framework meets all the specified MIDCOM protocol\n  \
    \ requirements with the appropriate design of a MIDCOM MIB module.\n   SNMP is\
    \ a proven technology with stable and proven development tools,\n   already has\
    \ extensions defined to support NAT configuration and\n   policy-based management.\
    \  SNMPv3 is a full standard, is more mature\n   and has undergone more validation\
    \ than the other protocols in\n   the evaluation, and has been deployed to manage\
    \ large-scale real-\n   world networks (e.g., DOCSIS cable modem networks).  The\n\
    \   applicability of SNMP to the MIDCOM framework has a restriction in\n   that\
    \ it assumes the MIDCOM PDP is part of the Middlebox.\n   RSIP fully meets many\
    \ of the MIDCOM requirements.  However, it does\n   require additions and extensions\
    \ to meet several of the requirements.\n   RSIP would also require several framework\
    \ elements to be added to the\n   MIDCOM framework as identified in section 1.2.3.\
    \  In addition, the\n   tunneling required for RSIP as described in section 1.2.4,\
    \ results in\n   RSIP not being acceptable by the WG as the MIDCOM protocol.\n\
    \   Megaco fully meets most of the key requirements for the MIDCOM\n   Protocol.\
    \  Additional extensions in the form of a new Termination /\n   Package definition\
    \ would be required for MIDCOM to meet several of\n   the requirements.  In order\
    \ to meet the remaining requirements,\n   modeling the underlying Middlebox resources\
    \ (e.g., filters, policy\n   rules) as separate elements from the Megaco entities\
    \ might allow the\n   usage of the protocol as-is, satisfying some of the resource\
    \ access\n   control requirements.\n   The Diameter evaluation indicated a good\
    \ overall fit.  Some partially\n   met requirements were identified that could\
    \ be addressed by a new\n   application extension.  However, the Diameter architecture\
    \ may be too\n   heavy for the MIDCOM application and clearly much of the Diameter\n\
    \   base is not needed.  In addition, Diameter is the only protocol, at\n   the\
    \ time of this evaluation, for which the RFCs had not yet been\n   published.\
    \  Other than these reservations, the protocol is a good fit\n   to MIDCOM requirements.\n\
    \   The COPS evaluation indicates that the protocol meets the majority of\n  \
    \ the MIDCOM protocol requirements by using the protocol's native\n   extension\
    \ techniques, with COPS-PR being explicitly required to meet\n   requirements\
    \ 2.1.3 and 2.2.3.  In order to fully satisfy one\n   partially met requirement,\
    \ 2.1.1, the COPS model would need to allow\n   a PDP to establish communication\
    \ with a PEP.  While not explicitly\n   prohibited by the COPS model, this would\
    \ require additions, in the\n   form of local policy, to ensure the proper establishment\
    \ of an\n   authorized association.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   Security considerations for the MIDCOM protocol\
    \ are covered by the\n   comparison against the specific Security requirements\
    \ in the MIDCOM\n   requirements document [1] and are specifically addressed by\
    \ section\n   2.1.8 and section 2.3.\n"
- title: 5.  References
  contents:
  - '5.  References

    '
- title: 5.1.  Normative References
  contents:
  - "5.1.  Normative References\n   [1]  Swale, R., Mart, P., Sijben, P., Brim, S.,\
    \ and  M. Shore,\n        \"Middlebox Communications (MIDCOM) Protocol Requirements\"\
    , RFC\n        3304, August 2002.\n   [2]  Srisuresh, P., Kuthan, J., Rosenberg,\
    \ J., Molitor, A., and A.\n        Rayhan, \"Middlebox Communications Architecture\
    \ and Framework\",\n        RFC 3303, August 2002.\n   [3]  Rose, M. and K. McCloghrie,\
    \ \"Management Information Base for\n        Network Management of TCP/IP-based\
    \ internets: MIB-II\", STD 17,\n        RFC 1213, March 1991.\n   [4]  Bradner,\
    \ S., \"Key words for use in RFCs to Indicate Requirement\n        Levels\", BCP\
    \ 14, RFC 2119, March 1997.\n   [5]  Harrington, D., Presuhn, R., and B. Wijnen,\
    \ \"An Architecture for\n        Describing SNMP Management Frameworks\", STD\
    \ 62, RFC 3411,\n        December 2002.\n   [6]  McCloghrie, K., Perkins, D.,\
    \ and J. Schoenwaelder, \"Structure of\n        Management Information Version\
    \ 2 (SMIv2)\", STD 58, RFC 2578,\n        April 1999.\n   [7]  McCloghrie, K.,\
    \ Perkins, D., and J. Schoenwaelder, \"Textual\n        Conventions for SMIv2\"\
    , STD 58, RFC 2579, April 1999.\n   [8]  McCloghrie, K., Perkins, D., and J. Schoenwaelder,\
    \ \"Conformance\n        Statements for SMIv2\", STD 58, RFC 2580, April 1999.\n\
    \   [9]  Presuhn, R. (Ed.), \"Transport Mappings for the Simple Network\n    \
    \    Management Protocol (SNMP)\", STD 62, RFC 3417, December 2002.\n   [10] Case,\
    \ J., Harrington D., Presuhn R., and B. Wijnen, \"Message\n        Processing\
    \ and Dispatching for the Simple Network Management\n        Protocol (SNMP)\"\
    , STD 62, RFC 3412, December 2002.\n   [11] Blumenthal, U. and B. Wijnen, \"User-based\
    \ Security Model(USM)\n        for version 3 of the Simple Network Management\
    \ Protocol\n        (SNMPv3)\", STD 62, RFC 3414, December 2002.\n   [12] Presuhn,\
    \ R. (Ed.), \"Version 2 of the Protocol Operations for the\n        Simple Network\
    \ Management Protocol (SNMP)\", STD 62, RFC 3416,\n        December 2002.\n  \
    \ [13] Levi, D., Meyer, P., and B. Stewart, \"SNMPv3 Applications\", STD\n   \
    \     62, RFC 3413, December 2002.\n   [14] Wijnen, B., Presuhn, R., and K. McCloghrie,\
    \ \"View-based Access\n        Control Model (VACM) for the Simple Network Management\
    \ Protocol\n        (SNMP)\", STD 62, RFC 3415, December 2002.\n   [15] Case,\
    \ J., Mundy, R., Partain, D., and B. Stewart, \"Introduction\n        to Version\
    \ 3 of the Internet-Standard Network Management\n        Framework\", RFC 3410,\
    \ December 2002.\n   [16] Rohit, R., Srisuresh, P., Raghunarayan, R., Pai, N.,\
    \ and C.\n        Wang, \"Definitions of Managed Objects for Network Address\n\
    \        Translators (NAT)\", RFC 4008, March 2005.\n   [17] Borella, M., Lo,\
    \ J., Grabelsky, D., and G. Montenegro, \"Realm\n        Specific IP: Framework\"\
    , RFC 3102, October 2001.\n   [18] Borella, M., Grabelsky, D., Lo, J., and  K.\
    \ Taniguchi, \"Realm\n        Specific IP: Protocol Specification\", RFC 3103,\
    \ October 2001.\n   [19] Montenegro, G. and M. Borella, \"RSIP Support for End-to-end\n\
    \        Ipsec\", RFC 3104, October 2001.\n   [20] Cuervo, F., Greene, N., Rayhan,\
    \ A., Huitema, C., Rosen, B., and\n        J. Segers, \"Megaco Protocol Version\
    \ 1.0\", RFC 3015, October\n        2001.\n   [21] Dierks, T. and C. Allen, \"\
    The TLS Protocol Version 1.0\", RFC\n        2246, January 1999.\n   [22] Kent,\
    \ S. and R. Atkinson, \"Security Architecture for the\n        Internet Protocol\"\
    , RFC 2401, November 1998.\n   [23] Kent, S. and R. Atkinson, \"IP Encapsulating\
    \ Security Payload\",\n        RFC 2406, November 1998.\n   [24] Calhoun, P.,\
    \ Loughney, J., Guttman, E., Zorn, G., and J. Arkko,\n        \"Diameter Base\
    \ Protocol\", RFC 3588, September 2003.\n   [25] Durham, D. (Ed.), Boyle, J.,\
    \ Cohen, R., Herzog, S., Rajan, R.,\n        and A. Sastry, \"The COPS (Common\
    \ Open Policy Service) Protocol\",\n        RFC 2748, January 2000.\n   [26] Chan,\
    \ K., Seligson, J., Durham, D., Gai, S., McCloghrie, K.,\n        Herzog, S.,\
    \ Reichmeyer, F., Yavatkar, R., and A. Smith, \"COPS\n        Usage for Policy\
    \ Provisioning\", RFC 3084, March 2001.\n"
- title: 5.2.  Informative References
  contents:
  - "5.2.  Informative References\n   [27] Raz, D., Schoenwalder, J., and B. Sugla,\
    \ \"An SNMP Application\n        Level Gateway for Payload Address Translation\"\
    , RFC 2962,\n        October 2000.\n   [28] McCloghrie, K. and F. Kastenholz,\
    \ \"The Interfaces Group MIB\",\n        RFC 2863, June 2000.\n"
- title: 6.  Acknowledgements
  contents:
  - "6.  Acknowledgements\n   The editor would like to acknowledge the constructive\
    \ feedback\n   provided by Joel M. Halpern on the individual protocol evaluation\n\
    \   contributions.  In addition, a thanks to Elwyn Davies, Christopher\n   Martin,\
    \ Bob Penfield, Scott Brim and Martin Stiemerling for\n   contributing to the\
    \ mailing list discussion on the document content.\n"
- title: Appendix A - SNMP Overview
  contents:
  - "Appendix A - SNMP Overview\n   The SNMP Management Framework presently consists\
    \ of five major\n   components:\n   o  An overall architecture, described in RFC\
    \ 3411 [5].  A more\n      detailed introduction and applicability statements\
    \ for the SNMP\n      Management Framework can be found in RFC 3410 [15].\n  \
    \ o  Mechanisms for describing and naming objects and events for the\n      purpose\
    \ of management.  The current version of this Structure of\n      Management Information\
    \ (SMI) is called SMIv2 and described in RFC\n      2578 [6], RFC 2579 [7] and\
    \ RFC 2580 [8].\n   o  Message protocols for transferring management information.\
    \  The\n      current version of the message protocol is called SNMPv3 and\n \
    \     described in RFC 3412 [10], RFC 3414 [11] and RFC 3417 [9].\n   o  Protocol\
    \ operations for accessing management information.  The\n      current version\
    \ of the protocol operations and associated PDU\n      formats is described in\
    \ RFC 3416 [12].\n   o  A set of fundamental applications described in RFC 3413\
    \ [13] and\n      the view-based access control mechanism described in RFC 3415\n\
    \      [14].\n   Managed objects are accessed via a virtual information store,\
    \ termed\n   the Management Information Base or MIB.  Objects in the MIB are\n\
    \   defined using the mechanisms defined in the SMI.\n"
- title: A.1 SNMPv3 Proxy Forwarding
  contents:
  - "A.1 SNMPv3 Proxy Forwarding\n   SNMPv3 proxy forwarding (RFC 3413 [13]) provides\
    \ a standardized\n   mechanism to configure an intermediate node to forward SNMP\
    \ messages.\n   A command generating entity sends requests to a proxy forwarding\n\
    \   entity that forwards the request to a third entity.\n   One SNMP entity may\
    \ serve both functions as the SNMP agent to monitor\n   and configure the node\
    \ on which it is resident, and as an\n   intermediate node in a proxy relationship\
    \ to permit monitoring and\n   configuration of additional entities.\n   Each\
    \ entity is identified by a unique engineID value, specifically to\n   support\
    \ proxy between addressing domains and/or trust domains.  An\n   SNMPv3 message\
    \ contains two engineIDs- one to identify the database\n   to be used for message\
    \ security, and one to identify the source (or\n   target) of the contained data.\
    \  Message security is applied between\n   the originator and the proxy, and then\
    \ between the proxy and the\n   end-target.  The PDU contains the engineID of\
    \ the node whose data is\n   contained in the message, which passes end-to-end,\
    \ unchanged by the\n   proxy.\n   SNMPv3 proxy was designed to provide a standard\
    \ SNMP approach to\n   inserting an intermediate node in the middle of communications\
    \ for a\n   variety of scenarios.  SNMPv3 proxy can support crossing addressing\n\
    \   domains, such as IPv4 and IPv6, crossing SNMP version domains, such\n   as\
    \ SNMPv3 and SNMPv1, crossing security mechanism domains, such as\n   DES and\
    \ AES, and for providing a single point of management contact\n   for a subset\
    \ of the network, such as managing a private network\n   through a NAT device\
    \ or a VPN endpoint.\n"
- title: A.2 Proxies Versus Application Level Gateways
  contents:
  - "A.2 Proxies Versus Application Level Gateways\n   Proxies are generally preferred\
    \ to Application Level Gateways for\n   SNMP.  ALGs typically modify the headers\
    \ and content of messages.\n   SNMP is a protocol designed for troubleshooting\
    \ network (mis-)\n   configurations.  Because an operator needs to understand\
    \ the actual\n   configuration, the translation of addresses within SNMP data\
    \ causes\n   confusion, hiding the actual configuration of a managed device from\n\
    \   the operator.  ALGs also introduce security vulnerabilities, and\n   other\
    \ complexities related to modifying SNMP data.\n   SNMP Proxies can modify message\
    \ headers without modifying the\n   contained data.  This avoids the issues associated\
    \ with translating\n   the payload data, while permitting application level translation\
    \ of\n   addresses.\n   The issues of ALGs versus proxies for SNMP Payload Address\n\
    \   Translation are discussed at length in RFC 2962 [27].\n"
- title: Appendix B - RSIP with Tunneling
  contents:
  - "Appendix B - RSIP with Tunneling\n   NAT requires ALGs (Application Layer Gateways)\
    \ in middleboxes without\n   MIDCOM, and application modifications or agents for\
    \ middleboxes with\n   MIDCOM.\n   Support for NAT without tunneling could easily\
    \ be added to the RSIP\n   control protocol.  NAT would be defined as a new, null\
    \ tunnel type.\n   Support for the NAT null tunnels could be implemented in hosts,\
    \ or in\n   applications or application agents.\n   If support for NAT null tunnels\
    \ were implemented in hosts, no\n   modifications to applications would be required,\
    \ and no application\n   agents or ALGs would be required.  This has obvious advantages.\
    \  In\n   addition to the NAT null tunnel, the host would have to implement an\n\
    \   RSIP / MIDCOM client (or a STUN client) and the middlebox would have\n   to\
    \ implement an RSIP / MIDCOM server, or a STUN server would have to\n   be available\
    \ _beyond_ the middlebox.  Note that the STUN client /\n   server approach may\
    \ not work with all types of middleboxes.\n   If support for NAT null tunnels\
    \ were NOT implemented in hosts, then\n   applications would have to be modified,\
    \ or application agents or ALGs\n   would have to be implemented.  This has the\
    \ advantage over tunnels\n   (whether null or not) of not requiring modification\
    \ to hosts, but\n   would require the modification of host applications or the\n\
    \   implementation of application agents, both of which would include an\n   RSIP\
    \ / MIDCOM client, and the implementation of an RSIP/MIDCOM server\n   in the\
    \ middlebox.  Again, in some situations, STUN could be used\n   instead of RSIP\
    \ / MIDCOM.\n   Tunneled or not, an RSIP / MIDCOM server is needed in the middlebox.\n\
    \   Tunneled, the host needs to be modified, but not the application.\n   Untunneled,\
    \ an agent must be added or the application must be\n   modified, but there would\
    \ be no host modifications.  The\n   advantages/disadvantages of tunneling would\
    \ need to be evaluated in\n   considering RSIP.\n"
- title: Appendix C - Megaco Modeling Approach
  contents:
  - "Appendix C - Megaco Modeling Approach\n   To model the Middlebox functions such\
    \ as firewall, NAT etc., a new\n   Middlebox Termination type needs to be defined\
    \ within Megaco.  If\n   policy-rule overlap or modification by multiple Agents\
    \ is NOT\n   required, then a policy rule is equivalent to a Termination (see\n\
    \   Figure 1).  The various components of a Policy rule such as filter,\n   action,\
    \ life-time, creator etc. are described as various properties\n   of a Termination.\
    \  Use of the Virtual Media Gateway (VMG) concept\n   allows for conflict-free\
    \ interaction of multiple MA's with the same\n   MB.\n                 +-------+\
    \             +-------+\n                 |  MA-1 |             |  MA-2 |\n  \
    \               |       |             |       |\n                 +-------+  \
    \   |IF2    +-------+\n                     |         |          |\n       +-------------|---------|----------|-----------+\n\
    \       |     +---------+       | +-------------+      |\n   IF1 |VMG1 | +--+\
    \    |       | | +--+  +--+  |VMG2  |IF3\n   ----------| |Tx|-------+    +---|Ty|--|Tz|----------------\n\
    \       |     | +--+    |  |      | +--+  +--+  |      |\n       | ....|     \
    \    |  |      +-------------+      |\n       |     +---------+  |           \
    \                |\n       |                  +---------------------------------\n\
    \       | Middlebox                                    | IF4\n       +----------------------------------------------+\n\
    \                              Tx: Termination x = Policy rule x\n           \
    \                   Ty: Termination y = Policy rule y\n                      \
    \        Tz: Termination z = Policy rule z\n                              MA:\
    \ MIDCOM Agent\n                              IF: Interface\n                \
    \          Figure 1.\n   If it is required to allow multiple agents manipulate\
    \ the same\n   Middlebox resource (e.g., a Policy rule or a filter), the latter\n\
    \   needs to be kept separate from the Termination (the Policy rule is\n   manipulated\
    \ by the MA by manipulating the properties of the\n   associated Termination).\
    \  For example, if overlapping policy rule\n   manipulation is required, then\
    \ a Termination shall be associated with\n   a single policy rule, but a policy\
    \ rule may be associated with more\n   than one Termination.  Thus, a Termination\
    \ can share a policy rule\n   with another Termination, or have a policy rule\
    \ partially overlapping\n   with that of another Termination.  This model allows\
    \ two MAs,\n   controlling two distinct Terminations (see Figure 2), manipulate\
    \ the\n   same or overlapping policy rules.  In Figure 2, policy rules 1 and 2\n\
    \   are overlapping and they are shared by MA-1 and MA-2.\n                 +-------+\
    \             +-------+\n                 |  MA-1 |             |  MA-2 |\n  \
    \               |       |             |       |\n                 +-------+  \
    \   |IF2    +-------+\n                     |         |          |          MB\n\
    \       +-------------|---------|----------|-----------+\n       |       +-----------+\
    \   | +-------------+      |\n   IF1 |VMG1   |     +--+  |   | | +--+  +--+  |VMG2\
    \  |IF3\n   ------------------|Ty|----+ +---|Tx|--|Tz|----------------\n     \
    \  |       |     +--+  | |   | +--+  +--+  |      |\n       | ....  |       |\
    \   | |   +--/------\\---+      |\n       |       +-------|---+ |     /      \
    \  \\         |\n       |               |     +----/----------\\------------------\n\
    \       |            +------+----+------+   +------+   |IF4\n       |        \
    \    |Policy1 Policy2   |   |Policy|   |\n       |            |    |      |  \
    \    |   |  3   |   |\n       |            +----+------+------+   +------+   |\n\
    \       +----------------------------------------------+\n                   \
    \     Tx: Termination x\n                        Ty: Termination y\n         \
    \               Tz: Termination z\n                        MA: MIDCOM Agent\n\
    \                        IF: Interface\n                        MB: Middlebox\n\
    \                           Figure 2.\n   This requires that the Agent and the\
    \ Middlebox adhere to the\n   following principles:\n   (1) Only one Termination\
    \ has read/write access to a filter at any\n       time.\n   (2) When the policy\
    \ rule is being modified by a new agent (i.e., not\n       the one that created\
    \ the policy) the Middlebox makes a policy\n       decision and decides whether\
    \ to accept the requested modification\n       or not.  In the case the modification\
    \ is accepted the initial\n       MIDCOM agent may be notified.\n"
- title: Appendix D - Diameter IPFilter Rule
  contents:
  - "Appendix D - Diameter IPFilter Rule\n   The IPFilterRule format is derived from\
    \ the OctetString AVP Base\n   Format.  It uses the UTF-8 encoding and has the\
    \ same requirements as\n   the UTF8String.  Packets may be filtered based on the\
    \ following\n   information that is associated with it:\n      Direction     \
    \                     (in or out)\n      Source and destination IP address  (possibly\
    \ masked)\n      Protocol\n      Source and destination port        (lists or\
    \ ranges)\n      TCP flags\n      IP fragment flag\n      IP options\n      ICMP\
    \ types\n   Rules for the appropriate direction are evaluated in order, with the\n\
    \   first matched rule terminating the evaluation.  Each packet is\n   evaluated\
    \ once.  If no rule matches, the packet is dropped if the\n   last rule evaluated\
    \ was a permit, and passed if the last rule was a\n   deny.\n   IPFilterRule filters\
    \ MUST follow the format:\n   action dir proto from src to dst [options]\n   action\
    \       permit - Allow packets that match the rule.\n                deny   -\
    \ Drop packets that match the rule.\n   dir          \"in\" is from the terminal,\
    \ \"out\" is to the\n                terminal.\n   proto        An IP protocol\
    \ specified by number.  The \"ip\"\n                keyword means any protocol\
    \ will match.\n   src and dst  <address/mask> [ports]\n                The <address/mask>\
    \ may be specified as:\n                ipno       An IPv4 or IPv6 number in dotted-\n\
    \                           quad or canonical IPv6 form.  Only\n             \
    \              this exact IP number will match the\n                         \
    \  rule.\n                ipno/bits  An IP number as above with a mask\n     \
    \                      width of the form 1.2.3.4/24.  In\n                   \
    \        this case, all IP numbers from\n                           1.2.3.0 to\
    \ 1.2.3.255 will match.\n                           The bit width MUST be valid\
    \ for the\n                           IP version and the IP number MUST\n    \
    \                       NOT have bits set beyond the mask.\n                 \
    \          For a match to occur, the same IP\n                           version\
    \ must be present in the\n                           packet that was used in describing\n\
    \                           the IP address.  To test for a\n                 \
    \          particular IP version, the bits part\n                           can\
    \ be set to zero.  The keyword\n                           \"any\" is 0.0.0.0/0\
    \ or the IPv6\n                           equivalent.  The keyword \"assigned\"\
    \n                           is the address or set of addresses\n            \
    \               assigned to the terminal.  For IPv4,\n                       \
    \    a typical first rule is often\n                           \"deny in ip! assigned\"\
    \n                The sense of the match can be inverted by\n                preceding\
    \ an address with the not modifier (!),\n                causing all other addresses\
    \ to be matched\n                instead.  This does not affect the selection\
    \ of\n                port numbers.\n                With the TCP, UDP and SCTP\
    \ protocols, optional\n                ports may be specified as:\n          \
    \              {port|port-port}[,ports[,...]]\n                The '-' notation\
    \ specifies a range of ports\n                (including boundaries).\n      \
    \          Fragmented packets that have a non-zero offset\n                (i.e.,\
    \ not the first fragment) will never match\n                a rule that has one\
    \ or more port\n                specifications.  See the frag option for\n   \
    \             details on matching fragmented packets.\n   options:\n      frag\
    \    Match if the packet is a fragment and this is not\n              the first\
    \ fragment of the datagram.  frag may not\n              be used in conjunction\
    \ with either tcpflags or\n              TCP/UDP port specifications.\n      ipoptions\
    \ spec\n              Match if the IP header contains the comma\n            \
    \  separated list of options specified in spec.  The\n              supported\
    \ IP options are:\n              ssrr (strict source route), lsrr (loose source\n\
    \              route), rr (record packet route) and ts\n              (timestamp).\
    \  The absence of a particular option\n              may be denoted with a '!'.\n\
    \      tcpoptions spec\n              Match if the TCP header contains the comma\n\
    \              separated list of options specified in spec.  The\n           \
    \   supported TCP options are:\n              mss (maximum segment size), window\
    \ (tcp window\n              advertisement), sack (selective ack), ts (rfc1323\n\
    \              timestamp) and cc (rfc1644 t/tcp connection\n              count).\
    \  The absence of a particular option may\n              be denoted with a '!'.\n\
    \      established\n              TCP packets only.  Match packets that have the\
    \ RST\n              or ACK bits set.\n      setup   TCP packets only.  Match\
    \ packets that have the SYN\n              bit set but no ACK bit.\n      tcpflags\
    \ spec\n              TCP packets only.  Match if the TCP header\n           \
    \   contains the comma separated list of flags\n              specified in spec.\
    \  The supported TCP flags are:\n              fin, syn, rst, psh, ack and urg.\
    \  The absence of a\n              particular flag may be denoted with a '!'.\
    \  A rule\n              that contains a tcpflags specification can never\n  \
    \            match a fragmented packet that has a non-zero\n              offset.\
    \  See the frag option for details on\n              matching fragmented packets.\n\
    \      icmptypes types\n              ICMP packets only.  Match if the ICMP type\
    \ is in\n              the list types.  The list may be specified as any\n   \
    \           combination of ranges or individual types\n              separated\
    \ by commas.  Both the numeric values and\n              the symbolic values listed\
    \ below can be used.  The\n              supported ICMP types are:\n         \
    \     echo reply (0), destination unreachable (3),\n              source quench\
    \ (4), redirect (5), echo request\n              (8), router advertisement (9),\
    \ router\n              solicitation (10), time-to-live exceeded (11), IP\n  \
    \            header bad (12), timestamp request (13),\n              timestamp\
    \ reply (14), information request (15),\n              information reply (16),\
    \ address mask request (17)\n              and address mask reply (18).\n   There\
    \ is one kind of packet that the access device MUST always\n   discard, that is\
    \ an IP fragment with a fragment offset of one.  This\n   is a valid packet, but\
    \ it only has one use, to try to circumvent\n   firewalls.\n   An access device\
    \ that is unable to interpret or apply a deny rule\n   MUST terminate the session.\
    \  An access device that is unable to\n   interpret or apply a permit rule MAY\
    \ apply a more restrictive rule.\n   An access device MAY apply deny rules of\
    \ its own before the supplied\n   rules, for example to protect the access device\
    \ owner's\n   infrastructure.\n   The rule syntax is a modified subset of ipfw(8)\
    \ from FreeBSD, and the\n   ipfw.c code may provide a useful base for implementations.\n"
- title: Contributors
  contents:
  - "Contributors\n   The following identifies the key contributors who provided the\n\
    \   primary content for this document in the form of individual documents\n  \
    \ for each protocol:\n   RSIP:\n      Jim Renkel\n   SNMP:\n      Juergen Quittek\n\
    \      NEC Europe Ltd.\n      EMail: quittek@ccrle.nec.de\n      David Harrington\n\
    \      Co-chair SNMPv3 WG\n      EMail: dbh@enterasys.com\n   Megaco:\n      Sanjoy\
    \ Sen\n      Cedric Aoun\n      Nortel\n      EMail: cedric.aoun@nortel.com\n\
    \      Tom Taylor\n      Nortel\n      EMail: taylor@nortel.com\n   Diameter:\n\
    \      Tom Taylor\n      Nortel\n      EMail:  taylor@nortel.com\n   COPS:\n \
    \     Cedric Aoun\n      Nortel\n      EMail: cedric.aoun@nortel.com\n      Kwok-Ho\
    \ Chan\n      Nortel\n      EMail: khchan@nortel.com\n      Louis-Nicolas Hamer\n\
    \      Reinaldo Penno\n      EMail: rpenno@juniper.net\n      Sanjoy Sen\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Mary Barnes\n   Nortel\n   2201 Lakeside Blvd.\n   Richardson,\
    \ TX USA\n   Phone:  1-972-684-5432\n   EMail:  mary.barnes@nortel.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet\n   gement\n"
