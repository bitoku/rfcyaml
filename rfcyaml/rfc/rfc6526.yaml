- contents:
  - "                 IP Flow Information Export (IPFIX) Per\n           Stream Control
    Transmission Protocol (SCTP) Stream\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies an extension to the specifications in RFC\n
    \  5101, IP Flow Information Export (IPFIX), when using the Partial\n   Reliability
    extension of SCTP (PR-SCTP, Partial Reliability Stream\n   Control Transmission
    Protocol).\n   When implemented at both the Exporting Process and Collecting\n
    \  Process, this method offers several advantages, such as the ability\n   to
    calculate Data Record losses for PR-SCTP per Template, immediate\n   export of
    Template Withdrawal Messages, immediate reuse of Template\n   IDs within an SCTP
    stream, reduced likelihood of Data Record loss,\n   and reduced demands on the
    Collecting Process.  When implemented in\n   only the Collecting Process or Exporting
    Process, then normal IPFIX\n   behavior will be seen without all of the additional
    benefits.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6526.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Relationship with IPFIX and PSAMP ..........................4\n      1.2.
    Applicability ..............................................5\n      1.3. Limitations
    ................................................5\n   2. Terminology .....................................................6\n
    \     2.1. Conventions Used in This Document ..........................6\n      2.2.
    IPFIX Documents Overview ...................................6\n      2.3. PSAMP
    Documents Overview ...................................7\n   3. IPFIX Protocol
    Specifications: Limitations and Improvements .....7\n      3.1. Data Record Loss
    Calculated Per Template ...................7\n           3.1.1. IPFIX Protocol
    Specifications: Limitation ...........7\n           3.1.2. IPFIX Export Per SCTP
    Stream: Advantage .............8\n      3.2. Immediate Template Withdrawal and
    Reuse ....................8\n           3.2.1. IPFIX Protocol Specifications:
    Limitation ...........8\n           3.2.2. IPFIX Export Per SCTP Stream: Advantages
    ............9\n      3.3. Requirement for Data Set Buffering .........................9\n
    \          3.3.1. IPFIX Protocol Specifications: Limitation ...........9\n           3.3.2.
    IPFIX Export Per SCTP Stream: Advantages ...........10\n   4. Specifications .................................................10\n
    \     4.1. New Information Element ...................................10\n      4.2.
    Template Management .......................................11\n      4.3. SCTP
    ......................................................12\n      4.4. Template
    Withdrawal Message ...............................13\n      4.5. The Collecting
    Process's Side .............................14\n           4.5.1. SCTP ...............................................14\n
    \          4.5.2. Enabling the Per-SCTP-Stream Extension .............14\n           4.5.3.
    Disabling the Per-SCTP-Stream Extension ............15\n           4.5.4. Calculating
    Data Record Loss Per Template ..........16\n   5. Resource Impact ................................................16\n
    \  6. Examples .......................................................17\n   7.
    IANA Considerations ............................................20\n   8. Security
    Considerations ........................................21\n   9. References .....................................................21\n
    \     9.1. Normative References ......................................21\n      9.2.
    Informative References ....................................21\n   10. Acknowledgments
    ...............................................22\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The IPFIX protocol [RFC5101] has the goal of exporting Flow\n
    \  information.  This protocol is designed to export information about\n   IP
    traffic Flows and related measurement data, where a Flow is\n   defined by a set
    of key attributes (e.g., source and destination IP\n   address, source and destination
    port, etc.).  However, thanks to its\n   Template mechanism, the IPFIX protocol
    can export any type of\n   information, as long as the relevant Information Element
    is specified\n   in the IPFIX information model [RFC5102], registered with IANA\n
    \  [IANA], or specified as an enterprise-specific Information Element.\n   The
    IPFIX protocol [RFC5101] specifies that traffic measurements for\n   Flows are
    exported using a TLV (Type, Length, Value) format.  The\n   information is exported
    using a Template Record, which is sent once\n   to export the {Type, Length} pairs
    that define the data format for\n   the Information Elements in a Flow.  The Data
    Records specify values\n   for each Flow.\n   The IPFIX protocol [RFC5101] is
    flexible: It foresees the usage of\n   multiple SCTP streams per association;
    it allows the transmission of\n   Data Sets, Template Sets, and/or Options Template
    Sets on any SCTP\n   stream; it offers full and partially reliable export of Data
    Sets; it\n   specifies both ordered and out-of-order delivery of Data Sets.\n
    \  However, due to bandwidth restrictions and packet losses in the\n   network
    as well as resource constraints on the Exporter and Collector\n   (e.g., limited
    buffer sizes), it is not always possible to export all\n   Data Sets in a reliable
    way.\n   This document specifies a method for exporting a Template Record and\n
    \  its associated Data Sets in a single SCTP stream, limiting each\n   Template
    ID to a single SCTP stream if possible, and imposing\n   in-order transmission.\n
    \  This method offers several advantages over IPFIX export as specified\n   in
    [RFC5101], such as the ability to calculate Data Record losses for\n   PR-SCTP
    per Template, immediate export of Template Withdrawal\n   Messages, immediate
    reuse of Template IDs within an SCTP stream,\n   reduced likelihood of Data Record
    loss, and reduced demands on the\n   Collecting Process.\n"
  - contents:
    - "1.1.  Relationship with IPFIX and PSAMP\n   The specifications in this document
      apply to the IPFIX protocol\n   specifications [RFC5101].  However, they only
      apply to the SCTP\n   transport protocol [RFC4960] option of the IPFIX protocol\n
      \  specifications (see Section 10 of [RFC5101]), specifically if the\n   Partial
      Reliability extension [RFC3758] is used.  All specifications\n   from [RFC5101]
      apply, unless specified otherwise in this document.\n   As the Packet Sampling
      (PSAMP) protocol specifications [RFC5476] are\n   based on the IPFIX protocol
      specifications, the specifications in\n   this document are also valid for the
      PSAMP protocol.\n"
    title: 1.1.  Relationship with IPFIX and PSAMP
  - contents:
    - "1.2.  Applicability\n   The specifications contained in this document are applicable
      to cases\n   where application requirements include knowing how many Data Records\n
      \  of a certain type (i.e., from a certain Template) were lost.  A\n   typical
      example is a router exporting billing records, where the\n   Exporting Process
      cannot afford to export all the Flow Records\n   reliably, due to limited resources
      to buffer a large number of Flow\n   Records.  Such a situation may occur if
      Data Sets are generated at a\n   higher rate at the Exporter than can be transferred
      to the Collector\n   because of bandwidth limitations in the network or slow
      reception at\n   the Collector.\n   To be more precise, the specification applicability
      is the case where\n   multiple Templates are simultaneously active within a
      single SCTP\n   Transport Session and the calculation of the Data Record loss
      for a\n   particular Template is required.  Indeed, with the current IPFIX\n
      \  specifications [RFC5101], if an IPFIX Message is lost (UDP or SCTP\n   partially
      reliable), it is not possible to determine to which\n   Template(s) the lost
      Data Records belong.\n   Exporting Processes following the specifications in
      this document\n   will interoperate with existing Collecting Processes that
      comply with\n   [RFC5101]; no changes are required at the Collecting Process
      to\n   receive data from an Exporting Process compliant with this method.\n
      \  However, Collecting Processes may implement additional support for\n   per-stream
      export specified in this document in order to realize all\n   the benefits of
      the approach specified herein.  Since the\n   specifications in this document
      mandate in-order transmission of\n   (Options) Templates and associated Data
      Records, late arrival of\n   (Options) Templates at the Collecting Process is
      avoided, which means\n   that there are no Data Records that need to be dropped
      or buffered.\n"
    title: 1.2.  Applicability
  - contents:
    - "1.3.  Limitations\n   When multiple Templates are required, this method requires
      multiple\n   SCTP streams in the association between the Exporting Process and\n
      \  Collecting Process, ideally one stream per Template.  To properly\n   handle
      the transmission of additional Templates during the Transport\n   Session, additional
      SCTP streams are sometimes required.  These SCTP\n   streams can only be added
      within the existing SCTP association if the\n   specifications in [RFC6525]
      are supported.\n"
    title: 1.3.  Limitations
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   IPFIX-specific terminology used in this document is defined
    in\n   Section 2 of [RFC5101].  As in [RFC5101], these IPFIX-specific terms\n
    \  have the first letter of a word capitalized when used in this\n   document.\n
    \  Note that, in this document, \"(Options) Template\" is used to refer to\n   Templates
    and Options Templates.  Unless otherwise specified,\n   \"Template\" alone refers
    to Templates exclusive of Options Templates.\n   Template Reuse Delay\n      The
    time the Exporting Process needs to wait after sending the\n      last Data Set
    described by a given Template before sending a\n      Template Withdrawal Message
    for the Template.  A suitable default\n      value is 5 seconds, as specified
    in [RFC5101].\n"
  - contents:
    - "2.1.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in RFC 2119 [RFC2119].\n"
    title: 2.1.  Conventions Used in This Document
  - contents:
    - "2.2.  IPFIX Documents Overview\n   The IPFIX protocol [RFC5101] provides network
      administrators with\n   access to Flow information.\n   The architecture for
      the export of measured Flow information out of\n   an IPFIX Exporting Process
      to a Collecting Process is defined in the\n   IPFIX architecture [RFC5470],
      per the requirements defined in\n   [RFC3917].\n   The IPFIX architecture [RFC5470]
      specifies how IPFIX Data Records and\n   Templates are carried via a congestion-aware
      transport protocol from\n   IPFIX Exporting Processes to IPFIX Collecting Processes.\n
      \  IPFIX has a formal description of IPFIX Information Elements, their\n   names,
      their types, and additional semantic information, as specified\n   in the IPFIX
      information model [RFC5102].\n   Finally, the IPFIX applicability statement
      [RFC5472] describes what\n   types of applications can use the IPFIX protocol
      and how they can use\n   the information provided.  Furthermore, it shows how
      the IPFIX\n   framework relates to other architectures and frameworks.\n"
    title: 2.2.  IPFIX Documents Overview
  - contents:
    - "2.3.  PSAMP Documents Overview\n   The document \"A Framework for Packet Selection
      and Reporting\"\n   [RFC5474] describes the Packet Sampling (PSAMP) framework
      for network\n   elements to select subsets of packets by statistical and other\n
      \  methods, and to export a stream of reports on the selected packets to\n   a
      Collector.\n   The set of packet selection techniques (sampling, filtering,
      and\n   hashing) supported by PSAMP are described in \"Sampling and Filtering\n
      \  Techniques for IP Packet Selection\" [RFC5475].\n   The PSAMP protocol [RFC5476]
      specifies the export of packet\n   information from a PSAMP Exporting Process
      to a PSAMP Collecting\n   Process.  Like IPFIX, PSAMP has a formal description
      of its\n   Information Elements, their names, their types, and additional\n
      \  semantic information.  The PSAMP information model is defined in\n   [RFC5477].\n"
    title: 2.3.  PSAMP Documents Overview
  title: 2.  Terminology
- contents:
  - "3.  IPFIX Protocol Specifications: Limitations and Improvements\n   For three
    specific topics (\"Data Record Loss Calculated Per\n   Template\", \"Immediate
    Template Withdrawal and Reuse\", and\n   \"Requirement for Data Set Buffering\"),
    this section explains the\n   limitations of the IPFIX protocol specifications
    on the one hand, and\n   the advantages of the method specified in this document
    on the other.\n"
  - contents:
    - '3.1.  Data Record Loss Calculated Per Template

      '
    - contents:
      - "3.1.1.  IPFIX Protocol Specifications: Limitation\n   Section 6.3.2 of [RFC3917],
        \"Requirements for IP Flow Information\n   Export\" discusses the data transfer
        reliability issues:\n      Loss of flow records during the data transfer from
        the Exporting\n      Process to the Collecting Process must be indicated at
        the\n      Collecting Process.\n   However, in some cases, it may be important
        to know how many Data\n   Records of a certain type were lost (e.g., in the
        case of billing),\n   and IPFIX does not conventionally provide this information.\n
        \  A Collecting Process can detect out-of-sequence, dropped, or\n   duplicate
        IPFIX Messages by tracking the Sequence Number [RFC5101].\n   Note that the
        Sequence Number field in the IPFIX Message header\n   increases with the number
        of IPFIX Data Records within the SCTP\n   stream, so loss will be detected
        per stream.\n   The IPFIX protocol specifications [RFC5101] specify that Data
        Records\n   defined by any Template may be sent on any SCTP stream.  As such,
        if\n   there is more than one Template defined within the whole SCTP\n   association,
        then there is no way of knowing with which Template any\n   lost Data Record
        is associated.  This is true, no matter what\n   convention the Exporting
        Process uses to send Data Records on\n   different SCTP streams, as the protocol
        makes no guarantees.\n   Note that a workaround allowed by the IPFIX specifications
        in\n   [RFC5101] is to use only one Template Record per SCTP Transport\n   Session,
        at the cost of multiplying the number of SCTP Transport\n   Sessions when
        multiple Template Records are required.\n"
      title: '3.1.1.  IPFIX Protocol Specifications: Limitation'
    - contents:
      - "3.1.2.  IPFIX Export Per SCTP Stream: Advantage\n   Using the specifications
        in this document, it is guaranteed that any\n   lost Data Records will be
        associated only with the Templates that are\n   defined on that SCTP stream.
        \ By defining only one Template per SCTP\n   stream, it is ensured that any
        loss is associated with that single\n   Template.  So, by exporting each Template
        and its corresponding Data\n   Records in a separate SCTP stream from other
        Templates and Data\n   Records, the loss pertaining to each specific Template
        can be deduced\n   from the Sequence Number field in the IPFIX Message headers.\n"
      title: '3.1.2.  IPFIX Export Per SCTP Stream: Advantage'
    title: 3.1.  Data Record Loss Calculated Per Template
  - contents:
    - '3.2.  Immediate Template Withdrawal and Reuse

      '
    - contents:
      - "3.2.1.  IPFIX Protocol Specifications: Limitation\n   A Collecting Process
        must have received the Template Record\n   associated with the Data Records
        to be able to decode the information\n   in the Data Records.  [RFC5101] specifies
        the following:\n      The Exporting Process SHOULD transmit the Template Set
        and Options\n      Template Set in advance of any Data Sets that use that
        (Options)\n      Template ID, to help ensure that the Collecting Process has
        the\n      Template Record before receiving the first Data Record.\n   The
        fact that the Collecting Process cannot decode the Data Records\n   without
        the corresponding Template Record may result in Data Records\n   being discarded
        by the Collecting Process, as specified in [RFC5101]:\n      The Collecting
        Process normally receives Template Records from the\n      Exporting Process
        before receiving Data Records.  The Data Records\n      are then decoded and
        stored by the Collector.  If the Template\n      Records have not been received
        at the time Data Records are\n      received, the Collecting Process MAY store
        the Data Records for a\n      short period of time and decode them after the
        Template Records\n      are received.\n"
      title: '3.2.1.  IPFIX Protocol Specifications: Limitation'
    - contents:
      - "3.2.2.  IPFIX Export Per SCTP Stream: Advantages\n   By exporting each Template
        Record and the corresponding Data Records\n   within a single SCTP stream
        and imposing in-order transmission, the\n   Template Record will always arrive
        before the associated Data\n   Records.  Therefore, there is no risk that
        the Collecting Process\n   discards Data Records while waiting for the Template
        Record to\n   arrive.\n   Furthermore, when reusing a Template ID within an
        SCTP stream, the\n   Template Withdrawal Message will be guaranteed to arrive
        before the\n   new definition of the Template, and therefore the Template
        Record may\n   be sent directly after the Template Withdrawal Message.  In
        other\n   words, the Template Reuse Delay restriction (5 seconds by default,
        as\n   specified in [RFC5101]) does not need to be applied to Template ID\n
        \  reuse within the same SCTP stream.\n   Another advantage of the new specifications
        in this document is a\n   reduced load on the Collecting Process.  Indeed,
        the Collecting\n   Process doesn't have to store the Data Records while waiting
        for the\n   Template Record, as the transmission order is always guaranteed.\n
        \  This way, extra reliability of the Data Records is achieved without\n   extra
        burden on the Collecting Process.\n"
      title: '3.2.2.  IPFIX Export Per SCTP Stream: Advantages'
    title: 3.2.  Immediate Template Withdrawal and Reuse
  - contents:
    - '3.3.  Requirement for Data Set Buffering

      '
    - contents:
      - "3.3.1.  IPFIX Protocol Specifications: Limitation\n   The fact that the protocol
        specifications in [RFC5101] are flexible\n   in terms of SCTP stream(s) on
        which the Template Set, Options\n   Template Set, and corresponding Data Sets
        are exported implies that\n   the (Options) Template Record might be exported
        on a different SCTP\n   stream than the corresponding Data Records.  This
        might cause Data\n   Record loss in the Collecting Process, as ordered transmission
        across\n   SCTP streams is not guaranteed.\n   For example, a Template Record
        may be blocked pending reliable\n   transmission on one SCTP stream while
        the corresponding Data Records\n   may be transmitted immediately in another
        SCTP stream.  Also, due to\n   different levels of SCTP stream congestion,
        it is possible that even\n   if the Template Record and corresponding Data
        Records are sent\n   reliably, Data Records sent on a different SCTP stream
        than the\n   Template Record might still arrive before the Template Record.\n"
      title: '3.3.1.  IPFIX Protocol Specifications: Limitation'
    - contents:
      - "3.3.2.  IPFIX Export Per SCTP Stream: Advantages\n   By exporting each Template
        Record and all corresponding Data Records\n   within a single SCTP stream,
        and imposing in-order transmission, the\n   issue of ordered transmission
        across multiple SCTP streams is\n   avoided.\n   By exporting all corresponding
        Data Records within the same ordered\n   SCTP stream as the Template Record,
        each SCTP stream is independent\n   and self-contained, and the interaction
        between SCTP streams is\n   limited to that of the Options Template and associated
        Data Records\n   sent in different streams.  This has several advantageous\n
        \  consequences, including order preservation that does not result in\n   the
        blocking of unrelated data, and load reduction on the Collecting\n   Process
        (as the Template Records are guaranteed to be delivered\n   before the associated
        Data Records, there is no need for the\n   buffering of Data Sets that correspond
        with Templates that are\n   missing).\n"
      title: '3.3.2.  IPFIX Export Per SCTP Stream: Advantages'
    title: 3.3.  Requirement for Data Set Buffering
  title: '3.  IPFIX Protocol Specifications: Limitations and Improvements'
- contents:
  - "4.  Specifications\n   This section specifies Exporting Process and Collecting
    Process\n   behavior different from that in [RFC5101] in order to realize the\n
    \  benefits of per-stream export.  Note that Exporting Processes\n   following
    these specifications will interoperate with [RFC5101]-\n   compliant Collecting
    Processes, but that Collecting Processes will\n   have to follow additional non-interoperable
    specifications to realize\n   the full benefits of the technique.  These new specifications,
    which\n   add to those in [RFC5101], are described with the key words defined\n
    \  in [RFC2119].\n"
  - contents:
    - "4.1.  New Information Element\n   dataRecordsReliability\n      Description:\n
      \        The export reliability of Data Records, within this SCTP\n         stream,
      for the element(s) in the Options Template scope.  A\n         typical example
      of an element for which the export reliability\n         will be reported is
      the Template ID, as specified in the Data\n         Records Reliability Options
      Template.  A value of 'True' means\n         that the Exporting Process MUST
      send any Data Records\n         associated with the element(s) reliably within
      this SCTP\n         stream.  A value of 'False' means that the Exporting Process\n
      \        MAY send any Data Records associated with the element(s)\n         unreliably
      within this SCTP stream.\n      Abstract Data Type: boolean\n      Data Type
      Semantics: identifier\n      ElementId: 276\n      Status: current\n   Per Section
      6.1.5 of [RFC5101], the boolean data type is encoded as a\n   single octet,
      with the value of 1 for True and the value of 2 for\n   False.\n"
    title: 4.1.  New Information Element
  - contents:
    - "4.2.  Template Management\n   To take advantage of per-stream export, Exporting
      Processes MUST\n   follow the specification in this section in addition to Section
      8,\n   \"Template Management\", of [RFC5101].\n   As specified in [RFC5101],
      Template Sets and Options Template Sets\n   MUST be sent reliably.\n   Any Data
      Sets associated with a Template Record MUST be sent on the\n   same SCTP stream
      on which the Template Record was sent.\n   The Data Records Reliability Options
      Template is used to explicitly\n   inform the Collecting Process which Templates
      will be used in each\n   SCTP stream and whether each set of associated Data
      Records will be\n   sent reliably or unreliably.  After defining a Template
      ID and before\n   sending any associated Data Records on an SCTP stream, the
      Exporting\n   Process MUST notify the Collecting Process of its intention to
      send\n   those Data Records reliably or unreliably within that SCTP stream.\n
      \  It does this by sending a Data Record defined by the Data Records\n   Reliability
      Options Template for the Template associated with the\n   Data Records to be
      sent.  If it does not, then the Collecting Process\n   MUST disable this extension
      for the SCTP association.  The one\n   exception to this rule is that the Data
      Records associated with the\n   Data Records Reliability Options Template don't
      require an explicit\n   notification, as these MUST always be sent reliably.\n
      \  The Data Records Reliability Options Template MUST contain the\n   following
      Information Elements:\n      Scope:     Template ID\n      Non-scope: dataRecordsReliability\n
      \  After sending a value of 'True' for the dataRecordsReliability\n   Element,
      the Exporting Process MUST send any Data Records associated\n   with the currently
      defined Template ID reliably within this SCTP\n   stream.  After sending a value
      of 'False' for the\n   dataRecordsReliability Element, the Exporting Process
      MAY send any\n   Data Records associated with the Template ID unreliably within
      this\n   SCTP stream.\n   If the Exporting Process wants to change the Data
      Records Reliability\n   value (from reliable to unreliable, or vice versa) for
      Data Records\n   on an SCTP stream, the Template MUST be withdrawn, and a new
      Template\n   MUST be used.\n   The Data Records Reliability Options Template
      MAY contain other\n   non-scope Information Elements associated with the (Options)\n
      \  Template.\n   When an Options Template (including the Data Records Reliability\n
      \  Options Template) and associated Data Records are sent in the same\n   SCTP
      stream, the first associated Data Record can follow the Options\n   Template
      immediately.  When the Options Template and associated Data\n   Records are
      sent in different SCTP streams, the Exporting Process\n   SHOULD transmit the
      Options Template in advance of any Data Sets that\n   use it, to help ensure
      that the Collector has received the Options\n   Template Record before receiving
      the first associated Data Record.\n   It is RECOMMENDED that the Exporting Process
      only sends a single\n   Template and corresponding Data Sets within a single
      SCTP stream in\n   order to enable calculation of the potential Data Record
      loss for\n   this Template.  The Exporting Process MAY group related (Options)\n
      \  Templates and their associated Data Records within a single SCTP\n   stream
      so that loss statistics are calculated for the group of\n   Templates that are
      being sent unreliably within the SCTP stream.\n   This is suitable in cases
      where there are only slight variations\n   among the Templates in a group (e.g.,
      the omission of unavailable\n   fields for export efficiency) and may be necessary
      if the SCTP\n   association does not support enough SCTP streams to export each\n
      \  Template in its own SCTP stream.\n   If an SCTP stream contains a mixture
      of Data Records defined by\n   Template Records and by Options Template Records,
      the Data Records\n   defined by the Options Template Records SHOULD be sent
      reliably so\n   that the Collecting Process does not consider any loss to be\n
      \  associated with the Options Data Records.\n"
    title: 4.2.  Template Management
  - contents:
    - "4.3.  SCTP\n   To take advantage of per-stream export, Exporting Processes
      MUST\n   manage SCTP streams according to the specification in this section,\n
      \  in addition to Section 10.2.4.3, \"Stream\", of [RFC5101].\n   PR-SCTP [RFC3758]
      MUST be implemented by all compliant\n   implementations.\n   All IPFIX Messages
      in an SCTP stream MUST be sent in order.\n   As specified in [RFC5101], depending
      on the requirements of the\n   application, the Exporting Process may send Data
      Sets with full or\n   partial reliability.\n   If the Exporting Process is required
      to export a new Template Record\n   but there are no more free SCTP streams
      available, it SHOULD attempt\n   to increase the number of outbound SCTP streams
      to which it is able\n   to send, per [RFC6525].  Alternatively, the Exporting
      Process MAY add\n   the Template Set and Data Records to an existing SCTP stream
      at the\n   cost of diluting the granularity of any Data Record loss attribution.\n
      \  An alternative that may result in the loss of Flow Records (for\n   example,
      due to lack of buffering on the Exporter) is to restart the\n   SCTP association
      with an increased number of SCTP streams.\n"
    title: 4.3.  SCTP
  - contents:
    - "4.4.  Template Withdrawal Message\n   To take advantage of per-stream export,
      Exporting Processes MUST send\n   Template Withdrawal Messages according to
      the specification in this\n   section, in addition to Section 8, \"Template
      Management\", of\n   [RFC5101].\n   As specified in [RFC5101], Templates that
      are no longer in use SHOULD\n   be deleted.  Before reusing a Template ID, the
      Template MUST be\n   deleted.  In order to delete an allocated Template, the
      Template is\n   withdrawn through the use of a Template Withdrawal Message.\n
      \  The Template Withdrawal Message MUST be sent on the same SCTP stream\n   as
      the associated Template Record.\n   The Template Withdrawal Message MUST be
      sent reliably, using SCTP-\n   ordered delivery per [RFC5101].  As all IPFIX
      Messages are sent in\n   order within an SCTP stream (per the specifications
      in this\n   document), the IPFIX Message containing the Template Withdrawal\n
      \  Message will not arrive at the Collecting Process before any\n   associated
      and previously sent Data Record.  As a consequence, no\n   Data Records will
      be lost due to delayed arrival at the Collecting\n   Process.\n   The Template
      ID from a withdrawn Template MAY be reused on the same\n   SCTP stream immediately
      after the Template Withdrawal Message is\n   sent.  This case is equivalent
      to the use of a Template Reuse Delay\n   value of 0.\n   After reusing the Template
      ID, the Exporting Process MUST send a Data\n   Record associated with the Data
      Records Reliability Options Template\n   to specify the reliability level of
      the Data Records associated with\n   the new Template.\n   If the Template ID
      is to be reused on a different SCTP stream, the\n   new Template Record MUST
      NOT be sent before the Template Reuse Delay\n   interval.\n   A Template Withdrawal
      Message to withdraw all Templates for the\n   Observation Domain ID specified
      in the IPFIX Message header MUST NOT\n   be used.\n   Multiple Template IDs
      MAY be withdrawn with a single Template\n   Withdrawal Message under the condition
      that all the Template IDs in\n   the Template Withdrawal Message are used on
      the same SCTP stream as\n   the Template Withdrawal Message.\n"
    title: 4.4.  Template Withdrawal Message
  - contents:
    - "4.5.  The Collecting Process's Side\n   Collecting Processes must operate in
      a fashion slightly contrary to\n   [RFC5101] in order to realize the full benefits
      of per-stream export.\n   However, the specification in this section contains
      a mechanism that\n   allows per-stream-capable Collecting Processes to selectively
      enable\n   per-stream export, in order to ensure interoperability of per-stream-\n
      \  capable Collecting Processes with Exporting Processes that do not\n   implement
      per-stream export.\n"
    - contents:
      - "4.5.1.  SCTP\n   As specified in [RFC5101], the Collecting Process SHOULD
        listen for a\n   new association request from the Exporting Process.  The
        Exporting\n   Process will request a number of SCTP streams to use for export.\n
        \  A Collecting Process SHOULD support the procedure for the addition of\n
        \  an SCTP stream specified in [RFC6525].\n"
      title: 4.5.1.  SCTP
    - contents:
      - "4.5.2.  Enabling the Per-SCTP-Stream Extension\n   In IPFIX, there is no
        explicit notification of the Exporting\n   Process's capabilities.  There
        is also no return channel for the\n   Collecting Process to communicate its
        capabilities.\n   When the Exporting Process is sending according to the per-SCTP-\n
        \  stream extension, the first Data Record received by the Collecting\n   Process
        will be associated with the Data Records Reliability Options\n   Template.
        \ In this case, the Collecting Process enables the extension\n   for this
        Transport Session.  Otherwise, the Collecting Process MUST\n   NOT enable
        the extension for this Transport Session.\n   The Collecting Process MUST
        accept other non-scope Information\n   Elements in the Data Records Reliability
        Options Template.\n"
      title: 4.5.2.  Enabling the Per-SCTP-Stream Extension
    - contents:
      - "4.5.3.  Disabling the Per-SCTP-Stream Extension\n   Nothing prevents an implementation
        that does not meet the\n   specification of the per-SCTP-stream extension
        from sending a\n   Template that looks like a dataRecordsReliability Options
        Template.\n   Therefore, a Collecting Process MUST detect if the Exporting
        Process\n   fails to meet the specification fully.  If any of the conditions\n
        \  below is met, the Exporting Process does not properly use the\n   per-SCTP-stream
        extension, and the Collecting Process MUST log an\n   error message and disable
        this extension for the SCTP association.\n      1. A Data Record is received
        before the appropriate Data Record\n         associated with the Data Records
        Reliability Options Template\n         has been received on the same SCTP
        stream (see Section 4.2).\n         Note: Data Records associated with the
        Data Records Reliability\n         Options Template are an exception to this
        rule.\n      2. A Data Record associated with a Data Records Reliability\n
        \        Options Template is received on an SCTP stream for a\n         (non-Options)
        Template that was defined on a different SCTP\n         stream.\n      3.
        A second Data Record associated with the Data Records\n         Reliability
        Options Template is received for the same (Options)\n         Template.\n
        \     4. A Data Record or a Template Withdrawal Message is associated\n         with
        a Template that was defined on a different SCTP stream.\n      5. Loss of
        Data Records is detected within a stream where a Data\n         Record associated
        with the Data Records Reliability Options\n         Template indicating unreliable
        transmission for any Template\n         has not been received.\n      6. A
        message is received with the SCTP U(nordered) flag set to 1\n         (i.e.,
        the message was sent unordered), even if it is processed\n         in order.\n"
      title: 4.5.3.  Disabling the Per-SCTP-Stream Extension
    - contents:
      - "4.5.4.  Calculating Data Record Loss Per Template\n   As specified in [RFC5101],
        the IPFIX protocol has a Sequence Number\n   field in the IPFIX Message header
        that increases with the number of\n   IPFIX Data Records in the IPFIX Message.
        \ A Collecting Process may\n   detect out-of-sequence, dropped, or duplicate
        IPFIX Messages by\n   tracking the Sequence Number.\n   When one or more sequential
        IPFIX Messages are considered lost, the\n   number of lost Data Records is
        equal to the Sequence Number of the\n   first IPFIX Message Header following
        the lost packets (S2) minus the\n   Sequence Number of the first lost IPFIX
        Message (S1).  The Sequence\n   Number of the first lost IPFIX Message can
        be calculated as the\n   Sequence Number of the last IPFIX Message before
        the sequence of lost\n   IPFIX Messages (S0) plus the number of Data Records
        in that IPFIX\n   Message (N0).\n      S1 = S0 + N0\n      loss = (S2 - S1)
        (mod(2^32))\n           = (S2 - (S0 + N0)) (mod(2^32))\n   Note that modulo
        2^32 arithmetic is required, since the Sequence\n   Number may wrap within
        the series of lost IPFIX Messages.  If less\n   than 2^32 Data Records are
        lost in a sequence (which can be assumed\n   in practice), the above equation
        returns the exact number of lost\n   Data Records.\n   Note that using an
        unsigned32 type for the loss would automatically\n   take care of the mod(2^32)
        operation.\n   As this Sequence Number is incremented per SCTP stream, the
        loss of\n   Data Records sent in that SCTP stream can be calculated in the
        case\n   of partially reliable export.  This loss can be attributed to the\n
        \  Data Records sent for the (Options) Template(s) whose records are\n   being
        sent unreliably within that SCTP stream.\n"
      title: 4.5.4.  Calculating Data Record Loss Per Template
    title: 4.5.  The Collecting Process's Side
  title: 4.  Specifications
- contents:
  - "5.  Resource Impact\n   Although adding the new SCTP streams requires a message
    exchange, it\n   is more lightweight to set up additional SCTP streams than to
    set up\n   a new SCTP association, since the only overhead of adding SCTP\n   stream(s)
    to an existing SCTP association is the addition of 16-24\n   more bytes (allocated
    in the SCTP association, a single time),\n   whereas setting up a new SCTP association
    requires more overhead.\n   In terms of throughput impact, the fact that these
    specifications\n   discourage multiplexing Templates and Data Records of different\n
    \  Template IDs may lead to a slightly larger IPFIX Message overhead.\n   If the
    Data Record rate is low for a specific Template (and hence a\n   specific SCTP
    stream), the Exporting Process might not be able to\n   fill the IPFIX Messages
    with Data Records associated with other\n   Templates.  In such a situation, there
    is a potential overhead due to\n   additional IPFIX Message headers and SCTP chunk
    headers.\n   Finally, with respect to the processing overhead on the Exporter,
    a\n   lot of state information must be stored when a large number of SCTP\n   streams
    are used within an SCTP association.  However, no comparison\n   of the performance
    impact of multiple streams within an SCTP\n   association versus opening the same
    number of independent SCTP\n   associations is available.\n"
  title: 5.  Resource Impact
- contents:
  - "6.  Examples\n   Figure 1 shows an example where SCTP stream 10 carries a Template\n
    \  Record with Template ID 257 transmitted with full reliability (FR),\n   together
    with associated Data Records transmitted with partial\n   reliability (PR).  The
    Data Records Reliability Options Template with\n   Template ID 256 is transmitted
    with full reliability.  Its\n   corresponding Data Set contains one Data Record.\n
    \  Record 1:\n      o Scope:     Template ID = 257\n      o Non-scope: dataRecordsReliability
    = False\n                      +--------+       +---------+   +--------+\n                      |
    \       |       |         |   |        |\n        stream 10 ----| Data   | . .
    . |  Data   |---| Data   |---...\n                      |   257  |       |    257
    \ |   |   256  |\n                      |      PR|       |       PR|   |      FR|\n
    \                     +--------+       +---------+   +--------+\n                             +----------+
    \      +-------------+\n                             |          |       | Reliability
    |\n                             |          |       | Options     |\n                       ...---|
    Template |-------| Template    |------>\n                             |     257
    \ |       |        256  |\n                             |        FR|       |           FR|\n
    \                            +----------+       +-------------+\n                                 Figure
    1\n   Note that Template 257 will always be processed before the Data\n   Records
    by the Collecting Process, because all IPFIX Messages are\n   sent in order within
    an SCTP stream.  Therefore, the job of the\n   Collecting Process is simplified.
    \ Furthermore, the Data Record loss\n   for Template 257 can easily be calculated
    by the Collecting Process.\n   If an Options Template is necessary to understand
    the content of a\n   Data Record (i.e., the scope in the Options Template Record
    is an\n   Information Element contained in the Data Record or associated with\n
    \  the Data Record), the Options Template Record should be sent in the\n   same
    SCTP stream, as displayed in Figure 2.\n                       +--------+   +--------+
    \    +--------+\n                       |        |   |        |     |        |\n
    \        stream 20 ----| Data   |...| Data   |-----| Data   |--- ...\n                       |
    \  260  |   |   260  |     |   259  |\n                       |      PR|   |      PR|
    \    |      FR|\n                       +--------+   +--------+     +--------+\n
    \                             +--------+       +----------+\n                              |
    \       |       |          |\n                        ...---| Data   |-------|
    Template |---...\n                              |   258  |       |     260  |\n
    \                             |      FR|       |        FR|\n                              +--------+
    \      +----------+\n                           +----------+       +-------------+\n
    \                          | Options  |       | Reliability |\n                           |
    Template |       | Options     |\n                     ...---|          |-------|
    Template    |------>\n                           |     259  |       |        258
    \ |\n                           |        FR|       |           FR|\n                           +----------+
    \      +-------------+\n                                 Figure 2\n   Figure 2
    shows an example where SCTP stream 20 carries the following:\n   -  a Data Records
    Reliability Options Template with Template ID 258,\n      transmitted with full
    reliability.\n   -  an Options Template Record with Template ID 259, transmitted
    with\n      full reliability.  This Options Template Record contains\n      additional
    information related to the subsequent Data Records\n      based on Template ID
    260.  Typical examples are the Common\n      Properties information [RFC5473]
    or the Selector Report\n      Interpretation [RFC5476].\n   -  a Template Record
    with Template ID 260, transmitted with full\n      reliability.\n   -  a Data
    Set specified by the Reliability Options Template with\n      Template ID 258,
    transmitted with full reliability.\n      The Data Set contains three Data Records:\n
    \     Record 1:\n         o Scope:     Template ID = 258\n         o Non-scope:
    dataRecordsReliability = True\n      Record 2:\n         o Scope:     Template
    ID = 259\n         o Non-scope: dataRecordsReliability = True\n      Record 3:\n
    \        o Scope:     Template ID = 260\n         o Non-scope: dataRecordsReliability
    = False\n      These Data Records inform the Collecting Process that the Data\n
    \     Records for Template IDs 258 and 259 are sent reliably, while the\n      Data
    Records for Template ID 260 are not.  Note that the first\n      Data Record associated
    with the Data Record Reliability Options\n      Template (Template ID 258) is
    not required and can be omitted.\n   -  a Data Record specified by Template ID
    259, transmitted with full\n      reliability.\n   -  a Data Record specified
    by Template ID 260, transmitted with\n      partial reliability.\n   If the Collecting
    Process observes some Data Record loss using the\n   Sequence Number, the loss
    can only stem from the Data Records\n   associated with Template ID 260, as these
    are the only Data Records\n   not exported reliably.  Therefore, the calculation
    of loss per\n   Template ID 260 is possible.\n   Note that Options Templates 258,
    259, and 260 will always arrive\n   before their associated Data Records, respectively,
    because all IPFIX\n   Messages must be sent in order within an SCTP stream.\n
    \  Figure 3 shows an example where SCTP stream 30 carries a Template\n   Record
    with Template ID 262 transmitted with full reliability, an\n   associated Data
    Record transmitted with full reliability, and a\n   Template Withdrawal Message,
    followed by a redefinition of Template\n   ID 262, and finally the Data Record
    associated with the new Template\n   transmitted with partial reliability.  The
    Template Withdrawal\n   Message and the new definition of Template ID 262 are
    sent\n   immediately, without waiting for the Template Reuse Delay interval.\n
    \                      +--------+   +----------+     +----------+\n                       |
    \       |   |Data      |     |          |\n      stream 30 ... ---| Data   |...|
    \ 261     |-----| Template |---\n                       |   262  |   |tmpID: 262|
    \    |    262   |\n                       |      PR|   |dRR: False|     |        FR|\n
    \                      +--------+   +----------+     +----------+\n                 +----------+
    \    +--------+       +----------+\n                 | Template |     |        |
    \      | Data     |\n              ...| Withdraw |-----| Data   |-------|   261
    \   |---...\n                 |    262   |     |   262  |       |tmpID: 262|\n
    \                |        FR|     |      FR|       |dRR:  True|\n                 +----------+
    \    +--------+       +----------+\n                           +----------+       +-------------+\n
    \                          |          |       | Reliability |\n                           |
    Template |       | Options     |\n                     ...---|          |-------|
    Template    |------>\n                           |     262  |       |        261
    \ |\n                           |        FR|       |           FR|\n                           +----------+
    \      +-------------+\n              dRR: Data Records Reliability\n                                 Figure
    3\n   The second Data Record associated with the Data Records Reliability\n   Options
    Template shows that the Data Records associated with the\n   newly specified Template
    ID 262 will be sent unreliably.\n"
  title: 6.  Examples
- contents:
  - "7.  IANA Considerations\n   According to the process defined in [RFC5102], IANA
    has allocated the\n   dataRecordsReliability Information Element (defined in Section
    4.1)\n   in the \"IPFIX Information Elements\" registry [IANA].\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   The same security considerations as for the IPFIX
    protocol [RFC5101]\n   apply.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]   Bradner, S., \"Key words for use
      in RFCs to Indicate\n               Requirement Levels\", BCP 14, RFC 2119,
      March 1997.\n   [RFC3758]   Stewart, R., Ramalho, M., Xie, Q., Tuexen, M., and
      P.\n               Conrad, \"Stream Control Transmission Protocol (SCTP)\n               Partial
      Reliability Extension\", RFC 3758, May 2004.\n   [RFC4960]   Stewart, R., Ed.,
      \"Stream Control Transmission Protocol\",\n               RFC 4960, September
      2007.\n   [RFC5101]   Claise, B., Ed., \"Specification of the IP Flow\n               Information
      Export (IPFIX) Protocol for the Exchange of\n               IP Traffic Flow
      Information\", RFC 5101, January 2008.\n   [RFC5102]   Quittek, J., Bryant,
      S., Claise, B., Aitken, P., and J.\n               Meyer, \"Information Model
      for IP Flow Information\n               Export\", RFC 5102, January 2008.\n
      \  [RFC5475]   Zseby, T., Molina, M., Duffield, N., Niccolini, S., and\n               F.
      Raspall, \"Sampling and Filtering Techniques for IP\n               Packet Selection\",
      RFC 5475, March 2009.\n   [RFC6525]   Stewart, R., Tuexen, M., and P. Lei, \"Stream
      Control\n               Transmission Protocol (SCTP) Stream Reconfiguration\",\n
      \              RFC 6525, February 2012.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [IANA] IPFIX Information Elements Registry,\n
      \              <http://www.iana.org/assignments/ipfix>.\n   [RFC3917]   Quittek,
      J., Zseby, T., Claise, B., and S. Zander,\n               \"Requirements for
      IP Flow Information Export (IPFIX)\",\n               RFC 3917, October 2004.\n
      \  [RFC5470]   Sadasivan, G., Brownlee, N., Claise, B., and J. Quittek,\n               \"Architecture
      for IP Flow Information Export\", RFC 5470,\n               March 2009.\n   [RFC5472]
      \  Zseby, T., Boschi, E., Brownlee, N., and B. Claise, \"IP\n               Flow
      Information Export (IPFIX) Applicability\", RFC 5472,\n               March
      2009.\n   [RFC5473]   Boschi, E., Mark, L., and B. Claise, \"Reducing Redundancy\n
      \              in IP Flow Information Export (IPFIX) and Packet Sampling\n               (PSAMP)
      Reports\", RFC 5473, March 2009.\n   [RFC5474]   Duffield, N., Ed., Chiou, D.,
      Claise, B., Greenberg, A.,\n               Grossglauser, M., and J. Rexford,
      \"A Framework for Packet\n               Selection and Reporting\", RFC 5474,
      March 2009.\n   [RFC5476]   Claise, B., Ed., Johnson, A., and J. Quittek, \"Packet\n
      \              Sampling (PSAMP) Protocol Specifications\", RFC 5476,\n               March
      2009.\n   [RFC5477]   Dietz, T., Claise, B., Aitken, P., Dressler, F., and G.\n
      \              Carle, \"Information Model for Packet Sampling Exports\",\n               RFC
      5477, March 2009.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "10.  Acknowledgments\n   The authors would like to thank Brian Trammell for his
    expert\n   feedback and continuous effort to improve the specifications; Elisa\n
    \  Boschi for her thorough reading; Randall Stewart, Peter Lei, and\n   Michael
    Tuexen for their SCTP-related feedback and expertise; and\n   Tobias Limmer.\n"
  title: 10.  Acknowledgments
- contents:
  - "Authors' Addresses\n   Benoit Claise\n   Cisco Systems, Inc.\n   De Kleetlaan
    6a b1\n   Diegem 1813\n   Belgium\n   Phone: +32 2 704 5622\n   EMail: bclaise@cisco.com\n
    \  Paul Aitken\n   Cisco Systems, Inc.\n   96 Commercial Quay\n   Commercial Street\n
    \  Edinburgh, EH6 6LX, United Kingdom\n   Phone: +44 131 561 3616\n   EMail: paitken@cisco.com\n
    \  Andrew Johnson\n   Cisco Systems, Inc.\n   96 Commercial Quay\n   Commercial
    Street\n   Edinburgh, EH6 6LX, United Kingdom\n   Phone: +44 131 561 3641\n   EMail:
    andrjohn@cisco.com\n   Gerhard Muenz\n   Technische Universitaet Muenchen\n   Department
    of Informatics - I8\n   Boltzmannstr. 3\n   Garching D-85748\n   DE\n   EMail:
    muenz@net.in.tum.de\n   URI: http://www.net.in.tum.de/~muenz\n"
  title: Authors' Addresses
