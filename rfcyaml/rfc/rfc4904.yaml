- contents:
  - "                  Representing Trunk Groups in tel/sip\n                  Uniform
    Resource Identifiers (URIs)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The IETF Trust (2007).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This document describes a standardized mechanism to convey trunk\n
    \  group parameters in sip and tel Uniform Resource Identifiers (URIs).\n   An
    extension to the tel URI is defined for this purpose.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  Background . . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Problem Statement  . . . . . . . . . . . . . . . . . .
    . . . .  4\n   3.  Conventions  . . . . . . . . . . . . . . . . . . . . . . .
    . .  5\n   4.  Requirements and Rationale . . . . . . . . . . . . . . . . . .
    \ 5\n     4.1.  sip URI or tel URI?  . . . . . . . . . . . . . . . . . . .  5\n
    \    4.2.  Trunk Group Namespace: Global or Local?  . . . . . . . . .  5\n     4.3.
    \ Originating Trunk Group and Terminating Trunk Group  . . .  6\n     4.4.  Intermediary
    Processing of Trunk Groups  . . . . . . . . .  6\n   5.  Trunk Group Identifier:
    ABNF and Examples  . . . . . . . . . .  6\n   6.  Normative Behavior of SIP Entities
    Using Trunk Groups  . . . .  8\n     6.1.  User Agent Client Behavior . . . .
    . . . . . . . . . . . .  9\n     6.2.  User Agent Server Behavior . . . . . .
    . . . . . . . . . . 10\n     6.3.  Proxy Behavior . . . . . . . . . . . . . .
    . . . . . . . . 10\n   7.  Example Call Flows . . . . . . . . . . . . . . . .
    . . . . . . 11\n     7.1.  Reference Architecture . . . . . . . . . . . . . .
    . . . . 11\n     7.2.  Basic Call Flow  . . . . . . . . . . . . . . . . . . .
    . . 12\n     7.3.  Inter-Domain Call Flow . . . . . . . . . . . . . . . . . .
    14\n   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 15\n
    \  9.  IANA considerations  . . . . . . . . . . . . . . . . . . . . . 16\n   10.
    Acknowledgments  . . . . . . . . . . . . . . . . . . . . . . . 16\n   11. References
    . . . . . . . . . . . . . . . . . . . . . . . . . . 17\n     11.1. Normative References
    . . . . . . . . . . . . . . . . . . . 17\n     11.2. Informative References .
    . . . . . . . . . . . . . . . . . 17\n"
  title: Table of Contents
- contents:
  - "1.  Background\n   Call routing in the Public Switched Telephone Network (PSTN)
    is\n   accomplished by routing calls over specific circuits (commonly\n   referred
    to as \"trunks\") between Time Division Multiplexed (TDM)\n   circuit switches.
    \ In switches, a group of trunks that connect to the\n   same target switch or
    network is called a \"trunk group\".\n   Consequently, trunk groups have labels,
    which are used as the main\n   indication for the previous and next TDM switch
    participating in\n   routing the call.\n   Formally, we define a trunk and trunk
    group and related terminology\n   as follows (definition of \"trunk\" and \"trunk
    group\" is from [5]).\n      Trunk:  In a network, a communication path connecting
    two\n      switching systems used in the establishment of an end-to-end\n      connection.
    \ In selected applications, it may have both its\n      terminations in the same
    switching system.\n      Trunk Group:  A set of trunks, traffic engineered as
    a unit, for\n      the establishment of connections within or between switching\n
    \     systems in which all of the paths are interchangeable.  A single\n      trunk
    group can be shared across multiple switches for redundancy\n      purposes.\n
    \     Digital Signal 0 (DS0):  Digital Signal X is a term for a series\n      of
    standard digital transmission rates based on DS0, a\n      transmission rate of
    64 kbps (the bandwidth normally used for one\n      telephone voice channel).
    \ The European E-carrier system of\n      transmission also operates using the
    DS series as a base multiple.\n   Since the introduction of ubiquitous digital
    trunking, which resulted\n   in the allocation of DS0s between end offices in
    minimum groups of 24\n   (in North America), it has become common to refer to
    bundles of DS0s\n   as a trunk.  Strictly speaking, however, a trunk is a single
    DS0\n   between two PSTN end offices; however, for the purposes of this\n   document,
    the PSTN interface of a gateway acts effectively as an end\n   office (i.e., if
    the gateway interfaces with Signaling System 7\n   (SS7), it has its own SS7 point
    code, and so on).  A trunk group,\n   then, is a bundle of DS0s (that need not
    be numerically contiguous in\n   an SS7 Trunk Circuit Identification Code numbering
    scheme) that are\n   grouped under a common administrative policy for routing.\n
    \  A Session Initiation Protocol (SIP) [3] to PSTN gateway may have\n   trunks
    that are connected to different carriers.  It is entirely\n   reasonable for a
    SIP proxy to choose -- based on factors not\n   enumerated in this document --
    which carrier a call is sent to when\n   it proxies a session setup request to
    the gateway.  Since multiple\n   carriers can transport a call to a particular
    phone number, the phone\n   number itself is not sufficient to identify the carrier
    at the\n   gateway.  An additional piece of information in the form of a trunk\n
    \  group can be used to further pare down the choices at the gateway.\n   As used
    in this document, trunks are necessarily tied to gateways,\n   and a proxy that
    uses trunk groups during routing of the request to a\n   particular gateway knows
    and controls which gateway the call will be\n   routed to, and knows what trunking
    resources are present on that\n   gateway.\n   As another example, consider the
    case where an IP network is being\n   used as a transit network between two PSTN
    networks.  Here, a SIP\n   proxy can apply the originating trunk group to its
    routing logic to\n   ensure that the same ingress and egress carrier is chosen.\n
    \  How the proxy picked a particular trunk group is outside the scope of\n   this
    document ([6] provides one such way); however, once trunk group\n   has been decided
    upon, this document provides a standardized means to\n   represent it in the signaling
    messages.\n"
  title: 1.  Background
- contents:
  - "2.  Problem Statement\n   Currently, there isn't any standardized manner of transporting
    trunk\n   groups between Internet signaling entities.  This leads to ambiguity\n
    \  on at least two fronts:\n   1.  Positional ambiguity:  A SIP proxy that wants
    to send a call to\n       an egress Voice over IP (VoIP) gateway may insert the
    trunk group\n       as a parameter in the user portion of the Request-URI (R-URI),
    or\n       it may insert it as a parameter to the R-URI itself.  This\n       ambiguity
    persists in the reverse direction as well, that is,\n       when an ingress VoIP
    gateway wants to send an incoming call\n       notification to its default outbound
    proxy.\n   2.  Semantic ambiguity:  The lack of any standardized grammar to\n
    \      represent trunk groups leads to the unfortunate choice of ad hoc\n       names
    and values.\n   VoIP routing entities in the Internet, such as SIP proxies, may
    be\n   interested in using trunk groups for normal operations.  To that\n   extent,
    any standards-driven requirements will enable proxies from\n   one vendor to interoperate
    with gateways from yet another vendor.\n   Absent such guidelines, interoperability
    will suffer, as a proxy\n   vendor must conform to the expectations of a gateway
    as to where it\n   expects trunk group parameters to be present (and vice versa).\n
    \  The aim of this specification is to outline how to structure and\n   represent
    the trunk group parameters as an extension to the tel URI\n   [4] in a standardized
    manner.\n"
  title: 2.  Problem Statement
- contents:
  - "3.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [1].\n"
  title: 3.  Conventions
- contents:
  - "4.  Requirements and Rationale\n   This section captures the motivations for
    the design decisions for\n   the specification of a trunk group.  These motivations
    are captured\n   as a set of requirements that are used to guide the eventual
    trunk\n   group specification in this document.\n"
  - contents:
    - "4.1.  sip URI or tel URI?\n   REQ 1:  Trunk group parameters must be defined
      as an extension to the\n   tel URI [4].\n   The trunk group parameters can be
      carried in either the sip URI or\n   the tel URI.  Since trunk groups are intimately
      associated with the\n   PSTN, it seems reasonable to define them as extensions
      to the tel URI\n   (any SIP request that goes to a gateway could reasonably
      be expected\n   to have a tel URI, in whole or in part, in its R-URI anyway).\n
      \  Furthermore, using the tel URI also allows this format to be reused\n   by
      non-SIP VoIP protocols (which could include anything from MGCP or\n   Megaco
      to H.323, if the proper information elements are created).\n   Finally, once
      the trunk group is defined for a tel URI, the normative\n   procedures of Section
      19.1.6 of [3] can be used to derive an\n   equivalent sip URI from a tel URI,
      complete with the trunk group\n   parameters.\n"
    title: 4.1.  sip URI or tel URI?
  - contents:
    - "4.2.  Trunk Group Namespace: Global or Local?\n   REQ 2:  Inter-domain trunk
      group name collisions must be prevented.\n   Under normal operations, trunk
      groups are pertinent only within an\n   administrative domain (i.e., local scope).
      \ However, given that\n   inadvertent cross-domain trunk group name collisions
      may occur, it is\n   desirable to prevent them.  The judicious use of namespaces
      is a\n   solution to this problem.  Thus, it seems appropriate to scope the\n
      \  trunk group through a namespace.\n      Note:  At first glance, it would
      appear that the use of the tel\n      URI's \"phone-context\" parameter provides
      a satisfactory means of\n      imposing a namespace on a trunk group.  The \"phone-context\"\n
      \     parameter identifies the scope of validity of a local telephone\n      number.
      \ And therein lies the problem.  Semantically, a \"phone-\n      context\" tel
      URI parameter is applicable only to a local telephone\n      number and not
      a global one (i.e., one preceded by a '+').  Trunk\n      groups, on the other
      hand, may appear in local or global telephone\n      numbers.  Thus, what is
      needed is a new parameter with equivalent\n      functionality of the \"phone-context\"
      parameter of the tel URI, but\n      one that is equally applicable to local
      and global telephone\n      numbers.\n"
    title: '4.2.  Trunk Group Namespace: Global or Local?'
  - contents:
    - "4.3.  Originating Trunk Group and Terminating Trunk Group\n   REQ 3:  Originating
      trunk group and destination trunk group must be\n   able to appear separately
      and concurrently in a SIP message.\n   SIP routing entities can make informed
      routing decisions based on\n   either the originating or the terminating trunk
      groups.  Thus, it is\n   required that both of these trunk groups be carried
      in SIP requests.\n"
    title: 4.3.  Originating Trunk Group and Terminating Trunk Group
  - contents:
    - "4.4.  Intermediary Processing of Trunk Groups\n   REQ 4:  SIP network intermediaries
      (proxy servers and redirect\n   servers) should be able to add the destination
      trunk group attribute\n   to SIP sessions as a route is selected for a call.\n"
    title: 4.4.  Intermediary Processing of Trunk Groups
  title: 4.  Requirements and Rationale
- contents:
  - "5.   Trunk Group Identifier: ABNF and Examples\n   The Augmented Backus Naur
    Form [2] syntax for a trunk group\n   identifier is given below and extends the
    \"par\" production rule of\n   the tel URI defined in [4]:\n    par = parameter
    / extension / isdn-subaddress / trunk-group /\n          trunk-context\n    trunk-group
    = \";tgrp=\" trunk-group-label\n    trunk-context = \";trunk-context=\" descriptor\n
    \   trunk-group-label = 1*( unreserved / escaped /\n                            trunk-group-unreserved
    )\n    trunk-group-unreserved = \"/\" / \"&\" / \"+\" / \"$\"\n      descriptor
    is defined in [4].\n      unreserved is defined in [3] and [4].\n      escaped
    is defined in [3].\n   Trunk groups are identified by two parameters:  \"tgrp\"
    and \"trunk-\n   context\"; both parameters MUST be present in a tel URI to identify
    a\n   trunk group.  Collectively, these two parameters are called \"trunk\n   group
    parameters\" in this specification.\n   All implementations conforming to this
    specification MUST generate\n   both of these parameters when using trunk groups.
    \ If an\n   implementation receives a tel URI with only one of the \"tgrp\" or\n
    \  \"trunk-context\" parameter, it MUST act as if there were not any trunk\n   group
    parameters present at all in that URI.  Whether or not to\n   further process
    such an URI is up to the discretion of the\n   implementation; however, if a decision
    is made to process it, the\n   implementation MUST act as if there were not any
    trunk group\n   parameters present in the URI.\n   The \"trunk-context\" parameter
    imposes a namespace on the trunk group\n   by specifying a global number or any
    number of its leading digits\n   (e.g., +33), or a domain name.  Syntactically,
    it is modeled after\n   the \"phone-context\" parameter of the tel URI [4], except
    that unlike\n   the \"phone-context\" parameter, the \"trunk-context\" parameter
    can\n   appear in either a local or global tel URI.\n   Semantically, the \"trunk-context\"
    parameter establishes a scope of\n   the trunk group specified in the \"tgrp\"
    parameter, i.e., whether it\n   is valid at a single gateway, a set of gateways,
    or an entire domain\n   managed by a service provider.  The \"trunk-context\"
    can contain four\n   discrete value types:\n   1.  The value in the \"trunk-context\"
    literally identifies a host (a\n       gateway), in which case, the trunk groups
    are scoped to the\n       specific host.\n   2.  The value in the \"trunk-context\"
    is a subdomain (e.g.,\n       \"north.example.com\"), which identifies a subset
    of the gateways\n       in a domain across which the trunk groups are shared.\n
    \  3.  The value in the \"trunk-context\" is a service provider domain\n       (e.g.,
    \"example.com\"), which identifies all gateways in the\n       specific domain.\n
    \  4.  The value in the \"trunk-context\" is a global number or any number\n       of
    its leading digits; this is useful for provider-wide scoping\n       and does
    not lend itself very well to specifying trunk groups\n       across a gateway
    or a set of gateways.\n   For equivalency purposes, two URIs containing trunk
    group parameters\n   are equivalent according to the base comparison rules of
    the URIs.\n   The base comparison rules of a tel URI are specified in Section
    4 of\n   [4], and the base comparison rules of a sip URI are specified in\n   Section
    19.1.4 of [3].\n   Examples:\n     1.  Trunk group in a local number, with a phone-context
    parameter\n         (line breaks added for readability):\n     tel:5550100;phone-context=+1-630;tgrp=TG-1;\n
    \      trunk-context=example.com\n     Transforming this tel URI to a sip URI
    yields:\n     sip:5550100;phone-context=+1-630;tgrp=TG-1;\n       trunk-context=example.com@isp.example.net;user=phone\n
    \    2.  Trunk group in a global number, with a domain name\n         trunk-context:\n
    \    tel:+16305550100;tgrp=TG-1;trunk-context=example.com\n     Transforming this
    tel URI to a sip URI yields:\n     sip:+16305550100;tgrp=TG-1;\n       trunk-context=example.com@isp.example.net;user=phone\n
    \    3.  Trunk group in a global number, with a number prefix trunk-\n         context:\n
    \    tel:+16305550100;tgrp=TG-1;trunk-context=+1-630\n     Transforming this tel
    URI to a sip URI yields:\n     sip:+16305550100;tgrp=TG-1;\n       trunk-context=+1-630@isp.example.net;user=phone\n"
  title: '5.   Trunk Group Identifier: ABNF and Examples'
- contents:
  - "6.  Normative Behavior of SIP Entities Using Trunk Groups\n   The terminating
    (or egress) trunk group parameters MUST be specified\n   in the R-URI.  This is
    an indication from a SIP entity to the next\n   downstream entity that a specific
    terminating (or egress) trunk group\n   should be used.\n      Note:  This is
    consistent with using the R-URI as a routing\n      element; SIP routing entities
    may use the trunk group parameter in\n      the R-URI to make intelligent routing
    decisions.  Furthermore,\n      this also satisfies REQ 4, since a SIP network
    intermediary can\n      modify the R-URI to include the trunk group parameters.\n
    \  Conversely, the appearance of the trunk group parameters in the\n   Contact
    header URI signifies the trunk group over which the call\n   arrived on, i.e.,
    the originating (or ingress) trunk group.  Thus,\n   the originating (or ingress)
    trunk group MUST appear in the Contact\n   header of a SIP request.\n   The behavior
    described in this section effectively addresses REQ 3.\n"
  - contents:
    - "6.1.  User Agent Client Behavior\n   A User Agent Client (UAC) initiating a
      call that uses trunk groups\n   and supports this specification MUST include
      the trunk group\n   parameters in the Contact header URI (a Contact URI MUST
      be a sip or\n   sips URI; thus, what appears in the Contact header is a SIP\n
      \  translation of the tel URI, complete with the trunk group\n   parameters).
      \ The trunk group parameters in the Contact header\n   represent the originating
      trunk group.  As a consequence of the\n   processing rules for the Contact header
      defined in RFC 3261 [3],\n   subsequent requests in the dialog towards this
      user agent will\n   contain this Contact URI in the R-URI.  Note that the user
      part of\n   this URI, which contains the trunk group parameters, will be copied\n
      \  as a consequence of this processing.\n      Note:  Arguably, the originating
      trunk group can be part of the\n      From URI.  However, semantically, the
      URI in a From header is an\n      abstract identifier that represents the resource
      thus identified\n      on a long-term basis.  The presence of a trunk group,
      on the other\n      hand, signifies a binding that is valid for the duration
      of the\n      session only; a trunk group has no significance once the session\n
      \     is over.  Thus, the Contact URI is the best place to impart this\n      information
      since it has exactly those semantics.\n   If the UAC is aware of the routing
      topology, it MAY insert the\n   destination trunk group parameters in the R-URI
      of the request.\n   However, in most deployments, the UAC will use the services
      of a\n   proxy to further route the request, and it will be up to the proxy
      to\n   insert such parameters in the R-URI (see Section 6.3).\n"
    title: 6.1.  User Agent Client Behavior
  - contents:
    - "6.2.  User Agent Server Behavior\n   To the processing User Agent Server (UAS)
      associated with a gateway,\n   the trunk group parameters in the R-URI implies
      that it should use\n   the named trunk group for the outbound call.  If a UAS
      supports trunk\n   groups, but finds that all the trunk circuit identification
      codes for\n   that particular trunk group are occupied, it MAY send a 603 Decline\n
      \  final response.\n   If a UAS supports trunk groups but is not configured
      with the\n   particular trunk group identified in the R-URI, it SHOULD NOT use
      any\n   other trunk group other than the one specified in the parameters.  In\n
      \  such a case, it MAY reject the request with a 404 final response; or\n   if
      it makes a decision to process the request in any case, it MUST\n   disregard
      the values in the \"trunk-context\" and the \"tgrp\"\n   parameters.\n   If
      the receiver of a SIP request is not authoritatively responsible\n   for the
      value specified in the \"trunk-context\", it MUST treat the\n   value in the
      \"tgrp\" parameter as if it were not there.  Whether or\n   not to process the
      request further is up to the discretion of the\n   processing entity; the request
      MAY be rejected with a 404 final\n   response.  Alternatively, if a decision
      is made to process the\n   request further, the processing entity MUST disregard
      the values in\n   the \"trunk-context\" and the \"tgrp\" parameters since it
      is not\n   authoritatively responsible for the value specified in \"trunk-\n
      \  context\".\n"
    title: 6.2.  User Agent Server Behavior
  - contents:
    - "6.3.  Proxy Behavior\n   A proxy server receiving a request that contains the
      trunk group\n   parameter in the Contact header SHOULD NOT change these parameters
      as\n   the request traverses through it.  Changing these parameters may have\n
      \  adverse consequences, since the UAC that populated the parameters did\n   so
      on some authoritative knowledge that the proxy may not be privy\n   to.  Instead,
      the proxy SHOULD pass the trunk group parameters in the\n   Contact header unchanged
      to the client transaction that the proxy\n   creates to send the request downstream.\n
      \  A proxy that is aware of the routing topology and supports this\n   specification
      MAY insert destination trunk group parameters in the\n   R-URI if none are present
      (see Sections 7.1 and 7.2 for an example).\n   However, if destination trunk
      group parameters are already present in\n   the R-URI, the proxy SHOULD NOT
      change them unless it has further\n   authoritative information about the routing
      topology than the\n   upstream client did when it originally inserted the trunk
      group\n   parameters in the R-URI.\n      Depending on the specific situation,
      it is perfectly reasonable\n      for a proxy not to insert the destination
      trunk group parameters\n      in the R-URI.  Consider, for instance, a proxy
      that understands\n      the originating trunk group parameters and, in accordance
      with\n      local policy, uses these to route the request to a destination\n
      \     other than a PSTN gateway.\n"
    title: 6.3.  Proxy Behavior
  title: 6.  Normative Behavior of SIP Entities Using Trunk Groups
- contents:
  - '7.  Example Call Flows

    '
  - contents:
    - "7.1.  Reference Architecture\n   Consider Figure 1, which depicts a SIP proxy
      in a routing\n   relationship with three gateways in its domain, GW1, GW2, and
      GW3.\n   Requests arrive at the SIP proxy through GW1.  Gateways GW2 and GW3\n
      \  are used as egress gateways from the domain.  GW2 has two trunk\n   groups
      configured, TG2-1 and TG2-2.  GW3 also has two trunk groups\n   configured,
      TG3-1 and TG2-2 (TG2-2 is shared between gateways GW2 and\n   GW3).\n                                              +-----+
      TG2-1\n                                              |     |-------->  To\n
      \       TG1-1  +-----+    +-------+     +---->| GW2 | TG2-2     PSTN\n   From
      \ ----->|     |    | SIP   |     |     |     |-------->\n   PSTN        | GW1
      |--->| Proxy |-----+     +-----+\n         ----->|     |    +-------+     |
      \    +-----+ TG3-1\n               +-----+                  |     |     |-------->
      \ To\n                                        +---->| GW3 | TG2-2     PSTN\n
      \                                             |     |-------->\n                                              +-----+\n
      \                         Reference Architecture\n   GW1 in Figure 1 is always
      cognizant of any requests that arrive over\n   trunk group TG1-1.  If it wishes
      to propagate the ingress trunk group\n   to the proxy, it must arrange for the
      trunk group to appear in the\n   Contact header of the SIP request destined
      to the proxy.  The proxy\n   will, in turn, propagate the ingress trunk group
      in the Contact\n   header further downstream.\n   The proxy uses GW2 and GW3
      as egress gateways to the PSTN.  It is\n   assumed that the proxy has access
      to a routing table for GW2 and GW3\n   that includes the appropriate trunk groups
      to use when sending a call\n   to the PSTN (exactly how this table is constructed
      is out of scope\n   for this specification; [6] is one way to do so, a manually
      created\n   and maintained routing table is another).  When the proxy sends
      a\n   request to either of the egress gateways, and the gateway routing\n   table
      is so configured that a trunk group is required by the gateway,\n   the proxy
      must arrange for the trunk group to appear in the SIP R-URI\n   of the request
      destined to that gateway.\n"
    title: 7.1.  Reference Architecture
  - contents:
    - "7.2.  Basic Call Flow\n   This example uses the reference architecture of Figure
      1.  Gateways\n   GW1, GW2, and GW3, and the SIP proxy are assumed to be owned
      by a\n   service provider whose domain is example.com.\n         GW1           SIP
      Proxy           GW2\n   From   |               |                 |\n   PSTN-->|
      \              |                 |\n          +---F1--------->|                 |\n
      \         |               +---F2----------->|\n         ...             ...
      \              ...\n          |               |                 |     Send to
      PSTN\n          |               |                 | --> and receive Answer\n
      \         |               |                 |     Complete Message\n         -----------------------------------------\n
      \        Call in progress\n         -----------------------------------------\n
      \         |               |                 |\n          |               |<-----------F3---+\n
      \         +<--------------+                 |\n         ...             ...
      \              ...\n                              Basic Call Flow\n   In the
      call flow below, certain headers and messages have been\n   omitted for brevity.
      \ In F1, GW1 receives a call setup request from\n   the PSTN over a certain
      trunk group.  GW1 arranges for this trunk\n   group to appear in the Contact
      header of the request destined to the\n   SIP proxy.\n   F1:\n   INVITE sip:+16305550100@example.com;user=phone
      SIP/2.0\n   ...\n   Contact: <sip:0100;phone-context=example.com;tgrp=TG1-1;\n
      \     trunk-context=example.com@gw1.example.com;user=phone>\n   ...\n   In F2,
      the SIP proxy translates the R-URI and adds a destination\n   trunk group to
      the R-URI.  The request is then sent to GW2.\n   F2:\n   INVITE sip:+16305550100;tgrp=TG2-1;\n
      \    trunk-context=example.com@gw2.example.com;user=phone SIP/2.0\n   ...\n
      \  Record-Route: <sip:proxy.example.com;lr>\n   Contact: <sip:0100;phone-context=example.com;tgrp=TG1-1;\n
      \     trunk-context=example.com@gw1.example.com;user=phone>\n   ...\n   Once
      the call is established, either end can tear the call down.  For\n   illustrative
      purposes, F3 depicts GW2 tearing the call down.  Note\n   that the Contact from
      F1, including the trunk group parameters, is\n   now the R-URI of the request.
      \ When GW1 gets this request, it can\n   associate the call with the appropriate
      trunk group to deallocate\n   resources.\n   F3:\n   BYE sip:0100;phone-context=example.com;tgrp=TG1-1;\n
      \    trunk-context=example.com@gw1.example.com;user=phone SIP/2.0\n   Route:
      <sip:proxy.example.com;lr>\n   ...\n   It is worth documenting the behavior
      when an incoming call from the\n   PSTN is received at a gateway without a calling
      party number.\n   Consider Figure 1, and assume that GW1 gets a call request
      from the\n   PSTN without a calling party number.  This is not an uncommon case,\n
      \  and may happen for a variety of reasons, including privacy and\n   interworking
      between different signaling protocols before the request\n   reached GW1.  Under
      normal circumstances (i.e., instances where the\n   calling party number is
      present in signaling), GW1 would derive a sip\n   URI to insert into the Contact
      header.  This sip URI will contain, as\n   its user portion, the calling party
      number from the incoming SS7\n   signaling information.  The trunk group parameters
      then becomes part\n   of the user portion as discussed previously.\n   If a
      gateway receives an incoming call where the calling party number\n   is not
      available, it MUST create a tel URI containing a token that is\n   generated
      locally and has local significance to the gateway.  Details\n   of generating
      such a token are implementation dependent; potential\n   candidates include
      the gateway line number or port number where the\n   call was accepted.  This
      tel URI is subsequently converted to a sip\n   URI to be inserted in the Contact
      header of the SIP request going\n   downstream from the gateway.\n      Note:
      \ The tel scheme does not allow for an empty URI; thus, the\n      global-number
      or local-number production rule of the tel URI [4]\n      cannot contain an
      empty string.  Consequently, the behavior in the\n      above paragraph is mandated
      for cases where the incoming SS7\n      signaling message does not contain a
      calling party number.\n"
    title: 7.2.  Basic Call Flow
  - contents:
    - "7.3.  Inter-Domain Call Flow\n   This example demonstrates the advantage of
      namespaces in trunk\n   groups.  In the example flow below, GW1 and SIP Proxy
      1 belong to the\n   example.com domain, and SIP Proxy 2 belongs to another domain,\n
      \  example.net.  A call arrives at GW1 (F1) and is routed to the\n   example.net
      domain.  In the call flow below, certain headers and\n   messages have been
      omitted for brevity.\n              example.com             example.net\n       /-------------------------\\
      \  /-----------\\\n         GW1          SIP Proxy 1     SIP Proxy 2\n   From
      \  |               |                 |\n   PSTN-->|               |                 |\n
      \         +---F1--------->|                 |\n          |               +---F2----------->|\n
      \         |               |                 |\n         ...             ...
      \              ...\n          |               +<--F3------------+\n         ...
      \            ...               ...\n                          Inter-Domain Call
      Flow\n   F1:\n   INVITE sip:+16305550100@example.com;user=phone SIP/2.0\n   ...\n
      \  Contact: <sip:0100;phone-context=example.com;tgrp=TG1-1;\n      trunk-context=example.com@gw1.example.com;user=phone>\n
      \  ...\n   In F2, the SIP proxy executes its routing logic and re-targets the\n
      \  R-URI to refer to a resource in example.net domain.\n   F2:\n   INVITE sip:+16305550100@example.net;user=phone
      SIP/2.0\n   ...\n   Record-Route: <sip:proxy.example.com;lr>\n   Contact: <sip:0100;phone-context=example.com;tgrp=TG1-1;\n
      \     trunk-context=example.com@gw1.example.com;user=phone>\n   ...\n   In F3,
      the example.net domain sends a request in the backwards\n   direction.  The
      example.net domain does not interpret the trunk group\n   parameters in the
      Contact header since they do not belong to that\n   domain.  The Contact header,
      including the trunk group parameters, is\n   simply used as the R-URI in a subsequent
      request going towards the\n   example.com domain.\n   F3:\n   BYE sip:0100;phone-context=example.com;tgrp=TG1-1;\n
      \     trunk-context=example.com@gw1.example.com;user=phone\n   Route: <sip:proxy.example.com;lr>\n
      \  ...\n"
    title: 7.3.  Inter-Domain Call Flow
  title: 7.  Example Call Flows
- contents:
  - "8.  Security Considerations\n   The trunk group parameters are carried in R-URIs
    and Contact headers;\n   they are simply a modifier of an address.  Any existing
    trust\n   relationship between the originator of a request and an intermediary\n
    \  (or final recipient) that processes the request is not affected by\n   such
    a modifier.\n   Maliciously modifying a trunk group of a R-URI in transit may
    cause\n   the receiving entity (say, a gateway) to prefer one trunk over\n   another,
    thus leading to attacks that use resources not privy to the\n   call.  For example,
    an attacker who knows the name of a toll-free\n   trunk on a gateway may modify
    the trunk group in the R-URI to\n   effectively receive free service, or he may
    modify the trunk group in\n   a R-URI to affect the flow of traffic across trunks.
    \ Similarly,\n   modifying the trunk group in a Contact header may cause the routing\n
    \  intermediary to erroneously associate a call with a different source\n   than
    it would normally be associated with.\n   Although this specification imparts
    more information to the R-URI and\n   the Contact header in the form of trunk
    groups, the class of attacks\n   and possible protection mechanism are the same
    as that specified for\n   baseline SIP systems [3].  The Security Session Initiation
    Protocol\n   Secure (SIPS) scheme and the resulting Transport Layer Security (TLS)\n
    \  mechanism SHOULD be used to provide integrity protection, thereby\n   mitigating
    these attacks.\n   A question naturally arises:  how does the receiver determine
    whether\n   the sender is authorized to use the resources represented by the\n
    \  trunk group parameters?  There are two cases to consider:  intra-\n   domain
    signaling exchange as discussed in Section 7.2, and inter-\n   domain signaling
    exchange as discussed in Section 7.3.\n   In the intra-domain case, a proxy receiving
    trunk group parameters\n   from an upstream user agent (typically a gateway) should
    only accept\n   them using the SIPS URI scheme; furthermore, it should use HTTP\n
    \  Digest to challenge and properly authorize the sender.  A user agent\n   (or
    a gateway) receiving the trunk group parameters from a proxy will\n   not be able
    to challenge the proxy using HTTP Digest, but it should\n   examine the X.509
    certificate of the proxy to determine whether the\n   proxy is authorized to insert
    the resources represented by the trunk\n   group parameters into the signaling
    flow.\n   In the inter-domain case, a receiving proxy may depend on the\n   identity
    stored in the X.509 certificate of the sending proxy to\n   determine whether
    the sender is authorized to insert the resources\n   represented by the trunk
    group parameters in the signaling message.\n   Because of these considerations,
    the trunk group parameters are only\n   applicable within a set of network nodes
    among which there is mutual\n   trust.  If a node receives a call signaling request
    from an upstream\n   node that it does not trust, it SHOULD remove the trunk group\n
    \  parameters.\n   The privacy information revealed with a trunk group does not\n
    \  generally advertise much information about a particular (human) user.\n   It
    does, however, convey two pieces of potentially private\n   information that may
    be considered sensitive by carriers.  First, it\n   may reveal how a carrier may
    be performing least-cost routing and\n   peering; and secondly, it does introduce
    an additional means for\n   network topology and information of a carrier.  It
    is up to the\n   discretionary judgment of the carrier if it wants to include
    the\n   trunk group parameters and reveal potentially sensitive information\n
    \  on its network topology.  If confidentiality is desired, TLS SHOULD\n   be
    used to protect this information while in transit.\n"
  title: 8.  Security Considerations
- contents:
  - "9.  IANA considerations\n   This specification does not require any IANA considerations.\n
    \  The tel URI parameters introduced in this document are registered\n   with
    IANA through the tel URI parameter registry document [7].\n"
  title: 9.  IANA considerations
- contents:
  - "10.  Acknowledgments\n   The authors would like to acknowledge the efforts of
    the participants\n   of the SIPPING and IPTEL working group, especially Jeroen
    van Bemmel,\n   Bryan Byerly, John Hearty, Alan Johnston, Shan Lu, Rohan Mahy,
    Jon\n   Peterson, Mike Pierce, Adam Roach, Brian Rosen, Jonathan Rosenberg,\n
    \  Dave Oran, Takuya Sawada, Tom Taylor, and Al Varney.\n   Jon Peterson was also
    instrumental in the original formulation of\n   this work.\n   Alex Mayrhofer
    brought up the issue of lexicographic ordering of tel\n   URI parameters when
    it is converted to a sip or sips URI.\n   Ted Hardie, Sam Hartman, and Russ Housley
    took pains to ensure that\n   the text around URI comparisons and security considerations
    was as\n   unambiguous as possible.\n"
  title: 10.  Acknowledgments
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [1]  Bradner, S., \"Key words for use in RFCs
      to Indicate Requirement\n        Levels\", BCP 14, RFC 2119, March 1997.\n   [2]
      \ Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n        Specifications:
      ABNF\", RFC 4234, October 2005.\n   [3]  Rosenberg, J., Schulzrinne, H., Camarillo,
      G., Johnston, A.,\n        Peterson, J., Sparks, R., Handley, M., and E. Schooler,
      \"SIP:\n        Session Initiation Protocol\", RFC 3261, June 2002.\n   [4]
      \ Schulzrinne, H., \"The tel URI for Telephone Calls\", RFC 3966,\n        December
      2004.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [5]  \"Telcordia Notes on the Network\",
      Telcordia SR-2275, Issue 04,\n        October 2000, <http://telecom-info.telcordia.com>.\n
      \  [6]  Bangalore, M., Kumar, R., Rosenberg, J., Salama, H., and D.\n        Shah,
      \"A Telephony Gateway REgistration Protocol (TGREP)\", Work\n        in Progress,
      January 2007.\n   [7]  Jennings, C. and V. Gurbani, \"The Internet Assigned
      Number\n        Authority (IANA) tel Uniform Resource Identifier (URI) Parameter\n
      \       Registry\", Work in Progress, December 2006.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Vijay K. Gurbani\n   Bell Laboratories, Alcatel-Lucent\n
    \  2701 Lucent Lane\n   Rm 9F-546\n   Lisle, IL  60532\n   USA\n   Phone:  +1
    630 224 0216\n   EMail:  vkg@alcatel-lucent.com\n   Cullen Jennings\n   Cisco
    Systems\n   170 West Tasman Drive\n   Mailstop SJC-21/3\n   San Jose, CA  95134\n
    \  USA\n   Phone:  +1 408 421 9990\n   EMail:  fluffy@cisco.com\n"
  title: Authors' Addresses
- contents:
  - "Full Copyright Statement\n   Copyright (C) The IETF Trust (2007).\n   This document
    is subject to the rights, licenses and restrictions\n   contained in BCP 78, and
    except as set forth therein, the authors\n   retain all their rights.\n   This
    document and the information contained herein are provided on an\n   \"AS IS\"
    basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY, THE IETF TRUST AND\n   THE INTERNET ENGINEERING
    TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS\n   OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO ANY WARRANTY THAT THE USE OF\n   THE INFORMATION HEREIN WILL NOT INFRINGE
    ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
