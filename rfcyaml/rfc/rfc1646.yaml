- title: __initial_text__
  contents:
  - '           TN3270 Extensions for LUname and Printer Selection

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes protocol extensions to TN3270.  There are\
    \ two\n   extensions outlined in this document.  The first defines a way by\n\
    \   which a TN3270 client can request a specific device (LUname) from a\n   TN3270\
    \ server.  The second extension specifies how a TN3270 printer\n   device can\
    \ be requested by a TN3270 client and the manner in which\n   the 3270 printer\
    \ status information can be sent to the TN3270 server.\n   Discussions and suggestions\
    \ for improvements to these enhancements\n   should be sent to the TN3270E Working\
    \ Group mailing list\n   TN3270E@list.nih.gov . These extensions will be called\
    \ TN3287 in this\n   document.  This information is being provided to members\
    \ of the\n   Internet community that want to support the 3287 data stream within\n\
    \   the TELNET protocol.\n"
- title: 1. INTRODUCTION
  contents:
  - "1. INTRODUCTION\n   The need to communicate with IBM mainframe systems has a\
    \ number of\n   unique requirements associated with it.  This document addresses\n\
    \   those needs in a TCP/IP communications network.\n   IBM terminals are generically\
    \ referred to as 3270's which includes a\n   broad range of terminals and devices,not\
    \ all of which actually begin\n   with the numbers 327x.\n   The 3270 family of\
    \ terminals and the IBM mainframe applications\n   systems are VERY closely coupled\
    \ and it is the nature of the way the\n   3270s and the applications interact\
    \ which require that this document\n   be available to provide a consistent way\
    \ for the TCP/IP environment\n   to interact effectively with the 3270 applications\
    \ of the IBM\n   mainframe world.\n   IBM mainframe applications systems have\
    \ existed for almost two\n   decades now and are used to serve tens of thousands\
    \ of users daily.\n   For this reason it is usually the need of a mainframe environment\
    \ to\n   add TCP/IP network support WITHOUT writing new applications to run\n\
    \   with the TCP network.  The TN3270 series of documents addresses how\n   this\
    \ can be done and maintain compatibility with those mainframe\n   application\
    \ systems.\n   One of the unique characteristics of the 3270 terminals is their\n\
    \   ability to communicate status information in an out-of-band data\n   flow.\
    \  These status's are in turn used by the applications systems to\n   support\
    \ error recovery, and conflict resolutions, examples of these\n   are printer\
    \ out of paper, and terminal powered up.  The terminals are\n   also half duplex\
    \ and block mode in their operations, which results in\n   the need to communicate\
    \ when blocks are being sent, when they end,\n   and when they cannot be sent.\
    \  This document describes these\n   characteristics in IBM VTAM/SNA terms.  Some\
    \ VM mainframe application\n   systems do not use VTAM, so for those systems these\
    \ terms don't\n   apply.  For any systems which use VTAM these terms apply and\
    \ are\n   dealt with in some way by the TCP/IP to VTAM interface.\n   VTAM/SNA\
    \ is a hierarchical network and some of that hierarchy needs\n   to be addressed\
    \ by the TCP network attaching to it if the\n   applications systems are to continue\
    \ to provide the same applications\n   support that they have provided to the\
    \ 3270 terminals.\n   The 3270 terminal environment consists of a terminal controller\
    \ with\n   terminals attached to that controller.  In VTAM/SNA this controller\n\
    \   is called a PU (Physical Unit) and the terminals called LUs (Logical\n   Units).\
    \  The PU is used to communicate management information to the\n   VTAM/SNA system,\
    \ and the LU is used by the application to communicate\n   with the terminal.\
    \  VTAM/SNA identifies each LU and PU in a network\n   by a unique name.  These\
    \ names are referred to as LUnames and\n   PUnames, and is how the network is\
    \ managed and the applications\n   identify what terminals are being communicated\
    \ with in the network.\n   The actual connection between a terminal and the applications\
    \ is\n   referred to as a session, and it is this session which has both in-\n\
    \   band and out-of-band information flows sent between the applications\n   and\
    \ the terminals.\n   VTAM/SNA 3270 terminals actually have two sessions when communicating\n\
    \   with the applications.  One session is directly connected with the\n   application\
    \ and the other session is connected directly to VTAM.  It\n   is the session\
    \ with VTAM, also called the SSCP, that is used to\n   communicate the out-of-band\
    \ information flows.  This session is\n   called the SSCP-LU session, and the\
    \ session with the application is\n   called the LU-LU session (in VTAM an applications\
    \ is just another\n   Logical Unit).\n   One such out-of-band flow is the LUSTAT\
    \ message which tells the\n   application that the status of the terminal has\
    \ changed, and is how a\n   printer or screen tells the application that it is\
    \ ready, or is not\n   ready to receive data.\n   There are also flows which must\
    \ be able to flow in the LU-LU session\n   to help control the use of the terminal\
    \ by applications.  The block\n   of information sent in a session is called an\
    \ RU (Request Unit) and\n   it tells what type of data this block contains, how\
    \ long it is and if\n   more data (RUs) is coming along.  This is a gross over\
    \ simplification\n   of what RUs are and do, but it should help understand their\
    \ use in\n   the TN3270 documents.  Some of the VTAM/SNA terms used to describe\n\
    \   what an RU is requesting are:  Chains/chaining which tell a session\n   partner\
    \ that another RU is being sent or not being sent in this\n   transmission.  Brackets\
    \ which are used to indicate that a unit of\n   work is complete, such as when\
    \ a printout of a file is complete.\n   The determination of what part of the\
    \ VTAM/SNA protocols such as\n   brackets and chaining are to be used are managed\
    \ by VTAM tables\n   called LOGMODE tables.  These tables are selected when an\
    \ LU-LU\n   session is started and set up such things as bracket, and/or chaining\n\
    \   protocols; and the type of terminal data contained in the RUs, such\n   as\
    \ printer data without screen formatting data (LU type 1), 3270\n   screen formatted\
    \ data (LU type 2) and 3270 screen formatted data for\n   a printer (LU type 3).\
    \  The LOGMODE tables also contain the size of\n   the RU to be sent and received.\
    \  These tables also communicate the\n   screen size of 3270 terminals such as\
    \ 24X80 (Model 2), 27X132 (Model\n   5), etc.  Each LU has a LOGMODE table entry\
    \ hard assigned to it as\n   part of the VTAM configuration (often called a GEN).\
    \  The selection\n   of these table entries can't be controlled by the terminal\
    \ LU or PU.\n   They can only be selected by the user at connection/logon time\
    \ or by\n   the application when the connection is established.  The actual\n\
    \   LOGMODE entries to be used during a session are sent at session logon\n  \
    \ time, in a special type of RU called a BIND.  Once the bind has been\n   sent\
    \ then the rules for the use of the session have been set, can't\n   be changed,\
    \ and must be followed.\n   The purpose of the TN3287 protocol is to provide a\
    \ general IBM 3270\n   host printer communications facility.  Its primary goal\
    \ is to allow a\n   method of connecting printer devices and printer-oriented\
    \ processes\n   to each other.  This protocol will allow a TN3270 Client to process\n\
    \   3287 print data streams.\n   This memo supplements and extends the STD 8,\
    \ RFC 854, TELNET Protocol\n   Specification.  This memo also presents an example\
    \ of the correct\n   implementation.\n"
- title: 2. GENERAL CONSIDERATIONS
  contents:
  - "2. GENERAL CONSIDERATIONS\n   A TELNET connection is a Transmission Control Protocol\
    \ (TCP)\n   connection used to transmit data with interspersed TELNET control\n\
    \   information.\n   The companion document, STD 8, RFC 854 -- \"TELNET Protocol\n\
    \   Specification\" should be consulted for further information about the\n  \
    \ TELNET command, codes and code sequences referenced in this\n   specification.\n"
- title: 3. CLIENT-SERVER NEGOTIATION
  contents:
  - "3. CLIENT-SERVER NEGOTIATION\n   The TN3270 Client and Server require a specific\
    \ negotiation protocol.\n   After the negotiation is complete, all transmission\
    \ between the\n   Client and Server is in TELNET Binary format with a TELNET \"\
    End-Of-\n   Record(EOR)\" sequence at the end of each data stream.\n   Support\
    \ for the TN3287 data stream requires that both sides:\n      A.  Are able to\
    \ exchange binary data.\n      B. Can establish the agreement between client and\
    \ server on the\n         terminal type that will be used.\n      C. Agree to\
    \ use the TELNET IAC EOR as a delimiter for inbound\n         and outbound TN3287\
    \ data streams\n   This implementation requires the options: TERMINAL-TYPE and\
    \ BINARY be\n   successfully negotiated between the Client and Server before\n\
    \   processing of any print data streams.\n   This implementation supports host\
    \ applications that can mix LU 1 and\n   LU 3 type data in the data stream.\n"
- title: 3.1  TN3287 SERVER
  contents:
  - "3.1  TN3287 SERVER\n   The maximum Request Unit (RU) size is server specific,\
    \ but should not\n   exceed 4 kilobytes.\n   The LU type is determined by the\
    \ bind from the mainframe application.\n   The server, when bound, must remember\
    \ LU 1 or LU 3 type.\n   The server will automatically unbind the session upon\
    \ receipt of a\n   TELNET CLOSE command.  The printer will be reported to VTAM\
    \ as\n   powered down until a new TELNET connection is established.\n"
- title: 3.2  TN3287 CLIENT
  contents:
  - "3.2  TN3287 CLIENT\n   The TN3287 Client is a TN3270 client created specifically\
    \ to print\n   mainframe 3270 print data.  The client emulates the IBM device\
    \ type\n   that it identifies itself to the TN3270 server as, in this case, an\n\
    \   IBM 3287 model 1 type printer.  The design of this printer protocol\n   is\
    \ aligned with the way printing occurs in the IBM host and how 3270\n   printers\
    \ function.  These printer extensions DO NOT support a 3270\n   printer client\
    \ that cannot accept both types LU 1 and LU 3 printer\n   streams.  No IBM printer\
    \ operates in this fashion, and as a result,\n   no TN3270 server could function\
    \ properly with mainframe applications\n   if it didn't allow for a mixing of\
    \ LU 1 and LU 3 data streams.  The\n   common way in which this can occur is printer\
    \ sharing between\n   multiple IBM host applications, such as CICS and JES.  Since\
    \ there is\n   no restriction, the JES can be configured to output LU 1 data\n\
    \   streams, and the CICS can be  configured for LU 3 data streams.\n   Therefore,\
    \ the server will identify what LU type the current\n   application connected\
    \ to the server is using.  If that type is LU 1,\n   ALL message records sent\
    \ to the Client will be preceded by one byte\n   of binary zeros (0x00).  If the\
    \ first byte is not zeros, then that\n   byte will be a valid LU type 3 Write-Command-Code(WCC),\
    \ which can\n   NEVER be zeros.  Thus, the client can tell the LU type of data\
    \ as\n   each record is received.\n   This protocol does allow for the client\
    \ to shutdown if the client\n   does not wish to support both LU types.  This\
    \ is accomplished by\n   detecting an invalid data type from the received record,\
    \ and\n   notifying the user that the mainframe application has sent LU type x\n\
    \   print data and should be configured for LU type y printing.\n"
- title: 4.  COMMAND STRUCTURE
  contents:
  - "4.  COMMAND STRUCTURE\n      1. All TELNET commands consist of at least a two-byte\
    \ sequence:\n         the \"Interpret-as-Command(IAC)\" escape character followed\
    \ by\n         the code for the command.\n   NOTE:  Since the TELNET IAC character\
    \ (255 decimal) is used as a\n   delimiter (together with EOR) in the inbound\
    \ and outbound data\n   streams, a data byte within the data stream itself that\
    \ has the same\n   value as the IAC command is sent as two bytes (255, 255) and\
    \ one byte\n   is discarded.\n"
- title: 4.1  TELNET COMMANDS
  contents:
  - "4.1  TELNET COMMANDS\n   Command meaning - WILL and DO commands are used to obtain\
    \ and grant\n   permission for the subsequent subnegotiation.  Both sides must\n\
    \   exchange WILL TERM-TYPE and DO TERM-TYPE before subnegotiation.\n   The actual\
    \ exchange of information is done within the option\n   subcommand.\n   <IAC DO\
    \ TERMINAL-TYPE>  Sender requests that the other party begin\n   terminal-type\
    \ sub-negotiation.\n   <IAC WILL TERMINAL-TYPE>  Sender is willing to send terminal-type\n\
    \   information in a subsequent sub-negotiation.\n   <IAC SB TERMINAL-TYPE SEND\
    \ IAC SE>  Sender requests the receiver to\n   transmit his terminal-type.\n \
    \  <IAC SB TERM TYPE IS IBM-3287-1 IAC SE>   Sender is stating the name\n   of\
    \ his terminal-type.  The code for <IS> is 0.  Optionally, a\n   specific Logical\
    \ Unit (LU) can be requested by using the TERMINAL-\n   TYPE string below.   If\
    \ no LUname is specified, the first available\n   3287 LU is selected.\n     \
    \ IAC SB TERM-TYPE IS IBM-3287-1 @ LUNAME IAC SE\n   <IAC DO BINARY>  Sender requests\
    \ that sender of the data starts\n   transmitting or confirms that the sender\
    \ of data is expected to\n   transmit characters that are to be interpreted as\
    \ 8 bits of binary\n   data by the receiver.\n   <IAC WILL BINARY>   Sender requests\
    \ permission to begin transmitting,\n   or confirms it will now begin transmitting\
    \ binary data.\n   An <EOR> is sent at the end of each SNA Request Unit (RU) end\
    \ of\n   chain, in either direction.   The first byte following the <EOR> is a\n\
    \   Write-Command-Code(WCC) for LU 3 data streams.\n   An <AO> is sent at the\
    \ end of the SNA RU and end of bracket.  This\n   signifies the end of the print\
    \ output or file by the IBM host\n   application and possibly a change of LU type.\n"
- title: 4.2   COMMAND VALUES
  contents:
  - "4.2   COMMAND VALUES\n                     TELNET COMMAND                   \
    \  CODE\n                     IAC  Interpret as Command           255\n      \
    \               DO                                  253\n                    \
    \ WILL                                251\n                     SB  SuBnegotiation\
    \ option           250\n                     SE  Subnegotiation End          \
    \    240\n                     TERMINAL-TYPE                        24\n     \
    \                SEND                                  1\n                   \
    \  IS                                    0\n                     EOR  End-Of-Record\
    \                   25\n                     BINARY                          \
    \      0\n                     AO  Abort Output                    245\n     \
    \                IP  Interrupt Process               244\n                   \
    \  AYT  Are You There                  246\n                     BREAK       \
    \                        243\n   NOTE:  The above codes and code sequences have\
    \ the indicated meaning\n   only when immediately preceded by an \"Interpret as\
    \ Command (IAC)\".\n"
- title: 5.  TN3270 Printer Status Message
  contents:
  - "5.  TN3270 Printer Status Message\n   The status message can be sent at any time.\
    \  It must be sent every\n   time the TN3270 Server sends an End-of-Record(EOR)\
    \ indicator to the\n   TN3270 Client, or when a printing error occurs at the Client.\
    \  The\n   Printer Status Message is only sent by the TN3270 Client. Once the\n\
    \   End-Of-Record IAC is processed, the TN3270 Client sends the status\n   message\
    \ to the server when it is ready to receive more print data.\n      MESSAGE DESCRIPTION:\
    \      SOH  %  R  S1  S2  IAC  EOR\n                               SOH = 0X01\n\
    \                               % = 0X6C\n                               R = 0XD9\n\
    \                               S1 = Status/Sense Byte 0\n                   \
    \            S2 = Status/Sense Byte 1\n                               IAC = Telnet\
    \ IAC Character\n                               EOR = Telnet EOR Character\n"
- title: 5.1   Status/Sense Byte description
  contents:
  - '5.1   Status/Sense Byte description

    '
- title: '5.1.1.  S/S Byte 0:'
  contents:
  - "5.1.1.  S/S Byte 0:\n        High Order                                     \
    \     Low Order\n        _____________________________________________________________\n\
    \        |                                                           |\n     \
    \   |   0      1      2      3      4      5      6      7      |\n        |___________________________________________________________|\n\
    \          Bit Number:       Bit Definition:\n                0           Always\
    \ Zero\n                1           Always Zero\n                2           Always\
    \ Zero\n                3           Always Zero\n                4           Always\
    \ Zero\n                5           Unit Specify - is set due to an error\n  \
    \                          condition.  The reason for the error\n            \
    \                condition will be indicated in S/S Byte 1.\n                \
    \            See Note 1*.\n                6           Device End - when this\
    \ bit sent in response\n                            to a data message it indicates\
    \ the client\n                            has successfully processed the data\
    \ message\n                            from the server and notifies the server\
    \ to\n                            send a new data message to the client when\n\
    \                            available.   See Note 2*.\n                7    \
    \       Always Zero\n   Note 1*:   A negative response to the Server's data message\
    \ would be\n   S/S Byte 0 Bit 5 \"Unit Specify condition\".  The possible Unit\
    \ Specify\n   conditions are listed below.  (See Section 3.2 for bit settings\
    \ for\n   the Unit Specify conditions listed below.)\n                Unit Specify\
    \ Condition:    SNA Sense Code sent to host:\n                Command Rejected\
    \                     0X10030000\n                Intervention Required      \
    \          0X08020000\n                Data Check                           0X10010000\n\
    \                Operation Check                      0X10050000\n           \
    \     Component Disconnected (LU)          0X08020000\n   Note 2*:   Device End\
    \ -  A positive response to the Server's data\n   message would be the \"Device\
    \ End\" bit (S/S Byte 0 Bit 6) to indicate\n   a ready to receive data from the\
    \ host condition.  This will also be\n   sent after clearing a previous Unit Specify\
    \ condition of\n   \"Intervention Required\".\n"
- title: '5.1.2.  S/S Byte 1:'
  contents:
  - "5.1.2.  S/S Byte 1:\n         High Order                                    \
    \       Low Order\n       ______________________________________________________________\n\
    \       |                                                            |\n     \
    \  |    0      1      2      3      4      5      6      7      |\n       |____________________________________________________________|\n\
    \          Bit Number:       Bit Definition:\n               0            Always\
    \ Zero\n               1            Always Zero\n               2            Command\
    \ Rejected (CR) -- This bit\n                            indicates an invalid\
    \ 3270 command\n                            generated.\n               3     \
    \       Intervention Required - Printer Not Ready.\n                         \
    \   See Note 3*.\n               4            Component Disconnected - Printer\
    \ is powered\n                            off or printer cable not connected.\
    \  See\n                            Note 4*.\n               5            Data\
    \ Check - Invalid print data\n               6            Always Zero\n      \
    \         7            Operation Check - An illegal buffer address\n         \
    \                   or incomplete order sequence\n   Note 3*:  The Intervention\
    \ Required is cleared by sending an S/S\n   message with the \"Device End\" bit\
    \ (Bit 6 of S/S byte  0).  The LUSTAT\n   sent to the host is 0X00010000.  The\
    \ IBM host interprets this as a\n   \"printer now ready\" condition.\n   Note\
    \ 4*:  The Component disconnected is cleared by sending an S/S\n   message with\
    \ the \"Device End\" bit  (Bit 6 of S/S byte 0).  The LUSTAT\n   sent to the host\
    \ is 0X082B0000.  The IBM host interprets this as a\n   \"printer now ready --\
    \ presentation space integrity may be lost\"\n   condition.\n"
- title: 6.  The following is an example of the Client-Server negotiation
  contents:
  - "6.  The following is an example of the Client-Server negotiation\n    process.\n\
    \      Server:   IAC DO TERMINAL-TYPE\n      Client:        IAC WILL TERMINAL-TYPE\n\
    \      Server:   IAC SB TERMINAL-TYPE SEND IAC SE\n      Client:        IAC SB\
    \ TERMINAL-TYPE IS IBM-3287-1 IAC SE\n      Note: To request a specific LU the\
    \ TERMINAL-TYPE string would be:\n      IAC SB TERMINAL-TYPE IS IBM-3287-1 @ LUNAME\
    \ IAC SE\n      (The client has specified its terminal type is an IBM-3287-1)\n\
    \      Server:   IAC DO END-OF-RECORD\n      Client:        IAC WILL END-OF-RECORD\n\
    \      Server:   IAC WILL END-OF-RECORD\n      Client:        IAC DO END-OF-RECORD\n\
    \      (The Server and Client have both agreed to transmit End-Of-Record\n   \
    \   (EOR)).\n      Server:   IAC DO TRANSMIT-BINARY\n      Client:        IAC\
    \ WILL TRANSMIT-BINARY\n      Server:   IAC WILL TRANSMIT-BINARY\n      Client:\
    \        IAC DO TRANSMIT-BINARY\n      (The Server and Client have both agreed\
    \ to use binary\n      transmission)\n      Server:   0x00 (3270 PRINT DATA)\n\
    \      Client:        (S/S with DEV END) IAC EOR\n      Server:   0x00 (3270 PRINT\
    \ DATA) IAC EOR\n      NOTE:  LU 1 type data is prefaced with a 0x00 character.\
    \ LU 3\n      type data is not prefaced with a special character.  This\n    \
    \  character will precede print data in each chain, and should be\n      discarded\
    \ before the print data is processed.   An <IAC EOR> must\n      be received before\
    \ changing to LU 1 or LU 3 type data.\n      Client:        (S/S with IR) IAC\
    \ EOR (This indicates a paper jam\n                    at printer.)\n      Client:\
    \        (S/S with DE) IAC EOR (This indicates the clearing\n                \
    \    of above condition.)\n      Server:  0x00 (3270 PRINT DATA) (This indicates\
    \ start of LU 1\n               data)\n      Server:   (3270 PRINT DATA)\n   \
    \   Server:   (3270 PRINT DATA)\n      Server:   (3270 PRINT DATA) IAC EOR\n \
    \     Client:        (S/S with DE) IAC EOR\n      Server:   0x00 (LAST 3270 PRINT\
    \ DATA) IAC EOR\n      Client:        (S/S with DE) IAC EOR\n      Server:   IAC\
    \ AO\n      (The Abort Output <AO> signifies the end-of-bracket -- end of\n  \
    \    print job)\n"
- title: 7.  SECURITY CONSIDERATIONS
  contents:
  - "7.  SECURITY CONSIDERATIONS\n   This document does not specify a security methodology\
    \ to insure that\n   the client requesting a printer LU name is authorized to\
    \ access that\n   LU.  Currently, this is left up to individual server implementations.\n\
    \   The design of the protocols described in this document allow for the\n   future\
    \ incorporation of the RFCs regarding encryptions and\n   authentication protocols\
    \ and services.  However, before this may\n   occur, certain extensions may be\
    \ required to the protocols defined in\n   this document or to the encryptions\
    \ and authentication services and\n   protocols.\n"
- title: 8. ERROR CONDITIONS
  contents:
  - "8. ERROR CONDITIONS\n   After a client and server have successfully completed\
    \ negotiation, a\n   number of potential error conditions may be detected by the\
    \ server\n   which require notifying the client and aborting the connection.\n\
    \   When an error condition is detected by the server, the client must be\n  \
    \ negotiated back into NVT mode by the server sending a \"WONT/DONT\n   BINARY\"\
    \ TELNET sequence and the client responding with the\n   appropriate \"DONT/WONT\
    \ BINARY\" TELNET sequence.\n   The server should immediately send the appropriate\
    \ error message to\n   the client as an ASCII string and then close the connection.\
    \ The\n   error message should be prefixed by a numeric identifier to precisely\n\
    \   notify the client of the specific error condition. The error message\n   sent\
    \ to the client should be routed to the proper console or log for\n   corrective\
    \ action.\n   Below is a list of error conditions identified by numeric value,\n\
    \   error text, meaning of the error and recovery procedure.\n      Message: \"\
    01 No LU's of the type configured\"\n         Meaning: The configuration definition\
    \ on the server\n                  does not include the LU type requested.\n \
    \        Recovery: Notify your Systems Administrator as this\n               \
    \    is a permanent error condition.\n      Message: \"02 Requested LU unavailable\"\
    \n         Meaning: The requested LU is not available at\n                  this\
    \ time.\n         Recovery: This may be a temporary error and may\n          \
    \         be retried periodically.  If the condition\n                   persists\
    \ contact your Systems Administrator.\n      Message: \"03 Requested LU type is\
    \ inconsistent with configuration\"\n         Meaning: The LU requested does not\
    \ match the terminal\n                  type in the server configuration.\n  \
    \       Recovery: Notify your Systems Administrator as this\n                \
    \   is a permanent error condition.\n      Message: \"04 Requested LU is not configured\"\
    \n         Meaning: The LU is not defined in server configuration.\n         Recovery:\
    \ Notify your Systems Administrator as this\n                   is a permanent\
    \ error condition.\n   When a client receives a message not defined in the above\
    \ list, the\n   message should be displayed to a console or log and the connection\
    \ to\n   the server should be closed.  No other recovery should be attempted\n\
    \   as this is most likely a fatal error condition.  (Notify your Systems\n  \
    \ Administrator.)\n"
- title: 9. REFERENCES
  contents:
  - "9. REFERENCES\n   [1] Postel, J., and J. Reynolds, \"TELNET Protocol Specification\"\
    , STD\n       8, RFC 854, USC/Information Services Institute, May 1983.\n   [2]\
    \ VanBokkeln, J., \"TELNET Terminal-Type Option\" RFC 1091, FTP\n       Software\
    \ Inc., February 1989.\n   [3] Postel, J., and J. Reynolds, \"TELNET Binary Transmission\"\
    , STD\n       27, RFC 856, USC/Information Services Institute, May 1983.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n       Cleve Graves\n       2711 LBJ Freeway\n       Dallas,\
    \ Texas  75234\n       Phone: (214) 484-5200\n       EMail: cvg@oc.com\n     \
    \  Thomas Butts\n       2711 LBJ Freeway\n       Dallas, Texas  75234\n      \
    \ Phone: (214) 484-5200\n       EMail: tom@oc.com\n       Michelle Angel\n   \
    \    2711 LBJ Freeway\n       Dallas, Texas  75234\n       Phone: (214) 484-5200\n\
    \       EMail: angel@oc.com\n"
