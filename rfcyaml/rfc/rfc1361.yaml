- title: __initial_text__
  contents:
  - '                  Simple Network Time Protocol (SNTP)

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memorandum describes the Simple Network Time Protocol (SNTP),\n\
    \   which is an adaptation of the Network Time Protocol (NTP) used to\n   synchronize\
    \ computer clocks in the Internet. SNTP can be used when\n   the ultimate performance\
    \ of the full NTP implementation described in\n   RFC-1305 is not needed or justified.\
    \ It involves no change to the\n   current or previous NTP specification versions\
    \ or known\n   implementations, but rather a clarification of certain design\n\
    \   features of NTP which allow operation in a simple, stateless RPC mode\n  \
    \ with accuracy and reliability expectations similar to the UDP/TIME\n   protocol\
    \ described in RFC-868.\n   This memorandum does not obsolete or update any RFC.\
    \ A working\n   knowledge of RFC-1305 is not required for an implementation of\
    \ SNTP.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The Network Time Protocol (NTP) specified in RFC-1305 [MIL92]\
    \ is used\n   to synchronize computer clocks in the global Internet. It provides\n\
    \   comprehensive mechanisms to access national time and frequency\n   dissemination\
    \ services, organize the time-synchronization subnet and\n   adjust the local\
    \ clock in each participating subnet peer. In most\n   places of the Internet\
    \ of today, NTP provides accuracies of 1-50 ms,\n   depending on the jitter characteristics\
    \ of the synchronization source\n   and network paths.\n   RFC-1305 specifies\
    \ the NTP protocol machine in terms of events,\n   states, transition functions\
    \ and actions and, in addition, optional\n   algorithms to improve the timekeeping\
    \ quality and mitigate among\n   several, possibly faulty, synchronization sources.\
    \ To achieve\n   accuracies in the low milliseconds over paths spanning major\
    \ portions\n   of the Internet of today, these intricate algorithms, or their\n\
    \   functional equivalents, are necessary. However, in many cases\n   accuracies\
    \ of this order are not required and something less, perhaps\n   in the order\
    \ of one second, is sufficient. In such cases simpler\n   protocols such as the\
    \ Time Protocol [POS83], have been used for this\n   purpose. These protocols\
    \ usually involve a remote-procedure call\n   (RPC) exchange where the client\
    \ requests the time of day and the\n   server returns it in seconds past some\
    \ known reference epoch.\n   NTP is designed for use by clients and servers with\
    \ a wide range of\n   capabilities and over a wide range of network delays and\
    \ jitter\n   characteristics. Most members of the Internet NTP synchronization\n\
    \   subnet of today use software packages including the full suite of NTP\n  \
    \ options and algorithms, which are relatively complex, real-time\n   applications.\
    \ While the software has been ported to a wide variety of\n   hardware platforms\
    \ ranging from supercomputers to personal computers,\n   its sheer size and complexity\
    \ is not appropriate for many\n   applications. Accordingly, it is useful to explore\
    \ alternative access\n   strategies using far simpler software appropriate for\
    \ accuracy\n   expectations in the order of a second.\n   This memorandum describes\
    \ the Simple Network Time Protocol (SNTP),\n   which is a simplified access strategy\
    \ for servers and clients using\n   NTP as now specified and deployed in the Internet.\
    \ There are no\n   changes to the protocol or implementations now running or likely\
    \ to\n   be implemented in the near future. The access paradigm is identical\n\
    \   to the UDP/Time Protocol and, in fact, it should be easily possible\n   to\
    \ adapt a UDP/Time client implementation, say for a personal\n   computer, to\
    \ operate using SNTP. Moreover, SNTP is also designed to\n   operate in a dedicated\
    \ server configuration including an integrated\n   radio clock. With careful design\
    \ and control of the various latencies\n   in the system, which is practical in\
    \ a dedicated design, it is\n   possible to deliver time accurate to the order\
    \ of microseconds.\n   It is strongly recommended that SNTP be used only at the\
    \ extremities\n   of the synchronization subnet. SNTP clients should operate only\
    \ at\n   the leaves (highest stratum) of the subnet and in configurations\n  \
    \ where no SNTP client is dependent on another SNTP client for\n   synchronization.\
    \ SNTP servers should operate only at the root\n   (stratum 1) of the subnet and\
    \ then only in configurations where no\n   other source of synchronization other\
    \ than a reliable radio clock is\n   available. The full degree of reliability\
    \ ordinarily expected of\n   primary servers is possible only using the redundant\
    \ sources, diverse\n   subnet paths and crafted algorithms of a full NTP implementation.\n\
    \   This extends to the primary source of synchronization itself in the\n   form\
    \ of multiple radio clocks and backup paths to other primary\n   servers should\
    \ the radio clock fail or become faulty. Therefore, the\n   use of SNTP rather\
    \ than NTP in primary servers should be carefully\n   considered.\n"
- title: 2. NTP Timestamp Format
  contents:
  - "2. NTP Timestamp Format\n   SNTP uses the standard NTP timestamp format described\
    \ in RFC-1305 and\n   previous versions of that document. In conformance with\
    \ standard\n   Internet practice, NTP data are specified as integer or fixed-point\n\
    \   quantities, with bits numbered in big-endian fashion from zero\n   starting\
    \ at the left, or high-order, position. Unless specified\n   otherwise, all quantities\
    \ are unsigned and may occupy the full field\n   width with an implied zero preceding\
    \ bit zero.\n   Since NTP timestamps are cherished data and, in fact, represent\
    \ the\n   main product of the protocol, a special timestamp format has been\n\
    \   established. NTP timestamps are represented as a 64-bit unsigned\n   fixed-point\
    \ number, in seconds relative to 0h on 1 January 1900. The\n   integer part is\
    \ in the first 32 bits and the fraction part in the\n   last 32 bits. This format\
    \ allows convenient multiple-precision\n   arithmetic and conversion to Time Protocol\
    \ representation (seconds),\n   but does complicate the conversion to ICMP Timestamp\
    \ message\n   representation (milliseconds). The precision of this representation\n\
    \   is about 200 picoseconds, which should be adequate for even the most\n   exotic\
    \ requirements.\n   Note that since some time in 1968 the most significant bit\
    \ (bit 0 of\n   the integer part) has been set and that the 64-bit field will\n\
    \   overflow some time in 2036. Should NTP or SNTP be in use in 2036,\n   some\
    \ external means will be necessary to qualify time relative to\n   1900 and time\
    \ relative to 2036 (and other multiples of 136 years).\n   Timestamped data requiring\
    \ such qualification will be so precious\n   that appropriate means should be\
    \ readily available. There will exist\n   a 200-picosecond interval, henceforth\
    \ ignored, every 136 years when\n   the 64-bit field will be zero, which by convention\
    \ is interpreted as\n   an invalid timestamp.\n"
- title: 3. NTP Message Format
  contents:
  - "3. NTP Message Format\n   Both NTP and SNTP are clients of the User Datagram\
    \ Protocol (UDP)\n   [POS83], which itself is a client of the Internet Protocol\
    \ (IP)\n   [DAR81]. The structure of the IP and UDP headers is described in the\n\
    \   relevant specification documents and will not be described further in\n  \
    \ this memorandum. Following is a description of the SNTP message\n   format,\
    \ which follows the IP and UDP headers. The SNTP message format\n   is identical\
    \ to the NTP format described in RFC-1305, with the\n   exception that some of\
    \ the data fields are \"canned,\" that is,\n   initialized to prespecified values.\
    \ The format of the NTP message\n   data area, which immediately follows the UDP\
    \ header, is shown below.\n                           1                   2  \
    \                 3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4\
    \ 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |LI | VN  |Mode |    Stratum    |     Poll      |   Precision   |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                          Root Delay                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                       Root Dispersion                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                    Reference Identifier                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                   Reference Timestamp (64)                    |\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                   Originate Timestamp (64)                    |\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                    Receive Timestamp (64)                     |\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                    Transmit Timestamp (64)                    |\n      |\
    \                                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                                                               |\n   \
    \   |                                                               |\n      |\
    \                  Authenticator (optional) (96)                |\n      |   \
    \                                                            |\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   As described in the next section, in SNTP most of these fields are\n   initialized\
    \ with prespecified data. For completeness, the function of\n   each field is\
    \ briefly summarized below.\n   Leap Indicator (LI): This is a two-bit code warning\
    \ of an impending\n   leap second to be inserted/deleted in the last minute of\
    \ the current\n   day, with bit 0 and bit 1, respectively, coded as follows:\n\
    \      LI       Value     Meaning\n      -------------------------------------------------------\n\
    \      00       0         no warning\n      01       1         last minute has\
    \ 61 seconds\n      10       2         last minute has 59 seconds)\n      11 \
    \      3         alarm condition (clock not synchronized)\n   Version Number (VN):\
    \ This is a three-bit integer indicating the NTP\n   version number, currently\
    \ 3.\n   Mode: This is a three-bit integer indicating the mode, with values\n\
    \   defined as follows:\n      Mode     Meaning\n      ------------------------------------\n\
    \      0        reserved\n      1        symmetric active\n      2        symmetric\
    \ passive\n      3        client\n      4        server\n      5        broadcast\n\
    \      6        reserved for NTP control message\n      7        reserved for\
    \ private use\n   The use of this field will be discussed in the next section.\n\
    \   Stratum: This is a eight-bit integer indicating the stratum level of\n   the\
    \ local clock, with values defined as follows:\n      Stratum  Meaning\n     \
    \ ----------------------------------------------\n      0        unspecified or\
    \ unavailable\n      1        primary reference (e.g., radio clock)\n      2-15\
    \     secondary reference (via NTP or SNTP)\n      16-255   reserved\n   Poll\
    \ Interval: This is an eight-bit signed integer indicating the\n   maximum interval\
    \ between successive messages, in seconds to the\n   nearest power of two. The\
    \ values that normally appear in this field\n   range from 6 to 10, inclusive.\n\
    \   Precision: This is an eight-bit signed integer indicating the\n   precision\
    \ of the local clock, in seconds to the nearest power of two.\n   The values that\
    \ normally appear in this field range from -6 for\n   mains-frequency clocks to\
    \ -18 for microsecond clocks found in some\n   workstations.\n   Root Delay: This\
    \ is a 32-bit signed fixed-point number indicating the\n   total roundtrip delay\
    \ to the primary reference source, in seconds\n   with fraction point between\
    \ bits 15 and 16. Note that this variable\n   can take on both positive and negative\
    \ values, depending on the\n   relative time and frequency errors. The values\
    \ that normally appear\n   in this field range from negative values of a few milliseconds\
    \ to\n   positive values of several hundred milliseconds.\n   Root Dispersion:\
    \ This is a 32-bit unsigned fixed-point number\n   indicating the maximum error\
    \ relative to the primary reference\n   source, in seconds with fraction point\
    \ between bits 15 and 16. The\n   values that normally appear in this field range\
    \ from zero to several\n   hundred milliseconds.\n   Reference Clock Identifier:\
    \ This is a 32-bit code identifying the\n   particular reference clock. In the\
    \ case of stratum 0 (unspecified) or\n   stratum 1 (primary reference), this is\
    \ a four-octet, left-justified,\n   zero-padded ASCII string. While not enumerated\
    \ as part of the NTP\n   specification, the following are representative ASCII\
    \ identifiers:\n      Stratum Code  Meaning\n      ------------------------------------------------------------\n\
    \      0   ascii     generic time service other than NTP, such as ACTS\n     \
    \               (Automated Computer Time Service), TIME (UDP/Time\n          \
    \          Protocol), TSP (TSP Unix time protocol), DTSS\n                   \
    \ (Digital Time Synchronization Service), etc.\n      1   ATOM      calibrated\
    \ atomic clock\n      1   VLF       VLF radio (OMEGA, etc.)\n      1   callsign\
    \  Generic radio\n      1   LORC      LORAN-C radionavigation system\n      1\
    \   GOES      Geostationary Operational Environmental Satellite\n      1   GPS\
    \       Global Positioning Service\n      2   address   secondary reference (four-octet\
    \ Internet address of\n                    the NTP server)\n   Reference Timestamp:\
    \ This is the local time at which the local clock\n   was last set or corrected,\
    \ in 64-bit timestamp format.\n   Originate Timestamp: This is the local time\
    \ at which the request\n   departed the client for the server, in 64-bit timestamp\
    \ format.\n   Receive Timestamp: This is the local time at which the request\n\
    \   arrived at the server, in 64-bit timestamp format.\n   Transmit Timestamp:\
    \ This is the local time at which the reply\n   departed the server for the client,\
    \ in 64-bit timestamp format.\n   Authenticator (optional): When the NTP authentication\
    \ mechanism is\n   implemented, this contains the authenticator information defined\
    \ in\n   Appendix C of RFC-1305. In SNTP this field is ignored for incoming\n\
    \   messages and is not generated for outgoing messages.\n"
- title: 4. SNTP Client Operations
  contents:
  - "4. SNTP Client Operations\n   The model for an SNTP client operating with either\
    \ an NTP or SNTP\n   server is a RPC client with no persistent state. The client\n\
    \   initializes the SNTP message header, sends the message to the server\n   and\
    \ strips the time of day from the reply. For this purpose all of\n   the message-header\
    \ fields shown above are set to zero, except the\n   first octet. In this octet\
    \ the Leap Indicator is set to zero (no\n   warning) and the Mode to 3 (client).\
    \ The Version Number must agree\n   with the software version of the NTP or SNTP\
    \ server; however, NTP\n   Version 3 (RFC-1305) servers will also accept Version\
    \ 2 (RFC-1119)\n   and Version 1 (RFC-1059) messages, while NTP Version 2 servers\
    \ will\n   also accept NTP Version 1 messages. Version 0 (original NTP described\n\
    \   in RFC-959) messages are no longer supported. Since there are NTP\n   servers\
    \ of all three versions operating in the Internet of today, it\n   is recommended\
    \ that the Version Number field be set to one.\n   The server reply includes all\
    \ the fields described above; however, in\n   SNTP only the Transmit Timestamp\
    \ has explicit meaning. The integer\n   part of this field contains the server\
    \ time of day in the same format\n   as the Time Protocol. While the fraction\
    \ part of this field will\n   usually be valid, the accuracy achieved with the\
    \ SNTP mode of access\n   probably does not justify its use.\n   The following\
    \ table is a summary of the SNTP client operations. There\n   are three recommended\
    \ error checks shown in the table. In all NTP\n   versions, if the Leap Indicator\
    \ field is 3 or the Transmit Timestamp\n   is zero (unsynchronized), the server\
    \ has never synchronized or not\n   synchronized to a valid timing source within\
    \ the last 24 hours. If\n   the Stratum field is 0 (unspecified or unavailable),\
    \ the server has\n   never synchronized, has lost reachability with all timing\
    \ sources or\n   is synchronized by some protocol other than NTP. Whether to believe\n\
    \   the transmit timestamp or not in this case is at the discretion of\n   the\
    \ client implementation.\n      Field Name              Request        Reply\n\
    \      -------------------------------------------------------------\n      Leap\
    \ Indicator (LI)     0              if 3 (unsynchronized),\n                 \
    \                            disregard\n      Version Number (VN)     (see text)\
    \     ignore\n      Mode                    3 (client)     ignore\n      Stratum\
    \                 0              if 0 (unspecified),\n                       \
    \                      disregard\n      Poll                    0            \
    \  ignore\n      Precision               0              ignore\n      Root Delay\
    \              0              ignore\n      Root Dispersion         0        \
    \      ignore\n      Reference Identifier    0              ignore\n      Reference\
    \ Timestamp     0              ignore\n      Originate Timestamp     0       \
    \       ignore\n      Receive Timestamp       0              ignore\n      Transmit\
    \ Timestamp      0              time of day (seconds only);\n                \
    \                             if 0 (unsynchronized),\n                       \
    \                      disregard\n      Authenticator           (not used)   \
    \  ignore\n"
- title: 5. SNTP Server Operations
  contents:
  - "5. SNTP Server Operations\n   The model for an SNTP server operating with either\
    \ an NTP or SNTP\n   client is an RPC server with no persistent state. The SNTP\
    \ server\n   ignores all header fields except the first octet, modifies certain\n\
    \   fields and returns the message to the sender. Since an SNTP server\n   ordinarily\
    \ does not implement the full set of NTP algorithms intended\n   to support the\
    \ highest quality service, it is recommended that an\n   SNTP server be operated\
    \ only in conjunction with a source of outside\n   synchronization, such as a\
    \ radio clock. In this case the server\n   always operates at stratum 1.\n   The\
    \ first octet is interpreted as follows. The Leap Indicator and\n   Version Number\
    \ fields are ignored. Optionally, messages with version\n   numbers other than\
    \ 1, 2, or 3 can be discarded. For primary servers\n   connected to a functioning\
    \ radio clock, the Leap Indicator field is\n   set to zero and the Stratum field\
    \ is set to one in the reply.\n   otherwise, these fields are set to 3 and zero,\
    \ respectively. In any\n   case the Version Number and Poll fields are copied\
    \ intact to the\n   reply message header. If The Mode field is set to 3 (client),\
    \ it is\n   changed to 4 (server) in the reply; otherwise, this field is set to\
    \ 2\n   (symmetric passive).\n   The Stratum field is set to reflect the maximum\
    \ reading error of the\n   local clock. For all practical cases it is computed\
    \ as the negative\n   of the number of significant bits to the right of the decimal\
    \ point\n   in the NTP timestamp format. The Root Delay and Root Dispersion\n\
    \   fields are set to zero for a primary server; optionally, the Root\n   Dispersion\
    \ can be set to a value corresponding to the expected\n   (constant) maximum expected\
    \ error of the primary reference source.\n   The Reference Identifier is set to\
    \ designate the primary reference\n   source, as indicated in the table above.\
    \ If this information is\n   unspecified or unavailable, the field is set to zero.\n\
    \   The timestamp fields are set as follows. The Reference Timestamp,\n   Receive\
    \ Timestamp and Transmit Timestamp fields are set to the time\n   of day at the\
    \ server. The Originate Timestamp field is copied\n   unchanged from the request.\
    \ The following table summarizes these\n   actions.\n      Field Name        \
    \      Request        Reply\n      ----------------------------------------------------------\n\
    \      Leap Indicator (LI)     ignore         0 (normal), 3\n                \
    \                             (unsynchronized)\n      Version Number (VN)    \
    \ ignore         copied from request\n      Mode                    (see text)\
    \     (see text)\n      Stratum                 ignore         server stratum\
    \ (1)\n      Poll                    ignore         copied from request\n    \
    \  Precision               ignore         server precision\n      Root Delay \
    \             ignore         0\n      Root Dispersion         ignore         0\
    \ (see text)\n      Reference Identifier    ignore         source identifier or\
    \ 0\n      Reference Timestamp     ignore         time of day or 0\n      Originate\
    \ Timestamp     ignore         copied from request\n      Receive Timestamp  \
    \     ignore         time of day or 0\n      Transmit Timestamp      ignore  \
    \       time of day or 0\n      Authenticator           ignore         (not used)\n"
- title: 6. References
  contents:
  - "6. References\n   [DAR81] Postel, J., \"Internet Protocol - DARPA Internet Program\n\
    \   Protocol Specification\", RFC 791, DARPA, September 1981.\n   [MIL92] Mills,\
    \ D., \"Network Time Protocol (Version 3) Specification,\n   Implementation and\
    \ Analysis\", RFC 1305, University of Delaware,\n   March 1992.\n   [POS80] Postel,\
    \ J., \"User Datagram Protocol\", RFC 768,\n   USC/Information Sciences Institute,\
    \ August 1980.\n   [POS83] Postel, J., and K. Harrenstien, \"Time Protocol\",\
    \ RFC 868,\n   USC/Information Sciences Institute, SRI, May 1983.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David L. Mills\n   Electrical Engineering Department\n \
    \  University of Delaware\n   Newark, DE 19716\n   Phone: (302) 831-8247\n   EMail:\
    \ mills@udel.edu\n"
