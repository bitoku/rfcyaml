- title: __initial_text__
  contents:
  - "                      Crypto-Agility Requirements\n        for Remote Authentication\
    \ Dial-In User Service (RADIUS)\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes the requirements for a crypto-agility solution\n\
    \   for Remote Authentication Dial-In User Service (RADIUS).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6421.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n   This document\
    \ may contain material from IETF Documents or IETF\n   Contributions published\
    \ or made publicly available before November\n   10, 2008.  The person(s) controlling\
    \ the copyright in some of this\n   material may not have granted the IETF Trust\
    \ the right to allow\n   modifications of such material outside the IETF Standards\
    \ Process.\n   Without obtaining an adequate license from the person(s) controlling\n\
    \   the copyright in such materials, this document may not be modified\n   outside\
    \ the IETF Standards Process, and derivative works of it may\n   not be created\
    \ outside the IETF Standards Process, except to format\n   it for publication\
    \ as an RFC or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n\
    \      1.1. General ....................................................2\n  \
    \    1.2. Requirements Language ......................................3\n    \
    \  1.3. Publication Process ........................................3\n   2. A\
    \ Working Definition of Crypto-Agility ..........................4\n   3. The\
    \ Current State of RADIUS Security ............................5\n   4. The Requirements\
    \ ................................................5\n      4.1. Overall Solution\
    \ Approach ..................................5\n      4.2. Security Services ..........................................6\n\
    \      4.3. Backwards Compatibility ....................................7\n  \
    \    4.4. Interoperability and Change Control ........................9\n    \
    \  4.5. Scope of Work ..............................................9\n      4.6.\
    \ Applicability of Automated Key Management Requirements .....9\n   5. Security\
    \ Considerations ........................................10\n   6. Acknowledgments\
    \ ................................................10\n   7. References .....................................................10\n\
    \      7.1. Normative References ......................................10\n  \
    \    7.2. Informative References ....................................11\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  General
  contents:
  - "1.1.  General\n   At the IETF 66 meeting, the RADIUS Extensions (RADEXT) Working\
    \ Group\n   (WG) was asked by members of the Security Area Directorate to prepare\n\
    \   a formal description of a crypto-agility work item and corresponding\n   charter\
    \ milestones.  After consultation with one of the Security Area\n   Directors\
    \ (Russ Housley), text was initially proposed on the RADEXT\n   WG mailing list\
    \ on October 26, 2006.  The following summarizes that\n   proposal:\n      The\
    \ RADEXT WG will review the security requirements for crypto-\n      agility in\
    \ IETF protocols, and identify the deficiencies of the\n      existing RADIUS\
    \ protocol specifications against these\n      requirements.  Specific attention\
    \ will be paid to RFC 4962\n      [RFC4962].\n      The RADEXT WG will propose\
    \ one or more specifications to remediate\n      any identified deficiencies in\
    \ the crypto-agility properties of\n      the RADIUS protocol.  The known deficiencies\
    \ include the issue of\n      negotiation of substitute algorithms for the message\
    \ digest\n      functions, the key-wrap functions, and the password-hiding\n \
    \     function.  Additionally, at least one mandatory to implement\n      cryptographic\
    \ algorithm will be defined in each of these areas, as\n      required.\n   This\
    \ document describes the features, properties, and limitations of\n   RADIUS crypto-agility\
    \ solutions; defines the term \"crypto-agility\" as\n   used in this context;\
    \ and provides the motivations for this work.\n   The requirements defined in\
    \ this memo have been developed based on\n   email messages posted to the RADEXT\
    \ WG mailing list, which may be\n   found in the archives of that list.  The purpose\
    \ of framing the\n   requirements in this memo is to formalize and archive them\
    \ for future\n   reference and to bring them explicitly to the attention of the\
    \ IESG\n   and the IETF community as we proceed with this work.\n"
- title: 1.2.  Requirements Language
  contents:
  - "1.2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC2119].\n   A RADIUS crypto-agility solution is not compliant with this\n\
    \   specification if it fails to satisfy one or more of the MUST or MUST\n   NOT\
    \ statements.  A solution that satisfies all the MUST, MUST NOT,\n   SHOULD, and\
    \ SHOULD NOT statements is said to be \"unconditionally\n   compliant\"; one that\
    \ satisfies all the MUST and MUST NOT statements\n   but not all the SHOULD or\
    \ SHOULD NOT requirements is said to be\n   \"conditionally compliant\".\n"
- title: 1.3.  Publication Process
  contents:
  - "1.3.  Publication Process\n   RADIUS [RFC2865] is a widely deployed protocol\
    \ that has attained\n   Draft Standard status based on multiple independent interoperable\n\
    \   implementations.  Therefore, it is desirable that a high level of\n   interoperability\
    \ be maintained for crypto-agility solutions.\n   To ensure that crypto-agility\
    \ solutions published on the standards\n   track are well specified and interoperable,\
    \ the RADEXT WG has adopted\n   a two phase process for standards-track publication\
    \ of crypto-agility\n   solutions.\n   In the initial phase, crypto-agility solutions\
    \ adopted by the working\n   group will be published as Experimental.  These documents\
    \ should\n   contain a description of the implementations and experimental\n \
    \  deployments in progress as well as an evaluation of the proposal\n   against\
    \ the requirements described in this document.\n   The working group will then\
    \ select proposals to advance on the\n   standards track.  Criteria to be used\
    \ include evaluation of the\n   proposal against the requirements, summary of\
    \ the experimental\n   deployment experience, and evidence of multiple interoperable\n\
    \   implementations.\n"
- title: 2.  A Working Definition of Crypto-Agility
  contents:
  - "2.  A Working Definition of Crypto-Agility\n   Crypto-agility is the ability\
    \ of a protocol to adapt to evolving\n   cryptography and security requirements.\
    \  This may include the\n   provision of a modular mechanism to allow cryptographic\
    \ algorithms to\n   be updated without substantial disruption to fielded implementations.\n\
    \   It may provide for the dynamic negotiation and installation of\n   cryptographic\
    \ algorithms within protocol implementations (think of\n   Dynamic-Link Libraries\
    \ (DLL)).\n   In the specific context of the RADIUS protocol and RADIUS\n   implementations,\
    \ crypto-agility may be better defined as the ability\n   of RADIUS implementations\
    \ to automatically negotiate cryptographic\n   algorithms for use in RADIUS exchanges,\
    \ including the algorithms used\n   to integrity protect and authenticate RADIUS\
    \ packets and to hide\n   RADIUS attributes.  This capability covers all RADIUS\
    \ message types:\n   Access-Request/Response, Accounting-Request/Response, CoA/Disconnect-\n\
    \   Request/Response, and Status-Server.  Negotiation of cryptographic\n   algorithms\
    \ MAY occur within the RADIUS protocol, or within a lower\n   layer such as the\
    \ transport layer.\n   Proposals MUST NOT introduce generic new capability negotiation\n\
    \   features into the RADIUS protocol or require changes to the RADIUS\n   operational\
    \ model as defined in \"RADIUS Design Guidelines\" [RFC6158],\n   Section 3.1\
    \ and Appendix A.4.  A proposal SHOULD focus on the crypto-\n   agility problem\
    \ and nothing else.  For example, proposals SHOULD NOT\n   require new attribute\
    \ formats and SHOULD be compatible with the\n   guidance provided in [RFC6158],\
    \ Section 2.3.  Issues of backward\n   compatibility are described in more detail\
    \ in Section 4.3.\n"
- title: 3.  The Current State of RADIUS Security
  contents:
  - "3.  The Current State of RADIUS Security\n   RADIUS packets, as defined in [RFC2865],\
    \ are protected by an MD5\n   message integrity check (MIC) within the Authenticator\
    \ field of\n   RADIUS packets other than Access-Request [RFC2865] and Status-Server\n\
    \   [RFC5997].  The Message-Authenticator Attribute utilizes HMAC-MD5 to\n   authenticate\
    \ and integrity protect RADIUS packets.\n   While RADIUS does not support confidentiality\
    \ of entire packets,\n   various RADIUS attributes support encrypted (also known\
    \ as \"hidden\")\n   values, including User-Password (defined in [RFC2865], Section\
    \ 5.2),\n   Tunnel-Password (defined in [RFC2868], Section 3.5), and various\n\
    \   Vendor-Specific Attributes, such as the MS-MPPE-Send-Key and\n   MS-MPPE-Recv-Key\
    \ attributes (defined in [RFC2548], Section 2.4).\n   Generally speaking, the\
    \ hiding mechanism uses a stream cipher based\n   on a key stream from an MD5\
    \ digest.  Attacks against this mechanism\n   are described in \"RADIUS Support\
    \ for EAP\" [RFC3579], Section 4.3.4.\n   \"Updated Security Considerations for\
    \ the MD5 Message-Digest and the\n   HMAC-MD5 Algorithms\" [RFC6151] discusses\
    \ security considerations for\n   use of the MD5 and HMAC-MD5 algorithms.  While\
    \ the advances in MD5\n   collisions do not immediately compromise the use of\
    \ MD5 or HMAC-MD5\n   for the purposes used within RADIUS absent knowledge of\
    \ the\n   RADIUS shared secret, the progress toward compromise of MD5's basic\n\
    \   cryptographic assumptions has resulted in the deprecation of MD5\n   usage\
    \ in a variety of applications.  As noted in [RFC6151],\n   Section 2:\n     \
    \ MD5 is no longer acceptable where collision resistance is required\n      such\
    \ as digital signatures.  It is not urgent to stop using MD5 in\n      other ways,\
    \ such as HMAC-MD5; however, since MD5 must not be used\n      for digital signatures,\
    \ new protocol designs should not employ\n      HMAC-MD5.\n"
- title: 4.  The Requirements
  contents:
  - '4.  The Requirements

    '
- title: 4.1.  Overall Solution Approach
  contents:
  - "4.1.  Overall Solution Approach\n   RADIUS crypto-agility solutions are not restricted\
    \ to utilizing\n   technology described in existing RFCs.  Since RADIUS over IPsec\
    \ is\n   already described in Section 5 of \"RADIUS and IPv6\" [RFC3162] and\n\
    \   Section 4.2 of [RFC3579], this technique is already available to\n   those\
    \ who wish to use it.  Therefore, it is expected that proposals\n   will utilize\
    \ other techniques.\n"
- title: 4.2.  Security Services
  contents:
  - "4.2.  Security Services\n   Proposals MUST support the negotiation of cryptographic\
    \ algorithms\n   for per-packet integrity/authentication protection.  Proposals\
    \ also\n   MUST support per-packet replay protection for all RADIUS message\n\
    \   types.  Crypto-agility solutions MUST specify mandatory-to-implement\n   cryptographic\
    \ algorithms for each defined mechanism.\n   Crypto-agility solutions MUST avoid\
    \ security compromise, even in\n   situations where the existing cryptographic\
    \ algorithms utilized by\n   RADIUS implementations are shown to be weak enough\
    \ to provide little\n   or no security (e.g., in the event of compromise of the\
    \ legacy RADIUS\n   shared secret).  Included in this would be protection against\n\
    \   bidding-down attacks.  In analyzing the resilience of a crypto-\n   agility\
    \ solution, it can be assumed that RADIUS requesters and\n   responders can be\
    \ configured to require the use of new secure\n   algorithms in the event of a\
    \ compromise of existing cryptographic\n   algorithms or the legacy RADIUS shared\
    \ secret.\n   Guidance on acceptable algorithms can be found in [NIST-SP800-131A].\n\
    \   It is RECOMMENDED that mandatory-to-implement cryptographic\n   algorithms\
    \ be chosen from among those classified as \"Acceptable\" with\n   no known deprecation\
    \ date from within this or successor documents.\n   It is RECOMMENDED that solutions\
    \ provide support for confidentiality,\n   either by supporting encryption of\
    \ entire RADIUS packets or by\n   encrypting individual RADIUS attributes.  Proposals\
    \ supporting\n   confidentiality MUST support the negotiation of cryptographic\n\
    \   algorithms for encryption.\n   Support for encryption of individual RADIUS\
    \ attributes is OPTIONAL\n   for solutions that provide encryption of entire RADIUS\
    \ packets.\n   Solutions providing for encryption of individual RADIUS attributes\n\
    \   are REQUIRED to provide support for improving the confidentiality of\n   existing\
    \ encrypted (sometimes referred to as \"hidden\") attributes as\n   well as encrypting\
    \ attributes (such as location attributes) that are\n   currently transmitted\
    \ in cleartext.\n   In addition to the goals referred to above, [RFC4962] Section\
    \ 3\n   describes additional security requirements, which translate into the\n\
    \   following requirements for RADIUS crypto-agility solutions:\n      Strong,\
    \ fresh session keys:\n      RADIUS crypto-agility solutions are REQUIRED to generate\
    \ fresh\n      session keys for use between the RADIUS client and server.  In\n\
    \      order to prevent the disclosure of one session key from aiding an\n   \
    \   attacker in discovering other session keys, RADIUS crypto-agility\n      solutions\
    \ are RECOMMENDED to support Perfect Forward Secrecy (PFS)\n      with respect\
    \ to session keys negotiated between the RADIUS client\n      and server.\n  \
    \    Limit key scope:\n      In order to enable a Network Access Server (NAS)\
    \ and RADIUS server\n      to exchange confidential information such as keying\
    \ material\n      without disclosure to third parties, it is RECOMMENDED that\
    \ a\n      RADIUS crypto-agility solution support X.509 certificates for\n   \
    \   authentication between the NAS and RADIUS server.  Manual\n      configuration\
    \ or automated discovery mechanisms such as NAI-based\n      Dynamic Peer Discovery\
    \ [RADYN] can be used to enable\n      direct NAS-RADIUS server communications.\
    \  Support for end-to-end\n      confidentiality of RADIUS attributes is OPTIONAL.\n\
    \      For compatibility with existing operations, RADIUS crypto-agility\n   \
    \   solutions SHOULD also support pre-shared key credentials.\n      However,\
    \ support for direct communications between the NAS and\n      RADIUS server is\
    \ OPTIONAL when pre-shared key credentials are\n      used.\n"
- title: 4.3.  Backwards Compatibility
  contents:
  - "4.3.  Backwards Compatibility\n   Solutions MUST demonstrate backward compatibility\
    \ with existing\n   RADIUS implementations.  That is, an implementation that supports\n\
    \   both crypto-agility and legacy mechanisms MUST be able to talk with\n   legacy\
    \ RADIUS clients and servers (using the legacy mechanisms).\n   While backward\
    \ compatibility is needed to ease the transition between\n   legacy RADIUS and\
    \ crypto-agile RADIUS, use of legacy mechanisms is\n   only appropriate prior\
    \ to the compromise of those mechanisms.  After\n   legacy mechanisms have been\
    \ compromised, secure algorithms MUST be\n   used so that backward compatibility\
    \ is no longer possible.\n   Since RADIUS is a request/response protocol, the\
    \ ability to negotiate\n   cryptographic algorithms within a single RADIUS exchange\
    \ is\n   inherently limited.  Prior to receipt of a response, a requester will\n\
    \   not know what algorithms are supported by the responder.  Therefore,\n   while\
    \ a RADIUS request can provide a list of supported cryptographic\n   algorithms\
    \ that can be selected for use within a response, prior to\n   the receipt of\
    \ a response, the cryptographic algorithms utilized to\n   provide security services\
    \ within an initial request will need to be\n   predetermined.\n   In order to\
    \ enable a request to be handled both by legacy as well as\n   crypto-agile implementations,\
    \ a request can be secured with legacy\n   algorithms was well as with attributes\
    \ providing security services\n   using more secure algorithms.  This approach\
    \ allows a RADIUS packet\n   to be processed by legacy implementations as well\
    \ as by crypto-agile\n   implementations, and it does not result in additional\
    \ response\n   delays.  If this technique is used, credentials used with legacy\n\
    \   algorithms MUST be cryptographically independent of the credentials\n   used\
    \ with the more secure algorithms, so that compromise of the\n   legacy credentials\
    \ does not result in compromise of the credentials\n   used with more secure algorithms.\n\
    \   In this approach to backward compatibility, legacy mechanisms are\n   initially\
    \ used in requests sent between crypto-agile implementations.\n   However, if\
    \ the responder indicates support for crypto-agility,\n   future requests can\
    \ use more secure mechanisms.  Note that if a\n   responder is upgraded and then\
    \ subsequently needs to be downgraded\n   (e.g., due to bugs), this could result\
    \ in requesters being unable to\n   communicate with the downgraded responder\
    \ unless a mechanism is\n   provided to configure the requester to re-enable use\
    \ of legacy\n   algorithms.\n   Probing techniques can be used to avoid the use\
    \ of legacy algorithms\n   in requests sent between crypto-agile implementations.\
    \  For example,\n   an initial request can omit use of legacy mechanisms.  If\
    \ a response\n   is received, then the recipient can be assumed to be crypto-agile\
    \ and\n   future requests to that recipient can utilize secure mechanisms.\n \
    \  Similarly, the responder can assume that the requester supports\n   crypto-agility\
    \ and can prohibit use of legacy mechanisms in future\n   requests.  Note that\
    \ if a requester is upgraded and then subsequently\n   needs to be downgraded\
    \ (e.g., due to bugs), this could result in the\n   requester being unable to\
    \ interpret responses, unless a mechanism is\n   provided to configure the responder\
    \ to re-enable use of legacy\n   algorithms.\n   If a response is not received,\
    \ in the absence of information\n   indicating responder support for crypto-agility\
    \ (such as pre-\n   configuration or previous receipt of a crypto-agile response),\
    \ a new\n   request can be composed utilizing legacy mechanisms.\n   Since legacy\
    \ implementations not supporting crypto-agility will\n   silently discard requests\
    \ not protected by legacy algorithms rather\n   than returning an error, repeated\
    \ requests can be required to\n   distinguish lack of support for crypto-agility\
    \ from packet loss or\n   other failure conditions.  Therefore, probing techniques\
    \ can delay\n   initial communication between crypto-agile requesters and legacy\n\
    \   responders.  This can be addressed by upgrading the responders (e.g.,\n  \
    \ RADIUS servers) first.\n"
- title: 4.4.  Interoperability and Change Control
  contents:
  - "4.4.  Interoperability and Change Control\n   Proposals MUST indicate a willingness\
    \ to cede change control to the\n   IETF.\n   Crypto-agility solutions MUST be\
    \ interoperable between independent\n   implementations based purely on the information\
    \ provided in the\n   specification.\n"
- title: 4.5.  Scope of Work
  contents:
  - "4.5.  Scope of Work\n   Crypto-agility solutions MUST apply to all RADIUS packet\
    \ types,\n   including Access-Request, Access-Challenge, Access-Reject,\n   Access-Accept,\
    \ Accounting-Request, Accounting-Response, Status-Server\n   and CoA/Disconnect\
    \ messages.\n   Since it is expected that the work will occur purely within RADIUS\
    \ or\n   in the transport, message data exchanged with Diameter SHOULD NOT be\n\
    \   affected.\n   Proposals MUST discuss any inherent assumptions about, or limitations\n\
    \   on, client/server operations or deployment and SHOULD provide\n   recommendations\
    \ for transition of deployments from legacy RADIUS to\n   crypto-agile RADIUS.\
    \  Issues regarding cipher-suite negotiation,\n   legacy interoperability, and\
    \ the potential for bidding-down attacks\n   SHOULD be among these discussions.\n"
- title: 4.6.  Applicability of Automated Key Management Requirements
  contents:
  - "4.6.  Applicability of Automated Key Management Requirements\n   \"Guidelines\
    \ for Cryptographic Key Management\" [RFC4107] provides\n   guidelines for when\
    \ automated key management is necessary.\n   Consideration was given as to whether\
    \ or not RFC 4107 would require a\n   RADIUS crypto-agility solution to feature\
    \ Automated Key Management\n   (AKM).  It was determined that AKM was not inherently\
    \ required for\n   RADIUS based on the following points:\n   o  RFC 4107 requires\
    \ AKM for protocols that involve O(n^2) keys.\n      This does not apply to RADIUS\
    \ deployments, which require O(n)\n      keys.\n   o  Requirements for session\
    \ key freshness can be met without AKM, for\n      example, by utilizing a pre-shared\
    \ key along with an exchange of\n      nonces.\n   o  RADIUS does not require\
    \ the encryption of large amounts of data in\n      a short time.\n   o  Organizations\
    \ already have operational practices to manage\n      existing RADIUS shared secrets\
    \ to address key changes required as\n      a result of personnel changes.\n \
    \  o  The crypto-agility solution can avoid the use of cryptographic\n      modes\
    \ of operation, such as a counter mode cipher, that require\n      frequent key\
    \ changes.\n   However, at the same time, it is recognized that features recommended\n\
    \   in Section 4.2 such as support for perfect forward secrecy and direct\n  \
    \ transport of keys between a NAS and RADIUS server can only be\n   provided by\
    \ a solution supporting AKM.  As a result, support for\n   Automated Key Management\
    \ is RECOMMENDED within a RADIUS crypto-\n   agility solution.\n   Also, automated\
    \ key management is REQUIRED for RADIUS crypto-agility\n   solutions that use\
    \ cryptographic modes of operation that require\n   frequent key changes.\n"
- title: 5.  Security Considerations
  contents:
  - "5.  Security Considerations\n   Potential attacks against the RADIUS protocol\
    \ are described in\n   [RFC3579], Section 4.1, and details of known exploits as\
    \ well as\n   potential mitigations are discussed in [RFC3579], Section 4.3.\n\
    \   This specification describes the requirements for new cryptographic\n   protection\
    \ mechanisms, including the modular selection of algorithms\n   and modes.  Therefore,\
    \ all the subject matter of this memo is related\n   to security.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   Thanks to all the reviewers and contributors, including\
    \ Bernard\n   Aboba, Mary Barnes, Pasi Eronen, Dan Romascanu, Joe Salowey, and\
    \ Glen\n   Zorn.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [NIST-SP800-131A]\n              Barker, E. and\
    \ A. Roginsky, \"Transitions: Recommendation\n              for Transitioning\
    \ the Use of Cryptographic Algorithms and\n              Key Lengths\", NIST SP-800-131A,\
    \ January 2011.\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2865]\
    \  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n              \"Remote\
    \ Authentication Dial In User Service (RADIUS)\", RFC\n              2865, June\
    \ 2000.\n   [RFC4107]  Bellovin, S. and R. Housley, \"Guidelines for Cryptographic\n\
    \              Key Management\", BCP 107, RFC 4107, June 2005.\n   [RFC4962] \
    \ Housley, R. and B. Aboba, \"Guidance for Authentication,\n              Authorization,\
    \ and Accounting (AAA) Key Management\", BCP\n              132, RFC 4962, July\
    \ 2007.\n   [RFC6151]  Turner, S. and L. Chen, \"Updated Security Considerations\n\
    \              for the MD5 Message-Digest and the HMAC-MD5 Algorithms\",\n   \
    \           RFC 6151, March 2011.\n   [RFC6158]  DeKok, A., Ed., and G. Weber,\
    \ \"RADIUS Design Guidelines\",\n              BCP 158, RFC 6158, March 2011.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [RADYN]    Winter, S. and M. McCauley, \"NAI-based\
    \ Dynamic Peer\n              Discovery for RADIUS/TLS and RADIUS/DTLS\", Work\
    \ in\n              Progress, July 2011.\n   [RFC2548]  Zorn, G., \"Microsoft\
    \ Vendor-specific RADIUS Attributes\",\n              RFC 2548, March 1999.\n\
    \   [RFC2868]  Zorn, G., Leifer, D., Rubens, A., Shriver, J., Holdrege,\n    \
    \          M., and I. Goyret, \"RADIUS Attributes for Tunnel Protocol\n      \
    \        Support\", RFC 2868, June 2000.\n   [RFC3162]  Aboba, B., Zorn, G., and\
    \ D. Mitton, \"RADIUS and IPv6\", RFC\n              3162, August 2001.\n   [RFC3579]\
    \  Aboba, B. and P. Calhoun, \"RADIUS (Remote Authentication\n              Dial\
    \ In User Service) Support For Extensible\n              Authentication Protocol\
    \ (EAP)\", RFC 3579, September 2003.\n   [RFC5997]  DeKok, A., \"Use of Status-Server\
    \ Packets in the Remote\n              Authentication Dial In User Service (RADIUS)\
    \ Protocol\",\n              RFC 5997, August 2010.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   David B. Nelson (editor)\n   Elbrys Networks, Inc.\n   282\
    \ Corporate Drive, Unit 1\n   Portsmouth, NH  03801\n   USA\n   EMail: d.b.nelson@comcast.net\n"
