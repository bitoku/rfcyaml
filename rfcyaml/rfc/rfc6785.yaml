- contents:
  - '  Support for Internet Message Access Protocol (IMAP) Events in Sieve

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Sieve defines an email filtering language that can, in principle,\n
    \  plug into any point in the processing of an email message.  As\n   defined
    in the base specification, it plugs into mail delivery.  This\n   document defines
    how Sieve can plug into points in IMAP where\n   messages are created or changed,
    adding the option of user-defined or\n   installation-defined filtering (or, with
    Sieve extensions, features\n   such as notifications).  Because this requires
    future Sieve\n   extensions to specify their interactions with this one, this
    document\n   updates the base Sieve specification, RFC 5228.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6785.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Overview ...................................................3\n      1.2.
    Differences between IMAP Events and Mail Delivery ..........4\n      1.3. Conventions
    Used in This Document ..........................5\n   2. The \"IMAP Events in
    Sieve\" Extension ............................5\n      2.1. The \"imapsieve\"
    Capability Strings .........................5\n      2.2. Existing IMAP Functions
    Affected by IMAP Events in Sieve ...5\n           2.2.1. The IMAP APPEND Command
    .............................6\n           2.2.2. The IMAP COPY Command ...............................6\n
    \          2.2.3. Changes to IMAP Message Flags .......................6\n           2.2.4.
    When Script Actions Set the \\Deleted Flag ...........7\n      2.3. New Functions
    Defined by IMAP Events in Sieve ..............7\n           2.3.1. Interaction
    with Metadata ...........................7\n   3. Applicable Sieve Actions and
    Interactions .......................8\n      3.1. The Implicit Keep ..........................................9\n
    \     3.2. The \"keep\" Action ..........................................9\n      3.3.
    The \"fileinto\" Action ......................................9\n      3.4. The
    \"redirect\" Action ......................................9\n      3.5. The \"discard\"
    Action ......................................10\n      3.6. The \"notify\" Action
    .......................................10\n      3.7. The \"addheader\" and \"deleteheader\"
    Actions ................10\n      3.8. The \"setflag\", \"deleteflag\", and \"removeflag\"
    Actions .....11\n      3.9. MIME Part Tests and Replacement ...........................11\n
    \     3.10. spamtest and virustest ...................................11\n      3.11.
    Inapplicable Actions .....................................11\n      3.12. Future
    Sieve Actions .....................................12\n   4. Interaction with
    Sieve Environment .............................12\n      4.1. Base Sieve Environment
    Items: location and phase ..........12\n      4.2. New Sieve Environment Items:
    imap.user and imap.email .....12\n      4.3. New Sieve Environment Item: imap.cause
    ....................13\n      4.4. New Sieve Environment Item: imap.mailbox ..................13\n
    \     4.5. New Sieve Environment Item: imap.changedflags .............13\n      4.6.
    Interaction with Sieve Tests (Comparisons) ................13\n   5. Examples
    .......................................................14\n   6. Security Considerations
    ........................................15\n   7. IANA Considerations ............................................16\n
    \     7.1. Registration of \"imapsieve\" IMAP Capability ...............16\n      7.2.
    Registration of \"imapsieve\" Sieve Extension ...............16\n      7.3. Registration
    of Sieve Environment Items ...................16\n           7.3.1. Registration
    of Sieve Environment Item:\n                  imap.cause .........................................16\n
    \          7.3.2. Registration of Sieve Environment Item:\n                  imap.mailbox
    .......................................17\n           7.3.3. Registration of Sieve
    Environment Item:\n                  imap.changedflags ..................................17\n
    \          7.3.4. Registration of Sieve Environment Item: imap.user ..17\n           7.3.5.
    Registration of Sieve Environment Item:\n                  imap.email .........................................17\n
    \     7.4. Registration of IMAP METADATA Mailbox Entry Name ..........18\n      7.5.
    Registration of IMAP METADATA Server Entry Name ...........18\n   8. References
    .....................................................18\n      8.1. Normative
    References ......................................18\n      8.2. Informative References
    ....................................19\n"
  title: Table of Contents
- contents:
  - '1.  Introduction

    '
  - contents:
    - "1.1.  Overview\n   Some applications have a need to apply Sieve filters [RFC5228]
      in\n   contexts other than initial mail delivery.  This is especially true\n
      \  in diverse service environments, such as when the client is\n   sporadically
      connected, is connected through a high-latency or\n   high-cost channel, or
      is on a limited-function device.  For such\n   clients, it may be very important,
      for higher performance and\n   reliability, to take advantage of server capabilities,
      including\n   those provided by Sieve filtering (and Sieve extensions, such
      as\n   Notify [RFC5435]).\n   This specification defines extensions to IMAP
      [RFC3501] to support\n   the invocation of Sieve scripts at times when the IMAP
      server creates\n   new messages or modifies existing ones.  It also defines
      how Sieve\n   scripts will process these invocations.  Support for IMAP events
      in\n   Sieve also requires support for the following:\n   o  IMAP Metadata [RFC5464],
      because Metadata is used to associate\n      scripts with IMAP mailboxes.\n
      \  o  Sieve Environment [RFC5183], because it defines an important way\n      for
      Sieve scripts to test the conditions under which they have\n      been invoked.\n
      \  o  Sieve imap4flags [RFC5232], because it provides important\n      functionality
      in handling IMAP events related to flag changes.\n   Because this requires future
      Sieve extensions to specify their\n   interactions with this one (see Section
      3.12), this document updates\n   the base Sieve specification, RFC 5228.\n"
    title: 1.1.  Overview
  - contents:
    - "1.2.  Differences between IMAP Events and Mail Delivery\n   Invoking Sieve
      scripts in a context other than initial mail delivery\n   introduces new situations;
      this changes the applicability of Sieve\n   features, creates implementation
      challenges, and creates user\n   interface issues.  This section discusses some
      of those differences,\n   challenges, and issues.\n   At times other than message
      delivery, delivery \"envelope\" information\n   might not be available.  With
      messages added through IMAP APPEND,\n   there might be no way to even guess
      who the intended recipient is,\n   and no concept of who \"sent\" the message.
      \ Sieve actions that relate\n   to contacting the sender, for example, will
      not be applicable.\n   Because IMAP events will often be triggered by user actions,
      and\n   because user interfaces allow bulk actions that differ from\n   individual
      message arrival, it now becomes possible for a single user\n   action, such
      as drag-and-drop, to initiate Sieve script processing on\n   a large number
      of messages at once.  Implementations will have to\n   deal with such situations
      as a \"COPY\" action or flag changes on\n   dozens, or even thousands, of messages.\n
      \  Other issues might surface as this extension is deployed and\n   experience
      with it develops.\n"
    title: 1.2.  Differences between IMAP Events and Mail Delivery
  - contents:
    - "1.3.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST
      NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
      \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
      as described in [RFC2119].\n"
    title: 1.3.  Conventions Used in This Document
  title: 1.  Introduction
- contents:
  - '2.  The "IMAP Events in Sieve" Extension

    '
  - contents:
    - "2.1.  The \"imapsieve\" Capability Strings\n   An IMAP server advertises support
      for IMAP events in Sieve through\n   the \"imapsieve\" capability.  A server
      that advertises \"imapsieve\" is\n   claiming to be in compliance with this
      specification in all aspects.\n   The syntax of the \"imapsieve\" capability
      string is defined as\n   follows:\n   capability /=  \"IMAPSIEVE=\" sieveurl-server\n
      \          ; <sieveurl-server> is defined in RFC 5804, Section 3\n   Only one
      \"imapsieve\" capability string, specifying one\n   sieveurl-server, is allowed
      to be present.  The sieveurl-server\n   identifies the ManageSieve server that
      clients need to contact for\n   managing Sieve scripts associated with this
      IMAP server.\n   The corresponding Sieve implementation uses the Sieve capability\n
      \  string \"imapsieve\", and Sieve scripts that depend upon the IMAP\n   events
      MUST include that string in their \"required\" lists.\n   Implementations that
      support IMAP events in Sieve MUST also support\n   IMAP Metadata [RFC5464] and
      Sieve Environment [RFC5183], because\n   Metadata is used to associate scripts
      with IMAP mailboxes and\n   Environment defines an important way for Sieve scripts
      to test the\n   conditions under which they have been invoked.  Notwithstanding
      the\n   support requirement, scripts that directly use Environment MUST also\n
      \  include its capability string in their \"required\" lists.\n"
    title: 2.1.  The "imapsieve" Capability Strings
  - contents:
    - "2.2.  Existing IMAP Functions Affected by IMAP Events in Sieve\n   The subsections
      below describe in detail the IMAP commands and\n   situations on which IMAP
      events in Sieve have an effect.  Not all\n   Sieve actions make sense in the
      case of messages affected by IMAP\n   commands.  See Section 3 for details.\n
      \  It's important to note that since the base Sieve specification (see\n   [RFC5228])
      and its extensions define functions for scripts that are\n   invoked during
      initial mail delivery, those function definitions are\n   necessarily tailored
      to and limited by that context.  This document\n   extends those function definitions
      for use during IMAP events.  By\n   nature of that, Sieve functions, in this
      extended context, may behave\n   somewhat differently, though their extended
      behavior will still be\n   consistent with the functions' goals.\n   If more
      than one message is affected at the same time, each message\n   triggers the
      execution of a Sieve script separately.  The scripts MAY\n   be run in parallel.\n"
    - contents:
      - "2.2.1.  The IMAP APPEND Command\n   A message may be added to a mailbox through
        the IMAP APPEND command.\n   In a server that advertises \"imapsieve\", new
        messages added in this\n   way MUST trigger the execution of a Sieve script,
        subject to the\n   settings defined through Metadata (see Section 2.3.1).\n
        \  If the IMAP server also supports the IMAP MULTIAPPEND extension\n   [RFC3502],
        the APPEND command can create more than one message at a\n   time.  In that
        case, each message creation is considered a separate\n   event, and any applicable
        Sieve script is called once for each\n   message.\n"
      title: 2.2.1.  The IMAP APPEND Command
    - contents:
      - "2.2.2.  The IMAP COPY Command\n   One or more messages may be added to a
        mailbox through the IMAP COPY\n   command.  In a server that advertises \"imapsieve\",
        new messages added\n   in this way MUST trigger the execution of a Sieve script,
        subject to\n   the settings defined through Metadata.\n"
      title: 2.2.2.  The IMAP COPY Command
    - contents:
      - "2.2.3.  Changes to IMAP Message Flags\n   One or more existing messages can
        have their flags changed in a\n   number of ways, including:\n   o  The FETCH
        command (may cause the \\Seen flag to be set).\n   o  The STORE command (may
        cause the \\Answered, \\Deleted, \\Draft,\n      \\Flagged, and \\Seen flags
        to be set or reset, and may cause\n      keywords to be set or reset).\n   o
        \ The invocation of a Sieve script on an existing message, where the\n      script
        uses one of the actions defined in the imap4flags extension\n      [RFC5232]
        to change the flags.\n   In a server that advertises \"imapsieve\", messages
        whose flags are\n   changed in any way (except as explained in the next sentence)
        MUST\n   trigger the execution of a Sieve script, subject to the settings\n
        \  defined through Metadata.  The exception is that in order to avoid\n   script
        loops, flag changes that are made as a result of a script that\n   was itself
        invoked because of flag changes SHOULD NOT result in a\n   further invocation
        of the script.  In any case, implementations MUST\n   take steps to avoid
        such loops.\n   For flag-change events, the Sieve script will see the message
        flags\n   as they are AFTER the changes.\n"
      title: 2.2.3.  Changes to IMAP Message Flags
    - contents:
      - "2.2.4.  When Script Actions Set the \\Deleted Flag\n   There are times when
        the actions \"fileinto\" (see Section 3.3),\n   \"redirect\" (see Section
        3.4), and \"discard\" (see Section 3.5) will\n   set the \\Deleted flag on
        the message.  In those cases, the following\n   apply:\n   When the \\Deleted
        flag is set by the script, a flag-change Sieve\n   script is not invoked.\n
        \  The implementation MAY then expunge the original message (WITHOUT\n   expunging
        other messages in the mailbox).  Alternatively, it might\n   have expunges
        batched or done by a user.  (It might be helpful to\n   allow the user to
        make this choice through a preference.)\n   If the server does the expunge,
        the effect is as though a client had\n   flagged the message and done a UID
        EXPUNGE (see [RFC4315]) on the\n   affected message(s) only.  Handling it
        this way allows clients to\n   handle messages consistently and avoids hidden
        changes that might\n   invalidate their message caches.\n"
      title: 2.2.4.  When Script Actions Set the \Deleted Flag
    title: 2.2.  Existing IMAP Functions Affected by IMAP Events in Sieve
  - contents:
    - '2.3.  New Functions Defined by IMAP Events in Sieve

      '
    - contents:
      - "2.3.1.  Interaction with Metadata\n   Support for IMAP events in Sieve requires
        support for IMAP Metadata\n   [RFC5464] as well, since the latter is used
        to associate scripts with\n   IMAP mailboxes.\n   When an applicable event
        occurs on an IMAP mailbox, if there is an\n   IMAP metadata entry named \"/shared/imapsieve/script\"
        for the mailbox,\n   that entry is used.  If there is not, but there is an
        IMAP metadata\n   entry named \"/shared/imapsieve/script\" for the server,
        that entry is\n   used (providing a way to define a global script for all
        mailboxes on\n   a server).  If neither entry exists, then no script will
        be invoked.\n   If a \"/shared/imapsieve/script\" metadata entry was selected
        above,\n   its value is used as the name of the Sieve script that will be\n
        \  invoked in response to the IMAP event.  If the value is empty, then\n   no
        script is run.  The selection of which metadata entry to use\n   happens before
        any examination of the contents of the entry.  If the\n   mailbox entry is
        selected and is then found to be unusable or empty,\n   the server entry is
        not used as a backup: no script is run.\n   This specifies the mechanism for
        \"activating\" a script for a given\n   mailbox (or for all mailboxes) but
        does not specify a mechanism for\n   creating, storing, or validating the
        script.  Implementations MUST\n   support ManageSieve [RFC5804] and can use
        the PUTSCRIPT command to\n   store the script without using the SETACTIVE
        command to activate it.\n   Script names used in \"/shared/imapsieve/script\"
        metadata entries are\n   the script names used on the corresponding ManageSieve
        server.  If a\n   \"/shared/imapsieve/script\" metadata entry contains a script
        name that\n   doesn't exist in the ManageSieve server, then no Sieve script
        will be\n   invoked for IMAP Sieve events.\n   Only one Sieve script may currently
        be defined per mailbox,\n   eliminating the complexity and possible ambiguity
        involved with\n   coordinating the results of multiple scripts.  Any sub-filtering
        is\n   done in the Sieve script.  For example, if it's only necessary to\n
        \  deal with flag changes, but not with new messages appended or copied,\n
        \  the Sieve script will still be invoked for all events, and the script\n
        \  is responsible for checking the event type.\n   The possibility is open
        for an extension to add support for multiple\n   scripts -- for example, per-client
        scripts on a multi-client user's\n   inbox, or per-user scripts on a mailbox
        that is shared among users.\n   Because this metadata name is associated with
        the mailbox, there can\n   (and it's expected that there will) be different
        scripts associated\n   with events for different mailboxes.  Indeed, most
        mailboxes will\n   probably invoke no script at all.\n"
      title: 2.3.1.  Interaction with Metadata
    title: 2.3.  New Functions Defined by IMAP Events in Sieve
  title: 2.  The "IMAP Events in Sieve" Extension
- contents:
  - "3.  Applicable Sieve Actions and Interactions\n   Since some Sieve actions relate
    specifically to the delivery of mail,\n   not all actions and extensions make
    sense when the messages are\n   created by other means or when changes are made
    to data associated\n   with existing messages.  This section describes how actions
    in the\n   base Sieve specification, and those in extensions known at the time\n
    \  of this writing, relate to this specification.\n   In addition to what is specified
    here, interactions noted in the\n   individual specifications apply and must be
    considered.\n"
  - contents:
    - "3.1.  The Implicit Keep\n   For all cases that fall under IMAP events in Sieve,
      the implicit keep\n   means that the message is treated as it would have been
      if no Sieve\n   script were run.  For APPEND and COPY, the message is stored
      into the\n   target mailbox normally.  For flag changes, the message is left
      in\n   the mailbox.  If actions have been taken that change the message,\n   those
      changes are considered transient and MUST NOT be retained for\n   any \"keep\"
      action (because IMAP messages are immutable).  No error is\n   generated, but
      the original message, without the changes, is kept.\n"
    title: 3.1.  The Implicit Keep
  - contents:
    - "3.2.  The \"keep\" Action\n   The \"keep\" action is applicable in all cases
      that fall under IMAP\n   events in Sieve.  Its behavior is as described for
      implicit keep, in\n   Section 3.1.\n"
    title: 3.2.  The "keep" Action
  - contents:
    - "3.3.  The \"fileinto\" Action\n   If the Sieve implementation supports the
      \"fileinto\" action, that\n   action is applicable in all cases that fall under
      IMAP events in\n   Sieve.  If the \"copy\" extension [RFC3894] is available
      and the :copy\n   option is specified, the implicit keep is retained; otherwise,\n
      \  fileinto cancels the implicit keep, as specified in the base Sieve\n   specification.\n
      \  For APPEND and COPY, the message is stored into the fileinto mailbox\n   IN
      ADDITION TO the original target mailbox.  For flag changes, the\n   message
      is COPIED into the fileinto mailbox, without removing the\n   original.  In
      all cases, fileinto always creates a new message,\n   separate from the original.\n
      \  The \"fileinto\" action is not an IMAP APPEND or COPY and therefore\n   does
      not result in a subsequent event (see also the Security\n   Considerations,
      Section 6).\n   If a \"keep\" action is not also in effect, the original message
      is\n   then marked with the \\Deleted flag (see Section 2.2.4).\n"
    title: 3.3.  The "fileinto" Action
  - contents:
    - "3.4.  The \"redirect\" Action\n   The \"redirect\" action is applicable in
      all cases that fall under IMAP\n   events in Sieve.  It causes the message to
      be sent, as specified in\n   the base Sieve specification, to the designated
      address.  If the\n   \"copy\" extension [RFC3894] is available and the :copy
      option is\n   specified, the implicit keep is retained; otherwise, redirect
      cancels\n   the implicit keep, as specified in the base Sieve specification.\n
      \  It's possible that a message processed in this way does not have the\n   information
      necessary to be redirected properly.  It might lack\n   necessary header information,
      and there might not be appropriate\n   information for the MAIL FROM command.
      \ In such cases, the \"redirect\"\n   action uses message submission [RFC6409],
      and it is up to the Sieve\n   engine to supply the missing information.  The
      redirect address is,\n   of course, used for the \"RCPT TO\", and the \"MAIL
      FROM\" SHOULD be set\n   to the address of the owner of the mailbox.  The message
      submission\n   server is allowed, according to the message submission protocol,
      to\n   perform necessary fix-up to the message (see Section 8 of RFC 6409).\n
      \  It can also reject the submission attempt if the message is too\n   ill-formed
      for submission.\n   For APPEND and COPY, the message is stored into the target
      mailbox in\n   addition to being redirected.  For flag changes, the message
      remains\n   in its original mailbox.\n   If a \"keep\" action is not also in
      effect, the original message is\n   then marked with the \\Deleted flag (see
      Section 2.2.4).\n"
    title: 3.4.  The "redirect" Action
  - contents:
    - "3.5.  The \"discard\" Action\n   The \"discard\" action is applicable in all
      cases that fall under IMAP\n   events in Sieve.  For APPEND and COPY, the message
      is first stored\n   into the target mailbox.  If an explicit \"keep\" action
      is also in\n   effect, the \"discard\" action now does nothing.  Otherwise,
      the\n   original message is then marked with the \\Deleted flag (see\n   Section
      2.2.4).\n"
    title: 3.5.  The "discard" Action
  - contents:
    - "3.6.  The \"notify\" Action\n   If the Sieve notify extension [RFC5435] is
      available, the \"notify\"\n   action is applicable in all cases that fall under
      IMAP events in\n   Sieve.  The result is that the requested notification is
      sent and\n   that the message is otherwise handled as it would normally have
      been.\n"
    title: 3.6.  The "notify" Action
  - contents:
    - "3.7.  The \"addheader\" and \"deleteheader\" Actions\n   If the editheader
      extension [RFC5293] is available, it can be used to\n   make transient changes
      to header fields, which aren't saved in place,\n   such as for \"redirect\"
      or \"fileinto\" actions.  Because messages in\n   IMAP mailboxes are immutable,
      such changes are not applicable for the\n   \"keep\" action (explicit or implicit).
      \ See Section 3.1.\n"
    title: 3.7.  The "addheader" and "deleteheader" Actions
  - contents:
    - "3.8.  The \"setflag\", \"deleteflag\", and \"removeflag\" Actions\n   Implementations
      of IMAP events in Sieve MUST also support the\n   imap4flags extension [RFC5232],
      and the actions associated with it\n   are all applicable to any case that falls
      under IMAP events in Sieve.\n   It is worth noting also that the \"hasflag\"
      test that is defined in\n   the imap4flags extension might be particularly useful
      in scripts\n   triggered by flag changes (\"hasflag\" will see the new, changed\n
      \  flags).  The flag changes behave as though a client had made the\n   change.\n
      \  As explained above, in order to avoid script loops, flag changes that\n   are
      made as a result of a script that was itself invoked because of\n   flag changes
      SHOULD NOT result in another script invocation.  In any\n   case, implementations
      MUST take steps to avoid such loops.\n"
    title: 3.8.  The "setflag", "deleteflag", and "removeflag" Actions
  - contents:
    - "3.9.  MIME Part Tests and Replacement\n   If the MIME Part Tests extension
      [RFC5703] is available, all of its\n   functions can be used, but any changes
      made to the message, using the\n   \"replace\" or \"enclose\" action, MUST be
      considered transient and are\n   only applicable with actions such as \"redirect\"
      and \"fileinto\".\n   Because messages in IMAP mailboxes are immutable, such
      changes are\n   not applicable for the \"keep\" action (explicit or implicit).
      \ See\n   Section 3.1.\n"
    title: 3.9.  MIME Part Tests and Replacement
  - contents:
    - "3.10.  spamtest and virustest\n   If the spamtest and virustest extensions
      [RFC5235] are available,\n   they are applicable in all cases that fall under
      IMAP events in\n   Sieve.\n"
    title: 3.10.  spamtest and virustest
  - contents:
    - "3.11.  Inapplicable Actions\n   The following actions and extensions are not
      applicable to any case\n   that falls under IMAP events in Sieve, because they
      are specifically\n   designed to respond to delivery of a new email message.
      \ Their\n   appearance in the \"require\" control or their use in an IMAP event\n
      \  MUST result in an error condition that will terminate the Sieve\n   script:\n
      \     reject [RFC5228]\n      ereject [RFC5429]\n      vacation [RFC5230]\n
      \  Future extensions that are specifically designed to respond to\n   delivery
      of a new email message will likewise not be applicable to\n   this extension.\n"
    title: 3.11.  Inapplicable Actions
  - contents:
    - "3.12.  Future Sieve Actions\n   As noted above, future extensions that are
      specifically designed to\n   respond to delivery of a new email message will
      not be applicable to\n   this extension, because this extension does not involve
      acting at\n   new-message delivery time.\n   In general, future extensions to
      Sieve that define new actions MUST\n   specify the applicability of those actions
      to this specification.\n"
    title: 3.12.  Future Sieve Actions
  title: 3.  Applicable Sieve Actions and Interactions
- contents:
  - '4.  Interaction with Sieve Environment

    '
  - contents:
    - "4.1.  Base Sieve Environment Items: location and phase\n   The Sieve Environment
      extension defines a set of standard environment\n   items (see [RFC5183], Section
      4.1).  Two of those items are affected\n   when the script is invoked through
      an IMAP event.\n   The value of \"location\" is set to \"MS\" -- evaluation
      is being\n   performed by a Message Store.\n   The value of \"phase\" is set
      to \"post\" -- processing is taking place\n   after (or perhaps instead of,
      in the case of APPEND) final delivery.\n"
    title: '4.1.  Base Sieve Environment Items: location and phase'
  - contents:
    - "4.2.  New Sieve Environment Items: imap.user and imap.email\n   In the normal
      case, when Sieve is used in final delivery, there is no\n   identity for the
      \"filer\" -- the user who is creating or changing the\n   message.  In this
      case, there is such an identity, and a Sieve script\n   might want to access
      that identity.\n   Implementations MUST set and make available two new environment\n
      \  items:\n   \"imap.user\" -- the identity (login ID) of the IMAP user that
      caused\n   the action.  This MUST be the empty string if it is accessed during\n
      \  normal (final delivery) Sieve processing.\n   \"imap.email\" -- the primary
      email address of the IMAP user that\n   caused the action (the user identified
      by \"imap.user\").  In some\n   implementations, \"imap.user\" and \"imap.email\"
      might have the same\n   value.  This MUST be the empty string if it is accessed
      during normal\n   (final delivery) Sieve processing.\n"
    title: '4.2.  New Sieve Environment Items: imap.user and imap.email'
  - contents:
    - "4.3.  New Sieve Environment Item: imap.cause\n   Each mailbox uses a single
      script for all the change conditions\n   described in this document (append,
      copy, flag changes).  To support\n   that, the implementation MUST set the Environment
      [RFC5183] item\n   \"imap.cause\", which contains the name of the action that
      caused the\n   script to be invoked.  Its value is one of the following:\n   o
      \ APPEND (for invocations resulting from APPEND commands)\n   o  COPY (for invocations
      resulting from COPY commands)\n   o  FLAG (for invocations resulting from flag
      changes)\n   Future extensions might define new events and, thus, new causes.\n
      \  Such extensions will come with their own capability strings, and the\n   events
      they define will only be presented when their capabilities are\n   requested.
      \ Scripts that do not request those capabilities will not\n   see those events
      and will not encounter the new cause strings.\n"
    title: '4.3.  New Sieve Environment Item: imap.cause'
  - contents:
    - "4.4.  New Sieve Environment Item: imap.mailbox\n   The implementation MUST
      set the Environment [RFC5183] item\n   \"imap.mailbox\" to the name of the mailbox
      that the affected message\n   is in, in the case of existing messages, or is
      targeted to be stored\n   into, in the case of new messages.  The value of this
      item is fixed\n   when the script begins, and, in particular, MUST NOT change
      as a\n   result of any action, such as \"fileinto\".\n"
    title: '4.4.  New Sieve Environment Item: imap.mailbox'
  - contents:
    - "4.5.  New Sieve Environment Item: imap.changedflags\n   If the script was invoked
      because of flag changes to an existing\n   message, the implementation MUST
      set the Environment [RFC5183] item\n   \"imap.changedflags\" to the name(s)
      of the flag(s) that have changed.\n   If the script was not invoked because
      of flag changes, the value of\n   this item MUST be the empty string.  The script
      will not know from\n   this item whether the flags have been set or reset, but
      it can use\n   the \"hasflag\" test to determine the current value.  See example
      2 in\n   Section 5 for an example of how this might be used.\n"
    title: '4.5.  New Sieve Environment Item: imap.changedflags'
  - contents:
    - "4.6.  Interaction with Sieve Tests (Comparisons)\n   Any tests against message
      envelope information, including the\n   \"envelope\" test in the Sieve base
      specification, as well as any such\n   test defined in extensions, are either
      inapplicable or have serious\n   interoperability issues when performed at other
      than final-delivery\n   time.  Therefore, envelope tests MUST NOT be permitted
      in the cases\n   described here, and their use MUST generate a runtime error.\n
      \  This extension does not affect the operation of other tests or\n   comparisons
      in the Sieve base specification.\n"
    title: 4.6.  Interaction with Sieve Tests (Comparisons)
  title: 4.  Interaction with Sieve Environment
- contents:
  - "5.  Examples\n   Example 1:\n   If a new message is added to the \"ActionItems\"
    mailbox, a copy is\n   sent to the address \"actionitems@example.com\".\n     require
    [\"copy\", \"environment\", \"imapsieve\"];\n     if anyof (environment :is \"imap.cause\"
    \"APPEND\",\n               environment :is \"imap.cause\" \"COPY\")  {\n         if
    environment :is \"imap.mailbox\" \"ActionItems\" {\n             redirect :copy
    \"actionitems@example.com\";\n         }\n     }\n   Example 2:\n   If the script
    is called for any message with the \\Flagged flag set\n   (tested through the
    imap4flags extension [RFC5232]) AND this script\n   invocation represents a change
    to that flag, then a notification is\n   sent using the Sieve notify extension
    [RFC5435].  No notification\n   will be sent, though, if we're called with an
    existing message that\n   already had that flag set.\n     require [\"enotify\",
    \"imap4flags\", \"variables\",\n              \"environment\", \"imapsieve\"];\n
    \    if environment :matches \"imap.mailbox\" \"*\" {\n         set \"mailbox\"
    \"${1}\";\n     }\n     if allof (hasflag \"\\\\Flagged\",\n               environment
    :contains \"imap.changedflags\" \"\\\\Flagged\") {\n       notify :message \"Important
    message in ${mailbox}\"\n           \"xmpp:tim@example.com?message;subject=SIEVE\";\n
    \    }\n   Example 3:\n   This shows an example IMAP CAPABILITY response when
    this extension is\n   supported.  The client has done STARTTLS with the server
    and is now\n   inspecting capabilities.  (The untagged CAPABILITY response is
    split\n   here for readability only, but it will be in one response message.)\n
    \    C:  A01 CAPABILITY\n     S:  * CAPABILITY IMAP4rev1 AUTH=PLAIN UIDPLUS LIST-EXTENDED\n
    \          ACL IMAPSIEVE=sieve://sieve.example.com MULTISEARCH\n     S:  A01 OK
    done\n"
  title: 5.  Examples
- contents:
  - "6.  Security Considerations\n   It is possible to introduce script processing
    loops by having a Sieve\n   script that is triggered by flag changes use the actions
    defined in\n   the imap4flags extension [RFC5232].  Implementations MUST take
    steps\n   to prevent script loops.  One way to avoid this problem is that if a\n
    \  script is invoked by flag changes, and that script further changes\n   the
    flags, those flag changes SHOULD NOT trigger a Sieve script\n   invocation.\n
    \  The \"fileinto\" action never results in the invocation of a script.\n   If
    an implementation did invoke a script as the result of a fileinto,\n   as though
    an IMAP APPEND or COPY had been done, script loops could\n   result (mailbox A
    responds to all COPY events by doing \"fileinto B\",\n   and mailbox B responds
    to all COPY events by doing \"fileinto A\").  In\n   general, actions taken as
    a result of the Sieve script are not IMAP\n   events and do not themselves trigger
    Sieve script invocations.\n   It is also possible to introduce loops through the
    \"redirect\" or\n   \"notify\" actions.  See Sieve [RFC5228], Section 10, Sieve
    Notify\n   [RFC5435], Section 8, and the Security Considerations sections of the\n
    \  applicable notification-method documents for loop-prevention\n   information.
    \ This extension does not change any of that advice.\n   This extension introduces
    side effects to IMAP commands that users\n   and script authors might not be aware
    of and that can accidentally be\n   triggered by an operation that the user would
    expect to be innocuous.\n   In particular, certain actions, such as \"redirect\",
    can cause a\n   message (such as a message appended to a mailbox by a user) to
    be\n   sent to the Internet in response to something as simple as a flag\n   change.
    \ For example, a script might cause messages marked for\n   deletion to be sent
    to some off-site archiving service.  If a user\n   appends a draft message to
    a mailbox (perhaps an unencrypted draft\n   message) and then marks it for deletion,
    it might be very surprising\n   to the user that the message is sent off site.
    \ Script authors need\n   to be careful not to create these kinds of surprises,
    especially when\n   creating global scripts.\n   Other security considerations
    are discussed in IMAP [RFC3501] and\n   Sieve [RFC5228], as well as in some of
    the other extension documents.\n"
  title: 6.  Security Considerations
- contents:
  - '7.  IANA Considerations

    '
  - contents:
    - "7.1.  Registration of \"imapsieve\" IMAP Capability\n   IANA has added \"IMAPSIEVE=\"
      to the IMAP 4 Capabilities registry\n   (<http://www.iana.org/assignments/imap4-capabilities>),
      according to\n   the IMAP 4 specification [RFC3501].\n"
    title: 7.1.  Registration of "imapsieve" IMAP Capability
  - contents:
    - "7.2.  Registration of \"imapsieve\" Sieve Extension\n   The following information
      has been added to the Sieve Extensions\n   registry (<http://www.iana.org/assignments/sieve-extensions>),\n
      \  according to the Sieve specification [RFC5228].\n   Capability name: imapsieve\n
      \  Description: Add Sieve processing for IMAP events.\n   RFC number: 6785\n
      \  Contact address: Sieve mailing list <sieve@ietf.org>\n"
    title: 7.2.  Registration of "imapsieve" Sieve Extension
  - contents:
    - "7.3.  Registration of Sieve Environment Items\n   The following subsections
      register items in the Sieve Environment\n   Items registry\n   (<http://www.iana.org/assignments/sieve-environment-items>),\n
      \  according to the Environment extension [RFC5183].\n"
    - contents:
      - "7.3.1.  Registration of Sieve Environment Item: imap.cause\n   Item name:
        imap.cause\n   Description: The name of the action that caused the script
        to be\n      invoked.  Its value is one of the following:\n   o  APPEND (for
        invocations resulting from APPEND commands)\n   o  COPY (for invocations resulting
        from COPY commands)\n   o  FLAG (for invocations resulting from flag changes)\n
        \  RFC number: 6785\n   Contact address: Sieve mailing list <sieve@ietf.org>\n"
      title: '7.3.1.  Registration of Sieve Environment Item: imap.cause'
    - contents:
      - "7.3.2.  Registration of Sieve Environment Item: imap.mailbox\n   Item name:
        imap.mailbox\n   Description: The name of the mailbox that the affected message
        is in,\n      in the case of existing messages, or is targeted to be stored\n
        \     into, in the case of new messages.  The value of this item is\n      fixed
        when the script begins, and, in particular, MUST NOT change\n      as a result
        of any action, such as \"fileinto\".\n   RFC number: 6785\n   Contact address:
        Sieve mailing list <sieve@ietf.org>\n"
      title: '7.3.2.  Registration of Sieve Environment Item: imap.mailbox'
    - contents:
      - "7.3.3.  Registration of Sieve Environment Item: imap.changedflags\n   Item
        name: imap.changedflags\n   Description: If the script was invoked because
        of flag changes to an\n      existing message, this contains the name(s) of
        the flag(s) that\n      have changed.  Otherwise, the value of this item MUST
        be the\n      empty string.\n   RFC number: 6785\n   Contact address: Sieve
        mailing list <sieve@ietf.org>\n"
      title: '7.3.3.  Registration of Sieve Environment Item: imap.changedflags'
    - contents:
      - "7.3.4.  Registration of Sieve Environment Item: imap.user\n   Item name:
        imap.user\n   Description: The identity (IMAP login ID) of the IMAP user that\n
        \     caused the action.\n   RFC number: 6785\n   Contact address: Sieve mailing
        list <sieve@ietf.org>\n"
      title: '7.3.4.  Registration of Sieve Environment Item: imap.user'
    - contents:
      - "7.3.5.  Registration of Sieve Environment Item: imap.email\n   Item name:
        imap.email\n   Description: The primary email address of the IMAP user that\n
        \     caused the action (the user identified by \"imap.user\").\n   RFC number:
        6785\n   Contact address: Sieve mailing list <sieve@ietf.org>\n"
      title: '7.3.5.  Registration of Sieve Environment Item: imap.email'
    title: 7.3.  Registration of Sieve Environment Items
  - contents:
    - "7.4.  Registration of IMAP METADATA Mailbox Entry Name\n   The following information
      has been added to the IMAP METADATA Mailbox\n   Entry Registry (<http://www.iana.org/assignments/imap-metadata>),\n
      \  according to the METADATA extension [RFC5464].\n   Type: Mailbox\n   Name:
      /shared/imapsieve/script\n   Description: This entry name is used to define
      mailbox metadata\n      associated with IMAP events in Sieve for the associated
      mailbox.\n      Specifically, this specifies the Sieve script that will be invoked\n
      \     when IMAP events occur on the specified mailbox.\n   Content-type: text/plain;
      charset=utf-8\n   RFC number: 6785\n   Contact address: Sieve mailing list <sieve@ietf.org>\n"
    title: 7.4.  Registration of IMAP METADATA Mailbox Entry Name
  - contents:
    - "7.5.  Registration of IMAP METADATA Server Entry Name\n   The following information
      has been added to the IMAP METADATA Server\n   Entry Registry (<http://www.iana.org/assignments/imap-metadata>),\n
      \  according to the METADATA extension [RFC5464].\n   Type: Server\n   Name:
      /shared/imapsieve/script\n   Description: This entry name is used to define
      metadata associated\n      globally with IMAP events in Sieve for the associated
      server.\n      Specifically, this specifies the Sieve script that will be invoked\n
      \     when IMAP events occur on any mailbox in the server that does not\n      have
      its own mailbox-level /shared/imapsieve/script entry.\n   Content-type: text/plain;
      charset=utf-8\n   RFC number: 6785\n   Contact address: Sieve mailing list <sieve@ietf.org>\n"
    title: 7.5.  Registration of IMAP METADATA Server Entry Name
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3501]  Crispin, M., \"INTERNET MESSAGE ACCESS PROTOCOL -\n              VERSION
      4rev1\", RFC 3501, March 2003.\n   [RFC3502]  Crispin, M., \"Internet Message
      Access Protocol (IMAP) -\n              MULTIAPPEND Extension\", RFC 3502, March
      2003.\n   [RFC3894]  Degener, J., \"Sieve Extension: Copying Without Side\n
      \             Effects\", RFC 3894, October 2004.\n   [RFC5183]  Freed, N., \"Sieve
      Email Filtering: Environment Extension\",\n              RFC 5183, May 2008.\n
      \  [RFC5228]  Guenther, P. and T. Showalter, \"Sieve: An Email Filtering\n              Language\",
      RFC 5228, January 2008.\n   [RFC5232]  Melnikov, A., \"Sieve Email Filtering:
      Imap4flags\n              Extension\", RFC 5232, January 2008.\n   [RFC5464]
      \ Daboo, C., \"The IMAP METADATA Extension\", RFC 5464,\n              February
      2009.\n   [RFC5804]  Melnikov, A. and T. Martin, \"A Protocol for Remotely\n
      \             Managing Sieve Scripts\", RFC 5804, July 2010.\n   [RFC6409]  Gellens,
      R. and J. Klensin, \"Message Submission for Mail\",\n              STD 72, RFC
      6409, November 2011.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [RFC4315]  Crispin, M., \"Internet Message
      Access Protocol (IMAP) -\n              UIDPLUS extension\", RFC 4315, December
      2005.\n   [RFC5230]  Showalter, T. and N. Freed, \"Sieve Email Filtering:\n
      \             Vacation Extension\", RFC 5230, January 2008.\n   [RFC5235]  Daboo,
      C., \"Sieve Email Filtering: Spamtest and Virustest\n              Extensions\",
      RFC 5235, January 2008.\n   [RFC5293]  Degener, J. and P. Guenther, \"Sieve
      Email Filtering:\n              Editheader Extension\", RFC 5293, August 2008.\n
      \  [RFC5429]  Stone, A., \"Sieve Email Filtering: Reject and Extended\n              Reject
      Extensions\", RFC 5429, March 2009.\n   [RFC5435]  Melnikov, A., Leiba, B.,
      Segmuller, W., and T. Martin,\n              \"Sieve Email Filtering: Extension
      for Notifications\",\n              RFC 5435, January 2009.\n   [RFC5703]  Hansen,
      T. and C. Daboo, \"Sieve Email Filtering: MIME Part\n              Tests, Iteration,
      Extraction, Replacement, and Enclosure\",\n              RFC 5703, October 2009.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Author's Address\n   Barry Leiba\n   Huawei Technologies\n   Phone: +1 646 827
    0648\n   EMail: barryleiba@computer.org\n   URI:   http://internetmessagingtechnology.org/\n"
  title: Author's Address
