- contents:
  - ''
  title: __initial_text__
- contents:
  - 'Allowing Inheritable NFSv4 Access Control Entries to Override the Umask

    '
  title: Allowing Inheritable NFSv4 Access Control Entries to Override the Umask
- contents:
  - "Abstract\n   In many environments, inheritable NFSv4 Access Control Entries (ACEs)\n
    \  can be rendered ineffective by the application of the per-process\n   file
    mode creation mask (umask).  This can be addressed by\n   transmitting the umask
    and create mode as separate pieces of data,\n   allowing the server to make more
    intelligent decisions about the\n   permissions to set on new files.  This document
    proposes a protocol\n   extension to accomplish that.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8275.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2017 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Problem Statement . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  Conventions Used in This Document . . . . . . . . . . .
    . . .   3\n   3.  Protocol Extension Considerations . . . . . . . . . . . . .
    .   3\n   4.  XDR Extraction  . . . . . . . . . . . . . . . . . . . . . . .   3\n
    \  5.  The mode_umask Attribute  . . . . . . . . . . . . . . . . . .   4\n   6.
    \ Security Considerations . . . . . . . . . . . . . . . . . . .   5\n   7.  IANA
    Considerations . . . . . . . . . . . . . . . . . . . . .   5\n   8.  References
    \ . . . . . . . . . . . . . . . . . . . . . . . . .   5\n     8.1.  Normative
    References  . . . . . . . . . . . . . . . . . .   5\n     8.2.  Informative References
    \ . . . . . . . . . . . . . . . . .   6\n   Acknowledgments . . . . . . . . .
    . . . . . . . . . . . . . . . .   7\n   Authors' Addresses  . . . . . . . . .
    . . . . . . . . . . . . . .   7\n"
  title: Table of Contents
- contents:
  - "1.  Problem Statement\n   On Unix-like systems, each process is associated with
    a file mode\n   creation mask (umask).  The umask specifies which permissions
    must be\n   turned off when creating new file system objects.\n   When applying
    the mode, Section 6.4.1.1 of [RFC7530] recommends that\n   servers SHOULD restrict
    permissions granted to any user or group\n   named in the Access Control List
    (ACL) to be no more than the\n   permissions granted by the MODE4_RGRP, MODE4_WGRP,
    and MODE4_XGRP\n   bits.  Servers aiming to provide clients with Unix-like chmod\n
    \  behavior may also be motivated by the same requirements in [SUSv4].\n   (See
    the discussion of additional and alternate access control\n   mechanisms in \"File
    Permissions\", Section 4.4 of [SUSv4].)\n   On many existing installations, all
    ordinary users use the same\n   effective group ID by default.  To prevent granting
    all users full\n   access to each other's files, such installations usually default
    to a\n   umask with very restrictive permissions.  As a result, inherited ACL\n
    \  entries (inheritable ACEs) describing the permissions to be granted\n   to
    named users and groups are often ignored.  This makes inheritable\n   ACEs useless
    in some common cases.\n   Linux solves this problem on local file systems by ignoring
    the umask\n   whenever a newly created file inherits ACEs from its parent; see\n
    \  [LinuxACL].\n   The same solution should work for NFS.  However, the NFSv4
    protocol\n   does not currently give the client a way to transmit the umask of
    the\n   process opening a file.  And clients have no way of atomically\n   checking
    for inheritable permissions and applying the umask only when\n   necessary.  As
    a result, the server receives an OPEN with a mode\n   attribute that already has
    the umask applied.\n   This document solves the problem by defining a new attribute
    that\n   allows the client to transmit umask and the mode specified at file\n
    \  creation separately, allowing the client to ignore the umask in the\n   presence
    of inheritable ACEs.  At least in the Linux case, this\n   allows NFSv4 to provide
    the same semantics available using local\n   access.\n"
  title: 1.  Problem Statement
- contents:
  - "2.  Conventions Used in This Document\n   The key words \"MUST\", \"MUST NOT\",
    \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
    \"NOT RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be
    interpreted as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when,
    they appear in all\n   capitals, as shown here.\n"
  title: 2.  Conventions Used in This Document
- contents:
  - "3.  Protocol Extension Considerations\n   This document presents an extension
    to minor version 2 of the NFSv4\n   protocol as described in [RFC8178].  It describes
    a new OPTIONAL\n   feature.  NFSv4.2 servers and clients implemented without knowledge\n
    \  of this extension will continue to interoperate with clients and\n   servers
    that are aware of the extension (whether or not they support\n   it).\n   Note
    that [RFC7862] does not define NFSv4.2 as non-extensible, so\n   [RFC8178] treats
    it as an extensible minor version.  This Standards\n   Track RFC extends NFSv4.2
    but does not update [RFC7862] or [RFC7863].\n"
  title: 3.  Protocol Extension Considerations
- contents:
  - "4.  XDR Extraction\n   The additional lines of External Data Representation (XDR)
    [RFC4506]\n   description embedded in this document can be extracted by feeding\n
    \  this document into the following shell script:\n   <CODE BEGINS>\n   #!/bin/sh\n
    \  grep '^ *///' $* | sed 's?^ */// ??' | sed 's?^ *///$??'\n   <CODE ENDS>\n
    \  That is, if the above script is stored in a file called \"extract.sh\",\n   and
    this document is in a file called \"umask.txt\", then the reader\n   can do:\n
    \  sh extract.sh < umask.txt > umask.x\n   The effect of the script is to remove
    leading white space from each\n   line, plus a sentinel sequence of \"///\".\n
    \  Once that extraction is done, these added lines need to be inserted\n   into
    an appropriate base XDR of the generated XDR from [RFC7863]\n   together with
    XDR from any additional extensions to be recognized by\n   the implementation.
    \ This will result in a ready-to-compile XDR file.\n"
  title: 4.  XDR Extraction
- contents:
  - "5.  The mode_umask Attribute\n   <CODE BEGINS>\n   ///   struct mode_umask4 {\n
    \  ///     mode4  mu_mode;\n   ///     mode4  mu_umask;\n   ///   };\n   ///\n
    \  ///   %/*\n   ///   % * New For UMASK\n   ///   % */\n   ///   const FATTR4_MODE_UMASK
    \        = 81;\n   <CODE ENDS>\n           +------------+----+-------------+-----+------------+\n
    \          | Name       | Id | Data Type   | Acc | Defined in |\n           +------------+----+-------------+-----+------------+\n
    \          | mode_umask | 81 | mode_umask4 | W   | Section 5  |\n           +------------+----+-------------+-----+------------+\n
    \                                 Table 1\n   The NFSv4.2 mode_umask attribute
    is based on the umask and on the\n   mode bits specified at open time, which together
    determine the mode\n   of a newly created UNIX file.  Only the nine low-order
    mode4 bits of\n   mu_umask are defined.  A server MUST return NFS4ERR_INVAL if
    bits\n   other than those nine are set.\n   The mode_umask attribute is only meaningful
    for operations that\n   create objects (CREATE and OPEN); in other operations
    that take\n   fattr4 arguments, the server MUST reject it with NFS4ERR_INVAL.\n
    \  The server MUST return NFS4ERR_INVAL if the client attempts to set\n   both
    mode and mode_umask in the same operation.\n   When the server supports the mode_umask
    attribute, a client creating\n   a file should use mode_umask in place of mode,
    with mu_mode set to\n   the unmodified mode provided by the user and mu_umask
    set to the\n   umask of the requesting process.\n   The server then uses mode_umask
    as follows:\n   o  On a server that supports ACL attributes, if an object inherits\n
    \     any ACEs from its parent directory, mu_mode SHOULD be used and\n      mu_umask
    ignored.\n   o  Otherwise, mu_umask MUST be used to limit the mode: all bits in\n
    \     the mode that are set in the unmask MUST be turned off; the mode\n      assigned
    to the new object becomes (mu_mode & ~mu_umask) instead.\n"
  title: 5.  The mode_umask Attribute
- contents:
  - "6.  Security Considerations\n   The mode_umask attribute shifts to the server
    the decision about when\n   to apply the umask.  Because the server MUST apply
    the umask if there\n   are no inheritable permissions, the traditional semantics
    are\n   preserved in the absence of a permission inheritance mechanism.  The\n
    \  only relaxation of permissions comes in the case in which servers\n   follow
    the recommendation that they ignore the umask in the presence\n   of inheritable
    permissions.\n   The practice of ignoring the umask when there are inheritable\n
    \  permissions in the form of a \"POSIX\" default ACL is of long standing\n   and
    has not given rise to security issues.  The \"POSIX\" default ACL\n   mechanism
    and the mechanism for permission inheritance in NFSv4 are\n   equivalent from
    a security perspective.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   This document does not require any IANA actions.\n"
  title: 7.  IANA Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC4506]  Eisler, M., Ed., \"XDR: External Data Representation\n              Standard\",
      STD 67, RFC 4506, DOI 10.17487/RFC4506, May\n              2006, <https://www.rfc-editor.org/info/rfc4506>.\n
      \  [RFC7530]  Haynes, T., Ed. and D. Noveck, Ed., \"Network File System\n              (NFS)
      Version 4 Protocol\", RFC 7530, DOI 10.17487/RFC7530,\n              March 2015,
      <https://www.rfc-editor.org/info/rfc7530>.\n   [RFC7862]  Haynes, T., \"Network
      File System (NFS) Version 4 Minor\n              Version 2 Protocol\", RFC 7862,
      DOI 10.17487/RFC7862,\n              November 2016, <https://www.rfc-editor.org/info/rfc7862>.\n
      \  [RFC7863]  Haynes, T., \"Network File System (NFS) Version 4 Minor\n              Version
      2 External Data Representation Standard (XDR)\n              Description\",
      RFC 7863, DOI 10.17487/RFC7863, November\n              2016, <https://www.rfc-editor.org/info/rfc7863>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RFC8178]  Noveck, D., \"Rules
      for NFSv4 Extensions and Minor\n              Versions\", RFC 8178, DOI 10.17487/RFC8178,
      July 2017,\n              <https://www.rfc-editor.org/info/rfc8178>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [LinuxACL] Gruenbacher, A., \"ACL(5) - Access
      Control Lists\", Linux\n              man pages online, ACL(5), March 2002,\n
      \             <http://kernel.org/doc/man-pages/online/pages/man5/\n              acl.5.html>.\n
      \  [SUSv4]    The Open Group, \"Single UNIX Specification, Version 4\",\n              2013.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Acknowledgments\n   Thanks to Trond Myklebust and Dave Noveck for their review
    and the\n   suggestion to define this as a (mode, umask) pair rather than just\n
    \  umask.  Thanks to Warren Kumari, Adam Roach, Spencer Dawkins, Mike\n   Kupfer,
    and Thomas Haynes for their review and to Thomas Haynes for\n   help with XDR.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   J. Bruce Fields\n   Red Hat, Inc.\n   Email: bfields@redhat.com\n
    \  Andreas Gruenbacher\n   Red Hat, Inc.\n   Email: agruenba@redhat.com\n"
  title: Authors' Addresses
