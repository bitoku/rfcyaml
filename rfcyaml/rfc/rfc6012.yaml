- contents:
  - ' Datagram Transport Layer Security (DTLS) Transport Mapping for Syslog

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the transport of syslog messages over the\n
    \  Datagram Transport Layer Security (DTLS) protocol.  It provides a\n   secure
    transport for syslog messages in cases where a connectionless\n   transport is
    desired.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6012.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n   2.  Terminology  . . . . . . . . . . . . . . . . . . . . .
    . . . .  3\n   3.  Security Requirements for Syslog . . . . . . . . . . . . .
    . .  4\n   4.  Using DTLS to Secure Syslog  . . . . . . . . . . . . . . . . .
    \ 4\n   5.  Protocol Elements  . . . . . . . . . . . . . . . . . . . . . .  5\n
    \    5.1.  Transport  . . . . . . . . . . . . . . . . . . . . . . . .  5\n     5.2.
    \ Port and Service Code Assignment . . . . . . . . . . . . .  5\n     5.3.  Initiation
    . . . . . . . . . . . . . . . . . . . . . . . .  5\n       5.3.1.  Certificate-Based
    Authentication . . . . . . . . . . .  6\n     5.4.  Sending Data . . . . . . .
    . . . . . . . . . . . . . . . .  6\n       5.4.1.  Message Size . . . . . . .
    . . . . . . . . . . . . . .  7\n     5.5.  Closure  . . . . . . . . . . . . .
    . . . . . . . . . . . .  7\n   6.  Congestion Control . . . . . . . . . . . .
    . . . . . . . . . .  8\n   7.  Security Policies  . . . . . . . . . . . . . .
    . . . . . . . .  8\n   8.  IANA Considerations  . . . . . . . . . . . . . . .
    . . . . . .  8\n   9.  Security Considerations  . . . . . . . . . . . . . . .
    . . . .  9\n     9.1.  DTLS Renegotiation . . . . . . . . . . . . . . . . . .
    . .  9\n     9.2.  Message Loss . . . . . . . . . . . . . . . . . . . . . . .
    \ 9\n     9.3.  Private Key Generation . . . . . . . . . . . . . . . . . .  9\n
    \    9.4.  Trust Anchor Installation and Storage  . . . . . . . . . .  9\n   10.
    Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 10\n   11. References
    . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n     11.1. Normative References
    . . . . . . . . . . . . . . . . . . . 10\n     11.2. Informative References .
    . . . . . . . . . . . . . . . . . 11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The syslog protocol [RFC5424] is designed to run over different\n
    \  transports for different environments.  This document defines the\n   transport
    of syslog messages over the Datagram Transport Layer\n   Security (DTLS) protocol
    [RFC4347].\n   The Datagram Transport Layer Security (DTLS) protocol [RFC4347]
    is\n   designed to meet the requirements of applications that need secure\n   datagram
    transport.  DTLS has been mapped onto different transports,\n   including UDP
    [RFC0768] and the Datagram Congestion Control Protocol\n   (DCCP) [RFC4340].  This
    memo defines both options, namely syslog over\n   DTLS over UDP, and syslog over
    DTLS over DCCP.\n"
  title: 1.  Introduction
- contents:
  - "2.  Terminology\n   The following definitions from [RFC5424] are used in this
    document:\n   o  An \"originator\" generates syslog content to be carried in a\n
    \     message.\n   o  A \"collector\" gathers syslog content for further analysis.\n
    \  o  A \"relay\" forwards messages, accepting messages from originators\n      or
    other relays, and sending them to collectors or other relays.\n   o  A \"transport
    sender\" passes syslog messages to a specific\n      transport protocol.\n   o
    \ A \"transport receiver\" takes syslog messages from a specific\n      transport
    protocol.\n   This document adds the following definitions:\n   o  A \"DTLS client\"
    is an application that can initiate a DTLS Client\n      Hello to a server.\n
    \  o  A \"DTLS server\" is an application that can receive a DTLS Client\n      Hello
    from a client and reply with a Server Hello.\n   The key words \"MUST\", \"MUST
    NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\",
    \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted
    as described in [RFC2119].\n"
  title: 2.  Terminology
- contents:
  - "3.  Security Requirements for Syslog\n   The security requirements for the transport
    of syslog messages are\n   discussed in Section 2 of [RFC5425].  These also apply
    to this\n   specification.\n   The following secondary threat is also considered
    in this document:\n   o  Denial of service is discussed in [RFC5424], which states
    that an\n      attacker may send more messages to a transport receiver than the\n
    \     transport receiver could handle.  When using a secure transport\n      protocol
    handshake, an attacker may use a spoofed IP source to\n      engage the server
    in a cryptographic handshake to deliberately\n      consume the server's resources.\n"
  title: 3.  Security Requirements for Syslog
- contents:
  - "4.  Using DTLS to Secure Syslog\n   DTLS can be used as a secure transport to
    counter all the primary\n   threats to syslog described in [RFC5425]:\n   o  Confidentiality
    to counter disclosure of the message contents.\n   o  Integrity checking to counter
    modifications to a message on a hop-\n      by-hop basis.\n   o  Server or mutual
    authentication to counter masquerade.\n   In addition, DTLS also provides:\n   o
    \ A cookie exchange mechanism during handshake to counter Denial of\n      Service
    attacks.\n   o  A sequence number in the header to counter replay attacks.\n   Note:
    This secure transport (i.e., DTLS) only secures syslog\n   transport in a hop-by-hop
    manner, and is not concerned with the\n   contents of syslog messages.  In particular,
    the authenticated\n   identity of the transport sender (e.g., subject name in
    the\n   certificate) is not necessarily related to the HOSTNAME field of the\n
    \  syslog message.  When authentication of syslog message origin is\n   required,
    [RFC5848] can be used.\n"
  title: 4.  Using DTLS to Secure Syslog
- contents:
  - '5.  Protocol Elements

    '
  - contents:
    - "5.1.  Transport\n   DTLS can run over multiple transports.  Implementations
      of this\n   specification MUST support DTLS over UDP and SHOULD support DTLS
      over\n   DCCP [RFC5238].  Transports such as UDP or DCCP do not provide\n   session
      multiplexing and session demultiplexing.  In such cases, the\n   application
      implementer provides this functionality by mapping a\n   unique combination
      of the remote address, remote port number, local\n   address, and local port
      number to a session.\n   Each syslog message is delivered by the DTLS record
      protocol, which\n   assigns a sequence number to each DTLS record.  Although
      the DTLS\n   implementer may adopt a queue mechanism to resolve reordering,
      it may\n   not assure that all the messages are delivered in order when mapping\n
      \  on the UDP transport.\n   When DTLS runs over an unreliable transport, such
      as UDP, reliability\n   is not provided.  With DTLS, an originator or relay
      may not realize\n   that a collector has gone down or lost its DTLS connection
      state, so\n   messages may be lost.\n   Syslog over DTLS over TCP MUST NOT be
      used.  If a secure transport is\n   required with TCP, then the appropriate
      security mechanism is syslog\n   over Transport Layer Security (TLS) as described
      in [RFC5425].\n"
    title: 5.1.  Transport
  - contents:
    - "5.2.  Port and Service Code Assignment\n   A syslog transport sender is always
      a DTLS client, and a transport\n   receiver is always a DTLS server.\n   The
      UDP and DCCP port 6514 has been allocated as the default port for\n   syslog
      over DTLS as defined in this document.  The service code SYLG\n   (1398361159)
      has been assigned to syslog.\n"
    title: 5.2.  Port and Service Code Assignment
  - contents:
    - "5.3.  Initiation\n   The transport sender initiates a DTLS connection by sending
      a DTLS\n   Client Hello to the transport receiver.  Implementations MUST support\n
      \  the denial of service countermeasures defined by DTLS.  When these\n   countermeasures
      are used, the transport receiver responds with a DTLS\n   Hello Verify Request
      containing a cookie.  The transport sender\n   responds with a DTLS Client Hello
      containing the received cookie,\n   which initiates the DTLS handshake.  The
      transport sender MUST NOT\n   send any syslog messages before the DTLS handshake
      has successfully\n   completed.\n   Implementations MUST support DTLS 1.0 [RFC4347]
      and MUST support the\n   mandatory to implement cipher suite, which is\n   TLS_RSA_WITH_AES_128_CBC_SHA
      as specified in [RFC5246].  If\n   additional cipher suites are supported, then
      implementations MUST NOT\n   negotiate a cipher suite that employs NULL integrity
      or\n   authentication algorithms.\n   Where privacy is REQUIRED, then implementations
      must either negotiate\n   a cipher suite that employs a non-NULL encryption
      algorithm or else\n   achieve privacy by other means, such as a physically secured
      network.\n   However, as [RFC5424], Section 8, points out, \"In most cases,
      passing\n   clear-text messages is a benefit to the operations staff if they
      are\n   sniffing the packets from the wire\", and so where privacy is not a\n
      \  requirement, then it is advantageous to use a NULL encryption\n   algorithm.\n"
    - contents:
      - "5.3.1.  Certificate-Based Authentication\n   The mandatory to implement cipher
        suites for DTLS use certificates\n   [RFC5280] to authenticate peers.  Both
        the syslog transport sender\n   (DTLS client) and the syslog transport receiver
        (DTLS server) MUST\n   implement certificate-based authentication.  This consists
        of\n   validating the certificate and verifying that the peer has the\n   corresponding
        private key.  The latter part is performed by DTLS.  To\n   ensure interoperability
        between clients and servers, the methods for\n   certificate validation defined
        in Sections 4.2.1 and 4.2.2 of\n   [RFC5425] SHALL be implemented.\n   Both
        transport receiver and transport sender implementations MUST\n   provide means
        to generate a key pair and self-signed certificate in\n   case a key pair
        and certificate are not available through another\n   mechanism.\n   The transport
        receiver and transport sender SHOULD provide mechanisms\n   to record the
        certificate or certificate fingerprint used by the\n   remote endpoint for
        the purpose of correlating an identity with the\n   sent or received data.\n"
      title: 5.3.1.  Certificate-Based Authentication
    title: 5.3.  Initiation
  - contents:
    - "5.4.  Sending Data\n   All syslog messages MUST be sent as DTLS \"application
      data\".  It is\n   possible that multiple syslog messages be contained in one
      DTLS\n   record, or that a syslog message be transferred in multiple DTLS\n
      \  records.  The application data is defined with the following ABNF\n   [RFC5234]
      expression:\n      APPLICATION-DATA = 1*SYSLOG-FRAME\n      SYSLOG-FRAME = MSG-LEN
      SP SYSLOG-MSG\n      MSG-LEN = NONZERO-DIGIT *DIGIT\n      SP = %d32\n      NONZERO-DIGIT
      = %d49-57\n      DIGIT = %d48 / NONZERO-DIGIT\n   SYSLOG-MSG is defined in the
      syslog [RFC5424] protocol.\n"
    - contents:
      - "5.4.1.  Message Size\n   The message length is the octet count of the SYSLOG-MSG
        in the\n   SYSLOG-FRAME.  A transport receiver MUST use the message length
        to\n   delimit a syslog message.  There is no upper limit for a message\n
        \  length per se.  As stated in [RFC4347], a DTLS record MUST NOT span\n   multiple
        datagrams.  When mapping onto different transports, DTLS has\n   different
        record size limitations.  For UDP, see Section 3.2 of\n   [RFC5426].  For
        DCCP, the application implementer SHOULD determine\n   the maximum record
        size allowed by the DTLS protocol running over\n   DCCP, as specified in [RFC4340].
        \ The message size SHOULD NOT exceed\n   the DTLS maximum record size limitation
        of 2^14 bytes.  To be\n   consistent with [RFC5425], in establishing a baseline
        for\n   interoperability, this specification requires that a transport\n   receiver
        MUST be able to process messages with a length up to and\n   including 2048
        octets.  Transport receivers SHOULD be able to process\n   messages with lengths
        up to and including 8192 octets.\n   See Appendix A.2 of [RFC5424] for implementation
        guidance on message\n   length, including fragmentation.\n"
      title: 5.4.1.  Message Size
    title: 5.4.  Sending Data
  - contents:
    - "5.5.  Closure\n   A transport sender MUST close the associated DTLS connection
      if the\n   connection is not expected to deliver any syslog messages later.
      \ It\n   MUST send a DTLS close_notify alert before closing the connection.
      \ A\n   transport sender (DTLS client) MAY choose to not wait for the\n   transport
      receiver's close_notify alert and simply close the DTLS\n   connection.  Once
      the transport receiver gets a close_notify from the\n   transport sender, it
      MUST reply with a close_notify.\n   When no data is received from a DTLS connection
      for a long time\n   (where the application decides what \"long\" means), a transport\n
      \  receiver MAY close the connection.  The transport receiver (DTLS\n   server)
      MUST attempt to initiate an exchange of close_notify alerts\n   with the transport
      sender before closing the connection.  Transport\n   receivers that are unprepared
      to receive any more data MAY close the\n   connection after sending the close_notify
      alert.\n   Although closure alerts are a component of TLS and so of DTLS, they,\n
      \  like all alerts, are not retransmitted by DTLS and so may be lost\n   over
      an unreliable network.\n"
    title: 5.5.  Closure
  title: 5.  Protocol Elements
- contents:
  - "6.  Congestion Control\n   Because syslog can generate unlimited amounts of data,
    transferring\n   this data over UDP is generally problematic, because UDP lacks\n
    \  congestion control mechanisms.  Congestion control mechanisms that\n   respond
    to congestion by reducing traffic rates and establishing a\n   degree of fairness
    between flows that share the same path are vital\n   to the stable operation of
    the Internet (see [RFC2914] and\n   [RFC5405]).\n   DCCP has congestion control.
    \ If DCCP is available, syslog over DTLS\n   over DCCP is RECOMMENDED in preference
    to syslog over DTLS over UDP.\n   Implementations of syslog over DTLS over DCCP
    MUST support Congestion\n   Control Identifier (CCID) 3 and SHOULD support CCID
    2 to ensure\n   interoperability.\n   The congestion control considerations from
    Section 4.3 of [RFC5426]\n   also apply to syslog over DTLS over UDP.\n"
  title: 6.  Congestion Control
- contents:
  - "7.  Security Policies\n   Syslog transport over DTLS has been designed to minimize
    the security\n   and operational differences for environments where both syslog
    over\n   TLS [RFC5425] and syslog over DTLS are supported.  The security\n   policies
    for syslog over DTLS are the same as those described in\n   [RFC5425], and all
    the normative requirements of Section 5 of\n   [RFC5425] apply.\n"
  title: 7.  Security Policies
- contents:
  - "8.  IANA Considerations\n   IANA has assigned a registered UDP and DCCP port
    number for syslog\n   over DTLS.  The values are the same as for syslog over TLS.
    \ That is,\n   the registry has been updated as follows:\n      syslog-tls    6514/udp
    \   syslog over DTLS [RFC6012]\n      syslog-tls    6514/dccp   syslog over DTLS
    [RFC6012]\n   IANA has assigned the service code SYLG to syslog for use with DCCP.\n
    \  The allocation in the Service Code subregistry of the Datagram\n   Congestion
    Control Protocol (DCCP) Parameters registry is as follows:\n      1398361159    SYLG
    \   Syslog Protocol    [RFC6012]\n"
  title: 8.  IANA Considerations
- contents:
  - "9.  Security Considerations\n   The security considerations in [RFC4347], [RFC5246],
    [RFC5425], and\n   [RFC5280] apply to this document.\n"
  - contents:
    - "9.1.  DTLS Renegotiation\n   TLS and DTLS renegotiation may be vulnerable to
      attacks described in\n   [RFC5746].  Although RFC 5746 provides a fix for some
      of the issues,\n   renegotiation can still cause problems for applications since\n
      \  connection security parameters can change without the application\n   knowing
      it.  Therefore it is RECOMMENDED that renegotiation be\n   disabled for syslog
      over DTLS.  If renegotiation is allowed, then the\n   specification in RFC 5746
      MUST be followed, and the implementation\n   MUST make sure that the connection
      still has adequate security and\n   that any identities extracted from client
      and server certificates do\n   not change during renegotiation.\n"
    title: 9.1.  DTLS Renegotiation
  - contents:
    - "9.2.  Message Loss\n   The transports described in this document are unreliable.
      \ It is\n   possible for messages to be lost or removed by an attacker without\n
      \  the knowledge of the receiver.  [RFC5424] notes that implementers who\n   wish
      a lossless stream should be using tls/tcp as their transport.\n   In addition,
      the use of signed syslog messages [RFC5848] can also\n   provide an indication
      of message loss.\n"
    title: 9.2.  Message Loss
  - contents:
    - "9.3.  Private Key Generation\n   Transport receiver and transport sender implementations
      often\n   generate their own key pairs.  An inadequate random number generator\n
      \  (RNG) or an inadequate pseudo-random number generator (PRNG) to\n   generate
      these keys can result in little or no security.  See\n   [RFC4086] for random
      number generation guidance.\n"
    title: 9.3.  Private Key Generation
  - contents:
    - "9.4.  Trust Anchor Installation and Storage\n   Trust anchor installation and
      storage is critical.  Transmission of a\n   trust anchor, especially self-signed
      certificates used as trust\n   anchors, from transport receiver to transport
      sender for installation\n   requires one or more out-of-band steps.  Care must
      be taken to ensure\n   the installed trust anchor is in fact the correct trust
      anchor.  The\n   fingerprint mechanism mentioned in Section 5.3.1 can be used
      by the\n   transport sender to ensure the transport receiver's self-signed\n
      \  certificate is properly installed.  Trust anchor information must be\n   securely
      stored.  Changes to trust anchor information can cause\n   acceptance of certificates
      that should be rejected.\n"
    title: 9.4.  Trust Anchor Installation and Storage
  title: 9.  Security Considerations
- contents:
  - "10.  Acknowledgements\n   The authors would like to thank Wes Hardaker for his
    review of this\n   proposal and for contributing his valuable suggestions on the
    use of\n   DTLS.  Thanks also to Pasi Eronen, David Harrington, Chris Lonvick,\n
    \  Eliot Lear, Anton Okmyanskiy, Juergen Schoenwaelder, Richard\n   Graveman,
    the members of the syslog working group, and the members of\n   the IESG for their
    review, comments, and suggestions.\n"
  title: 10.  Acknowledgements
- contents:
  - '11.  References

    '
  - contents:
    - "11.1.  Normative References\n   [RFC0768]  Postel, J., \"User Datagram Protocol\",
      STD 6, RFC 768,\n              August 1980.\n   [RFC2119]  Bradner, S., \"Key
      words for use in RFCs to Indicate\n              Requirement Levels\", BCP 14,
      RFC 2119, March 1997.\n   [RFC4340]  Kohler, E., Handley, M., and S. Floyd,
      \"Datagram\n              Congestion Control Protocol (DCCP)\", RFC 4340, March
      2006.\n   [RFC4347]  Rescorla, E. and N. Modadugu, \"Datagram Transport Layer\n
      \             Security\", RFC 4347, April 2006.\n   [RFC5234]  Crocker, D. and
      P. Overell, \"Augmented BNF for Syntax\n              Specifications: ABNF\",
      STD 68, RFC 5234, January 2008.\n   [RFC5238]  Phelan, T., \"Datagram Transport
      Layer Security (DTLS) over\n              the Datagram Congestion Control Protocol
      (DCCP)\",\n              RFC 5238, May 2008.\n   [RFC5246]  Dierks, T. and E.
      Rescorla, \"The Transport Layer Security\n              (TLS) Protocol Version
      1.2\", RFC 5246, August 2008.\n   [RFC5280]  Cooper, D., Santesson, S., Farrell,
      S., Boeyen, S.,\n              Housley, R., and W. Polk, \"Internet X.509 Public
      Key\n              Infrastructure Certificate and Certificate Revocation List\n
      \             (CRL) Profile\", RFC 5280, May 2008.\n   [RFC5424]  Gerhards,
      R., \"The Syslog Protocol\", RFC 5424, March 2009.\n   [RFC5425]  Miao, F.,
      Ma, Y., and J. Salowey, \"Transport Layer\n              Security (TLS) Transport
      Mapping for Syslog\", RFC 5425,\n              March 2009.\n   [RFC5426]  Okmianski,
      A., \"Transmission of Syslog Messages over UDP\",\n              RFC 5426, March
      2009.\n   [RFC5746]  Rescorla, E., Ray, M., Dispensa, S., and N. Oskov,\n              <\"Transport
      Layer Security (TLS) Renegotiation Indication\n              Extension\", RFC
      5746, February 2010.\n"
    title: 11.1.  Normative References
  - contents:
    - "11.2.  Informative References\n   [RFC2914]  Floyd, S., \"Congestion Control
      Principles\", BCP 41,\n              RFC 2914, September 2000.\n   [RFC4086]
      \ Eastlake, D., Schiller, J., and S. Crocker, \"Randomness\n              Requirements
      for Security\", BCP 106, RFC 4086, June 2005.\n   [RFC5405]  Eggert, L. and
      G. Fairhurst, \"Unicast UDP Usage Guidelines\n              for Application
      Designers\", BCP 145, RFC 5405,\n              November 2008.\n   [RFC5848]
      \ Kelsey, J., Callas, J., and A. Clemm, \"Signed Syslog\n              Messages\",
      RFC 5848, May 2010.\n"
    title: 11.2.  Informative References
  title: 11.  References
- contents:
  - "Authors' Addresses\n   Joseph Salowey\n   Cisco Systems, Inc.\n   2901 3rd Ave.\n
    \  Seattle, WA  98121\n   USA\n   EMail: jsalowey@cisco.com\n   Tom Petch\n   Engineering
    Networks Ltd\n   18 Parkwood Close\n   Lymm, Cheshire  WA13 0NQ\n   UK\n   EMail:
    tomSecurity@network-engineer.co.uk\n   Rainer Gerhards\n   Adiscon GmbH\n   Mozartstrasse
    21\n   Grossrinderfeld, BW  97950\n   Germany\n   EMail: rgerhards@adiscon.com\n
    \  Hongyan Feng\n   Huaweisymantec Technologies\n   20245 Stevens Creek Blvd.\n
    \  Cupertino, CA  95014\n   EMail: fhyfeng@gmail.com\n"
  title: Authors' Addresses
