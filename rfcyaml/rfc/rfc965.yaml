- title: __initial_text__
  contents:
  - '            A Format for a Graphical Communication Protocol

    '
- title: STATUS OF THIS MEMO
  contents:
  - "STATUS OF THIS MEMO\n   This paper describes the requirements for a graphical\
    \ format on which\n   to base a graphical on-line communication protocol.  The\
    \ proposal is\n   an Interactive Graphical Communication Format using the GKSM\
    \ session\n   metafile.  Distribution of this memo is unlimited.\n"
- title: ABSTRACT
  contents:
  - "ABSTRACT\n   This paper describes the requirements for a graphical format on\
    \ which\n   to base a graphical on-line communication protocol. It is argued that\n\
    \   on-line graphical communication is similar to graphical session\n   capture,\
    \ and thus we propose an Interactive Graphical Communication\n   Format using\
    \ the GKSM session metafile.\n   We discuss the items that we believe complement\
    \ the GKSM metafile as\n   a format for on-line interactive exchanges. One key\
    \ application area\n   of such a format is multi-media on-line conferencing; therefore,\
    \ we\n   present a conferencing software architecture for processing the\n   proposed\
    \ format. We make this format specification available to those\n   planning multi-media\
    \ conferencing systems as a contribution toward\n   the development of a graphical\
    \ communication protocol that will\n   permit the interoperation of these systems.\n\
    \   We hope this contribution will encourage the discussion of multimedia\n  \
    \ data exchange and the proposal of solutions. At SRI, we stay open to\n   the\
    \ exploration of alternatives and we will continue our research and\n   development\
    \ work in this problem area.\n"
- title: ACKNOWLEDGEMENTS
  contents:
  - "ACKNOWLEDGEMENTS\n   The author wants to thank Andy Poggio of SRI who made many\
    \ insightful\n   and valuable suggestions that trimmed and improved level U. His\n\
    \   expertise in multi-media communication systems and his encouragement\n   were\
    \ a most positive input to the creation of this IGCF. Dave\n   Worthington of\
    \ SRI also participated in the project discussions\n   involving this IGCF. Thanks\
    \ are also due to Tom Powers, chairman of\n   ANSI X3H33, who opened this forum\
    \ to the presentation of an earlier\n   version of this paper, thereby providing\
    \ an opportunity for the\n   invaluable feedback of the X3H33 members. Jon Postel\
    \ of ISI\n   recommended a number of changes that made this paper more coherent\n\
    \   and accessible.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   Most of the work reported\
    \ in this paper was sponsored by the U.S.\n   Navy, Naval Electronic Systems Command,\
    \ Washington D.C., under\n   Contract No. N00039-83-K-0623.\n"
- title: I.  INTRODUCTION
  contents:
  - "I.  INTRODUCTION\n   A. Use of a Graphical Communication Protocol\n      In the\
    \ field of computer communications, a protocol is a procedure\n      executed\
    \ by two cooperating processes in order to attain a\n      meaningful exchange\
    \ of information. A graphical communication\n      protocol is needed to exchange\
    \ interactive vector graphics\n      information, possibly in conjunction with\
    \ other information media\n      like voice, text, and video. Within this multi-media\
    \ communication\n      environment, computer vector graphics plays a key role\
    \ because it\n      takes full advantage of the processing capabilities of\n \
    \     communicating computers and human users, and thus it is far more\n     \
    \ compact than digital images which are not generated from data\n      structures\
    \ containing positional information. Vector graphical\n      communication trades\
    \ intensive use of storage and processing, at\n      the communicating ends, in\
    \ return for a low volume of exchanged\n      data, because workstations with\
    \ graphical hardware exchange\n      graphics commands in conjunction with large\
    \ data structures at the\n      transmitter and receivers. In this manner, the\
    \ transmission of a\n      single command can produce extensive changes in the\
    \ data displayed\n      at the sending and receiving ends.\n      It is helpful\
    \ to situate the aforesaid protocol at one of the\n      functional levels of\
    \ the ISO Open Systems Interconnection\n      Reference Model [1]. Within such\
    \ a model, a graphical protocol\n      functionality belongs primarily in the\
    \ application level, though\n      some of it fits in the presentation level.\
    \  We can distinguish the\n      following components of a communication protocol:\n\
    \         a) a data format\n         b) rules to interpret transmitted data\n\
    \         c) state information tables\n         d) message exchange rules\n  \
    \    A format for a graphical protocol should provide the layout of the\n    \
    \  transmitted data, and indicate how the formated data are\n      associated\
    \ with interpretation rules. The choice of format\n      influences the state\
    \ tables to be maintained for the correct\n      processing of the transmitted\
    \ data stream. The graphical format\n      has a minor influence on the exchange\
    \ rules, which should provide\n      for the efficient use of transmission capacity\
    \ to transport the\n      data under such a format. Besides the graphical format,\
    \ there are\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      other aspects of a graphical\
    \ protocol that determine state tables\n      and exchange rules. This paper concentrates\
    \ in the data format,\n      and it does not discuss the message exchange. Nevertheless,\
    \ we\n      discuss a simple software architecture for generating and\n      interpreting\
    \ data streams written in our proposed format. Further,\n      we give an example\
    \ of an application of a proposed format (in\n      Appendix B), and it illustrates\
    \ the type of message exchanges that\n      are needed for establishing a communication\
    \ session and exchanging\n      graphical information.\n      Those in the computer\
    \ communication field are well aware of the\n      importance of widely accepted\
    \ protocols in order to achieve\n      meaningful communication. Those who need\
    \ to implement interactive\n      graphical communications today are confronted\
    \ with the lack of an\n      standard for computer graphics communication among\
    \ application\n      programs. Nevertheless, we can use some of the work already\
    \ done\n      by the computer graphics standard bodies. As a matter of fact, ISO\n\
    \      and ANSI have already appended, to the Graphical Kernel System\n      (GKS)\
    \ standard, the GKSM session metafile specification that has\n      many of the\
    \ features needed for an on-line graphical protocol.\n      It is pertinent to\
    \ mention an example of graphical communication\n      that illustrates the real-time\
    \ nature of the interaction and also\n      illustrates the use of graphics in\
    \ conjunction with other\n      information media. With audio-graphics conferencing,\
    \ a group of\n      individuals at two or more locations can carry on an electronic\n\
    \      meeting. They can converse over voice channels and concurrently\n     \
    \ share a graphics space on which they can display, point at, and\n      manipulate\
    \ vector graphics pictures [2, 3, 4, 5, 6, 7].\n      The conference voice channels\
    \ can be provided by a variety of\n      transmission technologies. The shared\
    \ graphics space can be\n      implemented on workstations that display the pictures\
    \ and permit\n      graphical interaction and communication with other locations.\
    \ The\n      communication of operations upon pictures involves modifications\n\
    \      to the underlying data structures, but we are concerned with\n      graphical\
    \ database updating only to the extent that such updating\n      supports the\
    \ communication.\n      In order to play out a recorded graphical session, we\
    \ will need\n      indications of the rate at which the graphical elements must\
    \ be\n      shown and the graphical operations recreated. We do not include\n\
    \      the means for indicating the timing of a session in a format\n      because\
    \ our main purpose is to use it in mixed-media communication\n      environments.\
    \  In these environments, the play-out timing must be\n      compatible across\
    \ information media in order to coordinate them.\n      Therefore, we leave the\
    \ timing mechanisms to conference-control\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      modules. We also leave\
    \ to conference control processes the manner\n      in which a conferee station\
    \ emulates a graphical capability that\n      it lacks. One example is the representation\
    \ of color in monochrome\n      displays.\n   B. Relationship to Other Work\n\
    \      There are a number of actual, and proposed, standards for graphics\n  \
    \    information exchange. In the following, we explain the reasons\n      why,\
    \ at present, none of them can be used as the basis of an\n      on-line protocol.\
    \ As some of these standards evolve, however, some\n      may become suitable.\
    \ Moreover, the experience gained with early\n      on-line graphics communication\
    \ systems will provide insight into\n      the proper standard extensions to support\
    \ more advanced systems.\n      Such insight could also be used to modify the\
    \ format proposed in\n      this paper, which we consider an initial approach\
    \ to the problem.\n      In the future, the format proposed in this paper could\
    \ be replaced\n      by one of the aforesaid extended standards.\n      The North\
    \ American Presentation Level Protocol Syntax, NAPLPS,\n      specifies a data\
    \ syntax and application semantics for one-way\n      teletext information dissemination\
    \ and two-way videotex database\n      access and transaction services. The two-way\
    \ videotex operational\n      model is based on the concept of a consumer and\
    \ an information\n      provider or service operator. Because of this asymmetry,\
    \ it is\n      assumed that almost all graphical information will flow from the\n\
    \      provider toward the consumer. In the reverse direction, the\n      consumer\
    \ is expected to manipulate and transmit alphanumeric\n      information, for\
    \ the most part. Although this standard includes\n      geometric drawing primitives,\
    \ a user cannot directly modify shapes\n      drawn with the primitives.\n   \
    \   At present, NAPLPS does not include interaction concepts like\n      picture\
    \ transformations or detectability, which are fundamental\n      for attaining\
    \ a shared graphical workspace. Neither does it allow\n      key graphics input\
    \ devices like mice, joysticks, stylus, rotating\n      balls, or light pens,\
    \ which are needed for simple and efficient\n      editing of the shared workspace.\n\
    \      We want to have user-to-user graphical communication that features\n  \
    \    the level of sophistication and ease of interaction provided by\n      today's\
    \ interactive graphics packages. Computer vector graphics\n      can provide both\
    \ because its paradigm includes an application\n      program that keeps track\
    \ of a very large number of possible\n      changes of state of the displayed\
    \ picture. In addition, the\n      application drives a powerful graphics package,\
    \ like GKS or ACM\n      Core. In the videotex paradigm, the provider application\
    \ only\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      allows limited changes\
    \ to the displayed image, primarily database\n      retrieval requests. Also,\
    \ the paradigm does not include a separate\n      graphics package. Both the graphics\
    \ functionality and the data\n      format are collapsed into a coding specification,\
    \ like NAPLPS.\n      In this paper we are interested primarily in business and\n\
    \      industrial applications where there is a two-way, or multi-way,\n     \
    \ flow of vector graphics information among the users. The users\n      will have\
    \ workstations with substantial processing and storage\n      capacities, and\
    \ high-resolution monitors; moreover, the\n      communication will be on a distributed\
    \ architecture not depending\n      on a central server host, like the provider\
    \ application host of\n      videotex.\n      Currently, the videotex equipment\
    \ at the consumer end consists of\n      inexpensive microprocessor-based decoders\
    \ or personal computer\n      boards driving, in most cases, low-resolution standard\
    \ TV sets and\n      personal computer displays. There is already affordable technology\n\
    \      to produce sophisticated decoders and high-resolution graphics\n      devices.\
    \ The videotex standards need extensive revisions to take\n      advantage of\
    \ these advances; in particular, they should consider\n      the receiving devices\
    \ as capable of hosting a programmable\n      customer-application process. When\
    \ this happens, videotex\n      protocols will be applicable to our intended problem\
    \ areas [8].\n      The Computer Graphics Metafile [9] will become an international\n\
    \      and North American standard for graphics picture interchange in\n     \
    \ the near future. However, the CGM, also referred as VDM, is a\n      picture-capture\
    \ metafile that only records the final result of a\n      graphics session. It\
    \ is not intended to record the\n      picture-creation process, which is fundamental\
    \ for the interactive\n      applications that we are addressing. Moreover, the\
    \ CGM is\n      presently aimed at a minimum support of GKS functionality. It\
    \ will\n      be some time before the CGM will have some of the elements needed\n\
    \      for on-line interaction. If, after these additions, the CGM is\n      augmented\
    \ for session capture, it would become a logical candidate\n      for a protocol\
    \ format.\n      Another future standard is the Computer Graphics Interface, CGI\n\
    \      also referred as VDI [10]. The CGI is a standard functional and\n     \
    \ syntactical specification of the control and data exchange between\n      device-independent\
    \ graphics software and one or more\n      device-dependent graphics device drivers.\
    \ A major use of the CGI\n      is for the communication between an application\
    \ host and a\n      graphics device, but the asymmetry between its intended\n\
    \      communicating ends hinders the use of CGI for our purposes.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      As previously stated,\
    \ we want to take advantage of intelligence\n      and storage at the communicating\
    \ ends in order to achieve powerful\n      information-conveying effects using\
    \ narrow-bandwidth channels.\n      This requires that the format we seek must\
    \ have items for\n      communication between two applications. In contrast, the\
    \ CGI\n      streams are processed by device-dependent drivers, rather than by\n\
    \      applications. The CGI specification does include application data\n   \
    \   elements, but only to be stored in a metafile. These application\n      data\
    \ elements are not interpreted by the drivers, but by\n      applications that\
    \ read the metafile, some time after metafile\n      creation.\n      Furthermore,\
    \ the CGI has elements for obtaining graphical input,\n      as well as elements\
    \ for inquiring graphics device capabilities,\n      characteristics, and states.\
    \ Later, in Section III, we explain why\n      these two classes of elements are\
    \ unnecessary for the\n      communication protocol we need. As the CGI evolves,\
    \ it will\n      undergo significant changes, and, in the future, it may become\
    \ a\n      very suitable kernel for the graphics protocol we seek.  As a\n   \
    \   matter of fact, the CGI will be the communication protocol between\n     \
    \ graphical application hosts and graphics terminals.  At SRI we are\n      tracking\
    \ its evolution, and we are interested in defining a format\n      based on the\
    \ CGI.\n      Finally, the Initial Graphics Exchange Specification [11] is not\n\
    \      aimed at our primary area of interest. The IGES defines standard\n    \
    \  file and language formats for storing and transmitting\n      product-definition\
    \ data that can be used, in part, to generate\n      engineering drawings and\
    \ other graphical representations of\n      engineering products.  Besides the\
    \ CAD orientation of IGES, the\n      graphical output function may be secondary\
    \ to other goals like\n      transmitting numerical-control machine instructions.\n"
- title: II.  OPERATIONAL REQUIREMENTS AND USABILITY
  contents:
  - "II.  OPERATIONAL REQUIREMENTS AND USABILITY\n   The main goal of this paper is\
    \ to lay the groundwork for the\n   development of a vector graphics format to\
    \ be used as a basis for an\n   on-line graphical communication protocol. We call\
    \ such a format an\n   \"interactive graphical communication format,\" or IGCF.\
    \ In this\n   section we describe some operational requirements and usable\n \
    \  characteristics for an IGCF.\n   A. Interoperation of Heterogeneous Systems\n\
    \      A first functional requirement is that an IGCF must permit\n      communication\
    \ among heterogeneous graphical systems differing both\n      in the hardware\
    \ used and in the software of their graphics\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      application interfaces.\
    \ This is a fundamental for attaining\n      communication among similar graphical\
    \ application programs running\n      on dissimilar hardware and using dissimilar\
    \ graphics interface\n      packages. Some examples of such application programs\
    \ are graphics\n      editors, CAD systems, and graphical database retrieval programs\n\
    \      communicating with other editors, CAD programs, and graphical\n      databases,\
    \ respectively.\n   B. Picture Capture\n      A required characteristic of an\
    \ IGCF is that it must be usable for\n      the exchange of static graphic pictures,\
    \ i.e. for picture capture;\n      yet, it must not be restricted to final picture\
    \ recording only.\n      There will be picture exchanges as part of the interactive\n\
    \      communication, and we anticipate the need to record the state of a\n  \
    \    picture at some points during the on-line graphics engagement. We\n     \
    \ foresee the creation of graphical IGCF libraries containing object\n      definitions\
    \ and pictures for inclusion in new pictures. Since\n      metafiles have been\
    \ used for a long time to capture pictures,\n      there is a strong motivation\
    \ to base an IGCF on a metafile\n      standard in order to secure compatibility\
    \ with a large number of\n      metafile sources and consumers.\n   C. Prompt\
    \ Transmission\n      In some forms of interactive graphical communication, like\n\
    \      audiographics conferencing, it is critical to convey across users\n   \
    \   the real-time nature of the interaction. This dictates that object\n     \
    \ creations and manipulations be transmitted as they happen rather\n      than\
    \ as a final result since a substantial part of the information\n      may be\
    \ transmitted concurrently with the construction or operation\n      of an object,\
    \ possibly through associated media like voice. Since\n      both construction\
    \ and manipulation processes have to be\n      transmitted, there is a limit to\
    \ the number of intermediate states\n      that can be economically transmitted.\n\
    \      A third requirement is, therefore, that the IGCF elements provide\n   \
    \   fine \"granularity\" to convey the dynamics of the constructions and\n   \
    \   manipulations. We believe that it is sufficient that the IGCF have\n     \
    \ basic construction elements like polygons, markers, polylines, and\n      text\
    \ strings and that it transmit them only when they are\n      completed; i.e.,\
    \ it is not necessary to transmit partial\n      constructions of such elements.\n\
    \      The problem for manipulations extends beyond an IGCF. Whereas we\n    \
    \  know that an IGCF should include segment transformations, segment\n      highlighting\
    \ and segment visibility on/off, the transmitter must\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      decide how often to sample\
    \ an on-going transformation and transmit\n      its current state. The choice\
    \ of a sampling frequency will depend\n      on the available transmission bandwidth.\n\
    \   D. Low Traffic Volume\n      In many of the applications we envision, coordinate\
    \ graphics will\n      be transmitted over narrow bandwidth channels, and thus\
    \ it is\n      essential to minimize traffic. Accordingly, several requirements\n\
    \      are imposed on an IGCF to take advantage of the characteristics of\n  \
    \    the graphics communication intercourse and architecture in order\n      to\
    \ minimize traffic.\n      An IGCF can help reduce traffic by including the basic\
    \ geometric\n      objects from which so many other objects are built. Moreover,\
    \ an\n      IGCF should permit the use of objects for the creation of more\n \
    \     complex objects; since reuse is very common, the result is a\n      reduction\
    \ of traffic and storage cost.\n   E. Preservation of Application Semantic Units\n\
    \      A related requirement is that an IGCF must include elements to\n      represent\
    \ graphical objects corresponding to real world entities\n      of the intended\
    \ applications. For example, in a Navy application,\n      the entities of interest\
    \ are carriers, submarines, planes, and the\n      like. We want to communicate\
    \ such semantic units across systems\n      and to treat them as unitary objects\
    \ because, in many\n      applications, communication is based on creating and\
    \ operating\n      such units. If an IGCF has elements to represent such semantic\n\
    \      units, the communication traffic decreases because the entity\n      definitions\
    \ can be transmitted only once and then reused, and\n      because the entities\
    \ are manipulated as units rather than\n      separately manipulating their components.\n\
    \      It turns out that there is a small set of primary operations that\n   \
    \   can be applied to a graphical object, and an IGCF must have\n      elements\
    \ representing such operations. In contrast to dumb\n      graphics terminals\
    \ receiving screen refresh information from a\n      host, we foresee graphical\
    \ communication taking place among\n      intelligent workstations that can exchange\
    \ encoded operations,\n      interpret them, and apply them to objects stored\
    \ locally.\n   F. Transmission Batching\n      We previously indicated the desirability\
    \ of conveying to the human\n      users the real-time tempo of interactive graphics\
    \ exchanges.\n      However, it is possible to do so without having to transmit\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      immediately all IGCF elements.\
    \ As a matter of fact, IGCF elements\n      should be divided into those causing\
    \ a change on a displayed\n      picture and those that do not, although both\
    \ classes may cause\n      changes to the stored graphical data structures.\n\
    \      It is only necessary to transmit immediately those elements\n      causing\
    \ a visible change on a displayed picture because they are\n      the ones whose\
    \ reception and interpretation delivers information\n      to a human user. The\
    \ second class of elements can be batched and\n      queued for transmission until\
    \ one element of the first class is\n      submitted. We call the first class\
    \ update Group-1, and the second,\n      update Group-2.\n      The aforesaid\
    \ division is quite important for packet\n      communications because each packet\
    \ contains a hefty amount of\n      overhead control traffic. It is therefore\
    \ mandatory to batch, into\n      a packet, as much client data as possible in\
    \ order to reduce total\n      traffic. The batching units can be varied in size\
    \ according to the\n      network traffic and response time of conference hosts.\
    \ During\n      congested periods, the units may have to be increased, thus\n\
    \      lowering the number of messages, and then reduced when congestion\n   \
    \   eases, thus increasing the number of messages.\n   G. Simple Translation Between\
    \ IGCF and User Interface\n      According to the first requirement, an IGCF must\
    \ permit the\n      interoperation of related heterogeneous graphics applications.\n\
    \      Such interoperation has, as an objective, the communication\n      between\
    \ human users or between a human and a database.\n      Correspondingly, the interoperation\
    \ involves a mapping between the\n      user interface commands and the IGCF elements.\
    \ It is not advisable\n      to use the commands themselves as the IGCF elements;\
    \ otherwise the\n      exchange would depend on the communicating systems, and\
    \ every pair\n      of communicating systems would require an ad-hoc protocol.\n\
    \      An additional usability characteristic is that there must be a\n      simple\
    \ mapping between IGCF elements and the actions represented\n      by the user\
    \ interface commands employed for graphical\n      communications. This simplicity\
    \ is a must because every\n      communicating graphical system must have a translator\
    \ that ideally\n      should be very simple. It seems that the inclusion of command\n\
    \      sequence delimiters in the IGCF helps the simplicity since the\n      delimiters\
    \ permit keeping a smaller amount of state information\n      for processing an\
    \ IGCF stream.\n      We have verified the mapping from one set of commands for\n\
    \      audiographics conferencing to the IGCF proposed in this paper. The\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      mapping from user interface\
    \ commands to IGCF can be done in a\n      direct and efficient manner; on the\
    \ other hand, the reverse\n      mapping, from IGCF to user interface commands,\
    \ is a more difficult\n      task. We anticipate that, in order to improve performance,\
    \ we will\n      have to map the IGCF elements to calls to lower level subroutines\n\
    \      implementing the user interface actions. Whereas such mapping is\n    \
    \  conceptually no more complex than translating IGCF to the commands\n      themselves,\
    \ it will require considerably more programming.\n"
- title: III.  ELEMENTS OF AN IGCF
  contents:
  - "III.  ELEMENTS OF AN IGCF\n   IGCF Element Classes\n      In this section we\
    \ list the classes of elements that we believe an\n      IGCF should have in order\
    \ to exchange vector graphics under the\n      requirements of the previous section.\
    \ The classes correspond to\n      the common function classes in computer graphics\
    \ interfaces, and\n      each contains elements corresponding to interface primitives\
    \ and\n      attributes. We do not list the elements for each class because\n\
    \      they are exemplified by the elements in the proposed IGCF.\n      In the\
    \ following list, two categories of functions are missing:\n      functions used\
    \ to query the status of a graphics system, and input\n      functions. As a matter\
    \ of fact, an IGCF only needs to have\n      elements representing actions that\
    \ cause a change in the state of\n      the communicating graphical systems, and\
    \ the inquire functions\n      obviously do not change their state. Even though\
    \ an input function\n      executed at the transmitting end causes a local change,\
    \ it is not\n      necessary to transmit the input command itself. The receivers\
    \ only\n      need to get the data input, in IGCF representation, and they can\n\
    \      process the data in any manner, maybe simulating local input\n      actions.\n\
    \      Control\n         Elements for workstation: initialization, control and\n\
    \         transformation; and elements for normalization transformation.\n   \
    \      (The normalization and workstation transformations can be used\n      \
    \   to implement zooming.)\n      Primitive attributes\n         Elements for\
    \ primitive, segment, and workstation attributes.\n      Output primitives\n \
    \        Elements for output primitives.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      Segmentation\n       \
    \  Elements for basic segmentation and workstation independent\n         segment\
    \ storage.\n         Object manipulations can be implemented with segment\n  \
    \       transformations. Object insertion can be implemented using\n         segment\
    \ recall and segment visibility. Object deletion can be\n         implemented\
    \ using segment deletion and segment visibility.\n         Object selection can\
    \ use segment highlighting as feedback to\n         the user.\n      Dynamics\n\
    \         A considerable part of the graphical information exchanged\n       \
    \  through an IGCF will be in the form of pointer movements over a\n         background\
    \ picture. Pointer tracking is used to transmit points\n         sampled from\
    \ a graphical pointer trace in order to reproduce,\n         at the receivers,\
    \ the movement of the pointer at the sender\n         site. This can be done either\
    \ by just moving the cursor or by\n         tracing its movement with a line.\
    \ Rubber band echoes are used\n         to signal areas, routes, and scopes in\
    \ a highly dynamic way.\n         These are indicated by an echo reference point\
    \ and a feedback\n         point.\n   Hierarchical object definitions\n      The\
    \ requirement for preserving application semantics dictated that\n      an IGCF\
    \ include the means to represent objects that stand for\n      application entities,\
    \ and to manipulate such entities as graphical\n      units. Furthermore, the\
    \ low-traffic-volume requirement called for\n      the use of already existing\
    \ objects for the creation of new ones.\n      One way to meet the aforesaid requirements\
    \ is by including in an\n      IGCF the means to represent object hierarchies.\
    \ In such a\n      hierarchy an object is a set of output primitives associated\
    \ with\n      a set of attribute values or a set of lower-level objects, each\n\
    \      associated with a composition of transformations [12].\n      Graphics\
    \ segments can be used to implement objects in the lowest\n      level of a hierarchy.\
    \ The definition of a higher-level object can\n      be represented by sequences\
    \ of IGCF elements describing the\n      definition process. Such a definition\
    \ can be done by instantiating\n      lower-level objects with specific transformation\
    \ parameters. Thus\n      an IGCF must incorporate brackets to mark the beginning\
    \ and end of\n      object definitions, object instantiations, and object\n  \
    \    redefinitions.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      In order to complement\
    \ the mechanism for object definition, an\n      IGCF must permit the use of a\
    \ flexible alphabet for creating\n      object identifiers that ensure the uniqueness\
    \ of an identifier in\n      a hierarchy. The construction of the object identifiers\
    \ is not\n      part of an IGCF, an IGCF only has to represent the identifiers.\n\
    \      Further, an identifier has to be independent of a communication\n     \
    \ session and a particular graphics system so that identifiers\n      created\
    \ at a host during one session can be used, in other\n      sessions possibly\
    \ involving other hosts, to recall the objects\n      they label.\n      We also\
    \ leave to the communicating systems the implementation of\n      mechanisms to\
    \ resolve duplicate identifiers when merging two\n      hierarchies, created in\
    \ different sessions. In this paper we shall\n      limit ourselves to the warning\
    \ that segment numbers do not qualify\n      as identifiers because they depend\
    \ on the session and state of the\n      system in which they are created.\n \
    \     In addition to object definition and instantiation, an IGCF should\n   \
    \   have elements representing operations on objects. The operations\n      so\
    \ far identified are: transformation, deletion, display,\n      disappearance,\
    \ expose, and hide. Expose is used to uncover objects\n      on a screen that\
    \ are hidden by other objects; hide is used to\n      place an object behind others\
    \ on a screen.\n"
- title: IV.  A PROPOSED IGCF
  contents:
  - "IV.  A PROPOSED IGCF\n   A. Using the GKSM as a Basis\n      An IGCF must be\
    \ usable to transmit all graphical actions in a\n      conference session. This\
    \ suggests to base an IGCF on a standard\n      session-capture graphics metafile,\
    \ thus ensuring compatibility\n      with a large user population. We have based\
    \ the proposed IGCF,\n      PIGCF, on the GKSM session-capture metafile specification\
    \ because\n      GKSM contains many of the elements identified for an IGCF [14].\
    \ In\n      addition, the audit trail orientation of GKSM permits the\n      recording\
    \ of interactive communication sessions for later play\n      out, and this is\
    \ a feature that we anticipate will be frequently\n      used.\n      The GKSM\
    \ is a proper subset of our PIGCF and thus any graphical\n      system developed\
    \ to handle the PIGCF, can read a GKSM metafile.\n      Conversely, the applications\
    \ using the PIGCF should have an option\n      for constraining session recording\
    \ only to the GKSM part, possibly\n      suppressing some session events.  By\
    \ doing so, we will be able to\n      ship a GKSM metafile to any correspondent\
    \ who has GKSM\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      interpretation software.\
    \  Alternatively, an application with a\n      GKSM interpreter but without an\
    \ PIGCF interpreter can read a PIGCF\n      file interpreting only the GKSM part\
    \ and ignoring the rest.\n      Whereas the GKSM was specified for the GKS system,\
    \ we believe that\n      the GKSM is a sound and general basis for all of our\
    \ 2-D\n      applications. We feel that the GKSM specification is not parochial\n\
    \      to GKS systems but contains all the most useful items desired in a\n  \
    \    metafile. In the future, we expect to tackle applications\n      requiring\
    \ 3-D, like interactive repair and maintenance aids. When\n      GKS be augmented\
    \ with 3-D capabilities [13], we will extend the\n      PIGCF with any necessary\
    \ elements.\n      We are aware that the GKSM specification is not part of the\
    \ GKS\n      standard itself but is an appendix recommending such a metafile\n\
    \      format. Nevertheless, all the GKS vendor implementations that we\n    \
    \  know of, at the present time, support GKSM metafile output and\n      interpretation.\
    \ If this trend continues, as we expect, we will be\n      able to exchange graphical\
    \ files with a large base of GKS\n      installations. There will indeed be many\
    \ of them since GKS will be\n      adopted as an standard by ISO and by many national\
    \ standard bodies\n      in the near future.\n   B. Positional Information Coordinates\n\
    \      Following the GKSM convention, the PIGCF positional information is\n  \
    \    in normalized device coordinates, NDC. Thus the originator of a\n      conference\
    \ must indicate the workstation window for the\n      conference. This window\
    \ is the sub-rectangle of the NDC space\n      enclosing the area of interest\
    \ for the conference. In most cases,\n      the participating workstations will\
    \ take this window as their own.\n      However, the graphical systems should\
    \ provide for the possibility\n      of a workstation choosing a different workstation\
    \ window, which\n      may contain the conference window or just overlap it. Except\
    \ for\n      special cases, a conference originator should not state a\n     \
    \ conference workstation viewport. In this manner, each workstation\n      can\
    \ display its workstation viewport in the most convenient\n      portion of the\
    \ screen.\n      There will be conferences where the participating workstations\n\
    \      will maintain the positional information in world coordinates, WC.\n  \
    \    It might be necessary to reconstruct the world dimensions after\n      transmission\
    \ because such dimensions have a relevant meaning for\n      the application,\
    \ like sizes of components or distances. In this\n      case, a workstation will\
    \ have to map from WC to NDC before\n      transmitting and from NDC to WC after\
    \ receiving. At the outset,\n      the conference originator has to specify the\
    \ world window and the\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      NDC viewport used in the\
    \ conference in order for the conferencing\n      workstations to do such mappings.\
    \ These mappings could be done by\n      the presentation layer, in terms of the\
    \ ISO Open Systems\n      Interconnection Reference Model, in a manner that is\
    \ transparent\n      to the communicating application programs.\n      Most often\
    \ all workstations will have the same world windows and\n      NDC viewports.\
    \ However, the graphical systems will provide for the\n      possibility of a\
    \ workstation choosing a different window or\n      viewport, but such workstation\
    \ will have to record the conference\n      ones for doing the aforesaid mappings.\
    \ There are graphical\n      systems, like the ACM Core, that do not provide for\
    \ a workstation\n      transformation. In such systems, the NDC viewport is considered\
    \ to\n      be the workstation window for the aforesaid mappings.\n   C. Layers\
    \ of the PIGCF\n      There are two levels in the PIGCF a lower level L and an\
    \ upper one\n      U. The lower level L is just the GKSM metafile specification\
    \ as\n      defined in Appendix E of the proposed GKS ANSI standard [14].  We\n\
    \      have excerpted most of Appendix E of [14] at the end of this RFC\n    \
    \  as our Appendix A.  All level L elements belong to the update\n      Group-1\
    \ except: SET DEFERRAL STATE, the output primitive attribute\n      elements,\
    \ the workstation attribute elements, CLIPPING RECTANGLE,\n      CREATE SEGMENT,\
    \ CLOSE SEGMENT, RENAME SEGMENT, SET SEGMENT\n      PRIORITY, and SET DETECTABILITY.\n\
    \      The upper level U is those elements that we believe complement the\n  \
    \    GKSM for general on-line graphical exchanges. This layering\n      conforms\
    \ to the graphics metafile level-structure described in\n      Enderle et. al\
    \ [15]. Under such structuring, an application\n      oriented metafile can be\
    \ based on graphical metafiles.\n   D. PIGCF Elements in the Level U\n      The\
    \ level U items are encoded as GKSM user item elements so that a\n      PIGCF\
    \ file will conform to the GKSM metafile specification.\n      Accordingly, a\
    \ PIGCF file will be a GKSM metafile in its entirety.\n      We use the same formatting\
    \ conventions as the GKSM specification.\n      Those unfamiliar with these conventions\
    \ should read the beginning\n      of the appendix. The following items belong\
    \ to the second update\n      group: the two items for object definition, the\
    \ two items for\n      object redefinition, the two items for object instantiation,\
    \ the\n      two items for normalization transformation, SELECT COMPONENT, and\n\
    \      RECALL LIBRARY. The remaining items belong to the first update\n      group.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      Items for Object Definition\n\
    \         BEGIN DEFINITION\n            | 'GKSM 120' | L |\n            Indicates\
    \ beginning of object definition sequence\n         END DEFINITION\n         \
    \   | 'GKSM 121' | L | I |\n            Indicates end of object definition sequence.\
    \ I(Nc): object\n            identifier ( N preceding c, i, r means an arbitrary\
    \ number\n            of characters, integers, or reals.) Objects defined\n  \
    \          interactively are made visible on the screen; i.e. they are\n     \
    \       automatically instantiated. If only the definition is to be\n        \
    \    kept but not the image, a DISAPPEAR item must follow.\n         BEGIN REDEFINITION\n\
    \            | 'GKSM 122' | L | I |\n            Indicates beginning of object\
    \ redefinition sequence\n            I(Nc): object identifier\n         END REDEFINITION\n\
    \            | 'GKSM 123' | L |\n            Indicates end of object redefinition\
    \ sequence\n      Items for Object Instantiation\n         BEGIN INSTANTIATION\n\
    \            | 'GKSM 124' | L | I |\n            Indicates beginning of object\
    \ instantiation sequence\n            I(Nc): Object identifier\n         END INSTANTIATION\n\
    \            | 'GKSM 125' | L |\n            Indicates end of object instantiation\
    \ sequence\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      Items for Object Manipulation\n\
    \         TRANSFORM OBJECT\n            | 'GKSM 126' | L | C | I | M |\n     \
    \       Apply transformation M to object I\n            C: number of characters\
    \ in identifier\n            I(Nc): object id\n            M(6r): upper and center\
    \ rows of a 3x3 matrix representing\n                   a 2D homogeneous transformation\
    \ [12].\n                   M 11 M 12 M 13 M 21 M 22 M 23\n         DELETE OBJECT\n\
    \            | 'GKSM 127' | L | I |\n            I(Nc): object identifier\n  \
    \       DISPLAY OBJECT\n            | 'GKSM 128' | L | I |\n            Turn on\
    \ visibility of object I\n            I(Nc): object identifier\n         DISAPPEAR\
    \ OBJECT\n            | 'GKSM 129' | L | I |\n            Turn off visibility\
    \ of object I\n            I(Nc): object identifier\n         EXPOSE OBJECT\n\
    \            | 'GKSM 130' | L | I |\n            Redisplay object I on top of\
    \ any overlapping objects\n            I(c):  object identifier\n         HIDE\
    \ OBJECT\n            | 'GKSM 131' | L | I |\n            Redisplay object I behind\
    \ any overlapping objects\n            I(c):  object identifier\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n         SELECT COMPONENT\n\
    \            | 'GKSM 132' | L | I | P |\n            Select component P of object\
    \ I\n            I(c):  object identifier\n            P(i):  pick id of component\n\
    \            This is used to select a group of output primitives\n           \
    \ identified by P in a segment associated with I.\n         ERASE COMPONENT\n\
    \            | 'GKSM 133' | L | I | P |\n            Erase component P of object\
    \ I\n            I(c):  object identifier\n            P(i):  pick id of component\n\
    \            This erases a group of output primitives identified by P in\n   \
    \         a segment associated with I. This element can be used only\n       \
    \     within a REDEFINE OBJECT sequence.\n      Items for Normalization Transformation\n\
    \         SET WINDOW\n            | 'GKSM 134' | L | W |\n            Define boundaries\
    \ of world window for normalization\n            transformation.\n           \
    \ W(4r): limits of world window (XMIN, XMAX, YMIN, YMAX )\n         SET VIEWPORT\n\
    \            | 'GKSM 135' | L | V |\n            Define boundaries of NDC viewport\
    \ for normalization\n            transformation.\n            V(4r): limits of\
    \ NDC viewport (XMIN, XMAX, YMIN, YMAX )\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      Items for Other Operations\n\
    \         ABORT\n            | 'GKSM 136' | L |\n            Abort ongoing operation\
    \ transmitted in PIGCF stream. This\n            provides the means to abort unwanted\
    \ or erroneous\n            operations. Only the innermost operation of a nested\n\
    \            sequence is aborted; successive aborts can be used to get\n     \
    \       out of several levels of operation nesting.\n         POINTER TRACKING\n\
    \            | 'GKSM 137' | L | T | P |\n            Update graphical pointer\
    \ position to P\n            T(i):  0 causes only cursor to be moved\n       \
    \            1 causes cursor movement to be traced with\n                   a\
    \ line\n            P(p):  a point sampled from graphical pointer\n          \
    \         movement trace\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n         RUBBER BAND\n     \
    \       | 'GKSM 138' | L | T | P |\n            Echo a rubber band of type T with\
    \ given reference and\n            feedback points. The first occurrence of this\
    \ item in a\n            sequence carries the coordinates of the echo reference\n\
    \            point. Subsequent occurrences carry updates to a pointer\n      \
    \      position indicating an echo feedback point.\n            T(i):  echo type\n\
    \                   ( 0 echo reference point;\n                   > 0 echo feedback:\n\
    \                     1 = line,\n                     2 = rectangle,\n       \
    \              3 = circle )\n            P(r):  echo reference point (T = 0),\n\
    \                   or echo feedback point (T > 0)\n               The reference\
    \ and feedback points are:\n                  T = 1 - reference is one end of\
    \ line, feedback is\n                          other end.\n                  T\
    \ = 2 - reference is one corner of rectangle, feedback\n                     \
    \     is opposite corner.\n                  T = 3 - reference is center of circle,\
    \ feedback is\n                          perimeter point.\n         RECALL LIBRARY\n\
    \            | 'GKSM 139' | L | F |\n            Recall graphical library in file\
    \ F\n            F(i):  name of file containing library\n            The graphical\
    \ pictures in F and all their components become\n            available for use\
    \ during the communication session. The\n            pictures are assumed to be\
    \ recorded with the PIGCF, and\n            their components have to be displayed\
    \ with DISPLAY OBJECT\n            elements or similar actions so that the pictures\
    \ become\n            visible.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: V.  AN ARCHITECTURE FOR PIGCF PROCESSING
  contents:
  - "V.  AN ARCHITECTURE FOR PIGCF PROCESSING\n   This section presents an example\
    \ software architecture for the\n   generation and interpretation of PIGCF in\
    \ a multimedia conferencing\n   system using GKS as the underlying programmer's\
    \ graphics interface.\n   This section should not be interpreted as a definitive\
    \ statement of\n   such an architecture, but only as an exercise to illustrate\
    \ how the\n   format proposed in this paper fits within the overall framework\
    \ of a\n   conferencing system. Choosing GKS simplifies the example\n   architecture;\
    \ nevertheless, other graphics packages can be used by\n   adding, to the architecture,\
    \ the modules to interpret and generate\n   the PIGCF level L items.\n   Figure\
    \ 1 shows the major software modules charged with graphics\n   interaction and\
    \ display at a conferencing workstation. This is a\n   familiar programmer's view\
    \ of the graphics pipeline. A conferencing\n   application program updates data\
    \ structures and uses\n   device-independent graphics services through a language\
    \ binding.\n   These services, in turn, use device-dependent graphics services\
    \ that\n   call on device drivers to accept input and to present graphic\n   pictures.\
    \ The application performs numerous other functions for\n   conference management\
    \ and control of other media streams, but we need\n   not consider them in this\
    \ example.\n   In Figure 2, the basic graphics pipeline has been augmented with\
    \ the\n   software modules involved in the generation, transmission, reception,\n\
    \   and interpretation of PIGCF streams. The application has a module for\n  \
    \ interpreting the lower and higher levels of PIGCF and one for\n   generating\
    \ the upper level U. The device-independent graphics\n   services include modules\
    \ for generating and interpreting the lower\n   level, L. This reflects the current\
    \ practice of including the\n   generation and interpretation functions in the\
    \ graphics package.\n   There is also a module that transmits the outgoing PIGCF\
    \ streams to\n   remote work stations. Similarly, there is a module that receives\n\
    \   incoming streams from remote stations. In actual practice, the\n   transmit\
    \ and receive modules are decomposed into several processes\n   implementing a\
    \ layered protocol architecture. A process receives both\n   levels of PIGCF and\
    \ writes them into a conference record metafile for\n   future use. A router process\
    \ receives and forwards PIGCF traffic from\n   and to the modules previously referred.\
    \ This router is likely to be\n   replaced by independent communication interfaces\
    \ between pairs of\n   modules exchanging PIGCF.\n   The thick arrows show the\
    \ flow of outgoing PIGCF, whereas the thin\n   arrows show the incoming PIGCF\
    \ flow. We first follow the outgoing\n   path, starting at the application.  The\
    \ application processes local\n   user actions which are transformed into data\
    \ structure updates, level\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   U PIGCF elements, and executions\
    \ of device independent graphics\n   subroutines that, among other things, generate\
    \ level L PIGCF (GKSM)\n   elements.\n   The router merges both level streams\
    \ according to generation order\n   and sends them to the local copy of the conference\
    \ record and to the\n   transmission module. The latter batches Group-2 PIGCF\
    \ items until it\n   receives a Group-1 item. It also timestamps the PIGCF stream\
    \ to\n   synchronize its play-back, at the receiver, with the play-back of\n \
    \  other media information.  The PIGCF may be separated into traffic\n   categories\
    \ transmitted over diverse communication facilities\n   according to the transport\
    \ services required by the categories, for\n   example, real-time service for\
    \ pointer updates, highly reliable\n   transmission for new object definitions,\
    \ or low-priority service for\n   graphical library transfers. Finally, the transmit\
    \ module must\n   acknowledge the reception of incoming PIGCF, and of other media\n\
    \   traffic as well.\n   The receive module is the entry point for incoming PIGCF\
    \ streams that\n   may come within diverse traffic categories requiring merging.\
    \ It\n   checks the timestamps for synchronizing PIGCF items with related data\n\
    \   in other media, for example, voice. It is possible to include here a\n   high-level\
    \ error-correction function that validates the received\n   streams using state\
    \ and context information about PIGCF syntax and\n   semantics. The receive module\
    \ passes the streams to the router which\n   forwards them to three processes:\
    \ It sends level L items to the GKSM\n   interpreter which produces the corresponding\
    \ changes on the displayed\n   picture; it sends level L and level U items to\
    \ the conference record,\n   as well as to the PIGCF interpretation code in the\
    \ application. The\n   level U items cause updates to both the data structures\
    \ modeling\n   object hierarchies, and the pictorial representation of the\n \
    \  hierarchies, through the execution of graphics services. U items also\n   update\
    \ graphics cursors and may recall new graphics libraries. The\n   application\
    \ must process level L items because they could indicate\n   updates to the data\
    \ structures; this happens if, for example, the\n   structures record attribute\
    \ value information for the object\n   hierarchies. The application coordinates\
    \ these actions with other\n   media effects according to the timestamps. Conference\
    \ record\n   play-back is done in off-line mode. Record items are received by\
    \ the\n   router and thereafter processed similarly to incoming PIGCF.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n                 +------------+\
    \        +-------------+\n                 |APPLICATION |        |    OTHER  \
    \  |\n                 |    DATA    |        |    MEDIA    |\n               \
    \  |STRUCTURES  |        |-------------|\n                 +-----|------+    \
    \    |  CONFERENCE |\n                       |---------->    | APPLICATION |\n\
    \                                       |   GRAPHICS  |\n                    \
    \   |---------->    |             |\n                 +-----|------+        |\
    \             |\n                 |  LANGUAGE  |        +-------------+\n    \
    \             |  BINDING   |                       \n                 +-----|------+\
    \        +-------------+\n                       |---------->    |   DEVICE- \
    \  |\n                 +------------+        | INDEPENDENT |\n               \
    \  |  DEVICE    |        |   GRAPHICS  |\n                 |  DEPENDENT |  <--->\
    \ |   SERVICES  |\n                 |  GRAPHICS  |        |             |\n  \
    \               |  SERVICES  |        |             |\n                 +-----|------+\
    \        |             |\n                       |               |           \
    \  |\n                       v               |             |\n               \
    \  +------------+        |             |\n                 |    DEVICE  |    \
    \    |             |\n                 |  DRIVERS   |        |             |\n\
    \                 +------------+        +-------------+\n                 FIGURE\
    \ 1 - THE BASIC GRAPHICS PIPELINE\n                        IN A CONFERENCING SYSTEM\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: +------------+    +------------+                 +------------------+
  contents:
  - '+------------+    +------------+                 +------------------+

    '
- title: '|APPLICATION |    |   OTHER    |                 |    TRANSMIT      |'
  contents:
  - '|APPLICATION |    |   OTHER    |                 |    TRANSMIT      |

    '
- title: '|   DATA     |    |   MEDIA    |                 |       ACK        |=>'
  contents:
  - '|   DATA     |    |   MEDIA    |                 |       ACK        |=>

    '
- title: '| STRUCTURES |    |------------|     +-----+     | SEPARATE TRAFFIC |=>'
  contents:
  - '| STRUCTURES |    |------------|     +-----+     | SEPARATE TRAFFIC |=>

    '
- title: +-----|------+    | CONFERENCE |     |     |===> |    BATCHING      |=>
  contents:
  - "+-----|------+    | CONFERENCE |     |     |===> |    BATCHING      |=>\n   \
    \   |---------->|APPLICATION |     |     |     |   TIMESTAMPING   |\n        \
    \          |  GRAPHICS  |     |     |     +------------------+\n      |---------->|------------|\
    \     |     |\n      |           | PIGCF L, U | <---|     |     +------------------+\n"
- title: +-----|------|    | INTERPRETER|     |     |     |     RECEIVE      |
  contents:
  - '+-----|------|    | INTERPRETER|     |     |     |     RECEIVE      |

    '
- title: '| LANGUAGE   |    +------------+     |  R  |     |  MERGE TRAFFIC   |<-'
  contents:
  - '| LANGUAGE   |    +------------+     |  R  |     |  MERGE TRAFFIC   |<-

    '
- title: '| BINDING    |    | PIGCF U    |===> |  O  | <---| CHECK TIMESTAMPS |<-'
  contents:
  - '| BINDING    |    | PIGCF U    |===> |  O  | <---| CHECK TIMESTAMPS |<-

    '
- title: +-----|------+    |  GENERATOR |     |  U  |     | ERROR CORRECTION |<-
  contents:
  - "+-----|------+    |  GENERATOR |     |  U  |     | ERROR CORRECTION |<-\n   \
    \   |           +------------+     |  T  |     |                  |\n      ------------------|\
    \            |  E  |     +------------------+\n"
- title: +------------+    +-----V------+     |  R  |
  contents:
  - '+------------+    +-----V------+     |  R  |

    '
- title: '|  DEVICE    |    |  DEVICE    |     |     |     +------------------+'
  contents:
  - '|  DEVICE    |    |  DEVICE    |     |     |     +------------------+

    '
- title: '| DEPENDENT  |    |INDEPENDENT |     |     |====>|                  |'
  contents:
  - '| DEPENDENT  |    |INDEPENDENT |     |     |====>|                  |

    '
- title: '| GRAPHICS   |<-->|  GRAPHICS  |     |     |---->|    CONFERENCE    |'
  contents:
  - '| GRAPHICS   |<-->|  GRAPHICS  |     |     |---->|    CONFERENCE    |

    '
- title: '| SERVICES   |    |  SERVICES  |     |     |     |       RECORD     |'
  contents:
  - '| SERVICES   |    |  SERVICES  |     |     |     |       RECORD     |

    '
- title: '|            |    |            |     |     |     |                  |'
  contents:
  - '|            |    |            |     |     |     |                  |

    '
- title: +-----|------+    |------------|     |     |     +------------------+
  contents:
  - "+-----|------+    |------------|     |     |     +------------------+\n     \
    \ |           |    GKSM    |     |     |\n      v           | INTERPRETER|<---\
    \ |     |       <--- INCOMING PIGCF\n"
- title: +------------+    +------------+     |     |
  contents:
  - '+------------+    +------------+     |     |

    '
- title: '|   DEVICE   |    |    GKSM    |     |     |       ===> OUTGOING PIGCF'
  contents:
  - '|   DEVICE   |    |    GKSM    |     |     |       ===> OUTGOING PIGCF

    '
- title: '| DRIVERS    |    | GENERATOR  |===> |     |'
  contents:
  - '| DRIVERS    |    | GENERATOR  |===> |     |

    '
- title: +------------+    +------------+     +-----+
  contents:
  - '+------------+    +------------+     +-----+

    '
- title: FIGURE 2 - A CONFERENCING SOFTWARE ARCHITECTURE FOR PROCESSING PIGCF
  contents:
  - 'FIGURE 2 - A CONFERENCING SOFTWARE ARCHITECTURE FOR PROCESSING PIGCF

    '
- title: VI.  CONCLUSIONS
  contents:
  - "VI.  CONCLUSIONS\n   Teleconferencing and other multi-media applications will\
    \ be part of\n   the communication resources available to organizations in the\
    \ near\n   future. This will prompt computer graphics and computer communication\n\
    \   practitioners to address the issue of application-to-application\n   graphics\
    \ communication. A key element of the issue is a protocol, and\n   a key component\
    \ of the protocol is a data format. We have presented\n   the operational requirements\
    \ for such a protocol and have proposed a\n   format that fulfills these requirements.\n\
    \   At present, none of the existing or emerging graphics standards can\n   be\
    \ used as the needed protocol or as a format for the protocol, but\n   this may\
    \ change as the standards evolve.  We are monitoring the\n   standards development\
    \ and will study the use of some of them as a\n   format basis, in particular\
    \ the CGI.  Nevertheless, the computer\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   communication community badly\
    \ needs experience with multi-media\n   conferencing implementations. In order\
    \ for these applications to\n   happen, one can base a graphics communication\
    \ protocol on an official\n   or on a de-facto standard that is likely to gain\
    \ wide use thus\n   assuring interoperability with a broad user base.  We believe\
    \ that,\n   by using the GKSM session metafile, we are moving in the proper\n\
    \   direction.\n   Planning the software architecture for generating and interpreting\n\
    \   the proposed PIGCF has brought up some problems we will confront as\n   we\
    \ continue our work toward the development of a complete graphics\n   protocol.\
    \  This is being done as part of the SRI on-going program in\n   multimedia communications.\
    \  Within this program, we are implementing\n   a simple multi-media conferencing\
    \ prototype and will design a more\n   complete one.  The experience from both\
    \ exercises will be a valuable\n   input to the protocol architecture design.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: APPENDIX A
  contents:
  - "APPENDIX A\n   Excerpt from \"Draft Proposal: Graphical Kernel System\" [14]\n\
    \   E.2  Metafile Based on ISO DIS7942\n      This metafile may be categorized\
    \ as one which aims to provide a\n      means of recording the exact sequence\
    \ of function calls made to\n      GKS. Its functional capability covers the entire\
    \ range of GKS\n      output functions, from level m to level 2. It is, therefore,\n\
    \      suitable for applications where the individual graphics actions\n     \
    \ need to be 'played back', perhaps with selective graphical editing\n      being\
    \ done by the interpreter.\n      Two encodings have been specified for this metafile.\
    \ One encoding\n      is inefficient for many applications. The second allows\
    \ an\n      unspecified binary format. The remainder of this IGCF appendix\n \
    \     gives full details of these metafile structures and encodings.\n      E.2.1\
    \ File Format and Data Format\n         The GKS metafile is built up as a sequence\
    \ of logical data\n         items. The file starts with a file header in fixed\
    \ format which\n         describes the origin of the metafile (author, installation),\n\
    \         the format of the following items, and the number\n         representation.\
    \ The file ends with an end item indicating the\n         logical end of the file.\
    \ In between these two items, the\n         following information is recorded\
    \ in the sense of an audit\n         trail:\n            a)      workstation control\
    \ items and message items;\n            b)      output primitive items, describing\
    \ elementary\n                    graphics objects;\n            c)      attribute\
    \ information, including output primitive\n                    attributes; segment\
    \ attributes, and workstation\n                    attributes;\n            d)\
    \      segment items, describing the segment structure and\n                 \
    \   dynamic segment manipulations;\n            e)      user items.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n         The overall structure\
    \ of the GKS metafile is as follows:\n            FILE:     |file  |item|---|item|---|end\
    \ |\n                      |header| 1  |   | i  |   |item|\n            ITEM:\
    \     |item   |item data record|\n                      |header |            \
    \    |\n            ITEM      |'GKSM'  |identification|length of item data|\n\
    \            HEADER:   |optional|    number    |       in bytes    |\n       \
    \  All data items except the file header have an item header\n         containing:\n\
    \            a)      the character string 'GKSM' (optional) which is\n       \
    \             present to improve legibility of the file and to\n             \
    \       provide an error control facility;\n            b)      the item type\
    \ identification number which indicates\n                    the kind of information\
    \ that is contained in the\n                    item;\n            c)      the\
    \ length of the item data record.\n         The lengths of these fields of the\
    \ item header are\n         implementation dependent and are specified in the\
    \ file header.\n         The content of the item data record is fully described\
    \ below\n         for each item type.\n         The metafile contains characters,\
    \ integer numbers, and real\n         numbers marked (c), (i), (r) in the item\
    \ description.\n         Characters in the metafile are represented according\
    \ to ISO 646\n         and ISO 2022. Numbers will be represented according to\
    \ ISO 6093\n         using format F1 for integers and format F2 for reals. (Remark:\n\
    \         Formats F1 and F2 can be written and read via FORTRAN formats I\n  \
    \       and F respectively.)\n         Real numbers describing coordinates and\
    \ length units are stored\n         as normalized device coordinates. The workstation\n\
    \         transformation, if specified in the application program for a\n    \
    \     workstation writing a metafile of this format, is not performed\n      \
    \   but WORKSTATION WINDOW and WORKSTATION VIEWPORT are stored in\n         data\
    \ items for later usage. Real numbers may be stored as\n         integers. In\
    \ this case transformation parameters are specified\n         in the file header\
    \ to allow proper transformation of integers\n         into normalized device\
    \ coordinates.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n         For reasons of economy,\
    \ numbers can be stored using an internal\n         binary format. As no standard\
    \ exists for binary number\n         representation, this format limits the portability\
    \ of the\n         metafile. The specification of such a binary number\n     \
    \    representation is outside the scope of this document.\n         When exchanging\
    \ metafiles between different installations, the\n         physical structure\
    \ of data sets on specific storage media\n         should be standardized. Such\
    \ a definition is outside the scope\n         of this standard.\n   E.3  Generation\
    \ of Metafiles\n      Table E1 contains a list, by class, of all GKS functions\
    \ which\n      apply to workstations of category MO, and their effects on this\n\
    \      GKSM. In the table, GKSM-OUT is a workstation identifier\n      indicating\
    \ a workstation writing a metafile of this format.\n      The concepts of clipping\
    \ rectangle and clipping indicator are\n      encapsulated in one metafile item\
    \ which specifies a clipping\n      rectangle. This item is written to the metafile\
    \ on activate\n      workstation with the values (0, 1, 0, 1), if the clipping\n\
    \      indicator is OFF, or the viewport of the current normalization\n      transformation,\
    \ if the clipping indicator is ON. If the viewport\n      of the current normalization\
    \ transformation is redefined or a\n      different normalization transformation\
    \ is selected when the\n      clipping indicator is ON, a further clipping rectangle\
    \ item is\n      written. If the clipping indicator is changed to OFF, a clipping\n\
    \      rectangle item (0, 1, 0, 1) is written. If the clipping indicator\n   \
    \   is changed to ON, an item containing the viewport of the current\n      normalization\
    \ transformation is written. This is analogous to the\n      handling of clipping\
    \ in segments (see 4.7.6 [14]).\n"
- title: GKS functions which apply to workstations        GKSM item created
  contents:
  - 'GKS functions which apply to workstations        GKSM item created

    '
- title: of category MO                                   or effect
  contents:
  - 'of category MO                                   or effect

    '
- title: ========================================================================
  contents:
  - '========================================================================

    '
- title: Control functions
  contents:
  - 'Control functions

    '
- title: OPEN WORKSTATION (GKSM-OUT,...)                  - (file header)
  contents:
  - "OPEN WORKSTATION (GKSM-OUT,...)                  - (file header)\n          \
    \                                       1 (CONDITIONAL)\n"
- title: CLOSE WORKSTATION (GKSM-OUT)                     0 (end item)
  contents:
  - 'CLOSE WORKSTATION (GKSM-OUT)                     0 (end item)

    '
- title: ACTIVATE WORKSTATION (GKSM-OUT)                  (61, 21-44)
  contents:
  - "ACTIVATE WORKSTATION (GKSM-OUT)                  (61, 21-44)\n              \
    \                                   ensure attributes\n                      \
    \                           current;\n                                       \
    \          enable output\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: DEACTIVATE WORKSTATION (GKSM-OUT)                disable output
  contents:
  - 'DEACTIVATE WORKSTATION (GKSM-OUT)                disable output

    '
- title: CLEAR WORKSTATION (GKSM-OUT,...)                 1
  contents:
  - "CLEAR WORKSTATION (GKSM-OUT,...)                 1\n                        \
    \                         2\n"
- title: REDRAW ALL SEGMENTS ON WORKSTATION (GKSM-OUT)
  contents:
  - 'REDRAW ALL SEGMENTS ON WORKSTATION (GKSM-OUT)

    '
- title: UPDATE WORKSTATION (GKSM-OUT,...)                3
  contents:
  - 'UPDATE WORKSTATION (GKSM-OUT,...)                3

    '
- title: SET DEFERRAL STATE (GKSM-OUT,...)                4
  contents:
  - 'SET DEFERRAL STATE (GKSM-OUT,...)                4

    '
- title: MESSAGE (GKSM-OUT,...)                           5 (message)
  contents:
  - 'MESSAGE (GKSM-OUT,...)                           5 (message)

    '
- title: ESCAPE                                           6
  contents:
  - 'ESCAPE                                           6

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Output Primitives
  contents:
  - 'Output Primitives

    '
- title: POLYLINE                                         11
  contents:
  - 'POLYLINE                                         11

    '
- title: POLYMARKER                                       12
  contents:
  - 'POLYMARKER                                       12

    '
- title: TEXT                                             13
  contents:
  - 'TEXT                                             13

    '
- title: FILL AREA                                        14
  contents:
  - 'FILL AREA                                        14

    '
- title: CELL ARRAY                                       15
  contents:
  - 'CELL ARRAY                                       15

    '
- title: GENERALIZED DRAWING PRIMITIVE                    16
  contents:
  - 'GENERALIZED DRAWING PRIMITIVE                    16

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Output Attributes
  contents:
  - 'Output Attributes

    '
- title: SET POLYLINE INDEX                               21
  contents:
  - 'SET POLYLINE INDEX                               21

    '
- title: SET LINETYPE                                     22
  contents:
  - 'SET LINETYPE                                     22

    '
- title: SET LINEWIDTH SCALE FACTOR                       23
  contents:
  - 'SET LINEWIDTH SCALE FACTOR                       23

    '
- title: SET POLYLINE COLOUR INDEX                        24
  contents:
  - 'SET POLYLINE COLOUR INDEX                        24

    '
- title: SET POLYMARKER INDEX                             25
  contents:
  - 'SET POLYMARKER INDEX                             25

    '
- title: SET MARKER TYPE                                  26
  contents:
  - 'SET MARKER TYPE                                  26

    '
- title: SET MARKER SIZE SCALE FACTOR                     27
  contents:
  - 'SET MARKER SIZE SCALE FACTOR                     27

    '
- title: SET POLYMARKER COLOUR INDEX                      28
  contents:
  - 'SET POLYMARKER COLOUR INDEX                      28

    '
- title: SET TEXT INDEX                                   29
  contents:
  - 'SET TEXT INDEX                                   29

    '
- title: SET TEXT FONT AND PRECISION                      30
  contents:
  - 'SET TEXT FONT AND PRECISION                      30

    '
- title: SET CHARACTER EXPANSION FACTOR                   31
  contents:
  - 'SET CHARACTER EXPANSION FACTOR                   31

    '
- title: SET CHARACTER SPACING                            32
  contents:
  - 'SET CHARACTER SPACING                            32

    '
- title: SET TEXT COLOUR INDEX                            33
  contents:
  - 'SET TEXT COLOUR INDEX                            33

    '
- title: SET CHARACTER HEIGHT                             34
  contents:
  - 'SET CHARACTER HEIGHT                             34

    '
- title: SET CHARACTER UP VECTOR                          34
  contents:
  - 'SET CHARACTER UP VECTOR                          34

    '
- title: SET TEXT PATH                                    35
  contents:
  - 'SET TEXT PATH                                    35

    '
- title: SET TEXT ALIGNMENT                               36
  contents:
  - 'SET TEXT ALIGNMENT                               36

    '
- title: SET FILL AREA INDEX                              37
  contents:
  - 'SET FILL AREA INDEX                              37

    '
- title: SET FILL AREA INTERIOR STYLE                     38
  contents:
  - 'SET FILL AREA INTERIOR STYLE                     38

    '
- title: SET FILL AREA STYLE INDEX                        39
  contents:
  - 'SET FILL AREA STYLE INDEX                        39

    '
- title: SET FILL AREA COLOUR INDEX                       40
  contents:
  - 'SET FILL AREA COLOUR INDEX                       40

    '
- title: SET PATTERN SIZE                                 41
  contents:
  - 'SET PATTERN SIZE                                 41

    '
- title: SET PATTERN REFERENCE POINT                      42
  contents:
  - 'SET PATTERN REFERENCE POINT                      42

    '
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: SET ASPECT SOURCE FLAGS                          43
  contents:
  - 'SET ASPECT SOURCE FLAGS                          43

    '
- title: SET PICK IDENTIFIER                              44
  contents:
  - 'SET PICK IDENTIFIER                              44

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Workstation Attributes
  contents:
  - 'Workstation Attributes

    '
- title: SET POLYLINE REPRESENTATION (GKSM-OUT,...)       51
  contents:
  - 'SET POLYLINE REPRESENTATION (GKSM-OUT,...)       51

    '
- title: SET POLYMARKER REPRESENTATION (GKSM-OUT,...)     52
  contents:
  - 'SET POLYMARKER REPRESENTATION (GKSM-OUT,...)     52

    '
- title: SET TEXT REPRESENTATION (GKSM-OUT,...)           53
  contents:
  - 'SET TEXT REPRESENTATION (GKSM-OUT,...)           53

    '
- title: SET FILL AREA REPRESENTATION (GKSM-OUT,...)      54
  contents:
  - 'SET FILL AREA REPRESENTATION (GKSM-OUT,...)      54

    '
- title: SET PATTERN REPRESENTATION (GKSM-OUT,...)        55
  contents:
  - 'SET PATTERN REPRESENTATION (GKSM-OUT,...)        55

    '
- title: SET COLOUR REPRESENTATION (GKSM-OUT,...)         56
  contents:
  - 'SET COLOUR REPRESENTATION (GKSM-OUT,...)         56

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Transformation Functions
  contents:
  - 'Transformation Functions

    '
- title: SET WINDOW of current normalization              34, 41, 42
  contents:
  - 'SET WINDOW of current normalization              34, 41, 42

    '
- title: transformation
  contents:
  - 'transformation

    '
- title: SET VIEWPOINT of current normalization           61, 34, 41, 42
  contents:
  - 'SET VIEWPOINT of current normalization           61, 34, 41, 42

    '
- title: transformation
  contents:
  - 'transformation

    '
- title: SELECT NORMALIZATION TRANSFORMATION              61, 34, 41, 42
  contents:
  - 'SELECT NORMALIZATION TRANSFORMATION              61, 34, 41, 42

    '
- title: SET CLIPPING INDICATOR                           61
  contents:
  - 'SET CLIPPING INDICATOR                           61

    '
- title: SET WORKSTATION WINDOW (GKSM-OUT,...)            71
  contents:
  - 'SET WORKSTATION WINDOW (GKSM-OUT,...)            71

    '
- title: SET WORKSTATION WINDOW VIEWPORT (GKSM-OUT,...)   72
  contents:
  - 'SET WORKSTATION WINDOW VIEWPORT (GKSM-OUT,...)   72

    '
- title: 'Note:  item 61 (CLIPPING RECTANGLE) is described more fully in E.2.2.'
  contents:
  - 'Note:  item 61 (CLIPPING RECTANGLE) is described more fully in E.2.2.

    '
- title: 'Note: When the current normalization transformation is altered, items'
  contents:
  - 'Note: When the current normalization transformation is altered, items

    '
- title: corresponding to attributes containing coordinate information are sent
  contents:
  - 'corresponding to attributes containing coordinate information are sent

    '
- title: (items 34, 41, and 42).
  contents:
  - '(items 34, 41, and 42).

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Segment Functions
  contents:
  - 'Segment Functions

    '
- title: CREATE SEGMENT                                   81
  contents:
  - 'CREATE SEGMENT                                   81

    '
- title: CLOSE SEGMENT                                    82
  contents:
  - 'CLOSE SEGMENT                                    82

    '
- title: RENAME SEGMENT                                   83
  contents:
  - 'RENAME SEGMENT                                   83

    '
- title: DELETE SEGMENT                                   84
  contents:
  - 'DELETE SEGMENT                                   84

    '
- title: DELETE SEGMENT FROM WORKSTATION (GKSM-OUT,...)   84
  contents:
  - 'DELETE SEGMENT FROM WORKSTATION (GKSM-OUT,...)   84

    '
- title: ASSOCIATE SEGMENT WITH WORKSTATION               81, (21-44), (11-16),
  contents:
  - 'ASSOCIATE SEGMENT WITH WORKSTATION               81, (21-44), (11-16),

    '
- title: (GKSM-OUT,...)                                   (61), 82
  contents:
  - '(GKSM-OUT,...)                                   (61), 82

    '
- title: COPY SEGMENT TO WORKSTATION (GKSM-OUT,...)       (21-44), (11-16), (61)
  contents:
  - 'COPY SEGMENT TO WORKSTATION (GKSM-OUT,...)       (21-44), (11-16), (61)

    '
- title: INSERT SEGMENT                                   (21-44), (11-16), (61)
  contents:
  - 'INSERT SEGMENT                                   (21-44), (11-16), (61)

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: Segment Attributes
  contents:
  - 'Segment Attributes

    '
- title: SET SEGMENT TRANSFORMATION                       91
  contents:
  - 'SET SEGMENT TRANSFORMATION                       91

    '
- title: SET VISIBILITY                                   92
  contents:
  - 'SET VISIBILITY                                   92

    '
- title: SET HIGHLIGHTING                                 93
  contents:
  - 'SET HIGHLIGHTING                                 93

    '
- title: SET SEGMENT PRIORITY                             94
  contents:
  - 'SET SEGMENT PRIORITY                             94

    '
- title: SET DETECTABILITY                                95
  contents:
  - 'SET DETECTABILITY                                95

    '
- title: ________________________________________________________________________
  contents:
  - '________________________________________________________________________

    '
- title: Metafile Functions
  contents:
  - 'Metafile Functions

    '
- title: WRITE ITEM TO GKSM                               > 100
  contents:
  - 'WRITE ITEM TO GKSM                               > 100

    '
- title: ________________________________________________________________________
  contents:
  - "________________________________________________________________________\n  \
    \ E.4  Interpretation of Metafiles\n      E.4.1  Introduction\n         The interpretation\
    \ of metafiles in GKS is described in 4.9\n         [14]. The effects of INTERPRET\
    \ ITEM for all types of metafile\n         item are described in the following\
    \ sections. Items are grouped\n         by class of functionality.\n      E.4.2\
    \  Control Items\n         Interpretation of items in this class is described\
    \ under the\n         definitions of each item in E.5. ([14] reads \"E.2.4\" instead\
    \ of\n         \"E.5\" which we believe is an error).\n      E.4.3  Output Primitives\n\
    \         Interpretation of items in this class generates output\n         corresponding\
    \ to the primitive functions, except that\n         coordinates of points are\
    \ expressed in NDC. Primitive\n         attributes bound to primitives are those\
    \ which have originated\n         from interpretation of primitive attribute items\
    \ in this\n         particular metafile (see E.4.4).\n      E.4.4  Output Primative\
    \ Attributes\n         Interpretation of items in this class sets values for use\
    \ in\n         the display of primitives subsequently originating from this\n\
    \         particular metafile (see E.4.3). No changes are made to entries\n  \
    \       in the GKS state list.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      E.4.5  Workstation Attributes\n\
    \         Interpretation of items in this class has the same effect as\n     \
    \    invocation of the corresponding GKS functions shown in Table\n         E1.\
    \ The GKS functions are performed on all active workstations.\n      E.4.6  Transformations\n\
    \         Interpretation of a clipping rectangle item sets values for use\n  \
    \       in clipping output primitives subsequently originating from\n        \
    \ this particular metafile. No changes are made to entries in the\n         GKS\
    \ state list. Interpretation of other items in this class\n         (WORKSTATION\
    \ WINDOW and WORKSTATION VIEWPORT) causes the\n         invocation of the corresponding\
    \ GKS functions on all active\n         workstations.\n      E.4.7   Segment Manipulation\n\
    \         Interpretation of items in this class has the same effect as\n     \
    \    invocation of the corresponding GKS functions shown in Table\n         E1.\
    \ (Item 84 causes an invocation of DELETE SEGMENT.)\n      E.4.8 Segment Attributes\n\
    \         Interpretation of items in this class has the same effect as\n     \
    \    invocation of the corresponding GKS functions shown in Table\n         E1.\n\
    \   E.5  Control Items\n      FILE HEADER\n         | GKSM | N | D | V | H | T\
    \ | L | I | R | F | RI | ZERO | ONE |\n"
- title: All fields in the file header item have fixed length.  Numbers are
  contents:
  - 'All fields in the file header item have fixed length.  Numbers are

    '
- title: formated according to ISO 6093 - Format F1.
  contents:
  - 'formated according to ISO 6093 - Format F1.

    '
- title: 'General Information:'
  contents:
  - 'General Information:

    '
- title: GKSM    4 bytes   containing string 'GKSM'
  contents:
  - 'GKSM    4 bytes   containing string ''GKSM''

    '
- title: N       40 bytes  containing name of author/installation
  contents:
  - 'N       40 bytes  containing name of author/installation

    '
- title: D       8 bytes   date (year/month/day, e.g., 79/12/31)
  contents:
  - 'D       8 bytes   date (year/month/day, e.g., 79/12/31)

    '
- title: 'V       2 bytes   version number: the metafile described here has'
  contents:
  - "V       2 bytes   version number: the metafile described here has\n         \
    \         version number 1\n"
- title: H       2 bytes   integer specifying how many bytes of the string 'GKSM'
  contents:
  - "H       2 bytes   integer specifying how many bytes of the string 'GKSM'\n  \
    \                are repeated at the beginning of each record.\n             \
    \     Possible values:  0, 1, 2, 3, 4\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: T       2 bytes   length of item type indicator field
  contents:
  - 'T       2 bytes   length of item type indicator field

    '
- title: L       2 bytes   length of item data record length indicator field
  contents:
  - 'L       2 bytes   length of item data record length indicator field

    '
- title: I       2 bytes   length of field for each integer in the
  contents:
  - "I       2 bytes   length of field for each integer in the\n                 \
    \ item data record (applied to all data marked (i)\n                  in the item\
    \ description)\n"
- title: R       2 bytes   length of field for each real in the item data record
  contents:
  - "R       2 bytes   length of field for each real in the item data record\n   \
    \               (applies to all data marked (r) in the item\n                \
    \  description).\n"
- title: 'Specification of Number Representation:'
  contents:
  - 'Specification of Number Representation:

    '
- title: 'F       2 bytes   Possible values:  1, 2.  This applies to all data'
  contents:
  - "F       2 bytes   Possible values:  1, 2.  This applies to all data\n       \
    \           in the items marked (i) or (r) and to item type\n                \
    \  and item data record length:\n                  1:  all numbers are formatted\
    \ according to ISO 6093\n                  2:  all numbers (except in the file\
    \ header) are\n                  stored in an internal binary format\n"
- title: 'RI      2 bytes   Possible values:  1, 2.  This is the number'
  contents:
  - "RI      2 bytes   Possible values:  1, 2.  This is the number\n             \
    \     representation for data marked (r):\n                  1 = real, 2 = integer\n"
- title: ZERO    11 bytes  integer equivalent to 0.0, if RI = 2
  contents:
  - 'ZERO    11 bytes  integer equivalent to 0.0, if RI = 2

    '
- title: ONE     11 bytes  integer equivalent to 1.0, if RI = 2
  contents:
  - "ONE     11 bytes  integer equivalent to 1.0, if RI = 2\n         After the file\
    \ header, which is in fixed format, all values in\n         the following items\
    \ are in the format defined by the file\n         header. For the following description,\
    \ the setting:\n                          H = 4; T = 3; F = 1\n         is assumed.\
    \ In addition to formats (c), (i) and (r), which are\n         already described,\
    \ (p) denotes a point represented by a pair of\n         real numbers (2r). The\
    \ notation allows the single letter to be\n         preceded by an expression,\
    \ indicating the number of values of\n         that type.\n         {Explanatory\
    \ comments have been added to some item\n         specifications; these are not\
    \ part of the GKS Appendix E and\n         they are enclosed in braces {}. A complete\
    \ definition of the\n         generation and interpretation of the GKSM items\
    \ is given by the\n         definition of the corresponding GKS functions [14].}\n\
    \      END ITEM\n         | 'GKSM 0' | L |\n         Last item of every GKS Metafile.\
    \ Sets condition for the error.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      CLEAR WORKSTATION\n  \
    \       | 'GKSM 1' | L | C |\n         Requests CLEAR WORKSTATION on all active\
    \ workstations.\n         C(i):  clearing control flag\n                (0 = CONDITIONAL,\
    \ 1 = ALWAYS)\n      REDRAW ALL SEGMENTS ON WORKSTATION\n         | 'GKSM  3'\
    \ | L | R |\n         Requests UPDATE WORKSTATION on all active workstations.\n\
    \         R(i):  regeneration flag\n                (0 = PERFORM, 1 = SUSPEND)\n\
    \      DEFERRAL STATE\n         | 'GKSM  4' | L | D | R |\n         Requests SET\
    \ DEFERRAL STATE on all active workstations.\n         D(i): deferral mode\n \
    \              (0 = ASAP, 1 = BNIG, 2 = BNIL, 3 = ASTI)\n         R(i):  implicit\
    \ regeneration mode\n                (0 = ALLOWED, 1 = SUPPRESSED)\n         {This\
    \ item provides control over the occurrence of the visual\n         effect of\
    \ GKS functions in order to optimize the use of\n         workstation capabilities\
    \ according to application needs.}\n      MESSAGE\n         | 'GKSM  5' | L |\
    \ N | T |\n         Requests MESSAGE on all active workstations.\n         N(i):\
    \   number of characters in string\n         T(Nc):  string with N characters.\n\
    \         {The message is not part of a metafile output primitives; the\n    \
    \     message is only for interpretation by workstation operators.}\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      ESCAPE\n         | 'GKSM\
    \  6' | L | FI | L | M | I | R |\n         Requests ESCAPE\n         FI(i):  function\
    \ identifier\n         L(i):   length of integer data in data record\n       \
    \  M(i):   length of real data in data record\n         I(Li):  integer data\n\
    \         R(Mr):  real data.\n         {This item permits the invocation of a\
    \ specific non-standard\n         escape function FI. The execution of the function\
    \ with the\n         given parameters must not alter the GKS state list nor produce\n\
    \         geometrical output.}\n   E.6  Items for Output Primitives\n      POLYLINE\n\
    \         | 'GKSM 11' | L | N | P |\n         N(i):   number of points of the\
    \ polyline\n         P(Np):  list of points\n      POLYMARKER\n         | 'GKSM\
    \ 12' | L | N | P |\n         N(i):   number of points\n         P(Np):  list\
    \ of points.\n      TEXT\n         | 'GKSM 13' | L | P | N | T |\n         P(p):\
    \   starting point of character string\n         N(i):   number of characters\
    \ in string T\n         T(Nc):  string with N characters from the set of ISO 646\n\
    \      FILL AREA\n         | 'GKSM 14' | L | N | P |\n         N(i):   number\
    \ of points\n         P(Np):  list of points.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      CELL ARRAY\n         |\
    \ 'GKSM 15' | L | P | Q | R | N | M | CT |\n         P(p),Q(p),R(p):  coordinates\
    \ of corner points of pixel array\n                          (P and Q are the\
    \ images of the points P and\n                          Q specified in the function\
    \ CELL ARRAY and\n                          R is another corner)\n         M(i):\
    \            number of rows in array\n         N(i):            number of columns\
    \ in array\n         CT(MNi):         array of colour indices stored row by row\n\
    \         {This item permits passing raster images to GKS. The raster\n      \
    \   image is defined by the colour index matrix CT, and its World\n         Coordinate\
    \ position given by points P and Q.}\n      GENERALIZED DRAWING PRIMITIVE\n  \
    \       | 'GKSM 16' | L | GI | N | P | L | M | I | R |\n         GI(i):  GDP identifier\n\
    \         N(i):   number of points\n         P(Np):  list of points\n        \
    \ L(i):   length of integer data in data record\n         M(i):   length of real\
    \ data in data record\n         I(Li):  integer data\n         R(Mr):  real data.\n\
    \         {This item provides a standard way for drawing additional\n        \
    \ non-standard output primitives. The generalized drawing\n         primitive\
    \ GI is drawn according to the point list P and the\n         data record in I\
    \ and R.}\n   E.7  Items for Output Primitive Attributes\n      POLYLINE INDEX\n\
    \         | 'GKSM 21' | L | LT |\n         LT(i):  linetype\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      LINEWIDTH SCALE FACTOR\n\
    \         | 'GKSM 23' | L | LW |\n         LW(r):  linewidth scale factor\n  \
    \       {In GKS, the line width is not affected by GKS transformations.\n    \
    \     However, the effective line width is calculated as the product\n       \
    \  of the nominal line width times the line width scale factor in\n         effect\
    \ when a line is drawn.}\n      POLYLINE COLOUR INDEX\n         | 'GKSM 24' |\
    \ L | CI |\n         CI(i):  polyline colour index\n      POLYMARKER INDEX\n \
    \        | 'GKSM 25' | L | I |\n         I(i):  polymarker index\n      MARKER\
    \ TYPE\n         | 'GKSM 26' | L | MT |\n         MT(i):  marker type\n      MARKER\
    \ SIZE SCALE FACTOR\n         | 'GKSM 27' | L | MS |\n         MS(r):  marker\
    \ size scale factor\n         {In GKS, the marker size is not affected by GKS\n\
    \         transformations. However, the effective marker size is\n         calculated\
    \ as the product of the nominal marker size times the\n         marker size scale\
    \ factor in effect when a marker is drawn.}\n      POLYMARKER COLOUR INDEX\n \
    \        | 'GKSM 28' | L | CI |\n         CI(i):  polymarker colour index\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      TEXT INDEX\n         |\
    \ 'GKSM 29' | L | I |\n         I(i):  text index\n      TEXT FONT AND PRECISION\n\
    \         | 'GKSM 30' | L | F | P |\n         F(i):  text font\n         P(i):\
    \  text precision\n         (0 = STRING, 1 = CHAR, 2 = STROKE)\n      CHARACTER\
    \ EXPANSION FACTOR\n         | 'GKSM 31' | L | CEF |\n         CEF(r):  character\
    \ expansion factor\n         {This item allows the manipulation of the width/height\
    \ of the\n         character body. The width of the character body is scaled by\n\
    \         the CEF factor.}\n      CHARACTER SPACING\n         | 'GKSM 32' | L\
    \ | CS |\n         CS(r):  character spacing\n      TEXT COLOUR INDEX\n      \
    \   | 'GKSM 33' | L | CI |\n         CI(i):  text colour index\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      CHARACTER VECTORS\n  \
    \       | 'GKSM 34' | L | CH | CW |\n         CH(2r):  character height vector\n\
    \         CW(2r):  character width vector\n         Note:  These vectors are the\
    \ height and width vectors described\n         in 4.4.5 of [14].\n         {The\
    \ character height vector is parallel to the character up\n         vector and\
    \ has a length equal to character height. The\n         character height specifies\
    \ the height of a capital letter. The\n         character width vector is perpendicular\
    \ to the height vector,\n         in the direction of the character baseline,\
    \ and has the same\n         length.}\n      TEXT PATH\n         | 'GKSM 35' |\
    \ L | P |\n         P(i):  text path\n         (0 = LEFT, 1 = RIGHT, 2 = UP, 3\
    \ = DOWN)\n      TEXT ALIGNMENT\n         | 'GKSM 36' | L | H | V |\n        \
    \ H(i):  horizontal character alignment\n                (0 = NORMAL, 1 = LEFT,\
    \ 2 = CENTRE, 3 = RIGHT)\n         V(i):  vertical character alignment\n     \
    \           (0 = NORMAL, 1 = TOP, 2 = CAP, 3 = HALF, 4 = BASE,\n             \
    \    5 = BOTTOM)\n      FILL AREA INDEX\n         | 'GKSM 37' | L | I |\n    \
    \     I(i):  fill area index\n      FILL AREA INTERIOR STYLE\n         | 'GKSM\
    \ 38' | L | S |\n         S(i):  fill area interior style\n                (0\
    \ = HOLLOW, 1 = SOLID, 2 = PATTERN, 3 = HATCH)\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      FILL AREA STYLE INDEX\n\
    \         | 'GKSM 39' | L | SI |\n         SI(i):  fill area style index\n   \
    \   FILL AREA COLOUR INDEX\n         | 'GKSM 40' | L | CI |\n         CI(i): \
    \ fill area colour index\n      PATTERN SIZE\n         | 'GKSM 41' | L | PW |\
    \ PH |\n         PW(2r):  pattern width vector\n         PH(2r):  pattern height\
    \ vector\n         {One style for filling areas is with a pattern of color cells.\n\
    \         Such a pattern is defined by an array of color indices which is\n  \
    \       mapped into a pattern rectangle with dimensions given by PW and\n    \
    \     PH.}\n      PATTERN REFERENCE POINT\n         | 'GKSM 42' | L | P |\n  \
    \       P(p):  reference point\n         {One style for filling areas is with\
    \ a pattern of color cells.\n         Such a pattern is defined by an array of\
    \ color indices which is\n         mapped into a pattern rectangle whose lower\
    \ left corner is\n         given by P.}\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      ASPECT SOURCE FLAGS\n\
    \         | 'GKSM 43' | L | F |\n         F(13i):  aspect source flags\n     \
    \             (0 = BUNDLED, 1 = INDIVIDUAL)\n         {An application can set\
    \ an output primitive attribute to either\n         bundled or individual. Bundled\
    \ attributes are\n         workstation-dependent, their binding is delayed, and\
    \ their\n         values can change dynamically. Individual attributes are global\n\
    \         attributes, they are bound immediately, and their value is\n       \
    \  static and cannot be manipulated.}\n      PICK IDENTIFIER\n         | 'GKSM\
    \ 44' | L | P |\n         P(i):  pick identifier\n   E.8  Items for Workstation\
    \ Attributes\n      POLYLINE REPRESENTATION\n         | 'GKSM 51' | L | I | LT\
    \ | LW | CI |\n         I(i):   polyline index\n         LT(i):  linetype number\n\
    \         LW(r):  linewidth scale factor\n         CI(i):  polyline colour index\n\
    \      POLYMARKER REPRESENTATION\n         | 'GKSM 52' | L | I | MT | MS | CI\
    \ |\n         I(i):   polymarker index\n         MT(i):  marker type\n       \
    \  MS(r):  marker size scale factor\n         CI(i):  polymarker colour index\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      TEXT REPRESENTATION\n\
    \         | 'GKSM 53' | L | I | F | P | CEF | CS | CI |\n         I(i):    text\
    \ index\n         F(i):    text font\n         P(i):    text precision\n     \
    \    (0 = STRING, 1 = CHAR, 2 = STROKE)\n         CEF(r):  character expansion\
    \ factor\n         CS(r):   character spacing\n         CI(i):   text colour index\n\
    \      FILL AREA REPRESENTATION\n         | 'GKSM 54' | L | I | S | SI | CI |\n\
    \         I(i):   fill area index\n         S(i):   fill area interior style\n\
    \         (0 = HOLLOW, 1 = SOLID, 2 = PATTERN, 3 = HATCH) SI(i):  fill\n     \
    \    area style index\n         CI(i):  fill area colour index\n      PATTERN\
    \ REPRESENTATION\n         | 'GKSM 55' | L | I | N | M | CT |\n         I(i):\
    \     pattern index\n         N(i):     number of columns in array*\n        \
    \ M(i):     number of rows in array\n         CT(MNi):  table of colour indices\
    \ stores row by row\n            {* The ANSI document reads \"area\" instead of\
    \ \"array\".}\n         {One style for filling areas is with a pattern of color\
    \ cells.\n         Such a pattern is defined by a pattern representation.}\n \
    \     COLOUR REPRESENTATION\n         | 'GKSM 56' | L | CI | RGB |\n         CI(i):\
    \    colour index\n         RGB(3r):  red, green, blue intensities\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   E.9  Items for Transformations\n\
    \      CLIPPING RECTANGLE\n         | 'GKSM 61' | L | C |\n         C(4r):  limits\
    \ of clipping rectangle (XMIN, XMAX, YMIN, YMAX)\n      WORKSTATION WINDOW\n \
    \        | 'GKSM 71' | L | W |\n         W(4r):  limits of workstation window\
    \ (XMIN, XMAX, YMIN, YMAX)\n         {GKS includes a workstation transformation\
    \ that maps a\n         rectangle of the NDC space (a workstation window) into\
    \ a\n         rectangle of the device coordinate space (a workstation\n      \
    \   viewport).}\n      WORKSTATION VIEWPORT\n         | 'GKSM 72' | L | V |\n\
    \         V(4r):  limits of workstation viewport (XMIN, XMAX, YMIN, YMAX)\n  \
    \ E.10  Items for Segment Manipulation\n      CREATE SEGMENT\n         | 'GKSM\
    \ 81' | L | S |\n         S(i):  segment name\n      CLOSE SEGMENT\n         |\
    \ 'GKSM 82' | L |\n         indicates end of segment\n      RENAME SEGMENT\n \
    \        | 'GKSM 83' | L | SO | SN |\n         SO(i):  old segment name\n    \
    \     SN(i):  new segment name\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      DELETE SEGMENT\n     \
    \    | 'GKSM 84' | L | S |\n         S(i):  segment name\n   E.11  Items for Segment\
    \ Attributes\n      SET SEGMENT TRANSFORMATION\n         | 'GKSM 91' | L | S |\
    \ M |\n         S(i):   segment name\n         M(6r):  transformation matrix\n\
    \                 upper and center rows of a 3x3 matrix representing\n       \
    \          a 2D homogeneous transformation [9]\n                 M 11  M 12  M\
    \ 13  M 21  M 22  M 23\n         {This differs from the ANSI X3.124 Jan. 5 1984\
    \ document, in the\n         matrix elements indicated. We believe there is an\
    \ error in such\n         document.}\n      SET VISIBILITY\n         | 'GKSM 92'\
    \ | L | S | V |\n         S(i):  segment name\n         V(i):  visibility\n  \
    \              (0 = VISIBLE, 1 = INVISIBLE)\n      SET HIGHLIGHTING\n        \
    \ | 'GKSM 93' | L | S | H |\n         S(i):  segment name\n         H(i):  highlighting\n\
    \                (0 = NORMAL, 1 = HIGHLIGHTED)\n      SET SEGMENT PRIORITY\n \
    \        | 'GKSM 94' | L | S | P |\n         S(i):  segment name\n         P(r):\
    \  segment priority\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n      SET DETECTABILITY\n  \
    \       | 'GKSM 95' | L | S | D |\n         S(i):  segment name\n         D(i):\
    \  detectability\n                (0 = UNDETECTABLE, 1 = DETECTABLE)\n   E.12\
    \  User Items\n      USER ITEM\n         | 'GKSMXXX' | L | D |\n         XXX \
    \  > 100\n         D:    user data (L bytes)\n         {The PIGCF level U items\
    \ are encoded as GKSM USER ITEM elements\n         so that a PIGCF file will conform\
    \ to the GKSM metafile\n         specification.}\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: APPENDIX B
  contents:
  - "APPENDIX B\n   Example of PIGCF Use in Conferencing\n   This section presents\
    \ an example illustrating the proposed PIGCF\n   graphical component in an audio-graphics\
    \ conference exchange. We\n   present only the graphical part of the conference\
    \ exchange, which\n   actually would be complemented with speech. For the sake\
    \ of briefness\n   the example does not contain all the parameter negotiation\
    \ that a\n   conference set-up would require.\n   The example is about an on-line\
    \ audio-graphics conference between a\n   Navy command and control center and\
    \ a Navy task force. The PIGCF\n   items shown do not belong to a single transmission\
    \ stream. The stream\n   they belong to is determined by the station that transmits\
    \ them, and\n   the identification of the transmitter belongs to lower level\n\
    \   communication protocols. We use the character encoding, rather than\n   the\
    \ binary one, for this PIGCF example. We illustrate just a few of\n   the possible\
    \ groups of items that could be batched in this example.\n   The plot of the example\
    \ is as follows.\n   The command center (center) establishes a conference with\
    \ some ships\n   in a task force (platforms) to coordinate the interception of\
    \ an\n   unidentified ship that has been sighted in a conflict area. After\n \
    \  recalling graphical libraries, all conference sites can see in their\n   screens\
    \ a map of the sighting area as well as iconic representations\n   of the task\
    \ force ships. Then the center interactively draws an\n   iconic representation\
    \ of the unidentified vessel, scales it, and\n   places it in the sighting location.\n\
    \   The platforms explain possible courses of action using graphical\n   pointers.\
    \ The center draws the expected trajectory of the\n   unidentified ship and the\
    \ platforms situate the task force icons at\n   the expected points of interception.\
    \ Then the center zooms into the\n   interception area and the platforms use rubber\
    \ bands to discuss\n   interception maneuvers.\n   Now we proceed to list the\
    \ PIGCF items exchanged. The  center\n   initiates  the conference graphical set-up\
    \ with the FILE HEADER item\n   to set basic representation parameters for  the\
    \  graphical\n   information  to  be exchanged.   This item can be interpreted\n\
    \   according to its definition in E.5 [14].  The most important\n   parameter\
    \ selections for this example are:\n      i)   The items contain 0 characters\
    \ of the \"GKSM\" string in the\n           identification field of the item header.\n\
    \      ii)  The item type indicator field containing the PIGCF\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n           item number is three\
    \ bytes long in each item.\n      iii) The integers are 4 bytes long, and the\
    \ reals 6 bytes long.\n      iv)  The item data record length indicator is 2 bytes\
    \ long.\n   We will obey the PIGCF specification field lengths and the aforesaid\n\
    \   field length settings. However, we will add one space before and\n   after\
    \ the \"|\" separator to improve legibility. Also, every item will\n   be preceded\
    \ with its name to help identification.\n   FILE HEADER:\n      | GKSM | center\
    \ | 84/11/10 | 1 | 0 | 3 | 2 | 4 | 6 | 1 | 1\n      |           |           |\n\
    \   The center states the boundaries of the work station window for the\n   conference.\n\
    \   WORKSTATION WINDOW:  |  71 | 24 |  0.0  0.5  0.0  0.375 |\n   In this example,\
    \ we assume that the conferencing work stations  use\n   world coordinates for\
    \ the internal representation of positional\n   information. Accordingly, the\
    \ center states the boundaries of the\n   world  window for the normalization\
    \ transformation used in the\n   conference.\n   SET WINDOW:  | 134 | 28 |  0.0\
    \  320.0  0.0  240.0 |\n   The center informs the location of its local NDC viewport,\
    \ however,\n   other conferees can choose different NDC viewports for the same\n\
    \   transformation, but their work station window should include the\n   conference's.\
    \  All systems record the conference: world window, NDC\n   viewport, and work\
    \ station widow.\n   SET VIEWPORT:  | 135 | 28 |  0.0  0.5  0.0  0.375 |\n   The\
    \ center recalls graphical libraries containing geographical maps\n   of  the\
    \  crisis  area  and icons of the task forces in the area. It\n   also displays\
    \ a graphical object that provides a background picture.\n   RECALL LIBRARY: \
    \ | 139 |  9 | caribbean |\n   DISPLAY OBJECT:  | 128 | 11 | coast_lines |\n \
    \  RECALL LIBRARY:  | 139 | 10 | task_units |\n   The center proceeds to instantiate\
    \ one of the task forces in the\n   task_units library. This is done by recalling\
    \ some of the library\n   objects and applying transformations to the objects,\
    \ later. Since set\n   window, set viewport, and recall library belong to the\
    \ update\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   Group-2, they can be batched\
    \ until display object, from update\n   Group-1, is entered. The second recall\
    \ library can be batched\n   together with the following begin instantiation until\
    \ display object\n   is produced. The rest of the example contains more cases\
    \ of item\n   sequences which can be batched; however, for briefness we do not\n\
    \   indicate any more of them.\n   BEGIN INSTANTIATION:  | 124 | 15 | US_CONSTITUTION\
    \ |\n   DISPLAY OBJECT:       | 128 | 15 | US_CONSTITUTION |\n   TRANSFORM OBJECT:\
    \     | 126 | 55 |   15 | US_CONSTITUTION |\n                           0.1  \
    \ 0.0   0.0   0.0   0.1   0.0 |\n   TRANSFORM OBJECT:     | 126 | 55 |   15 |\
    \ US_CONSTITUTION |\n                           0.1   0.0  0.312   0.0   0.1 \
    \ 0.078 |\n   END INSTANTIATION:    | 125 |  0 |\n   BEGIN INSTANTIATION:  | 124\
    \ | 13 | US_NEW_JERSEY |\n   DISPLAY OBJECT:       | 128 | 13 | US_NEW_JERSEY\
    \ |\n   TRANSFORM OBJECT:     | 126 | 53 |   13 | US_NEW_JERSEY |\n          \
    \                 0.1   0.0  0.0   0.0   0.1   0.0 |\n   TRANSFORM OBJECT:   \
    \  | 126 | 53 |   13 | US_NEW_JERSEY |\n                           0.1   0.0 \
    \ 0.312   0.0   0.1  0.093 |\n   END INSTANTIATION:    | 125 |  0 |\n   Next the\
    \ center sets values for two output primitive attributes in\n   preparation for\
    \ drawing a new icon on the screens. We assume that all\n   the other attributes\
    \ have been assigned default values as a result of\n   the conference set-up.\n\
    \   POLYLINE INDEX:         |  21 |  4 |   20 |\n   POLYLINE COLOUR INDEX:  |\
    \  24 |  4 |  200 |\n   The following items correspond to the interactive definition\
    \ of the\n   unidentified vessel. Since the definition is done interactively,\
    \ the\n   vessel image remains visible on the screens after definition.\n   BEGIN\
    \ DEFINITION:  | 120 |  0 |\n   POLYLINE:          |  11 | 64 |    5 |\n   0.047\
    \  0.063  0.063  0.047  0.125  0.047  0.14  0.063  0.047  0.047 |\n   POLYLINE:\
    \          |  11 | 52 |    3 |\n                 0.078 0.063  0.078  0.078  0.109\
    \  0.078  0.109  0.063 |\n   END DEFINITION:    | 121 |  8 | sighting |\n   Then\
    \ the unidentified vessel \"sighting\" is scaled and placed at the\n   sighting\
    \ site.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   BEGIN INSTANTIATION:  | 124\
    \ |  8 | sighting |\n   TRANSFORM OBJECT:     | 126 | 48 |    8 | sighting |\n\
    \                           0.2   0.0   0.0\n                           0.0  \
    \ 0.2   0.0 |\n   TRANSFORM OBJECT:     | 126 | 48 |    8 | sighting |\n     \
    \                      0.1   0.0 0.156\n                           0.0   0.1 \
    \ 0.016 |\n   END INSTANTIATION:    | 125 |  0 |\n   The center and the platforms\
    \ use graphical pointer movements to\n   discuss possible routes the unidentified\
    \ vessel might follow. We only\n   show a few pointer updates. In practice, there\
    \ would typically be a\n   large number of points transmitted to convey the movement\
    \ of the\n   pointers over the screens.\n   from the center:\n   POINTER TRACKING:\
    \  | 137 | 16 |    0 |  0.39  0.032 |\n   POINTER TRACKING:  | 137 | 16 |    0\
    \ |  0.388 0.035 |\n   POINTER TRACKING:  | 137 | 16 |    0 |  0.388 0.039 |\n\
    \   POINTER TRACKING:  | 137 | 16 |    0 |  0.386 0.04  |\n   from one of the\
    \ platforms:\n   POINTER TRACKING:  | 137 | 16 |    0 |  0.22  0.016 |\n   POINTER\
    \ TRACKING:  | 137 | 16 |    0 |  0.222 0.159 |\n   POINTER TRACKING:  | 137 |\
    \ 16 |    0 |  0.233 0.157 |\n   POINTER TRACKING:  | 137 | 16 |    0 |  0.24\
    \  0.155 |\n   The center now draws the expected route to be followed by the\n\
    \   unidentified ship. This time the pointer trace is recorded on the\n   screen\
    \ by drawing a line.\n   POINTER TRACKING:  | 137 | 16 |    1 |  0.388 0.038 |\n\
    \   POINTER TRACKING:  | 137 | 16 |    1 |  0.386 0.038 |\n   POINTER TRACKING:\
    \  | 137 | 16 |    1 |  0.386 0.052 |\n   POINTER TRACKING:  | 137 | 16 |    1\
    \ |  0.375 0.078 |\n   POINTER TRACKING:  | 137 | 16 |    1 |  0.369 0.105 |\n\
    \   POINTER TRACKING:  | 137 | 16 |    1 |  0.361 0.125 |\n   POINTER TRACKING:\
    \  | 137 | 16 |    1 |  0.352 0.144 |\n   POINTER TRACKING:  | 137 | 16 |    1\
    \ |  0.351 0.156 |\n   POINTER TRACKING:  | 137 | 16 |    1 |  0.35  0.16  |\n\
    \   A platform moves the two US ship icons to interception positions.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   TRANSFORM OBJECT:  | 126\
    \ | 55 |   15 | US_CONSTITUTION |\n                        1.0   0.0 0.16\n  \
    \                      0.0   1.0 -0.046 |\n   TRANSFORM OBJECT:  | 126 | 53 |\
    \   13 | US_NEW_JERSEY |\n                        1.0   0.0 0.113\n          \
    \              0.0   1.0 -0.034 |\n   The center zooms into the interception area\
    \ in order to obtain a\n   larger view for further discussion.\n   WORKSTATION\
    \ WINDOW:  |  71 | 24 | 0.286 0.403 0.077 0.177 |\n   The two platforms indicate\
    \ their striking ranges using circular\n   rubber bands centered at each ship.\
    \ For each platform, we show first\n   the echo reference point and then two echo\
    \ feedback points. Typically\n   there will be a large number of feedback points.\n\
    \   RUBBER BAND:  | 138 | 10 |   0 | 0.335 0.125 |\n   RUBBER BAND:  | 138 | 10\
    \ |   3 | 0.35  0.128 |\n   RUBBER BAND:  | 138 | 10 |   3 | 0.37  0.128 |\n \
    \  RUBBER BAND:  | 138 | 10 |   0 | 0.384 0.13  |\n   RUBBER BAND:  | 138 | 10\
    \ |   3 | 0.367 0.128 |\n   RUBBER BAND:  | 138 | 10 |   3 | 0.346 0.129 |\n \
    \  Once the interception strategy has been agreed upon, the center zooms\n   out\
    \ to the original, larger picture.\n   WORKSTATION WINDOW:  |  71 | 24 |    0.0\
    \   0.5   0.0 0.375 |\n   The center terminates the conference\n   END ITEM: \
    \ |   0 |  0 |\n   At the end of a conference, the final pictures remain visible\
    \ on the\n   screens. In addition, the PIGCF items will be recorded in its\n \
    \  entirety in order to play back the conference session if necessary.\n   The\
    \ conference record could also be sent to other locations as part\n   of a multi-media\
    \ message.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - 'A Format for a Graphical Communication Protocol

    '
- title: REFERENCES
  contents:
  - "REFERENCES\n   [1]   J. D. Day and H. Zimmermann, \"The OSI Reference Model\"\
    ,\n         Proceedings of the IEEE, V 71, N 12; Dec. 1983, pp 1334-1340.\n  \
    \ [2]   W. Pferd, L. A. Peralta and F. X. Prendergast, \"Interactive\n       \
    \  Graphics Teleconferencing\", IEEE Computer, V 12, N 11; Nov.\n         1979,\
    \ pp 62-72.\n   [3]   K. S. Sarin, \"Interactive On-Line Conferences\", Ph.D.\
    \ Diss.\n         MIT, Dept. of EE and CS, 1984.\n   [4]   S. Randall, \"The Shared\
    \ Graphic Workspace: Interactive Data\n         Sharing in a Teleconference Environment\"\
    , Proceedings CompCon\n         82 Fall, IEEE Computer Society, pp 535-542.\n\
    \   [5]   G. Heffron, \"Teleconferencing Comes of Age\", IEEE Spectrum,\n    \
    \     Oct. 1984, pp 61-66, pp 61-66.\n   [6]   R. W. Hough and R. R. Panko, \"\
    Teleconferencing Systems: A\n         State-of-the-Art Survey and Preliminary\
    \ Analysis\", SRI\n         International, Menlo Park California, SRI project\
    \ 3735, April\n         1977.\n   [7]   C. W. Kelly III, \"An Enhanced Presence\
    \ Video Teleconferencing\n         System\" Proc. CompCon 1982, Sept. 20-23 Washington\
    \ D.C., pp\n         544-551.\n   [8]   J. Vanglian, \"Private Communication\"\
    , Comments on the\n         suitability of videotex for on-line graphical communication.\n\
    \   [9]   ANSI Technical Committee X3H, \"Draft Proposal: Virtual Device\n   \
    \      Metafile\", X3.122, X3 Secretariat, CBEMA, Washington, D.C.\n   [10]  American\
    \ National Standards Committee X3H3, \"Virtual Device\n         Interface\", X3\
    \ - Information Processing Systems, Working\n         Document, Jan. 2, 1985 Available\
    \ from Computer and Business\n         Equipment Manufacturers Association, Washington\
    \ D.C.\n   [11]  E. Van Deusen, \"Graphics Standards Handbook\", CC Exchange 1984,\n\
    \         P.O. Box 1251, Laguna Beach, CA 92652.\n   [12]  J. D. Foley and A.\
    \ Van Dam, \"Fundamentals of Interactive\n         Computer Graphics\", Addison-Wesley,\
    \ 1982.\n"
- title: RFC 965                                                    December 1985
  contents:
  - 'RFC 965                                                    December 1985

    '
- title: A Format for a Graphical Communication Protocol
  contents:
  - "A Format for a Graphical Communication Protocol\n   [13]  American National Standards\
    \ Committee X3H3, \"GKS -- 3D\n         Extensions\", X3 - Information Processing\
    \ Systems, Working\n         Document, Nov. 16 1984 Available from Computer and\
    \ Business\n         Equipment Manufacturers Association, Washington D.C.\n  \
    \ [14]  ANSI Technical Committee X3H3, \"Draft Proposal: Graphical\n         Kernel\
    \ System\", X3.124, X3 Secretariat, CBEMA, Washington, D.C.\n   [15]  G. Enderle,\
    \ K. Kansy, and G. Pfaff, \"Computer Graphics\n         Programming\", Springer-Verlag,\
    \ 1984.\n   [16]  International Organization for Standardization \"Information\n\
    \         processing - Representation of numerical values in character\n     \
    \    strings for information interchange\", ISO/DIS 6093.2, ISO/TC\n         97,\
    \ 1984-01-19; available from ANSI, New York, N.Y.\n"
