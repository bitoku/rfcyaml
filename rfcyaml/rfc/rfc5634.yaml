- title: __initial_text__
  contents:
  - '    Quick-Start for the Datagram Congestion Control Protocol (DCCP)

    '
- title: Abstract
  contents:
  - "Abstract\n   This document specifies the use of the Quick-Start mechanism by\
    \ the\n   Datagram Congestion Control Protocol (DCCP).  DCCP is a transport\n\
    \   protocol that allows the transmission of congestion-controlled,\n   unreliable\
    \ datagrams.  DCCP is intended for applications such as\n   streaming media, Internet\
    \ telephony, and online games.  In DCCP, an\n   application has a choice of congestion\
    \ control mechanisms, each\n   specified by a Congestion Control Identifier (CCID).\
    \  This document\n   specifies general procedures applicable to all DCCP CCIDs\
    \ and\n   specific procedures for the use of Quick-Start with DCCP CCID 2, CCID\n\
    \   3, and CCID 4.  Quick-Start enables a DCCP sender to cooperate with\n   Quick-Start\
    \ routers along the end-to-end path to determine an allowed\n   sending rate at\
    \ the start of a connection and, at times, in the\n   middle of a DCCP connection\
    \ (e.g., after an idle or application-\n   limited period).  The present specification\
    \ is provided for use in\n   controlled environments, and not as a mechanism that\
    \ would be\n   intended or appropriate for ubiquitous deployment in the global\n\
    \   Internet.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2009 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\
    \ in effect on the date of\n   publication of this document (http://trustee.ietf.org/license-info).\n\
    \   Please review these documents carefully, as they describe your rights\n  \
    \ and restrictions with respect to this document.\n   This document may contain\
    \ material from IETF Documents or IETF\n   Contributions published or made publicly\
    \ available before November\n   10, 2008.  The person(s) controlling the copyright\
    \ in some of this\n   material may not have granted the IETF Trust the right to\
    \ allow\n   modifications of such material outside the IETF Standards Process.\n\
    \   Without obtaining an adequate license from the person(s) controlling\n   the\
    \ copyright in such materials, this document may not be modified\n   outside the\
    \ IETF Standards Process, and derivative works of it may\n   not be created outside\
    \ the IETF Standards Process, except to format\n   it for publication as an RFC\
    \ or to translate it into languages other\n   than English.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n\
    \      1.1. Terminology ................................................4\n  \
    \ 2. Quick-Start for DCCP ............................................5\n    \
    \  2.1. Sending a Quick-Start Request for a DCCP Flow ..............5\n      \
    \     2.1.1. The Quick-Start Interval ............................5\n      2.2.\
    \ Receiving a Quick-Start Request for a DCCP Flow ............6\n           2.2.1.\
    \ The Quick-Start Response Option .....................7\n      2.3. Receiving\
    \ a Quick-Start Response ...........................8\n           2.3.1. The Quick-Start\
    \ Mode ................................8\n           2.3.2. The Quick-Start Validation\
    \ Phase ....................9\n      2.4. Procedure When No Response to a Quick-Start\
    \ Request .......10\n      2.5. Procedure When a Packet Is Dropped While Using\n\
    \           Quick-Start ...............................................11\n  \
    \    2.6. Interactions with Mobility and Signaled Path Changes ......11\n    \
    \  2.7. Interactions with Path MTU Discovery ......................12\n      2.8.\
    \ Interactions with Middleboxes .............................12\n   3. Mechanisms\
    \ for Specific CCIDs ..................................13\n      3.1. Quick-Start\
    \ for CCID 2 ....................................13\n           3.1.1. The Quick-Start\
    \ Request for CCID 2 .................13\n           3.1.2. Sending a Quick-Start\
    \ Response with CCID 2 .........13\n           3.1.3. Using the Quick-Start Response\
    \ with CCID 2 .........13\n           3.1.4. Quick-Start Validation Phase for\
    \ CCID 2 ............14\n           3.1.5. Reported Loss or Congestion While Using\n\
    \                  Quick-Start ........................................14\n  \
    \         3.1.6. CCID 2 Feedback Traffic on the Reverse Path ........15\n    \
    \  3.2. Quick-Start for CCID 3 ....................................15\n      \
    \     3.2.1. The Quick-Start Request for CCID 3 .................15\n        \
    \   3.2.2. Sending a Quick-Start Response with CCID 3 .........15\n          \
    \ 3.2.3. Using the Quick-Start Response with CCID 3 .........16\n           3.2.4.\
    \ Quick-Start Validation Phase for CCID 3 ............17\n           3.2.5. Reported\
    \ Loss or Congestion during the\n                  Quick-Start Mode or Validation\
    \ Phase ...............17\n           3.2.6. CCID 3 Feedback Traffic on the Reverse\
    \ Path ........18\n      3.3. Quick-Start for CCID 4 ....................................18\n\
    \           3.3.1. The Quick-Start Request for CCID 4 .................18\n  \
    \         3.3.2. Sending a Quick-Start Response with CCID 4 .........18\n    \
    \       3.3.3. Using the Quick-Start Response with CCID 4 .........18\n      \
    \     3.3.4. Reported Loss or Congestion While Using\n                  Quick-Start\
    \ ........................................19\n           3.3.5. CCID 4 Feedback\
    \ Traffic on the Reverse Path ........19\n   4. Discussion of Issues ...........................................19\n\
    \      4.1. Overrun and the Quick-Start Validation Phase ..............19\n  \
    \    4.2. Experimental Status .......................................19\n   5.\
    \ IANA Considerations ............................................20\n   6. Acknowledgments\
    \ ................................................20\n   7. Security Considerations\
    \ ........................................20\n   8. References .....................................................21\n\
    \      8.1. Normative References ......................................21\n  \
    \    8.2. Informative References ....................................21\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Datagram Congestion Control Protocol (DCCP) [RFC4340]\
    \ is a\n   transport protocol for congestion-controlled, unreliable datagrams,\n\
    \   intended for applications such as streaming media, Internet\n   telephony,\
    \ and online games.\n   In DCCP, an application has a choice of congestion control\n\
    \   mechanisms, each specified by a Congestion Control Identifier (CCID)\n   [RFC4340].\
    \  There are general procedures applicable to all DCCP CCIDs\n   that are described\
    \ in Section 2, and details that relate to how\n   individual CCIDs should operate,\
    \ which are described in Section 3.\n   This separation of CCID-specific and DCCP\
    \ general functions is in the\n   spirit of the modular approach adopted by DCCP.\n\
    \   Quick-Start [RFC4782] is an experimental mechanism for transport\n   protocols\
    \ specified for use in controlled environments.  The current\n   specification\
    \ of this mechanism is not intended or appropriate for\n   ubiquitous deployment\
    \ in the global Internet.\n   Quick-Start is designed for use between end hosts\
    \ within the same\n   network or on Internet paths that include IP routers.  It\
    \ works in\n   cooperation with routers, allowing a sender to determine an allowed\n\
    \   sending rate at the start and at times in the middle of a data\n   transfer\
    \ (e.g., after an idle or application-limited period).\n   This document assumes\
    \ the reader is familiar with RFC 4782 [RFC4782],\n   which specifies the use\
    \ of Quick-Start with IP and with TCP.  Section\n   7 of RFC 4782 also provides\
    \ guidelines for the use of Quick-Start\n   with other transport protocols, including\
    \ DCCP.  This document\n   provides answers to some of the issues that were raised\
    \ by RFC 4782\n   and provides a definition of how Quick-Start must be used with\
    \ DCCP.\n   In using Quick-Start, the sending DCCP end host indicates the desired\n\
    \   sending rate in bytes per second, using a Quick-Start option in the\n   IP\
    \ header of a DCCP packet.  Each Quick-Start-capable router along\n   the path\
    \ could, in turn, either approve the requested rate, reduce\n   the requested\
    \ rate, or indicate that the Quick-Start Request is not\n   approved.\n   If the\
    \ Quick-Start Request is approved (possibly with a reduced rate)\n   by all the\
    \ routers along the path, then the DCCP receiver returns an\n   appropriate Quick-Start\
    \ Response.  On receipt of this, the sending\n   end host can send at up to the\
    \ approved rate for a period determined\n   by the method specified for each DCCP\
    \ CCID, and not exceeding three\n   round-trip times.  Subsequent transmissions\
    \ will be governed by the\n   default CCID congestion control mechanisms for the\
    \ connection.  If\n   the Quick-Start Request is not approved, then the sender\
    \ must use the\n   default congestion control mechanisms.\n   DCCP receivers are\
    \ not required to acknowledge individual packets (or\n   pairs of segments) as\
    \ in TCP.  CCID 2 [RFC4341] allows much less\n   frequent feedback.  Rate-based\
    \ protocols (e.g., TCP-Friendly Rate\n   Control (TFRC) [RFC5348], CCID 3 [RFC4342])\
    \ have a different feedback\n   mechanism than that of TCP.  With rate-based protocols,\
    \ feedback may\n   be sent less frequently (e.g., once per Round-Trip Time (RTT)).\
    \  In\n   such cases, a sender using Quick-Start needs to implement a different\n\
    \   mechanism to determine whether the Quick-Start sending rate has been\n   sustained\
    \ by the network.  This introduces a new mechanism called the\n   Quick-Start\
    \ Validation Phase (Section 2.3).\n   In addition, this document defines two more\
    \ general enhancements that\n   refine the use of Quick-Start after a flow has\
    \ started (expected to\n   be more common in applications using DCCP).  These\
    \ are the Quick-\n   Start Interval (Section 2.1.2), and the reaction to mobility\
    \ triggers\n   (Section 2.6).\n"
- title: 1.1.  Terminology
  contents:
  - "1.1.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\"\
    , and \"OPTIONAL\" in this\n   document are to be interpreted as described in\
    \ RFC 2119 [RFC2119].\n"
- title: 2.  Quick-Start for DCCP
  contents:
  - "2.  Quick-Start for DCCP\n   Unless otherwise specified, DCCP end hosts follow\
    \ the procedures\n   specified in Section 4 of [RFC4782], following the use specified\
    \ for\n   Quick-Start with TCP.\n"
- title: 2.1.  Sending a Quick-Start Request for a DCCP Flow
  contents:
  - "2.1.  Sending a Quick-Start Request for a DCCP Flow\n   A DCCP sender MAY use\
    \ a Quick-Start Request during the start of a\n   connection, when the sender\
    \ would prefer to have a larger initial\n   rate than allowed by standard mechanisms\
    \ (e.g., [RFC5348] or\n   [RFC3390]).\n   A Quick-Start Request MAY also be used\
    \ once a DCCP flow is connected\n   (i.e., in the middle of a DCCP flow).  In\
    \ standard operation, DCCP\n   CCIDs can constrain the sending rate (or window)\
    \ to less than that\n   desired (e.g., when an application increases the rate\
    \ at which it\n   wishes to send).  A DCCP sender that has data to send after\
    \ an idle\n   period or application-limited period (i.e., where the sender has\n\
    \   transmitted at less than the allowed sending rate) can send a Quick-\n   Start\
    \ Request using the procedures defined in Section 3.\n   Quick-Start Requests\
    \ will be more effective if the Quick-Start Rate\n   is not larger than necessary.\
    \  Each requested Quick-Start Rate that\n   has been approved, but was not fully\
    \ utilized, takes away from the\n   bandwidth pool maintained by Quick-Start routers\
    \ that would be\n   otherwise available for granting successive requests [RFC4782].\n\
    \   In contrast to most TCP applications, many DCCP applications have the\n  \
    \ notion of a natural media rate that they wish to achieve.  For\n   example,\
    \ during the initial connection, a host may request a Quick-\n   Start Rate equal\
    \ to the media rate of the application, appropriately\n   increased to account\
    \ for the size of packet headers.  (Note that\n   Quick-Start only provides a\
    \ course-grain indication of the desired\n   rate that is expected to be sent\
    \ in the next RTT.)\n   When sending a Quick-Start Request, the DCCP sender SHOULD\
    \ send the\n   Quick-Start Request using a packet that requires an acknowledgement,\n\
    \   such as a DCCP-Request, DCCP-Response, or DCCP-Data.\n"
- title: 2.1.1.  The Quick-Start Interval
  contents:
  - "2.1.1.  The Quick-Start Interval\n   Excessive use of the Quick-Start mechanism\
    \ is undesirable.  This\n   document defines an enhancement to RFC 4782 to update\
    \ the use of\n   Quick-Start after a DCCP flow has started, by introducing the\
    \ concept\n   of the Quick-Start Interval.  The Quick-Start Interval specifies\
    \ a\n   period of time during which a Quick-Start Request SHOULD NOT be sent.\n\
    \   The Quick-Start Interval is measured from the time of transmission of\n  \
    \ the previous Quick-Start Request (Section 2.1).  The Quick-Start\n   Interval\
    \ MAY be overridden as a result of a network path change\n   (Section 2.6).\n\
    \   When a connection is established, the Quick-Start Interval is\n   initialized\
    \ to the Initial_QSI.  The Initial_QSI MUST be at least 6\n   seconds (larger\
    \ values are permitted).  This value was chosen so that\n   it is sufficiently\
    \ large to prevent excessive router processing over\n   typical Internet paths.\
    \  Quick-Start routers that track per-flow\n   state MAY penalize senders by suspending\
    \ Quick-Start processing of\n   flows that make Quick-Start Requests for the same\
    \ flow with an\n   interval less than 6 seconds.\n   When the first Quick-Start\
    \ Request is sent, the Quick-Start Interval\n   is set to:\n   Quick-Start Interval\
    \ = Initial_QSI;\n   After sending each subsequent Quick-Start Request, the Quick-Start\n\
    \   Interval is then recalculated as:\n   Quick-Start Interval = max(Quick-Start\
    \ Interval * 2, 4 * RTT);\n   Each unsuccessful Quick-Start Request therefore\
    \ results in the\n   Quick-Start Interval being doubled (resulting in an exponential\n\
    \   back-off).  The maximum time the sender can back off is 64 seconds.\n   When\
    \ the back-off calculation results in a larger value, the sender\n   MUST NOT\
    \ send any further Quick-Start Requests for the remainder of\n   the DCCP connection\
    \ (i.e., the sender ceases to use Quick-Start).\n   Whenever a Quick-Start Request\
    \ is approved (at any rate), the Quick-\n   Start Interval is reset to the Initial_QSI.\n"
- title: 2.2.  Receiving a Quick-Start Request for a DCCP Flow
  contents:
  - "2.2.  Receiving a Quick-Start Request for a DCCP Flow\n   The procedure for processing\
    \ a received Quick-Start Request is\n   normatively defined in [RFC4782] and summarized\
    \ in this paragraph.\n   An end host that receives an IP packet containing a Quick-Start\n\
    \   Request passes the Quick-Start Request, along with the value in the\n   IP\
    \ Time to Live (TTL) field, to the receiving DCCP layer.  If the\n   receiving\
    \ host is willing to permit the Quick-Start Request, it\n   SHOULD respond immediately\
    \ by sending a packet that carries the\n   Quick-Start Response option in the\
    \ DCCP header of the corresponding\n   feedback packet (e.g., using a DCCP-Ack\
    \ packet or in a DCCP-DataAck\n   packet).\n   The Rate Request field in the Quick-Start\
    \ Response option is set to\n   the received value of the Rate Request in the\
    \ Quick-Start option or\n   to a lower value if the DCCP receiver is only willing\
    \ to allow a\n   lower Rate Request.  Where information is available (e.g., knowledge\n\
    \   of the local Layer 2 interface speed), a Quick-Start receiver SHOULD\n   verify\
    \ that the received rate does not exceed its expected receive\n   link capacity.\
    \  The TTL Diff field in the Quick-Start Response is set\n   to the difference\
    \ between the received IP TTL value (Hop Limit field\n   in IPv6) and the Quick-Start\
    \ TTL value.  The Quick-Start Nonce in the\n   Response is set to the received\
    \ value of the Quick-Start Nonce in the\n   Quick-Start option (or IPv6 Header\
    \ Extension).\n   The Quick-Start Response MUST NOT be resent if it is lost in\
    \ the\n   network [RFC4782].  Packet loss could be an indication of congestion\n\
    \   on the return path; in which case, it is better not to approve the\n   Quick-Start\
    \ Request.\n   If an end host receives an IP packet with a Quick-Start Request\
    \ with\n   a requested rate of zero, then this host SHOULD NOT send a Quick-\n\
    \   Start Response [RFC4782].\n"
- title: 2.2.1.  The Quick-Start Response Option
  contents:
  - "2.2.1.  The Quick-Start Response Option\n   The Quick-Start Response message\
    \ must be carried by the transport\n   protocol using Quick-Start.  This section\
    \ defines a DCCP Header\n   option used to carry the Quick-Start Response.  This\
    \ header option is\n   REQUIRED for end hosts to utilize the Quick-Start mechanism\
    \ with DCCP\n   flows.  The format resembles that defined for TCP [RFC4782].\n\
    \   0                   1                   2                   3\n   0 1 2 3\
    \ 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |  Type=45      |  Length=8     | Resv. | Rate  |   TTL Diff    |\n   |  \
    \             |               |       |Request|               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                     Quick-Start Nonce                     | R |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                Figure 1.  The Quick-Start Response Option\n   The first byte\
    \ of the Quick-Start Response option contains the option\n   kind, identifying\
    \ the DCCP option (45).\n   The second byte of the Quick-Start Response option\
    \ contains the\n   option length in bytes.  The length field MUST be set to 8\
    \ bytes.\n   The third byte of the Quick-Start Response option contains a four-\n\
    \   bit Reserved field, and the four-bit allowed Rate Request, formatted\n   as\
    \ in the IP Quick-Start Rate Request option [RFC4782].\n   The fourth byte of\
    \ the DCCP Quick-Start Response option contains the\n   TTL Diff.  The TTL Diff\
    \ contains the difference between the IP TTL\n   and Quick-Start TTL fields in\
    \ the received Quick-Start Request\n   packet, as calculated in [RFC4782].\n \
    \  Bytes 5-8 of the DCCP option contain the 30-bit Quick-Start Nonce and\n   a\
    \ 2-bit Reserved field [RFC4782].\n"
- title: 2.3.  Receiving a Quick-Start Response
  contents:
  - "2.3.  Receiving a Quick-Start Response\n   On reception of a Quick-Start Response\
    \ packet, the sender MUST report\n   the approved rate, by sending a Quick-Start\
    \ Report of Approved Rate\n   [RFC4782].  This report includes the Rate Report\
    \ field set to the\n   Approved Rate, and the QS Nonce set to the QS Nonce value\
    \ sent in the\n   Quick-Start Request.\n   The Quick-Start Report of Approved\
    \ Rate is sent as an IPv4 option or\n   IPv6 header extension using the first\
    \ Quick-Start Packet or sent as\n   an option using a DCCP control packet if there\
    \ are no DCCP-Data\n   packets pending transmission.\n   The Quick-Start Interval\
    \ is also reset (as described in Section\n   2.1.1).\n   Reception of a Quick-Start\
    \ Response packet that approves a rate\n   higher than the current rate results\
    \ in the sender entering the\n   Quick-Start Mode.\n"
- title: 2.3.1.  The Quick-Start Mode
  contents:
  - "2.3.1.  The Quick-Start Mode\n   While a sender is in the Quick-Start Mode, all\
    \ sent packets are known\n   as Quick-Start Packets [RFC4782].  The Quick-Start\
    \ Packets MUST be\n   sent at a rate not greater than the rate specified in the\
    \ Quick-\n   Start Response.  The Quick-Start Mode continues for a period up to\n\
    \   one RTT (shorter, if a feedback message arrives acknowledging the\n   receipt\
    \ of one or more Quick-Start Packets).\n   The procedure following exit of the\
    \ Quick-Start Mode is specified in\n   the following paragraphs.  Note that this\
    \ behavior is CCID-specific\n   and the details for each current CCID are described\
    \ in Section 3.\n"
- title: 2.3.2.  The Quick-Start Validation Phase
  contents:
  - "2.3.2.  The Quick-Start Validation Phase\n   After transmitting a set of Quick-Start\
    \ Packets in the Quick-Start\n   Mode (and providing that no loss or congestion\
    \ is reported), the\n   sender enters the Quick-Start Validation Phase.  This\
    \ phase persists\n   for a period during which the sender seeks to affirm that\
    \ the\n   capacity used by the Quick-Start Packets did not introduce\n   congestion.\
    \  This phase is introduced, because unlike TCP, DCCP\n   senders do not necessarily\
    \ receive frequent feedback that would\n   indicate the congestion state of the\
    \ forward path.\n   While in the Quick-Start Validation Phase, the sender is tentatively\n\
    \   permitted to continue sending using the Quick-Start rate.  This phase\n  \
    \ normally concludes when the sender receives feedback that includes an\n   acknowledgment\
    \ that all Quick-Start Packets were received.\n   However, the duration of the\
    \ Quick-Start Validation Phase MUST NOT\n   exceed the Quick-Start Validation\
    \ Time (a maximum of 2 RTTs).\n   Implementations may set a timer (initialized\
    \ to the Quick-Start\n   Validation Time) to detect the end of this phase.  There\
    \ may be scope\n   for optimization of timer resources in an implementation, since\
    \ the\n   Quick-Start Validation period temporarily enforces more strict\n   monitoring\
    \ of acknowledgements than normally used in a CCID (e.g., an\n   implementation\
    \ may consider using a common timer resource for Quick-\n   Start Validation and\
    \ a nofeedback timer).\n   An example sequence of packet exchanges showing Quick-Start\
    \ with DCCP\n   is shown in Figure 2.\n                      DCCP Sender     \
    \                DCCP Receiver\n   Quick-Start      +----------------------------------------------+\n\
    \   Request/Response | Quick-Start Request -->                      |\n      \
    \              |                    <-- Quick-Start Response  |\n            \
    \        | Quick-Start Approve -->                      |\n                  \
    \  +----------------------------------------------+\n                    +----------------------------------------------+\n\
    \   Quick-Start      | Quick-Start Packets -->                      |\n   Mode\
    \             | Quick-Start Packets -->                      |\n             \
    \       |                  <-- Feedback A from Receiver|\n                   \
    \ |               (acknowledging first QS Packet)|\n                    +----------------------------------------------+\n\
    \                    +----------------------------------------------\n   Quick-Start\
    \      | Packets -->                                  |\n   Validation Phase |\
    \                  <-- Feedback B from Receiver|\n                    |      \
    \          (acknowledging all QS Packets)|\n                    +----------------------------------------------\n\
    \                    +----------------------------------------------+\n   DCCP\
    \             | Packets -->                                  |\n   Congestion\
    \       |                  <-- Feedback C from Receiver|\n   Control         \
    \ |                                              |\n           Figure 2.  The\
    \ Quick-Start Mode and Validation Phase\n   On conclusion of the Validation Phase\
    \ (Feedback B in the above\n   figure), the sender expects to receive assurance\
    \ that it may safely\n   use the current rate.  A sender that completes the Quick-Start\n\
    \   Validation Phase with no reported packet loss or congestion stops\n   using\
    \ the Quick-Start rate and continues to adjust its rate using the\n   standard\
    \ congestion control mechanisms.  For example, if the DCCP\n   sender was in slow-start\
    \ prior to the Quick-Start Request, and no\n   packets were lost or ECN-marked\
    \ (Explicit Congestion Notification)\n   since that time, then the sender continues\
    \ in slow-start after\n   exiting Quick-Start Mode until the sender sees a packet\
    \ loss, or\n   congestion is reported.\n"
- title: 2.4.  Procedure When No Response to a Quick-Start Request
  contents:
  - "2.4.  Procedure When No Response to a Quick-Start Request\n   As in TCP, if a\
    \ Quick-Start Request is dropped (i.e., the Request or\n   Response is not delivered\
    \ by the network) the DCCP sender MUST revert\n   to the congestion control mechanisms\
    \ it would have used if the\n   Quick-Start Request had not been approved.  The\
    \ connection is not\n   permitted to send a subsequent Quick-Start Request before\
    \ expiry of\n   the current Quick-Start Interval (Section 2.1.1).\n"
- title: 2.5.  Procedure When a Packet Is Dropped While Using Quick-Start
  contents:
  - "2.5.  Procedure When a Packet Is Dropped While Using Quick-Start\n   A lost or\
    \ ECN-marked packet is an indication of potential network\n   congestion.  The\
    \ behavior of a DCCP sender following a lost or ECN-\n   marked Quick-Start Packet\
    \ or a lost feedback packet is specific to a\n   particular CCID (see Section\
    \ 3).\n"
- title: 2.6.  Interactions with Mobility and Signaled Path Changes
  contents:
  - "2.6.  Interactions with Mobility and Signaled Path Changes\n   The use of Quick-Start\
    \ may assist end hosts in determining when it is\n   appropriate to increase their\
    \ rate following an explicitly signaled\n   change of the network path.\n   When\
    \ an end host receives a signal from an upstream link/network\n   notifying it\
    \ of a path change, the change could simultaneously impact\n   more than one flow,\
    \ and may affect flows between multiple endpoints.\n   Senders should avoid responding\
    \ immediately, since this could result\n   in unwanted synchronization of signaling\
    \ messages, and control loops\n   (e.g., a synchronized attempt to probe for a\
    \ larger congestion\n   window), which may negatively impact the performance of\
    \ the network\n   and transport sessions.  In Quick-Start, this could increase\
    \ the rate\n   of Quick-Start Requests, possibly incurring additional router load,\n\
    \   and may result in some requests not being granted.  A sender must\n   ensure\
    \ this does not generate an excessive rate of Quick-Start\n   Requests by using\
    \ the method below:\n   A sender that has explicit information that the network\
    \ path has\n   changed (e.g., a mobile IP binding update [RFC3344], [RFC3775])\n\
    \   SHOULD reset the Quick-Start Interval to its initial value (specified\n  \
    \ in Section 2.1.1).\n   The sender MAY also send a Quick-Start Request to determine\
    \ a new\n   safe transmission rate, but must observe the following rules:\n  \
    \ - It MUST NOT send a Quick-Start Request within a period less than\n     the\
    \ initial Quick-Start Interval (Initial_QSI) since it previously\n     sent a\
    \ Quick-Start Request.  That is, it must wait for at least a\n     period of Initial_QSI\
    \ after the previous request, before sending a\n     new Quick-Start Request.\n\
    \   - If it has not sent a Quick-Start Request within the previous\n     Initial_QSI\
    \ period, it SHOULD defer sending a Quick-Start Request\n     for a randomly chosen\
    \ period between 0 and the Initial_QSI value in\n     seconds.  The random period\
    \ should be statistically independent\n     between different hosts and between\
    \ different connections on the\n     same host.  This delay is to mitigate the\
    \ effect on router load of\n     synchronized responses by multiple connections\
    \ in response to a\n     path change that affects multiple connections.\n   Hosts\
    \ do not generally have sufficient information to choose an\n   appropriate randomization\
    \ interval.  This value was selected to\n   ensure randomization of requests over\
    \ the Quick-Start Interval.  In\n   networks where a large number of senders may\
    \ potentially be impacted\n   by the same signal, a larger value may be desirable\
    \ (or methods may\n   be used to control this effect in the path change signaling).\n"
- title: 2.7.  Interactions with Path MTU Discovery
  contents:
  - "2.7.  Interactions with Path MTU Discovery\n   DCCP implementations are encouraged\
    \ to support Path MTU Discovery\n   (PMTUD) when applications are able to use\
    \ a DCCP packet size that\n   exceeds the default Path MTU [RFC4340], [RFC4821].\
    \  Quick-Start\n   Requests SHOULD NOT be sent with packets that are used as a\
    \ PMTUD\n   Probe Packet, since these packets could be lost in the network\n \
    \  increasing the probability of loss of the request.  It may therefore\n   be\
    \ preferable to separately negotiate the PMTU and the use of Quick-\n   Start.\n\
    \   The DCCP protocol is datagram-based and therefore the size of the\n   segments\
    \ that are sent is a function of application behavior as well\n   as being constrained\
    \ by the largest supported Path MTU.\n"
- title: 2.8.  Interactions with Middleboxes
  contents:
  - "2.8.  Interactions with Middleboxes\n   A Quick-Start Request is carried in an\
    \ IPv4 packet option or IPv6\n   extension header [RFC4782].  Interactions with\
    \ network devices\n   (middleboxes) that inspect or modify IP options could therefore\
    \ lead\n   to discard, ICMP error, or DCCP-Reset when attempting to forward\n\
    \   packets carrying a Quick-Start Request.\n   If a DCCP sender sends a DCCP-Request\
    \ that also carries a Quick-\n   Start Request, and does not receive a DCCP-Response\
    \ to the packet,\n   the DCCP sender SHOULD resend the DCCP-Request packet without\n\
    \   including a Quick-Start Request.\n   Similarly, if a DCCP sender receives\
    \ a DCCP-Reset in response to a\n   DCCP-Request packet that also carries a Quick-Start\
    \ Request, then the\n   DCCP sender SHOULD resend the DCCP-Request packet without\
    \ the Quick-\n   Start Request.  The DCCP sender then ceases to use the Quick-Start\n\
    \   Mechanism for the remainder of the connection.\n   A DCCP sender that uses\
    \ a Quick-Start Request within an established\n   connection and does not receive\
    \ a response will treat this as non-\n   approval of the request.  Successive\
    \ unsuccessful attempts will\n   result in an exponential increase in the Quick-Start\
    \ Interval\n   (Section 2.1.1).  If this grows to a value exceeding 64 seconds,\
    \ the\n   DCCP sender ceases to use the Quick-Start Mechanism for the remainder\n\
    \   of the connection.\n"
- title: 3.  Mechanisms for Specific CCIDs
  contents:
  - "3.  Mechanisms for Specific CCIDs\n   The following sections specify the use\
    \ of Quick-Start with DCCP CCID\n   2, CCID 3, and for DCCP with TFRC-SP as specified\
    \ in CCID 4.\n"
- title: 3.1.  Quick-Start for CCID 2
  contents:
  - "3.1.  Quick-Start for CCID 2\n   This section describes the Quick-Start mechanism\
    \ to be used with DCCP\n   CCID 2 [RFC4341].  CCID 2 uses a TCP-like congestion\
    \ control\n   mechanism.\n"
- title: 3.1.1.  The Quick-Start Request for CCID 2
  contents:
  - "3.1.1.  The Quick-Start Request for CCID 2\n   A Quick-Start Request MAY be sent\
    \ to allow the sender to determine if\n   it is safe to use a larger initial cwnd.\
    \  This permits a faster\n   start-up of a new CCID 2 flow.\n   A Quick-Start\
    \ Request MAY also be sent for an established connection\n   to request a higher\
    \ sending rate after an idle period or\n   application-limited period (described\
    \ in Section 2.1).  This allows a\n   receiver to use a larger cwnd than allowed\
    \ with standard operation.\n   A Quick-Start Request that follows a reported loss\
    \ or congestion\n   event MUST NOT request a Quick-Start rate that exceeds the\
    \ largest\n   congestion window achieved by the CCID 2 connection since the last\n\
    \   packet drop (translated to a sending rate).\n"
- title: 3.1.2.  Sending a Quick-Start Response with CCID 2
  contents:
  - "3.1.2.  Sending a Quick-Start Response with CCID 2\n   A receiver processing\
    \ a Quick-Start Request uses the method described\n   in Section 2.3.  On receipt\
    \ of a Quick-Start Request, the receiver\n   MUST send a Quick-Start Response\
    \ (even if a receiver is constrained\n   by the ACK Ratio).\n"
- title: 3.1.3.  Using the Quick-Start Response with CCID 2
  contents:
  - "3.1.3.  Using the Quick-Start Response with CCID 2\n   On receipt of a valid\
    \ Quick-Start Response option, the sender MUST\n   send a Quick-Start Approved\
    \ option [RFC4782] (see Section 2.3).\n   If the approved Quick-Start rate is\
    \ less than current sending rate,\n   the sender does not enter the Quick-Start\
    \ Mode, and continues using\n   the procedure defined in CCID 2.\n   If the approved\
    \ Quick-Start rate at the sender exceeds the current\n   sending rate, the sender\
    \ enters the Quick-Start Mode and continues in\n   the Quick-Start Mode for a\
    \ maximum period of one RTT.\n   The sender sets its Quick-Start cwnd (QS_cwnd)\
    \ as follows:\n      QS_cwnd = (R * T) / (s + H)                          (1)\n\
    \   where R is the Rate Request in bytes per second, T is the measured\n   round-trip\
    \ path delay (RTT), s is the packet size, and H is the\n   estimated DCCP/IP header\
    \ size in bytes (e.g., 32 bytes for DCCP\n   layered directly over IPv4, but larger\
    \ when using IPsec or IPv6).\n   A CCID 2 sender MAY then increase its cwnd to\
    \ the QS_cwnd.  The cwnd\n   should not be reduced (i.e., a QS_cwnd lower than\
    \ cwnd should be\n   ignored, since the CCID 2 congestion control method already\
    \ permits\n   this rate).  CCID 2 is not a rate-paced protocol.  Therefore, if\
    \ the\n   QS_cwnd is used, the sending host MUST implement a suitable method to\n\
    \   pace the rate at which the Quick-Start Packets are sent until it\n   receives\
    \ a DCCP-ACK for a packet sent during the Quick-Start Mode\n   [RFC4782].  The\
    \ sending host SHOULD also record the previous cwnd and\n   note that the new\
    \ cwnd has been determined by Quick-Start, rather by\n   other means (e.g., by\
    \ setting a flag to indicate that it is in Quick-\n   Start Mode).\n   When the\
    \ sender receives the first DCCP-ACK to a packet sent in the\n   Quick-Start Mode,\
    \ it leaves the Quick-Start Mode and enters the\n   Validation Phase.\n"
- title: 3.1.4.  Quick-Start Validation Phase for CCID 2
  contents:
  - "3.1.4.  Quick-Start Validation Phase for CCID 2\n   A CCID 2 sender MAY continue\
    \ to send at the paced Quick-Start Rate\n   while in the Validation Phase.  It\
    \ leaves the Validation Phase on\n   receipt of an ACK that acknowledges the last\
    \ Quick-Start Packet, or\n   if the validation phase persists for a period that\
    \ exceeds the\n   Quick-Start Validation Time of 1 RTT.  It MUST then reduce the\
    \ cwnd\n   to the actual flight size (the current amount of unacknowledged data\n\
    \   sent) [RFC4782] and uses the congestion control methods specified for\n  \
    \ CCID 2.\n"
- title: 3.1.5.  Reported Loss or Congestion While Using Quick-Start
  contents:
  - "3.1.5.  Reported Loss or Congestion While Using Quick-Start\n   A sender in the\
    \ Quick-Start Mode (or Validation Phase) that detects\n   congestion (e.g., receives\
    \ a feedback packet that reports new packet\n   loss or a packet with a congestion\
    \ marking), MUST immediately leave\n   the Quick-Start Mode (or Validation Phase).\
    \  It then resets the cwnd\n   to half the recorded previous cwnd and enters the\
    \ congestion\n   avoidance phase described in [RFC4341].\n   In the absence of\
    \ any feedback at the end of the Validation period,\n   the sender resets the\
    \ cwnd to half the recorded previous cwnd and\n   enters the congestion avoidance\
    \ phase.\n"
- title: 3.1.6.  CCID 2 Feedback Traffic on the Reverse Path
  contents:
  - "3.1.6.  CCID 2 Feedback Traffic on the Reverse Path\n   A CCID 2 receiver sends\
    \ feedback for groups of received packets\n   [RFC4341].  Approval of a higher\
    \ transmission rate using Quick-Start\n   will increase control traffic on the\
    \ reverse path.  A return path\n   that becomes congested could have a transient\
    \ negative impact on\n   other traffic flows sharing the return link.  The lower\
    \ rate of\n   feedback will then limit the achievable rate in the forward\n  \
    \ direction.\n"
- title: 3.2.  Quick-Start for CCID 3
  contents:
  - "3.2.  Quick-Start for CCID 3\n   This section describes the Quick-Start mechanism\
    \ to be used with DCCP\n   CCID 3 [RFC4342].  The rate-based congestion control\
    \ mechanism used\n   by CCID 3 leads to specific issues that are addressed by\
    \ Quick-Start\n   in this section.\n"
- title: 3.2.1.  The Quick-Start Request for CCID 3
  contents:
  - "3.2.1.  The Quick-Start Request for CCID 3\n   A Quick-Start Request MAY be sent\
    \ to allow the sender to determine if\n   it is safe to use a larger initial sending\
    \ rate.  This permits a\n   faster start-up of a new CCID 3 flow.\n   A Quick-Start\
    \ Request MAY also be sent to request a higher sending\n   rate after an idle\
    \ period (in which the nofeedback timer expires\n   [RFC5348]) or an application-limited\
    \ period (described in Section\n   2.1).  This allows a receiver to increase the\
    \ sending rate faster\n   than allowed with standard operation (i.e., faster than\
    \ twice the\n   rate reported by a CCID 3 receiver in the most recent feedback\n\
    \   message).\n   The requested rate specified in a Quick-Start Request MUST NOT\
    \ exceed\n   the TFRC-controlled sending rate [RFC4342] when this is bounded by\n\
    \   the current loss event rate (if any), either from calculation at the\n   sender\
    \ or from feedback received from the receiver.  CCID 3 considers\n   this rate\
    \ is a safe response in the presence of expected congestion.\n"
- title: 3.2.2.  Sending a Quick-Start Response with CCID 3
  contents:
  - "3.2.2.  Sending a Quick-Start Response with CCID 3\n   When processing a received\
    \ Quick-Start Request, the receiver uses the\n   method described in Section 2.3.\
    \  In addition, if a CCID 3 receiver\n   uses the window counter to send periodic\
    \ feedback messages, then the\n   receiver sets its local variable last_counter\
    \ to the value of the\n   window counter reported by the segment containing the\
    \ Quick-Start\n   Request.  The next feedback message would then be sent when\
    \ the\n   window_counter is greater or equal to last_counter + 4.  If the CCID\n\
    \   3 receiver uses a feedback timer to send period feedback messages,\n   then\
    \ the receiver MUST reset the CCID 3 feedback timer, causing the\n   feedback\
    \ to be sent as soon as possible.  This helps to align the\n   timing of feedback\
    \ to the start and end of the period in which\n   Quick-Start Packets are sent,\
    \ and will normally result in feedback at\n   a time that is approximately the\
    \ end of the period when Quick-Start\n   Packets are received.\n"
- title: 3.2.3.  Using the Quick-Start Response with CCID 3
  contents:
  - "3.2.3.  Using the Quick-Start Response with CCID 3\n   On receipt of a valid\
    \ Quick-Start Response option, the sender MUST\n   send a Quick-Start Approved\
    \ option [RFC4782] (see Section 2.3).  The\n   sender then uses one of three procedures:\n\
    \   * If the approved Quick-Start rate is less than the current sending\n    \
    \ rate, the sender does not enter the Quick-Start Mode and continues\n     using\
    \ the procedure defined in CCID 3.\n   * If loss or congestion is reported after\
    \ sending the Quick-Start\n     Request, the sender also does not enter the Quick-Start\
    \ Mode and\n     continues using the procedure defined in CCID 3.\n   * If the\
    \ approved Quick-Start rate exceeds the current sending rate,\n     the sender\
    \ enters the Quick-Start Mode and continues in the Quick-\n     Start Mode for\
    \ a maximum period of 1 RTT.  The sender sets its\n     Quick-Start sending rate\
    \ (QS_sendrate) as follows:\n      QS_sendrate = R * s/(s + H);              \
    \                  (2)\n     where R the Rate Request in bytes per second, s is\
    \ the packet size\n     [RFC4342], and H the estimated DCCP/IP header size in\
    \ bytes (e.g.,\n     32 bytes for IPv4).  A CCID 3 host MAY then increase its\
    \ sending\n     rate to the QS_sendrate.  The rate should not be reduced.\n  \
    \   CCID 3 is a rate-paced protocol.  Therefore, if the QS_sendrate is\n     used,\
    \ the sending host MUST pace the rate at which the Quick-Start\n     Packets are\
    \ sent over the next RTT.  The sending host SHOULD also\n     record the previous\
    \ congestion-controlled rate and note that the\n     new rate has been determined\
    \ by Quick-Start rather by other means\n     (e.g., by setting a flag to indicate\
    \ that it is in the Quick-Start\n     Mode).\n   The sender exits the Quick-Start\
    \ Mode after either:\n   * Receipt of a feedback packet acknowledging one or more\
    \ Quick-Start\n     Packets,\n   * A period of 1 RTT after receipt of a Quick-Start\
    \ Response, or\n   * Detection of a loss or congestion event (see Section 3.2.5).\n"
- title: 3.2.4.  Quick-Start Validation Phase for CCID 3
  contents:
  - "3.2.4.  Quick-Start Validation Phase for CCID 3\n   After transmitting a set\
    \ of Quick-Start Packets in the Quick Start\n   Mode (and providing that no loss\
    \ or congestion marking is reported),\n   the sender enters the Quick-Start Validation\
    \ Phase.  A sender that\n   receives feedback that reports a loss or congestion\
    \ event MUST follow\n   the procedures described in Section 3.2.5.\n   The sender\
    \ MUST exit the Quick-Start Validation Phase on receipt of\n   feedback that acknowledges\
    \ all packets sent in the Quick-Start Mode\n   (i.e., all Quick-Start Packets)\
    \ or if the Validation Phase persists\n   for a period that exceeds the Quick-Start\
    \ Validation Time of two\n   RTTs.\n   A sender that completes the Quick-Start\
    \ Validation Phase with no\n   reported packet loss or congestion stops using\
    \ the QS_sendrate and\n   MUST recalculate a suitable sending rate using the standard\n\
    \   congestion control mechanisms [RFC4342].\n   If no feedback is received within\
    \ the Quick-Start Validation Phase,\n   the sender MUST return to the minimum\
    \ of the recorded original rate\n   (at the start of the Quick-Start Mode) and\
    \ one half of the\n   QS_sendrate.  The nofeedback timer is also reset.\n"
- title: 3.2.5.  Reported Loss or Congestion during the Quick-Start Mode or
  contents:
  - "3.2.5.  Reported Loss or Congestion during the Quick-Start Mode or\n        Validation\
    \ Phase\n   A sender in the Quick-Start Mode or Validation Phase that detects\n\
    \   congestion (e.g., receives a feedback packet that reports new packet\n   loss\
    \ or a packet with a congestion marking) MUST immediately leave\n   the Quick-Start\
    \ Mode or Validation Phase and enter the congestion\n   avoidance phase [RFC4342].\
    \  This implies re-calculating the sending\n   rate, X, as required by RFC 4342:\n\
    \      X = max(min(X_calc, 2*X_recv), s/t_mbi);\n   where X_calc is the transmit\
    \ rate calculated by the throughput\n   equation, X_recv is the reported receiver\
    \ rate, s is the packet size\n   and t_mbi is the maximum back-off interval of\
    \ 64 seconds.\n   The current specification of TFRC [RFC5348], which obsoletes\
    \ RFC\n   3448, uses a set of X_recv values and uses the maximum of the set\n\
    \   during application-limited intervals.  This calculates the sending\n   rate,\
    \ X as:\n      X = max(min(X_calc, recv_limit),s/t_mbi);\n   where recv_limit\
    \ could be max(X_recv_set) or 2*max(X_recv_set)\n   depending on whether there\
    \ was a new loss event during a data-\n   limited interval, or no loss event during\
    \ an application-limited\n   interval respectively.  When the sender is not application-limited,\n\
    \   the recv_limit is set to 2*max(X_recv_set).\n   A sender using RFC 4342 updated\
    \ by [RFC5348], calculates the sending\n   rate, X, using the above formula normatively\
    \ defined in [RFC5348].\n"
- title: 3.2.6.  CCID 3 Feedback Traffic on the Reverse Path
  contents:
  - "3.2.6.  CCID 3 Feedback Traffic on the Reverse Path\n   A CCID 3 receiver sends\
    \ feedback at least once each RTT [RFC4342].\n   Use of Quick-Start is therefore\
    \ not expected to significantly\n   increase control traffic on the reverse path.\n"
- title: 3.3.  Quick-Start for CCID 4
  contents:
  - "3.3.  Quick-Start for CCID 4\n   This section describes the Quick-Start mechanism\
    \ to be used when DCCP\n   uses TFRC-SP [RFC4828] in place of TFRC [RFC5348],\
    \ as specified in\n   CCID 4 [RFC5622].  CCID 4 is similar to CCID 3 except that\
    \ a sender\n   using CCID 4 is limited to a maximum of 100 packets/second.\n \
    \  The Quick-Start procedure defined below therefore resembles that for\n   CCID\
    \ 3.\n"
- title: 3.3.1.  The Quick-Start Request for CCID 4
  contents:
  - "3.3.1.  The Quick-Start Request for CCID 4\n   The procedure for sending a Quick-Start\
    \ Request using CCID 4 is the\n   same as for CCID 3, defined in Section 3.2.1.\
    \  In addition, the\n   requested rate MUST be less than or equal to the equivalent\
    \ of a\n   sending rate of 100 packets per second [RFC4828].  CCID 4 [RFC4828]\n\
    \   specifies that the allowed sending rate derived from the TCP\n   throughput\
    \ equation is reduced by a factor that accounts for packet\n   header size.\n"
- title: 3.3.2.  Sending a Quick-Start Response with CCID 4
  contents:
  - "3.3.2.  Sending a Quick-Start Response with CCID 4\n   This procedure is the\
    \ same as for CCID 3, defined in Section 3.2.2.\n"
- title: 3.3.3.  Using the Quick-Start Response with CCID 4
  contents:
  - "3.3.3.  Using the Quick-Start Response with CCID 4\n   This procedure is the\
    \ same as for CCID 3, defined in Sections 3.2.3,\n   3.2.4, and 3.2.5, except\
    \ that the congestion control procedures is\n   updated to use TFRC-SP [RFC4828].\n\
    \   A CCID 4 sender does not need to account for headers a second time\n   when\
    \ translating the approved Quick-Start rate into an allowed\n   sending rate (as\
    \ described in Section 5 of [RFC5622].\n"
- title: 3.3.4.  Reported Loss or Congestion While Using Quick-Start
  contents:
  - "3.3.4.  Reported Loss or Congestion While Using Quick-Start\n   This procedure\
    \ is the same as for CCID 3, defined in Section 3.2.5,\n   except that the congestion\
    \ control procedures is updated to use\n   TFRC-SP [RFC4828].\n"
- title: 3.3.5.  CCID 4 Feedback Traffic on the Reverse Path
  contents:
  - "3.3.5.  CCID 4 Feedback Traffic on the Reverse Path\n   A CCID 4 receiver sends\
    \ feedback at least once each RTT.  Use of\n   Quick-Start is therefore not expected\
    \ to significantly increase\n   control traffic on the reverse path.\n"
- title: 4.  Discussion of Issues
  contents:
  - "4.  Discussion of Issues\n   The considerations for using Quick-Start with DCCP\
    \ are not\n   significantly different to those for Quick-Start with TCP.  The\n\
    \   document does not modify the router behavior specified for Quick-\n   Start.\n"
- title: 4.1.  Overrun and the Quick-Start Validation Phase
  contents:
  - "4.1.  Overrun and the Quick-Start Validation Phase\n   The less frequent feedback\
    \ of DCCP raises an issue in that a sender\n   using Quick-Start may continue\
    \ to use the rate specified by a Quick-\n   Start Response for a period that exceeds\
    \ one path round trip time\n   (i.e., that which TCP would have used).  This overrun\
    \ is a result of\n   the less frequent feedback interval used by DCCP (i.e., CCID\
    \ 2 may\n   delay feedback by at most one half cwnd and CCID 3 and CCID 4 provide\n\
    \   feedback at least once per RTT).  In the method specified by this\n   document,\
    \ the Quick-Start Validation Phase bounds this overrun to be\n   not more than\
    \ an additional two RTTs.\n   The selected method was chosen as a compromise that\
    \ reflects the need\n   to terminate quickly following the loss of a feedback\
    \ packet, and the\n   need to allow sufficient time for end host and router processing,\
    \ as\n   well as the different perceptions of the path RTT held at the sender\n\
    \   and receiver.  Any reported loss or congestion results in immediate\n   action\
    \ without waiting for completion of the Quick-Start Validation\n   period.\n"
- title: 4.2.  Experimental Status
  contents:
  - "4.2.  Experimental Status\n   There are many cases in which Quick-Start Requests\
    \ would not be\n   approved [RFC4782].  These include communication over paths\n\
    \   containing routers, IP tunnels, MPLS paths, and the like, that do not\n  \
    \ support Quick-Start.  These cases also include paths with routers or\n   middleboxes\
    \ that drop packets containing IP options (or IPv6\n   extensions).  Quick-Start\
    \ Requests could be difficult to approve over\n   paths that include multi-access\
    \ Layer-2 networks.\n   Transient effects could arise when the transport protocol\
    \ packets\n   associated with a connection are multiplexed over multiple parallel\n\
    \   (sometimes known as alternative) links or network-layer paths, and\n   Quick-Start\
    \ is used, since it will be effective on only one of the\n   paths, but could\
    \ lead to increased traffic on all paths.\n   A CCID 2 sender using Quick-Start\
    \ can increase the control traffic on\n   the reverse path, which could have a\
    \ transient negative impact on\n   other traffic flows sharing the return link\
    \ (Section 3.1.6).  The\n   lower rate of feedback will then limit the achievable\
    \ rate in the\n   forward direction.\n   [RFC4782] also describes environments\
    \ where the Quick-Start mechanism\n   could fail with false positives, with the\
    \ sender incorrectly assuming\n   that the Quick-Start Request had been approved\
    \ by all of the routers\n   along the path.  As a result of these concerns, and\
    \ as a result of\n   the difficulties and the seeming absence of motivation for\
    \ routers,\n   such as core routers, to deploy Quick-Start, Quick-Start has been\n\
    \   proposed as a mechanism that could be of use in controlled\n   environments,\
    \ and not as a mechanism that would be intended or\n   appropriate for ubiquitous\
    \ deployment in the global Internet.\n   Further experimentation would be required\
    \ to confirm the deployment\n   of Quick-Start and to investigate performance\
    \ issues that may arise,\n   prior to any recommendation for use over the general\
    \ Internet.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   IANA has assigned a DCCP Option Type (45) from the\
    \ DCCP Option Types\n   Registry.  This Option is applicable to all CCIDs and\
    \ is known as the\n   \"Quick-Start Response\" Option and is defined in Section\
    \ 2.2.1.  It\n   specifies a length value in the format used for options numbered\n\
    \   32-128.\n"
- title: 6.  Acknowledgments
  contents:
  - "6.  Acknowledgments\n   The author gratefully acknowledges the previous work\
    \ by Sally Floyd\n   to identify issues that impact Quick-Start for DCCP, and\
    \ her comments\n   to improve this document.  We also acknowledge comments and\n\
    \   corrections from Pasi Sarolahti, Vincent Roca, Mark Allman, Michael\n   Scharf,\
    \ and others in the IETF DCCP Working Group (WG).\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   Security issues are discussed in [RFC4782]. \
    \ Middlebox deployment\n   issues are also highlighted in Section 2.8.  No new\
    \ security issues\n   are raised within this document.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March\
    \ 1997.\n   [RFC4340]  Kohler, E., Handley, M., and S. Floyd, \"Datagram\n   \
    \           Congestion Control Protocol (DCCP)\", RFC 4340, March 2006.\n   [RFC4341]\
    \  Floyd, S. and E. Kohler, \"Profile for Datagram Congestion\n              Control\
    \ Protocol (DCCP) Congestion Control ID 2: TCP-like\n              Congestion\
    \ Control\", RFC 4341, March 2006.\n   [RFC4342]  Floyd, S., Kohler, E., and J.\
    \ Padhye, \"Profile for\n              Datagram Congestion Control Protocol (DCCP)\
    \ Congestion\n              Control ID 3: TCP-Friendly Rate Control (TFRC)\",\
    \ RFC 4342,\n              March 2006.\n   [RFC4782]  Floyd, S., Allman, M., Jain,\
    \ A., and P. Sarolahti,\n              \"Quick-Start for TCP and IP\", RFC 4782,\
    \ January 2007.\n   [RFC4828]  Floyd, S. and E. Kohler, \"TCP Friendly Rate Control\n\
    \              (TFRC): The Small-Packet (SP) Variant\", RFC 4828, April\n    \
    \          2007.\n   [RFC5348]  Floyd, S., Handley, M., Padhye, J., and J. Widmer,\
    \ \"TCP\n              Friendly Rate Control (TFRC): Protocol Specification\"\
    , RFC\n              5348, September 2008.\n   [RFC5622]  Floyd, S., and E. Kohler,\
    \ \"Profile for Datagram Congestion\n              Control Protocol (DCCP) Congestion\
    \ ID 4: TCP-Friendly Rate\n              Control for Small Packets (TFRC-SP)\"\
    , RFC 5622, August\n              2009.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [RFC3344]  Perkins, C., Ed., \"IP Mobility Support\
    \ for IPv4\", RFC\n              3344, August 2002.\n   [RFC3775]  Johnson, D.,\
    \ Perkins, C., and J. Arkko, \"Mobility Support\n              in IPv6\", RFC\
    \ 3775, June 2004.\n   [RFC3390]  Allman, M., Floyd, S., and C. Partridge, \"\
    Increasing TCP's\n              Initial Window\", RFC 3390, October 2002.\n  \
    \ [RFC4821]  Mathis, M. and J. Heffner, \"Packetization Layer Path MTU\n     \
    \         Discovery\", RFC 4821, March 2007.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Godred Fairhurst\n   School of Engineering\n   University\
    \ of Aberdeen\n   Aberdeen, AB24 3UE\n   Scotland, UK\n   EMail: gorry@erg.abdn.ac.uk\n\
    \   URI: http://www.erg.abdn.ac.uk/users/gorry\n   Arjuna Sathiaseelan\n   School\
    \ of Engineering\n   University of Aberdeen\n   Aberdeen, AB24 3UE\n   Scotland,\
    \ UK\n   EMail: arjuna@erg.abdn.ac.uk\n   URI: http://www.erg.abdn.ac.uk/users/arjuna\n"
