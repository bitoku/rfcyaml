- title: __initial_text__
  contents:
  - '                  PPP Gandalf FZA Compression Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard.  Distribution of this memo is\n\
    \   unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   The Point-to-Point Protocol (PPP) [1] provides a standard method\
    \ for\n   transporting multi-protocol datagrams over point-to-point links.\n \
    \  The PPP Compression Control Protocol [2] provides a method to\n   negotiate\
    \ and utilize compression protocols over PPP encapsulated\n   links.\n   This\
    \ document describes the use of the Gandalf FZA data compression\n   algorithm\
    \ [3] for compressing PPP encapsulated packets.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n     1.     Introduction ..........................................\
    \    1\n        1.1       Licensing .......................................  \
    \  1\n     2.     FZA Packets ...........................................    2\n\
    \        2.1       Packet Format ...................................    3\n  \
    \   3.     Configuration Option Format ...........................    4\n    \
    \ SECURITY CONSIDERATIONS ......................................    4\n     ACKNOWLEDGEMENTS\
    \ .............................................    5\n     REFERENCES ...................................................\
    \    5\n     CONTACTS .....................................................  \
    \  5\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   FZA is a high performance LZ [4] derivative that maximizes\n\
    \   compression at the expense of memory and CPU.  Compression\n   performance\
    \ can be adjusted based on CPU and memory available.\n   Multiple PPP packets\
    \ can be combined in a single compressed frame, or\n   a single PPP packet can\
    \ be spread across multiple frames.\n"
- title: 1.1.  Licensing
  contents:
  - "1.1.  Licensing\n   Source and object licenses are available on a non-discriminatory\n\
    \   basis for either a royalty or fixed price arrangement.  Patent\n   indemnity\
    \ is included with the license.\n"
- title: 2.  FZA Packets
  contents:
  - "2.  FZA Packets\n   Before any FZA packets may be communicated, PPP must reach\
    \ the\n   Network-Layer Protocol phase.\n   When the Compression Control Protocol\
    \ (CCP) has reached the Opened\n   state, and FZA is negotiated as the primary\
    \ compression algorithm,\n   the PPP Protocol field indicates type hex 00FB (link\
    \ compressed\n   datagram), or type hex 00FD (compressed datagram).\n   The maximum\
    \ length of the FZA datagram transmitted over a PPP link is\n   the same as the\
    \ maximum length of the Information field of a PPP\n   encapsulated packet.\n\
    \   Padding\n      The FZA packets require the negotiation of the Self-Describing-\n\
    \      Padding Configuration Option [5] at LCP Link Establishment.\n   Reliability\
    \ and Sequencing\n      The FZA algorithm expects a reliable link, as described\
    \ in \"PPP\n      Reliable Transmission\" [6].\n      FZA expects the packets\
    \ to be delivered in sequence.\n   Data Expansion\n      The maximum expansion\
    \ of Gandalf FZA is 2:1.  However, typical\n      expansion on pre-compressed\
    \ data is 1.01:1.  Expanded data is sent\n      to maintain the integrity of the\
    \ compression history.\n      When the expansion exceeds the size of the peer's\
    \ Maximum Receive\n      Unit for the link, the expanded packet is sent in multiple\
    \ PPP\n      frames.  The compressed data contains an indication of the end of\n\
    \      the original packet.\n"
- title: 2.1.  Packet Format
  contents:
  - "2.1.  Packet Format\n   A summary of the Gandalf FZA packet format is shown below.\
    \  The\n   fields are transmitted from left to right.\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |         PPP Protocol          |     Compressed Data ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   PPP Protocol\n      One or two octets.  The PPP Protocol field is described\
    \ in the\n      Point-to-Point Protocol Encapsulation [1].\n      Type 00FD is\
    \ used when the PPP multilink protocol is not used,\n      and/or \"inside\" a\
    \ multilink bundle.  Type 00FB is used \"outside\"\n      multilink, to compress\
    \ independently on individual links of a\n      multilink bundle.  This value\
    \ MAY be compressed when LCP\n      Protocol-Field-Compression is negotiated.\n\
    \   Compressed Data\n      One or more octets.  The compressed PPP encapsulated\
    \ packet(s).\n      Prior to compression, the uncompressed data begins with the\n\
    \      original PPP Protocol number.  This value MAY be compressed when\n    \
    \  LCP Protocol-Field-Compression is negotiated.\n      The original Protocol\
    \ number is followed by the original\n      Information field.  The length of\
    \ the original Information field\n      before compression MUST NOT exceed the\
    \ link Maximum Receive Unit\n      (MRU).\n      PPP Link Control Protocol packets\
    \ MUST NOT be sent within\n      compressed data.\n"
- title: 3.  Configuration Option Format
  contents:
  - "3.  Configuration Option Format\n   Description\n      The CCP Gandalf-FZA Configuration\
    \ Option negotiates the use of\n      Gandalf FZA on the link.  By default or\
    \ ultimate disagreement, no\n      compression is used.\n   A summary of the Gandalf-FZA\
    \ Configuration Option format is shown\n   below.  The fields are transmitted\
    \ from left to right.\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |     Type      |    Length     |   History   |    Version ...\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   Type\n      19\n   Length\n      >= 3\n   History\n      One octet.  The History\
    \ field specifies the maximum size of the\n      compression history in powers\
    \ of 2.  Valid values range from 12 to\n      15.\n      The peer is not required\
    \ to send as many histories as the\n      implementation indicates that it can\
    \ accept.\n   Version\n      Zero or more octets of additional configuration information.\
    \  Any\n      implementation that does not implement this information MUST send\n\
    \      a Configure-Nak without this field.\n      The Version field is not present\
    \ for FZA.\n      The Version field is a single octet containing the value 1 for\n\
    \      FZA+.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   Security issues are not discussed in this memo.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   FZA was developed by David Carr while at Gandalf Data Limited.\n\
    \   FZA+ was an improvement by Abbie Barbir.\n   Editting and formatting by William\
    \ Simpson.\n"
- title: References
  contents:
  - "References\n   [1]   Simpson, W., Editor, \"The Point-to-Point Protocol (PPP)\"\
    , STD\n         51, RFC 1661, DayDreamer, July 1994.\n   [2]   Rand, D., \"The\
    \ PPP Compression Control Protocol (CCP)\", RFC\n         1962, Novell, June 1996.\n\
    \   [3]   Barbir, A., \"A New Fast Approximate Arithmetic Coder\",\n         Proceedings\
    \ of IEEE 28th SouthEastern Symposium on Systems\n         Theory (SSST), Baton\
    \ Rouge, Louisiana, pages 482-486, April\n         1996.\n   [4]   Lempel, A.\
    \ and Ziv, J., \"A Universal Algorithm for Sequential\n         Data Compression\"\
    , IEEE Transactions On Information Theory,\n         Vol. IT-23, No. 3, May 1977.\n\
    \   [5]   Simpson, W., Editor, \"PPP LCP Extensions\", RFC 1570,\n         DayDreamer,\
    \ January 1994.\n   [6]   Rand, D., \"PPP Reliable Transmission\", RFC 1663, Novell,\
    \ July\n         1994.\n"
- title: Contacts
  contents:
  - "Contacts\n   Licensing queries should be directed to:\n   Michael Williams\n\
    \   Director of Business Development\n   Gandalf Data Limited\n   130 Colonnade\
    \ Road South\n   Napean, Ontario, Canada  K2E 7M4\n   (613) 274-6500 ext 6575\n\
    \   Comments should be submitted to the ietf-ppp@merit.edu mailing list.\n   This\
    \ document was reviewed by the Point-to-Point Protocol Working\n   Group of the\
    \ Internet Engineering Task Force (IETF).\n   The working group can be contacted\
    \ via the current chair:\n      Karl Fox\n      Ascend Communications\n      3518\
    \ Riverside Drive, Suite 101\n      Columbus, Ohio  43221\n          karl@MorningStar.com\n\
    \          karl@Ascend.com\n   Questions about this memo can also be directed\
    \ to:\n      Abdulkader Barbir\n      Gandalf Data Limited\n      130 Colonnade\
    \ Road South\n      Napean, Ontario, Canada  K2E 7M4\n      (613) 274-6500 ext\
    \ 8550\n          abarbir@gandalf.ca\n   Questions about this memo should not\
    \ be directed to:\n      Dave Carr\n      Newbridge Networks Corporation\n   \
    \   600 March Road\n      P.O. Box 13600\n      Kanata, Ontario, Canada, K2K 2E6\n\
    \          dcarr@newbridge.com\n      William Allen Simpson\n      DayDreamer\n\
    \      Computer Systems Consulting Services\n      1384 Fontaine\n      Madison\
    \ Heights, Michigan  48071\n          wsimpson@UMich.edu\n          wsimpson@GreenDragon.com\
    \ (preferred)\n"
