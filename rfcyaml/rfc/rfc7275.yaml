- contents:
  - "                Inter-Chassis Communication Protocol for\n Layer 2 Virtual Private
    Network (L2VPN) Provider Edge (PE) Redundancy\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document specifies an Inter-Chassis Communication Protocol\n
    \  (ICCP) that enables Provider Edge (PE) device redundancy for Virtual\n   Private
    Wire Service (VPWS) and Virtual Private LAN Service (VPLS)\n   applications.  The
    protocol runs within a set of two or more PEs,\n   forming a Redundancy Group,
    for the purpose of synchronizing data\n   among the systems.  It accommodates
    multi-chassis attachment circuit\n   redundancy mechanisms as well as pseudowire
    redundancy mechanisms.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7275.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2014 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................5\n
    \  2. Specification of Requirements ...................................5\n   3.
    ICCP Overview ...................................................5\n      3.1.
    Redundancy Model and Topology ..............................5\n      3.2. ICCP
    Interconnect Scenarios ................................7\n           3.2.1. Co-located
    Dedicated Interconnect ...................7\n           3.2.2. Co-located Shared
    Interconnect ......................8\n           3.2.3. Geo-redundant Dedicated
    Interconnect ................8\n           3.2.4. Geo-redundant Shared Interconnect
    ...................9\n      3.3. ICCP Requirements .........................................10\n
    \  4. ICC LDP Protocol Extension Specification .......................11\n      4.1.
    LDP ICCP Capability Advertisement .........................12\n      4.2. RG Membership
    Management ..................................12\n           4.2.1. ICCP Connection
    State Machine ......................13\n      4.3. Redundant Object Identification
    ...........................17\n      4.4. Application Connection Management .........................17\n
    \          4.4.1. Application Versioning .............................18\n           4.4.2.
    Application Connection State Machine ...............19\n      4.5. Application
    Data Transfer .................................22\n      4.6. Dedicated Redundancy
    Group LDP Session ....................22\n   5. ICCP PE Node Failure / Isolation
    Detection Mechanism ...........22\n   6. ICCP Message Formats ...........................................23\n
    \     6.1. Encoding ICC into LDP Messages ............................23\n           6.1.1.
    ICC Header .........................................24\n           6.1.2. ICC
    Parameter Encoding .............................26\n           6.1.3. Redundant
    Object Identifier Encoding ...............27\n      6.2. RG Connect Message ........................................27\n
    \          6.2.1. ICC Sender Name TLV ................................28\n      6.3.
    RG Disconnect Message .....................................29\n      6.4. RG Notification
    Message ...................................31\n           6.4.1. Notification
    Message TLVs ..........................32\n      6.5. RG Application Data Message
    ...............................35\n   7. Application TLVs ...............................................35\n
    \     7.1. Pseudowire Redundancy (PW-RED) Application TLVs ...........35\n           7.1.1.
    PW-RED Connect TLV .................................36\n           7.1.2. PW-RED
    Disconnect TLV ..............................37\n                  7.1.2.1. PW-RED
    Disconnect Cause TLV ...............38\n           7.1.3. PW-RED Config TLV ..................................39\n
    \                 7.1.3.1. Service Name TLV ..........................41\n                  7.1.3.2.
    PW ID TLV .................................42\n                  7.1.3.3. Generalized
    PW ID TLV .....................43\n           7.1.4. PW-RED State TLV ...................................44\n
    \          7.1.5. PW-RED Synchronization Request TLV .................45\n           7.1.6.
    PW-RED Synchronization Data TLV ....................46\n      7.2. Multi-Chassis
    LACP (mLACP) Application TLVs ...............48\n           7.2.1. mLACP Connect
    TLV ..................................48\n           7.2.2. mLACP Disconnect TLV
    ...............................49\n                  7.2.2.1. mLACP Disconnect
    Cause TLV ................50\n           7.2.3. mLACP System Config TLV ............................51\n
    \          7.2.4. mLACP Aggregator Config TLV ........................52\n           7.2.5.
    mLACP Port Config TLV ..............................54\n           7.2.6. mLACP
    Port Priority TLV ............................56\n           7.2.7. mLACP Port
    State TLV ...............................58\n           7.2.8. mLACP Aggregator
    State TLV .........................60\n           7.2.9. mLACP Synchronization
    Request TLV ..................61\n           7.2.10. mLACP Synchronization Data
    TLV ....................63\n   8. LDP Capability Negotiation .....................................65\n
    \  9. Client Applications ............................................66\n      9.1.
    Pseudowire Redundancy Application Procedures ..............66\n           9.1.1.
    Initial Setup ......................................66\n           9.1.2. Pseudowire
    Configuration Synchronization ...........66\n           9.1.3. Pseudowire Status
    Synchronization ..................67\n                  9.1.3.1. Independent Mode
    ..........................69\n                  9.1.3.2. Master/Slave Mode .........................69\n
    \          9.1.4. PE Node Failure or Isolation .......................70\n      9.2.
    Attachment Circuit Redundancy Application Procedures ......70\n           9.2.1.
    Common AC Procedures ...............................70\n                  9.2.1.1.
    AC Failure ................................70\n                  9.2.1.2. Remote
    PE Node Failure or Isolation .......70\n                  9.2.1.3. Local PE Isolation
    ........................71\n                  9.2.1.4. Determining Pseudowire
    State ..............71\n           9.2.2. Multi-Chassis LACP (mLACP) Application
    Procedures ..72\n                  9.2.2.1. Initial Setup .............................72\n
    \                 9.2.2.2. mLACP Aggregator and Port Configuration ...74\n                  9.2.2.3.
    mLACP Aggregator and Port Status\n                           Synchronization ...........................75\n
    \                 9.2.2.4. Failure and Recovery ......................77\n   10.
    Security Considerations .......................................78\n   11. Manageability
    Considerations ..................................79\n   12. IANA Considerations
    ...........................................79\n      12.1. Message Type Name Space
    ..................................79\n      12.2. TLV Type Name Space ......................................79\n
    \     12.3. ICC RG Parameter Type Space ..............................80\n      12.4.
    Status Code Name Space ...................................81\n   13. Acknowledgments
    ...............................................81\n   14. References ....................................................81\n
    \     14.1. Normative References .....................................81\n      14.2.
    Informative References ...................................82\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Network availability is a critical metric for service providers,
    as\n   it has a direct bearing on their profitability.  Outages translate\n   not
    only to lost revenue but also to potential penalties mandated by\n   contractual
    agreements with customers running mission-critical\n   applications that require
    tight Service Level Agreements (SLAs).\n   This is true for any carrier network,
    and networks employing Layer 2\n   Virtual Private Network (L2VPN) technology
    are no exception.  A high\n   degree of network availability can be achieved by
    employing intra-\n   and inter-chassis redundancy mechanisms.  The focus of this
    document\n   is on the latter.  This document defines an Inter-Chassis\n   Communication
    Protocol (ICCP) that allows synchronization of state\n   and configuration data
    between a set of two or more Provider Edge\n   nodes (PEs) forming a Redundancy
    Group (RG).  The protocol supports\n   multi-chassis redundancy mechanisms that
    can be employed on either\n   the attachment circuits or pseudowires (PWs).  A
    formal definition of\n   the term \"chassis\" can be found in [RFC2922].  For
    the purpose of\n   this document, a chassis is an L2VPN PE node.\n   This document
    assumes that it is normal to run the Label Distribution\n   Protocol (LDP) between
    the PEs in the RG, and that LDP components\n   will in any case be present on
    the PEs to establish and maintain\n   pseudowires.  Therefore, ICCP is built as
    a secondary protocol\n   running within LDP and taking advantage of the LDP session
    mechanisms\n   as well as the underlying TCP transport mechanisms and TCP-based\n
    \  security mechanisms already necessary for LDP operation.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119 [RFC2119].\n"
  title: 2.  Specification of Requirements
- contents:
  - '3.  ICCP Overview

    '
  - contents:
    - "3.1.  Redundancy Model and Topology\n   The focus of this document is on PE
      node redundancy.  It is assumed\n   that a set of two or more PE nodes are designated
      by the operator to\n   form an RG.  Members of an RG fall under a single administration\n
      \  (e.g., service provider) and employ a common redundancy mechanism\n   towards
      the access (attachment circuits or access pseudowires) and/or\n   towards the
      core (pseudowires) for any given service instance.  It is\n   possible, however,
      for members of an RG to make use of disparate\n   redundancy mechanisms for
      disjoint services.  The PE devices may be\n   offering any type of L2VPN service,
      i.e., Virtual Private Wire\n   Service (VPWS) or Virtual Private LAN Service
      (VPLS).  As a matter of\n   fact, the use of ICCP may even be applicable for
      Layer 3 service\n   redundancy, but this is considered to be outside the scope
      of this\n   document.\n   The PEs in an RG offer multi-homed connectivity to
      either individual\n   devices (e.g., Customer Edge (CE), Digital Subscriber
      Line Access\n   Multiplexer (DSLAM)) or entire networks (e.g., access network).\n
      \  Figure 1 below depicts the model.\n                                    +=================+\n
      \                                   |                 |\n   Multi-homed         +----+
      \      |  +-----+        |\n   Node  ------------> | CE |-------|--| PE1 ||<------|---Pseudowire-->|\n
      \                      |    |--+   -|--|     ||<------|---Pseudowire-->|\n                       +----+
      \ |  / |  +-----+        |\n                               | /  |     ||          |\n
      \                              |/   |     || ICCP     |--> Towards Core\n              +-------------+
      \ /    |     ||          |\n              |             | /|    |  +-----+        |\n
      \             |    Access   |/ +----|--| PE2 ||<------|---Pseudowire-->|\n              |
      \  Network   |-------|--|     ||<------|---Pseudowire-->|\n              |             |
      \      |  +-----+        |\n              |             |       |                 |\n
      \             +-------------+       |   Redundancy    |\n                ^                   |
      \    Group       |\n                |                   +=================+\n
      \               |\n         Multi-homed Network\n             Figure 1: Generic
      Multi-Chassis Redundancy Model\n   In the topology shown in Figure 1, the redundancy
      mechanism employed\n   towards the access node/network can be one of a multitude
      of\n   technologies, e.g., it could be IEEE 802.1AX Link Aggregation Groups\n
      \  with the Link Aggregation Control Protocol (LACP) or Synchronous\n   Optical
      Network Automatic Protection Switching (SONET APS).  The\n   specifics of the
      mechanism are outside the scope of this document.\n   However, it is assumed
      that the PEs in the RG are required to\n   communicate with each other in order
      for the access redundancy\n   mechanism to operate correctly.  As such, it is
      required that an\n   inter-chassis communication protocol among the PEs in the
      RG be run\n   in order to synchronize configuration and/or running state data.\n
      \  Furthermore, the presence of the inter-chassis communication channel\n   allows
      simplification of the pseudowire redundancy mechanism.  This\n   is primarily
      because it allows the PEs within an RG to run some\n   arbitration algorithm
      to elect which pseudowire(s) should be in\n   active or standby mode for a given
      service instance.  The PEs can\n   then advertise the outcome of the arbitration
      to the remote-end\n   PE(s), as opposed to having to embed a handshake procedure
      into the\n   pseudowire redundancy status communication mechanism as well as
      every\n   other possible Layer 2 status communication mechanism.\n"
    title: 3.1.  Redundancy Model and Topology
  - contents:
    - "3.2.  ICCP Interconnect Scenarios\n   When referring to \"interconnect\" in
      this section, we are concerned\n   with the links or networks over which Inter-Chassis
      Communication\n   Protocol messages are transported, and not normal data traffic\n
      \  between PEs.  The PEs that are members of an RG may be either\n   physically
      co-located or geo-redundant.  Furthermore, the physical\n   interconnect between
      the PEs over which ICCP is to run may comprise\n   either dedicated back-to-back
      links or a shared connection through\n   the packet switched network (PSN),
      e.g., MPLS core network.  This\n   gives rise to a matrix of four interconnect
      scenarios, as described\n   in the following subsections.\n"
    - contents:
      - "3.2.1.  Co-located Dedicated Interconnect\n   In this scenario, the PEs within
        an RG are co-located in the same\n   physical location, e.g., point of presence
        (POP) or central office\n   (CO).  Furthermore, dedicated links provide the
        interconnect for ICCP\n   among the PEs.\n             +=================+
        \    +-----------------+\n             |CO               |     |                 |\n
        \            |  +-----+        |     |                 |\n             |  |
        PE1 |________|_____|                 |\n             |  |     |        |     |
        \                |\n             |  +-----+        |     |                 |\n
        \            |     ||          |     |                 |\n             |     ||
        ICCP     |     |       Core      |\n             |     ||          |     |
        \     Network    |\n             |  +-----+        |     |                 |\n
        \            |  | PE2 |________|_____|                 |\n             |  |
        \    |        |     |                 |\n             |  +-----+        |
        \    |                 |\n             |                 |     |                 |\n
        \            +=================+     +-----------------+\n       Figure 2:
        ICCP Co-located PEs Dedicated Interconnect Scenario\n   Given that the PEs
        are connected back-to-back in this case, it is\n   possible to rely on Layer
        2 redundancy mechanisms to guarantee the\n   robustness of the ICCP interconnect.
        \ For example, if the\n   interconnect comprises IEEE 802.3 Ethernet links,
        it is possible to\n   provide link redundancy by means of IEEE 802.1AX Link
        Aggregation\n   Groups.\n"
      title: 3.2.1.  Co-located Dedicated Interconnect
    - contents:
      - "3.2.2.  Co-located Shared Interconnect\n   In this scenario, the PEs within
        an RG are co-located in the same\n   physical location (POP, CO).  However,
        unlike the previous scenario,\n   there are no dedicated links between the
        PEs.  The interconnect for\n   ICCP is provided through the core network to
        which the PEs are\n   connected.  Figure 3 depicts this model.\n              +=================+
        \    +-----------------+\n              |CO               |     |                 |\n
        \             |  +-----+        |     |                 |\n              |
        \ | PE1 |________|_____|                 |\n              |  |     |<=================+
        \            |\n              |  +-----+   ICCP |     |  ||             |\n
        \             |                 |     |  ||             |\n              |
        \                |     |  ||   Core      |\n              |                 |
        \    |  ||  Network    |\n              |  +-----+        |     |  ||             |\n
        \             |  | PE2 |________|_____|  ||             |\n              |
        \ |     |<=================+             |\n              |  +-----+        |
        \    |                 |\n              |                 |     |                 |\n
        \             +=================+     +-----------------+\n        Figure
        3: ICCP Co-located PEs Shared Interconnect Scenario\n   Given that the PEs
        in the RG are connected over the PSN, PSN Layer\n   mechanisms can be leveraged
        to ensure the resiliency of the\n   interconnect against connectivity failures.
        \ For example, it is\n   possible to employ RSVP Label Switched Paths (LSPs)
        with Fast Reroute\n   (FRR) and/or end-to-end backup LSPs.\n"
      title: 3.2.2.  Co-located Shared Interconnect
    - contents:
      - "3.2.3.  Geo-redundant Dedicated Interconnect\n   In this variation, the PEs
        within an RG are located in different\n   physical locations to provide geographic
        redundancy.  This may be\n   desirable, for example, to protect against natural
        disasters or the\n   like.  A dedicated interconnect is provided to link the
        PEs.  This is\n   a costly option, especially when considering the possibility
        of\n   providing multiple such links for interconnect robustness.  The\n   resiliency
        mechanisms for the interconnect are similar to those\n   highlighted in the
        co-located interconnect counterpart.\n              +=================+     +-----------------+\n
        \             |CO 1             |     |                 |\n              |
        \ +-----+        |     |                 |\n              |  | PE1 |________|_____|
        \                |\n              |  |     |        |     |                 |\n
        \             |  +-----+        |     |                 |\n              +=====||==========+
        \    |                 |\n                    || ICCP           |       Core
        \     |\n              +=====||==========+     |      Network    |\n              |
        \ +-----+        |     |                 |\n              |  | PE2 |________|_____|
        \                |\n              |  |     |        |     |                 |\n
        \             |  +-----+        |     |                 |\n              |CO
        2             |     |                 |\n              +=================+
        \    +-----------------+\n     Figure 4: ICCP Geo-redundant PEs Dedicated
        Interconnect Scenario\n"
      title: 3.2.3.  Geo-redundant Dedicated Interconnect
    - contents:
      - "3.2.4.  Geo-redundant Shared Interconnect\n   In this scenario, the PEs of
        an RG are located in different physical\n   locations and the interconnect
        for ICCP is provided over the PSN\n   network to which the PEs are connected.
        \ This interconnect option is\n   more likely to be the one used for geo-redundancy,
        as it is more\n   economically appealing compared to the geo-redundant dedicated\n
        \  interconnect option.  The resiliency mechanisms that can be employed\n
        \  to guarantee the robustness of the ICCP transport are PSN Layer\n   mechanisms,
        as described in Section 3.2.2 above.\n              +=================+     +-----------------+\n
        \             |CO 1             |     |                 |\n              |
        \ +-----+        |     |                 |\n              |  | PE1 |________|_____|
        \                |\n              |  |     |<=================+             |\n
        \             |  +-----+   ICCP |     |  ||             |\n              +=================+
        \    |  ||             |\n                                      |  ||   Core
        \     |\n              +=================+     |  ||  Network    |\n              |
        \ +-----+        |     |  ||             |\n              |  | PE2 |________|_____|
        \ ||             |\n              |  |     |<=================+             |\n
        \             |  +-----+        |     |                 |\n              |CO
        2             |     |                 |\n              +=================+
        \    +-----------------+\n       Figure 5: ICCP Geo-redundant PEs Shared Interconnect
        Scenario\n"
      title: 3.2.4.  Geo-redundant Shared Interconnect
    title: 3.2.  ICCP Interconnect Scenarios
  - contents:
    - "3.3.  ICCP Requirements\n   The requirements for the Inter-Chassis Communication
      Protocol are as\n   follows:\n      i. ICCP MUST provide a control channel for
      communication between\n         PEs in a Redundancy Group (RG).  PE nodes may
      be co-located or\n         remote (refer to Section 3.2 above).  Client applications
      that\n         make use of ICCP services MUST only use this channel to\n         communicate
      control information and not data traffic.  As such,\n         the protocol SHOULD
      provide relatively low bandwidth, low\n         delay, and highly reliable message
      transfer.\n     ii. ICCP MUST accommodate multiple client applications (e.g.,\n
      \        multi-chassis LACP, PW redundancy, SONET APS).  This implies\n         that
      the messages SHOULD be extensible (e.g., TLV-based), and\n         the protocol
      SHOULD provide a robust application registration\n         and versioning scheme.\n
      \   iii. ICCP MUST provide reliable message transport and in-order\n         delivery
      between nodes in an RG with secure authentication\n         mechanisms built
      into the protocol.  The redundancy\n         applications that are clients of
      ICCP expect reliable message\n         transfer and as such will assume that
      the protocol takes care\n         of flow control and retransmissions.  Furthermore,
      given that\n         the applications will rely on ICCP to communicate data
      used to\n         synchronize state machines on disparate nodes, it is critical\n
      \        that ICCP guarantees in-order message delivery.  Loss of\n         messages
      or out-of-sequence messages would have adverse effects\n         on the operation
      of the client applications.\n     iv. ICCP MUST provide a common mechanism to
      actively monitor the\n         health of PEs in an RG.  This mechanism will
      be used to detect\n         PE node failure (or isolation from the MPLS network
      in the case\n         of shared interconnect) and inform the client applications.\n
      \        The applications require that the mechanism trigger failover\n         according
      to the procedures of the redundancy protocol employed\n         on the attachment
      circuit (AC) and PW.  The solution SHOULD\n         achieve sub-second detection
      of loss of remote node\n         (~50-150 msec) in order to give the client
      applications\n         (redundancy mechanisms) enough reaction time to achieve\n
      \        sub-second service restoration times.\n      v. ICCP SHOULD provide
      asynchronous event-driven state update,\n         independent of periodic messages,
      for immediate notification of\n         client applications' state changes.
      \ In other words, the\n         transmission of messages carrying application
      data SHOULD be\n         on-demand rather than timer-based to minimize inter-chassis\n
      \        state synchronization delay.\n     vi. ICCP MUST accommodate multi-link
      and multi-hop interconnects\n         between nodes.  When the devices within
      an RG are located in\n         different physical locations, the physical interconnect
      between\n         them will comprise a network rather than a link.  As such,
      ICCP\n         MUST accommodate the case where the interconnect involves\n         multiple
      hops.  Furthermore, it is possible to have multiple\n         (redundant) paths
      or interconnects between a given pair of\n         devices.  This is true for
      both the co-located and\n         geo-redundant scenarios.  ICCP MUST handle
      this as well.\n    vii. ICCP MUST ensure transport security between devices
      in an RG.\n         This is especially important in the scenario where the members\n
      \        of an RG are located in different physical locations and\n         connected
      over a shared network (e.g., PSN).  In particular,\n         ICCP MUST NOT accept
      connections arbitrarily from any device;\n         otherwise, the state of client
      applications might be\n         compromised.  Furthermore, even if an ICCP connection
      request\n         appears to come from an eligible device, its source address
      may\n         have been spoofed.  Therefore, some means of preventing source\n
      \        address spoofing MUST be in place.\n   viii. ICCP MUST allow the operator
      to statically configure members of\n         an RG.  Auto-discovery may be considered
      in the future.\n     ix. ICCP SHOULD allow for flexible RG membership.  It is
      expected\n         that only two nodes in an RG will cover most of the redundancy\n
      \        applications for common deployments.  ICCP SHOULD NOT preclude\n         supporting
      more than two nodes in an RG by virtue of design.\n         Furthermore, ICCP
      MUST allow a single node to be a member of\n         multiple RGs simultaneously.\n"
    title: 3.3.  ICCP Requirements
  title: 3.  ICCP Overview
- contents:
  - "4.  ICC LDP Protocol Extension Specification\n   To address the requirements
    identified in the previous section, ICCP\n   is modeled to comprise three layers:\n
    \    i. Application Layer: This provides the interface to the various\n        redundancy
    applications that make use of the services of ICCP.\n        ICCP is concerned
    with defining common connection management\n        procedures and the formats
    of the messages exchanged at this\n        layer; however, beyond that, it does
    not impose any restrictions\n        on the procedures or state machines of the
    clients, as these are\n        deemed application specific and lie outside the
    scope of ICCP.\n        This guarantees implementation interoperability without
    placing\n        any unnecessary constraints on internal design specifics.\n    ii.
    Inter-Chassis Communication (ICC) Layer: This layer implements\n        the common
    set of services that ICCP offers to the client\n        applications.  It handles
    protocol versioning, RG membership,\n        Redundant Object identification,
    PE node identification, and\n        ICCP connection management.\n   iii. Transport
    Layer: This layer provides the actual ICCP message\n        transport.  It is
    responsible for addressing, route resolution,\n        flow control, reliable
    and in-order message delivery,\n        connectivity resiliency/redundancy, and,
    finally, PE node\n        failure detection.  The Transport layer may differ,
    depending on\n        the Physical Layer of the interconnect.\n"
  - contents:
    - "4.1.  LDP ICCP Capability Advertisement\n   When an RG is enabled on a particular
      PE, an LDP session to every\n   remote PE in that RG MUST be created, if one
      does not already exist.\n   The capability of supporting ICCP MUST then be advertised
      to all of\n   those LDP peers in that RG.  This is achieved by using the methods\n
      \  described in [RFC5561] and advertising the \"ICCP capability TLV\".  If\n
      \  an LDP peer supports the dynamic capability advertisement, this can\n   be
      done by sending a new capability message with the S-bit set for\n   the \"ICCP
      capability TLV\" when the first RG is enabled on the PE.  If\n   the peer does
      not support dynamic capability advertisements, then the\n   \"ICCP TLV\" MUST
      be included in the LDP initialization procedures in\n   the capability parameter
      [RFC5561].\n"
    title: 4.1.  LDP ICCP Capability Advertisement
  - contents:
    - "4.2.  RG Membership Management\n   ICCP defines a mechanism that enables PE
      nodes to manage their RG\n   membership.  When a PE is configured to be a member
      of an RG, it will\n   first advertise the ICCP capability to its peers.  Subsequently,
      the\n   PE sends an \"RG Connect\" message to the peers that have also\n   advertised
      ICCP capability.  The PE then waits for the peers to send\n   their own \"RG
      Connect\" messages, if they haven't done so already.\n   For a given RG, the
      ICCP connection between two devices is considered\n   to be operational only
      when both devices have sent and received ICCP\n   \"RG Connect\" messages for
      that RG.\n   If a PE that has sent a particular \"RG Connect\" message doesn't\n
      \  receive a corresponding RG Connect (or a Notification message\n   rejecting
      the connection) from a destination, it will remain in a\n   state of expecting
      the corresponding \"RG Connect\" message (or\n   Notification message).  The
      RG will not become operational until the\n   corresponding \"RG Connect\" message
      has been received.  If a PE that\n   has sent an \"RG Connect\" message receives
      a Notification message\n   rejecting the connection, with a NAK TLV (Negative
      Acknowledgement\n   TLV) (Section 6.4.1), it will stop attempting to bring up
      the ICCP\n   connection immediately.\n   A device MUST reject an incoming \"RG
      Connect\" message if at least one\n   of the following conditions is satisfied:\n
      \   i. the PE is not a member of the RG;\n   ii. the maximum number of simultaneous
      ICCP connections that the PE\n       can handle is exceeded.\n   Otherwise,
      the PE MUST bring up the connection by responding to the\n   incoming \"RG Connect\"
      message with an appropriate RG Connect.\n   A PE sends an \"RG Disconnect\"
      message to tear down the ICCP\n   connection for a given RG.  This is a unilateral
      operation and\n   doesn't require any acknowledgement from the other PEs.  Note
      that\n   the ICCP connection for an RG MUST be operational before any client\n
      \  application can make use of ICCP services in that RG.\n"
    - contents:
      - "4.2.1.  ICCP Connection State Machine\n   A PE maintains an ICCP Connection
        state machine instance for every\n   ICCP connection with a remote peer in
        the RG.  This state machine is\n   separate from any Application Connection
        state machine\n   (Section 4.4.2).  The ICCP Connection state machine reacts
        only to\n   \"RG Connect\", \"RG Disconnect\", and \"RG Notification\" messages
        that do\n   not contain any \"Application TLVs\".  Actions and state transitions
        in\n   the Application Connection state machines have no effect on the ICCP\n
        \  Connection state machine.\n   The ICCP Connection state machine is defined
        to have six states, as\n   follows:\n   - NONEXISTENT: This state is the starting
        point for the state\n     machine.  It indicates that no ICCP connection exists
        and that\n     there's no LDP session established between the PEs.\n   - INITIALIZED:
        This state indicates that an LDP session exists\n     between the PEs but
        LDP ICCP capability information has not yet\n     been exchanged between them.\n
        \  - CAPSENT: This state indicates that an LDP session exists between\n     the
        PEs and that the local PE has advertised LDP ICCP capability to\n     its
        peer.\n   - CAPREC: This state indicates that an LDP session exists between
        the\n     PEs and that the local PE has both received and advertised LDP ICCP\n
        \    capability from/to its peer.\n   - CONNECTING: This state indicates that
        the local PE has initiated an\n     ICCP connection to its peer and is awaiting
        its response.\n   - OPERATIONAL: This state indicates that the ICCP connection
        is\n     operational.\n   The state transition table and state transition
        diagram follow.\n                  ICCP Connection State Transition Table\n
        \   STATE         EVENT                                     NEW STATE\n   --------------------------------------------------------------------\n
        \   NONEXISTENT   LDP session established                   INITIALIZED\n
        \   INITIALIZED   Transmit LDP ICCP capability              CAPSENT\n                  Receive
        LDP ICCP capability               CAPREC\n                     Action: Transmit
        LDP ICCP capability\n                  LDP session torn down                     NONEXISTENT\n
        \   CAPSENT       Receive LDP ICCP capability               CAPREC\n                  LDP
        session torn down                     NONEXISTENT\n    CAPREC        Transmit
        RG Connect message               CONNECTING\n                  Receive acceptable
        RG Connect message     OPERATIONAL\n                     Action: Transmit
        RG Connect message\n                  Receive any other ICCP message            CAPREC\n
        \                    Action: Transmit NAK TLV in RG\n                             Notification
        message\n                  LDP session torn down                     NONEXISTENT\n
        \   CONNECTING    Receive acceptable RG Connect message     OPERATIONAL\n
        \                 Receive any other ICCP message            CAPREC\n                     Action:
        Transmit NAK TLV in RG\n                             Notification message\n
        \                 LDP session torn down                     NONEXISTENT\n
        \   OPERATIONAL   Receive acceptable RG Disconnect message  CAPREC\n                  Transmit
        RG Disconnect message            CAPREC\n                  LDP session torn
        down                     NONEXISTENT\n                 ICCP Connection State
        Transition Diagram\n                              +------------+\n                              |
        \           |\n          +------------------>|NONEXISTENT |    LDP session
        torn down\n          |                   |            |<--------------------------+\n
        \         |                   +------------+                           |\n
        \         |         LDP session  |    ^ LDP session                    |\n
        \         |         established  |    | torn down                      |\n
        \         |                      V    |                                |\n
        \         |                  +-----------+                             |\n
        \  LDP    |                  |           |  Tx LDP ICCP                |\n
        \  session|                  |INITIALIZED|    capability               |\n
        \  torn   |              +---|           |---------------+             |\n
        \  down   |  Rx other    |   +-----------+               |             |\n
        \         |  ICCP msg/   |Rx LDP ICCP                    |             |\n
        \         |   Tx NAK TLV |  capability/                  |             |\n
        \         |      +---+   |Tx LDP ICCP capability         |             |\n
        \         |      |   |   |                               |             |\n
        \         |      V   |   V                               V             |\n
        \         |   +-----------+   Rx LDP ICCP         +--------+           |\n
        \         +---|           |     capability        |        |           |\n
        \             |CAPREC     |<----------------------|CAPSENT |---------->+\n
        \         +---|           |-------------------+   |        |           |\n
        \         |   +-----------+                   |   +--------+           |\n
        \         |       ^    ^                      |                        |\n
        \  Tx     |       |    |                      |                        |\n
        \  RG     |       |    |Rx RG Disconnect msg  |                        |\n
        \  Connect|       |    | or                   |Rx RG Connect msg/      |\n
        \  msg    |       |    |Tx RG Disconnect msg  | Tx RG Connect msg      |\n
        \         |       |    |                      V                        |\n
        \         |       |    |                    +------------+             |\n
        \         |       |    +--------------------|            |             |\n
        \         |       |                         |OPERATIONAL |------------>+\n
        \         |       |                         |            |             |\n
        \         |       |Rx other ICCP msg/       +------------+             |\n
        \         |       | Tx NAK TLV                    ^                    |\n
        \         |       |                               |                    |\n
        \         |      +----------+  Rx RG Connect msg  |                    |\n
        \         |      |          |---------------------+                    |\n
        \         +----->|CONNECTING|                                          |\n
        \                |          |----------------------------------------->+\n
        \                +----------+\n"
      title: 4.2.1.  ICCP Connection State Machine
    title: 4.2.  RG Membership Management
  - contents:
    - "4.3.  Redundant Object Identification\n   ICCP offers its client applications
      a uniform mechanism for\n   identifying links, ports, forwarding constructs,
      and, more generally,\n   objects (e.g., interfaces, pseudowires, VLANs) that
      are being\n   protected in a redundant setup.  These are referred to as Redundant\n
      \  Objects (ROs).  An example of an RO is a multi-chassis link-\n   aggregation
      group that spans two PEs.  ICCP introduces a 64-bit\n   opaque identifier to
      uniquely identify ROs in an RG.  This\n   identifier, referred to as the Redundant
      Object ID (ROID), MUST match\n   between RG members for the protected object
      in question; this allows\n   separate systems in an RG to use a common handle
      to reference the\n   protected entity, irrespective of its nature (e.g., physical
      or\n   virtual) and in a manner that is agnostic to implementation\n   specifics.
      \ Client applications that need to synchronize state\n   pertaining to a particular
      RO SHOULD embed the corresponding ROID in\n   their TLVs.\n"
    title: 4.3.  Redundant Object Identification
  - contents:
    - "4.4.  Application Connection Management\n   ICCP provides a common set of procedures
      by which applications on one\n   PE can connect to their counterparts on another
      PE, for the purpose\n   of inter-chassis communication in the context of a given
      RG.  The\n   prerequisite for establishing an Application Connection is to have
      an\n   operational ICCP RG connection between the two endpoints.  It is\n   assumed
      that the association of applications with RGs is known\n   a priori, e.g., by
      means of device configuration.  ICCP then sends an\n   \"Application Connect
      TLV\" (carried in an \"RG Connect\" message), on\n   behalf of each client application,
      to each remote PE within the RG.\n   The client may piggyback application-specific
      information in that\n   \"Connect TLV\", which, for example, can be used to
      negotiate\n   parameters or attributes prior to bringing up the actual Application\n
      \  Connection.  The procedures for bringing up the Application\n   Connection
      are similar to those of the ICCP connection: an\n   Application Connection between
      two nodes is up only when both nodes\n   have sent and received \"RG Connect\"
      messages with the proper\n   \"Application Connect TLVs\".  A PE MUST send a
      Notification message to\n   reject an Application Connection request if one
      of the following\n   conditions is encountered:\n    i. the application doesn't
      exist or is not configured for that RG;\n   ii. the Application Connection count
      exceeds the PE's capabilities.\n   When a PE receives such a rejection notification,
      it MUST stop\n   attempting to bring up the Application Connection until it
      receives a\n   new Application Connection request from the remote PE.  This
      is done\n   by responding to the incoming \"RG Connect\" message (carrying an\n
      \  \"Application Connect TLV\") with an appropriate \"RG Connect\" message\n
      \  (carrying a corresponding \"Application Connect TLV\").\n   When an application
      is stopped on a device or it is no longer\n   associated with an RG, it MUST
      signal ICCP to trigger sending an\n   \"Application Disconnect TLV\" (in the
      \"RG Disconnect\" message).  This\n   is a unilateral notification to the other
      PEs within an RG and as\n   such doesn't trigger any response.\n"
    - contents:
      - "4.4.1.  Application Versioning\n   During Application Connection setup, a
        given application on one PE\n   can negotiate with its counterpart on a peer
        PE the proper\n   application version to use for communication.  If no common
        version\n   is agreed upon, then the Application Connection is not brought
        up.\n   This is achieved through the following set of rules:\n   - If an application
        receives an \"Application Connect TLV\" with a\n     version number that is
        higher than its own, it MUST send a\n     Notification message with a \"NAK
        TLV\" indicating status code\n     \"Incompatible Protocol Version\" and supplying
        the version that is\n     locally supported by the PE.\n   - If an application
        receives an \"Application Connect TLV\" with a\n     version number that is
        lower than its own, it MAY respond with an\n     RG Connect that has an \"Application
        Connect TLV\" using the same\n     version that was received.  Alternatively,
        the application MAY\n     respond with a Notification message to reject the
        request using the\n     \"Incompatible Protocol Version\" code and supply
        the version that is\n     supported.  This allows an application to operate
        in either\n     backwards-compatible or incompatible mode.\n   - If an application
        receives an \"Application Connect TLV\" with a\n     version that is equal
        to its own, then the application MUST honor\n     or reject the request based
        on whether the application is\n     configured for the RG in question, and
        whether or not the\n     Application Connection count has been exceeded.\n"
      title: 4.4.1.  Application Versioning
    - contents:
      - "4.4.2.  Application Connection State Machine\n   A PE maintains one Application
        Connection state machine instance per\n   ICCP application for every ICCP
        connection with a remote PE in the\n   RG.  Each application's state machine
        reacts only to the \"RG\n   Connect\", \"RG Disconnect\", and \"RG Notification\"
        messages that\n   contain an \"Application TLV\" specifying that particular
        application.\n   The Application Connection state machine has six states,
        as follows:\n   - NONEXISTENT: This state indicates that the Application Connection\n
        \    does not exist, since there is no ICCP connection between the PEs.\n
        \  - RESET: This state indicates that an ICCP connection is operational\n
        \    between the PEs but that the Application Connection has not been\n     initialized
        yet or has been resent.\n   - CONNSENT: This state indicates that the local
        PE has requested\n     initiation of an Application Connection with its peer
        but has not\n     received a response yet.\n   - CONNREC: This state indicates
        that the local PE has received a\n     request to initiate an Application
        Connection from its peer but has\n     not responded yet.\n   - CONNECTING:
        This state indicates that the local PE has transmitted\n     to its peer an
        \"Application Connection\" message with the A-bit set\n     to 1 and is awaiting
        the peer's response.\n   - OPERATIONAL: This state indicates that the Application
        Connection\n     is operational.\n   The state transition table and state
        transition diagram follow.\n            ICCP Application Connection State
        Transition Table\n     STATE          EVENT                                  NEW
        STATE\n   -------------------------------------------------------------------\n
        \    NONEXISTENT    ICCP connection established            RESET\n     RESET
        \         ICCP connection torn down              NONEXISTENT\n                    Transmit
        Application Connect TLV       CONNSENT\n                    Receive Application
        Connect TLV        CONNREC\n                    Receive any other Application
        TLV      RESET\n                      Action: Transmit NAK TLV\n     CONNSENT
        \      Receive NAK TLV                        RESET\n                    Receive
        Application Connect TLV        OPERATIONAL\n                    with A-bit=1\n
        \                     Action: Transmit Application Connect\n                      TLV
        with A-bit=1\n                    Receive any other Application TLV      RESET\n
        \                     Action: Transmit NAK TLV\n                    ICCP connection
        torn down              NONEXISTENT\n     CONNREC        Transmit NAK TLV                       RESET\n
        \                   Transmit Application Connect TLV       CONNECTING\n                    with
        A-bit=1\n                    Receive Application Connect TLV        CONNREC\n
        \                   Receive any Application TLV except     RESET\n                    Connect\n
        \                     Action: Transmit NAK TLV\n                    ICCP connection
        torn down              NONEXISTENT\n     CONNECTING     Receive Application
        Connect TLV        OPERATIONAL\n                    with A-bit=1\n                    Receive
        any other Application TLV      RESET\n                      Action: Transmit
        NAK TLV\n                    ICCP connection torn down              NONEXISTENT\n
        \    OPERATIONAL    Receive Application Disconnect TLV     RESET\n                    Transmit
        Application Disconnect TLV    RESET\n                    ICCP connection torn
        down              NONEXISTENT\n           ICCP Application Connection State
        Transition Diagram\n                              +------------+\n                              |
        \           |\n            +---------------->|NONEXISTENT |  ICCP connection
        torn down\n            |                 |            |<--------------------------+\n
        \           |                 +------------+                           |\n
        \           |     ICCP connection|    ^ ICCP connection                |\n
        \           |       established  |    | torn down                      |\n
        \           |                    |    |                                |\n
        \           |                    V    |          Rx other App TLV/     |\n
        \           |                +-----------+<-----+  Tx NAK TLV          |\n
        \    ICCP   |    Rx App      |           |      |                      |\n
        \    connect|    Connect TLV |   RESET   |------+                      |\n
        \    torn   |  +-------------|           |---------------+             |\n
        \    down   |  |             +-----------+    Tx App     |             |\n
        \           |  |              ^  ^   ^  ^     Connect TLV|             |\n
        \           |  |      Tx NAK  |  |   |  |                |             |\n
        \           |  |      or      |  |   |  |                |             |\n
        \           |  |      Rx non- |  |   |  |                |             |\n
        \           |  |      Connect |  |   |  |                |             |\n
        \           |  V      TLV/Tx NAK |   |  |Rx NAK TLV      V             |\n
        \           | +-----------+   |  |   |  |or       +--------+           |\n
        \           +-|           |---+  |   |  +---------|        |           |\n
        \             |CONNREC    |      |   |   Rx other |CONNSENT|---------->+\n
        \           +-|           |-+    |   |   App TLV/ |        |           |\n
        \           | +-----------+ |    |   |     Tx NAK +--------+           |\n
        \           |           ^---+    |   |                 |Rx App Connect |\n
        \           |        Rx App      |   |                 |TLV (A=1)/     |\n
        \           |    Connect TLV     |   |Rx App Disconn   | Tx App        |\n
        \           |                    |   |or               | Connect TLV   |\n
        \           | Tx App Connect     |   |Tx App Disconn   V (A=1)         |\n
        \           | TLV (A=1)          |   |      +------------+             |\n
        \           |                    |   +------|            |             |\n
        \           |       Rx other App |          |OPERATIONAL |------------>+\n
        \           |       TLV/Tx NAK   |          |            |             |\n
        \           |             +------+          +------------+             |\n
        \           |             |                       ^ Rx App Connect     |\n
        \           |    +----------+                     | TLV (A=1)          |\n
        \           |    |          |---------------------+                    |\n
        \           +--->|CONNECTING|                                          |\n
        \                |          |----------------------------------------->+\n
        \                +----------+\n"
      title: 4.4.2.  Application Connection State Machine
    title: 4.4.  Application Connection Management
  - contents:
    - "4.5.  Application Data Transfer\n   When an application has information to
      transfer over ICCP, it\n   triggers the transmission of an \"Application Data\"
      message.  ICCP\n   guarantees in-order and lossless delivery of data.  An application\n
      \  may reject a message or a set of one or more TLVs within a message by\n   using
      the Notification message with a \"NAK TLV\".  Furthermore, an\n   application
      may implement its own ACK mechanism, if deemed required,\n   by defining an
      application-specific TLV to be transported in an\n   \"Application Data\" message.
      \ Note that this document does not define\n   a common ACK mechanism for applications.\n
      \  It is left up to the application to define the procedures to handle\n   the
      situation where a PE receives a \"NAK TLV\" in response to a\n   transmitted
      \"Application Data\" message.  Depending on the specifics\n   of the application,
      it may be favorable to have the PE that sent the\n   NAK explicitly request
      retransmission of data.  On the other hand,\n   for certain applications it
      may be more suitable to have the original\n   sender of the \"Application Data\"
      message handle retransmissions in\n   response to a NAK.  ICCP supports both
      models.\n"
    title: 4.5.  Application Data Transfer
  - contents:
    - "4.6.  Dedicated Redundancy Group LDP Session\n   For certain ICCP applications,
      it is required that a fairly large\n   amount of RG information be exchanged
      in a very short period of time.\n   In order to better distribute the load in
      a multiple-processor\n   system, and to avoid head-of-line blocking to other
      LDP applications,\n   initiating a separate TCP/IP session between the two LDP
      speakers may\n   be required.\n   This procedure is OPTIONAL and does not change
      the operation of LDP\n   or ICCP.\n   A PE that requires a separate LDP session
      will advertise a separate\n   LDP adjacency with a non-zero label space identifier.
      \ This will\n   cause the remote peer to open a separate LDP session for this
      label\n   space.  No labels need to be advertised in this label space, as it
      is\n   only used for one or a set of ICCP RGs.  All relevant LDP and ICCP\n
      \  procedures still apply as described in [RFC5036] and this document.\n"
    title: 4.6.  Dedicated Redundancy Group LDP Session
  title: 4.  ICC LDP Protocol Extension Specification
- contents:
  - "5.  ICCP PE Node Failure / Isolation Detection Mechanism\n   ICCP provides its
    client applications a notification when a remote PE\n   that is a member of the
    RG is no longer reachable.  In the case of a\n   dedicated interconnect, this
    indicates that the remote PE node has\n   failed, whereas in the case of a shared
    interconnect this indicates\n   that the remote PE node has either failed or become
    isolated from the\n   MPLS network.  This information is used by the client applications
    to\n   trigger failover according to the procedures of the redundancy\n   protocol
    employed on the AC and PW.  To that end, ICCP does not\n   define its own Keep-Alive
    mechanism for the purpose of monitoring the\n   health of remote PE nodes but
    rather reuses existing fault detection\n   mechanisms.  The following mechanisms
    may be used by ICCP to detect\n   PE node failure:\n   - Bidirectional Forwarding
    Detection (BFD)\n     Run a BFD session [RFC5880] between the PEs that are members
    of a\n     given RG, and use that to detect PE node failure.  This assumes\n     that
    resiliency mechanisms are in place to protect connectivity to\n     the remote
    PE nodes, and hence loss of BFD periodic messages from a\n     given PE node can
    only mean that the node itself has failed.\n   - IP Reachability Monitoring\n
    \    It is possible for a PE to monitor IP-layer connectivity to other\n     members
    of an RG that are participating in IGP/BGP.  When\n     connectivity to a given
    PE is lost, the local PE interprets that to\n     mean loss of the remote PE node.
    \ This technique assumes that\n     resiliency mechanisms are in place to protect
    the route to the\n     remote PE nodes, and hence loss of IP reachability to a
    given node\n     can only mean that the node itself has failed.\n   It is worth
    noting here that loss of the LDP session with a PE in an\n   RG is not a reliable
    indicator that the remote PE itself is down.  It\n   is possible, for example,
    that the remote PE could encounter a local\n   event that would lead to resetting
    the LDP session, while the PE node\n   would remain operational for traffic forwarding
    purposes.\n"
  title: 5.  ICCP PE Node Failure / Isolation Detection Mechanism
- contents:
  - "6.  ICCP Message Formats\n   This section defines the messages exchanged at the
    Application and\n   ICC layers.\n"
  - contents:
    - "6.1.  Encoding ICC into LDP Messages\n   ICCP requires reliable, in-order,
      stateful message delivery, as well\n   as capability negotiation between PEs.
      \ LDP offers all of these\n   features and is already in wide use in the applications
      that would\n   also require the ICCP protocol extensions.  For these reasons,
      ICCP\n   takes advantage of the already-defined LDP protocol infrastructure.\n
      \  [RFC5036], Section 3.5 defines a generic LDP message structure.  A\n   new
      set of LDP message types is defined to communicate the ICCP\n   information.
      \ LDP message types in the range 0x0700 to 0x070F will be\n   used for ICCP.\n
      \  Message types have been allocated by IANA; see Section 12 below for\n   details.\n"
    - contents:
      - "6.1.1.  ICC Header\n   Every ICCP message comprises an ICC-specific LDP Header
        followed by\n   message data.  The format of the ICC Header is as follows:\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|   Message Type              |      Message Length           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                     Message ID                                |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |   Type = 0x0005 (ICC RG ID)   |           Length=4            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                          ICC RG ID                            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \                                                              +\n     |                   Mandatory
        ICC Parameters                    |\n     ~                                                               ~\n
        \    +                                                               +\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                                                               |\n     +
        \                                                              +\n     |                   Optional
        ICC Parameters                     |\n     ~                                                               ~\n
        \    +                                                               +\n     |
        \                                                              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit\n     Unknown message bit.  Upon receipt of an unknown message,
        if U is\n     clear (=0), a notification is returned to the message originator;\n
        \    if U is set (=1), the unknown message is silently ignored.\n     Subsequent
        sections that define messages specify a value for the\n     U-bit.\n   - Message
        Type\n     Identifies the type of the ICCP message.  Must be in the range\n
        \    0x0700 to 0x070F.\n   - Message Length\n     2-octet integer specifying
        the total length of this message in\n     octets, excluding the \"U-bit\",
        \"Message Type\", and \"Length\" fields.\n   - Message ID\n     4-octet value
        used to identify this message.  Used by the sending\n     PE to facilitate
        identifying \"RG Notification\" messages that may\n     apply to this message.
        \ A PE sending an \"RG Notification\" message\n     in response to this message
        SHOULD include this Message ID in the\n     \"NAK TLV\" of the \"RG Notification\"
        message; see Section 6.4.\n   - ICC RG ID TLV\n     A TLV of type 0x0005,
        length 4, containing a 4-octet unsigned\n     integer designating the Redundancy
        Group of which the sending\n     device is a member.  RG ID value 0x00000000
        is reserved by the\n     protocol.\n   - Mandatory ICC Parameters\n     Variable-length
        set of required message parameters.  Some messages\n     have no required
        parameters.\n     For messages that have required parameters, the required
        parameters\n     MUST appear in the order specified by the individual message\n
        \    specifications in the sections that follow.\n   - Optional ICC Parameters\n
        \    Variable-length set of optional message parameters.  Many messages\n
        \    have no optional parameters.\n     For messages that have optional parameters,
        the optional parameters\n     may appear in any order.\n"
      title: 6.1.1.  ICC Header
    - contents:
      - "6.1.2.  ICC Parameter Encoding\n   The generic format of an ICC parameter
        is as follows:\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|       Type                |             Length            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |   TLV(s)                                                      |\n     ~
        \                                                              ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit\n     Unknown TLV bit.  Upon receipt of an unknown TLV, if U is
        clear\n     (=0), a notification MUST be returned to the message originator
        and\n     the entire message MUST be ignored; if U is set (=1), the unknown\n
        \    TLV MUST be silently ignored and the rest of the message processed\n
        \    as if the unknown TLV did not exist.  Subsequent sections that\n     define
        TLVs specify a value for the U-bit.\n   - F-bit\n     Forward unknown TLV
        bit.  This bit applies only when the U-bit is\n     set and the LDP message
        containing the unknown TLV is to be\n     forwarded.  If F is clear (=0),
        the unknown TLV is not forwarded\n     with the LDP message; if F is set (=1),
        the unknown TLV is\n     forwarded with the LDP message.  Subsequent sections
        that define\n     TLVs specify a value for the F-bit.  By setting both the
        U- and\n     F-bits, a TLV can be propagated as opaque data through nodes
        that\n     do not recognize the TLV.\n   - Type\n     14 bits indicating the
        ICC Parameter type.\n   - Length\n     Length of the TLV in octets, excluding
        the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n   - TLV(s):
        \ A set of 0 or more TLVs.  Contents will vary according to\n     the message
        type.\n"
      title: 6.1.2.  ICC Parameter Encoding
    - contents:
      - "6.1.3.  Redundant Object Identifier Encoding\n   The Redundant Object Identifier
        (ROID) is a generic opaque handle\n   that uniquely identifies a Redundant
        Object (e.g., link, bundle,\n   VLAN) that is being protected in an RG.  It
        is encoded as follows:\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                              ROID                             |\n     +
        \                                                              +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   where
        the ROID is an 8-octet field encoded as an unsigned integer.\n   The ROID
        value of 0 is reserved.\n   The ROID is carried within application-specific
        TLVs.\n"
      title: 6.1.3.  Redundant Object Identifier Encoding
    title: 6.1.  Encoding ICC into LDP Messages
  - contents:
    - "6.2.  RG Connect Message\n   The \"RG Connect\" message is used to establish
      the ICCP RG connection\n   in addition to individual Application Connections
      between PEs in an\n   RG.  An \"RG Connect\" message with no \"Application Connect
      TLV\"\n   signals establishment of the ICCP RG connection, whereas an \"RG\n
      \  Connect\" message with a valid \"Application Connect TLV\" signals the\n
      \  establishment of an Application Connection in addition to the ICCP RG\n   connection
      if the latter is not already established.\n   An implementation MAY send a dedicated
      \"RG Connect\" message to set up\n   the ICCP RG connection and a separate \"RG
      Connect\" message for each\n   client application.  However, all implementations
      MUST support the\n   receipt of an \"RG Connect\" message that triggers the
      setup of the\n   ICCP RG connection as well as a single Application Connection\n
      \  simultaneously.\n   A PE sends an \"RG Connect\" message to declare its membership
      in a\n   Redundancy Group.  One such message should be sent to each PE that
      is\n   a member of the same RG.  The set of PEs to which \"RG Connect\"\n   messages
      should be transmitted is known via configuration or an auto-\n   discovery mechanism
      that is outside the scope of this specification.\n   If a device is a member
      of multiple RGs, it MUST send separate \"RG\n   Connect\" messages for each
      RG even if the receiving device(s) happens\n   to be the same.\n   The format
      of the \"RG Connect\" message is as follows:\n     i. ICC Header with Message
      type = \"RG Connect Message\" (0x0700)\n    ii. ICC Sender Name TLV\n   iii.
      Zero or one \"Application Connect TLV\"\n   The currently defined \"Application
      Connect TLVs\" are as follows:\n   - PW-RED Connect TLV (Section 7.1.1)\n   -
      mLACP Connect TLV (Section 7.2.1)\n   The details of these TLVs are discussed
      in Section 7.\n   The \"RG Connect\" message can contain zero or one \"Application
      Connect\n   TLV\".\n"
    - contents:
      - "6.2.1.  ICC Sender Name TLV\n   The \"ICC Sender Name TLV\" carries the hostname
        of the sender, encoded\n   in UTF-8 [RFC3629] format.  This is used primarily
        for the purpose of\n   management of the RG and easing network operations.
        \ The specific\n   format is shown below:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|       Type = 0x0001       |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |  Sender Name                                                  |\n     +
        \                                            +-+-+-+-+-+-+-+-+-+\n     ~                                             ~\n
        \    |      ...                                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U=F=0\n   - Type\n     Set to 0x0001 (from the ICC parameter name space).\n
        \  - Length\n     Length of the TLV in octets, excluding the \"U-bit\", \"F-bit\",\n
        \    \"Type\", and \"Length\" fields.\n   - Sender Name\n     An administratively
        assigned name of the sending device, encoded in\n     UTF-8 format and limited
        to a maximum of 80 octets.  This field\n     does not include a terminating
        null character.\n"
      title: 6.2.1.  ICC Sender Name TLV
    title: 6.2.  RG Connect Message
  - contents:
    - "6.3.  RG Disconnect Message\n   The \"RG Disconnect\" message serves a dual
      purpose: to signal that a\n   particular Application Connection is being closed
      within an RG or\n   that the ICCP RG connection itself is being disconnected
      because the\n   PE wishes to leave the RG.  The format of this message is as
      follows:\n      0                   1                   2                   3\n
      \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |U|   Message Type = 0x0701     |      Message Length           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                     Message ID                                |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |   Type = 0x0005 (ICC RG ID)   |           Length=4            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                     ICC RG ID                                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |                    Disconnect Code TLV                        |\n     +
      \                                                              +\n     |                                                               |\n
      \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
      \             Optional Application Disconnect TLV              |\n     ~                                                               ~\n
      \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
      \                  Optional Parameter TLVs                     |\n     +                                                               +\n
      \    |                                                               |\n     ~
      \                                                              ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \  - U-bit\n     U=0\n   - Message Type\n     The message type for the \"RG
      Disconnect\" message is set to 0x0701.\n   - Length\n     Length of the TLV
      in octets, excluding the \"U-bit\", \"Message Type\",\n     and \"Message Length\"
      fields.\n   - Message ID\n     Defined in Section 6.1.1 above.\n   - ICC RG
      ID\n     Defined in Section 6.1.1 above.\n   - Disconnect Code TLV\n     The
      format of this TLV is as follows:\n        0                   1                   2
      \                  3\n        0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
      3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |U|F|         Type = 0x0004     |    Length                     |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \      |                      ICCP Status Code                         |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    - U-bit and F-bit\n       Both are set to 0.\n     - Type\n       Set to
      \"Disconnect Code TLV\" (0x0004).\n     - Length\n       Length of the TLV in
      octets, excluding the \"U-bit\", \"F-bit\",\n       \"Type\", and \"Length\"
      fields.\n     - ICCP Status Code\n       A status code that reflects the reason
      for the disconnect\n       message.  Allowed values are \"ICCP RG Removed\"
      and \"ICCP\n       Application Removed from RG\".\n   - Optional Application
      Disconnect TLV\n     Zero or one \"Application Disconnect TLV\" (defined in
      Sections 7.1.2\n     and 7.2.2).  If the \"RG Disconnect\" message has a status
      code of\n     \"RG Removed\", then it MUST NOT contain any \"Application Disconnect\n
      \    TLVs\", as the sending PE is signaling that it has left the RG and\n     thus
      is disconnecting the ICCP RG connection with all associated\n     client Application
      Connections.  If the message has a status code\n     of \"Application Removed
      from RG\", then it MUST contain exactly one\n     \"Application Disconnect TLV\",
      as the sending PE is only tearing\n     down the connection for the specified
      application.  Other\n     applications, and the ICCP RG connection, are not
      to be affected.\n   - Optional Parameter TLVs\n     None are defined for this
      message in this document.  This is\n     specified to allow for future extensions.\n"
    title: 6.3.  RG Disconnect Message
  - contents:
    - "6.4.  RG Notification Message\n   A PE sends an \"RG Notification\" message
      to indicate one of the\n   following: to reject an ICCP connection, to reject
      an Application\n   Connection, to reject an entire message, or to reject one
      or more\n   TLVs within a message.  The Notification message MUST only be sent
      to\n   a PE that is already part of an RG.\n   The \"RG Notification\" message
      MUST only be used to reject messages or\n   TLVs corresponding to a single ICCP
      application.  In other words,\n   there is a limit of at most a single ICCP
      application per \"RG\n   Notification\" message.\n   The format of the \"RG
      Notification\" message is as follows:\n    i. ICC Header with Message type =
      \"RG Notification Message\" (0x0702)\n   ii. Notification Message TLVs\n   The
      currently defined Notification message TLVs are as follows:\n    i. ICC Sender
      Name TLV\n   ii. Negative Acknowledgement (NAK) TLV\n"
    - contents:
      - "6.4.1.  Notification Message TLVs\n   The \"ICC Sender Name TLV\" uses the
        same format as the format used in\n   the \"RG Connect\" message and was described
        above.\n   The \"NAK TLV\" is defined as follows:\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|       Type = 0x0002       |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                      ICCP Status Code                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                     Rejected Message ID                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                  Optional TLV(s)                              |\n     +
        \                                                              +\n     |                                                               |\n
        \    ~                                                               ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to \"NAK
        TLV\" (0x0002).\n   - Length\n     Length of the TLV in octets, excluding
        the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n   - ICCP
        Status Code\n     A status code that reflects the reason for the \"NAK TLV\".
        \ Allowed\n     values are as follows:\n       i. Unknown ICCP RG (0x00010001)\n
        \         This code is used to reject a new incoming ICCP connection for\n
        \         an RG that is not configured on the local PE.  When this code\n
        \         is used, the \"Rejected Message ID\" field MUST contain the\n          message
        ID of the rejected \"RG Connect\" message.\n      ii. ICCP Connection Count
        Exceeded (0x00010002)\n          This is used to reject a new incoming ICCP
        connection that\n          would cause the local PE's ICCP connection count
        to exceed its\n          capabilities.  When this code is used, the \"Rejected
        Message\n          ID\" field MUST contain the message ID of the rejected
        \"RG\n          Connect\" message.\n     iii. ICCP Application Connection
        Count Exceeded (0x00010003)\n          This is used to reject a new incoming
        Application Connection\n          that would cause the local PE's ICCP connection
        count to\n          exceed its capabilities.  When this code is used, the\n
        \         \"Rejected Message ID\" field MUST contain the message ID of the\n
        \         rejected \"RG Connect\" message and the corresponding\n          \"Application
        Connect TLV\" MUST be included in the \"Optional\n          TLV\".\n      iv.
        ICCP Application not in RG (0x00010004)\n          This is used to reject
        a new incoming Application Connection\n          when the local PE doesn't
        support the application or the\n          application is not configured in
        the RG.  When this code is\n          used, the \"Rejected Message ID\" field
        MUST contain the message\n          ID of the rejected \"RG Connect\" message
        and the corresponding\n          \"Application Connect TLV\" MUST be included
        in the \"Optional\n          TLV\".\n       v. Incompatible ICCP Protocol
        Version (0x00010005)\n          This is used to reject a new incoming Application
        Connection\n          when the local PE has an incompatible version of the\n
        \         application.  When this code is used, the \"Rejected Message\n          ID\"
        field MUST contain the message ID of the rejected \"RG\n          Connect\"
        message and the corresponding \"Application Connect\n          TLV\" MUST
        be included in the \"Optional TLV\".\n      vi. ICCP Rejected Message (0x00010006)\n
        \         This is used to reject an \"RG Application Data\" message, or\n
        \         one or more TLVs within the message.  When this code is used,\n
        \         the \"Rejected Message ID\" field MUST contain the message ID of\n
        \         the rejected \"RG Application Data\" message.\n     vii. ICCP Administratively
        Disabled (0x00010007)\n          This is used to reject any ICCP messages
        from a peer from\n          which the PE is not allowed to exchange ICCP messages
        due to\n          local administrative policy.\n   - Rejected Message ID\n
        \    If non-zero, a 4-octet value that identifies the peer message to\n     which
        the \"NAK TLV\" refers.  If zero, no specific peer message is\n     being
        identified.\n   - Optional TLV(s)\n     A set of one or more optional TLVs.
        \ If the status code is\n     \"Rejected Message\", then this field contains
        the TLV or TLVs that\n     were rejected.  If the entire message is rejected,
        all of its TLVs\n     MUST be present in this field; otherwise, the subset
        of TLVs that\n     were rejected MUST be echoed in this field.\n     If the
        status code is \"Incompatible Protocol Version\", then this\n     field contains
        the original \"Application Connect TLV\" sent by the\n     peer, in addition
        to the \"Requested Protocol Version TLV\" defined\n     below:\n        0
        \                  1                   2                   3\n        0 1
        2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \      |U|F|     Type = 0x0003         |    Length                     |\n
        \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \      |   Connection Reference        |   Requested Version           |\n
        \      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    - U-bit and F-bit\n       Both are set to 0.\n     - Type\n       Set
        to 0x0003 for \"Requested Protocol Version TLV\".\n     - Length\n       Length
        of the TLV in octets, excluding the \"U-bit\", \"F-bit\",\n       \"Type\",
        and \"Length\" fields.\n     - Connection Reference\n       Set to the \"Type\"
        field of the \"Application Connect TLV\" that was\n       rejected because
        of incompatible version.\n     - Requested Version\n       The version of
        the application supported by the transmitting\n       device.  For this version
        of the protocol, it is set to 0x0001.\n"
      title: 6.4.1.  Notification Message TLVs
    title: 6.4.  RG Notification Message
  - contents:
    - "6.5.  RG Application Data Message\n   The \"RG Application Data\" message is
      used to transport application\n   data between PEs within an RG.  A single message
      can be used to carry\n   data from only one application.  Multiple Application
      TLVs are\n   allowed in a single message, as long as all of these TLVs belong
      to\n   the same application.  The format of the \"Application Data\" message\n
      \  is as follows:\n    i. ICC Header with Message type = \"RG Application Data
      Message\"\n       (0x0703)\n   ii. Application-specific TLVs\n   The details
      of these TLVs are discussed in Section 7.  All\n   application-specific TLVs
      in one \"RG Application Data\" message MUST\n   belong to a single application
      but MAY reference different ROs.\n"
    title: 6.5.  RG Application Data Message
  title: 6.  ICCP Message Formats
- contents:
  - '7.  Application TLVs

    '
  - contents:
    - "7.1.  Pseudowire Redundancy (PW-RED) Application TLVs\n   This section discusses
      the \"ICCP TLVs\" for the Pseudowire Redundancy\n   application.\n"
    - contents:
      - "7.1.1.  PW-RED Connect TLV\n   This TLV is included in the \"RG Connect\"
        message to signal the\n   establishment of a PW-RED Application Connection.\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0010         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Protocol Version         |A|         Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                      Optional Sub-TLVs                        |\n     ~
        \                                                              ~\n     |                                                               |\n
        \    +                                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \            ...                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0010
        for \"PW-RED Connect TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Protocol Version\n     The version of this particular protocol for the
        purposes of ICCP.\n     This is set to 0x0001.\n   - A-bit\n     Acknowledgement
        bit.  Set to 1 if the sender has received a \"PW-RED\n     Connect TLV\" from
        the recipient.  Otherwise, set to 0.\n   - Reserved\n     Reserved for future
        use.\n   - Optional Sub-TLVs\n     There are no optional sub-TLVs defined
        for this version of the\n     protocol.  This document does not impose any
        restrictions on the\n     length of the sub-TLVs.\n"
      title: 7.1.1.  PW-RED Connect TLV
    - contents:
      - "7.1.2.  PW-RED Disconnect TLV\n   This TLV is used in an \"RG Disconnect\"
        message to indicate that the\n   connection for the PW-RED application is
        to be terminated.\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0011         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                       Optional Sub-TLVs                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0011
        for \"PW-RED Disconnect TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Optional Sub-TLVs\n     The only optional sub-TLV defined for this version
        of the protocol\n     is the \"PW-RED Disconnect Cause TLV\" defined in Section
        7.1.2.1.\n"
      - contents:
        - "7.1.2.1.  PW-RED Disconnect Cause TLV\n      0                   1                   2
          \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |U|F|     Type = 0x0019         |    Length                     |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                      Disconnect Cause String                  |\n
          \    ~                                                               ~\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0019
          for \"PW-RED Disconnect Cause TLV\".\n   - Length\n     Length of the TLV
          in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
          fields.\n   - Disconnect Cause String\n     Variable-length string specifying
          the reason for the disconnect,\n     encoded in UTF-8 format.  The string
          does not include a terminating\n     null character.  Used for network management.\n"
        title: 7.1.2.1.  PW-RED Disconnect Cause TLV
      title: 7.1.2.  PW-RED Disconnect TLV
    - contents:
      - "7.1.3.  PW-RED Config TLV\n   The \"PW-RED Config TLV\" is used in the \"RG
        Application Data\" message\n   and has the following format:\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|   Type = 0x0012           |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                              ROID                             |\n     +
        \                                                              +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \     PW Priority              |            Flags              |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                  Service Name TLV                             |\n     ~
        \                                                              ~\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |            PW ID TLV or Generalized PW ID TLV                 |\n     ~
        \                                                              ~\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   -
        U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0012 for
        \"PW-RED Config TLV\".\n   - Length\n     Length of the TLV in octets, excluding
        the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n   - ROID\n
        \    As defined in Section 6.1.3.\n   - PW Priority\n     2 octets.  Pseudowire
        Priority.  Used to indicate which PW has\n     better priority to go into
        active state.  Numerically lower numbers\n     are better priority.  In case
        of a tie, the PE with the numerically\n     lower identifier (i.e., IP Address)
        has better priority.\n   - Flags\n     Valid values are as follows:\n       i.
        Synchronized (0x01)\n          Indicates that the sender has concluded transmitting
        all\n          pseudowire configuration for a given service.\n      ii. Purge
        Configuration (0x02)\n          Indicates that the pseudowire is no longer
        configured for\n          PW-RED operation.\n     iii. Independent Mode (0x04)\n
        \         Indicates that the pseudowire is configured for redundancy\n          using
        the Independent Mode of operation, per Section 5.1 of\n          [RFC6870].\n
        \     iv. Independent Mode with Request Switchover (0x08)\n          Indicates
        that the pseudowire is configured for redundancy\n          using the Independent
        Mode of operation with the use of the\n          \"Request Switchover\" bit,
        per Section 6.3 of [RFC6870].\n       v. Master Mode (0x10)\n          Indicates
        that the pseudowire is configured for redundancy\n          using the Master/Slave
        Mode of operation, with the advertising\n          PE acting as Master, per
        Section 5.2 of [RFC6870].\n      vi. Slave Mode (0x20)\n          Indicates
        that the pseudowire is configured for redundancy\n          using the Master/Slave
        Mode of operation, with the advertising\n          PE acting as Slave, per
        Section 5.2 of [RFC6870].\n   - Sub-TLVs\n     The \"PW-RED Config TLV\" includes
        the following two sub-TLVs:\n       i. Service Name TLV\n      ii. One of
        the following: PW ID TLV or Generalized PW ID TLV\n     The format of the
        sub-TLVs is defined in Sections 7.1.3.1 through\n     7.1.3.3.\n"
      - contents:
        - "7.1.3.1.  Service Name TLV\n      0                   1                   2
          \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |U|F|    Type = 0x0013          |    Length                     |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                        Service Name                           |\n
          \    ~                                                               ~\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0013
          for \"Service Name TLV\".\n   - Length\n     Length of the TLV in octets,
          excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
          \  - Service Name\n     The name of the L2VPN service instance, encoded
          in UTF-8 format and\n     up to 80 octets in length.  The string does not
          include a\n     terminating null character.\n"
        title: 7.1.3.1.  Service Name TLV
      - contents:
        - "7.1.3.2.  PW ID TLV\n   This TLV is used to communicate the configuration
          of PWs for VPWS.\n      0                   1                   2                   3\n
          \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |U|F|    Type = 0x0014          |    Length                     |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                         Peer ID                               |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                         Group ID                              |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                         PW ID                                 |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0014
          for \"PW ID TLV\".\n   - Length\n     Length of the TLV in octets, excluding
          the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n   - Peer
          ID\n     4-octet LDP Router ID of the peer at the far end of the PW.\n   -
          Group ID\n     Same as Group ID in [RFC4447], Section 5.2.\n   - PW ID\n
          \    Same as PW ID in [RFC4447], Section 5.2.\n"
        title: 7.1.3.2.  PW ID TLV
      - contents:
        - "7.1.3.3.  Generalized PW ID TLV\n   This TLV is used to communicate the
          configuration of PWs for VPLS.\n      0                   1                   2
          \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |U|F|   Type = 0x0015           |    Length                     |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |   AGI Type    |    Length     |      Value                    |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    ~                    AGI  Value (continued)                     ~\n
          \    |                                                               |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |   AII Type    |    Length     |      Value                    |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    ~                   SAII  Value (continued)                     ~\n
          \    |                                                               |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |   AII Type    |    Length     |      Value                    |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    ~                   TAII Value (continued)                      ~\n
          \    |                                                               |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0015
          for \"Generalized PW ID TLV\".\n   - Length\n     Length of the TLV in octets,
          excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
          \  - AGI, AII, SAII, and TAII\n     Defined in [RFC4447], Section 5.3.2.\n"
        title: 7.1.3.3.  Generalized PW ID TLV
      title: 7.1.3.  PW-RED Config TLV
    - contents:
      - "7.1.4.  PW-RED State TLV\n   The \"PW-RED State TLV\" is used in the \"RG
        Application Data\" message.\n   This TLV is used by a device to report its
        PW status to other members\n   in the RG.\n   The format of this TLV is as
        follows:\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0016         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                              ROID                             |\n     +
        \                                                              +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \                     Local PW State                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                      Remote PW State                          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0016
        for \"PW-RED State TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - ROID\n     As defined in Section 6.1.3.\n   - Local PW State\n     The
        status of the PW as determined by the sending PE, encoded in\n     the same
        format as the \"Status Code\" field of the \"PW Status TLV\"\n     defined
        in [RFC4447] and extended in [RFC6870].\n   - Remote PW State\n     The status
        of the PW as determined by the remote peer of the\n     sending PE.  Encoded
        in the same format as the \"Status Code\" field\n     of the \"PW Status TLV\"
        defined in [RFC4447] and extended in\n     [RFC6870].\n"
      title: 7.1.4.  PW-RED State TLV
    - contents:
      - "7.1.5.  PW-RED Synchronization Request TLV\n   The \"PW-RED Synchronization
        Request TLV\" is used in the \"RG\n   Application Data\" message.  This TLV
        is used by a device to request\n   that its peer retransmit configuration
        or operational state.  The\n   following information can be requested:\n   -
        configuration and/or state for one or more pseudowires\n   - configuration
        and/or state for all pseudowires\n   - configuration and/or state for all
        pseudowires in a given service\n   The format of the TLV is as follows:\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0017         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Request Number           |C|S|    Request Type           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                    Optional Sub-TLVs                          |\n     ~
        \                                                              ~\n     |                                                               |\n
        \    +                                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \            ...                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0017
        for \"PW-RED Synchronization Request TLV\".\n   - Length\n     Length of the
        TLV in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - Request Number\n     2 octets.  Unsigned integer uniquely identifying
        the request.  Used\n     to match the request with a response.  The value
        of 0 is reserved\n     for unsolicited synchronization and MUST NOT be used
        in the \"PW-RED\n     Synchronization Request TLV\".  Given the use of TCP,
        there are no\n     issues associated with the wrap-around of the Request Number.\n
        \  - C-bit\n     Set to 1 if the request is for configuration data.  Otherwise,\n
        \    set to 0.\n   - S-bit\n     Set to 1 if the request is for running state
        data.  Otherwise,\n     set to 0.\n   - Request Type\n     14 bits specifying
        the request type, encoded as follows:\n       0x00    Request Data for specified
        pseudowire(s)\n       0x01    Request Data for all pseudowires in specified
        service(s)\n       0x3FFF  Request All Data\n   - Optional Sub-TLVs\n     A
        set of zero or more TLVs, as follows:\n     If the \"Request Type\" field
        is set to 0x00, then this field\n     contains one or more \"PW ID TLVs\"
        or \"Generalized PW ID TLVs\".  If\n     the \"Request Type\" field is set
        to 0x01, then this field contains\n     one or more \"Service Name TLVs\".
        \ If the \"Request Type\" field is\n     set to 0x3FFF, then this field MUST
        be empty.  This document does\n     not impose any restrictions on the length
        of the sub-TLVs.\n"
      title: 7.1.5.  PW-RED Synchronization Request TLV
    - contents:
      - "7.1.6.  PW-RED Synchronization Data TLV\n   The \"PW-RED Synchronization
        Data TLV\" is used in the \"RG Application\n   Data\" message.  A pair of
        these TLVs is used by a device to delimit a\n   set of TLVs that are sent
        in response to a \"PW-RED Synchronization\n   Request TLV\".  The delimiting
        TLVs signal the start and end of the\n   synchronization data and associate
        the response with its\n   corresponding request via the \"Request Number\"
        field.\n   The \"PW-RED Synchronization Data TLVs\" are also used for unsolicited\n
        \  advertisements of complete PW-RED configuration and operational state\n
        \  data.  In this case, the \"Request Number\" field MUST be set to 0.\n   This
        TLV has the following format:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|    Type = 0x0018          |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |     Request Number            |     Flags                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0018
        for \"PW-RED Synchronization Data TLV\".\n   - Length\n     Length of the
        TLV in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - Request Number\n     2 octets.  Unsigned integer identifying
        the Request Number from the\n     \"PW-RED Synchronization Request TLV\" that
        solicited this\n     synchronization data response.\n   - Flags\n     2 octets.
        \ Response flags encoded as follows:\n       0x00  Synchronization Data Start\n
        \      0x01  Synchronization Data End\n"
      title: 7.1.6.  PW-RED Synchronization Data TLV
    title: 7.1.  Pseudowire Redundancy (PW-RED) Application TLVs
  - contents:
    - "7.2.  Multi-Chassis LACP (mLACP) Application TLVs\n   This section discusses
      the \"ICCP TLVs\" for Ethernet attachment\n   circuit redundancy using the multi-chassis
      LACP (mLACP) application.\n"
    - contents:
      - "7.2.1.  mLACP Connect TLV\n   This TLV is included in the \"RG Connect\"
        message to signal the\n   establishment of an mLACP Application Connection.\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0030         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Protocol Version         |A|         Reserved            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                    Optional Sub-TLVs                          |\n     ~
        \                                                              ~\n     |                                                               |\n
        \    +                                 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \            ...                 |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0030
        for \"mLACP Connect TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Protocol Version\n     The version of this particular protocol for the
        purposes of ICCP.\n     This is set to 0x0001.\n   - A-bit\n     Acknowledgement
        bit.  Set to 1 if the sender has received an \"mLACP\n     Connect TLV\" from
        the recipient.  Otherwise, set to 0.\n   - Reserved\n     Reserved for future
        use.\n   - Optional Sub-TLVs\n     There are no optional sub-TLVs defined
        for this version of the\n     protocol.\n"
      title: 7.2.1.  mLACP Connect TLV
    - contents:
      - "7.2.2.  mLACP Disconnect TLV\n   This TLV is used in an \"RG Disconnect\"
        message to indicate that the\n   connection for the mLACP application is to
        be terminated.\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0031         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                       Optional Sub-TLVs                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0031
        for \"mLACP Disconnect TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Optional Sub-TLVs\n     The only optional sub-TLV defined for this version
        of the protocol\n     is the \"mLACP Disconnect Cause TLV\" defined in Section
        7.2.2.1.\n"
      - contents:
        - "7.2.2.1.  mLACP Disconnect Cause TLV\n      0                   1                   2
          \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
          2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |U|F|     Type = 0x003A         |    Length                     |\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \    |                      Disconnect Cause String                  |\n
          \    ~                                                               ~\n
          \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
          \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x003A
          for \"mLACP Disconnect Cause TLV\".\n   - Length\n     Length of the TLV
          in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
          fields.\n   - Disconnect Cause String\n     Variable-length string specifying
          the reason for the disconnect.\n     Used for network management.\n"
        title: 7.2.2.1.  mLACP Disconnect Cause TLV
      title: 7.2.2.  mLACP Disconnect TLV
    - contents:
      - "7.2.3.  mLACP System Config TLV\n   The \"mLACP System Config TLV\" is sent
        in the \"RG Application Data\"\n   message.  This TLV announces the local
        node's LACP system parameters\n   to the RG peers.\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0032         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                         System ID                             |\n     +
        \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |                               |
        \        System Priority       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |    Node ID    |\n     +-+-+-+-+-+-+-+-+\n   - U-bit and F-bit\n     Both
        are set to 0.\n   - Type\n     Set to 0x0032 for \"mLACP System Config TLV\".\n
        \  - Length\n     Length of the TLV in octets, excluding the \"U-bit\", \"F-bit\",\n
        \    \"Type\", and \"Length\" fields.\n   - System ID\n     6-octet field
        encoding the System ID used by LACP, as specified in\n     [IEEE-802.1AX],
        Section 5.3.2.\n   - System Priority\n     2 octets encoding the LACP System
        Priority, as defined in\n     [IEEE-802.1AX], Section 5.3.2.\n   - Node ID\n
        \    1 octet.  LACP Node ID.  Used to ensure that the LACP Port Numbers\n
        \    are unique across all devices in an RG.  Valid values are in the\n     range
        0-7.  Uniqueness of the LACP Port Numbers across RG members\n     is ensured
        by encoding the Port Numbers as follows:\n     - Most significant bit always
        set to 1\n     - The next 3 most significant bits set to Node ID\n     - Remaining
        12 bits freely assigned by the system\n"
      title: 7.2.3.  mLACP System Config TLV
    - contents:
      - "7.2.4.  mLACP Aggregator Config TLV\n   The \"mLACP Aggregator Config TLV\"
        is sent in the \"RG Application\n   Data\" message.  This TLV is used to notify
        RG peers about the local\n   configuration state of an Aggregator.\n      0
        \                  1                   2                   3\n      0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0036         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                              ROID                             |\n     +
        \                                                              +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \      Aggregator ID           |    MAC Address                |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              +\n     |                                                               |\n
        \    +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |
        \      Actor Key               |    Member Ports Priority      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |     Flags     | Agg Name Len  |    Aggregator Name            |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              +\n     ~                                                               ~\n
        \    |                                        ...                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0036
        for \"mLACP Aggregator Config TLV\".\n   - Length\n     Length of the TLV
        in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - ROID\n     Defined in Section 6.1.3 above.\n   - Aggregator
        ID\n     2 octets.  LACP Aggregator Identifier, as specified in\n     [IEEE-802.1AX],
        Section 5.4.6.\n   - MAC Address\n     6 octets encoding the Aggregator Media
        Access Control (MAC)\n     address.\n   - Actor Key\n     2 octets.  LACP
        Actor Key for the corresponding Aggregator, as\n     specified in [IEEE-802.1AX],
        Section 5.3.5.\n   - Member Ports Priority\n     2 octets.  LACP administrative
        port priority associated with all\n     interfaces bound to the Aggregator.
        \ This field is valid only when\n     the \"Flags\" field has \"Priority Set\"
        asserted.\n   - Flags\n     Valid values are as follows:\n       i. Synchronized
        (0x01)\n          Indicates that the sender has concluded transmitting all\n
        \         Aggregator configuration information.\n      ii. Purge Configuration
        (0x02)\n          Indicates that the Aggregator is no longer configured for\n
        \         mLACP operation.\n     iii. Priority Set (0x04)\n          Indicates
        that the \"Member Ports Priority\" field is valid.\n   - Agg Name Len\n     1
        octet.  Length of the \"Aggregator Name\" field in octets.\n   - Aggregator
        Name\n     Aggregator name, encoded in UTF-8 format, up to a maximum of\n
        \    20 octets.  Used for ease of management.  The string does not\n     include
        a terminating null character.\n"
      title: 7.2.4.  mLACP Aggregator Config TLV
    - contents:
      - "7.2.5.  mLACP Port Config TLV\n   The \"mLACP Port Config TLV\" is sent in
        the \"RG Application Data\"\n   message.  This TLV is used to notify RG peers
        about the local\n   configuration state of a port.\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0033         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |       Port Number             |    MAC Address                |\n     +-------------------------------+
        \                              +\n     |                                                               |\n
        \    +---------------------------------------------------------------+\n     |
        \      Actor Key               |     Port Priority             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                          Port Speed                           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |     Flags     | Port Name Len |         Port Name             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
        \                              +\n     ~                                                               ~\n
        \    |                                        ...                    |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0033
        for \"mLACP Port Config TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Port Number\n     2 octets.  LACP Port Number for the corresponding interface,
        as\n     specified in [IEEE-802.1AX], Section 5.3.4.  The Port Number MUST\n
        \    be encoded with the Node ID, as discussed above.\n   - MAC Address\n
        \    6 octets encoding the port MAC address.\n   - Actor Key\n     2 octets.
        \ LACP Actor Key for the corresponding interface, as\n     specified in [IEEE-802.1AX],
        Section 5.3.5.\n   - Port Priority\n     2 octets.  LACP administrative port
        priority for the corresponding\n     interface, as specified in [IEEE-802.1AX],
        Section 5.3.4.  This\n     field is valid only when the \"Flags\" field has
        \"Priority Set\"\n     asserted.\n   - Port Speed\n     4-octet integer encoding
        the port's current bandwidth in units of\n     1,000,000 bits per second.
        \ This field corresponds to the\n     ifHighSpeed object of the IF-MIB [RFC2863].\n
        \  - Flags\n     Valid values are as follows:\n       i. Synchronized (0x01)\n
        \         Indicates that the sender has concluded transmitting all\n          member
        link port configurations for a given Aggregator.\n      ii. Purge Configuration
        (0x02)\n          Indicates that the port is no longer configured for mLACP\n
        \         operation.\n     iii. Priority Set (0x04)\n          Indicates that
        the \"Port Priority\" field is valid.\n   - Port Name Len\n     1 octet.  Length
        of the \"Port Name\" field in octets.\n   - Port Name\n     Corresponds to
        the ifName object of the IF-MIB [RFC2863].  Encoded\n     in UTF-8 format
        and truncated to 20 octets.  Port Name does not\n     include a terminating
        null character.\n"
      title: 7.2.5.  mLACP Port Config TLV
    - contents:
      - "7.2.6.  mLACP Port Priority TLV\n   The \"mLACP Port Priority TLV\" is sent
        in the \"RG Application Data\"\n   message.  This TLV is used by a device
        to either advertise its\n   operational Port Priority to other members in
        the RG or\n   authoritatively request that a particular member of an RG change
        its\n   port priority.\n      0                   1                   2                   3\n
        \     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0034         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |          OpCode               |          Port Number          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |         Aggregator ID         |    Last Port Priority         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |    Current Port Priority      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0034
        for \"mLACP Port Priority TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - OpCode\n     2 octets identifying the operational code point for the
        TLV,\n     encoded as follows:\n       0x00  Local Priority Change Notification\n
        \      0x01  Remote Request for Priority Change\n   - Port Number\n     2-octet
        field representing the LACP Port Number, as specified in\n     [IEEE-802.1AX],
        Section 5.3.4.  When the value of this field is 0,\n     it denotes all ports
        bound to the Aggregator specified in the\n     \"Aggregator ID\" field.  When
        non-zero, the Port Number MUST be\n     encoded with the Node ID, as discussed
        above.\n   - Aggregator ID\n     2 octets.  LACP Aggregator Identifier, as
        specified in\n     [IEEE-802.1AX], Section 5.4.6.\n   - Last Port Priority\n
        \    2 octets.  LACP port priority for the corresponding interface, as\n     specified
        in [IEEE-802.1AX], Section 5.3.4.  For local ports, this\n     field encodes
        the previous operational value of port priority.  For\n     remote ports,
        this field encodes the operational port priority last\n     known to the PE
        via notifications received from its peers in the\n     RG.\n   - Current Port
        Priority\n     2 octets.  LACP port priority for the corresponding interface,
        as\n     specified in [IEEE-802.1AX], Section 5.3.4.  For local ports, this\n
        \    field encodes the new operational value of port priority being\n     advertised
        by the PE.  For remote ports, this field specifies the\n     new port priority
        being requested by the PE.\n"
      title: 7.2.6.  mLACP Port Priority TLV
    - contents:
      - "7.2.7.  mLACP Port State TLV\n   The \"mLACP Port State TLV\" is used in
        the \"RG Application Data\"\n   message.  This TLV is used by a device to
        report its LACP port status\n   to other members in the RG.\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0035         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                      Partner System ID                        |\n     +
        \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |                               |
        \    Partner System Priority   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |     Partner Port Number       |     Partner Port Priority     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |       Partner Key             | Partner State |  Actor State  |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Actor Port Number        |           Actor Key           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |  Selected     |  Port State   |        Aggregator ID          |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0035
        for \"mLACP Port State TLV\".\n   - Length\n     Length of the TLV in octets,
        excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\" fields.\n
        \  - Partner System ID\n     6 octets.  The LACP Partner System ID for the
        corresponding\n     interface, encoded as a MAC address as specified in [IEEE-802.1AX],\n
        \    Section 5.4.2.2, item r.\n   - Partner System Priority\n     2-octet
        field specifying the LACP Partner System Priority, as\n     specified in [IEEE-802.1AX],
        Section 5.4.2.2, item q.\n   - Partner Port Number\n     2 octets encoding
        the LACP Partner Port Number, as specified in\n     [IEEE-802.1AX], Section
        5.4.2.2, item u.  The Port Number MUST be\n     encoded with the Node ID,
        as discussed above.\n   - Partner Port Priority\n     2-octet field encoding
        the LACP Partner Port Priority, as specified\n     in [IEEE-802.1AX], Section
        5.4.2.2, item t.\n   - Partner Key\n     2-octet field representing the LACP
        Partner Key, as defined in\n     [IEEE-802.1AX], Section 5.4.2.2, item s.\n
        \  - Partner State\n     1-octet field encoding the LACP Partner State Variable,
        as defined\n     in [IEEE-802.1AX], Section 5.4.2.2, item v.\n   - Actor State\n
        \    1 octet encoding the LACP Actor State Variable for the port, as\n     specified
        in [IEEE-802.1AX], Section 5.4.2.2, item m.\n   - Actor Port Number\n     2-octet
        field representing the LACP Actor Port Number, as specified\n     in [IEEE-802.1AX],
        Section 5.3.4.  The Port Number MUST be encoded\n     with the Node ID, as
        discussed above.\n   - Actor Key\n     2-octet field encoding the LACP Actor
        Operational Key, as specified\n     in [IEEE-802.1AX], Section 5.3.5.\n   -
        Selected\n     1 octet encoding the LACP \"Selected\" variable, defined in\n
        \    [IEEE-802.1AX], Section 5.4.8 as follows:\n       0x00  SELECTED\n       0x01
        \ UNSELECTED\n       0x02  STANDBY\n   - Port State\n     1 octet encoding
        the operational state of the port as follows:\n       0x00  Up\n       0x01
        \ Down\n       0x02  Administratively Down\n       0x03  Test (e.g., IEEE
        802.3ah OAM Intrusive Loopback mode)\n   - Aggregator ID\n     2 octets.  LACP
        Aggregator Identifier to which this port is bound\n     based on the outcome
        of the LACP selection logic.\n"
      title: 7.2.7.  mLACP Port State TLV
    - contents:
      - "7.2.8.  mLACP Aggregator State TLV\n   The \"mLACP Aggregator State TLV\"
        is used in the \"RG Application Data\"\n   message.  This TLV is used by a
        device to report its Aggregator\n   status to other members in the RG.\n      0
        \                  1                   2                   3\n      0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0037         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                      Partner System ID                        |\n     +
        \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n     |                               |
        \    Partner System Priority   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Partner Key              |         Aggregator ID         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Actor Key                |   Agg State   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0037
        for \"mLACP Aggregator State TLV\".\n   - Length\n     Length of the TLV in
        octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - Partner System ID\n     6 octets.  The LACP Partner System ID
        for the corresponding\n     interface, encoded as a MAC address as specified
        in [IEEE-802.1AX],\n     Section 5.4.2.2, item r.\n   - Partner System Priority\n
        \    2-octet field specifying the LACP Partner System Priority, as\n     specified
        in [IEEE-802.1AX], Section 5.4.2.2, item q.\n   - Partner Key\n     2-octet
        field representing the LACP Partner Key, as defined in\n     [IEEE-802.1AX],
        Section 5.4.2.2, item s.\n   - Aggregator ID\n     2 octets.  LACP Aggregator
        Identifier, as specified in\n     [IEEE-802.1AX], Section 5.4.6.\n   - Actor
        Key\n     2-octet field encoding the LACP Actor Operational Key, as specified\n
        \    in [IEEE-802.1AX], Section 5.3.5.\n   - Agg State\n     1 octet encoding
        the operational state of the Aggregator as\n     follows:\n       0x00  Up\n
        \      0x01  Down\n       0x02  Administratively Down\n       0x03  Test (e.g.,
        IEEE 802.3ah OAM Intrusive Loopback mode)\n"
      title: 7.2.8.  mLACP Aggregator State TLV
    - contents:
      - "7.2.9.  mLACP Synchronization Request TLV\n   The \"mLACP Synchronization
        Request TLV\" is used in the \"RG\n   Application Data\" message.  This TLV
        is used by a device to request\n   that its peer retransmit configuration
        or operational state.  The\n   following information can be requested:\n   -
        system configuration and/or state\n   - configuration and/or state for a specific
        port\n   - configuration and/or state for all ports with a specific LACP Key\n
        \  - configuration and/or state for all mLACP ports\n   - configuration and/or
        state for a specific Aggregator\n   - configuration and/or state for all Aggregators
        with a specific LACP\n     Key\n   - configuration and/or state for all mLACP
        Aggregators\n   The format of the TLV is as follows:\n      0                   1
        \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0038         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Request Number           |C|S|    Request Type           |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |  Port Number / Aggregator ID  |             Actor Key         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0038
        for \"mLACP Synchronization Request TLV\".\n   - Length\n     Length of the
        TLV in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - Request Number\n     2 octets.  Unsigned integer uniquely identifying
        the request.  Used\n     to match the request with a response.  The value
        of 0 is reserved\n     for unsolicited synchronization and MUST NOT be used
        in the \"mLACP\n     Synchronization Request TLV\".\n   - C-bit\n     Set
        to 1 if the request is for configuration data.  Otherwise,\n     set to 0.\n
        \  - S-bit\n     Set to 1 if the request is for running state data.  Otherwise,\n
        \    set to 0.\n   - Request Type\n     14 bits specifying the request type,
        encoded as follows:\n       0x00    Request System Data\n       0x01    Request
        Aggregator Data\n       0x02    Request Port Data\n       0x3FFF  Request
        All Data\n   - Port Number / Aggregator ID\n     2 octets.  When the \"Request
        Type\" field is set to \"Request Port\n     Data\", this field encodes the
        LACP Port Number for the requested\n     port.  When the \"Request Type\"
        field is set to \"Request Aggregator\n     Data\", this field encodes the
        Aggregator ID of the requested\n     Aggregator.  When the value of this field
        is 0, it denotes that\n     information for all ports (or Aggregators) whose
        LACP Key is\n     specified in the \"Actor Key\" field is being requested.\n
        \  - Actor Key\n     2 octets.  LACP Actor Key for the corresponding port
        or Aggregator.\n     When the value of this field is 0 (and the\n     Port
        Number / Aggregator ID field is 0 as well), it denotes that\n     information
        for all ports or Aggregators in the system is being\n     requested.\n"
      title: 7.2.9.  mLACP Synchronization Request TLV
    - contents:
      - "7.2.10.  mLACP Synchronization Data TLV\n   The \"mLACP Synchronization Data
        TLV\" is used in the \"RG Application\n   Data\" message.  A pair of these
        TLVs is used by a device to delimit a\n   set of TLVs that are being transmitted
        in response to an \"mLACP\n   Synchronization Request TLV\".  The delimiting
        TLVs signal the start\n   and end of the synchronization data and associate
        the response with\n   its corresponding request via the \"Request Number\"
        field.\n   The \"mLACP Synchronization Data TLVs\" are also used for unsolicited\n
        \  advertisements of complete mLACP configuration and operational state\n
        \  data.  The \"Request Number\" field MUST be set to 0 in this case.  For\n
        \  such unsolicited synchronization, the PE MUST advertise all system,\n   Aggregator,
        and port information, as done during the initialization\n   sequence.\n   This
        TLV has the following format:\n      0                   1                   2
        \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |U|F|     Type = 0x0039         |    Length                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |     Request Number            |     Flags                     |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \  - U-bit and F-bit\n     Both are set to 0.\n   - Type\n     Set to 0x0039
        for \"mLACP Synchronization Data TLV\".\n   - Length\n     Length of the TLV
        in octets, excluding the \"U-bit\", \"F-bit\",\n     \"Type\", and \"Length\"
        fields.\n   - Request Number\n     2 octets.  Unsigned integer identifying
        the Request Number from the\n     \"mLACP Synchronization Request TLV\" that
        solicited this\n     synchronization data response.\n   - Flags\n     2 octets.
        \ Response flags, encoded as follows:\n       0x00  Synchronization Data Start\n
        \      0x01  Synchronization Data End\n"
      title: 7.2.10.  mLACP Synchronization Data TLV
    title: 7.2.  Multi-Chassis LACP (mLACP) Application TLVs
  title: 7.  Application TLVs
- contents:
  - "8.  LDP Capability Negotiation\n   As required in [RFC5561], the following TLV
    is defined to indicate\n   the ICCP capability:\n      0                   1                   2
    \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |U|F| TLV Code Point = 0x0700   |            Length             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |S| Reserved    |    Reserved   |  Ver/Maj      |  Ver/Min      |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  - U-bit\n     SHOULD be 1 (ignore if not understood).\n   - F-bit\n     SHOULD
    be 0 (don't forward if not understood).\n   - TLV Code Point\n     The TLV type,
    which identifies a specific capability.  The ICCP\n     code point is listed in
    Section 12 below.\n   - S-bit\n     State bit.  Indicates whether the sender is
    advertising or\n     withdrawing the ICCP capability.  The State bit is used as
    follows:\n     1 - The TLV is advertising the capability specified by the TLV
    Code\n         Point.\n     0 - The TLV is withdrawing the capability specified
    by the TLV Code\n         Point.\n   - Ver/Maj\n     The major version revision
    of ICCP.  This document specifies 1.0,\n     and so this field is set to 1.\n
    \  - Ver/Min\n     The minor version revision of ICCP.  This document specifies
    1.0,\n     and so this field is set to 0.\n   ICCP capability is advertised to
    an LDP peer if there is at least one\n   RG enabled on the local PE.\n"
  title: 8.  LDP Capability Negotiation
- contents:
  - '9.  Client Applications

    '
  - contents:
    - "9.1.  Pseudowire Redundancy Application Procedures\n   This section defines
      the procedures for the Pseudowire Redundancy\n   (PW-RED) application.\n   It
      should be noted that the PW-RED application SHOULD NOT be enabled\n   together
      with an AC redundancy application for the same service\n   instance.  This simplifies
      the operation of the multi-chassis\n   redundancy solution (Figure 1) and eliminates
      the possibility of\n   deadlock conditions between the AC and PW redundancy
      mechanisms.\n"
    - contents:
      - "9.1.1.  Initial Setup\n   When an RG is configured on a system and multi-chassis
        pseudowire\n   redundancy is enabled in that RG, the PW-RED application MUST
        send an\n   \"RG Connect\" message with a \"PW-RED Connect TLV\" to each PE
        that is a\n   member of the same RG.  The sending PE MUST set the A-bit to
        1 if it\n   has already received a \"PW-RED Connect TLV\" from its peer; otherwise,\n
        \  the PE MUST set the A-bit to 0.  If a PE that has sent the TLV with\n   the
        A-bit set to 0 receives a \"PW-RED Connect TLV\" from a peer, it\n   MUST
        repeat its advertisement with the A-bit set to 1.  The PW-RED\n   Application
        Connection is considered to be operational when both PEs\n   have sent and
        received \"PW-RED Connect TLVs\" with the A-bit set to 1.\n   Once the Application
        Connection becomes operational, the two devices\n   can start exchanging \"RG
        Application Data\" messages for the PW-RED\n   application.\n   If a system
        receives an \"RG Connect\" message with a \"PW-RED Connect\n   TLV\" that
        has a different Protocol Version, it must follow the\n   procedures outlined
        in Section 4.4.1 above.\n   When the PW-RED application is disabled on the
        device or is\n   unconfigured for the RG in question, the system MUST send
        an \"RG\n   Disconnect\" message with a \"PW-RED Disconnect TLV\".\n"
      title: 9.1.1.  Initial Setup
    - contents:
      - "9.1.2.  Pseudowire Configuration Synchronization\n   A system MUST advertise
        its local PW configuration to other PEs that\n   are members of the same RG.
        \ This allows the PEs to build a view of\n   the redundant nodes and pseudowires
        that are protecting the same\n   service instances.  The advertisement MUST
        be initiated when the\n   PW-RED Application Connection first comes up.  To
        that end, the\n   system sends \"RG Application Data\" messages with \"PW-RED
        Config TLVs\"\n   as part of an unsolicited synchronization.  A PE MUST use
        a pair of\n   \"PW-RED Synchronization Data TLVs\" to delimit the set of TLVs
        that\n   are being sent as part of this unsolicited advertisement.\n   In
        the case of a configuration change, a PE MUST re-advertise the\n   most up-to-date
        information for the affected pseudowires.\n   As part of the configuration
        synchronization, a PE advertises the\n   ROID associated with the pseudowire.
        \ This is used to correlate the\n   pseudowires that are protecting each other
        on different PEs.  A PE\n   also advertises the configured PW redundancy mode.
        \ This can be one\n   of the following four options: Master Mode, Slave Mode,
        Independent\n   Mode, or Independent Mode with Request Switchover.  If the
        received\n   redundancy mode does not match the locally configured mode for
        the\n   same ROID, then the PE MUST respond with an \"RG Notification\" message\n
        \  to reject the \"PW-RED Config TLV\".  The PE MUST disable the\n   associated
        local pseudowire until a satisfactory \"PW-RED Config TLV\"\n   is received
        from the peer.  This guarantees that device\n   misconfiguration does not
        lead to network-wide problems (e.g., by\n   creating forwarding loops).  The
        PE SHOULD also raise an alarm to\n   alert the operator.  If a PE receives
        a \"NAK TLV\" for an advertised\n   \"PW-RED Config TLV\", it MUST disable
        the associated pseudowire and\n   SHOULD raise an alarm to alert the operator.\n
        \  Furthermore, a PE advertises in its \"PW-RED Config TLVs\" a priority\n
        \  value that is used to determine the precedence of a given pseudowire\n
        \  to assume the active role in a redundant setup.  A PE also advertises\n
        \  a Service Name that is global in the context of an RG and is used to\n
        \  identify which pseudowires belong to the same service.  Finally, a PE\n
        \  also advertises the pseudowire identifier as part of this\n   synchronization.\n"
      title: 9.1.2.  Pseudowire Configuration Synchronization
    - contents:
      - "9.1.3.  Pseudowire Status Synchronization\n   PEs that are members of an
        RG synchronize pseudowire status for the\n   purpose of identifying, on a
        per-ROID basis, which pseudowire will be\n   actively used for forwarding
        and which pseudowire(s) will be placed\n   in standby state.\n   Synchronization
        of pseudowire status is done by sending the \"PW-RED\n   State TLV\" whenever
        the pseudowire state changes on a PE.  This\n   includes changes to the local
        end as well as the remote end of the\n   pseudowire.\n   A PE may request
        that its peer retransmit previously advertised\n   PW-RED state.  This is
        useful, for instance, when the PE is\n   recovering from a soft failure.  To
        request such a retransmission, a\n   PE MUST send a set of one or more \"PW-RED
        Synchronization Request\n   TLVs\".\n   A PE MUST respond to a \"PW-RED Synchronization
        Request TLV\" by\n   sending the requested data in a set of one or more \"PW-RED
        TLVs\"\n   delimited by a pair of \"PW-RED Synchronization Data TLVs\".  The
        TLVs\n   comprising the response MUST be ordered such that the\n   \"Synchronization
        Response TLV\" with the \"Synchronization Data Start\"\n   flag precedes the
        various other \"PW-RED TLVs\" encoding the requested\n   data.  These, in
        turn, MUST precede the \"Synchronization Data TLV\"\n   with the \"Synchronization
        Data End\" flag.  It is worth noting that\n   the response may span multiple
        \"RG Application Data\" messages;\n   however, the above TLV ordering MUST
        be retained across messages, and\n   only a single pair of \"Synchronization
        Data TLVs\" must be used to\n   delimit the response across all \"Application
        Data\" messages.\n   A PE MAY re-advertise its PW-RED state in an unsolicited
        manner.\n   This is done by sending the appropriate Config and State TLVs\n
        \  delimited by a pair of \"PW-RED Synchronization Data TLVs\" and using a\n
        \  \"Request Number\" of 0.\n   While a PE has a pending synchronization request
        for a pseudowire or\n   a service, it SHOULD silently ignore all TLVs for
        said pseudowire or\n   service that are received prior to the synchronization
        response and\n   that carry the same type of information being requested.
        \ This saves\n   the system from the burden of updating state that will ultimately
        be\n   overwritten by the synchronization response.  Note that TLVs\n   pertaining
        to other pseudowires or services are to continue to be\n   processed per normal
        procedures in the interim.\n   If a PE receives a synchronization request
        for a pseudowire or\n   service that doesn't exist or is not known to the
        PE, then it MUST\n   trigger an unsolicited synchronization of all pseudowire
        information\n   (i.e., replay the initialization sequence).\n   In the subsections
        that follow, we describe the details of pseudowire\n   status synchronization
        for each of the PW redundancy modes defined in\n   [RFC6870].\n"
      - contents:
        - "9.1.3.1.  Independent Mode\n   This section covers the operation in Independent
          Mode with or without\n   Request Switchover capability.\n   In this mode,
          the operator must ensure that for a given RO the PW\n   Priority values
          configured for all associated pseudowires on a given\n   PE are collectively
          higher (or lower) than those configured on other\n   PEs in the same RG.
          \ If this condition is not satisfied after the PEs\n   have exchanged \"PW-RED
          State TLVs\", a PE MUST disable the associated\n   pseudowire(s) and SHOULD
          raise an alarm to alert the operator.  Note\n   that the PW Priority MAY
          be the same as the PW Precedence as defined\n   in [RFC6870].\n   For a
          given RO, after all of the PEs in an RG have exchanged their\n   \"PW-RED
          State TLVs\", the PE with the best PW Priority (i.e., least\n   numeric
          value) advertises active Preferential Forwarding status in\n   LDP on all
          of its associated pseudowires, whereas all other PEs in\n   the RG advertise
          standby Preferential Forwarding status in LDP on\n   their associated pseudowires.\n
          \  If the service is VPWS, then only a single pseudowire per service\n   will
          be selected for forwarding.  This is the pseudowire that is\n   independently
          advertised with active Preferential Forwarding status\n   on both endpoints,
          as described in [RFC6870].\n   If the service is VPLS, then one or multiple
          pseudowires per service\n   will be selected for forwarding.  These are
          the pseudowires that are\n   independently advertised with active Preferential
          Forwarding status\n   on both PW endpoints, as described in [RFC6870].\n"
        title: 9.1.3.1.  Independent Mode
      - contents:
        - "9.1.3.2.  Master/Slave Mode\n   In this mode, the operator must ensure
          that for a given RO the PW\n   Priority values configured for all associated
          pseudowires on a given\n   PE are collectively higher (or lower) than those
          configured on other\n   PEs in the same RG.  If this condition is not satisfied
          after the PEs\n   have exchanged \"PW-RED State TLVs\", a PE MUST disable
          the associated\n   pseudowire(s) and SHOULD raise an alarm to alert the
          operator.  Note\n   that the PW Priority MAY be the same as the PW Precedence
          as defined\n   in [RFC6870].  In addition, the operator must ensure that
          for a given\n   RO all of the PEs in the RG are consistently configured
          as Master or\n   Slave.\n   In the context of a given RO, if the PEs in
          the RG are acting as\n   Master, then the PE with the best PW Priority (i.e.,
          least numeric\n   value) advertises active Preferential Forwarding status
          in LDP on\n   only a single pseudowire, following the procedures in Sections
          5.2\n   and 6.2 of [RFC6870], whereas all of the other pseudowires on other\n
          \  PEs in the RG are advertised with standby Preferential Forwarding\n   status
          in LDP.\n"
        title: 9.1.3.2.  Master/Slave Mode
      title: 9.1.3.  Pseudowire Status Synchronization
    - contents:
      - "9.1.4.  PE Node Failure or Isolation\n   When a PE node detects that a remote
        PE that is a member of the same\n   RG is no longer reachable (using the mechanisms
        described in\n   Section 5), the local PE determines if it has redundant PWs
        for the\n   affected services.  If the local PE has the highest priority (after\n
        \  the failed PE), then it becomes the active node for the services in\n   question
        and subsequently activates its associated PW(s).\n"
      title: 9.1.4.  PE Node Failure or Isolation
    title: 9.1.  Pseudowire Redundancy Application Procedures
  - contents:
    - '9.2.  Attachment Circuit Redundancy Application Procedures

      '
    - contents:
      - "9.2.1.  Common AC Procedures\n   This section describes generic procedures
        for AC redundancy\n   applications, independent of the type of the AC (ATM,
        FR, or\n   Ethernet).\n"
      - contents:
        - "9.2.1.1.  AC Failure\n   When the AC redundancy mechanism on the active
          PE detects a failure\n   of the AC, it should send an ICCP \"Application
          Data\" message to\n   inform the redundant PEs of the need to take over.
          \ The AC failures\n   can be categorized into the following scenarios:\n
          \  - Failure of CE interface connecting to PE\n   - Failure of CE uplink
          to PE\n   - Failure of PE interface connecting to CE\n"
        title: 9.2.1.1.  AC Failure
      - contents:
        - "9.2.1.2.  Remote PE Node Failure or Isolation\n   When a PE node detects
          that a remote PE that is a member of the same\n   RG is no longer reachable
          (using the mechanisms described in\n   Section 5), the local PE determines
          if it has redundant ACs for the\n   affected services.  If the local PE
          has the highest priority (after\n   the failed PE), then it becomes the
          active node for the services in\n   question and subsequently activates
          its associated ACs.\n"
        title: 9.2.1.2.  Remote PE Node Failure or Isolation
      - contents:
        - "9.2.1.3.  Local PE Isolation\n   When a PE node detects that it has been
          isolated from the core\n   network (i.e., all core-facing interfaces/links
          are not operational),\n   then it should ensure that its AC redundancy mechanism
          will change\n   the status of any active ACs to standby.  The AC redundancy\n
          \  application SHOULD then send ICCP \"Application Data\" messages in\n
          \  order to trigger failover to a standby PE.  Note that this works only\n
          \  in the case of dedicated interconnect (Sections 3.2.1 and 3.2.3),\n   since
          ICCP will still have a path to the peer, even though the PE is\n   isolated
          from the MPLS core network.\n"
        title: 9.2.1.3.  Local PE Isolation
      - contents:
        - "9.2.1.4.  Determining Pseudowire State\n   If the PEs in an RG are running
          an AC redundancy application over\n   ICCP, then the Independent Mode of
          PW redundancy, as defined in\n   [RFC6870], MUST be used.  On a given PE,
          the Preferential Forwarding\n   status of the PW (active or standby) is
          derived from the state of the\n   associated AC(s).  This simplifies the
          operation of the multi-chassis\n   redundancy solution (Figure 1) and eliminates
          the possibility of\n   deadlock conditions between the AC and PW redundancy
          mechanisms.  The\n   rules by which the PW status is derived from the AC
          status are as\n   follows:\n   - VPWS\n     For VPWS, there's a single AC
          per service instance.  If the AC is\n     active, then the PW status should
          be active.  If the AC is standby,\n     then the PW status should be standby.\n
          \  - VPLS\n     For VPLS, there could be multiple ACs per service instance
          (i.e.,\n     Virtual Switch Instance (VSI) [RFC4026]).  If AT LEAST ONE
          AC is\n     active, then the PW status should be active.  If ALL ACs are\n
          \    standby, then the PW status should be standby.\n   In this case, the
          PW-RED application is not used to synchronize PW\n   status between PEs.
          \ Rather, the AC redundancy application should\n   synchronize AC status
          between PEs, in order to establish which AC\n   (and subsequently which
          PE) is active or standby for a given service.\n   When that is determined,
          each PE will then derive its local PW's\n   state according to the rules
          described above.  The Preferential\n   Forwarding status bit, described
          in [RFC6870], is used to advertise\n   PW status to the remote peers.\n"
        title: 9.2.1.4.  Determining Pseudowire State
      title: 9.2.1.  Common AC Procedures
    - contents:
      - "9.2.2.  Multi-Chassis LACP (mLACP) Application Procedures\n   This section
        defines the procedures that are specific to the\n   multi-chassis LACP (mLACP)
        application, which is applicable for\n   Ethernet ACs.\n"
      - contents:
        - "9.2.2.1.  Initial Setup\n   When an RG is configured on a system and mLACP
          is enabled in that RG,\n   the mLACP application MUST send an \"RG Connect\"
          message with an\n   \"mLACP Connect TLV\" to each PE that is a member of
          the same RG.  The\n   sending PE MUST set the A-bit to 1 in said TLV if
          it has received a\n   corresponding \"mLACP Connect TLV\" from its peer
          PE; otherwise, the\n   sending PE MUST set the A-bit to 0.  If a PE receives
          an \"mLACP\n   Connect TLV\" from its peer after sending said TLV with the
          A-bit set\n   to 0, it MUST resend the TLV with the A-bit set to 1.  A system\n
          \  considers the mLACP Application Connection to be operational when it\n
          \  has sent and received \"mLACP Connect TLVs\" with the A-bit set to 1.\n
          \  When the mLACP Application Connection between a pair of PEs is\n   operational,
          the two devices can start exchanging \"RG Application\n   Data\" messages
          for the mLACP application.  This involves having each\n   PE advertise its
          mLACP configuration and operational state in an\n   unsolicited manner.
          \ A PE SHOULD use the following sequence when\n   advertising its mLACP
          state upon initial Application Connection\n   setup:\n   - Advertise system
          configuration\n   - Advertise Aggregator configuration\n   - Advertise port
          configuration\n   - Advertise Aggregator state\n   - Advertise port state\n
          \  A PE MUST use a pair of \"mLACP Synchronization Data TLVs\" to delimit\n
          \  the entire set of TLVs that are being sent as part of this\n   unsolicited
          advertisement.\n   If a system receives an \"RG Connect\" message with an
          \"mLACP Connect\n   TLV\" that has a different Protocol Version, it MUST
          follow the\n   procedures outlined in Section 4.4.1 above.\n   After the
          mLACP Application Connection has been established, every PE\n   MUST communicate
          its system-level configuration to its peers via the\n   use of the \"mLACP
          System Config TLV\".  This allows every PE to\n   discover the Node ID and
          the locally configured System ID and System\n   Priority values of its peers.\n
          \  If a PE receives an \"mLACP System Config TLV\" from a remote peer\n
          \  advertising the same Node ID value as the local system, then the PE\n
          \  MUST respond with an \"RG Notification\" message to reject the \"mLACP\n
          \  System Config TLV\".  The PE MUST suspend the mLACP application until\n
          \  a satisfactory \"mLACP System Config TLV\" is received from the peer.\n
          \  It SHOULD also raise an alarm to alert the operator.  Furthermore, if\n
          \  a PE receives a \"NAK TLV\" for an \"mLACP System Config TLV\" that it\n
          \  has advertised, the PE MUST suspend the mLACP application and SHOULD\n
          \  raise an alarm to alert the network operator of potential device\n   misconfiguration.\n
          \  If a PE receives an \"mLACP System Config TLV\" from a new peer\n   advertising
          the same Node ID value as another existing peer with\n   which the local
          system has an established mLACP Application\n   Connection, then the PE
          MUST respond to the new peer with an \"RG\n   Notification\" message to
          reject the \"mLACP System Config TLV\" and\n   MUST ignore the offending
          TLV.\n   If the Node ID of a particular PE changes due to administrative\n
          \  configuration action, the PE MUST then inform its peers to purge the\n
          \  configuration of all previously advertised ports and/or Aggregators\n
          \  and MUST replay the initialization sequence by sending an unsolicited\n
          \  synchronization of the system configuration, Aggregator\n   configuration,
          port configuration, Aggregator state, and port state.\n   It is necessary
          for all PEs in an RG to agree upon the System ID and\n   System Priority
          values to be used ubiquitously.  To achieve this,\n   every PE MUST use
          the values for the two parameters that are supplied\n   by the PE with the
          numerically lowest value (among RG members) of\n   System Aggregation Priority.
          \ This guarantees that the PEs always\n   agree on uniform values that yield
          the highest System Priority.\n   When the mLACP application is disabled
          on the device or is\n   unconfigured for the RG in question, the system
          MUST send an \"RG\n   Disconnect\" message with an \"mLACP Disconnect TLV\".\n"
        title: 9.2.2.1.  Initial Setup
      - contents:
        - "9.2.2.2.  mLACP Aggregator and Port Configuration\n   A system MUST synchronize
          the configuration of its mLACP-enabled\n   Aggregators and ports with other
          RG members.  This is achieved via\n   the use of \"mLACP Aggregator Config
          TLVs\" and \"mLACP Port Config\n   TLVs\", respectively.  An implementation
          MUST advertise the\n   configuration of Aggregators prior to advertising
          the configuration\n   of any of their associated member ports.\n   The PEs
          in an RG MUST all agree on the MAC address to be associated\n   with a given
          Aggregator.  It is possible to achieve this via\n   consistent configuration
          on member PEs.  However, in order to protect\n   against possible misconfiguration,
          a system MUST use, for any given\n   Aggregator, the MAC address supplied
          by the PE with the numerically\n   lowest System Aggregation Priority in
          the RG.\n   A system that receives an \"mLACP Aggregator Config TLV\" with
          an ROID-\n   to-Key association that is different from its local association
          MUST\n   reject the corresponding TLV and disable the Aggregator with the
          same\n   ROID.  Furthermore, it SHOULD raise an alarm to alert the operator.\n
          \  Similarly, a system that receives a \"NAK TLV\" in response to a\n   transmitted
          \"mLACP Aggregator Config TLV\" MUST disable the associated\n   Aggregator
          and SHOULD raise an alarm to alert the network operator.\n   A system MAY
          enforce a restriction that all ports that are to be\n   bundled together
          on a given PE share the same Port Priority value.\n   If so, the system
          MUST advertise this common priority in the \"mLACP\n   Aggregator Config
          TLV\" and assert the \"Priority Set\" flag in that\n   TLV.  Furthermore,
          the system in this case MUST NOT advertise\n   individual Port Priority
          values in the associated \"mLACP Port Config\n   TLVs\" (i.e., the \"Priority
          Set\" flag in these TLVs should be 0).\n   A system MAY support individual
          Port Priority values to be configured\n   on ports that are to be bundled
          together on a PE.  If so, the system\n   MUST advertise the individual Port
          Priority values in the appropriate\n   \"mLACP Port Config TLVs\" and MUST
          NOT assert the \"Priority Set\" flag\n   in the corresponding \"mLACP Aggregator
          Config TLV\".\n   When the configurations of all ports for member links
          associated with\n   a given Aggregator have been sent by a device, it asserts
          that fact\n   by setting the \"Synchronized\" flag in the last port's \"mLACP
          Port\n   Config TLV\".  If an Aggregator doesn't have any candidate member\n
          \  ports configured, this is indicated by asserting the \"Synchronized\"\n
          \  flag in its \"mLACP Aggregator Config TLV\".\n   Furthermore, for a given
          port/Aggregator, an implementation MUST\n   advertise the port/Aggregator
          configuration prior to advertising its\n   state (via the \"mLACP Port State
          TLV\" or \"mLACP Aggregator State\n   TLV\").  If a PE receives an \"mLACP
          Port State TLV\" or \"mLACP\n   Aggregator State TLV\" for a port or Aggregator
          that it had not\n   previously learned via an appropriate \"Port Config
          TLV\" or\n   \"Aggregator Config TLV\", then the PE MUST request synchronization
          of\n   the configuration and state of all mLACP ports as well as all mLACP\n
          \  Aggregators from its respective peer.  During a synchronization\n   (solicited
          or unsolicited), if a PE receives a \"State TLV\" for a port\n   or Aggregator
          that it has not learned before, then the PE MUST send a\n   \"NAK TLV\"
          for the offending TLV.  The PE MUST NOT request\n   resynchronization in
          this case.\n   When mLACP is unconfigured on a port/Aggregator, a PE MUST
          send a\n   \"Port/Aggregator Config TLV\" with the \"Purge Configuration\"
          flag\n   asserted.  This allows receiving PEs to purge any state maintained\n
          \  for the decommissioned port/Aggregator.  If a PE receives a\n   \"Port/Aggregator
          Config TLV\" with the \"Purge Configuration\" flag\n   asserted and the
          PE is not maintaining any state for that\n   port/Aggregator, then it MUST
          silently discard the TLV.\n"
        title: 9.2.2.2.  mLACP Aggregator and Port Configuration
      - contents:
        - "9.2.2.3.  mLACP Aggregator and Port Status Synchronization\n   PEs within
          an RG need to synchronize their state machines for proper\n   mLACP operation
          with a multi-homed device.  This is achieved by\n   having each system advertise
          its Aggregators and ports running state\n   in \"mLACP Aggregator State
          TLVs\" and \"mLACP Port State TLVs\",\n   respectively.  Whenever any LACP
          parameter for an Aggregator or a\n   port -- whether on the Partner (i.e.,
          multi-homed device) side or the\n   Actor (i.e., PE) side -- is changed,
          a system MUST transmit an\n   updated TLV for the affected Aggregator and/or
          port.  Moreover, when\n   the administrative or operational state of an
          Aggregator or port\n   changes, the system MUST transmit an updated Aggregator
          or Port State\n   TLV to its peers.\n   If a PE receives an Aggregator or
          Port State TLV where the Actor Key\n   doesn't match what was previously
          received in a corresponding\n   \"Aggregator Config TLV\" or \"Port Config
          TLV\", the PE MUST then\n   request synchronization of the configuration
          and state of the\n   affected Aggregator or port.  If such a mismatch occurs
          between the\n   Config and State TLVs as part of a synchronization (solicited
          or\n   unsolicited), then the PE MUST send a \"NAK TLV\" for the \"State
          TLV\".\n   Furthermore, if a PE receives a \"Port State TLV\" with the \"Aggregator\n
          \  ID\" set to a value that doesn't map to some Aggregator that the PE\n
          \  had learned via a previous \"Aggregator Config TLV\", then the PE MUST\n
          \  request synchronization of the configuration and state of all\n   Aggregators
          and ports.  If the above anomaly occurs during a\n   synchronization, then
          the PE MUST send a \"NAK TLV\" for the offending\n   \"Port State TLV\".\n
          \  A PE MAY request that its peer retransmit previously advertised\n   state.
          \ This is useful, for example, when the PE is recovering from a\n   soft
          failure and attempting to relearn state.  To request such\n   retransmissions,
          a PE MUST send a set of one or more \"mLACP\n   Synchronization Request
          TLVs\".\n   A PE MUST respond to an \"mLACP Synchronization Request TLV\"
          by\n   sending the requested data in a set of one or more mLACP TLVs\n   delimited
          by a pair of \"mLACP Synchronization Data TLVs\".  The TLVs\n   comprising
          the response MUST be ordered in the \"RG Application Data\"\n   message(s)
          such that the \"Synchronization Response TLV\" with the\n   \"Synchronization
          Data Start\" flag precedes the various other mLACP\n   TLVs encoding the
          requested data.  These, in turn, MUST precede the\n   \"Synchronization
          Data TLV\" with the \"Synchronization Data End\" flag.\n   Note that the
          response may span multiple \"RG Application Data\"\n   messages -- for example,
          when MTU limits are exceeded; however, the\n   above ordering MUST be retained
          across messages, and only a single\n   pair of \"Synchronization Data TLVs\"
          MUST be used to delimit the\n   response across all \"Application Data\"
          messages.\n   A PE device MAY re-advertise its mLACP state in an unsolicited\n
          \  manner.  This is done by sending the appropriate Config and State\n   TLVs
          delimited by a pair of \"mLACP Synchronization Data TLVs\" and\n   using
          a \"Request Number\" of 0.\n   While a PE has a pending synchronization
          request for a system,\n   Aggregator, or port, it SHOULD silently ignore
          all TLVs for said\n   system, Aggregator, or port that are received prior
          to the\n   synchronization response and that carry the same type of information\n
          \  being requested.  This saves the system from the burden of updating\n
          \  state that will ultimately be overwritten by the synchronization\n   response.
          \ Note that TLVs pertaining to other systems, Aggregators,\n   or ports
          are to continue to be processed per normal procedures in\n   this case.\n
          \  If a PE receives a synchronization request for an Aggregator, port,\n
          \  or key that doesn't exist or is not known to the PE, then it MUST\n   trigger
          an unsolicited synchronization of all system, Aggregator, and\n   port information
          (i.e., replay the initialization sequence).\n   If a PE learns, as part
          of a synchronization operation from its peer,\n   that the latter is advertising
          a Node ID value that is different from\n   the value previously advertised,
          then the PE MUST purge all\n   Port/Aggregator data previously learned from
          that peer prior to the\n   last synchronization.\n"
        title: 9.2.2.3.  mLACP Aggregator and Port Status Synchronization
      - contents:
        - "9.2.2.4.  Failure and Recovery\n   When a PE that is active for a multi-chassis
          link aggregation group\n   encounters a core isolation fault, it SHOULD
          attempt to fail over to\n   a peer PE that hosts the same RO.  The default
          failover procedure is\n   to have the failed PE bring down the link or links
          towards the\n   multi-homed CE (e.g., by bringing down the line protocol).
          \ This will\n   cause the CE to fail over to the other member link or links
          of the\n   bundle that are connected to the other PE(s) in the RG.  Other\n
          \  procedures for triggering failover are possible; such procedures are\n
          \  outside the scope of this document.\n   Upon recovery from a previous
          fault, a PE MAY reclaim the active role\n   for a multi-chassis link aggregation
          group if configured for\n   revertive protection.  Otherwise, the recovering
          PE may assume the\n   standby role when configured for non-revertive protection.
          \ In the\n   revertive scenario, a PE SHOULD assume the active role within
          the RG\n   by sending an \"mLACP Port Priority TLV\" to the currently active
          PE,\n   requesting that the latter change its port priority to a value that\n
          \  is lower (i.e., numerically larger) for the Aggregator in question.\n
          \  If a system is operating in a mode where different ports of a bundle\n
          \  are configured with different Port Priorities, then the system MUST\n
          \  NOT advertise or request changes of Port Priority values for\n   aggregated
          ports collectively (i.e., by using a \"Port Number\" of 0 in\n   the \"mLACP
          Port Priority TLV\").  This is to avoid ambiguity in the\n   interpretation
          of the \"Last Port Priority\" field.\n   If a PE receives an \"mLACP Port
          Priority TLV\" requesting a priority\n   change for a port or Aggregator
          that is not local to the device, then\n   the PE MUST re-advertise the local
          configuration of the system, as\n   well as the configuration and state
          of all of its mLACP ports and\n   Aggregators.\n   If a PE receives an \"mLACP
          Port Priority TLV\" in which the remote\n   system is advertising priority
          change for a port or Aggregator that\n   the local PE had not previously
          learned via an appropriate \"Port\n   Config TLV\" or \"Aggregator Config
          TLV\", then the PE MUST request\n   synchronization of the configuration
          and state of all mLACP ports as\n   well as all mLACP Aggregators from its
          respective peer.\n"
        title: 9.2.2.4.  Failure and Recovery
      title: 9.2.2.  Multi-Chassis LACP (mLACP) Application Procedures
    title: 9.2.  Attachment Circuit Redundancy Application Procedures
  title: 9.  Client Applications
- contents:
  - "10.  Security Considerations\n   ICCP SHOULD only be used in well-managed and
    highly monitored\n   networks.  It ought not be deployed on or over the public
    Internet.\n   ICCP is not intended to be applicable when the Redundancy Group
    spans\n   PEs in different administrative domains.\n   The security considerations
    described in [RFC5036] and [RFC4447] that\n   apply to the base LDP specification
    and to the PW LDP control\n   protocol extensions apply to the capability mechanism
    described in\n   this document.  In particular, ICCP implementations MUST provide
    a\n   mechanism to select to which LDP peers the ICCP capability will be\n   advertised,
    and from which LDP peers the ICCP messages will be\n   accepted.  Therefore, an
    incoming ICCP connection request MUST NOT be\n   accepted unless its source IP
    address is known to be the source of an\n   \"eligible\" ICCP peer.  The set of
    eligible peers could be\n   preconfigured (as a list of either IP addresses or
    address/mask\n   combinations), or it could be discovered dynamically via some
    secure\n   discovery protocol.  The TCP Authentication Option (TCP-AO), as\n   defined
    in [RFC5925], SHOULD be used.  This provides integrity and\n   authentication
    for the ICCP messages and eliminates the possibility\n   of source address spoofing.
    \ However, for backwards compatibility\n   and/or to accommodate the ease of migration,
    the LDP MD5\n   authentication key option, as described in Section 2.9 of [RFC5036],\n
    \  MAY be used instead.\n   The security framework and considerations for MPLS
    in general, and\n   LDP in particular, as described in [RFC5920] apply to this
    document.\n   Moreover, the recommendations of [RFC6952] and mechanisms of\n   [LDP-CRYPTO]
    aimed at addressing LDP's vulnerabilities are applicable\n   as well.\n   Furthermore,
    activity on the attachment circuits may cause security\n   threats or be exploited
    to create denial-of-service attacks.  For\n   example, a malicious CE implementation
    may trigger continuously\n   varying LACP messages that lead to excessive ICCP
    exchanges.  Also,\n   excessive link bouncing of the attachment circuits may lead
    to the\n   same effect.  Similar arguments apply to the inter-PE MPLS links.\n
    \  Implementations SHOULD provide mechanisms to perform control-plane\n   policing
    and mitigate these types of attacks.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  Manageability Considerations\n   Implementations SHOULD generally minimize
    the number of parameters\n   required to configure ICCP in order to help make
    ICCP easier to use.\n   Implementations SHOULD allow the user to control the RGID
    via\n   configuration, as this is required to support flexible grouping of\n   PEs
    in RGs.  Furthermore, implementations SHOULD provide mechanisms\n   to troubleshoot
    the correct operation of ICCP; this includes\n   providing mechanisms to diagnose
    ICCP connections as well as\n   Application Connections.  Implementations MUST
    provide a means for\n   the user to indicate the IP addresses of remote PEs that
    are to be\n   members of a given RG.  Automatic discovery of RG membership MAY
    be\n   supported; this topic is outside the scope of this specification.\n"
  title: 11.  Manageability Considerations
- contents:
  - '12.  IANA Considerations

    '
  - contents:
    - "12.1.  Message Type Name Space\n   This document uses several new LDP message
      types.  IANA maintains the\n   \"Message Type Name Space\" registry as defined
      by [RFC5036].  The\n   following values have been assigned:\n        Message
      Type    Description\n        -------------   ----------------------------\n
      \       0x0700          RG Connect Message\n        0x0701          RG Disconnect
      Message\n        0x0702          RG Notification Message\n        0x0703          RG
      Application Data Message\n        0x0704-0x070F   Reserved for future ICCP use\n"
    title: 12.1.  Message Type Name Space
  - contents:
    - "12.2.  TLV Type Name Space\n   This document uses a new LDP TLV type.  IANA
      maintains the \"TLV Type\n   Name Space\" registry as defined by [RFC5036].
      \ The following value\n   has been assigned:\n        TLV Type      Description\n
      \       --------      -------------------\n        0x0700        ICCP capability
      TLV\n"
    title: 12.2.  TLV Type Name Space
  - contents:
    - "12.3.  ICC RG Parameter Type Space\n   IANA has created a registry called \"ICC
      RG Parameter Types\", within\n   the \"Pseudowire Name Spaces (PWE3)\" registry.
      \ ICC RG parameter types\n   are 14-bit values.  Parameter Type values 1 through
      0x003A are\n   specified in this document.  Parameter Type values 0x003B through\n
      \  0x1FFF are to be assigned by IANA, using the \"Expert Review\" policy\n   defined
      in [RFC5226].  Parameter Type values 0x2000 through 0x2FFF,\n   0x3FFF, and
      0 are to be allocated using the \"IETF Review\" policy\n   defined in [RFC5226].
      \ Parameter Type values 0x3000 through 0x3FFE\n   are reserved for vendor proprietary
      extensions and are to be assigned\n   by IANA, using the \"First Come First
      Served\" policy defined in\n   [RFC5226].\n   Initial ICC parameter type space
      value allocations are specified\n   below:\n      Parameter Type   Description\n
      \     --------------   ----------------------------------\n      0x0001           ICC
      Sender Name\n      0x0002           NAK TLV\n      0x0003           Requested
      Protocol Version TLV\n      0x0004           Disconnect Code TLV\n      0x0005
      \          ICC RG ID TLV\n      0x0006-0x000F    Reserved\n      0x0010           PW-RED
      Connect TLV\n      0x0011           PW-RED Disconnect TLV\n      0x0012           PW-RED
      Config TLV\n      0x0013           Service Name TLV\n      0x0014           PW
      ID TLV\n      0x0015           Generalized PW ID TLV\n      0x0016           PW-RED
      State TLV\n      0x0017           PW-RED Synchronization Request TLV\n      0x0018
      \          PW-RED Synchronization Data TLV\n      0x0019           PW-RED Disconnect
      Cause TLV\n      0x001A-0x002F    Reserved\n      0x0030           mLACP Connect
      TLV\n      0x0031           mLACP Disconnect TLV\n      0x0032           mLACP
      System Config TLV\n      0x0033           mLACP Port Config TLV\n      0x0034
      \          mLACP Port Priority TLV\n      0x0035           mLACP Port State
      TLV\n      0x0036           mLACP Aggregator Config TLV\n      0x0037           mLACP
      Aggregator State TLV\n      0x0038           mLACP Synchronization Request TLV\n
      \     0x0039           mLACP Synchronization Data TLV\n      0x003A           mLACP
      Disconnect Cause TLV\n"
    title: 12.3.  ICC RG Parameter Type Space
  - contents:
    - "12.4.  Status Code Name Space\n   This document uses several new Status codes.
      \ IANA maintains the\n   \"Status Code Name Space\" registry as defined by [RFC5036].
      \ The\n   following values have been assigned; the \"E\" column is the required\n
      \  setting of the Status Code E-bit.\n     Range/Value     E     Description\n
      \    ------------  -----   ------------------------------------------\n     0x00010001
      \     0     Unknown ICCP RG\n     0x00010002      0     ICCP Connection Count
      Exceeded\n     0x00010003      0     ICCP Application Connection Count Exceeded\n
      \    0x00010004      0     ICCP Application not in RG\n     0x00010005      0
      \    Incompatible ICCP Protocol Version\n     0x00010006      0     ICCP Rejected
      Message\n     0x00010007      0     ICCP Administratively Disabled\n     0x00010010
      \     0     ICCP RG Removed\n     0x00010011      0     ICCP Application Removed
      from RG\n"
    title: 12.4.  Status Code Name Space
  title: 12.  IANA Considerations
- contents:
  - "13.  Acknowledgments\n   The authors wish to acknowledge the important contributions
    of Dennis\n   Cai, Neil McGill, Amir Maleki, Dan Biagini, Robert Leger, Sami\n
    \  Boutros, Neil Ketley, and Mark Christopher Sains.\n   The authors also thank
    Daniel Cohn, Lizhong Jin, and Ran Chen for\n   their valuable input, discussions,
    and comments.\n"
  title: 13.  Acknowledgments
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC5036]  Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n
      \             \"LDP Specification\", RFC 5036, October 2007.\n   [RFC5561]  Thomas,
      B., Raza, K., Aggarwal, S., Aggarwal, R., and JL.\n              Le Roux, \"LDP
      Capabilities\", RFC 5561, July 2009.\n   [RFC4447]  Martini, L., Ed., Rosen,
      E., El-Aawar, N., Smith, T., and\n              G. Heron, \"Pseudowire Setup
      and Maintenance Using the\n              Label Distribution Protocol (LDP)\",
      RFC 4447, April 2006.\n   [IEEE-802.1AX]\n              IEEE Std. 802.1AX-2008,
      \"IEEE Standard for Local and\n              metropolitan area networks--Link
      Aggregation\", IEEE\n              Computer Society, November 2008.\n   [RFC2863]
      \ McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\",
      RFC 2863, June 2000.\n   [RFC6870]  Muley, P., Ed., and M. Aissaoui, Ed., \"Pseudowire\n
      \             Preferential Forwarding Status Bit\", RFC 6870,\n              February
      2013.\n   [RFC5920]  Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n
      \             Networks\", RFC 5920, July 2010.\n   [RFC6952]  Jethanandani,
      M., Patel, K., and L. Zheng, \"Analysis of\n              BGP, LDP, PCEP, and
      MSDP Issues According to the Keying\n              and Authentication for Routing
      Protocols (KARP) Design\n              Guide\", RFC 6952, May 2013.\n   [RFC5925]
      \ Touch, J., Mankin, A., and R. Bonica, \"The TCP\n              Authentication
      Option\", RFC 5925, June 2010.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [RFC2922]  Bierman, A. and K. Jones, \"Physical
      Topology MIB\",\n              RFC 2922, September 2000.\n   [RFC4026]  Andersson,
      L. and T. Madsen, \"Provider Provisioned Virtual\n              Private Network
      (VPN) Terminology\", RFC 4026, March 2005.\n   [RFC5880]  Katz, D. and D. Ward,
      \"Bidirectional Forwarding Detection\n              (BFD)\", RFC 5880, June
      2010.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines for Writing
      an\n              IANA Considerations Section in RFCs\", BCP 26, RFC 5226,\n
      \             May 2008.\n   [RFC3629]  Yergeau, F., \"UTF-8, a transformation
      format of\n              ISO 10646\", STD 63, RFC 3629, November 2003.\n   [LDP-CRYPTO]\n
      \             Zheng, L., Chen, M., and M. Bhatia, \"LDP Hello\n              Cryptographic
      Authentication\", Work in Progress,\n              June 2014.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Luca Martini\n   Cisco Systems, Inc.\n   9155 East Nichols
    Avenue, Suite 400\n   Englewood, CO  80112\n   United States\n   EMail: lmartini@cisco.com\n
    \  Samer Salam\n   Cisco Systems, Inc.\n   595 Burrard Street, Suite 2123\n   Vancouver,
    BC V7X 1J1\n   Canada\n   EMail: ssalam@cisco.com\n   Ali Sajassi\n   Cisco Systems,
    Inc.\n   170 West Tasman Drive\n   San Jose, CA  95134\n   United States\n   EMail:
    sajassi@cisco.com\n   Matthew Bocci\n   Alcatel-Lucent\n   Voyager Place\n   Shoppenhangers
    Road\n   Maidenhead\n   Berks, SL6 2PJ\n   UK\n   EMail: matthew.bocci@alcatel-lucent.com\n
    \  Satoru Matsushima\n   Softbank Telecom\n   1-9-1, Higashi-Shinbashi, Minato-ku\n
    \  Tokyo  105-7304\n   Japan\n   EMail: satoru.matsushima@g.softbank.co.jp\n   Thomas
    Nadeau\n   Brocade\n   EMail: tnadeau@brocade.com\n"
  title: Authors' Addresses
