- title: __initial_text__
  contents:
  - "                 Problem Statement and Requirements for\n       Transporting\
    \ User-to-User Call Control Information in SIP\n"
- title: Abstract
  contents:
  - "Abstract\n   This document introduces the transport of call control User-to-User\n\
    \   Information (UUI) using the Session Initiation Protocol (SIP) and\n   develops\
    \ several requirements for a new SIP mechanism.  Some SIP\n   sessions are established\
    \ by or related to a non-SIP application.\n   This application may have information\
    \ that needs to be transported\n   between the SIP User Agents during session\
    \ establishment.  In\n   addition to interworking with the Integrated Services\
    \ Digital Network\n   (ISDN) UUI Service, this extension will also be used for\
    \ native SIP\n   endpoints requiring application UUI.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc6567.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Overview ........................................................2\n\
    \   2. Use Cases .......................................................3\n  \
    \    2.1. User Agent to User Agent ...................................3\n    \
    \  2.2. Proxy Retargeting ..........................................4\n      2.3.\
    \ Redirection ................................................4\n      2.4. Referral\
    \ ...................................................5\n   3. Requirements ....................................................6\n\
    \   4. Security Considerations .........................................8\n  \
    \ 5. Acknowledgements ...............................................10\n   6.\
    \ Informative References .........................................10\n"
- title: 1.  Overview
  contents:
  - "1.  Overview\n   This document describes the transport of User-to-User Information\n\
    \   (UUI) during SIP [RFC3261] session setup.  This section introduces\n   UUI\
    \ and explains how it relates to SIP.\n   We define SIP UUI data as application-specific\
    \ information that is\n   related to a session being established using SIP.  It\
    \ is assumed that\n   the application is running in both endpoints in a two-party\
    \ session.\n   That is, the application interacts with both the User Agents in\
    \ a SIP\n   session.  In order to function properly, the application needs a\n\
    \   small piece of information, the UUI, to be transported at the time of\n  \
    \ session establishment.  This information is essentially opaque data\n   to SIP\
    \ -- it is unrelated to SIP routing, authentication, or any\n   other SIP function.\
    \  This application can be considered to be\n   operating at a higher layer on\
    \ the protocol stack.  As a result, SIP\n   should not interpret, understand,\
    \ or perform any operations on the\n   UUI.  Should this not be the case, then\
    \ the information being\n   transported is not considered UUI, and another SIP-specific\
    \ mechanism\n   will be needed to transport the information (such as a new header\n\
    \   field).  In particular, this mechanism creates no requirements on\n   intermediaries\
    \ such as proxies, Back-to-Back User Agents, and Session\n   Border Controllers.\n\
    \   UUI is defined this way for two reasons.  First, this definition\n   supports\
    \ a strict layering of protocols and data.  Providing\n   information and understanding\
    \ of the UUI to the transport layer (SIP\n   in this case) would not provide any\
    \ benefits and instead could create\n   cross-layer coupling.  Second, it is neither\
    \ feasible nor desirable\n   for a SIP User Agent (UA) to understand the information;\
    \ instead, the\n   goal is for the UA to simply pass the information as efficiently\
    \ as\n   possible to the application that does understand the information.\n \
    \  An important application is the interworking with User-to-User\n   Information\
    \ (UUI) in ISDN, specifically the transport of the call-\n   control-related ITU-T\
    \ Q.931 User-to-User Information Element (UUIE)\n   [Q931] and ITU-T Q.763 User-to-User\
    \ Information Parameter [Q763] data\n   in SIP.  ISDN UUI is widely used in the\
    \ Public Switched Telephone\n   Network (PSTN) today in contact centers and call\
    \ centers.  These\n   applications are currently transitioning away from using\
    \ ISDN for\n   session establishment to using SIP.  Native SIP endpoints will\
    \ need\n   to implement a similar service and be able to interwork with this\n\
    \   ISDN service.\n   Note that the distinction between call control UUI and non-call-\n\
    \   control UUI is very important.  SIP already has a mechanism for\n   sending\
    \ arbitrary UUI data between UAs during a session or dialog --\n   the SIP INFO\
    \ [RFC6086] method.  Call control UUI, in contrast, must\n   be exchanged at the\
    \ time of setup and needs to be carried in the\n   INVITE and a few other methods\
    \ and responses.  Applications that\n   exchange UUI but do not have a requirement\
    \ that it be transported and\n   processed during call setup can simply use SIP\
    \ INFO and do not need a\n   new SIP extension.\n   In this document, four different\
    \ use case call flows are discussed.\n   Next, the requirements for call control\
    \ UUI transport are discussed.\n"
- title: 2.  Use Cases
  contents:
  - "2.  Use Cases\n   This section discusses four use cases for the transport of\
    \ call\n   control User-to-User Information.  These use cases will help motivate\n\
    \   the requirements for SIP call control UUI.\n"
- title: 2.1.  User Agent to User Agent
  contents:
  - "2.1.  User Agent to User Agent\n   In this scenario, the originating UA includes\
    \ UUI in the INVITE sent\n   through a proxy to the terminating UA.  The terminating\
    \ UA can use\n   the UUI in any way.  If it is an ISDN gateway, it could map the\
    \ UUI\n   into the appropriate DSS1 [Q933] information element, QSIG [QSIG]\n\
    \   information element, or ISDN User Part (ISUP) parameter.\n   Alternatively,\
    \ the using application might render the information to\n   the user or use it\
    \ during alerting or as a lookup for a screen pop.\n   In this case, the proxy\
    \ does not need to understand the UUI\n   mechanism, but normal proxy rules should\
    \ result in the UUI being\n   forwarded without modification.  This call flow\
    \ is shown in Figure 1.\n            Originating UA            Proxy         \
    \  Terminating UA\n                   |                    |                 \
    \   |\n                   |   INVITE (UUI) F1  |                    |\n      \
    \             |------------------->|   INVITE (UUI) F2  |\n                  \
    \ |      100 Trying F3 |------------------->|\n                   |<-------------------|\
    \         200 OK F4  |\n                   |          200 OK F5 |<-------------------|\n\
    \                   |<-------------------|                    |\n            \
    \       |  ACK F6            |                    |\n                   |------------------->|\
    \            ACK F7  |\n                   |                    |------------------->|\n\
    \      Figure 1: Call Flow with UUI Exchanged between Originating and\n      \
    \                        Terminating UAs\n"
- title: 2.2.  Proxy Retargeting
  contents:
  - "2.2.  Proxy Retargeting\n   In this scenario, the originating UA includes UUI\
    \ in the INVITE\n   request sent through a proxy to the terminating UA.  The proxy\n\
    \   retargets the INVITE request, changing its Request-URI to a URI that\n   addresses\
    \ the terminating UA.  The UUI data is then received and\n   processed by the\
    \ terminating UA.  This call flow is identical to\n   Figure 1 except that the\
    \ proxy retargets the request, i.e., changes\n   the Request-URI as directed by\
    \ some unspecified process.  The UUI in\n   the INVITE request needs to be passed\
    \ unchanged through this proxy\n   retargeting operation.  Note that the contents\
    \ of the UUI is not used\n   by the proxy for routing, as the UUI has only end-to-end\
    \ significance\n   between UAs.\n"
- title: 2.3.  Redirection
  contents:
  - "2.3.  Redirection\n   In this scenario, UUI is inserted by an application that\
    \ utilizes a\n   SIP Redirect Server.  The UUI is then included in the INVITE\
    \ request\n   sent by the originating UA to the terminating UA.  In this case,\
    \ the\n   originating UA does not necessarily need to support the UUI mechanism\n\
    \   but does need to support the SIP redirection mechanism used to\n   include\
    \ the UUI data.  Two examples of UUI with redirection (transfer\n   and diversion)\
    \ are defined in [ANSI] and [ETSI].\n   Note that this case may not precisely\
    \ map to an equivalent ISDN\n   service use case.  This is because there is no\
    \ one-to-one mapping\n   between elements in a SIP network and elements in an\
    \ ISDN network.\n   Also, there is not an exact one-to-one mapping between SIP\
    \ call\n   control and ISDN call control.  However, this should not prevent the\n\
    \   usage of SIP call control UUI in these cases.  Instead, these slight\n   differences\
    \ between the SIP UUI mechanism and the ISDN service need\n   to be carefully\
    \ noted and discussed in an interworking specification.\n   Figure 2 shows this\
    \ scenario, with the Redirect Server inserting UUI\n   that is then included in\
    \ the INVITE request F4 sent to the\n   terminating UA.\n            Originating\
    \ UA        Redirect Server      Terminating UA\n                   |        \
    \            |                    |\n                   |          INVITE F1 |\
    \                    |\n                   |------------------->|            \
    \        |\n                   | 302 Moved (UUI) F2 |                    |\n \
    \                  |<-------------------|                    |\n             \
    \      |            ACK F3  |                    |\n                   |------------------->|\
    \                    |\n                   |  INVITE (UUI) F4   |            \
    \        |\n                   |---------------------------------------->|\n \
    \                  |  200 OK F5                              |\n             \
    \      |<----------------------------------------|\n                   |  ACK\
    \ F6                                 |\n                   |---------------------------------------->|\n\
    \    Figure 2: Call Flow with UUI Exchanged between Redirect Server and\n    \
    \                          Terminating UA\n   A common example application of\
    \ this call flow is an Automatic Call\n   Distributer (ACD) in a PSTN contact\
    \ center.  The originator would be\n   a PSTN gateway.  The ACD would act as a\
    \ Redirect Server, inserting\n   UUI based on called number, calling number, time\
    \ of day, and other\n   information.  The resulting UUI would be passed to the\
    \ agent's\n   handset which acts as the terminating UA.  The UUI could be used\
    \ to\n   lookup information for rendering to the agent at the time of call\n \
    \  answering.\n   This redirection scenario and the referral scenario in the next\n\
    \   section are the most important scenarios for contact center\n   applications.\
    \  Incoming calls to a contact center almost always are\n   redirected or referred\
    \ to a final destination, sometimes multiple\n   times, based on collected information\
    \ and business logic.  The\n   ability to pass along UUI in these call redirection\
    \ scenarios is\n   critical.\n"
- title: 2.4.  Referral
  contents:
  - "2.4.  Referral\n   In this scenario, the application uses a UA to initiate a\
    \ referral,\n   which causes an INVITE request to be generated between the\n \
    \  originating UA and terminating UA with UUI data inserted by the\n   referrer\
    \ UA.  Note that this REFER method [RFC3515] could be part of\n   a transfer operation,\
    \ or it might be unrelated to an existing call,\n   such as out-of-dialog REFER\
    \ request.  In some cases, this call flow\n   is used in place of the redirection\
    \ call flow: the referrer\n   immediately answers the call and then sends the\
    \ REFER request.  This\n   scenario is shown in Figure 3.\n             Originating\
    \ UA         Referrer           Terminating UA\n                   |         \
    \           |                    |\n                   |  REFER (UUI) F1    |\
    \                    |\n                   |<-------------------|            \
    \        |\n                   |  202 Accepted F2   |                    |\n \
    \                  |------------------->|                    |\n             \
    \      |  INVITE (UUI) F3   |                    |\n                   |---------------------------------------->|\n\
    \                   | NOTIFY (100 Trying) F4                  |\n            \
    \       |------------------->|                    |\n                   |    \
    \     200 OK F5  |                    |\n                   |<-------------------|\
    \                    |\n                   |  200 OK F6                      \
    \        |\n                   |<----------------------------------------|\n \
    \                  |  ACK F7                                 |\n             \
    \      |---------------------------------------->|\n                   | NOTIFY\
    \ (200 OK) F8 |                    |\n                   |------------------->|\
    \                    |\n                   |        200 OK F9   |            \
    \        |\n                   |<-------------------|                    |\n \
    \                Figure 3: Call Flow with Referral and UUI\n"
- title: 3.  Requirements
  contents:
  - "3.  Requirements\n   This section states the requirements for the transport of\
    \ call\n   control User-to-User Information (UUI).\n   REQ-1: The mechanism will\
    \ allow UAs to insert and receive UUI data in\n   SIP call setup requests and\
    \ responses.\n      SIP messages covered by this include INVITE requests and end-to-\n\
    \      end responses to the INVITE, i.e., 18x and 200 responses.  UUI\n      data\
    \ may also be inserted in 3xx responses to an INVITE.  However,\n      if a 3xx\
    \ response is recursed on by an intermediary proxy, the\n      resulting INVITE\
    \ will not contain the UUI data from the 3xx\n      response.  In a scenario where\
    \ a proxy forks an INVITE to multiple\n      UAS who include UUI data in 3xx responses,\
    \ if a 3xx response is\n      the best response sent upstream by the proxy, it\
    \ will contain the\n      UUI data from only one 3xx response.\n   REQ-2: The\
    \ mechanism will allow UAs to insert and receive UUI data in\n   SIP dialog terminating\
    \ requests and responses.\n      Q.931 UUI supports inclusion in release and release\
    \ completion\n      messages.  SIP messages covered by this include BYE and 200\
    \ OK\n      responses to a BYE.\n   REQ-3: The mechanism will allow UUI to be\
    \ inserted and retrieved in\n   SIP redirects and referrals.\n      SIP messages\
    \ covered by this include REFER requests and 3xx\n      responses to INVITE requests.\n\
    \   REQ-4: The mechanism will allow UUI to be able to survive proxy\n   retargeting\
    \ or redirection of the request.\n      Retargeting is a common method of call\
    \ routing in SIP and must not\n      result in the loss of User-to-User Information.\n\
    \   REQ-5: The mechanism should not require processing entities to\n   dereference\
    \ a URL in order to retrieve the UUI data.\n      Passing a pointer or link to\
    \ the UUI data will not meet the real-\n      time processing considerations and\
    \ would complicate interworking\n      with the PSTN.\n   REQ-6: The mechanism\
    \ will support interworking with call-control-\n   related DSS1 information elements\
    \ or QSIG information elements and\n   ISUP parameters.\n   REQ-7: The mechanism\
    \ will allow a UAC to learn that a UAS understands\n   the UUI mechanism.\n  \
    \ REQ-8: The mechanism will allow a UAC to require that a UAS\n   understands\
    \ the call control UUI mechanism and have a request routed\n   based on this information.\
    \  If the request cannot be routed to a UAS\n   that understands the UUI mechanism,\
    \ the request will fail.\n      This could be useful in ensuring that a request\
    \ destined for the\n      PSTN is routed to a gateway that supports the UUI mechanism\
    \ rather\n      than an otherwise equivalent PSTN gateway that does not support\n\
    \      the ISDN mechanism.  Note that support of the UUI mechanism does\n    \
    \  not, by itself, imply that a particular application is supported\n      (see\
    \ REQ-10).\n   REQ-9: The mechanism will allow proxies to remove a particular\n\
    \   application usage of UUI data from a request or response.\n      This is a\
    \ common security function provided by border elements to\n      header fields\
    \ such as Alert-Info or Call-Info URIs.  There is no\n      requirement for UAs\
    \ to be able to determine if a particular usage\n      of UUI data has been removed\
    \ from a request or response.\n   REQ-10: The mechanism will provide the ability\
    \ for a UA to discover\n   which application usages of UUI another UA understands\
    \ or supports.\n      The creation of a registry of application usages for the\
    \ UUI\n      mechanism is implied by this requirement.  The ISDN service\n   \
    \   utilizes a field known as the protocol discriminator, which is the\n     \
    \ first octet of the ISDN UUI data, for this purpose.\n   REQ-11: The UUI is a\
    \ sequence of octets.  The solution will provide a\n   mechanism of transporting\
    \ at least 128 octets of user data and a one-\n   octet protocol discriminator,\
    \ i.e., 129 octets in total.\n      There is the potential for non-ISDN services\
    \ to allow UUI to be\n      larger than 128 octets.  However, users of the mechanism\
    \ will need\n      be cognizant of the size of SIP messages and the ability of\n\
    \      parsers to handle extremely large values.\n   REQ-12: The recipient of\
    \ UUI will be able to determine the entity\n   that inserted the UUI.  It is acceptable\
    \ that this is performed\n   implicitly where it is known that there is only one\
    \ other end UA\n   involved in the dialog.  Where that does not exist, some other\n\
    \   mechanism will need to be provided.  The UUI mechanism does not\n   introduce\
    \ stronger authorization requirements for SIP; instead, the\n   mechanism needs\
    \ to be able to utilize existing SIP approaches for\n   request and response identity.\n\
    \      This requirement comes into play during redirection, retargeting,\n   \
    \   and referral scenarios.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   The security requirements for the UUI mechanism\
    \ are described in this\n   section.  It is important to note that UUI security\
    \ is jointly\n   provided at the application layer and at the SIP layer.  As such,\
    \ is\n   important for application users of the UUI mechanism to know the\n  \
    \ level of security used and deployed in their particular SIP\n   environments\
    \ and not to assume that a standardized (but perhaps\n   rarely deployed) security\
    \ mechanism is in place.\n   There are three main security models that need to\
    \ be addressed by the\n   UUI mechanism.  One model treats the SIP layer as untrusted\
    \ and\n   requires end-to-end integrity protection and/or encryption.  This\n\
    \   model can be achieved by providing these security services at a layer\n  \
    \ above SIP.  In this case, the application integrity protects and/or\n   encrypts\
    \ the UUI data before passing it to the SIP layer.  This\n   method has two advantages:\
    \ it does not assume or rely on end-to-end\n   security mechanisms in SIP, which\
    \ have virtually no deployment, and\n   it allows an application that understands\
    \ the contents of the UUI to\n   apply a proper level of security.\n   The second\
    \ approach is for the application to pass the UUI without\n   any protection to\
    \ the SIP layer and require the SIP layer to provide\n   this security.  This\
    \ approach is possible in theory, although its\n   practical use would be extremely\
    \ limited.\n   The third model utilizes a trust domain and relies on perimeter\n\
    \   security at the SIP layer.  This is the security model of the PSTN\n   and\
    \ ISDN where UUI is commonly used today.  This approach uses hop-\n   by-hop security\
    \ mechanisms and relies on border elements for\n   filtering and application of\
    \ policy.  This approach is used today in\n   UUI deployments.  Within this approach,\
    \ there is a requirement that\n   intermediary elements can detect and remove\
    \ a UUI element based on\n   policy, but there is no requirement that an intermediary\
    \ element be\n   able to read or interpret the UUI (as the UUI contents only have\
    \ end-\n   to-end significance).\n   The next three requirements capture the UUI\
    \ security requirements.\n   REQ-13: The mechanism will allow integrity protection\
    \ of the UUI.\n      This allows the UAS to be able to know that the UUI has not\
    \ been\n      modified or tampered with by intermediaries.  Note that there are\n\
    \      tradeoffs between this requirement and requirement REQ-9 for\n      proxies\
    \ and border elements to remove UUI.  One possible way to\n      satisfy both\
    \ of these requirements is to utilize hop-by-hop\n      protection.  This property\
    \ is not guaranteed by the protocol in\n      the ISDN application.\n   REQ-14:\
    \ The mechanism will allow end-to-end privacy of the UUI.\n      Some UUI may\
    \ contain private or sensitive information and may\n      require different security\
    \ handling from the rest of the SIP\n      message.  Note that this property is\
    \ not available in the ISDN\n      application.\n   REQ-15: The mechanism will\
    \ allow both end-to-end and hop-by-hop\n   security models.\n      The hop-by-hop\
    \ model is required by the ISDN UUI service.\n"
- title: 5.  Acknowledgements
  contents:
  - "5.  Acknowledgements\n   Thanks to Joanne McMillen, who was a co-author of earlier\
    \ draft\n   versions of this specification.  Thanks to Spencer Dawkins, Keith\n\
    \   Drage, Dale Worley, and Vijay Gurbani for their review of earlier\n   draft\
    \ versions of this document.  The authors wish to thank Christer\n   Holmberg,\
    \ Frederique Forestie, Francois Audet, Denis Alexeitsev, Paul\n   Kyzivat, Cullen\
    \ Jennings, and Mahalingam Mani for their comments on\n   this topic.\n"
- title: 6.  Informative References
  contents:
  - "6.  Informative References\n   [RFC3261]  Rosenberg, J., Schulzrinne, H., Camarillo,\
    \ G., Johnston,\n              A., Peterson, J., Sparks, R., Handley, M., and\
    \ E.\n              Schooler, \"SIP: Session Initiation Protocol\", RFC 3261,\n\
    \              June 2002.\n   [Q931]     ITU-T, \"ISDN user-network interface\
    \ layer 3 specification\n              for basic call control\", ITU-T Recommendation\
    \ Q.931,\n              <http://www.itu.int/rec/T-REC-Q.931-199805-I/en>.\n  \
    \ [Q763]     ITU-T, \"Signalling System No. 7 - ISDN User Part formats\n     \
    \         and codes\", ITU-T Recommendation Q.763,\n              <http://www.itu.int/rec/T-REC-Q.763-199912-I/en>.\n\
    \   [RFC6086]  Holmberg, C., Burger, E., and H. Kaplan, \"Session\n          \
    \    Initiation Protocol (SIP) INFO Method and Package\n              Framework\"\
    , RFC 6086, January 2011.\n   [Q933]     ITU-T, \"ISDN Digital Subscriber Signalling\
    \ System No. 1\n              (DSS1) - Signalling specifications for frame mode\
    \ switched\n              and permanent virtual connection control and status\n\
    \              monitoring\", ITU-T Recommendation Q.933,\n              <http://www.itu.int/rec/T-REC-Q.933/en>.\n\
    \   [QSIG]     ECMA, \"Private Integrated Services Network (PISN) -\n        \
    \      Circuit Mode Bearer Services -  Inter-Exchange Signalling\n           \
    \   Procedures and Protocol (QSIG-BC)\", Standard ECMA-143,\n              December\
    \ 2001.\n   [ANSI]     ANSI, \"Telecommunications-Integrated Services Digital\n\
    \              Network (ISDN)-Explicit Call Transfer Supplementary\n         \
    \     Service\", ANSI T1.643-1995.\n   [ETSI]     ETSI, \"Integrated Services\
    \ Digital Network (ISDN);\n              Diversion supplementary services\", ETSI\
    \ ETS 300 207-1, Ed.\n              1, 1994.\n   [RFC3515]  Sparks, R., \"The\
    \ Session Initiation Protocol (SIP) Refer\n              Method\", RFC 3515, April\
    \ 2003.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Alan Johnston\n   Avaya\n   St. Louis, MO  63124\n   EMail:\
    \ alan.b.johnston@gmail.com\n   Laura Liess\n   Deutsche Telekom AG\n   EMail:\
    \ laura.liess.dt@gmail.com\n"
