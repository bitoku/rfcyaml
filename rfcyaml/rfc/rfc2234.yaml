- title: __initial_text__
  contents:
  - '             Augmented BNF for Syntax Specifications: ABNF

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1997).  All Rights Reserved.\n"
- title: TABLE OF CONTENTS
  contents:
  - "TABLE OF CONTENTS\n   1. INTRODUCTION ..................................................\
    \  2\n   2. RULE DEFINITION ...............................................  2\n\
    \   2.1 RULE NAMING ..................................................  2\n  \
    \ 2.2 RULE FORM ....................................................  3\n   2.3\
    \ TERMINAL VALUES ..............................................  3\n   2.4 EXTERNAL\
    \ ENCODINGS ...........................................  5\n   3. OPERATORS .....................................................\
    \  5\n   3.1 CONCATENATION    RULE1     RULE2 .............................  5\n\
    \   3.2 ALTERNATIVES RULE1 / RULE2 ...................................  6\n  \
    \ 3.3 INCREMENTAL ALTERNATIVES   RULE1 =/ RULE2 ....................  6\n   3.4\
    \ VALUE RANGE ALTERNATIVES   %C##-## ...........................  7\n   3.5 SEQUENCE\
    \ GROUP (RULE1 RULE2) .................................  7\n   3.6 VARIABLE REPETITION\
    \ *RULE ....................................  8\n   3.7 SPECIFIC REPETITION NRULE\
    \ ....................................  8\n   3.8 OPTIONAL SEQUENCE [RULE] .....................................\
    \  8\n   3.9 ; COMMENT ....................................................  8\n\
    \   3.10 OPERATOR PRECEDENCE .........................................  9\n  \
    \ 4. ABNF DEFINITION OF ABNF .......................................  9\n   5.\
    \ SECURITY CONSIDERATIONS ....................................... 10\n   6. APPENDIX\
    \ A - CORE ............................................. 11\n   6.1 CORE RULES\
    \ ................................................... 11\n   6.2 COMMON ENCODING\
    \ .............................................. 12\n   7. ACKNOWLEDGMENTS ...............................................\
    \ 12\n   8. REFERENCES .................................................... 13\n\
    \   9. CONTACT ....................................................... 13\n  \
    \ 10. FULL COPYRIGHT STATEMENT ..................................... 14\n"
- title: 1.   INTRODUCTION
  contents:
  - "1.   INTRODUCTION\n   Internet technical specifications often need to define\
    \ a format\n   syntax and are free to employ whatever notation their authors deem\n\
    \   useful.  Over the years, a modified version of Backus-Naur Form\n   (BNF),\
    \ called Augmented BNF (ABNF), has been popular among many\n   Internet specifications.\
    \  It balances compactness and simplicity,\n   with reasonable representational\
    \ power.  In the early days of the\n   Arpanet, each specification contained its\
    \ own definition of ABNF.\n   This included the email specifications, RFC733 and\
    \ then RFC822 which\n   have come to be the common citations for defining ABNF.\
    \  The current\n   document separates out that definition, to permit selective\n\
    \   reference.  Predictably, it also provides some modifications and\n   enhancements.\n\
    \   The differences between standard BNF and ABNF involve naming rules,\n   repetition,\
    \ alternatives, order-independence, and value ranges.\n   Appendix A (Core) supplies\
    \ rule definitions and encoding for a core\n   lexical analyzer of the type common\
    \ to several Internet\n   specifications.  It is provided as a convenience and\
    \ is otherwise\n   separate from the meta language defined in the body of this\
    \ document,\n   and separate from its formal status.\n"
- title: 2.   RULE DEFINITION
  contents:
  - '2.   RULE DEFINITION

    '
- title: 2.1  Rule Naming
  contents:
  - "2.1  Rule Naming\n   The name of a rule is simply the name itself; that is, a\
    \ sequence of\n   characters, beginning with  an alphabetic character, and followed\
    \ by\n   a combination of alphabetics, digits and hyphens (dashes).\n        NOTE:\
    \     Rule names are case-insensitive\n   The names <rulename>, <Rulename>, <RULENAME>\
    \ and <rUlENamE> all refer\n   to the same rule.\n   Unlike original BNF, angle\
    \ brackets (\"<\", \">\") are not  required.\n   However, angle brackets may be\
    \ used around a rule name whenever their\n   presence will facilitate discerning\
    \ the use of  a rule name.  This is\n   typically restricted to rule name references\
    \ in free-form prose, or\n   to distinguish partial rules that combine into a\
    \ string not separated\n   by white space, such as shown in the discussion about\
    \ repetition,\n   below.\n"
- title: 2.2  Rule Form
  contents:
  - "2.2  Rule Form\n   A rule is defined by the following sequence:\n        name\
    \ =  elements crlf\n   where <name> is the name of the rule, <elements> is one\
    \ or more rule\n   names or terminal specifications and <crlf> is the end-of-\
    \ line\n   indicator, carriage return followed by line feed.  The equal sign\n\
    \   separates the name from the definition of the rule.  The elements\n   form\
    \ a sequence of one or more rule names and/or value definitions,\n   combined\
    \ according to the various operators, defined in this\n   document, such as alternative\
    \ and repetition.\n   For visual ease, rule definitions are left aligned.  When\
    \ a rule\n   requires multiple lines, the continuation lines are indented.  The\n\
    \   left alignment and indentation are relative to the first lines of the\n  \
    \ ABNF rules and need not match the left margin of the document.\n"
- title: 2.3  Terminal Values
  contents:
  - "2.3  Terminal Values\n   Rules resolve into a string of terminal values, sometimes\
    \ called\n   characters.  In ABNF a character is merely a non-negative integer.\n\
    \   In certain contexts a specific mapping (encoding) of values into a\n   character\
    \ set (such as ASCII) will be specified.\n   Terminals are specified by one or\
    \ more numeric characters with the\n   base interpretation of those characters\
    \ indicated explicitly.  The\n   following bases are currently defined:\n    \
    \    b           =  binary\n        d           =  decimal\n        x        \
    \   =  hexadecimal\n   Hence:\n        CR          =  %d13\n        CR       \
    \   =  %x0D\n   respectively specify the decimal and hexadecimal representation\
    \ of\n   [US-ASCII] for carriage return.\n   A concatenated string of such values\
    \ is specified compactly, using a\n   period (\".\") to indicate separation of\
    \ characters within that value.\n   Hence:\n        CRLF        =  %d13.10\n \
    \  ABNF permits specifying literal text string directly, enclosed in\n   quotation-marks.\
    \  Hence:\n        command     =  \"command string\"\n   Literal text strings\
    \ are interpreted as a concatenated set of\n   printable characters.\n       \
    \ NOTE:     ABNF strings are case-insensitive and\n                  the character\
    \ set for these strings is us-ascii.\n   Hence:\n        rulename = \"abc\"\n\
    \   and:\n        rulename = \"aBc\"\n   will match \"abc\", \"Abc\", \"aBc\"\
    , \"abC\", \"ABc\", \"aBC\", \"AbC\" and \"ABC\".\n                To specify\
    \ a rule which IS case SENSITIVE,\n                   specify the characters individually.\n\
    \   For example:\n        rulename    =  %d97 %d98 %d99\n   or\n        rulename\
    \    =  %d97.98.99\n   will match only the string which comprises only lowercased\n\
    \   characters, abc.\n"
- title: 2.4  External Encodings
  contents:
  - "2.4  External Encodings\n   External representations of terminal value characters\
    \ will vary\n   according to constraints in the storage or transmission environment.\n\
    \   Hence, the same ABNF-based grammar may have multiple external\n   encodings,\
    \ such as one for a 7-bit US-ASCII environment, another for\n   a binary octet\
    \ environment and still a different one when 16-bit\n   Unicode is used.  Encoding\
    \ details are beyond the scope of ABNF,\n   although Appendix A (Core) provides\
    \ definitions for a 7-bit US-ASCII\n   environment as has been common to much\
    \ of the Internet.\n   By separating external encoding from the syntax, it is\
    \ intended that\n   alternate encoding environments can be used for the same syntax.\n"
- title: 3.   OPERATORS
  contents:
  - '3.   OPERATORS

    '
- title: 3.1  Concatenation                                  Rule1 Rule2
  contents:
  - "3.1  Concatenation                                  Rule1 Rule2\n   A rule can\
    \ define a simple, ordered string of values -- i.e., a\n   concatenation of contiguous\
    \ characters -- by listing a sequence of\n   rule names.  For example:\n     \
    \   foo         =  %x61           ; a\n        bar         =  %x62           ;\
    \ b\n        mumble      =  foo bar foo\n        So that the rule <mumble> matches\
    \ the lowercase string \"aba\".\n        LINEAR WHITE SPACE:  Concatenation is\
    \ at the core of the ABNF\n        parsing model.  A string of contiguous characters\
    \ (values) is\n        parsed according to the rules defined in ABNF.  For Internet\n\
    \        specifications, there is some history of permitting linear white\n  \
    \      space (space and horizontal tab) to be freelyPand\n        implicitlyPinterspersed\
    \ around major constructs, such as\n        delimiting special characters or atomic\
    \ strings.\n        NOTE:     This specification for ABNF does not\n         \
    \         provide for implicit specification of linear white\n               \
    \   space.\n   Any grammar which wishes to permit linear white space around\n\
    \   delimiters or string segments must specify it explicitly.  It is\n   often\
    \ useful to provide for such white space in \"core\" rules that are\n   then used\
    \ variously among higher-level rules.  The \"core\" rules might\n   be formed\
    \ into a lexical analyzer or simply be part of the main\n   ruleset.\n"
- title: 3.2  Alternatives                               Rule1 / Rule2
  contents:
  - "3.2  Alternatives                               Rule1 / Rule2\n   Elements separated\
    \ by forward slash (\"/\") are alternatives.\n   Therefore,\n        foo / bar\n\
    \   will accept <foo> or <bar>.\n        NOTE:     A quoted string containing\
    \ alphabetic\n                  characters is special form for specifying alternative\n\
    \                  characters and is interpreted as a non-terminal\n         \
    \         representing the set of combinatorial strings with the\n           \
    \       contained characters, in the specified order but with\n              \
    \    any mixture of upper and lower case..\n"
- title: 3.3  Incremental Alternatives                    Rule1 =/ Rule2
  contents:
  - "3.3  Incremental Alternatives                    Rule1 =/ Rule2\n   It is sometimes\
    \ convenient to specify a list of alternatives in\n   fragments.  That is, an\
    \ initial rule may match one or more\n   alternatives, with later rule definitions\
    \ adding to the set of\n   alternatives.  This is particularly useful for otherwise-\
    \ independent\n   specifications which derive from the same parent rule set, such\
    \ as\n   often occurs with parameter lists.  ABNF permits this incremental\n \
    \  definition through the construct:\n        oldrule     =/ additional-alternatives\n\
    \   So that the rule set\n        ruleset     =  alt1 / alt2\n        ruleset\
    \     =/ alt3\n        ruleset     =/ alt4 / alt5\n   is the same as specifying\n\
    \        ruleset     =  alt1 / alt2 / alt3 / alt4 / alt5\n"
- title: 3.4  Value Range Alternatives                           %c##-##
  contents:
  - "3.4  Value Range Alternatives                           %c##-##\n   A range of\
    \ alternative numeric values can be specified compactly,\n   using dash (\"-\"\
    ) to indicate the range of alternative values.  Hence:\n        DIGIT       =\
    \  %x30-39\n   is equivalent to:\n        DIGIT       =  \"0\" / \"1\" / \"2\"\
    \ / \"3\" / \"4\" / \"5\" / \"6\" /\n                           \"7\" / \"8\"\
    \ / \"9\"\n   Concatenated numeric values and numeric value ranges can not be\n\
    \   specified in the same string.  A numeric value may use the dotted\n   notation\
    \ for concatenation or it may use the dash notation to specify\n   one value range.\
    \  Hence, to specify one printable character, between\n   end of line sequences,\
    \ the specification could be:\n        char-line = %x0D.0A %x20-7E %x0D.0A\n"
- title: 3.5  Sequence Group                             (Rule1 Rule2)
  contents:
  - "3.5  Sequence Group                             (Rule1 Rule2)\n   Elements enclosed\
    \ in parentheses are treated as a single element,\n   whose contents are STRICTLY\
    \ ORDERED.   Thus,\n        elem (foo / bar) blat\n   which matches (elem foo\
    \ blat) or (elem bar blat).\n        elem foo / bar blat\n   matches (elem foo)\
    \ or (bar blat).\n        NOTE:     It is strongly advised to use grouping\n \
    \                 notation, rather than to rely on proper reading of\n       \
    \           \"bare\" alternations, when alternatives consist of\n            \
    \      multiple rule names or literals.\n   Hence it is recommended that instead\
    \ of the above form, the form:\n        (elem foo) / (bar blat)\n   be used. \
    \ It will avoid misinterpretation by casual readers.\n   The sequence group notation\
    \ is also used within free text to set off\n   an element sequence from the prose.\n"
- title: 3.6  Variable Repetition                                *Rule
  contents:
  - "3.6  Variable Repetition                                *Rule\n   The operator\
    \ \"*\" preceding an element indicates repetition. The full\n   form is:\n   \
    \     <a>*<b>element\n   where <a> and <b> are optional decimal values, indicating\
    \ at least\n   <a> and at most <b> occurrences of element.\n   Default values\
    \ are 0 and infinity so that *<element> allows any\n   number, including zero;\
    \ 1*<element> requires at  least  one;\n   3*3<element> allows exactly 3 and 1*2<element>\
    \ allows one or two.\n"
- title: 3.7  Specific Repetition                                  nRule
  contents:
  - "3.7  Specific Repetition                                  nRule\n   A rule of\
    \ the form:\n        <n>element\n   is equivalent to\n        <n>*<n>element\n\
    \   That is, exactly  <N>  occurrences  of <element>. Thus 2DIGIT is a\n   2-digit\
    \ number, and 3ALPHA is a string of three alphabetic\n   characters.\n"
- title: 3.8  Optional Sequence                                   [RULE]
  contents:
  - "3.8  Optional Sequence                                   [RULE]\n   Square brackets\
    \ enclose an optional element sequence:\n        [foo bar]\n   is equivalent to\n\
    \        *1(foo bar).\n"
- title: 3.9  ; Comment
  contents:
  - "3.9  ; Comment\n   A semi-colon starts a comment that continues to the end of\
    \ line.\n   This is a simple way of including useful notes in parallel with the\n\
    \   specifications.\n"
- title: 3.10 Operator Precedence
  contents:
  - "3.10 Operator Precedence\n   The various mechanisms described above have the\
    \ following precedence,\n   from highest (binding tightest) at the top, to lowest\
    \ and loosest at\n   the bottom:\n        Strings, Names formation\n        Comment\n\
    \        Value range\n        Repetition\n        Grouping, Optional\n       \
    \ Concatenation\n        Alternative\n   Use of the alternative operator, freely\
    \ mixed with concatenations can\n   be confusing.\n        Again, it is recommended\
    \ that the grouping operator be used to\n        make explicit concatenation groups.\n"
- title: 4.   ABNF DEFINITION OF ABNF
  contents:
  - "4.   ABNF DEFINITION OF ABNF\n   This syntax uses the rules provided in Appendix\
    \ A (Core).\n        rulelist       =  1*( rule / (*c-wsp c-nl) )\n        rule\
    \           =  rulename defined-as elements c-nl\n                           \
    \    ; continues if next line starts\n                               ;  with white\
    \ space\n        rulename       =  ALPHA *(ALPHA / DIGIT / \"-\")\n        defined-as\
    \     =  *c-wsp (\"=\" / \"=/\") *c-wsp\n                               ; basic\
    \ rules definition and\n                               ;  incremental alternatives\n\
    \        elements       =  alternation *c-wsp\n        c-wsp          =  WSP /\
    \ (c-nl WSP)\n        c-nl           =  comment / CRLF\n                     \
    \          ; comment or newline\n        comment        =  \";\" *(WSP / VCHAR)\
    \ CRLF\n        alternation    =  concatenation\n                          *(*c-wsp\
    \ \"/\" *c-wsp concatenation)\n        concatenation  =  repetition *(1*c-wsp\
    \ repetition)\n        repetition     =  [repeat] element\n        repeat    \
    \     =  1*DIGIT / (*DIGIT \"*\" *DIGIT)\n        element        =  rulename /\
    \ group / option /\n                          char-val / num-val / prose-val\n\
    \        group          =  \"(\" *c-wsp alternation *c-wsp \")\"\n        option\
    \         =  \"[\" *c-wsp alternation *c-wsp \"]\"\n        char-val       = \
    \ DQUOTE *(%x20-21 / %x23-7E) DQUOTE\n                               ; quoted\
    \ string of SP and VCHAR\n                                  without DQUOTE\n \
    \       num-val        =  \"%\" (bin-val / dec-val / hex-val)\n        bin-val\
    \        =  \"b\" 1*BIT\n                          [ 1*(\".\" 1*BIT) / (\"-\"\
    \ 1*BIT) ]\n                               ; series of concatenated bit values\n\
    \                               ; or single ONEOF range\n        dec-val     \
    \   =  \"d\" 1*DIGIT\n                          [ 1*(\".\" 1*DIGIT) / (\"-\" 1*DIGIT)\
    \ ]\n        hex-val        =  \"x\" 1*HEXDIG\n                          [ 1*(\"\
    .\" 1*HEXDIG) / (\"-\" 1*HEXDIG) ]\n        prose-val      =  \"<\" *(%x20-3D\
    \ / %x3F-7E) \">\"\n                               ; bracketed string of SP and\
    \ VCHAR\n                                  without angles\n                  \
    \             ; prose description, to be used as\n                           \
    \       last resort\n"
- title: 5.   SECURITY CONSIDERATIONS
  contents:
  - "5.   SECURITY CONSIDERATIONS\n   Security is truly believed to be irrelevant\
    \ to this document.\n"
- title: 6.   APPENDIX A - CORE
  contents:
  - "6.   APPENDIX A - CORE\n   This Appendix is provided as a convenient core for\
    \ specific grammars.\n   The definitions may be used as a core set of rules.\n"
- title: 6.1  Core Rules
  contents:
  - "6.1  Core Rules\n   Certain  basic  rules  are  in uppercase, such as SP, HTAB,\
    \ CRLF,\n   DIGIT, ALPHA, etc.\n        ALPHA          =  %x41-5A / %x61-7A  \
    \ ; A-Z / a-z\n        BIT            =  \"0\" / \"1\"\n        CHAR         \
    \  =  %x01-7F\n                               ; any 7-bit US-ASCII character,\n\
    \                                  excluding NUL\n        CR             =  %x0D\n\
    \                               ; carriage return\n        CRLF           =  CR\
    \ LF\n                               ; Internet standard newline\n        CTL\
    \            =  %x00-1F / %x7F\n                               ; controls\n  \
    \      DIGIT          =  %x30-39\n                               ; 0-9\n     \
    \   DQUOTE         =  %x22\n                               ; \" (Double Quote)\n\
    \        HEXDIG         =  DIGIT / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"\
    F\"\n        HTAB           =  %x09\n                               ; horizontal\
    \ tab\n        LF             =  %x0A\n                               ; linefeed\n\
    \        LWSP           =  *(WSP / CRLF WSP)\n                               ;\
    \ linear white space (past newline)\n        OCTET          =  %x00-FF\n     \
    \                          ; 8 bits of data\n        SP             =  %x20\n\
    \                               ; space\n        VCHAR          =  %x21-7E\n \
    \                              ; visible (printing) characters\n        WSP  \
    \          =  SP / HTAB\n                               ; white space\n"
- title: 6.2  Common Encoding
  contents:
  - "6.2  Common Encoding\n   Externally, data are represented as \"network virtual\
    \ ASCII\", namely\n   7-bit US-ASCII in an 8-bit field, with the high (8th) bit\
    \ set to\n   zero.  A string of values is in \"network byte order\" with the\n\
    \   higher-valued bytes represented on the left-hand side and being sent\n   over\
    \ the network first.\n"
- title: 7.   ACKNOWLEDGMENTS
  contents:
  - "7.   ACKNOWLEDGMENTS\n   The syntax for ABNF was originally specified in RFC\
    \ 733.  Ken L.\n   Harrenstien, of SRI International, was responsible for re-coding\
    \ the\n   BNF into an augmented BNF that makes the representation smaller and\n\
    \   easier to understand.\n   This recent project began as a simple effort to\
    \ cull out the portion\n   of RFC 822 which has been repeatedly cited by non-email\
    \ specification\n   writers, namely the description of augmented BNF.  Rather\
    \ than simply\n   and blindly converting the existing text into a separate document,\n\
    \   the working group chose to give careful consideration to the\n   deficiencies,\
    \ as well as benefits, of the existing specification and\n   related specifications\
    \ available over the last 15 years and therefore\n   to pursue enhancement.  This\
    \ turned the project into something rather\n   more ambitious than first intended.\
    \  Interestingly the result is not\n   massively different from that original,\
    \ although decisions such as\n   removing the list notation came as a surprise.\n\
    \   The current round of specification was part of the DRUMS working\n   group,\
    \ with significant contributions from Jerome Abela , Harald\n   Alvestrand, Robert\
    \ Elz, Roger Fajman, Aviva Garrett, Tom Harsch, Dan\n   Kohn, Bill McQuillan,\
    \ Keith Moore, Chris Newman , Pete Resnick and\n   Henning Schulzrinne.\n"
- title: 8.   REFERENCES
  contents:
  - "8.   REFERENCES\n   [US-ASCII]     Coded Character Set--7-Bit American Standard\
    \ Code for\n   Information Interchange, ANSI X3.4-1986.\n   [RFC733]  Crocker,\
    \ D., Vittal, J., Pogran, K., and D. Henderson,\n   \"Standard for the Format\
    \ of ARPA Network Text Message,\" RFC 733,\n   November 1977.\n   [RFC822]  Crocker,\
    \ D., \"Standard for the Format of ARPA Internet Text\n   Messages\", STD 11,\
    \ RFC 822, August 1982.\n"
- title: 9.   CONTACT
  contents:
  - "9.   CONTACT\n   David H. Crocker                 Paul Overell\n   Internet Mail\
    \ Consortium         Demon Internet Ltd\n   675 Spruce Dr.                   Dorking\
    \ Business Park\n   Sunnyvale, CA 94086 USA          Dorking\n               \
    \                     Surrey, RH4 1HN\n                                    UK\n\
    \   Phone:    +1 408 246 8253\n   Fax:      +1 408 249 6205\n   EMail:    dcrocker@imc.org\
    \       paulo@turnpike.com\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1997).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
