- title: __initial_text__
  contents:
  - '                             BGP/MPLS VPNs

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes a method by which a Service Provider with\
    \ an\n   IP backbone may provide VPNs (Virtual Private Networks) for its\n   customers.\
    \  MPLS (Multiprotocol Label Switching) is used for\n   forwarding packets over\
    \ the backbone, and BGP (Border Gateway\n   Protocol) is used for distributing\
    \ routes over the backbone.  The\n   primary goal of this method is to support\
    \ the outsourcing of IP\n   backbone services for enterprise networks. It does\
    \ so in a manner\n   which is simple for the enterprise, while still scalable\
    \ and flexible\n   for the Service Provider, and while allowing the Service Provider\
    \ to\n   add value. These techniques can also be used to provide a VPN which\n\
    \   itself provides IP service to customers.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1          Introduction  .......................................\
    \   2\n   1.1        Virtual Private Networks  ...........................   2\n\
    \   1.2        Edge Devices  .......................................   3\n   1.3\
    \        VPNs with Overlapping Address Spaces  ...............   4\n   1.4   \
    \     VPNs with Different Routes to the Same System  ......   4\n   1.5      \
    \  Multiple Forwarding Tables in PEs  ..................   5\n   1.6        SP\
    \ Backbone Routers  ................................   5\n   1.7        Security\
    \  ...........................................   5\n   2          Sites and CEs\
    \  ......................................   6\n   3          Per-Site Forwarding\
    \ Tables in the PEs  ..............   6\n   3.1        Virtual Sites  ......................................\
    \   8\n   4          VPN Route Distribution via BGP  .....................   8\n\
    \   4.1        The VPN-IPv4 Address Family  ........................   9\n   4.2\
    \        Controlling Route Distribution  .....................  10\n   4.2.1 \
    \     The Target VPN Attribute  ...........................  10\n   4.2.2    \
    \  Route Distribution Among PEs by BGP  ................  12\n   4.2.3      The\
    \ VPN of Origin Attribute  ........................  13\n   4.2.4      Building\
    \ VPNs using Target and Origin Attributes  ...  14\n   5          Forwarding Across\
    \ the Backbone  .....................  15\n   6          How PEs Learn Routes\
    \ from CEs  ......................  16\n   7          How CEs learn Routes from\
    \ PEs  ......................  19\n   8          What if the CE Supports MPLS?\
    \  ......................  19\n   8.1        Virtual Sites  ......................................\
    \  19\n   8.2        Representing an ISP VPN as a Stub VPN  ..............  20\n\
    \   9          Security  ...........................................  20\n   9.1\
    \        Point-to-Point Security Tunnels between CE Routers  .  21\n   9.2   \
    \     Multi-Party Security Associations  ..................  21\n   10       \
    \  Quality of Service  .................................  22\n   11         Scalability\
    \  ........................................  22\n   12         Intellectual Property\
    \ Considerations  ...............  23\n   13         Security Considerations \
    \ ............................  23\n   14         Acknowledgments  ....................................\
    \  23\n   15         Authors' Addresses  .................................  24\n\
    \   16         References  .........................................  24\n   17\
    \         Full Copyright Statement.............................  25\n"
- title: 1. Introduction
  contents:
  - '1. Introduction

    '
- title: 1.1. Virtual Private Networks
  contents:
  - "1.1. Virtual Private Networks\n   Consider a set of \"sites\" which are attached\
    \ to a common network\n   which we may call the \"backbone\". Let's apply some\
    \ policy to create a\n   number of subsets of that set, and let's impose the following\
    \ rule:\n   two sites may have IP interconnectivity over that backbone only if\
    \ at\n   least one of these subsets contains them both.\n   The subsets we have\
    \ created are \"Virtual Private Networks\" (VPNs).\n   Two sites have IP connectivity\
    \ over the common backbone only if there\n   is some VPN which contains them both.\
    \  Two sites which have no VPN in\n   common have no connectivity over that backbone.\n\
    \   If all the sites in a VPN are owned by the same enterprise, the VPN\n   is\
    \ a corporate \"intranet\".  If the various sites in a VPN are owned\n   by different\
    \ enterprises, the VPN is an \"extranet\".  A site can be in\n   more than one\
    \ VPN; e.g., in an intranet and several extranets.  We\n   regard both intranets\
    \ and extranets as VPNs. In general, when we use\n   the term VPN we will not\
    \ be distinguishing between intranets and\n   extranets.\n   We wish to consider\
    \ the case in which the backbone is owned and\n   operated by one or more Service\
    \ Providers (SPs).  The owners of the\n   sites are the \"customers\" of the SPs.\
    \  The policies that determine\n   whether a particular collection of sites is\
    \ a VPN are the policies of\n   the customers.  Some customers will want the implementation\
    \ of these\n   policies to be entirely the responsibility of the SP.  Other\n\
    \   customers may want to implement these policies themselves, or to\n   share\
    \ with the SP the responsibility for implementing these policies.\n   In this\
    \ document, we are primarily discussing mechanisms that may be\n   used to implement\
    \ these policies.  The mechanisms we describe are\n   general enough to allow\
    \ these policies to be implemented either by\n   the SP alone, or by a VPN customer\
    \ together with the SP.  Most of the\n   discussion is focused on the former case,\
    \ however.\n   The mechanisms discussed in this document allow the implementation\
    \ of\n   a wide range of policies. For example, within a given VPN, we can\n \
    \  allow every site to have a direct route to every other site (\"full\n   mesh\"\
    ), or we can restrict certain pairs of sites from having direct\n   routes to\
    \ each other (\"partial mesh\").\n   In this document, we are particularly interested\
    \ in the case where\n   the common backbone offers an IP service.  We are primarily\
    \ concerned\n   with the case in which an enterprise is outsourcing its backbone\
    \ to a\n   service provider, or perhaps to a set of service providers, with\n\
    \   which it maintains contractual relationships.  We are not focused on\n   providing\
    \ VPNs over the public Internet.\n   In the rest of this introduction, we specify\
    \ some properties which\n   VPNs should have.  The remainder of this document\
    \ outlines a VPN\n   model which has all these properties.  The VPN Model of this\
    \ document\n   appears to be an instance of the framework described in [4].\n"
- title: 1.2. Edge Devices
  contents:
  - "1.2. Edge Devices\n   We suppose that at each site, there are one or more Customer\
    \ Edge\n   (CE) devices, each of which is attached via some sort of data link\n\
    \   (e.g., PPP, ATM, ethernet, Frame Relay, GRE tunnel, etc.)  to one or\n   more\
    \ Provider Edge (PE) routers.\n   If a particular site has a single host, that\
    \ host may be the CE\n   device.  If a particular site has a single subnet, that\
    \ the CE device\n   may be a switch.  In general, the CE device can be expected\
    \ to be a\n   router, which we call the CE router.\n   We will say that a PE router\
    \ is attached to a particular VPN if it is\n   attached to a CE device which is\
    \ in that VPN.  Similarly, we will say\n   that a PE router is attached to a particular\
    \ site if it is attached\n   to a CE device which is in that site.\n   When the\
    \ CE device is a router, it is a routing peer of the PE(s) to\n   which it is\
    \ attached, but is not a routing peer of CE routers at\n   other sites.  Routers\
    \ at different sites do not directly exchange\n   routing information with each\
    \ other; in fact, they do not even need\n   to know of each other at all (except\
    \ in the case where this is\n   necessary for security purposes, see section 9).\
    \  As a consequence,\n   very large VPNs (i.e., VPNs with a very large number\
    \ of sites) are\n   easily supported, while the routing strategy for each individual\
    \ site\n   is greatly simplified.\n   It is important to maintain clear administrative\
    \ boundaries between\n   the SP and its customers (cf. [4]).  The PE and P routers\
    \ should be\n   administered solely by the SP, and the SP's customers should not\
    \ have\n   any management access to it.  The CE devices should be administered\n\
    \   solely by the customer (unless the customer has contracted the\n   management\
    \ services out to the SP).\n"
- title: 1.3. VPNs with Overlapping Address Spaces
  contents:
  - "1.3. VPNs with Overlapping Address Spaces\n   We assume that any two non-intersecting\
    \ VPNs (i.e., VPNs with no\n   sites in common) may have overlapping address spaces;\
    \ the same\n   address may be reused, for different systems, in different VPNs.\
    \  As\n   long as a given endsystem has an address which is unique within the\n\
    \   scope of the VPNs that it belongs to, the endsystem itself does not\n   need\
    \ to know anything about VPNs.\n   In this model, the VPN owners do not have a\
    \ backbone to administer,\n   not even a \"virtual backbone\". Nor do the SPs\
    \ have to administer a\n   separate backbone or \"virtual backbone\" for each\
    \ VPN.  Site-to-site\n   routing in the backbone is optimal (within the constraints\
    \ of the\n   policies used to form the VPNs), and is not constrained in any way\
    \ by\n   an artificial \"virtual topology\" of tunnels.\n"
- title: 1.4. VPNs with Different Routes to the Same System
  contents:
  - "1.4. VPNs with Different Routes to the Same System\n   Although a site may be\
    \ in multiple VPNs, it is not necessarily the\n   case that the route to a given\
    \ system at that site should be the same\n   in all the VPNs.  Suppose, for example,\
    \ we have an intranet\n   consisting of sites A, B, and C, and an extranet consisting\
    \ of A, B,\n   C, and the \"foreign\" site D.  Suppose that at site A there is\
    \ a\n   server, and we want clients from B, C, or D to be able to use that\n \
    \  server.  Suppose also that at site B there is a firewall.  We want\n   all\
    \ the traffic from site D to the server to pass through the\n   firewall, so that\
    \ traffic from the extranet can be access controlled.\n   However, we don't want\
    \ traffic from C to pass through the firewall on\n   the way to the server, since\
    \ this is intranet traffic.\n   This means that it needs to be possible to set\
    \ up two routes to the\n   server.  One route, used by sites B and C, takes the\
    \ traffic directly\n   to site A.  The second route, used by site D, takes the\
    \ traffic\n   instead to the firewall at site B.  If the firewall allows the\n\
    \   traffic to pass, it then appears to be traffic coming from site B,\n   and\
    \ follows the route to site A.\n"
- title: 1.5. Multiple Forwarding Tables in PEs
  contents:
  - "1.5. Multiple Forwarding Tables in PEs\n   Each PE router needs to maintain a\
    \ number of separate forwarding\n   tables.  Every site to which the PE is attached\
    \ must be mapped to one\n   of those forwarding tables.  When a packet is received\
    \ from a\n   particular site, the forwarding table associated with that site is\n\
    \   consulted in order to determine how to route the packet.  The\n   forwarding\
    \ table associated with a particular site S is populated\n   only with routes\
    \ that lead to other sites which have at least one VPN\n   in common with S. This\
    \ prevents communication between sites which\n   have no VPN in common, and it\
    \ allows two VPNs with no site in common\n   to use address spaces that overlap\
    \ with each other.\n"
- title: 1.6. SP Backbone Routers
  contents:
  - "1.6. SP Backbone Routers\n   The SP's backbone consists of the PE routers, as\
    \ well as other\n   routers (P routers) which do not attach to CE devices.\n \
    \  If every router in an SP's backbone had to maintain routing\n   information\
    \ for all the VPNs supported by the SP, this model would\n   have severe scalability\
    \ problems; the number of sites that could be\n   supported would be limited by\
    \ the amount of routing information that\n   could be held in a single router.\
    \  It is important to require\n   therefore that the routing information about\
    \ a particular VPN be\n   present ONLY in those PE routers which attach to that\
    \ VPN.  In\n   particular, the P routers should not need to have ANY per-VPN routing\n\
    \   information whatsoever.\n   VPNs may span multiple service providers. We assume\
    \ though that when\n   the path between PE routers crosses a boundary between\
    \ SP networks,\n   it does so via a private peering arrangement, at which there\
    \ exists\n   mutual trust between the two providers. In particular, each provider\n\
    \   must trust the other to pass it only correct routing information, and\n  \
    \ to pass it labeled (in the sense of MPLS [9]) packets only if those\n   packets\
    \ have been labeled by trusted sources. We also assume that it\n   is possible\
    \ for label switched paths to cross the boundary between\n   service providers.\n"
- title: 1.7. Security
  contents:
  - "1.7. Security\n   A VPN model should, even without the use of cryptographic security\n\
    \   measures, provide a level of security equivalent to that obtainable\n   when\
    \ a level 2 backbone (e.g., Frame Relay) is used.  That is, in the\n   absence\
    \ of misconfiguration or deliberate interconnection of\n   different VPNs, it\
    \ should not be possible for systems in one VPN to\n   gain access to systems\
    \ in another VPN.\n   It should also be possible to deploy standard security procedures.\n"
- title: 2. Sites and CEs
  contents:
  - "2. Sites and CEs\n   From the perspective of a particular backbone network, a\
    \ set of IP\n   systems constitutes a site if those systems have mutual IP\n \
    \  interconnectivity, and communication between them occurs without use\n   of\
    \ the backbone. In general, a site will consist of a set of systems\n   which\
    \ are in geographic proximity.  However, this is not universally\n   true; two\
    \ geographic locations connected via a leased line, over\n   which OSPF is running,\
    \ will constitute a single site, because\n   communication between the two locations\
    \ does not involve the use of\n   the backbone.\n   A CE device is always regarded\
    \ as being in a single site (though as\n   we shall see, a site may consist of\
    \ multiple \"virtual sites\"). A\n   site, however, may belong to multiple VPNs.\n\
    \   A PE router may attach to CE devices in any number of different\n   sites,\
    \ whether those CE devices are in the same or in different VPNs.\n   A CE device\
    \ may, for robustness, attach to multiple PE routers, of\n   the same or of different\
    \ service providers.  If the CE device is a\n   router, the PE router and the\
    \ CE router will appear as router\n   adjacencies to each other.\n   While the\
    \ basic unit of interconnection is the site, the architecture\n   described herein\
    \ allows a finer degree of granularity in the control\n   of interconnectivity.\
    \ For example, certain systems at a site may be\n   members of an intranet as\
    \ well as members of one or more extranets,\n   while other systems at the same\
    \ site may be restricted to being\n   members of the intranet only.\n"
- title: 3. Per-Site Forwarding Tables in the PEs
  contents:
  - "3. Per-Site Forwarding Tables in the PEs\n   Each PE router maintains one or\
    \ more \"per-site forwarding tables\".\n   Every site to which the PE router is\
    \ attached is associated with one\n   of these tables.  A particular packet's\
    \ IP destination address is\n   looked up in a particular per-site forwarding\
    \ table only if that\n   packet has arrived directly from a site which is associated\
    \ with that\n   table.\n   How are the per-site forwarding tables populated?\n\
    \   As an example, let PE1, PE2, and PE3 be three PE routers, and let\n   CE1,\
    \ CE2, and CE3 be three CE routers. Suppose that PE1 learns, from\n   CE1, the\
    \ routes which are reachable at CE1's site.  If PE2 and PE3\n   are attached respectively\
    \ to CE2 and CE3, and there is some VPN V\n   containing CE1, CE2, and CE3, then\
    \ PE1 uses BGP to distribute to PE2\n   and PE3 the routes which it has learned\
    \ from CE1.  PE2 and PE3 use\n   these routes to populate the forwarding tables\
    \ which they associate\n   respectively with the sites of CE2 and CE3.  Routes\
    \ from sites which\n   are not in VPN V do not appear in these forwarding tables,\
    \ which\n   means that packets from CE2 or CE3 cannot be sent to sites which are\n\
    \   not in VPN V.\n   If a site is in multiple VPNs, the forwarding table associated\
    \ with\n   that site can contain routes from the full set of VPNs of which the\n\
    \   site is a member.\n   A PE generally maintains only one forwarding table per\
    \ site, even if\n   it is multiply connected to that site.  Also, different sites\
    \ can\n   share the same forwarding table if they are meant to use exactly the\n\
    \   same set of routes.\n   Suppose a packet is received by a PE router from a\
    \ particular\n   directly attached site, but the packet's destination address\
    \ does not\n   match any entry in the forwarding table associated with that site.\n\
    \   If the SP is not providing Internet access for that site, then the\n   packet\
    \ is discarded as undeliverable.  If the SP is providing\n   Internet access for\
    \ that site, then the PE's Internet forwarding\n   table will be consulted.  This\
    \ means that in general, only one\n   forwarding table per PE need ever contain\
    \ routes from the Internet,\n   even if Internet access is provided.\n   To maintain\
    \ proper isolation of one VPN from another, it is important\n   that no router\
    \ in the backbone accept a labeled packet from any\n   adjacent non-backbone device\
    \ unless (a) the label at the top of the\n   label stack was actually distributed\
    \ by the backbone router to the\n   non-backbone device, and (b) the backbone\
    \ router can determine that\n   use of that label will cause the packet to leave\
    \ the backbone before\n   any labels lower in the stack will be inspected, and\
    \ before the IP\n   header will be inspected.  These restrictions are necessary\
    \ in order\n   to prevent packets from entering a VPN where they do not belong.\n\
    \   The per-site forwarding tables in a PE are ONLY used for packets\n   which\
    \ arrive from a site which is directly attached to the PE.  They\n   are not used\
    \ for routing packets which arrive from other routers that\n   belong to the SP\
    \ backbone.  As a result, there may be multiple\n   different routes to the same\
    \ system, where the route followed by a\n   given packet is determined by the\
    \ site from which the packet enters\n   the backbone.  E.g., one may have one\
    \ route to a given system for\n   packets from the extranet (where the route leads\
    \ to a firewall), and\n   a different route to the same system for packets from\
    \ the intranet\n   (including packets that have already passed through the firewall).\n"
- title: 3.1. Virtual Sites
  contents:
  - "3.1. Virtual Sites\n   In some cases, a particular site may be divided by the\
    \ customer into\n   several virtual sites, perhaps by the use of VLANs.  Each\
    \ virtual\n   site may be a member of a different set of VPNs. The PE then needs\
    \ to\n   contain a separate forwarding table for each virtual site.  For\n   example,\
    \ if a CE supports VLANs, and wants each VLAN mapped to a\n   separate VPN, the\
    \ packets sent between CE and PE could be contained\n   in the site's VLAN encapsulation,\
    \ and this could be used by the PE,\n   along with the interface over which the\
    \ packet is received, to assign\n   the packet to a particular virtual site.\n\
    \   Alternatively, one could divide the interface into multiple \"sub-\n   interfaces\"\
    \ (particularly if the interface is Frame Relay or ATM),\n   and assign the packet\
    \ to a VPN based on the sub-interface over which\n   it arrives.  Or one could\
    \ simply use a different interface for each\n   virtual site.  In any case, only\
    \ one CE router is ever needed per\n   site, even if there are multiple virtual\
    \ sites.  Of course, a\n   different CE router could be used for each virtual\
    \ site, if that is\n   desired.\n   Note that in all these cases, the mechanisms,\
    \ as well as the policy,\n   for controlling which traffic is in which VPN are\
    \ in the hand of the\n   customer.\n   If it is desired to have a particular host\
    \ be in multiple virtual\n   sites, then that host must determine, for each packet,\
    \ which virtual\n   site the packet is associated with.  It can do this, e.g.,\
    \ by sending\n   packets from different virtual sites on different VLANs, our\
    \ out\n   different network interfaces.\n   These schemes do NOT require the CE\
    \ to support MPLS.  Section 8\n   contains a brief discussion of how the CE might\
    \ support multiple\n   virtual sites if it does support MPLS.\n"
- title: 4. VPN Route Distribution via BGP
  contents:
  - "4. VPN Route Distribution via BGP\n   PE routers use BGP to distribute VPN routes\
    \ to each other (more\n   accurately, to cause VPN routes to be distributed to\
    \ each other).\n   A BGP speaker can only install and distribute one route to\
    \ a given\n   address prefix.  Yet we allow each VPN to have its own address space,\n\
    \   which means that the same address can be used in any number of VPNs,\n   where\
    \ in each VPN the address denotes a different system.  It follows\n   that we\
    \ need to allow BGP to install and distribute multiple routes\n   to a single\
    \ IP address prefix.  Further, we must ensure that POLICY\n   is used to determine\
    \ which sites can be use which routes; given that\n   several such routes are\
    \ installed by BGP, only one such must appear\n   in any particular per-site forwarding\
    \ table.\n   We meet these goals by the use of a new address family, as specified\n\
    \   below.\n"
- title: 4.1. The VPN-IPv4 Address Family
  contents:
  - "4.1. The VPN-IPv4 Address Family\n   The BGP Multiprotocol Extensions [3] allow\
    \ BGP to carry routes from\n   multiple \"address families\".  We introduce the\
    \ notion of the \"VPN-\n   IPv4 address family\".  A VPN-IPv4 address is a 12-byte\
    \ quantity,\n   beginning with an 8-byte \"Route Distinguisher (RD)\" and ending\
    \ with a\n   4-byte IPv4 address.  If two VPNs use the same IPv4 address prefix,\n\
    \   the PEs translate these into unique VPN-IPv4 address prefixes.  This\n   ensures\
    \ that if the same address is used in two different VPNs, it is\n   possible to\
    \ install two completely different routes to that address,\n   one for each VPN.\n\
    \   The RD does not by itself impose any semantics; it contains no\n   information\
    \ about the origin of the route or about the set of VPNs to\n   which the route\
    \ is to be distributed.  The purpose of the RD is\n   solely to allow one to create\
    \ distinct routes to a common IPv4\n   address prefix.  Other means are used to\
    \ determine where to\n   redistribute the route (see section 4.2).\n   The RD\
    \ can also be used to create multiple different routes to the\n   very same system.\
    \  In section 3, we gave an example where the route\n   to a particular server\
    \ had to be different for intranet traffic than\n   for extranet traffic.  This\
    \ can be achieved by creating two different\n   VPN-IPv4 routes that have the\
    \ same IPv4 part, but different RDs.\n   This allows BGP to install multiple different\
    \ routes to the same\n   system, and allows policy to be used (see section 4.2.3)\
    \ to decide\n   which packets use which route.\n   The RDs are structured so that\
    \ every service provider can administer\n   its own \"numbering space\" (i.e.,\
    \ can make its own assignments of\n   RDs), without conflicting with the RD assignments\
    \ made by any other\n   service provider.  An RD consists of a two-byte type field,\
    \ an\n   administrator field, and an assigned number field.  The value of the\n\
    \   type field determines the lengths of the other two fields, as well as\n  \
    \ the semantics of the administrator field.  The administrator field\n   identifies\
    \ an assigned number authority, and the assigned number\n   field contains a number\
    \ which has been assigned, by the identified\n   authority, for a particular purpose.\
    \  For example, one could have an\n   RD whose administrator field contains an\
    \ Autonomous System number\n   (ASN), and whose (4-byte) number field contains\
    \ a number assigned by\n   the SP to whom IANA has assigned that ASN.  RDs are\
    \ given this\n   structure in order to ensure that an SP which provides VPN backbone\n\
    \   service can always create a unique RD when it needs to do so.\n   However,\
    \ the structuring provides no semantics. When BGP compares two\n   such address\
    \ prefixes, it ignores the structure entirely.\n   If the Administrator subfield\
    \ and the Assigned Number subfield of a\n   VPN-IPv4 address are both set to all\
    \ zeroes, the VPN-IPv4 address is\n   considered to have exactly the same meaning\
    \ as the corresponding\n   globally unique IPv4 address. In particular, this VPN-IPv4\
    \ address\n   and the corresponding globally unique IPv4 address will be considered\n\
    \   comparable by BGP. In all other cases, a VPN-IPv4 address and its\n   corresponding\
    \ globally unique IPv4 address will be considered\n   noncomparable by BGP.\n\
    \   A given per-site forwarding table will only have one VPN-IPv4 route\n   for\
    \ any given IPv4 address prefix.  When a packet's destination\n   address is matched\
    \ against a VPN-IPv4 route, only the IPv4 part is\n   actually matched.\n   A\
    \ PE needs to be configured to associate routes which lead to\n   particular CE\
    \ with a particular RD.  The PE may be configured to\n   associate all routes\
    \ leading to the same CE with the same RD, or it\n   may be configured to associate\
    \ different routes with different RDs,\n   even if they lead to the same CE.\n"
- title: 4.2. Controlling Route Distribution
  contents:
  - "4.2. Controlling Route Distribution\n   In this section, we discuss the way in\
    \ which the distribution of the\n   VPN-IPv4 routes is controlled.\n"
- title: 4.2.1. The Target VPN Attribute
  contents:
  - "4.2.1. The Target VPN Attribute\n   Every per-site forwarding table is associated\
    \ with one or more\n   \"Target VPN\" attributes.\n   When a VPN-IPv4 route is\
    \ created by a PE router, it is associated\n   with one or more \"Target VPN\"\
    \ attributes.  These are carried in BGP\n   as attributes of the route.\n   Any\
    \ route associated with Target VPN T must be distributed to every\n   PE router\
    \ that has a forwarding table associated with Target VPN T.\n   When such a route\
    \ is received by a PE router, it is eligible to be\n   installed in each of the\
    \ PE's per-site forwarding tables that is\n   associated with Target VPN T. (Whether\
    \ it actually gets installed\n   depends on the outcome of the BGP decision process.)\n\
    \   In essence, a Target VPN attribute identifies a set of sites.\n   Associating\
    \ a particular Target VPN attribute with a route allows\n   that route to be placed\
    \ in the per-site forwarding tables that are\n   used for routing traffic which\
    \ is received from the corresponding\n   sites.\n   There is a set of Target VPNs\
    \ that a PE router attaches to a route\n   received from site S. And there is\
    \ a set of Target VPNs that a PE\n   router uses to determine whether a route\
    \ received from another PE\n   router could be placed in the forwarding table\
    \ associated with site\n   S. The two sets are distinct, and need not be the same.\n\
    \   The function performed by the Target VPN attribute is similar to that\n  \
    \ performed by the BGP Communities Attribute.  However, the format of\n   the\
    \ latter is inadequate, since it allows only a two-byte numbering\n   space. \
    \ It would be fairly straightforward to extend the BGP\n   Communities Attribute\
    \ to provide a larger numbering space.  It should\n   also be possible to structure\
    \ the format, similar to what we have\n   described for RDs (see section 4.1),\
    \ so that a type field defines the\n   length of an administrator field, and the\
    \ remainder of the attribute\n   is a number from the specified administrator's\
    \ numbering space.\n   When a BGP speaker has received two routes to the same\
    \ VPN-IPv4\n   prefix, it chooses one, according to the BGP rules for route\n\
    \   preference.\n   Note that a route can only have one RD, but it can have multiple\n\
    \   Target VPNs.  In BGP, scalability is improved if one has a single\n   route\
    \ with multiple attributes, as opposed to multiple routes.  One\n   could eliminate\
    \ the Target VPN attribute by creating more routes\n   (i.e., using more RDs),\
    \ but the scaling properties would be less\n   favorable.\n   How does a PE determine\
    \ which Target VPN attributes to associate with\n   a given route?  There are\
    \ a number of different possible ways.  The\n   PE might be configured to associate\
    \ all routes that lead to a\n   particular site with a particular Target VPN.\
    \  Or the PE might be\n   configured to associate certain routes leading to a\
    \ particular site\n   with one Target VPN, and certain with another.  Or the CE\
    \ router,\n   when it distributes these routes to the PE (see section 6), might\n\
    \   specify one or more Target VPNs for each route.  The latter method\n   shifts\
    \ the control of the mechanisms used to implement the VPN\n   policies from the\
    \ SP to the customer.  If this method is used, it may\n   still be desirable to\
    \ have the PE eliminate any Target VPNs that,\n   according to its own configuration,\
    \ are not allowed, and/or to add in\n   some Target VPNs that according to its\
    \ own configuration are\n   mandatory.\n   It might be more accurate, if less\
    \ suggestive, to call this attribute\n   the \"Route Target\" attribute instead\
    \ of the \"VPN Target\" attribute.\n   It really identifies only a set of sites\
    \ which will be able to use\n   the route, without prejudice to whether those\
    \ sites constitute what\n   might intuitively be called a VPN.\n"
- title: 4.2.2. Route Distribution Among PEs by BGP
  contents:
  - "4.2.2. Route Distribution Among PEs by BGP\n   If two sites of a VPN attach to\
    \ PEs which are in the same Autonomous\n   System, the PEs can distribute VPN-IPv4\
    \ routes to each other by means\n   of an IBGP connection between them.  Alternatively,\
    \ each can have an\n   IBGP connection to a route reflector.\n   If two sites\
    \ of VPN are in different Autonomous Systems (e.g.,\n   because they are connected\
    \ to different SPs), then a PE router will\n   need to use IBGP to redistribute\
    \ VPN-IPv4 routes either to an\n   Autonomous System Border Router (ASBR), or\
    \ to a route reflector of\n   which an ASBR is a client.  The ASBR will then need\
    \ to use EBGP to\n   redistribute those routes to an ASBR in another AS.  This\
    \ allows one\n   to connect different VPN sites to different Service Providers.\n\
    \   However, VPN-IPv4 routes should only be accepted on EBGP connections\n   at\
    \ private peering points, as part of a trusted arrangement between\n   SPs.  VPN-IPv4\
    \ routes should neither be distributed to nor accepted\n   from the public Internet.\n\
    \   If there are many VPNs having sites attached to different Autonomous\n   Systems,\
    \ there does not need to be a single ASBR between those two\n   ASes which holds\
    \ all the routes for all the VPNs; there can be\n   multiple ASBRs, each of which\
    \ holds only the routes for a particular\n   subset of the VPNs.\n   When a PE\
    \ router distributes a VPN-IPv4 route via BGP, it uses its\n   own address as\
    \ the \"BGP next hop\".  It also assigns and distributes\n   an MPLS label.  (Essentially,\
    \ PE routers distribute not VPN-IPv4\n   routes, but Labeled VPN-IPv4 routes.\
    \ Cf. [8]) When the PE processes a\n   received packet that has this label at\
    \ the top of the stack, the PE\n   will pop the stack, and send the packet directly\
    \ to the site from to\n   which the route leads.  This will usually mean that\
    \ it just sends the\n   packet to the CE router from which it learned the route.\
    \  The label\n   may also determine the data link encapsulation.\n   In most cases,\
    \ the label assigned by a PE will cause the packet to be\n   sent directly to\
    \ a CE, and the PE which receives the labeled packet\n   will not look up the\
    \ packet's destination address in any forwarding\n   table.  However, it is also\
    \ possible for the PE to assign a label\n   which implicitly identifies a particular\
    \ forwarding table.  In this\n   case, the PE receiving a packet that label would\
    \ look up the packet's\n   destination address in one of its forwarding tables.\
    \  While this can\n   be very useful in certain circumstances, we do not consider\
    \ it\n   further in this paper.\n   Note that the MPLS label that is distributed\
    \ in this way is only\n   usable if there is a label switched path between the\
    \ router that\n   installs a route and the BGP next hop of that route.  We do\
    \ not make\n   any assumption about the procedure used to set up that label switched\n\
    \   path.  It may be set up on a pre-established basis, or it may be set\n   up\
    \ when a route which would need it is installed.  It may be a \"best\n   effort\"\
    \ route, or it may be a traffic engineered route.  Between a\n   particular PE\
    \ router and its BGP next hop for a particular route\n   there may be one LSP,\
    \ or there may be several, perhaps with different\n   QoS characteristics.  All\
    \ that matters for the VPN architecture is\n   that some label switched path between\
    \ the router and its BGP next hop\n   exists.\n   All the usual techniques for\
    \ using route reflectors [2] to improve\n   scalability, e.g., route reflector\
    \ hierarchies, are available.  If\n   route reflectors are used, there is no need\
    \ to have any one route\n   reflector know all the VPN-IPv4 routes for all the\
    \ VPNs supported by\n   the backbone.  One can have separate route reflectors,\
    \ which do not\n   communicate with each other, each of which supports a subset\
    \ of the\n   total set of VPNs.\n   If a given PE router is not attached to any\
    \ of the Target VPNs of a\n   particular route, it should not receive that route;\
    \ the other PE or\n   route reflector which is distributing routes to it should\
    \ apply\n   outbound filtering to avoid sending it unnecessary routes.  Of\n \
    \  course, if a PE router receives a route via BGP, and that PE is not\n   attached\
    \ to any of the route's target VPNs, the PE should apply\n   inbound filtering\
    \ to the route, neither installing nor redistributing\n   it.\n   A router which\
    \ is not attached to any VPN, i.e., a P router, never\n   installs any VPN-IPv4\
    \ routes at all.\n   These distribution rules ensure that there is no one box\
    \ which needs\n   to know all the VPN-IPv4 routes that are supported over the\
    \ backbone.\n   As a result, the total number of such routes that can be supported\n\
    \   over the backbone is not bound by the capacity of any single device,\n   and\
    \ therefore can increase virtually without bound.\n"
- title: 4.2.3. The VPN of Origin Attribute
  contents:
  - "4.2.3. The VPN of Origin Attribute\n   A VPN-IPv4 route may be optionally associated\
    \ with a VPN of Origin\n   attribute.  This attribute uniquely identifies a set\
    \ of sites, and\n   identifies the corresponding route as having come from one\
    \ of the\n   sites in that set.  Typical uses of this attribute might be to\n\
    \   identify the enterprise which owns the site where the route leads, or\n  \
    \ to identify the site's intranet.  However, other uses are also\n   possible.\
    \  This attribute could be encoded as an extended BGP\n   communities attribute.\n\
    \   In situations in which it is necessary to identify the source of a\n   route,\
    \ it is this attribute, not the RD, which must be used.  This\n   attribute may\
    \ be used when \"constructing\" VPNs, as described below.\n   It might be more\
    \ accurate, if less suggestive, to call this attribute\n   the \"Route Origin\"\
    \ attribute instead of the \"VPN of Origin\"\n   attribute.  It really identifies\
    \ the route only has having come from\n   one of a particular set of sites, without\
    \ prejudice as to whether\n   that particular set of sites really constitutes\
    \ a VPN.\n"
- title: 4.2.4. Building VPNs using Target and Origin Attributes
  contents:
  - "4.2.4. Building VPNs using Target and Origin Attributes\n   By setting up the\
    \ Target VPN and VPN of Origin attributes properly,\n   one can construct different\
    \ kinds of VPNs.\n   Suppose it is desired to create a Closed User Group (CUG)\
    \ which\n   contains a particular set of sites. This can be done by creating a\n\
    \   particular Target VPN attribute value to represent the CUG. This\n   value\
    \ then needs to be associated with the per-site forwarding tables\n   for each\
    \ site in the CUG, and it needs to be associated with every\n   route learned\
    \ from a site in the CUG.  Any route which has this\n   Target VPN attribute will\
    \ need to be redistributed so that it reaches\n   every PE router attached to\
    \ one of the sites in the CUG.\n   Alternatively, suppose one desired, for whatever\
    \ reason, to create a\n   \"hub and spoke\" kind of VPN.  This could be done by\
    \ the use of two\n   Target Attribute values, one meaning \"Hub\" and one meaning\
    \ \"Spoke\".\n   Then routes from the spokes could be distributed to the hub,\
    \ without\n   causing routes from the hub to be distributed to the spokes.\n \
    \  Suppose one has a number of sites which are in an intranet and an\n   extranet,\
    \ as well as a number of sites which are in the intranet\n   only.  Then there\
    \ may be both intranet and extranet routes which have\n   a Target VPN identifying\
    \ the entire set of sites.  The sites which\n   are to have intranet routes only\
    \ can filter out all routes with the\n   \"wrong\" VPN of Origin.\n   These two\
    \ attributes allow great flexibility in allowing one to\n   control the distribution\
    \ of routing information among various sets of\n   sites, which in turn provides\
    \ great flexibility in constructing VPNs.\n"
- title: 5. Forwarding Across the Backbone
  contents:
  - "5. Forwarding Across the Backbone\n   If the intermediate routes in the backbone\
    \ do not have any\n   information about the routes to the VPNs, how are packets\
    \ forwarded\n   from one VPN site to another?\n   This is done by means of MPLS\
    \ with a two-level label stack.\n   PE routers (and ASBRs which redistribute VPN-IPv4\
    \ addresses) need to\n   insert /32 address prefixes for themselves into the IGP\
    \ routing\n   tables of the backbone.  This enables MPLS, at each node in the\n\
    \   backbone network, to assign a label corresponding to the route to\n   each\
    \ PE router.  (Certain procedures for setting up label switched\n   paths in the\
    \ backbone may not require the presence of the /32 address\n   prefixes.)\n  \
    \ When a PE receives a packet from a CE device, it chooses a particular\n   per-site\
    \ forwarding table in which to look up the packet's\n   destination address. \
    \ Assume that a match is found.\n   If the packet is destined for a CE device\
    \ attached to this same PE,\n   the packet is sent directly to that CE device.\n\
    \   If the packet is not destined for a CE device attached to this same\n   PE,\
    \ the packet's \"BGP Next Hop\" is found, as well as the label which\n   that\
    \ BGP next hop assigned for the packet's destination address. This\n   label is\
    \ pushed onto the packet's label stack, and becomes the bottom\n   label.  Then\
    \ the PE looks up the IGP route to the BGP Next Hop, and\n   thus determines the\
    \ IGP next hop, as well as the label assigned to\n   the address of the BGP next\
    \ hop by the IGP next hop.  This label gets\n   pushed on as the packet's top\
    \ label, and the packet is then forwarded\n   to the IGP next hop.  (If the BGP\
    \ next hop is the same as the IGP\n   next hop, the second label may not need\
    \ to be pushed on, however.)\n   At this point, MPLS will carry the packet across\
    \ the backbone and\n   into the appropriate CE device.  That is, all forwarding\
    \ decisions by\n   P routers and PE routers are now made by means of MPLS, and\
    \ the\n   packet's IP header is not looked at again until the packet reaches\n\
    \   the CE device.  The final PE router will pop the last label from the\n   MPLS\
    \ label stack before sending the packet to the CE device, thus the\n   CE device\
    \ will just see an ordinary IP packet.  (Though see section 8\n   for some discussion\
    \ of the case where the CE desires to received\n   labeled packets.)\n   When\
    \ a packet enters the backbone from a particular site via a\n   particular PE\
    \ router, the packet's route is determined by the\n   contents of the forwarding\
    \ table which that PE router associated with\n   that site.  The forwarding tables\
    \ of the PE router where the packet\n   leaves the backbone are not relevant.\
    \  As a result, one may have\n   multiple routes to the same system, where the\
    \ particular route chosen\n   for a particular packet is based on the site from\
    \ which the packet\n   enters the backbone.\n   Note that it is the two-level\
    \ labeling that makes it possible to keep\n   all the VPN routes out of the P\
    \ routers, and this in turn is crucial\n   to ensuring the scalability of the\
    \ model.  The backbone does not even\n   need to have routes to the CEs, only\
    \ to the PEs.\n"
- title: 6. How PEs Learn Routes from CEs
  contents:
  - "6. How PEs Learn Routes from CEs\n   The PE routers which attach to a particular\
    \ VPN need to know, for\n   each of that VPN's sites, which addresses in that\
    \ VPN are at each\n   site.\n   In the case where the CE device is a host or a\
    \ switch, this set of\n   addresses will generally be configured into the PE router\
    \ attaching\n   to that device.  In the case where the CE device is a router,\
    \ there\n   are a number of possible ways that a PE router can obtain this set\
    \ of\n   addresses.\n   The PE translates these addresses into VPN-IPv4 addresses,\
    \ using a\n   configured RD.  The PE then treats these VPN-IPv4 routes as input\
    \ to\n   BGP.  In no case will routes from a site ever be leaked into the\n  \
    \ backbone's IGP.\n   Exactly which PE/CE route distribution techniques are possible\n\
    \   depends on whether a particular CE is in a \"transit VPN\" or not.  A\n  \
    \ \"transit VPN\" is one which contains a router that receives routes\n   from\
    \ a \"third party\" (i.e., from a router which is not in the VPN,\n   but is not\
    \ a PE router), and that redistributes those routes to a PE\n   router.  A VPN\
    \ which is not a transit VPN is a \"stub VPN\".  The vast\n   majority of VPNs,\
    \ including just about all corporate enterprise\n   networks, would be expected\
    \ to be \"stubs\" in this sense.\n   The possible PE/CE distribution techniques\
    \ are:\n      1. Static routing (i.e., configuration) may be used. (This is\n\
    \         likely to be useful only in stub VPNs.)\n      2. PE and CE routers\
    \ may be RIP peers, and the CE may use RIP to\n         tell the PE router the\
    \ set of address prefixes which are\n         reachable at the CE router's site.\
    \  When RIP is configured in\n         the CE, care must be taken to ensure that\
    \ address prefixes from\n         other sites (i.e., address prefixes learned\
    \ by the CE router\n         from the PE router) are never advertised to the PE.\
    \  More\n         precisely: if a PE router, say PE1, receives a VPN-IPv4 route\n\
    \         R1, and as a result distributes an IPv4 route R2 to a CE, then\n   \
    \      R2 must not be distributed back from that CE's site to a PE\n         router,\
    \ say PE2, (where PE1 and PE2 may be the same router or\n         different routers),\
    \ unless PE2 maps R2 to a VPN-IPv4 route\n         which is different than (i.e.,\
    \ contains a different RD than)\n         R1.\n      3. The PE and CE routers\
    \ may be OSPF peers.  In this case, the\n         site should be a single OSPF\
    \ area, the CE should be an ABR in\n         that area, and the PE should be an\
    \ ABR which is not in that\n         area.  Also, the PE should report no router\
    \ links other than\n         those to the CEs which are at the same site. (This\
    \ technique\n         should be used only in stub VPNs.)\n      4. The PE and\
    \ CE routers may be BGP peers, and the CE router may\n         use BGP (in particular,\
    \ EBGP to tell the PE router the set of\n         address prefixes which are at\
    \ the CE router's site. (This\n         technique can be used in stub VPNs or\
    \ transit VPNs.)\n         From a purely technical perspective, this is by far\
    \ the best\n         technique:\n              a) Unlike the IGP alternatives,\
    \ this does not require the\n                 PE to run multiple routing algorithm\
    \ instances in order\n                 to talk to multiple CEs\n             \
    \ b) BGP is explicitly designed for just this function:\n                 passing\
    \ routing information between systems run by\n                 different administrations\n\
    \              c) If the site contains \"BGP backdoors\", i.e., routers\n    \
    \             with BGP connections to routers other than PE routers,\n       \
    \          this procedure will work correctly in all\n                 circumstances.\
    \  The other procedures may or may not\n                 work, depending on the\
    \ precise circumstances.\n              d) Use of BGP makes it easy for the CE\
    \ to pass attributes\n                 of the routes to the PE.  For example,\
    \ the CE may\n                 suggest a particular Target for each route, from\
    \ among\n                 the Target attributes that the PE is authorized to\n\
    \                 attach to the route.\n          On the other hand, using BGP\
    \ is likely to be something new for\n          the CE administrators, except in\
    \ the case where the customer\n          itself is already an Internet Service\
    \ Provider (ISP).\n          If a site is not in a transit VPN, note that it need\
    \ not have\n          a unique Autonomous System Number (ASN).  Every CE whose\
    \ site\n          which is not in a transit VPN can use the same ASN.  This can\n\
    \          be chosen from the private ASN space, and it will be stripped\n   \
    \       out by the PE.  Routing loops are prevented by use of the Site\n     \
    \     of Origin Attribute (see below).\n          If a set of sites constitute\
    \ a transit VPN, it is convenient\n          to represent them as a BGP Confederation,\
    \ so that the internal\n          structure of the VPN is hidden from any router\
    \ which is not\n          within the VPN.  In this case, each site in the VPN\
    \ would need\n          two BGP connections to the backbone, one which is internal\
    \ to\n          the confederation and one which is external to it.  The usual\n\
    \          intra-confederation procedures would have to be slightly\n        \
    \  modified in order to take account for the fact that the\n          backbone\
    \ and the sites may have different policies.  The\n          backbone is a member\
    \ of the confederation on one of the\n          connections, but is not a member\
    \ on the other.  These\n          techniques may be useful if the customer for\
    \ the VPN service\n          is an ISP.  This technique allows a customer that\
    \ is an ISP to\n          obtain VPN backbone service from one of its ISP peers.\n\
    \          (However, if a VPN customer is itself an ISP, and its CE\n        \
    \  routers support MPLS, a much simpler technique can be used,\n          wherein\
    \ the ISP is regarded as a stub VPN.  See section 8.)\n   When we do not need\
    \ to distinguish among the different ways in which\n   a PE can be informed of\
    \ the address prefixes which exist at a given\n   site, we will simply say that\
    \ the PE has \"learned\" the routes from\n   that site.\n   Before a PE can redistribute\
    \ a VPN-IPv4 route learned from a site, it\n   must assign certain attributes\
    \ to the route. There are three such\n   attributes:\n      - Site of Origin\n\
    \        This attribute uniquely identifies the site from which the PE\n     \
    \   router learned the route.  All routes learned from a particular\n        site\
    \ must be assigned the same Site of Origin attribute, even if\n        a site\
    \ is multiply connected to a single PE, or is connected to\n        multiple PEs.\
    \  Distinct Site of Origin attributes must be used\n        for distinct sites.\
    \  This attribute could be encoded as an\n        extended BGP communities attribute\
    \ (section 4.2.1).\n      - VPN of Origin\n        See section 4.2.1.\n      -\
    \ Target VPN\n        See section 4.2.1.\n"
- title: 7. How CEs learn Routes from PEs
  contents:
  - "7. How CEs learn Routes from PEs\n   In this section, we assume that the CE device\
    \ is a router.\n   In general, a PE may distribute to a CE any route which the\
    \ PE has\n   placed in the forwarding table which it uses to route packets from\n\
    \   that CE.  There is one exception: if a route's Site of Origin\n   attribute\
    \ identifies a particular site, that route must never be\n   redistributed to\
    \ any CE at that site.\n   In most cases, however, it will be sufficient for the\
    \ PE to simply\n   distribute the default route to the CE.  (In some cases, it\
    \ may even\n   be sufficient for the CE to be configured with a default route\n\
    \   pointing to the PE.)  This will generally work at any site which does\n  \
    \ not itself need to distribute the default route to other sites.\n   (E.g., if\
    \ one site in a corporate VPN has the corporation's access to\n   the Internet,\
    \ that site might need to have default distributed to the\n   other site, but\
    \ one could not distribute default to that site\n   itself.)\n   Whatever procedure\
    \ is used to distribute routes from CE to PE will\n   also be used to distribute\
    \ routes from PE to CE.\n"
- title: 8. What if the CE Supports MPLS?
  contents:
  - "8. What if the CE Supports MPLS?\n   In the case where the CE supports MPLS,\
    \ AND is willing to import the\n   complete set of routes from its VPNs, the PE\
    \ can distribute to it a\n   label for each such route.  When the PE receives\
    \ a packet from the CE\n   with such a label, it (a) replaces that label with\
    \ the corresponding\n   label that it learned via BGP, and (b) pushes on a label\n\
    \   corresponding to the BGP next hop for the corresponding route.\n"
- title: 8.1. Virtual Sites
  contents:
  - "8.1. Virtual Sites\n   If the CE/PE route distribution is done via BGP, the CE\
    \ can use MPLS\n   to support multiple virtual sites.  The CE may itself contain\
    \ a\n   separate forwarding table for each virtual site, which it populates\n\
    \   as indicated by the VPN of Origin and Target VPN attributes of the\n   routes\
    \ it receives from the PE.  If the CE receives the full set of\n   routes from\
    \ the PE, the PE will not need to do any address lookup at\n   all on packets\
    \ received from the CE.  Alternatively, the PE may in\n   some cases be able to\
    \ distribute to the CE a single (labeled) default\n   route for each VPN.  Then\
    \ when the PE receives a labeled packet from\n   the CE, it would know which forwarding\
    \ table to look in; the label\n   placed on the packet by the CE would identify\
    \ only the virtual site\n   from which the packet is coming.\n"
- title: 8.2. Representing an ISP VPN as a Stub VPN
  contents:
  - "8.2. Representing an ISP VPN as a Stub VPN\n   If a particular VPN is actually\
    \ an ISP, but its CE routers support\n   MPLS, then the VPN can actually be treated\
    \ as a stub VPN.  The CE and\n   PE routers need only exchange routes which are\
    \ internal to the VPN.\n   The PE router would distribute to the CE router a label\
    \ for each of\n   these routes.  Routers at different sites in the VPN can then\
    \ become\n   BGP peers.  When the CE router looks up a packet's destination\n\
    \   address, the routing lookup always resolves to an internal address,\n   usually\
    \ the address of the packet's BGP next hop.  The CE labels the\n   packet appropriately\
    \ and sends the packet to the PE.\n"
- title: 9. Security
  contents:
  - "9. Security\n   Under the following conditions:\n      a) labeled packets are\
    \ not accepted by backbone routers from\n         untrusted or unreliable sources,\
    \ unless it is known that such\n         packets will leave the backbone before\
    \ the IP header or any\n         labels lower in the stack will be inspected,\
    \ and\n      b) labeled VPN-IPv4 routes are not accepted from untrusted or\n \
    \        unreliable sources,\n   the security provided by this architecture is\
    \ virtually identical to\n   that provided to VPNs by Frame Relay or ATM backbones.\n\
    \   It is worth noting that the use of MPLS makes it much simpler to\n   provide\
    \ this level of security than would be possible if one\n   attempted to use some\
    \ form of IP-within-IP tunneling in place of\n   MPLS.  It is a simple matter\
    \ to refuse to accept a labeled packet\n   unless the first of the above conditions\
    \ applies to it.  It is rather\n   more difficult to configure the a router to\
    \ refuse to accept an IP\n   packet if that packet is an IP-within-IP tunnelled\
    \ packet which is\n   going to a \"wrong\" place.\n   The use of MPLS also allows\
    \ a VPN to span multiple SPs without\n   depending in any way on the inter-domain\
    \ distribution of IPv4 routing\n   information.\n   It is also possible for a\
    \ VPN user to provide himself with enhanced\n   security by making use of Tunnel\
    \ Mode IPSEC [5].  This is discussed\n   in the remainder of this section.\n"
- title: 9.1. Point-to-Point Security Tunnels between CE Routers
  contents:
  - "9.1. Point-to-Point Security Tunnels between CE Routers\n   A security-conscious\
    \ VPN user might want to ensure that some or all\n   of the packets which traverse\
    \ the backbone are authenticated and/or\n   encrypted. The standard way to obtain\
    \ this functionality today would\n   be to create a \"security tunnel\" between\
    \ every pair of CE routers in\n   a VPN, using IPSEC Tunnel Mode.\n   However,\
    \ the procedures described so far do not enable the CE router\n   transmitting\
    \ a packet to determine the identify of the next CE router\n   that the packet\
    \ will traverse.  Yet that information is required in\n   order to use Tunnel\
    \ Mode IPSEC.  So we must extend those procedures\n   to make this information\
    \ available.\n   A way to do this is suggested in [6].  Every VPN-IPv4 route can\
    \ have\n   an attribute which identifies the next CE router that will be\n   traversed\
    \ if that route is followed.  If this information is provided\n   to all the CE\
    \ routers in the VPN, standard IPSEC Tunnel Mode can be\n   used.\n   If the CE\
    \ and PE are BGP peers, it is natural to present this\n   information as a BGP\
    \ attribute.\n   Each CE that is to use IPSEC should also be configured with a\
    \ set of\n   address prefixes, such that it is prohibited from sending insecure\n\
    \   traffic to any of those addresses.  This prevents the CE from sending\n  \
    \ insecure traffic if, for some reason, it fails to obtain the\n   necessary information.\n\
    \   When MPLS is used to carry packets between the two endpoints of an\n   IPSEC\
    \ tunnel, the IPSEC outer header does not really perform any\n   function.  It\
    \ might be beneficial to develop a form of IPSEC tunnel\n   mode which allows\
    \ the outer header to be omitted when MPLS is used.\n"
- title: 9.2. Multi-Party Security Associations
  contents:
  - "9.2. Multi-Party Security Associations\n   Instead of setting up a security tunnel\
    \ between each pair of CE\n   routers, it may be advantageous to set up a single,\
    \ multiparty\n   security association. In such a security association, all the\
    \ CE\n   routers which are in a particular VPN would share the same security\n\
    \   parameters (.e.g., same secret, same algorithm, etc.). Then the\n   ingress\
    \ CE wouldn't have to know which CE is the next one to receive\n   the data, it\
    \ would only have to know which VPN the data is going to.\n   A CE which is in\
    \ multiple VPNs could use different security\n   parameters for each one, thus\
    \ protecting, e.g., intranet packets from\n   being exposed to the extranet.\n\
    \   With such a scheme, standard Tunnel Mode IPSEC could not be used,\n   because\
    \ there is no way to fill in the IP destination address field\n   of the \"outer\
    \ header\".  However, when MPLS is used for forwarding,\n   there is no real need\
    \ for this outer header anyway; the PE router can\n   use MPLS to get a packet\
    \ to a tunnel endpoint without even knowing\n   the IP address of that endpoint;\
    \ it only needs to see the IP\n   destination address of the \"inner header\"\
    .\n   A significant advantage of a scheme like this is that it makes\n   routing\
    \ changes (in particular, a change of egress CE for a\n   particular address prefix)\
    \ transparent to the security mechanism.\n   This could be particularly important\
    \ in the case of multi-provider\n   VPNs, where the need to distribute information\
    \ about such routing\n   changes simply to support the security mechanisms could\
    \ result in\n   scalability issues.\n   Another advantage is that it eliminates\
    \ the need for the outer IP\n   header, since the MPLS encapsulation performs\
    \ its role.\n"
- title: 10. Quality of Service
  contents:
  - "10. Quality of Service\n   Although not the focus of this paper, Quality of Service\
    \ is a key\n   component of any VPN service.  In MPLS/BGP VPNs, existing L3 QoS\n\
    \   capabilities can be applied to labeled packets through the use of the\n  \
    \ \"experimental\" bits in the shim header [10], or, where ATM is used as\n  \
    \ the backbone, through the use of ATM QoS capabilities.  The traffic\n   engineering\
    \ work discussed in [1] is also directly applicable to\n   MPLS/BGP VPNs.  Traffic\
    \ engineering could even be used to establish\n   LSPs with particular QoS characteristics\
    \ between particular pairs of\n   sites, if that is desirable.  Where an MPLS/BGP\
    \ VPN spans multiple\n   SPs, the architecture described in [7] may be useful.\
    \  An SP may\n   apply either intserv or diffserv capabilities to a particular\
    \ VPN, as\n   appropriate.\n"
- title: 11. Scalability
  contents:
  - "11. Scalability\n   We have discussed scalability issues throughout this paper.\
    \  In this\n   section, we briefly summarize the main characteristics of our model\n\
    \   with respect to scalability.\n   The Service Provider backbone network consists\
    \ of (a) PE routers, (b)\n   BGP Route Reflectors, (c) P routers (which are neither\
    \ PE routers nor\n   Route Reflectors), and, in the case of multi-provider VPNs,\
    \ (d)\n   ASBRs.\n   P routers do not maintain any VPN routes.  In order to properly\n\
    \   forward VPN traffic, the P routers need only maintain routes to the\n   PE\
    \ routers and the ASBRs. The use of two levels of labeling is what\n   makes it\
    \ possible to keep the VPN routes out of the P routers.\n   A PE router to maintains\
    \ VPN routes, but only for those VPNs to which\n   it is directly attached.\n\
    \   Route reflectors and ASBRs can be partitioned among VPNs so that each\n  \
    \ partition carries routes for only a subset of the VPNs provided by\n   the Service\
    \ Provider. Thus no single Route Reflector or ASBR is\n   required to maintain\
    \ routes for all the VPNs.\n   As a result, no single component within the Service\
    \ Provider network\n   has to maintain all the routes for all the VPNs.  So the\
    \ total\n   capacity of the network to support increasing numbers of VPNs is not\n\
    \   limited by the capacity of any individual component.\n"
- title: 12. Intellectual Property Considerations
  contents:
  - "12. Intellectual Property Considerations\n   Cisco Systems may seek patent or\
    \ other intellectual property\n   protection for some of all of the technologies\
    \ disclosed in this\n   document. If any standards arising from this document\
    \ are or become\n   protected by one or more patents assigned to Cisco Systems,\
    \ Cisco\n   intends to disclose those patents and license them on reasonable and\n\
    \   non-discriminatory terms.\n"
- title: 13. Security Considerations
  contents:
  - "13. Security Considerations\n   Security issues are discussed throughout this\
    \ memo.\n"
- title: 14. Acknowledgments
  contents:
  - "14. Acknowledgments\n   Significant contributions to this work have been made\
    \ by Ravi\n   Chandra, Dan Tappan and Bob Thomas.\n"
- title: 15. Authors' Addresses
  contents:
  - "15. Authors' Addresses\n   Eric C. Rosen\n   Cisco Systems, Inc.\n   250 Apollo\
    \ Drive\n   Chelmsford, MA, 01824\n   EMail: erosen@cisco.com\n   Yakov Rekhter\n\
    \   Cisco Systems, Inc.\n   170 Tasman Drive\n   San Jose, CA, 95134\n   EMail:\
    \ yakov@cisco.com\n"
- title: 16. References
  contents:
  - "16. References\n   [1] Awduche, Berger,  Gan, Li, Swallow, and Srinavasan,  \"\
    Extensions\n       to RSVP for LSP Tunnels\", Work in Progress.\n   [2] Bates,\
    \ T. and R. Chandrasekaran, \"BGP Route Reflection: An\n       alternative to\
    \ full mesh IBGP\", RFC 1966, June 1996.\n   [3] Bates, T., Chandra, R., Katz,\
    \ D. and Y. Rekhter, \"Multiprotocol\n       Extensions for BGP4\", RFC 2283,\
    \ February 1998.\n   [4] Gleeson, Heinanen, and Armitage, \"A Framework for IP\
    \ Based\n       Virtual Private Networks\", Work in Progress.\n   [5] Kent and\
    \ Atkinson, \"Security Architecture for the Internet\n       Protocol\", RFC 2401,\
    \ November 1998.\n   [6] Li, \"CPE based VPNs using MPLS\", October 1998, Work\
    \ in Progress.\n   [7] Li, T. and Y. Rekhter, \"A Provider Architecture for\n\
    \       Differentiated Services and Traffic Engineering (PASTE)\", RFC\n     \
    \  2430, October 1998.\n   [8] Rekhter and Rosen, \"Carrying Label Information\
    \ in BGP4\", Work in\n       Progress.\n   [9] Rosen, Viswanathan, and Callon,\
    \ \"Multiprotocol Label Switching\n       Architecture\", Work in Progress.\n\
    \  [10] Rosen, Rekhter, Tappan, Farinacci, Fedorkow, Li, and Conta, \"MPLS\n \
    \      Label Stack Encoding\", Work in Progress.\n"
- title: 17.  Full Copyright Statement
  contents:
  - "17.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
