Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing the Protocol Independent Multicast (PIM) protocol for IPv4. 1.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it describes managed objects used for managing the Protocol Independent Multicast (PIM) protocol [16,17,18,19].
This MIB module is applicable to IPv4 multicast routers which implement PIM.
This MIB does not support management of PIM for other address families, including IPv6.
Such management may be supported by other MIBs.
The SNMP Network Management Framework
Mechanisms for describing and naming objects and events for the purpose of management.
The first version of this Structure of Management Information (SMI) is called SMIv1 and described in STD 16, RFC 1155 [2], STD 16, RFC 1212 [3] and RFC 1215 [4].
The second version, called SMIv2, is described in STD 58, RFC 2578 [5], STD 58, RFC 2579 [6] and STD 58, RFC 2580 [7].
Message protocols for transferring management information.
The first version of the SNMP message protocol is called SNMPv1 and described in STD 15, RFC 1157 [8].
A second version of the SNMP message protocol, which is not an Internet standards track protocol, is called SNMPv2c and described in RFC 1901 [9] and RFC 1906 [10].
The third version of the message protocol is called SNMPv3 and described in RFC 1906 [10], RFC 2572 [11] and RFC 2574 [12].
Protocol operations for accessing management information.
The first set of protocol operations and associated PDU formats is described in STD 15, RFC 1157 [8].
A second set of protocol operations and associated PDU formats is described in RFC 1905 [13].
A set of fundamental applications described in RFC 2573 [14] and the view based access control mechanism described in RFC 2575 [15].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
Objects in the MIB are defined using the mechanisms defined in the SMI.
This memo specifies a MIB module that is compliant to the SMIv2.
A MIB conforming to the SMIv1 can be produced through the appropriate translations.
The resulting translated MIB must be semantically equivalent, except where objects or events are omitted because no translation is possible (use of Counter64).
Some machine readable information in SMIv2 will be converted into textual descriptions in SMIv1 during the translation process.
However, this loss of machine readable information is not considered to change the semantics of the MIB.
This MIB module contains one scalar and eight tables.
Some of the objects in these tables are deprecated.
This MIB contains deprecated objects since they are necessary for managing PIMv1 routers, but PIMv1 itself is obsoleted by PIMv2 [18,19].
The tables contained in this MIB are: (1)  The PIM Interface Table contains one row for each of the router's PIM interfaces.
(2)  The PIM Neighbor Table contains one row for each of the router's PIM neighbors.
The PIM IP Multicast Route Table contains one row for each multicast routing entry whose incoming interface is running PIM.
The PIM Next Hop Table which contains one row for each outgoing interface list entry in the multicast routing table whose interface is running PIM, and whose state is pruned.
PIM RP Table contains the PIM (version 1) information for IP multicast groups which is common to all RPs of a group.
The PIM RP Set Table contains the PIM (version 2) information for sets of candidate Rendezvous Points (RPs) for IP multicast group addresses with particular address prefixes.
The PIM Candidate RP Table contains the IP multicast groups for which the local router is to advertise itself as a Candidate RP.
If this table is empty, then the local router advertises itself as a Candidate RP for all groups.
The PIM Component Table contains one row for each of the PIM domains to which the router is connected.
Definitions PIM MIB DEFINITIONS ::
IMPORTS MODULE IDENTITY, OBJECT TYPE, experimental, NOTIFICATION TYPE,
Integer32, IpAddress, TimeTicks  FROM SNMPv2
CONTACT INFO " Dave Thaler Microsoft Corporation
One Microsoft Way Redmond, WA  98052 6399
1 425 703 8835 EMail:
The MIB module for management of PIM routers."
1 } pimJoinPruneInterval OBJECT TYPE SYNTAX
"The default interval at which periodic PIM SM Join/Prune messages are to be sent."
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table listing the router's PIM interfaces.
IGMP and PIM are enabled on all interfaces listed in this table."
MAX ACCESS not accessible STATUS
An entry (conceptual row) in the pimInterfaceTable."
InterfaceIndex MAX ACCESS not accessible STATUS
The IP address of the PIM interface."
The network mask for the IP address of the PIM interface."
"The configured mode of this PIM interface.
A value of sparseDense is only valid for PIMv1."
The Designated Router on this PIM interface.
For point to  point interfaces, this object has the value 0.0.0.0."
"The status of this entry.
Creating the entry enables PIM on the interface; destroying the entry disables PIM on the interface."
"The frequency at which PIM Join/Prune messages are transmitted on this PIM interface.
The default value of this object is the pimJoinPruneInterval."
"The preference value for the local interface as a candidate bootstrap router.
The value of  1 is used to indicate that the local interface is not a candidate BSR interface."
The PIM Neighbor Table pimNeighborTable OBJECT
SEQUENCE OF PimNeighborEntry MAX ACCESS
current DESCRIPTION "The (conceptual) table listing the router's PIM neighbors."
{ pim 3 } pimNeighborEntry OBJECT
MAX ACCESS not accessible STATUS
An entry (conceptual row) in the pimNeighborTable."
IpAddress MAX ACCESS not accessible STATUS
The IP address of the PIM neighbor for which this entry contains information."
"The minimum time remaining before this PIM neighbor will be aged out."
The active PIM mode of this neighbor.
This object is deprecated for PIMv2 routers since all neighbors on the interface must be either dense or sparse as determined by the protocol running on the interface."
The PIM IP Multicast Route Table   pimIpMRouteTable
MAX ACCESS not accessible STATUS
current DESCRIPTION "The (conceptual) table listing PIM specific information on a subset of the rows of the ipMRouteTable defined in the IP Multicast MIB."
MAX ACCESS not accessible STATUS
An entry (conceptual row) in the pimIpMRouteTable.
There is one entry per entry in the ipMRouteTable whose incoming interface is running PIM.
BITS } pimIpMRouteUpstreamAssertTimer OBJECT TYPE SYNTAX
"The time remaining before the router changes its upstream neighbor back to its RPF neighbor.
This timer is called the Assert timer in the PIM Sparse and Dense mode specification.
A value of 0 indicates that no Assert has changed the upstream neighbor away from the RPF neighbor."
The metric advertised by the assert winner on the upstream interface, or 0 if no such assert is in received."
"The preference advertised by the assert winner on the upstream interface, or 0 if no such assert is in effect."
"The value of the RPT bit advertised by the assert winner on the upstream interface, or false if no such assert is in effect."
"This object describes PIM specific flags related to a multicast state entry.
See the PIM Sparse Mode specification for the meaning of the RPT and SPT bits."
current DESCRIPTION "The (conceptual) table listing PIM specific information on a subset of the rows of the ipMRouteNextHopTable defined in the IP Multicast MIB."
An entry (conceptual row) in the pimIpMRouteNextHopTable.
There is one entry per entry in the ipMRouteNextHopTable whose interface is running PIM and whose ipMRouteNextHopState is pruned(1).
"This object indicates why the downstream interface was pruned, whether in response to a PIM prune message or due to PIM Assert processing."
MAX ACCESS not accessible STATUS
deprecated DESCRIPTION "The (conceptual) table listing PIM version 1 information for the Rendezvous Points (RPs) for IP multicast groups.
An entry (conceptual row) in the pimRPTable.
There is one entry per RP address for each IP multicast group.
IpAddress MAX ACCESS not accessible
deprecated DESCRIPTION "The IP multicast group address for which this entry contains information about an RP."
IpAddress MAX ACCESS not accessible
The unicast address of the RP."
} pimRPStateTimer OBJECT TYPE SYNTAX
The minimum time remaining before the next state change.
When pimRPState is up, this is the minimum time which must expire until it can be declared down.
When pimRPState is down, this is the time until it will be declared up (in order to retry)."
The value of sysUpTime at the time when the corresponding instance of pimRPState last changed its value."
The status of this row, by which new entries may be created, or old entries deleted from this table."
The PIM RP Set Table pimRPSetTable
current DESCRIPTION "The (conceptual) table listing PIM information for candidate Rendezvous Points (RPs) for IP multicast groups.
When the local router is the BSR, this information is obtained from received Candidate RP Advertisements.
When the local router is not the BSR, this information is obtained from received RP Set messages."
MAX ACCESS not accessible STATUS
An entry (conceptual row) in the pimRPSetTable.
IpAddress MAX ACCESS not accessible STATUS
"The IP multicast group address which, when combined with pimRPSetGroupMask, gives the group prefix for which this entry contains information about the Candidate RP."
IpAddress MAX ACCESS not accessible STATUS
IpAddress MAX ACCESS not accessible STATUS
The IP address of the Candidate RP."
The holdtime of a Candidate RP.
"The minimum time remaining before the Candidate RP will be declared down.
MAX ACCESS not accessible STATUS
" A number uniquely identifying the component.
Each protocol instance connected to a separate domain should have a different index value."
Note: { pim 8 } through { pim 10 } were used in older versions   of this MIB.
Since some earlier versions of this MIB have been   widely deployed, these values must not be used in the future,   as long the MIB is rooted under { experimental 61 }.
The PIM Candidate RP Table pimCandidateRPTable OBJECT
SEQUENCE OF PimCandidateRPEntry MAX ACCESS
current DESCRIPTION "The (conceptual) table listing the IP multicast groups for which the local router is to advertise itself as a Candidate RP when the value of pimComponentCRPHoldTime is non zero.
If this table is empty, then the local router will advertise itself as a Candidate RP for all groups (providing the value of pimComponentCRPHoldTime is non  zero)."
An entry (conceptual row) in the pimCandidateRPTable."
IpAddress MAX ACCESS not accessible STATUS
"The IP multicast group address which, when combined with pimCandidateRPGroupMask, identifies a group prefix for which the local router will advertise itself as a Candidate RP."
IpAddress MAX ACCESS not accessible STATUS
"The status of this row, by which new entries may be created, or old entries deleted from this table."
SEQUENCE OF PimComponentEntry MAX ACCESS
current DESCRIPTION "The (conceptual) table containing objects specific to a PIM domain.
One row exists for each domain to which the router is connected.
A PIM SM domain is defined as an area of the network over which Bootstrap messages are forwarded.
Typically, a PIM SM router will be a member of exactly one domain.
PimComponentEntry MAX ACCESS not accessible STATUS
An entry (conceptual row) in the pimComponentTable."
MAX ACCESS not accessible STATUS
"A number uniquely identifying the component.
Each protocol instance connected to a separate domain should have a different index value.
Routers that only support membership in a single PIM SM domain should use a pimComponentIndex value of 1."
The IP address of the bootstrap router (BSR) for the local PIM region."
"The minimum time remaining before the bootstrap router in the local domain will be declared down.
For candidate BSRs, this is the time until the component sends an RP Set message.
For other routers, this is the time until it may accept an RP Set message from a lower candidate BSR."
"The holdtime of the component when it is a candidate RP in the local domain.
The value of 0 is used to indicate that the local system is not a Candidate RP."
"The status of this entry.
Creating the entry creates another protocol instance; destroying the entry disables a protocol instance."
A pimNeighborLoss trap signifies the loss of an adjacency with a neighbor.
This trap should be generated when the neighbor timer expires, and the router has no other neighbors on the same interface with a lower IP address than itself."
pimV1MIBCompliance MODULE COMPLIANCE STATUS  deprecated DESCRIPTION "The compliance statement for routers running PIMv1 and implementing the PIM MIB.
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for routers running PIM Sparse Mode and implementing the PIM MIB."
"Write access is not required."
MODULE COMPLIANCE STATUS  current DESCRIPTION
"The compliance statement for routers running PIM Dense Mode and implementing the PIM MIB."
"Write access is not required."
pimNotificationGroup NOTIFICATION GROUP NOTIFICATIONS { pimNeighborLoss } STATUS  current DESCRIPTION "
A collection of notifications for signaling important PIM events."
A collection of objects to support management of PIM Sparse Mode (version 2) routers."
pimInterfaceAddress, pimInterfaceNetMask, pimInterfaceDR, pimInterfaceHelloInterval, pimInterfaceStatus,
pimInterfaceMode } STATUS  current DESCRIPTION
"A collection of objects to support management of PIM Dense Mode (version 2) routers."
OBJECT GROUP OBJECTS { pimCandidateRPAddress, pimCandidateRPRowStatus } STATUS  current DESCRIPTION
"A collection of objects to support configuration of which groups a router is to advertise itself as a Candidate RP."
pimInterfaceAddress, pimInterfaceNetMask, pimInterfaceJoinPruneInterval, pimInterfaceStatus, pimInterfaceMode, pimInterfaceDR, pimInterfaceHelloInterval, pimRPState, pimRPStateTimer, pimRPLastChange,
pimRPRowStatus } STATUS  deprecated DESCRIPTION "
A collection of objects to support management of PIM (version 1) routers."
"A collection of optional objects to provide per next hop information for diagnostic purposes.
Supporting this group may add a large number of instances to a tree walk, but the information in this group can be extremely useful in tracking down multicast connectivity problems."
OBJECT GROUP OBJECTS { pimIpMRouteAssertMetric, pimIpMRouteAssertMetricPref,
pimIpMRouteAssertRPTBit } STATUS  current DESCRIPTION
"A collection of optional objects to provide extra information about the assert election process.
There is no protocol reason to keep such information, but some implementations may already keep this information and make it available.
These objects can also be very useful in debugging connectivity or duplicate packet problems, especially if the assert winner does not support the PIM and IP Multicast MIBs."
This MIB contains readable objects whose values provide information related to multicast routing, including information on the network topology.
There are also a number of objects that have a MAX ACCESS clause of read write and/or read create, which allow an administrator to configure PIM in the router.
While unauthorized access to the readable objects is relatively innocuous, unauthorized access to the write
able objects could cause a denial of service.
Hence, the support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
by itself is such an insecure environment.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and SET (change/create/delete)
the objects in this MIB.
It is recommended that the implementers consider the security features as provided by the SNMPv3 framework.
Specifically, the use of the User based Security Model RFC 2274 [12] and the View based Access Control Model RFC 2275
It is then a customer/user responsibility to ensure that the SNMP entity giving access to this MIB, is properly configured to give access to those objects only to those principals (users) that have legitimate rights to access them.
