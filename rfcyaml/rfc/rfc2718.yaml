- title: __initial_text__
  contents:
  - '                     Guidelines for new URL Schemes

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   A Uniform Resource Locator (URL) is a compact string representation\n\
    \   of the location for a resource that is available via the Internet.\n   This\
    \ document provides guidelines for the definition of new URL\n   schemes.\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   A Uniform Resource Locator (URL) is a compact string representation\n\
    \   of the location for a resource that is available via the Internet.\n   RFC\
    \ 2396 [1] defines the general syntax and semantics of URIs, and,\n   by inclusion,\
    \ URLs.  URLs are designated by including a \"<scheme>:\"\n   and then a \"<scheme-specific-part>\"\
    .  Many URL schemes are already\n   defined.\n   This document provides guidelines\
    \ for the definition of new URL\n   schemes, for consideration by those who are\
    \ defining and registering\n   or evaluating those definitions.\n   The process\
    \ by which new URL schemes are registered is defined in RFC\n   2717 [2].\n"
- title: 2. Guidelines for new URL schemes
  contents:
  - "2. Guidelines for new URL schemes\n   Because new URL schemes potentially complicate\
    \ client software, new\n   schemes must have demonstrable utility and operability,\
    \ as well as\n   compatibility with existing URL schemes.  This section elaborates\n\
    \   these criteria.\n"
- title: 2.1 Syntactic compatibility
  contents:
  - "2.1 Syntactic compatibility\n   New URL schemes should follow the same syntactic\
    \ conventions of\n   existing schemes when appropriate.  If a URI scheme that\
    \ has embedded\n   links in content accessed by that scheme does not share syntax\
    \ with a\n   different scheme, the same content cannot be served up under\n  \
    \ different schemes without rewriting the content.  This can already be\n   a\
    \ problem, and with future digital signature schemes, rewriting may\n   not even\
    \ be possible.  Deployment of other schemes in the future\n   could therefore\
    \ become extremely difficult.\n"
- title: 2.1.1 Motivations for syntactic compatibility
  contents:
  - "2.1.1 Motivations for syntactic compatibility\n   Why should new URL schemes\
    \ share as much of the generic URI syntax\n   (that makes sense to share) as possible?\
    \  Consider the following:\n   o  If fragment syntax isn't shared between two\
    \ schemes, (e.g. \"<a\n      href=\"#foo\">\"), you can't move individual completely\
    \ self\n      referential documents between schemes without rewriting the\n  \
    \    embedded references within the document.  In the Web, the fragment\n    \
    \  syntax is a property of the media type, and evaluated by the\n      client.\n\
    \   o  If fragment syntax is not shared between different media types of\n   \
    \   the same capability (e.g. HTML, XML, Word, or image types such as\n      GIF,\
    \ JPEG, PNG) then you can't have a URI reference that can\n      evolve to superior\
    \ media types as they become available, or even\n      likely work properly today\
    \ with content negotiation.\n   o  If relative syntax (to the extent of understanding\
    \ the URI is\n      relative, and what part of the URI string is relative) isn't\n\
    \      shared between two schemes, (e.g. \"<a href=\"foo\">\"), you can't\n  \
    \    move sets of documents that are internally self referential\n      between\
    \ schemes without rewriting the embedded URIs.\n   o  If the \"..\" syntax as\
    \ a path component in relative URI's isn't\n      shared between schemes, you\
    \ can't easily have sets of document\n      sets and refer to them between schemes\
    \ without rewriting the\n      embedded references.\n   o  If the \"/\" syntax\
    \ (to the extent of understanding that the URI\n      refers to a path relative\
    \ to the current naming authority, see\n      section 2.1.1) isn't shared, you\
    \ can't have multiple sets of\n      documents easily be moved up or down in a\
    \ relative hierarchy of\n      names and share a common set of documents between\
    \ them, without\n      rewriting the content, shared either in that scheme or\
    \ between\n      schemes.  The best example is a site that has a common set of\n\
    \      GIF's, JPEG and PNG images, and you want to reorganize the site\n     \
    \ changing the depth of a subtree from one depth to another, or from\n      one\
    \ directory to another where the depth isn't the same.\n   o  If naming authority\
    \ syntax (e.g. what comes after \"//\" in most URL\n      schemes, see section\
    \ 2.1.1) and relative path syntax is shared, to\n      the extent of understanding\
    \ that the URI has a naming authority,\n      and what part of the URI string\
    \ is the naming authority vs. path),\n      isn't shared between two schemes,\
    \ you can't share identical name\n      spaces and serve them up via different\
    \ schemes.  (The naming\n      authority syntax is a property of the scheme).\
    \  The fact that\n      HTTP, and FTP have the same syntax, for example, has often\
    \ been\n      exploited by sites transitioning from ftp archive service to HTTP\n\
    \      archive service so that the URL's can be identical between schemes\n  \
    \    except for the scheme; the same content can be served via two\n      schemes\
    \ simultaneously.\n"
- title: 2.1.2 Improper use of "//" following "<scheme>:"
  contents:
  - "2.1.2 Improper use of \"//\" following \"<scheme>:\"\n   Contrary to some examples\
    \ set in past years, the use of double\n   slashes as the first component of the\
    \ <scheme-specific-part> of a URL\n   is not simply an artistic indicator that\
    \ what follows is a URL:\n   Double slashes are used ONLY when the syntax of the\
    \ URL's <scheme-\n   specific-part> contains a hierarchical structure as described\
    \ in RFC\n   2396.  In URLs from such schemes, the use of double slashes indicates\n\
    \   that what follows is the top hierarchical element for a naming\n   authority.\
    \  (See section 3 of RFC 2396 for more details.)  URL\n   schemes which do not\
    \ contain a conformant hierarchical structure in\n   their <scheme-specific-part>\
    \ should not use double slashes following\n   the \"<scheme>:\" string.\n"
- title: 2.1.3 Compatibility with relative URLs
  contents:
  - "2.1.3 Compatibility with relative URLs\n   URL schemes should use the generic\
    \ URL syntax if they are intended to\n   be used with relative URLs.  A description\
    \ of the allowed relative\n   forms should be included in the scheme's definition.\
    \  Many\n   applications use relative URLs extensively.  Specifically,\n   o \
    \ Can the scheme be parsed according to RFC 2396 - for example, if\n      the\
    \ tokens \"//\", \"/\", \";\", or \"?\" are used, do they have the\n      meaning\
    \ given in RFC 2396?\n   o  Does the scheme make sense to use it in relative URLs\
    \ like those\n      RFC 2396 specifies?\n   o  If the scheme syntax is designed\
    \ to be broken into pieces, does\n      the documentation for the scheme's syntax\
    \ specify what those\n      pieces are, why it should be broken in this way, and\
    \ why the\n      breaks aren't where RFC 2396 says that they usually should be?\n\
    \   o  If the scheme has a hierarchy, does it go left-to-right and with\n    \
    \  slash separators like RFC 2396?\n"
- title: 2.2 Is the scheme well defined?
  contents:
  - "2.2 Is the scheme well defined?\n      It is important that the semantics of\
    \ the \"resource\" that a URL\n      \"locates\" be well defined.  This might\
    \ mean different things\n      depending on the nature of the URL scheme.\n"
- title: 2.2.1 Clear mapping from other name spaces
  contents:
  - "2.2.1 Clear mapping from other name spaces\n      In many cases, new URL schemes\
    \ are defined as ways to translate\n      other protocols and name spaces into\
    \ the general framework of\n      URLs.  The \"ftp\" URL scheme translates from\
    \ the FTP protocol,\n      while the \"mid\" URL scheme translates from the Message-ID\
    \ field of\n      messages.\n      In either case, the description of the mapping\
    \ must be complete,\n      must describe how characters get encoded or not in\
    \ URLs, must\n      describe exactly how all legal values of the base standard\
    \ can be\n      represented using the URL scheme, and exactly which modifiers,\n\
    \      alternate forms and other artifacts from the base standards are\n     \
    \ included or not included.  These requirements are elaborated\n      below.\n"
- title: 2.2.2 URL schemes associated with network protocols
  contents:
  - "2.2.2 URL schemes associated with network protocols\n      Most new URL schemes\
    \ are associated with network resources that\n      have one or several network\
    \ protocols that can access them.  The\n      'ftp', 'news', and 'http' schemes\
    \ are of this nature.  For such\n      schemes, the specification should completely\
    \ describe how URLs are\n      translated into protocol actions in sufficient\
    \ detail to make the\n      access of the network resource unambiguous.  If an\
    \ implementation\n      of the URL scheme requires some configuration, the configuration\n\
    \      elements must be clearly identified.  (For example, the 'news'\n      scheme,\
    \ if implemented using NTTP, requires configuration of the\n      NTTP server.)\n"
- title: 2.2.3 Definition of non-protocol URL schemes
  contents:
  - "2.2.3 Definition of non-protocol URL schemes\n      In some cases, URL schemes\
    \ do not have particular network\n      protocols associated with them, because\
    \ their use is limited to\n      contexts where the access method is understood.\
    \  This is the case,\n      for example, with the \"cid\" and \"mid\" URL schemes.\
    \  For these URL\n      schemes, the specification should describe the notation\
    \ of the\n      scheme and a complete mapping of the locator from its source.\n"
- title: 2.2.4 Definition of URL schemes not associated with data resources
  contents:
  - "2.2.4 Definition of URL schemes not associated with data resources\n      Most\
    \ URL schemes locate Internet resources that correspond to data\n      objects\
    \ that can be retrieved or modified.  This is the case with\n      \"ftp\" and\
    \ \"http\", for example.  However, some URL schemes do not;\n      for example,\
    \ the \"mailto\" URL scheme corresponds to an Internet\n      mail address.\n\
    \      If a new URL scheme does not locate resources that are data\n      objects,\
    \ the properties of names in the new space must be clearly\n      defined.\n"
- title: 2.2.5 Character encoding
  contents:
  - "2.2.5 Character encoding\n      When describing URL schemes in which (some of)\
    \ the elements of the\n      URL are actually representations of sequences of\
    \ characters, care\n      should be taken not to introduce unnecessary variety\
    \ in the ways\n      in which characters are encoded into octets and then into\
    \ URL\n      characters.  Unless there is some compelling reason for a\n     \
    \ particular scheme to do otherwise, translating character sequences\n      into\
    \ UTF-8 (RFC 2279) [3] and then subsequently using the %HH\n      encoding for\
    \ unsafe octets is recommended.\n"
- title: 2.2.6 Definition of operations
  contents:
  - "2.2.6 Definition of operations\n      In some contexts (for example, HTML forms)\
    \ it is possible to\n      specify any one of a list of operations to be performed\
    \ on a\n      specific URL.  (Outside forms, it is generally assumed to be\n \
    \     something you GET.)\n      The URL scheme definition should describe all\
    \ well-defined\n      operations on the URL identifier, and what they are supposed\
    \ to\n      do.\n      Some URL schemes (for example, \"telnet\") provide location\n\
    \      information for hooking onto bi-directional data streams, and\n      don't\
    \ fit the \"infoaccess\" paradigm of most URLs very well; this\n      should be\
    \ documented.\n      NOTE: It is perfectly valid to say that \"no operation apart\
    \ from\n      GET is defined for this URL\".  It is also valid to say that\n \
    \     \"there's only one operation defined for this URL, and it's not\n      very\
    \ GET-like\".  The important point is that what is defined on\n      this type\
    \ is described.\n"
- title: 2.3 Demonstrated utility
  contents:
  - "2.3 Demonstrated utility\n      URL schemes should have demonstrated utility.\
    \  New URL schemes are\n      expensive things to support.  Often they require\
    \ special code in\n      browsers, proxies, and/or servers.  Having a lot of ways\
    \ to say\n      the same thing needless complicates these programs without adding\n\
    \      value to the Internet.\n      The kinds of things that are useful include:\n\
    \   o  Things that cannot be referred to in any other way.\n   o  Things where\
    \ it is much easier to get at them using this scheme\n      than (for instance)\
    \ a proxy gateway.\n"
- title: 2.3.1 Proxy into HTTP/HTML
  contents:
  - "2.3.1 Proxy into HTTP/HTML\n   One way to provide a demonstration of utility\
    \ is via a gateway which\n   provides objects in the new scheme for clients using\
    \ an existing\n   protocol.  It is much easier to deploy gateways to a new service\
    \ than\n   it is to deploy browsers that understand the new URL object.\n   Things\
    \ to look for when thinking about a proxy are:\n   o  Is there a single global\
    \ resolution mechanism whereby any proxy\n      can find the referenced object?\n\
    \   o  If not, is there a way in which the user can find any object of\n     \
    \ this type, and \"run his own proxy\"?\n   o  Are the operations mappable one-to-one\
    \ (or possibly using\n      modifiers) to HTTP operations?\n   o  Is the type\
    \ of returned objects well defined?\n      - as MIME content-types?\n      - as\
    \ something that can be translated to HTML?\n   o  Is there running code for a\
    \ proxy?\n"
- title: 2.4 Are there security considerations?
  contents:
  - "2.4 Are there security considerations?\n   Above and beyond the security considerations\
    \ of the base mechanism a\n   scheme builds upon, one must think of things that\
    \ can happen in the\n   normal course of URL usage.\n   In particular:\n   o \
    \ Does the user need to be warned that such a thing is happening\n      without\
    \ an explicit request (GET for the source of an IMG tag, for\n      instance)?\
    \  This has implications for the design of a proxy\n      gateway, of course.\n\
    \   o  Is it possible to fake URLs of this type that point to different\n    \
    \  things in a dangerous way?\n   o  Are there mechanisms for identifying the\
    \ requester that can be\n      used or need to be used with this mechanism (the\
    \ From: field in a\n      mailto: URL, or the Kerberos login required for AFS\
    \ access in the\n      AFS: URL, for instance)?\n   o  Does the mechanism contain\
    \ passwords or other security information\n      that are passed inside the referring\
    \ document in the clear (as in\n      the \"ftp\" URL, for instance)?\n"
- title: 2.5 Does it start with UR?
  contents:
  - "2.5 Does it start with UR?\n   Any scheme starting with the letters \"U\" and\
    \ \"R\", in particular if it\n   attaches any of the meanings \"uniform\", \"\
    universal\" or \"unifying\" to\n   the first letter, is going to cause intense\
    \ debate, and generate much\n   heat (but maybe little light).\n   Any such proposal\
    \ should either make sure that there is a large\n   consensus behind it that it\
    \ will be the only scheme of its type, or\n   pick another name.\n"
- title: 2.6 Non-considerations
  contents:
  - "2.6 Non-considerations\n   Some issues that are often raised but are not relevant\
    \ to new URL\n   schemes include the following.\n"
- title: 2.6.1 Are all objects accessible?
  contents:
  - "2.6.1 Are all objects accessible?\n   Can all objects in the world that are validly\
    \ identified by a scheme\n   be accessed by any UA implementing it?\n   Sometimes\
    \ the answer will be yes and sometimes no; often it will\n   depend on factors\
    \ (like firewalls or client configuration) not\n   directly related to the scheme\
    \ itself.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   New URL schemes are required to address all security\
    \ considerations\n   in their definitions.\n"
- title: 4. References
  contents:
  - "4. References\n   [1] Berners-Lee, T., Fielding, R. and L. Masinter, \"Uniform\
    \ Resource\n       Identifiers (URI): Generic Syntax\", RFC 2396, August 1998.\n\
    \   [2] Petke, R. and I. King, \"Registration Procedures for URL Scheme\n    \
    \   Names\", BCP 35, RFC 2717, November 1999.\n   [3] Yergeau, F., \"UTF-8, A\
    \ Transformation Format of Unicode and ISO\n       10646\", RFC 2279, January\
    \ 1998.\n"
- title: 5. Authors' Addresses
  contents:
  - "5. Authors' Addresses\n   Larry Masinter\n   Xerox Corporation\n   Palo Alto\
    \ Research Center\n   3333 Coyote Hill Road\n   Palo Alto, CA 94304\n   URL: http://purl.org/NET/masinter\n\
    \   EMail: masinter@parc.xerox.com\n   Harald Tveit Alvestrand\n   Maxware, Pirsenteret\n\
    \   N-7005 Trondheim\n   NORWAY\n   Phone: +47 73 54 57 00\n   EMail: harald.alvestrand@maxware.no\n\
    \   Dan Zigmond\n   WebTV Networks, Inc.\n   305 Lytton Avenue\n   Palo Alto,\
    \ CA 94301\n   USA\n   Phone: +1-650-614-6071\n   EMail: djz@corp.webtv.net\n\
    \   Rich Petke\n   UUNET Technologies\n   5000 Britton Road\n   P. O. Box 5000\n\
    \   Hilliard, OH 43026-5000\n   Phone: +1-614-723-4157\n   Fax: +1-614-723-8407\n\
    \   EMail: rpetke@wcom.net\n"
- title: 6. Full Copyright Statement
  contents:
  - "6. Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
