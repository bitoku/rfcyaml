- title: __initial_text__
  contents:
  - "                        A Framework for Layer 3\n         Provider-Provisioned\
    \ Virtual Private Networks (PPVPNs)\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
- title: Abstract
  contents:
  - "Abstract\n   This document provides a framework for Layer 3 Provider-Provisioned\n\
    \   Virtual Private Networks (PPVPNs).  This framework is intended to aid\n  \
    \ in the standardization of protocols and mechanisms for support of\n   layer\
    \ 3 PPVPNs.  It is the intent of this document to produce a\n   coherent description\
    \ of the significant technical issues that are\n   important in the design of\
    \ layer 3 PPVPN solutions.  Selection of\n   specific approaches, making choices\
    \ regarding engineering tradeoffs,\n   and detailed protocol specification, are\
    \ outside of the scope of this\n   framework document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  3\n       1.1.  Objectives of the Document . . . . . . . . . .\
    \ . . . . .  3\n       1.2.  Overview of Virtual Private Networks . . . . . .\
    \ . . . .  4\n       1.3.  Types of VPNs. . . . . . . . . . . . . . . . . . .\
    \ . . .  7\n             1.3.1.  CE- vs PE-based VPNs . . . . . . . . . . . .\
    \ . .  8\n             1.3.2.  Types of PE-based VPNs . . . . . . . . . . . .\
    \ .  9\n             1.3.3.  Layer 3 PE-based VPNs. . . . . . . . . . . . . .\
    \ 10\n       1.4.  Scope of the Document. . . . . . . . . . . . . . . . . . 10\n\
    \       1.5.  Terminology. . . . . . . . . . . . . . . . . . . . . . . 11\n  \
    \     1.6.  Acronyms . . . . . . . . . . . . . . . . . . . . . . . . 13\n   2.\
    \  Reference Models . . . . . . . . . . . . . . . . . . . . . . . 14\n       2.1.\
    \  Reference Model for Layer 3 PE-based VPN . . . . . . . . 14\n             2.1.1.\
    \  Entities in the Reference Model. . . . . . . . . 16\n             2.1.2.  Relationship\
    \ Between CE and PE . . . . . . . . . 18\n             2.1.3.  Interworking Model\
    \ . . . . . . . . . . . . . . . 19\n       2.2.  Reference Model for Layer 3 Provider-Provisioned\n\
    \             CE-based VPN . . . . . . . . . . . . . . . . . . . . . . 21\n  \
    \           2.2.1.  Entities in the Reference Model. . . . . . . . . 22\n   3.\
    \  Customer Interface . . . . . . . . . . . . . . . . . . . . . . 23\n       3.1.\
    \  VPN Establishment at the Customer Interface. . . . . . . 23\n             3.1.1.\
    \  Layer 3 PE-based VPN . . . . . . . . . . . . . . 23\n                     3.1.1.1.\
    \  Static Binding . . . . . . . . . . . . 24\n                     3.1.1.2.  Dynamic\
    \ Binding. . . . . . . . . . . . 24\n             3.1.2.  Layer 3 Provider-Provisioned\
    \ CE-based VPN. . . . 25\n       3.2.  Data Exchange at the Customer Interface.\
    \ . . . . . . . . 25\n             3.2.1.  Layer 3 PE-based VPN . . . . . . .\
    \ . . . . . . . 25\n             3.2.2.  Layer 3 Provider-Provisioned CE-based\
    \ VPN. . . . 26\n       3.3.  Customer Visible Routing . . . . . . . . . . . .\
    \ . . . . 26\n             3.3.1.  Customer View of Routing for Layer 3 PE-based\n\
    \                     VPNs . . . . . . . . . . . . . . . . . . . . . . 26\n  \
    \                   3.3.1.1.  Routing for Intranets  . . . . . . . . 27\n    \
    \                 3.3.1.2.  Routing for Extranets  . . . . . . . . 28\n      \
    \               3.3.1.3.  CE and PE Devices for Layer 3\n                    \
    \           PE-based VPNs. . . . . . . . . . . . . 29\n             3.3.2.  Customer\
    \ View of Routing for Layer 3 Provider-\n                     Provisioned CE-based\
    \ VPNs. . . . . . . . . . . . 29\n             3.3.3.  Options for Customer Visible\
    \ Routing . . . . . . 30\n   4.  Network Interface and SP Support of VPNs . .\
    \ . . . . . . . . . 32\n       4.1.  Functional Components of a VPN . . . . .\
    \ . . . . . . . . 32\n       4.2.  VPN Establishment and Maintenance. . . . .\
    \ . . . . . . . 34\n             4.2.1.  VPN Discovery  . . . . . . . . . . .\
    \ . . . . . . 35\n                     4.2.1.1.  Network Management for Membership\n\
    \                               Information. . . . . . . . . . . . . . 35\n  \
    \                   4.2.1.2.  Directory Servers. . . . . . . . . . . 36\n    \
    \                 4.2.1.3.  Augmented Routing for Membership\n               \
    \                Information. . . . . . . . . . . . . . 36\n                 \
    \    4.2.1.4.  VPN Discovery for Inter-SP VPNs. . . . 37\n             4.2.2.\
    \  Constraining Distribution of VPN Routing\n                     Information\
    \  . . . . . . . . . . . . . . . . . . 38\n             4.2.3.  Controlling VPN\
    \ Topology . . . . . . . . . . . . 38\n       4.3.  VPN Tunneling  . . . . . .\
    \ . . . . . . . . . . . . . . . 40\n             4.3.1.  Tunnel Encapsulations.\
    \ . . . . . . . . . . . . . 40\n             4.3.2.  Tunnel Multiplexing. . .\
    \ . . . . . . . . . . . . 41\n             4.3.3.  Tunnel Establishment . . .\
    \ . . . . . . . . . . . 42\n             4.3.4.  Scaling and Hierarchical Tunnels\
    \ . . . . . . . . 43\n             4.3.5.  Tunnel Maintenance . . . . . . . .\
    \ . . . . . . . 45\n             4.3.6.  Survey of Tunneling Techniques . . .\
    \ . . . . . . 46\n                     4.3.6.1.  GRE  . . . . . . . . . . . .\
    \ . . . . . 46\n                     4.3.6.2.  IP-in-IP Encapsulation . . . .\
    \ . . . . 47\n                     4.3.6.3.  IPsec. . . . . . . . . . . . . .\
    \ . . . 48\n                     4.3.6.4.  MPLS . . . . . . . . . . . . . . .\
    \ . . 49\n       4.4.  PE-PE Distribution of VPN Routing Information. . . . .\
    \ . 51\n             4.4.1.  Options for VPN Routing in the SP. . . . . . . .\
    \ 52\n             4.4.2.  VPN Forwarding Instances . . . . . . . . . . . . 52\n\
    \             4.4.3.  Per-VPN Routing  . . . . . . . . . . . . . . . . 53\n  \
    \           4.4.4.  Aggregated Routing Model . . . . . . . . . . . . 54\n    \
    \                 4.4.4.1.  Aggregated Routing with OSPF or IS-IS. 55\n      \
    \               4.4.4.2.  Aggregated Routing with BGP. . . . . . 56\n        \
    \     4.4.5.  Scalability and Stability of Routing with Layer\n              \
    \       3 PE-based VPNs. . . . . . . . . . . . . . . . . 59\n       4.5.  Quality\
    \ of Service, SLAs, and IP Differentiated Services 61\n             4.5.1.  IntServ/RSVP\
    \ . . . . . . . . . . . . . . . . . . 61\n             4.5.2.  DiffServ . . .\
    \ . . . . . . . . . . . . . . . . . 62\n       4.6.  Concurrent Access to VPNs\
    \ and the Internet . . . . . . . 62\n       4.7.  Network and Customer Management\
    \ of VPNs. . . . . . . . . 63\n             4.7.1.  Network and Customer Management.\
    \ . . . . . . . . 63\n             4.7.2.  Segregated Access of VPN Information\
    \ . . . . . . 64\n   5.  Interworking Interface . . . . . . . . . . . . . . .\
    \ . . . . . 66\n       5.1.  Interworking Function. . . . . . . . . . . . . .\
    \ . . . . 66\n       5.2.  Interworking Interface . . . . . . . . . . . . . .\
    \ . . . 66\n             5.2.1.  Tunnels at the Interworking Interface. . . .\
    \ . . 67\n       5.3.  Support of Additional Services . . . . . . . . . . . .\
    \ . 68\n       5.4.  Scalability Discussion . . . . . . . . . . . . . . . . .\
    \ 69\n   6.  Security Considerations. . . . . . . . . . . . . . . . . . . . 69\n\
    \       6.1.  System Security. . . . . . . . . . . . . . . . . . . . . 70\n  \
    \     6.2.  Access Control . . . . . . . . . . . . . . . . . . . . . 70\n    \
    \   6.3.  Endpoint Authentication  . . . . . . . . . . . . . . . . 70\n      \
    \ 6.4.  Data Integrity . . . . . . . . . . . . . . . . . . . . . 71\n       6.5.\
    \  Confidentiality. . . . . . . . . . . . . . . . . . . . . 71\n       6.6.  User\
    \ Data and Control Data . . . . . . . . . . . . . . . 72\n       6.7.  Security\
    \ Considerations for Inter-SP VPNs  . . . . . . . 72\n   Appendix A: Optimizations\
    \ for Tunnel Forwarding. . . . . . . . . . 73\n       A.1.  Header Lookups in\
    \ the VFIs . . . . . . . . . . . . . . . 73\n       A.2.  Penultimate Hop Popping\
    \ for MPLS . . . . . . . . . . . . 73\n       A.3.  Demultiplexing to Eliminate\
    \ the Tunnel Egress VFI Lookup 74\n   Acknowledgments. . . . . . . . . . . . .\
    \ . . . . . . . . . . . . . 75\n   Normative References . . . . . . . . . . .\
    \ . . . . . . . . . . . . 76\n   Informative References . . . . . . . . . . .\
    \ . . . . . . . . . . . 76\n   Contributors' Addresses. . . . . . . . . . . .\
    \ . . . . . . . . . . 80\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Objectives of the Document
  contents:
  - "1.1.  Objectives of the Document\n   This document provides a framework for Layer\
    \ 3 Provider-Provisioned\n   Virtual Private Networks (PPVPNs).  This framework\
    \ is intended to aid\n   in standardizing protocols and mechanisms to support\
    \ interoperable\n   layer 3 PPVPNs.\n   The term \"provider-provisioned VPNs\"\
    \ refers to Virtual Private\n   Networks (VPNs) for which the Service Provider\
    \ (SP) participates in\n   management and provisioning of the VPN, as defined\
    \ in section 1.3.\n   There are multiple ways in which a provider can participate\
    \ in\n   managing and provisioning a VPN; therefore, there are multiple\n   different\
    \ types of PPVPNs.  The framework document discusses layer 3\n   VPNs (as defined\
    \ in section 1.3).\n   First, this document provides a reference model for layer\
    \ 3 PPVPNs.\n   Then technical aspects of layer 3 PPVPN operation are discussed,\n\
    \   first from the customer's point of view, then from the providers\n   point\
    \ of view.  Specifically, this includes discussion of the\n   technical issues\
    \ which are important in the design of standards and\n   mechanisms for the operation\
    \ and support of layer 3 PPVPNs.\n   Furthermore, technical aspects of layer 3\
    \ PPVPN interworking are\n   clarified.  Finally, security issues as they apply\
    \ to layer 3 PPVPNs\n   are addressed.\n   This document takes a \"horizontal\
    \ description\" approach.  For each\n   technical issue, it describes multiple\
    \ approaches.  To specify a\n   particular PPVPN strategy, one must choose a particular\
    \ way of\n   solving each problem, but this document does not make choices, and\n\
    \   does not select any particular approach to support VPNs.\n   The \"vertical\
    \ description\" approach is taken in other documents,\n   viz., in the documents\
    \ that describe particular PPVPN solutions.\n   Note that any specific solution\
    \ will need to make choices based on SP\n   requirements, customer needs, implementation\
    \ cost, and engineering\n   tradeoffs.  Solutions will need to chose between flexibility\n\
    \   (supporting multiple options) and conciseness (selection of specific\n   options\
    \ in order to simplify implementation and deployment).  While a\n   framework\
    \ document can discuss issues and criteria which are used as\n   input to these\
    \ choices, the specific selection of a solution is\n   outside of the scope of\
    \ a framework document.\n"
- title: 1.2.  Overview of Virtual Private Networks
  contents:
  - "1.2.  Overview of Virtual Private Networks\n   The term \"Virtual Private Network\"\
    \ (VPN) refers to a set of\n   communicating sites, where (a) communication between\
    \ sites outside\n   the set and sites inside the set is restricted, but (b) communication\n\
    \   between sites in the VPN takes place over a network infrastructure\n   that\
    \ is also used by sites which are not in the VPN.  The fact that\n   the network\
    \ infrastructure is shared by multiple VPNs (and possibly\n   also by non-VPN\
    \ traffic) is what distinguishes a VPN from a private\n   network.  We will refer\
    \ to this shared network infrastructure as the\n   \"VPN Backbone\".\n   The logical\
    \ structure of the VPN, such as addressing, topology,\n   connectivity, reachability,\
    \ and access control, is equivalent to part\n   of or all of a conventional private\
    \ network using private facilities\n   [RFC2764] [VPN-2547BIS].\n   In this document,\
    \ we are concerned only with the case where the\n   shared network infrastructure\
    \ (VPN backbone) is an IP and/or MPLS\n   network.  Further, we are concerned\
    \ only with the case where the\n   Service Provider's edge devices, whether at\
    \ the provider edge (PE) or\n   at the Customer Edge (CE), determine how to route\
    \ VPN traffic by\n   looking at the IP and/or MPLS headers of the packets they\
    \ receive\n   from the customer's edge devices; this is the distinguishing feature\n\
    \   of Layer 3 VPNs.\n   In some cases, one SP may offer VPN services to another\
    \ SP.  The\n   former SP is known as a carrier of carriers, and the service it\n\
    \   offers is known as \"carrier of carriers\" service.  In this document,\n \
    \  in cases where the customer could be either an enterprise or SP\n   network,\
    \ we will make use of the term \"customer\" to refer to the user\n   of the VPN\
    \ services.  Similarly we will use the term \"customer\n   network\" to refer\
    \ to the user's network.\n   VPNs may be intranets, in which the multiple sites\
    \ are under the\n   control of a single customer administration, such as multiple\
    \ sites\n   of a single company.  Alternatively, VPNs may be extranets, in which\n\
    \   the multiple sites are controlled by administrations of different\n   customers,\
    \ such as sites corresponding to a company, its suppliers,\n   and its customers.\n\
    \   Figure 1.1.  illustrates an example network, which will be used in\n   the\
    \ discussions below.  PE1 and PE2 are Provider Edge devices within\n   an SP network.\
    \  CE1, CE2, and CE3 are Customer Edge devices within a\n   customer network.\
    \  Routers r3, r4, r5, and r6 are IP routers internal\n   to the customer sites.\n\
    \      ............          .................          ............\n      .\
    \          .          .               .          .          .\n      .       \
    \ +---+    +-------+       +-------+    +---+        .\n      .   r3---|   | \
    \   |       |       |       |----|CE2|---r5   .\n      .        |   |    |   \
    \    |       |       |    +---+        .\n      .        |CE1|----|  PE1  |  \
    \     |  PE2  |      :          .\n      .        |   |    |       |       | \
    \      |    +---+        .\n      .   r4---|   |    |       |       |       |----|CE3|---r6\
    \   .\n      .        +---+    +-------+       +-------+    +---+        .\n \
    \     . Customer .          .    Service    .          . Customer .\n      . \
    \ site 1  .          .  provider(s)  .          .  site 2  .\n      ............\
    \          .................          ............\n                Figure 1.1.:\
    \ VPN interconnecting two sites.\n   In many cases, Provider Edge (PE) and Customer\
    \ Edge (CE) devices may\n   be either routers or LSRs.\n   In this document, the\
    \ Service Providers' network is an IP or MPLS\n   network.  It is desired to interconnect\
    \ the customer network sites\n   via the Service Providers' network.  Some VPN\
    \ solutions require that\n   the VPN service be provided either over a single\
    \ SP network, or over\n   a small set of closely cooperating SP networks.  Other\
    \ VPN solutions\n   are intended to allow VPN service to be provided over an arbitrary\n\
    \   set of minimally cooperating SP networks (i.e., over the public\n   Internet).\n\
    \   In many cases, customer networks will make use of private IP\n   addresses\
    \ [RFC1918] or other non-unique IP address (i.e.,\n   unregistered addresses);\
    \ there is no guarantee that the IP addresses\n   used in the customer network\
    \ are globally unique.  The addresses used\n   in one customer's network may overlap\
    \ the addresses used in others.\n   However, a single PE device can be used to\
    \ provide VPN service to\n   multiple customer networks, even if those customer\
    \ networks have\n   overlapping addresses.  In PE-based layer 3 VPNs, the PE devices\
    \ may\n   route the VPN traffic based on the customer addresses found in the IP\n\
    \   headers; this implies that the PE devices need to maintain a level of\n  \
    \ isolation between the packets from different customer networks.  In\n   CE-based\
    \ layer 3 VPNs, the PEs do not make routing decisions based on\n   the customer's\
    \ private addresses, so this issue does not arise.  For\n   either PE or CE-based\
    \ VPNs, the fact that the VPNs do not necessarily\n   use globally unique address\
    \ spaces also implies that IP packets from\n   a customer network cannot be transmitted\
    \ over the SP network in their\n   native form.  Instead, some form of encapsulation/tunneling\
    \ must be\n   used.\n   Tunneling is also important for other reasons, such as\
    \ providing\n   isolation between different customer networks, allowing a wide\
    \ range\n   of protocols to be carried over an SP network, etc.  Different QoS\n\
    \   and security characteristics may be associated with different\n   tunnels.\n"
- title: 1.3.  Types of VPNs
  contents:
  - "1.3.  Types of VPNs\n   This section describes multiple types of VPNs, and some\
    \ of the\n   engineering tradeoffs between different types.  It is not up to this\n\
    \   document to decide between different types of VPNs.  Different types\n   of\
    \ VPNs may be appropriate in different situations.\n   There is a wide spectrum\
    \ of types of possible VPNs, and it is\n   difficult to split the types of VPNs\
    \ into clearly distinguished\n   categories.\n   As an example, consider a company\
    \ making use of a private network,\n   with several sites interconnected via leased\
    \ lines.  All routing is\n   done via routers which are internal to the private\
    \ network.\n   At some point, the administrator of the private network might decide\n\
    \   to replace the leased lines by ATM links (using an ATM service from\n   an\
    \ SP).  Here again all IP-level routing is done between customer\n   premises\
    \ routers, and managed by the private network administrator.\n   In order to reduce\
    \ the network management burden on the private\n   network, the company may decide\
    \ to make use of a provider-provisioned\n   CE devices [VPN-CE].  Here the operation\
    \ of the network might be\n   unchanged, except that the CE devices would be provided\
    \ by and\n   managed by an SP.\n   The SP might decide that it is too difficult\
    \ to manually configure\n   each CE-CE link.  This might lead the SP to replace\
    \ the ATM links\n   with a layer 2 VPN service between CE devices [VPN-L2].  Auto-\n\
    \   discovery might be used to simplify configuration of links between CE\n  \
    \ devices, and an MPLS service might be used between CE devices instead\n   of\
    \ an ATM service (for example, to take advantage of the provider's\n   high speed\
    \ IP or MPLS backbone).\n   After a while the SP might decide that it is too much\
    \ trouble to be\n   managing a large number of devices at the customers' premises,\
    \ and\n   might instead physically move these routers to be on the provider\n\
    \   premises.  Each edge router at the provider premises might\n   nonetheless\
    \ be dedicated to a single VPN.  The operation might remain\n   unchanged (except\
    \ that links from the edge routers to other routers\n   in the private network\
    \ become MAN links instead of LAN links, and the\n   link from the edge routers\
    \ to provider core routers become LAN links\n   instead of MAN links).  The routers\
    \ in question can now be considered\n   to be provider edge routers, and the service\
    \ provided by the SP has\n   now become essentially a layer 3 VPN service.\n \
    \  In order to minimize the cost of equipment, the provider might decide\n   to\
    \ replace several dedicated PE devices with a single physical router\n   with\
    \ the capability of running virtual routers (VR) [VPN-VR].\n   Protocol operation\
    \ may remain unchanged.  In this case the provider\n   is offering a layer 3 VPN\
    \ service making use of a VR capability.\n   Note that autodiscovery might be\
    \ used in a manner which is very\n   similar to how it had been done in the layer\
    \ 2 VPN case described\n   above (for example, BGP might be used between VRs for\
    \ discovery of\n   other VRs supporting the same VPN).\n   Finally, in order to\
    \ simplify operation of routing protocols for the\n   private network over the\
    \ SP network, the provider might decide to\n   aggregate multiple instances of\
    \ routing into a single instance of BGP\n   [VPN-2547BIS].\n   In practice it\
    \ is highly unlikely that any one network would actually\n   evolve through all\
    \ of these approaches at different points in time.\n   However, this example illustrates\
    \ that there is a continuum of\n   possible approaches, and each approach is relatively\
    \ similar to at\n   least some of the other possible approaches for supporting\
    \ VPN\n   services.  Some techniques (such as auto-discovery of VPN sites) may\n\
    \   be common between multiple approaches.\n"
- title: 1.3.1.  CE- vs PE-based VPNs
  contents:
  - "1.3.1.  CE- vs PE-based VPNs\n   The term \"CE-based VPN\" (or Customer Edge-based\
    \ Virtual Private\n   Network) refers to an approach in which the PE devices do\
    \ not know\n   anything about the routing or the addressing of the customer\n\
    \   networks.  The PE devices offer a simple IP service, and expect to\n   receive\
    \ IP packets whose headers contain only globally unique IP\n   addresses.  What\
    \ makes a CE-based VPN into a Provider-Provisioned VPN\n   is that the SP takes\
    \ on the task of managing and provisioning the CE\n   devices [VPN-CE].\n   In\
    \ CE-based VPNs, the backbone of the customer network is a set of\n   tunnels\
    \ whose endpoints are the CE devices.  Various kinds of tunnels\n   may be used\
    \ (e.g., GRE, IP-in-IP, IPsec, L2TP, MPLS), the only\n   overall requirement being\
    \ that sending a packet through the tunnel\n   requires encapsulating it with\
    \ a new IP header whose addresses are\n   globally unique.\n   For customer provisioned\
    \ CE-based VPNs, provisioning and management\n   of the tunnels is the responsibility\
    \ of the customer network\n   administration.  Typically, this makes use of manual\
    \ configuration of\n   the tunnels.  In this case the customer is also responsible\
    \ for\n   operation of the routing protocol between CE devices.  (Note that\n\
    \   discussion of customer provisioned CE-based VPNs is out of scope of\n   the\
    \ document).\n   For provider-provisioned CE-based VPNs, provisioning and management\n\
    \   of the tunnels is the responsibility of the SP.  In this case the\n   provider\
    \ may also configure routing protocols on the CE devices.\n   This implies that\
    \ routing in the private network is partially under\n   the control of the customer,\
    \ and partially under the control of the\n   SP.\n   For CE-based VPNs (whether\
    \ customer or provider-provisioned) routing\n   in the customer network treats\
    \ the tunnels as layer 2 links.\n   In a PE-based VPN (or Provider Edge-based\
    \ Virtual Private Network),\n   customer packets are carried through the SP networks\
    \ in tunnels, just\n   as they are in CE-based VPNs.  However, in a PE-based VPN,\
    \ the tunnel\n   endpoints are the PE devices, and the PE devices must know how\
    \ to\n   route the customer packets, based on the IP addresses that they\n   carry.\
    \  In this case, the CE devices themselves do not have to have\n   any special\
    \ VPN capabilities, and do not even have to know that they\n   are part of a VPN.\n\
    \   In this document we will use the generic term \"VPN Edge Device\" to\n   refer\
    \ to the device, attached to both the customer network and the\n   VPN backbone,\
    \ that performs the VPN-specific functions.  In the case\n   of CE-based VPNs,\
    \ the VPN Edge Device is a CE device.  In the case of\n   PE-based VPNs, the VPN\
    \ Edge Device is a PE device.\n"
- title: 1.3.2.  Types of PE-based VPNs
  contents:
  - "1.3.2.  Types of PE-based VPNs\n   Different types of PE-based VPNs may be distinguished\
    \ by the service\n   offered.\n   o Layer 3 service\n     When a PE receives a\
    \ packet from a CE, it determines how to forward\n     the packet by considering\
    \ both the packet's incoming link, and the\n     layer 3 information in the packet's\
    \ header.\n   o Layer 2 service\n     When a PE receives a frame from a CE, it\
    \ determines how to forward\n     the packet by considering both the packet's\
    \ incoming link, and the\n     layer 2 information in the frame header (such as\
    \ FR, ATM, or MAC\n     header).  (Note that discussion of layer 2 service is\
    \ out of scope\n     of the document).\n"
- title: 1.3.3.  Layer 3 PE-based VPNs
  contents:
  - "1.3.3.  Layer 3 PE-based VPNs\n   A layer 3 PE-based VPN is one in which the\
    \ SP takes part in IP level\n   forwarding based on the customer network's IP\
    \ address space.  In\n   general, the customer network is likely to make use of\
    \ private and/or\n   non-unique IP addresses.  This implies that at least some\
    \ devices in\n   the provider network needs to understand the IP address space\
    \ as used\n   in the customer network.  Typically this knowledge is limited to\
    \ the\n   PE devices which are directly attached to the customer.\n   In a layer\
    \ 3 PE-based VPN, the provider will need to participate in\n   some aspects of\
    \ management and provisioning of the VPNs, such as\n   ensuring that the PE devices\
    \ are configured to support the correct\n   VPNs.  This implies that layer 3 PE-based\
    \ VPNs are by definition\n   provider-provisioned VPNs.\n   Layer 3 PE-based VPNs\
    \ have the advantage that they offload some\n   aspects of VPN management from\
    \ the customer network.  From the\n   perspective of the customer network, it\
    \ looks as if there is just a\n   normal network; specific VPN functionality is\
    \ hidden from the\n   customer network.  Scaling of the customer network's routing\
    \ might\n   also be improved, since some layer 3 PE-based VPN approaches avoid\n\
    \   the need for the customer's routing algorithm to see \"N squared\"\n   (actually\
    \ N*(N-1)/2) point to point duplex links between N customer\n   sites.\n   However,\
    \ these advantages come along with other consequences.\n   Specifically, the PE\
    \ devices must have some knowledge of the routing,\n   addressing, and layer 3\
    \ protocols of the customer networks to which\n   they attach.  One consequence\
    \ is that the set of layer 3 protocols\n   which can be supported by the VPN is\
    \ limited to those supported by\n   the PE (which in practice means, limited to\
    \ IP).  Another consequence\n   is that the PE devices have more to do, and the\
    \ SP has more\n   per-customer management to do.\n   An SP may offer a range of\
    \ layer 3 PE-based VPN services.  At one end\n   of the range is a service limited\
    \ to simply providing connectivity\n   (optionally including QoS support) between\
    \ specific customer network\n   sites.  This is referred to as \"Network Connectivity\
    \ Service\".  There\n   is a spectrum of other possible services, such as firewalls,\
    \ user or\n   site of origin authentication, and address assignment (e.g., using\n\
    \   Radius or DHCP).\n"
- title: 1.4.  Scope of the Document
  contents:
  - "1.4.  Scope of the Document\n   This framework document will discuss methods\
    \ for providing layer 3\n   PE-based VPNs and layer 3 provider-provisioned CE-based\
    \ VPNs.  This\n   may include mechanisms which will can be used to constrain\n\
    \   connectivity between sites, including the use and placement of\n   firewalls,\
    \ based on administrative requirements [PPVPN-REQ]\n   [L3VPN-REQ].  Similarly\
    \ the use and placement of NAT functionality is\n   discussed.  However, this\
    \ framework document will not discuss methods\n   for additional services such\
    \ as firewall administration and address\n   assignment.  A discussion of specific\
    \ firewall mechanisms and\n   policies, and detailed discussion of NAT functionality,\
    \ are outside\n   of the scope of this document.\n   This document does not discuss\
    \ those forms of VPNs that are outside\n   of the scope of the IETF Provider-Provisioned\
    \ VPN working group.\n   Specifically, this document excludes discussion of PPVPNs\
    \ using VPN\n   native (non-IP, non-MPLS) protocols as the base technology used\
    \ to\n   provide the VPN service (e.g., native ATM service provided using ATM\n\
    \   switches with ATM signaling).  However, this does not mean to exclude\n  \
    \ multiprotocol access to the PPVPN by customers.\n"
- title: 1.5.  Terminology
  contents:
  - "1.5.  Terminology\n   Backdoor Links: Links between CE devices that are provided\
    \ by the end\n   customer rather than the SP; may be used to interconnect CE devices\n\
    \   in multiple-homing arrangements.\n   CE-based VPN: An approach in which all\
    \ the VPN-specific procedures\n   are performed in the CE devices, and the PE\
    \ devices are not aware in\n   any way that some of the traffic they are processing\
    \ is VPN traffic.\n   Customer: A single organization, corporation, or enterprise\
    \ that\n   administratively controls a set of sites belonging to a VPN.\n   Customer\
    \ Edge (CE) Device: The equipment on the customer side of the\n   SP-customer\
    \ boundary (the customer interface).\n   IP Router: A device which forwards IP\
    \ packets, and runs associated IP\n   routing protocols (such as OSPF, IS-IS,\
    \ RIP, BGP, or similar\n   protocols).  An IP router might optionally also be\
    \ an LSR.  The term\n   \"IP router\" is often abbreviated as \"router\".\n  \
    \ Label Switching Router: A device which forwards MPLS packets and runs\n   associated\
    \ IP routing and signaling protocols (such as LDP, RSVP-TE,\n   CR-LDP, OSPF,\
    \ IS-IS, or similar protocols).  A label switching router\n   is also an IP router.\n\
    \   PE-Based VPNs: The PE devices know that certain traffic is VPN\n   traffic.\
    \  They forward the traffic (through tunnels) based on the\n   destination IP\
    \ address of the packet, and optionally on based on\n   other information in the\
    \ IP header of the packet.  The PE devices are\n   themselves the tunnel endpoints.\
    \  The tunnels may make use of various\n   encapsulations to send traffic over\
    \ the SP network (such as, but not\n   restricted to, GRE, IP-in-IP, IPsec, or\
    \ MPLS tunnels).\n   Private Network: A network which allows communication between\
    \ a\n   restricted set of sites, over an IP backbone that is used only to\n  \
    \ carry traffic to and from those sites.\n   Provider Edge (PE) Device: The equipment\
    \ on the SP side of the\n   SP-customer boundary (the customer interface).\n \
    \  Provider-Provisioned VPNs (PPVPNs): VPNs, whether CE-based or\n   PE-based,\
    \ that are actively managed by the SP rather than by the end\n   customer.\n \
    \  Route Reflectors: An SP-owned network element that is used to\n   distribute\
    \ BGP routes to the SP's BGP-enabled routers.\n   Virtual Private Network (VPN):\
    \ Restricted communication between a set\n   of sites, making use of an IP backbone\
    \ which is shared by traffic\n   that is not going to or coming from those sites.\n\
    \   Virtual Router (VR): An instance of one of a number of logical\n   routers\
    \ located within a single physical router.  Each logical router\n   emulates a\
    \ physical router using existing mechanisms and tools for\n   configuration, operation,\
    \ accounting, and maintenance.\n   VPN Forwarding Instance (VFI): A logical entity\
    \ that resides in a PE\n   that includes the router information base and forwarding\
    \ information\n   base for a VPN.\n   VPN Backbone: IP and/or MPLS network which\
    \ is used to carry VPN\n   traffic between the customer sites of a particular\
    \ VPN.\n   VPN Edge Device: Device, attached to both the VPN backbone and the\n\
    \   customer network, which performs VPN-specific functions.  For\n   PE-based\
    \ VPNs, this is the PE device; for CE-based VPNs, this is the\n   CE device.\n\
    \   VPN Routing: Routing that is specific to a particular VPN.\n   VPN Tunnel:\
    \ A logical link between two PE or two CE entities, used to\n   carry VPN traffic,\
    \ and implemented by encapsulating packets that are\n   transmitted between those\
    \ two entities.\n"
- title: 1.6.  Acronyms
  contents:
  - "1.6.  Acronyms\n   ATM             Asynchronous Transfer Mode\n   BGP       \
    \      Border Gateway Protocol\n   CE              Customer Edge\n   CLI     \
    \        Command Line Interface\n   CR-LDP          Constraint-based Routing Label\
    \ Distribution Protocol\n   EBGP            External Border Gateway Protocol\n\
    \   FR              Frame Relay\n   GRE             Generic Routing Encapsulation\n\
    \   IBGP            Internal Border Gateway Protocol\n   IKE             Internet\
    \ Key Exchange\n   IGP             Interior Gateway Protocol\n               \
    \    (e.g., RIP, IS-IS and OSPF are all IGPs)\n   IP              Internet Protocol\
    \ (same as IPv4)\n   IPsec           Internet Protocol Security protocol\n   IPv4\
    \            Internet Protocol version 4 (same as IP)\n   IPv6            Internet\
    \ Protocol version 6\n   IS-IS           Intermediate System to Intermediate System\
    \ routing\n                   protocol\n   L2TP            Layer 2 Tunneling Protocol\n\
    \   LAN             Local Area Network\n   LDAP            Lightweight Directory\
    \ Access Protocol\n   LDP             Label Distribution Protocol\n   LSP    \
    \         Label Switched Path\n   LSR             Label Switching Router\n   MIB\
    \             Management Information Base\n   MPLS            Multi Protocol Label\
    \ Switching\n   NBMA            Non-Broadcast Multi-Access\n   NMS           \
    \  Network Management System\n   OSPF            Open Shortest Path First routing\
    \ protocol\n   P               Provider equipment\n   PE              Provider\
    \ Edge\n   PPVPN           Provider-Provisioned VPN\n   QoS             Quality\
    \ of Service\n   RFC             Request For Comments\n   RIP             Routing\
    \ Information Protocol\n   RSVP            Resource Reservation Protocol\n   RSVP-TE\
    \         Resource Reservation Protocol with Traffic\n                   Engineering\
    \ Extensions\n   SNMP            Simple Network Management Protocol\n   SP   \
    \           Service Provider\n   VFI             VPN Forwarding Instance\n   VPN\
    \             Virtual Private Network\n   VR              Virtual Router\n"
- title: 2.  Reference Models
  contents:
  - "2.  Reference Models\n   This section describes PPVPN reference models.  The\
    \ purpose of\n   discussing reference models is to clarify the common components\
    \ and\n   pieces that are needed to build and deploy a PPVPN.  Two types of\n\
    \   VPNs, layer 3 PE-based VPN and layer 3 provider-provisioned CE-based\n   VPN\
    \ are covered in separated sections below.\n"
- title: 2.1.  Reference Model for Layer 3 PE-based VPN
  contents:
  - "2.1.  Reference Model for Layer 3 PE-based VPN\n   This subsection describes\
    \ functional components and their\n   relationship for implementing layer 3 PE-based\
    \ VPN.\n   Figure 2.1 shows the reference model for layer 3 PE-based VPNs and\n\
    \   Figures 2.2 and 2.3 show relationship between entities in the\n   reference\
    \ model.\n   As shown in Figure 2.1, the customer interface is defined as the\n\
    \   interface which exists between CE and PE devices, and the network\n   interface\
    \ is defined as the interface which exists between a pair of\n   PE devices.\n\
    \   Figure 2.2 illustrates a single logical tunnel between each pair of\n   VFIs\
    \ supporting the same VPN.  Other options are possible.  For\n   example, a single\
    \ tunnel might occur between two PEs, with multiple\n   per-VFI tunnels multiplexed\
    \ over the PE to PE tunnel.  Similarly,\n   there may be multiple tunnels between\
    \ two VFIs, for example to\n   optimize forwarding within the VFI.  Other possibilities\
    \ will be\n   discussed later in this framework document.\n    +---------+  +------------------------------------+\
    \  +---------+\n    |         |  |                                    |  |   \
    \      |\n    |         |  |                     +------+     +------+  : +------+\n"
- title: '+------+ :    |  |                     |      |     |      |  : |  CE  |'
  contents:
  - '+------+ :    |  |                     |      |     |      |  : |  CE  |

    '
- title: '|  CE  | :    |  |                     |  P   |     |  PE  |  : |device|'
  contents:
  - '|  CE  | :    |  |                     |  P   |     |  PE  |  : |device|

    '
- title: '|device| :  +------+   VPN tunnel   :  |router|     |device|  : |  of  |'
  contents:
  - '|device| :  +------+   VPN tunnel   :  |router|     |device|  : |  of  |

    '
- title: '|  of  |-:--|      |================:===============|      |--:-|VPN  A|'
  contents:
  - '|  of  |-:--|      |================:===============|      |--:-|VPN  A|

    '
- title: '|VPN  A| :  |      |                :  +------+     +------+  : +------+'
  contents:
  - '|VPN  A| :  |      |                :  +------+     +------+  : +------+

    '
- title: '+------+ :  |  PE  |                :                 |  |    :    |'
  contents:
  - '+------+ :  |  PE  |                :                 |  |    :    |

    '
- title: '+------+ :  |device|        Network interface         |  |    :    |'
  contents:
  - '+------+ :  |device|        Network interface         |  |    :    |

    '
- title: '|  CE  | :  |      |                :               +------+  : +------+'
  contents:
  - '|  CE  | :  |      |                :               +------+  : +------+

    '
- title: '|device|-:--|      |================:===============|      |--:-|  CE  |'
  contents:
  - '|device|-:--|      |================:===============|      |--:-|  CE  |

    '
- title: '|  of  | :  +------+                :  VPN tunnel   |  PE  |  : |device|'
  contents:
  - '|  of  | :  +------+                :  VPN tunnel   |  PE  |  : |device|

    '
- title: '|VPN  B| :    |  |                                  |device|  : |  of  |'
  contents:
  - '|VPN  B| :    |  |                                  |device|  : |  of  |

    '
- title: '+------+ :    |  |  +------------+   +------------+ |      |  : |VPN  B|'
  contents:
  - "+------+ :    |  |  +------------+   +------------+ |      |  : |VPN  B|\n  \
    \  |    :    |  |  |  Customer  |   |  Network   | +------+  : +------+\n    |Customer\
    \ |  |  | management |   | management |   |  |    :    |\n    |interface|  | \
    \ |  function  |   |  function  |   |  |Customer |\n    |         |  |  +------------+\
    \   +------------+   |  |interface|\n    |         |  |                      \
    \              |  |         |\n    +---------+  +------------------------------------+\
    \  +---------+\n    | Access  |  |<---------- SP network(s) --------->|  | Access\
    \  |\n    | network |  |   single or multiple SP domains    |  | network |\n \
    \        Figure 2.1: Reference model for layer 3 PE-based VPN.\n             \
    \  +----------+                  +----------+\n"
- title: +-----+        |PE device |                  |PE device |        +-----+
  contents:
  - '+-----+        |PE device |                  |PE device |        +-----+

    '
- title: '| CE  |        |          |                  |          |        | CE  |'
  contents:
  - '| CE  |        |          |                  |          |        | CE  |

    '
- title: '| dev | Access | +------+ |                  | +------+ | Access | dev |'
  contents:
  - '| dev | Access | +------+ |                  | +------+ | Access | dev |

    '
- title: '| of  |  conn. | |VFI of| |    VPN tunnel    | |VFI of| |  conn. | of  |'
  contents:
  - '| of  |  conn. | |VFI of| |    VPN tunnel    | |VFI of| |  conn. | of  |

    '
- title: '|VPN A|----------|VPN A |======================|VPN A |----------|VPN A|'
  contents:
  - '|VPN A|----------|VPN A |======================|VPN A |----------|VPN A|

    '
- title: +-----+        | +------+ |                  | +------+ |        +-----+
  contents:
  - "+-----+        | +------+ |                  | +------+ |        +-----+\n  \
    \             |          |                  |          |\n"
- title: +-----+ Access | +------+ |                  | +------+ | Access +-----+
  contents:
  - '+-----+ Access | +------+ |                  | +------+ | Access +-----+

    '
- title: '| CE  |  conn. | |VFI of| |    VPN tunnel    | |VFI of| |  conn. | CE  |'
  contents:
  - '| CE  |  conn. | |VFI of| |    VPN tunnel    | |VFI of| |  conn. | CE  |

    '
- title: '| dev |----------|VPN B |======================|VPN B |----------| dev |'
  contents:
  - '| dev |----------|VPN B |======================|VPN B |----------| dev |

    '
- title: '| of  |        | +------+ |                  | +------+ |        | of  |'
  contents:
  - '| of  |        | +------+ |                  | +------+ |        | of  |

    '
- title: '|VPN B|        |          |                  |          |        |VPN B|'
  contents:
  - '|VPN B|        |          |                  |          |        |VPN B|

    '
- title: +-----+        +----------+                  +----------+        +-----+
  contents:
  - "+-----+        +----------+                  +----------+        +-----+\n  \
    \ Figure 2.2: Relationship between entities in reference model (1).\n        \
    \       +----------+                  +----------+\n"
- title: +-----+        |PE device |                  |PE device |        +-----+
  contents:
  - '+-----+        |PE device |                  |PE device |        +-----+

    '
- title: '| CE  |        |          |                  |          |        | CE  |'
  contents:
  - '| CE  |        |          |                  |          |        | CE  |

    '
- title: '| dev | Access | +------+ |                  | +------+ | Access | dev |'
  contents:
  - '| dev | Access | +------+ |                  | +------+ | Access | dev |

    '
- title: '| of  |  conn. | |VFI of| |                  | |VFI of| |  conn. | of  |'
  contents:
  - '| of  |  conn. | |VFI of| |                  | |VFI of| |  conn. | of  |

    '
- title: '|VPN A|----------|VPN A | |                  | |VPN A |----------|VPN A|'
  contents:
  - '|VPN A|----------|VPN A | |                  | |VPN A |----------|VPN A|

    '
- title: +-----+        | +------+\|      Tunnel      |/+------+ |        +-----+
  contents:
  - "+-----+        | +------+\\|      Tunnel      |/+------+ |        +-----+\n \
    \              |          >==================<          |\n"
- title: +-----+ Access | +------+/|                  |\+------+ | Access +-----+
  contents:
  - '+-----+ Access | +------+/|                  |\+------+ | Access +-----+

    '
- title: '| CE  |  conn. | |VFI of| |                  | |VFI of| |  conn. | CE  |'
  contents:
  - '| CE  |  conn. | |VFI of| |                  | |VFI of| |  conn. | CE  |

    '
- title: '| dev |----------|VPN B | |                  | |VPN B |----------| dev |'
  contents:
  - '| dev |----------|VPN B | |                  | |VPN B |----------| dev |

    '
- title: '| of  |        | +------+ |                  | +------+ |        | of  |'
  contents:
  - '| of  |        | +------+ |                  | +------+ |        | of  |

    '
- title: '|VPN B|        |          |                  |          |        |VPN B|'
  contents:
  - '|VPN B|        |          |                  |          |        |VPN B|

    '
- title: +-----+        +----------+                  +----------+        +-----+
  contents:
  - "+-----+        +----------+                  +----------+        +-----+\n  \
    \ Figure 2.3: Relationship between entities in reference model (2).\n"
- title: 2.1.1.  Entities in the Reference Model
  contents:
  - "2.1.1.  Entities in the Reference Model\n   The entities in the reference model\
    \ are described below.\n   o Customer edge (CE) device\n     In the context of\
    \ layer 3 provider-provisioned PE-based VPNs, a CE\n     device may be a router,\
    \ LSR, or host that has no VPN-specific\n     functionality.  It is attached via\
    \ an access connection to a PE\n     device.\n   o P router\n     A router within\
    \ a provider network which is used to interconnect PE\n     devices, but which\
    \ does not have any VPN state and does not have\n     any direct attachment to\
    \ CE devices.\n   o Provider edge (PE) device\n     In the context of layer 3\
    \ provider-provisioned PE-based VPNs, a PE\n     device implements one or more\
    \ VFIs and maintains per-VPN state for\n     the support of one or more VPNs.\
    \  It may be a router, LSR, or other\n     device that includes VFIs and provider\
    \ edge VPN functionality such\n     as provisioning, management, and traffic classification\
    \ and\n     separation.  (Note that access connections are terminated by VFIs\n\
    \     from the functional point of view).  A PE device is attached via an\n  \
    \   access connection to one or more CE devices.\n   o Customer site\n     A customer\
    \ site is a set of users that have mutual IP reachability\n     without use of\
    \ a VPN backbone that goes beyond the site.\n   o SP networks\n     An SP network\
    \ is an IP or MPLS network administered by a single\n     service provider.\n\
    \   o Access connection\n     An access connection represents an isolated layer\
    \ 2 connectivity\n     between a CE device and a PE device.  Access connections\
    \ can be,\n     e.g., dedicated physical circuits, logical circuits (such as FR,\n\
    \     ATM, and MAC), or IP tunnels (e.g., using IPsec, L2TP, or MPLS).\n   o Access\
    \ network\n     An access network provides access connections between CE and PE\n\
    \     devices.  It may be a TDM network, layer 2 network (e.g., FR, ATM,\n   \
    \  and Ethernet), or IP network over which access is tunneled (e.g.,\n     using\
    \ L2TP [RFC2661] or MPLS).\n   o VPN tunnel\n     A VPN tunnel is a logical link\
    \ between two VPN edge devices.  A VPN\n     packet is carried on a tunnel by\
    \ encapsulating it before\n     transmitting it over the VPN backbone.\n     Multiple\
    \ VPN tunnels at one level may be hierarchically multiplexed\n     into a single\
    \ tunnel at another level.  For example, multiple per-\n     VPN tunnels may be\
    \ multiplexed into a single PE to PE tunnel (e.g.,\n     GRE, IP-in-IP, IPsec,\
    \ or MPLS tunnel).  This is illustrated in\n     Figure 2.3.  See section 4.3\
    \ for details.\n   o VPN forwarding instance (VFI)\n     A single PE device is\
    \ likely to be connected to a number of CE\n     devices.  The CE devices are\
    \ unlikely to all be in the same VPN.\n     The PE device must therefore maintain\
    \ a separate forwarding\n     instances for each VPN to which it is connected.\
    \  A VFI is a\n     logical entity, residing in a PE, that contains the router\n\
    \     information base and forwarding information base for a VPN.  The\n     interaction\
    \ between routing and VFIs is discussed in section 4.4.2.\n   o Customer management\
    \ function\n     The customer management function supports the provisioning of\n\
    \     customer specific attributes, such as customer ID, personal\n     information\
    \ (e.g., name, address, phone number, credit card number,\n     and etc.), subscription\
    \ services and parameters, access control\n     policy information, billing and\
    \ statistical information, and etc.\n     The customer management function may\
    \ use a combination of SNMP\n     manager, directory service (e.g., LDAP [RFC3377]),\
    \ or proprietary\n     network management system.\n   o Network management function\n\
    \     The network management function supports the provisioning and\n     monitoring\
    \ of PE or CE device attributes and their relationships.\n     The network management\
    \ function may use a combination of SNMP\n     manager, directory service (e.g.,\
    \ LDAP [RFC3377]), or proprietary\n     network management system.\n"
- title: 2.1.2.  Relationship Between CE and PE
  contents:
  - "2.1.2.  Relationship Between CE and PE\n   For robustness, a CE device may be\
    \ connected to more than one PE\n   device, resulting in a multi-homing arrangement.\
    \  Four distinct types\n   of multi-homing arrangements, shown in Figure 2.4,\
    \ may be supported.\n                 +----------------                    +---------------\n\
    \                 |                                    |\n             +------+\
    \                             +------+\n   +---------|  PE  |                \
    \   +---------|  PE  |\n   |         |device|                   |         |device|\
    \ SP network\n   |         +------+                   |         +------+\n"
- title: +------+         |                   +------+         |
  contents:
  - '+------+         |                   +------+         |

    '
- title: '|  CE  |         |                   |  CE  |         +---------------'
  contents:
  - '|  CE  |         |                   |  CE  |         +---------------

    '
- title: '|device|         |   SP network      |device|         +---------------'
  contents:
  - '|device|         |   SP network      |device|         +---------------

    '
- title: +------+         |                   +------+         |
  contents:
  - "+------+         |                   +------+         |\n   |         +------+\
    \                   |         +------+\n   |         |  PE  |                \
    \   |         |  PE  |\n   +---------|device|                   +---------|device|\
    \ SP network\n             +------+                             +------+\n   \
    \              |                                    |\n                 +----------------\
    \                    +---------------\n"
- title: This type includes a CE device connected
  contents:
  - 'This type includes a CE device connected

    '
- title: to a PE device via two access connections.
  contents:
  - "to a PE device via two access connections.\n                (a)             \
    \                     (b)\n                 +----------------                \
    \    +---------------\n                 |                                    |\n"
- title: +------+     +------+                +------+     +------+
  contents:
  - '+------+     +------+                +------+     +------+

    '
- title: '|  CE  |-----|  PE  |                |  CE  |-----|  PE  |'
  contents:
  - '|  CE  |-----|  PE  |                |  CE  |-----|  PE  |

    '
- title: '|device|     |device|                |device|     |device| SP network'
  contents:
  - '|device|     |device|                |device|     |device| SP network

    '
- title: +------+     +------+                +------+     +------+
  contents:
  - "+------+     +------+                +------+     +------+\n   |            \
    \ |                      |             |\n   | Backdoor    |                 \
    \     | Backdoor    +---------------\n   | link        |   SP network        \
    \ | link        +---------------\n   |             |                      |  \
    \           |\n"
- title: +------+     +------+                +------+     +------+
  contents:
  - '+------+     +------+                +------+     +------+

    '
- title: '|  CE  |     |  PE  |                |  CE  |     |  PE  |'
  contents:
  - '|  CE  |     |  PE  |                |  CE  |     |  PE  |

    '
- title: '|device|-----|device|                |device|-----|device| SP network'
  contents:
  - '|device|-----|device|                |device|-----|device| SP network

    '
- title: +------+     +------+                +------+     +------+
  contents:
  - "+------+     +------+                +------+     +------+\n                \
    \ |                                    |\n                 +---------------- \
    \                   +---------------\n                (c)                    \
    \              (d)\n        Figure 2.4: Four types of double-homing arrangements.\n"
- title: 2.1.3.  Interworking Model
  contents:
  - "2.1.3.  Interworking Model\n   It is quite natural to assume that multiple different\
    \ layer 3 VPN\n   approaches may be implemented, particularly if the VPN backbone\n\
    \   includes more than one SP network.  For example, (1) each SP chooses\n   one\
    \ or more layer 3 PE-based VPN approaches out of multiple vendor's\n   implementations,\
    \ implying that different SPs may choose different\n   approaches; and (2) an\
    \ SP may deploy multiple networks of layer 3\n   PE-based VPNs (e.g., an old network\
    \ and a new network).  Thus it is\n   important to allow interworking of layer\
    \ 3 PE-based VPNs making use\n   of multiple different layer 3 VPN approaches.\n\
    \   There are three scenarios that enable layer 3 PE-based VPN\n   interworking\
    \ among different approaches.\n   o Interworking function\n     This scenario\
    \ enables interworking using a PE that is located at\n     one or more points\
    \ which are logically located between VPNs based\n     on different layer 3 VPN\
    \ approaches.  For example, this PE may be\n     located on the boundary between\
    \ SP networks which make use of\n     different layer 3 VPN approaches [VPN-DISC].\
    \  A PE at one of these\n     points is called an interworking function (IWF),\
    \ and an example\n     configuration is shown in Figure 2.5.\n               +------------------+\
    \  +------------------+\n               |                  |  |              \
    \    |\n          +------+  VPN tunnel  +------+  VPN tunnel  +------+\n     \
    \     |      |==============|      |==============|      |\n          |      |\
    \              |      |              |      |\n          |  PE  |            \
    \  |  PE  |              |  PE  |\n          |      |              |device|  \
    \            |      |\n          |device|              |(IWF) |              |device|\n\
    \          |      |  VPN tunnel  |      |  VPN tunnel  |      |\n          | \
    \     |==============|      |==============|      |\n          +------+      \
    \        +------+              +------+\n               |                  | \
    \ |                  |\n               +------------------+  +------------------+\n\
    \               |<-VPN approach 1->|  |<-VPN approach 2->|\n                 \
    \  Figure 2.5: Interworking function.\n   o Interworking interface\n     This\
    \ scenario enables interworking using tunnels between PEs\n     supporting by\
    \ different layer 3 VPN approaches.  As shown in Figure\n     2.6, interworking\
    \ interface is defined as the interface which\n     exists between a pair of PEs\
    \ and connects two SP networks\n     implemented with different approaches.  This\
    \ interface is similar\n     to the customer interface located between PE and\
    \ CE, but the\n     interface is supported by tunnels to identify VPNs, while\
    \ the\n     customer interface is supported by access connections.\n       +------------------+\
    \                     +------------------+\n       |                  |      \
    \    :          |                  |\n   +------+ VPN tunnel +------+Tunnel: \
    \     +------+ VPN tunnel +------+\n   |      |============|      |======:======|\
    \      |============|      |\n   |      |            |      |      :      |  \
    \    |            |      |\n   |  PE  |            |  PE  |      :      |  PE\
    \  |            |  PE  |\n   |      |            |      |      :      |      |\
    \            |      |\n   |device|            |device|      :      |device|  \
    \          |device|\n   |      | VPN tunnel |      |Tunnel:      |      | VPN\
    \ tunnel |      |\n   |      |============|      |======:======|      |============|\
    \      |\n   +------+            +------+      :      +------+            +------+\n\
    \       |                  |          :          |                  |\n      \
    \ +------------------+    Interworking     +------------------+\n       |<-VPN\
    \ approach 1->|     interface       |<-VPN approach 2->|\n                   \
    \  Figure 2.6: Interworking interface.\n     o Customer-based interworking\n \
    \    If some customer site has a CE attached to one kind of VPN, and a\n     CE\
    \ attached to another kind, communication between the two kinds of\n     VPN occurs\
    \ automatically.\n"
- title: 2.2.  Reference Model for Layer 3 Provider-Provisioned CE-based VPN
  contents:
  - "2.2.  Reference Model for Layer 3 Provider-Provisioned CE-based VPN\n   This\
    \ subsection describes functional components and their\n   relationship for implementing\
    \ layer 3 provider-provisioned CE-based\n   VPN.\n   Figure 2.7 shows the reference\
    \ model for layer 3 provider-provisioned\n   CE-based VPN.  As shown in Figure\
    \ 2.7, the customer interface is\n   defined as the interface which exists between\
    \ CE and PE devices.\n   In this model, a CE device maintains one or more VPN\
    \ tunnel\n   endpoints, and a PE device has no VPN-specific functionality.  As\
    \ a\n   result, the interworking issues of section 2.1.3 do not arise.\n    +---------+\
    \  +------------------------------------+  +---------+\n    |         |  |   \
    \                                 |  |         |\n    |         |  |         \
    \            +------+     +------+  : +------+\n"
- title: '+------+ :    |  |                     |      |     |      |  : |  CE  |'
  contents:
  - '+------+ :    |  |                     |      |     |      |  : |  CE  |

    '
- title: '|  CE  | :    |  |                     |  P   |     |  PE  |  : |device|'
  contents:
  - '|  CE  | :    |  |                     |  P   |     |  PE  |  : |device|

    '
- title: '|device| :  +------+    VPN tunnel     |router|     |device|  : |  of  |'
  contents:
  - '|device| :  +------+    VPN tunnel     |router|     |device|  : |  of  |

    '
- title: '|  of  |=:====================================================:=|VPN  A|'
  contents:
  - '|  of  |=:====================================================:=|VPN  A|

    '
- title: '|VPN  A| :  |      |                   +------+     +------+  : +------+'
  contents:
  - '|VPN  A| :  |      |                   +------+     +------+  : +------+

    '
- title: '+------+ :  |  PE  |                                  |  |    :    |'
  contents:
  - '+------+ :  |  PE  |                                  |  |    :    |

    '
- title: '+------+ :  |device|                                  |  |    :    |'
  contents:
  - '+------+ :  |device|                                  |  |    :    |

    '
- title: '|  CE  | :  |      |           VPN tunnel           +------+  : +------+'
  contents:
  - '|  CE  | :  |      |           VPN tunnel           +------+  : +------+

    '
- title: '|device|=:====================================================:=|  CE  |'
  contents:
  - '|device|=:====================================================:=|  CE  |

    '
- title: '|  of  | :  +------+                                |  PE  |  : |device|'
  contents:
  - '|  of  | :  +------+                                |  PE  |  : |device|

    '
- title: '|VPN  B| :    |  |                                  |device|  : |  of  |'
  contents:
  - '|VPN  B| :    |  |                                  |device|  : |  of  |

    '
- title: '+------+ :    |  |  +------------+   +------------+ |      |  : |VPN  B|'
  contents:
  - "+------+ :    |  |  +------------+   +------------+ |      |  : |VPN  B|\n  \
    \  |    :    |  |  |  Customer  |   |  Network   | +------+  : +------+\n    |Customer\
    \ |  |  | management |   | management |   |  |    :    |\n    |interface|  | \
    \ |  function  |   |  function  |   |  |Customer |\n    |         |  |  +------------+\
    \   +------------+   |  |interface|\n    |         |  |                      \
    \              |  |         |\n    +---------+  +------------------------------------+\
    \  +---------+\n    | Access  |  |<---------- SP network(s) --------->|  | Access\
    \  |\n    | network |  |                                    |  | network |\n \
    \               Figure 2.7: Reference model for layer 3\n                   provider-provisioned\
    \ CE-based VPN.\n"
- title: 2.2.1.  Entities in the Reference Model
  contents:
  - "2.2.1.  Entities in the Reference Model\n   The entities in the reference model\
    \ are described below.\n   o Customer edge (CE) device\n     In the context of\
    \ layer 3 provider-provisioned CE-based VPNs, a CE\n     device provides layer\
    \ 3 connectivity to the customer site.  It may\n     be a router, LSR, or host\
    \ that maintains one or more VPN tunnel\n     endpoints.  A CE device is attached\
    \ via an access connection to a\n     PE device and usually located at the edge\
    \ of a customer site or\n     co-located on an SP premises.\n   o P router (see\
    \ section 2.1.1)\n   o Provider edge (PE) device\n     In the context of layer\
    \ 3 provider-provisioned CE-based VPNs, a PE\n     device may be a router, LSR,\
    \ or other device that has no\n     VPN-specific functionality.  It is attached\
    \ via an access\n     connection to one or more CE devices.\n   o Customer Site\
    \ (see section 2.1.1)\n   o SP networks\n     An SP network is a network administrated\
    \ by a single service\n     provider.  It is an IP or MPLS network.  In the context\
    \ of layer 3\n     provider-provisioned CE-based VPNs, the SP network consists\
    \ of the\n     SP's network and the SP's management functions that manage both\
    \ its\n     own network and the customer's VPN functions on the CE device.\n \
    \  o Access connection (see section 2.1.1)\n   o Access network (see section 2.1.1)\n\
    \   o VPN tunnel\n     A VPN tunnel is a logical link between two entities which\
    \ is\n     created by encapsulating packets within an encapsulating header for\n\
    \     purpose of transmission between those two entities for support of\n    \
    \ VPNs.  In the context of layer 3 provider-provisioned CE-based\n     VPNs, a\
    \ VPN tunnel is an IP tunnel (e.g., using GRE, IP-in-IP,\n     IPsec, or L2TP)\
    \ or an MPLS tunnel between two CE devices over the\n     SP's network.\n   o\
    \ Customer management function (see section 2.1.1)\n   o Network management function\n\
    \     The network management function supports the provisioning and\n     monitoring\
    \ of PE or CE device attributes and their relationships,\n     covering PE and\
    \ CE devices that define the VPN connectivity of the\n     customer VPNs.\n  \
    \   The network management function may use a combination of SNMP\n     manager,\
    \ directory service (e.g., LDAP [RFC3377]), or proprietary\n     network management\
    \ system.\n"
- title: 3.  Customer Interface
  contents:
  - '3.  Customer Interface

    '
- title: 3.1.  VPN Establishment at the Customer Interface
  contents:
  - '3.1.  VPN Establishment at the Customer Interface

    '
- title: 3.1.1.  Layer 3 PE-based VPN
  contents:
  - "3.1.1.  Layer 3 PE-based VPN\n   It is necessary for each PE device to know which\
    \ CEs it is attached\n   to, and what VPNs each CE is associated with.\n   VPN\
    \ membership refers to the association of VPNs, CEs, and PEs.  A\n   given CE\
    \ belongs to one or more VPNs.  Each PE is therefore\n   associated with a set\
    \ of VPNs, and a given VPN has a set of\n   associated PEs which are supporting\
    \ that VPN.  If a PE has at least\n   one attached CE belonging to a given VPN,\
    \ then state information for\n   that VPN (e.g., the VPN routes) must exist on\
    \ that PE.  The set of\n   VPNs that exist on a PE may change over time as customer\
    \ sites are\n   added to or removed from the VPNs.\n   In some layer 3 PE-based\
    \ PPVPN schemes, VPN membership information\n   (i.e., information about which\
    \ PEs are attached to which VPNs) is\n   explicitly distributed.  In others, the\
    \ membership information is\n   inferred from other information that is distributed.\
    \  Different\n   schemes use the membership information in different ways, e.g.,\
    \ some\n   to determine what set of tunnels to set up, some to constrain the\n\
    \   distribution of VPN routing information.\n   A VPN site may be added or deleted\
    \ as a result of a provisioning\n   operation carried out by the network administrator,\
    \ or may be\n   dynamically added or deleted as a result of a subscriber initiated\n\
    \   operation; thus VPN membership information may be either static or\n   dynamic,\
    \ as discussed below.\n"
- title: 3.1.1.1.  Static Binding
  contents:
  - "3.1.1.1.  Static Binding\n   Static binding occurs when a provisioning action\
    \ binds a particular\n   PE-CE access link to a particular VPN.  For example,\
    \ a network\n   administrator may set up a dedicated link layer connection, such\
    \ as\n   an ATM VCC or a FR DLCI, between a PE device and a CE device.  In\n \
    \  this case the binding between a PE-CE access connection and a\n   particular\
    \ VPN to fixed at provisioning time, and remains the same\n   until another provisioning\
    \ action changes the binding.\n"
- title: 3.1.1.2.  Dynamic Binding
  contents:
  - "3.1.1.2.  Dynamic Binding\n   Dynamic binding occurs when some real-time protocol\
    \ interaction\n   causes a particular PE-CE access link to be temporarily bound\
    \ to a\n   particular VPN.  For example, a mobile user may dial up the provider\n\
    \   network and carry out user authentication and VPN selection\n   procedures.\
    \  Then the PE to which the user is attached is not one\n   permanently associated\
    \ with the user, but rather one that is\n   typically geographically close to\
    \ where the mobile user happens to\n   be.  Another example of dynamic binding\
    \ is that of a permanent access\n   connection between a PE and a CE at a public\
    \ facility such as a hotel\n   or conference center, where the link may be accessed\
    \ by multiple\n   users in turn, each of which may wish to connect to a different\
    \ VPN.\n   To support dynamically connected users, PPP and RADIUS are commonly\n\
    \   used, as these protocols provide for user identification,\n   authentication\
    \ and VPN selection.  Other mechanisms are also\n   possible.  For example a user's\
    \ HTTP traffic may be initially\n   intercepted by a PE and diverted to a provider\
    \ hosted web server.\n   After a dialogue that includes user authentication and\
    \ VPN selection,\n   the user can then be connected to the required VPN.  This\
    \ is\n   sometimes referred to as a \"captive portal\".\n   Independent of the\
    \ particular mechanisms used for user authentication\n   and VPN selection, an\
    \ implication of dynamic binding is that a user\n   for a given VPN may appear\
    \ at any PE at any time.  Thus VPN\n   membership may change at any time as a\
    \ result of user initiated\n   actions, rather than as a result of network provisioning\
    \ actions.\n   This suggests that there needs to be a way to distribute membership\n\
    \   information rapidly and reliably when these user-initiated actions\n   take\
    \ place.\n"
- title: 3.1.2.  Layer 3 Provider-Provisioned CE-based VPN
  contents:
  - "3.1.2.  Layer 3 Provider-Provisioned CE-based VPN\n   In layer 3 provider-provisioned\
    \ CE-based VPNs, the PE devices have no\n   knowledge of the VPNs.  A PE device\
    \ attached to a particular VPN has\n   no knowledge of the addressing or routing\
    \ information of that\n   specific VPN.\n   CE devices have IP or MPLS connectivity\
    \ via a connection to a PE\n   device, which just provides ordinary connectivity\
    \ to the global IP\n   address space or to an address space which is unique in\
    \ a particular\n   SPs network.  The IP connectivity may be via a static binding,\
    \ or via\n   some kind of dynamic binding.\n   The establishment of the VPNs is\
    \ done at each CE device, making use\n   of the IP or MPLS connectivity to the\
    \ others.  Therefore, it is\n   necessary for a given CE device to know which\
    \ other CE devices belong\n   to the same VPN.  In this context, VPN membership\
    \ refers to the\n   association of VPNs and CE devices.\n"
- title: 3.2.  Data Exchange at the Customer Interface
  contents:
  - '3.2.  Data Exchange at the Customer Interface

    '
- title: 3.2.1.  Layer 3 PE-based VPN
  contents:
  - "3.2.1.  Layer 3 PE-based VPN\n   For layer 3 PE-based VPNs, the exchange is normal\
    \ IP packets,\n   transmitted in the same form which is available for interconnecting\n\
    \   routers in general.  For example, IP packets may be exchanged over\n   Ethernet,\
    \ SONET, T1, T3, dial-up lines, and any other link layer\n   available to the\
    \ router.  It is important to note that those link\n   layers are strictly local\
    \ to the interface for the purpose of\n   carrying IP packets, and are terminated\
    \ at each end of the customer\n   interface.  The IP packets may contain addresses\
    \ which, while unique\n   within the VPN, are not unique on the VPN backbone.\
    \  Optionally, the\n   data exchange may use MPLS to carry the IP packets.\n"
- title: 3.2.2.  Layer 3 Provider-Provisioned CE-based VPN
  contents:
  - "3.2.2.  Layer 3 Provider-Provisioned CE-based VPN\n   The data exchanged at the\
    \ customer interface are always normal IP\n   packets that are routable on the\
    \ VPN backbone, and whose addresses\n   are unique on the VPN backbone.  Optionally,\
    \ MPLS frames can be used,\n   if the appropriate label-switched paths exist across\
    \ the VPN\n   backbone.  The PE device does not know whether these packets are\
    \ VPN\n   packets or not.  At the current time, MPLS is not commonly offered as\n\
    \   a customer-visible service, so that CE-based VPNs most commonly make\n   use\
    \ of IP services.\n"
- title: 3.3.  Customer Visible Routing
  contents:
  - "3.3.  Customer Visible Routing\n   Once VPN tunnels are set up between pairs\
    \ of VPN edge devices, it is\n   necessary to set up mechanisms which ensure that\
    \ packets from the\n   customer network get sent through the proper tunnels. \
    \ This routing\n   function must be performed by the VPN edge device.\n"
- title: 3.3.1.  Customer View of Routing for Layer 3 PE-based VPNs
  contents:
  - "3.3.1.  Customer View of Routing for Layer 3 PE-based VPNs\n   There is a PE-CE\
    \ routing interaction which enables a PE to obtain\n   those addresses, from the\
    \ customer network, that are reachable via\n   the CE.  The PE-CE routing interaction\
    \ also enables a CE device to\n   obtain those addresses, from the customer network,\
    \ which are\n   reachable via the PE; these will generally be addresses that are\
    \ at\n   other sites in the customer network.\n   The PE-CE routing interaction\
    \ can make use of static routing, an IGP\n   (such as RIP, OSPF, IS-IS, etc.),\
    \ or BGP.\n   If the PE-CE interaction is done via an IGP, the PE will generally\n\
    \   maintain at least several independent IGP instances; one for the\n   backbone\
    \ routing, and one for each VPN.  Thus the PE participates in\n   the IGP of the\
    \ customer VPNs, but the CE does not participate in the\n   backbone's IGP.\n\
    \   If the PE-CE interaction is done via BGP, the PE MAY support one\n   instance\
    \ of BGP for each VPN, as well as an additional instance of\n   BGP for the public\
    \ Internet routes.  Alternatively, the PE might\n   support a single instance\
    \ of BGP, using, e.g., different BGP Address\n   Families to distinguish the public\
    \ Internet routes from the VPN\n   routes.\n   Routing information which a PE\
    \ learns from a CE in a particular VPN\n   must be forwarded to the other PEs\
    \ that are attached to the same VPN.\n   Those other PEs must then forward the\
    \ information in turn to the\n   other CEs of that VPN.\n   The PE-PE routing\
    \ distribution can be done as part of the same\n   routing instance to which the\
    \ PE-CE interface belongs.\n   Alternatively, it can be done via a different routing\
    \ instance,\n   possibly using a different routing algorithm.  In this case, the\
    \ PE\n   must redistribute VPN routes from one routing instance to another.\n\
    \   Note that VPN routing information is never distributed to the P\n   routers.\
    \  VPN routing information is known at the edge of the VPN\n   backbone, but not\
    \ in the core.\n   If the VPN's IGP is different than the routing algorithm running\
    \ on\n   the CE-PE link, then the CE must support two routing instances, and\n\
    \   must redistribute the VPN's routes from one instance to the other\n   (e.g.,\
    \ [VPN-BGP-OSPF]).\n   In the case of layer 3 PE-based VPNs a single PE device\
    \ is likely to\n   provide service for several different VPNs.  Since different\
    \ VPNs may\n   have address spaces which are not mutually unique, a PE device\
    \ must\n   have several forwarding tables, in general one for each VPN to which\n\
    \   it is attached.  These will be referred to as VPN Forwarding\n   Instances\
    \ (VFIs).  Each VFI is a logical entity internal to the PE\n   device.  VFIs are\
    \ defined in section 2.1.1, and discussed in more\n   detail in section 4.4.2.\n\
    \   The scaling and management of the customer network (as well as the\n   operation\
    \ of the VPN) will depend upon the implementation approach\n   and the manner\
    \ in which routing is done.\n"
- title: 3.3.1.1.  Routing for Intranets
  contents:
  - "3.3.1.1.  Routing for Intranets\n   In the intranet case all of the sites to\
    \ be interconnected belong to\n   the same administration (for example, the same\
    \ company).  The options\n   for routing within a single customer network include:\n\
    \   o A single IGP area (using OSPF, IS-IS, or RIP)\n   o Multiple areas within\
    \ a single IGP\n   o A separate IGP within each site, with routes redistributed\
    \ from\n     each site to backbone routing (i.e., to a backbone as seen by the\n\
    \     customer network).\n   Note that these options look at routing from the\
    \ perspective of the\n   overall routing in the customer network.  This list does\
    \ not specify\n   whether PE device is considered to be in a site or not.  This\
    \ issue\n   is discussed below.\n   A single IGP area (such as a single OSPF area,\
    \ a single IS-IS area,\n   or a single instance of RIP between routers) may be\
    \ used.  One could\n   have, all routers within the customer network (including\
    \ the PEs, or\n   more precisely, including a VFI within each PE) appear within\
    \ a\n   single area.  Tunnels between the PEs could also appear as normal\n  \
    \ links.\n   In some cases the multi-level hierarchy of OSPF or IS-IS may be used.\n\
    \   One way to apply this to VPNs would be to have each site be a single\n   OSPF\
    \ or IS-IS area.  The VFIs will participate in routing within each\n   site as\
    \ part of that area.  The VFIs may then be interconnected as\n   the backbone\
    \ (OSPF area 0 or IS-IS level 2).  If OSPF is used, the\n   VFIs therefore appear\
    \ to the customer network as area border routers.\n   If IS-IS is used, the VFIs\
    \ therefore participate in level 1 routing\n   within the local area, and appear\
    \ to the customer network as if they\n   are level 2 routers in the backbone.\n\
    \   Where an IGP is used across the entire network, it is straightforward\n  \
    \ for VPN tunnels, access connections, and backdoor links to be mixed\n   in a\
    \ network.  Given that OSPF or IS-IS metrics will be assigned to\n   all links,\
    \ paths via alternate links can be compared and the shortest\n   cost path will\
    \ be used regardless of whether it is via VPN tunnels,\n   access connections,\
    \ or backdoor links.  If multiple sites of a VPN do\n   not use a common IGP,\
    \ or if the backbone does not use the same common\n   IGP as the sites, then special\
    \ procedures may be needed to ensure\n   that routes to/from other sites are treated\
    \ as intra-area routes,\n   rather than as external routes (depending upon the\
    \ VPN approach\n   taken).\n   Another option is to operate each site as a separate\
    \ routing domain.\n   For example each site could operate as a single OSPF area,\
    \ a single\n   IS-IS area, or a RIP domain.  In this case the per-site routing\n\
    \   domains will need to redistribute routes into a backbone routing\n   domain\
    \ (Note: in this context the \"backbone routing domain\" refers to\n   a backbone\
    \ as viewed by the customer network).  In this case it is\n   optional whether\
    \ or not the VFIs participate in the routing within\n   each site.\n"
- title: 3.3.1.2.  Routing for Extranets
  contents:
  - "3.3.1.2.  Routing for Extranets\n   In the extranet case the sites to be interconnected\
    \ belong to\n   multiple different administrations.  In this case IGPs (such as\
    \ OSPF,\n   IS-IS, or RIP) are normally not used across the interface between\n\
    \   organizations.  Either static routes or BGP may be used between\n   sites.\
    \  If the customer network administration wishes to maintain\n   control of routing\
    \ between its site and other networks, then either\n   static routing or BGP may\
    \ be used across the customer interface.  If\n   the customer wants to outsource\
    \ all such control to the provider,\n   then an IGP or static routes may be used\
    \ at this interface.\n   The use of BGP between sites allows for policy based\
    \ routing between\n   sites.  This is particularly useful in the extranet case.\
    \  Note that\n   private IP addresses or non-unique IP address (e.g., unregistered\n\
    \   addresses) should not be used for extranet communication.\n"
- title: 3.3.1.3.  CE and PE Devices for Layer 3 PE-based VPNs
  contents:
  - "3.3.1.3.  CE and PE Devices for Layer 3 PE-based VPNs\n   When using a single\
    \ IGP area across an intranet, the entire customer\n   network participates in\
    \ a single area of an IGP.  In this case, for\n   layer 3 PE-based VPNs both CE\
    \ and PE devices participate as normal\n   routers within the area.\n   The other\
    \ options make a distinction between routing within a site,\n   and routing between\
    \ sites.  In this case, a CE device would normally\n   be considered as part of\
    \ the site where it is located.  However,\n   there is an option regarding how\
    \ the PE devices should be considered.\n   In some cases, from the perspective\
    \ of routing within the customer\n   network, a PE device (or more precisely a\
    \ VFI within a PE device) may\n   be considered to be internal to the same area\
    \ or routing domain as\n   the site to which it is attached.  This simplifies\
    \ the management\n   responsibilities of the customer network administration,\
    \ since\n   inter-area routing would be handled by the provider.\n   For example,\
    \ from the perspective of routing within the customer\n   network, the CE devices\
    \ may be the area border or AS boundary routers\n   of the IGP area.  In this\
    \ case, static routing, BGP, or whatever\n   routing is used in the backbone,\
    \ may be used across the customer\n   interface.\n"
- title: 3.3.2.  Customer View of Routing for Layer 3 Provider-Provisioned
  contents:
  - "3.3.2.  Customer View of Routing for Layer 3 Provider-Provisioned\n        CE-based\
    \ VPNs\n   For layer 3 provider-provisioned CE-based VPNs, the PE devices are\n\
    \   not aware of the set of addresses which are reachable at particular\n   customer\
    \ sites.  The CE and PE devices do not exchange the customer's\n   routing information.\n\
    \   Customer sites that belong to the same VPN may exchange routing\n   information\
    \ through the CE-CE VPN tunnels that appear, to the\n   customers IGP, as router\
    \ adjacencies.  Alternatively, instead of\n   exchanging routing information through\
    \ the VPN tunnels, the SP's\n   management system may take care of the configuration\
    \ of the static\n   route information of one site towards the other sites in the\
    \ VPN.\n   Routing within the customer site may be done in any possible way,\n\
    \   using any kind of routing protocols (see section 3.3.3).\n   As the CE device\
    \ receives an IP or MPLS service from the SP, the CE\n   and PE devices may exchange\
    \ routing information that is meaningful\n   within the SP routing realm.\n  \
    \ Moreover, as the forwarding of tunneled customer packets in the SP\n   network\
    \ will be based on global IP forwarding, the routes to the\n   various CE devices\
    \ must be known in the entire SP's network.\n   This means that a CE device may\
    \ need to participate in two different\n   routing processes:\n   o routing in\
    \ its own private network (VPN routing), within its own\n     site and with the\
    \ other VPN sites through the VPN tunnels, possibly\n     using private addresses.\n\
    \   o routing in the SP network (global routing), as such peering with\n     its\
    \ PE.\n   However, in many scenarios, the use of static/default routes at the\n\
    \   CE-PE interface might be all the global routing that is required.\n"
- title: 3.3.3.  Options for Customer Visible Routing
  contents:
  - "3.3.3.  Options for Customer Visible Routing\n   The following technologies are\
    \ available for the exchange of routing\n   information.\n   o Static routing\n\
    \     Routing tables may be configured through a management system.\n   o RIP\
    \ (Routing Information Protocol) [RFC2453]\n     RIP is an interior gateway protocol\
    \ and is used within an\n     autonomous system.  It sends out routing updates\
    \ at regular\n     intervals and whenever the network topology changes.  Routing\n\
    \     information is then propagated by the adjacent routers to their\n     neighbors\
    \ and thus to the entire network.  A route from a source to\n     a destination\
    \ is the path with the least number of routers.  This\n     number is called the\
    \ \"hop count\" and its maximum value is 15.  This\n     implies that RIP is suitable\
    \ for a small- or medium-sized networks.\n   o OSPF (Open Shortest Path First)\
    \ [RFC2328]\n     OSPF is an interior gateway protocol and is applied to a single\n\
    \     autonomous system.  Each router distributes the state of its\n     interfaces\
    \ and neighboring routers as a link state advertisement,\n     and maintains a\
    \ database describing the autonomous system's\n     topology.  A link state is\
    \ advertised every 30 minutes or when the\n     topology is reconfigured.\n  \
    \   Each router maintains an identical topological database, from which\n    \
    \ it constructs a tree of shortest paths with itself as the root.\n     The algorithm\
    \ is known as the Shortest Path First or SPF.  The\n     router generates a routing\
    \ table from the tree of shortest paths.\n     OSPF supports a variable length\
    \ subnet mask, which enables\n     effective use of the IP address space.\n  \
    \   OSPF allows sets of networks to be grouped together into an area.\n     Each\
    \ area has its own topological database.  The topology of the\n     area is invisible\
    \ from outside its area.  The areas are\n     interconnected via a \"backbone\"\
    \ network.  The backbone network\n     distributes routing information between\
    \ the areas.  The area\n     routing scheme can reduce the routing traffic and\
    \ compute the\n     shortest path trees and is indispensable for larger scale\
    \ networks.\n     Each multi-access network with multiple routers attached has\
    \ a\n     designated router.  The designated router generates a link state\n \
    \    advertisement for the multi-access network and synchronizes the\n     topological\
    \ database with other adjacent routers in the area.  The\n     concept of designated\
    \ router can thus reduce the routing traffic\n     and compute shortest path trees.\
    \  To achieve high availability, a\n     backup designated router is used.\n \
    \  o IS-IS (intermediate system to intermediate system) [RFC1195]\n     IS-IS\
    \ is a routing protocol designed for the OSI (Open Systems\n     Interconnection)\
    \ protocol suites.  Integrated IS-IS is derived from\n     IS-IS in order to support\
    \ the IP protocol.  In the Internet\n     community, IS-IS means integrated IS-IS.\
    \  In this, a link state is\n     advertised over a connectionless network service.\
    \  IS-IS has the\n     same basic features as OSPF.  They include: link state\n\
    \     advertisement and maintenance of a topological database within an\n    \
    \ area, calculation of a tree of shortest paths, generation of a\n     routing\
    \ table from a tree of shortest paths, the area routing\n     scheme, a designated\
    \ router, and a variable length subnet mask.\n   o BGP-4 (Border Gateway Protocol\
    \ version 4) [RFC1771]\n     BGP-4 is an exterior gateway protocol and is applied\
    \ to the routing\n     of inter-autonomous systems.  A BGP speaker establishes\
    \ a session\n     with other BGP speakers and advertises routing information to\
    \ them.\n     A session may be an External BGP (EBGP) that connects two BGP\n\
    \     speakers within different autonomous systems, or an internal BGP\n     (IBGP)\
    \ that connects two BGP speakers within a single autonomous\n     system.  Routing\
    \ information is qualified with path attributes,\n     which differentiate routes\
    \ for the purpose of selecting an\n     appropriate one from possible routes.\
    \  Also, routes are grouped by\n     the community attribute [RFC1997] [BGP-COM].\n\
    \     The IBGP mesh size tends to increase dramatically with the number\n    \
    \ of BGP speakers in an autonomous system.  BGP can reduce the number\n     of\
    \ IBGP sessions by dividing the autonomous system into smaller\n     autonomous\
    \ systems and grouping them into a single confederation\n     [RFC3065].  Route\
    \ reflection is another way to reduce the number of\n     IBGP sessions [RFC1966].\
    \  BGP divides the autonomous system into\n     clusters.  Each cluster establishes\
    \ the IBGP full mesh within\n     itself, and designates one or more BGP speakers\
    \ as \"route\n     reflectors,\" which communicate with other clusters via their\
    \ route\n     reflectors.  Route reflectors in each cluster maintain path and\n\
    \     attribute information across the autonomous system.  The autonomous\n  \
    \   system still functions like a fully meshed autonomous system.  On\n     the\
    \ other hand, confederations provide finer control of routing\n     within the\
    \ autonomous system by allowing for policy changes across\n     confederation\
    \ boundaries, while route reflection requires the use\n     of identical policies.\n\
    \     BGP-4 has been extended to support IPv6, IPX, and others as well as\n  \
    \   IPv4 [RFC2858].  Multiprotocol BGP-4 carries routes from multiple\n     \"\
    address families\".\n"
- title: 4.  Network Interface and SP Support of VPNs
  contents:
  - '4.  Network Interface and SP Support of VPNs

    '
- title: 4.1.  Functional Components of a VPN
  contents:
  - "4.1.  Functional Components of a VPN\n   The basic functional components of an\
    \ implementation of a VPN are:\n   o A mechanism to acquire VPN membership/capability\
    \ information\n   o A mechanism to tunnel traffic between VPN sites\n   o For\
    \ layer 3 PE-based VPNs, a means to learn customer routes,\n     distribute them\
    \ between the PEs, and to advertise reachable\n     destinations to customer sites.\n\
    \   Based on the actual implementation, these functions could be\n   implemented\
    \ on a per-VPN basis or could be accomplished via a common\n   mechanism shared\
    \ by all VPNs.  For instance, a single process could\n   handle the routing information\
    \ for all the VPNs or a separate process\n   may be created for each VPN.\n  \
    \ Logically, the establishment of a VPN can be thought of as composed\n   of the\
    \ following three stages.  In the first stage, the VPN edge\n   devices learn\
    \ of each other.  In the second stage, they establish\n   tunnels to each other.\
    \  In the third stage, they exchange routing\n   information with each other.\
    \  However, not all VPN solutions need be\n   decomposed into these three stages.\
    \  For example, in some VPN\n   solutions, tunnels are not established after learning\
    \ membership\n   information; rather, pre-existing tunnels are selected and used.\n\
    \   Also, in some VPN solutions, the membership information and the\n   routing\
    \ information are combined.\n   In the membership/capability discovery stage,\
    \ membership and\n   capability information needs to be acquired to determine\
    \ whether two\n   particular VPN edge devices support any VPNs in common.  This\
    \ can be\n   accomplished, for instance, by exchanging VPN identifiers of the\n\
    \   configured VPNs at each VPN edge device.  The capabilities of the VPN\n  \
    \ edge devices need to be determined, in order to be able to agree on a\n   common\
    \ mechanism for tunneling and/or routing.  For instance, if site\n   A supports\
    \ both IPsec and MPLS as tunneling mechanisms and site B\n   supports only MPLS,\
    \ they can both agree to use MPLS for tunneling.\n   In some cases the capability\
    \ information may be determined\n   implicitly, for example some SPs may implement\
    \ a single VPN solution.\n   Likewise, the routing information for VPNs can be\
    \ distributed using\n   the methods discussed in section 4.4.\n   In the tunnel\
    \ establishment stage, mechanisms may need to be invoked\n   to actually set up\
    \ the tunnels.  With IPsec, for instance, this could\n   involve the use of IKE\
    \ to exchange keys and policies for securing the\n   data traffic.  However, if\
    \ IP tunneling, e.g., is used, there may not\n   be any need to explicitly set\
    \ up tunnels; if MPLS tunnels are used,\n   they may be pre-established as part\
    \ of normal MPLS functioning.\n   In the VPN routing stage, routing information\
    \ for the VPN sites must\n   be exchanged before data transfer between the sites\
    \ can take place.\n   Based on the VPN model, this could involve the use of static\
    \ routes,\n   IGPs such as OSPF/ISIS/RIP, or an EGP such as BGP.\n   VPN membership\
    \ and capability information can be distributed from a\n   central management\
    \ system, using protocols such as, e.g., LDAP.\n   Alternatively, it can be distributed\
    \ manually.  However, as manual\n   configuration does not scale and is error\
    \ prone, its use is\n   discouraged.  As a third alternative, VPN information\
    \ can be\n   distributed via protocols that ensure automatic and consistent\n\
    \   distribution of information in a timely manner, much as routing\n   protocols\
    \ do for routing information.  This may suggest that the\n   information be carried\
    \ in routing protocols themselves, though only\n   if this can be done without\
    \ negatively impacting the essential\n   routing functions.\n   It can be seen\
    \ that quite a lot of information needs to be exchanged\n   in order to establish\
    \ and maintain a VPN.  The scaling and stability\n   consequences need to be analyzed\
    \ for any VPN approach.\n   While every VPN solution must address the functionality\
    \ of all three\n   components, the combinations of mechanisms used to provide\
    \ the needed\n   functionality, and the order in which different pieces of\n \
    \  functionality are carried out, may differ.\n   For layer 3 provider-provisioned\
    \ CE-based VPNs, the VPN service is\n   offering tunnels between CE devices. \
    \ IP routing for the VPN is done\n   by the customer network.  With these solutions,\
    \ the SP is involved in\n   the operation of the membership/capability discovery\
    \ stage and the\n   tunnel establishment stage.  The IP routing functional component\
    \ may\n   be entirely up to the customer network, or alternatively, the SP's\n\
    \   management system may be responsible for the distribution of the\n   reachability\
    \ information of the VPN sites to the other sites of the\n   same VPN.\n"
- title: 4.2.  VPN Establishment and Maintenance
  contents:
  - "4.2.  VPN Establishment and Maintenance\n   For a layer 3 provider-provisioned\
    \ VPN the SP is responsible for the\n   establishment and maintenance of the VPNs.\
    \  Many different approaches\n   and schemes are possible in order to provide\
    \ layer 3 PPVPNs, however\n   there are some generic problems that any VPN solution\
    \ must address,\n   including:\n   o For PE-based VPNs, when a new site is added\
    \ to a PE, how do the\n     other PEs find out about it?  When a PE first gets\
    \ attached to a\n     given VPN, how does it determine which other PEs are attached\
    \ to\n     the same VPN.  For CE-based VPNs, when a new site is added, how\n \
    \    does its CE find out about all the other CEs at other sites of the\n    \
    \ same VPN?\n   o In order for layer 3 PE-based VPNs to scale, all routes for\
    \ all\n     VPNs cannot reside on all PEs.  How is the distribution of VPN\n \
    \    routing information constrained so that it is distributed to only\n     those\
    \ devices that need it?\n   o An administrator may wish to provision different\
    \ topologies for\n     different VPNs (e.g., a full mesh or a hub & spoke topology).\
    \  How\n     is this achieved?\n     This section looks at some of these generic\
    \ problems and at some of\n     the mechanisms that can be used to solve them.\n"
- title: 4.2.1.  VPN Discovery
  contents:
  - "4.2.1.  VPN Discovery\n   Mechanisms are needed to acquire information that allows\
    \ the\n   establishment and maintenance of VPNs.  This may include, for\n   example,\
    \ information on VPN membership, topology, and VPN device\n   capabilities.  This\
    \ information may be statically configured, or\n   distributed by an automated\
    \ protocol.  As a result of the operation\n   of these mechanisms and protocols,\
    \ a device is able to determine\n   where to set up tunnels, and where to advertise\
    \ the VPN routes for\n   each VPN.\n   With a physical network, the equivalent\
    \ problem can by solved by the\n   control of the physical interconnection of\
    \ links, and by having a\n   router run a discovery/hello protocol over its locally\
    \ connected\n   links.  With VPNs both the routers and the links (tunnels) may\
    \ be\n   logical entities, and thus some other mechanisms are needed.\n   A number\
    \ of different approaches are possible for VPN discovery.  One\n   scheme uses\
    \ the network management system to configure and provision\n   the VPN edge devices.\
    \  This approach can also be used to distribute\n   VPN discovery information,\
    \ either using proprietary protocols or\n   using standard management protocols\
    \ and MIBs.  Another approach is\n   where the VPN edge devices act as clients\
    \ of a centralized directory\n   or database server that contains VPN discovery\
    \ information.  Another\n   possibility is where VPN discovery information is\
    \ piggybacked onto a\n   routing protocol running between the VPN edge devices\
    \ [VPN-DISC].\n"
- title: 4.2.1.1.  Network Management for Membership Information
  contents:
  - "4.2.1.1.  Network Management for Membership Information\n   SPs use network management\
    \ extensively to configure and monitor the\n   various devices that are spread\
    \ throughout their networks.  This\n   approach could be also used for distributing\
    \ VPN related information.\n   A network management system (either centralized\
    \ or distributed) could\n   be used by the SP to configure and provision VPNs\
    \ on the VPN edge\n   devices at various locations.  VPN configuration information\
    \ could be\n   entered into a network management application and distributed to\
    \ the\n   remote sites via the same means used to distribute other network\n \
    \  management information.  This approach is most natural when all the\n   devices\
    \ that must be provisioned are within a single SP's network,\n   since the SP\
    \ has access to all VPN edge devices in its domain.\n   Security and access control\
    \ are important, and could be achieved for\n   example using SNMPv3, SSH, or IPsec\
    \ tunnels.\n"
- title: 4.2.1.2.  Directory Servers
  contents:
  - "4.2.1.2.  Directory Servers\n   An SP typically needs to maintain a database\
    \ of VPN\n   configuration/membership information, regardless of the mechanisms\n\
    \   used to distribute it.  LDAPv3 [RFC3377] is a standard directory\n   protocol\
    \ which makes it possible to use a common mechanism for both\n   storing such\
    \ information and distributing it.\n   To facilitate interoperability between\
    \ different implementations, as\n   well as between the management systems of\
    \ different SPs, a standard\n   schema for representing VPN membership and configuration\
    \ information\n   would have to be developed.\n   LDAPv3 supports authentication\
    \ of messages and associated access\n   control, which can be used to limit access\
    \ to VPN information to\n   authorized entities.\n"
- title: 4.2.1.3.  Augmented Routing for Membership Information
  contents:
  - "4.2.1.3.  Augmented Routing for Membership Information\n   Extensions to the\
    \ use of existing BGP mechanisms, for distribution of\n   VPN membership information,\
    \ are proposed in [VPN-2547BIS].  In that\n   scheme, BGP is used to distribute\
    \ VPN routes, and each route carries\n   a set of attributes which indicate the\
    \ VPN (or VPNs) to which the\n   route belongs.  This allows the VPN discovery\
    \ information and routing\n   information to be combined in a single protocol.\
    \  Information needed\n   to establish per-VPN tunnels can also be carried as\
    \ attributes of the\n   routes.  This makes use of the BGP protocol's ability\
    \ to effectively\n   carry large amounts of routing information.\n   It is also\
    \ possible to use BGP to distribute just the\n   membership/capability information,\
    \ while using a different technique\n   to distribute the routing.  BGP's update\
    \ message would be used to\n   indicate that a PE is attached to a particular\
    \ VPN; BGP's withdraw\n   message would be used to indicate that a PE has ceased\
    \ to be attached\n   to a particular VPN.  This makes use of the BGP protocol's\
    \ ability to\n   dynamically distribute real-time changes in a reliable and fairly\n\
    \   rapid manner.  In addition, if a BGP route reflector is used, PEs\n   never\
    \ have to be provisioned with each other's IP addresses at all.\n   Both cases\
    \ make use of BGP's mechanisms, such as route filters, for\n   constraining the\
    \ distribution of information.\n   Augmented routing may be done in combination\
    \ with aggregated routing,\n   as discussed in section 4.4.4.  Of course, when\
    \ using BGP for\n   distributing any kind of VPN-specific information, one must\
    \ ensure\n   that one is not disrupting the classical use of BGP for distributing\n\
    \   public Internet routing information.  For further discussion of this,\n  \
    \ see the discussion of aggregated routing, section 4.4.4.\n"
- title: 4.2.1.4.  VPN Discovery for Inter-SP VPNs
  contents:
  - "4.2.1.4.  VPN Discovery for Inter-SP VPNs\n   When two sites of a VPN are connected\
    \ to different SP networks, the\n   SPs must support a common mechanism for exchanging\n\
    \   membership/capability information.  This might make use of manual\n   configuration\
    \ or automated exchange of information between the SPs.\n   Automated exchange\
    \ may be facilitated if one or more mechanisms for\n   VPN discovery are standardized\
    \ and supported across the multiple SPs.\n   Inter-SP trust relationships will\
    \ need to be established, for example\n   to determine which information and how\
    \ much information about the\n   VPNs may be exchanged between SPs.\n   In some\
    \ cases different service providers may deploy different\n   approaches for VPN\
    \ discovery.  Where this occurs, this implies that\n   for multi-SP VPNs, some\
    \ manual coordination and configuration may be\n   necessary.\n   The amount of\
    \ information which needs to be shared between SPs may\n   vary greatly depending\
    \ upon the number of size of the multi-SP VPNs.\n   The SPs will therefore need\
    \ to determine and agree upon the expected\n   amount of membership information\
    \ to be exchanged, and the dynamic\n   nature of this information.  Mechanisms\
    \ may also be needed to\n   authenticate the VPN membership information.\n   VPN\
    \ information should be distributed only to places where it needs\n   to go, whether\
    \ that is intra-provider or inter-provider.  In this\n   way, the distribution\
    \ of VPN information is unlike the distribution\n   of inter-provider routing\
    \ information, as the latter needs to be\n   distributed throughout the Internet.\
    \  In addition, the joint support\n   of a VPN by two SPs should not require any\
    \ third SP to maintain state\n   for that VPN.  Again, notice the difference with\
    \ respect to\n   inter-provider routing; in inter-provider routing: sending traffic\n\
    \   from one SP to another may indeed require routing state in a third\n   SP.\n\
    \   As one possible example: Suppose that there are two SPs A and C,\n   which\
    \ want to support a common VPN.  Suppose that A and C are\n   interconnected via\
    \ SP B.  In this case B will need to know how to\n   route traffic between A and\
    \ C, and therefore will need to know\n   something about A and C (such as enough\
    \ routing information to\n   forward IP traffic and/or connect MPLS LSPs between\
    \ PEs or route\n   reflectors in A and C).  However, for scaling purposes it is\n\
    \   desirable that B not need to know VPN-specific information about the\n   VPNs\
    \ which are supported by A and C.\n"
- title: 4.2.2.  Constraining Distribution of VPN Routing Information
  contents:
  - "4.2.2.  Constraining Distribution of VPN Routing Information\n   In layer 3 provider-provisioned\
    \ CE-based VPNs, the VPN tunnels\n   connect CE devices.  In this case, distribution\
    \ of IP routing\n   information occurs between CE devices on the customer sites.\
    \  No\n   additional constraints on the distribution of VPN routing information\n\
    \   are necessary.\n   In layer 3 PE-based VPNs, however, the PE devices must\
    \ be aware of\n   VPN routing information (for the VPNs to which they are attached).\n\
    \   For scalability reasons, one does not want a scheme in which all PEs\n   contain\
    \ all routes for all VPNs.  Rather, only the PEs that are\n   attached to sites\
    \ in a given VPN should contain the routing\n   information for that VPN.  This\
    \ means that the distribution of VPN\n   routing information between PE devices\
    \ must be constrained.\n   As VPN membership may change dynamically, it is necessary\
    \ to have a\n   mechanism that allows VPN route information to be distributed\
    \ to any\n   PE where there is an attached user for that VPN, and allows for the\n\
    \   removal of this information when it is no longer needed.\n   In the Virtual\
    \ Router scheme, per-VPN tunnels must be established\n   before any routes for\
    \ a VPN are distributed, and the routes are then\n   distributed through those\
    \ tunnels.  Thus by establishing the proper\n   set of tunnels, one implicitly\
    \ constrains and controls the\n   distribution of per-VPN routing information.\
    \  In this scheme, the\n   distribution of membership information consists of\
    \ the set of VPNs\n   that exists on each PE, as well as information about the\
    \ desired\n   topology.  This enables a PE to determine the set of remote PEs\
    \ to\n   which it must establish tunnels for a particular VPN.\n   In the aggregated\
    \ routing scheme (see section 4.4.4), the\n   distribution of VPN routing information\
    \ is constrained by means of\n   route filtering.  As VPN membership changes on\
    \ a PE, the route\n   filters in use between the PE and its peers can be adjusted.\
    \  Each\n   peer may then adjust the filters in use with each of its peers in\n\
    \   turn, and thus the changes propagate across the network.  When BGP is\n  \
    \ used, this filtering may take place at route reflectors as discussed\n   in\
    \ section 4.4.4.\n"
- title: 4.2.3.  Controlling VPN Topology
  contents:
  - "4.2.3.  Controlling VPN Topology\n   The topology for a VPN consists of a set\
    \ of nodes interconnected via\n   tunnels.  The topology may be a full mesh, a\
    \ hub and spoke topology,\n   or an arbitrary topology.  For a VPN the set of\
    \ nodes will include\n   all VPN edge devices that have attached sites for that\
    \ VPN.\n   Naturally, whatever the topology, all VPN sites are reachable from\n\
    \   each other; the topology simply constrains the way traffic is routed\n   among\
    \ the sites.  For example, in one topology traffic between site A\n   and site\
    \ B goes from one to the other directly over the VPN backbone;\n   in another\
    \ topology, traffic from site A to site B must traverse site\n   C before reaching\
    \ site B.\n   The simplest topology is a full mesh, where a tunnel exists between\n\
    \   every pair of VPN edge devices.  If we assume the use of point-to-\n   point\
    \ tunnels (rather than multipoint-to-point), then with a full\n   mesh topology\
    \ there are N*(N-1)/2 duplex tunnels or N*(N-1) simplex\n   tunnels for N VPN\
    \ edge devices.  Each tunnel consumes some resources\n   at a VPN edge device,\
    \ and depending on the type of tunnel, may or may\n   not consume resources in\
    \ intermediate routers or LSRs.  One reason\n   for using a partial mesh topology\
    \ is to reduce the number of tunnels\n   a VPN edge device, and/or the network,\
    \ needs to support.  Another\n   reason is to support the scenario where an administrator\
    \ requires all\n   traffic from certain sites to traverse some particular site\
    \ for\n   policy or control reasons, such as to force traffic through a\n   firewall,\
    \ or for monitoring or accounting purposes.  Note that the\n   topologies used\
    \ for each VPN are separate, and thus the same VPN edge\n   device may be part\
    \ of a full mesh topology for one VPN, and of a\n   partial mesh topology for\
    \ another VPN.\n   An example of where a partial mesh topology could be suitable\
    \ is for\n   a VPN that supports a large number of telecommuters and a small\n\
    \   number of corporate sites.  Most traffic will be between\n   telecommuters\
    \ and the corporate sites, not between pairs of\n   telecommuters.  A hub and\
    \ spoke topology for the VPN would thus map\n   onto the underlying traffic flow,\
    \ with the telecommuters attached to\n   spoke VPN edge devices and the corporate\
    \ sites attached to hub VPN\n   edge devices.  Traffic between telecommuters is\
    \ still supported, but\n   this traffic traverses a hub VPN edge device.\n   The\
    \ selection of a topology for a VPN is an administrative choice,\n   but it is\
    \ useful to examine protocol mechanisms that can be used to\n   automate the construction\
    \ of the desired topology, and thus reduce\n   the amount of configuration needed.\
    \  To this end it is useful for a\n   VPN edge device to be able to advertise\
    \ per-VPN topology information\n   to other VPN edge devices.  It may be simplest\
    \ to advertise this at\n   the same time as the membership information is advertised,\
    \ using the\n   same mechanisms.\n   A simple scheme is where a VPN edge device\
    \ advertises itself either\n   as a hub or as a spoke, for each VPN that it has.\
    \  When received by\n   other VPN edge devices this information can be used when\
    \ determining\n   whether to establish a tunnel.  A more comprehensive scheme\
    \ allows a\n   VPN edge device to advertise a set of topology groups, with tunnels\n\
    \   established between a pair of VPN edge devices if they have a group\n   in\
    \ common.\n"
- title: 4.3.  VPN Tunneling
  contents:
  - "4.3.  VPN Tunneling\n   VPN solutions use tunneling in order to transport VPN\
    \ packets across\n   the VPN backbone, from one VPN edge device to another.  There\
    \ are\n   different types of tunneling protocols, different ways of\n   establishing\
    \ and maintaining tunnels, and different ways to associate\n   tunnels with VPNs\
    \ (e.g., shared versus dedicated per-VPN tunnels).\n   Sections 4.3.1 through\
    \ 4.3.5 discusses some common characteristics\n   shared by all forms of tunneling,\
    \ and some common problems to which\n   tunnels provide a solution.  Section 4.3.6\
    \ provides a survey of\n   available tunneling techniques.  Note that tunneling\
    \ protocol issues\n   are generally independent of the mechanisms used for VPN\
    \ membership\n   and VPN routing.\n   One motivation for the use of tunneling\
    \ is that the packet addressing\n   used in a VPN may have no relation to the\
    \ packet addressing used\n   between the VPN edge devices.  For example the customer\
    \ VPN traffic\n   could use non-unique or private IP addressing [RFC1918].  Also\
    \ an\n   IPv6 VPN could be implemented across an IPv4 provider backbone.  As\n\
    \   such the packet forwarding between the VPN edge devices must use\n   information\
    \ other than that contained in the VPN packets themselves.\n   A tunneling protocol\
    \ adds additional information, such an extra\n   header or label, to a VPN packet,\
    \ and this additional information is\n   then used for forwarding the packet between\
    \ the VPN edge devices.\n   Another capability optionally provided by tunneling\
    \ is that of\n   isolation between different VPN traffic flows.  The QoS and security\n\
    \   requirements for these traffic flows may differ, and can be met by\n   using\
    \ different tunnels with the appropriate characteristics.  This\n   allows a provider\
    \ to offer different service characteristics for\n   traffic in different VPNs,\
    \ or to subsets of traffic flows within a\n   single VPN.\n   The specific tunneling\
    \ protocols considered in this section are GRE,\n   IP-in-IP, IPsec, and MPLS,\
    \ as these are the most suitable for\n   carrying VPN traffic across the VPN backbone.\
    \  Other tunneling\n   protocols, such as L2TP [RFC2661], may be used as access\
    \ tunnels,\n   carrying traffic between a PE and a CE.  As backbone tunneling\
    \ is\n   independent of and orthogonal to access tunneling, protocols for the\n\
    \   latter are not discussed here.\n"
- title: 4.3.1.  Tunnel Encapsulations
  contents:
  - "4.3.1.  Tunnel Encapsulations\n   All tunneling protocols use an encapsulation\
    \ that adds additional\n   information to the encapsulated packet; this information\
    \ is used for\n   forwarding across the VPN backbone.  Examples are provided in\
    \ section\n   4.3.6.\n   One characteristic of a tunneling protocol is whether\
    \ per-tunnel\n   state is needed in the SP network in order to forward the\n \
    \  encapsulated packets.  For IP tunneling schemes (GRE, IP-in-IP, and\n   IPsec)\
    \ per-tunnel state is completely confined to the VPN edge\n   devices.  Other\
    \ routers are unaware of the tunnels, and forward\n   according to the IP header.\
    \  For MPLS, per-tunnel state is needed,\n   since the top label in the label\
    \ stack must be examined and swapped\n   by intermediate LSRs.  The amount of\
    \ state required can be minimized\n   by hierarchical multiplexing, and by use\
    \ of multi-point to point\n   tunnels, as discussed below.\n   Another characteristic\
    \ is the tunneling overhead introduced.  With\n   IPsec the overhead may be considerable\
    \ as it may include, for\n   example, an ESP header, ESP trailer and an additional\
    \ IP header.  The\n   other mechanisms listed use less overhead, with MPLS being\
    \ the most\n   lightweight.  The overhead inherent in any tunneling mechanism\
    \ may\n   result in additional IP packet fragmentation, if the resulting packet\n\
    \   is too large to be carried by the underlying link layer.  As such it\n   is\
    \ important to report any reduced MTU sizes via mechanisms such as\n   path MTU\
    \ discovery in order to avoid fragmentation wherever possible.\n   Yet another\
    \ characteristic is something we might call \"transparency\n   to the Internet\"\
    .  IP-based encapsulation can carry be used to carry\n   a packet anywhere in\
    \ the Internet.  MPLS encapsulation can only be\n   used to carry a packet on\
    \ IP networks that support MPLS.  If an\n   MPLS-encapsulated packet must cross\
    \ the networks of multiple SPs, the\n   adjacent SPs must bilateral agreements\
    \ to accept MPLS packets from\n   each other.  If only a portion of the path across\
    \ the backbone lacks\n   MPLS support, then an MPLS-in-IP encapsulation can be\
    \ used to move\n   the MPLS packets across that part of the backbone.  However,\
    \ this\n   does add complexity.  On the other hand, MPLS has efficiency\n   advantages,\
    \ particularly in environments where encapsulations may\n   need to be nested.\n\
    \   Transparency to the Internet is sometimes a requirement, but\n   sometimes\
    \ not.  This depends on the sort of service which a SP is\n   offering to its\
    \ customer.\n"
- title: 4.3.2.  Tunnel Multiplexing
  contents:
  - "4.3.2.  Tunnel Multiplexing\n   When a tunneled packet arrives at the tunnel\
    \ egress, it must be\n   possible to infer the packet's VPN from its encapsulation\
    \ header.  In\n   MPLS encapsulations, this must be inferred from the packet's\
    \ label\n   stack.  In IP-based encapsulations, this can be inferred from some\n\
    \   combination of the IP source address, the IP destination address, and\n  \
    \ a \"multiplexing field\" in the encapsulation header.  The multiplexing\n  \
    \ field might be one which was explicitly designed for multiplexing, or\n   one\
    \ that wasn't originally designed for this but can be pushed into\n   service\
    \ as a multiplexing field.  For example:\n   o GRE: Packets associated to VPN\
    \ by source IP address, destination IP\n     address, and Key field, although\
    \ the key field was originally\n     intended for authentication.\n   o IP-in-IP:\
    \ Packets associated to VPN by IP destination address in\n     outer header.\n\
    \   o IPsec: Packets associated to VPN by IP source address, IP\n     destination\
    \ address, and SPI field.\n   o MPLS: Packets associated to VPN by label stack.\n\
    \   Note that IP-in-IP tunneling does not have a real multiplexing field,\n  \
    \ so a different IP destination address must be used for every VPN\n   supported\
    \ by a given PE.  In the other IP-based encapsulations, a\n   given PE need have\
    \ only a single IP address, and the multiplexing\n   field is used to distinguish\
    \ the different VPNs supported by a PE.\n   Thus the IP-in-IP solution has the\
    \ significant disadvantage that it\n   requires the allocation and assignment\
    \ of a potentially large number\n   of IP addresses, all of which have to be reachable\
    \ via backbone\n   routing.\n   In the following, we will use the term \"multiplexing\
    \ field\" to refer\n   to whichever field in the encapsulation header must is\
    \ used to\n   distinguish different VPNs at a given PE.  In the IP-in-IP\n   encapsulation,\
    \ this is the destination IP address field, in the other\n   encapsulations it\
    \ is a true multiplexing field.\n"
- title: 4.3.3.  Tunnel Establishment
  contents:
  - "4.3.3.  Tunnel Establishment\n   When tunnels are established, the tunnel endpoints\
    \ must agree on the\n   multiplexing field values which are to be used to indicate\
    \ that\n   particular packets are in particular VPNs.  The use of \"well known\"\
    \n   or explicitly provisioned values would not scale well as the number\n   of\
    \ VPNs increases.  So it is necessary to have some sort of protocol\n   interaction\
    \ in which the tunnel endpoints agree on the multiplexing\n   field values.\n\
    \   For some tunneling protocols, setting up a tunnel requires an\n   explicit\
    \ exchange of signaling messages.  Generally the multiplexing\n   field values\
    \ would be agreed upon as part of this exchange.  For\n   example, if an IPsec\
    \ encapsulation is used, the SPI field plays the\n   role of the multiplexing\
    \ field, and IKE signaling is used to\n   distribute the SPI values; if an MPLS\
    \ encapsulation is used, LDP,\n   CR-LDP or RSVP-TE can be used to distribute\
    \ the MPLS label value used\n   as the multiplexing field.  Information about\
    \ the identity of the VPN\n   with which the tunnel is to be associated needs\
    \ to be exchanged as\n   part of the signaling protocol (e.g., a VPN-ID can be\
    \ carried in the\n   signaling protocol).  An advantage of this approach is that\n\
    \   per-tunnel security, QoS and other characteristics may also be\n   negotiable\
    \ via the signaling protocol.  A disadvantage is that the\n   signaling imposes\
    \ overhead, which may then lead to scalability\n   considerations, discussed further\
    \ below.\n   For some tunneling protocols, there is no explicit protocol\n   interaction\
    \ that sets up the tunnel, and the multiplexing field\n   values must be exchanged\
    \ in some other way.  For example, for MPLS\n   tunnels, MPLS labels can be piggybacked\
    \ on the protocols used to\n   distribute VPN routes or VPN membership information.\
    \  GRE and\n   IP-in-IP have no associated signaling protocol, and thus by necessity\n\
    \   the multiplexing values are distributed via some other mechanism,\n   such\
    \ as via configuration, control protocol, or piggybacked in some\n   manner on\
    \ a VPN membership protocol.\n   The resources used by the different tunneling\
    \ establishment\n   mechanisms may vary.  With a full mesh VPN topology, and explicit\n\
    \   signaling, each VPN edge device has to establish a tunnel to all the\n   other\
    \ VPN edge devices for in each VPN.  The resources needed for\n   this on a VPN\
    \ edge device may be significant, and issues such as the\n   time needed to recover\
    \ following a device failure may need to be\n   taken into account, as the time\
    \ to recovery includes the time needed\n   to reestablish a large number of tunnels.\n"
- title: 4.3.4.  Scaling and Hierarchical Tunnels
  contents:
  - "4.3.4.  Scaling and Hierarchical Tunnels\n   If tunnels require state to be maintained\
    \ in the core of the network,\n   it may not be feasible to set up per-VPN tunnels\
    \ between all adjacent\n   devices that are adjacent in some VPN topology.  This\
    \ would violate\n   the principle that there is no per-VPN state in the core of\
    \ the\n   network, and would make the core scale poorly as the number of VPNs\n\
    \   increases.  For example, MPLS tunnels require that core network\n   devices\
    \ maintain state for the topmost label in the label stack.  If\n   every core\
    \ router had to maintain one or more labels for every VPN,\n   scaling would be\
    \ very poor.\n   There are also scaling considerations related to the use of explicit\n\
    \   signaling for tunnel establishment.  Even if the tunneling protocol\n   does\
    \ not maintain per tunnel state in the core, the number of tunnels\n   that a\
    \ single VPN edge device needs to handle may be large, as this\n   grows according\
    \ to the number of VPNs and the number of neighbors per\n   VPN.  One way to reduce\
    \ the number of tunnels in a network is to use\n   a VPN topology other than a\
    \ full mesh.  However this may not always\n   be desirable, and even with hub\
    \ and spoke topologies the hubs VPN\n   edge devices may still need to handle\
    \ large numbers of tunnels.\n   If the core routers need to maintain any per-tunnel\
    \ state at all,\n   scaling can be greatly improved by using hierarchical tunnels.\
    \  One\n   tunnel can be established between each pair of VPN edge devices, and\n\
    \   multiple VPN-specific tunnels can then be carried through the single\n   \"\
    outer\" tunnel.  Now the amount of state is dependent only on the\n   number of\
    \ VPN edge devices, not on the number of VPNs.  Scaling can\n   be further improved\
    \ by having the outer tunnels be\n   multipoint-to-point \"merging\" tunnels.\
    \  Now the amount of state to be\n   maintained in the core is on the order of\
    \ the number of VPN edge\n   devices, not on the order of the square of that number.\
    \  That is, the\n   amount of tunnel state is roughly equivalent to the amount\
    \ of state\n   needed to maintain IP routes to the VPN edge devices.  This is\
    \ almost\n   (if not quite) as good as using tunnels which do not require any\n\
    \   state to be maintained in the core.\n   Using hierarchical tunnels may also\
    \ reduce the amount of state to be\n   maintained in the VPN edge devices, particularly\
    \ if maintaining the\n   outer tunnels requires more state than maintaining the\
    \ per-VPN\n   tunnels that run inside the outer tunnels.\n   There are other factors\
    \ relevant to determining the number of VPN\n   edge to VPN edge \"outer\" tunnels\
    \ to use.  While using a single such\n   tunnel has the best scaling properties,\
    \ using more than one may allow\n   different QoS capabilities or different security\
    \ characteristics to\n   be used for different traffic flows (from the same or\
    \ from different\n   VPNs).\n   When tunnels are used hierarchically, the tunnels\
    \ in the hierarchy\n   may all be of the same type (e.g., an MPLS label stack)\
    \ or they may\n   be of different types (e.g., a GRE tunnel carried inside an\
    \ IPsec\n   tunnel).\n   One example using hierarchical tunnels is the establishment\
    \ of a\n   number of different IPsec security associations, providing different\n\
    \   levels of security between a given pair of VPN edge devices.  Per-VPN\n  \
    \ GRE tunnels can then be grouped together and then carried over the\n   appropriate\
    \ IPsec tunnel, rather than having a separate IPsec tunnel\n   per-VPN.  Another\
    \ example is the use of an MPLS label stack.  A\n   single PE-PE LSP is used to\
    \ carry all the per-VPN LSPs.  The\n   mechanisms used for label establishment\
    \ are typically different.  The\n   PE-PE LSP could be established using LDP,\
    \ as part or normal backbone\n   operation, with the per-VPN LSP labels established\
    \ by piggybacking on\n   VPN routing (e.g., using BGP) discussed in sections 3.3.1.3\
    \ and 4.1.\n"
- title: 4.3.5.  Tunnel Maintenance
  contents:
  - "4.3.5.  Tunnel Maintenance\n   Once a tunnel is established it is necessary to\
    \ know that the tunnel\n   is operational.  Mechanisms are needed to detect tunnel\
    \ failures, and\n   to respond appropriately to restore service.\n   There is\
    \ a potential issue regarding propagation of failures when\n   multiple tunnels\
    \ are multiplexed hierarchically.  Suppose that\n   multiple VPN-specific tunnels\
    \ are multiplexed inside a single PE to\n   PE tunnel.  In this case, suppose\
    \ that routing for the VPN is done\n   over the VPN-specific tunnels (as may be\
    \ the case for CE-based and VR\n   approaches).  Suppose that the PE to PE tunnel\
    \ fails.  In this case\n   multiple VPN-specific tunnels may fail, and layer 3\
    \ routing may\n   simultaneously respond for each VPN using the failed tunnel.\
    \  If the\n   PE to PE tunnel is subsequently restored, there may then be multiple\n\
    \   VPN-specific tunnels and multiple routing protocol instances which\n   also\
    \ need to recover.  Each of these could potentially require some\n   exchange\
    \ of control traffic.\n   When a tunnel fails, if the tunnel can be restored quickly,\
    \ it might\n   therefore be preferable to restore the tunnel without any response\
    \ by\n   high levels (such as other tunnels which were multiplexed inside the\n\
    \   failed tunnels).  By having high levels delay response to a lower\n   level\
    \ failed tunnel, this may limit the amount of control traffic\n   needed to completely\
    \ restore correct service.  However, if the failed\n   tunnel cannot be quickly\
    \ restored, then it is necessary for the\n   tunnels or routing instances multiplexed\
    \ over the failed tunnel to\n   respond, and preferable for them to respond quickly\
    \ and without\n   explicit action by network operators.\n   With most layer 3\
    \ provider-provisioned CE-based VPNs and the VR\n   scheme, a per-VPN instance\
    \ of routing is running over the tunnel,\n   thus any loss of connectivity between\
    \ the tunnel endpoints will be\n   detected by the VPN routing instance.  This\
    \ allows rapid detection of\n   tunnel failure.  Careful adjustment of timers\
    \ might be needed to\n   avoid failure propagation as discussed the above.  With\
    \ the\n   aggregated routing scheme, there isn't a per-VPN instance of routing\n\
    \   running over the tunnel, and therefore some other scheme to detect\n   loss\
    \ of connectivity is needed in the event that the tunnel cannot be\n   rapidly\
    \ restored.\n   Failure of connectivity in a tunnel can be very difficult to detect\n\
    \   reliably.  Among the mechanisms that can be used to detect failure\n   are\
    \ loss of the underlying connectivity to the remote endpoint (as\n   indicated,\
    \ e.g., by \"no IP route to host\" or no MPLS label), timeout\n   of higher layer\
    \ \"hello\" mechanisms (e.g., IGP hellos, when the tunnel\n   is an adjacency\
    \ in some IGP), and timeout of keep alive mechanisms in\n   the tunnel establishment\
    \ protocols (if any).  However, none of these\n   techniques provides completely\
    \ reliable detection of all failure\n   modes.  Additional monitoring techniques\
    \ may also be necessary.\n   With hierarchical tunnels it may suffice to only\
    \ monitor the\n   outermost tunnel for loss of connectivity.  However there may\
    \ be\n   failure modes in a device where the outermost tunnel is up but one of\n\
    \   the inner tunnels is down.\n"
- title: 4.3.6.  Survey of Tunneling Techniques
  contents:
  - "4.3.6.  Survey of Tunneling Techniques\n   Tunneling mechanisms provide isolated\
    \ communication between two CE-PE\n   devices.  Available tunneling mechanisms\
    \ include (but are not limited\n   to): GRE [RFC2784] [RFC2890], IP-in-IP encapsulation\
    \ [RFC2003]\n   [RFC2473], IPsec [RFC2401] [RFC2402], and MPLS [RFC3031] [RFC3035].\n\
    \   Note that the following subsections address tunnel overhead to\n   clarify\
    \ the risk of fragmentation.  Some SP networks contain layer 2\n   switches that\
    \ enforce the standard/default MTU of 1500 bytes.  In\n   this case, any encapsulation\
    \ whatsoever creates a significant risk of\n   fragmentation.  However, layer\
    \ 2 switch vendors are in general aware\n   of IP tunneling as well as stacked\
    \ VLAN overhead, thus many switches\n   practically allow an MTU of approximately\
    \ 1512 bytes now.  In this\n   case, up to 12 bytes of encapsulation can be used\
    \ before there is any\n   risk of fragmentation.  Furthermore, to improve TCP\
    \ and NFS\n   performance, switches that support 9K bytes \"jumbo frames\" are\
    \ also\n   on the market.  In this case, there is no risk of fragmentation.\n"
- title: 4.3.6.1.  GRE [RFC2784] [RFC2890]
  contents:
  - "4.3.6.1.  GRE [RFC2784] [RFC2890]\n   Generic Routing Encapsulation (GRE) specifies\
    \ a protocol for\n   encapsulating an arbitrary payload protocol over an arbitrary\n\
    \   delivery protocol [RFC2784].  In particular, it can be used where\n   both\
    \ the payload and the delivery protocol are IP as is the case in\n   layer 3 VPNs.\
    \  A GRE tunnel is a tunnel whose packets are\n   encapsulated by GRE.\n   o Multiplexing\n\
    \     The GRE specification [RFC2784] does not explicitly support\n     multiplexing.\
    \  But the key field extension to GRE is specified in\n     [RFC2890] and it may\
    \ be used as a multiplexing field.\n   o QoS/SLA\n     GRE itself does not have\
    \ intrinsic QoS/SLA capabilities, but it\n     inherits whatever capabilities\
    \ exist in the delivery protocol (IP).\n     Additional mechanisms, such as Diffserv\
    \ or RSVP extensions\n     [RFC2746], can be applied.\n   o Tunnel setup and maintenance\n\
    \     There is no standard signaling protocol for setting up and\n     maintaining\
    \ GRE tunnels.\n   o Large MTUs and minimization of tunnel overhead\n     When\
    \ GRE encapsulation is used, the resulting packet consists of a\n     delivery\
    \ protocol header, followed by a GRE header, followed by the\n     payload packet.\
    \  When the delivery protocol is IPv4, and if the key\n     field is not present,\
    \ GRE encapsulation adds at least 28 bytes of\n     overhead (36 bytes if key\
    \ field extension is used.)\n   o Security\n     GRE encapsulation does not provide\
    \ any significant security.  The\n     optional key field can be used as a clear\
    \ text password to aid in\n     the detection of misconfigurations, but it does\
    \ not provide\n     integrity or authentication.  An SP network which supports\
    \ VPNs\n     must do extensive IP address filtering at its borders to prevent\n\
    \     spoofed packets from penetrating the VPNs.  If multi-provider VPNs\n   \
    \  are being supported, it may be difficult to set up these filters.\n"
- title: 4.3.6.2.  IP-in-IP Encapsulation [RFC2003] [RFC2473]
  contents:
  - "4.3.6.2.  IP-in-IP Encapsulation [RFC2003] [RFC2473]\n   IP-in-IP specifies the\
    \ format and procedures for IP-in-IP\n   encapsulation.  This allows an IP datagram\
    \ to be encapsulated within\n   another IP datagram.  That is, the resulting packet\
    \ consists of an\n   outer IP header, followed immediately by the payload packet.\
    \  There\n   is no intermediate header as in GRE.  [RFC2003] and [RFC2473] specify\n\
    \   IPv4 and IPv6 encapsulations respectively.  Once the encapsulated\n   datagram\
    \ arrives at the intermediate destination (as specified in the\n   outer IP header),\
    \ it is decapsulated, yielding the original IP\n   datagram, which is then delivered\
    \ to the destination indicated by the\n   original destination address field.\n\
    \   o Multiplexing\n     The IP-in-IP specifications don't explicitly support\
    \ multiplexing.\n     But if a different IP address is used for every VPN then\
    \ the IP\n     address field can be used for this purpose.  (See section 4.3.2\
    \ for\n     detail).\n   o QoS/SLA\n     IP-in-IP itself does not have intrinsic\
    \ QoS/SLA capabilities, but\n     of course it inherits whatever capabilities\
    \ exist for IP.\n     Additional mechanisms, such as RSVP extensions [RFC2764]\
    \ or\n     DiffServ extensions [RFC2983], may be used with it.\n   o Tunnel setup\
    \ and maintenance\n     There is no standard setup and maintenance protocol for\
    \ IP-in-IP.\n   o Large MTUs and minimization of tunnel overhead\n     When the\
    \ delivery protocol is IPv4, IP-in-IP adds at least 20 bytes\n     of overhead.\n\
    \   o Security\n     IP-in-IP encapsulation does not provide any significant security.\n\
    \     An SP network which supports VPNs must do extensive IP address\n     filtering\
    \ at its borders to prevent spoofed packets from\n     penetrating the VPNs. \
    \ If multi-provider VPNs are being supported,\n     it may be difficult to set\
    \ up these filters.\n"
- title: 4.3.6.3.  IPsec [RFC2401] [RFC2402] [RFC2406] [RFC2409]
  contents:
  - "4.3.6.3.  IPsec [RFC2401] [RFC2402] [RFC2406] [RFC2409]\n   IP Security (IPsec)\
    \ provides security services at the IP layer\n   [RFC2401].  It comprises authentication\
    \ header (AH) protocol\n   [RFC2402], encapsulating security payload (ESP) protocol\
    \ [RFC2406],\n   and Internet key exchange (IKE) protocol [RFC2409].  AH protocol\n\
    \   provides data integrity, data origin authentication, and an\n   anti-replay\
    \ service.  ESP protocol provides data confidentiality and\n   limited traffic\
    \ flow confidentiality.  It may also provide data\n   integrity, data origin authentication,\
    \ and an anti-replay service.\n   AH and ESP may be used in combination.\n   IPsec\
    \ may be employed in either transport or tunnel mode.  In\n   transport mode,\
    \ either an AH or ESP header is inserted immediately\n   after the payload packet's\
    \ IP header.  In tunnel mode, an IP packet\n   is encapsulated with an outer IP\
    \ packet header.  Either an AH or ESP\n   header is inserted between them.  AH\
    \ and ESP establish a\n   unidirectional secure communication path between two\
    \ endpoints, which\n   is called a security association.  In tunnel mode, PE-PE\
    \ tunnel (or a\n   CE-CE tunnel) consists of a pair of unidirectional security\n\
    \   associations.  The IPsec and IKE protocols are used for setting up\n   IPsec\
    \ tunnels.\n   o Multiplexing\n     The SPI field of AH and ESP is used to multiplex\
    \ security\n     associations (or tunnels) between two peer devices.\n   o QoS/SLA\n\
    \     IPsec itself does not have intrinsic QoS/SLA capabilities, but it\n    \
    \ inherits whatever mechanisms exist for IP.  Other mechanisms such\n     as \"\
    RSVP Extensions for IPsec Data Flows\" [RFC2207] or DiffServ\n     extensions\
    \ [RFC2983] may be used with it.\n   o Tunnel setup and maintenance\n     The\
    \ IPsec and IKE protocols are used for the setup and maintenance\n     of tunnels.\n\
    \   o Large MTUs and minimization of tunnel overhead\n     IPsec transport mode\
    \ adds at least 8 bytes of overhead.  IPsec\n     tunnel mode adds at least 28\
    \ bytes of overhead.  IPsec transport\n     mode adds minimal overhead.  In PE-based\
    \ PPVPNs, the processing\n     overhead of IPsec (due to its cryptography) may\
    \ limit the PE's\n     performance, especially if privacy is being provided; this\
    \ is not\n     generally an issue in CE-based PPVPNs.\n   o Security\n     When\
    \ IPsec tunneling is used in conjunction with IPsec's\n     cryptographic capabilities,\
    \ excellent authentication and integrity\n     functions can be provided.  Privacy\
    \ can also be optionally\n     provided.\n"
- title: 4.3.6.4.  MPLS [RFC3031] [RFC3032] [RFC3035]
  contents:
  - "4.3.6.4.  MPLS [RFC3031] [RFC3032] [RFC3035]\n   Multiprotocol Label Switching\
    \ (MPLS) is a method for forwarding\n   packets through a network.  Routers at\
    \ the edge of a network apply\n   simple labels to packets.  A label may be inserted\
    \ between the data\n   link and network headers, or may be carried in the data\
    \ link header\n   (e.g., the VPI/VCI field in an ATM header).  Routers in the\
    \ network\n   switch packets according to the labels, with minimal lookup overhead.\n\
    \   A path, or a tunnel in the PPVPN, is called a \"label switched path\n   (LSP)\"\
    .\n   o Multiplexing\n     LSPs may be multiplexed within other LSPs.\n   o QoS/SLA\n\
    \     MPLS does not have intrinsic QoS or SLA management mechanisms, but\n   \
    \  bandwidth may be allocated to LSPs, and their routing may be\n     explicitly\
    \ controlled.  Additional techniques such as DiffServ and\n     DiffServ aware\
    \ traffic engineering may be used with it [RFC3270]\n     [MPLS-DIFF-TE].  QoS\
    \ capabilities from IP may be inherited.\n   o Tunnel setup and maintenance\n\
    \     LSPs are set up and maintained by LDP (Label Distribution\n     Protocol),\
    \ RSVP (Resource Reservation Protocol) [RFC3209], or BGP.\n   o Large MTUs and\
    \ minimization of tunnel overhead.\n     MPLS encapsulation adds four bytes per\
    \ label.  VPN-2547BIS's\n     [VPN-2547BIS] approach uses at least two labels\
    \ for encapsulation\n     and adds minimal overhead.\n   o Encapsulation\n   \
    \  MPLS packets may optionally be encapsulated in IP or GRE, for cases\n     where\
    \ it is desirable to carry MPLS packets over an IP-only\n     infrastructure.\n\
    \   o Security\n     MPLS encapsulation does not provide any significant security.\
    \  An\n     SP which is providing VPN service can refuse to accept MPLS packets\n\
    \     from outside its borders.  This provides the same level of\n     assurance\
    \ as would be obtained via IP address filtering when\n     IP-based encapsulations\
    \ are used.  If a VPN is jointly provided by\n     multiple SPs, care should be\
    \ taken to ensure that a labeled packet\n     is accepted from a neighboring router\
    \ in another SP only if its top\n     label is one which was actually distributed\
    \ to that router.\n   o Applicability\n     MPLS is the only one of the encapsulation\
    \ techniques that cannot be\n     guaranteed to run over any IP network.  Hence\
    \ it would not be\n     applicable when transparency to the Internet is a requirement.\n\
    \     If the VPN backbone consists of several cooperating SP networks\n     which\
    \ support MPLS, then the adjacent networks may support MPLS at\n     their interconnects.\
    \  If two cooperating SP networks which support\n     MPLS are separated by a\
    \ third which does not support MPLS, then\n     MPLS-in-IP or MPLS-in-IPsec tunneling\
    \ may be done between them.\n"
- title: 4.4.  PE-PE Distribution of VPN Routing Information
  contents:
  - "4.4.  PE-PE Distribution of VPN Routing Information\n   In layer 3 PE-based VPNs,\
    \ PE devices examine the IP headers of\n   packets they receive from the customer\
    \ networks.  Forwarding is based\n   on routing information received from the\
    \ customer network.  This\n   implies that the PE devices need to participate\
    \ in some manner in\n   routing for the customer network.  Section 3.3 discussed\
    \ how routing\n   would be done in the customer network, including the customer\n\
    \   interface.  In this section, we discuss ways in which the routing\n   information\
    \ from a particular VPN may be passed, over the shared VPN\n   backbone, among\
    \ the set of PEs attaching to that VPN.\n   The PEs needs to distribute two types\
    \ of routing information to each\n   other: (i) Public Routing: routing information\
    \ which specifies how to\n   reach addresses on the VPN backbone (i.e., \"public\
    \ addresses\"); call\n   this \"public routing information\" (ii) VPN Routing:\
    \ routing\n   information obtained from the CEs, which specifies how to reach\n\
    \   addresses (\"private addresses\") that are in the VPNs.\n   The way in which\
    \ routing information in the first category is\n   distributed is outside the\
    \ scope of this document; we discuss only\n   the distribution of routing information\
    \ in the second category.  Of\n   course, one of the requirements for distributing\
    \ VPN routing\n   information is that it be kept separate and distinct from the\
    \ public\n   information.  Another requirement is that the distribution of VPN\n\
    \   routing information not destabilize or otherwise interfere with the\n   distribution\
    \ of public routing information.\n   Similarly, distribution of VPN routing information\
    \ associated with\n   one VPN should not destabilize or otherwise interfere with\
    \ the\n   operation of other VPNs.  These requirements are, for example,\n   relevant\
    \ in the case that a private network might be suffering from\n   instability or\
    \ other problems with its internal routing, which might\n   be propagated to the\
    \ VPN used to support that private network.\n   Note that this issue does not\
    \ arise in CE-based VPNs, as in CE-based\n   VPNs, the PE devices do not see packets\
    \ from the VPN until after the\n   packets haven been encapsulated in an outer\
    \ header that has only\n   public addresses.\n"
- title: 4.4.1.  Options for VPN Routing in the SP
  contents:
  - "4.4.1.  Options for VPN Routing in the SP\n   The following technologies can\
    \ be used for exchanging VPN routing\n   information discussed in sections 3.3.1.3\
    \ and 4.1.\n   o Static routing\n   o RIP [RFC2453]\n   o OSPF [RFC2328]\n   o\
    \ BGP-4 [RFC1771]\n"
- title: 4.4.2.  VPN Forwarding Instances (VFIs)
  contents:
  - "4.4.2.  VPN Forwarding Instances (VFIs)\n   In layer 3 PE-based VPNs, the PE\
    \ devices receive unencapsulated IP\n   packets from the CE devices, and the PE\
    \ devices use the IP\n   destination addresses in these packets to help make their\
    \ forwarding\n   decisions.  In order to do this properly, the PE devices must\
    \ obtain\n   routing information from the customer networks.  This implies that\n\
    \   the PE device participates in some manner in the customer network's\n   routing.\n\
    \   In layer 3 PE-based VPNs, a single PE device connected to several CE\n   devices\
    \ that are in the same VPN, and it may also be connected to CE\n   devices of\
    \ different VPNs.  The route which the PE chooses for a\n   given IP destination\
    \ address in a given packet will depend on the VPN\n   from which the packet was\
    \ received.  A PE device must therefore have\n   a separate forwarding table for\
    \ each VPN to which it is attached.  We\n   refer to these forwarding tables as\
    \ \"VPN Forwarding Instances\"\n   (VFIs), as defined in section 2.1.\n   A VFI\
    \ contains routes to locally attached VPN sites, as well as\n   routes to remote\
    \ VPN sites.  Section 4.4 discusses the way in which\n   routes to remote sites\
    \ are obtained.\n   Routes to local sites may be obtained in several ways.  One\
    \ way is to\n   explicitly configure static routes into the VFI.  This can be\
    \ useful\n   in simple deployments, but it requires that one or more devices in\n\
    \   the customer's network be configured with static routes (perhaps just\n  \
    \ a default route), so that traffic will be directed from the site to\n   the\
    \ PE device.\n   Another way is to have the PE device be a routing peer of the\
    \ CE\n   device, in a routing algorithm such as RIP, OSPF, or BGP.  Depending\n\
    \   on the deployment scenario, the PE might need to advertise a large\n   number\
    \ of routes to each CE (e.g., all the routes which the PE\n   obtained from remote\
    \ sites in the CE's VPN), or it might just need to\n   advertise a single default\
    \ route to the CE.\n   A PE device uses some resources in proportion to the number\
    \ of VFIs\n   that it has, particularly if a distinct dynamic routing protocol\n\
    \   instance is associated with each VFI.  A PE device also uses some\n   resources\
    \ in proportion to the total number of routes it supports,\n   where the total\
    \ number of routes includes all the routes in all its\n   VFIs, and all the public\
    \ routes.  These scaling factors will limit\n   the number of VPNs which a single\
    \ PE device can support.\n   When dynamic routing is used between a PE and a CE,\
    \ it is not\n   necessarily the case that each VFI is associated with a single\n\
    \   routing protocol instance.  A single routing protocol instance may\n   provide\
    \ routing information for multiple VFIs, and/or multiple\n   routing protocol\
    \ instances might provide information for a single\n   VFI.  See sections 4.4.3,\
    \ 4.4.4, 3.3.1, and 3.3.1.3 for details.\n   There are several options for how\
    \ VPN routes are carried between the\n   PEs, as discussed below.\n"
- title: 4.4.3.  Per-VPN Routing
  contents:
  - "4.4.3.  Per-VPN Routing\n   One option is to operate separate instances of routing\
    \ protocols\n   between the PEs, one instance for each VPN.  When this is done,\n\
    \   routing protocol packets for each customer network need to be\n   tunneled\
    \ between PEs.  This uses the same tunneling method, and\n   optionally the same\
    \ tunnels, as is used for transporting VPN user\n   data traffic between PEs.\n\
    \   With per-VPN routing, a distinct routing instance corresponding to\n   each\
    \ VPN exists within the corresponding PE device.  VPN-specific\n   tunnels are\
    \ set up between PE devices (using the control mechanisms\n   that were discussed\
    \ in sections 3 and 4).  Logically these tunnels\n   are between the VFIs which\
    \ are within the PE devices.  The tunnels\n   then used as if they were normal\
    \ links between normal routers.\n   Routing protocols for each VPN operate between\
    \ VFIs and the routers\n   within the customer network.\n   This approach establishes,\
    \ for each VPN, a distinct \"control plane\"\n   operating across the VPN backbone.\
    \  There is no sharing of control\n   plane by any two VPNs, nor is there any\
    \ sharing of control plane by\n   the VPN routing and the public routing.  With\
    \ this approach each PE\n   device can logically be thought of as consisting of\
    \ multiple\n   independent routers.\n   The multiple routing instances within\
    \ the PE device may be separate\n   processes, or may be in the same process with\
    \ different data\n   structures.  Similarly, there may be mechanisms internal\
    \ to the PE\n   devices to partition memory and other resources between routing\n\
    \   instances.  The mechanisms for implementing multiple routing\n   instances\
    \ within a single physical PE are outside of the scope of\n   this framework document,\
    \ and are also outside of the scope of other\n   standards documents.\n   This\
    \ approach tends to minimize the explicit interactions between\n   different VPNs,\
    \ as well as between VPN routing and public routing.\n   However, as long as the\
    \ independent logical routers share the same\n   hardware, there is some sharing\
    \ of resources, and interactions are\n   still possible.  Also, each independent\
    \ control plane has its\n   associated overheads, and this can raise issues of\
    \ scale.  For\n   example, the PE device must run a potentially large number of\n\
    \   independent routing \"decision processes,\" and must also maintain a\n   potentially\
    \ very large number of routing adjacencies.\n"
- title: 4.4.4.  Aggregated Routing Model
  contents:
  - "4.4.4.  Aggregated Routing Model\n   Another option is to use one single instance\
    \ of a routing protocol\n   for carrying VPN routing information between the PEs.\
    \  In this\n   method, the routing information for multiple different VPNs is\n\
    \   aggregated into a single routing protocol.\n   This approach greatly reduces\
    \ the number of routing adjacencies which\n   the PEs must maintain, since there\
    \ is no longer any need to maintain\n   more than one such adjacency between a\
    \ given pair of PEs.  If the\n   single routing protocol supports a hierarchical\
    \ route distribution\n   mechanism (such as BGP's \"route reflectors\"), the PE-PE\
    \ adjacencies\n   can be completely eliminated, and the number of backbone adjacencies\n\
    \   can be made into a small constant which is independent of the number\n   of\
    \ PE devices.  This improves the scaling properties.\n   Additional routing instances\
    \ may still be needed to support the\n   exchange of routing information between\
    \ the PE and its locally\n   attached CEs.  These can be eliminated, with a consequent\
    \ further\n   improvement in scalability, by using static routing on the PE-CE\n\
    \   interfaces, or possibly by having the PE-CE routing interaction use\n   the\
    \ same protocol instance that is used to distribute VPN routes\n   across the\
    \ VPN backbone (see section 4.4.4.2 for a way to do this).\n   With this approach,\
    \ the number of routing protocol instances in a PE\n   device does not depend\
    \ on the number of CEs supported by the PE\n   device, if the routing between\
    \ PE and CE devices is static or BGP-4.\n   However, CE and PE devices in a VPN\
    \ exchange route information inside\n   a VPN using a routing protocol except\
    \ for BGP-4, the number of\n   routing protocol entities in a PE device depends\
    \ on the number of CEs\n   supported by the PE device.\n   In principle it is\
    \ possible for routing to be aggregated using either\n   BGP or on an IGP.\n"
- title: 4.4.4.1.  Aggregated Routing with OSPF or IS-IS
  contents:
  - "4.4.4.1.  Aggregated Routing with OSPF or IS-IS\n   When supporting VPNs, it\
    \ is likely that there can be a large number\n   of VPNs supported within any\
    \ given SP network.  In general only a\n   small number of PE devices will be\
    \ interested in the operation of any\n   one VPN.  Thus while the total amount\
    \ of routing information related\n   to the various customer networks will be\
    \ very large, any one PE needs\n   to know about only a small number of such networks.\n\
    \   Generally SP networks use OSPF or IS-IS for interior routing within\n   the\
    \ SP network.  There are very good reasons for this choice, which\n   are outside\
    \ of the scope of this document.\n   Both OSPF and IS-IS are link state routing\
    \ protocols.  In link state\n   routing, routing information is distributed via\
    \ a flooding protocol.\n   The set of routing peers is in general not fully meshed,\
    \ but there is\n   a path from any router in the set to any other.  Flooding ensures\n\
    \   that routing information from any one router reaches all the others.\n   This\
    \ requires all routers in the set to maintain the same routing\n   information.\
    \  One couldn't withhold any routing information from a\n   particular peer unless\
    \ it is known that none of the peers further\n   downstream will need that information,\
    \ and in general this cannot be\n   known.\n   As a result, if one tried to do\
    \ aggregated routing by using OSPF,\n   with all the PEs in the set of routing\
    \ peers, all the PEs would end\n   up with the exact same routing information;\
    \ there is no way to\n   constrain the distribution of routing information to\
    \ a subset of the\n   PEs.  Given the potential magnitude of the total routing\
    \ information\n   required for supporting a large number of VPNs, this would have\n\
    \   unfortunate scaling implications.\n   In some cases VPNs may span multiple\
    \ areas within a provider, or span\n   multiple providers.  If VPN routing information\
    \ were aggregated into\n   the IGP used within the provider, then some method\
    \ would need to be\n   used to extend the reach of IGP routing information between\
    \ areas and\n   between SPs.\n"
- title: 4.4.4.2.  Aggregated Routing with BGP
  contents:
  - "4.4.4.2.  Aggregated Routing with BGP\n   In order to use BGP for aggregated\
    \ routing, the VPN routing\n   information must be clearly distinguished from\
    \ the public Internet\n   routing information.  This is typically done by making\
    \ use of BGP's\n   capability of handling multiple address families, and treating\
    \ the\n   VPN routes as being in a different address family than the public\n\
    \   Internet routes.  Typically a VPN route also carries attributes which\n  \
    \ depend on the particular VPN or VPNs to which that route belongs.\n   When BGP\
    \ is used for carrying VPN information, the total amount of\n   information carried\
    \ in BGP (including the Internet routes and VPN\n   routes) may be quite large.\
    \  As noted above, there may be a large\n   number of VPNs which are supported\
    \ by any particular provider, and\n   the total amount of routing information\
    \ associated with all VPNs may\n   be quite large.  However, any one PE will in\
    \ general only need to be\n   aware of a small number of VPNs.  This implies that\
    \ where VPN routing\n   information is aggregated into BGP, it is desirable to\
    \ be able to\n   limit which VPN information is distributed to which PEs.\n  \
    \ In \"Interior BGP\" (IBGP), routing information is not flooded; it is\n   sent\
    \ directly, over a TCP connection, to the peer routers (or to a\n   route reflector).\
    \  These peer routers (unless they are route\n   reflectors) are then not even\
    \ allowed to redistribute the information\n   to each other.  BGP also has a comprehensive\
    \ set of mechanisms for\n   constraining the routing information that any one\
    \ peer sends to\n   another, based on policies established by the network administration.\n\
    \   Thus IBGP satisfies one of the requirements for aggregated routing\n   within\
    \ a single SP network - it makes it possible to ensure that\n   routing information\
    \ relevant to a particular VPN is processed only by\n   the PE devices that attach\
    \ to that VPN.  All that is necessary is\n   that each VPN route be distributed\
    \ with one or more attributes which\n   identify the distribution policies.  Then\
    \ distribution can be\n   constrained by filtering against these attributes.\n\
    \   In \"Exterior BGP\" (EBGP), routing peers do redistribute routing\n   information\
    \ to each other.  However, it is very common to constrain\n   the distribution\
    \ of particular items of routing information so that\n   they only go to those\
    \ exterior peers who have a \"need to know,\"\n   although this does require a\
    \ priori knowledge of which paths may\n   validly lead to which addresses.  In\
    \ the case of VPN routing, if a\n   VPN is provided by a small set of cooperating\
    \ SPs, such constraints\n   can be applied to ensure that the routing information\
    \ relevant to\n   that VPN does not get distributed anywhere it doesn't need to\
    \ be.  To\n   the extent that a particular VPN is supported by a small number\
    \ of\n   cooperating SPs with private peering arrangements, this is\n   particularly\
    \ straightforward, as the set of EBGP neighbors which need\n   to know the routing\
    \ information from a particular VPN is easier to\n   determine.\n   BGP also has\
    \ mechanisms (such as \"Outbound Route Filtering,\" ORF)\n   which enable the\
    \ proper set of VPN routing distribution constraints\n   to be dynamically distributed.\
    \  This reduces the management burden of\n   setting up the constraints, and hence\
    \ improves scalability.\n   Within a single routing domain (in the layer 3 VPN\
    \ context, this\n   typically means within a single SP's network), it is common\
    \ to have\n   the IBGP routers peer directly with one or two route reflectors,\n\
    \   rather than having them peer directly with each other.  This greatly\n   reduces\
    \ the number of IBGP adjacencies which any one router must\n   support.  Further,\
    \ a route reflector does not merely redistribute\n   routing information, it \"\
    digests\" the information first, by running\n   its own decision processes.  Only\
    \ routes which survive the decision\n   process are redistributed.\n   As a result,\
    \ when route reflectors are used, the amount of routing\n   information carried\
    \ around the network, and in particular, the amount\n   of routing information\
    \ which any given router must receive and\n   process, is greatly reduced.  This\
    \ greatly increases the scalability\n   of the routing distribution system.\n\
    \   It has already been stated that a given PE has VPN routing\n   information\
    \ only for those PEs to which it is directly attached.  It\n   is similarly important,\
    \ for scalability, to ensure that no single\n   route reflector should have to\
    \ have all the routing information for\n   all VPNs.  It is after all possible\
    \ for the total number of VPN\n   routes (across all VPNs supported by an SP)\
    \ to exceed the number\n   which can be supported by a single route reflector.\
    \  Therefore, the\n   VPN routes may themselves be partitioned, with some route\
    \ reflectors\n   carrying one subset of the VPN routes and other route reflectors\n\
    \   carrying a different subset.  The route reflectors which carry the\n   public\
    \ Internet routes can also be completely separate from the route\n   reflectors\
    \ that carry the VPN routes.\n   The use of outbound route filters allows any\
    \ one PE and any one route\n   reflector to exchange information about only those\
    \ VPNs which the PE\n   and route reflector are both interested in.  This in turn\
    \ ensures\n   that each PE and each route reflector receives routing information\n\
    \   only about the VPNs which it is directly supporting.  Large SPs which\n  \
    \ support a large number of VPNs therefore can partition the\n   information which\
    \ is required for support of those VPNs.\n   Generally a PE device will be restricted\
    \ in the total number of\n   routes it can support, whether those are public Internet\
    \ routes or\n   VPN routes.  As a result, a PE device may be able to be attached\
    \ to a\n   larger number of VPNs if it does not also need to support Internet\n\
    \   routes.\n   The way in which VPN routes are partitioned among PEs and/or route\n\
    \   reflectors is a deployment issue.  With suitable deployment\n   procedures,\
    \ the limited capacity of these devices will not limit the\n   number of VPNs\
    \ that can be supported.\n   Similarly, whether a given PE and/or route reflector\
    \ contains\n   Internet routes as well as VPN routes is a deployment issue.  If\
    \ the\n   customer networks served by a particular PE do not need the Internet\n\
    \   access, then that PE does not need to be aware of the Internet\n   routes.\
    \  If some or all of the VPNs served by a particular PE do need\n   the Internet\
    \ access, but the PE does not contain Internet routes,\n   then the PE can maintain\
    \ a default route that routes all the Internet\n   traffic from that PE to a different\
    \ router within the SP network,\n   where that other router holds the full the\
    \ Internet routing table.\n   With this approach the PE device needs only a single\
    \ default route\n   for all the Internet routes.\n   For the reasons given above,\
    \ the BGP protocol seems to be a\n   reasonable protocol to use for distributing\
    \ VPN routing information.\n   Additional reasons for the use of BGP are:\n  \
    \ o BGP has been proven to be useful for distributing very large\n     amounts\
    \ of routing information; there isn't any routing\n     distribution protocol\
    \ which is known to scale any better.\n   o The same BGP instance that is used\
    \ for PE-PE distribution of VPN\n     routes can be used for PE-CE route distribution,\
    \ if CE-PE routing\n     is static or BGP.  PEs and CEs are really parts of distinct\n\
    \     Autonomous Systems, and BGP is particularly well-suited for\n     carrying\
    \ routing information between Autonomous Systems.\n   On the other hand, BGP is\
    \ also used for distributing public Internet\n   routes, and it is crucially important\
    \ that VPN route distributing not\n   compromise the distribution of public Internet\
    \ routes in any way.\n   This issue is discussed in the following section.\n"
- title: 4.4.5.  Scalability and Stability of Routing with Layer 3 PE-based VPNs
  contents:
  - "4.4.5.  Scalability and Stability of Routing with Layer 3 PE-based VPNs\n   For\
    \ layer 3 PE-based VPNs, there are likely to be cases where a\n   service provider\
    \ supports Internet access over the same link that is\n   used for VPN service.\
    \  Thus, a particular CE to PE link may carry\n   both private network IP packets\
    \ (for transmission between sites of\n   the private network using VPN services)\
    \ as well as public Internet\n   traffic (for transmission from the private site\
    \ to the Internet, and\n   for transmission to the private site from the Internet).\
    \  This\n   section looks at the scalability and stability of routing in this\n\
    \   case.  It is worth noting that this sort of issue may be applicable\n   where\
    \ per-VPN routing is used, as well as where aggregated routing is\n   used.\n\
    \   For layer 3 PE-based VPNs, it is necessary for the PE devices to be\n   able\
    \ to forward IP packets using the addresses spaces of the\n   supported private\
    \ networks, as well as using the full Internet\n   address space.  This implies\
    \ that PE devices might in some cases\n   participate in routing for the private\
    \ networks, as well as for the\n   public Internet.\n   In some cases the routing\
    \ demand on the PE might be low enough, and\n   the capabilities of the PE, might\
    \ be great enough, that it is\n   reasonable for the PE to participate fully in\
    \ routing for both\n   private networks and the public Internet.  For example,\
    \ the PE device\n   might participate in normal operation of BGP as part of the\
    \ global\n   Internet.  The PE device might also operate routing protocols (or\
    \ in\n   some cases use static routing) to exchange routes with CE devices.\n\
    \   For large installations, or where PE capabilities are more limited,\n   it\
    \ may be undesirable for the PE to fully participate in routing for\n   both VPNs\
    \ as well as the public Internet.  For example, suppose that\n   the total volume\
    \ of routes and routing instances supported by one PE\n   across multiple VPNs\
    \ is very large.  Suppose furthermore that one or\n   more of the private networks\
    \ suffers from routing instabilities, for\n   example resulting in a large number\
    \ of routing updates being\n   transmitted to the PE device.  In this case it\
    \ is important to\n   prevent such routing from causing any instability in the\
    \ routing used\n   in the global Internet.\n   In these cases it may be necessary\
    \ to partition routing, so that the\n   PE does not need to maintain as large\
    \ a collection of routes, and so\n   that the PE is not able to adversely effect\
    \ Internet routing.  Also,\n   given that the total number of route prefixes and\
    \ the total number of\n   routing instances which the PE needs to maintain might\
    \ be very large,\n   it may be desirable to limit the participation in Internet\
    \ routing\n   for those PEs which are supporting a large number of VPNs or which\n\
    \   are supporting large VPNs.\n   Consider a case where a PE is supporting a\
    \ very large number of VPNs,\n   some of which have a large number of sites. \
    \ To pick a VERY large\n   example, let's suppose 1000 VPNs, with an average of\
    \ 100 sites each,\n   plus 10 prefixes per site on average.  Consider that the\
    \ PE also\n   needs to be able to route traffic to the Internet in general.  In\n\
    \   this example the PE might need to support approximately 1,000,000\n   prefixes\
    \ for the VPNs, plus more than 100,000 prefixes for the\n   Internet.  If augmented\
    \ and aggregated routing is used, then this\n   implies a large number of routes\
    \ which may be advertised in a single\n   routing protocol (most likely BGP).\
    \  If the VR approach is used, then\n   there are also 100,000 neighbor adjacencies\
    \ in the various per-VPN\n   routing protocol instances.  In some cases this number\
    \ of routing\n   prefixes and/or this number of adjacencies might be difficult\
    \ to\n   support in one device.\n   In this case, an alternate approach is to\
    \ limit the PE's\n   participation in Internet routing to the absolute minimum\
    \ required:\n   Specifically the PE will need to know which Internet address prefixes\n\
    \   are reachable via directly attached CE devices.  All other Internet\n   routes\
    \ may be summarized into a single default route pointing to one\n   or more P\
    \ routers.  In many cases the P routers to which the default\n   routes are directed\
    \ may be the P routers to which the PE device is\n   directly attached (which\
    \ are the ones which it needs to use for\n   forwarding most Internet traffic).\
    \  Thus if there are M CE devices\n   directly connected to the PE, and if these\
    \ M CE devices are the next\n   hop for a total of N globally addressable Internet\
    \ address prefixes,\n   then the PE device would maintain N+1 routes corresponding\
    \ to\n   globally routable Internet addresses.\n   In this example, those PE devices\
    \ which provide VPN service run\n   routing to compute routes for the VPNs, but\
    \ don't operate Internet\n   routing, and instead use only a default route to\
    \ route traffic to all\n   Internet destinations (not counting the addresses which\
    \ are reachable\n   via directly attached CE devices).  The P routers need to\
    \ maintain\n   Internet routes, and therefore take part in Internet routing\n\
    \   protocols.  However, the P routers don't know anything about the VPN\n   routes.\n\
    \   In some cases the maximum number of routes and/or routing instances\n   supportable\
    \ via a single PE device may limit the number of VPNs which\n   can be supported\
    \ by that PE.  For example, in some cases this might\n   require that two different\
    \ PE devices be used to support VPN services\n   for a set of multiple CEs, even\
    \ if one PE might have had sufficient\n   throughput to handle the data traffic\
    \ from the full set of CEs.\n   Similarly, the amount of resources which any one\
    \ VPN is permitted to\n   use in a single PE might be restricted.\n   There will\
    \ be cases where it is not necessary to partition the\n   routing, since the PEs\
    \ will be able to maintain all VPN routes and\n   all Internet routes without\
    \ a problem.  However, it is important that\n   VPN approaches allow partitioning\
    \ to be used where needed in order to\n   prevent future scaling problems.  Again,\
    \ making the system scalable\n   is a matter of proper deployment.\n   It may\
    \ be wondered whether it is ever desirable to have both Internet\n   routing and\
    \ VPN routing running in a single PE device or route\n   reflector.  In fact,\
    \ if there is even a single system running both\n   Internet routing and VPN routing,\
    \ doesn't that raise the possibility\n   that a disruption within the VPN routing\
    \ system will cause a\n   disruption within the Internet routing system?\n   Certainly\
    \ this possibility exists in theory.  To minimize that\n   possibility, BGP implementations\
    \ which support multiple address\n   families should be organized so as to minimize\
    \ the degree to which\n   the processing and distribution of one address family\
    \ affects the\n   processing and distribution of another.  This could be done,\
    \ for\n   example, by suitable partitioning of resources.  This partitioning\n\
    \   may be helpful both to protect Internet routing from VPN routing, and\n  \
    \ to protect well behaved VPN customers from \"mis-behaving\" VPNs.  Or\n   one\
    \ could try to protect the Internet routing system from the VPN\n   routing system\
    \ by giving preference to the Internet routing.  Such\n   implementation issues\
    \ are outside the scope of this document.  If one\n   has inadequate confidence\
    \ in an implementation, deployment procedures\n   can be used, as explained above,\
    \ to separate the Internet routing\n   from the VPN routing.\n"
- title: 4.5.  Quality of Service, SLAs, and IP Differentiated Services
  contents:
  - "4.5.  Quality of Service, SLAs, and IP Differentiated Services\n   The following\
    \ technologies for QoS/SLA may be applicable to PPVPNs.\n"
- title: 4.5.1.  IntServ/RSVP [RFC2205] [RFC2208] [RFC2210] [RFC2211] [RFC2212]
  contents:
  - "4.5.1.  IntServ/RSVP [RFC2205] [RFC2208] [RFC2210] [RFC2211] [RFC2212]\n   Integrated\
    \ services, or IntServ for short, is a mechanism for\n   providing QoS/SLA by\
    \ admission control.  RSVP is used to reserve\n   network resources.  The network\
    \ needs to maintain a state for each\n   reservation.  The number of states in\
    \ the network increases in\n   proportion to the number of concurrent reservations.\n\
    \   In some cases, IntServ on the edge of a network (e.g., over the\n   customer\
    \ interface) may be mapped to DiffServ in the SP network.\n"
- title: 4.5.2.  DiffServ [RFC2474] [RFC2475]
  contents:
  - "4.5.2.  DiffServ [RFC2474] [RFC2475]\n   IP differentiated service, or DiffServ\
    \ for short, is a mechanism for\n   providing QoS/SLA by differentiating traffic.\
    \  Traffic entering a\n   network is classified into several behavior aggregates\
    \ at the network\n   edge and each is assigned a corresponding DiffServ codepoint.\
    \  Within\n   the network, traffic is treated according to its DiffServ codepoint.\n\
    \   Some behavior aggregates have already been defined.  Expedited\n   forwarding\
    \ behavior [RFC3246] guarantees the QoS, whereas assured\n   forwarding behavior\
    \ [RFC2597] differentiates traffic packet\n   precedence values.\n   When DiffServ\
    \ is used, network provisioning is done on a\n   per-traffic-class basis.  This\
    \ ensures a specific class of service\n   can be achieved for a class (assuming\
    \ that the traffic load is\n   controlled).  All packets within a class are then\
    \ treated equally\n   within an SP network.  Policing is done at input to prevent\
    \ any one\n   user from exceeding their allocation and therefore defeating the\n\
    \   provisioning for the class as a whole.  If a user exceeds their\n   traffic\
    \ contract, then the excess packets may optionally be\n   discarded, or may be\
    \ marked as \"over contract\".  Routers throughout\n   the network can then preferentially\
    \ discard over contract packets in\n   response to congestion, in order to ensure\
    \ that such packets do not\n   defeat the service guarantees intended for in contract\
    \ traffic.\n"
- title: 4.6.  Concurrent Access to VPNs and the Internet
  contents:
  - "4.6.  Concurrent Access to VPNs and the Internet\n   In some scenarios, customers\
    \ will need to concurrently have access to\n   their VPN network and to the public\
    \ Internet.\n   Two potential problems are identified in this scenario: the use\
    \ of\n   private addresses and the potential security threads.\n   o The use of\
    \ private addresses\n     The IP addresses used in the customer's sites will possibly\
    \ belong\n     to a private routing realm, and as such be unusable in the public\n\
    \     Internet.  This means that a network address translation function\n    \
    \ (e.g., NAT) will need to be implemented to allow VPN customers to\n     access\
    \ the Public Internet.\n     In the case of layer 3 PE-based VPNs, this translation\
    \ function\n     will be implemented in the PE to which the CE device is connected.\n\
    \     In the case of layer 3 provider-provisioned CE-based VPNs, this\n     translation\
    \ function will be implemented on the CE device itself.\n   o Potential security\
    \ threat\n     As portions of the traffic that flow to and from the public\n \
    \    Internet are not necessarily under the SP's nor the customer's\n     control,\
    \ some traffic analyzing function (e.g., a firewall\n     function) will be implemented\
    \ to control the traffic entering and\n     leaving the VPN.\n     In the case\
    \ of layer 3 PE-based VPNs, this traffic analyzing\n     function will be implemented\
    \ in the PE device (or in the VFI\n     supporting a specific VPN), while in the\
    \ case of layer 3 provider\n     provisioned CE-based VPNs, this function will\
    \ be implemented in the\n     CE device.\n   o Handling of a customer IP packet\
    \ destined for the Internet\n     In the case of layer 3 PE-based VPNs, an IP\
    \ packet coming from a\n     customer site will be handled in the corresponding\
    \ VFI.  If the IP\n     destination address in the packet's IP header belongs\
    \ to the\n     Internet, multiple scenarios are possible, based on the adapted\n\
    \     policy.  As a first possibility, when Internet access is not\n     allowed,\
    \ the packet will be dropped.  As a second possibility, when\n     (controlled)\
    \ Internet access is allowed, the IP packet will go\n     through the translation\
    \ function and eventually through the traffic\n     analyzing function before\
    \ further processing in the PE's global\n     Internet forwarding table.\n   Note\
    \ that different implementation choices are possible.  One can\n   choose to implement\
    \ the translation and/or the traffic analyzing\n   function in every VFI (or CE\
    \ device in the context of layer 3\n   provider-provisioned CE-based VPNs), or\
    \ alternatively in a subset or\n   even in only one VPN network element.  This\
    \ would mean that the\n   traffic to/from the Internet from/to any VPN site needs\
    \ to be routed\n   through that single network element (this is what happens in\
    \ a hub\n   and spoke topology for example).\n"
- title: 4.7.  Network and Customer Management of VPNs
  contents:
  - '4.7.  Network and Customer Management of VPNs

    '
- title: 4.7.1.  Network and Customer Management
  contents:
  - "4.7.1.  Network and Customer Management\n   Network and customer management systems\
    \ responsible for managing VPN\n   networks have several challenges depending\
    \ on the type of VPN network\n   or networks they are required to manage.\n  \
    \ For any type of provider-provisioned VPN it is useful to have one\n   place\
    \ where the VPN can be viewed and optionally managed as a whole.\n   The NMS may\
    \ therefore be a place where the collective instances of a\n   VPN are brought\
    \ together into a cohesive picture to form a VPN.  To\n   be more precise, the\
    \ instances of a VPN on their own do not form the\n   VPN; rather, the collection\
    \ of disparate VPN sites together forms the\n   VPN.  This is important because\
    \ VPNs are typically configured at the\n   edges of the network (i.e., PEs) either\
    \ through manual configuration\n   or auto-configuration.  This results in no\
    \ state information being\n   kept in within the \"core\" of the network.  Sometimes\
    \ little or no\n   information about other PEs is configured at any particular\
    \ PE.\n   Support of any one VPN may span a wide range of network equipment,\n\
    \   potentially including equipment from multiple implementors.  Allowing\n  \
    \ a unified network management view of the VPN therefore is simplified\n   through\
    \ use of standard management interfaces and models.  This will\n   also facilitate\
    \ customer self-managed (monitored) network devices or\n   systems.\n   In cases\
    \ where significant configuration is required whenever a new\n   service is provisioned,\
    \ it is important for scalability reasons that\n   the NMS provide a largely automated\
    \ mechanism for this operation.\n   Manual configuration of VPN services (i.e.,\
    \ new sites, or\n   re-provisioning existing ones), could lead to scalability\
    \ issues, and\n   should be avoided.  It is thus important for network operators\
    \ to\n   maintain visibility of the complete picture of the VPN through the\n\
    \   NMS system.  This must be achieved using standard protocols such as\n   SNMP,\
    \ XML, or LDAP.  Use of proprietary command-line interfaces has\n   the disadvantage\
    \ that proprietary interfaces do not lend themselves\n   to standard representations\
    \ of managed objects.\n   To achieve the goals outlined above for network and\
    \ customer\n   management, device implementors should employ standard management\n\
    \   interfaces to expose the information required to manage VPNs.  To\n   this\
    \ end, devices should utilize standards-based mechanisms such as\n   SNMP, XML,\
    \ or LDAP to achieve this goal.\n"
- title: 4.7.2.  Segregated Access of VPN Information
  contents:
  - "4.7.2.  Segregated Access of VPN Information\n   Segregated access of VPNs information\
    \ is important in that customers\n   sometimes require access to information in\
    \ several ways.  First, it\n   is important for some customers (or operators)\
    \ to access PEs, CEs or\n   P devices within the context of a particular VPN on\
    \ a per-VPN-basis\n   in order to access statistics, configuration or status information.\n\
    \   This can either be under the guise of general management,\n   operator-initiated\
    \ provisioning, or SLA verification (SP, customer or\n   operator).\n   Where\
    \ users outside of the SP have access to information from PE or P\n   devices,\
    \ managed objects within the managed devices must be\n   accessible on a per-VPN\
    \ basis in order to provide the customer, the\n   SP or the third party SLA verification\
    \ agent with a high degree of\n   security and convenience.\n   Security may require\
    \ authentication or encryption of network\n   management commands and information.\
    \  Information hiding may use\n   encryption or may isolate information through\
    \ a mechanism that\n   provides per-VPN access.  Authentication or encryption\
    \ of both\n   requests and responses for managed objects within a device may be\n\
    \   employed.  Examples of how this can be achieved include IPsec\n   tunnels,\
    \ SNMPv3 encryption for SNMP-based management, or encrypted\n   telnet sessions\
    \ for CLI-based management.\n   In the case of information isolation, any one\
    \ customer should only be\n   able to view information pertaining to its own VPN\
    \ or VPNs.\n   Information isolation can also be used to partition the space of\n\
    \   managed objects on a device in such a way as to make it more\n   convenient\
    \ for the SP to manage the device.  In certain deployments,\n   it is also important\
    \ for the SP to have access to information\n   pertaining to all VPNs, thus it\
    \ may be important for the SP to create\n   virtual VPNs within the management\
    \ domain which overlap across\n   existing VPNs.\n   If the user is allowed to\
    \ change the configuration of their VPN, then\n   in some cases customers may\
    \ make unanticipated changes or even\n   mistakes, thereby causing their VPN to\
    \ mis-behave.  This in turn may\n   require an audit trail to allow determination\
    \ of what went wrong and\n   some way to inform the carrier of the cause.\n  \
    \ The segregation and security access of information on a per-VPN basis\n   is\
    \ also important when the carrier of carrier's paradigm is employed.\n   In this\
    \ case it may be desirable for customers (i.e., sub-carriers or\n   VPN wholesalers)\
    \ to manage and provision services within their VPNs\n   on their respective devices\
    \ in order to reduce the management\n   overhead cost to the carrier of carrier's\
    \ SP.  In this case, it is\n   important to observe the guidelines detailed above\
    \ with regard to\n   information hiding, isolation and encryption.  It should\
    \ be noted\n   that there may be many flavors of information hiding and isolation\n\
    \   employed by the carrier of carrier's SP.  If the carrier of carriers\n   SP\
    \ does not want to grant the sub-carrier open access to all of the\n   managed\
    \ objects within their PEs or P routers, it is necessary for\n   devices to provide\
    \ network operators with secure and scalable per-VPN\n   network management access\
    \ to their devices.  For the reasons outlined\n   above, it therefore is desirable\
    \ to provide standard mechanisms for\n   achieving these goals.\n"
- title: 5.  Interworking Interface
  contents:
  - "5.  Interworking Interface\n   This section describes interworking between different\
    \ layer 3 VPN\n   approaches.  This may occur either within a single SP network,\
    \ or at\n   an interface between SP networks.\n"
- title: 5.1.  Interworking Function
  contents:
  - "5.1.  Interworking Function\n   Figure 2.5 (see section 2.1.3) illustrates a\
    \ case where one or more\n   PE devices sits at the logical interface between\
    \ two different layer\n   3 VPN approaches.  With this approach the interworking\
    \ function\n   occurs at a PE device which participates in two or more layer 3\
    \ VPN\n   approaches.  This might be physically located at the boundary between\n\
    \   service providers, or might occur at the logical interface between\n   different\
    \ approaches within a service provider.\n   With layer 3 VPNs, the PE devices\
    \ are in general layer 3 routers, and\n   are able to forward layer 3 packets\
    \ on behalf of one or more private\n   networks.  For example, it may be common\
    \ for a PE device supporting\n   layer 3 VPNs to contain multiple logical VFIs\
    \ (sections 1, 2, 3.3.1,\n   4.4.2) each of which supports forwarding and routing\
    \ for a private\n   network.\n   The PE which implements an interworking function\
    \ needs to participate\n   in the normal manner in the operation of multiple approaches\
    \ for\n   supporting layer 3 VPNs.  This involves the functions discussed\n  \
    \ elsewhere in this document, such as VPN establishment and\n   maintenance, VPN\
    \ tunneling, routing for the VPNs, and QoS\n   maintenance.\n   VPN establishment\
    \ and maintenance information, as well as VPN routing\n   information will need\
    \ to be passed between VPN approaches.  This\n   might involve passing of information\
    \ between approaches as part of\n   the interworking function.  Optionally this\
    \ might involve manual\n   configuration so that, for example, all of the participants\
    \ in the\n   VPN on one side of the interworking function considers the PE\n \
    \  performing the interworking function to be the point to use to\n   contact\
    \ a large number of systems (comprising all systems supported\n   by the VPN located\
    \ on the other side of the interworking function).\n"
- title: 5.2.  Interworking Interface
  contents:
  - "5.2.  Interworking Interface\n   Figure 2.6 (see section 2.1.3) illustrates a\
    \ case where interworking\n   is performed by use of tunnels between PE devices.\
    \  In this case each\n   PE device participates in the operation of one layer\
    \ 3 VPN approach.\n   Interworking between approaches makes use of per-VPN tunnels\
    \ set up\n   between PE.  Each PEs operates as if it is a normal PEs, and\n  \
    \ considers each tunnel to be associated with a particular VPN.\n   Information\
    \ can then be transmitted over the interworking interface\n   in the same manner\
    \ that it is transmitted over a CE to PE interface.\n   In some cases establishment\
    \ of the interworking interfaces may\n   require manual configuration, for example\
    \ to allow each PE to\n   determine which tunnels should be set up, and which\
    \ private network\n   is associated with each tunnel.\n"
- title: 5.2.1.  Tunnels at the Interworking Interface
  contents:
  - "5.2.1.  Tunnels at the Interworking Interface\n   In order to implement an interworking\
    \ interface between two SP\n   networks for supporting one or more PPVPN spanning\
    \ both SP networks,\n   a mechanism for exchanging customer data as well as associated\n\
    \   control data (e.g., routing data) should be provided.\n   Since PEs of SP\
    \ networks to be interworked may only communicate over\n   a network cloud, an\
    \ appropriate tunnel established through the\n   network cloud will be used for\
    \ exchanging data associated with the\n   PPVPN realized by interworked SP networks.\n\
    \   In this way, each interworking tunnel is assigned to an associated\n   layer\
    \ 3 PE-based VPN; in other words, a tunnel is terminated by a VFI\n   (associated\
    \ with the PPVPN) in a PE device.  This scenario results in\n   implementation\
    \ of traffic isolation for PPVPNs supported by an\n   Interworking Interface and\
    \ spanning multiple SP networks (in each SP\n   network, there is no restriction\
    \ in applied technology for providing\n   PPVPN so that both sides may adopt different\
    \ technologies).  The way\n   of the assignment of each tunnel for a PE-based\
    \ VPN is specific to\n   implementation technology used by the SP network that\
    \ is\n   inter-connected to the tunnel at the PE device.\n   The identifier of\
    \ layer 3 PE-based VPN at each end is meaningful only\n   in the context of the\
    \ specific technology of an SP network and need\n   not be understood by another\
    \ SP network interworking through the\n   tunnel.\n   The following tunneling\
    \ mechanisms may be used at the interworking\n   interface.  Available tunneling\
    \ mechanisms include (but are not\n   limited to): GRE, IP-in-IP, IP over ATM,\
    \ IP over FR, IPsec, and MPLS.\n   o GRE\n     The tunnels at interworking interface\
    \ may be provided by GRE\n     [RFC2784] with key and sequence number extensions\
    \ [RFC2890].\n   o IP-in-IP\n     The tunnels at interworking interface may be\
    \ provided by IP-in-IP\n     [RFC2003] [RFC2473].\n   o IP over ATM AAL5\n   \
    \  The tunnels at interworking interface may be provided by IP over\n     ATM\
    \ AAL5 [RFC2684] [RFC2685].\n   o IP over FR\n     The tunnels at interworking\
    \ interface may be provided by IP over\n     FR.\n   o IPsec\n     The tunnels\
    \ at interworking interface may be provided by IPsec\n     [RFC2401] [RFC2402].\n\
    \   o MPLS\n     The tunnels at interworking interface may be provided by MPLS\n\
    \     [RFC3031] [RFC3035].\n"
- title: 5.3.  Support of Additional Services
  contents:
  - "5.3.  Support of Additional Services\n   This subsection describes additional\
    \ usages for supporting QoS/SLA,\n   customer visible routing, and customer visible\
    \ multicast routing, as\n   services of layer 3 PE-based VPNs spanning multiple\
    \ SP networks.\n   o QoS/SLA\n     QoS/SLA management mechanisms for GRE, IP-in-IP,\
    \ IPsec, and MPLS\n     tunnels were discussed in sections 4.3.6 and 4.5.  See\
    \ these\n     sections for details.  FR and ATM are capable of QoS guarantee.\n\
    \     Thus, QoS/SLA may also be supported at the interworking interface.\n   o\
    \ Customer visible routing\n     As described in section 3.3, customer visible\
    \ routing enables the\n     exchange of unicast routing information between customer\
    \ sites\n     using a routing protocol such as OSPF, IS-IS, RIP, and BGP-4.  On\n\
    \     the interworking interface, routing packets, such as OSPF packets,\n   \
    \  are transmitted through a tunnel associated with a layer 3 PE-based\n     VPN\
    \ in the same manner as that for user data packets within the\n     VPN.\n   o\
    \ Customer visible multicast routing\n     Customer visible multicast routing\
    \ enables the exchange of\n     multicast routing information between customer\
    \ sites using a\n     routing protocol such as DVMRP and PIM.  On the interworking\n\
    \     interface, multicast routing packets are transmitted through a\n     tunnel\
    \ associated with a layer 3 PE-based VPN in the same manner as\n     that for\
    \ user data packets within the VPN.  This enables a\n     multicast tree construction\
    \ within the layer 3 PE-based VPN.\n"
- title: 5.4.  Scalability Discussion
  contents:
  - "5.4.  Scalability Discussion\n   This subsection discusses scalability aspect\
    \ of the interworking\n   scenario.\n   o Number of routing protocol instances\n\
    \     In the interworking scenario discussed in this section, the number\n   \
    \  of routing protocol instances and that of layer 3 PE-based VPNs are\n     the\
    \ same.  However, the number of layer 3 PE-based VPNs in a PE\n     device is\
    \ limited due to resource amount and performance of the PE\n     device.  Furthermore,\
    \ each tunnel is expected to require some\n     bandwidth, but total of the bandwidth\
    \ is limited by the capacity of\n     a PE device; thus, the number of the tunnels\
    \ is limited by the\n     capabilities of the PE.  This limit is not a critical\
    \ drawback.\n   o Performance of packet transmission\n     The interworking scenario\
    \ discussed in this section does not place\n     any additional burden on tunneling\
    \ technologies used at\n     interworking interface.  Since performance of packet\
    \ transmission\n     depends on a tunneling technology applied, it should be carefully\n\
    \     selected when provisioning interworking.  For example, IPsec places\n  \
    \   computational requirements for encryption/decryption.\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   Security is one of the key requirements concerning\
    \ VPNs.  In network\n   environments, the term security currently covers many\
    \ different\n   aspects of which the most important from a networking perspective\
    \ are\n   shortly discussed hereafter.\n   Note that the Provider-Provisioned\
    \ VPN requirements document explains\n   the different security requirements for\
    \ Provider-Provisioned VPNs in\n   more detail.\n"
- title: 6.1.  System Security
  contents:
  - "6.1.  System Security\n   Like in every network environment, system security\
    \ is the most\n   important security aspect that must be enforced.  Care must\
    \ be taken\n   that no unauthorized party can gain access to the network elements\n\
    \   that control the VPN functionality (e.g., PE and CE devices).\n   As the VPN\
    \ customers are making use of the shared SP's backbone, the\n   SP must ensure\
    \ the system security of its network elements and\n   management systems.\n"
- title: 6.2.  Access Control
  contents:
  - "6.2.  Access Control\n   When a network or parts of a network are private, one\
    \ of the\n   requirements is that access to that network (part) must be restricted\n\
    \   to a limited number of well-defined customers.  To accomplish this\n   requirement,\
    \ the responsible authority must control every possible\n   access to the network.\n\
    \   In the context of PE-based VPNs, the access points to a VPN must be\n   limited\
    \ to the interfaces that are known by the SP.\n"
- title: 6.3.  Endpoint Authentication
  contents:
  - "6.3.  Endpoint Authentication\n   When one receives data from a certain entity,\
    \ one would like to be\n   sure of the identity of the sending party.  One would\
    \ like to be sure\n   that the sending entity is indeed whom he or she claims\
    \ to be, and\n   that the sending entity is authorized to reach a particular\n\
    \   destination.\n   In the context of layer 3 PE-based VPNs, both the data received\
    \ by\n   the PEs from the customer sites via the SP network and destined for a\n\
    \   customer site should be authenticated.\n   Note that different methods for\
    \ authentication exist.  In certain\n   circumstances, identifying incoming packets\
    \ with specific customer\n   interfaces might be sufficient.  In other circumstances,\
    \ (e.g., in\n   temporary access (dial-in) scenarios), a preliminary authentication\n\
    \   phase might be requested.  For example, when PPP is used.  Or\n   alternatively,\
    \ an authentication process might need to be present in\n   every data packet\
    \ transmitted (e.g., in remote access via IPsec).\n   For layer 3 PE-based VPNs,\
    \ VPN traffic is tunneled from PE to PE and\n   the VPN tunnel endpoint will check\
    \ the origin of the transmitted\n   packet.  When MPLS is used for VPN tunneling,\
    \ the tunnel endpoint\n   checks whether the correct labels are used.  When IPsec\
    \ is used for\n   VPN tunneling, the tunnel endpoint can make use of the IPsec\n\
    \   authentication mechanisms.\n   In the context of layer 3 provider-provisioned\
    \ CE-based VPNs, the\n   endpoint authentication is enforced by the CE devices.\n"
- title: 6.4.  Data Integrity
  contents:
  - "6.4.  Data Integrity\n   When information is exchanged over a certain part of\
    \ a network, one\n   would like to be sure that the information that is received\
    \ by the\n   receiving party of the exchange is identical to the information that\n\
    \   was sent by the sending party of the exchange.\n   In the context of layer\
    \ 3 PE-based VPNs, the SP assures the data\n   integrity by ensuring the system\
    \ security of every network element.\n   Alternatively, explicit mechanisms may\
    \ be implemented in the used\n   tunneling technique (e.g., IPsec).\n   In the\
    \ context of layer 3 provider-provisioned CE-based VPNs, the\n   underlying network\
    \ that will tunnel the encapsulated packets will not\n   always be of a trusted\
    \ nature, and the CE devices that are\n   responsible for the tunneling will also\
    \ ensure the data integrity,\n   e.g., by making use of the IPsec architecture.\n"
- title: 6.5.  Confidentiality
  contents:
  - "6.5.  Confidentiality\n   One would like that the information that is being sent\
    \ from one party\n   to another is not received and not readable by other parties.\
    \  With\n   traffic flow confidentiality one would like that even the\n   characteristics\
    \ of the information sent is hidden from third parties.\n   Data privacy is the\
    \ confidentiality of the user data.\n   In the context of PPVPNs, confidentiality\
    \ is often seen as the basic\n   service offered, as the functionalities of a\
    \ private network are\n   offered over a shared infrastructure.\n   In the context\
    \ of layer 3 PE-based VPNs, as the SP network (and more\n   precisely the PE devices)\
    \ participates in the routing and forwarding\n   of the customer VPN data, it\
    \ is the SP's responsibility to ensure\n   confidentiality.  The technique used\
    \ in PE-based VPN solutions is the\n   ensuring of PE to PE data separation. \
    \ By implementing VFI's in the\n   PE devices and by tunneling VPN packets through\
    \ the shared network\n   infrastructure between PE devices, the VPN data is always\
    \ kept in a\n   separate context and thus separated from the other data.\n   In\
    \ some situations, this data separation might not be sufficient.\n   Circumstances\
    \ where the VPN tunnel traverses other than only trusted\n   and SP controlled\
    \ network parts require stronger confidentiality\n   measures such as cryptographic\
    \ data encryption.  This is the case in\n   certain inter-SP VPN scenarios or\
    \ when the considered SP is on itself\n   a client of a third party network provider.\n\
    \   For layer 3 provider-provisioned CE-based VPNs, the SP network does\n   not\
    \ bare responsibility for confidentiality assurance, as the SP just\n   offers\
    \ IP connectivity.  The confidentiality will then be enforced at\n   the CE and\
    \ will lie in the tunneling (data separation) or in the\n   cryptographic encryption\
    \ (e.g., using IPsec) by the CE device.\n   Note that for very sensitive user\
    \ data (e.g., used in banking\n   operations) the VPN customer may not outsource\
    \ his data privacy\n   enforcement to a trusted SP.  In those situations, PE-to-PE\n\
    \   confidentiality will not be sufficient and end-to-end cryptographic\n   encryption\
    \ will be implemented by the VPN customer on its own private\n   equipment (e.g.,\
    \ using CE-based VPN technologies or cryptographic\n   encryption over the provided\
    \ VPN connectivity).\n"
- title: 6.6.  User Data and Control Data
  contents:
  - "6.6.  User Data and Control Data\n   An important remark is the fact that both\
    \ the user data and the VPN\n   control data must be protected.\n   Previous subsections\
    \ were focused on the protection of the user data,\n   but all the control data\
    \ (e.g., used to set up the VPN tunnels, used\n   to configure the VFI's or the\
    \ CE devices (in the context of layer 3\n   provider-provisioned CE-based VPNs))\
    \ will also be secured by the SP\n   to prevent deliberate misconfiguration of\
    \ provider-provisioned VPNs.\n"
- title: 6.7.  Security Considerations for Inter-SP VPNs
  contents:
  - "6.7.  Security Considerations for Inter-SP VPNs\n   In certain scenarios, a single\
    \ VPN will need to cross multiple SPs.\n   The fact that the edge-to-edge part\
    \ of the data path does not fall\n   under the control of the same entity can\
    \ have security implications,\n   for example with regards to endpoint authentication.\n\
    \   Another point is that the SPs involved must closely interact to avoid\n  \
    \ conflicting configuration information on VPN network elements (such\n   as VFIs,\
    \ PEs, CE devices) connected to the different SPs.\n"
- title: 'Appendix A: Optimizations for Tunnel Forwarding'
  contents:
  - 'Appendix A: Optimizations for Tunnel Forwarding

    '
- title: A.1.  Header Lookups in the VFIs
  contents:
  - "A.1.  Header Lookups in the VFIs\n   If layer 3 PE-based VPNs are implemented\
    \ in the most straightforward\n   manner, then it may be necessary for PE devices\
    \ to perform multiple\n   header lookups in order to forward a single data packet.\
    \  This\n   section discusses an example of how multiple lookups might be needed\n\
    \   with the most straightforward implementation.  Optimizations which\n   might\
    \ optionally be used to reduce the number of lookups are\n   discussed in the\
    \ following sections.\n   As an example, in many cases a tunnel may be set up\
    \ between VFIs\n   within PEs for support of a given VPN.  When a packet arrives\
    \ at the\n   egress PE, the PE may need to do a lookup on the outer header to\n\
    \   determine which VFI the packet belongs to.  The PE may then need to\n   do\
    \ a second lookup on the packet that was encapsulated across the VPN\n   tunnel,\
    \ using the forwarding table specific to that VPN, before\n   forwarding the packet.\n\
    \   For scaling reasons it may be desired in some cases to set up VPN\n   tunnels,\
    \ and then multiplex multiple VPN-specific tunnels within the\n   VPN tunnels.\n\
    \   This implies that in the most straightforward implementation three\n   header\
    \ lookups might be necessary in a single PE device: One lookup\n   may identify\
    \ that this is the end of the VPN tunnel (implying the\n   need to strip off the\
    \ associated header).  A second lookup may\n   identify that this is the end of\
    \ the VPN-specific tunnel.  This\n   lookup will result in stripping off the second\
    \ encapsulating header,\n   and will identify the VFI context for the final lookup.\
    \  The last\n   lookup will make use of the IP address space associated with the\
    \ VPN,\n   and will result in the packet being forwarded to the correct CE\n \
    \  within the correct VPN.\n"
- title: A.2.  Penultimate Hop Popping for MPLS
  contents:
  - "A.2.  Penultimate Hop Popping for MPLS\n   Penultimate hop popping is an optimization\
    \ which is described in the\n   MPLS architecture document [RFC3031].\n   Consider\
    \ the egress node of any MPLS LSP.  The node looks at the\n   label, and discovers\
    \ that it is the last node.  It then strips off\n   the label header, and looks\
    \ at the next header in the packet (which\n   may be an IP header, or which may\
    \ have another MPLS header in the\n   case that hierarchical nesting of LSPs is\
    \ used).  For the last node\n   on the LSP, the outer MPLS header doesn't actually\
    \ convey any useful\n   information (except for one situation discussed below).\n\
    \   For this reason, the MPLS standards allow the egress node to request\n   that\
    \ the penultimate node strip the MPLS header.  If requested, this\n   implies\
    \ that the penultimate node does not have a valid label for the\n   LSP, and must\
    \ strip the MPLS header.  In this case, the egress node\n   receives the packet\
    \ with the corresponding MPLS header already\n   stripped, and can forward the\
    \ packet properly without needing to\n   strip the header for the LSP which ends\
    \ at that egress node.\n   There is one case in which the MPLS header conveys\
    \ useful\n   information: This is in the case of a VPN-specific LSP terminating\
    \ at\n   a PE device.  In this case, the value of the label tells the PE which\n\
    \   LSP the packet is arriving on, which in turn is used to determine\n   which\
    \ VFI is used for the packet (i.e., which VPN-specific forwarding\n   table needs\
    \ to be used to forward the packet).\n   However, consider the case where multiple\
    \ VPN-specific LSPs are\n   multiplexed inside one PE-to-PE LSP.  Also, let's\
    \ suppose that in\n   this case the egress PE has chosen all incoming labels (for\
    \ all LSPs)\n   to be unique in the context of that PE.  This implies that the\
    \ label\n   associated with the PE-to-PE LSP is not needed by the egress node.\n\
    \   Rather, it can determine which VFI to use based on the VPN-specific\n   LSP.\
    \  In this case, the egress PE can request that the penultimate\n   LSR performs\
    \ penultimate label popping for the PE-to-PE LSP.  This\n   eliminates one header\
    \ lookup in the egress LSR.\n   Note that penultimate node label popping is only\
    \ applicable for VPN\n   standards which use multiple levels of LSPs.  Even in\
    \ this case\n   penultimate node label popping is only done when the egress node\n\
    \   specifically requests it from the penultimate node.\n"
- title: A.3.  Demultiplexing to Eliminate the Tunnel Egress VFI Lookup
  contents:
  - "A.3.  Demultiplexing to Eliminate the Tunnel Egress VFI Lookup\n   Consider a\
    \ VPN standard which makes use of MPLS as the tunneling\n   mechanism.  Any standard\
    \ for encapsulating VPN traffic inside LSPs\n   needs to specify what degree of\
    \ granularity is available in terms of\n   the manner in which user data traffic\
    \ is assigned to LSPs.  In other\n   words, for any given LSP, the ingress or\
    \ egress PE device needs to\n   know which LSPs need to be set up, and the ingress\
    \ PE needs to know\n   which set of VPN packets are allowed to be mapped to any\
    \ particular\n   LSP.\n   Suppose that a VPN standard allows some flexibility\
    \ in terms of the\n   mapping of packets to LSPs, and suppose that the standard\
    \ allows the\n   egress node to determine the granularity.  In this case the egress\n\
    \   node would need to have some way to indicate the granularity to the\n   ingress\
    \ node, so that the ingress node will know which packets can be\n   mapped to\
    \ each LSP.\n   In this case, the egress node might decide to have packets mapped\
    \ to\n   LSPs in a manner which simplifies the header lookup function at the\n\
    \   egress node.  For example, the egress node could determine which set\n   of\
    \ packets it will forward to a particular neighbor CE device.  The\n   egress\
    \ node can then specify that the set of IP packets which are to\n   use a particular\
    \ LSP correspond to that specific set of packets.  For\n   packets which arrive\
    \ on the specified LSP, the egress node does not\n   need to do a header lookup\
    \ on the VPN's customer address space: It\n   can just pop the MPLS header and\
    \ forward the packet to the\n   appropriate CE device.  If all LSPs are set up\
    \ accordingly, then the\n   egress node does not need to do any lookup for VPN\
    \ traffic which\n   arrives on LSPs from other PEs (in other words, the PE device\
    \ will\n   not need to do a second lookup in its role as an egress node).\n  \
    \ Note that PE devices will most likely also be an ingress routers for\n   traffic\
    \ going in the other direction.  The PE device will need to do\n   an address\
    \ lookup in the customer network's address space in its role\n   as an ingress\
    \ node.  However, in this direction the PE still needs to\n   do only a single\
    \ header lookup.\n   When used with MPLS tunnels, this optional optimization reduces\
    \ the\n   need for header lookups, at the cost of possibly increasing the\n  \
    \ number of label values which need to be assigned (since one label\n   would\
    \ need to be assigned for each next-hop CE device, rather than\n   just one label\
    \ for every VFI).\n   The same approach is also possible when other encapsulations\
    \ are\n   used, such as GRE [RFC2784] [RFC2890], IP-in-IP [RFC2003] [RFC2473],\n\
    \   or IPsec [RFC2401] [RFC2402].  This requires that distinct values are\n  \
    \ used for the multiplexing field in the tunneling protocol.  See\n   section\
    \ 4.3.2 for detail.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document is output of the framework document design\
    \ team of the\n   PPVPN WG.  The members of the design team are listed in the\n\
    \   \"contributors\" and \"author's addresses\" sections below.\n   However, sources\
    \ of this document are based on various inputs from\n   colleagues of authors\
    \ and contributors.  We would like to thank\n   Junichi Sumimoto, Kosei Suzuki,\
    \ Hiroshi Kurakami, Takafumi Hamano,\n   Naoto Makinae, Kenichi Kitami, Rajesh\
    \ Balay, Anoop Ghanwani, Harpreet\n   Chadha, Samir Jain, Lianghwa Jou, Vijay\
    \ Srinivasan, and Abbie\n   Matthews.\n   We would also like to thank Yakov Rekhter,\
    \ Scott Bradner, Dave\n   McDysan, Marco Carugi, Pascal Menezes, Thomas Nadeau,\
    \ and Alex Zinin\n   for their valuable comments and suggestions.\n"
- title: Normative References
  contents:
  - "Normative References\n   [PPVPN-REQ]    Nagarajan, A., Ed., \"Generic Requirements\
    \ for Provider\n                  Provisioned Virtual Private Networks (PPVPN)\"\
    , RFC\n                  3809, June 2004.\n   [L3VPN-REQ]    Carugi, M., Ed. and\
    \ D. McDysan, Ed., \"Service\n                  Requirements for Layer 3 Provider\
    \ Provisioned Virtual\n                  Private Networks (PPVPNs)\", RFC 4031,\
    \ April 2005.\n"
- title: Informative References
  contents:
  - "Informative References\n   [BGP-COM]      Sangli, S., et al., \"BGP Extended\
    \ Communities\n                  Attribute\", Work In Progress, February 2005.\n\
    \   [MPLS-DIFF-TE] Le Faucheur, F., Ed., \"Protocol extensions for support\n \
    \                 of Differentiated-Service-aware MPLS Traffic\n             \
    \     Engineering\", Work In Progress, December 2004.\n   [VPN-2547BIS]  Rosen,\
    \ E., et al., \"BGP/MPLS VPNs\", Work In Progress.\n   [VPN-BGP-OSPF] Rosen, E.,\
    \ et al., \"OSPF as the Provider/Customer Edge\n                  Protocol for\
    \ BGP/MPLS IP VPNs\", Work In Progress, May\n                  2005.\n   [VPN-CE]\
    \       De Clercq, J., et al., \"An Architecture for Provider\n              \
    \    Provisioned CE-based Virtual Private Networks using\n                  IPsec\"\
    , Work In Progress.\n   [VPN-DISC]     Ould-Brahim, H., et al., \"Using BGP as\
    \ an Auto-\n                  Discovery Mechanism for Layer-3 and Layer-2 VPNs,\"\
    \n                  Work In Progress.\n   [VPN-L2]       Andersson, L. and E.\
    \ Rosen, Eds., \"Framework for Layer\n                  2 Virtual Private Networks\
    \ (L2VPNs)\", Work In\n                  Progress.\n   [VPN-VR]       Knight,\
    \ P., et al., \"Network based IP VPN Architecture\n                  Using Virtual\
    \ Routers\", Work In Progress, July 2002.\n   [RFC1195]      Callon, R., \"Use\
    \ of OSI IS-IS for Routing in TCP/IP\n                  and Dual Environments\"\
    , RFC 1195, December 1990.\n   [RFC1771]      Rekhter, Y. and T. Li, \"A Border\
    \ Gateway Protocol 4\n                  (BGP-4)\", RFC 1771, March 1995.\n   [RFC1918]\
    \      Rekhter, Y., Moskowitz, B., Karrenberg, D., de Groot,\n               \
    \   G., and E. Lear, \"Address Allocation for Private\n                  Internets\"\
    , BCP 5, RFC 1918, February 1996.\n   [RFC1966]      Bates, T., \"BGP Route Reflection:\
    \ An alternative to\n                  full mesh IBGP\", RFC 1966, June 1996.\n\
    \   [RFC1997]      Chandra, R., Traina, P., and T. Li, \"BGP Communities\n   \
    \               Attribute\", RFC 1997, February 2001.\n   [RFC2003]      Perkins,\
    \ C., \"IP Encapsulation within IP\", RFC 2003,\n                  October 1996.\n\
    \   [RFC2205]      Braden, R., Zhang, L., Berson, S., Herzog, S., and S.\n   \
    \               Jamin, \"Resource ReSerVation Protocol (RSVP) --\n           \
    \       Version 1 Functional Specification\", RFC 2205,\n                  September\
    \ 1997.\n   [RFC2208]      Mankin, A., Ed., Baker, F., Braden, B., Bradner, S.,\n\
    \                  O'Dell, M., Romanow, A., Weinrib, A., and L. Zhang,\n     \
    \             \"Resource ReSerVation Protocol (RSVP) Version 1\n             \
    \     Applicability Statement Some Guidelines on\n                  Deployment\"\
    , RFC 2208, September 1997.\n   [RFC2210]      Wroclawski, J., \"The Use of RSVP\
    \ with IETF Integrated\n                  Services\", RFC 2210, September 1997.\n\
    \   [RFC2211]      Wroclawski, J., \"Specification of the Controlled-Load\n  \
    \                Network Element Service\", RFC 2211, September 1997.\n   [RFC2212]\
    \      Shenker, S., Partridge, C., and R. Guerin,\n                  \"Specification\
    \ of Guaranteed Quality of Service\", RFC\n                  2212, September 1997.\n\
    \   [RFC2207]      Berger, L. and T. O'Malley, \"RSVP Extensions for IPSEC\n \
    \                 Data Flows\", RFC 2207, September 1997.\n   [RFC2328]      Moy,\
    \ J., \"OSPF Version 2\", STD 54, RFC 2328, April\n                  1998.\n \
    \  [RFC2401]      Kent, S. and R. Atkinson, \"Security Architecture for\n    \
    \              the Internet Protocol\", RFC 2401, November 1998.\n   [RFC2402]\
    \      Kent, S. and R. Atkinson, \"IP Authentication Header\",\n             \
    \     RFC 2402, November 1998.\n   [RFC2406]      Kent, S. and R. Atkinson, \"\
    IP Encapsulating Security\n                  Payload (ESP)\", RFC 2406, November\
    \ 1998.\n   [RFC2409]      Harkins, D. and D. Carrel, \"The Internet Key Exchange\n\
    \                  (IKE)\", RFC 2409, November 1998.\n   [RFC2453]      Malkin,\
    \ G., \"RIP Version 2\", STD 56, RFC 2453,\n                  November 1994.\n\
    \   [RFC2473]      Conta, A. and S. Deering, \"Generic Packet Tunneling in\n \
    \                 IPv6 Specification\", RFC 2473, December 1998.\n   [RFC2474]\
    \      Nichols, K., Blake, S., Baker, F., and D. Black,\n                  \"\
    Definition of the Differentiated Services Field (DS\n                  Field)\
    \ in the IPv4 and IPv6 Headers\", RFC 2474,\n                  December 1998.\n\
    \   [RFC2475]      Blake, S., Black, D., Carlson, M., Davies, E., Wang,\n    \
    \              Z., and W. Weiss, \"An architecture for Differentiated\n      \
    \            Services\", RFC 2475, December 1998.\n   [RFC2597]      Heinanen,\
    \ J., Baker, F., Weiss, W., and J. Wroclawski,\n                  \"Assured Forwarding\
    \ PHB Group\", RFC 2597, June 1999.\n   [RFC2661]      Townsley, W., Valencia,\
    \ A., Rubens, A., Pall, G.,\n                  Zorn, G., and B. Palter, \"Layer\
    \ Two Tunneling Protocol\n                  'L2TP'\", RFC 2661, August 1999.\n\
    \   [RFC2684]      Grossman, D. and J. Heinanen, \"Multiprotocol\n           \
    \       Encapsulation Over ATM Adaptation Layer 5\", RFC 2684,\n             \
    \     September 1999.\n   [RFC2685]      Fox B. and B. Gleeson, \"Virtual Private\
    \ Networks\n                  Identifier,\" RFC 2685, September 1999.\n   [RFC2746]\
    \      Terzis, A., Krawczyk, J., Wroclawski, J., and L.\n                  Zhang,\
    \ \"RSVP Operation Over IP Tunnels\", RFC 2746,\n                  January 2000.\n\
    \   [RFC2764]      Gleeson, B., Lin, A., Heinanen, J., Armitage, G., and\n   \
    \               A. Malis, \"A Framework for IP Based Virtual Private\n       \
    \           Networks\", RFC 2764, February 2000.\n   [RFC2784]      Farinacci,\
    \ D., Li, T., Hanks, S., Meyer, D., and P.\n                  Traina, \"Generic\
    \ Routing Encapsulation (GRE)\", RFC\n                  2784, March 2000.\n  \
    \ [RFC2890]      Dommety, G., \"Key and Sequence Number Extensions to\n      \
    \            GRE\", RFC 2890, September 2000.\n   [RFC2858]      Bates, T., Rekhter,\
    \ Y., Chandra, R., and D. Katz,\n                  \"Multiprotocol Extensions\
    \ for BGP-4\", RFC 2858, June\n                  2000.\n   [RFC2983]      Black,\
    \ D., \"Differentiated Services and Tunnels\", RFC\n                  2983, October\
    \ 2000.\n   [RFC3031]      Rosen, E., Viswanathan, A., and R. Callon,\n      \
    \            \"Multiprotocol Label Switching Architecture\", RFC\n           \
    \       3031, January 2001.\n   [RFC3032]      Rosen E., Tappan, D., Fedorkow,\
    \ G., Rekhter, Y.,\n                  Farinacci, D., Li, T., and A. Conta, \"\
    MPLS Label Stack\n                  Encoding\", RFC 3032, January 2001.\n   [RFC3035]\
    \      Davie, B., Lawrence, J., McCloghrie, K., Rosen, E.,\n                 \
    \ Swallow, G., Rekhter, Y., and P. Doolan, \"MPLS using\n                  LDP\
    \ and ATM VC Switching\", RFC 3035, January 2001.\n   [RFC3065]      Traina, P.,\
    \ McPherson, D., and J. Scudder, \"Autonomous\n                  System Confederations\
    \ for BGP\", RFC 3065, June 1996.\n   [RFC3209]      Awduche, D., Berger, L.,\
    \ Gan, D., Li, T., Srinivasan,\n                  V., and G. Swallow, \"RSVP-TE:\
    \ Extensions to RSVP for\n                  LSP Tunnels\", RFC 3209, December\
    \ 2001.\n   [RFC3246]      Davie, B., Charny, A., Bennet, J.C.R., Benson, K.,\
    \ Le\n                  Boudec, J.Y., Courtney, W., Davari, S., Firoiu, V.,\n\
    \                  and D. Stiliadis, \"An Expedited Forwarding PHB (Per-\n   \
    \               Hop Behavior)\", RFC 3246, March 2002.\n   [RFC3270]      Le Faucheur,\
    \ F., Wu, L., Davie, B., Davari, S.,\n                  Vaananen, P., Krishnan,\
    \ R., Cheval, P., and J.\n                  Heinanen, \"Multi-Protocol Label Switching\
    \ (MPLS)\n                  Support of Differentiated Services\", RFC 3270, May\n\
    \                  2002.\n   [RFC3377]      Hodges, J. and R. Morgan, \"Lightweight\
    \ Directory\n                  Access Protocol (v3): Technical Specification\"\
    , RFC\n                  3377, September 2002.\n"
- title: Contributors' Addresses
  contents:
  - "Contributors' Addresses\n   Jeremy De Clercq\n   Alcatel\n   Fr. Wellesplein\
    \ 1,\n   2018 Antwerpen, Belgium\n   EMail: jeremy.de_clercq@alcatel.be\n   Bryan\
    \ Gleeson\n   Nokia\n   313 Fairchild Drive,\n   Mountain View, CA 94043  USA.\n\
    \   EMail: bryan.gleeson@nokia.com\n   Andrew G. Malis\n   Tellabs\n   90 Rio\
    \ Robles Drive\n   San Jose, CA 95134  USA\n   EMail: andy.malis@tellabs.com\n\
    \   Karthik Muthukrishnan\n   Lucent Technologies\n   1 Robbins Road\n   Westford,\
    \ MA 01886, USA\n   EMail: mkarthik@lucent.com\n   Eric C. Rosen\n   Cisco Systems,\
    \ Inc.\n   1414 Massachusetts Avenue\n   Boxborough, MA, 01719, USA\n   EMail:\
    \ erosen@cisco.com\n   Chandru Sargor\n   Redback Networks\n   300 Holger Way\n\
    \   San Jose, CA 95134, USA\n   EMail: apricot+l3vpn@redback.com\n   Jieyun Jessica\
    \ Yu\n   University of California, Irvine\n   5201 California Ave., Suite 150,\n\
    \   Irvine, CA, 92697  USA\n   EMail: jyy@uci.edu\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Ross Callon\n   Juniper Networks\n   10 Technology Park\
    \ Drive\n   Westford, MA 01886-3146, USA\n   EMail: rcallon@juniper.net\n   Muneyoshi\
    \ Suzuki\n   NTT Information Sharing Platform Labs.\n   3-9-11, Midori-cho,\n\
    \   Musashino-shi, Tokyo 180-8585, Japan\n   EMail: suzuki.muneyoshi@lab.ntt.co.jp\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This\
    \ document is subject to the rights, licenses and restrictions\n   contained in\
    \ BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n\
    \   This document and the information contained herein are provided on an\n  \
    \ \"AS IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n  \
    \ OR IS SPONSORED BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING\
    \ TASK FORCE DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT\
    \ LIMITED TO ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT\
    \ INFRINGE ANY RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS\
    \ FOR A PARTICULAR PURPOSE.\n"
- title: Intellectual Property
  contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or\
    \ scope of any\n   Intellectual Property Rights or other rights that might be\
    \ claimed to\n   pertain to the implementation or use of the technology described\
    \ in\n   this document or the extent to which any license under such rights\n\
    \   might or might not be available; nor does it represent that it has\n   made\
    \ any independent effort to identify any such rights.  Information\n   on the\
    \ procedures with respect to rights in RFC documents can be\n   found in BCP 78\
    \ and BCP 79.\n   Copies of IPR disclosures made to the IETF Secretariat and any\n\
    \   assurances of licenses to be made available, or the result of an\n   attempt\
    \ made to obtain a general license or permission for the use of\n   such proprietary\
    \ rights by implementers or users of this\n   specification can be obtained from\
    \ the IETF on-line IPR repository at\n   http://www.ietf.org/ipr.\n   The IETF\
    \ invites any interested party to bring to its attention any\n   copyrights, patents\
    \ or patent applications, or other proprietary\n   rights that may cover technology\
    \ that may be required to implement\n   this standard.  Please address the information\
    \ to the IETF at ietf-\n   ipr@ietf.org.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet\n   gement\n"
