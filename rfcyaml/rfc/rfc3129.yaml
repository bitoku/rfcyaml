- title: __initial_text__
  contents:
  - '        Requirements for Kerberized Internet Negotiation of Keys

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2001).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The goal of this document is to produce a streamlined, fast, easily\n\
    \   managed, and cryptographically sound protocol without requiring\n   public\
    \ key.\n"
- title: Motivation
  contents:
  - "Motivation\n   The IPsec working group has defined a number of protocols which\n\
    \   provide the ability to create and maintain cryptographically secure\n   security\
    \ associations at layer three (i.e., the IP layer).  This\n   effort has produced\
    \ two distinct protocols:\n   1) a mechanism to encrypt and authenticate IP datagram\
    \ payloads which\n      assumes a shared secret between the sender and receiver\n\
    \   2) a mechanism for IPsec peers to perform mutual authentication and\n    \
    \  exchange keying material\n   The IPsec working group has defined a peer to\
    \ peer authentication and\n   keying mechanism, IKE (RFC 2409).  One of the drawbacks\
    \ of a peer to\n   peer protocol is that each peer must know and implement a site's\n\
    \   security policy which in practice can be quite complex.  In addition,\n  \
    \ the lack of a trusted third party requires the use of Diffie Hellman\n   (DH)\
    \ to establish a shared secret.  DH, unfortunately, is\n   computationally quite\
    \ expensive and prone to denial of service\n   attacks.  IKE also relies on X.509\
    \ certificates to realize scalable\n   authentication of peers.  Digital signatures\
    \ are also computationally\n   expensive and certificate based trust models are\
    \ difficult to deploy\n   in practice.  While IKE does allow for pre-shared symmetric\
    \ keys, key\n   distribution is required between all peers -- an O(n^2) problem\
    \ --\n   which is problematic for large deployments.\n   Kerberos (RFC 1510) provides\
    \ a mechanism for trusted third party\n   authentication for clients and servers.\
    \  Clients authenticate to a\n   centralized server -- the Key Distribution Center\
    \ -- which in turn\n   issues tickets that servers can decrypt thus proving that\
    \ the client\n   is who it claims to be.  One of the elements of a Kerberos ticket\
    \ is\n   a session key which is generated by the KDC which may be used by the\n\
    \   client and server to share a secret.  Kerberos also allows for both\n   symmetric\
    \ key authentication, as well as certificate based public key\n   authentication\
    \ (PKinit).  Since the authentication phase of Kerberos\n   is performed by the\
    \ KDC, there is no need to perform expensive DH or\n   X.509 certificate signatures/verification\
    \ operations on servers.\n   While clients may authenticate using X.509 certificates,\
    \ the\n   authentication phase can be amortized over the lifetime of the\n   credentials.\
    \  This allows a single DH and certificate exchange to be\n   used to key security\
    \ associations with many servers in a\n   computationally economic way.  Kerberos\
    \ also support clients with\n   symmetric keys but unlike IKE, the symmetric keys\
    \ are stored in the\n   KDC making the number of keys an O(n) problem rather than\
    \ O(n^2).\n   Kerberos also allows security policy to be managed in a more\n \
    \  centralized fashion, rather than expecting each potentially\n   untrustworthy\
    \ peer to abide by stated security policies of an\n   organization.\n   The KINK\
    \ working group takes these basic features of Kerberos and\n   uses them to its\
    \ advantage to create a protocol which can establish\n   and maintain IPsec security\
    \ associations (RFC 2401).  It should be\n   noted that KINK is not a replacement\
    \ for IKE.  IKE has one property\n   which KINK cannot reproduce:  the ability\
    \ for two peers to mutually\n   authenticate and exchange keys without the need\
    \ for an actively\n   participating third party.  However, there are many situations\
    \ where\n   a trusted third party which proxies authentication is viable, and\
    \ in\n   fact desirable.\n   While Kerberos specifies a standard protocol between\
    \ the client and\n   the KDC to get tickets, the actual ticket exchange between\
    \ client and\n   server is application specific.  KINK is intended to be an\n\
    \   alternative to requiring each application having its own method of\n   transporting\
    \ and validating service tickets using a protocol which is\n   efficient and tailored\
    \ to the specific needs of Kerberos and the\n   applications for which it provides\
    \ keying and parameter negotiation.\n   Given the above, a new general keying\
    \ protocol which leverages the\n   scalability of Kerberos is desirable.  The\
    \ working group's first task\n   is to define this protocol and define an domain\
    \ of interpretation for\n   IPsec to establish and maintain IPsec security associations.\
    \  The\n   protocol must be able to take full advantage of the features of RFC\n\
    \   2401 but in the context of a centralized keying authority.\n"
- title: Requirements
  contents:
  - "Requirements\n   KINK must meet the following requirements at a minimum:\n  \
    \ -     The protocol must use the session keys found in Kerberos\n         tickets\
    \ as the basis of the keying material used for IPsec\n         security association\
    \ keys.\n   -     The protocol must be able to integrate into security\n     \
    \    architecture of IPsec (RFC 2401).\n   -     The protocol must be able to\
    \ start up SA's regardless of any\n         client/server disposition in the keying\
    \ protocol.  In other\n         words, either IPsec peer can be the initiator\
    \ or responder,\n         regardless of whether it's a Kerberos 'client' (TGT-only)\
    \ or\n         Kerberos 'server'(has a keytab).\n   -     The protocol must support\
    \ Kerberos using either secret key, or\n         public key (PKINIT) initial authentication.\n\
    \   -     The protocol must support Kerberos User-to-User mode for cases\n   \
    \      in which the initiator cannot obtain an AP_REQ for the\n         responder\
    \ (i.e.  the responder is a PKINIT client) or the\n         responder cannot decrypt\
    \ and AP_REQ from the initiator (i.e.,\n         the responder doesn't have a\
    \ Kerberos Keytab, just a TGT).\n   -     The protocol must be able to allow a\
    \ peer to authenticate and\n         participate in many realms.\n   -     The\
    \ protocol must handle absolute time skew gracefully.\n   -     The protocol must\
    \ be able to create, modify, rekey, and delete\n         security associations.\n\
    \   -     The protocol must be capable of setting up both transport and\n    \
    \     tunnel modes of IPsec.\n   -     The protocol must be capable of setting\
    \ up both AH and ESP\n         security associations.\n   -     The protocol must\
    \ be capable of negotiating cipher suites.\n   -     The protocol must be capable\
    \ of setting up IPsec flow\n         selectors.\n   -     The protocol must be\
    \ capable of rekeying without the assistance\n         of the KDC if the Kerberos\
    \ session ticket is still valid.\n   -     The protocol must make an effort to\
    \ mitigate third party Denial\n         of Service attacks (aka Zombies attacks).\n\
    \   -     The protocol must be able to be used for more than IPsec\n         keying.\n\
    \   -     The protocol must support both IPv4 and IPv6.\n"
- title: Security Considerations
  contents:
  - "Security Considerations\n   These requirements lay out input to define a protocol\
    \ which allows\n   the keying of IPsec security associations using Kerberos as\
    \ the key\n   distribution mechanism.  As such, the security associations that\
    \ will\n   be created by the new protocol will inherit the union of IPsec and\n\
    \   Kerberos's existing security weaknesses.  There is no requirement to\n   address\
    \ those weaknesses unless in combination they produce a new\n   weakness which\
    \ is not inherent in other keying protocols.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The original KINK Kabal was:\n      Michael Thomas (Cisco)\n\
    \      David McGrew (Cisco)\n      Jan Vilhuber (Cisco)\n      Jonathan Trostle\
    \ (Cisco)\n      Matt Hur (Cybersafe)\n      Mike Froh (Cybersafe)\n      Sasha\
    \ Medvinsky (GI)\n      Derek Atkins (Telcordia)\n   It must also be acknowledged\
    \ that the Packetcable Security\n   specification PKT-SP-SEC-I01-991201 provided\
    \ the raw fodder for this\n   effort in its Kerberized IPsec section, and all\
    \ of the focus team\n   members who played a part in the spec.  We must also acknowledge\n\
    \   Nancy Davoust of Cablelabs for keeping order in our normally\n   disorderly\
    \ proceedings.\n"
- title: References
  contents:
  - "References\n   [1]  Kohl, J. and C. Neuman, \"The Kerberos Network\n        Authentication\
    \ Service (V5)\", RFC 1510, September 1993.\n   [2]  Kent, S. and R. Atkinson,\
    \ \"Security Architecture for the\n        Internet Protocol\", RFC 2401, November\
    \ 1998.\n   [3]  Harkins, D. and D. Carrel, \"The Internet Key\n        Exchange\
    \ (IKE)\", RFC 2409, November 1998.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   Michael Thomas\n   Cisco Systems\n   375 E Tasman Rd\n \
    \  San Jose, Ca, 95134, USA\n   Phone: +1 408-525-5386\n   EMail: mat@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2001).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
