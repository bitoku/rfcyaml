- contents:
  - '                  Label Switched Path (LSP) Self-Ping

    '
  title: __initial_text__
- contents:
  - "Abstract\n   When certain RSVP-TE optimizations are implemented, ingress Label\n
    \  Switching Router (LSRs) can receive RSVP RESV messages before\n   forwarding
    state has been installed on all downstream nodes.\n   According to the RSVP-TE
    specification, the ingress LSR can forward\n   traffic through a Label Switched
    Path (LSP) as soon as it receives a\n   RESV message.  However, if the ingress
    LSR forwards traffic through\n   the LSP before forwarding state has been installed
    on all downstream\n   nodes, traffic can be lost.\n   This document describes
    LSP Self-ping.  When an ingress LSR receives\n   an RESV message, it can invoke
    LSP Self-ping procedures to ensure\n   that forwarding state has been installed
    on all downstream nodes.\n   LSP Self-ping is a new protocol.  It is not an extension
    of LSP Ping.\n   Although LSP Ping and LSP Self-ping are named similarly, each
    is\n   designed for a unique purpose.  Each protocol listens on its own UDP\n
    \  port and executes its own procedures.\n   LSP Self-ping is an extremely lightweight
    mechanism.  It does not\n   consume control-plane resources on transit or egress
    LSRs.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7746.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   3\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   4\n   2.  Applicability . . . . . . . . . . . . . . . . . . . . . . .
    .   4\n   3.  The LSP Self-ping Message . . . . . . . . . . . . . . . . . .   6\n
    \  4.  LSP Self-Ping Procedures  . . . . . . . . . . . . . . . . . .   7\n   5.
    \ Bidirectional LSP Procedures  . . . . . . . . . . . . . . . .   8\n   6.  IANA
    Considerations . . . . . . . . . . . . . . . . . . . . .   9\n   7.  Security
    Considerations . . . . . . . . . . . . . . . . . . .   9\n   8.  References  .
    . . . . . . . . . . . . . . . . . . . . . . . .   9\n     8.1.  Normative References
    \ . . . . . . . . . . . . . . . . . .   9\n     8.2.  Informative References  .
    . . . . . . . . . . . . . . . .  10\n   Appendix A.  Rejected Approaches  . .
    . . . . . . . . . . . . . .  11\n   Acknowledgements  . . . . . . . . . . . .
    . . . . . . . . . . . .  11\n   Contributors  . . . . . . . . . . . . . . . .
    . . . . . . . . . .  12\n   Authors' Addresses  . . . . . . . . . . . . . . .
    . . . . . . . .  12\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Ingress Label Switching Routers (LSRs) use RSVP-TE [RFC3209]
    to\n   establish MPLS Label Switched Paths (LSPs).  The following paragraphs\n
    \  describe RSVP-TE procedures.\n   The ingress LSR calculates a path between
    itself and an egress LSR.\n   The calculated path can be either strictly or loosely
    routed.  Having\n   calculated a path, the ingress LSR constructs an RSVP PATH
    message.\n   The PATH message includes an Explicit Route Object (ERO) that\n   represents
    the path between the ingress and egress LSRs.\n   The ingress LSR forwards the
    PATH message towards the egress LSR,\n   following the path defined by the ERO.
    \ Each transit LSR that\n   receives the PATH message executes admission control
    procedures.  If\n   the transit LSR admits the LSP, it sends the PATH message
    downstream,\n   to the next node in the ERO.\n   When the egress LSR receives
    the PATH message, it binds a label to\n   the LSP.  The label can be implicit
    null, explicit null, or non-null.\n   The egress LSR then installs forwarding
    state (if necessary) and\n   constructs an RSVP RESV message.  The RESV message
    contains a Label\n   Object that includes the label that has been bound to the
    LSP.\n   The egress LSR sends the RESV message upstream towards the ingress\n
    \  LSR.  The RESV message visits the same transit LSRs that the PATH\n   message
    visited, in reverse order.  Each transit LSR binds a label to\n   the LSP, updates
    its forwarding state, and updates the RESV message.\n   As a result, the Label
    Object in the RESV message contains the label\n   that has been bound to the LSP
    most recently.  Finally, the transit\n   LSR sends the RESV message upstream,
    along the reverse path of the\n   LSP.\n   When the ingress LSR receives the RESV
    message, it installs\n   forwarding state.  Once the ingress LSR installs forwarding
    state, it\n   can forward traffic through the LSP.\n   Referring to any LSR, RFC
    3209 says, \"The node SHOULD be prepared to\n   forward packets carrying the assigned
    label prior to sending the Resv\n   message.\"  However, RFC 3209 does not strictly
    require this behavior.\n   Some implementations optimize the above-described procedure
    by\n   allowing LSRs to send RESV messages before installing forwarding\n   state
    [RFC6383].  This optimization is desirable, because it allows\n   LSRs to install
    forwarding state in parallel, thus accelerating the\n   process of LSP signaling
    and setup.  However, this optimization\n   creates a race condition.  When the
    ingress LSR receives a RESV\n   message, some downstream LSRs may have not yet
    installed forwarding\n   state.  If the ingress LSR forwards traffic through the
    LSP before\n   forwarding state has been installed on all downstream nodes, traffic\n
    \  can be lost.\n   This document describes LSP Self-ping.  When an ingress LSR
    receives\n   an RESV message, it can invoke LSP Self-ping procedures to verify\n
    \  that forwarding state has been installed on all downstream nodes.  By\n   verifying
    the installation of downstream forwarding state, the\n   ingress LSR eliminates
    this particular cause of traffic loss.\n   LSP Self-ping is a new protocol.  It
    is not an extension of LSP Ping\n   [RFC4379].  Although LSP Ping and LSP Self-ping
    are named similarly,\n   each is designed for a unique purpose.  Each protocol
    listens on its\n   own UDP port and executes its own procedures.\n   LSP Self-ping
    is an extremely lightweight mechanism.  It does not\n   consume control-plane
    resources on transit or egress LSRs.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
      and \"OPTIONAL\" in this\n   document are to be interpreted as described in
      [RFC2119].\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Applicability\n   LSP Self-ping is applicable in the following scenario:\n
    \  o  The ingress LSR signals a point-to-point LSP.\n   o  The ingress LSR receives
    a RESV message.\n   o  The RESV message indicates that all downstream nodes have
    begun\n      the process of forwarding state installation.\n   o  The RESV message
    does not guarantee that all downstream nodes have\n      completed the process
    of forwarding state installation.\n   o  The ingress LSR needs to confirm that
    all downstream nodes have\n      completed the process for forwarding state installation.\n
    \  o  The ingress LSR does not need to confirm the correctness of\n      downstream
    forwarding state, because there is a very high\n      likelihood that downstream
    forwarding state is correct.\n   o  Control-plane resources on the egress LSR
    may be scarce.\n   o  The need to conserve control-plane resources on the egress
    LSR\n      outweighs the need to determine whether downstream forwarding\n      state
    is correct.\n   Unlike LSP Ping and S-BFD [S-BFD], LSP Self-ping is not a general-\n
    \  purpose MPLS OAM mechanism.  It cannot reliably determine whether\n   downstream
    forwarding state is correct.  For example, if a downstream\n   LSR installs a
    forwarding state that causes an LSP to terminate at\n   the wrong node, LSP Self-ping
    will not detect an error.  In another\n   example, if a downstream LSR erroneously
    forwards a packet without an\n   MPLS label, LSP Self-ping will not detect an
    error.\n   Furthermore, LSP Self-ping fails when either of the following\n   conditions
    are true:\n   o  The LSP under test is signaled by the Label Distribution Protocol\n
    \     (LDP) Independent Mode [RFC5036].\n   o  Reverse Path Forwarding (RPF) [RFC3704]
    filters are enabled on\n      links that connect the ingress LSR to the egress
    LSR.\n   While LSP Ping and S-BFD are general-purpose OAM mechanisms, they are\n
    \  not applicable in the above-described scenario because:\n   o  LSP Ping consumes
    control-plane resources on the egress LSR.\n   o  An S-BFD implementation either
    consumes control-plane resources on\n      the egress LSR or requires special
    support for S-BFD on the\n      forwarding plane.\n   By contrast, LSP Self-ping
    requires nothing from the egress LSR\n   beyond the ability to forward an IP datagram.\n
    \  LSP Self-ping's purpose is to determine whether forwarding state has\n   been
    installed on all downstream LSRs.  Its primary constraint is to\n   minimize its
    impact on egress LSR performance.  This functionality is\n   valuable during network
    convergence events that impact a large number\n   of LSPs.\n   Therefore, LSP
    Self-ping is applicable in the scenario described\n   above, where the LSP is
    signaled by RSVP, RPF is not enabled, and the\n   need to conserve control-plane
    resources on the egress LSR outweighs\n   the need to determine whether downstream
    forwarding state is correct.\n"
  title: 2.  Applicability
- contents:
  - "3.  The LSP Self-ping Message\n   The LSP Self-ping Message is a User Datagram
    Protocol (UDP) [RFC768]\n   packet that encapsulates a session ID.  If the RSVP
    messages used to\n   establish the LSP under test were delivered over IPv4 [RFC791],
    the\n   UDP datagram MUST be encapsulated in an IPv4 header.  If the RSVP\n   messages
    used to establish the LSP were delivered over IPv6\n   [RFC2460], the UDP datagram
    MUST be encapsulated in an IPv6 header.\n   In either case:\n   o  The IP Source
    Address MAY be configurable.  By default, it MUST be\n      the address of the
    egress LSR.\n   o  The IP Destination Address MUST be the address of the ingress
    LSR.\n   o  The IP Time to Live (TTL) / Hop Count MAY be configurable.  By\n      default,
    it MUST be 255.\n   o  The IP DSCP (Differentiated Services Code Point) MAY be\n
    \     configurable.  By default, it MUST be CS6 (110000) [RFC4594].\n   o  The
    UDP Source Port MUST be selected from the dynamic range\n      (49152-65535) [RFC6335].\n
    \  o  The UDP Destination Port MUST be lsp-self-ping (8503) [IANA.PORTS]\n   UDP
    packet contents have the following format:\n    0                   1                   2
    \                  3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
    6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  |                        Session-ID                             |\n   |                        (64
    bits)                              |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                          LSP Self-Ping Message\n   The Session-ID is a 64-bit
    field that associates an LSP Self-ping\n   message with an LSP Self-ping session.\n"
  title: 3.  The LSP Self-ping Message
- contents:
  - "4.  LSP Self-Ping Procedures\n   In order to verify that an LSP is ready to carry
    traffic, the ingress\n   LSR creates a short-lived LSP Self-ping session.  All
    session state\n   is maintained locally on the ingress LSR.  Session state includes
    the\n   following information:\n   o  Session-ID: A 64-bit number that identifies
    the LSP Self-ping\n      session.\n   o  Retry Counter: The maximum number of
    times that the ingress LSR\n      probes the LSP before terminating the LSP Self-ping
    session.  The\n      initial value of this variable is determined by configuration.\n
    \  o  Retry Timer: The number of milliseconds that the LSR waits after\n      probing
    the LSP.  The initial value of this variable is determined\n      by configuration.\n
    \  o  Status: A boolean variable indicating the completion status of the\n      LSP
    Self-ping session.  The initial value of this variable is\n      FALSE.\n   Implementations
    MAY represent the above-mentioned information in any\n   format that is convenient
    to them.\n   The ingress LSR executes the following procedure until Status equals\n
    \  TRUE or Retry Counter equals zero:\n   o  Format a LSP Self-ping message.\n
    \  o  Set the Session-ID in the LSP Self-ping message to the Session-ID\n      mentioned
    above.\n   o  Send the LSP Self-ping message through the LSP under test.\n   o
    \ Set a timer to expire in Retry Timer milliseconds.\n   o  Wait until either
    an LSP Self-ping message associated with the\n      session returns or the timer
    expires.  If an LSP Self-ping message\n      associated with the session returns,
    set Status to TRUE.\n      Otherwise, decrement the Retry Counter.  Optionally,
    increase the\n      value of Retry Timer according to an appropriate back-off\n
    \     algorithm.\n   In the process described above, the ingress LSR addresses
    an LSP\n   Self-ping message to itself and forwards that message through the LSP\n
    \  under test.  If forwarding state has been installed on all downstream\n   LSRs,
    the egress LSR receives the LSP Self-ping message and\n   determines that it is
    addressed to the ingress LSR.  So, the egress\n   LSR forwards the LSP Self-ping
    message back to the ingress LSR,\n   exactly as it would forward any other IP
    packet.\n   The LSP Self-ping message can arrive at the egress LSR with or\n   without
    an MPLS header, depending on whether the LSP under test\n   executes penultimate
    hop-popping procedures.  If the LSP Self-ping\n   message arrives at the egress
    LSR with an MPLS header, the egress LSR\n   removes that header.\n   If the egress
    LSR's most preferred route to the ingress LSR is\n   through an LSP, the egress
    LSR forwards the LSP Self-ping message\n   through that LSP.  However, if the
    egress LSR's most preferred route\n   to the ingress LSR is not through an LSP,
    the egress LSR forwards the\n   LSP Self-ping message without MPLS encapsulation.\n
    \  When an LSP Self-ping session terminates, it returns its completion\n   status
    to the invoking protocol.  For example, if RSVP-TE invokes LSP\n   Self-ping as
    part of the LSP setup procedure, LSP Self-ping returns\n   its completion status
    to RSVP-TE.\n"
  title: 4.  LSP Self-Ping Procedures
- contents:
  - "5.  Bidirectional LSP Procedures\n   A bidirectional LSP has an active side and
    a passive side.  The\n   active side calculates the ERO and signals the LSP in
    the forward\n   direction.  The passive side reverses the ERO and signals the
    LSP in\n   the reverse direction.\n   When LSP Self-ping is applied to a bidirectional
    LSP:\n   o  The active side calculates the ERO, signals the LSP, and runs LSP\n
    \     Self-ping.\n   o  The Passive side reverses the ERO, signals the LSP, and
    runs\n      another instance of LSP Self-ping.\n   o  Neither side forwards traffic
    through the LSP until local LSP\n      Self-ping returns TRUE.\n   The two LSP
    Self-ping sessions mentioned above are independent of one\n   another.  They are
    not required to have the same Session-ID.  Each\n   endpoint can forward traffic
    through the LSP as soon as its local LSP\n   Self-ping returns TRUE.  Endpoints
    are not required to wait until\n   both LSP Self-ping sessions have returned TRUE.\n"
  title: 5.  Bidirectional LSP Procedures
- contents:
  - "6.  IANA Considerations\n   IANA has assigned UDP Port Number 8503 [IANA.PORTS]
    for use by MPLS\n   LSP Self-Ping.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   LSP Self-ping messages are easily forged.  Therefore,
    an attacker can\n   send the ingress LSR a forged LSP Self-ping message, causing
    the\n   ingress LSR to terminate the LSP Self-ping session prematurely.  In\n
    \  order to mitigate these threats, operators SHOULD filter LSP Self-\n   ping
    packets at the edges of the MPLS signaling domain.  Furthermore,\n   implementations
    SHOULD NOT assign Session-IDs in a predictable\n   manner.  In order to avoid
    predictability, implementations can\n   leverage a Cryptographically Secure Pseudorandom
    Number Generator\n   (CSPRNG) [NIST-CSPRNG].\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC768]   Postel, J., \"User Datagram Protocol\",
      STD 6, RFC 768,\n              DOI 10.17487/RFC0768, August 1980,\n              <http://www.rfc-editor.org/info/rfc768>.\n
      \  [RFC791]   Postel, J., \"Internet Protocol\", STD 5, RFC 791,\n              DOI
      10.17487/RFC0791, September 1981,\n              <http://www.rfc-editor.org/info/rfc791>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <http://www.rfc-editor.org/info/rfc2119>.\n   [RFC2460]  Deering,
      S. and R. Hinden, \"Internet Protocol, Version 6\n              (IPv6) Specification\",
      RFC 2460, DOI 10.17487/RFC2460,\n              December 1998, <http://www.rfc-editor.org/info/rfc2460>.\n
      \  [RFC3209]  Awduche, D., Berger, L., Gan, D., Li, T., Srinivasan, V.,\n              and
      G. Swallow, \"RSVP-TE: Extensions to RSVP for LSP\n              Tunnels\",
      RFC 3209, DOI 10.17487/RFC3209, December 2001,\n              <http://www.rfc-editor.org/info/rfc3209>.\n
      \  [RFC3704]  Baker, F. and P. Savola, \"Ingress Filtering for Multihomed\n
      \             Networks\", BCP 84, RFC 3704, DOI 10.17487/RFC3704, March\n              2004,
      <http://www.rfc-editor.org/info/rfc3704>.\n   [RFC4379]  Kompella, K. and G.
      Swallow, \"Detecting Multi-Protocol\n              Label Switched (MPLS) Data
      Plane Failures\", RFC 4379,\n              DOI 10.17487/RFC4379, February 2006,\n
      \             <http://www.rfc-editor.org/info/rfc4379>.\n   [RFC5036]  Andersson,
      L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n              \"LDP Specification\",
      RFC 5036, DOI 10.17487/RFC5036,\n              October 2007, <http://www.rfc-editor.org/info/rfc5036>.\n
      \  [RFC6335]  Cotton, M., Eggert, L., Touch, J., Westerlund, M., and S.\n              Cheshire,
      \"Internet Assigned Numbers Authority (IANA)\n              Procedures for the
      Management of the Service Name and\n              Transport Protocol Port Number
      Registry\", BCP 165,\n              RFC 6335, DOI 10.17487/RFC6335, August 2011,\n
      \             <http://www.rfc-editor.org/info/rfc6335>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [IANA.PORTS]\n              IANA, \"Service
      Name and Transport Protocol Port Number\n              Registry\", <http://www.iana.org/assignments/\n
      \             service-names-port-numbers>.\n   [NIST-CSPRNG]\n              NIST,
      \"Recommendation for Random Number Generation Using\n              Deterministic
      Random Bit Generators\", NIST Special\n              Publication 800-90A, January
      2012.\n   [RFC4594]  Babiarz, J., Chan, K., and F. Baker, \"Configuration\n
      \             Guidelines for DiffServ Service Classes\", RFC 4594,\n              DOI
      10.17487/RFC4594, August 2006,\n              <http://www.rfc-editor.org/info/rfc4594>.\n
      \  [RFC6383]  Shiomoto, K. and A. Farrel, \"Advice on When It Is Safe to\n              Start
      Sending Data on Label Switched Paths Established\n              Using RSVP-TE\",
      RFC 6383, DOI 10.17487/RFC6383, September\n              2011, <http://www.rfc-editor.org/info/rfc6383>.\n
      \  [S-BFD]    Akiya, N., Pignataro, C., Ward, D., Bhatia, M., and J.\n              Networks,
      \"Seamless Bidirectional Forwarding Detection\n              (S-BFD)\", Work
      in Progress, draft-ietf-bfd-seamless-\n              base-05, June 2015.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Appendix A.  Rejected Approaches\n   In a rejected approach, the ingress LSR
    uses LSP Ping to verify LSP\n   readiness.  This approach was rejected for the
    following reasons.\n   While an ingress LSR can control its control-plane overhead
    due to\n   LSP Ping, an egress LSR has no such control.  This is because each\n
    \  ingress LSR can, on its own, control the rate of the LSP Ping\n   originated
    by the LSR, while an egress LSR must respond to all the\n   LSP Pings originated
    by various ingresses.  Furthermore, when an MPLS\n   Echo Request reaches an egress
    LSR, it is sent to the control plane\n   of the egress LSR; this makes egress
    LSR processing overhead of LSP\n   Ping well above the overhead of its data plane
    (MPLS/IP forwarding).\n   These factors make LSP Ping problematic as a tool for
    detecting LSP\n   readiness to carry traffic when dealing with a large number
    of LSPs.\n   By contrast, LSP Self-ping does not consume any control-plane\n   resources
    at the egress LSR, and it relies solely on the data plane\n   of the egress LSR,
    making it more suitable as a tool for checking LSP\n   readiness when dealing
    with a large number of LSPs.\n   In another rejected approach, the ingress LSR
    does not verify LSP\n   readiness.  Instead, it sets a timer when it receives
    an RSVP RESV\n   message and does not forward traffic through the LSP until the
    timer\n   expires.  This approach was rejected because it is impossible to\n   determine
    the optimal setting for this timer.  If the timer value is\n   set too low, it
    does not prevent black-holing.  If the timer value is\n   set too high, it slows
    down the process of LSP signaling and setup.\n   Moreover, the above-mentioned
    timer is configured on a per-router\n   basis.  However, its optimum value is
    determined by a network-wide\n   behavior.  Therefore, changes in the network
    could require changes to\n   the value of the timer, making the optimal setting
    of this timer a\n   moving target.\n"
  title: Appendix A.  Rejected Approaches
- contents:
  - "Acknowledgements\n   Thanks to Yakov Rekhter, Ravi Singh, Eric Rosen, Eric Osborne,
    Greg\n   Mirsky, and Nobo Akiya for their contributions to this document.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following individuals contributed significantly to this
    document:\n      Mark Wygant\n      Verizon\n      mark.wygant@verizon.com\n      Ravi
    Torvi\n      Juniper Networks\n      rtorvi@juniper.net\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Ron Bonica\n   Juniper Networks\n   Email: rbonica@juniper.net\n
    \  Ina Minei\n   Google, Inc.\n   1600 Amphitheatre Parkway\n   Mountain View,
    CA  94043\n   United States\n   Email: inaminei@google.com\n   Michael Conn\n
    \  Verizon\n   Email: meconn26@gmail.com\n   Dante Pacella\n   Verizon\n   Email:
    dante.j.pacella@verizon.com\n   Luis Tomotaki\n   Verizon\n   Email: luis.tomotaki@verizon.com\n"
  title: Authors' Addresses
