- title: __initial_text__
  contents:
  - '                      An Expedited Forwarding PHB

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   The definition of PHBs (per-hop forwarding behaviors) is a critical\n\
    \   part of the work of the Diffserv Working Group.  This document\n   describes\
    \ a PHB called Expedited Forwarding. We show the generality\n   of this PHB by\
    \ noting that it can be produced by more than one\n   mechanism and give an example\
    \ of its use to produce at least one\n   service, a Virtual Leased Line.  A recommended\
    \ codepoint for this PHB\n   is given.\n   A pdf version of this document is available\
    \ at\n   ftp://ftp.ee.lbl.gov/papers/ef_phb.pdf\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   Network nodes that implement the differentiated services\
    \ enhancements\n   to IP use a codepoint in the IP header to select a per-hop\
    \ behavior\n   (PHB) as the specific forwarding treatment for that packet [RFC2474,\n\
    \   RFC2475].  This memo describes a particular PHB called expedited\n   forwarding\
    \ (EF). The EF PHB can be used to build a low loss, low\n   latency, low jitter,\
    \ assured bandwidth, end-to-end service through DS\n   domains.  Such a service\
    \ appears to the endpoints like a point-to-\n   point connection or a \"virtual\
    \ leased line\".  This service has also\n   been described as Premium service\
    \ [2BIT].\n   Loss, latency and jitter are all due to the queues traffic\n   experiences\
    \ while transiting the network.  Therefore providing low\n   loss, latency and\
    \ jitter for some traffic aggregate means ensuring\n   that the aggregate sees\
    \ no (or very small) queues. Queues arise when\n   (short-term) traffic arrival\
    \ rate exceeds departure rate at some\n   node.  Thus a service that ensures no\
    \ queues for some aggregate is\n   equivalent to bounding rates such that, at\
    \ every transit node, the\n   aggregate's maximum arrival rate is less than that\
    \ aggregate's\n   minimum departure rate.\n   Creating such a service has two\
    \ parts:\n      1) Configuring nodes so that the aggregate has a well-defined\n\
    \         minimum departure rate. (\"Well-defined\" means independent of\n   \
    \      the dynamic state of the node.  In particular, independent of\n       \
    \  the intensity of other traffic at the node.)\n      2) Conditioning the aggregate\
    \ (via policing and shaping) so that\n         its arrival rate at any node is\
    \ always less than that node's\n         configured minimum departure rate.\n\
    \   The EF PHB provides the first part of the service.  The network\n   boundary\
    \ traffic conditioners described in [RFC2475] provide the\n   second part.\n \
    \  The EF PHB is not a mandatory part of the Differentiated Services\n   architecture,\
    \ i.e., a node is not required to implement the EF PHB in\n   order to be considered\
    \ DS-compliant.  However, when a DS-compliant\n   node claims to implement the\
    \ EF PHB, the implementation must conform\n   to the specification given in this\
    \ document.\n   The next sections describe the EF PHB in detail and give examples\
    \ of\n   how it might be implemented.  The keywords \"MUST\", \"MUST NOT\",\n\
    \   \"REQUIRED\", \"SHOULD\", \"SHOULD NOT\", and \"MAY\" that appear in this\n\
    \   document are to be interpreted as described in [Bradner97].\n"
- title: 2. Description of EF per-hop behavior
  contents:
  - "2. Description of EF per-hop behavior\n   The EF PHB is defined as a forwarding\
    \ treatment for a particular\n   diffserv aggregate where the departure rate of\
    \ the aggregate's\n   packets from any diffserv node must equal or exceed a configurable\n\
    \   rate.  The EF traffic SHOULD receive this rate independent of the\n   intensity\
    \ of any other traffic attempting to transit the node.  It\n   SHOULD average\
    \ at least the configured rate when measured over any\n   time interval equal\
    \ to or longer than the time it takes to send an\n   output link MTU sized packet\
    \ at the configured rate.  (Behavior at\n   time scales shorter than a packet\
    \ time at the configured rate is\n   deliberately not specified.) The configured\
    \ minimum rate MUST be\n   settable by a network administrator (using whatever\
    \ mechanism the\n   node supports for non-volatile configuration).\n   If the\
    \ EF PHB is implemented by a mechanism that allows unlimited\n   preemption of\
    \ other traffic (e.g., a priority queue), the\n   implementation MUST include\
    \ some means to limit the damage EF traffic\n   could inflict on other traffic\
    \ (e.g., a token bucket rate limiter).\n   Traffic that exceeds this limit MUST\
    \ be discarded. This maximum EF\n   rate, and burst size if appropriate, MUST\
    \ be settable by a network\n   administrator (using whatever mechanism the node\
    \ supports for non-\n   volatile configuration). The minimum and maximum rates\
    \ may be the\n   same and configured by a single parameter.\n   The Appendix describes\
    \ how this PHB can be used to construct end-to-\n   end services.\n"
- title: 2.2 Example Mechanisms to Implement the EF PHB
  contents:
  - "2.2 Example Mechanisms to Implement the EF PHB\n   Several types of queue scheduling\
    \ mechanisms may be employed to\n   deliver the forwarding behavior described\
    \ in section 2.1 and thus\n   implement the EF PHB. A simple priority queue will\
    \ give the\n   appropriate behavior as long as there is no higher priority queue\n\
    \   that could preempt the EF for more than a packet time at the\n   configured\
    \ rate.  (This could be accomplished by having a rate\n   policer such as a token\
    \ bucket associated with each priority queue to\n   bound how much the queue can\
    \ starve other traffic.)\n   It's also possible to use a single queue in a group\
    \ of queues\n   serviced by a weighted round robin scheduler where the share of\
    \ the\n   output bandwidth assigned to the EF queue is equal to the configured\n\
    \   rate.  This could be implemented, for example, using one PHB of a\n   Class\
    \ Selector Compliant set of PHBs [RFC2474].\n   Another possible implementation\
    \ is a CBQ [CBQ] scheduler that gives\n   the EF queue priority up to the configured\
    \ rate.\n   All of these mechanisms have the basic properties required for the\
    \ EF\n   PHB though different choices result in different ancillary behavior\n\
    \   such as jitter seen by individual microflows. See Appendix A.3 for\n   simulations\
    \ that quantify some of these differences.\n"
- title: 2.3 Recommended codepoint for this PHB
  contents:
  - "2.3 Recommended codepoint for this PHB\n   Codepoint 101110 is recommended for\
    \ the EF PHB.\n"
- title: 2.4 Mutability
  contents:
  - "2.4 Mutability\n   Packets marked for EF PHB MAY be remarked at a DS domain boundary\n\
    \   only to other codepoints that satisfy the EF PHB.  Packets marked for\n  \
    \ EF PHBs SHOULD NOT be demoted or promoted to another PHB by a DS\n   domain.\n"
- title: 2.5 Tunneling
  contents:
  - "2.5 Tunneling\n   When EF packets are tunneled, the tunneling packets must be\
    \ marked as\n   EF.\n"
- title: 2.6 Interaction with other PHBs
  contents:
  - "2.6 Interaction with other PHBs\n   Other PHBs and PHB groups may be deployed\
    \ in the same DS node or\n   domain with the EF PHB as long as the requirement\
    \ of section 2.1 is\n   met.\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   To protect itself against denial of service attacks,\
    \ the edge of a DS\n   domain MUST strictly police all EF marked packets to a\
    \ rate\n   negotiated with the adjacent upstream domain.  (This rate must be <=\n\
    \   the EF PHB configured rate.)  Packets in excess of the negotiated\n   rate\
    \ MUST be dropped.  If two adjacent domains have not negotiated an\n   EF rate,\
    \ the downstream domain MUST use 0 as the rate (i.e., drop all\n   EF marked packets).\n\
    \   Since the end-to-end premium service constructed from the EF PHB\n   requires\
    \ that the upstream domain police and shape EF marked traffic\n   to meet the\
    \ rate negotiated with the downstream domain, the\n   downstream domain's policer\
    \ should never have to drop packets.  Thus\n   these drops SHOULD be noted (e.g.,\
    \ via SNMP traps) as possible\n   security violations or serious misconfiguration.\
    \ Similarly, since the\n   aggregate EF traffic rate is constrained at every interior\
    \ node, the\n   EF queue should never overflow so if it does the drops SHOULD\
    \ be\n   noted as possible attacks or serious misconfiguration.\n"
- title: 4. IANA Considerations
  contents:
  - "4. IANA Considerations\n   This document allocates one codepoint, 101110, in\
    \ Pool 1 of the code\n   space defined by [RFC2474].\n"
- title: 5. References
  contents:
  - "5. References\n   [Bradner97] Bradner, S., \"Key words for use in RFCs to Indicate\n\
    \               Requirement Levels\", BCP 14, RFC 2119, March 1997.\n   [RFC2474]\
    \   Nichols, K., Blake, S., Baker, F. and D. Black,\n               \"Definition\
    \ of the Differentiated Services Field (DS\n               Field) in the IPv4\
    \ and IPv6 Headers\", RFC 2474, December\n               1998.\n   [RFC2475] \
    \  Black, D., Blake, S., Carlson, M., Davies, E., Wang, Z.\n               and\
    \ W. Weiss, \"An Architecture for Differentiated\n               Services\", RFC\
    \ 2475, December 1998.\n   [2BIT]      K. Nichols, V. Jacobson, and L. Zhang,\
    \ \"A Two-bit\n               Differentiated Services Architecture for the Internet\"\
    ,\n               Work in Progress, ftp://ftp.ee.lbl.gov/papers/dsarch.pdf\n \
    \  [CBQ]       S. Floyd and V. Jacobson, \"Link-sharing and Resource\n       \
    \        Management Models for Packet Networks\", IEEE/ACM\n               Transactions\
    \ on Networking, Vol. 3 no. 4, pp. 365-386,\n               August 1995.\n   [RFC2415]\
    \   Poduri, K. and K. Nichols, \"Simulation Studies of\n               Increased\
    \ Initial TCP Window Size\", RFC 2415, September\n               1998.\n   [LCN]\
    \       K. Nichols, \"Improving Network Simulation with Feedback\",\n        \
    \       Proceedings of LCN '98, October 1998.\n"
- title: 6. Authors' Addresses
  contents:
  - "6. Authors' Addresses\n   Van Jacobson\n   Cisco Systems, Inc\n   170 W. Tasman\
    \ Drive\n   San Jose, CA 95134-1706\n   EMail: van@cisco.com\n   Kathleen Nichols\n\
    \   Cisco Systems, Inc\n   170 W. Tasman Drive\n   San Jose, CA 95134-1706\n \
    \  EMail: kmn@cisco.com\n   Kedarnath Poduri\n   Bay Networks, Inc.\n   4401 Great\
    \ America Parkway\n   Santa Clara, CA 95052-8185\n   EMail: kpoduri@baynetworks.com\n"
- title: 'Appendix A: Example use of and experiences with the EF PHB'
  contents:
  - 'Appendix A: Example use of and experiences with the EF PHB

    '
- title: A.1 Virtual Leased Line Service
  contents:
  - "A.1 Virtual Leased Line Service\n   A VLL Service, also known as Premium service\
    \ [2BIT], is quantified by\n   a peak bandwidth.\n"
- title: A.2 Experiences with its use in ESNET
  contents:
  - "A.2 Experiences with its use in ESNET\n   A prototype of the VLL service has\
    \ been deployed on DOE's ESNet\n   backbone.  This uses weighted-round-robin queuing\
    \ features of Cisco\n   75xx series routers to implement the EF PHB. The early\
    \ tests have\n   been very successful and work is in progress to make the service\n\
    \   available on a routine production basis (see\n   ftp://ftp.ee.lbl.gov/talks/vj-doeqos.pdf\
    \ and\n   ftp://ftp.ee.lbl.gov/talks/vj-i2qos-may98.pdf for details).\n"
- title: A.3 Simulation Results
  contents:
  - 'A.3 Simulation Results

    '
- title: A.3.1 Jitter variation
  contents:
  - "A.3.1 Jitter variation\n   In section 2.2, we pointed out that a number of mechanisms\
    \ might be\n   used to implement the EF PHB. The simplest of these is a priority\n\
    \   queue (PQ) where the arrival rate of the queue is strictly less than\n   its\
    \ service rate. As jitter comes from the queuing delay along the\n   path, a feature\
    \ of this implementation is that EF-marked microflows\n   will see very little\
    \ jitter at their subscribed rate since packets\n   spend little time in queues.\
    \ The EF PHB does not have an explicit\n   jitter requirement but it is clear\
    \ from the definition that the\n   expected jitter in a packet stream that uses\
    \ a service based on the\n   EF PHB will be less with PQ than with best-effort\
    \ delivery. We used\n   simulation to explore how weighted round-robin (WRR) compares\
    \ to PQ\n   in jitter. We chose these two since they\"re the best and worst cases,\n\
    \   respectively, for jitter and we wanted to supply rough guidelines for\n  \
    \ EF implementers choosing to use WRR or similar mechanisms.\n   Our simulation\
    \ model is implemented in a modified ns-2 described in\n   [RFC2415] and [LCN].\
    \ We used the CBQ modules included with ns-2 as a\n   basis to implement priority\
    \ queuing and WRR. Our topology has six\n   hops with decreasing bandwidth in\
    \ the direction of a single 1.5 Mbps\n   bottleneck link (see figure 6). Sources\
    \ produce EF-marked packets at\n   an average bit rate equal to their subscribed\
    \ packet rate. Packets\n   are produced with a variation of +-10% from the interpacket\
    \ spacing\n   at the subscribed packet rate.  The individual source rates were\n\
    \   picked aggregate to 30% of the bottleneck link or 450 Kbps. A mixture\n  \
    \ of FTPs and HTTPs is then used to fill the link. Individual EF packet\n   sources\
    \ produce either all 160 byte packets or all 1500 byte packets.\n   Though we\
    \ present the statistics of flows with one size of packet,\n   all of the experiments\
    \ used a mixture of short and long packet EF\n   sources so the EF queues had\
    \ a mix of both packet lengths.\n   We defined jitter as the absolute value of\
    \ the difference between the\n   arrival times of two adjacent packets minus their\
    \ departure times,\n   |(aj-dj) - (ai-di)|. For the target flow of each experiment,\
    \ we\n   record the median and 90th percentile values of jitter (expressed as\n\
    \   % of the subscribed EF rate) in a table. The pdf version of this\n   document\
    \ contains graphs of the jitter percentiles.\n   Our experiments compared the\
    \ jitter of WRR and PQ implementations of\n   the EF PHB. We assessed the effect\
    \ of different choices of WRR queue\n   weight and number of queues on jitter.\
    \ For WRR, we define the\n   service-to-arrival rate ratio as the service rate\
    \ of the EF queue (or\n   the queue\"s minimum share of the output link) times\
    \ the output link\n   bandwidth divided by the peak arrival rate of EF-marked\
    \ packets at\n   the queue. Results will not be stable if the WRR weight is chosen\
    \ to\n   exactly balance arrival and departure rates thus we used a minimum\n\
    \   service-to-arrival ratio of 1.03. In our simulations this means that\n   the\
    \ EF queue gets at least 31% of the output links. In WRR\n   simulations we kept\
    \ the link full with other traffic as described\n   above, splitting the non-EF-marked\
    \ traffic among the non-EF queues.\n   (It should be clear from the experiment\
    \ description that we are\n   attempting to induce worst-case jitter and do not\
    \ expect these\n   settings or traffic to represent a \"normal\" operating point.)\n\
    \   Our first set of experiments uses the minimal service-to-arrival\n   ratio\
    \ of 1.06 and we vary the number of individual microflows\n   composing the EF\
    \ aggregate from 2 to 36. We compare these to a PQ\n   implementation with 24\
    \ flows. First, we examine a microflow at a\n   subscribed rate of 56 Kbps sending\
    \ 1500 byte packets, then one at the\n   same rate but sending 160 byte packets.\
    \ Table 1 shows the 50th and\n   90th percentile jitter in percent of a packet\
    \ time at the subscribed\n   rate. Figure 1 plots the 1500 byte flows and figure\
    \ 2 the 160 byte\n   flows.  Note that a packet-time for a 1500 byte packet at\
    \ 56 Kbps is\n   214 ms, for a 160 byte packet 23 ms. The jitter for the large\
    \ packets\n   rarely exceeds half a subscribed rate packet-time, though most\n\
    \   jitters for the small packets are at least one subscribed rate\n   packet-time.\
    \ Keep in mind that the EF aggregate is a mixture of small\n   and large packets\
    \ in all cases so short packets can wait for long\n   packets in the EF queue.\
    \ PQ gives a very low jitter.\n   Table 1: Variation in jitter with number of\
    \ EF flows: Service/arrival\n   ratio of 1.06 and subscription rate of 56 Kbps\
    \ (all values given as %\n   of subscribed rate)\n                           1500\
    \ byte pack. 160 byte packet\n               # EF flows  50th %  90th %  50th\
    \ %  90th %\n                PQ (24)     1       5       17      43\n        \
    \           2       11      47       96     513\n                   4       12\
    \      35      100     278\n                   8       10      25       96   \
    \  126\n                   24      18      47       96     143\n   Next we look\
    \ at the effects of increasing the service-to-arrival\n   ratio. This means that\
    \ EF packets should remain enqueued for less\n   time though the bandwidth available\
    \ to the other queues remains the\n   same.  In this set of experiments the number\
    \ of flows in the EF\n   aggregate was fixed at eight and the total number of\
    \ queues at five\n   (four non-EF queues). Table 2 shows the results for 1500\
    \ and 160 byte\n   flows.  Figures 3 plots the 1500 byte results and figure 4\
    \ the 160\n   byte results. Performance gains leveled off at service-to-arrival\n\
    \   ratios of 1.5. Note that the higher service-to-arrival ratios do not\n   give\
    \ the same performance as PQ, but now 90% of packets experience\n   less than\
    \ a subscribed packet-time of jitter even for the small\n   packets.\n   Table\
    \ 2: Variation in Jitter of EF flows: service/arrival ratio\n   varies, 8 flow\
    \ aggregate, 56 Kbps subscribed rate\n                   WRR     1500 byte pack.\
    \ 160 byte packet\n                   Ser/Arr 50th %  90th %  50th %  90th %\n\
    \                    PQ      1       3       17      43\n                   1.03\
    \    14      27      100     178\n                   1.30     7      21      \
    \ 65     113\n                   1.50     5      13       57     104\n       \
    \            1.70     5      13       57     100\n                   2.00    \
    \ 5      13       57     104\n                   3.00     5      13       57 \
    \    100\n   Increasing the number of queues at the output interfaces can lead\
    \ to\n   more variability in the service time for EF packets so we carried out\n\
    \   an experiment varying the number of queues at each output port. We\n   fixed\
    \ the number of flows in the aggregate to eight and used the\n   minimal 1.03\
    \ service-to-arrival ratio. Results are shown in figure 5\n   and table 3.  Figure\
    \ 5 includes PQ with 8 flows as a baseline.\n   Table 3: Variation in Jitter with\
    \ Number of Queues at Output\n   Interface: Service-to-arrival ratio is 1.03,\
    \ 8 flow aggregate\n                   # EF    1500 byte packet\n            \
    \       flows   50th %  90th %\n                   PQ (8)   1       3\n      \
    \               2      7      21\n                     4      7      21\n    \
    \                 6      8      22\n                     8     10      23\n  \
    \ It appears that most jitter for WRR is low and can be reduced by a\n   proper\
    \ choice of the EF queue's WRR share of the output link with\n   respect to its\
    \ subscribed rate.  As noted, WRR is a worst case while\n   PQ is the best case.\
    \ Other possibilities include WFQ or CBQ with a\n   fixed rate limit for the EF\
    \ queue but giving it priority over other\n   queues. We expect the latter to\
    \ have performance nearly identical\n   with PQ though future simulations are\
    \ needed to verify this. We have\n   not yet systematically explored effects of\
    \ hop count, EF allocations\n   other than 30% of the link bandwidth, or more\
    \ complex topologies. The\n   information in this section is not part of the EF\
    \ PHB definition but\n   provided simply as background to guide implementers.\n"
- title: A.3.2 VLL service
  contents:
  - "A.3.2 VLL service\n   We used simulation to see how well a VLL service built\
    \ from the EF\n   PHB behaved, that is, does it look like a `leased line' at the\n\
    \   subscribed rate. In the simulations of the last section, none of the\n   EF\
    \ packets were dropped in the network and the target rate was always\n   achieved\
    \ for those CBR sources. However, we wanted to see if VLL\n   really looks like\
    \ a `wire' to a TCP using it. So we simulated long-\n   lived FTPs using a VLL\
    \ service. Table 4 gives the percentage of each\n   link allocated to EF traffic\
    \ (bandwidths are lower on the links with\n   fewer EF microflows), the subscribed\
    \ VLL rate, the average rate for\n   the same type of sender-receiver pair connected\
    \ by a full duplex\n   dedicated link at the subscribed rate and the average of\
    \ the VLL\n   flows for each simulation (all sender-receiver pairs had the same\n\
    \   value). Losses only occur when the input shaping buffer overflows but\n  \
    \ not in the network.  The target rate is not achieved due to the\n   well-known\
    \ TCP behavior.\n             Table 4: Performance of FTPs using a VLL service\n\
    \                % link     Average delivered rate (Kbps)\n                to\
    \ EF   Subscribed      Dedicated       VLL\n                20      100      \
    \       90              90\n                40      150             143      \
    \       143\n                60      225             213             215\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1999).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
