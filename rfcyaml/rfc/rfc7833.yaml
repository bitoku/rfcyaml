- contents:
  - "   A RADIUS Attribute, Binding, Profiles, Name Identifier Format, and\n Confirmation
    Methods for the Security Assertion Markup Language (SAML)\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes the use of the Security Assertion Markup\n
    \  Language (SAML) with RADIUS in the context of the Application\n   Bridging
    for Federated Access Beyond web (ABFAB) architecture.  It\n   defines two RADIUS
    attributes, a SAML binding, a SAML name identifier\n   format, two SAML profiles,
    and two SAML confirmation methods.  The\n   RADIUS attributes permit encapsulation
    of SAML Assertions and\n   protocol messages within RADIUS, allowing SAML entities
    to\n   communicate using the binding.  The two profiles describe the\n   application
    of this binding for ABFAB authentication and assertion\n   Query/Request, enabling
    a Relying Party to request authentication of,\n   or assertions for, users or
    machines (clients).  These clients may be\n   named using a Network Access Identifier
    (NAI) name identifier format.\n   Finally, the subject confirmation methods allow
    requests and queries\n   to be issued for a previously authenticated user or machine
    without\n   needing to explicitly identify them as the subject.  The use of the\n
    \  artifacts defined in this document is not exclusive to ABFAB.  They\n   can
    be applied in any Authentication, Authorization, and Accounting\n   (AAA) scenario,
    such as network access control.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7833.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \     1.1. Terminology ................................................5\n   2.
    Conventions .....................................................5\n   3. RADIUS
    SAML Attributes ..........................................5\n      3.1. SAML-Assertion
    Attribute ...................................6\n      3.2. SAML-Protocol Attribute
    ....................................7\n   4. SAML RADIUS Binding .............................................8\n
    \     4.1. Required Information .......................................8\n      4.2.
    Operation ..................................................8\n      4.3. Processing
    of Names ........................................9\n           4.3.1. AAA Names
    ..........................................10\n           4.3.2. SAML Names .........................................10\n
    \          4.3.3. Mapping of AAA Names in SAML Metadata ..............11\n           4.3.4.
    Example of SAML Metadata That Includes AAA Names ...13\n      4.4. Use of XML
    Signatures .....................................14\n      4.5. Metadata Considerations
    ...................................14\n   5. Network Access Identifier Name Identifier
    Format ...............14\n   6. RADIUS State Confirmation Method Identifiers ...................15\n
    \  7. ABFAB Authentication Profile ...................................15\n      7.1.
    Required Information ......................................15\n      7.2. Profile
    Overview ..........................................16\n      7.3. Profile Description
    .......................................18\n           7.3.1. Client Request to
    Relying Party ....................18\n           7.3.2. Relying Party Issues <samlp:AuthnRequest>\n
    \                 to Identity Provider ...............................18\n           7.3.3.
    Identity Provider Identifies Client ................18\n           7.3.4. Identity
    Provider Issues <samlp:Response>\n                  to Relying Party ...................................19\n
    \          7.3.5. Relying Party Grants or Denies Access to Client ....19\n      7.4.
    Use of Authentication Request Protocol ....................19\n           7.4.1.
    <samlp:AuthnRequest> Usage .........................19\n           7.4.2. <samlp:Response>
    Message Usage .....................20\n           7.4.3. <samlp:Response> Message
    Processing Rules ..........20\n           7.4.4. Unsolicited Responses ..............................21\n
    \          7.4.5. Use of the SAML RADIUS Binding .....................21\n           7.4.6.
    Use of XML Signatures ..............................21\n           7.4.7. Metadata
    Considerations ............................21\n   8. ABFAB Assertion Query/Request
    Profile ..........................21\n      8.1. Required Information ......................................22\n
    \     8.2. Profile Overview ..........................................22\n      8.3.
    Profile Description .......................................23\n           8.3.1.
    Differences from the SAML V2.0 Assertion\n                  Query/Request Profile
    ..............................23\n           8.3.2. Use of the SAML RADIUS Binding
    .....................23\n           8.3.3. Use of XML Signatures ..............................24\n
    \          8.3.4. Metadata Considerations ............................24\n   9.
    Privacy Considerations .........................................24\n   10. Security
    Considerations .......................................25\n   11. IANA Considerations
    ...........................................25\n      11.1. RADIUS Attributes ........................................25\n
    \     11.2. ABFAB Parameters .........................................26\n      11.3.
    Registration of the ABFAB URN Namespace ..................27\n   12. References
    ....................................................27\n      12.1. Normative
    References .....................................27\n      12.2. Informative References
    ...................................29\n   Appendix A. XML Schema ............................................30\n
    \  Acknowledgments ...................................................32\n   Authors'
    Addresses ................................................32\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Within the ABFAB (Application Bridging for Federated Access
    Beyond\n   web) architecture [RFC7831], it is often desirable to convey Security\n
    \  Assertion Markup Language (SAML) Assertions and protocol messages.\n   SAML
    typically only considers the use of HTTP-based transports, known\n   as bindings
    [OASIS.saml-bindings-2.0-os], which are primarily\n   intended for use with the
    SAML V2.0 web browser single sign-on\n   profile [OASIS.saml-profiles-2.0-os].
    \ However, the goal of ABFAB is\n   to extend the applicability of federated identity
    beyond the web to\n   other applications by building on the Authentication, Authorization,\n
    \  and Accounting (AAA) framework.  Consequently, there exists a\n   requirement
    for SAML to integrate with the AAA framework and with\n   protocols such as RADIUS
    [RFC2865] and Diameter [RFC6733], in\n   addition to HTTP.\n   In summary, this
    document specifies:\n   o  Two RADIUS attributes to encapsulate SAML Assertions
    and protocol\n      messages, respectively.\n   o  A SAML RADIUS binding that
    defines how SAML Assertions and\n      protocol messages can be transported by
    RADIUS within a SAML\n      exchange.\n   o  A SAML name identifier format in
    the form of a Network Access\n      Identifier.\n   o  A profile of the SAML Authentication
    Request Protocol that uses\n      the SAML RADIUS binding to effect SAML-based
    authentication and\n      authorization.\n   o  A profile of the SAML Assertion
    Query and Request Protocol that\n      uses the SAML RADIUS binding to effect
    the query and request of\n      SAML Assertions.\n   o  Two SAML subject confirmation
    methods for indicating that a user\n      or machine client is the subject of
    an assertion.\n   This document adheres to the guidelines stipulated by\n   [OASIS.saml-bindings-2.0-os]
    and [OASIS.saml-profiles-2.0-os] for\n   defining new SAML bindings and profiles,
    respectively, and other\n   conventions applied formally or otherwise within SAML.
    \ In\n   particular, this document provides a \"Required Information\" section\n
    \  for the binding (Section 4.1) and profiles (Sections 7.1 and 8.1)\n   that
    enumerate:\n   o  A URI that uniquely identifies the protocol binding or profile.\n
    \  o  Postal or electronic contact information for the author.\n   o  A reference
    to previously defined bindings or profiles that the\n      new binding updates
    or obsoletes.\n   o  In the case of a profile, any SAML confirmation method identifiers\n
    \     defined and/or utilized by the profile.\n"
  - contents:
    - "1.1.  Terminology\n   This document uses terminology from a number of related
      standards\n   that tend to adopt different terms for similar or identical concepts.\n
      \  In general, this document uses, when possible, the ABFAB term for the\n   entity,
      as described in [RFC7831].  For reference, we include the\n   following table,
      which maps the different terms into a single view.\n   (In this document, \"NAS\"
      refers to a network access server, and \"AS\"\n   refers to an authentication
      server.)\n      +----------+-----------+------------------+-------------------+\n
      \     | Protocol | Client    | Relying Party    | Identity Provider |\n      +----------+-----------+------------------+-------------------+\n
      \     | ABFAB    | Client    | Relying Party    | Identity Provider |\n      |
      \         |           |                  |                   |\n      | SAML
      \    | Subject   | Service Provider | Identity Provider |\n      |          |
      Principal | Requester        | Responder         |\n      |          |           |
      Consumer         | Issuer            |\n      |          |           |                  |
      \                  |\n      | RADIUS   | User      | NAS              | AS                |\n
      \     |          |           | RADIUS client    | RADIUS server     |\n      +----------+-----------+------------------+-------------------+\n
      \                          Table 1: Terminology\n"
    title: 1.1.  Terminology
  title: 1.  Introduction
- contents:
  - "2.  Conventions\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\",
    \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\"
    in this\n   document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 2.  Conventions
- contents:
  - "3.  RADIUS SAML Attributes\n   The SAML RADIUS binding defined in Section 4 of
    this document uses\n   two attributes to convey SAML Assertions and protocol messages\n
    \  [OASIS.saml-core-2.0-os].  Owing to the typical size of these\n   structures,
    these attributes use the \"Long Extended Type\" format\n   [RFC6929] to encapsulate
    their data.  RADIUS entities MUST NOT\n   include both attributes in the same
    RADIUS message, as they represent\n   exclusive alternatives to convey SAML information.\n"
  - contents:
    - "3.1.  SAML-Assertion Attribute\n   This attribute is used to encode a SAML
      Assertion.  Figure 1\n   represents the format of this attribute.\n                          1
      \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |   Type        |    Length     | Extended-Type |M|  Reserved   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |   Value...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                     Figure 1: SAML-Assertion Format\n   Type\n      245\n
      \  Length\n      >= 5\n   Extended-Type\n      1\n   M (More)\n      As described
      in [RFC6929].\n   Reserved\n      As described in [RFC6929].\n   Value\n      One
      or more octets encoding a SAML Assertion.\n"
    title: 3.1.  SAML-Assertion Attribute
  - contents:
    - "3.2.  SAML-Protocol Attribute\n   This attribute is used to encode a SAML protocol
      message.  Figure 2\n   represents the format of this attribute.\n                          1
      \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |   Type        |    Length     | Extended-Type |M|  Reserved   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |   Value...\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                     Figure 2: SAML-Protocol Format\n   Type\n      245\n   Length\n
      \     >= 5\n   Extended-Type\n      2\n   M (More)\n      As described in [RFC6929].\n
      \  Reserved\n      As described in [RFC6929].\n   Value\n      One or more octets
      encoding a SAML protocol message.\n"
    title: 3.2.  SAML-Protocol Attribute
  title: 3.  RADIUS SAML Attributes
- contents:
  - "4.  SAML RADIUS Binding\n   The SAML RADIUS binding defines how RADIUS [RFC2865]
    can be used to\n   enable a RADIUS client and server to exchange SAML Assertions
    and\n   protocol messages.\n"
  - contents:
    - "4.1.  Required Information\n   Identification: urn:ietf:params:abfab:bindings:radius\n
      \  Contact information: iesg@ietf.org\n   Updates: None.\n"
    title: 4.1.  Required Information
  - contents:
    - "4.2.  Operation\n   In this specification, the Relying Party (RP) MUST trust
      any\n   statement in the SAML messages from the Identity Provider (IdP) in\n
      \  the same way that it trusts information contained in RADIUS\n   attributes.
      \ These entities MUST trust the RADIUS infrastructure to\n   provide integrity
      of the SAML messages.\n   Hence, it is REQUIRED that the RADIUS exchange be
      protected using\n   Transport Layer Security (TLS) encryption for RADIUS [RFC6614]
      to\n   provide confidentiality and integrity protection, unless alternative\n
      \  methods to ensure them are used, such as IPsec tunnels or a\n   sufficiently
      secure internal network.\n   Implementations of this profile can take advantage
      of mechanisms to\n   permit the transport of longer SAML messages over RADIUS
      transports,\n   such as the support of fragmentation of RADIUS packets [RFC7499]
      or\n   larger packets for RADIUS over TCP [RADIUS-Large-Pkts].\n   There are
      two system models for the use of SAML over RADIUS.  The\n   first is a request-response
      model, using the RADIUS SAML-Protocol\n   attribute defined in Section 3 to
      encapsulate the SAML protocol\n   messages.\n   1.  The RADIUS client, acting
      as an RP, transmits a SAML request\n       element within a RADIUS Access-Request
      message.  This message\n       MUST include a single instance of the RADIUS
      User-Name attribute\n       whose value MUST conform to the Network Access Identifier\n
      \      [RFC7542] scheme.  The RP MUST NOT include more than one SAML\n       request
      element.\n   2.  The RADIUS server, acting as an IdP, returns a SAML protocol\n
      \      message within a RADIUS Access-Accept or Access-Reject message.\n       These
      messages necessarily conclude a RADIUS exchange, and\n       therefore this
      is the only opportunity for the IdP to send a\n       response in the context
      of this exchange.  The IdP MUST NOT\n       include more than one SAML response.
      \ An IdP that refuses to\n       perform a message exchange with the RP can
      silently discard the\n       SAML request (this could subsequently be followed
      by a RADIUS\n       Access-Reject, as the same conditions that cause the IdP
      to\n       discard the SAML request may also cause the RADIUS server to fail\n
      \      to authenticate).\n   The second system model permits a RADIUS server
      acting as an IdP to\n   use the RADIUS SAML-Assertion attribute defined in Section
      3 to\n   encapsulate an unsolicited SAML Assertion.  This attribute MUST be\n
      \  included in a RADIUS Access-Accept message.  When included, the\n   attribute
      MUST contain a single SAML Assertion.\n   RADIUS servers MUST NOT include both
      the SAML-Protocol and the\n   SAML-Assertion attribute in the same RADIUS message.
      \ If an IdP is\n   producing a response to a SAML request, then the first system
      model\n   is used.  An IdP MAY ignore a SAML request and send an unsolicited\n
      \  assertion using the second system model (that is, using the RADIUS\n   SAML-Assertion
      attribute).\n   In either system model, IdPs SHOULD return a RADIUS State attribute\n
      \  as part of the Access-Accept message so that future SAML queries or\n   requests
      can be run against the same context of an authentication\n   exchange.\n   This
      binding is intended to be composed with other uses of RADIUS,\n   such as network
      access.  Therefore, other arbitrary RADIUS attributes\n   MAY be used in either
      the request or response.\n   In the case of a SAML processing error, the RADIUS
      server MAY include\n   a SAML response message with an appropriate value for
      the\n   <samlp:Status> element within the Access-Accept or Access-Reject\n   packet
      to notify the client.  Alternatively, the RADIUS server can\n   respond without
      a SAML-Protocol attribute.\n"
    title: 4.2.  Operation
  - contents:
    - "4.3.  Processing of Names\n   SAML entities using profiles making use of this
      binding will\n   typically possess both the SAML and AAA names of their\n   correspondents.
      \ Frequently, these entities will need to apply\n   policies using these names
      -- for example, when deciding to release\n   attributes.  Often, these policies
      will be security-sensitive, and so\n   it is important that policy is applied
      on these names consistently.\n"
    - contents:
      - "4.3.1.  AAA Names\n   These rules relate to the processing of AAA names by
        SAML entities\n   using profiles making use of this binding.\n   o  IdPs SHOULD
        apply policy based on the RP's identity associated\n      with the RADIUS
        Access-Request.\n   o  RPs SHOULD apply policy based on the NAI realm associated
        with the\n      RADIUS Access-Accept.\n"
      title: 4.3.1.  AAA Names
    - contents:
      - "4.3.2.  SAML Names\n   These rules relate to the processing of SAML names
        by SAML entities\n   using profiles making use of this binding.\n   IdPs MAY
        apply policy based on the RP's SAML entityID.  In such\n   cases, at least
        one of the following methods is required in order to\n   establish a relationship
        between the SAML name and the AAA name of\n   the RP:\n   o  RADIUS client
        identity in trusted SAML metadata (as described in\n      Section 4.3.3).\n
        \  o  RADIUS client identity in trusted digitally signed SAML request.\n   A
        digitally signed SAML request without the RADIUS client identity is\n   not
        sufficient, since a malicious RADIUS entity can observe a SAML\n   message
        and include it in a different RADIUS message without the\n   consent of the
        issuer of that SAML message.  If an IdP were to\n   process the SAML message
        without confirming that it applied to the\n   RADIUS message, inappropriate
        policy would be used.\n   RPs MAY apply policy based on the SAML issuer's
        entityID.  In such\n   cases, at least one of the following methods is required
        in order to\n   establish a relationship between the SAML name and the AAA
        name of\n   the IdP:\n   o  RADIUS realm in trusted SAML metadata (as described
        in\n      Section 4.3.3).\n   o  RADIUS realm in trusted digitally signed
        SAML response or\n      assertion.\n   A digitally signed SAML response alone
        is not sufficient, for the\n   same reasons as those described above for SAML
        requests.\n"
      title: 4.3.2.  SAML Names
    - contents:
      - "4.3.3.  Mapping of AAA Names in SAML Metadata\n   This section defines extensions
        to the SAML metadata schema\n   [OASIS.saml-metadata-2.0-os] that are required
        in order to represent\n   AAA names associated with a particular <EntityDescriptor>
        element.\n   In SAML metadata, a single entity may act in many different roles
        in\n   the support of multiple profiles.  This document defines two new\n
        \  roles: RADIUS IdP and RADIUS RP, requiring the declaration of two new\n
        \  subtypes of RoleDescriptorType: RADIUSIDPDescriptorType and\n   RADIUSRPDescriptorType.
        \ These subtypes contain the additional\n   elements required to represent
        AAA names for IdP and RP entities,\n   respectively.\n"
      - contents:
        - "4.3.3.1.  RADIUSIDPDescriptorType\n   The RADIUSIDPDescriptorType complex
          type extends RoleDescriptorType\n   with elements common to IdPs that support
          RADIUS.  It contains the\n   following additional elements:\n   <RADIUSIDPService>
          [Zero or More]  Zero or more elements of type\n      EndpointType that describe
          RADIUS endpoints that are associated\n      with the entity.\n   <RADIUSRealm>
          [Zero or More]  Zero or more elements of type string\n      that represent
          the acceptable values of the RADIUS realm\n      associated with the entity,
          obtained from the realm part of the\n      RADIUS User-Name attribute.\n
          \  The following schema fragment defines the RADIUSIDPDescriptorType\n   complex
          type:\n           <complexType name=\"RADIUSIDPDescriptorType\">\n             <complexContent>\n
          \              <extension base=\"md:RoleDescriptorType\">\n                 <sequence>\n
          \                  <element ref=\"abfab:RADIUSIDPService\"\n                                 minOccurs=\"0\"
          maxOccurs=\"unbounded\"/>\n                   <element ref=\"abfab:RADIUSRealm\"\n
          \                                minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
          \                </sequence>\n               </extension>\n             </complexContent>\n
          \          </complexType>\n           <element name=\"RADIUSIDPService\"
          type=\"md:EndpointType\"/>\n           <element name=\"RADIUSRealm\" type=\"string\"/>\n
          \                Figure 3: RADIUSIDPDescriptorType Schema\n"
        title: 4.3.3.1.  RADIUSIDPDescriptorType
      - contents:
        - "4.3.3.2.  RADIUSRPDescriptorType\n   The RADIUSRPDescriptorType complex
          type extends RoleDescriptorType\n   with elements common to RPs that support
          RADIUS.  It contains the\n   following additional elements:\n   <RADIUSRPService>
          [Zero or More]  Zero or more elements of type\n      EndpointType that describe
          RADIUS endpoints that are associated\n      with the entity.\n   <RADIUSNasIpAddress>
          [Zero or More]  Zero or more elements of type\n      string that represent
          the acceptable values of the RADIUS\n      NAS-IP-Address or NAS-IPv6-Address
          attributes associated with the\n      entity.\n   <RADIUSNasIdentifier>
          [Zero or More]  Zero or more elements of type\n      string that represent
          the acceptable values of the RADIUS\n      NAS-Identifier attribute associated
          with the entity.\n   <RADIUSGssEapName> [Zero or More]  Zero or more elements
          of type\n      string that represent the acceptable values of the GSS-API\n
          \     Mechanism for the Extensible Authentication Protocol (GSS-EAP)\n      acceptor
          name associated with the entity.  The format for this\n      name is described
          in Section 3.1 of [RFC7055], while Section 3.4\n      of [RFC7055] describes
          how that name is decomposed and transported\n      using RADIUS attributes.\n
          \  The following schema fragment defines the RADIUSRPDescriptorType\n   complex
          type:\n       <complexType name=\"RADIUSRPDescriptorType\">\n         <complexContent>\n
          \          <extension base=\"md:RoleDescriptorType\">\n             <sequence>\n
          \              <element ref=\"md:RADIUSRPService\"\n                             minOccurs=\"0\"
          maxOccurs=\"unbounded\"/>\n               <element ref=\"md:RADIUSNasIpAddress\"\n
          \                            minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
          \              <element ref=\"md:RADIUSNasIdentifier\"\n                             minOccurs=\"0\"
          maxOccurs=\"unbounded\"/>\n               <element ref=\"md:RADIUSGssEapName\"\n
          \                            minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
          \            </sequence>\n           </extension>\n         </complexContent>\n
          \      </complexType>\n       <element name=\"RADIUSRPService\" type=\"md:EndpointType\"/>\n
          \      <element name=\"RADIUSNasIpAddress\" type=\"string\"/>\n       <element
          name=\"RADIUSNasIdentifier\" type=\"string\"/>\n       <element name=\"RADIUSGssEapName\"
          type=\"string\"/>\n                  Figure 4: RADIUSRPDescriptorType Schema\n"
        title: 4.3.3.2.  RADIUSRPDescriptorType
      title: 4.3.3.  Mapping of AAA Names in SAML Metadata
    - contents:
      - "4.3.4.  Example of SAML Metadata That Includes AAA Names\n   Figures 5 and
        6 illustrate examples of metadata that includes AAA\n   names for an IdP and
        an RP, respectively.  The IdP's SAML name is\n   \"https://IdentityProvider.com/\",
        whereas its RADIUS realm is\n   \"idp.com\".  The RP's SAML name is \"https://RelyingParty.com/SAML\",\n
        \  being its GSS-EAP acceptor name \"nfs/fileserver.rp.com@RP.COM\".\n"
      - "<EntityDescriptor\n   xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n
        \  xmlns:abfab=\"urn:ietf:params:xml:ns:abfab\"\n   entityID=\"https://IdentityProvider.com/SAML\">\n
        \  <RoleDescriptor\n      xsi:type=\"abfab:RADIUSIDPDescriptorType\"\n      protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n
        \      <RADIUSRealm>idp.com</RADIUSRealm>\n   </RoleDescriptor>\n"
      - "</EntityDescriptor>\n                      Figure 5: Metadata for the IdP\n"
      - "<EntityDescriptor\n   xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\"\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n
        \  xmlns:abfab=\"urn:ietf:params:xml:ns:abfab\"\n   entityID=\"https://RelyingParty.com/SAML\">\n
        \  <RoleDescriptor\n      xsi:type=\"abfab:RADIUSRPDescriptorType\"\n      protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n
        \      <RADIUSGssEapName>nfs/fileserver.rp.com@RP.COM</RADIUSGssEapName>\n
        \  </RoleDescriptor>\n"
      - "</EntityDescriptor>\n                       Figure 6: Metadata for the RP\n"
      title: 4.3.4.  Example of SAML Metadata That Includes AAA Names
    title: 4.3.  Processing of Names
  - contents:
    - "4.4.  Use of XML Signatures\n   This binding calls for the use of SAML elements
      that support XML\n   signatures.  To promote interoperability, implementations
      of this\n   binding MUST support a default configuration that does not require\n
      \  the use of XML signatures.  Implementations MAY choose to use XML\n   signatures.\n"
    title: 4.4.  Use of XML Signatures
  - contents:
    - "4.5.  Metadata Considerations\n   This binding, and the profiles, are mostly
      intended to be used\n   without metadata.  In this usage, RADIUS infrastructure
      is used to\n   provide integrity and naming of the SAML messages and assertions.\n
      \  RADIUS configuration is used to provide policy, including which\n   attributes
      are accepted from an RP and which attributes are sent by\n   an IdP.\n   Nevertheless,
      if metadata is used, the roles described in\n   Section 4.3.3 MUST be present.\n"
    title: 4.5.  Metadata Considerations
  title: 4.  SAML RADIUS Binding
- contents:
  - "5.  Network Access Identifier Name Identifier Format\n   URI: urn:ietf:params:abfab:nameid-format:nai\n
    \  Indicates that the content of the element is in the form of a Network\n   Access
    Identifier (NAI) using the syntax described by [RFC7542].\n"
  title: 5.  Network Access Identifier Name Identifier Format
- contents:
  - "6.  RADIUS State Confirmation Method Identifiers\n   URI: urn:ietf:params:abfab:cm:user\n
    \  URI: urn:ietf:params:abfab:cm:machine\n   Indicates that the subject is the
    system entity (either the user or\n   machine) authenticated by a previously transmitted
    RADIUS\n   Access-Accept message, as identified by the value of that RADIUS\n
    \  message's State attribute.\n"
  title: 6.  RADIUS State Confirmation Method Identifiers
- contents:
  - "7.  ABFAB Authentication Profile\n   In the scenario supported by the ABFAB Authentication
    Profile, a\n   client controlling a User Agent requests access to an RP.  The
    RP\n   uses RADIUS to authenticate the client.  In particular, the RP,\n   acting
    as a RADIUS client, attempts to validate the client's\n   credentials against
    a RADIUS server acting as the client's IdP.  If\n   the IdP successfully authenticates
    the client, it produces an\n   authentication assertion that is consumed by the
    RP.  This assertion\n   MAY include a name identifier that can be used between
    the RP and the\n   IdP to refer to the client.\n"
  - contents:
    - "7.1.  Required Information\n   Identification: urn:ietf:params:abfab:profiles:authentication\n
      \  Contact information: iesg@ietf.org\n   SAML confirmation method identifiers:
      The SAML V2.0 \"RADIUS State\"\n   confirmation method identifiers -- either\n
      \  urn:ietf:params:abfab:cm:user or urn:ietf:params:abfab:cm:machine --\n   are
      used by this profile.\n   Updates: None.\n"
    title: 7.1.  Required Information
  - contents:
    - "7.2.  Profile Overview\n   To implement this scenario, this profile of the
      SAML Authentication\n   Request Protocol MUST be used in conjunction with the
      SAML RADIUS\n   binding defined in Section 4.\n   This profile is based on the
      SAML V2.0 web browser single sign-on\n   profile [OASIS.saml-profiles-2.0-os].
      \ There are some important\n   differences; specifically:\n   Authentication:
      \ This profile does not require the use of any\n      particular authentication
      method.  The ABFAB architecture does\n      require the use of the Extensible
      Authentication Protocol (EAP)\n      [RFC3579], but this specification may be
      used in other non-ABFAB\n      scenarios.\n   Bindings:  This profile does not
      use HTTP-based bindings.  Instead,\n      all SAML protocol messages are transported
      using the SAML RADIUS\n      binding defined in Section 4.  This is intended
      to reduce the\n      number of bindings that implementations must support to
      be\n      interoperable.\n   Requests:  The profile does not permit the RP to
      name the\n      <saml:Subject> of the <samlp:AuthnRequest>.  This is intended
      to\n      simplify implementation and interoperability.\n   Responses:  The
      profile only permits the IdP to return a single SAML\n      message or assertion
      that MUST contain exactly one authentication\n      statement.  Other statements
      may be included within this assertion\n      at the discretion of the IdP.  This
      is intended to simplify\n      implementation and interoperability.\n   Figure
      7 below illustrates the flow of messages within this profile.\n       Client
      \           Relying Party             Identity Provider\n         |                     |
      \                          |\n         |         (1)         |                           |\n
      \        | - - - - - - - - - > |                           |\n         |                     |
      \                          |\n         |                     |            (2)
      \           |\n         |                     | - - - - - - - - - - - - > |\n
      \        |                     |                           |\n         |              (3)
      \   |                           |\n         | < - - - - - - - - - |- - - - -
      - - - - - - - - >|\n         |                     |                           |\n
      \        |                     |            (4)            |\n         |                     |
      < - - - - - - - - - - - - |\n         |                     |                           |\n
      \        |         (5)         |                           |\n         | < -
      - - - - - - - - |                           |\n         |                     |
      \                          |\n         V                     V                           V\n
      \                       Figure 7: Flow of Messages\n   The following steps are
      described by the profile.  Within an\n   individual step, there may be one or
      more actual message exchanges.\n   1.  Client request to RP (Section 7.3.1):
      In step 1, the client, via\n       a User Agent, makes a request for a secured
      resource at the RP.\n       The RP determines that no security context for the
      client exists\n       and initiates the authentication process.\n   2.  RP issues
      <samlp:AuthnRequest> to IdP (Section 7.3.2).  In step\n       2, the RP may
      optionally issue a <samlp:AuthnRequest> message to\n       be delivered to the
      IdP using the SAML-Protocol RADIUS attribute.\n   3.  IdP identifies client
      (Section 7.3.3).  In step 3, the client is\n       authenticated and identified
      by the IdP, while honoring any\n       requirements imposed by the RP in the
      <samlp:AuthnRequest>\n       message if provided.\n   4.  IdP issues <samlp:Response>
      to RP (Section 7.3.4).  In step 4,\n       the IdP issues a <samlp:Response>
      message to the RP using the\n       SAML RADIUS binding.  The response either
      indicates an error or\n       includes a SAML authentication statement in exactly
      one SAML\n       Assertion.  If the RP did not send a <samlp:AuthnRequest>,
      the\n       IdP issues an unsolicited <samlp:Assertion>, as described in\n       Section
      7.4.4.\n   5.  RP grants or denies access to client (Section 7.3.5).  In step
      5,\n       having received the response from the IdP, the RP can respond to\n
      \      the client with its own error, or can establish its own security\n       context
      for the client and return the requested resource.\n"
    title: 7.2.  Profile Overview
  - contents:
    - "7.3.  Profile Description\n   The ABFAB Authentication Profile is a profile
      of the SAML V2.0\n   Authentication Request Protocol [OASIS.saml-core-2.0-os].
      \ Where both\n   specifications conflict, the ABFAB Authentication Profile takes\n
      \  precedence.\n"
    - contents:
      - "7.3.1.  Client Request to Relying Party\n   The profile is initiated by an
        arbitrary client request to the RP.\n   There are no restrictions on the form
        of the request.  The RP is free\n   to use any means it wishes to associate
        the subsequent interactions\n   with the original request.  The RP, acting
        as a RADIUS client,\n   attempts to authenticate the client.\n"
      title: 7.3.1.  Client Request to Relying Party
    - contents:
      - "7.3.2.  Relying Party Issues <samlp:AuthnRequest> to Identity Provider\n
        \  The RP uses RADIUS to communicate with the client's IdP.  The RP MAY\n
        \  include a <samlp:AuthnRequest> within this RADIUS Access-Request\n   message
        using the SAML-Protocol RADIUS attribute.  The \"next hop\"\n   destination
        MAY be the IdP or, alternatively, an intermediate RADIUS\n   proxy.\n   Profile-specific
        rules for the contents of the <samlp:AuthnRequest>\n   element are given in
        Section 7.4.1.\n"
      title: 7.3.2.  Relying Party Issues <samlp:AuthnRequest> to Identity Provider
    - contents:
      - "7.3.3.  Identity Provider Identifies Client\n   The IdP MUST establish the
        identity of the client using a RADIUS\n   authentication method, or else it
        will return an error.  If the\n   ForceAuthn attribute in the <samlp:AuthnRequest>
        element (if sent by\n   the RP) is present and true, the IdP MUST freshly
        establish this\n   identity rather than relying on any existing session state
        it may\n   have with the client (for example, TLS state that may be used for\n
        \  session resumption).  Otherwise, and in all other respects, the IdP\n   may
        use any method to authenticate the client, subject to the\n   constraints
        called out in the <samlp:AuthnRequest> message.\n"
      title: 7.3.3.  Identity Provider Identifies Client
    - contents:
      - "7.3.4.  Identity Provider Issues <samlp:Response> to Relying Party\n   The
        IdP MUST conclude the authentication in a manner consistent with\n   the RADIUS
        authentication result.  The IdP MAY issue a\n   <samlp:Response> message to
        the RP that is consistent with the\n   authentication result, as described
        in [OASIS.saml-core-2.0-os].\n   This SAML response is delivered to the RP
        using the SAML RADIUS\n   binding described in Section 4.\n   Profile-specific
        rules regarding the contents of the <samlp:Response>\n   element are given
        in Section 7.4.2.\n"
      title: 7.3.4.  Identity Provider Issues <samlp:Response> to Relying Party
    - contents:
      - "7.3.5.  Relying Party Grants or Denies Access to Client\n   If a <samlp:Response>
        message is issued by the IdP, the RP MUST\n   process that message and any
        enclosed assertion elements as described\n   in [OASIS.saml-core-2.0-os].
        \ Any subsequent use of the assertion\n   elements is at the discretion of
        the RP, subject to any restrictions\n   contained within the assertions themselves
        or from any previously\n   established out-of-band policy that governs the
        interaction between\n   the IdP and the RP.\n"
      title: 7.3.5.  Relying Party Grants or Denies Access to Client
    title: 7.3.  Profile Description
  - contents:
    - "7.4.  Use of Authentication Request Protocol\n   This profile is based on the
      Authentication Request Protocol defined\n   in [OASIS.saml-core-2.0-os].  In
      the nomenclature of actors\n   enumerated in Section 3.4 of that document, the
      RP is the requester,\n   the User Agent is the attesting entity, and the client
      is the\n   subject.\n"
    - contents:
      - "7.4.1.  <samlp:AuthnRequest> Usage\n   The RP MUST NOT include a <saml:Subject>
        element in the request.  The\n   authenticated RADIUS identity identifies
        the client to the IdP.\n   An RP MAY include any message content described
        in Section 3.4.1 of\n   [OASIS.saml-core-2.0-os].  All processing rules are
        as defined in\n   [OASIS.saml-core-2.0-os].\n   If the RP wishes to permit
        the IdP to establish a new identifier for\n   the client if none exists, it
        MUST include a <saml:NameIDPolicy>\n   element with the AllowCreate attribute
        set to \"true\".  Otherwise,\n   only a client for whom the IdP has previously
        established an\n   identifier usable by the RP can be authenticated successfully.\n
        \  The <samlp:AuthnRequest> message MAY be signed.  Authentication and\n   integrity
        are also provided by the SAML RADIUS binding.\n"
      title: 7.4.1.  <samlp:AuthnRequest> Usage
    - contents:
      - "7.4.2.  <samlp:Response> Message Usage\n   If the IdP cannot or will not
        satisfy the request, it MUST respond\n   with a <samlp:Response> message containing
        an appropriate error\n   status code or codes and/or respond with a RADIUS
        Access-Reject\n   message.\n   If the IdP wishes to return an error, it MUST
        NOT include any\n   assertions in the <samlp:Response> message.  Otherwise,
        if the\n   request is successful (or if the response is not associated with
        a\n   request), the <samlp:Response> element is subject to the following\n
        \  constraints:\n   o  It MAY be signed.\n   o  It MUST contain exactly one
        assertion.  The <saml:Subject> element\n      of this assertion MUST refer
        to the authenticated RADIUS user.\n   o  The assertion MUST contain a <saml:AuthnStatement>.
        \ Also, the\n      assertion MUST contain a <saml:Subject> element with at
        least one\n      <saml:SubjectConfirmation> element containing a\n      <saml:ConfirmationMethod>
        element of urn:ietf:params:abfab:cm:user\n      or urn:ietf:params:abfab:cm:machine
        that reflects the\n      authentication of the client to the IdP.  Since the\n
        \     <samlp:Response> message is in response to a <samlp:AuthnRequest>,\n
        \     the InResponseTo attribute (in both the\n      <saml:SubjectConfirmationData>
        and <saml:Response> elements) MUST\n      match the request's ID.  The <saml:Subject>
        element MAY use the\n      NAI name identifier format described in Section
        5 to establish an\n      identifier between the RP and the IdP.\n   o  Other
        conditions MAY be included as requested by the RP or at the\n      discretion
        of the IdP.  The IdP is NOT obligated to honor the\n      requested set of
        conditions in the <samlp:AuthnRequest>, if any.\n"
      title: 7.4.2.  <samlp:Response> Message Usage
    - contents:
      - "7.4.3.  <samlp:Response> Message Processing Rules\n   The RP MUST do the
        following:\n   o  Assume that the client's identifier implied by a SAML <Subject>\n
        \     element, if present, takes precedence over an identifier implied\n      by
        the RADIUS User-Name attribute.\n   o  Verify that the InResponseTo attribute
        in the \"RADIUS State\"\n      <saml:SubjectConfirmationData> equals the ID
        of its original\n      <samlp:AuthnRequest> message, unless the response is
        unsolicited,\n      in which case the attribute MUST NOT be present.\n   o
        \ If a <saml:AuthnStatement> used to establish a security context\n      for
        the client contains a SessionNotOnOrAfter attribute, the\n      security context
        SHOULD be discarded once this time is reached,\n      unless the RP reestablishes
        the client's identity by repeating the\n      use of this profile.\n   o  Verify
        that any assertions relied upon are valid according to\n      processing rules
        specified in [OASIS.saml-core-2.0-os].\n   o  Any assertion that is not valid
        or whose subject confirmation\n      requirements cannot be met MUST be discarded
        and MUST NOT be used\n      to establish a security context for the client.\n"
      title: 7.4.3.  <samlp:Response> Message Processing Rules
    - contents:
      - "7.4.4.  Unsolicited Responses\n   An IdP MAY initiate this profile by delivering
        an unsolicited\n   assertion to an RP.  This MUST NOT contain any\n   <saml:SubjectConfirmationData>
        elements containing an InResponseTo\n   attribute.\n"
      title: 7.4.4.  Unsolicited Responses
    - contents:
      - "7.4.5.  Use of the SAML RADIUS Binding\n   It is RECOMMENDED that the RADIUS
        exchange be protected using TLS\n   encryption for RADIUS [RFC6614] to provide
        confidentiality and\n   integrity protection.\n"
      title: 7.4.5.  Use of the SAML RADIUS Binding
    - contents:
      - "7.4.6.  Use of XML Signatures\n   This profile calls for the use of SAML
        elements that support XML\n   signatures.  To promote interoperability, implementations
        of this\n   profile MUST NOT require the use of XML signatures.  Implementations\n
        \  MAY choose to use XML signatures.\n"
      title: 7.4.6.  Use of XML Signatures
    - contents:
      - "7.4.7.  Metadata Considerations\n   There are no metadata considerations
        particular to this profile,\n   aside from those applying to the use of the
        RADIUS binding.\n"
      title: 7.4.7.  Metadata Considerations
    title: 7.4.  Use of Authentication Request Protocol
  title: 7.  ABFAB Authentication Profile
- contents:
  - "8.  ABFAB Assertion Query/Request Profile\n   This profile builds on the SAML
    V2.0 Assertion Query/Request Profile\n   defined by [OASIS.saml-profiles-2.0-os].
    \ That profile describes the\n   use of the Assertion Query and Request Protocol
    defined by\n   Section 3.3 of [OASIS.saml-core-2.0-os] with synchronous bindings,\n
    \  such as the SOAP binding defined in [OASIS.saml-bindings-2.0-os].\n   Although
    the SAML V2.0 Assertion Query/Request Profile is independent\n   of the underlying
    binding, it is nonetheless useful to describe the\n   use of the SAML RADIUS binding
    defined in Section 4 of this document,\n   in the interest of promoting interoperable
    implementations,\n   particularly as the SAML V2.0 Assertion Query/Request Profile
    is most\n   frequently discussed and implemented in the context of the SOAP\n
    \  binding.\n"
  - contents:
    - "8.1.  Required Information\n   Identification: urn:ietf:params:abfab:profiles:query\n
      \  Contact information: iesg@ietf.org\n   Description: Given below.\n   Updates:
      None.\n"
    title: 8.1.  Required Information
  - contents:
    - "8.2.  Profile Overview\n   As with the SAML V2.0 Assertion Query/Request Profile
      defined by\n   [OASIS.saml-profiles-2.0-os], the message exchange and basic\n
      \  processing rules that govern this profile are largely defined by\n   Section
      3.3 of [OASIS.saml-core-2.0-os], which defines the messages\n   to be exchanged,
      in combination with the binding used to exchange the\n   messages.  The SAML
      RADIUS binding described in this document defines\n   the binding of the message
      exchange to RADIUS.  Unless specifically\n   noted here, all requirements defined
      in those specifications apply.\n   Figure 8 below illustrates the basic template
      for the Query/Request\n   Profile.\n     Relying Party                                   Identity
      Provider\n    (SAML requester)                                 (SAML responder)\n
      \         |                                                 |\n          |                       (1)
      \                      |\n          | - - - - - - - - - - - - - - - - - - -
      - - - - > |\n          |                                                 |\n
      \         |                       (2)                       |\n          | <
      - - - - - - - - - - - - - - - - - - - - - - - |\n          |                                                 |\n
      \         V                                                 V\n            Figure
      8: Basic Template for Query/Request Profile\n   The following steps are described
      by the profile:\n   1.  Query/Request issued by RP: In step 1, an RP initiates
      the\n       profile by sending an <AssertionIDRequest>, <SubjectQuery>,\n       <AuthnQuery>,
      <AttributeQuery>, or <AuthzDecisionQuery> message\n       to a SAML authority.\n
      \  2.  <Response> issued by SAML authority: In step 2, the responding\n       SAML
      authority (after processing the query or request) issues a\n       <Response>
      message to the RP.\n"
    title: 8.2.  Profile Overview
  - contents:
    - '8.3.  Profile Description

      '
    - contents:
      - "8.3.1.  Differences from the SAML V2.0 Assertion Query/Request Profile\n
        \  This profile is identical to the SAML V2.0 Assertion Query/Request\n   Profile,
        with the following exceptions:\n   o  When processing the SAML request, the
        IdP MUST give precedence to\n      the client's identifier implied by the
        RADIUS State attribute, if\n      present, over the identifier implied by
        the SAML request's\n      <Subject>, if any.\n   o  In respect to Sections
        6.3.1 and 6.5 of\n      [OASIS.saml-profiles-2.0-os], this profile does not
        consider the\n      use of metadata (as in [OASIS.saml-metadata-2.0-os]).
        \ See\n      Section 8.3.4.\n   o  In respect to Sections 6.3.2, 6.4.1, and
        6.4.2 of\n      [OASIS.saml-profiles-2.0-os], this profile additionally stipulates\n
        \     that implementations of this profile MUST NOT require the use of\n      XML
        signatures.  See Section 8.3.3.\n"
      title: 8.3.1.  Differences from the SAML V2.0 Assertion Query/Request Profile
    - contents:
      - "8.3.2.  Use of the SAML RADIUS Binding\n   The RADIUS Access-Request sent
        by the RP:\n   o  MUST include an instance of the RADIUS Service-Type attribute,\n
        \     having a value of Authorize-Only.\n   o  SHOULD include the RADIUS State
        attribute, where this\n      Query/Request pertains to a previously authenticated
        client.\n   When processing the SAML request, the IdP MUST give precedence
        to the\n   client's identifier implied by the RADIUS State attribute over
        the\n   identifier implied by the SAML request's <Subject>, if any.\n   It
        is RECOMMENDED that the RADIUS exchange be protected using TLS\n   encryption
        for RADIUS [RFC6614] to provide confidentiality and\n   integrity protection.\n"
      title: 8.3.2.  Use of the SAML RADIUS Binding
    - contents:
      - "8.3.3.  Use of XML Signatures\n   This profile calls for the use of SAML
        elements that support XML\n   signatures.  To promote interoperability, implementations
        of this\n   profile MUST NOT require the use of XML signatures.  Implementations\n
        \  MAY choose to use XML signatures.\n"
      title: 8.3.3.  Use of XML Signatures
    - contents:
      - "8.3.4.  Metadata Considerations\n   There are no metadata considerations
        particular to this profile,\n   aside from those applying to the use of the
        RADIUS binding.\n"
      title: 8.3.4.  Metadata Considerations
    title: 8.3.  Profile Description
  title: 8.  ABFAB Assertion Query/Request Profile
- contents:
  - "9.  Privacy Considerations\n   The profiles defined in this document allow an
    RP to request specific\n   information about the client and allow an IdP to disclose
    information\n   about that client.  In this sense, IdPs MUST apply policy to decide\n
    \  what information is released to a particular RP.  Moreover, the\n   identity
    of the client is typically hidden from the RP unless\n   provided by the IdP.
    \ Conversely, the RP does typically know the\n   realm of the IdP, as it is required
    to route the RADIUS packets to\n   the right destination.\n   The kind of information
    that is released by the IdP can include\n   generic attributes such as affiliation
    shared by many clients.  But\n   even these generic attributes can help to identify
    a specific client.\n   Other kinds of attributes may also provide an RP with the
    ability to\n   link the same client between different sessions.  Finally, other\n
    \  kinds of attributes might provide a group of RPs with the ability to\n   link
    the client between them or with personally identifiable\n   information about
    the client.\n   These profiles do not directly provide a client with a mechanism
    to\n   express preferences about what information is released.  That\n   information
    can be expressed out of band, for example, as part of the\n   enrollment process.\n
    \  The RP may disclose privacy-sensitive information about itself as\n   part
    of the request, although this is unlikely in typical\n   deployments.\n   If RADIUS
    proxies are used and encryption is not used, the attributes\n   disclosed by the
    IdP are visible to the proxies.  This is a\n   significant privacy exposure in
    some deployments.  Ongoing work is\n   exploring mechanisms for creating TLS connections
    directly between\n   the RADIUS client and the RADIUS server to reduce this exposure.
    \ If\n   proxies are used, the impact of exposing SAML Assertions to the\n   proxies
    needs to be carefully considered.\n   The use of TLS to provide confidentiality
    for the RADIUS exchange is\n   strongly encouraged.  Without this, passive eavesdroppers
    can observe\n   the assertions.\n"
  title: 9.  Privacy Considerations
- contents:
  - "10.  Security Considerations\n   In this specification, the RP MUST trust any
    statement in the SAML\n   messages from the IdP in the same way that it trusts
    information\n   contained in RADIUS attributes.  These entities MUST trust the
    RADIUS\n   infrastructure to provide integrity of the SAML messages.\n   Furthermore,
    the RP MUST apply policy and filter the information\n   based on what information
    the IdP is permitted to assert and on what\n   trust is reasonable to place in
    proxies between them.\n   XML signatures and encryption are provided as an OPTIONAL
    mechanism\n   for end-to-end security.  These mechanisms can protect SAML messages\n
    \  from being modified by proxies in the RADIUS infrastructure.  These\n   mechanisms
    are not mandatory to implement.  It is believed that\n   ongoing work to provide
    direct TLS connections between a RADIUS\n   client and RADIUS server will provide
    similar assurances but better\n   deployability.  XML security is appropriate
    for deployments where\n   end-to-end security is required but proxies cannot be
    removed or\n   where SAML messages need to be verified at a later time or by parties\n
    \  not involved in the authentication exchange.\n"
  title: 10.  Security Considerations
- contents:
  - '11.  IANA Considerations

    '
  - contents:
    - "11.1.  RADIUS Attributes\n   The Attribute Types and Attribute Values defined
      in this document\n   have been registered by the Internet Assigned Numbers Authority\n
      \  (IANA) from the RADIUS namespaces as described in the \"IANA\n   Considerations\"
      section of [RFC3575], in accordance with BCP 26\n   [RFC5226].  For RADIUS packets,
      attributes, and registries created by\n   this document, IANA has placed them
      at\n   <http://www.iana.org/assignments/radius-types>.\n   In particular, this
      document defines two new RADIUS attributes,\n   entitled \"SAML-Assertion\"
      and \"SAML-Protocol\" (see Section 3), with\n   assigned values of 245.1 and
      245.2 from the long extended space\n   [RFC6929]:\n     Type  Ext. Type  Name
      \           Length  Meaning\n     ----  ---------  --------------  ------  ------------------------\n
      \    245   1          SAML-Assertion  >=5     Encodes a SAML Assertion\n     245
      \  2          SAML-Protocol   >=5     Encodes a SAML protocol\n                                                message\n"
    title: 11.1.  RADIUS Attributes
  - contents:
    - "11.2.  ABFAB Parameters\n   A new top-level registry has been created, entitled
      \"Application\n   Bridging for Federated Access Beyond Web (ABFAB) Parameters\".\n
      \  In this top-level registry, a sub-registry entitled \"ABFAB URN\n   Parameters\"
      has been created.  Registration in this registry is via\n   IETF Review or Expert
      Review procedures [RFC5226].\n   This paragraph gives guidance to designated
      experts.  Registrations\n   in this registry are generally only expected as
      part of protocols\n   published as RFCs on the IETF stream; other URIs are expected
      to be\n   better choices for non-IETF work.  Expert review is permitted mainly\n
      \  to allow early registration related to specifications under\n   development
      when the community believes they have reached sufficient\n   maturity.  The
      expert SHOULD evaluate the maturity and stability of\n   such an IETF-stream
      specification.  Experts SHOULD review anything\n   not from the IETF stream
      for consistency and consensus with current\n   practice.  Today, such requests
      would not typically be approved.\n   If a parameter named \"paramname\" is registered
      in this registry, then\n   its URN will be \"urn:ietf:params:abfab:paramname\".
      \ The initial\n   registrations are as follows:\n                  +-------------------------+-----------+\n
      \                 | Parameter               | Reference |\n                  +-------------------------+-----------+\n
      \                 | bindings:radius         | Section 4 |\n                  |
      nameid-format:nai       | Section 5 |\n                  | profiles:authentication
      | Section 7 |\n                  | profiles:query          | Section 8 |\n                  |
      cm:user                 | Section 6 |\n                  | cm:machine              |
      Section 6 |\n                  +-------------------------+-----------+\n                             ABFAB
      Parameters\n"
    title: 11.2.  ABFAB Parameters
  - contents:
    - "11.3.  Registration of the ABFAB URN Namespace\n   IANA has registered the
      \"abfab\" URN sub-namespace in the IETF URN\n   sub-namespace for protocol parameters
      defined in [RFC3553].\n   Registry Name: abfab\n   Specification: RFC 7833 (this
      document)\n   Repository: ABFAB URN Parameters (Section 11.2)\n   Index Value:
      Sub-parameters MUST be specified in UTF-8, using\n   standard URI encoding where
      necessary.\n"
    title: 11.3.  Registration of the ABFAB URN Namespace
  title: 11.  IANA Considerations
- contents:
  - '12.  References

    '
  - contents:
    - "12.1.  Normative References\n   [OASIS.saml-bindings-2.0-os]\n              Cantor,
      S., Hirsch, F., Kemp, J., Philpott, R., and E.\n              Maler, \"Bindings
      for the OASIS Security Assertion\n              Markup Language (SAML) V2.0\",
      OASIS\n              Standard saml-bindings-2.0-os, March 2005,\n              <http://docs.oasis-open.org/security/saml/v2.0/\n
      \             saml-bindings-2.0-os.pdf>.\n   [OASIS.saml-core-2.0-os]\n              Cantor,
      S., Kemp, J., Philpott, R., and E. Maler,\n              \"Assertions and Protocols
      for the OASIS Security Assertion\n              Markup Language (SAML) V2.0\",
      OASIS\n              Standard saml-core-2.0-os, March 2005,\n              <http://docs.oasis-open.org/security/saml/v2.0/\n
      \             saml-core-2.0-os.pdf>.\n   [OASIS.saml-metadata-2.0-os]\n              Cantor,
      S., Moreh, J., Philpott, R., and E. Maler,\n              \"Metadata for the
      OASIS Security Assertion Markup Language\n              (SAML) V2.0\", OASIS
      Standard saml-metadata-2.0-os,\n              March 2005, <http://docs.oasis-open.org/security/\n
      \             saml/v2.0/saml-metadata-2.0-os.pdf>.\n   [OASIS.saml-profiles-2.0-os]\n
      \             Hughes, J., Cantor, S., Hodges, J., Hirsch, F., Mishra,\n              P.,
      Philpott, R., and E. Maler, \"Profiles for the OASIS\n              Security
      Assertion Markup Language (SAML) V2.0\", OASIS\n              Standard OASIS.saml-profiles-2.0-os,
      March 2005,\n              <http://docs.oasis-open.org/security/saml/v2.0/\n
      \             saml-profiles-2.0-os.pdf>.\n   [RFC2119]  Bradner, S., \"Key words
      for use in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC
      2119,\n              DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2865]  Rigney, C., Willens, S., Rubens, A., and W. Simpson,\n              \"Remote
      Authentication Dial In User Service (RADIUS)\",\n              RFC 2865, DOI
      10.17487/RFC2865, June 2000,\n              <http://www.rfc-editor.org/info/rfc2865>.\n
      \  [RFC3575]  Aboba, B., \"IANA Considerations for RADIUS (Remote\n              Authentication
      Dial In User Service)\", RFC 3575,\n              DOI 10.17487/RFC3575, July
      2003,\n              <http://www.rfc-editor.org/info/rfc3575>.\n   [RFC3579]
      \ Aboba, B. and P. Calhoun, \"RADIUS (Remote Authentication\n              Dial
      In User Service) Support For Extensible\n              Authentication Protocol
      (EAP)\", RFC 3579,\n              DOI 10.17487/RFC3579, September 2003,\n              <http://www.rfc-editor.org/info/rfc3579>.\n
      \  [RFC6614]  Winter, S., McCauley, M., Venaas, S., and K. Wierenga,\n              \"Transport
      Layer Security (TLS) Encryption for RADIUS\",\n              RFC 6614, DOI 10.17487/RFC6614,
      May 2012,\n              <http://www.rfc-editor.org/info/rfc6614>.\n   [RFC6929]
      \ DeKok, A. and A. Lior, \"Remote Authentication Dial In User\n              Service
      (RADIUS) Protocol Extensions\", RFC 6929,\n              DOI 10.17487/RFC6929,
      April 2013,\n              <http://www.rfc-editor.org/info/rfc6929>.\n   [RFC7542]
      \ DeKok, A., \"The Network Access Identifier\", RFC 7542,\n              DOI
      10.17487/RFC7542, May 2015,\n              <http://www.rfc-editor.org/info/rfc7542>.\n"
    title: 12.1.  Normative References
  - contents:
    - "12.2.  Informative References\n   [RADIUS-Large-Pkts]\n              Hartman,
      S., \"Larger Packets for RADIUS over TCP\", Work in\n              Progress,
      draft-ietf-radext-bigger-packets-07, April 2016.\n   [RFC3553]  Mealling, M.,
      Masinter, L., Hardie, T., and G. Klyne, \"An\n              IETF URN Sub-namespace
      for Registered Protocol\n              Parameters\", BCP 73, RFC 3553, DOI 10.17487/RFC3553,\n
      \             June 2003, <http://www.rfc-editor.org/info/rfc3553>.\n   [RFC5226]
      \ Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC6733]
      \ Fajardo, V., Ed., Arkko, J., Loughney, J., and G. Zorn,\n              Ed.,
      \"Diameter Base Protocol\", RFC 6733,\n              DOI 10.17487/RFC6733, October
      2012,\n              <http://www.rfc-editor.org/info/rfc6733>.\n   [RFC7055]
      \ Hartman, S., Ed., and J. Howlett, \"A GSS-API Mechanism for\n              the
      Extensible Authentication Protocol\", RFC 7055,\n              DOI 10.17487/RFC7055,
      December 2013,\n              <http://www.rfc-editor.org/info/rfc7055>.\n   [RFC7499]
      \ Perez-Mendez, A., Ed., Marin-Lopez, R., Pereniguez-Garcia,\n              F.,
      Lopez-Millan, G., Lopez, D., and A. DeKok, \"Support of\n              Fragmentation
      of RADIUS Packets\", RFC 7499,\n              DOI 10.17487/RFC7499, April 2015,\n
      \             <http://www.rfc-editor.org/info/rfc7499>.\n   [RFC7831]  Howlett,
      J., Hartman, S., Tschofenig, H., and J. Schaad,\n              \"Application
      Bridging for Federated Access Beyond Web\n              (ABFAB) Architecture\",
      RFC 7831, DOI 10.17487/RFC7831,\n              May 2016, <http://www.rfc-editor.org/info/rfc7831>.\n
      \  [W3C.REC-xmlschema-1]\n              Thompson, H., Beech, D., Maloney, M.,
      and N. Mendelsohn,\n              \"XML Schema Part 1: Structures Second Edition\",\n
      \             W3C REC-xmlschema-1, October 2004,\n              <http://www.w3.org/TR/xmlschema-1/>.\n"
    title: 12.2.  Informative References
  title: 12.  References
- contents:
  - "Appendix A.  XML Schema\n   The following schema formally defines the\n   \"urn:ietf:params:xml:ns:abfab\"
    namespace used in this document, in\n   conformance with [W3C.REC-xmlschema-1].
    \ Although XML validation is\n   optional, the schema that follows is the normative
    definition of the\n   constructs it defines.  Where the schema differs from any
    prose in\n   this specification, the schema takes precedence.\n           <schema\n
    \            targetNamespace=\"urn:ietf:params:xml:ns:abfab\"\n             xmlns=\"http://www.w3.org/2001/XMLSchema\"\n
    \            xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\"\n             xmlns:abfab=\"urn:ietf:params:xml:ns:abfab\"\n
    \            elementFormDefault=\"unqualified\"\n             attributeFormDefault=\"unqualified\"\n
    \            blockDefault=\"substitution\"\n             version=\"1.0\">\n             <import
    namespace=\"urn:oasis:names:tc:SAML:2.0:metadata\"/>\n             <complexType
    name=\"RADIUSIDPDescriptorType\">\n               <complexContent>\n                 <extension
    base=\"md:RoleDescriptorType\">\n                   <sequence>\n                     <element
    ref=\"abfab:RADIUSIDPService\"\n                                   minOccurs=\"0\"
    maxOccurs=\"unbounded\"/>\n                     <element ref=\"abfab:RADIUSRealm\"\n
    \                                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
    \                  </sequence>\n                 </extension>\n               </complexContent>\n
    \            </complexType>\n             <element name=\"RADIUSIDPService\" type=\"md:EndpointType\"/>\n
    \            <element name=\"RADIUSRealm\" type=\"string\"/>\n             <complexType
    name=\"RADIUSRPDescriptorType\">\n               <complexContent>\n                 <extension
    base=\"md:RoleDescriptorType\">\n                   <sequence>\n                     <element
    ref=\"md:RADIUSRPService\"\n                                   minOccurs=\"0\"
    maxOccurs=\"unbounded\"/>\n                     <element ref=\"md:RADIUSNasIpAddress\"\n
    \                                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
    \                    <element ref=\"md:RADIUSNasIdentifier\"\n                                   minOccurs=\"0\"
    maxOccurs=\"unbounded\"/>\n                     <element ref=\"md:RADIUSGssEapName\"\n
    \                                  minOccurs=\"0\" maxOccurs=\"unbounded\"/>\n
    \                  </sequence>\n                 </extension>\n               </complexContent>\n
    \            </complexType>\n             <element name=\"RADIUSRPService\" type=\"md:EndpointType\"/>\n
    \            <element name=\"RADIUSNasIpAddress\" type=\"string\"/>\n             <element
    name=\"RADIUSNasIdentifier\" type=\"string\"/>\n             <element name=\"RADIUSGssEapName\"
    type=\"string\"/>\n           </schema>\n"
  title: Appendix A.  XML Schema
- contents:
  - "Acknowledgments\n   The authors would like to acknowledge the OASIS Security
    Services\n   (SAML) Technical Committee, and Scott Cantor in particular, for their\n
    \  help with the SAML-related material.\n   The authors would also like to acknowledge
    the collaboration of Jim\n   Schaad, Leif Johansson, Klaas Wierenga, Stephen Farrell,
    Gabriel\n   Lopez-Millan, and Rafa Marin-Lopez, who have provided valuable\n   comments
    on this document.\n"
  title: Acknowledgments
- contents:
  - "Authors' Addresses\n   Josh Howlett\n   Jisc\n   Lumen House, Library Avenue,
    Harwell\n   Oxford  OX11 0SG\n   United Kingdom\n   Phone: +44 1235 822363\n   Email:
    Josh.Howlett@ja.net\n   Sam Hartman\n   Painless Security\n   Email: hartmans-ietf@mit.edu\n
    \  Alejandro Perez-Mendez (editor)\n   University of Murcia\n   Campus de Espinardo
    S/N, Faculty of Computer Science\n   Murcia  30100\n   Spain\n   Phone: +34 868
    88 46 44\n   Email: alex@um.es\n"
  title: Authors' Addresses
