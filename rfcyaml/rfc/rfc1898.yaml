- title: __initial_text__
  contents:
  - '               CyberCash Credit Card Protocol Version 0.8

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  This memo\n   does not specify an Internet standard of any kind.  Distribution\
    \ of\n   this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   CyberCash is developing a general payments system for use over the\n\
    \   Internet.  The structure and communications protocols of version 0.8\n   are\
    \ described.  This version includes credit card payments only.\n   Additional\
    \ capabilities are planned for future versions.\n   This document covers only\
    \ the current CyberCash system which is one\n   of the few operational systems\
    \ in the rapidly evolving area of\n   Internet payments. CyberCash is committed\
    \ to the further development\n   of its system and to cooperation with the Internet\
    \ Engineering Task\n   Force and other standards organizations.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   The significant contributions of the following persons (in\
    \ alphabetic\n   order) to this protocol are gratefully acknowledged:\n      \
    \  Bruce Binder, Judith Grass, Alden Hart, Steve Kiser, Steve\n        Klebe,\
    \ Garry Knox, Tom Lee, Bob Lindenberg, Jim Lum, Bill\n        Melton, Denise Paredes,\
    \ Prasad Chintamaneni, Fred Silverman,\n        Bruce Wilson, Garland Wong, Wei\
    \ Wu, Mark Zalewski.\n   In addition, Jeff Stapleton and Peter Wagner made useful\
    \ comments on\n   the first version of this memo.\n"
- title: History
  contents:
  - "History\n   For historic purposes, it should be noted that this document was\n\
    \   first posted as an Internet draft, and thus made publicly available,\n   on\
    \ 8 July 1995.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n      1. Overall System..........................................3\n\
    \      1.1 System Overview........................................3\n      1.2\
    \ Security Approach......................................5\n      1.2.1 Authentication\
    \ and Persona Identity..................5\n      1.2.2 Privacy..............................................6\n\
    \      1.3 Credit Card Operation..................................6\n      2.\
    \ General Message Wrapper Format..........................7\n      2.1 Message\
    \ Format.........................................7\n      2.2 Details of Format......................................8\n\
    \      2.3 Body Parts.............................................8\n      2.4\
    \ Transparent Part.......................................9\n      2.5 Opaque Part...........................................10\n\
    \      2.6 Trailer...............................................10\n      2.7\
    \ Example Messages......................................11\n      3. Signatures\
    \ and Hashes..................................12\n      3.1 Digital Signatures....................................12\n\
    \      3.2 Hash Codes............................................13\n      4.\
    \ Specific Message Formats...............................13\n      4.1 Persona\
    \ Registration and Application Retrieval........14\n      4.1.1 R1 - registration...................................14\n\
    \      4.1.2 R2 - registration-response..........................15\n      4.1.3\
    \ GA1 - get-application...............................16\n      4.1.4 GA2 - get-application-response......................17\n\
    \      4.2 Binding Credit Cards..................................18\n      4.2.1\
    \ BC1 - bind-credit-card..............................18\n      4.2.2 BC4 - bind-credit-card-response.....................20\n\
    \      4.3 Customer Credit Card Purchasing Messages..............21\n      4.3.1\
    \ PR1 - payment-request...............................21\n      4.3.2 CH1 - credit-card-payment...........................23\n\
    \      4.3.3 CH2 - charge-card-response..........................24\n      4.4\
    \ Merchant Credit Card Purchasing Messages..............25\n      4.4.1 CM1 -\
    \ auth-only.....................................26\n      4.4.2 CM2 - auth-capture..................................28\n\
    \      3.4.3 CM3 - post-auth-capture.............................28\n      4.4.4\
    \ CM4 - void..........................................30\n      4.4.5 CM5 - return........................................32\n\
    \      4.4.6 CM6 - charge-action-response........................32\n      4.4.7\
    \ The MM* Message Series..............................34\n      4.4.8 CD1 - card-data-request.............................35\n\
    \      4.4.9 CD2 - card-data-response............................37\n      4.5\
    \ Utility and Error Messges.............................38\n      4.5.1 P1 - ping...........................................39\n\
    \      4.5.2 P2 - ping-response..................................39\n      4.5.3\
    \ TQ1 - transaction-query.............................40\n      4.5.4 TQ2 - transaction-cancel............................41\n\
    \      4.5.5 TQ3 - transaction-response..........................42\n      4.5.6\
    \ UNK1 - unknown-error................................44\n      4.5.7 DL1 - diagnostic-log................................46\n\
    \      4.5.8 DL2 - merchant-diagnostic-log.......................47\n      4.6\
    \ Table of Messages Described...........................48\n      5. Future Development.....................................49\n\
    \      5.1 The Credit Card Authorization/Clearance Process.......49\n      5.2\
    \ Lessons Learned.......................................50\n      6. Security\
    \ Considerations................................51\n      References................................................51\n\
    \      Authors' Addresses........................................52\n"
- title: 1. Overall System
  contents:
  - "1. Overall System\n   CyberCash, Inc. of Reston, Virginia was founded in August\
    \ of 1994 to\n   partner with financial institutions and providers of goods and\n\
    \   services to deliver a safe, convenient and inexpensive system for\n   making\
    \ payments on the Internet.  The CyberCash approach is based on\n   establishing\
    \ a trusted link between the new world of cyberspace and\n   the traditional banking\
    \ world.  CyberCash serves as a conduit through\n   which payments can be transported\
    \ quickly, easily and safely between\n   buyers, sellers and their banks.  Significantly\
    \ - much as it is the\n   real world of commerce - the buyer and seller need not\
    \ have any prior\n   existing relationship.\n   As a neutral third party whose\
    \ sole concern is ensuring the delivery\n   of payments from one party to another,\
    \ CyberCash is the linchpin in\n   delivering spontaneous consumer electronic\
    \ commerce on the Internet.\n"
- title: 1.1 System Overview
  contents:
  - "1.1 System Overview\n   The CyberCash system will provide several separate payment\
    \ services\n   on the Internet including credit card and electronic cash.  To\
    \ gain\n   access to CyberCash services, consumers need only a personal computer\n\
    \   with a network connection.  Similarly, merchants and banks need make\n   only\
    \ minimal changes to their current operating procedures in order\n   to process\
    \ CyberCash transactions, enabling them to more quickly\n   integrate safe on-line\
    \ payments into their existing service\n   offerings.  Communications with banks\
    \ are over existing financial\n   communications networks.\n   To get started,\
    \ consumers download free software from CyberCash on\n   the Internet.  This software\
    \ establishes the electronic link between\n   consumers, merchants and their banks\
    \ as well as between individuals.\n   To make gaining access to the CyberCash\
    \ system even easier, CyberCash\n   \"PAY\" buttons may be incorporated into popular\
    \ on-line service and\n   software graphical user interfaces so that consumers\
    \ using these\n   products can easily enter the CyberCash system when they are\
    \ ready to\n   make payments for goods and services.  Consumers need not have\
    \ any\n   prior relationship with CyberCash to use the CyberCash system.  They\n\
    \   can easily set up their CyberCash persona on-line.\n   Transactions are automated\
    \ in that once the consumer enters\n   appropriate information into his own computer,\
    \ no manual steps are\n   required to process authorization or clearance transactions\
    \ through\n   the entire system.  The consumer need only initiate payment for\
    \ each\n   transaction by exercising the pay option on an electronic form.\n \
    \  Transactions are safe in that they are cryptographicly protected from\n   tampering\
    \ and modification by eavesdroppers. And they are private in\n   that information\
    \ about the consumer not relevant to the transaction\n   is not visible to the\
    \ merchant.\n      +------------+            +------------+\n      |         \
    \   |            |            |\n      |  Internet  |            |  Internet \
    \ |\n      |  customer  +------------+  merchant  +\n      |            |    \
    \        |  /         |\n      +------------+            +------------+\n    \
    \                            /\n                               /\n           \
    \        +------------|-+\n                   | CyberCash  | |\n             \
    \      |     server | |\n                   +-----+------|-+\n               \
    \          |      |\n                         |      |\n          +--------------+------|---------+\n\
    \          | +--------+       +--+-------+ |\n          | | card   +-------+ /\
    \ charge | |\n          | | issuer |       | acquirer | |\n          | +--------+\
    \       +----------+ |\n          |                               |\n        \
    \  |      The Banking System       |\n          +-------------------------------+\n\
    \                   SYSTEM OVERVIEW\n"
- title: 1.2 Security Approach
  contents:
  - "1.2 Security Approach\n   The CyberCash system pays special attention to security\
    \ issues.  It\n   uses encryption technology from the world's leading sources\
    \ of\n   security technology and is committed over time to employing new\n   security\
    \ technologies as they emerge.\n"
- title: 1.2.1 Authentication and Persona Identity
  contents:
  - "1.2.1 Authentication and Persona Identity\n   Authentication of messages is based\
    \ on Public Key encryption as\n   developed by RSA.  The CyberCash Server maintains\
    \ records of the\n   public key associated with every customer and merchant persona.\
    \  It\n   is thus able to authenticate any information digitally signed by a\n\
    \   customer or merchant regardless of the path the data followed on its\n   way\
    \ to the server.  The corresponding private key, which is needed to\n   create\
    \ such digital signatures, will be held by the customer or\n   merchant and never\
    \ revealed to other parties.  In customer software,\n   the private key is only\
    \ stored in an encrypted form protected by a\n   passphrase.\n   While the true\
    \ CyberCash identity of a customer or merchant is\n   recognized by their public/private\
    \ key pair, such keys are too\n   cumbersome (over 100 hex digits) to be remembered\
    \ or typed by people.\n   So, the user interface utilizes short alphanumeric ID's\
    \ selected by\n   the user or merchant for purposes of specifying a persona. \
    \ CyberCash\n   adds check digits to the requested ID to minimize the chance of\n\
    \   accidental wrong persona selection.  Persona IDUs are essentially\n   public\
    \ information.  Possession of an persona ID without the\n   corresponding private\
    \ key is of no benefit in the current system.\n   Individuals or organizations\
    \ may establish one or more CyberCash\n   customer personas directly with CyberCash.\
    \  Thus, an individual may\n   have several unrelated CyberCash personas or share\
    \ a CyberCash\n   persona with other individuals.  This approach provides a degree\
    \ of\n   privacy consistent with Internet presence generally and with cash\n \
    \  transactions specifically.  However, persona holders who wish to use\n   a\
    \ credit card for purchases in conjunction with their CyberCash\n   persona must\
    \ first meet such on-line identification criteria as the\n   card issuing organization\
    \ requires.\n   Control over a CyberCash persona is normally available only to\
    \ an\n   entity that possesses the private key for that persona.  However, a\n\
    \   special provision is made to associate an emergency close out\n   passphrase\
    \ with a CyberCash persona.  On receipt of the emergency\n   close out passphrase,\
    \ even if received over insecure channels such as\n   a telephone call or ordinary\
    \ email, CyberCash will suspend activity\n   for the CyberCash persona.  This\
    \ emergency close-out passphrase can\n   be stored separately from and with somewhat\
    \ less security than the\n   private key for the persona since the emergency passphrase\
    \ can not be\n   used to divert funds to others. This provides some protection\
    \ against\n   loss or misappropriation of the private key or the passphrase under\n\
    \   which the private key in kept encrypted.  In the cash system, the\n   emergency\
    \ close-out passpharase may also transfer the persona balance\n   to a designated\
    \ bank account.\n"
- title: 1.2.2 Privacy
  contents:
  - "1.2.2 Privacy\n   Encryption of messages use the Digital Encryption Standard\
    \ (DES),\n   commonly used in electronic payment systems today.  It is planned\
    \ to\n   superencrypt (i.e., encrypted more than one level) particularly\n   sensitive\
    \ information, such as PIN numbers, and handle them so that\n   the plain text\
    \ readable version never exists in the CyberCash system\n   except momentarily,\
    \ within special purpose secure cryptographic\n   hardware that is part of the\
    \ server, before being re-encrypted under\n   another key.\n   The processing\
    \ of card charges through the CyberCash system is\n   organized so that the merchant\
    \ never learns the customerUs credit\n   card number unless the merchantUs bank\
    \ chooses to release this\n   information to the merchant or it is required for\
    \ dispute resolution.\n   In addition, the server maintains no permanent storage\
    \ of card\n   numbers.  They are only present while a transaction involving that\n\
    \   card is in progress.  These practices greatly reduce the chance of\n   card\
    \ number misappropriation.\n"
- title: 1.3 Credit Card Operation
  contents:
  - "1.3 Credit Card Operation\n   Using the CyberCash system for credit card transactions,\
    \ once price\n   has been negotiated and the consumer is ready to purchase, the\n\
    \   consumer simply clicks on the CyberCash \"PAY\" button displayed on the\n\
    \   merchant interface, which invokes the merchant CyberCash software.\n   The\
    \ merchant sends the consumer an on-line invoice that includes\n   relevant purchase\
    \ information which appears on the customerUs screen.\n   (See PR1 message.) \
    \ The consumer adds his credit card number and\n   other information by simply\
    \ selecting from a list of credit cards he\n   has registered to his CyberCash\
    \ persona.  All this information is\n   digitally signed by the customer's CyberCash\
    \ software, encrypted, and\n   passed, along with a hash code of the invoice as\
    \ seen by the\n   customer, to the merchant.  (See CH1 message.)\n   Upon receipt,\
    \ the merchant adds additional authorization information\n   which is then encrypted,\
    \ electronically signed by the merchant, and\n   sent to the CyberCash Server.\
    \  (See CM1 & CM2 messages.)  The\n   CyberCash Server can authenticate all the\
    \ signatures and be sure that\n   the customer and merchant agree on the invoice\
    \ and charge amount.\n   The CyberCash Server then forwards the relevant information\
    \ to the\n   acquiring bank along with a request on behalf of the merchant for\
    \ a\n   specific banking operation such as charge authorization.  The bank\n \
    \  decrypts and then processes the received data as it would normally\n   process\
    \ a credit card transaction.  The bank's response is returned\n   to the CyberCash\
    \ Server which returns an electronic receipt to the\n   merchant (see CM6 message)\
    \ part of which the merchant is expected to\n   forward to the customer (see CH2\
    \ message).  The transaction is\n   complete.\n"
- title: 2. General Message Wrapper Format
  contents:
  - "2. General Message Wrapper Format\n   Version 0.8 of the external format for\
    \ the encoding of CyberCash\n   messages is described below.  CyberCash messages\
    \ are stylized\n   documents for the transmission of financial data over the Internet.\n\
    \   While there are numerous schemes for sending information over the\n   Internet\
    \ (HTTP, SMTP, and others), each is attached to a specific\n   transmission mechanism.\
    \  Because CyberCash messages will need to\n   travel over each of these media\
    \ (as well as others) a transmission\n   independent mechanism is needed.\n"
- title: 2.1 Message Format
  contents:
  - "2.1 Message Format\n   CyberCash messages consist of the following components:\n\
    \   1. Header - defines the start of the CyberCash message and includes\n    \
    \  version information.\n   2. Transparent Part - contains information that is\
    \ not private.\n   3. Opaque Part(s) - contains the financial information in the\n\
    \      message and is both privacy protected as well as tamper protected.\n  \
    \    An opaque part is not present in some messages. When present, the\n     \
    \ opaque part usually provides tamper protection for the transparent\n      part.\n\
    \   4. Trailer - defines the end of the CyberCash message and includes a\n   \
    \   check value to enable the receiver to determine that the message\n      has\
    \ arrived undamaged. Note: this check value is intended only to\n      detect\
    \ accidental damage to the message, not deliberate tampering.\n      No null characters\
    \ (zero value) or characters with the eighth bit\n      on are permitted inside\
    \ a CyberCash message.  \"Binary\" quantities\n      that might have such byte\
    \ values in them are encoded in base64 as\n      described in RFC 1521.\n"
- title: 2.2 Details of Format
  contents:
  - "2.2 Details of Format\n   The header consists of a single line which looks approximately\
    \ like\n   this\n        $$-CyberCash-0.8-$$\n   or like this\n        $$-CyberCash-1.2.3-Extra-$$\n\
    \   It includes a number of fields separated with the minus character \"-\"\n\
    \   1. \"$$\" - the literal string with the initial $ in column 1.\n   2. \"CyberCash\"\
    \ - the literal string (case insensitive)\n   3. x.y or x.y.z - the version number\
    \ of the message format.  x is the\n   primary version number.  y is a subversion\
    \ number.  z, if present, is\n   a subsubversion number.\n   4. \"Extra\" - an\
    \ optional additional alphanumeric string.\n   5.  \"$$\" - the literal string\n\
    \   Version numbers start at 0.7 and count up.  The \".z\" is omitted when\n \
    \  z is zero.  0.7 and 0.8 are the test and initial shipped version of\n   the\
    \ credit card system. 0.9 and 1.0 are expected to also incorporate\n   the test\
    \ and initial shipped versions of the cash facilities as well\n   as improvements\
    \ to the credit card system.\n   The \"Extra\" string is used within secure environments\
    \ so that one\n   subcomponent can scribble a note to another with minimum overhead.\n\
    \   For example, a server firewall could put \"HTTP\" or \"SMTP\" here before\n\
    \   forwarding the message to the core server within the firewall\n   perimeter.\n"
- title: 2.3 Body Parts
  contents:
  - "2.3 Body Parts\n   The body parts of the message (both transparent and opaque)\
    \ consist\n   of attribute value pairs in formats that are reminiscent of the\n\
    \   standard electronic mail header (RFC822) format. However, there are\n   some\
    \ differences.\n   Attribute names start with and are composed predominantly of\
    \ letters\n   and internal hyphens except that they sometimes end with a hyphen\n\
    \   followed by a number.  Such a trailing number is used when there is\n   logically\
    \ an indexed vector of values.  Attribute names are\n   frequently referred to\
    \ as labels.\n   If the label ends with a \":\", then RFC822 processing is done.\
    \  While\n   the existence of trailing white space is significant, all leading\n\
    \   white space on continuation lines is stripped.  Such lines are\n   wrapped\
    \ at 64 characters in length, excluding any line termination\n   character(s).\n\
    \   However, if the label is terminated with a \";\", this indicates a\n   free-form\
    \ field where new-line characters and any leading white\n   space, after the initial\
    \ space that indicates a continuation line, is\n   significant.  Such lines should\
    \ not be wrapped except that, to avoid\n   other processing problems, they are\
    \ forcibly wrapped at 200\n   characters.\n   Blank lines are ignored and do not\
    \ signify a change  to  a  different\n   mode of line handling.\n   Another way\
    \ of looking at the above is as follows: after having found\n   an initial $$\
    \ start line, you can treat any following lines according\n   to the first character.\
    \  If it is alphanumeric, it is a new label\n   which should be terminated with\
    \ a \":\" or \";\" and indicates a new\n   label-value pair.  If it is a white\
    \ space character, it indicates the\n   continuation of the value for the preceding\
    \ new label line.  (Exactly\n   how the continuation is processed depends on the\
    \ label termination\n   character.)  If it is \"$\", it should be the end line\
    \ for the message.\n   If it is #, it is a comment line and should be ignored.\
    \  Other\n   initial characters are undefined.  (As of this date, no software\n\
    \   sends CyberCash messages with # lines but they are convenient for\n   commenting\
    \ messages stored in files.)\n"
- title: 2.4 Transparent Part
  contents:
  - "2.4 Transparent Part\n   The transparent part includes any clear-text data associated\
    \ with the\n   financial transaction as well as information needed by CyberCash\
    \ and\n   others to decrypt the opaque part(s).  It always includes a\n   transaction\
    \ field which is the transaction number generated by the\n   requester and which\
    \ is repeated in the response.  It always includes\n   a date field that is the\
    \ local date and time at the requester and is\n   repeated in the response.  In\
    \ all cases other than an initial\n   registration to establish a persona ID,\
    \ it includes the requester's\n   persona ID.\n   On messages bound for the server,\
    \ there is a \"cyberkey:\" field that\n   identifies which server public key was\
    \ used to encrypt the session\n   key.\n"
- title: 2.5 Opaque Part
  contents:
  - "2.5 Opaque Part\n   The opaque part consists of a single block of characters\
    \ encoded\n   using base64 encoding (see RFC 1521). The data in the opaque section\n\
    \   is always encrypted before encoding.\n   The label \"opaque\" or \"merchant-opaque\"\
    \ precedes the opaque part\n   depending on whether the data was encrypted by\
    \ the client or merchant\n   software.\n   On messages inbound to the server,\
    \ the data to be opaqued is DES CBC\n   encrypted under a random transacton key\
    \ and then that DES key is RSA\n   encrypted under one of the server's public\
    \ keys.  The RSA encrypted\n   DES key appears as the first part of the base64\
    \ encoded field and is\n   not broken out as a separate value in the message.\
    \  The corresponding\n   outbound reply from the server can simply be DES encrypted\
    \ under this\n   transaction key as there is enough plain text information to\
    \ identify\n   the transaction and the customer or merchant will have remembered\
    \ the\n   transaction key from the inbound message.\n   A signature is not generally\
    \ necessary in the opaque part of a reply\n   message.  Knowledge of the transaction\
    \ key is adequate\n   authentication.  In order for someone to forge the response,\
    \ they\n   would have to know the server's private key to be able to get at the\n\
    \   transaction key.  It is assumed that if anyone tampered with the\n   response\
    \ opaque part, the probability that it would decrypt to\n   something that would\
    \ parse is insignificant.  (Just the fact that the\n   8th bit has to be off means\
    \ a chance of 1 in 2**n where there are n\n   characters and that's ignoring the\
    \ rest of the formatting.)  While\n   someone can tamper with the transparent\
    \ part, this usually either has\n   no effect or means that the client won't find\
    \ the transaction key, in\n   which case it's just a particular example of denial\
    \ of service by\n   damaging a message.\n"
- title: 2.6 Trailer
  contents:
  - "2.6 Trailer\n   The trailer is intended to close the message and provide a definitive\n\
    \   and parseable end of the message.\n   The trailer consists of several fields\
    \ separated by \"-\" as in header.\n   1. \"$$\" - literal string.\n   2. \"CyberCash\"\
    \ - literal string (case insensitive).\n   3. \"End\" - literal string (case insensitive).\n\
    \   4. transmission checksum.\n   5.  \"$$\" - literal string.\n   The transmission\
    \ checksum is the MD5 has of all printable characters\n   in the version number\
    \ in the start line and those appearing after the\n   second $$ of the start line\
    \ and before the first $$ of the trailer\n   line as transmitted.  Note that all\
    \ white space is left out of this\n   hash, including any new-lines, spaces, tabs,\
    \ carriage returns, etc.\n   The exact label terminators actually used (: or ;)\
    \ are included as\n   would any # comment line.  Note that the optional \"Extra\"\
    \ string in\n   the $ start line is not included.  The idea is to check correct\n\
    \   transmission while avoiding sensitivity to gateways or processing\n   that\
    \ might change the line terminator sequence, convert tabs to\n   spaces, or the\
    \ like.\n"
- title: 2.7 Example Messages
  contents:
  - "2.7 Example Messages\n   Simple message from a client:\n   $$-CyberCash-0.8-$$\n\
    \   id: DONALD-69\n   transaction: 918273645\n   date: 199512250102\n   cyberkey:CC1001\n\
    \   opaque:\n    GpOJvDpLH62z+eZlbVkhZJXtTneZH32Qj4T4IwJqv6kjAeMRZw6nR4f0OhvbTFfPm+GG\n\
    \    aXmoxyUlwVnFkYcOyTbSOidqrwOjnAwLEVGJ/wa4ciKKI2PsNPA4sThpV2leFp2Vmkm4\n  \
    \  elmZdS0Qe350g6OPrkC7TKpqQKHjzczRRytWbFvE+zSi44wMF/ngzmiVsUCW01FXc8T9\n    EB8KjHEzVSRfZDn+lP/c1nTLTwPrQ0DYiN1lGy9nwM1ImXifijHR19LZIHlRXy8=\n\
    \   $$-End-CyberCash-End-jkn38fD3+/DFDF3434mn10==-$$\n   Message from a merchant:\n\
    \   $$-CyberCash-a.b.c-extra-$$\n   merchant-ccid: acme-69\n   merchant-date:\
    \ 19951231115959\n   merchant-transaction: 987654321\n   label: value\n   labelx:\
    \ multiple line\n      value...\n   # comment\n   # another comment line\n   label;\
    \ text with a real\n     multi-line\n        format !\n   merchant-cyberkey: CC1001\n\
    \   merchant-opaque:\n    C1Q96lU7n9snKN5nv+1SWpDZumJPJY+QNXGAm3SPgB/dlXlTDHwYJ4HDWKZMat+VIJ8y\n\
    \    /iomz6/+LgX+Dn0smoAge7W+ESJ6d6Ge3kRAQKVCSpbOVLXF6E7mshlyXgQYmtwIVN2J\n  \
    \  66fJMQpo31ErrdPVdtq6MufynN8rJyJtu8xSNolXlqIYNQy5G2I3XCc6D3UnSErPx1VJ\n    6cbwjLuIHHv58Nk+xxt/FyW7yAMwUb9YNcmOj//6Ru0NiOA9P/IiWczDe2mJRK1uqVpC\n\
    \    sDrWehG/UbFTPD26trlYRnnY\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n"
- title: 3. Signatures and Hashes
  contents:
  - "3. Signatures and Hashes\n   Inbound CyberCash request messages normally have\
    \ a signature, as\n   described below, of all of the messages fields outside of\
    \ the\n   signature.  This signature is transmitted inside the opaque part of\n\
    \   the message.  It enables the server to authenticate the source of the\n  \
    \ message.\n   Messages from a merchant to a client initiating a purchase sequence\n\
    \   have fields signed by the merchant.  These fields and this signature\n   are\
    \ included by the client in the opaque part of their card purchase\n   message\
    \ to the merchant so that, when all is passed on to the server,\n   it can verify\
    \ that the client saw the information the merchant\n   intended.\n   More information\
    \ on CyberCash signatures and the hash codes they are\n   based on, is given below.\n"
- title: 3.1 Digital Signatures
  contents:
  - "3.1 Digital Signatures\n   Digital signatures are a means of authenticating information.\
    \  In\n   CyberCash messages, they are calculated by first taking the hash of\n\
    \   the data to be authenticated, as described below, and then encoding\n   the\
    \ hash using an RSA private key.\n   Anyone possessing the corresponding public\
    \ key can then decrypt the\n   hash and compare it with the message hash.  If\
    \ they match, then you\n   can be sure that the signature was generated by someone\
    \ possessing\n   the private key which corresponded with the public key you used\
    \ and\n   that the message was not tampered with.\n   In the CyberCash system,\
    \ clients, merchants, and the server have\n   public-private key pairs.  By keeping\
    \ the private key secret and\n   registering their public key with the server\
    \ (for a merchant or\n   client) or publishing their public key or keys (for the\
    \ server), they\n   can provide high quality authentication by signing parts of\
    \ messages.\n   An RSA digital signature is approximately the size of the modulus\n\
    \   used.  For example, if that is 768 bits long, then the binary digital\n  \
    \ signature would be 768 bits or 96 bytes long and its base 64 encoding\n   would\
    \ be 128 bytes.\n"
- title: 3.2 Hash Codes
  contents:
  - "3.2 Hash Codes\n   The hashes used in CyberCash messages are message digests.\
    \  That is,\n   a non-invertable fingerprint of a message such that it is\n  \
    \ computationally infeasible to find an alternate message with the same\n   hash.\
    \  Thus the relatively small hash can be used to secure a larger\n   message.\
    \  If you are confident in the authenticity of the hash and\n   are presented\
    \ with a message which matches the hash, you can be sure\n   it is the original\
    \ message, at least as regards all aspects that have\n   been included in the\
    \ hash.\n   The hash is calculated using the MD5 algorithm (see RFC 1321) on a\n\
    \   synthetic message.  The synthetic message is composed of the labels\n   and\
    \ values specified in a list for the particular hash.  Since the\n   hash is input\
    \ order dependent, it is essential that the label-value\n   pairs be assembled\
    \ in the order specified.  In some cases, a range of\n   matching labels is specified.\
    \  For example, \"card*\" to match card-\n   number, card-expiration-date, and\
    \ all other labels starting with\n   \"card\".  In such cases, all existing matching\
    \ labels are used in\n   ascending alphabetic order by ASCII character code.\n\
    \   If a label is specified in a signature list but is not present in the\n  \
    \ label-value data on which the hash is being calculated, it is not\n   included\
    \ in the hash at all.  That is, even the label and label\n   terminator are omitted\
    \ from the synthetic message.\n   Before being hashed, the text of the synthetic\
    \ message is processed\n   to remove all \"white space\" characters.  White space\
    \ characters are\n   defined as any with an ASCII value of 32 (space) or less\
    \ or 127\n   (rubout) or greater.  Thus all forms of new-line/carriage-return\
    \ and\n   distinctions such as blank lines, trailing spaces, replacement of a\n\
    \   horizontal tab character by multiple spaces, etc., are ignored for\n   hash\
    \ purposes.\n   MD5 hashes are 16 bytes long.  This means that the base 64 encoding\n\
    \   of such a hash will be 24 characters (of which the last two will\n   always\
    \ be padding equal signs).\n"
- title: 4. Specific Message Formats
  contents:
  - "4. Specific Message Formats\n   This section describes the formats of the Verison\
    \ 0.8 CyberCash\n   messages by example with comments.  The reader in assumed\
    \ to be\n   familiar with terms such as \"acquirer\", \"PAN\" (primary account\n\
    \   number), etc., defined in ISO 8583, and currency designations as\n   defined\
    \ in ISO 4217. A few fields not relevant to current operations\n   have been removed\
    \ to simplify this exposition.\n   In the following example messages, signatures,\
    \ hashes, and encrypted\n   sections are fake nonsense text and ids are fictitious.\n"
- title: 4.1 Persona Registration and Application Retrieval
  contents:
  - "4.1 Persona Registration and Application Retrieval\n   The first step in customer\
    \ use of CyberCash is registering a persona\n   using the customer application.\
    \  This is done with the R1 message\n   defined below.  The CyberCash server responds\
    \ with the R2 message.\n   When the customer application learns that it is out\
    \ of date, it can\n   use the GA1 request message to the server and its GA2 response\
    \ to\n   download a new signed version of itself.\n"
- title: 4.1.1 R1 - registration
  contents:
  - "4.1.1 R1 - registration\n   Description: This is the initial message sent to\
    \ create a new\n       CyberCash persona.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   transaction: 123123213\n   date:\
    \ 19950121100505.nnn\n   cyberkey: CC1001\n   opaque:\n    FrYOQrD16lEfrvkrqGWkajM1IZOsLbcouB43A4HzIpV3/EBQM5WzkRJGzYPM1r3noBUc\n\
    \    MJ4zvpG0xlroY1de6DccwO9j/0aAZgDi9bcQWV4PFLjsN604j3qxWdYn9evIGQGbqGjF\n  \
    \  vn1qI1Ckrz/4/eT1oRkBBILbrWsuwTltFd84plvTy+bo5WE3WnhVKsCUJAlkKpXMaX73\n    JRPoOEVQ3YEmhmD8itutafqvC90atX7ErkfUGDNqcB9iViRQ7HSvGDnKwaihRyfirkgN\n\
    \    +lhOg6xSEw2AmYlNiFL5d/Us9eNG8cZM5peTow==\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: Generated using CyberCash encrypting public key\n       identified\
    \ in CyberKey.\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: registration\n   swversion: 0.8win\n  \
    \ content-language: en-us\n   requested-id: MyRequestedCCID\n   email: myemail@myemailhost.com\n\
    \   pubkey:\n    0VdP1eAUZRrqt3Rlg460Go/TTs4gZYZ+mvI7OlS3l08BVeoms8nELqL1RG1pVYdDrTsX\n\
    \    E5L+wcGCLEo5+XU5zTKkdRUnGRW4ratrqtcte7e94F+4gkCN06GlzM/Hux94\n   signature:\n\
    \    v6JGmxIwRiB6iXUK7XAIiHZRQsZwkbLV0L0OpVEvan9l59hVJ3nia/cZc/r5arkLIYEU\n  \
    \  dw6Uj/R4Z7ZdqO/fZZHldpd9+XPaqNHw/y8Arih6VbwrO5pKerLQfuuPbIom\n   #####################################################################\n\
    \   signature is of the following fields: transaction, date, cyberkey,\n     \
    \  type, swversion, content-language, requested-id, email, pubkey\n   #####################################################################\n\
    \   Explanation:\n   content-language is taken from the MIME header field (see\
    \ RFC1766)\n       and is the language text messages should be generated in. \
    \ (only\n       en-us implemented at this time.\n   swversion used to check if\
    \ client application is old.\n"
- title: 4.1.2 R2 - registration-response
  contents:
  - "4.1.2 R2 - registration-response\n   Description: This message gives the success/failure\
    \ response to R1.\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   transaction: 12312313\n   date:\
    \ 19950121100505.nnn\n   opaque:\n    r1XfjSQt+KJYUVOGU60r7voFrm55A8fP5DjJZuPzWdPQjGBIu3B6Geya8AlJfHsW11u8\n\
    \    dIv1yQeeYj/+l9TD1dXW21/1cUDFFK++J2gUMVv8mX1Z6Mi4OU8AfsgoCliwSkWmjSOb\n  \
    \  kE62sAlZTnw998cKzMFp70TSlI3PEBtvIfpLq5lDCNbWidX8vFZV0ENUmMQ9DTP3du9w\n    fsFGvz1mvtHLT/Gj8GNQRYKF4xiyx4HYzTkSMhgU5B/QDLPS/SawIJuR86b9X0mwsr0a\n\
    \    gbGTzECPJTiKkrhxxMG/eymptsVQSLqNaTCx6w==\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: Same as session key for R1 for same Transaction and\n       connection\
    \ (there may be no ID!).\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: registration-response\n   server-date:\
    \ 19950121100506.nnn\n   requested-id: MyRequestedCCID\n   response-id: CyberCashHandle\n\
    \   email: myemail@myemailhost.com\n   response-code: success/failure/etc.\n \
    \  pubkey:\n    0VdP1eAUZRrqt3Rlg460Go/TTs4gZYZ+mvI7OlS3l08BVeoms8nELqL1RG1pVYdDrTsX\n\
    \    E5L+wcGCLEo5+XU5zTKkdRUnGRW4ratrqtcte7e94F+4gkCN06GlzM/Hux94\n   swseverity:\
    \ fatal/warning  [absent if ok]\n   swmessage; Tells CyberApp that it is obsolete.\
    \  Display this\n    text to the user.  [only present if SWSeverity present]\n\
    \   message;\n          Free text of the error/success condition.\n          This\
    \ text is to be displayed to the person\n          by the CyberCash application...\n\
    \          In general this includes: duplicate-id, bad-signature,\n          or\
    \ ill-formed-registration\n   #####################################################################\n\
    \   Signature is of the following fields: no-signature\n   #####################################################################\n\
    \   Explanation:\n   responseid is used to suggest a unique ID if the failure\
    \ was due\n       to the requested ID being already in use... If the reason for\n\
    \       failure was not due to duplicate ID then this field may be\n       omitted.\n\
    \   responseid gives the actual ID with check characters appended if\n       success.\n\
    \   swseverity can warn user of old client application or indicate\n       failure\
    \ due to old or known buggy version.\n"
- title: 4.1.3 GA1 - get-application
  contents:
  - "4.1.3 GA1 - get-application\n   Description: Used by CyberApp to get an updated\
    \ version.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   transaction: 123123213\n   date:\
    \ 19950121100505.nnn\n   cyberkey: CC1001\n   opaque:\n    VHMS611wGkUmR6bKoI+ODoSbl7L5PKtEo6aM88LCidqN+H/8B4xM3LxdwUiLn7rMPkZi\n\
    \    xOGb+5d1lRV7WeTp21QYlqJr8emc6FAnGd5c0csPmcnEpTFh9xZDJaStarxxmSEwm2mw\n  \
    \  l2VjEUODH6321vjoMAOFQWn7ER0o\n   $$-CyberCash-End-0QXqLlNxrn4GNQPPk9AO1Q==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: Generated using CyberCash encrypting public key identified\n   \
    \   in CyberKey.\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: get-application\n   swversion: 0.8win\n\
    \   #####################################################################\n  \
    \ Signature is of the following fields: no signature\n   #####################################################################\n\
    \   Explanation:\n   There may not be a customer persona so there is no ID.  There\n\
    \       may not be a customer public/private key pair so there is\n       no signature.\
    \  The swversion is mandatory so the server can\n       tell what to return.\n"
- title: 4.1.4 GA2 - get-application-response
  contents:
  - "4.1.4 GA2 - get-application-response\n   Description: Return success and URL\
    \ of up to date copy of CyberApp\n       or failure.\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   transaction: 12312313\n   date:\
    \ 19950110102333.nnn\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   $$-CyberCash-End-0QXqLlNxrn4GNQPPk9AO1Q==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: session key from GA1\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: get-application-response\n   server-date:\
    \ 19950110102334.nnn\n   response-code: success/failure/etc.\n   message; Text\
    \ message to be displayed to the user providing more\n       information on the\
    \ success/failure.\n   swversion: 0.8win\n   application-url: http://foo.cybercash.com/server/0.8WIN.EXE\n\
    \   application-hash: lSLzs/vFQ0BXfU98LZNWhQ==\n   #####################################################################\n\
    \   Signature: none.\n   #####################################################################\n\
    \   Explanation:\n   application-hash is the MD5 of the binary of the application.\n\
    \   application-url & application-hash omitted on failure.\n   swversion is the\
    \ version being transmitted to the customer.\n"
- title: 4.2 Binding Credit Cards
  contents:
  - "4.2 Binding Credit Cards\n   The CyberCash system is design to give the card\
    \ issuing organization\n   control over whether a card may be used via the CyberCash\
    \ system.\n   The customer, after having registered a persona with CyberCash as\n\
    \   described above, can then bind each credit card they wish to use to\n   their\
    \ CyberCash persona.  This is done via the BC1 message from the\n   customer to\
    \ their CyberCash server and the BC4 response from the\n   server.\n"
- title: 4.2.1 BC1 - bind-credit-card
  contents:
  - "4.2.1 BC1 - bind-credit-card\n   Description: This is the initial message in\
    \ the process of binding a\n       credit card to a CyberCash persona.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: MyCyberCashID\n   date: 19950121100505.nnn\n\
    \   transaction: 12312314\n   cyberkey: CC1001\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: generated from CyberCash encryption key identified in\n       CyberKey\n\
    \   #####################################################################\n  \
    \ Opaque Section Contents:\n   type: bind-credit-card\n   swversion: 0.8win\n\
    \   card-number: 1234567887654321\n   card-type: mastercard\n   card-salt: 46735210\n\
    \   card-expiration-date: 05/99\n   card-name: John Q. Public\n   card-street:\n\
    \   card-city:\n   card-state:\n   card-postal-code:\n   card-country:\n   signature:\n\
    \    tX3odBF2xPHqvhN4KVQZZBIXDveNi0eWA7717DNfcyqh2TpXqgCxlDjcKqdJXgsNLkY7\n  \
    \  GkyuDyTF/m3SZif64giCLjJRKg0I6mqI1k/Dcm58D9hKCUttz4rFWRqhlFaj\n   #####################################################################\n\
    \   signature is of the following fields: id, date, transaction,\n       cyberkey,\
    \ type, swversion, card-number, card-salt,\n       card-expiration-date, card-name,\
    \ card-street, card-city,\n       card-state, card-postal-code, card-country\n\
    \   #####################################################################\n  \
    \ Explanation:\n   salt is needed so that the hash stored at the server is less\n\
    \       informative.  Server just remembers the \"prefix\" of the card\n     \
    \  number and the hash of the combined card number and salt. If it\n       just\
    \ hashed the card number, it would be recoverable with modest\n       effort by\
    \ trying to hash all plausible numbers.  We don't want\n       to store the card\
    \ numbers on the server because it would make\n       the server files too valuable\
    \ to bad guys.\n"
- title: 4.2.2 BC4 - bind-credit-card-response
  contents:
  - "4.2.2 BC4 - bind-credit-card-response\n   Description: Indicates that the process\
    \ of binding a credit card\n       terminated.  Returns success or failure.\n\
    \   #####################################################################\n  \
    \ Sender: CyberServer\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: mycybercashid\n   transaction:\
    \ 12312314\n   date: 19950121100505.nnn\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: Session key from BC1 with same Transaction and ID\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: bind-credit-card-response\n   server-date:\
    \ 19950121100506.nnn\n   swseverity: fatal/warning  [absent if ok]\n   swmessage;\
    \ message about obsoleteness of customer software\n       to be shown to the customer.\
    \  [only present if SWSeverity present]\n   response-code: success/failure/etc.\n\
    \   card-number: 1234567887654321\n   card-type: visa\n   card-salt: 47562310\n\
    \   card-expiration-date: 01/99\n   card*: [other card* lines to also be given\
    \ in CH.1 message]\n   message; Plain text for the user\n       can be multiple\
    \ lines\n   #####################################################################\n\
    \   Signature is of the following fields: no-signature\n   #####################################################################\n\
    \   Explanation: All the card* lines can be saved as a blob to be\n       submitted\
    \ in CH.1.  card-expiration-date, card-number, card-salt,\n       and card-type\
    \ should always be present.\n   Depending on reason for failure, not all fields\
    \ may be present.\n"
- title: 4.3 Customer Credit Card Purchasing Messages
  contents:
  - "4.3 Customer Credit Card Purchasing Messages\n   In general, CyberCash involvement\
    \ in the credit card purchasing cycle\n   starts after the user has determined\
    \ what they are buying.  When they\n   click on the CyberCash payment button,\
    \ a PR1 message is sent by the\n   merchant to the customer as the body of a message\
    \ of MIME type\n   application/cybercash.\n   If the customer wishes to proceed,\
    \ they respond to the merchant  with\n   a  CH1.   The merchant responds with\
    \ a CH2 but between the receipt of\n   the CH1 and issuance of the CH2, the  merchant\
    \  usually  communicates\n   with the CyberCash server via the CM* messages.\n"
- title: 4.3.1 PR1 - payment-request
  contents:
  - "4.3.1 PR1 - payment-request\n   Description: This message is the first message\
    \ that is defined\n       by CyberCash in the purchase-from-a-merchant process.\
    \ The\n       shopping has completed.  Now we are at the point of paying\n   \
    \    for the purchases.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   type: payment-request\n   merchant-ccid:\
    \ ACME-012\n   merchant-order-id: 1231-3424-234242\n   merchant-date: 19950121100505.nnn\n\
    \   note;\n     ACME Products\n     Purchase of 4 pairs \"Rocket Shoes\" at $39.95\
    \ ea.\n     Shipping and handling $5.00\n     Total Price: 164.80\n     Ship to:\n\
    \          Wily Coyote\n          1234 South St.\n          Somewhere, VA 12345\n\
    \   merchant-amount: usd 164.80\n   accepts: visa:CC001, master:CC001,amex:CC001,JCPenny:VK005,macy:VK006\n\
    \   url-pay-to: http://www.ACME.com/CybercashPayment\n   url-success: http://www.ACME.com/ordersuccess\n\
    \   url-fail: http://www.ACME.com/orderfail\n   merchant-signed-hash:\n    a/0meaMHRinNVd8nq/fKsYg5AfTZZUCX0S3gkjAhZTmcrkp6RZvppmDd/P7lboFLFDBh\n\
    \    Ec0oIyxWeHfArb3OtkgXxJ7qe0Gmm/87jG5ClGnpBnw0dY7qcJ6XoGB6WGnD\n   $$-CyberCash-End-lSLzs/vFQ0BXfU98LZNWhQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: no opaque section\n   #####################################################################\n\
    \   Opaque Section Contents: no opaque section\n   #####################################################################\n\
    \   merchant-signed-hash is the signature under the merchant's\n       private\
    \ key of the hash of the following fields: type,\n       merchant-ccid, merchant-order-id,\
    \ date, note, merchant-amount,\n       accepts, url-pay-to, url-success, url-fail\n\
    \   #####################################################################\n  \
    \ Explanation:\n   This message is signed by the merchant but the customer cannot\n\
    \       directly verify this signature. When the payment is made, the\n      \
    \ Customer includes the signature with the hash (derived by the\n       customer\
    \ directly) in the payment. If these do not match, the\n       CyberCash will\
    \ not perform the payment function.\n   accepts: The client software will only\
    \ recognized single word card\n   name in the accepts field of PR1. For example,\n\
    \     MasterCard\n     AmericanExpress\n   are recognized where as\n     Master\
    \ card\n     American express\n   are not recognized. MasterCard and masterCard\
    \ are both\n   recognized as master card.\n   Card type followed by key designator.\
    \  For main line credit cards,\n       this will be a CC*.  Client can use or\
    \ ignore the * number as\n       it chooses.  For proprietary card, this will\
    \ be VK* where * is\n       the CheckFree key to use (1 based).  Cards separated\
    \ by comma,\n       key designator follows card type and colon.\n   url-pay-to\
    \ is where the CH1 should be sent.  url-fail and url-success\n       are where\
    \ the browser should look after failure or success.\n"
- title: 4.3.2 CH1 - credit-card-payment
  contents:
  - "4.3.2 CH1 - credit-card-payment\n   Description: This message represents the\
    \ presentation of a \"credit\n       card for payment\".\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: MerchantApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   type: card-payment\n   id: myCyberCashID\n\
    \   order-id: 1231-3424-234242\n   merchant-ccid: ACME-012\n   transaction: 78784567\n\
    \   date: 19950121100505.nnn\n   pr-hash: c77VU/1umPKH2kpMR2QVKg==\n   pr-signed-hash:\n\
    \    a/0meaMHRinNVd8nq/fKsYg5AfTZZUCX0S3gkjAhZTmcrkp6RZvppmDd/P7lboFLFDBh\n  \
    \  Ec0oIyxWeHfArb3OtkgXxJ7qe0Gmm/87jG5ClGnpBnw0dY7qcJ6XoGB6WGnD\n   cyberkey:\
    \ CC1001\n   opaque:\n    iff/tPf99+Tm5P7s3d61jOWK94nq9/+1jOWK9+vr9+b+94n3tYzmiveJ9/+09/334ubg\n\
    \    3rWM5Ir3ier3/7WM5Ir36+v35v73ife1jOWK94n3/7T3/ffm5uD+7N339/f39/eq3ff3\n  \
    \  9/eFiJK5tLizsoeSmpW7uLS8/7iio7Wisfv38biio7uyufv3tfv35uH+7N3d9/exuKX3\n    5+z3vuu4oqO7srnsvvz8/venoqO0v7al/7iio7WisYy+iv7s3ff3p6KjtL+2pf/wi7nw\n\
    \    3ard3Q==\n   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Opaque Key: Created using CyberCash encrypting public key in\n       CyberKey.\n\
    \   #####################################################################\n  \
    \ Opaque Section Contents:\n   swversion: 0.8win\n   amount: usd 10.00\n   card*:\
    \ [from successful BC4 (includes card-expiration-date,\n       card-number, card-type,\
    \ and card-salt)]\n   signature:\n    meO38aULnoP09VhTS2E56tnuZBRRlGfbwqaleZ9zNnv7YjExJKBFxuaqYTUDEj427HHh\n\
    \    mm9BVmHRwCq6+8ylZXixGHI1I9A/ufAMrpqMIi6DS3PRlc8WC3CCWoAHyAqr\n   #####################################################################\n\
    \   signature is under client private key of the following fields:\n       type,\
    \ id, order-id, merchant-ccid, transaction, date,\n       pr-hash, pr-signed-hash,\
    \ cyberkey, swversion, amount,\n       card*\n   #####################################################################\n\
    \   Explanation:\n   The pr-signed-hash field is the same as the merchant-signed-hash\
    \ in\n       the PR1 message but has a different name for historic reasons.\n"
- title: 4.3.3 CH2 - charge-card-response
  contents:
  - "4.3.3 CH2 - charge-card-response\n   Description: Return to customer from a CH1\
    \ attempt to pay via credit\n       card.  Indicates success/failure.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   type: charge-card-response\n \
    \  merchant-ccid: ACME-012\n   id: myCyberCashID\n   transaction: 78784567\n \
    \  date: 1995121100500.nnn\n   merchant-date: 19950121100505.nnn\n   merchant-response-code:\
    \ failure/success/etc.\n   pr-hash: 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n\
    \    a/0meaMHRinNVd8nq/fKsYg5AfTZZUCX0S3gkjAhZTmcrkp6RZvppmDd/P7lboFLFDBh\n  \
    \  Ec0oIyxWeHfArb3OtkgXxJ7qe0Gmm/87jG5ClGnpBnw0dY7qcJ6XoGB6WGnD\n   merchant-message;\
    \ This is a message to display to the user from the\n       merchant. Can be multiple\
    \ lines...  Is not secure.\n   opaque:  [might not be present, see explanation]\n\
    \    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n  \
    \  nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n    4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n\
    \    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n  \
    \  QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key:   Same customer session key from CH1 passed through CM1\n      \
    \ for ID and Transaction\n   #####################################################################\n\
    \   Opaque Section Contents (from CM.6):\n   server-date: 19950121100706.nnn\n\
    \   amount: usd 10.00\n   order-id: 1231-3424-234242\n   card*:  [from successful\
    \ BC4]\n   response-code: failure/success/etc.\n   swseverity: fatal/warning\n\
    \   swmessage; Tells CyberApp that it is obsolete.  Display this\n    text to\
    \ the user.  [only present if SWSeverity present]\n   message;\n          Free\
    \ text of the error/success condition.\n          This text is to be displayed\
    \ to the customer\n          by the CyberCash application...\n   #####################################################################\n\
    \   Signature is of the following fields: no signature\n   #####################################################################\n\
    \   Explanation:\n   Opaque section optional because the CH1 to the merchant can\
    \ fail due\n       to bad order-id, date, wrong merchant-ccid, etc., etc. So the\n\
    \       server may not be involved at all in which case there is no\n       mechanism\
    \ for generating a secure opaque section.  (It could even\n       be that merchant\
    \ attempt to contact the server times out.)\n   If transaction makes it through\
    \ server (via CM*) then\n       Response-Code at top level should mirror response-code\
    \ to\n       merchant from server. (Hopefully the same as the\n       response-code\
    \ to customer from server but the merchant can't\n       tell that.)\n   Note\
    \ that there can be two messages, one from merchant and one\n       from the server.\n"
- title: 4.4 Merchant Credit Card Purchasing Messages
  contents:
  - "4.4 Merchant Credit Card Purchasing Messages\n   The merchant presents credit\
    \ card purchases, makes adjustments, and\n   the like via the CM* series.  In\
    \ general, the credit card cycle is\n   one of getting authorization for a purchase,\
    \ then capturing the\n   purchase in a batch for clearance, then performing the\
    \ clearance.  It\n   is also possible to void a capture (i.e., remove an item\
    \ from a\n   batch), and process credits (returns). (See section 5.1.)\n   Authorizations\
    \ always come from an acquirer via the response to a CM1\n   or CM2 message. If\
    \ capture is being performed by the acquirer or some\n   entity between the CyberCash\
    \ server and the acquirer, this is done\n   via a CM3 or CM2 message depending\
    \ on the arrangement between the\n   merchant and the entity doing the capture.\
    \  Returns (credits) are\n   handled via message CM5.  Message CM4 is provided\
    \ for voiding a\n   capture or return before the batch is cleared.  CM6 is the\
    \ message\n   format used for responses to all the other CM* messages.\n   An\
    \ MM* series has also been implemented for purely merchant\n   originated CyberCash\
    \ charges as described in section 3.4.7\n   Current credit card dispute resolution\
    \ systems assume that the\n   merchant knows the card number.  Thus, to work with\
    \ these systems,\n   special bypass messages have been set up that allow the merchant\
    \ to\n   obtain, for a particular transaction, the information that CyberCash\n\
    \   otherwise goes to lengths to hide from the merchant.  See sections\n   3.4.8\
    \ and 3.4.9.  This makes the obtaining os such information by the\n   merchant\
    \ an auditable event.\n   Many present day merchants operate in a \"terminal capture\"\
    \ mode where\n   the authorizations are captured by the merchant and the merchant\n\
    \   later submits the settlement batch.  Messages have been defined and\n   are\
    \ being implemented so that such merchant captured batches can be\n   submitted\
    \ via CyberCash.\n"
- title: 4.4.1 CM1 - auth-only
  contents:
  - "4.4.1 CM1 - auth-only\n   Description: This message is used by the merchant to\
    \ perform an\n       authorization operation on the credit card sent in by the\n\
    \       customer.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-69\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   merchant-cyberkey: CC1001\n\
    \   cyberkey: CC1001\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   merchant-opaque:\n    6BVEfSlgVCoGh1/0R+g1C143MaA6QLvKpEgde86WWGJWx45bMUZvaAu4LVeqWoYCqSGf\n\
    \    aWKUF7awol0h1i1jtgieyAcXB8ikvRJIsupSAwsRMyoNlekR6tucvfv/622JY7+n7nGO\n  \
    \  dGbMzP0GJImh2DmdPaceAxyOB/xOftf6ko0nndnvB+/y2mFjdUGLtFQP/+3bTpZttZXj\n    j7RO1khe1UrAIk2TGQJmNw+ltsu0f42MgsxB8Q31vjPtoiPi5LEmD0Y4jlpJ7Jg2Ub84\n\
    \    F9vJhYpmzNkdiJUe83Hvo/xfJRbhafJpXFEsUZwQK0jU1ksU6CQd2+CPBB+6MxtsHoxJ\n  \
    \  mjD6ickhd+SQZhbRCNerlTiQGhuL4wUAxzGh8aHk2oXjoMpVzWw2EImPu5QaPEc36xgr\n    mNz8vCovDiuy3tZ42IGArxBweasLPLCbm0Y=\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Merchant-Opaque Section Contents:\n   type: auth-only\n   order-id: 12313424234242\n\
    \   merchant-amount: usd 10.00\n   pr-hash: 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n\
    \    a/0meaMHRinNVd8nq/fKsYg5AfTZZUCX0S3gkjAhZTmcrkp6RZvppmDd/P7lboFLFDBh\n  \
    \  Ec0oIyxWeHfArb3OtkgXxJ7qe0Gmm/87jG5ClGnpBnw0dY7qcJ6XoGB6WGnD\n   id: myCyberCashID\n\
    \   transaction: 78784567\n   date: 19950121100505.nnn\n   merchant-signature:\n\
    \    v4qZMe2d7mUXztVdC3ZPMmMgYHlBA7bhR96LSehKP15ylqR/1KwwbBAX8CEqns55UIYY\n  \
    \  GGMwPMGoF+GDPM7GlC6fReQ5wyvV1PnETSVO9/LAyRz0zzRYuyVueOjWDlr5\n   #####################################################################\n\
    \   merchant-opaque key is generated from the CyberCash encrypting public\n  \
    \      key identified in merchant-cyberkey.\n   Customer opaque section (Opaque)\
    \ - see CH1.\n   #####################################################################\n\
    \   Opaque Section Contents & Signature:  (exactly as in CH1)\n   swversion: 0.8win\n\
    \   amount: usd 10.00\n   card*: [from successful BC4 (includes card-expiration-date,\n\
    \       card-number, and card-salt)]\n   signature:\n    48SBKUfojyC9FDKCwdCYNvucgiDxYO9erZW4QndIXZRyheTHXH8OeIhwUkyLmgQSD/UK\n\
    \    +IX9035/jUkdNPOxUQq9y/beHS1HU9Fe0wlzfXYRtnjlqvQX+yUfQ4T7eNEs\n   #####################################################################\n\
    \   merchant-signature is on the following fields: merchant-ccid,\n       merchant-transaction,\
    \ merchant-date, merchant-cyberkey, type,\n       order-id, merchant-amount, pr-hash,\
    \ pr-signed-hash, id,\n       transaction, date, cyberkey\n   Customer Signature:\
    \ see CH1\n   #####################################################################\n\
    \   Explanation:\n   The merchant signature ensures integrity of the majority\
    \ of the\n       message.  validation of the customer signature ensures that the\n\
    \       customer opaque part was not tampered or replaced.\n"
- title: 4.4.2 CM2 - auth-capture
  contents:
  - "4.4.2 CM2 - auth-capture\n   Description: Do authorization and actually enters\
    \ charge for\n       clearance. Message just like CM1 except for different\n \
    \      type.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   [exactly the same as CM1 except\n   type: auth-capture\n\
    \   ]\n"
- title: 4.4.3 CM3 - post-auth-capture
  contents:
  - "4.4.3 CM3 - post-auth-capture\n   Description: Captures a charge previously authorized.\
    \ Message is\n       the same as CM1 except that it also has an authorization-code\n\
    \       field (which is also included in the signature) and the type\n       is\
    \ different.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-012\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   merchant-cyberkey: CC1001\n\
    \   cyberkey: CC1001\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   merchant-opaque:\n    6BVEfSlgVCoGh1/0R+g1C143MaA6QLvKpEgde86WWGJWx45bMUZvaAu4LVeqWoYCqSGf\n\
    \    aWKUF7awol0h1i1jtgieyAcXB8ikvRJIsupSAwsRMyoNlekR6tucvfv/622JY7+n7nGO\n  \
    \  dGbMzP0GJImh2DmdPaceAxyOB/xOftf6ko0nndnvB+/y2mFjdUGLtFQP/+3bTpZttZXj\n    j7RO1khe1UrAIk2TGQJmNw+ltsu0f42MgsxB8Q31vjPtoiPi5LEmD0Y4jlpJ7Jg2Ub84\n\
    \    F9vJhYpmzNkdiJUe83Hvo/xfJRbhafJpXFEsUZwQK0jU1ksU6CQd2+CPBB+6MxtsHoxJ\n  \
    \  mjD6ickhd+SQZhbRCNerlTiQGhuL4wUAxzGh8aHk2oXjoMpVzWw2EImPu5QaPEc36xgr\n    mNz8vCovDiuy3tZ42IGArxBweasLPLCbm0Y=\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Merchant-Opaque Section Contents:\n   type: post-auth-capture\n   authorization-code:\
    \ a12323\n   order-id: 1231-3424-234242\n   merchant-amount: usd 10.00\n   pr-hash:\
    \ 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n    a/0meaMHRinNVd8nq/fKsYg5AfTZZUCX0S3gkjAhZTmcrkp6RZvppmDd/P7lboFLFDBh\n\
    \    Ec0oIyxWeHfArb3OtkgXxJ7qe0Gmm/87jG5ClGnpBnw0dY7qcJ6XoGB6WGnD\n   id: myCyberCashID\n\
    \   transaction: 78784567\n   date: 19950121100505.nnn\n   merchant-signature:\n\
    \    vxyEF1ZHn5Rgmtms3H3t/+UB6RAvZQA1AdddjvlS0H75N1x83FyJuh8V9Ok6t4EUQQZ6\n  \
    \  Mnptzc6phJi3Ar0s0oumELsdc8upJdXpNpJV021PGJXfDKfHP0heJIWLodXr\n   #####################################################################\n\
    \   merchant-opaque key is generated from the CyberCash encrypting public\n  \
    \      key identified in merchant-cyberkey.\n   Customer opaque section (Opaque)\
    \ - see CH1.\n   #####################################################################\n\
    \   Opaque Section Contents & Signature:  (exactly as in CH1)\n   swversion: 0.8win\n\
    \   amount: usd 10.00\n   card*: [from successful BC4 (includes card-salt, card-number,\n\
    \       and card-expiration)]\n   signature:\n    48SBKUfojyC9FDKCwdCYNvucgiDxYO9erZW4QndIXZRyheTHXH8OeIhwUkyLmgQSD/UK\n\
    \    +IX9035/jUkdNPOxUQq9y/beHS1HU9Fe0wlzfXYRtnjlqvQX+yUfQ4T7eNEs\n   #####################################################################\n\
    \   merchant-signature is on the following fields: merchant-ccid,\n       merchant-transaction,\
    \ merchant-date, merchant-cyberkey, type,\n       authorization-code, order-id,\
    \ merchant-amount, pr-hash,\n       pr-signed-hash, id, transaction, date, cyberkey\n\
    \   #####################################################################\n  \
    \ Explanation:\n   The merchant signature ensures integrity of the majority of\
    \ the\n       message validation of the customer signature ensures that the\n\
    \       customer opaque part was not tampered or replaced.\n"
- title: 4.4.4 CM4 - void
  contents:
  - "4.4.4 CM4 - void\n   Description: Voids out a charge/return if received before\n\
    \       clearance.  Message is the same as CM1 except that it also has\n     \
    \  a retrieval-reference-number field (which is also included in the\n       signature)\
    \ and the type is different.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-012\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   merchant-cyberkey: CC1001\n\
    \   cyberkey: CC1001\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   merchant-opaque:\n    6BVEfSlgVCoGh1/0R+g1C143MaA6QLvKpEgde86WWGJWx45bMUZvaAu4LVeqWoYCqSGf\n\
    \    aWKUF7awol0h1i1jtgieyAcXB8ikvRJIsupSAwsRMyoNlekR6tucvfv/622JY7+n7nGO\n  \
    \  dGbMzP0GJImh2DmdPaceAxyOB/xOftf6ko0nndnvB+/y2mFjdUGLtFQP/+3bTpZttZXj\n    j7RO1khe1UrAIk2TGQJmNw+ltsu0f42MgsxB8Q31vjPtoiPi5LEmD0Y4jlpJ7Jg2Ub84\n\
    \    F9vJhYpmzNkdiJUe83Hvo/xfJRbhafJpXFEsUZwQK0jU1ksU6CQd2+CPBB+6MxtsHoxJ\n  \
    \  mjD6ickhd+SQZhbRCNerlTiQGhuL4wUAxzGh8aHk2oXjoMpVzWw2EImPu5QaPEc36xgr\n    mNz8vCovDiuy3tZ42IGArxBweasLPLCbm0Y=\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Merchant-Opaque Section Contents:\n   type: void\n   retrieval-reference-number:\
    \ 432112344321\n   order-id: 1231-3424-234242\n   merchant-amount: usd 10.00\n\
    \   pr-hash: WATCQuH2q17lRuoxD78YBg==\n   pr-signed-hash:\n    8zqw0ipqtLtte0tBz5/5VPNJPPonfTwkfZPbtuk5lqMykKDvThhO0ycrfT7eXrn/hLUC\n\
    \    kXoSctahEVdw1KBJbp0EVr1zVzcN9Aa7m2fJgxNfiisTgIRW+PMaa78rn+Ov\n   id: myCyberCashID\n\
    \   transaction: 78784567\n   date: 19950121100505.nnn\n   Merchant-Signature:\
    \ lkjladjslkjflsakjflkjsdljflsakjflkjsdljflsakjflkj\n       flsakjflkjsdljflsakjflkjsdljflsajflksdjflksdjflsdjssf=\n\
    \   #####################################################################\n  \
    \ Merchant-Opaque key is generated from the CyberCash encrypting public\n    \
    \    key identified in Merchant-CyberKey.\n   Customer opaque section (Opaque)\
    \ - see CH1.\n   #####################################################################\n\
    \   Opaque Section Contents & Signature:  (exactly as in CH1)\n   swversion: 0.8win\n\
    \   amount: usd 10.00\n   card*: [from successful bc4 (includes card-salt, card-number,\n\
    \       and card-expiration)]\n   signature:\n    48SBKUfojyC9FDKCwdCYNvucgiDxYO9erZW4QndIXZRyheTHXH8OeIhwUkyLmgQSD/UK\n\
    \    +IX9035/jUkdNPOxUQq9y/beHS1HU9Fe0wlzfXYRtnjlqvQX+yUfQ4T7eNEs\n   #####################################################################\n\
    \   merchant-signature is on the following fields: merchant-ccid,\n       merchant-transaction,\
    \ merchant-date, merchant-cyberkey, type,\n       retrieval-reference-number,\
    \ order-id, merchant-amount, pr-hash,\n       pr-signed-hash, id, transaction,\
    \ date, cyberkey\n   #####################################################################\n\
    \   Explanation:\n   The merchant signature ensures integrity of the majority\
    \ of the\n       message.  Validation of the customer signature ensures that the\n\
    \       customer opaque part was not tampered or replaced.\n"
- title: 4.4.5 CM5 - return
  contents:
  - "4.4.5 CM5 - return\n   Description: Reverse a previous charge.  Really sort of\
    \ a negative\n       charge.  Message just like CM1 except for different type.\n\
    \   #####################################################################\n  \
    \ Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   [exactly the same as CM1 except\n   type: return\n   ]\n"
- title: 4.4.6 CM6 - charge-action-response
  contents:
  - "4.4.6 CM6 - charge-action-response\n   Description: This receipt is given to\
    \ the merchant as a receipt\n       for a completed charge action.  Indicates\
    \ success/failure/etc.\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: MerchantApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-012\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   merchant-opaque:\n    6BVEfSlgVCoGh1/0R+g1C143MaA6QLvKpEgde86WWGJWx45bMUZvaAu4LVeqWoYCqSGf\n\
    \    aWKUF7awol0h1i1jtgieyAcXB8ikvRJIsupSAwsRMyoNlekR6tucvfv/622JY7+n7nGO\n  \
    \  dGbMzP0GJImh2DmdPaceAxyOB/xOftf6ko0nndnvB+/y2mFjdUGLtFQP/+3bTpZttZXj\n    j7RO1khe1UrAIk2TGQJmNw+ltsu0f42MgsxB8Q31vjPtoiPi5LEmD0Y4jlpJ7Jg2Ub84\n\
    \    F9vJhYpmzNkdiJUe83Hvo/xfJRbhafJpXFEsUZwQK0jU1ksU6CQd2+CPBB+6MxtsHoxJ\n  \
    \  mjD6ickhd+SQZhbRCNerlTiQGhuL4wUAxzGh8aHk2oXjoMpVzWw2EImPu5QaPEc36xgr\n    mNz8vCovDiuy3tZ42IGArxBweasLPLCbm0Y=\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Merchant-Opaque Key: Session key same as that of CM1/2/3/4/5 for\n       same\
    \ Merchant-Transaction and Merchant-CCID.\n   Opaque Key:  Same customer session\
    \ key from CH1 passed through CM*\n       for ID and Transaction\n   #####################################################################\n\
    \   Merchant-Opaque Section Contents:\n   type: charge-action-response\n   server-date:\
    \ 19950121100706.nnn\n   action-code: XXX  [per ISO 8583]\n   response-code: failure/success/etc.\n\
    \   order-id: 1231-3424-234242\n   pr-hash: 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n\
    \    8zqw0ipqtLtte0tBz5/5VPNJPPonfTwkfZPbtuk5lqMykKDvThhO0ycrfT7eXrn/hLUC\n  \
    \  kXoSctahEVdw1KBJbp0EVr1zVzcN9Aa7m2fJgxNfiisTgIRW+PMaa78rn+Ov\n   retrieval-reference-number:\
    \ 432112344321\n   authorization-code: a12323\n   card-hash: 7Tm/djB05pLIw3JAyy5E7A==\n\
    \   {\n   card-prefix: nnxxxx  [Returned if merchant is not full-PAN]\n   }\n\
    \       or\n   {\n   card-number: 1234567890123456  [Returned if merchant is full-PAN]\n\
    \   }\n   expiration-date: 12/34  [always present]\n   merchant-swseverity: fatal/warning\n\
    \   merchant-swmessage; Message for merchant about out of date\n       protocol\
    \ number in $$ start line of merchant message.\n   merchant-message;\n       \
    \   Free text of the error/success condition.\n          This text is for the\
    \ merchant from the server...\n   id: myCyberCashID\n   transaction: 78784567\n\
    \   date: 19950121100505.nnn\n   Opaque (Customer) contents:\n   server-date:\
    \ 19950121100706.nnn\n   amount: usd 10.00\n   order-id: 1231-3424-234242\n  \
    \ card*: [from successful BC4]\n   response-code: failure/success/etc.\n   swseverity:\
    \ fatal/warning\n   swmessage; Tells CyberApp that it is obsolete display this\n\
    \    text to the user.  [only present if SWSeverity present]\n   message;\n  \
    \        Free text of the error/success condition.\n          This text is to\
    \ be displayed to the customer\n          by the CyberCash application...\n  \
    \ #####################################################################\n   Signature\
    \ is of the following fields: no signature\n   #####################################################################\n\
    \   Explanation:\n   retrieval-reference-number is needed for voids. authorization-code\n\
    \       is needed for post-auth-capture.  These fields are each only\n       present\
    \ in the CM6 if they were returned by the bank which\n       depends on what operation\
    \ was being done.\n   card-prefix is first two and last four digits of card-number.\n\
    \   At merchant's bank's discretion the card-number or card-prefix is\n      \
    \ returned.\n   card-hash is really the hash of the full card number and the salt\n\
    \       provided by the customer.  card-hash is needed so the merchant\n     \
    \  can, if they wish, sort customer transactions by card without\n       knowing\
    \ the card number.\n   card* is the card* fields delivered in the CM* messages\
    \ being\n       responded to.  They appear in alphabetic order.\n   server-date\
    \ duplicated in customer opaque area for security.\n   {}'s in column one just\
    \ for clarity of alternatives and do not\n       actually appear in the message.\n\
    \   []ed comments appear after some fields.\n"
- title: 4.4.7 The MM* Message Series
  contents:
  - "4.4.7 The MM* Message Series\n   The CM* message series above is the primary\
    \ CyberCash credit card\n   purchase system for securely handling charges from\
    \ CyberCash\n   customers.  However, merchants, who are authorized by their acquiring\n\
    \   bank to accept such charges, may also receive telephone, mail, and\n   over-the-counter\
    \ sales.  To avoid any necessity for the merchant to\n   have a second parallel\
    \ system to handle these charges, an MM1 through\n   MM6 message series is defined\
    \ and has been implemented for these less\n   secure transactions.\n   The MM*\
    \ messages look very similar to the CM* series but the\n   \"customer opaque\"\
    \ section is actually signed by the merchant and no\n   separate customer CyberCash\
    \ ID or prior card binding is required.\n   The MM* message examples are omitted\
    \ here in the interests of\n   brevity.\n"
- title: 4.4.8 CD1 - card-data-request
  contents:
  - "4.4.8 CD1 - card-data-request\n   Description: Used by merchant to get card-number,\
    \ etc., if\n       information needed by merchant to resolve a dispute.\n   #####################################################################\n\
    \   Sender: MerchantApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-69\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   merchant-cyberkey: CC1001\n\
    \   cyberkey: CC1001\n   opaque:\n    EDD+b9wAfje5f7vscnNTJPkn1Wdi7uG3mHi8MrzLyFC0dj7e0JRjZ2PmjDHuR81kbhqb\n\
    \    nX/w4uvsoPgwM5UJEW0Rb9pbB39mUFBDLPVgsNwALySeQGso0KyOjMxNs1mSukHdOmDV\n  \
    \  4uZR4HLRRfEhMdX4WmG/2+sbewTYaCMx4tn/+MNDZlJ89Letbz5kupr0ZekQlPix+pJs\n    rHzP5YqaMnk5iRBHvwKb5MaxKXGOOef5ms8M5W8lI2d0XPecH4xNBn8BMAJ6iSkZmszo\n\
    \    QfDeWgga48g2tqlA6ifZGp7daDR81lumtGMCvg==\n   merchant-opaque:\n    6BVEfSlgVCoGh1/0R+g1C143MaA6QLvKpEgde86WWGJWx45bMUZvaAu4LVeqWoYCqSGf\n\
    \    aWKUF7awol0h1i1jtgieyAcXB8ikvRJIsupSAwsRMyoNlekR6tucvfv/622JY7+n7nGO\n  \
    \  dGbMzP0GJImh2DmdPaceAxyOB/xOftf6ko0nndnvB+/y2mFjdUGLtFQP/+3bTpZttZXj\n    j7RO1khe1UrAIk2TGQJmNw+ltsu0f42MgsxB8Q31vjPtoiPi5LEmD0Y4jlpJ7Jg2Ub84\n\
    \    F9vJhYpmzNkdiJUe83Hvo/xfJRbhafJpXFEsUZwQK0jU1ksU6CQd2+CPBB+6MxtsHoxJ\n  \
    \  mjD6ickhd+SQZhbRCNerlTiQGhuL4wUAxzGh8aHk2oXjoMpVzWw2EImPu5QaPEc36xgr\n    mNz8vCovDiuy3tZ42IGArxBweasLPLCbm0Y=\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Merchant-Opaque Section Contents:\n   type: card-data-request\n   password:\
    \ xyzzy\n   server-date: 19950121100505.nnn  [optional]\n   order-id: 12313424234242\n\
    \   merchant-amount: usd 10.00\n   pr-hash: 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n\
    \    IV8gWHx1f8eCkWsCsMOE3M8mnTbQ7IBBcEmyGDAwjdbaLu5Qm/bh06OX1npe2d3Hijxy\n  \
    \  +X8vKcVE6l6To27u7A7UmGm+po9lCUSLxgtyqyn3jWhHZpc5NZpwoTCf2pAK\n   id: myCyberCashID\n\
    \   transaction: 78784567\n   date: 19950121100505.nnn\n   merchant-signature:\n\
    \    8zqw0ipqtLtte0tBz5/5VPNJPPonfTwkfZPbtuk5lqMykKDvThhO0ycrfT7eXrn/hLUC\n  \
    \  kXoSctahEVdw1KBJbp0EVr1zVzcN9Aa7m2fJgxNfiisTgIRW+PMaa78rn+Ov\n   #####################################################################\n\
    \   merchant-opaque key is generated from the CyberCash encrypting public\n  \
    \      key identified in merchant-cyberkey.\n   Customer opaque section (Opaque)\
    \ - see CH1.\n   #####################################################################\n\
    \   Opaque Section Contents & Signature:  (exactly as in CH1)\n   swversion: 0.8win\n\
    \   amount: usd 10.00\n   card*: [from successful BC4 (includes card-expiration-date,\n\
    \       card-number, and card-salt)]\n   signature:\n    48SBKUfojyC9FDKCwdCYNvucgiDxYO9erZW4QndIXZRyheTHXH8OeIhwUkyLmgQSD/UK\n\
    \    +IX9035/jUkdNPOxUQq9y/beHS1HU9Fe0wlzfXYRtnjlqvQX+yUfQ4T7eNEs\n   #####################################################################\n\
    \   merchant-signature is on the following fields: merchant-ccid,\n       merchant-transaction,\
    \ merchant-date, merchant-cyberkey, type,\n       password, server-date, order-id,\
    \ merchant-amount, pr-hash,\n       pr-signed-hash, id, transaction, date, cyberkey\n\
    \   Customer Signature: see CH1\n   #####################################################################\n\
    \   Explanation:\n   [see also CM1 explanation]\n   The merchant may need to know\
    \ the card involved and other\n       information in order to resolve a disputed\
    \ transaction.  This\n       information is all contained in the original CH1\
    \ embedded in the\n       CM1 for the transaction.  If the merchant saves the\
    \ CM1 and other\n       transaction information, they can send this CD1 message\
    \ to the\n       server.  While this reduces the pass through confidentiality\
    \ of\n       the system, the merchant is then on record as asking for this\n \
    \      particular credit card number and excessive CD1's from a merchant\n   \
    \    can be flagged.\n   password is an extra level of security intended to be\
    \ manually entered\n       at the merchant to authorize the unusual action.  Server\
    \ stores a\n       hash of the merchant-ccid and the password.\n"
- title: 4.4.9 CD2 - card-data-response
  contents:
  - "4.4.9 CD2 - card-data-response\n   Description: Respond to CD1 with failure or\
    \ with success and card\n       data.\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: MerchantApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: ACME-012\n   merchant-transaction:\
    \ 123123\n   merchant-date: 19950121100705.nnn\n   merchant-opaque:\n    t731/86R72ZLrqHLIf0VG6m3ybvs+dG6K705L8LFKEXgCti0NGjK83CwDsUdiso7U1JP\n\
    \    2Z0BClVHLmhIBY7+QXx5iCEGHy8JKC9IWyNNi2O/OOIDgLeJAkMSZYbNQrSKViY34imS\n  \
    \  0s7Q6uDk9wV0fixjvRBuNO2B7urWWsqfkLOYDnHy0RvhyUzYxLrMaTX+/6IkyU5Z0lH3\n    BXYBUNV8DgitEjgLXmyWuXRDlEBN02yeZgsFRm9GmuBHfCTySm2XqnifizpmKMUa9UiH\n\
    \    onNx9W86fuBdcJF7CJgH5Gct2M/dx/f2VpoRkmeSmWxFrYi8wgtvddSXF9my40NZ8WZz\n  \
    \  CEUEvQhcmruopwEeehv+bejc3fDDZ23JKrbhlZ17lSvFR14PKFsi32pXFqTO0ej9GTc5\n    L6c8nM3tI1qdHNCe0N5f7ASdKS0tYSxAYJLIR6MqPrXjNJEaRx7Vu1odMlkgrzGOV1fo\n\
    \    5w33BQHK3U2h+1e5zYBeHY3ZYG4nmylYYXIye4xpuPN4QU0dGrWZoImYE44QOwjd5ozl\n  \
    \  xulPBjj6cpEI/9wTwR3tpkBb4ZfYirxxnoj9JUkPK9Srv9iJ\n   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: session key from CD1.\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: card-data-response\n   server-date: 19950121100706.nnn\n\
    \   response-code: failure/success/etc.\n   order-id: 1231-3424-234242\n   pr-hash:\
    \ 7Tm/djB05pLIw3JAyy5E7A==\n   pr-signed-hash:\n    IV8gWHx1f8eCkWsCsMOE3M8mnTbQ7IBBcEmyGDAwjdbaLu5Qm/bh06OX1npe2d3Hijxy\n\
    \    +X8vKcVE6l6To27u7A7UmGm+po9lCUSLxgtyqyn3jWhHZpc5NZpwoTCf2pAK\n   card-hash:\
    \ 7Tm/djB05pLIw3JAyy5E7A==\n   card-number: 4811123456781234\n   card-type: visa\n\
    \   card-name: John Q. Public\n   expiration-date: 01/99\n   merchant-swseverity:\
    \ fatal/warning\n   merchant-swmessage; Message for merchant about out of date\n\
    \       protocol number in $$ start line of merchant message.\n   merchant-message;\n\
    \          Free text of the error/success condition.\n          This text is for\
    \ the merchant from the server...\n   id: myCyberCashID\n   transaction: 78784567\n\
    \   date: 19950121100505.nnn\n   #####################################################################\n\
    \   Signature is of the following fields: no signature.\n   #####################################################################\n\
    \   Explanation:\n   This normally returns selected fields from the decoding of\
    \ the\n       opaque part of a CH1 as sent to the server in a CD1.\n"
- title: 4.5 Utility and Error Messges
  contents:
  - "4.5 Utility and Error Messges\n   A number of utility, status query, and special\
    \ error reporting\n   messages have also been found necessary in implementing\
    \ the CyberCash\n   system.\n   It is desirable to be able to test connectivity,\
    \ roughly synchronize\n   clocks, and get an initial determination of what client\
    \ protocol and\n   software versions are accepted.  This is done via the P1 client\
    \ to\n   server message and its P2 server to client response.\n   Clients need\
    \ to be able to determine the status of earlier\n   transactions when the client\
    \ or merchant has crashed during or has\n   suffered data loss since the transaction.\
    \  Two transaction query\n   messages are defined, TQ1 and TQ2.  One just queries\
    \ and the other\n   also cancels the transaction, if it has not yet completed.\
    \  The\n   response to both of these messages is a TQ3 response from the server.\n\
    \   Since the system operates in a query response mode, there are two\n   cases\
    \ where special error messages are needed.  If a query seems to\n   be of an undeterminable\
    \ or unknown type, the UNK1 response error\n   message is sent.  If a response\
    \ seems to be of an undeterminable or\n   unknown type or other serious error\
    \ conditions occur at the client or\n   merchant which should be logged at the\
    \ CyberCash server, the DL1 or\n   DL2 diagnostic log message is submitted by\
    \ the client or merchant in\n   question respectively.\n"
- title: 4.5.1 P1 - ping
  contents:
  - "4.5.1 P1 - ping\n   Description: Very light weight check that we have connectivity\
    \ from\n       the customer to the server.  Does no crypto to minimize\n     \
    \  overhead.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   type: ping\n   id: myCyberCashID\
    \  [optional]\n   transaction: 123123213\n   date: 19950121100505.nnn\n   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n\
    \   #####################################################################\n  \
    \ Explanation:\n   id optional as persona may not have been set up yet.\n"
- title: 4.5.2 P2 - ping-response
  contents:
  - "4.5.2 P2 - ping-response\n   Description: Response to the P1 light weight ping.\
    \  Does no\n       crypto to minimize overhead.\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   type: ping-response\n   id: myCyberCashID\
    \  [if present in P1]\n   transaction: 12312313\n   date: 19950121100505.nnn\n\
    \   server-date: 19950121100506.nnn\n   swseverity: fatal/warning  [absent if\
    \ ok]\n   swmessage; Tells CyberApp that it is using an obsolete protocol.\n \
    \       Display this text to the user.  [only present if SWSeverity\n       present]\n\
    \   response-code: success/failure/etc.\n   message;\n          Free text of the\
    \ error/success condition.\n          This text is to be displayed to the sender\n\
    \          by their CyberCash application...\n   supported-versions: 08.win, 0.81win,\
    \ 0.8mac\n   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Explanation:\n   swversion does not appear in P1 for security reasons so\n\
    \       swseverity and swmessage appear only if the server can tell\n       that\
    \ things are old from the $$ header protocol version.\n   supported-versions lets\
    \ client know as soon as possible what\n       versions are supported and, by\
    \ implication, which are not. Does\n       not compromise security by having client\
    \ say what version it\n       is.\n"
- title: 4.5.3 TQ1 - transaction-query
  contents:
  - "4.5.3 TQ1 - transaction-query\n   Description: Client query to server for Transaction\
    \ status.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: MyCyberCashID\n   date: 19950121100505.nnn\n\
    \   transaction: 12312314\n   cyberkey: CC1001\n   opaque:\n    VFaztHuj757Jrv+JxZFsHORy/zgkrxhBCu9cPdE04c1NnXzVlGOHygpSl+UGbUvnhkYl\n\
    \    21QQaHkaE3geccRk03cqFYoLNRCclImcsyeIZCgVt+2dJTj1V+E7R7ePQtCj+0gY42+V\n  \
    \  L5BWhVtmDQFyg1DdJ6n3S/er6ZuObAjpcAogG+T1Na5dJmrTA1wRMiYVkqhXi2KMYdur\n    3U47P8ZGUza7W0MST3DgvviN0kVhtmHEnm515mo6NTQdfdxw9WZpy6vMqrBGk2nTgi2c\n\
    \    bnf+muO0+kiNPXVvEzRrO8o=\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: generated from CyberCash encryption key identified in\n       CyberKey\n\
    \   #####################################################################\n  \
    \ Opaque Section Contents:\n   type: transaction-query\n   swversion: 0.8win\n\
    \   begin-transaction: 1234\n   end-transaction: 4321\n   signature:\n    jJfFsKvOxLaV87gxu7lIPet3wIDwh1H2F61reYC9jmUrS6WAtUVFG9aCNuTEBoMixF0X\n\
    \    vD5oPfyheJRIlnL6i0c4o/bfyO3edKAacmWjTmKt6/4y9p3qgvKkSX8r9aym\n   #####################################################################\n\
    \   signature is of the following fields: id, date, transaction,\n       cyberkey,\
    \ type, swversion, begin-transaction,\n       end-transaction\n   #####################################################################\n\
    \   Explanation:\n   This is a client status query of a previous transaction or\n\
    \       transactions.\n   begin-transaction and end-transaction can be the same.\n"
- title: 4.5.4 TQ2 - transaction-cancel
  contents:
  - "4.5.4 TQ2 - transaction-cancel\n   Description: Client query to server for Transaction\n\
    \       cancellation/status.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: MyCyberCashID\n   date: 19950121100505.nnn\n\
    \   transaction: 12312314\n   cyberkey: CC1001\n   opaque:\n    VFaztHuj757Jrv+JxZFsHORy/zgkrxhBCu9cPdE04c1NnXzVlGOHygpSl+UGbUvnhkYl\n\
    \    21QQaHkaE3geccRk03cqFYoLNRCclImcsyeIZCgVt+2dJTj1V+E7R7ePQtCj+0gY42+V\n  \
    \  L5BWhVtmDQFyg1DdJ6n3S/er6ZuObAjpcAogG+T1Na5dJmrTA1wRMiYVkqhXi2KMYdur\n    3U47P8ZGUza7W0MST3DgvviN0kVhtmHEnm515mo6NTQdfdxw9WZpy6vMqrBGk2nTgi2c\n\
    \    bnf+muO0+kiNPXVvEzRrO8o=\n   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n\
    \   #####################################################################\n  \
    \ Opaque Key: generated from CyberCash encryption key identified in\n       CyberKey\n\
    \   #####################################################################\n  \
    \ Opaque Section Contents:\n   type: transaction-cancel\n   swversion: 0.8win\n\
    \   begin-transaction: 1234\n   end-transaction: 4321\n   signature:\n    kD7DEav2uLQIYMtP9gbhYaBUpB2a5whNwnK2eXbbyTCf56F6dl3DIVf7D8Z4WxbY2YZn\n\
    \    ByRIKeqlhmss7fbdnBiDYmKfOuc+I4bi/Oslml5riaciQhTd2JdHG+PCcHwZ\n   #####################################################################\n\
    \   signature is of the following fields: id, date, transaction,\n       cyberkey,\
    \ type, swversion, begin-transaction, end-transaction\n   #####################################################################\n\
    \   Explanation:\n   This is a client attempt to cancel a previous transaction\
    \ or\n       transactions.\n   begin-transaction and end-transaction can be the\
    \ same.\n   The transaction-cancel transaction (TQ.2) is defined between the\n\
    \   client and the server.  This transaction permits the client to\n   query the\
    \ status of an operation and to stop the operation from\n   occurring if it has\
    \ not already occurred.\n"
- title: 4.5.5 TQ3 - transaction-response
  contents:
  - "4.5.5 TQ3 - transaction-response\n   Description: Reports generated by a TQ1\
    \ or TQ2\n   #####################################################################\n\
    \   Sender: CyberServer\n   Receiver: CyberApp\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: mycybercashid\n   date: 19950121100505.nnn\n\
    \   transaction: 12312314\n   server-date: 19950121100505.nnn\n   opaque:\n  \
    \  eFXRL+H0J5q318M21wRdtcbhu9WCyLysQkeF9oIcjtbstymx343bbt0EAtU1gcJaUKJZ\n    3skgvwrhcxU4bFcE68OPlUXAvLq10I3MczPYPsiGrsU0K4bZtQvDZmn727QQAfONBm5s\n\
    \    s1yjIha+Fj481BJQs0CTYc3ju90lAjCYgirXtnnR6yJXoDO75b7UjthvHSnrTWVZvktX\n  \
    \  PvTuUCYzbXSFoYvwFM3Y+yHqSHlmWutYKQpYze8zbUSDQfmwTCJyw3aY2JasZ+xMP/CD\n    JWbCA+gCLBYCnvzM/ExKTZTFD3xr5JBfNbV4p6CiK6lsfRFD7maAK6TSVnWjwCEJNpOv\n\
    \    fyllfWD04fT7LINQcjJiQK1Pk/912Tk6Q35eRaQZorwv2hnY/7By2OkPyFdAqFL+D0H6\n  \
    \  TqzxmdEjEFKxi/PPT1+Cs/Nszy8wZzaGg8iWATfARY6stl+02dDhwOoFXSBNvchlVrcI\n    IlvhumSIQs29Pntj3DbkYo4IEmmN/qi1vnzld22q7lA1q/CQakyc7jlQUFISx76buqwy\n\
    \    35XiC9Yn8flE4Va14UxMf2RCR1B/XoV6AEd64KwPeCYyOYvwbRcYpRMBXFLyYgWM+ME1\n  \
    \  +yp7c66SrCBhW4Q8AJYQ+5j5uyO7uKyyq7OhrV0IMpRDPjiQXZMooLZOifJPmpvJ66hC\n    VZuWMuA6LR+TJzWUm4sUP9Zb6zMQShedUyOPrtw1vkJXU1vZ5aI8OJAgUcLEitcD+dsY\n\
    \    Df4CzA00fC10POkJ58HZB/pSBfUrHAa+IqMHyZkV/HBi9TjTwmktJi+8T9orXS0jSvor\n  \
    \  dMTGWn0ifETy2VXt\n   $$-CyberCash-End-0QXqLlNxrn4GNQPPk9AO1Q==-$$\n   #####################################################################\n\
    \   Opaque Key: Session key from TQ1/TQ2 with same Transaction and ID.\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: transaction-response\n   response-code:\
    \ success/failure/etc.\n   message; general free form text message from server\
    \ to\n       customer....\n   swseverity: fatal/warning\n   swmessage; Message\
    \ indicating that CyberApp software is obsolete.\n       May be multiple lines.\n\
    \   report-fee: usd 0.15  [if non-zero]\n   transaction-1: old-transaction-number\n\
    \   transaction-status-1: success/failure/pending/cancelled/etc.\n   server-date-1:\
    \ 19951212125959.nnn\n   date-1: 19950121100505.nnn\n   type-1: auth-only/etc.\n\
    \   #####################################################################\n  \
    \ Signature is of the following fields:  no signature\n   #####################################################################\n\
    \   Explanation:\n   Report-fee is the notification that this report cost a fee\
    \ and is\n       only present if there is a fee.\n   There can be multiple transaction\
    \ for the same transaction number as\n       there could have been a auth, post-auth-capture,\
    \ void, etc.\n   Terms\n       \"original transaction\" refers to the payment\
    \ or other transaction\n   that is being queried or canceled.\n          Note:\
    \ this transaction may not actually reside at the server.\n       \"request\"\
    \ refers to the requesting TQ.2 or TQ.1 message\n   id: id from the request message\n\
    \   date: date from the request message\n   transaction: transaction from the\
    \ request message\n   server-date: current date/time\n   type: transaction-response\n\
    \   response-code: response code for request message, can be one of:\n       \"\
    success\" means the request message was processed.  Does not imply\n       query\
    \ or cancellation status of the request.\n       \"failure-hard\" means that the\
    \ request message was not processed\n       due to being ill-formed or otherwise\
    \ inoperable.\n       \"failure-swversion\" means that the request message was\
    \ not\n       processed due to software revision problems.\n   message: the message\
    \ applies only to the TQ transaction, not to the\n       status of the transactions\
    \ being queried or canceled.  The\n       message is provided according to the\
    \ response-code as: \"success\"\n       - message is omitted. \"failure-hard\"\
    \ - use standard hard failure\n       message. \"failure-swversion\" - use standard\
    \ swversion message for\n       fatal\n   swseverity: applies to request message\n\
    \   swmessage: applies to request message\n    -- per query/cancel fields ('N'\
    \ is a series from 1 to N) --\n   transaction-N: transaction number of original\
    \ transaction, or if\n       the original transaction is not present in server\
    \ the transaction\n       number that the query / cancel request refers to\n \
    \  transaction-status-N: status of original transaction, may be one of:\n    \
    \   \"success\" the original transaction was successfully processed.\n       If\
    \ request was TQ.2, cancellation is not performed.\n       \"failure\" the original\
    \ transaction was not successfully processed.\n        If request was TQ.2, cancellation\
    \ is not performed (however,\n       there is nothing to cancel, so it's all the\
    \ same to the customer\n       app).\n       \"pending\" the original transaction\
    \ is still being processed and\n       final disposition is not known.\n   \"\
    canceled\" the original transaction has been canceled by the server.\n       Later\
    \ arrival of the original transaction will not be processed,\n       but will\
    \ be returned with a \"failure-canceled\" returned.\n   server-date-1: server-date\
    \ field from original transaction or\n       omitted if original transaction is\
    \ not present in the server\"\n   date-1: date field from original transaction\
    \ or omitted if original\n       transaction is not present in the server\"\n\
    \   type-1: type field from original transaction or omitted if original\n    \
    \   transaction is not present in the server\"\n"
- title: 4.5.6 UNK1 - unknown-error
  contents:
  - "4.5.6 UNK1 - unknown-error\n   Description: This is the response sent when the\
    \ request is so\n       bad off you can't determine what type it is or the type\
    \ is\n       unknown to you.  Sent from Merchant to Client or from Server\n  \
    \     to Merchant or from Server to Client.\n   #####################################################################\n\
    \   Sender: MerchantApp or CyberServer\n   Receiver: CyberApp or MerchantApp\n\
    \   #####################################################################\n  \
    \ Sample Message:\n   $$-CyberCash-0.8-$$\n   type: unknown-error\n   unknown-error-message:\n\
    \       Text message of error condition to display to user.  (CyberCash\n    \
    \   wrapper not found, wrapper integrity check fails, unknown protocol\n     \
    \  version specified, unknown type specified, etc.)\n   {\n   server-date: 19950121100506.nnn\
    \  [if sent by server]\n   }\n       or\n   {\n   merchant-date: 19950121100506.nnn\
    \  [if sent by merchant]\n   }\n   x-id: mycybercashID\n   x-transaction: 123123213\n\
    \   x-date: 19950121100505.nnn\n   x-cyberkey: CC1001\n   x-opaque:\n    2DqiOQfGRZjzddWpEZwGsJnoTsp9Yiri8DE9cPUMPsJ7lTFuE4XHi4QfN2cAipDB2G/G\n\
    \    9hr7Hj4u4xfMky7nPvJurClZejkI8eNp8iXLtrfS4DhR4yCFQjCiKk0dh83p+DDsFVV7\n  \
    \  TI3Du2B15sQS+SdaoPwkfVDnJv4Y+b7vu2cN7bG7exCkBapBcJZbReNaWX5sf+U8ypfw\n    5V6QdMOzNXpef3z+cTTWfGOtmn9T1Pwo1Yi9ObyIf/wiK+IPb+bBZ9UwLZSB+qVMfJmX\n\
    \    GnHXO3AnA/PD+jKYCtsm2Gxv2WB3CuezOyzPtORuqLp5ubgnLBF9aBBjxwLdbn+cp5sm\n  \
    \  lw51IHbmo1Jj7H6wyNnRpEjy4tM73jcosBfGeQDHxgyH1uaiFNr2D+WvmuYo7eun2dsy\n    Wve2O/FwicWHvkg5aDPsgOjzetsn1JCNZzbW\n\
    \   $$-CyberCash-End-7Tm/djB05pLIw3JAyy5E7A==-$$\n   #####################################################################\n\
    \   Opaque Key: see explanation\n   #####################################################################\n\
    \   Opaque Section Contents: see explanation\n   #####################################################################\n\
    \   Signature is of the following fields: see explanation\n   #####################################################################\n\
    \   Explanation:\n   This message is sent as a response when you can't find or\
    \ understand\n       even the type of a message to you.  It will always have type\
    \ and\n       unknown-error-message fields at the beginning.  Any fields from\n\
    \       the request that are parseable are simply echoed back in the UNK1\n  \
    \     message with \"x-\" prefixed to it.  Thus, if an x-opaque appears,\n   \
    \    it was whatever the opaque was in the original request, etc.  If\n      \
    \ you can decrypt the opaque section, you don't want to put the\n       results\
    \ here in the clear!\n   {}'s in the first column are to group alternatives only\
    \ and do not\n       appear in the message.\n   Since the customer originates\
    \ exchanges with merchant and server\n       and merchant originates exchanges\
    \ with server, this message\n       will only be emitted from the merchant to\
    \ the customer or the\n       server to the customer or merchant. It should generally\
    \ just\n       be logged for debugging purposes.\n   You may need to watch out\
    \ for denial of service via forged or\n       replayed UNK1 messages.\n"
- title: 4.5.7 DL1 - diagnostic-log
  contents:
  - "4.5.7 DL1 - diagnostic-log\n   Description: Client diagnostic log of bad message\
    \ from either\n       merchant or server.\n   #####################################################################\n\
    \   Sender: CyberApp\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   id: MyCyberCashID\n   date: 19950121100505.nnn\n\
    \   transaction: 1234\n   cyberkey: CC1001\n   opaque:\n    2DqiOQfGRZjzddWpEZwGsJnoTsp9Yiri8DE9cPUMPsJ7lTFuE4XHi4QfN2cAipDB2G/G\n\
    \    9hr7Hj4u4xfMky7nPvJurClZejkI8eNp8iXLtrfS4DhR4yCFQjCiKk0dh83p+DDsFVV7\n  \
    \  TI3Du2B15sQS+SdaoPwkfVDnJv4Y+b7vu2cN7bG7exCkBapBcJZbReNaWX5sf+U8ypfw\n    5V6QdMOzNXpef3z+cTTWfGOtmn9T1Pwo1Yi9ObyIf/wiK+IPb+bBZ9UwLZSB+qVMfJmX\n\
    \    GnHXO3AnA/PD+jKYCtsm2Gxv2WB3CuezOyzPtORuqLp5ubgnLBF9aBBjxwLdbn+cp5sm\n  \
    \  lw51IHbmo1Jj7H6wyNnRpEjy4tM73jcosBfGeQDHxgyH1uaiFNr2D+WvmuYo7eun2dsy\n    Wve2O/FwicWHvkg5aDPsgOjzetsn1JCNZzbW\n\
    \   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n   #####################################################################\n\
    \   Opaque Key: generated from CyberCash encryption key identified in\n      \
    \ CyberKey\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: diagnostic-log\n   message: incorrect order-id\n\
    \   swversion: 0.8win\n   x-type: original-message-type\n   x-transaction: original-transaction-number\n\
    \   x-opaque: [if can't decrypt]\n    9/eFiJK5tLizsoeSmpW7uLS8/7iio7Wisfv38biio7uyufv3tfv35uH+7N3d9/exuKX3\n\
    \    5+z3vuu4oqO7srnsvvz8/venoqO0v7al/7iio7WisYy+iv7s3ff3p6KjtL+2pf/wi7nw\n  \
    \ #####################################################################\n   Explanation:\n\
    \   Client application does not expect a response for this message. The\n    \
    \   decrypted original message will be in the opaque section unless\n       decryption\
    \ fails. If decryption fails then un-decrypted opaque\n       in the original\
    \ will be sent.\n   This message will be sent to a different script or socket\
    \ or host\n       than normal messages so that it will just be absorbed and never\n\
    \       generate an UNK1 response or anything, even if this message\n       itself\
    \ is screwed up.\n"
- title: 4.5.8 DL2 - merchant-diagnostic-log
  contents:
  - "4.5.8 DL2 - merchant-diagnostic-log\n   Description: Merchant diagnostic log\
    \ of bad message from  server.\n   #####################################################################\n\
    \   Sender: CyberMerchant\n   Receiver: CyberServer\n   #####################################################################\n\
    \   Sample Message:\n   $$-CyberCash-0.8-$$\n   merchant-ccid: MyCyberCashID\n\
    \   merchant-transaction: 1234\n   merchant-date: 19950121100505.nnn\n   merchant-cyberkey:\
    \ CC1001\n   merchant-opaque:\n    2DqiOQfGRZjzddWpEZwGsJnoTsp9Yiri8DE9cPUMPsJ7lTFuE4XHi4QfN2cAipDB2G/G\n\
    \    9hr7Hj4u4xfMky7nPvJurClZejkI8eNp8iXLtrfS4DhR4yCFQjCiKk0dh83p+DDsFVV7\n  \
    \  TI3Du2B15sQS+SdaoPwkfVDnJv4Y+b7vu2cN7bG7exCkBapBcJZbReNaWX5sf+U8ypfw\n    5V6QdMOzNXpef3z+cTTWfGOtmn9T1Pwo1Yi9ObyIf/wiK+IPb+bBZ9UwLZSB+qVMfJmX\n\
    \    GnHXO3AnA/PD+jKYCtsm2Gxv2WB3CuezOyzPtORuqLp5ubgnLBF9aBBjxwLdbn+cp5sm\n  \
    \  lw51IHbmo1Jj7H6wyNnRpEjy4tM73jcosBfGeQDHxgyH1uaiFNr2D+WvmuYo7eun2dsy\n    Wve2O/FwicWHvkg5aDPsgOjzetsn1JCNZzbW\n\
    \   $$-CyberCash-End-kchfiZ5WAUlpk1/v1ogwuQ==-$$\n   #####################################################################\n\
    \   Opaque Key: generated from CyberCash encryption key identified in\n      \
    \ CyberKey\n   #####################################################################\n\
    \   Opaque Section Contents:\n   type: merchant-diagnostic-log\n   server-date:\
    \  19950121100505.nnn  [optional]\n   message: incorrect order-id\n   x-type:\
    \ original-message-type\n   x-transaction: original-transaction-number\n   x-opaque:\
    \ [if can't decrypt]\n    9/eFiJK5tLizsoeSmpW7uLS8/7iio7Wisfv38biio7uyufv3tfv35uH+7N3d9/exuKX3\n\
    \    5+z3vuu4oqO7srnsvvz8/venoqO0v7al/7iio7WisYy+iv7s3ff3p6KjtL+2pf/wi7nw\n  \
    \ #####################################################################\n   Explanation:\n\
    \   Merchant application does not expect a response for this message. The\n  \
    \     decrypted original message will be in the opaque section unless\n      \
    \ decryption fails. If decryption fails then un-decrypted message\n       will\
    \ be sent.\n   This message will be sent to a different script or socket or host\n\
    \       than normal messages so that it will just be absorbed and never\n    \
    \   generate an UNK1 response or anything even if this message\n       itself\
    \ is screwed up.\n"
- title: 4.6 Table of Messages Described
  contents:
  - "4.6 Table of Messages Described\n   The following 31 messages are described in\
    \ this document.\n   C = Customer App, M = Merchant App, S = CyberCash Server\n\
    \   FLOW  SECTION  NAME\n   C->S   4.2.1   BC.1 bind-credit-card\n   S->C   4.2.2\
    \   BC.4 bind-credit-card-response\n   C->M   4.3.2   CH.1 credit-card-payment\n\
    \   M->C   4.3.3   CH.2 credit-card-response\n   M->S   4.4.8   CD.1 card-data-request\n\
    \   S->M   4.4.9   CD.2 card-data-response\n   M->S   4.4.1   CM.1 auth-only\n\
    \   M->S   4.4.2   CM.2 auth-capture\n   M->S   4.4.3   CM.3 post-auth-capture\n\
    \   M->S   4.4.4   CM.4 void\n   M->S   4.4.5   CM.5 return\n   S->M   4.4.6 \
    \  CM.6 charge-action-response\n   C->S   4.5.7   DL.1 diagnostic-log\n   M->S\
    \   4.5.7   DL.2 merchant-diagnostic-log\n   C->S   4.1.3   GA.1 get-application\n\
    \   S->C   4.1.4   GA.2 get-application-response\n   M->S   4.4.7   MM.1 merchant-auth-only\n\
    \   M->S   4.4.7   MM.2 merchant-auth-capture\n   M->S   4.4.7   MM.3 merchant-post-auth-capture\n\
    \   M->S   4.4.7   MM.4 merchant-void\n   M->S   4.4.7   MM.5 merchant-return\n\
    \   S->M   4.4.7   MM.6 merchant-charge-action-response\n   C->S   4.5.1   P.1\
    \ ping\n   S->C   4.5.2   P.2 ping-response\n   M->C   4.3.1   PR.1 payment-request\n\
    \   C->S   4.1.1   R.1 registration\n   S->C   4.1.2   R.2 registration-response\n\
    \   C->S   4.5.3   TQ.1 transaction-query\n   C->S   4.5.4   TQ.2 transaction-cancel\n\
    \   S->C   4.5.5   TQ.3 transaction-response\n   S->C, S->M, M->C\n          4.5.6\
    \   UNK.1 unknown-error\n"
- title: 5. Future Development
  contents:
  - "5. Future Development\n   CyberCash is extending the facilities available through\
    \ the CyberCash\n   system.  We are committed to implementing a full cash system,\n\
    \   including efficient transfer of small amounts of money, the extension\n  \
    \ of the credit card system to handle terminal capture and clearances,\n   and\
    \ other improvements.\n"
- title: 5.1 The Credit Card Authorization/Clearance Process
  contents:
  - "5.1 The Credit Card Authorization/Clearance Process\n   There are six steps in\
    \ credit card processing as listed below.  The\n   first four are always involved\
    \ if a transacation is completed.  The\n   fifth and sixth are optional.\n   (1)\
    \ authorization: merchant contacts their acquiring back which\n       normally\
    \ contacts the card issung bank and returns to the\n       merchant an approval/guarantee\
    \ or a disapproval.  This\n       temporarily decreases the available credit on\
    \ the card.\n   (2) capture: the charge information for a purchase is entered\
    \ by\n       the merchant into a batch.\n   (3) clearance: a batch of items is\
    \ processed.  This actually causes\n       the items in the batch to appear on\
    \ credit card statements as\n       sent by the issuing bank to its carholders.\n\
    \   (4) settlement: the actual interbank transfer of net funds.\n   (5) void:\
    \ the merchant undoes step 2 (or 6) and causes a charge (or\n       credit) to\
    \ be removed from a batch.  Must be done before the\n       batch is processed.\n\
    \   (6) credit: the merchant causes a \"negative charge\" or credit to be\n  \
    \     entered into a batch.  This will appear on the cardholders\n       statement.\n\
    \   The fourth step, settlement, is entirely within the banking community\n  \
    \ and does not concern us here.  CyberCash 0.8 provides messages to do\n   1,\
    \ 1&2, 2, 5, and 6.  This is adequate for credit card processor\n   systems where\
    \ the batch is accumulated at the bank or between the\n   bank and the merchant.\
    \  CyberCash 0.8 supports such \"host capture\"\n   systems.  Other credit card\
    \ processor systems require the merchant to\n   accumulate the batch.  Such systems\
    \ are frequently referred to as\n   \"terminal capture\".  This makes actions\
    \ 2, 5, and 6 internal to the\n   merchant but requires messages to perform action\
    \ 3.  Such batch\n   clearance messages will be included in future versions of\
    \ the\n   CyberCash merchant and server software.\n"
- title: 5.2 Lessons Learned
  contents:
  - "5.2 Lessons Learned\n   The continuing rapid development of the CyberCash system\
    \ is an\n   interesting experience.  The system must deal with many existing\n\
    \   browsers and legacy banking systems.  Existing credit card processors\n  \
    \ that convey transactions to acquiring banks have complex and varied\n   interfaces.\
    \  The sophistication of security attacks on the Internet\n   is growing rapidly.\n\
    \   In the face of such a rapidly changing environment, it was essential\n   to\
    \ adopt a general message framework so that messages and fields\n   could be added\
    \ as they were found necessary.  Any attempt to reduce\n   the system to a small\
    \ number of perfectly opimized messages in\n   advance would have doomed the system\
    \ to failure.  (As of mid-October\n   1995, the total number of CyberCash messages\
    \ defined, including those\n   planned for cash and microcash, enhancements to\
    \ the credit card\n   system, and some old messages being phased out in favor\
    \ of improved\n   replacements, is just over a hundred.)\n   Flexible operational\
    \ and error handing facilities are also, as usual,\n   the bulk of the system.\
    \  Version numbering and tracking has proved to\n   be quite important and merchant\
    \ versioning is being added.\n   Use of text for messages has proven very beneficial.\
    \  This makes it\n   possible to easily deal with messages using common everyday\
    \ tools\n   such as text editors and spead sheets.  Use of binary TLV (type,\n\
    \   length, value) encoding or the like is certainly possible but imposes\n  \
    \ a significantly higher level of complexity on every tool that has to\n   deal\
    \ with the messages.\n   Encryption and decryption impose some difficulties in\
    \ development.\n   Any confusion about decryption keys or algorithms will render\n\
    \   encrypted material meaningless and tools are needed to provide\n   decyrption\
    \ for debugging outside of normal program operation.  But\n   this pales compared\
    \ with the stringencies imposed by signatures.  All\n   parts of the system must\
    \ have absolutely identical ideas as to the\n   exact bit patterns to be hashed\
    \ or signed and their exact order.\n   Seemingly trivial differences in capitalization,\
    \ punctuation,\n   framing, order, or the like, in addition to any disagreement\
    \ about\n   keys or algorithms, will lead to frustrating failures of signatures\n\
    \   to match.  Passing signatures through an intermediate system and\n   checking\
    \ them at a third system, as is done when a customer's\n   signature is passed\
    \ through a merchant and checked at the CyberCash\n   server, compounds the problem.\n"
- title: 6. Security Considerations
  contents:
  - "6. Security Considerations\n   The CyberCash Version 0.8 Credit Card system provides\
    \ substantial\n   protection to payment messages as described above in sections\
    \ 1.2,\n   2.2.4, and 2.2.5.  However, it provides no privacy to the shopping\n\
    \   interaction which is essentially outside of its purview.  It also\n   provides\
    \ no protection against dishonest merchants other than those\n   normally available\
    \ with credit card purchases.  Care must be taken to\n   avoid loss of control\
    \ of the machines on which parts of this system\n   runs or security may be compromised.\n\
    \   Current credit card dispute  resolution  systems  require  deliberate\n  \
    \ bypasses be implemented for some of the security normally established\n   by\
    \ CyberCash as described in section 3.4.\n"
- title: References
  contents:
  - "References\n   [ISO 4217] - Codes for the representation of currencies and funds\n\
    \   [ISO 8583] - Financial transaction card originated messages -\n   Interchange\
    \ message specifications, 1993-12-15.\n   [RFC 822] - Crocker, D., \"Standard\
    \ for the format of ARPA Internet\n   text messages\", STD 11, RFC 822, UDEL,\
    \ August 1982.\n   [RFC 1521] - Borenstein, N., and N. Freed, \"MIME (Multipurpose\n\
    \   Internet Mail Extensions) Part One: Mechanisms for Specifying and\n   Describing\
    \ the Format of Internet Message Bodies\", RFC 1521,\n   Bellcore, Innosoft, September\
    \ 1993.\n   [RFC 1766] - Alvestrand, H., \"Tags for the Identification of\n  \
    \ Languages\", UNINETT, March 1995.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Donald E. Eastlake 3rd\n   CyberCash, Inc.\n   318 Acton\
    \ Street\n   Carlisle, MA 01741 USA\n   Phone:   +1 508 287 4877\n   EMail:  \
    \ dee@cybercash.com\n   Brian Boesch\n   CyberCash, Inc.\n   2100 Reston Parkway,\
    \ Suite 430\n   Reston, VA 22091 USA\n   Phone:   +1 703-620-4200\n   EMail: \
    \  boesch@cybercash.com\n   Steve Crocker\n   CyberCash, Inc.\n   2100 Reston\
    \ Parkway, Suite 430\n   Reston, VA 22091 USA\n   Phone:   +1 703-620-4200\n \
    \  EMail:   crocker@cybercash.com\n   Magdalena Yesil\n   CyberCash, Inc.\n  \
    \ 555 Twin Dolphin Drive, Suite 570\n   Redwood City, CA 94065 USA\n   Phone:\
    \   +1 415-594-0800\n   EMail:   magdalen@cybercash.com\n"
