- contents:
  - '                 MPLS Upstream Label Assignment for LDP

    '
  title: __initial_text__
- contents:
  - "Abstract\n   This document describes procedures for distributing upstream-assigned\n
    \  labels for the Label Distribution Protocol (LDP).  It also describes\n   how
    these procedures can be used for avoiding branch Label Switching\n   Router (LSR)
    traffic replication on a LAN for LDP point-to-multipoint\n   (P2MP) Label Switched
    Paths (LSPs).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6389.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Specification of Requirements ...................................3\n   3.
    LDP Upstream Label Assignment Capability ........................3\n   4. Distributing
    Upstream-Assigned Labels in LDP ....................4\n      4.1. Procedures .................................................4\n
    \  5. LDP Tunnel Identifier Exchange ..................................5\n   6.
    LDP Point-to-Multipoint LSPs on a LAN ...........................9\n   7. IANA
    Considerations ............................................11\n      7.1. LDP
    TLVs ..................................................11\n      7.2. Interface
    Type Identifiers ................................11\n   8. Security Considerations
    ........................................12\n   9. Acknowledgements ...............................................12\n
    \  10. References ....................................................12\n      10.1.
    Normative References .....................................12\n      10.2. Informative
    References ...................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document describes procedures for distributing upstream-assigned\n
    \  labels [RFC5331] for Label Distribution Protocol (LDP) [RFC5036].\n   These
    procedures follow the architecture for MPLS upstream label\n   assignment described
    in [RFC5331].\n   This document describes extensions to LDP that a Label Switching\n
    \  Router (LSR) can use to advertise whether the LSR supports upstream\n   label
    assignment to its neighboring LSRs.\n   This document also describes extensions
    to LDP to distribute\n   upstream-assigned labels.\n   The usage of MPLS upstream
    label assignment using LDP to avoid branch\n   LSR traffic replication on a LAN
    for LDP point-to-multipoint (P2MP)\n   Label Switched Paths (LSPs) [RFC6388] is
    also described.\n"
  title: 1.  Introduction
- contents:
  - "2.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Specification of Requirements
- contents:
  - "3.  LDP Upstream Label Assignment Capability\n   According to [RFC5331], upstream-assigned
    label bindings MUST NOT be\n   used unless it is known that a downstream LSR supports
    them.  This\n   implies that there MUST be a mechanism to enable an LSR to advertise\n
    \  to its LDP neighbor LSR(s) its support of upstream-assigned labels.\n   A new
    Capability Parameter, the LDP Upstream Label Assignment\n   Capability, is introduced
    to allow an LDP peer to exchange with its\n   peers, its support of upstream label
    assignment.  This parameter\n   follows the format and procedures for exchanging
    Capability\n   Parameters defined in [RFC5561].\n   Following is the format of
    the LDP Upstream Label Assignment\n   Capability Parameter:\n       0                   1
    \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |1|0| Upstrm Lbl Ass Cap(0x0507)|      Length (= 1)             |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |1| Reserved    |\n      +-+-+-+-+-+-+-+-+\n   If an LSR includes the Upstream
    Label Assignment Capability in LDP\n   Initialization messages, it implies that
    the LSR is capable of both\n   distributing upstream-assigned label bindings and
    receiving upstream-\n   assigned label bindings.  The reserved bits MUST be set
    to zero on\n   transmission and ignored on receipt.  The Upstream Label Assignment\n
    \  Capability Parameter MUST be carried only in LDP Initialization\n   messages
    and MUST be ignored if received in LDP Capability messages.\n"
  title: 3.  LDP Upstream Label Assignment Capability
- contents:
  - "4.  Distributing Upstream-Assigned Labels in LDP\n   An optional LDP TLV, Upstream-Assigned
    Label Request TLV, is\n   introduced.  To request an upstream-assigned label,
    an LDP peer MUST\n   include this TLV in a Label Request message.\n       0                   1
    \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|Upstrm-Ass Lbl Req (0x0205)|      Length                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                       Reserved                                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  An optional LDP TLV, Upstream-Assigned Label TLV, is introduced to\n   signal
    an upstream-assigned label.  Upstream-Assigned Label TLVs are\n   carried by the
    messages used to advertise, release, and withdraw\n   upstream-assigned label
    mappings.\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0| Upstrm-Ass Label (0x0204) |      Length                   |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                         Reserved                              |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                   Label                                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The Label field is a 20-bit label value as specified in [RFC3032],\n   represented
    as a 20-bit number in a 4-octet field as specified in\n   Section 3.4.2.1 of RFC
    5036 [RFC5036].\n"
  - contents:
    - "4.1.  Procedures\n   Procedures for Label Mapping, Label Request, Label Abort,
      Label\n   Withdraw, and Label Release follow [RFC5036] other than the\n   modifications
      pointed out in this section.\n   An LDP LSR MUST NOT distribute the Upstream-Assigned
      Label TLV to a\n   neighboring LSR if the neighboring LSR has not previously
      advertised\n   the Upstream Label Assignment Capability in its LDP Initialization\n
      \  messages.  An LDP LSR MUST NOT send the Upstream-Assigned Label\n   Request
      TLV to a neighboring LSR if the neighboring LSR has not\n   previously advertised
      the Upstream Label Assignment Capability in its\n   LDP Initialization messages.\n
      \  As described in [RFC5331], the distribution of upstream-assigned\n   labels
      is similar to either ordered LSP control or independent LSP\n   control of the
      downstream-assigned labels.\n   When the label distributed in a Label Mapping
      message is an upstream-\n   assigned label, the Upstream-Assigned Label TLV
      MUST be included in\n   the Label Mapping message.  When an LSR receives a Label
      Mapping\n   message with an Upstream-Assigned Label TLV and it does not recognize\n
      \  the TLV, it MUST generate a Notification message with a status code\n   of
      \"Unknown TLV\" [RFC5036].  If it does recognize the TLV but is\n   unable to
      process the upstream label, it MUST generate a Notification\n   message with
      a status code of \"No Label Resources\".  If the Label\n   Mapping message was
      generated in response to a Label Request message,\n   the Label Request message
      MUST contain an Upstream-Assigned Label\n   Request TLV.  An LSR that generates
      an upstream-assigned label\n   request to a neighbor LSR, for a given FEC, MUST
      NOT send a\n   downstream label mapping to the neighbor LSR for that FEC unless
      it\n   withdraws the upstream-assigned label binding.  Similarly, if an LSR\n
      \  generates a downstream-assigned label request to a neighbor LSR, for\n   a
      given FEC, it MUST NOT send an upstream label mapping to that LSR\n   for that
      FEC, unless it aborts the downstream-assigned label request.\n   The Upstream-Assigned
      Label TLV may be optionally included in Label\n   Withdraw and Label Release
      messages that withdraw/release a\n   particular upstream-assigned label binding.\n"
    title: 4.1.  Procedures
  title: 4.  Distributing Upstream-Assigned Labels in LDP
- contents:
  - "5.  LDP Tunnel Identifier Exchange\n   As described in [RFC5331], a specific
    upstream LSR (Ru) MAY transmit\n   an MPLS packet, the top label of which (L)
    is upstream assigned, to\n   its downstream neighbor LSR (Rd).  In this case,
    the fact that L is\n   upstream assigned is determined by Rd by the tunnel on
    which the\n   packet is received.  There must be a mechanism for Ru to inform
    Rd\n   that a particular tunnel from Ru to Rd will be used by Ru for\n   transmitting
    MPLS packets with upstream-assigned MPLS labels.\n   When LDP is used for upstream
    label assignment, the Interface ID TLV\n   [RFC3472] is used for signaling the
    Tunnel Identifier.  If Ru uses an\n   IP or MPLS tunnel to transmit MPLS packets
    with upstream assigned\n   labels to Rd, Ru MUST include the Interface ID TLV
    in the Label\n   Mapping messages along with the Upstream-Assigned Label TLV.
    \ The\n   IPv4/IPv6 Next/Previous Hop Address and the Logical Interface ID\n   fields
    in the Interface ID TLV SHOULD be set to 0 by the sender and\n   ignored by the
    receiver.  The Length field indicates the total length\n   of the TLV, i.e., 4
    + the length of the Value field in octets.  A\n   Value field whose length is
    not a multiple of four MUST be zero-\n   padded so that the TLV is four-octet
    aligned.\n   Hence the IPv4 Interface ID TLV has the following format:\n       0
    \                  1                   2                   3\n       0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|     Type (0x082d)         |             Length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                 IPv4 Next/Previous Hop Address (0)            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     Logical Interface ID (0)                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                           Sub-TLVs                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  The IPv6 Interface ID TLV has the following format:\n       0                   1
    \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |0|0|     Type (0x082e)         |             Length            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                 IPv6 Next/Previous Hop Address (0)            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                     Logical Interface ID (0)                  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                           Sub-TLVs                            |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  As shown in the above figures, the Interface ID TLV carries sub-TLVs.\n   Four
    new Interface ID sub-TLVs are introduced to support RSVP -\n   Traffic Engineering
    (RSVP-TE) P2MP LSPs, LDP P2MP LSPs, IP Multicast\n   Tunnels, and context labels.
    \ The sub-TLV value in the sub-TLV acts\n   as the tunnel identifier.\n   The
    following sub-TLVs are introduced:\n   1. RSVP-TE P2MP LSP TLV (Type = 28)\n   The
    value of the TLV is the RSVP-TE P2MP LSP SESSION Object\n   [RFC4875].\n   Below
    is the RSVP-TE P2MP LSP TLV format when carried in the IPv4\n   Interface ID TLV:\n
    \      0                   1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |    Type (0x1c)                |  16                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                       P2MP ID                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |  MUST be zero                 |      Tunnel ID                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                      Extended Tunnel ID                       |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  Below is the RSVP-TE P2MP LSP TLV format when carried in the IPv6\n   Interface
    ID TLV:\n       0                   1                   2                   3\n
    \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |    Type (0x1c)                |  28                           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                       P2MP ID                                 |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |  MUST be zero                 |      Tunnel ID                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |                      Extended Tunnel ID                       |\n      |
    \                                                              |\n      |                             .......
    \                          |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \  This TLV identifies the RSVP-TE P2MP LSP.  It allows Ru to tunnel an\n   \"inner\"
    LDP P2MP LSP, the label for which is upstream assigned, over\n   an \"outer\"
    RSVP-TE P2MP LSP that has leaves <Rd1...Rdn>.  The RSVP-TE\n   P2MP LSP IF_ID
    TLV allows Ru to signal to <Rd1...Rdn> the binding of\n   the inner LDP P2MP LSP
    to the outer RSVP-TE P2MP LSP.  The control-\n   plane signaling between Ru and
    <Rd1...Rdn> for the inner P2MP LSP\n   uses targeted LDP signaling messages.\n
    \  2. LDP P2MP LSP TLV (Type = 29)\n   The value of the TLV is the LDP P2MP FEC
    as defined in [RFC6388] and\n   has to be set as per the procedures in [RFC6388].
    \ Here is the format\n   of the LDP P2MP FEC as defined in [RFC6388]:\n       0
    \                  1                   2                   3\n       0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |P2MP Type      |        Address Family         | Address Length|\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     ~                       Root Node Address                       ~\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \     |    Opaque Length              |    Opaque Value ...           |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    \                              +\n      ~                                                               ~\n
    \     |                                                               |\n      |
    \                              +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |                               |\n
    \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   The Address Family MUST be set to
    IPv4, the Address Length MUST be\n   set to 4, and the Root Node Address MUST
    be set to an IPv4 address\n   when the LDP P2MP LSP TLV is carried in the IPv4
    Interface ID TLV.\n   The Address Family MUST be set to IPv6, the Address Length
    MUST be\n   set to 16, and the Root Node Address MUST be set to an IPv6 address\n
    \  when the LDP P2MP LSP TLV is carried in the IPv6 Interface ID TLV.\n   The
    TLV value identifies the LDP P2MP LSP.  It allows Ru to tunnel an\n   inner LDP
    P2MP LSP, the label for which is upstream assigned, over an\n   outer LDP P2MP
    LSP that has leaves <Rd1...Rdn>.  The LDP P2MP LSP\n   IF_ID TLV allows Ru to
    signal to <Rd1...Rdn> the binding of the inner\n   LDP P2MP LSP to the outer LDP-P2MP
    LSP.  The control-plane signaling\n   between Ru and <Rd1...Rdn> for the inner
    P2MP LSP uses targeted LDP\n   signaling messages.\n   3. IP Multicast Tunnel
    TLV (Type = 30)\n   In this case, the TLV value is a <Source Address, Multicast
    Group\n   Address> tuple.  Source Address is the IP address of the root of the\n
    \  tunnel (i.e., Ru), and Multicast Group Address is the Multicast Group\n   Address
    used by the tunnel.  The addresses MUST be IPv4 addresses\n   when the IP Multicast
    Tunnel TLV is included in the IPv4 Interface ID\n   TLV.  The addresses MUST be
    IPv6 addresses when the IP Multicast\n   Tunnel TLV is included in the IPv6 Interface
    ID TLV.\n   4. MPLS Context Label TLV (Type = 31)\n   In this case, the TLV value
    is a <Source Address, MPLS Context Label>\n   tuple.  The Source Address belongs
    to Ru and the MPLS Context Label\n   is an upstream-assigned label, assigned by
    Ru.  The Source Address\n   MUST be set to an IPv4 address when the MPLS Context
    Label TLV is\n   carried in the IPv4 Interface ID TLV.  The Source Address MUST
    be set\n   to an IPv6 address when the MPLS Context Label TLV is carried in the\n
    \  IPv6 Interface ID TLV.  This allows Ru to tunnel an inner LDP P2MP\n   LSP,
    the label of which is upstream assigned, over an outer one-hop\n   MPLS LSP, where
    the outer one-hop LSP has the following property:\n      o  The label pushed by
    Ru for the outer MPLS LSP is an upstream-\n         assigned context label, assigned
    by Ru.  When <Rd1...Rdn>\n         perform an MPLS label lookup on this label,
    a combination of\n         this label and the incoming interface MUST be sufficient
    for\n         <Rd1...Rdn> to uniquely determine Ru's context-specific label\n
    \        space to look up the next label on the stack.  <Rd1...Rdn> MUST\n         receive
    the data sent by Ru with the context-specific label\n         assigned by Ru being
    the top label on the label stack.\n   Currently, the usage of the Context Label
    TLV is limited only to LDP\n   P2MP LSPs on a LAN as specified in the next section.
    \ The Context\n   Label TLV MUST NOT be used for any other purpose.\n   Note that
    when the outer P2MP LSP is signaled with RSVP-TE or MLDP,\n   the above procedures
    assume that Ru has a priori knowledge of all the\n   <Rd1, ... Rdn>.  In the scenario
    where the outer P2MP LSP is signaled\n   using RSVP-TE, Ru can obtain this information
    from RSVP-TE.  However,\n   in the scenario where the outer P2MP LSP is signaled
    using MLDP, MLDP\n   does not provide this information to Ru.  In this scenario,
    the\n   procedures by which Ru could acquire this information are outside the\n
    \  scope of this document.\n"
  title: 5.  LDP Tunnel Identifier Exchange
- contents:
  - "6.  LDP Point-to-Multipoint LSPs on a LAN\n   This section describes one application
    of upstream label assignment\n   using LDP.  Further applications are to be described
    in separate\n   documents.\n   [RFC6388] describes how to setup P2MP LSPs using
    LDP.  On a LAN the\n   solution relies on \"ingress replication\".  An LSR on
    a LAN, that is a\n   branch LSR for a P2MP LSP (say Ru), sends a separate copy
    of a packet\n   that it receives on the P2MP LSP to each of the downstream LSRs
    on\n   the LAN (say <Rd1...Rdn>) that are adjacent to it in the P2MP LSP.\n   It
    is desirable for Ru to send a single copy of the packet for the\n   LDP P2MP LSP
    on the LAN, when there are multiple downstream routers\n   on the LAN that are
    adjacent to Ru in that LDP P2MP LSP.  This\n   requires that each of <Rd1...Rdn>
    must be able to associate the label\n   L, used by Ru to transmit packets for
    the P2MP LSP on the LAN, with\n   that P2MP LSP.  It is possible to achieve this
    using LDP upstream-\n   assigned labels with the following procedures.\n   Consider
    an LSR Rd that receives the LDP P2MP FEC [RFC6388] from its\n   downstream LDP
    peer.  Additionally, consider that the upstream\n   interface to reach LSR Ru
    that is the next hop to the P2MP LSP root\n   address (Pr) in the LDP P2MP FEC
    is a LAN interface (Li) and that Rd\n   and Ru support upstream-assigned labels.
    \ In this case, instead of\n   sending a Label Mapping message as described in
    [RFC6388], Rd sends a\n   Label Request message to Ru.  This Label Request message
    MUST contain\n   an Upstream-Assigned Label Request TLV.\n   On receiving this
    message, Ru sends back a Label Mapping message to\n   Rd with an upstream-assigned
    label.  This message also contains an\n   Interface ID TLV with an MPLS Context
    Label sub-TLV, as described in\n   the previous section, with the value of the
    MPLS label set to a value\n   assigned by Ru on interface Li as specified in [RFC5331].
    \ Processing\n   of the Label Request and Label Mapping messages for LDP upstream-\n
    \  assigned labels is as described in Section 4.1.  If Ru receives a\n   Label
    Request for an upstream-assigned label for the same P2MP FEC\n   from multiple
    downstream LSRs on the LAN, <Rd1...Rdn>, it MUST send\n   the same upstream-assigned
    label to each of <Rd1...Rdn>.\n   Ru transmits the MPLS packet using the procedures
    defined in\n   [RFC5331] and [RFC5332].  The MPLS packet transmitted by Ru contains\n
    \  as the top label the context label assigned by Ru on the LAN\n   interface,
    Li.  The bottom label is the upstream label assigned by Ru\n   to the LDP P2MP
    LSP.  The top label is looked up in the context of\n   the LAN interface (Li)
    by a downstream LSR on the LAN.  This lookup\n   enables the downstream LSR to
    determine the context-specific label\n   space in which to look up the inner label.\n
    \  Note that <Rd1...Rdn> may have more than one equal-cost next hop on\n   the
    LAN to reach Pr.  It MAY be desirable for all of them to send the\n   label request
    to the same upstream LSR and they MAY select one\n   upstream LSR using the following
    procedure:\n   1. The candidate upstream LSRs are numbered from lower to higher
    IP\n      address.\n   2. The following hash is performed: H = (Sum Opaque value)
    modulo N,\n      where N is the number of candidate upstream LSRs.  The Opaque\n
    \     value is defined in [RFC6388] and comprises the P2MP LSP\n      identifier.\n
    \  3. The selected upstream LSR U is the LSR that has the number H.\n   This allows
    for load balancing of a set of LSPs among a set of\n   candidate upstream LSRs,
    while ensuring that on a LAN interface, a\n   single upstream LSR is selected.
    \ It is also to be noted that the\n   procedures in this section can still be
    used by Rd and Ru if other\n   LSRs on the LAN do not support upstream label assignment.
    \ Ingress\n   replication and downstream label assignment will continue to be
    used\n   for LSRs that do not support upstream label assignment.\n"
  title: 6.  LDP Point-to-Multipoint LSPs on a LAN
- contents:
  - '7.  IANA Considerations

    '
  - contents:
    - "7.1.  LDP TLVs\n   IANA maintains a registry of LDP TLVs at the registry \"Label\n
      \  Distribution Protocol\" in the sub-registry called \"TLV Type Name\n   Space\".\n
      \  This document defines a new LDP Upstream Label Assignment Capability\n   TLV
      (Section 3).  IANA has assigned the value 0x0507 to this TLV.\n   This document
      defines a new LDP Upstream-Assigned Label TLV (Section\n   4).  IANA has assigned
      the type value of 0x204 to this TLV.\n   This document defines a new LDP Upstream-Assigned
      Label Request TLV\n   (Section 4).  IANA has assigned the type value of 0x205
      to this TLV.\n"
    title: 7.1.  LDP TLVs
  - contents:
    - "7.2.  Interface Type Identifiers\n   [RFC3472] defines the LDP Interface ID
      IPv4 and IPv6 TLV.  These top-\n   level TLVs can carry sub-TLVs dependent on
      the interface type.  These\n   sub-TLVs are assigned \"Interface ID Types\".
      \ IANA maintains a\n   registry of Interface ID Types for use in GMPLS in the
      registry\n   \"Generalized Multi-Protocol Label Switching (GMPLS) Signaling\n
      \  Parameters\" and sub-registry \"Interface_ID Types\".  IANA has made the\n
      \  corresponding allocations from this registry as follows:\n      -  RSVP-TE
      P2MP LSP TLV (value 28)\n      -  LDP P2MP LSP TLV (value 29)\n      -  IP Multicast
      Tunnel TLV (value 30)\n      -  MPLS Context Label TLV (value 31)\n"
    title: 7.2.  Interface Type Identifiers
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   The security considerations discussed in [RFC5036],
    [RFC5331], and\n   [RFC5332] apply to this document.\n   More detailed discussion
    of security issues that are relevant in the\n   context of MPLS and GMPLS, including
    security threats, related\n   defensive techniques, and the mechanisms for detection
    and reporting,\n   are discussed in \"Security Framework for MPLS and GMPLS Networks\"\n
    \  [RFC5920].\n"
  title: 8.  Security Considerations
- contents:
  - "9.  Acknowledgements\n   Thanks to Yakov Rekhter for his contribution.  Thanks
    to Ina Minei\n   and Thomas Morin for their comments.  The hashing algorithm used
    on\n   LAN interfaces is taken from [RFC6388].  Thanks to Loa Andersson,\n   Adrian
    Farrel, and Eric Rosen for their comments and review.\n"
  title: 9.  Acknowledgements
- contents:
  - '10.  References

    '
  - contents:
    - "10.1.  Normative References\n   [RFC2119] Bradner, S., \"Key words for use
      in RFCs to Indicate\n             Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC5036] Andersson, L., Ed., Minei, I., Ed., and B. Thomas, Ed.,\n
      \            \"LDP Specification\", RFC 5036, October 2007.\n   [RFC4875] Aggarwal,
      R., Ed., Papadimitriou, D., Ed., and S. Yasukawa,\n             Ed., \"Extensions
      to Resource Reservation Protocol - Traffic\n             Engineering (RSVP-TE)
      for Point-to-Multipoint TE Label\n             Switched Paths (LSPs)\", RFC
      4875, May 2007.\n   [RFC5331] Aggarwal, R., Rekhter, Y., and E. Rosen, \"MPLS
      Upstream\n             Label Assignment and Context-Specific Label Space\",
      RFC\n             5331, August 2008.\n   [RFC5332] Eckert, T., Rosen, E., Ed.,
      Aggarwal, R., and Y. Rekhter,\n             \"MPLS Multicast Encapsulations\",
      RFC 5332, August 2008.\n   [RFC5561] Thomas, B., Raza, K., Aggarwal, S., Aggarwal,
      R., and JL.\n             Le Roux, \"LDP Capabilities\", RFC 5561, July 2009.\n
      \  [RFC6388] Wijnands, IJ., Ed., Minei, I., Ed., Kompella, K., and B.\n             Thomas,
      \"Label Distribution Protocol Extensions for Point-\n             to-Multipoint
      and Multipoint-to-Multipoint Label Switched\n             Paths\", RFC 6388,
      November 2011.\n"
    title: 10.1.  Normative References
  - contents:
    - "10.2.  Informative References\n   [RFC3032] Rosen, E., Tappan, D., Fedorkow,
      G., Rekhter, Y.,\n             Farinacci, D., Li, T., and A. Conta, \"MPLS Label
      Stack\n             Encoding\", RFC 3032, January 2001.\n   [RFC3472] Ashwood-Smith,
      P., Ed., and L. Berger, Ed., \"Generalized\n             Multi-Protocol Label
      Switching (GMPLS) Signaling\n             Constraint-based Routed Label Distribution
      Protocol\n             (CR-LDP) Extensions\", RFC 3472, January 2003.\n   [RFC5920]
      Fang, L., Ed., \"Security Framework for MPLS and GMPLS\n             Networks\",
      RFC 5920, July 2010.\n"
    title: 10.2.  Informative References
  title: 10.  References
- contents:
  - "Author's Address\n   Rahul Aggarwal\n   Juniper Networks\n   1194 North Mathilda
    Ave.\n   Sunnyvale, CA 94089\n   Phone: +1-408-936-2720\n   EMail: raggarwa_1@yahoo.com\n
    \  Jean-Louis Le Roux\n   France Telecom\n   2, avenue Pierre-Marzin\n   22307
    Lannion Cedex\n   France\n   EMail: jeanlouis.leroux@orange-ftgroup.com\n"
  title: Author's Address
