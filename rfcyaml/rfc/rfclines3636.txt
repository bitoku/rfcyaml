Abstract This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing IEEE 802.3 Medium Attachment Units (MAUs).
This memo obsoletes RFC 2668.
This memo extends that specification by including management information useful for the management of 10 gigabit per second (Gb/s) MAUs.
This memo also obsoletes RFC 1515.
This memo defines a portion of the Management Information Base (MIB) for use with network management protocols in the Internet community.
In particular, it defines objects for managing IEEE 802.3 Medium Attachment Units (MAUs).
This memo also includes a MIB module.
This MIB module extends the list of managed objects specified in the earlier version of this MIB module, RFC 2668 [RFC2668].
Ethernet technology, as defined by the 802.3 Working Group of the IEEE, continues to evolve, with scalable increases in speed, new types of cabling and interfaces, and new features.
This evolution may require changes in the managed objects in order to reflect this new functionality.
This document, as with other documents issued by this working group, reflects a certain stage in the evolution of Ethernet technology.
In the future, this document might be revised, or new documents might be issued by the Ethernet Interfaces and Hub MIB Working Group, in order to reflect the evolution of Ethernet technology.
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [RFC2119].
The Internet Standard Management Framework
For a detailed overview of the documents that describe the current Internet Standard Management Framework, please refer to section 7 of RFC 3410 [RFC3410].
Managed objects are accessed via a virtual information store, termed the Management Information Base or MIB.
MIB objects are generally accessed through the Simple Network Management Protocol (SNMP).
Objects in the MIB are defined using the mechanisms defined in the Structure of Management Information (SMI).
This memo specifies a MIB module that is compliant to the SMIv2, which is described in STD 58, RFC 2578 [RFC2578], STD 58
, RFC 2579 [RFC2579] and STD 58, RFC 2580
Overview Instances of these object types represent attributes of an IEEE 802.3 MAU.
Several types of MAUs are defined in the IEEE 802.3 CSMA/CD standard [IEEE802.3].
These MAUs may be connected to IEEE 802.3 repeaters or to 802.3 (Ethernet like) interfaces.
For convenience this document refers to these devices as "repeater MAUs" and "interface MAUs.
" The definitions presented here are based on Section 30.5, "Layer Management for 10 Mb/s, 100 Mb/s, 1000 Mb/s and 10 Gb/s Medium Attachment Units (MAUs)", Section 30.6, "Management for link Auto  Negotiation", and Annex 30A, "GDMO Specifications for 802.3 managed object classes" of IEEE Std.
802.3, 2002 edition [IEEE802.3], as amended by IEEE Std.
That specification includes definitions for 10 Mb/s, 100 Mb/s, 1000 Mb/s and 10 Gb/s devices.
This specification is intended to serve the same purpose: to provide for management of all types of Ethernet/802.3 MAUs.
This MIB is intended to be a superset of that defined by RFC 2668 [RFC2668].
This MIB includes all of the objects contained in that MIB, with new and updated definitions which provide support for additional capabilities.
Implementors are encouraged to support all applicable conformance groups in order to make the best use of the new functionality provided by this MIB.
The new and updated definitions provide management support for 10 Gb/s devices.
Relationship to RFC 2239 RFC 2668 was a replacement for RFC 2239
RFC 2668 defined a superset of that defined by RFC 2239, which contained all of the objects defined in RFC 2239, plus several new ones which provide additional capabilities.
The new objects provided management support for:  management of 1000 Mb/s devices  management of PAUSE negotiation  management of remote fault status 3.3.
Relationship to RFC 1515 RFC 2239 was a replacement for RFC 1515 [RFC1515].
RFC 2239 defined a superset of RFC 1515 which contained all of the objects defined in RFC 1515, plus several new ones which provided additional capabilities.
The new objects in RFC 2239 provided management support for:  management of 100 Mb/s devices  auto negotiation on interface MAUs  jack management 3.4.
It is assumed that an agent implementing this MIB will also implement (at least)
the 'system' group defined in the SNMPv2 MIB [RFC3418].
The following sections identify other MIBs that such an agent should implement.
Relationship to the Interfaces MIB.
The sections of this document that define interface
MAU related objects specify an extension to the Interfaces MIB [RFC2863].
An agent implementing these interface MAU related objects MUST also implement the relevant groups of the ifCompliance3 MODULE COMPLIANCE statement of the Interface MIB.
The value of the object ifMauIfIndex is the same as the value of 'ifIndex' used to instantiate the interface to which the given MAU is connected.
It is REQUIRED that an agent implementing the interface MAU related objects in this MIB will also fully comply with the dot3Compliance2 MODULE COMPLIANCE statement of the Ethernet like Interfaces MIB, [RFC3635].
Furthermore, when the interface MAU related objects are used to manage a 10GBASE W PHY
i.e., when ifMauType is equal to dot3MauType10GigBaseW or any other 10GBASE W variant
then the agent MUST also support the Ethernet WAN Interface Sublayer (WIS) MIB [RFC3637] and must follow the interface layering model specified therein.
In that case the value of the object ifMauIfIndex is the same as the value of 'ifIndex' for the layer at the top of the stack, i.e., for the ifTable entry that has 'ifType' equal to ethernetCsmacd(6).
If the interface MAU related objects are used to manage a PHY that allows the MAU type to be changed dynamically, then the agent SHALL create ifTable, ifStackTable, and ifInvStackTable entries that pertain to the WIS when ifMauDefaultType is changed to a 10GBASEW variant (i.e., one of dot3MauType10GigBaseW, dot3MauType10GigBaseEW, dot3MauType10GigBaseLW, or dot3MauType10GigBaseSW) from any other type, and shall destroy the WIS related entries when ifMauDefaultType is changed to a non  10GBASE W type.
The agent SHALL also change the values of 'ifConnectorPresent' and 'ifHighSpeed' in the ifTable entry indexed by ifMauIfIndex as specified in [RFC3635] and [RFC3637] when ifMauDefaultType is manipulated in this way
but SHALL NOT otherwise alter that entry.
(Note that repeater ports are not represented as interfaces in the Interface MIB.)
Relationship to the 802.3 Repeater MIB
The section of this document that defines repeater MAU related objects specifies an extension to the 802.3 Repeater MIB defined in [RFC2108].
An agent implementing these repeater MAU related objects MUST also comply with the snmpRptrModCompl compliance statement of the 802.3 Repeater MIB.
The values of 'rpMauGroupIndex' and 'rpMauPortIndex' used to instantiate a repeater MAU variable SHALL be the same as the values of 'rptrPortGroupIndex' and 'rptrPortIndex' used to instantiate the port to which the given MAU is connected.
In some situations, a MAU can be "internal"   i.e., its functionality is implemented entirely within a device.
For example, a managed repeater may contain an internal repeater MAU and/or an internal interface MAU through which management communications originating on one of the repeater's external ports pass in order to reach the management agent associated with the repeater.
Such internal MAUs may or may not be managed.
If they are managed, objects describing their attributes should appear in the appropriate MIB subtree:  dot3RpMauBasicGroup for internal repeater MAUs and dot3IfMauBasicGroup for internal interface MAUs.
and rpMauJabberingStateEnters or ifMauJabberState and ifMauJabberingStateEnters .aMAUAdminState
The following IEEE 802.3 managed objects have not been included in this MIB for the following reasons.
Only useful for 100BaseT2, which is not widely implemented.
Only needed for support of .aAutoNegAdvertisedSelectorAbility
Integer32, Counter64, OBJECT TYPE, MODULE IDENTITY, NOTIFICATION TYPE, OBJECT IDENTITY, mib 2 FROM SNMPv2
SMI TruthValue, AutonomousType, TEXTUAL CONVENTION FROM SNMPv2 TC OBJECT GROUP, MODULE COMPLIANCE, NOTIFICATION GROUP FROM SNMPv2
Avaya Inc. Atidim Technology Park, Bldg.
972 3 645 8414 E mail:
John Flick Postal: Hewlett Packard Company 8000 Foothills Blvd.
johnf@rose.hp.com" DESCRIPTION "Management information for 802.3 MAUs.
The following reference is used throughout this MIB module:
[IEEE 802.3 Std] refers to: IEEE Std 802.3, 2002 Edition: 'IEEE Standard for Information technology Telecommunications and information exchange between systems Local and metropolitan area networks Specific requirements Part 3:
Carrier sense multiple access with collision detection (CSMA/CD) access method and physical layer specifications', as amended by IEEE Std 802.3ae 2002: 'Amendment: Media Access Control (MAC)
Parameters, Physical Layer, and Management Parameters for 10 Gb/s Operation', August, 2002.
Of particular interest is Clause 30, '10Mb/s, 100Mb/s, 1000Mb/s and 10 Gb/s Management'.
This version of this MIB module is part of RFC 3636; see the RFC itself for full legal notices."
"Updated to include support for 10 Gb/s MAUs.
This resulted in the following revisions: Added OBJECT IDENTITY definitions for 10 gigabit MAU types Added fiberLC jack type to JackType TC
Extended ifMauTypeListBits with bits for the 10 gigabit MAU types
Added enumerations to ifMauMediaAvailable, and updated its DESCRIPTION to reflect behaviour at 10 Gb/s Added 64 bit version of ifMauFalseCarriers and added mauIfGrpHCStats object group to contain the new object Deprecated mauModIfCompl2 and replaced it with mauModIfCompl3, which includes the new object group This version published as RFC 3636.
This version published as RFC 2668.
Updated to include support for 1000 Mb/sec MAUs and flow control negotiation."
"Version published as RFC 2239."
1993 DESCRIPTION "Initial version, published as RFC 1515."
Common enumeration values for repeater and interface MAU jack types.
"no internal MAU, view from AUI" REFERENCE   "
Note that it is strongly recommended that agents return either dot3MauType10BaseTHD or dot3MauType10BaseTFD if the duplex mode is known.
However, management applications should be prepared to receive this MAU type value from older agent implementations.
current DESCRIPTION "passive fiber MAU" REFERENCE   "
sync fiber MAU" REFERENCE   "
Note that it is strongly recommended that agents return either dot3MauType10BaseFLHD or dot3MauType10BaseFLFD if the duplex mode is known.
However, management applications should be prepared to receive this MAU type value from older agent implementations.
Note that 10BROAD36 MAUs can be attached to interfaces but not to repeaters."
current DESCRIPTION "UTP MAU, half duplex mode" REFERENCE   "
current DESCRIPTION "UTP MAU, full duplex mode" REFERENCE   "
"async fiber MAU, half duplex mode" REFERENCE   "
current DESCRIPTION "async fiber MAU, full duplex mode" REFERENCE   "
current DESCRIPTION "4 pair category 3 UTP" REFERENCE   "
"2 pair category 5 UTP, half duplex mode" REFERENCE   "
"2 pair category 5 UTP, full duplex mode" REFERENCE   "
"2 pair category 3 UTP, full duplex mode" REFERENCE   "
current DESCRIPTION "PCS/PMA, unknown PMD, half duplex mode"
21 } dot3MauType1000BaseXFD OBJECT IDENTITY STATUS
current DESCRIPTION "PCS/PMA, unknown PMD, full duplex mode" REFERENCE   "
22 } dot3MauType1000BaseLXHD OBJECT IDENTITY STATUS
current DESCRIPTION "Fiber over long wavelength laser, half duplex mode" REFERENCE   "
23 } dot3MauType1000BaseLXFD OBJECT IDENTITY STATUS
current DESCRIPTION "Fiber over short wavelength laser, half duplex mode" REFERENCE   "
current DESCRIPTION "Fiber over short wavelength laser, full duplex mode" REFERENCE   "
26 } dot3MauType1000BaseCXHD OBJECT IDENTITY STATUS
current DESCRIPTION "Copper over 150 Ohm balanced cable, half duplex mode" REFERENCE   "
27 } dot3MauType1000BaseCXFD OBJECT IDENTITY STATUS
current DESCRIPTION "Copper over 150 Ohm balanced cable, full duplex mode" REFERENCE   "
current DESCRIPTION "Four pair Category 5 UTP, half duplex mode" REFERENCE   "
current DESCRIPTION "Four pair Category 5 UTP, full duplex mode" REFERENCE   "
"X fiber over WWDM optics" REFERENCE   "
32 } dot3MauType10GigBaseR OBJECT IDENTITY STATUS
current DESCRIPTION "R PCS/PMA, unknown PMD.
current DESCRIPTION "R fiber over 1550 nm optics"
"R fiber over 1310 nm optics"
current DESCRIPTION "R fiber over 850 nm optics" REFERENCE   "
current DESCRIPTION "W PCS/PMA, unknown PMD.
"W fiber over 1550 nm optics"
"W fiber over 1310 nm optics"
"W fiber over 850 nm optics" REFERENCE   "
The Basic Repeater MAU Table
current DESCRIPTION "Table of descriptive and status information about the MAU(s) attached to the ports of a repeater."
An entry in the table, containing information about a single MAU."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the group containing the port to which the MAU described by this entry is connected.
In practice, a group will generally be a field replaceable unit (i.e., module, card, or board) that can fit in the physical system enclosure, and the group number will correspond to a number marked on the physical enclosure.
The group denoted by a particular value of this object is the same as the group denoted by the same value of rptrGroupIndex."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the repeater port within group rpMauGroupIndex to which the MAU described by this entry is connected."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same port (rpMauPortIndex).
[IEEE 802.3 Std], 30.5.1.1.1, aMAUID."
"This object identifies the MAU type.
Values for standard IEEE 802.3 MAU types are defined above.
Note that unknownMauType is a syntactically valid object identifier, and any conformant implementation of ASN.1 and
the BER must be able to generate and recognize this value."
[IEEE 802.3 Std], 30.5.1.1.2, aMAUType."
The current state of the MAU.
This object MAY be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional, operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of rpMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter as though it were powered down or not connected.
The MAU MAY return other(1) value for the rpMauJabberState and rpMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power on cycle of at least one half second would.
The agent is not required to return the value reset (6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
30.5.1.1.7, aMAUAdminState, 30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1, acResetMAU."
"If the MAU is a link or fiber type (FOIRL, 10BASE T, 10BASE F) then this is equivalent to the link test fail state/low light function.
For an AUI or a coax (including broadband) MAU this indicates whether or not loopback is detected on the DI circuit.
The value of this attribute persists between packets for MAU types AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE FP.
The value other(1) is returned if the mediaAvailable state is not one of 2 through 11.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
At power up or following a reset, the value of this attribute will be unknown for AUI, coax, and 10BASE FP MAUs.
For these MAUs loopback will be tested on each transmission during which no collision is detected.
If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission then loopback will be detected.
The value of this attribute will only change during non collided transmissions for AUI, coax, and 10BASE FP MAUs.
For 100Mbps and 1000Mbps MAUs, the enumerations match the states within the respective link integrity state diagrams, fig 32 16, 23 12 and 24 15 of sections 32, 23 and 24 of [IEEE802.3].
Any MAU which implements management of auto negotiation will map remote fault indication to remote fault.
The value available(3) indicates that the link, light, or loopback is normal.
The value notAvailable(4) indicates link loss, low light, or no loopback.
The value remoteFault(5) indicates that a fault has been detected at the remote end of the link.
This value applies to 10BASE FB, 100BASE T4 Far End Fault Indication and non specified remote faults from a system running auto negotiation.
The values remoteJabber(7), remoteLinkLoss(8), and remoteTest(9) SHOULD be used instead of remoteFault(5)
where the reason for remote fault is identified in the remote signaling protocol.
The value invalidSignal(6) indicates that an invalid signal has been received from the other end of the link.
invalidSignal(6) applies only to MAUs of type 10BASE FB.
Where an IEEE Std 802.3 2002 clause
22 MII is present, a logic one in the remote fault bit (reference section 22.2.4.2.8 of that document)
maps to the value remoteFault(5), and a logic zero in the link status bit (reference section 22.2.4.2.10 of that document
) maps to the value notAvailable(4).
The value notAvailable(4) takes precedence over the value remoteFault(5).
Any MAU that implements management of clause 37
Auto Negotiation will map the received Remote Fault (RF1 and RF2) bit values for Offline to offline(10), Link Failure to remoteFault(5) and Auto Negotiation Error to autoNegError(11).
[IEEE 802.3 Std], 30.5.1.1.4, aMediaAvailable."
"A count of the number of times that rpMauMediaAvailable for this MAU instance leaves the state available(3).
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of rptrMonitorPortLastChange."
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent MUST always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value.
"A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX and all 1000Mbps types, this counter will always indicate zero.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of rptrMonitorPortLastChange.
[IEEE 802.3 Std], 30.5.1.1.6, aJabber.jabberCounter.
"A count of the number of false carrier events during IDLE in 100BASE X links.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event.
This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, and dot3MauType100BaseFX and all 1000Mbps types.
For all other MAU types, this counter will always indicate zero.
The approximate minimum time for rollover of this counter is 7.4 hours.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of rptrMonitorPortLastChange."
[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.
The rpJackTable applies to MAUs attached to repeaters   which have one or more external jacks (connectors).
SEQUENCE OF RpJackEntry MAX ACCESS
current DESCRIPTION "Information about the external jacks attached to MAUs attached to the ports of a repeater."
An entry in the table, containing information about a particular jack."
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU (rpMauIndex)."
The Basic Interface MAU Table
SEQUENCE OF IfMauEntry MAX ACCESS
current DESCRIPTION "Table of descriptive and status information about MAU(s) attached to an interface."
An entry in the table, containing information about a single MAU."
read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the interface to which the MAU described by this entry is connected."
MAX ACCESS  read only    read only since originally an   SMIv1 index STATUS
"This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same interface (ifMauIfIndex).
[IEEE 802.3 Std], 30.5.1.1.1, aMAUID."
"This object identifies the MAU type.
Values for standard IEEE 802.3 MAU types are defined above.
Note that unknownMauType is a syntactically valid object identifier, and any conformant implementation of ASN.1 and
the BER must be able to generate and recognize this value.
This object represents the operational type of the MAU, as determined by either (1)
the result of the auto negotiation function or (2) if auto negotiation is not enabled or is not implemented for this MAU, by the value of the object ifMauDefaultType.
In case (2), a set to the object ifMauDefaultType will force the MAU into the new operating mode."
[IEEE 802.3 Std], 30.5.1.1.2, aMAUType."
, standby(4), shutdown(5), reset(6) } MAX ACCESS
The current state of the MAU.
This object MAY be implemented as a read only object by those agents and MAUs that do not implement software control of the MAU state.
Some agents may not support setting the value of this object to some of the enumerated values.
The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
A MAU in the operational(3) state is fully functional, operates, and passes signals to its attached DTE or repeater port in accordance to its specification.
state forces DI and CI to idle and the media transmitter to idle or fault, if supported.
) mode only applies to link type MAUs.
The state of ifMauMediaAvailable is unaffected.
state assumes the same condition on DI, CI, and the media transmitter as though it were powered down or not connected.
The MAU MAY return other(1) value for the ifMauJabberState and ifMauMediaAvailable objects when it is in this state.
For an AUI, this state will remove power from the AUI.
Setting this variable to the value reset(6) resets the MAU in the same manner as a power off, power on cycle of at least one half second would.
The agent is not required to return the value reset (6).
Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state except that setting a mixing type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.
30.5.1.1.7, aMAUAdminState, 30.5.1.2.2, acMAUAdminControl, and 30.5.1.2.1, acResetMAU."
"If the MAU is a link or fiber type (FOIRL, 10BASE T, 10BASE F) then this is equivalent to the link test fail state/low light function.
For an AUI or a coax (including broadband) MAU this indicates whether or not loopback is detected on the DI circuit.
The value of this attribute persists between packets for MAU types AUI, 10BASE5, 10BASE2, 10BROAD36, and 10BASE FP.
The value other(1) is returned if the mediaAvailable state is not one of 2 through 18.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
At power up or following a reset, the value of this attribute will be unknown for AUI, coax, and 10BASE FP MAUs.
For these MAUs loopback will be tested on each transmission during which no collision is detected.
If DI is receiving input when DO returns to IDL after a transmission and there has been no collision during the transmission then loopback will be detected.
The value of this attribute will only change during non collided transmissions for AUI, coax, and 10BASE FP MAUs.
For 100Mbps and 1000Mbps MAUs, the enumerations match the states within the respective link integrity state diagrams, fig 32 16, 23 12 and 24 15 of sections 32, 23 and 24 of [IEEE802.3].
Any MAU which implements management of auto negotiation will map remote fault indication to remote fault.
The value available(3) indicates that the link, light, or loopback is normal.
The value notAvailable(4) indicates link loss, low light, or no loopback.
The value remoteFault(5) indicates that a fault has been detected at the remote end of the link.
This value applies to 10BASE FB, 100BASE T4 Far End Fault Indication and non specified remote faults from a system running auto negotiation.
The values remoteJabber(7), remoteLinkLoss(8), and remoteTest(9) SHOULD be used instead of remoteFault(5)
where the reason for remote fault is identified in the remote signaling protocol.
The value invalidSignal(6) indicates that an invalid signal has been received from the other end of the link.
invalidSignal(6) applies only to MAUs of type 10BASE FB.
Where an IEEE Std 802.3 2002 clause
22 MII is present, a logic one in the remote fault bit (reference section 22.2.4.2.8 of that document)
maps to the value remoteFault(5), and a logic zero in the link status bit (reference section 22.2.4.2.10 of that document
) maps to the value notAvailable(4).
The value notAvailable(4) takes precedence over the value remoteFault(5).
Any MAU that implements management of clause 37
Auto Negotiation will map the received RF1 and RF2 bit values for Offline to offline(10), Link Failure to remoteFault(5) and Auto Negotiation Error to autoNegError(11).
For 10 Gb/s, the enumerations map to the states within the Reconciliation Sublayer state diagram as follows:
NoFault maps to the enumeration 'available(3)'
LocalFault maps to the enumeration 'notAvailable(4)'
RemoteFault maps to the enumeration 'remoteFault(5)'
Where multiple reasons for the local fault state can be identified only the highest precedence error should be reported.
The precedence in descending order is as follows:
pxsLinkFault pmdLinkFault wisFrameLoss wisSignalLoss pcsLinkFault excessiveBER dxsLinkFault
[IEEE 802.3 Std], 30.5.1.1.4, aMediaAvailable."
"A count of the number of times that ifMauMediaAvailable for this MAU instance leaves the state available(3).
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
[IEEE 802.3 Std], 30.5.1.1.5, aLoseMediaCounter.
"The value other(1) is returned if the jabber state is not 2, 3, or 4.
The agent MUST always return other(1) for MAU type dot3MauTypeAUI.
The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized.
If the MAU is not jabbering the agent returns noJabber(3).
This is the 'normal' state.
If the MAU is in jabber state the agent returns the jabbering(4) value."
{ ifMauEntry 7 } ifMauJabberingStateEnters OBJECT TYPE SYNTAX
"A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4).
This counter will always indicate zero for MAUs of type dot3MauTypeAUI and those of speeds above 10Mbps.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
[IEEE 802.3 Std], 30.5.1.1.6, aJabber.jabberCounter.
"A count of the number of false carrier events during IDLE in 100BASE X and 1000BASE X links.
For all other MAU types, this counter will always indicate zero.
This counter does not increment at the symbol rate.
It can increment after a valid carrier completion at a maximum rate of once per 100 ms for 100BASE X and once per 10us for 1000BASE X until the next CarrierEvent.
This counter can roll over very quickly.
A management station is advised to poll the ifMauHCFalseCarriers instead of this counter in order to avoid loss of information.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.
This object has been deprecated in favour of ifMauTypeListBits.
A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be.
The value is a sum which initially takes the value zero.
Then, for each type capability of this MAU, 2 raised to the power noted below is added to the sum.
For example, a MAU which has the capability to be only 10BASE T would have a value of 512 (2  9).
In contrast, a MAU which supports both 10Base T (full duplex) and 100BASE TX (full duplex) would have a value of ((2  11)
10BASE T  half duplex mode 11
If auto negotiation is present on this MAU, this object will map to ifMauAutoNegCapability."
"This object identifies the default administrative baseband MAU type, to be used in conjunction with the operational MAU type denoted by ifMauType.
The set of possible values for this object is the same as the set defined for the ifMauType object.
This object represents the administratively configured type of the MAU.
If auto negotiation is not enabled or is not implemented for this MAU, the value of this object determines the operational type of the MAU.
In this case, a set to this object will force the MAU into the specified operating mode.
If auto negotiation is implemented and enabled for this MAU, the operational type of the MAU is determined by auto negotiation, and the value of this object denotes the type to which the MAU will automatically revert if/when auto negotiation is later disabled.
It may be necessary to provide for underlying hardware implementations which do not follow the exact behavior specified above.
In particular, when ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by this object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
[IEEE 802.3 Std], 30.5.1.1.1, aMAUID, and 22.2.4.1.4."
"This object indicates whether or not auto negotiation is supported on this MAU."
10GBASE SW } MAX ACCESS
"A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be.
If auto negotiation is present on this MAU, this object will map to ifMauAutoNegCapabilityBits.
Note that this MAU may be capable of operating as a MAU type that is beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
"A count of the number of false carrier events during IDLE in 100BASE X and 1000BASE X links.
For all other MAU types, this counter will always indicate zero.
This counter does not increment at the symbol rate.
This counter is a 64 bit version of ifMauFalseCarriers.
Since the 32 bit version of this counter can roll over very quickly, management stations are advised to poll the 64 bit version instead in order to avoid loss of information.
Discontinuities in the value of this counter can occur at re initialization of the management system, and at other times as indicated by the value of ifCounterDiscontinuityTime.
[IEEE 802.3 Std], 30.5.1.1.10, aFalseCarriers.
current DESCRIPTION "Information about the external jacks attached to MAUs attached to an interface."
An entry in the table, containing information about a particular jack."
"This variable uniquely identifies the jack described by this entry from among other jacks attached to the same MAU."
SEQUENCE OF IfMauAutoNegEntry MAX ACCESS
current DESCRIPTION "Configuration and status objects for the auto negotiation function of MAUs attached to interfaces.
The ifMauAutoNegTable applies to systems in which auto negotiation is supported on one or more MAUs attached to interfaces.
Note that if auto negotiation is present and enabled, the ifMauType object reflects the result of the auto negotiation function."
INTEGER { enabled(1), disabled(2) } MAX ACCESS
Setting this object to enabled(1) will cause the interface which has the auto negotiation signaling ability to be enabled.
If the value of this object is disabled(2) then the interface will act as it would if it had no auto negotiation signaling.
Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object ifMauDefaultType.
When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by the ifMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto negotiation function.
30.6.1.1.2, aAutoNegAdminState and 30.6.1.2.2, acAutoNegAdminControl."
"A value indicating whether the remote end of the link is using auto negotiation signaling.
It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received."
[IEEE 802.3 Std], 30.6.1.1.3, aAutoNegRemoteSignaling."
"A value indicating the current status of the auto negotiation process.
The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE 802.3 Std].
[IEEE 802.3 Std], 30.6.1.1.4, aAutoNegAutoConfig."
This object has been deprecated in favour of ifMauAutoNegCapabilityBits.
A value that uniquely identifies the set of capabilities of the local auto negotiation entity.
The value is a sum which initially takes the value zero.
Then, for each capability of this interface, 2 raised to the power noted below is added to the sum.
For example, an interface which has the capability to support only 100Base TX half duplex would have a value of 32768 (2  15).
In contrast, an interface which supports both 100Base TX half duplex and and 100Base TX
full duplex would have a value of 98304 ((2  15)
this MIB may have capabilities that extend beyond the scope of this MIB.
[IEEE 802.3 Std], 30.6.1.1.5, aAutoNegLocalTechnologyAbility."
This object has been deprecated in favour of ifMauAutoNegCapAdvertisedBits.
A value that uniquely identifies the set of capabilities advertised by the local auto negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Capabilities in this object that are not available in ifMauAutoNegCapability cannot be enabled."
[IEEE 802.3 Std], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility."
This object has been deprecated in favour of ifMauAutoNegCapReceivedBits.
A value that uniquely identifies the set of capabilities received from the remote auto negotiation entity.
Refer to ifMauAutoNegCapability for a description of the possible values of this object.
Note that interfaces that support this MIB may be attached to remote auto negotiation entities which have capabilities beyond the scope of this MIB."
[IEEE 802.3 Std], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility."
"If the value of this object is set to restart(1) then this will force auto negotiation to begin link renegotiation.
If auto negotiation signaling is disabled, a write to this object has no effect.
Setting the value of this object to norestart(2) has no effect.
[IEEE 802.3 Std], 30.6.1.2.1, acAutoNegRestartAutoConfig."
"A value that uniquely identifies the set of capabilities of the local auto negotiation entity.
Note that interfaces that support
this MIB may have capabilities that extend beyond the scope of this MIB.
Note that the local auto negotiation entity may support some capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
[IEEE 802.3 Std], 30.6.1.1.5, aAutoNegLocalTechnologyAbility."
1000BASE T full duplex mode } MAX ACCESS  read write
A value that uniquely identifies the set of capabilities advertised by the local auto negotiation entity.
Capabilities in this object that are not available in ifMauAutoNegCapabilityBits cannot be enabled.
Note that the local auto negotiation entity may advertise some capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
[IEEE 802.3 Std], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility."
"A value that uniquely identifies the set of capabilities received from the remote auto negotiation entity.
Note that interfaces that support this MIB may be attached to remote auto negotiation entities which have capabilities beyond the scope of this MIB.
This is indicated by returning the bit value bOther in addition to any bit values for capabilities that are listed above."
[IEEE 802.3 Std], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility."
INTEGER { noError(1), offline(2), linkFailure(3), autoNegError(4) }
A value that identifies any local fault indications that this MAU has detected and will advertise at the next auto negotiation interaction for 1000Mbps MAUs."
[IEEE 802.3 Std], 30.6.1.1.6, aAutoNegAdvertisedTechnologyAbility."
"A value that identifies any fault indications received from the far end of a link by the local auto negotiation entity for 1000Mbps MAUs."
[IEEE 802.3 Std], 30.6.1.1.7, aAutoNegReceivedTechnologyAbility."
This entire table has been deprecated.
There have been no reported implementations of this table, and it is unlikely that there ever will be.
IEEE recommends that broadband MAU types should not be used for new installations.
Table of descriptive and status information about the broadband MAUs connected to interfaces."
An entry in the table, containing information about a single broadband MAU.
This variable uniquely identifies the interface to which the MAU described by this entry is connected."
This variable uniquely identifies the MAU connected to interface broadMauIfIndex that is described by this entry."
[IEEE 802.3 Std], 30.5.1.1.1, aMAUID."
This object indicates the type of frequency multiplexing/cabling system used to separate the transmit and receive paths for the 10BROAD36 MAU.
The value other(1) is returned if the split type is not either single or dual.
The value single(2) indicates a single cable system.
The value dual(3) indicates a dual cable system, offset normally zero.
[IEEE 802.3 Std], 30.5.1.1.8, aBbMAUXmitRcvSplitType."
This variable indicates the transmit carrier frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
[IEEE 802.3 Std], 30.5.1.1.9, aBroadbandFrequencies.xmitCarrierFrequency."
This variable indicates the translation offset frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.
[IEEE 802.3 Std], 30.5.1.1.9, aBroadbandFrequencies.translationFrequency."
} rpMauJabberTrap NOTIFICATION TYPE OBJECTS
whenever a managed repeater MAU enters the jabber state.
The agent MUST throttle the generation of consecutive rpMauJabberTraps so that there is at least a five second gap between them."
"This trap is sent whenever a managed interface MAU enters the jabber state.
The agent MUST throttle the generation of consecutive ifMauJabberTraps so that there is at least a five second gap between them."
Basic conformance group for MAUs attached to repeater ports.
This group is also the conformance specification for RFC 1515 implementations."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with 100 Mb/s or greater capability."
current DESCRIPTION "Conformance group for MAUs attached to repeater ports with managed jacks."
Basic conformance group for MAUs attached to interfaces.
This group also provides a conformance specification for RFC 1515 implementations."
This object group has been deprecated in favor of mauIfGrpHighCapacity."
ifMauAutoNegRemoteSignaling, ifMauAutoNegConfig, ifMauAutoNegCapability, ifMauAutoNegCapAdvertised, ifMauAutoNegCapReceived
This object group has been deprecated in favor of mauIfGrpAutoNeg2."
broadMauIfIndex, broadMauIndex, broadMauXmtRcvSplitType, broadMauXmtCarrierFreq, broadMauTranslationFreq } STATUS
This object group is deprecated.
There have been no reported implementations of this group, and it was felt to be unlikely that there will be any future implementations."
, ifMauDefaultType, ifMauAutoNegSupported } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with 100 Mb/s or greater capability."
ifMauAutoNegRemoteSignaling, ifMauAutoNegConfig, ifMauAutoNegCapabilityBits, ifMauAutoNegCapAdvertisedBits, ifMauAutoNegCapReceivedBits, ifMauAutoNegRestart } STATUS
current DESCRIPTION "Conformance group for MAUs attached to interfaces with managed auto negotiation."
Compliances mauModRpCompl MODULE COMPLIANCE STATUS
This compliance is deprecated and replaced by mauModRpCompl2, which corrects an oversight by allowing rpMauStatus to be implemented read only.
"Implementation of this optional group is recommended for MAUs which have 100Mb/s or greater capability."
Implementation of this optional group is recommended for MAUs which have one or more external jacks."
This compliance is deprecated and replaced by mauModIfCompl2.
"Implementation of this optional group is recommended for MAUs which have 100Mb/s capability."
"Implementation of this group is recommended for MAUs attached to interfaces."
This compliance is deprecated and replaced by mauModIfCompl3.
Implementation of this optional group is recommended for MAUs which have 100Mb/s or greater capability."
"Implementation of this group is recommended for MAUs attached to interfaces."
"Write access is not required."
current DESCRIPTION "Compliance for MAUs attached to repeater ports.
Note that compliance with this compliance statement requires compliance with the snmpRptrModCompl MODULE COMPLIANCE statement of the SNMP REPEATER MIB (RFC 2108).
"Implementation of this optional group is recommended for MAUs which have 100Mb/s or greater capability."
Implementation of this optional group is recommended for MAUs which have one or more external jacks."
"Write access is not required."
current DESCRIPTION "Compliance for MAUs attached to interfaces.
Note that compliance with this compliance statement requires compliance with the ifCompliance3 MODULE COMPLIANCE statement of the IF MIB (RFC 2863) and the dot3Compliance2 MODULE COMPLIANCE statement of the EtherLike MIB (RFC3635).
Implementation of this optional group is recommended for MAUs which have 100Mb/s or greater capability."
"Implementation of this group is recommended for MAUs attached to interfaces."
"Write access is not required."
There are a number of management objects defined in this MIB that have a MAX ACCESS clause of read write.
Setting these objects can have a serious effect on the operation of the network, including:  enabling or disabling a MAU  changing a MAU's default type  enabling, disabling or restarting autonegotiation  modifying the capabilities that a MAU advertizes during autonegotiation.
Such objects may be considered sensitive or vulnerable in some network environments.
The support for SET operations in a non secure environment without proper protection can have a negative effect on network operations.
Some of the readable objects in this MIB module (i.e., objects with a MAX ACCESS other than not accessible) may be considered sensitive or vulnerable in some network environments.
In some environments it may be undesirable to allow unauthorized parties to access statistics or status information about individual links in a network.
It is thus important to control
even GET and/or NOTIFY access to these objects and possibly to even encrypt the values of these objects when sending them over the network via SNMP.
SNMP versions prior to SNMPv3 did not include adequate security.
Even if the network itself is secure (for example by using IPSec), even then, there is no control as to who on the secure network is allowed to access and
the objects in this MIB module.
It is recommended that the implementors consider the security features as provided by the SNMPv3 framework (see [RFC3410], section 8), including full support for the SNMPv3 cryptographic mechanisms (for authentication and privacy).
Furthermore, deployment of SNMP versions prior to SNMPv3 is NOT RECOMMENDED.
Instead, it is RECOMMENDED to deploy SNMPv3 and to enable cryptographic security.
It is then a customer/operator responsibility to ensure that the SNMP entity giving access to an instance of this MIB module is properly configured to give access to the objects only to those principals (users) that have legitimate rights to indeed GET or SET
This section enumerates changes made to RFC 2668 to produce this document.
(1)   Updated references to the IEEE 802.3 standard to refer to the 2002 edition.
(2)   Added reference to 802.3ae.
(3)   Updated WG e mail address.
The following DESCRIPTION clauses have been updated to reflect behavior on 10 Gb/s interfaces: ifMauMediaAvailable.
(5)   OBJECT IDENTITY definitions have been added for 10 gigabit MAU types.
(6)   Enumerations for 'pmdLinkFault', 'wisFrameLoss', 'wisSignalLoss', pcsLinkFault', excessiveBER', 'dxsLinkFault' and 'pxsLinkFault' have been added for the ifMauMediaAvailable object.
(7)   ifMauTypeListBits has been extended with bits for the 10 Gb/s MAU types.
The MODULE IDENTITY clause has been updated to reflect the changes in the MIB module.
(9)   MIB boilerplate in section 2 has been updated to the latest approved text.
(10)  Added 64 bit version of ifMauFalseCarriers, and updated compliances accordingly.
(11)  Added section on mapping of IEEE managed objects to the objects in this MIB module.
Changes between RFC 2239 and RFC 2668
This section enumerates the changes made to RFC 2239 to produce RFC 2668.
The MODULE IDENTITY has been updated to reflect the changes in the MIB.
(2)   OBJECT IDENTITY definitions have been added for gigabit MAU types.
The ifMauTypeList, ifMauAutoNegCapability, ifMauAutoNegCapAdvertised and ifMauAutoNegCapReceived objects have been deprecated and replaced by ifMauTypeListBits, ifMauAutoNegCapabilityBits, ifMauAutoNegCapAdvertisedBits and ifMauAutoNegCapReceivedBits.
(4)   Two new objects, ifMauAutoNegRemoteFaultAdvertised and ifMauAutoNegRemoteFaultReceived have been added.
Enumerations for 'offline' and 'autoNegError' have been added for the rpMauMediaAvailable and ifMauMediaAvailable objects.
The broadMauBasicTable and mauBroadBasic object group have been deprecated.
The mauIfGrp100Mbs and mauIfGrpAutoNeg object groups have been deprecated and replaced by mauIfGrpHighCapacity and mauIfGrpAutoNeg2.
A new object group, mauIfGrpAutoNeg1000Mbps, has been added.
The mauModIfCompl and mauModRpCompl compliances have been deprecated and replaced by mauModIfCompl2 and mauModRpCompl2.
(10)  Added section on relationship to RFC 2239.
(11)  Updated the SNMP Network Management Framework boilerplate.
(12)  Refer to the Interfaces MIB, rather than the interfaces group of MIB II.
(13)  Updated references to refer to latest edition of IEEE 802.3.
An intellectual property notice was added, as required by RFC 2026.
