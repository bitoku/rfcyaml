- contents:
  - '        RTP and the Datagram Congestion Control Protocol (DCCP)

    '
  title: __initial_text__
- contents:
  - "Abstract\n   The Real-time Transport Protocol (RTP) is a widely used transport
    for\n   real-time multimedia on IP networks.  The Datagram Congestion Control\n
    \  Protocol (DCCP) is a transport protocol that provides desirable\n   services
    for real-time applications.  This memo specifies a mapping\n   of RTP onto DCCP,
    along with associated signalling, such that real-\n   time applications can make
    use of the services provided by DCCP.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc5762.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2010 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................3\n
    \  2. Rationale .......................................................3\n   3.
    Conventions Used in This Memo ...................................4\n   4. RTP
    over DCCP: Framing ..........................................4\n      4.1. RTP
    Data Packets ...........................................4\n      4.2. RTP Control
    Packets ........................................5\n      4.3. Multiplexing Data
    and Control ..............................7\n      4.4. RTP Sessions and DCCP
    Connections ..........................7\n      4.5. RTP Profiles ...............................................8\n
    \  5. RTP over DCCP: Signalling using SDP .............................8\n      5.1.
    Protocol Identification ....................................8\n      5.2. Service
    Codes .............................................10\n      5.3. Connection Management
    .....................................11\n      5.4. Multiplexing Data and Control
    .............................11\n      5.5. Example ...................................................11\n
    \  6. Security Considerations ........................................12\n   7.
    IANA Considerations ............................................13\n   8. Acknowledgements
    ...............................................14\n   9. References .....................................................14\n
    \     9.1. Normative References ......................................14\n      9.2.
    Informative References ....................................15\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Real-time Transport Protocol (RTP) [1] is widely used
    in video\n   streaming, telephony, and other real-time networked applications.\n
    \  RTP can run over a range of lower-layer transport protocols, and the\n   performance
    of an application using RTP is heavily influenced by the\n   choice of lower-layer
    transport.  The Datagram Congestion Control\n   Protocol (DCCP) [2] is a transport
    protocol that provides desirable\n   properties for real-time applications running
    on unmanaged best-\n   effort IP networks.  This memo describes how RTP can be
    framed for\n   transport using DCCP, and discusses some of the implications of
    such\n   a framing.  It also describes how the Session Description Protocol\n
    \  (SDP) [3] can be used to signal such sessions.\n   The remainder of this memo
    is structured as follows: it begins with a\n   rationale for the work in Section
    2, describing why a mapping of RTP\n   onto DCCP is needed.  Following a description
    of the conventions used\n   in this memo in Section 3, the specification begins
    in Section 4 with\n   the definition of how RTP packets are framed within DCCP.
    \ Associated\n   signalling is described in Section 5.  Security considerations
    are\n   discussed in Section 6, and IANA considerations in Section 7.\n"
  title: 1.  Introduction
- contents:
  - "2.  Rationale\n   With the widespread adoption of RTP have come concerns that
    many\n   real-time applications do not implement congestion control, leading\n
    \  to the potential for congestion collapse of the network [15].  The\n   designers
    of RTP recognised this issue, stating in RFC 3551 that [4]:\n      If best-effort
    service is being used, RTP receivers SHOULD monitor\n      packet loss to ensure
    that the packet loss rate is within\n      acceptable parameters.  Packet loss
    is considered acceptable if a\n      TCP flow across the same network path and
    experiencing the same\n      network conditions would achieve an average throughput,
    measured\n      on a reasonable timescale, that is not less than the RTP flow
    is\n      achieving.  This condition can be satisfied by implementing\n      congestion
    control mechanisms to adapt the transmission rate (or\n      the number of layers
    subscribed for a layered multicast session),\n      or by arranging for a receiver
    to leave the session if the loss\n      rate is unacceptably high.\n   While the
    goals are clear, the development of TCP friendly congestion\n   control that can
    be used with RTP and real-time media applications is\n   an open research question
    with many proposals for new algorithms, but\n   little deployment experience.\n
    \  Two approaches have been used to provide congestion control for RTP:\n   1)
    develop RTP extensions that incorporate congestion control; and 2)\n   provide
    mechanisms for running RTP over congestion-controlled\n   transport protocols.
    \ An example of the first approach can be found\n   in [16], extending RTP to
    incorporate feedback information such that\n   TCP Friendly Rate Control (TFRC)
    [17] can be implemented at the\n   application level.  This will allow congestion
    control to be added to\n   existing applications without operating system or network
    support,\n   and it offers the flexibility to experiment with new congestion\n
    \  control algorithms as they are developed.  Unfortunately, it also\n   passes
    the complexity of implementing congestion control onto\n   application authors,
    a burden which many would prefer to avoid.\n   The second approach is to run RTP
    on a lower-layer transport protocol\n   that provides congestion control.  One
    possibility is to run RTP over\n   TCP, as defined in [5], but the reliable nature
    of TCP and the\n   dynamics of its congestion control algorithm make this inappropriate\n
    \  for most interactive real-time applications (the Stream Control\n   Transmission
    Protocol (SCTP) is inappropriate for similar reasons).\n   A better fit for such
    applications may be to run RTP over DCCP, since\n   DCCP offers unreliable packet
    delivery and a choice of congestion\n   control.  This gives applications the
    ability to tailor the transport\n   to their needs, taking advantage of better
    congestion control\n   algorithms as they come available, while passing the complexity
    of\n   implementation to the operating system.  If DCCP should come to be\n   widely
    available, it is believed these will be compelling advantages.\n   Accordingly,
    this memo defines a mapping of RTP onto DCCP.\n"
  title: 2.  Rationale
- contents:
  - "3.  Conventions Used in This Memo\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in RFC
    2119 [6].\n"
  title: 3.  Conventions Used in This Memo
- contents:
  - "4.  RTP over DCCP: Framing\n   The following section defines how RTP and RTP
    Control Protocol (RTCP)\n   packets can be framed for transport using DCCP.  It
    also describes\n   the differences between RTP sessions and DCCP connections,
    and the\n   impact these have on the design of applications.\n"
  - contents:
    - "4.1.  RTP Data Packets\n   Each RTP data packet MUST be conveyed in a single
      DCCP datagram.\n   Fields in the RTP header MUST be interpreted according to
      the RTP\n   specification, and any applicable RTP Profile and Payload Format.\n
      \  Header processing is not affected by DCCP framing (in particular,\n   note
      that the semantics of the RTP sequence number and the DCCP\n   sequence number
      are not compatible, and the value of one cannot be\n   inferred from the other).\n
      \  A DCCP connection is opened when an end system joins an RTP session,\n   and
      it remains open for the duration of the session.  To ensure NAT\n   bindings
      are kept open, an end system SHOULD send a zero-length DCCP-\n   Data packet
      once every 15 seconds during periods when it has no other\n   data to send.
      \ This removes the need for RTP no-op packets [18], and\n   similar application-level
      keepalives, when using RTP over DCCP.  This\n   application-level keepalive
      does not need to be sent if it is known\n   that the DCCP CCID in use provides
      a transport-level keepalive, or if\n   the application can determine that there
      are no NAT devices on the\n   path.\n   RTP data packets MUST obey the dictates
      of DCCP congestion control.\n   In some cases, the congestion control will require
      a sender to send\n   at a rate below that which the payload format would otherwise
      use.\n   To support this, an application could use either a rate-adaptive\n
      \  payload format, or a range of payload formats (allowing it to switch\n   to
      a lower rate format if necessary).  Details of the rate adaptation\n   policy
      for particular payload formats are outside the scope of this\n   memo (but see
      [19] and [20] for guidance).\n   RTP extensions that provide application-level
      congestion control\n   (e.g., [16]) will conflict with DCCP congestion control,
      and MUST NOT\n   be used.\n   DCCP allows an application to choose the checksum
      coverage, using a\n   partial checksum to allow an application to receive packets
      with\n   corrupt payloads.  Some RTP Payload Formats (e.g., [21]) can make use\n
      \  of this feature in conjunction with payload-specific mechanisms to\n   improve
      performance when operating in environments with frequent non-\n   congestive
      packet corruption.  If such a payload format is used, an\n   RTP end system
      MAY enable partial checksums at the DCCP layer, in\n   which case the checksum
      MUST cover at least the DCCP and RTP headers\n   to ensure packets are correctly
      delivered.  Partial checksums MUST\n   NOT be used unless supported by mechanisms
      in the RTP payload format.\n"
    title: 4.1.  RTP Data Packets
  - contents:
    - "4.2.  RTP Control Packets\n   The RTP Control Protocol (RTCP) is used in the
      standard manner with\n   DCCP.  RTCP packets are grouped into compound packets,
      as described\n   in Section 6.1 of [1], and each compound RTCP packet is transported\n
      \  in a single DCCP datagram.\n   The usual RTCP timing rules apply, with the
      additional constraint\n   that RTCP packets MUST obey the DCCP congestion control
      algorithm\n   negotiated for the connection.  This can prevent a participant
      from\n   sending an RTCP packet at the expiration of the RTCP transmission\n
      \  timer if there is insufficient network capacity available.  In such\n   cases
      the RTCP packet is delayed and sent at the earliest possible\n   instant when
      capacity becomes available.  The actual time the RTCP\n   packet was sent is
      then used as the basis for calculating the next\n   RTCP transmission time.\n
      \  RTCP packets comprise only a small fraction of the total traffic in\n   an
      RTP session.  Accordingly, it is expected that delays in their\n   transmission
      due to congestion control will not be common, provided\n   the configured nominal
      \"session bandwidth\" (see Section 6.2 of [1])\n   is in line with the bandwidth
      achievable on the DCCP connection.  If,\n   however, the capacity of the DCCP
      connection is significantly below\n   the nominal session bandwidth, RTCP packets
      may be delayed enough for\n   participants to time out due to apparent inactivity.
      \ In such cases,\n   the session parameters SHOULD be re-negotiated to more
      closely match\n   the available capacity, for example by performing a re-invite
      with an\n   updated \"b=\" line when using the Session Initiation Protocol [22]
      for\n   signalling.\n      Note: Since the nominal session bandwidth is chosen
      based on media\n      codec capabilities, a session where the nominal bandwidth
      is much\n      larger than the available bandwidth will likely become unusable\n
      \     due to constraints on the media channel, and so require\n      negotiation
      of a lower bandwidth codec, before it becomes unusable\n      due to constraints
      on the RTCP channel.\n   As noted in Section 17.1 of [2], there is the potential
      for overlap\n   between information conveyed in RTCP packets and that conveyed
      in\n   DCCP acknowledgement options.  In general this is not an issue since\n
      \  RTCP packets contain media-specific data that is not present in DCCP\n   acknowledgement
      options, and DCCP options contain network-level data\n   that is not present
      in RTCP.  Indeed, there is no overlap between the\n   five RTCP packet types
      defined in the RTP specification [1] and the\n   standard DCCP options [2].
      \ There are, however, cases where overlap\n   does occur: most clearly between
      the Loss RLE Report Blocks defined\n   as part of the RTCP Extended Reports
      [23] and the DCCP Ack Vector\n   option.  If there is overlap between RTCP report
      packets and DCCP\n   acknowledgements, an application SHOULD use either RTCP
      feedback or\n   DCCP acknowledgements, but not both (use of both types of feedback\n
      \  will waste available network capacity, but is not otherwise harmful).\n"
    title: 4.2.  RTP Control Packets
  - contents:
    - "4.3.  Multiplexing Data and Control\n   The obvious mapping of RTP onto DCCP
      creates two DCCP connections for\n   each RTP flow: one for RTP data packets
      and one for RTP control\n   packets.  A frequent criticism of RTP relates to
      the number of ports\n   it uses, since large telephony gateways can support
      more than 32768\n   RTP flows between pairs of gateways, and so run out of UDP
      ports.  In\n   addition, use of multiple ports complicates NAT traversal.  For
      these\n   reasons, it is RECOMMENDED that the RTP and RTCP traffic for a single\n
      \  RTP session is multiplexed onto a single DCCP connection following\n   the
      guidelines in [7], where possible (it may not be possible in all\n   circumstances,
      for example when translating from an RTP stream over a\n   non-DCCP transport
      that uses conflicting RTP payload types and RTCP\n   packet types).\n"
    title: 4.3.  Multiplexing Data and Control
  - contents:
    - "4.4.  RTP Sessions and DCCP Connections\n   An end system SHOULD NOT assume
      that it will observe only a single\n   RTP synchronisation source (SSRC) because
      it is using DCCP framing.\n   An RTP session can span any number of transport
      connections, and can\n   include RTP mixers or translators bringing other participants
      into\n   the session.  The use of a unicast DCCP connection does not imply\n
      \  that the RTP session will have only two participants, and RTP end\n   systems
      SHOULD assume that multiple synchronisation sources may be\n   observed when
      using RTP over DCCP, unless otherwise signalled.\n   An RTP translator bridging
      multiple DCCP connections to form a single\n   RTP session needs to be aware
      of the congestion state of each DCCP\n   connection, and must adapt the media
      to the available capacity of\n   each.  The Codec Control Messages defined in
      [24] may be used to\n   signal congestion state to the media senders, allowing
      them to adapt\n   their transmission.  Alternatively, media transcoding may
      be used to\n   perform adaptation: this is computationally expensive, induces
      delay,\n   and generally gives poor-quality results.  Depending on the payload,\n
      \  it might also be possible to use some form of scalable coding.\n   A single
      RTP session may also span a DCCP connection and some other\n   type of transport
      connection.  An example might be an RTP over DCCP\n   connection from an RTP
      end system to an RTP translator, with an RTP\n   over UDP/IP multicast group
      on the other side of the translator.  A\n   second example might be an RTP over
      DCCP connection that links Public\n   Switched Telephone Network (PSTN) gateways.
      \ The issues for such an\n   RTP translator are similar to those when linking
      two DCCP\n   connections, except that the congestion control algorithms on either\n
      \  side of the translator may not be compatible.  Implementation of\n   effective
      translators for such an environment is non-trivial.\n"
    title: 4.4.  RTP Sessions and DCCP Connections
  - contents:
    - "4.5.  RTP Profiles\n   In general, there is no conflict between new RTP profiles
      and DCCP\n   framing, and most RTP profiles can be negotiated for use over DCCP\n
      \  with the following exceptions:\n   o  An RTP profile that is intolerant of
      packet corruption may\n      conflict with the DCCP partial checksum feature.
      \ An example of\n      this is the integrity protection provided by the RTP/SAVP
      profile,\n      which cannot be used in conjunction with DCCP partial checksums.\n
      \  o  An RTP profile that mandates a particular non-DCCP lower-layer\n      transport
      will conflict with DCCP.\n   RTP profiles that fall under these exceptions SHOULD
      NOT be used with\n   DCCP unless the conflicting features can be disabled.\n
      \  Of the profiles currently defined, the RTP Profile for Audio and\n   Video
      Conferences with Minimal Control [4], the Secure Real-time\n   Transport Protocol
      [8], the Extended RTP Profile for RTCP-based\n   Feedback [9], and the Extended
      Secure RTP Profile for RTCP-based\n   Feedback [10] MAY be used with DCCP (noting
      the potential conflict\n   between DCCP partial checksums and the integrity
      protection provided\n   by the secure RTP variants -- see Section 6).\n"
    title: 4.5.  RTP Profiles
  title: '4.  RTP over DCCP: Framing'
- contents:
  - "5.  RTP over DCCP: Signalling using SDP\n   The Session Description Protocol
    (SDP) [3] and the offer/answer model\n   [11] are widely used to negotiate RTP
    sessions (for example, using\n   the Session Initiation Protocol [22]).  This
    section describes how\n   SDP is used to signal RTP sessions running over DCCP.\n"
  - contents:
    - "5.1.  Protocol Identification\n   SDP uses a media (\"m=\") line to convey
      details of the media format\n   and transport protocol used.  The ABNF syntax
      of a media line is as\n   follows (from [3]):\n       media-field = %x6d \"=\"
      media SP port [\"/\" integer] SP proto\n                     1*(SP fmt) CRLF\n
      \  The proto field denotes the transport protocol used for the media,\n   while
      the port indicates the transport port to which the media is\n   sent.  Following
      [5] and [12], this memo defines these five values of\n   the proto field to
      indicate media transported using DCCP:\n       DCCP\n       DCCP/RTP/AVP\n       DCCP/RTP/SAVP\n
      \      DCCP/RTP/AVPF\n       DCCP/RTP/SAVPF\n   The \"DCCP\" protocol identifier
      is similar to the \"UDP\" and \"TCP\"\n   protocol identifiers and denotes the
      DCCP transport protocol [2], but\n   not its upper-layer protocol.  An SDP \"m=\"
      line that specifies the\n   \"DCCP\" protocol MUST further qualify the application-layer
      protocol\n   using a \"fmt\" identifier (the \"fmt\" namespace is managed in
      the same\n   manner as for the \"UDP\" protocol identifier).  A single DCCP
      port is\n   used, as denoted by the port field in the media line.  The \"DCCP\"\n
      \  protocol identifier MUST NOT be used to signal RTP sessions running\n   over
      DCCP; those sessions MUST use a protocol identifier of the form\n   \"DCCP/RTP/...\"
      as described below.\n   The \"DCCP/RTP/AVP\" protocol identifier refers to RTP
      using the RTP\n   Profile for Audio and Video Conferences with Minimal Control
      [4]\n   running over DCCP.\n   The \"DCCP/RTP/SAVP\" protocol identifier refers
      to RTP using the\n   Secure Real-time Transport Protocol [8] running over DCCP.\n
      \  The \"DCCP/RTP/AVPF\" protocol identifier refers to RTP using the\n   Extended
      RTP Profile for RTCP-based Feedback [9] running over DCCP.\n   The \"DCCP/RTP/SAVPF\"
      protocol identifier refers to RTP using the\n   Extended Secure RTP Profile
      for RTCP-based Feedback [10] running over\n   DCCP.\n   RTP payload formats
      used with the \"DCCP/RTP/AVP\", \"DCCP/RTP/SAVP\",\n   \"DCCP/RTP/AVPF\", and
      \"DCCP/RTP/SAVPF\" protocol identifiers MUST use\n   the payload type number
      as their \"fmt\" value.  If the payload type\n   number is dynamically assigned,
      an additional \"rtpmap\" attribute MUST\n   be included to specify the format
      name and parameters as defined by\n   the media type registration for the payload
      format.\n   DCCP port 5004 is registered for use by the RTP profiles listed\n
      \  above, and SHOULD be the default port chosen by applications using\n   those
      profiles.  If multiple RTP sessions are active from a host,\n   even-numbered
      ports in the dynamic range SHOULD be used for the other\n   sessions.  If RTCP
      is to be sent on a separate DCCP connection to\n   RTP, the RTCP connection
      SHOULD use the next higher destination port\n   number, unless an alternative
      DCCP port is signalled using the\n   \"a=rtcp:\" attribute [13].  For improved
      interoperability, \"a=rtcp:\"\n   SHOULD be used whenever an alternate DCCP
      port is used.\n"
    title: 5.1.  Protocol Identification
  - contents:
    - "5.2.  Service Codes\n   In addition to the port number, specified on the SDP
      \"m=\" line, a\n   DCCP connection has an associated service code.  A single
      new SDP\n   attribute (\"dccp-service-code\") is defined to signal the DCCP
      service\n   code according to the following ABNF [14]:\n       dccp-service-attr
      = %x61 \"=dccp-service-code:\" service-code\n       service-code      = hex-sc
      / decimal-sc / ascii-sc\n       hex-sc            = %x53 %x43 \"=\" %x78 *HEXDIG\n
      \      decimal-sc        = %x53 %x43 \"=\"  *DIGIT\n       ascii-sc          =
      %x53 %x43 \":\"  *sc-char\n       sc-char           = %d42-43 / %d45-47 / %d63-90
      / %d95 / %d97-122\n   where DIGIT and HEXDIG are as defined in [14].  The service
      code is\n   interpreted as defined in Section 8.1.2 of [2] and may be specified\n
      \  using either the hexadecimal, decimal, or ASCII formats.  A parser\n   MUST
      interpret service codes according to their numeric value,\n   independent of
      the format used to represent them in SDP.\n   The following DCCP service codes
      are registered for use with RTP:\n   o  SC:RTPA (equivalently SC=1381257281
      or SC=x52545041): an RTP\n      session conveying audio data (and OPTIONAL multiplexed
      RTCP)\n   o  SC:RTPV (equivalently SC=1381257302 or SC=x52545056): an RTP\n
      \     session conveying video data (and OPTIONAL multiplexed RTCP)\n   o  SC:RTPT
      (equivalently SC=1381257300 or SC=x52545054): an RTP\n      session conveying
      text media (and OPTIONAL multiplexed RTCP)\n   o  SC:RTPO (equivalently SC=1381257295
      or SC=x5254504f): an RTP\n      session conveying any other type of media (and
      OPTIONAL\n      multiplexed RTCP)\n   o  SC:RTCP (equivalently SC=1381253968
      or SC=x52544350): an RTCP\n      connection, separate from the corresponding
      RTP\n   To ease the job of middleboxes, applications SHOULD use these service\n
      \  codes to identify RTP sessions running within DCCP.  The service code\n   SHOULD
      match the top-level media type signalled for the session\n   (i.e., the SDP
      \"m=\" line), with the exception connections using media\n   types other than
      audio, video, or text, which use SC:RTPO, and\n   connections that transport
      only RTCP packets, which use SC:RTCP.\n   The \"a=dccp-service-code:\" attribute
      is a media-level attribute that\n   is not subject to the charset attribute.\n"
    title: 5.2.  Service Codes
  - contents:
    - "5.3.  Connection Management\n   The \"a=setup:\" attribute indicates which
      of the endpoints should\n   initiate the DCCP connection establishment (i.e.,
      send the initial\n   DCCP-Request packet).  The \"a=setup:\" attribute MUST
      be used in a\n   manner comparable with [12], except that DCCP connections are
      being\n   initiated rather than TCP connections.\n   After the initial offer/answer
      exchange, the endpoints may decide to\n   re-negotiate various parameters.  The
      \"a=connection:\" attribute MUST\n   be used in a manner compatible with [12]
      to decide whether a new DCCP\n   connection needs to be established as a result
      of subsequent offer/\n   answer exchanges, or if the existing connection should
      still be used.\n"
    title: 5.3.  Connection Management
  - contents:
    - "5.4.  Multiplexing Data and Control\n   A single DCCP connection can be used
      to transport multiplexed RTP and\n   RTCP packets.  Such multiplexing MUST be
      signalled using an \"a=rtcp-\n   mux\" attribute according to [7].  If multiplexed
      RTP and RTCP are not\n   to be used, then the \"a=rtcp-mux\" attribute MUST
      NOT be present in\n   the SDP offer, and a separate DCCP connection MUST be
      opened to\n   transport the RTCP data on a different DCCP port.\n"
    title: 5.4.  Multiplexing Data and Control
  - contents:
    - "5.5.  Example\n   An offerer at 192.0.2.47 signals its availability for an
      H.261 video\n   session, using RTP/AVP over DCCP with service code \"RTPV\"
      (using the\n   hexadecimal encoding of the service code in the SDP).  RTP and
      RTCP\n   packets are multiplexed onto a single DCCP connection:\n       v=0\n
      \      o=alice 1129377363 1 IN IP4 192.0.2.47\n       s=-\n       c=IN IP4 192.0.2.47\n
      \      t=0 0\n       m=video 5004 DCCP/RTP/AVP 99\n       a=rtcp-mux\n       a=rtpmap:99
      h261/90000\n       a=dccp-service-code:SC=x52545056\n       a=setup:passive\n
      \      a=connection:new\n   An answerer at 192.0.2.128 receives this offer and
      responds with the\n   following answer:\n       v=0\n       o=bob 1129377364
      1 IN IP4 192.0.2.128\n       s=-\n       c=IN IP4 192.0.2.128\n       t=0 0\n
      \      m=video 9 DCCP/RTP/AVP 99\n       a=rtcp-mux\n       a=rtpmap:99 h261/90000\n
      \      a=dccp-service-code:SC:RTPV\n       a=setup:active\n       a=connection:new\n
      \  The end point at 192.0.2.128 then initiates a DCCP connection to port\n   5004
      at 192.0.2.47.  DCCP port 5004 is used for both the RTP and RTCP\n   data, and
      port 5005 is unused.  The textual encoding of the service\n   code is used in
      the answer, and represents the same service code as\n   in the offer.\n"
    title: 5.5.  Example
  title: '5.  RTP over DCCP: Signalling using SDP'
- contents:
  - "6.  Security Considerations\n   The security considerations in the RTP specification
    [1] and any\n   applicable RTP profile (e.g., [4], [8], [9], or [10]) or payload\n
    \  format apply when transporting RTP over DCCP.\n   The security considerations
    in the DCCP specification [2] apply.\n   The SDP signalling described in Section
    5 is subject to the security\n   considerations of [3], [11], [12], [5], and [7].\n
    \  The provision of effective congestion control for RTP through use of\n   DCCP
    is expected to help reduce the potential for denial of service\n   present when
    RTP flows ignore the advice in [1] to monitor packet\n   loss and reduce their
    sending rate in the face of persistent\n   congestion.\n   There is a potential
    conflict between the Secure RTP profiles ([8],\n   [10]) and the DCCP partial
    checksum option, since these profiles\n   introduce, and recommend the use of,
    message authentication for RTP\n   and RTCP packets.  Message authentication codes
    of the type used by\n   these profiles cannot be used with partial checksums,
    since any bit\n   error in the DCCP packet payload will cause the authentication
    check\n   to fail.  Accordingly, DCCP partial checksums SHOULD NOT be used in\n
    \  conjunction with Secure Real-time Transport Protocol (SRTP)\n   authentication.
    \ The confidentiality features of the basic RTP\n   specification cannot be used
    with DCCP partial checksums, since bit\n   errors propagate.  Also, despite the
    fact that bit errors do not\n   propagate when using AES in counter mode, the
    Secure RTP profiles\n   SHOULD NOT be used with DCCP partial checksums, since
    the profiles\n   require authentication for security, and authentication is\n
    \  incompatible with partial checksums.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  IANA Considerations\n   The following SDP \"proto\" field identifiers have
    been registered (see\n   Section 5.1):\n      Type          SDP Name                                Reference\n
    \     ----          --------                                ---------\n      proto
    \        DCCP                                    [RFC5762]\n                    DCCP/RTP/AVP
    \                           [RFC5762]\n                    DCCP/RTP/SAVP                           [RFC5762]\n
    \                   DCCP/RTP/AVPF                           [RFC5762]\n                    DCCP/RTP/SAVPF
    \                         [RFC5762]\n   The following new SDP attribute (\"att-field\")
    has been registered:\n      Contact name: Colin Perkins <csp@csperkins.org>\n
    \     Attribute name: dccp-service-code\n      Long-form attribute name in English:
    DCCP service code\n      Type of attribute: Media level.\n      Subject to the
    charset attribute?  No.\n      Purpose of the attribute: see RFC 5762, Section
    5.2\n      Allowed attribute values: see RFC 5762, Section 5.2\n   The following
    DCCP service code values have been registered (see\n   Section 5.2):\n      1381257281
    \   RTPA    RTP session conveying audio     [RFC5762]\n                             data
    (and associated RTCP)\n      1381257302    RTPV    RTP session conveying video
    \    [RFC5762]\n                             data (and associated RTCP)\n      1381257300
    \   RTPT    RTP session conveying text      [RFC5762]\n                             media
    (and associated RTCP)\n      1381257295    RTPO    RTP session conveying other
    \    [RFC5762]\n                             media (and associated RTCP)\n      1381253968
    \   RTCP    RTCP connection, separate from  [RFC5762]\n                             the
    corresponding RTP\n   The following DCCP ports have been registered (see Section
    5.1):\n      avt-profile-1 5004/dccp  RTP media data       [RFC3551, RFC5762]\n
    \     avt-profile-2 5005/dccp  RTP control protocol [RFC3551, RFC5762]\n   Note:
    ports 5004/tcp, 5004/udp, 5005/tcp, and 5005/udp have existing\n   registrations,
    but incorrect descriptions and references.  The IANA\n   has updated the existing
    registrations as follows:\n      avt-profile-1 5004/tcp   RTP media data       [RFC3551,
    RFC4571]\n      avt-profile-1 5004/udp   RTP media data       [RFC3551]\n      avt-profile-2
    5005/tcp   RTP control protocol [RFC3551, RFC4571]\n      avt-profile-2 5005/udp
    \  RTP control protocol [RFC3551]\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Acknowledgements\n   This work was supported in part by the UK Engineering
    and Physical\n   Sciences Research Council.  Thanks are due to Philippe Gentric,\n
    \  Magnus Westerlund, Sally Floyd, Dan Wing, Gorry Fairhurst, Stephane\n   Bortzmeyer,
    Arjuna Sathiaseelan, Tom Phelan, Lars Eggert, Eddie\n   Kohler, Miguel Garcia,
    and the other members of the DCCP working\n   group for their comments.\n"
  title: 8.  Acknowledgements
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [1]   Schulzrinne, H., Casner, S., Frederick,
      R., and V. Jacobson,\n         \"RTP: A Transport Protocol for Real-Time Applications\",
      STD 64,\n         RFC 3550, July 2003.\n   [2]   Kohler, E., Handley, M., and
      S. Floyd, \"Datagram Congestion\n         Control Protocol (DCCP)\", RFC 4340,
      March 2006.\n   [3]   Handley, M., Jacobson, V., and C. Perkins, \"SDP: Session\n
      \        Description Protocol\", RFC 4566, July 2006.\n   [4]   Schulzrinne,
      H. and S. Casner, \"RTP Profile for Audio and Video\n         Conferences with
      Minimal Control\", STD 65, RFC 3551, July 2003.\n   [5]   Lazzaro, J., \"Framing
      Real-time Transport Protocol (RTP) and\n         RTP Control Protocol (RTCP)
      Packets over Connection-Oriented\n         Transport\", RFC 4571, July 2006.\n
      \  [6]   Bradner, S., \"Key words for use in RFCs to Indicate Requirement\n
      \        Levels\", BCP 14, RFC 2119, March 1997.\n   [7]   Perkins, C. and M.
      Westerlund, \"Multiplexing RTP Data and\n         Control Packets on a Single
      Port\", RFC 5761, April 2010.\n   [8]   Baugher, M., McGrew, D., Naslund, M.,
      Carrara, E., and K.\n         Norrman, \"The Secure Real-time Transport Protocol
      (SRTP)\",\n         RFC 3711, March 2004.\n   [9]   Ott, J., Wenger, S., Sato,
      N., Burmeister, C., and J. Rey,\n         \"Extended RTP Profile for Real-time
      Transport Control Protocol\n         (RTCP)-Based Feedback (RTP/AVPF)\", RFC
      4585, July 2006.\n   [10]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile
      for Real-\n         time Transport Control Protocol (RTCP)-Based Feedback (RTP/\n
      \        SAVPF)\", RFC 5124, February 2008.\n   [11]  Rosenberg, J. and H. Schulzrinne,
      \"An Offer/Answer Model with\n         Session Description Protocol (SDP)\",
      RFC 3264, June 2002.\n   [12]  Yon, D. and G. Camarillo, \"TCP-Based Media Transport
      in the\n         Session Description Protocol (SDP)\", RFC 4145, September 2005.\n
      \  [13]  Huitema, C., \"Real Time Control Protocol (RTCP) attribute in\n         Session
      Description Protocol (SDP)\", RFC 3605, October 2003.\n   [14]  Crocker, D.
      and P. Overell, \"Augmented BNF for Syntax\n         Specifications: ABNF\",
      STD 68, RFC 5234, January 2008.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [15]  Floyd, S. and J. Kempf, \"IAB Concerns
      Regarding Congestion\n         Control for Voice Traffic in the Internet\",
      RFC 3714,\n         March 2004.\n   [16]  Gharai, L., \"RTP with TCP Friendly
      Rate Control\", Work\n         in Progress, July 2007.\n   [17]  Floyd, S.,
      Handley, M., Padhye, J., and J. Widmer, \"TCP\n         Friendly Rate Control
      (TFRC): Protocol Specification\",\n         RFC 5348, September 2008.\n   [18]
      \ Andreasen, F., Oran, D., and D. Wing, \"A No-Op Payload Format\n         for
      RTP\", Work in Progress, May 2005.\n   [19]  Phelan, T., \"Strategies for Streaming
      Media Applications Using\n         TCP-Friendly Rate  Control\", Work in Progress,
      July 2007.\n   [20]  Phelan, T., \"Datagram Congestion Control Protocol (DCCP)
      User\n         Guide\", Work in Progress, April 2005.\n   [21]  Sjoberg, J.,
      Westerlund, M., Lakaniemi, A., and Q. Xie, \"RTP\n         Payload Format and
      File Storage Format for the Adaptive Multi-\n         Rate (AMR) and Adaptive
      Multi-Rate Wideband (AMR-WB) Audio\n         Codecs\", RFC 4867, April 2007.\n
      \  [22]  Rosenberg, J., Schulzrinne, H., Camarillo, G., Johnston, A.,\n         Peterson,
      J., Sparks, R., Handley, M., and E. Schooler, \"SIP:\n         Session Initiation
      Protocol\", RFC 3261, June 2002.\n   [23]  Friedman, T., Caceres, R., and A.
      Clark, \"RTP Control Protocol\n         Extended Reports (RTCP XR)\", RFC 3611,
      November 2003.\n   [24]  Wenger, S., Chandra, U., Westerlund, M., and B. Burman,
      \"Codec\n         Control Messages in the RTP Audio-Visual Profile with Feedback\n
      \        (AVPF)\", Work in Progress, October 2007.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Author's Address\n   Colin Perkins\n   University of Glasgow\n   Department of
    Computing Science\n   Glasgow  G12 8QQ\n   UK\n   EMail: csp@csperkins.org\n"
  title: Author's Address
