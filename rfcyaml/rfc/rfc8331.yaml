- contents:
  - "                            RTP Payload for\n       Society of Motion Picture
    and Television Engineers (SMPTE)\n                        ST 291-1 Ancillary Data\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This memo describes a Real-time Transport Protocol (RTP) payload\n
    \  format for the Society of Motion Picture and Television Engineers\n   (SMPTE)
    ancillary space (ANC) data, as defined by SMPTE ST 291-1.\n   SMPTE ANC data is
    generally used along with professional video\n   formats to carry a range of ancillary
    data types, including time\n   code, Closed Captioning, and the Active Format
    Description (AFD).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8331.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n     1.1.  Requirements Language . . . . . . . . . . . . . . .
    . . .   3\n   2.  RTP Payload Format for SMPTE ST 291 Ancillary Data  . . . .
    .   4\n     2.1.  Payload Header Definitions  . . . . . . . . . . . . . . .   5\n
    \  3.  Payload Format Parameters . . . . . . . . . . . . . . . . . .  11\n     3.1.
    \ Media Type Definition . . . . . . . . . . . . . . . . . .  11\n   4.  SDP Considerations
    \ . . . . . . . . . . . . . . . . . . . . .  13\n     4.1.  Grouping ANC Data
    Streams with Other Media Streams  . . .  15\n   5.  Offer/Answer Model and Declarative
    Considerations . . . . . .  15\n     5.1.  Offer/Answer Model  . . . . . . . .
    . . . . . . . . . . .  15\n     5.2.  Declarative SDP Considerations  . . . .
    . . . . . . . . .  16\n   6.  IANA Considerations . . . . . . . . . . . . . .
    . . . . . . .  16\n   7.  Security Considerations . . . . . . . . . . . . . .
    . . . . .  16\n   8.  References  . . . . . . . . . . . . . . . . . . . . . .
    . . .  17\n     8.1.  Normative References  . . . . . . . . . . . . . . . . .
    .  17\n     8.2.  Informative References  . . . . . . . . . . . . . . . . .  18\n
    \  Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .  20\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This memo describes a Real-time Transport Protocol (RTP)
    payload\n   format for the Society of Motion Picture and Television Engineers\n
    \  (SMPTE) ancillary space (ANC) data, as defined by SMPTE ST 291-1\n   [ST291].
    \ ANC data is transmitted in the ancillary space of serial\n   digital video interfaces,
    the space outside of the active video\n   region of images intended for users
    to view.  Ancillary space roughly\n   corresponds to vertical and horizontal blanking
    periods of cathode\n   ray tube type displays.  ANC data can carry a range of
    data types,\n   including time code, Closed Captioning, and the Active Format\n
    \  Description (AFD).\n   ANC data is generally associated with the carriage of
    metadata within\n   the bit stream of a Serial Digital Interface (SDI), such as
    the\n   standard definition (SD) Serial Digital Interface, the 1.5 Gb/s\n   Serial
    Digital Interface for high definition (HD) television\n   applications, or the
    3 Gb/s Signal/Data Serial Interface (SMPTE ST\n   259 [ST259], SMPTE ST 292-1
    [ST292], and SMPTE ST 424 [ST424]).\n   ANC data packet payload definitions for
    a specific application are\n   specified by a SMPTE Standard, Recommended Practice,
    Registered\n   Disclosure Document, or by a document generated by another\n   organization,
    a company, or an individual (an entity).  When a\n   payload format is registered
    with SMPTE, it is identified by a\n   registered data identification word.\n   This
    memo describes an RTP payload that supports carriage of ANC data\n   packets that
    originate from any location within any SMPTE-defined SDI\n   signal.  This payload
    also supports the carriage of ANC data packets\n   that did not originate from
    an SDI signal.  Sufficient information is\n   provided to enable the ANC data
    packets at the output of the decoder\n   to be restored to their original locations
    in the serial digital\n   video signal raster (if that is desired).  An optional
    media type\n   parameter allows for the signaling of carriage of one or more types\n
    \  of ANC data as specified by data identification (DID) and secondary\n   data
    identification (SDID) words.  Another optional media type\n   parameter allows
    for the identification of the Video Payload ID\n   (VPID) code of the source interface
    of ANC data packets.\n   Note that the Ancillary Data Flag (ADF) word is not specifically\n
    \  carried in this RTP payload.  The ADF might be specified in a\n   document
    defining an interconnecting digital video interface;\n   otherwise, a default
    ADF is specified by SMPTE ST 291-1 [ST291].\n   This ANC data payload can be used
    by itself or used along with a\n   range of RTP video formats.  In particular,
    it has been designed so\n   that it could be used along with \"RTP Payload Format
    for Uncompressed\n   Video\" [RFC4175] or \"RTP Payload Format for JPEG 2000 Video
    Streams\"\n   [RFC5371].\n   The data model in this document for the ANC data
    RTP payload is based\n   on the data model of SMPTE ST 2038 [ST2038], which standardizes
    the\n   carriage of ANC data packets in an MPEG-2 Transport Stream.\n"
  - contents:
    - "1.1.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.1.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  RTP Payload Format for SMPTE ST 291 Ancillary Data\n   An example of the
    format of an RTP packet containing SMPTE ST 291 ANC\n   data is shown below:\n
    \      0                   1                   2                   3\n       0
    1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |V=2|P|X| CC    |M|    PT       |        sequence number        |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |                           timestamp                           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |           synchronization source (SSRC) identifier            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |   Extended Sequence Number    |           Length=32           |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      | ANC_Count=2   | F |                reserved                   |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |C|   Line_Number=9     |   Horizontal_Offset   |S| StreamNum=0 |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |         DID       |        SDID       |  Data_Count=0x84  |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                               User_Data_Words...\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                  |   Checksum_Word   |         word_align            |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |C|   Line_Number=10    |   Horizontal_Offset   |S| StreamNum=0 |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \      |         DID       |        SDID       |  Data_Count=0x105 |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                               User_Data_Words...\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \                                      |   Checksum_Word   |word_align |\n       +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \            Figure 1: SMPTE Ancillary Data RTP Packet Format\n   In this example,
    two ANC data packets are present.  The first has\n   four 10-bit User_Data_Words,
    and the second has five 10-bit\n   User_Data_Words (note that few ANC data packets
    are this small; thus,\n   this example does not reflect actual defined ANC data
    packets and\n   does not specifically call out the DIDs and SDIDs).  The ANC data\n
    \  packets are located on lines 9 and 10 of the SDI raster.\n   The term \"network
    byte order\" in the payload format SHALL refer to\n   the Data Transmission Order
    as defined in Appendix B of RFC 791\n   [RFC0791].\n   RTP packet header fields
    SHALL be interpreted as per RFC 3550\n   [RFC3550], with the following specifics:\n
    \  Timestamp: 32 bits\n      The timestamp field is interpreted in a similar fashion
    to\n      RFC 4175 [RFC4175]:\n      For progressive scan video, the timestamp
    denotes the sampling\n      instant of the frame to which the ANC data in the
    RTP packet\n      belongs.  RTP packets MUST NOT include ANC data from multiple\n
    \     frames, and all RTP packets with ANC data belonging to the same\n      frame
    MUST have the same timestamp.\n      For interlaced video, the timestamp denotes
    the sampling instant\n      of the field to which the ANC data in the RTP packet
    belongs.  RTP\n      packets MUST NOT include ANC data packets from multiple fields,\n
    \     and all RTP packets belonging to the same field MUST have the same\n      timestamp.\n
    \     If the sampling instant does not correspond to an integer value of\n      the
    clock, the value SHALL be truncated to the next lowest integer\n      with no
    ambiguity.  Section 3.1 describes timestamp clock rates.\n   Marker bit (M): 1
    bit\n      The marker bit set to \"1\" indicates the last ANC data RTP packet\n
    \     for a frame (for progressive scan video) or the last ANC data RTP\n      packet
    for a field (for interlaced video).\n"
  - contents:
    - "2.1.  Payload Header Definitions\n   The ANC data RTP payload header fields
      are defined as:\n   Extended Sequence Number: 16 bits\n           The high-order
      bits of the extended 32-bit sequence number,\n           in network byte order.
      \ This is the same as the Extended\n           Sequence Number field in RFC
      4175 [RFC4175].\n   Length: 16 bits\n           Number of octets of the ANC
      data RTP payload, beginning with\n           the \"C\" bit of the first ANC
      packet data header, as an\n           unsigned integer in network byte order.
      \ Note that all\n           word_align fields contribute to the calculation
      of the Length\n           field.\n   ANC_Count: 8 bits\n           This field
      is the count of the total number of ANC data\n           packets carried in
      the RTP payload, as an unsigned integer.\n           A single ANC data RTP packet
      payload cannot carry more than\n           255 ANC data packets.\n           If
      more than 255 ANC data packets need to be carried in a\n           field or
      frame, additional RTP packets carrying ANC data MAY\n           be sent with
      the same RTP timestamp but with different\n           sequence numbers.  ANC_Count
      of 0 indicates that there are no\n           ANC data packets in the payload
      (for example, an RTP packet\n           that carries no actual ANC data packets
      even though its\n           marker bit indicates the last ANC data RTP packet
      in a field/\n           frame).  If the ANC_Count is 0, the Length will also
      be 0.\n   F: 2 bits\n           These two bits relate to signaling the field
      specified by the\n           RTP timestamp in an interlaced SDI raster.  A value
      of 0b00\n           indicates that either the video format is progressive or
      that\n           no field is specified.  A value of 0b10 indicates that the\n
      \          timestamp refers to the first field of an interlaced video\n           signal.
      \ A value of 0b11 indicates that the timestamp refers\n           to the second
      field of an interlaced video signal.  The value\n           0b01 is not valid.
      \ Receivers SHOULD ignore an ANC data\n           packet with an F field value
      of 0b01 and SHOULD process any\n           other ANC data packets with valid
      F field values that are\n           present in the RTP payload.\n           Note
      that some multi-stream SDI interfaces might use multiple\n           interlaced
      signal streams to transmit progressive images, in\n           which case the
      \"F\" bits would refer to the field of the\n           interlaced stream used
      for transport of the ANC data packet.\n   reserved: 22 bits\n           The
      22 reserved bits of value \"0\" follow the F field to\n           ensure that
      the first ANC data packet header field in the\n           payload begins 32-bit
      word-aligned with the start of the RTP\n           header to ease implementation.\n
      \  For each ANC data packet in the payload, the following ANC data\n   packet
      header fields MUST be present:\n   C: 1 bit\n           This flag, when set
      to \"1\", indicates that the ANC data\n           corresponds to the color-difference
      data channel (C).  When\n           set to \"0\", this flag indicates either
      that the ANC data\n           corresponds to the luma (Y) data channel, that
      the ANC data\n           source is from an SD signal, or that the ANC data source
      has\n           no specific luma or color-difference data channels.  For ANC\n
      \          data from a multi-stream interface source, the C flag SHALL\n           refer
      to the channel of the stream used to transport the ANC\n           data packet.
      \ For situations where there is no SDI source, if\n           the ANC data type
      definition specifically requires the use of\n           the C or Y data channel,
      the C flag SHALL reflect that\n           requirement.\n   Line_Number: 11 bits\n
      \          This field contains the digital interface line number that\n           corresponds
      to the location of the ANC data packet as an\n           unsigned integer in
      network byte order.\n           The following special Line_Number values indicate
      that the\n           location of the ANC data packet is in certain generic\n
      \          vertical regions of the SDI raster:\n"
    - '+-------------+--------------------------------------------------------+

      '
    - '| Line_Number | ANC data packet generic vertical location              |

      '
    - '+-------------+--------------------------------------------------------+

      '
    - '|   0x7FF     | Without specific line location within the field or     |

      '
    - '|             | frame                                                  |

      '
    - '|             |                                                        |

      '
    - '|   0x7FE     | On any line in the range from the second line after    |

      '
    - '|             | the line specified for switching, as defined in SMPTE  |

      '
    - '|             | RP 168 [RP168], to the last line before active video,  |

      '
    - '|             | inclusive                                              |

      '
    - '|             |                                                        |

      '
    - '|   0x7FD     | On a line number larger than can be represented in 11  |

      '
    - '|             | bits of this field (if needed for future formats)      |

      '
    - "+-------------+--------------------------------------------------------+\n
      \          Note that the lines that are available to convey ANC data are\n           as
      defined in the applicable sample structure specification\n           (e.g.,
      SMPTE ST 274 [ST274], SMPTE ST 296 [ST296], ITU-R\n           BT.656 [BT656])
      and are possibly further restricted per SMPTE\n           RP 168 [RP168].\n
      \          In multi-stream interfaces, this field refers to the line\n           number
      that an ANC data packet is carried on within a\n           particular data stream
      in the interface.\n   Horizontal_Offset: 12 bits\n           This field defines
      the location of the ANC data packet in an\n           SDI raster relative to
      the start of active video (SAV; a\n           digital synchronizing signal present
      in SDI interfaces) as an\n           unsigned integer in network byte order.
      \ A value of 0 means\n           that the ADF of the ANC data packet begins
      immediately\n           following SAV.  The horizontal offset from SAV is measured
      in\n           terms of 10-bit words of the indicated data stream and data\n
      \          channel.\n           The following special Horizontal_Offset values
      indicate that\n           the location of the ANC data packet is in certain
      generic\n           horizontal regions of the SDI raster:\n"
    - '+-------------+--------------------------------------------------------+

      '
    - '| Horizontal_ | ANC data packet generic horizontal location            |

      '
    - '| Offset      |                                                        |

      '
    - '+-------------+--------------------------------------------------------+

      '
    - '|   0xFFF     | Without specific horizontal location                   |

      '
    - '|             |                                                        |

      '
    - '|   0xFFE     | Within horizontal ancillary data space (HANC) as       |

      '
    - '|             | defined in SMPTE ST 291-1 [ST291]                      |

      '
    - '|             |                                                        |

      '
    - '|   0xFFD     | Within the ancillary data space located between SAV    |

      '
    - '|             | (Start of Active Video) and EAV (End of Active Video)  |

      '
    - '|             | markers of the serial digital interface                |

      '
    - '|             |                                                        |

      '
    - '|   0xFFC     | Horizontal offset is larger than can be represented in |

      '
    - '|             | the 12 bits of this field (if needed for future        |

      '
    - '|             | formats or for certain low frame rate 720p formats)    |

      '
    - "+-------------+--------------------------------------------------------+\n
      \          In multi-stream interfaces, this field refers to the\n           horizontal
      location where an ANC data packet is placed on a\n           line carried within
      a particular data stream in the\n           interface.\n           Note that
      HANC data space will generally have higher luma\n           sample numbers than
      any samples in the active digital line.\n           Also note that SMPTE ST
      296 [ST296] (1280 x 720 progressive\n           active images) image sampling
      systems 7 and 8 (1280 x 720\n           progressive @ 24 fps and 1280 x 720
      progressive @ 23.98 fps\n           respectively) have a luma sample number
      maximum of 4124.  It\n           is unlikely that an actual implementation would
      have an ANC\n           data packet begin at a Horizontal_Offset beyond 4091
      (0xFFB)\n           in these formats; should that occur, the Horizontal_Offset\n
      \          value 0xFFC can be used to signal a horizontal offset larger\n           than
      can be represented in the field.  Further note that the\n           12-bit field
      of Horizontal_Offset is kept that size in this\n           memo to maintain
      easy conversion to/from SMPTE ST 2038\n           [ST2038], which also has a
      12-bit Horizontal_Offset field.\n   S (Data Stream Flag): 1 bit\n           This
      field indicates whether the data stream number of a\n           multi-stream
      data mapping used to transport the ANC data\n           packet is specified.
      \ If the S bit is '0', then the StreamNum\n           field provides no guidance
      regarding the source data stream\n           number of the ANC data packet.
      \ If the S bit is '1', then the\n           StreamNum field carries information
      regarding the source data\n           stream number of the ANC data packet.\n
      \  StreamNum: 7 bits\n           If the S bit (Data Stream Flag) is '1', then
      the StreamNum\n           field MUST carry identification of the source data
      stream\n           number of the ANC data packet.  If the data stream is\n           numbered,
      then the StreamNum field SHALL carry the number of\n           the source data
      stream minus one.  If the source multi-stream\n           interface does not
      have numbered data streams, the following\n           numbers SHALL be used
      in this field: '0' for link A data\n           stream and '1' for link B data
      stream.  For stereoscopic\n           multi-stream interface formats that do
      not have numbered\n           streams, the following numbers SHALL be used in
      this field:\n           '0' for left eye stream and '1' for right eye stream.\n
      \          Note that in multi-link SDI connections, the physical link\n           that
      a particular stream utilizes is typically specified by\n           the interface
      standard.  Also note that numbering of data\n           streams is across the
      interface as a whole.  For example, in\n           the SMPTE ST 425-3 dual-link
      3 Gb/s interface, the data\n           streams are numbered 1-4 with data streams
      1 and 2 on link 1\n           and data streams 3 and 4 on link 2.\n   An ANC
      data packet with the header fields Line_Number of 0x7FF and\n   Horizontal_Offset
      of 0xFFF SHALL be considered to be carried without\n   any specific location
      within the field or frame.\n   For each ANC data packet in the payload, immediately
      after the ANC\n   data packet header fields, the following data fields MUST
      be present\n   with the fields DID, SDID, Data_Count, User_Data_Words, and\n
      \  Checksum_Word representing the 10-bit words carried in the ANC data\n   packet,
      as per SMPTE ST 291-1 [ST291]:\n   DID: 10 bits\n           Data identification
      word\n   SDID: 10 bits\n           Secondary data identification word.  Used
      only for a \"Type 2\"\n           ANC data packet.  Note that in a \"Type 1\"
      ANC data packet,\n           this word will actually carry the data block number
      (DBN).\n   Data_Count: 10 bits\n           The lower 8 bits of Data_Count, corresponding
      to bits b7\n           (MSB; most significant bit) through b0 (LSB; least\n
      \          significant bit) of the 10-bit Data_Count word, contain the\n           actual
      count of 10-bit words in User_Data_Words.  Bit b8 is\n           the even parity
      for bits b7 through b0, and bit b9 is the\n           inverse (logical NOT)
      of bit b8.\n   User_Data_Words: integer number of 10-bit words\n           User_Data_Words
      (UDW) are used to convey information of a\n           type as identified by
      the DID word or the DID and SDID words.\n           The number of 10-bit words
      in the UDW is defined by the\n           Data_Count field.  The 10-bit words
      are carried in order\n           starting with the most significant bit and
      ending with the\n           least significant bit.\n   Checksum_Word: 10 bits\n
      \          The Checksum_Word can be used to determine the validity of\n           the
      ANC data packet from the DID word through the UDW.  It\n           consists
      of 10 bits, where bits b8 (MSB) through b0 (LSB)\n           define the checksum
      value and bit b9 is the inverse (logical\n           NOT) of bit b8.  The checksum
      value is equal to the nine\n           least significant bits of the sum of
      the nine least\n           significant bits of the DID word, the SDID word,
      the\n           Data_Count word, and all User_Data_Words in the ANC data\n           packet.
      \ The checksum is initialized to zero before\n           calculation, and any
      \"end carry\" resulting from the checksum\n           calculation is ignored.\n
      \  At the end of each ANC data packet in the payload:\n   word_align: bits as
      needed to complete 32-bit word\n           Word_align contains enough \"0\"
      bits as needed to complete the\n           last 32-bit word of an ANC data packet
      in the RTP payload.\n           If an ANC data packet in the RTP payload ends
      and is aligned\n           with a word boundary, there is no need to add any
      word\n           alignment bits.  Word align SHALL be used even for the last\n
      \          ANC data packet in an RTP packet.  Word align SHALL NOT be\n           used
      if there are zero ANC data packets being carried in the\n           RTP packet.\n
      \  When reconstructing an SDI signal based on this payload, it is\n   important
      to place ANC data packets into the locations indicated by\n   the ANC data packet
      header fields C, Line_Number and\n   Horizontal_Offset, and also to follow the
      requirements of Section 7\n   of SMPTE ST 291-1 [ST291], \"Ancillary Data Space
      Formatting\n   (Component or Composite Interface)\", which includes rules on
      the\n   placement of initial ANC data into allowed spaces as well as the\n   contiguity
      of ANC data packet sequences within those spaces in order\n   to assure that
      the resulting ANC data packets in the SDI signal are\n   valid.  The optional
      media type parameter VPID_Code can inform\n   receivers of the type of originating
      SDI interface.  For multi-stream\n   originating interfaces, the StreamNum field
      can provide information\n   regarding which stream an ANC data packet can be
      placed in to match\n   the ANC data location in the originating SDI interface.\n
      \  Senders of this payload SHOULD transmit available ANC data packets as\n   soon
      as practical to reduce end-to-end latency, especially if the\n   receivers will
      be embedding the received ANC data packet into an SDI\n   signal emission.  One
      millisecond is a reasonable upper bound for the\n   amount of time between when
      an ANC data packet becomes available to a\n   sender and the emission of an
      RTP payload containing that ANC data\n   packet.\n   ANC data packets with headers
      that indicate specific location within\n   a field or frame SHOULD be sent in
      raster scan order, both in terms\n   of packing position within an RTP packet
      and in terms of transmission\n   time of RTP packets.\n"
    title: 2.1.  Payload Header Definitions
  title: 2.  RTP Payload Format for SMPTE ST 291 Ancillary Data
- contents:
  - "3.  Payload Format Parameters\n   This RTP payload format is identified using
    the \"video/smpte291\"\n   media type, which is registered in accordance with
    RFC 4855\n   [RFC4855]; the template defined in RFC 6838 [RFC6838] is used.\n
    \  Note that the media type definition is in the \"video\" tree due to the\n   expected
    use of SMPTE ST 291 Ancillary Data along with video formats.\n"
  - contents:
    - "3.1.  Media Type Definition\n   Type name: video\n   Subtype name: smpte291\n
      \  Required parameters:\n      Rate:\n         RTP timestamp clock rate.\n         When
      an ANC data RTP stream is to be associated with an RTP\n         video stream,
      the RTP timestamp rates SHOULD be the same to\n         ensure that ANC data
      packets can be associated with the\n         appropriate frame or field.  Otherwise,
      a 90 kHz rate SHOULD be\n         used.\n         Note that techniques described
      in RFC 7273 [RFC7273] can\n         provide a common reference clock for multiple
      RTP streams\n         intended for synchronized presentation.\n   Optional parameters:\n
      \     DID_SDID:\n         Data identification and secondary data identification
      words.\n         The presence of the DID_SDID parameters signals that all ANC\n
      \        data packets of this stream are of a particular type or types,\n         i.e.,
      labeled with particular DIDs and SDIDs.  DID and SDID\n         values of SMPTE-registered
      ANC data packet types can be found\n         in the SMPTE Registry for Data
      Identification Word Assignments\n         [SMPTE-RA].\n         \"Type 1\" ANC
      data packets (which do not have SDIDs defined)\n         SHALL be labeled with
      SDID=0x00.\n         DID and SDID values can be registered with SMPTE as per
      SMPTE\n         ST 291-1 [ST291].\n         The absence of the DID_SDID parameter
      signals that\n         determination of the DID and SDID of ANC data packets
      in the\n         payload can only be achieved through direct inspection of the\n
      \        ANC data packet fields.\n         The ABNF description of the DID_SDID
      parameter is described in\n         Section 4.\n      VPID_Code:\n         This
      integer parameter specifies the Video Payload ID (VPID)\n         code of the
      source interface of ANC data packets using the\n         value from byte 1 of
      the VPID as defined in SMPTE ST 352\n         [ST352].  The integer SHALL be
      made with bit 7 of VPID byte 1\n         being the most significant bit and
      bit 0 of VPID byte 1 being\n         the least significant bit.  For example,
      132 refers to SMPTE ST\n         292-1, 720-line video payloads on a 1.5 Gb/s
      (nominal) serial\n         digital interface.\n   Encoding considerations: This
      media type is framed and binary; see\n      Section 4.8 of RFC 6838 [RFC6838].\n
      \  Security considerations: See Section 7.\n   Interoperability considerations:
      Data items in smpte291 can be very\n      diverse.  Receivers might only be
      capable of interpreting a subset\n      of the possible data items.  Some implementations
      might care about\n      the location of the ANC data packets in the SDI raster,
      but other\n      implementations might not care.\n   Published specification:
      RFC 8331\n   Applications that use this media type: Devices that stream real-time\n
      \     professional video, especially those that interoperate with legacy\n      serial
      digital interfaces (SDI).\n   Additional Information:\n      Deprecated alias
      names for this type: N/A\n      Magic number(s): N/A\n      File extension(s):
      N/A\n      Macintosh file type code(s): N/A\n   Person & email address to contact
      for further information:\n      T. Edwards <thomas.edwards@fox.com>\n      IETF
      Payload Working Group <payload@ietf.org>\n   Intended usage: COMMON\n   Restrictions
      on usage: This media type depends on RTP framing and\n      hence is only defined
      for transfer via RTP RFC 3550 [RFC3550].\n      Transport within other framing
      protocols is not defined at this\n      time.\n   Author: T. Edwards <thomas.edwards@fox.com>\n
      \  Change controller: The IETF PAYLOAD Working Group, or other party as\n      designated
      by the IESG.\n"
    title: 3.1.  Media Type Definition
  title: 3.  Payload Format Parameters
- contents:
  - "4.  SDP Considerations\n   The mapping of the above-defined payload format media
    type and its\n   parameters SHALL be done according to Section 3 of RFC 4855\n
    \  [RFC4855].\n   o  The type name (\"video\") goes in SDP \"m=\" as the media
    name.\n   o  The subtype name (\"smpte291\") goes in SDP \"a=rtpmap\" as the\n
    \     encoding name, followed by a slash (\"/\") and the rate parameter.\n   o
    \ The optional parameters VPID_Code and DID_SDID, when present, are\n      included
    in the \"a=fmtp\" attribute line of SDP as a semicolon-\n      separated list
    of parameter=value pairs.\n   DID and SDID values SHALL be specified in hexadecimal
    with a \"0x\"\n   prefix (such as \"0x61\").  The ABNF as per RFC 5234 [RFC5234]
    of the\n   DID_SDID optional parameter SHALL be:\n           TwoHex = \"0x\" 1*2(HEXDIG)\n
    \          DidSdid = \"DID_SDID={\" TwoHex \",\" TwoHex \"}\"\n   For example,
    EIA 608 Closed Caption data would be signaled with the\n   parameter DID_SDID={0x61,0x02}.
    \ If a DID_SDID parameter is not\n   specified, then the ANC data stream might
    potentially contain ANC\n   data packets of any type.\n   Multiple DID_SDID parameters
    can be specified (separated by\n   semicolons) to signal the presence of multiple
    types of ANC data in\n   the stream.  DID_SDID={0x61,0x02};DID_SDID={0x41,0x05},
    for example,\n   signals the presence of EIA 608 Closed Captions as well as AFD/Bar\n
    \  Data.  Multiple DID_SDID parameters do not imply any particular\n   ordering
    of the different types of ANC data packets in the stream.\n   If the optional
    parameter VPID_Code is present, it SHALL be present\n   only once in the semicolon-separated
    list, taking a single integer\n   value.\n   A sample SDP mapping for ANC data
    is as follows:\n      m=video 30000 RTP/AVP 112\n      a=rtpmap:112 smpte291/90000\n
    \     a=fmtp:112 DID_SDID={0x61,0x02};DID_SDID={0x41,0x05};VPID_Code=132\n   In
    this example, a dynamic payload type 112 is used for ANC data.\n   The 90 kHz
    RTP timestamp rate is specified in the \"a=rtpmap\" line\n   after the subtype.
    \ In the \"a=fmtp:\" line, DID 0x61 and SDID 0x02 are\n   specified (registered
    to EIA 608 Closed Caption Data by SMPTE), and\n   also DID 0x41 and SDID 0x05
    (registered to AFD/Bar Data).  The\n   VPID_Code is 132 (referring to SMPTE ST
    292-1, 720-line video\n   payloads on a 1.5 Gb/s serial digital interface).\n"
  - contents:
    - "4.1.  Grouping ANC Data Streams with Other Media Streams\n   To indicate the
      association of an ANC data stream with a particular\n   video stream, implementers
      MAY group the \"m\" lines together using\n   Flow Identification (\"FID\") semantics
      as defined in RFC 5888\n   [RFC5888].\n   A sample SDP mapping for grouping
      ANC data with video as described in\n   RFC 4175 [RFC4175] is as follows:\n
      \       v=0\n        o=Al 123456 11 IN IP4 host.example.com\n        s=Professional
      Networked Media Test\n        i=A test of synchronized video and ANC data\n
      \       t=0 0\n        a=group:FID V1 M1\n        m=video 50000 RTP/AVP 96\n
      \       c=IN IP4 233.252.0.1/255\n        a=rtpmap:96 raw/90000\n        a=fmtp:96
      sampling=YCbCr-4:2:2; width=1280; height=720; depth=10\n        a=mid:V1\n        m=video
      50010 RTP/AVP 97\n        c=IN IP4 233.252.0.2/255\n        a=rtpmap:97 smpte291/90000\n
      \       a=fmtp:97 DID_SDID={0x61,0x02};DID_SDID={0x41,0x05}\n        a=mid:M1\n"
    title: 4.1.  Grouping ANC Data Streams with Other Media Streams
  title: 4.  SDP Considerations
- contents:
  - '5.  Offer/Answer Model and Declarative Considerations

    '
  - contents:
    - "5.1.  Offer/Answer Model\n   Receivers might wish to receive ANC data streams
      with specific\n   DID_SDID parameters.  Thus, when offering ANC data streams
      using the\n   Session Description Protocol (SDP) in an Offer/Answer model\n
      \  [RFC3264], the offerer MAY provide a list of ANC data streams\n   available
      with specific DID_SDID parameters in the fmtp line.  The\n   answerer MAY (1)
      respond with all or a subset of the streams offered\n   along with fmtp lines
      with all or a subset of the DID_SDID parameters\n   offered, (2) set the corresponding
      port number to 0 to decline the\n   smpte291 stream if not in the same media
      section as a corresponding\n   video stream, or (3) remove the corresponding
      payload type if the\n   smpte291 stream is in the same media section as a corresponding
      video\n   stream.  There are no restrictions on updating DID_SDID parameters
      in\n   a subsequent offer.\n"
    title: 5.1.  Offer/Answer Model
  - contents:
    - "5.2.  Declarative SDP Considerations\n   For declarative use of SDP, nothing
      specific is defined for this\n   payload format.  The configuration given by
      the SDP MUST be used when\n   sending and/or receiving media in the session.\n"
    title: 5.2.  Declarative SDP Considerations
  title: 5.  Offer/Answer Model and Declarative Considerations
- contents:
  - "6.  IANA Considerations\n   The media type \"video/smpte291\" is defined in Section
    3.1.  IANA has\n   registered \"video/smpte291\" in the \"Media Types\" registry.\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   RTP packets using the payload format defined
    in this specification\n   are subject to the security considerations discussed
    in the RTP\n   specification [RFC3550] and in any applicable RTP profile such
    as\n   RTP/AVP [RFC3551], RTP/AVPF [RFC4585], RTP/SAVP [RFC3711], or RTP/\n   SAVPF
    [RFC5124].  However, as \"Securing the RTP Protocol Framework:\n   Why RTP Does
    Not Mandate a Single Media Security Solution\" [RFC7202]\n   discusses, it is
    not the responsibility of an RTP payload format to\n   discuss or mandate what
    solutions are to be used to meet the basic\n   security goals like confidentiality,
    integrity, and source\n   authenticity for RTP in general.  This responsibility
    lays on anyone\n   using RTP in an application.  They can find guidance on available\n
    \  security mechanisms and important considerations in \"Options for\n   Securing
    RTP Sessions\" [RFC7201].  Applications SHOULD use one or\n   more appropriately
    strong security mechanisms.  The rest of this\n   section discusses the security
    impacting properties of the payload\n   format itself.\n   To avoid potential
    buffer overflow attacks, receivers SHOULD validate\n   that the ANC data packets
    in the RTP payload are of the appropriate\n   length (using the Data_Count field)
    for the ANC data type specified\n   by DID and SDID.  Also, the Checksum_Word
    SHOULD be checked against\n   the ANC data packet to ensure that its data has
    not been damaged in\n   transit; note that the Checksum_Word is unlikely to provide
    a payload\n   integrity check in case of a directed attack.\n   Some receivers
    will simply move the ANC data packet bits from the RTP\n   payload into SDI.  It
    might still be a good idea for these \"re-\n   embedders\" to perform the above-mentioned
    validity tests to avoid\n   downstream SDI systems from becoming confused by bad
    ANC data\n   packets, which could be used for a denial-of-service attack.\n   \"Re-embedders\"
    into SDI SHOULD also double check that the Line_Number\n   and Horizontal_Offset
    lead to the ANC data packet being inserted into\n   a legal area to carry ANC
    data in the SDI video bit stream of the\n   output video format.\n"
  title: 7.  Security Considerations
- contents:
  - '8.  References

    '
  - contents:
    - "8.1.  Normative References\n   [RFC0791]  Postel, J., \"Internet Protocol\",
      STD 5, RFC 791,\n              DOI 10.17487/RFC0791, September 1981,\n              <https://www.rfc-editor.org/info/rfc791>.\n
      \  [RFC2119]  Bradner, S., \"Key words for use in RFCs to Indicate\n              Requirement
      Levels\", BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n
      \             <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3264]  Rosenberg,
      J. and H. Schulzrinne, \"An Offer/Answer Model\n              with Session Description
      Protocol (SDP)\", RFC 3264,\n              DOI 10.17487/RFC3264, June 2002,\n
      \             <https://www.rfc-editor.org/info/rfc3264>.\n   [RFC3550]  Schulzrinne,
      H., Casner, S., Frederick, R., and V.\n              Jacobson, \"RTP: A Transport
      Protocol for Real-Time\n              Applications\", STD 64, RFC 3550, DOI
      10.17487/RFC3550,\n              July 2003, <https://www.rfc-editor.org/info/rfc3550>.\n
      \  [RFC3551]  Schulzrinne, H. and S. Casner, \"RTP Profile for Audio and\n              Video
      Conferences with Minimal Control\", STD 65, RFC 3551,\n              DOI 10.17487/RFC3551,
      July 2003,\n              <https://www.rfc-editor.org/info/rfc3551>.\n   [RFC3711]
      \ Baugher, M., McGrew, D., Naslund, M., Carrara, E., and K.\n              Norrman,
      \"The Secure Real-time Transport Protocol (SRTP)\",\n              RFC 3711,
      DOI 10.17487/RFC3711, March 2004,\n              <https://www.rfc-editor.org/info/rfc3711>.\n
      \  [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and J. Rey,\n              \"Extended
      RTP Profile for Real-time Transport Control\n              Protocol (RTCP)-Based
      Feedback (RTP/AVPF)\", RFC 4585,\n              DOI 10.17487/RFC4585, July 2006,\n
      \             <https://www.rfc-editor.org/info/rfc4585>.\n   [RFC4855]  Casner,
      S., \"Media Type Registration of RTP Payload\n              Formats\", RFC 4855,
      DOI 10.17487/RFC4855, February 2007,\n              <https://www.rfc-editor.org/info/rfc4855>.\n
      \  [RFC5124]  Ott, J. and E. Carrara, \"Extended Secure RTP Profile for\n              Real-time
      Transport Control Protocol (RTCP)-Based Feedback\n              (RTP/SAVPF)\",
      RFC 5124, DOI 10.17487/RFC5124, February\n              2008, <https://www.rfc-editor.org/info/rfc5124>.\n
      \  [RFC5234]  Crocker, D., Ed. and P. Overell, \"Augmented BNF for Syntax\n
      \             Specifications: ABNF\", STD 68, RFC 5234,\n              DOI 10.17487/RFC5234,
      January 2008,\n              <https://www.rfc-editor.org/info/rfc5234>.\n   [RFC5888]
      \ Camarillo, G. and H. Schulzrinne, \"The Session Description\n              Protocol
      (SDP) Grouping Framework\", RFC 5888,\n              DOI 10.17487/RFC5888, June
      2010,\n              <https://www.rfc-editor.org/info/rfc5888>.\n   [RFC6838]
      \ Freed, N., Klensin, J., and T. Hansen, \"Media Type\n              Specifications
      and Registration Procedures\", BCP 13,\n              RFC 6838, DOI 10.17487/RFC6838,
      January 2013,\n              <https://www.rfc-editor.org/info/rfc6838>.\n   [RFC8174]
      \ Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n   [RP168]    SMPTE, \"RP 168:2009,
      Definition of Vertical Interval\n              Switching Point for Synchronous
      Video Switching\", 2009.\n   [ST291]    SMPTE, \"SMPTE Standard - Ancillary
      Data Packet and Space\n              Formatting\", ST 291-1:2011,\n              DOI
      10.5594/SMPTE.ST291-1.2011, September 2011,\n              <http://ieeexplore.ieee.org/document/7291794/>.\n
      \  [ST352]    SMPTE, \"SMPTE Standard - Payload Identification Codes for\n              Serial
      Digital Interfaces\", ST 352:2013,\n              DOI 10.5594/SMPTE.ST352.2013,
      February 2013,\n              <http://ieeexplore.ieee.org/document/7290261/>.\n
      \  [ST424]    SMPTE, \"SMPTE Standard - 3 Gb/s Signal/Data Serial\n              Interface\",
      ST 424:2012, DOI 10.5594/SMPTE.ST424.2012,\n              October 2012,\n              <http://ieeexplore.ieee.org/document/7290519/>.\n"
    title: 8.1.  Normative References
  - contents:
    - "8.2.  Informative References\n   [BT656]    ITU-R, \"Interfaces for Digital
      Component Video Signals in\n              525-Line and 625-Line Television Systems
      Operating at the\n              4:2:2 Level of Recommendation ITU-R BT.601\",
      ITU-R\n              Recommendation BT.656-5, December 2007.\n   [RFC4175]  Gharai,
      L. and C. Perkins, \"RTP Payload Format for\n              Uncompressed Video\",
      RFC 4175, DOI 10.17487/RFC4175,\n              September 2005, <https://www.rfc-editor.org/info/rfc4175>.\n
      \  [RFC5371]  Futemma, S., Itakura, E., and A. Leung, \"RTP Payload\n              Format
      for JPEG 2000 Video Streams\", RFC 5371,\n              DOI 10.17487/RFC5371,
      October 2008,\n              <https://www.rfc-editor.org/info/rfc5371>.\n   [RFC7201]
      \ Westerlund, M. and C. Perkins, \"Options for Securing RTP\n              Sessions\",
      RFC 7201, DOI 10.17487/RFC7201, April 2014,\n              <https://www.rfc-editor.org/info/rfc7201>.\n
      \  [RFC7202]  Perkins, C. and M. Westerlund, \"Securing the RTP\n              Framework:
      Why RTP Does Not Mandate a Single Media\n              Security Solution\",
      RFC 7202, DOI 10.17487/RFC7202, April\n              2014, <https://www.rfc-editor.org/info/rfc7202>.\n
      \  [RFC7273]  Williams, A., Gross, K., van Brandenburg, R., and H.\n              Stokking,
      \"RTP Clock Source Signalling\", RFC 7273,\n              DOI 10.17487/RFC7273,
      June 2014,\n              <https://www.rfc-editor.org/info/rfc7273>.\n   [SMPTE-RA]\n
      \             SMPTE Registration Authority, LLC, \"SMPTE Ancillary Data\n              SMPTE
      ST 291\",\n              <https://smpte-ra.org/smpte-ancillary-data-smpte-st-291>.\n
      \  [ST2038]   SMPTE, \"SMPTE Standard - Carriage of Ancillary Data\n              Packets
      in an MPEG-2 Transport Stream\", ST 2038:2008,\n              DOI 10.5594/SMPTE.ST2038.2008,
      September 2008,\n              <http://ieeexplore.ieee.org/document/7290549/>.\n
      \  [ST259]    SMPTE, \"SMPTE Standard - For Television - SDTV Digital\n              Signal/Data
      - Serial Digital Interface\", ST 259:2008,\n              DOI 10.5594/SMPTE.ST259.2008,
      January 2008,\n              <http://ieeexplore.ieee.org/document/7292109/>.\n
      \  [ST274]    SMPTE, \"SMPTE Standard - For Television - 1920 x 1080\n              Image
      Sample Structure, Digital Representation and Digital\n              Timing Reference
      Sequences for Multiple Picture Rates\",\n              ST 274:2008, DOI 10.5594/SMPTE.ST274.2008,
      January 2008,\n              <http://ieeexplore.ieee.org/document/7290129/>.\n
      \  [ST292]    SMPTE, \"SMPTE Standard - 1.5 Gb/s Signal/Data Serial\n              Interface\",
      ST 292-1:2012, DOI 10.5594/SMPTE.ST292-1.2012,\n              January 2012,\n
      \             <http://ieeexplore.ieee.org/document/7291770/>.\n   [ST296]    SMPTE,
      \"SMPTE Standard - 1280 x 720 Progressive Image\n              4:2:2 and 4:4:4
      Sample Structure - Analog and Digital\n              Representation and Analog
      Interface\", ST 296:2012,\n              DOI 10.5594/SMPTE.ST296.2012, May 2012,\n
      \             <http://ieeexplore.ieee.org/document/7291722/>.\n"
    title: 8.2.  Informative References
  title: 8.  References
- contents:
  - "Author's Address\n   Thomas G. Edwards\n   FOX\n   10201 W. Pico Blvd.\n   Los
    Angeles, CA  90035\n   United States of America\n   Phone: +1 310 369 6696\n   Email:
    thomas.edwards@fox.com\n"
  title: Author's Address
