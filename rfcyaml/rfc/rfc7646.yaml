- title: __initial_text__
  contents:
  - '          Definition and Use of DNSSEC Negative Trust Anchors

    '
- title: Abstract
  contents:
  - "Abstract\n   DNS Security Extensions (DNSSEC) is now entering widespread\n  \
    \ deployment.  However, domain signing tools and processes are not yet\n   as\
    \ mature and reliable as those for non-DNSSEC-related domain\n   administration\
    \ tools and processes.  This document defines Negative\n   Trust Anchors (NTAs),\
    \ which can be used to mitigate DNSSEC validation\n   failures by disabling DNSSEC\
    \ validation at specified domains.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7646.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction and Motivation .....................................3\n\
    \      1.1. Definition of a Negative Trust Anchor ......................3\n  \
    \    1.2. Motivations for Negative Trust Anchors .....................4\n    \
    \       1.2.1. Mitigating Domain Validation Failures ...............4\n      \
    \     1.2.2. Improving End-User Experience .......................4\n        \
    \   1.2.3. Avoiding Switching to a Non-validating Resolver .....5\n   2. Use of\
    \ a Negative Trust Anchor ..................................5\n      2.1. Applicability\
    \ of Negative Trust Anchors ....................6\n   3. Managing Negative Trust\
    \ Anchors .................................7\n      3.1. Alerting Users to Negative\
    \ Trust Anchor Use ................7\n   4. Removal of a Negative Trust Anchor\
    \ ..............................7\n   5. Comparison to Other DNS Misconfigurations\
    \ .......................8\n   6. Intentionally Broken Domains ....................................8\n\
    \   7. Discovering Broken Domains ......................................9\n  \
    \ 8. Security Considerations ........................................11\n   9.\
    \ References .....................................................11\n      9.1.\
    \ Normative References ......................................11\n      9.2. Informative\
    \ References ....................................12\n   Appendix A.  Configuration\
    \ Examples ...............................13\n     A.1.  NLnet Labs Unbound ........................................13\n\
    \     A.2.  Internet System Consortium (ISC) BIND .....................14\n  \
    \   A.3.  Nominum Vantio ............................................14\n   Acknowledgements\
    \ ..................................................15\n   Authors' Addresses\
    \ ................................................15\n"
- title: 1.  Introduction and Motivation
  contents:
  - "1.  Introduction and Motivation\n   DNSSEC has now entered widespread deployment.\
    \  However, the DNSSEC\n   signing tools and processes are less mature and reliable\
    \ than those\n   for non-DNSSEC-related administration.  As a result, operators\
    \ of DNS\n   recursive resolvers, such as Internet Service Providers (ISPs),\n\
    \   occasionally observe domains incorrectly managing DNSSEC-related\n   resource\
    \ records.  This mismanagement triggers DNSSEC validation\n   failures and then\
    \ causes large numbers of end users to be unable to\n   reach a domain.  Many\
    \ end users tend to interpret this as a failure\n   of their ISP or resolver operator,\
    \ and they may switch to a non-\n   validating resolver or contact their ISP to\
    \ complain, rather than\n   seeing this as a failure on the part of the domain\
    \ they wanted to\n   reach.  Without the techniques in this document, this pressure\
    \ may\n   cause the resolver operator to disable (or simply not deploy) DNSSEC\n\
    \   validation.\n   This document defines Negative Trust Anchors (NTAs), which\
    \ can be\n   used during the transition to ubiquitous DNSSEC deployment.  NTAs\
    \ are\n   configured locally on a validating DNS recursive resolver to shield\n\
    \   end users from DNSSEC-related authoritative name server operational\n   errors.\
    \  NTAs are intended to be temporary and only implemented by\n   the organization\
    \ requiring an NTA (and not distributed by any\n   organizations outside of the\
    \ administrative boundary).  Finally, NTAs\n   pertain only to DNSSEC and not\
    \ to Public Key Infrastructures (PKIs)\n   such as X.509.\n   Use of an NTA to\
    \ temporarily disable DNSSEC validation for a specific\n   misconfigured domain\
    \ name immediately restores access for end users.\n   This allows the domain's\
    \ administrators to fix their misconfiguration\n   while also allowing the organization\
    \ using the NTA to keep DNSSEC\n   validation enabled and still reach the misconfigured\
    \ domain.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"\
    SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\"\
    , \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted as described\
    \ in\n   [RFC2119].\n"
- title: 1.1.  Definition of a Negative Trust Anchor
  contents:
  - "1.1.  Definition of a Negative Trust Anchor\n   Trust anchors are defined in\
    \ [RFC5914].  A trust anchor is used by a\n   validating caching resolver as a\
    \ starting point for building the\n   authentication chain for a signed DNS response.\
    \  By way of analogy,\n   NTAs stop validation of the authentication chain.  Instead,\
    \ the\n   validator treats any upstream responses as if the zone is unsigned\n\
    \   and does not set the Authentic Data (AD) bit in responses it sends to\n  \
    \ clients.  Note that this is a behavior and not a separate resource\n   record.\
    \  This NTA can potentially be implemented at any level within\n   the chain of\
    \ trust and would stop validation from that point in the\n   chain down.  Validation\
    \ starts again if there is a positive trust\n   anchor further down in the chain.\
    \  For example, if there is an NTA at\n   example.com and a positive trust anchor\
    \ at foo.bar.example.com, then\n   validation resumes for foo.bar.example.com\
    \ and anything below it.\n"
- title: 1.2.  Motivations for Negative Trust Anchors
  contents:
  - '1.2.  Motivations for Negative Trust Anchors

    '
- title: 1.2.1.  Mitigating Domain Validation Failures
  contents:
  - "1.2.1.  Mitigating Domain Validation Failures\n   A domain name can fail validation\
    \ for two general reasons: a\n   legitimate security failure (e.g., due to an\
    \ attack or compromise of\n   some sort) or as a result of misconfiguration on\
    \ the part of a zone\n   administrator.  As domains transition to DNSSEC, the\
    \ most common\n   reason for a validation failure has been misconfiguration. \
    \ Thus,\n   domain administrators should be sure to read [RFC6781] in full.  They\n\
    \   should pay special attention to Section 4.2 of [RFC6781], which\n   pertains\
    \ to key rollovers, as these appear to be the cause of many\n   recent validation\
    \ failures.\n   It is also possible that some DNSSEC validation failures could\
    \ arise\n   due to differences in how different software developers interpret\n\
    \   DNSSEC standards and/or how those developers choose to implement\n   support\
    \ for DNSSEC.  For example, it is conceivable that a domain may\n   be DNSSEC-signed\
    \ properly, and one vendor's DNS recursive resolvers\n   will validate the domain\
    \ but other vendors' software may fail to\n   validate the domain.\n"
- title: 1.2.2.  Improving End-User Experience
  contents:
  - "1.2.2.  Improving End-User Experience\n   End users generally do not know of,\
    \ understand, or care about the\n   resolution process that causes connections\
    \ to happen.  This is by\n   design: the point of the DNS is to insulate users\
    \ from having to\n   remember IP addresses through a friendlier way of naming\
    \ systems.  It\n   follows from this that end users do not, and should not, be\
    \ expected\n   to know about DNSSEC, validation, or anything of the sort.  As\
    \ a\n   result, end users may misinterpret the failure to reach a domain due\n\
    \   to DNSSEC-related misconfiguration.  They may (incorrectly) assume\n   that\
    \ their ISP is purposely blocking access to the domain or that it\n   is a performance\
    \ failure on the part of their ISP (especially of the\n   ISP's DNS servers).\
    \  They may contact their ISP to complain, which\n   will incur cost for their\
    \ ISP.  In addition, they may use online\n   tools and sites to complain about\
    \ this problem, such as via a blog,\n   web forum, or social media site, which\
    \ may lead to dissatisfaction on\n   the part of other end users or general criticism\
    \ of an ISP or\n   operator of a DNS recursive resolver.\n   As end users publicize\
    \ these failures, others may recommend they\n   switch from security-aware DNS\
    \ resolvers to resolvers not performing\n   DNSSEC validation.  This is a shame\
    \ since the ISP or other DNS\n   recursive resolver operator is actually doing\
    \ exactly what they are\n   supposed to do in failing to resolve a domain name;\
    \ this is the\n   expected result when a domain can no longer be validated, and\
    \ it\n   protects end users from a potential security threat.  Use of an NTA\n\
    \   would allow the ISP to specifically remedy the failure to reach that\n   domain,\
    \ without compromising security for other sites.  This would\n   result in a satisfied\
    \ end user, with minimal impact to the ISP, while\n   maintaining the security\
    \ of DNSSEC for correctly maintained domains.\n   The following text from [RFC4033]\
    \ is worth noting: \"In the final\n   analysis, however, authenticating both DNS\
    \ keys and data is a matter\n   of local policy, which may extend or even override\
    \ the protocol\n   extensions defined in this document set.\"  A responsibility\
    \ (one of\n   many) of a caching server operator is to protect the integrity of\
    \ the\n   cache.\n"
- title: 1.2.3.  Avoiding Switching to a Non-validating Resolver
  contents:
  - "1.2.3.  Avoiding Switching to a Non-validating Resolver\n   As noted in Section\
    \ 1.2.2, some people may consider switching to an\n   alternative, non-validating\
    \ resolver themselves, or may recommend\n   that others do so.  But if a domain\
    \ fails DNSSEC validation and is\n   inaccessible, this could very well be due\
    \ to a security-related\n   issue.  In order to be as safe and secure as possible,\
    \ end users\n   should not change to DNS servers that do not perform DNSSEC\n\
    \   validation as a workaround, and people should not recommend that\n   others\
    \ do so either.  Domains that fail DNSSEC for legitimate reasons\n   (versus misconfiguration)\
    \ may be in control of hackers, or there\n   could be other significant security\
    \ issues with the domain.\n   Thus, switching to a non-validating resolver to\
    \ restore access to a\n   domain that fails DNSSEC validation is not a recommended\
    \ practice, is\n   bad advice to others, and is potentially harmful to end-user\n\
    \   security.\n"
- title: 2.  Use of a Negative Trust Anchor
  contents:
  - "2.  Use of a Negative Trust Anchor\n   Technical personnel trained in the operation\
    \ of DNS servers must\n   confirm that a DNSSEC validation failure is due to misconfiguration,\n\
    \   as a similar breakage could have occurred if an attacker gained\n   access\
    \ to a domain's authoritative servers and modified those records\n   or had the\
    \ domain pointed to their own rogue authoritative servers.\n   They should also\
    \ confirm that the domain is not intentionally broken,\n   such as for testing\
    \ purposes as noted in Section 6.  Finally, they\n   should make a reasonable\
    \ attempt to contact the domain owner of the\n   misconfigured zone, preferably\
    \ prior to implementing the NTA.\n   Involving trained technical personnel is\
    \ costly, but operational\n   experience suggests that this is a very rare event,\
    \ usually on the\n   order of once per quarter (or even less).\n   It is important\
    \ for the resolver operator to confirm that the domain\n   is still under the\
    \ ownership/control of the legitimate owner of the\n   domain in order to ensure\
    \ that disabling validation for a specific\n   domain does not direct users to\
    \ an address under an attacker's\n   control.  Contacting the domain owner and\
    \ telling them the DNSSEC\n   records that the resolver operator is seeing allows\
    \ the resolver\n   operator to determine if the issue is a DNSSEC misconfiguration\
    \ or an\n   attack.\n   In the case of a validation failure due to misconfiguration\
    \ of a Top-\n   Level Domain (TLD) or popular domain name (such as a top 100\n\
    \   website), content or services in the affected TLD or domain could be\n   inaccessible\
    \ for a large number of users.  In such cases, it may be\n   appropriate to use\
    \ an NTA as soon as the misconfiguration is\n   confirmed.  An example of a list\
    \ of \"top N\" websites is the Alexa\n   \"Top 500 Sites on the Web\" [Alexa]\
    \ or a list of the of the most-\n   accessed names in the resolver's cache.\n\
    \   Once a domain has been confirmed to fail DNSSEC validation due to a\n   DNSSEC-related\
    \ misconfiguration, an ISP or other DNS recursive\n   resolver operator may elect\
    \ to use an NTA for that domain or sub-\n   domain.  This instructs their DNS\
    \ recursive resolver to temporarily\n   NOT perform DNSSEC validation at or in\
    \ the misconfigured domain.\n   This immediately restores access to the domain\
    \ for end users while\n   the domain's administrator corrects the misconfiguration(s).\
    \  It does\n   not and should not involve turning off validation more broadly.\n"
- title: 2.1.  Applicability of Negative Trust Anchors
  contents:
  - "2.1.  Applicability of Negative Trust Anchors\n   An NTA MUST only be used for\
    \ a limited duration.  Implementors SHOULD\n   allow the operator using the NTA\
    \ to set an end time and date\n   associated with any NTA.  Optimally, this time\
    \ and date is set in a\n   DNS recursive resolver's configuration, though in the\
    \ short term,\n   this may also be achieved via other systems or supporting processes.\n\
    \   Use of an NTA MUST NOT be automatic.\n   Finally, an NTA SHOULD be used only\
    \ in a specific domain or sub-\n   domain and MUST NOT affect validation of other\
    \ names up the\n   authentication chain.  For example, an NTA for zone1.example.com\n\
    \   would affect only names at or below zone1.example.com, and validation\n  \
    \ would still be performed on example.com, .com, and the root (\".\").\n   This\
    \ NTA also SHOULD NOT affect names in another branch of the tree\n   (such as\
    \ example.net).  In another example, an NTA for example.com\n   would affect only\
    \ names within example.com, and validation would\n   still be performed on .com\
    \ and the root (\".\").  In this scenario, if\n   there is a (probably manually\
    \ configured) trust anchor for\n   zone1.example.com, validation would be performed\
    \ for\n   zone1.example.com and subdomains of zone1.example.com.\n"
- title: 3.  Managing Negative Trust Anchors
  contents:
  - "3.  Managing Negative Trust Anchors\n   While NTAs have proven useful during\
    \ the early stages of DNSSEC\n   adoption, domain owners are ultimately responsible\
    \ for managing and\n   ensuring that their DNS records are configured correctly.\n\
    \   Most current implementations of DNS validating resolvers currently\n   follow\
    \ [RFC4033] on configuring a trust anchor using either a public\n   key as in\
    \ a DNSKEY resource record (RR) or a hash of a public key as\n   in a DS RR.\n\
    \   Different DNS validators may have different configuration names for\n   an\
    \ NTA.  For examples, see Appendix A.\n   An NTA placed at a node where there\
    \ is a configured positive trust\n   anchor MUST take precedence over that trust\
    \ anchor, effectively\n   disabling it.  Implementations MAY issue a warning or\
    \ informational\n   message when this occurs, so that operators are not surprised\
    \ when\n   this happens.\n"
- title: 3.1.  Alerting Users to Negative Trust Anchor Use
  contents:
  - "3.1.  Alerting Users to Negative Trust Anchor Use\n   End users of a DNS recursive\
    \ resolver or other people may wonder why\n   a domain that fails DNSSEC validation\
    \ resolves with a supposedly\n   validating resolver.  Therefore, implementors\
    \ should consider\n   transparently disclosing NTAs that are currently in place\
    \ or were in\n   place in the past, such as on a website [Disclosure-Example].\n\
    \   This is particularly important since there is currently no special\n   DNS\
    \ query response code that could indicate to end users or\n   applications that\
    \ an NTA is in place.  Such disclosures should\n   optimally include both the\
    \ data and time that the NTA was put in\n   place and when it was removed.\n"
- title: 4.  Removal of a Negative Trust Anchor
  contents:
  - "4.  Removal of a Negative Trust Anchor\n   As explored in Section 8, using an\
    \ NTA once the zone correctly\n   validates can have security considerations.\
    \  It is therefore\n   RECOMMENDED that NTA implementors should periodically attempt\
    \ to\n   validate the domain in question, for the period of time that the NTA\n\
    \   is in place, until such validation is again successful.  NTAs MUST\n   expire\
    \ automatically when their configured lifetime ends.  The\n   lifetime SHOULD\
    \ NOT exceed a week.  There is limited experience with\n   what this value should\
    \ be, but at least one large vendor has\n   documented customer feedback suggesting\
    \ that a week is reasonable\n   based on expectations of how long failures take\
    \ to fix or to be\n   forgotten.  Operational experience may further refine these\n\
    \   expectations.\n   Before removing the NTA, all authoritative resolvers listed\
    \ in the\n   zone should be checked (due to anycast and load balancers, it may\
    \ not\n   be possible to check all instances).\n   Once all testing succeeds,\
    \ an NTA should be removed as soon as is\n   reasonably possible.  One possible\
    \ method to automatically determine\n   when the NTA can be removed is to send\
    \ a periodic query for type\n   Start of Authority (SOA) at the NTA node; if it\
    \ gets a response that\n   it can validate (whether the response was an actual\
    \ SOA answer or a\n   NOERROR/NODATA with appropriate NSEC/NSEC3 records), the\
    \ NTA is\n   presumed no longer to be necessary and is removed.  Implementations\n\
    \   SHOULD, by default, perform this operation.  Note that under some\n   circumstances,\
    \ this is undesirable behavior (for example, if\n   www.example.com has a bad\
    \ signature, but example.com/SOA is fine), so\n   implementations may wish to\
    \ allow the operator to override this spot-\n   check/behavior.\n   When removing\
    \ the NTA, the implementation SHOULD remove all cached\n   entries at and below\
    \ the NTA node.\n"
- title: 5.  Comparison to Other DNS Misconfigurations
  contents:
  - "5.  Comparison to Other DNS Misconfigurations\n   Domain administrators are ultimately\
    \ responsible for managing and\n   ensuring their DNS records are configured correctly.\
    \  ISPs or other\n   DNS recursive resolver operators cannot and should not correct\n\
    \   misconfigured A, CNAME, MX, or other resource records of domains for\n   which\
    \ they are not authoritative.  Expecting non-authoritative\n   entities to protect\
    \ domain administrators from any misconfiguration\n   of resource records is therefore\
    \ unrealistic and unreasonable and, in\n   the long term, is harmful to the delegated\
    \ design of the DNS and\n   could lead to extensive operational instability and/or\
    \ variation.\n   With DNSSEC breakage, it is often possible to tell that there\
    \ is a\n   misconfiguration by looking at the data and not needing to guess what\n\
    \   it should have been.\n"
- title: 6.  Intentionally Broken Domains
  contents:
  - "6.  Intentionally Broken Domains\n   Some domains, such as dnssec-failed.org,\
    \ have been intentionally\n   broken for testing purposes [Website-Visitors] [Netalyzr].\
    \  For\n   example, dnssec-failed.org is a DNSSEC-signed domain that is broken.\n\
    \   If an end user is querying a validating DNS recursive resolver, then\n   this\
    \ or other similarly intentionally broken domains should fail to\n   resolve and\
    \ should result in a \"Server Failure\" error (RCODE 2, also\n   known as 'SERVFAIL').\
    \  If such a domain resolved successfully, then\n   it is a sign that the DNS\
    \ recursive resolver is not fully validating.\n   Organizations that utilize NTAs\
    \ should not add an NTA for any\n   intentionally broken domain.  Such additions\
    \ are prevented by the\n   requirement that the operator attempt to contact the\
    \ administrators\n   for the zone that has broken DNSSEC.\n   Organizations operating\
    \ an intentionally broken domain may wish to\n   consider adding a TXT record\
    \ for the domain to the effect of \"This\n   domain is purposely DNSSEC broken\
    \ for testing purposes\".\n"
- title: 7.  Discovering Broken Domains
  contents:
  - "7.  Discovering Broken Domains\n   Discovering that a domain is DNSSEC broken\
    \ as a result of an operator\n   error instead of an attack is not trivial, and\
    \ the examples here\n   should be vetted by an experienced professional before\
    \ making the\n   decision to implement an NTA.\n   One of the key things to look\
    \ for when looking at a DNSSEC broken\n   domain is consistency and history. \
    \ Therefore, it is good if you have\n   the ability to look at the server's DNS\
    \ traffic over a long period of\n   time or have a database that stores DNS names\
    \ and associated answers\n   (this is often referred to as a \"passive DNS database\"\
    ).  Another\n   invaluable tool is DNSViz (http://dnsviz.net), which also stores\n\
    \   DNSSEC-related data historically.  The drawback here is that you need\n  \
    \ for it to have tested the domain before the incident occurs.\n   The first and\
    \ easiest thing to check is if the failure of the domain\n   is consistent across\
    \ different software implementations.  If not, you\n   want to inform the vendor\
    \ where it fails so that the vendor can look\n   more deeply into the issue.\n\
    \   The next thing is to figure out what the actual failure mode is.  At\n   the\
    \ time of this writing, several tools that do this are available,\n   including:\n\
    \   o  DNSViz (http://dnsviz.net)\n   o  Verisign DNSSEC debugger (http://dnssec-debugger.verisignlabs.com)\n\
    \   o  Zonemaster (http://www.zonemaster.fr, https://github.com/dotse/\n     \
    \ zonemaster)\n   Most of these tools are open source and can be installed locally.\n\
    \   However, using the tools over the Internet has the advantage of\n   providing\
    \ visibility from a different point.  This is an incomplete\n   list, and it is\
    \ expected that additional tools will be developed over\n   time to aid in troubleshooting\
    \ DNSSEC issues.\n   Once you figure out what the error is, you need to check\
    \ if it shows\n   consistently around the world and from all authoritative servers.\n\
    \   Use DNS Tools (dig) or DNS looking glasses to verify this.  An error\n   that\
    \ is consistently the same is more likely to be caused by an\n   operator rather\
    \ than by an attack.  Also, if the output from the\n   authoritative server is\
    \ consistently different from the resolvers'\n   output, this hints to an attack\
    \ rather then an error, unless EDNS0\n   client subnet [CLIENT-SUBNET] is applied\
    \ to the domain.\n   A last check is to look at the actual DNS data.  Is the result\
    \ of the\n   query still the same or has it changed?  While a lot of DNSSEC errors\n\
    \   occur on events that change DNSSEC data, the actual record someone\n   wants\
    \ to go to often stays the same.  If the data is the same, this\n   is an indication\
    \ (not a guarantee) that the error is operator caused.\n   Keep in mind that with\
    \ DNS being used to globally balance traffic,\n   the data associated to a name\
    \ might be different in different parts\n   of the Internet.\n   Here are some\
    \ examples of common DNSSEC failures that have been seen\n   as operator signing\
    \ errors on the Internet:\n   o  RRSIG timing issue.  Each signature has an inception\
    \ time and\n      expiry time between which it is valid.  Letting this time expire\n\
    \      without creating a new signature is one of the most common DNSSEC\n   \
    \   errors.  To a lesser extent, this also occurs if signatures were\n      made\
    \ active before the inception time.  For all of these errors,\n      your primary\
    \ check is to check on the data.  Signature expiration\n      is also about the\
    \ only error we see on actual data (like\n      www.example.com).  All other errors\
    \ are more or less related to\n      dealing with the chain of trust established\
    \ by DS records in the\n      parent zone and DNSKEYs in the child zones.  These\
    \ mostly occur\n      during key rollovers but are not limited to that.\n   o\
    \  DNSKEYs in a child zone don't match the DS record in the parent\n      zone.\
    \  There is a big variation of this that can happen at any\n      point in the\
    \ key lifecycle.  DNSViz is the best tool to show\n      problems in the chain.\
    \  If you debug it yourself, use dig\n      +multiline so that you can see the\
    \ key id of a DNSKEY.  Common\n      variations of this can be:\n      *  DS pointing\
    \ to a non-existent key in the child zone.  Questions\n         for consideration\
    \ here include the following.  Has there ever\n         been a key (and, if so,\
    \ was it used)?  Has there been a recent\n         change in the DNSKEY RRSet\
    \ (indicating a key rollover)?  Has\n         the actual data in the zone changed?\
    \  Is the zone DNSSEC signed\n         at all and has it been in the past?\n \
    \     *  DS pointing to an existent key, but no signatures are made with\n   \
    \      the key.  The checks above should be done, with the addition of\n     \
    \    checking if another key in the DNSKEY RRSet is now used to sign\n       \
    \  the records.\n      *  Data in DS or DNSKEY doesn't match the other.  This\
    \ is more\n         common in initial setup when there was a copy-and-paste error.\n\
    \         Again, checking history on data is the best you can do there.\n   All\
    \ of the above is just a starting point for consideration when\n   deciding whether\
    \ or not to deploy a trust anchor.  It is not possible\n   to provide a simple\
    \ checklist to run through to determine whether a\n   domain is broken because\
    \ of an attack or an operator error.\n"
- title: 8.  Security Considerations
  contents:
  - "8.  Security Considerations\n   End-to-end DNSSEC validation will be disabled\
    \ during the time that an\n   NTA is used.  In addition, the NTA may be in place\
    \ after the time\n   when the DNS misconfiguration that caused validation to break\
    \ has\n   been fixed.  Thus, there may be a gap between when a domain has been\n\
    \   re-secured and when an NTA is removed.  In addition, an NTA may be\n   put\
    \ in place by DNS recursive resolver operators without the\n   knowledge of the\
    \ authoritative domain administrator for a given\n   domain name.  However, attempts\
    \ SHOULD be made to contact and inform\n   the domain administrator prior to putting\
    \ the NTA in place.\n   One side effect of implementing an NTA is that it may\
    \ break client\n   applications that assume that a domain is signed and expect\
    \ an AD bit\n   in the response.  It is expected that many applications that require\n\
    \   DNSSEC for a domain will perform their own validation, so this should\n  \
    \ not be a major issue.\n"
- title: 9.  References
  contents:
  - '9.  References

    '
- title: 9.1.  Normative References
  contents:
  - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in\
    \ RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n  \
    \            DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n\
    \   [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"DNS Security Introduction and Requirements\",\n            \
    \  RFC 4033, DOI 10.17487/RFC4033, March 2005,\n              <http://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC5914]  Housley, R., Ashmore, S., and C. Wallace, \"Trust Anchor\n    \
    \          Format\", RFC 5914, DOI 10.17487/RFC5914, June 2010,\n            \
    \  <http://www.rfc-editor.org/info/rfc5914>.\n   [RFC6781]  Kolkman, O., Mekking,\
    \ W., and R. Gieben, \"DNSSEC\n              Operational Practices, Version 2\"\
    , RFC 6781,\n              DOI 10.17487/RFC6781, December 2012,\n            \
    \  <http://www.rfc-editor.org/info/rfc6781>.\n"
- title: 9.2.  Informative References
  contents:
  - "9.2.  Informative References\n   [Alexa]    Alexa, \"The top 500 sites on the\
    \ web\",\n              <http://www.alexa.com/topsites>.\n   [CLIENT-SUBNET]\n\
    \              Contavalli, C., van der Gaast, W., Lawrence, D., and W.\n     \
    \         Kumari, \"Client Subnet in DNS Queries\", Work in Progress,\n      \
    \        draft-ietf-dnsop-edns-client-subnet-03, August 2015.\n   [Disclosure-Example]\n\
    \              Comcast, \"faa.gov Failing DNSSEC Validation (Fixed)\",\n     \
    \         February 2013, <http://dns.comcast.net/index.php/entry/\n          \
    \    faa-gov-failing-dnssec-validation-fixed>.\n   [Netalyzr] Weaver, N., Kreibich,\
    \ C., Nechaev, B., and V. Paxson,\n              \"Implications of Netalyzr's\
    \ DNS Measurements\", Securing\n              and Trusting Internet Names (SATIN),\
    \ April 2011,\n              <http://conferences.npl.co.uk/satin/presentations/\n\
    \              satin2011slides-Weaver.pdf>.\n   [Unbound-Config]\n           \
    \   Wijngaards, W., \"Unbound: How to Turn Off DNSSEC\", June\n              2010,\
    \ <http://unbound.net/documentation/\n              howto_turnoff_dnssec.html>.\n\
    \   [Website-Visitors]\n              Mens, J., \"Is my Web site being used via\
    \ a DNSSEC-\n              validator?\", July 2012, <http://jpmens.net/2012/07/30/\n\
    \              is-my-web-site-being-used-via-dnssec-validator/>.\n"
- title: Appendix A.  Configuration Examples
  contents:
  - "Appendix A.  Configuration Examples\n   The section contains example configurations\
    \ to achieve NTA\n   functionality for the zone foo.example.com.\n   Note: These\
    \ are simply examples -- name server operators are expected\n   to test and understand\
    \ the implications of these operations.  Note\n   also that some of available\
    \ implementations may not implement all\n   recommended functionality in this\
    \ document.  In that case, it is\n   advisable to request the developer or vendor\
    \ of the implementation to\n   support the missing feature rather than start using\
    \ the incomplete\n   implementation.\n"
- title: A.1.  NLnet Labs Unbound
  contents:
  - "A.1.  NLnet Labs Unbound\n   Unbound [Unbound-Config] lets us simply disable\
    \ validation checking\n   for a specific zone by adding configuration statements\
    \ to\n   unbound.conf:\n   server:\n           domain-insecure: \"foo.example.com\"\
    \n   Using the 'unbound-control' command, one can add and remove NTAs\n   without\
    \ restarting the name server.\n      Using the \"unbound-control\" command:\n\
    \           list_insecure                 list domain-insecure zones\n       \
    \    insecure_add zone             add domain-insecure zone\n           insecure_remove\
    \ zone          remove domain-insecure zone\n   Items added with the \"unbound-control\"\
    \ command are added to the\n   running server and are lost when the server is\
    \ restarted.  Items from\n   unbound.conf stay after restart.\n   For additional\
    \ information, see [Unbound-Config].\n"
- title: A.2.  Internet System Consortium (ISC) BIND
  contents:
  - "A.2.  Internet System Consortium (ISC) BIND\n   Use the \"rndc\" command:\n \
    \    nta -dump\n               List all negative trust anchors.\n     nta [-lifetime\
    \ duration] [-force] domain [view]\n               Set a negative trust anchor,\
    \ disabling DNSSEC validation\n               for the given domain.\n        \
    \       Using -lifetime specifies the duration of the NTA, up\n              \
    \ to one week.  The default is one hour.\n               Using -force prevents\
    \ the NTA from expiring before its\n               full lifetime, even if the\
    \ domain can validate sooner.\n     nta -remove domain [view]\n              \
    \ Remove a negative trust anchor, re-enabling validation\n               for the\
    \ given domain.\n"
- title: A.3.  Nominum Vantio
  contents:
  - "A.3.  Nominum Vantio\n   **\n   *negative-trust-anchors*\n   _Format_: name\n\
    \   _Command Channel_: view.update name=world negative-trust-\n   anchors=(foo.example.com)\n\
    \   _Command Channel_: resolver.update name=res1 negative-trust-\n   anchors=(foo.example.com)\n\
    \   *Description*: Disables DNSSEC validation for a domain, even if the\n   domain\
    \ is under an existing security root.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Several people made contributions to this document and/or\
    \ played an\n   important role in the development and evolution of it.  In some\n\
    \   cases, this included performing a detailed review and then providing\n   feedback\
    \ and constructive criticism for future revisions, or engaging\n   in a healthy\
    \ debate over the subject of the document.  All of this\n   was helpful, and therefore,\
    \ the following individuals merit\n   acknowledgement: Joe Abley, John Barnitz,\
    \ Tom Creighton, Marco\n   Davids, Brian Dickson, Patrik Falstrom, Tony Finch,\
    \ Chris Ganster,\n   Olafur Gudmundsson, Peter Hagopian, Wes Hardaker, Paul Hoffman,\n\
    \   Christer Holmberg, Shane Kerr, Murray Kucherawy, Rick Lamb, Marc\n   Lampo,\
    \ Ted Lemon, Scott Rose, A. Schulze, Wendy Seltzer, Antoin\n   Verschuren, Paul\
    \ Vixie, Patrik Wallstrom, Nick Weaver,\n   W.C.A. Wijngaards, and Suzanne Woolf.\n\
    \   Edward Lewis, Evan Hunt, Andrew Sullivan, and Tatuya Jinmei provided\n   especially\
    \ large amounts of text and/or detailed review.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Paul Ebersman\n   Comcast\n   One Comcast Center\n   1701\
    \ John F. Kennedy Boulevard\n   Philadelphia, PA  19103\n   United States\n  \
    \ Email: ebersman-ietf@dragon.net\n   Warren Kumari\n   Google\n   1600 Amphitheatre\
    \ Parkway\n   Mountain View, CA  94043\n   United States\n   Email: warren@kumari.net\n\
    \   URI:   http://www.google.com\n   Chris Griffiths\n   Nominet\n   Minerva House\n\
    \   Edmund Halley Road\n   Oxford Science Park\n   Oxford  OX4 4DQ\n   United\
    \ Kingdom\n   Email: cgriffiths@gmail.com\n   URI:   http://www.nominet.org.uk/\n\
    \   Jason Livingood\n   Comcast\n   One Comcast Center\n   1701 John F. Kennedy\
    \ Boulevard\n   Philadelphia, PA  19103\n   United States\n   Email: jason_livingood@cable.comcast.com\n\
    \   URI:   http://www.comcast.com\n   Ralf Weber\n   Nominum\n   Email: Ralf.Weber@nominum.com\n\
    \   URI:   http://www.nominum.com\n"
