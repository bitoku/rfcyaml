- title: __initial_text__
  contents:
  - ''
- title: Independent Submission                                        J. Klensin
  contents:
  - "Independent Submission                                        J. Klensin\n  \
    \  DNS Privacy, Authorization, Special Uses, Encoding, Characters,\n         \
    \ Matching, and Root Structure: Time for Another Look?\n"
- title: Abstract
  contents:
  - "Abstract\n   The basic design of the Domain Name System was completed almost\
    \ 30\n   years ago.  The last half of that period has been characterized by\n\
    \   significant changes in requirements and expectations, some of which\n   either\
    \ require changes to how the DNS is used or can be accommodated\n   only poorly\
    \ or not at all.  This document asks the question of\n   whether it is time to\
    \ either redesign and replace the DNS to match\n   contemporary requirements and\
    \ expectations (rather than continuing to\n   try to design and implement incremental\
    \ patches that are not fully\n   satisfactory) or draw some clear lines about\
    \ functionality that is\n   not really needed or that should be performed in some\
    \ other way.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This is a contribution to\
    \ the RFC Series, independently of any other\n   RFC stream.  The RFC Editor has\
    \ chosen to publish this document at\n   its discretion and makes no statement\
    \ about its value for\n   implementation or deployment.  Documents approved for\
    \ publication by\n   the RFC Editor are not candidates for any level of Internet\
    \ Standard;\n   see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8324.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2018 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   4\n   2.  Background and Hypothesis . . . . . . . . . . . . . .\
    \ . . . .   5\n   3.  Warts and Tensions with the Current DNS . . . . . . . .\
    \ . . .   6\n     3.1.  Multi-type Queries  . . . . . . . . . . . . . . . . .\
    \ . .   6\n     3.2.  Matching Part I: Case Sensitivity in Labels and Other\n\
    \           Anomalies . . . . . . . . . . . . . . . . . . . . . . . .   7\n  \
    \   3.3.  Matching Part II: Non-ASCII (\"Internationalized\") Domain\n       \
    \    Name Labels . . . . . . . . . . . . . . . . . . . . . . .   7\n     3.4.\
    \  Matching Part III: Label Synonyms, Equivalent Names, and\n           Variants\
    \  . . . . . . . . . . . . . . . . . . . . . . . .   8\n     3.5.  Query Privacy\
    \ . . . . . . . . . . . . . . . . . . . . . .  10\n     3.6.  Alternate Namespaces\
    \ for Public Use in the DNS Framework:\n           The CLASS Problem . . . . .\
    \ . . . . . . . . . . . . . . .  10\n     3.7.  Loose Synchronization . . . .\
    \ . . . . . . . . . . . . . .  10\n     3.8.  Private Namespaces and Special Names\
    \  . . . . . . . . . .  11\n     3.9.  Alternate Query or Response Encodings .\
    \ . . . . . . . . .  12\n     3.10. Distribution and Management of Root Servers\
    \ . . . . . . .  12\n     3.11. Identifiers versus Brands and Other Convenience\
    \ Names . .  13\n     3.12. A Single Hierarchy with a Centrally Controlled Root\
    \ . . .  14\n     3.13. Newer Application Protocols, New Requirements, and DNS\n\
    \           Evolution . . . . . . . . . . . . . . . . . . . . . . . .  14\n  \
    \     3.13.1.  The Extensions . . . . . . . . . . . . . . . . . . .  15\n    \
    \   3.13.2.  Extensions and Deployment Pressures -- The TXT\n                RRTYPE\
    \ . . . . . . . . . . . . . . . . . . . . . . .  15\n       3.13.3.  Periods and\
    \ Zone Cut Issues  . . . . . . . . . . . .  16\n     3.14. Scaling of Reputation\
    \ and Other Ancillary Information . .  17\n     3.15. Tensions among Transport,\
    \ Scaling, and Content  . . . . .  18\n   4.  The Inverse Lookup Requirement \
    \ . . . . . . . . . . . . . . .  19\n   5.  Internet Scale, Function Support,\
    \ and Incremental Deployment   20\n   6.  Searching and the DNS -- An Historical\
    \ Note . . . . . . . . .  20\n   7.  Security Considerations . . . . . . . . .\
    \ . . . . . . . . . .  21\n   8.  References  . . . . . . . . . . . . . . . .\
    \ . . . . . . . . .  22\n     8.1.  Normative References  . . . . . . . . . .\
    \ . . . . . . . .  22\n     8.2.  Informative References  . . . . . . . . . .\
    \ . . . . . . .  22\n   Acknowledgements  . . . . . . . . . . . . . . . . . .\
    \ . . . . . .  29\n   Author's Address  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .  29\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   This document explores contemporary expectations of the\
    \ Internet's\n   domain system (DNS) and compares them to the assumptions and\n\
    \   properties of the DNS design, including both those documented in the\n   RFC\
    \ Series, an important early paper by the principal author of the\n   original\
    \ RFCs [Mockapetris-1988], and a certain amount of oral\n   tradition.  It is\
    \ primarily intended to ask the question of whether\n   the differences are causing\
    \ enough stresses on the system, stresses\n   that cannot be resolved satisfactorily\
    \ by further patching, that the\n   Internet community should be considering designing\
    \ a new system, one\n   that is better adapted to current needs and expectations,\
    \ and\n   developing a deployment and transition strategy for it.  For those\n\
    \   (perhaps the majority of us) for whom actually replacing the DNS is\n   too\
    \ radical to be realistic, the document may be useful in two other\n   ways. \
    \ It may provide a foundation for discussing what functions the\n   DNS should\
    \ not be expected to support and how those functions can be\n   supported in other\
    \ ways, perhaps via an intermediate system that then\n   calls on the DNS or by\
    \ using some other type of database technology\n   for some set of functions while\
    \ leaving the basic DNS functions\n   intact.  Or it may provide a basis for \"\
    better just get used to that\n   and the way it works\" discussions to replace\
    \ fantasies about what the\n   DNS might do in some alternate reality.\n   There\
    \ is a key design or philosophical question associated with the\n   analysis in\
    \ this document that the document does not address.  It is\n   whether changes\
    \ to perceived requirements to DNS functionality as\n   described here are, in\
    \ most respects, evolutionary or whether many of\n   them are instances of trying\
    \ to utilize the DNS for new requirements\n   because it exists and is already\
    \ deployed independent of whether the\n   DNS is really appropriate or not.  The\
    \ latter might be an instance of\n   a problem often described in the IETF as\
    \ \"when all you have is a\n   hammer, everything looks like a nail\".\n   Other\
    \ recent work, including a short article by Vint Cerf [Cerf2017],\n   has discussed\
    \ an overlapping set of considerations from a different\n   perspective, reinforcing\
    \ the view that it may be time to ask\n   fundamental questions about the evolution\
    \ and future of the DNS.\n   While this document does not assume deep technical\
    \ or operational\n   knowledge of the DNS, it does assume some knowledge and at\
    \ least\n   general familiarity with the concepts of RFC 1034 [RFC1034] and RFC\n\
    \   1035 [RFC1035] and the terminology discussed in RFC 7719 [RFC7719]\n   and\
    \ elsewhere.  Although some of the comments it contains might be\n   taken as\
    \ hints or examples of different ways to think about the\n   design issues, it\
    \ makes no attempt to explore, much less offer a\n   tutorial on, alternate naming\
    \ systems or database technologies.\n   It is perhaps worth noting that, while\
    \ the perspective is different\n   and more than a dozen years have passed, many\
    \ of the issues discussed\n   in this document were analyzed and described (most\
    \ of them with more\n   extensive explanations) in a 2005 US National Research\
    \ Council report\n   [NRC-Signposts].\n   Readers should note that several references\
    \ are to obsolete\n   documents.  That was done because they are intended to show\
    \ the\n   documents and dates that introduced particular features or concepts.\n\
    \   When current versions are intended, they are referenced.\n"
- title: 2.  Background and Hypothesis
  contents:
  - "2.  Background and Hypothesis\n   The Domain Name System (DNS) [RFC1034] was\
    \ designed starting in the\n   early 1980s [RFC0799] [RFC0881] [RFC0882] [RFC0883]\
    \ with the main\n   goal of replacing the flat, centrally administered, host table\
    \ system\n   [RFC0810] [RFC0952] [RFC0953] with a hierarchical, administratively\n\
    \   distributed, system.  The DNS design included some features that,\n   after\
    \ initial implementation and deployment, were judged to be\n   unworkable and\
    \ either replaced (e.g., the mail destination (MD) and\n   mail forwarder (MF)\
    \ approach [RFC0882] that were replaced by the MX\n   approach [RFC0974]), abandoned\
    \ (e.g., the mechanism for using email\n   local parts as labels described in\
    \ RFC 1034, Section 3.3), or\n   deprecated (e.g., the WKS RR TYPE [RFC1123]).\
    \  Newer ideas and\n   requirements have identified a number of other features,\
    \ some of\n   which were less developed than others.  Of course the original\n\
    \   designers could not anticipate everything that has come to be\n   expected\
    \ of the DNS in the last 30 years.\n   In recent years, demand for new and extended\
    \ services and uses of the\n   DNS have, in turn, led to proposals for DNS extensions\
    \ or changes of\n   various sorts.  Some have been adopted, including a model\
    \ for\n   negotiating extended functionality [RFC2671] (commonly known as\n  \
    \ EDNS(0)) and to support IPv6 [RFC3596], others were found to be\n   impracticable,\
    \ and still others continue to be under consideration.\n   Some examples of the\
    \ latter two categories are discussed below.  A\n   few features of the original\
    \ DNS specification, such as the CLASS\n   property and label types, have also\
    \ been suggested to be so badly\n   specified that they should be deprecated [Sullivan-Class].\n\
    \   Unlike earlier changes such as the Internationalized Domain Names for\n  \
    \ Applications (IDNA) mechanisms for better incorporating non-ASCII\n   labels\
    \ without modifying the DNS structure itself [RFC3490]\n   [RFC5890], some recent\
    \ proposals require or strongly suggest changes\n   to APIs, formats, or interfaces\
    \ by programs that need to retrieve\n   information from the DNS or interpret\
    \ that information.  Differences\n   between the DNS architecture and the requirements\
    \ that imply those\n   proposals suggest that it may be time to stop patching\
    \ the DNS or\n   trying to extend it in small increments.  Instead, we should\
    \ be\n   considering moving some current or proposed functionality elsewhere\n\
    \   or developing a new system that better meets today's needs and a\n   transition\
    \ strategy to it.\n   The next section of this document discusses a number of\
    \ issues with\n   the current DNS design that could appropriately be addressed\
    \ by a\n   different and newer design model.  In at least some cases, changing\n\
    \   the model and protocols could bring significant benefits to the\n   Internet\
    \ and/or its administration.\n   This document is not a proposal for a new protocol.\
    \  It is intended\n   to stimulate thought about how far we want to try to push\
    \ the\n   existing DNS, to examine whether expectations of it are already\n  \
    \ exceeding its plausible capabilities, and to start discussion of a\n   redesign\
    \ or alternatives to one if the time for that decision has\n   come.\n"
- title: 3.  Warts and Tensions with the Current DNS
  contents:
  - "3.  Warts and Tensions with the Current DNS\n   As suggested above, there are\
    \ many signs that the DNS is incapable of\n   meeting contemporary expectations\
    \ of how it should work and\n   functionality it should support.  Some of those\
    \ expectations are\n   unrealistic under any imaginable circumstances; others\
    \ are impossible\n   (or merely problematic) in the current DNS structure but\
    \ could be\n   accommodated in a redesign.  These are examples, rather than a\n\
    \   comprehensive list, and do not appear in any particular order.\n"
- title: 3.1.  Multi-type Queries
  contents:
  - "3.1.  Multi-type Queries\n   The DNS does not gracefully support multi-type queries.\
    \  The current\n   case where this problem rears its head involves attempts at\
    \ solutions\n   that return both TYPE A (IPv4) and type AAA (IPv6) addresses\n\
    \   collectively.  The problem was originally seen with \"QTYPE=MAILA\"\n   [RFC0882]\
    \ for the original MA and MD RRTYPEs, an experience that\n   strongly suggests\
    \ that some very careful thinking about cache effects\n   (and possibly additional\
    \ DNS changes) would be needed.  Other\n   solutions might seem equally or more\
    \ plausible.  What they, including\n   \"two types of addresses\", probably have\
    \ in common is that they\n   illustrate stresses on the system and that changing\
    \ the DNS to deal\n   with those stresses is not straightforward or likely to\
    \ be problem-\n   free.\n"
- title: '3.2.  Matching Part I: Case Sensitivity in Labels and Other Anomalies'
  contents:
  - "3.2.  Matching Part I: Case Sensitivity in Labels and Other Anomalies\n   The\
    \ DNS specifications assume that labels are octet strings and\n   octets with\
    \ the high bit zero have seven-bit ASCII codes in the\n   remaining bits.  They\
    \ require that, when a domain name used in a\n   query is matched to one stored\
    \ in the database, those ASCII\n   characters be interpreted in a case-independent\
    \ way, i.e., upper- and\n   lower-case letters are treated as equivalent (digits\
    \ and symbols are\n   not affected) [RFC4343].  For non-ASCII octets, i.e., octets\
    \ in\n   labels with the first bit turned on, there are no assumptions about\n\
    \   the character coding used, much less any rules about character case\n   equivalence\
    \ -- strings must be compared by matching bits in sequence.\n   Even though the\
    \ current model for handling non-ASCII (i.e.,\n   \"internationalized\") domain\
    \ name labels (IDNs) [RFC5890] (see\n   Section 3.3 below) encodes information\
    \ so the DNS is not directly\n   affected, the notion that some characters in\
    \ labels are handled in a\n   case-insensitive way and that others are case sensitive\
    \ (or that\n   upper case must be prohibited entirely as IDNA does) has caused\
    \ a\n   good deal of confusion and resentment.  Those concerns and complaints\n\
    \   about inconsistent behavior and mishandling (or suboptimal handling)\n   of\
    \ case relationships for some languages have not been mitigated by\n   repeated\
    \ explanations that the relationships between \"decorated\"\n   lower-case characters\
    \ and their upper-case equivalents are often\n   sensitive to language and locality\
    \ and therefore not deterministic\n   with information available to DNS servers.\n"
- title: '3.3.  Matching Part II: Non-ASCII ("Internationalized") Domain Name'
  contents:
  - "3.3.  Matching Part II: Non-ASCII (\"Internationalized\") Domain Name\n     \
    \ Labels\n   Quite independent of the case-sensitivity problem, one of the\n \
    \  fundamental properties of Unicode [Unicode] is that some abstract\n   characters\
    \ can be represented in multiple ways, such as by a single,\n   precomposed, code\
    \ point or by a base code point followed by one or\n   more code points that specify\
    \ combining characters.  While Unicode\n   Normalization can be used to eliminate\
    \ many (but not all) of those\n   distinctions for comparison (matching) purposes,\
    \ it is best applied\n   during matching rather than by changing one string into\
    \ another.  The\n   first version of IDNA (\"IDNA2003\") made the choice to change\
    \ strings\n   during processing for either storage or retrieval [RFC3490]\n  \
    \ [RFC3491]; the second (\"IDNA2008\") required that all strings be\n   normalized\
    \ and that upper-case characters are not allowed at all\n   [RFC5891].  Neither\
    \ is optimal, if only because, independent of where\n   they are changed if they\
    \ are changed at all, transforming the strings\n   themselves implies that the\
    \ input string in an application may not be\n   the same as the string used in\
    \ processing and perhaps later display.\n   It would almost certainly be preferable,\
    \ and more consistent with\n   Unicode recommendations, to use normalization (and\
    \ perhaps other\n   techniques if they are appropriate) at matching time rather\
    \ than\n   altering the strings at all, even if there were still only a single\n\
    \   matching algorithm, i.e., normalization were added to the existing\n   ASCII-only\
    \ case folding.  However, even Unicode's discussion of\n   normalization [Unicode-UAX15]\
    \ indicates that there are special,\n   language-dependent, cases (the most commonly\
    \ cited example is the\n   dotless \"i\" (U+0131)).  Not only does the DNS lack\
    \ any information\n   about languages that could be used in a mapping algorithm,\
    \ but, as\n   long as there is a requirement that there be only one mapping\n\
    \   algorithm for the entire system, that information could not be used\n   even\
    \ if it were available.  One could imagine a successor system that\n   would use\
    \ information stored at nodes in the hierarchy to specify\n   different matching\
    \ rules for subsidiary nodes (or equivalent\n   arrangements for non-hierarchical\
    \ systems).  It is not clear whether\n   that would be a good idea, but it certainly\
    \ is not possible with the\n   DNS as we know it.\n"
- title: '3.4.  Matching Part III: Label Synonyms, Equivalent Names, and Variants'
  contents:
  - "3.4.  Matching Part III: Label Synonyms, Equivalent Names, and Variants\n   As\
    \ the initial phases of work on IDNs started to conclude, it became\n   obvious\
    \ that the nature and evolution of human language and writing\n   systems required\
    \ treating some names as \"the same as\" others.  The\n   first important example\
    \ of this involved the relatively recent effort\n   to simplify the Chinese writing\
    \ system, thereby creating a\n   distinction between \"Simplified\" and \"Traditional\"\
    \ Chinese even\n   though the meaning of the characters remained the same in almost\
    \ all\n   cases (in so-called ideographic character sets, characters have\n  \
    \ meaning rather than exclusively representing sounds).  A joint effort\n   among\
    \ the relevant Country Code Top-Level Domain (ccTLD) registries\n   and some other\
    \ interested parties produced a set of recommendations\n   for dealing with the\
    \ issues with that script [RFC3743] and introduced\n   the concept of \"variant\"\
    \ characters and domain names.\n   However, when names are seen as having meanings,\
    \ rather than merely\n   being mnemonics, especially when they represent brands\
    \ or the\n   equivalent, or when spelling for a particular written language is\
    \ not\n   completely standardized, demands to treat different strings as exact\n\
    \   equivalents are obvious and inevitable.  As a trivial English-\n   language\
    \ example, it is widely understood that \"colour\" and \"color\"\n   represent\
    \ the same word, so does that imply that, if they are used as\n   DNS labels in\
    \ domain names all of whose other labels are identical,\n   the two domain names\
    \ should be treated as identical?  Examples for\n   other languages or writing\
    \ systems, especially ones in which some or\n   all markings that distinguish\
    \ characters or words by sound or tone or\n   that change the pronunciation of\
    \ words are optional, are often more\n   numerous and more problematic than national\
    \ spelling differences in\n   English, but they are harder to explain to those\
    \ unfamiliar with\n   those other languages or writing systems (and hard to illustrate\
    \ in\n   ASCII-only Internet-Drafts and RFCs).  Although approximations are\n\
    \   possible, the DNS cannot handle that requirement: not only do its\n   aliasing\
    \ mechanisms (CNAME, DNAME, and various proposals for newer\n   and different\
    \ types of aliasing [DNS-Aliases] [DNS-BNAME]) not\n   provide a strong enough\
    \ binding, but the ability to use those aliases\n   from a subtree controlled\
    \ by one administrative entity to that of\n   another one implies that there is\
    \ little or no possibility of the\n   owner (in either the DNS sense or the registrar-registrant\
    \ one) of a\n   particular name to control the synonyms for it.  Some of that\
    \ issue\n   can be dealt with at the application level, e.g., by redirects in\
    \ web\n   protocols, but taking that approach, which is the essential\n   characteristic\
    \ of \"if both names belong to the same owner, everything\n   is OK\" approaches,\
    \ results in names being handled in inconsistent\n   ways in different protocols.\n\
    \   A different way of looking at part of this issue (and, to some\n   degree,\
    \ of the one discussed above in Section 3.3) is that these\n   perceived equivalences\
    \ and desired transformations are context-\n   dependent, but the DNS resolution\
    \ process is not [RFC6912].\n   Similar problems arise as people notice that some\
    \ characters are\n   easily mistaken for others and that might be an opportunity\
    \ for user\n   confusion and attacks.  Commonly cited examples include the Latin\
    \ and\n   Cyrillic script \"a\" characters, which are identical [CACM-Homograph],\n\
    \   the characters in many scripts that look like open circles or\n   vertical\
    \ or horizontal lines, and even the Latin script letter \"l\"\n   and the European\
    \ digit \"1\", but examples abound in other scripts and\n   combinations of scripts\
    \ as well.  The most common proposed solution\n   within the DNS context has been\
    \ to treat these cases, as well as\n   those involving orthographic variations,\
    \ as \"variants\" (but variants\n   different from the system for Chinese characters\
    \ mentioned above) and\n   either ban all but one (or a few) of the possible labels\
    \ from the DNS\n   (possibly on a first come, first served basis) or ensure that\
    \ any\n   collection of such strings that are delegated as assigned to the same\n\
    \   ownership (see above).  Neither solution is completely satisfactory:\n   if\
    \ all but one string is excluded, users who guess at a different\n   form, perhaps\
    \ in trying to transcribe characters from written or\n   printed form, don't find\
    \ what they are looking for and, as pointed\n   out above, \"same ownership\"\
    \ is sufficient only with carefully\n   designed and administered applications\
    \ protocol support, and\n   sometimes not then.\n   Some of these issues are discussed\
    \ at more length in an ICANN report\n   [ICANN-VIP].\n"
- title: 3.5.  Query Privacy
  contents:
  - "3.5.  Query Privacy\n   There has been growing concern in recent years that DNS\
    \ queries occur\n   in cleartext on the public Internet and that, if those queries\
    \ can be\n   intercepted, they can expose a good deal of information about\n \
    \  interests and contacts that could compromise individual privacy.\n   While\
    \ a number of proposals, including query name minimization\n   [RFC7816] and running\
    \ DNS over an encrypted tunnel [RFC7858], have\n   been made to mitigate that\
    \ problem, they all appear to share the\n   common properties of security patches\
    \ rather than designed-in\n   security or privacy mechanisms.  While experience\
    \ may prove otherwise\n   once (and if) they are widely deployed, it does not\
    \ appear that any\n   of them are as satisfactory as a system with query privacy\
    \ designed\n   in might be.  More general tutorials on this issue have appeared\n\
    \   recently [Huston2017a].\n"
- title: '3.6.  Alternate Namespaces for Public Use in the DNS Framework: The'
  contents:
  - "3.6.  Alternate Namespaces for Public Use in the DNS Framework: The\n      CLASS\
    \ Problem\n   The DNS standards include specification of a CLASS value, which\n\
    \   \"identifies a protocol family or instance of a protocol\" (RFC 1034,\n  \
    \ Section 3.6, and elsewhere).  While CLASS was used effectively in the\n   early\
    \ days of the DNS to manage different protocol families within\n   the same administrative\
    \ environment, recent attempts to use it to\n   either partition the DNS namespace\
    \ in other ways such as for\n   non-ASCII names (partially to address the issues\
    \ in Sections 3.2 and\n   3.3) or use DNS mechanisms for entirely different namespaces\
    \ have\n   exposed fundamental problems with the mechanism [Sullivan-Class].\n\
    \   Perhaps the most fundamental of those problems is disagreement about\n   whether\
    \ multiple CLASSes were intended to exist within a given zone\n   (with records\
    \ within RRSETs) or whether different CLASSes implied\n   different zones.  Different\
    \ implementations make different\n   assumptions [Faltstrom-2004] [Vixie-20170704].\
    \  These problems have\n   led to recommendations that it be dropped entirely\
    \ [Sullivan-Class],\n   but discussions on the IETF list and in WGs in mid-2017\
    \ made it clear\n   that there is no clear consensus on that matter.\n"
- title: 3.7.  Loose Synchronization
  contents:
  - "3.7.  Loose Synchronization\n   The DNS model of master and slave servers, with\
    \ the latter initiating\n   updates based on expiration interval values, and local\
    \ caches with\n   updates based on TTL values, depends heavily on an approach\
    \ that has\n   come to be called \"loose synchronization\", i.e., that there can\
    \ be no\n   expectation that all of the servers that might reasonably answer a\n\
    \   query will have exactly the same data unless those data have been\n   unchanged\
    \ for a rather long period.  Put differently, if some or all\n   of the records\
    \ associated with a particular node in the DNS\n   (informally, a fully qualified\
    \ domain name (FQDN)) change, one cannot\n   expect those changes to be propagated\
    \ immediately.\n   That model has worked rather well since the DNS was first deployed,\n\
    \   protecting the system from requirements for mechanisms that are\n   typical\
    \ where a simultaneous update of multiple systems is needed.\n   Such mechanisms\
    \ include elaborate locking, complex update procedures\n   and handshaking, or\
    \ journaling.  As has often been pointed out with\n   the Internet, implementation\
    \ and operational complexity are often the\n   enemy of stability, security, and\
    \ robustness.  Loose synchronization\n   has helped keep the DNS as simple and\
    \ robust as possible.\n   A number of recent ideas about using the DNS to store\
    \ data for which\n   important changes occur very rapidly are, however, largely\n\
    \   incompatible with loose synchronization.  Efforts to use very short\n   (or\
    \ zero) refresh times (in SOA records for slave updates from\n   masters) and\
    \ TTLs (for caches) to simulate nearly simultaneous\n   updating may work up to\
    \ a point but appear to impose very heavy loads\n   on servers and distribution\
    \ mechanisms that were not designed to\n   accommodate that style of working.\
    \  Similar observations can be made\n   about attempts to use the NOTIFY extension\
    \ [RFC1996] or dynamic,\n   \"server-push\", updating rather than the traditional\
    \ DNS mechanisms.\n   While the NOTIFY and push mechanisms normally provide refresh\
    \ times\n   and update mechanisms faster than those specified in RFCs 1034 and\n\
    \   1035, they imply that a \"master\" server must know the identities of\n  \
    \ (and have good connectivity to all of) its slaves.  That defeats at\n   least\
    \ some of the advantages associated with stealth slaves,\n   particularly those\
    \ associated with reduction of query traffic across\n   the Internet.  Those mechanisms\
    \ do nothing for cache updates: unless\n   servers keep track of the source of\
    \ every query for names associated\n   with a specific zone and then somehow notify\
    \ the query source\n   systems, the only alternative to having information that\
    \ might be\n   obsolete stored in caches is to use very short or zero TTLs so\
    \ the\n   cached data time out almost immediately after being stored (or are\n\
    \   not stored at all), requiring a new query to an authoritative server\n   each\
    \ time a resolver attempts to look up a name.\n"
- title: 3.8.  Private Namespaces and Special Names
  contents:
  - "3.8.  Private Namespaces and Special Names\n   Almost since the DNS was first\
    \ deployed, there have been situations\n   in which it is desirable to use DNS-like\
    \ names, and often DNS\n   resolution mechanisms or modifications of them, with\
    \ namespaces for\n   which globally available and consistent resolution using\
    \ the public\n   DNS is either unfeasible or undesirable (and for which the use\
    \ of\n   CLASS is not an appropriate mechanism).  The need to isolate names\n\
    \   and addresses on LANs from the public Internet, typically via \"split\n  \
    \ horizon\" approaches, is one example of this requirement although\n   often\
    \ not recognized as such.  Another example that has generated a\n   good deal\
    \ of controversy involves \"special names\" -- labels or\n   pseudo-labels, often\
    \ in TLD positions, that signal that the full name\n   should not be subject to\
    \ normal DNS resolution or other processing\n   [RFC6761] [RFC8244].\n   Independent\
    \ of troublesome policy questions about who should allocate\n   such names and\
    \ the procedures to be used, they almost inherently\n   require either a syntax\
    \ convention to identify them (there actually\n   was such a convention, but it\
    \ was abandoned many years ago and there\n   is no plausible way to reinstitute\
    \ it) or tables of such names that\n   are known to, and kept updated on, every\
    \ resolver on the Internet, at\n   least if spurious queries to the root servers\
    \ are to be avoided.\n   If the DNS were to be redesigned and replaced, we could\
    \ recognize\n   this requirement as part of the design and handle it much better\
    \ than\n   it is possible to handle it today.\n"
- title: 3.9.  Alternate Query or Response Encodings
  contents:
  - "3.9.  Alternate Query or Response Encodings\n   The DNS specifies formats for\
    \ queries and data responses, based on\n   the state of the art and best practices\
    \ at the time it was designed.\n   Recent work has suggested that there would\
    \ be significant advantages\n   to supporting at least a description of the DNS\
    \ messages in one or\n   more alternate formats, such as JSON [Hoffman-DNS-JSON]\n\
    \   [Hoffman-SimpleDNS-JSON].  While that work has been carefully done to\n  \
    \ avoid requiring changes to the DNS, much of the argument for having\n   such\
    \ a JSON-based description format could easily be turned into an\n   argument\
    \ that, if the DNS were being revised, that format might be\n   preferable as\
    \ a more direct alternative to having DNS queries and\n   responses in the original\
    \ form.\n"
- title: 3.10.  Distribution and Management of Root Servers
  contents:
  - "3.10.  Distribution and Management of Root Servers\n   The DNS model requires\
    \ a collection of root servers that hold, at\n   minimum, information about top-level\
    \ domains.  Over the years, that\n   requirement has evolved from a technically\
    \ fairly minor function,\n   normally carried out as a service to the broader\
    \ Internet community\n   and its users and systems, to a subject that is intensely\n\
    \   controversial with regard to control of those servers, including how\n   they\
    \ should be distributed and where they should be located.  While a\n   number\
    \ of mechanisms, most recently including making the information\n   more local\
    \ [RFC7706], have been proposed and one (anycast [RFC7094])\n   is in very active\
    \ use to mitigate some of the real and perceived\n   problems, it seems obvious\
    \ that a DNS successor, designed for today's\n   global Internet and perceived\
    \ requirements, could handle these\n   problems in a technically more appropriate\
    \ and less controversial\n   way.  Some additional discussion of the issues involved\
    \ appears in a\n   recent paper [Huston2017b].\n"
- title: 3.11.  Identifiers versus Brands and Other Convenience Names
  contents:
  - "3.11.  Identifiers versus Brands and Other Convenience Names\n   A key design\
    \ element of the original network object naming systems\n   for the ARPANET, largely\
    \ inherited by the DNS, was that the names,\n   while expected to be mnemonic,\
    \ were identifiers and their being\n   highly distinguishable and not prone to\
    \ ambiguity was important.\n   That led to restrictive rules about what could\
    \ appear in a name.\n   Those restrictions originated with the host table and\
    \ even earlier\n   [RFC0236] [RFC0247] and came to the DNS (largely via SMTP)\
    \ as the\n   \"preferred syntax\" (RFC 1034, Section 3.5) or what we now often\
    \ call\n   the letter-digit-hyphen (LDH) rule.  Similar rules to make\n   identifiers\
    \ easier to use, less prone to ambiguity, or less likely to\n   interfere with\
    \ syntax occur frequently in more formal languages.  For\n   example, almost every\
    \ programming language has restrictions on what\n   can appear in an identifier,\
    \ and Unicode provides general\n   recommendations about identifier composition\
    \ [Unicode-USA31].  Both\n   are quite restrictive as compared to the number of\
    \ characters and\n   total number of strings that can be written using that character\n\
    \   coding system.\n   That model, which originally prohibited labels starting\
    \ with digits\n   in order to avoid any possible confusion with IP addresses,\
    \ began to\n   break down in 1987 or 1988 when a company named 3Com wanted to\
    \ use\n   its corporate name as a label within the COM TLD, and the rule was\n\
    \   relaxed [RFC1123].\n   In the last decade or two, the perspective that company\
    \ names should\n   be supported if possible has expanded and done so largely without\
    \ its\n   limits, if any, being explicitly understood or acknowledged.  In the\n\
    \   current form, the DNS is really (and primarily) a system for\n   expressing\
    \ thoughts and concepts.  Those include free expression of\n   ideas in as close\
    \ to natural language as possible as well as\n   representation of product names\
    \ and brands.  That view requires\n   letter-like characters that might not be\
    \ reasonable in identifiers\n   along with a variety of symbols and punctuation.\
    \  It may also require\n   indicators of preferred type styles to provide information\
    \ in a form\n   that exactly matches personal or legal preferences.  At least\
    \ if\n   carried to an extreme, that perspective would argue for standardizing\n\
    \   word and sentence separators, removing the limit of 63 octets per\n   label\
    \ and probably the limit of 255 octets on the total length of a\n   domain name,\
    \ and perhaps even eliminating the hierarchy or allowing\n   separators for labels\
    \ in presentation form (now fixed at \".\" for the\n   DNS) to be different according\
    \ to context.  It suggests that, at\n   least, the original design was defective\
    \ in not prioritizing those\n   uses over the more restrictive approach associated\
    \ with prioritizing\n   unique and unambiguous identifiers.\n   So we have two\
    \ or, depending on how one counts, three very different\n   use cases.  The historical\
    \ one is support for unique identifiers.\n   The other is expression of ideas\
    \ and, if one considers them separate,\n   presentation of brand and product names.\
    \  Because they inherently\n   involve different constraints, priorities, and\
    \ success criteria,\n   these perspectives are, at best, only loosely compatible.\n\
    \   We cannot simultaneously optimize both the identifier perspective and\n  \
    \ either or both of the others in the same system.  At best, there are\n   some\
    \ complex trade-offs involved.  Even then, it is not clear that\n   the same DNS\
    \ (or other system) can accommodate all of them.  Until we\n   come to terms with\
    \ that, the differences manifest themselves with\n   friction among communities,\
    \ most often with tension between \"we want\n   to do (or use or sell) these types\
    \ of labels\" and \"not good for the\n   operational Internet or the DNS\".\n"
- title: 3.12.  A Single Hierarchy with a Centrally Controlled Root
  contents:
  - "3.12.  A Single Hierarchy with a Centrally Controlled Root\n   A good many Internet\
    \ policy discussions in the last two decades have\n   revolved around such questions\
    \ of how many top-level domains there\n   should be, what they should be, who\
    \ should control them and how, how\n   (or if) their individual operations and\
    \ policy decisions should be\n   accountable to others, and what processes should\
    \ be used (and by what\n   entities or organizational structures) to make those\
    \ decisions.\n   Several people have pointed out that, if we were designing a\
    \ next-\n   generation DNS using today's technology, it should be possible to\n\
    \   remove the technical requirement for a central authority over the\n   root\
    \ (some people have suggested that blockchain approaches would be\n   helpful\
    \ for this purpose; others believe they just would not scale\n   adequately, at\
    \ least at acceptable cost, but that other options are\n   possible).  Whether\
    \ elimination of a single, centrally controlled,\n   root would be desirable or\
    \ not is fairly obviously a question of\n   perspective and priorities.\n"
- title: 3.13.  Newer Application Protocols, New Requirements, and DNS Evolution
  contents:
  - "3.13.  Newer Application Protocols, New Requirements, and DNS Evolution\n   New\
    \ work done in other areas has led to demands for new DNS features,\n   many of\
    \ them involving data values that require recursively\n   referencing the DNS.\
    \  Early record types that did that were\n   accompanied by restrictions that\
    \ reduced the risk of looping\n   references or other difficulties.  For example,\
    \ while the MX RRTYPE\n   has a fully qualified domain name as its data, SMTP\
    \ imposes \"primary\n   name\" restrictions that prevent the name used from being,\
    \ e.g., a\n   CNAME.  While loops with CNAMEs are possible, Section 3.6 of RFC\
    \ 1034\n   includes a discussion about ways to avoid problems and how they\n \
    \  should be handled.  Some newer protocols and conventions can cause\n   more\
    \ stress.  There are separate issues with additions and with how\n   the DNS has\
    \ been extended to try to deal with them.\n"
- title: 3.13.1.  The Extensions
  contents:
  - "3.13.1.  The Extensions\n   Some examples of DNS extensions for new protocol\
    \ demands that\n   illustrate, or have led to, increased stress include:\n   NAPTR:\
    \  Requires far more complex data in the DNS for ENUM (e.g.,\n      Voice over\
    \ IP (VoIP), specifically SIP) support, including URI\n      information and hence\
    \ recursive or repeated lookups, than any of\n      the RRTYPEs originally supported.\
    \  The RRSET associated with these\n      records can become quite large because\
    \ the separator between the\n      various records is part of the RDATA, and not\
    \ the {owner, class,\n      type} triple (a problem slightly related to the problem\
    \ with\n      overloading of TXT RRTYPE discussed in Section 3.13.2).  This\n\
    \      problem, and similar ones for some of the cases below. may suggest\n  \
    \    that any future design is in need of a different TYPE model such\n      as\
    \ systematic arrangements for subtypes or some explicit hierarchy\n      in the\
    \ TYPEs.\n   URI:  Has a URI as its data, typically also requiring recursive or\n\
    \      repeated lookups.\n   Service location (SRV) and credential information\
    \ (including Sender\n   Policy Framework (SPF) and DomainKeys Identified Mail\
    \ (DKIM)):\n      Require structured data and, especially for the latter two,\n\
    \      significantly more data than most original RRTYPEs.\n   URI/URL:  The early\
    \ design decision for the World Wide Web that its\n      mechanism for identifying\
    \ digital web content (now known as\n      Uniform Resource Identifiers [RFC3986])\
    \ did so by using domain\n      names and hence the network location of the information\
    \ or other\n      material.  That, in turn, has required systems intended to improve\n\
    \      web performance by locating and retrieving a \"nearest copy\"\n      (rather\
    \ than the single copy designated by the URL) to intercept\n      DNS queries\
    \ and respond with values that are not precisely those\n      stored for the designated\
    \ domain name in the DNS or to otherwise\n      access information in a way not\
    \ supported by the DNS itself.\n"
- title: 3.13.2.  Extensions and Deployment Pressures -- The TXT RRTYPE
  contents:
  - "3.13.2.  Extensions and Deployment Pressures -- The TXT RRTYPE\n   Unfortunately\
    \ (but unsurprisingly), and despite IETF efforts to make\n   things easier [RFC6895],\
    \ DNS support libraries have often been slow\n   to add full support for new RRTYPEs.\
    \  This has impeded deployment of\n   applications that depend on those types\
    \ and that must ask (query)\n   explicitly for them.  Both to get faster deployment\
    \ and, at least\n   until recently, to avoid burdensome IETF approval procedures,\
    \ many\n   application designers have chosen to push protocol-critical\n   information\
    \ into records with TXT RRTYPE, a record type that was\n   originally intended\
    \ to include only information equivalent to\n   comments.\n   This causes two\
    \ problems.  First, TXT records used this way tend to\n   get long and complex,\
    \ which is a problem in itself if one is trying\n   to minimize TCP connections.\
    \  Second, applications that are\n   attempting to obtain data cannot merely ask\
    \ for the relevant QTYPE;\n   they must obtain all of the records with QTYPE TXT\
    \ and parse them to\n   determine which ones are of interest.  That would be easier\
    \ if there\n   was some standard for how to do that parsing, but, at least in\
    \ part\n   because the clear preference in the DNS design is for distinct\n  \
    \ RRTYPEs for different kinds of information, there is no such\n   standard. \
    \ (There was a proposal in 1993 to structure the TXT DATA in\n   a way that would\
    \ have addressed the issue [RFC1464], but it\n   apparently never went anywhere.)\n\
    \   On the other hand, this issue is somewhat different from most of the\n   others\
    \ described in this document because (as the IETF has\n   recommended several\
    \ times) the problem is easily solved within the\n   current DNS design by allocating\
    \ and supporting new RRTYPEs when\n   needed rather than using TXT as a workaround\
    \ (that does not mean that\n   other solutions are impossible, either with the\
    \ current DNS or with\n   some other design).  The problem then lies in the implementations\n\
    \   and/or mechanisms that deter or impede rapid deployment of support\n   for\
    \ new RRTYPEs.\n"
- title: 3.13.3.  Periods and Zone Cut Issues
  contents:
  - "3.13.3.  Periods and Zone Cut Issues\n   One of the DNS characteristics that\
    \ is poorly understood by\n   non-experts is that the period (\".\", U+002E) character\
    \ can be used in\n   four different ways:\n   o  As a label separator in the presentation\
    \ form that also designates\n      a \"zone break\" (delegation boundary).  For\
    \ example,\n      foo.bar.example.com indicates the owner, \"foo\", of records\
    \ in the\n      \"bar.example.com\" zone.\n   o  As a label separator in the presentation\
    \ form that does not\n      designate a zone break.  For example, foo.bar.example.com\n\
    \      indicates the owner, \"foo.bar\", of records in the \"example.com\"\n \
    \     zone.\n   o  As a character within a label, including as a substitute for\
    \ an\n      at-sign (\"@\") when an email address appears in an SOA record or\
    \ in\n      a label that denotes such an address (see Section 2 above).  The\n\
    \      ability to embed periods in labels in this way has also led to\n      attacks\
    \ in which, e.g., a domain name consisting of the labels\n      \"example\" followed\
    \ by \"com\" is deliberately confused with the\n      single label \"example.com\"\
    \ with an embedded period.\n   o  At the end of a fully qualified domain name\
    \ to designate the root\n      zone, e.g., \"example.com.\" (RFC 1034, Section\
    \ 3.1).\n   In general, these cases cannot be distinguished by looking at them.\n\
    \   The third is problematic for non-DNS reasons, e.g.,\n   \"john.doe.example.net\"\
    \ can be interpreted as either a simple FQDN or\n   as a notation for john@doe.example.net,\
    \ john.doe@example.net, or even\n   (at least in principle) john.doe.example@net.\n\
    \   The distinction between the FQDN interpretation and the first email-\n   like\
    \ one was probably not important as the DNS was originally\n   intended to be\
    \ used.  However, as soon as RRTYPEs (other than NS\n   records that define the\
    \ zone cut) are used that are sensitive to the\n   boundaries between zones, the\
    \ distinctions become important to people\n   other than the relevant zone administrators.\
    \  DNSSEC [RFC4033]\n   involves one such set of relationships.  It increases\
    \ the importance\n   of questions about what should go in a parent zone and what\
    \ should go\n   in child zones and how much difference it makes if NS records\
    \ in a\n   parent zone for a child zone are consistent with the records and data\n\
    \   in the child zone.  This also causes application issues and may raise\n  \
    \ questions about relationships between registrars and one or more\n   registries\
    \ or, if they are separate, DNS operators.\n"
- title: 3.14.  Scaling of Reputation and Other Ancillary Information
  contents:
  - "3.14.  Scaling of Reputation and Other Ancillary Information\n   The original\
    \ design for DNS administration, reflected in RFC 1591\n   [RFC1591] and elsewhere,\
    \ assumed that all domains would exhibit a\n   very high level of responsibility\
    \ toward and for the community and\n   that level of responsibility would be enforced\
    \ if necessary.\n   More recent decisions, many of them associated with commercialization\n\
    \   of the DNS, have eroded those very strong assumptions of registry\n   responsibility\
    \ and accountability to the point that many consider\n   decisions about delegation\
    \ of names, identification of registrants,\n   and relationships among names to\
    \ be matters of \"registrant beware\"\n   and even \"user and applications beware\"\
    .  While some recent protocols\n   and proposals at least partially reflect that\
    \ original model of a\n   high level of responsibility (see, e.g., IDNA [RFC5890]\
    \ and a more\n   recent discussion [Klensin-5891bis]), other decisions and actions\n\
    \   tend to shift responsibility to the registrant or try to avoid\n   accountability\
    \ entirely.  One possible approach to the problems,\n   especially security problems,\
    \ that are enabled by those new trends\n   and the associated environment is to\
    \ establish reputation systems\n   associated with clearly defined administrative\
    \ boundaries and with\n   warnings to users, even if those reputation systems\
    \ are managed by\n   parties not directly associated with the DNS.\n   The IETF\
    \ DBOUND WG [IETF-DBOUND] addressed ways to establish and\n   document boundaries\
    \ more precise than simple dependencies on TLDs,\n   but it was not successful\
    \ in producing a standard.\n   A TLD reputation-based approach was adopted by\
    \ some web browsers\n   after IDNs and a growing number of Generic Top-Level Domains\
    \ (gTLDs)\n   were introduced; that approach was based on a simple list and does\n\
    \   not scale to the current size of the DNS or even the DNS root.\n"
- title: 3.15.  Tensions among Transport, Scaling, and Content
  contents:
  - "3.15.  Tensions among Transport, Scaling, and Content\n   The original design\
    \ for the DNS envisaged a simple query and response\n   protocol where both the\
    \ command and the response could be readily\n   mapped into a single IP packet.\
    \  The host requirements specification\n   [RFC1123] required all DNS applications\
    \ to accept a UDP query or\n   response over UDP with up to 512 octets of DNS\
    \ payload.  TCP was seen\n   as a fallback when the response was greater than\
    \ this 512-octet\n   limit, and this fallback to use TCP as the transport protocol\
    \ was\n   considered to be the exception rather than the rule.\n   Over the intervening\
    \ years, we have seen the rise of a common\n   assumption of an Internet-wide\
    \ Maximum Transmission Unit (MTU) size\n   of 1,500 octets, accompanied with an\
    \ assumption that UDP\n   fragmentation is generally viable.  This underpins the\
    \ adoption of\n   the Extension Mechanisms for DNS (EDNS(0)) [RFC6891] to, among\
    \ other\n   things, specify a UDP buffer size larger than 512 octets and a\n \
    \  suggestion within that specification to use 4,096 as a suitable\n   compromise\
    \ for the UDP payload size.  This has proved to be\n   fortuitous for the DNSSEC\
    \ security extensions where the addition of\n   DNSSEC security credentials in\
    \ DNS responses [RFC4034] can lead to\n   the use of large DNS responses.  However,\
    \ this exposes some tensions\n   over the handling of fragmentation in IP, where\
    \ UDP fragments have\n   been observed to be filtered by various firewalls.  Additionally\
    \ for\n   IPv6, there are the factors of filtering the ICMPv6 Packet Too Big\n\
    \   diagnostic messages and discarding the IPv6 packets that contain\n   extension\
    \ headers [RFC7872].  More generally, fragmented UDP packets\n   appear to have\
    \ a lower level of reliability than unfragmented TCP\n   packets.\n   Behind this\
    \ observation about relative reliability of delivery is the\n   tension between\
    \ the lightweight load of UDP and the downside of\n   elevated probability of\
    \ discarding of packet fragments as compared to\n   TCP, which offers increased\
    \ levels of assurance of content delivery,\n   but with the associated imposition\
    \ of TCP session state and the\n   downside of reduced DNS scalability and increased\
    \ operational cost.\n"
- title: 4.  The Inverse Lookup Requirement
  contents:
  - "4.  The Inverse Lookup Requirement\n   The requirement for an inverse lookup\
    \ capability, i.e., the ability\n   to find a domain name given an address and,\
    \ in principle, to find the\n   owner of a record by any of its data elements,\
    \ was recognized in RFC\n   882.  The feature was identified as optional but carried\
    \ forward into\n   RFCs 1034 and 1035 but was explicitly deprecated by RFC 1034\
    \ for\n   address-to-hostname lookup (although RFC 1035 uses exactly that type\n\
    \   of lookup in an example).  Despite the discussion of inverted forms\n   of\
    \ the database in RFC 1035, inverse lookup has rarely, if ever, been\n   implemented,\
    \ at least in its general form.  The fundamental\n   difficulties with inverse\
    \ lookup in either the form described in RFC\n   882 or the \"in-addr.arpa\" approach\
    \ mentioned below are consistent\n   with the problems described in fundamental\
    \ papers on database\n   management [Codd1970] but were not described in RFC 1035\
    \ or related\n   contemporary IETF documents.\n   It is interesting to speculate\
    \ on how many of the current\n   requirements to treat aliases as an integrated\
    \ set of synonyms (e.g.,\n   for variant handling) would have been addressed if\
    \ inverse lookups\n   could reliably produce the owners of CNAME records.\n  \
    \ At the same time, it was obviously important to have some mechanism\n   for\
    \ address-to-name resolution.  It was provided by PTR RRTYPE\n   entries in the\
    \ IN-ADDR.ARPA zone, with delegations on octet\n   boundaries.  However, that\
    \ approach required that information be\n   maintained in parallel, in separate\
    \ zones, for the name-to-address\n   and address-to-name mappings.  That synchronization\
    \ requirement for\n   two copies of essentially the same data was another popular\
    \ topic in\n   the database management literature a decade or more before the\
    \ DNS\n   and, predictably, led to many inconsistencies and other failures.\n\
    \   The introduction of Classless Inter-Domain Routing (CIDR) [RFC1518]\n   and\
    \ Provider-Dependent addresses made the situation even more\n   difficult, because\
    \ it was no longer possible to delegate the\n   administration of reverse mapping\
    \ records for small networks to the\n   actual operators of those networks.  ISPs\
    \ and other aggregators often\n   had no incentive to maintain reverse mapping\
    \ records consistent with\n   network operator assignment of domain names.  A\
    \ proposal to use\n   binary labels to work around that issue [RFC2673] was abandoned\n\
    \   somewhat over three years later [RFC6891].\n   Independent of how much or\
    \ little harm the absence of a general\n   inverse lookup facility has caused\
    \ and how effective the\n   \"in-addr.arpa\" approach has been, inverse lookup\
    \ remains a facility\n   that was anticipated and known to be useful in the original\
    \ DNS\n   design but that has never been fully realized.\n"
- title: 5.  Internet Scale, Function Support, and Incremental Deployment
  contents:
  - "5.  Internet Scale, Function Support, and Incremental Deployment\n   In addition\
    \ to the stresses caused by the new functions, including\n   those described in\
    \ Section 3.13, incremental deployment of systems\n   that utilize them means\
    \ that some functions will work in some\n   environments and not others.  This\
    \ has been especially problematic\n   with complex, multi-record, capabilities\
    \ like DNSSEC that provide or\n   require special validation mechanisms and with\
    \ some EDNS(0)\n   extensions [RFC6891] that require both the client and server\
    \ to\n   accept particular extensions.  When DNS functionality is required in\n\
    \   embedded devices, deployment of new features across the entire\n   Internet\
    \ in a reasonable period of time is nearly impossible.\n   If one were redesigning\
    \ the DNS, one could imagine ways to address\n   these issues that would make\
    \ them slightly more tractable, and, of\n   course, the features that are known\
    \ to be necessary today could\n   become part of the baseline, \"mandatory to\
    \ implement\", specification.\n"
- title: 6.  Searching and the DNS -- An Historical Note
  contents:
  - "6.  Searching and the DNS -- An Historical Note\n   Some of the issues identified\
    \ above might reasonably be addressed,\n   not by changing the DNS itself but\
    \ by changing our model of what it\n   is about and how it is used.  Specifically,\
    \ one key assumption when\n   the DNS (and the host table system before it) was\
    \ designed was that\n   it was a naming system for network resources, not, e.g.,\
    \ digital\n   content.  As such, exact matching was important, it was reasonable\
    \ to\n   have labels treated as mnemonics that did not necessarily have\n   linguistic\
    \ or semantic meaning except to those using them, and so on.\n   A return to that\
    \ model, presumably by having user-facing applications\n   call on an intermediate\
    \ layer to disambiguate user-friendly names and\n   map them to DNS names (or\
    \ network object locators more generally),\n   would significantly reduce stress\
    \ on the DNS and would also allow\n   dealing with types of matching and similar\
    \ or synonymous strings that\n   cannot be handled algorithmically no matter how\
    \ much DNS matching\n   rules were altered.\n   In some respects, search engines\
    \ based on free-text analysis and\n   linkages among information have come to\
    \ serve many of the functions\n   of such an intermediate layer.  Many studies\
    \ and sources have pointed\n   out that few users actually understand, much less\
    \ care about, the\n   distinction between a DNS name and a search term.  Recent\
    \ versions of\n   some web browsers have both recognized the failure of that\n\
    \   distinction and reinforced it by eliminating the separation between\n   \"\
    URL\" and \"search bar\".\n   It is worth noting that, while that \"search\" approach,\
    \ or some other\n   approach that abstracted and separated several of the issues\n\
    \   identified in Section 3 from the DNS protocol and database\n   themselves,\
    \ it does not address all of them.  At least some elements\n   of several of those\
    \ issues, such as the synchronization ones\n   described in Section 3.7 and the\
    \ transport ones described in\n   Section 3.15, are inherent in the DNS design,\
    \ and, if we are not\n   going to replace the DNS, we had best get used to them.\n\
    \   In the early part of the last decade, the IETF engaged in some\n   preliminary\
    \ exploration of the intermediate-layer approach in the\n   context of IDNs and\
    \ what were then called \"Internet keywords\"\n   [DNS-search].  While that exploratory\
    \ effort met several times\n   informally, it never became an organized IETF activity,\
    \ largely\n   because of the choice of what became the IDNA approach but also\
    \ in\n   part by signs that the \"Internet keywords\" efforts were beginning to\n\
    \   fall apart.\n   It may be time to reexamine intermediate-layer approaches.\
    \  If so,\n   the effort should examine use of those approaches by appropriate\n\
    \   user-facing applications that might be used to address some of the\n   issues\
    \ identified above.  The Internet and the DNS have changed\n   considerably since\
    \ the 2000-2003 period.  Several of those changes\n   are discussed elsewhere\
    \ in this document; others, including\n   repurposing of the DNAME RRTYPE from\
    \ support for transitions\n   [RFC2672] to a general-purpose mechanism for aliases\
    \ of subtrees\n   [RFC6672] and the addition of over a thousand new TLDs\n   [IANA-TLD-registry],\
    \ are not but nonetheless are part of the context\n   for intermediate-layer work\
    \ that did not exist in 2003.\n"
- title: 7.  Security Considerations
  contents:
  - "7.  Security Considerations\n   A wide range of security issues related to both\
    \ securing the DNS and\n   also to abilities to use namespaces for nefarious purposes\
    \ have\n   arisen.  Issues of securing the DNS would obviously be essential to\
    \ a\n   replacement of the DNS.  Issues of preventing nefarious use of the\n \
    \  namespace (e.g. use of the name that appears or disappears as a\n   signal\
    \ to bots) would appear to be harder to solve within the naming\n   system.\n"
- title: 8.  References
  contents:
  - '8.  References

    '
- title: 8.1.  Normative References
  contents:
  - "8.1.  Normative References\n   [RFC1034]  Mockapetris, P., \"Domain names - concepts\
    \ and facilities\",\n              STD 13, RFC 1034, DOI 10.17487/RFC1034, November\
    \ 1987,\n              <https://www.rfc-editor.org/info/rfc1034>.\n   [RFC1035]\
    \  Mockapetris, P., \"Domain names - implementation and\n              specification\"\
    , STD 13, RFC 1035, DOI 10.17487/RFC1035,\n              November 1987, <https://www.rfc-editor.org/info/rfc1035>.\n"
- title: 8.2.  Informative References
  contents:
  - "8.2.  Informative References\n   [CACM-Homograph]\n              Gabrilovich,\
    \ E. and A. Gontmakher, \"The Homograph Attack\",\n              Communications\
    \ of the ACM, Volume 45, Issue 2, pp. 128,\n              DOI 10.1145/503124.503156,\
    \ February 2002,\n              <http://www.cs.technion.ac.il/~gabr/papers/\n\
    \              homograph_full.pdf>.\n   [Cerf2017] Cerf, V., \"Desirable Properties\
    \ of Internet Identifiers\",\n              IEEE Internet Computing, Volume 21,\
    \ Issue 6, pp. 63-64,\n              DOI 10.1109/MIC.2017.4180839, November/December\
    \ 2017.\n   [Codd1970] Codd, E., \"A Relational Model of Data for Large Shared\n\
    \              Data Banks\", Communications of the ACM, Volume 13, Issue\n   \
    \           6, pp. 377-387, DOI 10.1145/362384.362685, June 1970,\n          \
    \    <https://dl.acm.org/citation.cfm?id=362685>.\n   [DNS-Aliases]\n        \
    \      Woolf, S., Lee, X., and J. Yao, \"Problem Statement: DNS\n            \
    \  Resolution of Aliased Names\", Work in Progress,\n              draft-ietf-dnsext-aliasing-requirements-01,\
    \ March 2011.\n   [DNS-BNAME]\n              Yao, J., Lee, X., and P. Vixie, \"\
    Bundled DNS Name\n              Redirection\", Work in Progress, draft-yao-dnsext-bname-06,\n\
    \              May 2016.\n   [DNS-search]\n              IETF, \"Internet Resource\
    \ Name Search Service (IRNSS)\",\n              2003, <https://datatracker.ietf.org/wg/irnss/about/>.\n\
    \   [Faltstrom-2004]\n              Faltstrom, P. and R. Austein, \"Design Choices\
    \ When\n              Expanding DNS\", Work in Progress,\n              draft-ymbk-dns-choices-00,\
    \ May 2004.\n   [Hoffman-DNS-JSON]\n              Hoffman, P., \"Representing\
    \ DNS Messages in JSON\", Work in\n              Progress, draft-hoffman-dns-in-json-13,\
    \ October 2017.\n   [Hoffman-SimpleDNS-JSON]\n              Hoffman, P., \"Simple\
    \ DNS Queries and Responses in JSON\",\n              Work in Progress, draft-hoffman-simplednsjson-01,\
    \ November\n              2017.\n   [Huston2017a]\n              Huston, G. and\
    \ J. Silva Dama, \"DNS Privacy\", The Internet\n              Protocol Journal,\
    \ Vol. 20, No. 1, March 2017,\n              <http://ipj.dreamhosters.com/wp-content/uploads/\n\
    \              issues/2017/ipj20-1.pdf>.\n   [Huston2017b]\n              Huston,\
    \ G., \"The Root of the Domain Name System\", The\n              Internet Protocol\
    \ Journal, Vol. 20, No. 2, pp. 15-25, June\n              2017, <http://ipj.dreamhosters.com/wp-content/uploads/\n\
    \              2017/08/ipj20-2.pdf>.\n   [IANA-TLD-registry]\n              Internet\
    \ Assigned Numbers Authority (IANA), \"Root Zone\n              Database\", <https://www.iana.org/domains/root/db>.\n\
    \   [ICANN-VIP]\n              ICANN, \"IDN Variant Issues Project: Final Integrated\n\
    \              Issues Report Published and Proposed Project Plan for Next\n  \
    \            Steps is Now Open for Public Comment\", February 2012,\n        \
    \      <https://www.icann.org/news/announcement-2012-02-20-en>.\n   [IETF-DBOUND]\n\
    \              IETF, \"Domain Boundaries (dbound)\", 2017,\n              <https://datatracker.ietf.org/wg/dbound/about/>.\n\
    \   [Klensin-5891bis]\n              Klensin, J. and A. Freytag, \"Internationalized\
    \ Domain\n              Names in Applications (IDNA): Registry Restrictions and\n\
    \              Recommendations\", Work in Progress,\n              draft-klensin-idna-rfc5891bis-01,\
    \ September 2017.\n   [Mockapetris-1988]\n              Mockapetris, P. and K.\
    \ Dunlap, \"Development of the Domain\n              Name System\", SIGCOMM '88\
    \ Symposium, pp. 123-133,\n              available from ISI Reprint Series, ISI/RS-88-219\n\
    \              <ftp://ftp.isi.edu/isi-pubs/rs-88-219.pdf>,\n              DOI\
    \ 10.1145/52324.52338, August 1988,\n              <http://dl.acm.org/citation.cfm?id=52338>.\n\
    \   [NRC-Signposts]\n              National Research Council, Signposts in Cyberspace:\
    \ The\n              Domain Name System and Internet Navigation,\n           \
    \   ISBN 0-309-54979-5, 2005, <https://www.nap.edu/\n              catalog/11258/signposts-in-cyberspace-the-domain-name-\n\
    \              system-and-internet-navigation>.\n   [RFC0236]  Postel, J., \"\
    Standard host names\", RFC 236,\n              DOI 10.17487/RFC0236, September\
    \ 1971,\n              <https://www.rfc-editor.org/info/rfc236>.\n   [RFC0247]\
    \  Karp, P., \"Proffered set of standard host names\", RFC 247,\n            \
    \  DOI 10.17487/RFC0247, October 1971,\n              <https://www.rfc-editor.org/info/rfc247>.\n\
    \   [RFC0799]  Mills, D., \"Internet name domains\", RFC 799,\n              DOI\
    \ 10.17487/RFC0799, September 1981,\n              <https://www.rfc-editor.org/info/rfc799>.\n\
    \   [RFC0810]  Feinler, E., Harrenstien, K., Su, Z., and V. White, \"DoD\n   \
    \           Internet host table specification\", RFC 810,\n              DOI 10.17487/RFC0810,\
    \ March 1982,\n              <https://www.rfc-editor.org/info/rfc810>.\n   [RFC0881]\
    \  Postel, J., \"Domain names plan and schedule\", RFC 881,\n              DOI\
    \ 10.17487/RFC0881, November 1983,\n              <https://www.rfc-editor.org/info/rfc881>.\n\
    \   [RFC0882]  Mockapetris, P., \"Domain names: Concepts and facilities\",\n \
    \             RFC 882, DOI 10.17487/RFC0882, November 1983,\n              <https://www.rfc-editor.org/info/rfc882>.\n\
    \   [RFC0883]  Mockapetris, P., \"Domain names: Implementation\n             \
    \ specification\", RFC 883, DOI 10.17487/RFC0883, November\n              1983,\
    \ <https://www.rfc-editor.org/info/rfc883>.\n   [RFC0952]  Harrenstien, K., Stahl,\
    \ M., and E. Feinler, \"DoD Internet\n              host table specification\"\
    , RFC 952, DOI 10.17487/RFC0952,\n              October 1985, <https://www.rfc-editor.org/info/rfc952>.\n\
    \   [RFC0953]  Harrenstien, K., Stahl, M., and E. Feinler, \"Hostname\n      \
    \        Server\", RFC 953, DOI 10.17487/RFC0953, October 1985,\n            \
    \  <https://www.rfc-editor.org/info/rfc953>.\n   [RFC0974]  Partridge, C., \"\
    Mail routing and the domain system\",\n              STD 10, RFC 974, DOI 10.17487/RFC0974,\
    \ January 1986,\n              <https://www.rfc-editor.org/info/rfc974>.\n   [RFC1123]\
    \  Braden, R., Ed., \"Requirements for Internet Hosts -\n              Application\
    \ and Support\", STD 3, RFC 1123,\n              DOI 10.17487/RFC1123, October\
    \ 1989,\n              <https://www.rfc-editor.org/info/rfc1123>.\n   [RFC1464]\
    \  Rosenbaum, R., \"Using the Domain Name System To Store\n              Arbitrary\
    \ String Attributes\", RFC 1464,\n              DOI 10.17487/RFC1464, May 1993,\n\
    \              <https://www.rfc-editor.org/info/rfc1464>.\n   [RFC1518]  Rekhter,\
    \ Y. and T. Li, \"An Architecture for IP Address\n              Allocation with\
    \ CIDR\", RFC 1518, DOI 10.17487/RFC1518,\n              September 1993, <https://www.rfc-editor.org/info/rfc1518>.\n\
    \   [RFC1591]  Postel, J., \"Domain Name System Structure and Delegation\",\n\
    \              RFC 1591, DOI 10.17487/RFC1591, March 1994,\n              <https://www.rfc-editor.org/info/rfc1591>.\n\
    \   [RFC1996]  Vixie, P., \"A Mechanism for Prompt Notification of Zone\n    \
    \          Changes (DNS NOTIFY)\", RFC 1996, DOI 10.17487/RFC1996,\n         \
    \     August 1996, <https://www.rfc-editor.org/info/rfc1996>.\n   [RFC2671]  Vixie,\
    \ P., \"Extension Mechanisms for DNS (EDNS0)\",\n              RFC 2671, DOI 10.17487/RFC2671,\
    \ August 1999,\n              <https://www.rfc-editor.org/info/rfc2671>.\n   [RFC2672]\
    \  Crawford, M., \"Non-Terminal DNS Name Redirection\",\n              RFC 2672,\
    \ DOI 10.17487/RFC2672, August 1999,\n              <https://www.rfc-editor.org/info/rfc2672>.\n\
    \   [RFC2673]  Crawford, M., \"Binary Labels in the Domain Name System\",\n  \
    \            RFC 2673, DOI 10.17487/RFC2673, August 1999,\n              <https://www.rfc-editor.org/info/rfc2673>.\n\
    \   [RFC3490]  Faltstrom, P., Hoffman, P., and A. Costello,\n              \"\
    Internationalizing Domain Names in Applications (IDNA)\",\n              RFC 3490,\
    \ DOI 10.17487/RFC3490, March 2003,\n              <https://www.rfc-editor.org/info/rfc3490>.\n\
    \   [RFC3491]  Hoffman, P. and M. Blanchet, \"Nameprep: A Stringprep\n       \
    \       Profile for Internationalized Domain Names (IDN)\",\n              RFC\
    \ 3491, DOI 10.17487/RFC3491, March 2003,\n              <https://www.rfc-editor.org/info/rfc3491>.\n\
    \   [RFC3596]  Thomson, S., Huitema, C., Ksinant, V., and M. Souissi,\n      \
    \        \"DNS Extensions to Support IP Version 6\", STD 88,\n              RFC\
    \ 3596, DOI 10.17487/RFC3596, October 2003,\n              <https://www.rfc-editor.org/info/rfc3596>.\n\
    \   [RFC3743]  Konishi, K., Huang, K., Qian, H., and Y. Ko, \"Joint\n        \
    \      Engineering Team (JET) Guidelines for Internationalized\n             \
    \ Domain Names (IDN) Registration and Administration for\n              Chinese,\
    \ Japanese, and Korean\", RFC 3743,\n              DOI 10.17487/RFC3743, April\
    \ 2004,\n              <https://www.rfc-editor.org/info/rfc3743>.\n   [RFC3986]\
    \  Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform\n              Resource\
    \ Identifier (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,\
    \ January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n  \
    \ [RFC4033]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n       \
    \       Rose, \"DNS Security Introduction and Requirements\",\n              RFC\
    \ 4033, DOI 10.17487/RFC4033, March 2005,\n              <https://www.rfc-editor.org/info/rfc4033>.\n\
    \   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.\n     \
    \         Rose, \"Resource Records for the DNS Security Extensions\",\n      \
    \        RFC 4034, DOI 10.17487/RFC4034, March 2005,\n              <https://www.rfc-editor.org/info/rfc4034>.\n\
    \   [RFC4343]  Eastlake 3rd, D., \"Domain Name System (DNS) Case\n           \
    \   Insensitivity Clarification\", RFC 4343,\n              DOI 10.17487/RFC4343,\
    \ January 2006,\n              <https://www.rfc-editor.org/info/rfc4343>.\n  \
    \ [RFC5890]  Klensin, J., \"Internationalized Domain Names for\n             \
    \ Applications (IDNA): Definitions and Document Framework\",\n              RFC\
    \ 5890, DOI 10.17487/RFC5890, August 2010,\n              <https://www.rfc-editor.org/info/rfc5890>.\n\
    \   [RFC5891]  Klensin, J., \"Internationalized Domain Names in\n            \
    \  Applications (IDNA): Protocol\", RFC 5891,\n              DOI 10.17487/RFC5891,\
    \ August 2010,\n              <https://www.rfc-editor.org/info/rfc5891>.\n   [RFC6672]\
    \  Rose, S. and W. Wijngaards, \"DNAME Redirection in the\n              DNS\"\
    , RFC 6672, DOI 10.17487/RFC6672, June 2012,\n              <https://www.rfc-editor.org/info/rfc6672>.\n\
    \   [RFC6761]  Cheshire, S. and M. Krochmal, \"Special-Use Domain Names\",\n \
    \             RFC 6761, DOI 10.17487/RFC6761, February 2013,\n              <https://www.rfc-editor.org/info/rfc6761>.\n\
    \   [RFC6891]  Damas, J., Graff, M., and P. Vixie, \"Extension Mechanisms\n  \
    \            for DNS (EDNS(0))\", STD 75, RFC 6891,\n              DOI 10.17487/RFC6891,\
    \ April 2013,\n              <https://www.rfc-editor.org/info/rfc6891>.\n   [RFC6895]\
    \  Eastlake 3rd, D., \"Domain Name System (DNS) IANA\n              Considerations\"\
    , BCP 42, RFC 6895, DOI 10.17487/RFC6895,\n              April 2013, <https://www.rfc-editor.org/info/rfc6895>.\n\
    \   [RFC6912]  Sullivan, A., Thaler, D., Klensin, J., and O. Kolkman,\n      \
    \        \"Principles for Unicode Code Point Inclusion in Labels in\n        \
    \      the DNS\", RFC 6912, DOI 10.17487/RFC6912, April 2013,\n              <https://www.rfc-editor.org/info/rfc6912>.\n\
    \   [RFC7094]  McPherson, D., Oran, D., Thaler, D., and E. Osterweil,\n      \
    \        \"Architectural Considerations of IP Anycast\", RFC 7094,\n         \
    \     DOI 10.17487/RFC7094, January 2014,\n              <https://www.rfc-editor.org/info/rfc7094>.\n\
    \   [RFC7706]  Kumari, W. and P. Hoffman, \"Decreasing Access Time to Root\n \
    \             Servers by Running One on Loopback\", RFC 7706,\n              DOI\
    \ 10.17487/RFC7706, November 2015,\n              <https://www.rfc-editor.org/info/rfc7706>.\n\
    \   [RFC7719]  Hoffman, P., Sullivan, A., and K. Fujiwara, \"DNS\n           \
    \   Terminology\", RFC 7719, DOI 10.17487/RFC7719, December\n              2015,\
    \ <https://www.rfc-editor.org/info/rfc7719>.\n   [RFC7816]  Bortzmeyer, S., \"\
    DNS Query Name Minimisation to Improve\n              Privacy\", RFC 7816, DOI\
    \ 10.17487/RFC7816, March 2016,\n              <https://www.rfc-editor.org/info/rfc7816>.\n\
    \   [RFC7858]  Hu, Z., Zhu, L., Heidemann, J., Mankin, A., Wessels, D.,\n    \
    \          and P. Hoffman, \"Specification for DNS over Transport\n          \
    \    Layer Security (TLS)\", RFC 7858, DOI 10.17487/RFC7858, May\n           \
    \   2016, <https://www.rfc-editor.org/info/rfc7858>.\n   [RFC7872]  Gont, F.,\
    \ Linkova, J., Chown, T., and W. Liu,\n              \"Observations on the Dropping\
    \ of Packets with IPv6\n              Extension Headers in the Real World\", RFC\
    \ 7872,\n              DOI 10.17487/RFC7872, June 2016,\n              <https://www.rfc-editor.org/info/rfc7872>.\n\
    \   [RFC8244]  Lemon, T., Droms, R., and W. Kumari, \"Special-Use Domain\n   \
    \           Names Problem Statement\", RFC 8244, DOI 10.17487/RFC8244,\n     \
    \         October 2017, <https://www.rfc-editor.org/info/rfc8244>.\n   [Sullivan-Class]\n\
    \              Sullivan, A., \"The DNS Is Not Classy: DNS Classes\n          \
    \    Considered Useless\", Work in Progress,\n              draft-sullivan-dns-class-useless-03,\
    \ July 2016.\n   [Unicode]  The Unicode Consortium, The Unicode Standard, Version\n\
    \              9.0.0, (Mountain View, CA: The Unicode Consortium,\n          \
    \    2016. ISBN 978-1-936213-13-9),\n              <http://www.unicode.org/versions/Unicode9.0.0/>.\n\
    \   [Unicode-UAX15]\n              Davis, M. and K. Whistler, \"Unicode Standard\
    \ Annex #15:\n              Unicode Normalization Forms\", February 2016,\n  \
    \            <http://unicode.org/reports/tr15/>.\n   [Unicode-USA31]\n       \
    \       Davis, M., \"Unicode Standard Annex #31: Unicode Identifier\n        \
    \      and Pattern Syntax\", May 2016,\n              <http://unicode.org/reports/tr31/>.\n\
    \   [Vixie-20170704]\n              Vixie, P., \"Subject: Re: new DNS classes\"\
    , message to\n              the IETF dnsop mailing list, 4 July 2017,\n      \
    \        <https://www.ietf.org/mail-archive/web/ietf/current/\n              msg103486.html>.\n"
- title: Acknowledgements
  contents:
  - "Acknowledgements\n   Many of the concerns and ideas described in this document\
    \ reflect\n   conversations over a period of many years, some rooted in DNS\n\
    \   \"keyword\" and \"search\" discussions that paralleled the development of\n\
    \   IDNs.  Conversations with, or writings of, Rob Austein, Christine\n   Borgman,\
    \ Carolina Carvalho, Vint Cerf, Lyman Chapin, Nazli Choucri,\n   Patrik Faltstrom,\
    \ Geoff Huston, Xiaodong Lee, Karen Liu, Gervase\n   Markham, Yaqub Mueller, Andrew\
    \ Sullivan, Paul Twomey, Nico Williams,\n   Suzanne Woolf, Jiankang Yao, other\
    \ participants in the circa 2003\n   \"DNS Search\" effort and in the ICANN SSAC\
    \ Working Party on IDNs, and\n   some others whose names were sadly forgotten,\
    \ were particularly\n   important to either the content of this document or the\
    \ motivation\n   for writing it even though they may not agree with the conclusions\
    \ I\n   have reached and bear no responsibility for them.\n   Many of the subsections\
    \ of Section 3 were extracted from comments\n   first made in conjunction with\
    \ recent email discussions.  Comments\n   from Suzanne Woolf about an earlier\
    \ draft version were particularly\n   important as was material developed with\
    \ suggestions from Patrik\n   Faltstrom, especially Section 3.13.  Feedback and\
    \ suggestions from\n   several of the above and from Stephane Bortzmeyer, Tony\
    \ Finch, Bob\n   Harold, Warren Kumari, Craig Partridge, and George Sadowsky were\n\
    \   extremely helpful for improving the clarity and accuracy of parts of\n   the\
    \ document, especially so for a broader audience.  Craig Partridge\n   also contributed\
    \ much of the material about queries for multiple\n   types.  Geoff Huston made\
    \ several useful comments and contributed\n   most of Section 3.15, and Bill Manning\
    \ pointed out some broader\n   requirements about integrity of information and\
    \ DNS management and\n   operations.\n   Special thanks are due to Karen Moore\
    \ of the RFC Production Center\n   for her efforts, patience, and persistence\
    \ in preparing this document\n   for publication, a process that raised far more\
    \ issues that required\n   careful discussion than usual.\n"
- title: Author's Address
  contents:
  - "Author's Address\n   John C. Klensin\n   1770 Massachusetts Ave, Ste 322\n  \
    \ Cambridge, MA  02140\n   United States of America\n   Phone: +1 617 245 1457\n\
    \   Email: john-ietf@jck.com\n"
