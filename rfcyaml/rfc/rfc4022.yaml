- contents:
  - "                      Management Information Base\n              for the Transmission
    Control Protocol (TCP)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2005).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   This memo defines a portion of the Management Information Base (MIB)\n
    \  for use with network management protocols in the Internet community.\n   In
    particular, it describes managed objects used for implementations\n   of the Transmission
    Control Protocol (TCP) in an IP version\n   independent manner.  This memo obsoletes
    RFCs 2452 and 2012.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1.  The Internet-Standard Management Framework  . . . .
    . . . . .   2\n   2.  Overview. . . . . . . . . . . . . . . . . . . . . . . .
    . . .   2\n       2.1.  Relationship to Other MIBs. . . . . . . . . . . . . .
    .   2\n   3.  Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   4\n
    \  4.  Acknowledgements. . . . . . . . . . . . . . . . . . . . . . .  20\n   5.
    \ References. . . . . . . . . . . . . . . . . . . . . . . . . .  20\n       5.1.
    \ Normative References. . . . . . . . . . . . . . . . . .  20\n       5.2.  Informative
    References. . . . . . . . . . . . . . . . .  21\n   6.  Security Considerations
    . . . . . . . . . . . . . . . . . . .  21\n   7.  Contributors. . . . . . . .
    . . . . . . . . . . . . . . . . .  23\n   Editor's Address. . . . . . . . . .
    . . . . . . . . . . . . . . .  23\n   Full Copyright Statement. . . . . . . .
    . . . . . . . . . . . . .  24\n"
  title: Table of Contents
- contents:
  - "1.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 1.  The Internet-Standard Management Framework
- contents:
  - "2.  Overview\n   The current TCP-MIB defined in this memo consists of two tables
    and a\n   group of scalars:\n      -  The tcp group of scalars includes two sets
    of objects:\n         o  Parameters of a TCP protocol engine.  These include\n
    \           parameters such as the retransmission algorithm in use\n            (e.g.,
    vanj [VANJ]) and the retransmission timeout values.\n         o  Statistics of
    a TCP protocol engine.  These include counters\n            for the number of
    active/passive opens, input/output\n            segments, and errors.  Discontinuities
    in the stats are\n            identified identified via the sysUpTime object,
    defined in\n            [RFC3418].\n      -  The tcpConnectionTable provides access
    to status information\n         for all TCP connections handled by a TCP protocol
    engine.  In\n         addition, the table reports identification of the operating\n
    \        system level processes that handle the TCP connections.\n      -  The
    tcpListenerTable provides access to information about all\n         TCP listening
    endpoints known by a TCP protocol engine.  And as\n         with the connection
    table, the tcpListenerTable also reports\n         the identification of the operating
    system level processes that\n         handle this listening TCP endpoint.\n"
  - contents:
    - "2.1.  Relationship to Other MIBs\n   This section discusses the relationship
      of this TCP-MIB module to\n   other MIB modules.\n"
    - contents:
      - "2.1.1.  Relationship to RFC1213-MIB\n   TCP related MIB objects were originally
        defined as part of the\n   RFC1213-MIB defined in RFC 1213 [RFC1213].  The
        TCP related objects\n   of the RFC1213-MIB were later copied into a separate
        MIB module and\n   published in RFC 2012 [RFC2012] in SMIv2 format.\n   The
        previous versions of the TCP-MIB both defined the tcpConnTable,\n   which
        has been deprecated basically for two reasons:\n   (1) The tcpConnTable only
        supports IPv4.\n       The current approach in the IETF is to write IP version
        neutral\n       MIBs, based on the InetAddressType and InetAddress constructs\n
        \      defined in [RFC4001], rather than to have different definitions\n       for
        various version of IP.  This reduces the amount of overhead\n       when new
        objects are introduced, as there is only one place to\n       add them.  Hence,
        the approach taken in [RFC2452], of having\n       separate tables, is not
        continued.\n   (2) The tcpConnTable mixes listening endpoints with connections.\n
        \      It turns out that connections tend to have a different behaviour\n
        \      and management access pattern than listening endpoints.\n       Therefore,
        splitting the original tcpConnTable into two tables\n       allows for the
        addition of specific status and statistics objects\n       for listening endpoints
        and connections.\n"
      title: 2.1.1.  Relationship to RFC1213-MIB
    - contents:
      - "2.1.2.  Relationship to IPV6-TCP-MIB\n   The IPV6-TCP-MIB defined in RFC
        2452 has been moved to Historic\n   status because the approach of having
        separate IP version specific\n   tables is not followed anymore.  Implementation
        of RFC 2452 is no\n   longer suggested.\n"
      title: 2.1.2.  Relationship to IPV6-TCP-MIB
    - contents:
      - "2.1.3.  Relationship to HOST-RESOURCES-MIB and SYSAPPL-MIB\n   The tcpConnectionTable
        and the tcpListenerTable report the\n   identification of the operating system
        level process that handles a\n   connection or a listening endpoint.  The
        value is reported as an\n   Unsigned32, which is expected to be the same as
        the hrSWRunIndex of\n   the HOST-RESOURCES-MIB [RFC2790] (if the value is
        smaller than\n   2147483647) or the sysApplElmtRunIndex of the SYSAPPL-MIB
        [RFC2287].\n   This allows management applications to identify the TCP connections\n
        \  that belong to an operating system level process, which has proven to\n
        \  be valuable in operational environments.\n"
      title: 2.1.3.  Relationship to HOST-RESOURCES-MIB and SYSAPPL-MIB
    title: 2.1.  Relationship to Other MIBs
  title: 2.  Overview
- contents:
  - '3.  Definitions

    '
  - 'TCP-MIB DEFINITIONS ::= BEGIN

    '
  - "IMPORTS\n    MODULE-IDENTITY, OBJECT-TYPE, Integer32, Unsigned32,\n    Gauge32,
    Counter32, Counter64, IpAddress, mib-2\n                                       FROM
    SNMPv2-SMI\n    MODULE-COMPLIANCE, OBJECT-GROUP    FROM SNMPv2-CONF\n    InetAddress,
    InetAddressType,\n    InetPortNumber                     FROM INET-ADDRESS-MIB;\n"
  - "tcpMIB MODULE-IDENTITY\n    LAST-UPDATED \"200502180000Z\"  -- 18 February 2005\n
    \   ORGANIZATION\n           \"IETF IPv6 MIB Revision Team\n            http://www.ietf.org/html.charters/ipv6-charter.html\"\n
    \   CONTACT-INFO\n           \"Rajiv Raghunarayan (editor)\n            Cisco
    Systems Inc.\n            170 West Tasman Drive\n            San Jose, CA 95134\n
    \           Phone: +1 408 853 9612\n            Email: <raraghun@cisco.com>\n
    \           Send comments to <ipv6@ietf.org>\"\n    DESCRIPTION\n           \"The
    MIB module for managing TCP implementations.\n            Copyright (C) The Internet
    Society (2005). This version\n            of this MIB module is a part of RFC
    4022; see the RFC\n            itself for full legal notices.\"\n    REVISION
    \     \"200502180000Z\"  -- 18 February 2005\n    DESCRIPTION\n           \"IP
    version neutral revision, published as RFC 4022.\"\n    REVISION      \"9411010000Z\"\n
    \   DESCRIPTION\n           \"Initial SMIv2 version, published as RFC 2012.\"\n
    \   REVISION      \"9103310000Z\"\n    DESCRIPTION\n           \"The initial revision
    of this MIB module was part of\n            MIB-II.\"\n    ::= { mib-2 49 }\n"
  - '-- the TCP base variables group

    '
  - 'tcp      OBJECT IDENTIFIER ::= { mib-2 6 }

    '
  - '-- Scalars

    '
  - "tcpRtoAlgorithm OBJECT-TYPE\n    SYNTAX      INTEGER {\n                    other(1),
    \   -- none of the following\n                    constant(2), -- a constant rto\n
    \                   rsre(3),     -- MIL-STD-1778, Appendix B\n                    vanj(4),
    \    -- Van Jacobson's algorithm\n                    rfc2988(5)   -- RFC 2988\n
    \               }\n    MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n
    \          \"The algorithm used to determine the timeout value used for\n            retransmitting
    unacknowledged octets.\"\n    ::= { tcp 1 }\n"
  - "tcpRtoMin OBJECT-TYPE\n    SYNTAX     Integer32 (0..2147483647)\n    UNITS      \"milliseconds\"\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The
    minimum value permitted by a TCP implementation for\n            the retransmission
    timeout, measured in milliseconds.\n            More refined semantics for objects
    of this type depend\n            on the algorithm used to determine the retransmission\n
    \           timeout; in particular, the IETF standard algorithm\n            rfc2988(5)
    provides a minimum value.\"\n    ::= { tcp 2 }\n"
  - "tcpRtoMax OBJECT-TYPE\n    SYNTAX     Integer32 (0..2147483647)\n    UNITS      \"milliseconds\"\n
    \   MAX-ACCESS read-only\n    STATUS     current\n    DESCRIPTION\n           \"The
    maximum value permitted by a TCP implementation for\n            the retransmission
    timeout, measured in milliseconds.\n            More refined semantics for objects
    of this type depend\n            on the algorithm used to determine the retransmission\n
    \           timeout; in particular, the IETF standard algorithm\n            rfc2988(5)
    provides an upper bound (as part of an\n            adaptive backoff algorithm).\"\n
    \   ::= { tcp 3 }\n"
  - "tcpMaxConn OBJECT-TYPE\n    SYNTAX     Integer32 (-1 | 0..2147483647)\n    MAX-ACCESS
    read-only\n    STATUS     current\n    DESCRIPTION\n           \"The limit on
    the total number of TCP connections the entity\n            can support.  In entities
    where the maximum number of\n            connections is dynamic, this object should
    contain the\n            value -1.\"\n    ::= { tcp 4 }\n"
  - "tcpActiveOpens OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of times that
    TCP connections have made a direct\n            transition to the SYN-SENT state
    from the CLOSED state.\n            Discontinuities in the value of this counter
    are\n            indicated via discontinuities in the value of sysUpTime.\"\n
    \   ::= { tcp 5 }\n"
  - "tcpPassiveOpens OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of times TCP
    connections have made a direct\n            transition to the SYN-RCVD state from
    the LISTEN state.\n            Discontinuities in the value of this counter are\n
    \           indicated via discontinuities in the value of sysUpTime.\"\n    ::=
    { tcp 6 }\n"
  - "tcpAttemptFails OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of times that
    TCP connections have made a direct\n            transition to the CLOSED state
    from either the SYN-SENT\n            state or the SYN-RCVD state, plus the number
    of times that\n            TCP connections have made a direct transition to the\n
    \           LISTEN state from the SYN-RCVD state.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 7 }\n"
  - "tcpEstabResets OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of times that
    TCP connections have made a direct\n            transition to the CLOSED state
    from either the ESTABLISHED\n            state or the CLOSE-WAIT state.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 8 }\n"
  - "tcpCurrEstab OBJECT-TYPE\n    SYNTAX     Gauge32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of TCP connections
    for which the current state\n            is either ESTABLISHED or CLOSE-WAIT.\"\n
    \   ::= { tcp 9 }\n"
  - "tcpInSegs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS
    \    current\n    DESCRIPTION\n           \"The total number of segments received,
    including those\n            received in error.  This count includes segments
    received\n            on currently established connections.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 10 }\n"
  - "tcpOutSegs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The total number of segments
    sent, including those on\n            current connections but excluding those
    containing only\n            retransmitted octets.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 11 }\n"
  - "tcpRetransSegs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The total number of segments
    retransmitted; that is, the\n            number of TCP segments transmitted containing
    one or more\n            previously transmitted octets.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 12 }\n"
  - "tcpInErrs OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n    STATUS
    \    current\n    DESCRIPTION\n           \"The total number of segments received
    in error (e.g., bad\n            TCP checksums).\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 14 }\n"
  - "tcpOutRsts OBJECT-TYPE\n    SYNTAX     Counter32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The number of TCP segments
    sent containing the RST flag.\n            Discontinuities in the value of this
    counter are\n            indicated via discontinuities in the value of sysUpTime.\"\n
    \   ::= { tcp 15 }\n"
  - '-- { tcp 16 } was used to represent the ipv6TcpConnTable in RFC 2452,

    '
  - '-- which has since been obsoleted.  It MUST not be used.

    '
  - "tcpHCInSegs OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The total number of segments
    received, including those\n            received in error.  This count includes
    segments received\n            on currently established connections.  This object
    is\n            the 64-bit equivalent of tcpInSegs.\n            Discontinuities
    in the value of this counter are\n            indicated via discontinuities in
    the value of sysUpTime.\"\n    ::= { tcp 17 }\n"
  - "tcpHCOutSegs OBJECT-TYPE\n    SYNTAX     Counter64\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The total number of segments
    sent, including those on\n            current connections but excluding those
    containing only\n            retransmitted octets.  This object is the 64-bit\n
    \           equivalent of tcpOutSegs.\n            Discontinuities in the value
    of this counter are\n            indicated via discontinuities in the value of
    sysUpTime.\"\n    ::= { tcp 18 }\n"
  - '-- The TCP Connection table

    '
  - "tcpConnectionTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF TcpConnectionEntry\n
    \   MAX-ACCESS not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A
    table containing information about existing TCP\n            connections.  Note
    that unlike earlier TCP MIBs, there\n            is a separate table for connections
    in the LISTEN state.\"\n    ::= { tcp 19 }\n"
  - "tcpConnectionEntry OBJECT-TYPE\n    SYNTAX     TcpConnectionEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A conceptual
    row of the tcpConnectionTable containing\n            information about a particular
    current TCP connection.\n            Each row of this table is transient in that
    it ceases to\n            exist when (or soon after) the connection makes the\n
    \           transition to the CLOSED state.\"\n    INDEX   { tcpConnectionLocalAddressType,\n
    \             tcpConnectionLocalAddress,\n              tcpConnectionLocalPort,\n
    \             tcpConnectionRemAddressType,\n              tcpConnectionRemAddress,\n
    \             tcpConnectionRemPort }\n    ::= { tcpConnectionTable 1 }\n"
  - "TcpConnectionEntry ::= SEQUENCE {\n        tcpConnectionLocalAddressType   InetAddressType,\n
    \       tcpConnectionLocalAddress       InetAddress,\n        tcpConnectionLocalPort
    \         InetPortNumber,\n        tcpConnectionRemAddressType     InetAddressType,\n
    \       tcpConnectionRemAddress         InetAddress,\n        tcpConnectionRemPort
    \           InetPortNumber,\n        tcpConnectionState              INTEGER,\n
    \       tcpConnectionProcess            Unsigned32\n    }\n"
  - "tcpConnectionLocalAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The address
    type of tcpConnectionLocalAddress.\"\n    ::= { tcpConnectionEntry 1 }\n"
  - "tcpConnectionLocalAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The local
    IP address for this TCP connection.  The type\n            of this address is
    determined by the value of\n            tcpConnectionLocalAddressType.\n            As
    this object is used in the index for the\n            tcpConnectionTable, implementors
    should be\n            careful not to create entries that would result in OIDs\n
    \           with more than 128 subidentifiers; otherwise the information\n            cannot
    be accessed by using SNMPv1, SNMPv2c, or SNMPv3.\"\n    ::= { tcpConnectionEntry
    2 }\n"
  - "tcpConnectionLocalPort OBJECT-TYPE\n    SYNTAX     InetPortNumber\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The local
    port number for this TCP connection.\"\n    ::= { tcpConnectionEntry 3 }\n"
  - "tcpConnectionRemAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The address
    type of tcpConnectionRemAddress.\"\n    ::= { tcpConnectionEntry 4 }\n"
  - "tcpConnectionRemAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The remote
    IP address for this TCP connection.  The type\n            of this address is
    determined by the value of\n            tcpConnectionRemAddressType.\n            As
    this object is used in the index for the\n            tcpConnectionTable, implementors
    should be\n            careful not to create entries that would result in OIDs\n
    \           with more than 128 subidentifiers; otherwise the information\n            cannot
    be accessed by using SNMPv1, SNMPv2c, or SNMPv3.\"\n    ::= { tcpConnectionEntry
    5 }\n"
  - "tcpConnectionRemPort OBJECT-TYPE\n    SYNTAX     InetPortNumber\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The remote
    port number for this TCP connection.\"\n    ::= { tcpConnectionEntry 6 }\n"
  - "tcpConnectionState OBJECT-TYPE\n    SYNTAX     INTEGER {\n                    closed(1),\n
    \                   listen(2),\n                    synSent(3),\n                    synReceived(4),\n
    \                   established(5),\n                    finWait1(6),\n                    finWait2(7),\n
    \                   closeWait(8),\n                    lastAck(9),\n                    closing(10),\n
    \                   timeWait(11),\n                    deleteTCB(12)\n                }\n
    \   MAX-ACCESS read-write\n    STATUS     current\n    DESCRIPTION\n           \"The
    state of this TCP connection.\n            The value listen(2) is included only
    for parallelism to the\n            old tcpConnTable and should not be used.  A
    connection in\n            LISTEN state should be present in the tcpListenerTable.\n
    \           The only value that may be set by a management station is\n            deleteTCB(12).
    \ Accordingly, it is appropriate for an agent\n            to return a `badValue'
    response if a management station\n            attempts to set this object to any
    other value.\n            If a management station sets this object to the value\n
    \           deleteTCB(12), then the TCB (as defined in [RFC793]) of\n            the
    corresponding connection on the managed node is\n            deleted, resulting
    in immediate termination of the\n            connection.\n            As an implementation-specific
    option, a RST segment may be\n            sent from the managed node to the other
    TCP endpoint (note,\n            however, that RST segments are not sent reliably).\"\n
    \   ::= { tcpConnectionEntry 7 }\n"
  - "tcpConnectionProcess OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The system's process ID
    for the process associated with\n            this connection, or zero if there
    is no such process.  This\n            value is expected to be the same as HOST-RESOURCES-MIB::\n
    \           hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some\n            row
    in the appropriate tables.\"\n    ::= { tcpConnectionEntry 8 }\n"
  - '-- The TCP Listener table

    '
  - "tcpListenerTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF TcpListenerEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A table
    containing information about TCP listeners.  A\n            listening application
    can be represented in three\n            possible ways:\n            1. An application
    that is willing to accept both IPv4 and\n               IPv6 datagrams is represented
    by\n               a tcpListenerLocalAddressType of unknown (0) and\n               a
    tcpListenerLocalAddress of ''h (a zero-length\n               octet-string).\n
    \           2. An application that is willing to accept only IPv4 or\n               IPv6
    datagrams is represented by a\n               tcpListenerLocalAddressType of the
    appropriate address\n               type and a tcpListenerLocalAddress of '0.0.0.0'
    or '::'\n               respectively.\n            3. An application that is listening
    for data destined\n               only to a specific IP address, but from any
    remote\n               system, is represented by a tcpListenerLocalAddressType\n
    \              of an appropriate address type, with\n               tcpListenerLocalAddress
    as the specific local address.\n            NOTE: The address type in this table
    represents the\n            address type used for the communication, irrespective\n
    \           of the higher-layer abstraction.  For example, an\n            application
    using IPv6 'sockets' to communicate via\n            IPv4 between ::ffff:10.0.0.1
    and ::ffff:10.0.0.2 would\n            use InetAddressType ipv4(1)).\"\n    ::=
    { tcp 20 }\n"
  - "tcpListenerEntry OBJECT-TYPE\n    SYNTAX     TcpListenerEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"A conceptual
    row of the tcpListenerTable containing\n            information about a particular
    TCP listener.\"\n    INDEX   { tcpListenerLocalAddressType,\n              tcpListenerLocalAddress,\n
    \             tcpListenerLocalPort }\n    ::= { tcpListenerTable 1 }\n"
  - "TcpListenerEntry ::= SEQUENCE {\n        tcpListenerLocalAddressType       InetAddressType,\n
    \       tcpListenerLocalAddress           InetAddress,\n        tcpListenerLocalPort
    \             InetPortNumber,\n        tcpListenerProcess                Unsigned32\n
    \   }\n"
  - "tcpListenerLocalAddressType OBJECT-TYPE\n    SYNTAX     InetAddressType\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The address
    type of tcpListenerLocalAddress.  The value\n            should be unknown (0)
    if connection initiations to all\n            local IP addresses are accepted.\"\n
    \   ::= { tcpListenerEntry 1 }\n"
  - "tcpListenerLocalAddress OBJECT-TYPE\n    SYNTAX     InetAddress\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The local
    IP address for this TCP connection.\n            The value of this object can
    be represented in three\n            possible ways, depending on the characteristics
    of the\n            listening application:\n            1. For an application
    willing to accept both IPv4 and\n               IPv6 datagrams, the value of this
    object must be\n               ''h (a zero-length octet-string), with the value\n
    \              of the corresponding tcpListenerLocalAddressType\n               object
    being unknown (0).\n            2. For an application willing to accept only IPv4
    or\n               IPv6 datagrams, the value of this object must be\n               '0.0.0.0'
    or '::' respectively, with\n               tcpListenerLocalAddressType representing
    the\n               appropriate address type.\n            3. For an application
    which is listening for data\n               destined only to a specific IP address,
    the value\n               of this object is the specific local address, with\n
    \              tcpListenerLocalAddressType representing the\n               appropriate
    address type.\n            As this object is used in the index for the\n            tcpListenerTable,
    implementors should be\n            careful not to create entries that would result
    in OIDs\n            with more than 128 subidentifiers; otherwise the information\n
    \           cannot be accessed, using SNMPv1, SNMPv2c, or SNMPv3.\"\n    ::= {
    tcpListenerEntry 2 }\n"
  - "tcpListenerLocalPort OBJECT-TYPE\n    SYNTAX     InetPortNumber\n    MAX-ACCESS
    not-accessible\n    STATUS     current\n    DESCRIPTION\n           \"The local
    port number for this TCP connection.\"\n    ::= { tcpListenerEntry 3 }\n"
  - "tcpListenerProcess OBJECT-TYPE\n    SYNTAX     Unsigned32\n    MAX-ACCESS read-only\n
    \   STATUS     current\n    DESCRIPTION\n           \"The system's process ID
    for the process associated with\n            this listener, or zero if there is
    no such process.  This\n            value is expected to be the same as HOST-RESOURCES-MIB::\n
    \           hrSWRunIndex or SYSAPPL-MIB::sysApplElmtRunIndex for some\n            row
    in the appropriate tables.\"\n    ::= { tcpListenerEntry 4 }\n"
  - '-- The deprecated TCP Connection table

    '
  - "tcpConnTable OBJECT-TYPE\n    SYNTAX     SEQUENCE OF TcpConnEntry\n    MAX-ACCESS
    not-accessible\n    STATUS     deprecated\n    DESCRIPTION\n           \"A table
    containing information about existing IPv4-specific\n            TCP connections
    or listeners.  This table has been\n            deprecated in favor of the version
    neutral\n            tcpConnectionTable.\"\n    ::= { tcp 13 }\n"
  - "tcpConnEntry OBJECT-TYPE\n    SYNTAX     TcpConnEntry\n    MAX-ACCESS not-accessible\n
    \   STATUS     deprecated\n    DESCRIPTION\n           \"A conceptual row of the
    tcpConnTable containing information\n            about a particular current IPv4
    TCP connection.  Each row\n            of this table is transient in that it ceases
    to exist when\n            (or soon after) the connection makes the transition
    to the\n            CLOSED state.\"\n    INDEX   { tcpConnLocalAddress,\n              tcpConnLocalPort,\n
    \             tcpConnRemAddress,\n              tcpConnRemPort }\n    ::= { tcpConnTable
    1 }\n"
  - "TcpConnEntry ::= SEQUENCE {\n        tcpConnState         INTEGER,\n        tcpConnLocalAddress
    \ IpAddress,\n        tcpConnLocalPort     Integer32,\n        tcpConnRemAddress
    \   IpAddress,\n        tcpConnRemPort       Integer32\n    }\n"
  - "tcpConnState OBJECT-TYPE\n    SYNTAX     INTEGER {\n                    closed(1),\n
    \                   listen(2),\n                    synSent(3),\n                    synReceived(4),\n
    \                   established(5),\n                    finWait1(6),\n                    finWait2(7),\n
    \                   closeWait(8),\n                    lastAck(9),\n                    closing(10),\n
    \                   timeWait(11),\n                    deleteTCB(12)\n                }\n
    \   MAX-ACCESS read-write\n    STATUS     deprecated\n    DESCRIPTION\n           \"The
    state of this TCP connection.\n            The only value that may be set by a
    management station is\n            deleteTCB(12).  Accordingly, it is appropriate
    for an agent\n            to return a `badValue' response if a management station\n
    \           attempts to set this object to any other value.\n            If a
    management station sets this object to the value\n            deleteTCB(12), then
    the TCB (as defined in [RFC793]) of\n            the corresponding connection
    on the managed node is\n            deleted, resulting in immediate termination
    of the\n            connection.\n            As an implementation-specific option,
    a RST segment may be\n            sent from the managed node to the other TCP
    endpoint (note,\n            however, that RST segments are not sent reliably).\"\n
    \   ::= { tcpConnEntry 1 }\n"
  - "tcpConnLocalAddress OBJECT-TYPE\n    SYNTAX     IpAddress\n    MAX-ACCESS read-only\n
    \   STATUS     deprecated\n    DESCRIPTION\n           \"The local IP address
    for this TCP connection.  In the case\n            of a connection in the listen
    state willing to\n            accept connections for any IP interface associated
    with the\n            node, the value 0.0.0.0 is used.\"\n    ::= { tcpConnEntry
    2 }\n"
  - "tcpConnLocalPort OBJECT-TYPE\n    SYNTAX     Integer32 (0..65535)\n    MAX-ACCESS
    read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The local
    port number for this TCP connection.\"\n    ::= { tcpConnEntry 3 }\n"
  - "tcpConnRemAddress OBJECT-TYPE\n    SYNTAX     IpAddress\n    MAX-ACCESS read-only\n
    \   STATUS     deprecated\n    DESCRIPTION\n           \"The remote IP address
    for this TCP connection.\"\n    ::= { tcpConnEntry 4 }\n"
  - "tcpConnRemPort OBJECT-TYPE\n    SYNTAX     Integer32 (0..65535)\n    MAX-ACCESS
    read-only\n    STATUS     deprecated\n    DESCRIPTION\n           \"The remote
    port number for this TCP connection.\"\n    ::= { tcpConnEntry 5 }\n"
  - '-- conformance information

    '
  - 'tcpMIBConformance OBJECT IDENTIFIER ::= { tcpMIB 2 }

    '
  - 'tcpMIBCompliances OBJECT IDENTIFIER ::= { tcpMIBConformance 1 }

    '
  - 'tcpMIBGroups      OBJECT IDENTIFIER ::= { tcpMIBConformance 2 }

    '
  - '-- compliance statements

    '
  - "tcpMIBCompliance2 MODULE-COMPLIANCE\n    STATUS     current\n    DESCRIPTION\n
    \          \"The compliance statement for systems that implement TCP.\n            A
    number of INDEX objects cannot be\n            represented in the form of OBJECT
    clauses in SMIv2 but\n            have the following compliance requirements,\n
    \           expressed in OBJECT clause form in this description\n            clause:\n
    \           -- OBJECT      tcpConnectionLocalAddressType\n            -- SYNTAX
    \     InetAddressType { ipv4(1), ipv6(2) }\n            -- DESCRIPTION\n            --
    \    This MIB requires support for only global IPv4\n            --     and IPv6
    address types.\n            --\n            -- OBJECT      tcpConnectionRemAddressType\n
    \           -- SYNTAX      InetAddressType { ipv4(1), ipv6(2) }\n            --
    DESCRIPTION\n            --     This MIB requires support for only global IPv4\n
    \           --     and IPv6 address types.\n            --\n            -- OBJECT
    \     tcpListenerLocalAddressType\n            -- SYNTAX      InetAddressType
    { unknown(0), ipv4(1),\n            --                               ipv6(2) }\n
    \           -- DESCRIPTION\n            --     This MIB requires support for only
    global IPv4\n            --     and IPv6 address types.  The type unknown also\n
    \           --     needs to be supported to identify a special\n            --
    \    case in the listener table: a listen using\n            --     both IPv4
    and IPv6 addresses on the device.\n            --\n           \"\n    MODULE  --
    this module\n        MANDATORY-GROUPS { tcpBaseGroup, tcpConnectionGroup,\n                           tcpListenerGroup
    }\n        GROUP       tcpHCGroup\n        DESCRIPTION\n           \"This group
    is mandatory for systems that are capable\n            of receiving or transmitting
    more than 1 million TCP\n            segments per second.  1 million segments
    per second will\n            cause a Counter32 to wrap in just over an hour.\"\n
    \       OBJECT      tcpConnectionState\n        SYNTAX      INTEGER { closed(1),
    listen(2), synSent(3),\n                              synReceived(4), established(5),\n
    \                             finWait1(6), finWait2(7), closeWait(8),\n                              lastAck(9),
    closing(10), timeWait(11) }\n        MIN-ACCESS  read-only\n        DESCRIPTION\n
    \          \"Write access is not required, nor is support for the value\n            deleteTCB
    (12).\"\n    ::= { tcpMIBCompliances 2 }\n"
  - "tcpMIBCompliance MODULE-COMPLIANCE\n    STATUS     deprecated\n    DESCRIPTION\n
    \          \"The compliance statement for IPv4-only systems that\n            implement
    TCP.  In order to be IP version independent, this\n            compliance statement
    is deprecated in favor of\n            tcpMIBCompliance2.  However, agents are
    still encouraged\n            to implement these objects in order to interoperate
    with\n            the deployed base of managers.\"\n    MODULE  -- this module\n
    \       MANDATORY-GROUPS { tcpGroup }\n        OBJECT      tcpConnState\n        MIN-ACCESS
    \ read-only\n        DESCRIPTION\n           \"Write access is not required.\"\n
    \   ::= { tcpMIBCompliances 1 }\n"
  - '-- units of conformance

    '
  - "tcpGroup OBJECT-GROUP\n    OBJECTS   { tcpRtoAlgorithm, tcpRtoMin, tcpRtoMax,\n
    \               tcpMaxConn, tcpActiveOpens,\n                tcpPassiveOpens,
    tcpAttemptFails,\n                tcpEstabResets, tcpCurrEstab, tcpInSegs,\n                tcpOutSegs,
    tcpRetransSegs, tcpConnState,\n                tcpConnLocalAddress, tcpConnLocalPort,\n
    \               tcpConnRemAddress, tcpConnRemPort,\n                tcpInErrs,
    tcpOutRsts }\n    STATUS     deprecated\n    DESCRIPTION\n           \"The tcp
    group of objects providing for management of TCP\n            entities.\"\n    ::=
    { tcpMIBGroups 1 }\n"
  - "tcpBaseGroup OBJECT-GROUP\n    OBJECTS   { tcpRtoAlgorithm, tcpRtoMin, tcpRtoMax,\n
    \               tcpMaxConn, tcpActiveOpens,\n                tcpPassiveOpens,
    tcpAttemptFails,\n                tcpEstabResets, tcpCurrEstab, tcpInSegs,\n                tcpOutSegs,
    tcpRetransSegs,\n                tcpInErrs, tcpOutRsts }\n    STATUS     current\n
    \   DESCRIPTION\n           \"The group of counters common to TCP entities.\"\n
    \   ::= { tcpMIBGroups 2 }\n"
  - "tcpConnectionGroup OBJECT-GROUP\n    OBJECTS    { tcpConnectionState, tcpConnectionProcess
    }\n    STATUS     current\n    DESCRIPTION\n           \"The group provides general
    information about TCP\n            connections.\"\n    ::= { tcpMIBGroups 3 }\n"
  - "tcpListenerGroup OBJECT-GROUP\n    OBJECTS    { tcpListenerProcess }\n    STATUS
    \    current\n    DESCRIPTION\n           \"This group has objects providing general
    information about\n            TCP listeners.\"\n    ::= { tcpMIBGroups 4 }\n"
  - "tcpHCGroup OBJECT-GROUP\n    OBJECTS    { tcpHCInSegs, tcpHCOutSegs }\n    STATUS
    \    current\n    DESCRIPTION\n           \"The group of objects providing for
    counters of high speed\n            TCP implementations.\"\n    ::= { tcpMIBGroups
    5 }\n"
  - 'END

    '
  title: 3.  Definitions
- contents:
  - "4.  Acknowledgements\n   This document contains a modified subset of RFC 1213
    and updates RFC\n   2012 and RFC 2452.  Acknowledgements are therefore due to
    the authors\n   and editors of these documents for their excellent work.  Several\n
    \  useful comments regarding usability and design were also received\n   from
    Kristine Adamson.  The authors would like to thank all these\n   people for their
    contribution to this effort.\n"
  title: 4.  Acknowledgements
- contents:
  - '5.  References

    '
  - contents:
    - "5.1.  Normative References\n   [RFC793]  Postel, J., \"Transmission Control
      Protocol\", STD 7, RFC\n             793, DARPA, September 1981.\n   [RFC2287]
      Krupczak, C. and J. Saperia, \"Definitions of System-Level\n             Managed
      Objects for Applications\", RFC 2287, February 1998.\n   [RFC2578] McCloghrie,
      K., Perkins, D., and J. Schoenwaelder,\n             \"Structure of Management
      Information Version 2 (SMIv2)\",\n             STD 58, RFC 2578, April 1999.\n
      \  [RFC2579] McCloghrie, K., Perkins, D., and J. Schoenwaelder, \"Textual\n
      \            Conventions for SMIv2\", STD 58, RFC 2579, April 1999.\n   [RFC2580]
      McCloghrie, K., Perkins, D., and J. Schoenwaelder,\n             \"Conformance
      Statements for SMIv2\", STD 58, RFC 2580, April\n             1999.\n   [RFC2790]
      Waldbusser, S. and P. Grillo, \"Host Resources MIB\", RFC\n             2790,
      March 2000.\n   [RFC4001] Daniele, M., Haberman, B., Routhier, S., and J.\n
      \            Schoenwaelder, \"Textual Conventions for Internet Network\n             Addresses\",
      RFC 4001, February 2005.\n"
    title: 5.1.  Normative References
  - contents:
    - "5.2.  Informative References\n   [RFC1213] McCloghrie, K. and M. Rose, \"Management
      Information Base\n             for Network Management of TCP/IP-based internets\",
      RFC\n             1213, March 1991.\n   [RFC2012] McCloghrie, K., Ed., \"SNMPv2
      Management Information Base\n             for the Transmission Control Protocol
      using SMIv2\", RFC\n             2012, November 1996.\n   [RFC2452] Daniele,
      M., \"IP Version 6 Management Information Base for\n             the Transmission
      Control Protocol\", RFC 2452, December\n             1998.\n   [RFC2988] Paxson,
      V. and M. Allman, \"Computing TCP's Retransmission\n             Timer\", RFC
      2988, November 2000.\n   [RFC3410] Case, J., Mundy, R., Partain, D., and B.
      Stewart,\n             \"Introduction and Applicability Statements for Internet-\n
      \            Standard Management Framework\", RFC 3410, December 2002.\n   [RFC3418]
      Presuhn, R., Ed., \"Management Information Base (MIB) for\n             the
      Simple Network Management Protocol (SNMP)\", RFC 3418,\n             December
      2002.\n   [VANJ]    Jacobson, V., \"Congestion Avoidance and Control\", SIGCOMM\n
      \            1988, Stanford, California.\n"
    title: 5.2.  Informative References
  title: 5.  References
- contents:
  - "6.  Security Considerations\n   There are a number of management objects defined
    in this MIB module\n   with a MAX-ACCESS clause of read-write.  Such objects may
    be\n   considered sensitive or vulnerable in some network environments.  The\n
    \  support for SET operations in a non-secure environment without proper\n   protection
    can have a negative effect on network operations.  These\n   are the tables and
    objects and their sensitivity/vulnerability:\n   o  The tcpConnectionState and
    tcpConnState objects have a MAX-ACCESS\n      clause of read-write, which allows
    termination of an arbitrary\n      connection.  Unauthorized access could cause
    a denial of service.\n   Some of the readable objects in this MIB module (i.e.,
    objects with a\n   MAX-ACCESS other than not-accessible) may be considered sensitive
    or\n   vulnerable in some network environments.  It is thus important to\n   control
    even GET and/or NOTIFY access to these objects and possibly\n   to even encrypt
    the values of these objects when sending them over\n   the network via SNMP.  These
    are the tables and objects and their\n   sensitivity/vulnerability:\n   o  The
    tcpConnectionTable and the tcpConnTable contain objects\n      providing information
    about the active connections on the device,\n      the status of these connections,
    and the associated processes.\n      This information may be used by an attacker
    to launch attacks\n      against known/unknown weakness in certain protocols/applications.\n
    \     In addition, access to the connection table could also have\n      privacy
    implications, as it provides detailed information on\n      active connections.\n
    \  o  The tcpListenerTable and the tcpConnTable contain objects\n      providing
    information about listeners on an entity.  For example,\n      the tcpListenerLocalPort
    and tcpConnLocalPort objects can be used\n      to identify what ports are open
    on the machine and what attacks\n      are likely to succeed, without the attacker
    having to run a port\n      scanner.\n   SNMP versions prior to SNMPv3 did not
    include adequate security.\n   Even if the network itself is secure (for example
    by using IPSec),\n   even then, there is no control as to who on the secure network
    is\n   allowed to access and GET/SET (read/change/create/delete) the objects\n
    \  in this MIB module.\n   It is RECOMMENDED that implementers consider the security
    features as\n   provided by the SNMPv3 framework (see [RFC3410], section 8),\n
    \  including full support for the SNMPv3 cryptographic mechanisms (for\n   authentication
    and privacy).\n   Further, deployment of SNMP versions prior to SNMPv3 is NOT\n
    \  RECOMMENDED.  Instead, it is RECOMMENDED to deploy SNMPv3 and to\n   enable
    cryptographic security.  It is then a customer/operator\n   responsibility to
    ensure that the SNMP entity giving access to an\n   instance of this MIB module
    is properly configured to give access to\n   the objects only to those principals
    (users) that have legitimate\n   rights to indeed GET or SET (change/create/delete)
    them.\n"
  title: 6.  Security Considerations
- contents:
  - "7.  Contributors\n   This document is an output of the IPv6 MIB revision team,
    and\n   contributors to earlier versions of this document include:\n   Bill Fenner,
    AT&T Labs -- Research\n   EMail: fenner@research.att.com\n   Brian Haberman\n
    \  EMail: brian@innovationslab.net\n   Shawn A. Routhier, Wind River\n   EMail:
    shawn.routhier@windriver.com\n   Juergen Schoenwalder, TU Braunschweig\n   EMail:
    schoenw@ibr.cs.tu-bs.de\n   Dave Thaler, Microsoft\n   EMail: dthaler@windows.microsoft.com\n
    \  This document updates parts of the MIBs from several documents.  RFC\n   2012
    has been the base document for these updates, and RFC 2452 was\n   the first document
    to define the managed objects for implementations\n   of TCP over IPv6.\n   RFC
    2012:\n   Keith McCloghrie, Cisco Systems (Editor)\n   EMail: kzm@cisco.com\n
    \  RFC 2452:\n   Mike Daniele, Compaq Computer Corporation\n   EMail: daniele@zk3.dec.com\n"
  title: 7.  Contributors
- contents:
  - "Editor's Address\n   Rajiv Raghunarayan\n   Cisco Systems Inc.\n   170 West Tasman
    Drive\n   San Jose, CA 95134\n   USA\n   EMail: raraghun@cisco.com\n"
  title: Editor's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2005).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at ietf-\n   ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided
    by the\n   Internet Society.\n"
  title: Acknowledgement
