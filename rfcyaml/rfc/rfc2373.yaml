- title: __initial_text__
  contents:
  - ''
- title: July 1998
  contents:
  - "\t\t\t\t\t\t\t     July 1998\n                  IP Version 6 Addressing Architecture\n"
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This document specifies an Internet standards track protocol\
    \ for the\n   Internet community, and requests discussion and suggestions for\n\
    \   improvements.  Please refer to the current edition of the \"Internet\n   Official\
    \ Protocol Standards\" (STD 1) for the standardization state\n   and status of\
    \ this protocol.  Distribution of this memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1998).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This specification defines the addressing architecture of the IP\n\
    \   Version 6 protocol [IPV6].  The document includes the IPv6 addressing\n  \
    \ model, text representations of IPv6 addresses, definition of IPv6\n   unicast\
    \ addresses, anycast addresses, and multicast addresses, and an\n   IPv6 node's\
    \ required addresses.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction.................................................2\n\
    \   2. IPv6 Addressing..............................................2\n      2.1\
    \ Addressing Model.........................................3\n      2.2 Text Representation\
    \ of Addresses.........................3\n      2.3 Text Representation of Address\
    \ Prefixes..................5\n      2.4 Address Type Representation..............................6\n\
    \      2.5 Unicast Addresses........................................7\n      \
    \  2.5.1 Interface Identifiers................................8\n        2.5.2\
    \ The Unspecified Address..............................9\n        2.5.3 The Loopback\
    \ Address.................................9\n        2.5.4 IPv6 Addresses with\
    \ Embedded IPv4 Addresses.........10\n        2.5.5 NSAP Addresses......................................10\n\
    \        2.5.6 IPX Addresses.......................................10\n      \
    \  2.5.7 Aggregatable Global Unicast Addresses...............11\n        2.5.8\
    \ Local-use IPv6 Unicast Addresses....................11\n      2.6 Anycast Addresses.......................................12\n\
    \        2.6.1 Required Anycast Address............................13\n      2.7\
    \ Multicast Addresses.....................................14\n        2.7.1 Pre-Defined\
    \ Multicast Addresses.....................15\n        2.7.2 Assignment of New\
    \ IPv6 Multicast Addresses..........17\n      2.8 A Node's Required Addresses.............................17\n\
    \   3. Security Considerations.....................................18\n   APPENDIX\
    \ A: Creating EUI-64 based Interface Identifiers........19\n   APPENDIX B: ABNF\
    \ Description of Text Representations...........22\n   APPENDIX C: CHANGES FROM\
    \ RFC-1884..............................23\n   REFERENCES.....................................................24\n\
    \   AUTHORS' ADDRESSES.............................................25\n   FULL\
    \ COPYRIGHT STATEMENT.......................................26\n"
- title: 1.0 INTRODUCTION
  contents:
  - "1.0 INTRODUCTION\n   This specification defines the addressing architecture of\
    \ the IP\n   Version 6 protocol.  It includes a detailed description of the\n\
    \   currently defined address formats for IPv6 [IPV6].\n   The authors would like\
    \ to acknowledge the contributions of Paul\n   Francis, Scott Bradner, Jim Bound,\
    \ Brian Carpenter, Matt Crawford,\n   Deborah Estrin, Roger Fajman, Bob Fink,\
    \ Peter Ford, Bob Gilligan,\n   Dimitry Haskin, Tom Harsch, Christian Huitema,\
    \ Tony Li, Greg\n   Minshall, Thomas Narten, Erik Nordmark, Yakov Rekhter, Bill\
    \ Simpson,\n   and Sue Thomson.\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\"\
    , \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"\
    MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described\
    \ in [RFC 2119].\n"
- title: 2.0 IPv6 ADDRESSING
  contents:
  - "2.0 IPv6 ADDRESSING\n   IPv6 addresses are 128-bit identifiers for interfaces\
    \ and sets of\n   interfaces.  There are three types of addresses:\n     Unicast:\
    \   An identifier for a single interface.  A packet sent to\n                a\
    \ unicast address is delivered to the interface\n                identified by\
    \ that address.\n     Anycast:   An identifier for a set of interfaces (typically\n\
    \                belonging to different nodes).  A packet sent to an\n       \
    \         anycast address is delivered to one of the interfaces\n            \
    \    identified by that address (the \"nearest\" one, according\n            \
    \    to the routing protocols' measure of distance).\n     Multicast: An identifier\
    \ for a set of interfaces (typically\n                belonging to different nodes).\
    \  A packet sent to a\n                multicast address is delivered to all interfaces\n\
    \                identified by that address.\n   There are no broadcast addresses\
    \ in IPv6, their function being\n   superseded by multicast addresses.\n   In\
    \ this document, fields in addresses are given a specific name, for\n   example\
    \ \"subscriber\".  When this name is used with the term \"ID\" for\n   identifier\
    \ after the name (e.g., \"subscriber ID\"), it refers to the\n   contents of the\
    \ named field.  When it is used with the term \"prefix\"\n   (e.g.  \"subscriber\
    \ prefix\") it refers to all of the address up to and\n   including this field.\n\
    \   In IPv6, all zeros and all ones are legal values for any field,\n   unless\
    \ specifically excluded.  Specifically, prefixes may contain\n   zero-valued fields\
    \ or end in zeros.\n"
- title: 2.1 Addressing Model
  contents:
  - "2.1 Addressing Model\n   IPv6 addresses of all types are assigned to interfaces,\
    \ not nodes.\n   An IPv6 unicast address refers to a single interface.  Since\
    \ each\n   interface belongs to a single node, any of that node's interfaces'\n\
    \   unicast addresses may be used as an identifier for the node.\n   All interfaces\
    \ are required to have at least one link-local unicast\n   address (see section\
    \ 2.8 for additional required addresses).  A\n   single interface may also be\
    \ assigned multiple IPv6 addresses of any\n   type (unicast, anycast, and multicast)\
    \ or scope.  Unicast addresses\n   with scope greater than link-scope are not\
    \ needed for interfaces that\n   are not used as the origin or destination of\
    \ any IPv6 packets to or\n   from non-neighbors.  This is sometimes convenient\
    \ for point-to-point\n   interfaces.  There is one exception to this addressing\
    \ model:\n     An unicast address or a set of unicast addresses may be assigned\
    \ to\n     multiple physical interfaces if the implementation treats the\n   \
    \  multiple physical interfaces as one interface when presenting it to\n     the\
    \ internet layer.  This is useful for load-sharing over multiple\n     physical\
    \ interfaces.\n   Currently IPv6 continues the IPv4 model that a subnet prefix\
    \ is\n   associated with one link.  Multiple subnet prefixes may be assigned\n\
    \   to the same link.\n"
- title: 2.2 Text Representation of Addresses
  contents:
  - "2.2 Text Representation of Addresses\n   There are three conventional forms for\
    \ representing IPv6 addresses as\n   text strings:\n   1. The preferred form is\
    \ x:x:x:x:x:x:x:x, where the 'x's are the\n      hexadecimal values of the eight\
    \ 16-bit pieces of the address.\n      Examples:\n         FEDC:BA98:7654:3210:FEDC:BA98:7654:3210\n\
    \         1080:0:0:0:8:800:200C:417A\n      Note that it is not necessary to write\
    \ the leading zeros in an\n      individual field, but there must be at least\
    \ one numeral in every\n      field (except for the case described in 2.).\n \
    \  2. Due to some methods of allocating certain styles of IPv6\n      addresses,\
    \ it will be common for addresses to contain long strings\n      of zero bits.\
    \  In order to make writing addresses containing zero\n      bits easier a special\
    \ syntax is available to compress the zeros.\n      The use of \"::\" indicates\
    \ multiple groups of 16-bits of zeros.\n      The \"::\" can only appear once\
    \ in an address.  The \"::\" can also be\n      used to compress the leading and/or\
    \ trailing zeros in an address.\n      For example the following addresses:\n\
    \         1080:0:0:0:8:800:200C:417A  a unicast address\n         FF01:0:0:0:0:0:0:101\
    \        a multicast address\n         0:0:0:0:0:0:0:1             the loopback\
    \ address\n         0:0:0:0:0:0:0:0             the unspecified addresses\n  \
    \    may be represented as:\n         1080::8:800:200C:417A       a unicast address\n\
    \         FF01::101                   a multicast address\n         ::1      \
    \                   the loopback address\n         ::                        \
    \  the unspecified addresses\n   3. An alternative form that is sometimes more\
    \ convenient when dealing\n      with a mixed environment of IPv4 and IPv6 nodes\
    \ is\n      x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of\n\
    \      the six high-order 16-bit pieces of the address, and the 'd's are\n   \
    \   the decimal values of the four low-order 8-bit pieces of the\n      address\
    \ (standard IPv4 representation).  Examples:\n         0:0:0:0:0:0:13.1.68.3\n\
    \         0:0:0:0:0:FFFF:129.144.52.38\n      or in compressed form:\n       \
    \  ::13.1.68.3\n         ::FFFF:129.144.52.38\n"
- title: 2.3 Text Representation of Address Prefixes
  contents:
  - "2.3 Text Representation of Address Prefixes\n   The text representation of IPv6\
    \ address prefixes is similar to the\n   way IPv4 addresses prefixes are written\
    \ in CIDR notation.  An IPv6\n   address prefix is represented by the notation:\n\
    \      ipv6-address/prefix-length\n   where\n      ipv6-address    is an IPv6\
    \ address in any of the notations listed\n                      in section 2.2.\n\
    \      prefix-length   is a decimal value specifying how many of the\n       \
    \               leftmost contiguous bits of the address comprise\n           \
    \           the prefix.\n   For example, the following are legal representations\
    \ of the 60-bit\n   prefix 12AB00000000CD3 (hexadecimal):\n      12AB:0000:0000:CD30:0000:0000:0000:0000/60\n\
    \      12AB::CD30:0:0:0:0/60\n      12AB:0:0:CD30::/60\n   The following are NOT\
    \ legal representations of the above prefix:\n      12AB:0:0:CD3/60   may drop\
    \ leading zeros, but not trailing zeros,\n                        within any 16-bit\
    \ chunk of the address\n      12AB::CD30/60     address to left of \"/\" expands\
    \ to\n                        12AB:0000:0000:0000:0000:000:0000:CD30\n      12AB::CD3/60\
    \      address to left of \"/\" expands to\n                        12AB:0000:0000:0000:0000:000:0000:0CD3\n\
    \   When writing both a node address and a prefix of that node address\n   (e.g.,\
    \ the node's subnet prefix), the two can combined as follows:\n      the node\
    \ address      12AB:0:0:CD30:123:4567:89AB:CDEF\n      and its subnet number 12AB:0:0:CD30::/60\n\
    \      can be abbreviated as 12AB:0:0:CD30:123:4567:89AB:CDEF/60\n"
- title: 2.4 Address Type Representation
  contents:
  - "2.4 Address Type Representation\n   The specific type of an IPv6 address is indicated\
    \ by the leading bits\n   in the address.  The variable-length field comprising\
    \ these leading\n   bits is called the Format Prefix (FP).  The initial allocation\
    \ of\n   these prefixes is as follows:\n    Allocation                       \
    \     Prefix         Fraction of\n                                          (binary)\
    \       Address Space\n    -----------------------------------   --------    \
    \   -------------\n    Reserved                              0000 0000      1/256\n\
    \    Unassigned                            0000 0001      1/256\n    Reserved\
    \ for NSAP Allocation          0000 001       1/128\n    Reserved for IPX Allocation\
    \           0000 010       1/128\n    Unassigned                            0000\
    \ 011       1/128\n    Unassigned                            0000 1         1/32\n\
    \    Unassigned                            0001           1/16\n    Aggregatable\
    \ Global Unicast Addresses 001            1/8\n    Unassigned                \
    \            010            1/8\n    Unassigned                            011\
    \            1/8\n    Unassigned                            100            1/8\n\
    \    Unassigned                            101            1/8\n    Unassigned\
    \                            110            1/8\n    Unassigned              \
    \              1110           1/16\n    Unassigned                           \
    \ 1111 0         1/32\n    Unassigned                            1111 10     \
    \   1/64\n    Unassigned                            1111 110       1/128\n   \
    \ Unassigned                            1111 1110 0    1/512\n    Link-Local Unicast\
    \ Addresses          1111 1110 10   1/1024\n    Site-Local Unicast Addresses \
    \         1111 1110 11   1/1024\n    Multicast Addresses                   1111\
    \ 1111      1/256\n    Notes:\n      (1) The \"unspecified address\" (see section\
    \ 2.5.2), the loopback\n          address (see section 2.5.3), and the IPv6 Addresses\
    \ with\n          Embedded IPv4 Addresses (see section 2.5.4), are assigned out\n\
    \          of the 0000 0000 format prefix space.\n      (2) The format prefixes\
    \ 001 through 111, except for Multicast\n          Addresses (1111 1111), are\
    \ all required to have to have 64-bit\n          interface identifiers in EUI-64\
    \ format.  See section 2.5.1 for\n          definitions.\n   This allocation supports\
    \ the direct allocation of aggregation\n   addresses, local use addresses, and\
    \ multicast addresses.  Space is\n   reserved for NSAP addresses and IPX addresses.\
    \  The remainder of the\n   address space is unassigned for future use.  This\
    \ can be used for\n   expansion of existing use (e.g., additional aggregatable\
    \ addresses,\n   etc.) or new uses (e.g., separate locators and identifiers).\
    \  Fifteen\n   percent of the address space is initially allocated.  The remaining\n\
    \   85% is reserved for future use.\n   Unicast addresses are distinguished from\
    \ multicast addresses by the\n   value of the high-order octet of the addresses:\
    \ a value of FF\n   (11111111) identifies an address as a multicast address; any\
    \ other\n   value identifies an address as a unicast address.  Anycast addresses\n\
    \   are taken from the unicast address space, and are not syntactically\n   distinguishable\
    \ from unicast addresses.\n"
- title: 2.5 Unicast Addresses
  contents:
  - "2.5 Unicast Addresses\n   IPv6 unicast addresses are aggregatable with contiguous\
    \ bit-wise\n   masks similar to IPv4 addresses under Class-less Interdomain Routing\n\
    \   [CIDR].\n   There are several forms of unicast address assignment in IPv6,\n\
    \   including the global aggregatable global unicast address, the NSAP\n   address,\
    \ the IPX hierarchical address, the site-local address, the\n   link-local address,\
    \ and the IPv4-capable host address.  Additional\n   address types can be defined\
    \ in the future.\n   IPv6 nodes may have considerable or little knowledge of the\
    \ internal\n   structure of the IPv6 address, depending on the role the node plays\n\
    \   (for instance, host versus router).  At a minimum, a node may\n   consider\
    \ that unicast addresses (including its own) have no internal\n   structure:\n\
    \   |                           128 bits                              |\n   +-----------------------------------------------------------------+\n\
    \   |                          node address                           |\n   +-----------------------------------------------------------------+\n\
    \   A slightly sophisticated host (but still rather simple) may\n   additionally\
    \ be aware of subnet prefix(es) for the link(s) it is\n   attached to, where different\
    \ addresses may have different values for\n   n:\n   |                       \
    \  n bits                 |   128-n bits   |\n   +------------------------------------------------+----------------+\n\
    \   |                   subnet prefix                | interface ID   |\n   +------------------------------------------------+----------------+\n\
    \   Still more sophisticated hosts may be aware of other hierarchical\n   boundaries\
    \ in the unicast address.  Though a very simple router may\n   have no knowledge\
    \ of the internal structure of IPv6 unicast\n   addresses, routers will more generally\
    \ have knowledge of one or more\n   of the hierarchical boundaries for the operation\
    \ of routing\n   protocols.  The known boundaries will differ from router to router,\n\
    \   depending on what positions the router holds in the routing\n   hierarchy.\n"
- title: 2.5.1 Interface Identifiers
  contents:
  - "2.5.1 Interface Identifiers\n   Interface identifiers in IPv6 unicast addresses\
    \ are used to identify\n   interfaces on a link.  They are required to be unique\
    \ on that link.\n   They may also be unique over a broader scope.  In many cases\
    \ an\n   interface's identifier will be the same as that interface's link-\n \
    \  layer address.  The same interface identifier may be used on multiple\n   interfaces\
    \ on a single node.\n   Note that the use of the same interface identifier on\
    \ multiple\n   interfaces of a single node does not affect the interface\n   identifier's\
    \ global uniqueness or each IPv6 addresses global\n   uniqueness created using\
    \ that interface identifier.\n   In a number of the format prefixes (see section\
    \ 2.4) Interface IDs\n   are required to be 64 bits long and to be constructed\
    \ in IEEE EUI-64\n   format [EUI64].  EUI-64 based Interface identifiers may have\
    \ global\n   scope when a global token is available (e.g., IEEE 48bit MAC) or\
    \ may\n   have local scope where a global token is not available (e.g., serial\n\
    \   links, tunnel end-points, etc.).  It is required that the \"u\" bit\n   (universal/local\
    \ bit in IEEE EUI-64 terminology) be inverted when\n   forming the interface identifier\
    \ from the EUI-64.  The \"u\" bit is set\n   to one (1) to indicate global scope,\
    \ and it is set to zero (0) to\n   indicate local scope.  The first three octets\
    \ in binary of an EUI-64\n   identifier are as follows:\n       0       0 0  \
    \     1 1       2\n      |0       7 8       5 6       3|\n      +----+----+----+----+----+----+\n\
    \      |cccc|ccug|cccc|cccc|cccc|cccc|\n      +----+----+----+----+----+----+\n\
    \   written in Internet standard bit-order , where \"u\" is the\n   universal/local\
    \ bit, \"g\" is the individual/group bit, and \"c\" are the\n   bits of the company_id.\
    \  Appendix A: \"Creating EUI-64 based Interface\n   Identifiers\" provides examples\
    \ on the creation of different EUI-64\n   based interface identifiers.\n   The\
    \ motivation for inverting the \"u\" bit when forming the interface\n   identifier\
    \ is to make it easy for system administrators to hand\n   configure local scope\
    \ identifiers when hardware tokens are not\n   available.  This is expected to\
    \ be case for serial links, tunnel end-\n   points, etc.  The alternative would\
    \ have been for these to be of the\n   form 0200:0:0:1, 0200:0:0:2, etc., instead\
    \ of the much simpler ::1,\n   ::2, etc.\n   The use of the universal/local bit\
    \ in the IEEE EUI-64 identifier is\n   to allow development of future technology\
    \ that can take advantage of\n   interface identifiers with global scope.\n  \
    \ The details of forming interface identifiers are defined in the\n   appropriate\
    \ \"IPv6 over <link>\" specification such as \"IPv6 over\n   Ethernet\" [ETHER],\
    \ \"IPv6 over FDDI\" [FDDI], etc.\n"
- title: 2.5.2 The Unspecified Address
  contents:
  - "2.5.2 The Unspecified Address\n   The address 0:0:0:0:0:0:0:0 is called the unspecified\
    \ address.  It\n   must never be assigned to any node.  It indicates the absence\
    \ of an\n   address.  One example of its use is in the Source Address field of\n\
    \   any IPv6 packets sent by an initializing host before it has learned\n   its\
    \ own address.\n   The unspecified address must not be used as the destination\
    \ address\n   of IPv6 packets or in IPv6 Routing Headers.\n"
- title: 2.5.3 The Loopback Address
  contents:
  - "2.5.3 The Loopback Address\n   The unicast address 0:0:0:0:0:0:0:1 is called\
    \ the loopback address.\n   It may be used by a node to send an IPv6 packet to\
    \ itself.  It may\n   never be assigned to any physical interface.  It may be\
    \ thought of as\n   being associated with a virtual interface (e.g., the loopback\n\
    \   interface).\n   The loopback address must not be used as the source address\
    \ in IPv6\n   packets that are sent outside of a single node.  An IPv6 packet\
    \ with\n   a destination address of loopback must never be sent outside of a\n\
    \   single node and must never be forwarded by an IPv6 router.\n"
- title: 2.5.4 IPv6 Addresses with Embedded IPv4 Addresses
  contents:
  - "2.5.4 IPv6 Addresses with Embedded IPv4 Addresses\n   The IPv6 transition mechanisms\
    \ [TRAN] include a technique for hosts\n   and routers to dynamically tunnel IPv6\
    \ packets over IPv4 routing\n   infrastructure.  IPv6 nodes that utilize this\
    \ technique are assigned\n   special IPv6 unicast addresses that carry an IPv4\
    \ address in the low-\n   order 32-bits.  This type of address is termed an \"\
    IPv4-compatible\n   IPv6 address\" and has the format:\n   |                80\
    \ bits               | 16 |      32 bits        |\n   +--------------------------------------+--------------------------+\n\
    \   |0000..............................0000|0000|    IPv4 address     |\n   +--------------------------------------+----+---------------------+\n\
    \   A second type of IPv6 address which holds an embedded IPv4 address is\n  \
    \ also defined.  This address is used to represent the addresses of\n   IPv4-only\
    \ nodes (those that *do not* support IPv6) as IPv6 addresses.\n   This type of\
    \ address is termed an \"IPv4-mapped IPv6 address\" and has\n   the format:\n\
    \   |                80 bits               | 16 |      32 bits        |\n   +--------------------------------------+--------------------------+\n\
    \   |0000..............................0000|FFFF|    IPv4 address     |\n   +--------------------------------------+----+---------------------+\n"
- title: 2.5.5 NSAP Addresses
  contents:
  - "2.5.5 NSAP Addresses\n   This mapping of NSAP address into IPv6 addresses is\
    \ defined in\n   [NSAP].  This document recommends that network implementors who\
    \ have\n   planned or deployed an OSI NSAP addressing plan, and who wish to\n\
    \   deploy or transition to IPv6, should redesign a native IPv6\n   addressing\
    \ plan to meet their needs.  However, it also defines a set\n   of mechanisms\
    \ for the support of OSI NSAP addressing in an IPv6\n   network.  These mechanisms\
    \ are the ones that must be used if such\n   support is required.  This document\
    \ also defines a mapping of IPv6\n   addresses within the OSI address format,\
    \ should this be required.\n"
- title: 2.5.6 IPX Addresses
  contents:
  - "2.5.6 IPX Addresses\n   This mapping of IPX address into IPv6 addresses is as\
    \ follows:\n   |   7   |                   121 bits                          \
    \    |\n   +-------+---------------------------------------------------------+\n\
    \   |0000010|                 to be defined                           |\n   +-------+---------------------------------------------------------+\n\
    \   The draft definition, motivation, and usage are under study.\n"
- title: 2.5.7 Aggregatable Global Unicast Addresses
  contents:
  - "2.5.7 Aggregatable Global Unicast Addresses\n   The global aggregatable global\
    \ unicast address is defined in [AGGR].\n   This address format is designed to\
    \ support both the current provider\n   based aggregation and a new type of aggregation\
    \ called exchanges.\n   The combination will allow efficient routing aggregation\
    \ for both\n   sites which connect directly to providers and who connect to\n\
    \   exchanges.  Sites will have the choice to connect to either type of\n   aggregation\
    \ point.\n   The IPv6 aggregatable global unicast address format is as follows:\n\
    \   | 3|  13 | 8 |   24   |   16   |          64 bits               |\n   +--+-----+---+--------+--------+--------------------------------+\n\
    \   |FP| TLA |RES|  NLA   |  SLA   |         Interface ID           |\n   |  |\
    \ ID  |   |  ID    |  ID    |                                |\n   +--+-----+---+--------+--------+--------------------------------+\n\
    \   Where\n      001          Format Prefix (3 bit) for Aggregatable Global\n\
    \                   Unicast Addresses\n      TLA ID       Top-Level Aggregation\
    \ Identifier\n      RES          Reserved for future use\n      NLA ID       Next-Level\
    \ Aggregation Identifier\n      SLA ID       Site-Level Aggregation Identifier\n\
    \      INTERFACE ID Interface Identifier\n   The contents, field sizes, and assignment\
    \ rules are defined in\n   [AGGR].\n"
- title: 2.5.8 Local-Use IPv6 Unicast Addresses
  contents:
  - "2.5.8 Local-Use IPv6 Unicast Addresses\n   There are two types of local-use unicast\
    \ addresses defined.  These\n   are Link-Local and Site-Local.  The Link-Local\
    \ is for use on a single\n   link and the Site-Local is for use in a single site.\
    \  Link-Local\n   addresses have the following format:\n   |   10     |\n   |\
    \  bits    |        54 bits          |          64 bits           |\n   +----------+-------------------------+----------------------------+\n\
    \   |1111111010|           0             |       interface ID         |\n   +----------+-------------------------+----------------------------+\n\
    \   Link-Local addresses are designed to be used for addressing on a\n   single\
    \ link for purposes such as auto-address configuration, neighbor\n   discovery,\
    \ or when no routers are present.\n   Routers must not forward any packets with\
    \ link-local source or\n   destination addresses to other links.\n   Site-Local\
    \ addresses have the following format:\n   |   10     |\n   |  bits    |   38\
    \ bits   |  16 bits  |         64 bits            |\n   +----------+-------------+-----------+----------------------------+\n\
    \   |1111111011|    0        | subnet ID |       interface ID         |\n   +----------+-------------+-----------+----------------------------+\n\
    \   Site-Local addresses are designed to be used for addressing inside of\n  \
    \ a site without the need for a global prefix.\n   Routers must not forward any\
    \ packets with site-local source or\n   destination addresses outside of the site.\n"
- title: 2.6 Anycast Addresses
  contents:
  - "2.6 Anycast Addresses\n   An IPv6 anycast address is an address that is assigned\
    \ to more than\n   one interface (typically belonging to different nodes), with\
    \ the\n   property that a packet sent to an anycast address is routed to the\n\
    \   \"nearest\" interface having that address, according to the routing\n   protocols'\
    \ measure of distance.\n   Anycast addresses are allocated from the unicast address\
    \ space, using\n   any of the defined unicast address formats.  Thus, anycast\
    \ addresses\n   are syntactically indistinguishable from unicast addresses.  When\
    \ a\n   unicast address is assigned to more than one interface, thus turning\n\
    \   it into an anycast address, the nodes to which the address is\n   assigned\
    \ must be explicitly configured to know that it is an anycast\n   address.\n \
    \  For any assigned anycast address, there is a longest address prefix P\n   that\
    \ identifies the topological region in which all interfaces\n   belonging to that\
    \ anycast address reside.  Within the region\n   identified by P, each member\
    \ of the anycast set must be advertised as\n   a separate entry in the routing\
    \ system (commonly referred to as a\n   \"host route\"); outside the region identified\
    \ by P, the anycast\n   address may be aggregated into the routing advertisement\
    \ for prefix\n   P.\n   Note that in, the worst case, the prefix P of an anycast\
    \ set may be\n   the null prefix, i.e., the members of the set may have no topological\n\
    \   locality.  In that case, the anycast address must be advertised as a\n   separate\
    \ routing entry throughout the entire internet, which presents\n   a severe scaling\
    \ limit on how many such \"global\" anycast sets may be\n   supported.  Therefore,\
    \ it is expected that support for global anycast\n   sets may be unavailable or\
    \ very restricted.\n   One expected use of anycast addresses is to identify the\
    \ set of\n   routers belonging to an organization providing internet service.\n\
    \   Such addresses could be used as intermediate addresses in an IPv6\n   Routing\
    \ header, to cause a packet to be delivered via a particular\n   aggregation or\
    \ sequence of aggregations.  Some other possible uses\n   are to identify the\
    \ set of routers attached to a particular subnet,\n   or the set of routers providing\
    \ entry into a particular routing\n   domain.\n   There is little experience with\
    \ widespread, arbitrary use of internet\n   anycast addresses, and some known\
    \ complications and hazards when\n   using them in their full generality [ANYCST].\
    \  Until more experience\n   has been gained and solutions agreed upon for those\
    \ problems, the\n   following restrictions are imposed on IPv6 anycast addresses:\n\
    \      o An anycast address must not be used as the source address of an\n   \
    \     IPv6 packet.\n      o An anycast address must not be assigned to an IPv6\
    \ host, that\n        is, it may be assigned to an IPv6 router only.\n"
- title: 2.6.1 Required Anycast Address
  contents:
  - "2.6.1 Required Anycast Address\n   The Subnet-Router anycast address is predefined.\
    \  Its format is as\n   follows:\n   |                         n bits        \
    \         |   128-n bits   |\n   +------------------------------------------------+----------------+\n\
    \   |                   subnet prefix                | 00000000000000 |\n   +------------------------------------------------+----------------+\n\
    \   The \"subnet prefix\" in an anycast address is the prefix which\n   identifies\
    \ a specific link.  This anycast address is syntactically\n   the same as a unicast\
    \ address for an interface on the link with the\n   interface identifier set to\
    \ zero.\n   Packets sent to the Subnet-Router anycast address will be delivered\n\
    \   to one router on the subnet.  All routers are required to support the\n  \
    \ Subnet-Router anycast addresses for the subnets which they have\n   interfaces.\n\
    \   The subnet-router anycast address is intended to be used for\n   applications\
    \ where a node needs to communicate with one of a set of\n   routers on a remote\
    \ subnet.  For example when a mobile host needs to\n   communicate with one of\
    \ the mobile agents on its \"home\" subnet.\n"
- title: 2.7 Multicast Addresses
  contents:
  - "2.7 Multicast Addresses\n   An IPv6 multicast address is an identifier for a\
    \ group of nodes.  A\n   node may belong to any number of multicast groups.  Multicast\n\
    \   addresses have the following format:\n   |   8    |  4 |  4 |            \
    \      112 bits                   |\n   +------ -+----+----+---------------------------------------------+\n\
    \   |11111111|flgs|scop|                  group ID                   |\n   +--------+----+----+---------------------------------------------+\n\
    \      11111111 at the start of the address identifies the address as\n      being\
    \ a multicast address.\n                                    +-+-+-+-+\n      flgs\
    \ is a set of 4 flags:     |0|0|0|T|\n                                    +-+-+-+-+\n\
    \         The high-order 3 flags are reserved, and must be initialized to\n  \
    \       0.\n         T = 0 indicates a permanently-assigned (\"well-known\") multicast\n\
    \         address, assigned by the global internet numbering authority.\n    \
    \     T = 1 indicates a non-permanently-assigned (\"transient\")\n         multicast\
    \ address.\n      scop is a 4-bit multicast scope value used to limit the scope\
    \ of\n      the multicast group.  The values are:\n         0  reserved\n    \
    \     1  node-local scope\n         2  link-local scope\n         3  (unassigned)\n\
    \         4  (unassigned)\n         5  site-local scope\n         6  (unassigned)\n\
    \         7  (unassigned)\n         8  organization-local scope\n         9  (unassigned)\n\
    \         A  (unassigned)\n         B  (unassigned)\n         C  (unassigned)\n\
    \         D  (unassigned)\n         E  global scope\n         F  reserved\n  \
    \    group ID identifies the multicast group, either permanent or\n      transient,\
    \ within the given scope.\n   The \"meaning\" of a permanently-assigned multicast\
    \ address is\n   independent of the scope value.  For example, if the \"NTP servers\n\
    \   group\" is assigned a permanent multicast address with a group ID of\n   101\
    \ (hex), then:\n      FF01:0:0:0:0:0:0:101 means all NTP servers on the same node\
    \ as the\n      sender.\n      FF02:0:0:0:0:0:0:101 means all NTP servers on the\
    \ same link as the\n      sender.\n      FF05:0:0:0:0:0:0:101 means all NTP servers\
    \ at the same site as the\n      sender.\n      FF0E:0:0:0:0:0:0:101 means all\
    \ NTP servers in the internet.\n   Non-permanently-assigned multicast addresses\
    \ are meaningful only\n   within a given scope.  For example, a group identified\
    \ by the non-\n   permanent, site-local multicast address FF15:0:0:0:0:0:0:101\
    \ at one\n   site bears no relationship to a group using the same address at a\n\
    \   different site, nor to a non-permanent group using the same group ID\n   with\
    \ different scope, nor to a permanent group with the same group\n   ID.\n   Multicast\
    \ addresses must not be used as source addresses in IPv6\n   packets or appear\
    \ in any routing header.\n"
- title: 2.7.1 Pre-Defined Multicast Addresses
  contents:
  - "2.7.1 Pre-Defined Multicast Addresses\n   The following well-known multicast\
    \ addresses are pre-defined:\n      Reserved Multicast Addresses:   FF00:0:0:0:0:0:0:0\n\
    \                                      FF01:0:0:0:0:0:0:0\n                  \
    \                    FF02:0:0:0:0:0:0:0\n                                    \
    \  FF03:0:0:0:0:0:0:0\n                                      FF04:0:0:0:0:0:0:0\n\
    \                                      FF05:0:0:0:0:0:0:0\n                  \
    \                    FF06:0:0:0:0:0:0:0\n                                    \
    \  FF07:0:0:0:0:0:0:0\n                                      FF08:0:0:0:0:0:0:0\n\
    \                                      FF09:0:0:0:0:0:0:0\n                  \
    \                    FF0A:0:0:0:0:0:0:0\n                                    \
    \  FF0B:0:0:0:0:0:0:0\n                                      FF0C:0:0:0:0:0:0:0\n\
    \                                      FF0D:0:0:0:0:0:0:0\n                  \
    \                    FF0E:0:0:0:0:0:0:0\n                                    \
    \  FF0F:0:0:0:0:0:0:0\n   The above multicast addresses are reserved and shall\
    \ never be\n   assigned to any multicast group.\n      All Nodes Addresses:  \
    \  FF01:0:0:0:0:0:0:1\n                              FF02:0:0:0:0:0:0:1\n   The\
    \ above multicast addresses identify the group of all IPv6 nodes,\n   within scope\
    \ 1 (node-local) or 2 (link-local).\n      All Routers Addresses:   FF01:0:0:0:0:0:0:2\n\
    \                               FF02:0:0:0:0:0:0:2\n                         \
    \      FF05:0:0:0:0:0:0:2\n   The above multicast addresses identify the group\
    \ of all IPv6 routers,\n   within scope 1 (node-local), 2 (link-local), or 5 (site-local).\n\
    \      Solicited-Node Address:  FF02:0:0:0:0:1:FFXX:XXXX\n   The above multicast\
    \ address is computed as a function of a node's\n   unicast and anycast addresses.\
    \  The solicited-node multicast address\n   is formed by taking the low-order\
    \ 24 bits of the address (unicast or\n   anycast) and appending those bits to\
    \ the prefix\n   FF02:0:0:0:0:1:FF00::/104 resulting in a multicast address in\
    \ the\n   range\n      FF02:0:0:0:0:1:FF00:0000\n   to\n      FF02:0:0:0:0:1:FFFF:FFFF\n\
    \   For example, the solicited node multicast address corresponding to\n   the\
    \ IPv6 address 4037::01:800:200E:8C6C is FF02::1:FF0E:8C6C.  IPv6\n   addresses\
    \ that differ only in the high-order bits, e.g. due to\n   multiple high-order\
    \ prefixes associated with different aggregations,\n   will map to the same solicited-node\
    \ address thereby reducing the\n   number of multicast addresses a node must join.\n\
    \   A node is required to compute and join the associated Solicited-Node\n   multicast\
    \ addresses for every unicast and anycast address it is\n   assigned.\n"
- title: 2.7.2 Assignment of New IPv6 Multicast Addresses
  contents:
  - "2.7.2 Assignment of New IPv6 Multicast Addresses\n   The current approach [ETHER]\
    \ to map IPv6 multicast addresses into\n   IEEE 802 MAC addresses takes the low\
    \ order 32 bits of the IPv6\n   multicast address and uses it to create a MAC\
    \ address.  Note that\n   Token Ring networks are handled differently.  This is\
    \ defined in\n   [TOKEN].  Group ID's less than or equal to 32 bits will generate\n\
    \   unique MAC addresses.  Due to this new IPv6 multicast addresses\n   should\
    \ be assigned so that the group identifier is always in the low\n   order 32 bits\
    \ as shown in the following:\n   |   8    |  4 |  4 |          80 bits       \
    \   |     32 bits     |\n   +------ -+----+----+---------------------------+-----------------+\n\
    \   |11111111|flgs|scop|   reserved must be zero   |    group ID     |\n   +--------+----+----+---------------------------+-----------------+\n\
    \   While this limits the number of permanent IPv6 multicast groups to\n   2^32\
    \ this is unlikely to be a limitation in the future.  If it\n   becomes necessary\
    \ to exceed this limit in the future multicast will\n   still work but the processing\
    \ will be sightly slower.\n   Additional IPv6 multicast addresses are defined\
    \ and registered by the\n   IANA [MASGN].\n"
- title: 2.8 A Node's Required Addresses
  contents:
  - "2.8 A Node's Required Addresses\n   A host is required to recognize the following\
    \ addresses as\n   identifying itself:\n      o Its Link-Local Address for each\
    \ interface\n      o Assigned Unicast Addresses\n      o Loopback Address\n  \
    \    o All-Nodes Multicast Addresses\n      o Solicited-Node Multicast Address\
    \ for each of its assigned\n        unicast and anycast addresses\n      o Multicast\
    \ Addresses of all other groups to which the host\n        belongs.\n   A router\
    \ is required to recognize all addresses that a host is\n   required to recognize,\
    \ plus the following addresses as identifying\n   itself:\n      o The Subnet-Router\
    \ anycast addresses for the interfaces it is\n        configured to act as a router\
    \ on.\n      o All other Anycast addresses with which the router has been\n  \
    \      configured.\n      o All-Routers Multicast Addresses\n      o Multicast\
    \ Addresses of all other groups to which the router\n        belongs.\n   The\
    \ only address prefixes which should be predefined in an\n   implementation are\
    \ the:\n      o Unspecified Address\n      o Loopback Address\n      o Multicast\
    \ Prefix (FF)\n      o Local-Use Prefixes (Link-Local and Site-Local)\n      o\
    \ Pre-Defined Multicast Addresses\n      o IPv4-Compatible Prefixes\n   Implementations\
    \ should assume all other addresses are unicast unless\n   specifically configured\
    \ (e.g., anycast addresses).\n"
- title: 3. Security Considerations
  contents:
  - "3. Security Considerations\n   IPv6 addressing documents do not have any direct\
    \ impact on Internet\n   infrastructure security.  Authentication of IPv6 packets\
    \ is defined\n   in [AUTH].\n"
- title: 'APPENDIX A : Creating EUI-64 based Interface Identifiers'
  contents:
  - 'APPENDIX A : Creating EUI-64 based Interface Identifiers

    '
- title: '--------------------------------------------------------'
  contents:
  - "--------------------------------------------------------\n   Depending on the\
    \ characteristics of a specific link or node there are\n   a number of approaches\
    \ for creating EUI-64 based interface\n   identifiers.  This appendix describes\
    \ some of these approaches.\n"
- title: Links or Nodes with EUI-64 Identifiers
  contents:
  - "Links or Nodes with EUI-64 Identifiers\n   The only change needed to transform\
    \ an EUI-64 identifier to an\n   interface identifier is to invert the \"u\" (universal/local)\
    \ bit.  For\n   example, a globally unique EUI-64 identifier of the form:\n  \
    \ |0              1|1              3|3              4|4              6|\n   |0\
    \              5|6              1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   where\
    \ \"c\" are the bits of the assigned company_id, \"0\" is the value\n   of the\
    \ universal/local bit to indicate global scope, \"g\" is\n   individual/group\
    \ bit, and \"m\" are the bits of the manufacturer-\n   selected extension identifier.\
    \  The IPv6 interface identifier would\n   be of the form:\n   |0            \
    \  1|1              3|3              4|4              6|\n   |0              5|6\
    \              1|2              7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   The\
    \ only change is inverting the value of the universal/local bit.\n"
- title: Links or Nodes with IEEE 802 48 bit MAC's
  contents:
  - "Links or Nodes with IEEE 802 48 bit MAC's\n   [EUI64] defines a method to create\
    \ a EUI-64 identifier from an IEEE\n   48bit MAC identifier.  This is to insert\
    \ two octets, with hexadecimal\n   values of 0xFF and 0xFE, in the middle of the\
    \ 48 bit MAC (between the\n   company_id and vendor supplied id).  For example\
    \ the 48 bit MAC with\n   global scope:\n   |0              1|1              3|3\
    \              4|\n   |0              5|6              1|2              7|\n \
    \  +----------------+----------------+----------------+\n   |cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|\n\
    \   +----------------+----------------+----------------+\n   where \"c\" are the\
    \ bits of the assigned company_id, \"0\" is the value\n   of the universal/local\
    \ bit to indicate global scope, \"g\" is\n   individual/group bit, and \"m\" are\
    \ the bits of the manufacturer-\n   selected extension identifier.  The interface\
    \ identifier would be of\n   the form:\n   |0              1|1              3|3\
    \              4|4              6|\n   |0              5|6              1|2  \
    \            7|8              3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |cccccc1gcccccccc|cccccccc11111111|11111110mmmmmmmm|mmmmmmmmmmmmmmmm|\n  \
    \ +----------------+----------------+----------------+----------------+\n   When\
    \ IEEE 802 48bit MAC addresses are available (on an interface or a\n   node),\
    \ an implementation should use them to create interface\n   identifiers due to\
    \ their availability and uniqueness properties.\n"
- title: Links with Non-Global Identifiers
  contents:
  - "Links with Non-Global Identifiers\n   There are a number of types of links that,\
    \ while multi-access, do not\n   have globally unique link identifiers.  Examples\
    \ include LocalTalk\n   and Arcnet.  The method to create an EUI-64 formatted\
    \ identifier is\n   to take the link identifier (e.g., the LocalTalk 8 bit node\n\
    \   identifier) and zero fill it to the left.  For example a LocalTalk 8\n   bit\
    \ node identifier of hexadecimal value 0x4F results in the\n   following interface\
    \ identifier:\n   |0              1|1              3|3              4|4      \
    \        6|\n   |0              5|6              1|2              7|8        \
    \      3|\n   +----------------+----------------+----------------+----------------+\n\
    \   |0000000000000000|0000000000000000|0000000000000000|0000000001001111|\n  \
    \ +----------------+----------------+----------------+----------------+\n   Note\
    \ that this results in the universal/local bit set to \"0\" to\n   indicate local\
    \ scope.\n"
- title: Links without Identifiers
  contents:
  - "Links without Identifiers\n   There are a number of links that do not have any\
    \ type of built-in\n   identifier.  The most common of these are serial links\
    \ and configured\n   tunnels.  Interface identifiers must be chosen that are unique\
    \ for\n   the link.\n   When no built-in identifier is available on a link the\
    \ preferred\n   approach is to use a global interface identifier from another\n\
    \   interface or one which is assigned to the node itself.  To use this\n   approach\
    \ no other interface connecting the same node to the same link\n   may use the\
    \ same identifier.\n   If there is no global interface identifier available for\
    \ use on the\n   link the implementation needs to create a local scope interface\n\
    \   identifier.  The only requirement is that it be unique on the link.\n   There\
    \ are many possible approaches to select a link-unique interface\n   identifier.\
    \  They include:\n      Manual Configuration\n      Generated Random Number\n\
    \      Node Serial Number (or other node-specific token)\n   The link-unique interface\
    \ identifier should be generated in a manner\n   that it does not change after\
    \ a reboot of a node or if interfaces are\n   added or deleted from the node.\n\
    \   The selection of the appropriate algorithm is link and implementation\n  \
    \ dependent.  The details on forming interface identifiers are defined\n   in\
    \ the appropriate \"IPv6 over <link>\" specification.  It is strongly\n   recommended\
    \ that a collision detection algorithm be implemented as\n   part of any automatic\
    \ algorithm.\n"
- title: 'APPENDIX B: ABNF Description of Text Representations'
  contents:
  - 'APPENDIX B: ABNF Description of Text Representations

    '
- title: '----------------------------------------------------'
  contents:
  - "----------------------------------------------------\n   This appendix defines\
    \ the text representation of IPv6 addresses and\n   prefixes in Augmented BNF\
    \ [ABNF] for reference purposes.\n      IPv6address = hexpart [ \":\" IPv4address\
    \ ]\n      IPv4address = 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT \".\" 1*3DIGIT\n\
    \      IPv6prefix  = hexpart \"/\" 1*2DIGIT\n      hexpart = hexseq | hexseq \"\
    ::\" [ hexseq ] | \"::\" [ hexseq ]\n      hexseq  = hex4 *( \":\" hex4)\n   \
    \   hex4    = 1*4HEXDIG\n"
- title: 'APPENDIX C: CHANGES FROM RFC-1884'
  contents:
  - 'APPENDIX C: CHANGES FROM RFC-1884

    '
- title: '---------------------------------'
  contents:
  - "---------------------------------\n   The following changes were made from RFC-1884\
    \ \"IP Version 6\n   Addressing Architecture\":\n      - Added an appendix providing\
    \ a ABNF description of text\n        representations.\n      - Clarification\
    \ that link unique identifiers not change after\n        reboot or other interface\
    \ reconfigurations.\n      - Clarification of Address Model based on comments.\n\
    \      - Changed aggregation format terminology to be consistent with\n      \
    \  aggregation draft.\n      - Added text to allow interface identifier to be\
    \ used on more than\n        one interface on same node.\n      - Added rules\
    \ for defining new multicast addresses.\n      - Added appendix describing procedures\
    \ for creating EUI-64 based\n        interface ID's.\n      - Added notation for\
    \ defining IPv6 prefixes.\n      - Changed solicited node multicast definition\
    \ to use a longer\n        prefix.\n      - Added site scope all routers multicast\
    \ address.\n      - Defined Aggregatable Global Unicast Addresses to use \"001\"\
    \ Format\n        Prefix.\n      - Changed \"010\" (Provider-Based Unicast) and\
    \ \"100\" (Reserved for\n        Geographic) Format Prefixes to Unassigned.\n\
    \      - Added section on Interface ID definition for unicast addresses.\n   \
    \     Requires use of EUI-64 in range of format prefixes and rules for\n     \
    \   setting global/local scope bit in EUI-64.\n      - Updated NSAP text to reflect\
    \ working in RFC1888.\n      - Removed protocol specific IPv6 multicast addresses\
    \ (e.g., DHCP)\n        and referenced the IANA definitions.\n      - Removed\
    \ section \"Unicast Address Example\".  Had become OBE.\n      - Added new and\
    \ updated references.\n      - Minor text clarifications and improvements.\n"
- title: REFERENCES
  contents:
  - "REFERENCES\n   [ABNF]    Crocker, D., and P. Overell, \"Augmented BNF for\n \
    \            Syntax Specifications: ABNF\", RFC 2234, November 1997.\n   [AGGR]\
    \    Hinden, R., O'Dell, M., and S. Deering, \"An\n             Aggregatable Global\
    \ Unicast Address Format\", RFC 2374, July\n             1998.\n   [AUTH]    Atkinson,\
    \ R., \"IP Authentication Header\", RFC 1826, August\n             1995.\n   [ANYCST]\
    \  Partridge, C., Mendez, T., and W. Milliken, \"Host\n             Anycasting\
    \ Service\", RFC 1546, November 1993.\n   [CIDR]    Fuller, V., Li, T., Yu, J.,\
    \ and K. Varadhan, \"Classless\n             Inter-Domain Routing (CIDR): An Address\
    \ Assignment and\n             Aggregation Strategy\", RFC 1519, September 1993.\n\
    \   [ETHER]   Crawford, M., \"Transmission of IPv6 Pacekts over Ethernet\n   \
    \          Networks\", Work in Progress.\n   [EUI64]   IEEE, \"Guidelines for\
    \ 64-bit Global Identifier (EUI-64)\n             Registration Authority\",\n\
    \             http://standards.ieee.org/db/oui/tutorials/EUI64.html,\n       \
    \      March 1997.\n   [FDDI]    Crawford, M., \"Transmission of IPv6 Packets\
    \ over FDDI\n             Networks\", Work in Progress.\n   [IPV6]    Deering,\
    \ S., and R. Hinden, Editors, \"Internet Protocol,\n             Version 6 (IPv6)\
    \ Specification\", RFC 1883, December 1995.\n   [MASGN]   Hinden, R., and S. Deering,\
    \ \"IPv6 Multicast Address\n             Assignments\", RFC 2375, July 1998.\n\
    \   [NSAP]    Bound, J., Carpenter, B., Harrington, D., Houldsworth, J.,\n   \
    \          and A. Lloyd, \"OSI NSAPs and IPv6\", RFC 1888, August 1996.\n   [RFC2119]\
    \ Bradner, S., \"Key words for use in RFCs to Indicate\n             Requirement\
    \ Levels\", BCP 14, RFC 2119, March 1997.\n   [TOKEN]   Thomas, S., \"Transmission\
    \ of IPv6 Packets over Token Ring\n             Networks\", Work in Progress.\n\
    \   [TRAN]    Gilligan, R., and E. Nordmark, \"Transition Mechanisms for\n   \
    \          IPv6 Hosts and Routers\", RFC 1993, April 1996.\n"
- title: AUTHORS' ADDRESSES
  contents:
  - "AUTHORS' ADDRESSES\n   Robert M. Hinden\n   Nokia\n   232 Java Drive\n   Sunnyvale,\
    \ CA 94089\n   USA\n   Phone: +1 408 990-2004\n   Fax:   +1 408 743-5677\n   EMail:\
    \ hinden@iprg.nokia.com\n   Stephen E. Deering\n   Cisco Systems, Inc.\n   170\
    \ West Tasman Drive\n   San Jose, CA 95134-1706\n   USA\n   Phone: +1 408 527-8213\n\
    \   Fax:   +1 408 527-8254\n   EMail: deering@cisco.com\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (1998).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
