- title: __initial_text__
  contents:
  - '                    The UCSD-CC Server-FTP Facility

    '
- title: 1.0 Introduction
  contents:
  - "1.0 Introduction\n   The UCSD Computer Center is a service site that must support\
    \ itself\n   by charging for the usage of its facilities.  Because of this, the\n\
    \   prospective user of our Server-FTP must supply a valid usercode\n   (USER)\
    \ and password (PASS) before any further FTP commands are\n   accepted.\n   Through\
    \ FTP, you are allowed to access or store files on our disk or\n   on any of our\
    \ 7 or 9-track tape drives.  Each individual file\n   transfer is handled by a\
    \ separate process on the B6700 and the user\n   is charged for the processor,\
    \ I/O, core, and (if any) tape charges\n   incurred by this process (note that\
    \ these charges are quite minimal).\n   Each of these transfer processes is given\
    \ a separate \"job\" number and\n   is therefore billed separately for each transfer\
    \ by our accounting\n   system.\n   Please note that we have implemented FTP as\
    \ defined in RFC# 354 (July\n   8, 1972) except as noted.\n"
- title: 2.0 FTP Commands
  contents:
  - '2.0 FTP Commands

    '
- title: (1)   USER
  contents:
  - "(1)   USER\n      As mentioned, you must supply a legal, known, UCSD--CC user-code.\n\
    \      Following which, the \"230\" message will be given, asking for the\n  \
    \    corresponding password.\n"
- title: (2)   PASS
  contents:
  - "(2)   PASS\n      After the 'USER' command is accepted, you must then enter the\
    \ PASS\n      command giving the corresponding password.  If the usercode and\n\
    \      password are of correct form, if they match, if there is money in\n   \
    \   your account, if your account is active, and if you are authorized\n     \
    \ for \"Q1\" service, then you will be properly logged-on and the\n      \"230\"\
    \ response will be returned.\n"
- title: (3)   BYTE
  contents:
  - "(3)   BYTE\n      We allow only the (default) byte-size of \"8\" - all others\
    \ will be\n      rejected.\n"
- title: (4)   MODE
  contents:
  - "(4)   MODE\n      We only allow the (default) mode of \"S\" (Stream) - all others\
    \ will\n      be rejected\n"
- title: (5)   TYPE
  contents:
  - "(5)   TYPE\n      We allow \"A\" (ASCII) and \"I\" (Image) types - all others\
    \ will be\n      rejected.  As in standard-FTP, \"A\" is default.\n"
- title: (6)   STRU
  contents:
  - "(6)   STRU\n      We allow both \"F\" (file) and \"R\" (Record) structuring.\
    \  Record-\n      structuring is meaningful only in ASCII/Stream, where CRLF is\
    \ used\n      as End-of-Line.  When using Record-structuring in a STOR to us,\
    \ if\n      an incoming record is longer than the \"MAXRECSIZE\" of the\n    \
    \  designated B6700 file, then we close the data connection, issue a\n      reject\
    \ message, and abort the local (B6700) transfer process.  If\n      a record of\
    \ incoming data is shorter than the specified MAXRECSIZE\n      of the file, then\
    \ the record is filled-out with blanks in type-\n      ASCII or with nulls (0)\
    \ in type-Image.  With Image, of course,\n      this applies only to the last\
    \ record of the B6700 file.  As in\n      standard-FTP, \"F\" is default.\n"
- title: (7)   ALLO
  contents:
  - "(7)   ALLO\n      We have taken the liberty with the FTP-protocol of using the\n\
    \      \"ALLO\" command to enable the user to designate the B6700 \"file-\n  \
    \    attributes\" of his UCSD file.  The FTP-standard form of ALLO is\n      ignored\
    \ (i.e. \"ALLO n\", where 'n' is some integer), although a\n      \"200\" response\
    \ will be returned in this case.  Our \"special\" form\n      is where the ALLO\
    \ verb is immediately followed by a \"#\", which is\n      in turn followed by\
    \ a parenthesized list of standard B6700 file\n      attributes as used on B6700\
    \ \"label-equate\" cards.  Following is an\n      example of this usage;\n   \
    \         ALLO #(KIND=TAPE9,MAXRECSIZE=10,MYUSE=OUT,TITLE=XYZ)\n      If this\
    \ form of the ALLO command is not given prior to a STOR,\n      then the file\
    \ will have the name given prior in the STOR command\n      and will have the\
    \ same characteristics as a standard \"CANDE\"\n      type-DATA disk file (i.e.\
    \ where (MAXRECSIZE=14, BLOCKSIZE=420,\n      AREAS=15, AREASIZE=450)).  If no\
    \ special ALLO is given preceding a\n      RETR, then the file attributes are\
    \ those of the file itself as it\n      exists on the disk and are not altered.\
    \  In cases where the\n      special ALLO is given prior to a transfer, the name\
    \ of the file is\n      determined by the TITLE attribute and the name given as\
    \ the\n      pathname of the STOR or RETR command is ignored.  If no TITLE is\n\
    \      specified in an ALLO, then the internal filename of \"LOCALFILE\" is\n\
    \      used.  With the \"file-attribute-list\" form of the ALLO command,\n   \
    \   the user has much of the same liberty to govern file\n      characteristics\
    \ as he does in using a \"label-equate\" card with a\n      normal B6700 job.\
    \  For information concerning the available file\n      attributes and their possible\
    \ values, please contact the UCSD-CC\n      consultant.  Additionally, you must\
    \ remember that when doing a\n      STOR to a tape at UCSD, you must specify MYUSE=OUT\
    \ in the file-\n      attribute list of the ALLO command.  Also, when transferring\
    \ to or\n      from tapes at UCSD, you must make prior arrangements with our\n\
    \      operators (over TELNET) to locate and mount the tape.  We will\n      soon\
    \ implement a means whereby you may communicate with the\n      operators directly\
    \ through FTP.\n"
- title: (8)   XLINE
  contents:
  - "(8)   XLINE\n      This special command sets Record-structuring in our Server-FTP\n\
    \      without the foreign user having to use a STRU R command (which may\n  \
    \    be rejected by his own host system).  This is specifically useful\n     \
    \ when transferring text files between UCSD and TENEX's (which do\n      not implement\
    \ Record-structuring) - i.e., if we are sending, we\n      will append CRLF's\
    \ to the end of each line of text (we do not\n      store these in the file) and\
    \ will store a line upon receiving data\n      when a CRLF is seen, stripping\
    \ the CRLF.  Entering \"XLINE OFF\"\n      will restore File-structuring on our\
    \ end.\n"
- title: (9)   RETR , STOR
  contents:
  - "(9)   RETR , STOR\n      As specified in standard-FTP except as modified by the\
    \ \"special\"\n      ALLO command (see part (7)).\n"
- title: (10)  APPE
  contents:
  - "(10)  APPE\n      Not implemented at this time, but will be in near future.\n"
- title: (11)  DELE , RNTO , RNFR
  contents:
  - "(11)  DELE , RNTO , RNFR\n      Not implemented.  It is suggested that to perform\
    \ these functions,\n      the user log to our TELNET server (\"CANDE\"), invoke\
    \ the \"LIBMAINT\"\n      program (simply type LIBMAINT), and say;\n         \
    \   REMOVE file-name\n                or\n            CHANGE file-name-1 TO file-name-2\n\
    \      Say BYE in order to exit LIBMAINT.\n"
- title: (12)  ABOR, BYE
  contents:
  - "(12)  ABOR, BYE\n      As specified in standard-FTP; except that, until further\
    \ notice, a\n      BYE given while a transfer is in progress will not be queued\
    \ for\n      action following the transfer.\n   Any commands not mentioned above\
    \ are not yet implemented.\n          [This RFC was put into machine readable\
    \ form for entry]\n    [into the online RFC archives by Helene Morin, Via Genie,\
    \ 12/1999]\n"
