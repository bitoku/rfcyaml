- contents:
  - '       Unicast-Based Rapid Acquisition of Multicast RTP Sessions

    '
  title: __initial_text__
- contents:
  - "Abstract\n   When an RTP receiver joins a multicast session, it may need to\n
    \  acquire and parse certain Reference Information before it can process\n   any
    data sent in the multicast session.  Depending on the join time,\n   length of
    the Reference Information repetition (or appearance)\n   interval, size of the
    Reference Information, and the application and\n   transport properties, the time
    lag before an RTP receiver can\n   usefully consume the multicast data, which
    we refer to as the\n   Acquisition Delay, varies and can be large.  This is an
    undesirable\n   phenomenon for receivers that frequently switch among different\n
    \  multicast sessions, such as video broadcasts.\n   In this document, we describe
    a method using the existing RTP and RTP\n   Control Protocol (RTCP) machinery
    that reduces the acquisition delay.\n   In this method, an auxiliary unicast RTP
    session carrying the\n   Reference Information to the receiver precedes or accompanies
    the\n   multicast stream.  This unicast RTP flow can be transmitted at a\n   faster
    than natural bitrate to further accelerate the acquisition.\n   The motivating
    use case for this capability is multicast applications\n   that carry real-time
    compressed audio and video.  However, this\n   method can also be used in other
    types of multicast applications\n   where the acquisition delay is long enough
    to be a problem.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6285.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2011 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n   This document may contain
    material from IETF Documents or IETF\n   Contributions published or made publicly
    available before November\n   10, 2008.  The person(s) controlling the copyright
    in some of this\n   material may not have granted the IETF Trust the right to
    allow\n   modifications of such material outside the IETF Standards Process.\n
    \  Without obtaining an adequate license from the person(s) controlling\n   the
    copyright in such materials, this document may not be modified\n   outside the
    IETF Standards Process, and derivative works of it may\n   not be created outside
    the IETF Standards Process, except to format\n   it for publication as an RFC
    or to translate it into languages other\n   than English.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction . . . . . . . . . . . . . . . . . . .
    . . . . . .  3\n     1.1.  Acquisition of RTP Streams vs. RTP Sessions  . . .
    . . . .  6\n     1.2.  Outline  . . . . . . . . . . . . . . . . . . . . . . .
    . .  6\n   2.  Requirements Notation  . . . . . . . . . . . . . . . . . . . .
    \ 7\n   3.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  7\n
    \  4.  Elements of Delay in Multicast Applications  . . . . . . . . .  8\n   5.
    \ Protocol Design Considerations and Their Effect on\n       Resource Management
    for Rapid Acquisition  . . . . . . . . . . 10\n   6.  Rapid Acquisition of Multicast
    RTP Sessions (RAMS) . . . . . . 12\n     6.1.  Overview . . . . . . . . . . .
    . . . . . . . . . . . . . . 12\n     6.2.  Message Flows  . . . . . . . . . .
    . . . . . . . . . . . . 13\n     6.3.  Synchronization of Primary Multicast Streams
    . . . . . . . 24\n     6.4.  Burst Shaping and Congestion Control in RAMS . .
    . . . . . 25\n     6.5.  Failure Cases  . . . . . . . . . . . . . . . . . . .
    . . . 27\n   7.  Encoding of the Signaling Protocol in RTCP . . . . . . . . .
    . 28\n     7.1.  Extensions . . . . . . . . . . . . . . . . . . . . . . . . 29\n
    \      7.1.1.  Vendor-Neutral Extensions  . . . . . . . . . . . . . . 30\n       7.1.2.
    \ Private Extensions . . . . . . . . . . . . . . . . . . 30\n     7.2.  RAMS Request
    . . . . . . . . . . . . . . . . . . . . . . . 31\n     7.3.  RAMS Information
    . . . . . . . . . . . . . . . . . . . . . 34\n       7.3.1.  Response Code Definitions
    \ . . . . . . . . . . . . . . 37\n     7.4.  RAMS Termination . . . . . . . .
    . . . . . . . . . . . . . 39\n   8.  SDP Signaling  . . . . . . . . . . . . .
    . . . . . . . . . . . 40\n     8.1.  Definitions  . . . . . . . . . . . . . .
    . . . . . . . . . 40\n     8.2.  Requirements . . . . . . . . . . . . . . . .
    . . . . . . . 41\n     8.3.  Example and Discussion . . . . . . . . . . . . .
    . . . . . 41\n   9.  NAT Considerations . . . . . . . . . . . . . . . . . . .
    . . . 44\n   10. Security Considerations  . . . . . . . . . . . . . . . . . .
    . 45\n   11. IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 47\n
    \    11.1. Registration of SDP Attributes . . . . . . . . . . . . . . 48\n     11.2.
    Registration of SDP Attribute Values . . . . . . . . . . . 48\n     11.3. Registration
    of FMT Values . . . . . . . . . . . . . . . . 48\n     11.4. SFMT Values for RAMS
    Messages Registry . . . . . . . . . . 48\n     11.5. RAMS TLV Space Registry  .
    . . . . . . . . . . . . . . . . 49\n     11.6. RAMS Response Code Space Registry
    \ . . . . . . . . . . . . 50\n   12. Contributors . . . . . . . . . . . . . .
    . . . . . . . . . . . 52\n   13. Acknowledgments  . . . . . . . . . . . . . .
    . . . . . . . . . 52\n   14. References . . . . . . . . . . . . . . . . . . .
    . . . . . . . 52\n     14.1. Normative References . . . . . . . . . . . . . .
    . . . . . 52\n     14.2. Informative References . . . . . . . . . . . . . . .
    . . . 54\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   Most multicast flows carry a stream of inter-related data.
    \ Receivers\n   need to acquire certain information to start processing any data
    sent\n   in the multicast session.  This document refers to this information\n
    \  as Reference Information.  The Reference Information is\n   conventionally
    sent periodically in the multicast session (although\n   its content can change
    over time) and usually consists of items such\n   as a description of the schema
    for the rest of the data, references\n   to which data to process, encryption
    information including keys, and\n   any other information required to process
    the data in the multicast\n   stream [IC2009].\n   Real-time multicast applications
    require receivers to buffer data.\n   Receivers may have to buffer data to smooth
    out the network jitter,\n   to allow loss-repair methods such as Forward Error
    Correction and\n   retransmission to recover the missing packets, and to satisfy
    the\n   data-processing requirements of the application layer.\n   When a receiver
    joins a multicast session, it has no control over\n   what point in the flow is
    currently being transmitted.  Sometimes the\n   receiver might join the session
    right before the Reference\n   Information is sent in the session.  In this case,
    the required\n   waiting time is usually minimal.  Other times, the receiver might\n
    \  join the session right after the Reference Information has been\n   transmitted.
    \ In this case, the receiver has to wait for the\n   Reference Information to
    appear again in the flow before it can start\n   processing any multicast data.
    \ In some other cases, the Reference\n   Information is not contiguous in the
    flow but dispersed over a large\n   period, which forces the receiver to wait
    for the whole Reference\n   Information to arrive before starting to process the
    rest of the\n   data.\n   The net effect of waiting for the Reference Information
    and waiting\n   for various buffers to fill up is that receivers can experience\n
    \  significantly large delays in data processing.  In this document, we\n   refer
    to the difference between the time an RTP receiver wants to\n   join the multicast
    session and the time the RTP receiver acquires all\n   the necessary Reference
    Information as the Acquisition Delay.  The\n   acquisition delay might not be
    the same for different receivers; it\n   usually varies depending on the join
    time, length of the Reference\n   Information repetition (or appearance) interval,
    and size of the\n   Reference Information, as well as the application and transport\n
    \  properties.\n   The varying nature of the acquisition delay adversely affects
    the\n   receivers that frequently switch among multicast sessions.  While\n   this
    problem equally applies to both any-source multicast (ASM) and\n   source-specific
    multicast (SSM) applications, in this specification\n   we address it for the
    SSM-based applications by describing a method\n   that uses the fundamental tools
    offered by the existing RTP and RTCP\n   protocols [RFC3550].  In this method,
    either the multicast source (or\n   the distribution source in an SSM session)
    retains the Reference\n   Information for a period after its transmission, or
    an intermediary\n   network element (that we refer to as Retransmission Server)
    joins the\n   multicast session and continuously caches the Reference Information\n
    \  as it is sent in the session and acts as a feedback target (see\n   [RFC5760])
    for the session.  When an RTP receiver wishes to join the\n   same multicast session,
    instead of simply issuing a Source Filtering\n   Group Management Protocol (SFGMP)
    Join message, it sends a request to\n   the feedback target for the session and
    asks for the Reference\n   Information.  The retransmission server starts a new
    unicast RTP\n   (retransmission) session and sends the Reference Information to
    the\n   RTP receiver over that session.  If there is residual bandwidth, the\n
    \  retransmission server might burst the Reference Information faster\n   than
    its natural rate.  As soon as the receiver acquires the\n   Reference Information,
    it can join the multicast session and start\n   processing the multicast data.
    \ A simplified network diagram showing\n   this method through an intermediary
    network element is depicted in\n   Figure 1.\n   This method potentially reduces
    the acquisition delay.  We refer to\n   this method as Unicast-Based Rapid Acquisition
    of Multicast RTP\n   Sessions.  A primary use case for this method is to reduce
    the\n   channel-change times in IPTV networks where compressed video streams\n
    \  are multicast in different SSM sessions and viewers randomly join\n   these
    sessions.\n                                        -----------------------\n                                  +--->|
    \    Intermediary      |\n                                  |    |    Network
    Element    |\n                                  | ...|(Retransmission Server)|\n
    \                                 | :   -----------------------\n                                  |
    :\n                                  | v\n           -----------          ----------
    \            ----------\n          | Multicast |        |          |---------->|
    Joining  |\n          |  Source   |------->|  Router  |..........>|   RTP    |\n
    \         |           |        |          |           | Receiver |\n           -----------
    \         ----------             ----------\n                                    |\n
    \                                   |                  ----------\n                                    +---------------->|
    Existing |\n                                                      |    RTP   |\n
    \                                                     | Receiver |\n                                                       ----------\n
    \         -------> Multicast RTP Flow\n          .......> Unicast RTP Flow\n    Figure
    1: Rapid Acquisition through an Intermediary Network Element\n   A principle design
    goal in this solution is to use the existing tools\n   in the RTP/RTCP protocol
    family.  This improves the versatility of\n   the existing implementations and
    promotes faster deployment and\n   better interoperability.  To this effect, we
    use the unicast\n   retransmission support of RTP [RFC4588] and the capabilities
    of RTCP\n   to handle the signaling needed to accomplish the acquisition.\n   A
    reasonable effort has been made in this specification to design a\n   solution
    that reliably works in both engineered and best-effort\n   networks.  However,
    a proper congestion control combined with the\n   desired behavior of this solution
    is difficult to achieve.  Rather,\n   this solution has been designed based on
    the assumption that the\n   retransmission server and the RTP receivers have some
    knowledge about\n   where the bottleneck between them is.  This assumption does
    not\n   generally hold unless both the retransmission server and the RTP\n   receivers
    are in the same edge network.  Thus, this solution should\n   not be used across
    any best-effort path of the Internet.\n   Furthermore, this solution should only
    be used in networks that are\n   already carrying non-congestion-responsive multicast
    traffic and have\n   throttling mechanisms in the retransmission servers to ensure
    the\n   (unicast) burst traffic is a known constant upper-bound multiplier on\n
    \  the multicast load.\n"
  - contents:
    - "1.1.  Acquisition of RTP Streams vs. RTP Sessions\n   In this memo, we describe
      a protocol that handles the rapid\n   acquisition of a single multicast RTP
      session (called a primary\n   multicast RTP session) carrying one or more RTP
      streams (called\n   primary multicast streams).  If desired, multiple instances
      of this\n   protocol may be run in parallel to acquire multiple RTP sessions\n
      \  simultaneously.\n   When an RTP receiver requests the Reference Information
      from the\n   retransmission server, it can opt to rapidly acquire a specific\n
      \  subset of the available RTP streams in the primary multicast RTP\n   session.
      \ Alternatively, the RTP receiver can request the rapid\n   acquisition of all
      of the RTP streams in that RTP session.\n   Regardless of how many RTP streams
      are requested by the RTP receiver\n   or how many will be actually sent by the
      retransmission server, only\n   one unicast RTP session will be established
      by the retransmission\n   server.  This unicast RTP session is separate from
      the associated\n   primary multicast RTP session.  As a result, there are always
      two\n   different RTP sessions in a single instance of the rapid acquisition\n
      \  protocol:  (i) the primary multicast RTP session with its associated\n   unicast
      feedback and (ii) the unicast RTP session.\n   If the RTP receiver wants to
      rapidly acquire multiple RTP sessions\n   simultaneously, separate unicast RTP
      sessions will be established for\n   each of them.\n"
    title: 1.1.  Acquisition of RTP Streams vs. RTP Sessions
  - contents:
    - "1.2.  Outline\n   The rest of this specification is as follows.  Section 3
      provides a\n   list of the definitions frequently used in this document.  In\n
      \  Section 4, we describe the delay components in generic multicast\n   applications.
      \ Section 5 presents an overview of the protocol design\n   considerations for
      rapid acquisition.  We provide the protocol\n   details of the rapid acquisition
      method in Sections 6 and 7.\n   Sections 8 and 9 discuss the Session Description
      Protocol (SDP)\n   signaling issues with examples and NAT-related issues, respectively.\n
      \  Finally, Section 10 discusses the security considerations, and\n   Section
      11 details the IANA considerations.\n"
    title: 1.2.  Outline
  title: 1.  Introduction
- contents:
  - "2.  Requirements Notation\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Notation
- contents:
  - "3.  Definitions\n   This document uses the following acronyms and definitions
    frequently:\n   (Primary) SSM Session:  The multicast session to which RTP receivers\n
    \  can join at a random point in time.  A primary SSM session can carry\n   multiple
    RTP streams.\n   Primary Multicast RTP Session:  The multicast RTP session an
    RTP\n   receiver is interested in acquiring rapidly.  From the RTP receiver's\n
    \  viewpoint, the primary multicast RTP session has one associated\n   unicast
    RTCP feedback stream to a Feedback Target, in addition to the\n   primary multicast
    RTP stream(s).\n   Primary Multicast (RTP) Streams:  The RTP stream(s) carried
    in the\n   primary multicast RTP session.\n   Source Filtering Group Management
    Protocol (SFGMP):  Following the\n   definition in [RFC4604], SFGMP refers to
    the Internet Group\n   Management Protocol (IGMP) version 3 [RFC3376] and the
    Multicast\n   Listener Discovery Protocol (MLD) version 2 [RFC3810] in the IPv4
    and\n   IPv6 networks, respectively.  However, the rapid acquisition method\n
    \  introduced in this document does not depend on a specific version of\n   either
    of these group management protocols.  In the remainder of this\n   document, SFGMP
    will refer to any group management protocol that has\n   Join and Leave functionalities.\n
    \  Feedback Target (FT):  Unicast RTCP feedback target as defined in\n   [RFC5760].
    \ FT_Ap denotes a specific feedback target running on a\n   particular address
    and port.\n   Retransmission (or Burst) Packet:  An RTP packet that is formatted
    as\n   defined in Section 4 of [RFC4588].  The payload of a retransmission\n   or
    burst packet comprises the retransmission payload header followed\n   by the payload
    of the original RTP packet.\n   Reference Information:  The set of certain media
    content and metadata\n   information that is sufficient for an RTP receiver to
    start usefully\n   consuming a media stream.  The meaning, format, and size of
    this\n   information are specific to the application and are out of the scope\n
    \  of this document.\n   Preamble Information:  A more compact form of the whole
    or a subset\n   of the Reference Information transmitted out-of-band.\n   (Unicast)
    Burst (or Retransmission) RTP Session:  The unicast RTP\n   session used to send
    one or more unicast burst RTP streams and their\n   associated RTCP messages.
    \ The terms \"burst RTP session\" and\n   \"retransmission RTP session\" can be
    used interchangeably.\n   (Unicast) Burst (Stream):  A unicast stream of RTP retransmission\n
    \  packets that enable an RTP receiver to rapidly acquire the Reference\n   Information
    associated with a primary multicast stream.  Each burst\n   stream is identified
    by its Synchronization Source (SSRC) identifier\n   that is unique in the primary
    multicast RTP session.  Following the\n   session-multiplexing guidelines in [RFC4588],
    each unicast burst\n   stream will use the same SSRC and Canonical Name (CNAME)
    as its\n   primary multicast RTP stream.\n   Retransmission Server (RS):  The
    RTP/RTCP endpoint that can generate\n   the retransmission packets and the burst
    streams.  The RS may also\n   generate other non-retransmission packets to aid
    rapid acquisition.\n"
  title: 3.  Definitions
- contents:
  - "4.  Elements of Delay in Multicast Applications\n   In a source-specific multicast
    (SSM) delivery system, there are three\n   major elements that contribute to the
    acquisition delay when an RTP\n   receiver switches from one multicast session
    to another one.  These\n   are:\n   o  Multicast-switching delay\n   o  Reference
    Information latency\n   o  Buffering delays\n   Multicast-switching delay is the
    delay that is experienced when\n   leaving the current multicast session (if any)
    and joining the new\n   multicast session.  In typical systems, the multicast
    join and leave\n   operations are handled by a group management protocol.  For
    example,\n   the receivers and routers participating in a multicast session can\n
    \  use the Internet Group Management Protocol (IGMP) version 3 [RFC3376]\n   or
    the Multicast Listener Discovery Protocol (MLD) version 2\n   [RFC3810].  In either
    of these protocols, when a receiver wants to\n   join a multicast session, it
    sends a message to its upstream router\n   and the routing infrastructure sets
    up the multicast forwarding state\n   to deliver the packets of the multicast
    session to the new receiver.\n   The join times vary depending on the proximity
    of the upstream\n   router, the current state of the multicast tree, the load
    on the\n   system, and the protocol implementation.  Current systems provide\n
    \  join latencies, usually less than 200 milliseconds (ms).  If the\n   receiver
    had been participating in another multicast session before\n   joining the new
    session, it needs to send a Leave message to its\n   upstream router to leave
    the session.  In common multicast routing\n   protocols, the leave times are usually
    smaller than the join times;\n   however, it is possible that the Leave and Join
    messages might get\n   lost, in which case the multicast-switching delay inevitably\n
    \  increases.\n   Reference Information latency is the time it takes the receiver
    to\n   acquire the Reference Information.  It is highly dependent on the\n   proximity
    of the actual time the receiver joined the session to the\n   next time the Reference
    Information will be sent to the receivers in\n   the session, whether or not the
    Reference Information is sent\n   contiguously, and the size of the Reference
    Information.  For some\n   multicast flows, there is a little or no interdependency
    in the data,\n   in which case the Reference Information latency will be nil or\n
    \  negligible.  For other multicast flows, there is a high degree of\n   interdependency.
    \ One example of interest is the multicast flows that\n   carry compressed audio/video.
    \ For these flows, the Reference\n   Information latency can become quite large
    and be a major contributor\n   to the overall delay.\n   The buffering component
    of the overall acquisition delay is driven by\n   the way the application layer
    processes the payload.  In many\n   multicast applications, an unreliable transport
    protocol such as UDP\n   [RFC0768] is often used to transmit the data packets,
    and the\n   reliability, if needed, is usually addressed through other means such\n
    \  as Forward Error Correction (e.g., [RFC6015]) and retransmission.\n   These
    loss-repair methods require buffering at the receiver side to\n   function properly.
    \ In many applications, it is also often necessary\n   to de-jitter the incoming
    data packets before feeding them to the\n   application.  The de-jittering process
    also increases the buffering\n   delays.  Besides these network-related buffering
    delays, there are\n   also specific buffering needs that are required by the individual\n
    \  applications.  For example, standard video decoders typically require\n   a
    certain amount, sometimes up to a few seconds, of coded video data\n   to be available
    in the pre-decoding buffers prior to starting to\n   decode the video bitstream.\n"
  title: 4.  Elements of Delay in Multicast Applications
- contents:
  - "5.  Protocol Design Considerations and Their Effect on Resource\n    Management
    for Rapid Acquisition\n   This section is for informational purposes and does
    not contain\n   requirements for implementations.\n   Rapid acquisition is an
    optimization of a system that is expected to\n   continue to work correctly and
    properly whether or not the\n   optimization is effective or even fails due to
    lost control and\n   feedback messages, congestion, or other problems.  This is\n
    \  fundamental to the overall design requirements surrounding the\n   protocol
    definition and to the resource management schemes to be\n   employed together
    with the protocol (e.g., Quality of Service (QoS)\n   machinery, server load management,
    etc).  In particular, the system\n   needs to operate within a number of constraints:\n
    \  o  First, a rapid acquisition operation must fail gracefully.  The\n      user
    experience must not be significantly worse for trying and\n      failing to complete
    rapid acquisition compared to simply joining\n      the multicast session.\n   o
    \ Second, providing the rapid acquisition optimizations must not\n      cause
    collateral damage to either the multicast session being\n      joined or other
    multicast sessions sharing resources with the\n      rapid acquisition operation.
    \ In particular, the rapid acquisition\n      operation must avoid interference
    with the multicast session that\n      might be simultaneously being received
    by other hosts.  In\n      addition, it must also avoid interference with other
    multicast and\n      non-multicast sessions sharing the same network resources.
    \ These\n      properties are possible but are usually difficult to achieve.\n
    \  One challenge is the existence of multiple bandwidth bottlenecks\n   between
    the receiver and the server(s) in the network providing the\n   rapid acquisition
    service.  In commercial IPTV deployments, for\n   example, bottlenecks are often
    present in the aggregation network\n   connecting the IPTV servers to the network
    edge, the access links\n   (e.g., DSL, Data Over Cable Service Interface Specification\n
    \  (DOCSIS)), and the home network of the subscribers.  Some of these\n   links
    might serve only a single subscriber, limiting congestion\n   impact to the traffic
    of only that subscriber, but others can be\n   shared links carrying multicast
    sessions of many subscribers.  Also\n   note that the state of these links can
    vary over time.  The receiver\n   might have knowledge of a portion of this network
    or might have\n   partial knowledge of the entire network.  The methods employed
    by the\n   devices to acquire this network state information is out of the scope\n
    \  of this document.  The receiver should be able to signal the server\n   with
    the bandwidth that it believes it can handle.  The server also\n   needs to be
    able to rate limit the flow in order to stay within the\n   performance envelope
    that it knows about.  Both the server and\n   receiver need to be able to inform
    the other of changes in the\n   requested and delivered rates.  However, the protocol
    must be robust\n   in the presence of packet loss, so this signaling must include
    the\n   appropriate default behaviors.\n   A second challenge is that for some
    uses (e.g., high-bitrate video)\n   the unicast burst bitrate is high while the
    flow duration of the\n   unicast burst is short.  This is because the purpose
    of the unicast\n   burst is to allow the RTP receiver to join the multicast quickly
    and\n   thereby limit the overall resources consumed by the burst.  Such\n   high-bitrate,
    short-duration flows are not amenable to conventional\n   admission-control techniques.
    \ For example, end-to-end per-flow\n   signaled admission-control techniques such
    as Resource Reservation\n   Protocol (RSVP) have too much latency and control
    channel overhead to\n   be a good fit for rapid acquisition.  Similarly, using
    a TCP (or TCP-\n   like) approach with a 3-way handshake and slow-start to avoid\n
    \  inducing congestion would defeat the purpose of attempting rapid\n   acquisition
    in the first place by introducing many round-trip times\n   (RTTs) of delay.\n
    \  These observations lead to certain unavoidable requirements and goals\n   for
    a rapid acquisition protocol.  These are:\n   o  The protocol must be designed
    to allow a deterministic upper bound\n      on the extra bandwidth used (compared
    to just joining the\n      multicast session).  A reasonable size bound is e*B,
    where B is\n      the nominal bandwidth of the primary multicast streams and e
    is an\n      excess-bandwidth coefficient.  The total duration of the unicast\n
    \     burst must have a reasonable bound; long unicast bursts devolve to\n      the
    bandwidth profile of multi-unicast for the whole system.\n   o  The scheme should
    minimize (or better eliminate) the overlap of\n      the unicast burst and the
    primary multicast stream.  This\n      minimizes the window during which congestion
    could be induced on a\n      bottleneck link compared to just carrying the multicast
    or unicast\n      packets alone.\n   o  The scheme must minimize (or better eliminate)
    any gap between the\n      unicast burst and the primary multicast stream, which
    has to be\n      repaired later or, in the absence of repair, will result in loss\n
    \     being experienced by the application.\n   In addition to the above, there
    are some other protocol design issues\n   to be considered.  First, there is at
    least one RTT of \"slop\" in the\n   control loop.  In starting a rapid acquisition
    burst, this manifests\n   as the time between the client requesting the unicast
    burst and the\n   burst description and/or the first unicast burst packets arriving
    at\n   the receiver.  For managing and terminating the unicast burst, there\n
    \  are two possible approaches for the control loop.  First, the\n   receiver
    can adapt to the unicast burst as received, converge based\n   on observation,
    and explicitly terminate the unicast burst with a\n   second control loop exchange
    (which takes a minimum of one RTT, just\n   as starting the unicast burst does).
    \ Alternatively, the server\n   generating the unicast burst can precompute the
    burst parameters\n   based on the information in the initial request and tell
    the receiver\n   the burst duration.\n   The protocol described in the next section
    allows either method of\n   controlling the rapid acquisition unicast burst.\n"
  title: 5.  Protocol Design Considerations and Their Effect on Resource
- contents:
  - "6.  Rapid Acquisition of Multicast RTP Sessions (RAMS)\n   We start this section
    with an overview of the Rapid Acquisition of\n   Multicast RTP Sessions (RAMS)
    method.\n"
  - contents:
    - "6.1.  Overview\n   [RFC5760] specifies an extension to the RTP Control Protocol
      (RTCP)\n   to use unicast feedback in an SSM session.  It defines an\n   architecture
      that introduces the concept of Distribution Source,\n   which, in an SSM context,
      distributes the RTP data and redistributes\n   RTCP information to all RTP receivers.
      \ This RTCP information is\n   retrieved from the Feedback Target, to which
      RTCP unicast feedback\n   traffic is sent.  One or more entities different from
      the\n   Distribution Source MAY implement the feedback target functionality,\n
      \  and different RTP receivers MAY use different feedback targets.\n   This
      document builds further on these concepts to reduce the\n   acquisition delay
      when an RTP receiver joins a multicast session at a\n   random point in time
      by introducing the concept of the Burst Source\n   and new RTCP feedback messages.
      \ The Burst Source has a cache where\n   the most recent packets from the primary
      multicast RTP session are\n   continuously stored.  When an RTP receiver wants
      to receive a primary\n   multicast stream, it can first request a unicast burst
      from the Burst\n   Source before it joins the SSM session.  In this burst, the
      packets\n   are formatted as RTP retransmission packets [RFC4588] and carry\n
      \  Reference Information.  This information allows the RTP receiver to\n   start
      usefully consuming the RTP packets sent in the primary\n   multicast RTP session.\n
      \  Using an accelerated bitrate (as compared to the nominal bitrate of\n   the
      primary multicast stream) for the unicast burst implies that at a\n   certain
      point in time, the payload transmitted in the unicast burst\n   is going to
      be the same as the payload in the associated multicast\n   stream, i.e., the
      unicast burst will catch up with the primary\n   multicast stream.  At this
      point, the RTP receiver no longer needs to\n   receive the unicast burst and
      can join the SSM session.  This method\n   is referred to as the Rapid Acquisition
      of Multicast RTP Sessions\n   (RAMS).\n   This document defines extensions to
      [RFC4585] for an RTP receiver to\n   request a unicast burst as well as for
      additional control messaging\n   that can be leveraged during the acquisition
      process.\n"
    title: 6.1.  Overview
  - contents:
    - "6.2.  Message Flows\n   As shown in Figure 2, the main entities involved in
      rapid acquisition\n   and the message flows are:\n   o  Multicast Source\n   o
      \ Feedback Target (FT)\n   o  Burst/Retransmission Source (BRS)\n   o  RTP Receiver
      (RTP_Rx)\n    -----------                                       --------------\n
      \  |           |------------------------------------>|              |\n   |
      \          |.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.->|              |\n   |           |
      \                                    |              |\n   | Multicast |          ----------------
      \          |              |\n   |  Source   |         | Retransmission |          |
      \             |\n   |           |-------->|  Server  (RS)  |          |              |\n
      \  |           |.-.-.-.->|                |          |              |\n   |
      \          |         |  ------------  |          |              |\n    -----------
      \         | |  Feedback  | |<.=.=.=.=.|              |\n                         |
      | Target (FT)| |<~~~~~~~~~| RTP Receiver |\n   PRIMARY MULTICAST     |  ------------
      \ |          |   (RTP_Rx)   |\n   RTP SESSION with      |                |          |
      \             |\n   UNICAST FEEDBACK      |                |          |              |\n
      \                        |                |          |              |\n   -
      - - - - - - - - - - |- - - - - - - - |- - - - - |- - - - - - - |- -\n                         |
      \               |          |              |\n   UNICAST BURST         |  ------------
      \ |          |              |\n   (or RETRANSMISSION)   | |   Burst/   | |<~~~~~~~~>|
      \             |\n   RTP SESSION           | |  Retrans.  | |.........>|              |\n
      \                        | |Source (BRS)| |<.=.=.=.=>|              |\n                         |
      \ ------------  |          |              |\n                         |                |
      \         |              |\n                          ----------------            --------------\n
      \  -------> Multicast RTP Flow\n   .-.-.-.> Multicast RTCP Flow\n   .=.=.=.>
      Unicast RTCP Reports\n   ~~~~~~~> Unicast RTCP Feedback Messages\n   .......>
      Unicast RTP Flow\n        Figure 2: Flow Diagram for Unicast-Based Rapid Acquisition\n
      \  As defined in [RFC5760], the feedback target (FT) is the entity to\n   which
      the RTP_Rx sends its RTCP feedback messages indicating packet\n   loss by means
      of an RTCP NACK message or indicating RTP_Rx's desire\n   to rapidly acquire
      the primary multicast RTP session by means of an\n   RTCP feedback message defined
      in this document.  While the Burst/\n   Retransmission Source (BRS) is responsible
      for responding to these\n   messages and for further RTCP interaction with the
      RTP_Rx in the case\n   of a rapid acquisition process, it is assumed in the
      remainder of\n   this document that these two logical entities (FT and BRS)
      are\n   combined in a single physical entity and they share state.  In the\n
      \  remainder of the text, the term Retransmission Server (RS) is used\n   whenever
      appropriate, to refer to this single physical entity.\n   The FT is involved
      in the primary multicast RTP session and receives\n   unicast feedback for that
      session as in [RFC5760].  The BRS is\n   involved in the unicast burst (or retransmission)
      RTP session and\n   transmits the unicast burst and retransmission packets formatted
      as\n   RTP retransmission packets [RFC4588] in a single separate unicast RTP\n
      \  session to each RTP_Rx.  In the unicast burst RTP session, as in any\n   other
      RTP session, the BRS and RTP_Rx regularly send the periodic\n   sender and receiver
      reports, respectively.\n   The unicast burst is started by an RTCP feedback
      message that is\n   defined in this document based on the common packet format
      provided\n   in [RFC4585].  An RTP retransmission is triggered by an RTCP NACK\n
      \  message defined in [RFC4585].  Both of these messages are sent to the\n   FT
      of the primary multicast RTP session and can start the unicast\n   burst/retransmission
      RTP session.\n   In the extended RTP profile for RTCP-based feedback (RTP/Audio-Visual\n
      \  Profile with Feedback (AVPF)), there are certain rules that apply to\n   scheduling
      of both of these messages sent to the FT in the primary\n   multicast RTP session;
      these are detailed in Section 3.5 of\n   [RFC4585].  One of the rules states
      that in a multi-party session\n   such as the SSM sessions we are considering
      in this specification, an\n   RTP_Rx cannot send an RTCP feedback message for
      a minimum of one\n   second after joining the session (i.e., Tmin=1.0 second).
      \ While this\n   rule has the goal of avoiding problems associated with flash
      crowds\n   in typical multi-party sessions, it defeats the purpose of rapid\n
      \  acquisition.  Furthermore, when RTP receivers delay their messages\n   requesting
      a burst by a deterministic or even a random amount, it\n   still does not make
      a difference since such messages are not related\n   and their timings are independent
      from each other.  Thus, in this\n   specification, we initialize Tmin to zero
      and allow the RTP receivers\n   to send a burst request message right at the
      beginning.  For the\n   subsequent messages (e.g., updated requests) during
      rapid\n   acquisition, the timing rules of [RFC4585] still apply.\n   Figure
      3 depicts an example of messaging flow for rapid acquisition.\n   The RTCP feedback
      messages are explained below.  The optional\n   messages are indicated in parentheses,
      and they might or might not be\n   present during rapid acquisition.  In a scenario
      where rapid\n   acquisition is performed by a feedback target co-located with
      the\n   media sender, the same method (with the identical message flows)\n   still
      applies.\n                  -------------------------\n                 | Retransmission
      \ Server  |\n    -----------  |  ------   ------------  |   --------    ------------\n
      \  | Multicast | | |  FT  | | Burst/Ret. | |  |        |  |    RTP     |\n   |
      \ Source   | | |      | |   Source   | |  | Router |  |  Receiver  |\n   |           |
      |  ------   ------------  |  |        |  |  (RTP_Rx)  |\n    -----------  |
      \     |         |        |   --------    ------------\n     |            -------------------------
      \      |                |\n     |                  |         |               |
      \               |\n     |-- RTP Multicast ---------->--------------->|                |\n
      \    |-. RTCP Multicast -.-.-.-.->-.-.-.-.-.-.-.->|                |\n     |
      \                 |         |               |                |\n     |                  |
      \        |********************************|\n     |                  |         |*
      \     PORT MAPPING SETUP      *|\n     |                  |         |********************************|\n
      \    |                  |         |               |                |\n     |
      \                 |<~~~~~~~~~~~~~~~~~~~~~~~~~ RTCP RAMS-R ~~~|\n     |                  |
      \        |               |                |\n     |                  |         |********************************|\n
      \    |                  |         |* UNICAST SESSION ESTABLISHED  *|\n     |
      \                 |         |********************************|\n     |                  |
      \        |               |                |\n     |                  |         |~~~
      RTCP RAMS-I ~~~~~~~~~~~~~~~>|\n     |                  |         |               |
      \               |\n     |                  |         |... Unicast RTP Burst
      .........>|\n     |                  |         |               |                |\n
      \    |                  |<~~~~~~~~~~~~~~~~~~~~~~~~ (RTCP RAMS-R) ~~|\n     |
      \                 |         |               |                |\n     |                  |
      \        |~~ (RTCP RAMS-I) ~~~~~~~~~~~~~~>|\n     |                  |         |
      \              |                |\n     |                  |         |               |
      \               |\n     |                  |         |               |<= SFGMP
      Join ==|\n     |                  |         |               |                |\n
      \    |-- RTP Multicast ------------------------------------------->|\n     |-.
      RTCP Multicast -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.>|\n     |                  |
      \        |               |                |\n     |                  |         |
      \              |                |\n     |                  |         |<~~~~~~~~~~~~~~~
      RTCP RAMS-T ~~~|\n     |                  |         |               |                |\n
      \    :                  :         :               :                :\n     |
      \                 |         |<.=.= Unicast RTCP Reports .=.=>|\n     :                  :
      \        :     for the unicast session    :\n     |                  |         |
      \              |                |\n   -------> Multicast RTP Flow\n   .-.-.-.>
      Multicast RTCP Flow\n   .=.=.=.> Unicast RTCP Reports\n   ~~~~~~~> Unicast RTCP
      Feedback Messages\n   =======> SFGMP Messages\n   .......> Unicast RTP Flow\n
      \       Figure 3: Message Flows for Unicast-Based Rapid Acquisition\n   This
      document defines the expected behaviors of the RS and RTP_Rx.\n   It is instructive
      to consider independently operating implementations\n   on the RS and RTP_Rx
      that request the burst, describe the burst,\n   start the burst, join the multicast
      session, and stop the burst.\n   These implementations send messages to each
      other, but provisions are\n   needed for the cases where the control messages
      get lost, or\n   reordered, or are not being delivered to their destinations.\n
      \  The following steps describe rapid acquisition in detail:\n   1.   Port Mapping
      Setup:  For the primary multicast RTP session, the\n        RTP and RTCP destination
      ports are declaratively specified\n        (refer to Section 8 for examples
      in SDP).  However, the RTP_Rx\n        needs to choose its RTP and RTCP receive
      ports for the unicast\n        burst RTP session.  Since this unicast session
      is established\n        after the RTP_Rx has sent a RAMS Request (RAMS-R) message
      as\n        unicast feedback in the primary multicast RTP session, the\n        RTP_Rx
      MUST first set up the port mappings between the unicast\n        and multicast
      sessions and send this mapping information to the\n        FT along with the
      RAMS-R message so that the BRS knows how to\n        communicate with the RTP_Rx.\n
      \       The details of this setup procedure are explained in [RFC6284].\n        Other
      NAT-related issues are left to Section 9 to keep the\n        present discussion
      focused on the RAMS message flows.\n   2.   Request:  The RTP_Rx sends a rapid
      acquisition request (RAMS-R)\n        for the primary multicast RTP session
      to the unicast feedback\n        target of that session.  The request contains
      the SSRC\n        identifier of the RTP_Rx (aka SSRC of packet sender) and can\n
      \       contain the media sender SSRC identifier(s) of the primary\n        multicast
      stream(s) of interest (aka SSRC of media source).  The\n        RAMS-R message
      can contain parameters that constrain the burst,\n        such as the buffer
      and bandwidth limits.\n        Before joining the SSM session, the RTP_Rx learns
      the addresses\n        for the multicast source, group, and RS by out-of-band
      means.\n        If the RTP_Rx desires to rapidly acquire only a subset of the\n
      \       primary multicast streams available in the primary multicast RTP\n        session,
      the RTP_Rx MUST also acquire the SSRC identifiers for\n        the desired RTP
      streams out-of-band.  Based on this information,\n        the RTP_Rx populates
      the desired SSRC(s) in the RAMS-R message.\n        When the FT successfully
      receives the RAMS-R message, the BRS\n        responds to it by accepting or
      rejecting the request.\n        Immediately before the BRS sends any RTP or
      RTCP packet(s)\n        described below, it establishes the unicast burst RTP
      session.\n   3.   Response:  The BRS sends RAMS Information (RAMS-I) message(s)
      to\n        the RTP_Rx to convey the status for the burst(s) requested by\n
      \       the RTP_Rx.\n        If the primary multicast RTP session associated
      with the FT_Ap\n        (a specific feedback target running on a particular
      address and\n        port) on which the RAMS-R message was received contains
      only a\n        single primary multicast stream, the BRS SHALL always use the\n
      \       SSRC of the RTP stream associated with the FT_Ap in the RAMS-I\n        message(s)
      regardless of the media sender SSRC requested in the\n        RAMS-R message.
      \ In such cases the 'ssrc' attribute MAY be\n        omitted from the media
      description.  If the requested SSRC and\n        the actual media sender SSRC
      do not match, the BRS MUST\n        explicitly populate the correct media sender
      SSRC in the initial\n        RAMS-I message (see Section 7.3).\n        The
      FT_Ap could also be associated with an RTP session that\n        carries two
      or more primary multicast streams.  If the RTP_Rx\n        wants to issue a
      collective request to receive the whole primary\n        multicast RTP session,
      it does not need the 'ssrc' attributes to\n        be described in the media
      description.\n        If the FT_Ap is associated with two or more RTP sessions,\n
      \       RTP_Rx's request will be ambiguous.  To avoid any ambiguity,\n        each
      FT_Ap MUST be only associated with a single RTP session.\n        If the RTP_Rx
      is willing to rapidly acquire only a subset of the\n        primary multicast
      streams, the RTP_Rx MUST list all the media\n        sender SSRC(s) denoting
      the stream(s) it wishes to acquire in\n        the RAMS-R message.  Upon receiving
      such a message, the BRS MAY\n        accept the request for all or a subset
      of the media sender\n        SSRC(s) that match the RTP stream(s) it serves.
      \ The BRS MUST\n        reject all other requests with an appropriate response
      code.\n        *  Reject Responses:  The BRS MUST take into account any\n           limitations
      that may have been specified by the RTP_Rx in the\n           RAMS-R message
      when making a decision regarding the request.\n           If the RTP_Rx has
      requested to acquire the whole primary\n           multicast RTP session but
      the BRS cannot provide a rapid\n           acquisition service for any of the
      primary multicast streams,\n           the BRS MUST reject the request via a
      single RAMS-I message\n           with a collective reject response code, which
      is defined as\n           510 in Section 11.6 and whose media sender SSRC field
      is set\n           to one of SSRCs served by this FT_Ap.  Upon receiving this\n
      \          RAMS-I message, the RTP_Rx abandons the rapid acquisition\n           attempt
      and can immediately join the multicast session by\n           sending an SFGMP
      Join message towards its upstream multicast\n           router.\n           In
      all other cases, the BRS MUST send a separate RAMS-I\n           message with
      the appropriate 5xx-level response code (as\n           defined in Section 11.6)
      for each primary multicast stream\n           that has been requested by the
      RTP_Rx but cannot be served by\n           the BRS.  There could be multiple
      reasons why the BRS has\n           rejected the request; however, the BRS chooses
      the most\n           appropriate response code to inform the RTP_Rx.\n           Upon
      receiving a reject response indicating a transient\n           problem such
      as insufficient BRS or network resources, if the\n           RTP_Rx wants to
      retry sending the same request, the RTP_Rx\n           MUST follow the RTCP
      timer rules of [RFC4585] to allow the\n           transient problems to go away.
      \ However, if the reject\n           response indicates a non-transient problem
      (such as the ones\n           reported by response codes 504, 505, and 506),
      the RTP_Rx\n           MUST NOT attempt a retry.  Different response codes have\n
      \          different scopes.  Refer to Section 7.3.1 for details.\n           The
      BRS can employ a policing mechanism against the broken\n           RTP_Rx implementations
      that are not following these rules.\n           See Section 10 for details.\n
      \       *  Accept Responses:  The BRS MUST send at least one separate\n           RAMS-I
      message with the appropriate response code (either\n           zero indicating
      a private response or response code 200\n           indicating success as listed
      in Section 11.6) for each\n           primary multicast stream that has been
      requested by the\n           RTP_Rx and will be served by the BRS.  Such RAMS-I
      messages\n           comprise fields that can be used to describe the individual\n
      \          unicast burst streams.  When there is a RAMS-R request for\n           multiple
      primary multicast streams, the BRS MUST include all\n           the individual
      RAMS-I messages corresponding to that RAMS-R\n           request in the same
      compound RTCP packet if these messages\n           fit in the same packet.  Note
      that if the BRS is sending only\n           the preamble information but not
      the whole unicast burst\n           stream, it will not accept the request but
      will send a\n           response code 511 instead, as defined in Section 11.6.\n
      \          The RAMS-I message carries the RTP sequence number of the\n           first
      packet transmitted in the respective RTP stream to\n           allow the RTP_Rx
      to detect any missing initial packet(s).\n           When the BRS accepts a
      request for a primary multicast\n           stream, this field MUST always be
      populated in the RAMS-I\n           message(s) sent for this particular primary
      multicast stream.\n           It is RECOMMENDED that the BRS sends a RAMS-I
      message at the\n           start of the burst so that the RTP_Rx can quickly
      detect any\n           missing initial packet(s).\n        It is possible that
      the RAMS-I message for a primary multicast\n        stream can get delayed or
      lost, and the RTP_Rx can start\n        receiving RTP packets before receiving
      a RAMS-I message.  An\n        RTP_Rx implementation MUST NOT assume it will
      quickly receive\n        the initial RAMS-I message.  For redundancy purposes,
      it is\n        RECOMMENDED that the BRS repeats the RAMS-I messages multiple\n
      \       times as long as it follows the RTCP timer rules defined in\n        [RFC4585].\n
      \  4.   Unicast Burst:  For the primary multicast stream(s) for which\n        the
      request is accepted, the BRS starts sending the unicast\n        burst(s) that
      comprises one or more RTP retransmission packets\n        sent in the unicast
      burst RTP session.  In some applications,\n        the BRS can send preamble
      information data to the RTP_Rx in\n        addition to the requested burst to
      prime the media decoder(s).\n        However, for the BRS to send the preamble
      information in a\n        particular format, explicit signaling from the RTP_Rx
      is\n        required.  In other words, the BRS MUST NOT send preamble\n        information
      in a particular format unless the RTP_Rx has\n        signaled support for that
      format in the RAMS-R message through a\n        public or private extension
      as defined in Section 7.1.\n        The format of this preamble data is RTP-payload
      specific and not\n        specified here.\n   5.   Updated Request:  The RTP_Rx
      MAY send an updated RAMS-R message\n        (as unicast feedback in the primary
      multicast RTP session) with\n        a different value for one or more fields
      of an earlier RAMS-R\n        message.  The BRS MUST be able to detect whether
      a burst is\n        already planned for or being transmitted to this particular\n
      \       RTP_Rx for this particular media sender SSRC.  If there is an\n        existing
      burst planned for or being transmitted, the newly\n        arriving RAMS-R is
      an updated request; otherwise, it is a new\n        request.  It is also possible
      that the RTP_Rx has sent an\n        improperly formatted RAMS-R message or
      used an invalid value in\n        the RAMS-R message.  If notified by the BRS
      using a 4xx-level\n        response code (as defined in Section 11.6) and only
      after\n        following the timing rules of [RFC4585], the RTP_Rx MAY resend\n
      \       its corrected request.\n        The BRS determines the identity of the
      requesting RTP_Rx by\n        looking at its canonical name identifier (CNAME
      item in the\n        source description (SDES)).  Thus, the RTP_Rx MUST choose
      a\n        method that ensures it uses a unique CNAME identifier.  Such\n        methods
      are provided in [RFC6222].  In addition to one or more\n        fields with
      updated values, an updated RAMS-R message may also\n        include the fields
      whose values did not change.\n        Upon receiving an updated request, the
      BRS can use the updated\n        values for sending/shaping the burst or refine
      the values and\n        use the refined values for sending/shaping the burst.\n
      \       Subsequently, the BRS MAY send an updated RAMS-I message in the\n        unicast
      burst RTP session to indicate the changes it made.\n        It is an implementation-dependent
      decision for an RTP_RX whether\n        and when to send an updated request.
      \ However, note that the\n        updated request messages can get delayed and
      arrive at the BRS\n        after the initial unicast burst was completed.  In
      this case,\n        the updated request message can trigger a new unicast burst,
      and\n        by then if the RTP_Rx has already started receiving multicast\n
      \       data, a congestion is likely to occur.  In this case, the RTP_Rx\n        can
      detect this only after a delay, and then it can try to\n        terminate the
      new burst.  However, in the meantime, the RTP_Rx\n        can experience packet
      loss or other problems.  This and other\n        similar corner cases SHOULD
      be carefully examined if updated\n        requests are to be used.\n   6.   Updated
      Response:  The BRS can send more than one RAMS-I message\n        in the unicast
      burst RTP session, e.g., to update the value of\n        one or more fields
      in an earlier RAMS-I message.  The updated\n        RAMS-I messages might or
      might not be a direct response to a\n        RAMS-R message.  The BRS can also
      send updated RAMS-I messages\n        to signal the RTP_Rx in real time to join
      the SSM session when\n        the BRS had already sent an initial RAMS-I message,
      e.g., at the\n        start of the burst.  The RTP_Rx depends on the BRS to
      learn the\n        join time, which can be conveyed by the first RAMS-I message
      or\n        can be sent/revised in a later RAMS-I message.  If the BRS is\n
      \       not capable of determining the join time in the initial RAMS-I\n        message,
      the BRS MUST send another RAMS-I message (with the join\n        time information)
      later.\n   7.   Multicast Join Signaling:  The RAMS-I message allows the BRS
      to\n        signal explicitly when the RTP_Rx needs to send the SFGMP Join\n
      \       message.  The RTP_Rx SHOULD use this information from the most\n        recent
      RAMS-I message unless it has more accurate information.\n        If the request
      is accepted, this information MUST be conveyed in\n        at least one RAMS-I
      message, and its value MAY be updated by\n        subsequent RAMS-I messages.\n
      \       There can be missing packets if the RTP_Rx joins the multicast\n        session
      too early or too late.  For example, if the RTP_Rx\n        starts receiving
      the primary multicast stream while it is still\n        receiving the unicast
      burst at a high excess bitrate, this can\n        result in an increased risk
      of packet loss.  Or, if the RTP_Rx\n        joins the multicast session some
      time after the unicast burst is\n        finished, there can be a gap between
      the burst and multicast\n        data (a number of RTP packets might be missing).
      \ In both cases,\n        the RTP_Rx can issue retransmission requests (via
      RTCP NACK\n        messages sent as unicast feedback in the primary multicast
      RTP\n        session) [RFC4585] to the FT entity of the RS to fill the gap.\n
      \       The BRS might or might not respond to such requests.  When it\n        responds
      and the response causes significant changes in one or\n        more values reported
      earlier to the RTP_Rx, an updated RAMS-I\n        SHOULD be sent to the RTP_Rx.\n
      \  8.   Multicast Receive:  After the join, the RTP_Rx starts receiving\n        the
      primary multicast stream(s).\n   9.   Terminate:  The BRS can know when it needs
      to ultimately stop\n        the unicast burst based on its parameters.  However,
      the RTP_Rx\n        may need to ask the BRS to terminate the burst prematurely
      or at\n        a specific sequence number.  For this purpose, the RTP_Rx uses\n
      \       the RAMS Termination (RAMS-T) message sent as RTCP feedback in\n        the
      unicast burst RTP session.  A separate RAMS-T message is\n        sent for each
      primary multicast stream served by the BRS unless\n        an RTCP BYE message
      has been sent in the unicast burst RTP\n        session as described in Step
      10.  For the burst requests that\n        were rejected by the BRS, there is
      no need to send a RAMS-T\n        message.\n        If the RTP_Rx wants to terminate
      a burst prematurely, it MUST\n        send a RAMS-T message for the SSRC of
      the primary multicast\n        stream it wishes to terminate.  This message
      is sent in the\n        unicast burst RTP session.  Upon receiving this message,
      the BRS\n        MUST terminate the unicast burst.  If the RTP_Rx requested
      to\n        acquire the entire primary multicast RTP session but wants to\n
      \       terminate this request before it learns the individual media\n        sender
      SSRC(s) via RAMS-I message(s) or RTP packets, the RTP_Rx\n        cannot use
      RAMS-T message(s) and thus MUST send an RTCP BYE\n        message in the unicast
      burst RTP session to terminate the\n        request.\n        Otherwise, the
      default behavior for the RTP_Rx is to send a\n        RAMS-T message in the
      unicast burst RTP session immediately\n        after it joins the multicast
      session and has started receiving\n        multicast packets.  In that case,
      the RTP_Rx MUST send a RAMS-T\n        message with the sequence number of the
      first RTP packet\n        received in the primary multicast stream.  Then, the
      BRS MUST\n        terminate the respective burst after it sends the unicast
      burst\n        packet whose Original Sequence Number (OSN) field in the RTP\n
      \       retransmission payload header matches this number minus one.  If\n        the
      BRS has already sent that unicast burst packet when the\n        RAMS-T message
      arrives, the BRS MUST terminate the respective\n        burst immediately.\n
      \       If an RTCP BYE message has not been issued yet as described in\n        Step
      10, the RTP_Rx MUST send at least one RAMS-T message for\n        each primary
      multicast stream served by the BRS.  The RAMS-T\n        message(s) MUST be
      sent to the BRS in the unicast burst RTP\n        session.  Against the possibility
      of a message loss, it is\n        RECOMMENDED that the RTP_Rx repeats the RAMS-T
      messages multiple\n        times as long as it follows the RTCP timer rules
      defined in\n        [RFC4585].\n        The binding between RAMS-T and ongoing
      bursts is achieved\n        through RTP_Rx's CNAME identifier and packet sender
      and media\n        sender SSRCs.  Choosing a globally unique CNAME makes sure
      that\n        the RAMS-T messages are processed correctly.\n   10.  Terminate
      with RTCP BYE:  When the RTP_Rx is receiving one or\n        more burst streams,
      if the RTP_Rx becomes no longer interested\n        in acquiring any of the
      primary multicast streams, the RTP_Rx\n        SHALL issue an RTCP BYE message
      for the unicast burst RTP\n        session and another RTCP BYE message for
      the primary multicast\n        RTP session.  These RTCP BYE messages are sent
      to the BRS and FT\n        logical entities, respectively.\n        Upon receiving
      an RTCP BYE message, the BRS MUST terminate the\n        rapid acquisition operation
      and cease transmitting any further\n        burst packets and retransmission
      packets.  If support for\n        [RFC5506] has been signaled, the RTCP BYE
      message MAY be sent in\n        a reduced-size RTCP packet.  Otherwise, Section
      6.1 of [RFC3550]\n        mandates the RTCP BYE message always be sent with
      a sender or\n        receiver report in a compound RTCP packet.  If no data
      has been\n        received, an empty receiver report MUST be still included.
      \ With\n        the information contained in the receiver report, the RS can\n
      \       figure out how many duplicate RTP packets have been delivered to\n        the
      RTP_Rx (note that this will be an upper-bound estimate as\n        one or more
      packets might have been lost during the burst\n        transmission).  The impact
      of duplicate packets and measures\n        that can be taken to minimize the
      impact of receiving duplicate\n        packets will be addressed in Section
      6.4.\n        Since an RTCP BYE message issued for the unicast burst RTP\n        session
      terminates that session and ceases transmitting any\n        further packets
      in that session, there is no need for sending\n        explicit RAMS-T messages,
      which would only terminate their\n        respective bursts.\n   For the purpose
      of gathering detailed information about RTP_Rx's\n   rapid acquisition experience,
      [MULTICAST-ACQ] defines an RTCP\n   Extended Report (XR) Block.  This report
      is designed to be payload-\n   independent; thus, it can be used by any multicast
      application that\n   supports rapid acquisition.\n"
    title: 6.2.  Message Flows
  - contents:
    - "6.3.  Synchronization of Primary Multicast Streams\n   When an RTP_RX acquires
      multiple primary multicast streams, it might\n   need to synchronize them for
      playout.  This synchronization is\n   achieved by the help of the RTCP sender
      reports [RFC3550].  If the\n   playout will start before the RTP_Rx has joined
      the multicast\n   session, the RTP_Rx needs to receive the information reflecting
      the\n   synchronization among the primary multicast streams early enough so\n
      \  that it can play out the media in a synchronized fashion.\n   The suggested
      approach is to use the RTP header extension mechanism\n   [RFC5285] and convey
      the synchronization information in a header\n   extension as defined in [RFC6051].
      \ Per [RFC4588], \"if the original\n   RTP header carried an RTP header extension,
      the retransmission packet\n   SHOULD carry the same header extension\".  Thus,
      as long as the\n   multicast source emits a header extension with the synchronization\n
      \  information frequently enough, there is no additional task that needs\n   to
      be carried out by the BRS.  The synchronization information will\n   be sent
      to the RTP_Rx along with the burst packets.  The frequent\n   header extensions
      sent in the primary multicast RTP sessions also\n   allow rapid synchronization
      of the RTP streams for the RTP receivers\n   that do not support RAMS or that
      directly join the multicast session\n   without running RAMS.  Thus, in RAMS
      applications, it is RECOMMENDED\n   that the multicast sources frequently send
      synchronization\n   information by using header extensions following the rules
      presented\n   in [RFC6051].  The regular sender reports are still sent in the\n
      \  unicast session by following the rules of [RFC3550].\n"
    title: 6.3.  Synchronization of Primary Multicast Streams
  - contents:
    - "6.4.  Burst Shaping and Congestion Control in RAMS\n   This section provides
      informative guidelines about how the BRS can\n   shape the transmission of the
      unicast burst and how congestion can be\n   dealt with in the RAMS process.
      \ When the RTP_Rx detects that the\n   unicast burst is causing severe congestion,
      it can prefer to send a\n   RAMS-T message immediately to stop the unicast burst.\n
      \  A higher bitrate for the unicast burst naturally conveys the\n   Reference
      Information and media content to the RTP_Rx faster.  This\n   way, the RTP_Rx
      can start consuming the data sooner, which results in\n   a faster acquisition.
      \ A higher bitrate also represents a better\n   utilization of the BRS resources.
      \ As the burst may continue until it\n   catches up with the primary multicast
      stream, the higher the bursting\n   bitrate, the less data the BRS needs to
      transmit.  However, a higher\n   bitrate for the burst also increases the chances
      for congestion-\n   caused packet loss.  Thus, as discussed in Section 5, there
      has to be\n   an upper bound on the bandwidth used by the burst.\n   When the
      BRS transmits the unicast burst, it is expected to take into\n   account all
      available information to prevent any packet loss that\n   might take place during
      the bursting as a result of buffer overflow\n   on the path between the RS and
      RTP_Rx and at the RTP_Rx itself.  The\n   bursting bitrate can be determined
      by taking into account the\n   following information, when available:\n   (a)
      \ Information obtained via the RAMS-R message, such as Max RAMS\n        Buffer
      Fill Requirement and/or Max Receive Bitrate (see\n        Section 7.2).\n   (b)
      \ Information obtained via RTCP receiver reports provided by the\n        RTP_Rx
      in the retransmission session, allowing in-session\n        bitrate adaptations
      for the burst.  When these receiver reports\n        indicate packet loss, this
      can indicate a certain congestion\n        state in the path from the RS to
      the RTP_Rx.\n   (c)  Information obtained via RTCP NACKs provided by the RTP_Rx
      in\n        the primary multicast RTP session, allowing in-session bitrate\n
      \       adaptations for the burst.  Such RTCP NACKs are transmitted by\n        the
      RTP_Rx in response to packet loss detection in the burst.\n        NACKs can
      indicate a certain congestion state on the path from\n        the RS to RTP_Rx.\n
      \  (d)  There can be other feedback received from the RTP_Rx, e.g., in\n        the
      form of Explicit Congestion Notification - Congestion\n        Experienced (ECN-CE)
      markings [ECN-FOR-RTP] that can influence\n        in-session bitrate adaptation.\n
      \  (e)  Information obtained via updated RAMS-R messages, allowing in-\n        session
      bitrate adaptations, if supported by the BRS.\n   (f)  Transport protocol-specific
      information.  For example, when\n        Datagram Congestion Control Protocol
      (DCCP) is used to transport\n        the RTP burst, the ACKs from the DCCP client
      can be leveraged by\n        the BRS / DCCP server for burst shaping and congestion
      control.\n   (g)  Preconfigured settings for each RTP_Rx or a set of RTP_Rxs
      that\n        indicate the upper-bound bursting bitrates for which no packet\n
      \       loss will occur as a result of congestion along the path of the\n        RS
      to RTP_Rx.  For example, in managed IPTV networks, where the\n        bottleneck
      bandwidth along the end-to-end path is known and\n        where the network
      between the RS and this link is provisioned\n        and dimensioned to carry
      the burst streams, the bursting bitrate\n        does not exceed the provisioned
      value.  These settings can also\n        be dynamically adapted using application-aware
      knowledge.\n   The BRS chooses the initial burst bitrate as follows:\n   o  When
      using RAMS in environments as described in (g), the BRS MUST\n      transmit
      the burst packets at an initial bitrate higher than the\n      nominal bitrate
      but within the engineered or reserved bandwidth\n      limit.\n   o  When the
      BRS cannot determine a reliable bitrate value for the\n      unicast burst (using
      (a) through (g)), it is desirable for the BRS\n      to choose an appropriate
      initial bitrate not above the nominal\n      bitrate and increase it gradually
      unless a congestion is detected.\n   In both cases, during the burst transmission,
      the BRS MUST\n   continuously monitor for packet losses as a result of congestion
      by\n   means of one or more of the mechanisms described in (b) through (f).\n
      \  When the BRS relies on RTCP receiver reports, sufficient bandwidth\n   needs
      to be provided to RTP_Rx for RTCP transmission in the unicast\n   burst RTP
      session.  To achieve a reasonable fast adaptation against\n   congestion, it
      is recommended that the RTP_Rx sends a receiver report\n   at least once every
      two RTTs between the RS and RTP_Rx.  Although the\n   specific heuristics and
      algorithms that deduce a congestion state and\n   how the BRS acts subsequently
      are outside the scope of this\n   specification, the following two methods are
      the best practices:\n   o  Upon detection of a significant amount of packet
      loss, which the\n      BRS attributes to congestion, the BRS decreases the burst
      bitrate.\n      The rate by which the BRS increases and decreases the bitrate
      for\n      the burst can be determined by a TCP-friendly bitrate adaptation\n
      \     algorithm for RTP over UDP or, in the case of (f), by the\n      congestion
      control algorithms defined in DCCP [RFC5762].\n   o  If the congestion is persistent
      and the BRS has to reduce the\n      burst bitrate to a point where the RTP_Rx
      buffer might underrun or\n      the burst will consume too many resources, the
      BRS terminates the\n      burst and transmits a RAMS-I message to RTP_Rx with
      the\n      appropriate response code.  It is then up to RTP_Rx to decide when\n
      \     to join the multicast session.\n   Even though there is no congestion
      experienced during the burst,\n   congestion may anyway arise near the end of
      the burst as the RTP_Rx\n   eventually needs to join the multicast session.
      \ During this brief\n   period, both the burst packets and the multicast packets
      can be\n   simultaneously received by the RTP_Rx, thus enhancing the risk of\n
      \  congestion.\n   Since the BRS signals the RTP_Rx when the BRS expects the
      RTP_Rx to\n   send the SFGMP Join message, the BRS can have a rough estimate
      of\n   when the RTP_Rx will start receiving multicast packets in the SSM\n   session.
      \ The BRS can keep on sending burst packets but reduces the\n   bitrate accordingly
      at the appropriate instant by taking the bitrate\n   of the whole SSM session
      into account.  If the BRS ceases\n   transmitting the burst packets before the
      burst catches up, any gap\n   resulting from this imperfect switch-over by the
      RTP_Rx can be later\n   repaired by requesting retransmissions for the missing
      packets from\n   the RS.  The retransmissions can be shaped by the BRS to make
      sure\n   that they do not cause collateral loss in the primary multicast RTP\n
      \  session and the unicast burst RTP session.\n"
    title: 6.4.  Burst Shaping and Congestion Control in RAMS
  - contents:
    - "6.5.  Failure Cases\n   In this section, we examine the implications of losing
      the RAMS-R,\n   RAMS-I, or RAMS-T messages and other failure cases.\n   When
      the RTP_Rx sends a RAMS-R message to initiate a rapid\n   acquisition but the
      message gets lost and the FT does not receive it,\n   the RTP_Rx will get neither
      a RAMS-I message nor a unicast burst.  In\n   this case, the RTP_Rx MAY resend
      the request when it is eligible to\n   do so based on the RTCP timer rules defined
      in [RFC4585].  Or, after\n   a reasonable amount of time, the RTP_Rx can time
      out (based on the\n   previous observed response times) and immediately join
      the SSM\n   session.\n   In the case where RTP_Rx starts receiving a unicast
      burst but does\n   not receive a corresponding RAMS-I message within a reasonable
      amount\n   of time, the RTP_Rx can either discard the burst data or decide not\n
      \  to interrupt the unicast burst and be prepared to join the SSM\n   session
      at an appropriate time it determines or as indicated in a\n   subsequent RAMS-I
      message (if available).  If the network is subject\n   to packet loss, it is
      RECOMMENDED that the BRS repeats the RAMS-I\n   messages multiple times based
      on the RTCP timer rules defined in\n   [RFC4585].\n   In the failure cases where
      the RAMS-I message is lost or the RAMS-R\n   message is lost and the RTP_Rx
      gives up, the RTP_Rx MUST still\n   terminate the burst(s) it requested by following
      the rules described\n   in Section 6.2.\n   In the case where a RAMS-T message
      sent by the RTP_Rx does not reach\n   its destination, the BRS can continue
      sending burst packets even\n   though the RTP_Rx no longer needs them.  If an
      RTP_Rx is receiving\n   burst packets it no longer needs after sending a RAMS-T
      message, it\n   is RECOMMENDED that the RTP_Rx repeats the RAMS-T message multiple\n
      \  times based on the RTCP timer rules defined in [RFC4585].  The BRS\n   MUST
      be provisioned to terminate the burst when it can no longer send\n   the burst
      packets faster than it receives the primary multicast\n   stream packets.\n
      \  Section 6.3.5 of [RFC3550] explains the rules pertaining to timing\n   out
      an SSRC.  When the BRS accepts to serve the requested burst(s)\n   and establishes
      the retransmission session, the BRS needs to check\n   the liveness of the RTP_Rx
      via the RTCP messages and reports the\n   RTP_Rx sends.  The default rules explained
      in [RFC3550] apply in RAMS\n   as well.\n"
    title: 6.5.  Failure Cases
  title: 6.  Rapid Acquisition of Multicast RTP Sessions (RAMS)
- contents:
  - "7.  Encoding of the Signaling Protocol in RTCP\n   This section defines the formats
    of the RTCP transport-layer feedback\n   messages that are exchanged between the
    retransmission server (RS)\n   and RTP receiver (RTP_Rx) during rapid acquisition.
    \ These messages\n   are referred to as the RAMS Messages.  They are payload-independent\n
    \  and MUST be used by all RTP-based multicast applications that support\n   rapid
    acquisition regardless of the payload they carry.\n   Payload-specific feedback
    messages are not defined in this document.\n   However, further optional payload-independent
    and payload-specific\n   information can be included in the exchange.\n   The
    common packet format for the RTCP feedback messages is defined in\n   Section
    6.1 of [RFC4585] and is also sketched in Figure 4.\n      0                   1
    \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4
    5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |V=2|P|   FMT   |       PT      |          length               |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |                  SSRC of packet sender                        |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    |                  SSRC of media source                         |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
    \    :            Feedback Control Information (FCI)                 :\n     :
    \                                                              :\n     Figure
    4: The Common Packet Format for the RTCP Feedback Messages\n   Each feedback message
    has a fixed-length field for version, padding,\n   feedback message type (FMT),
    packet type (PT), length, SSRC of packet\n   sender, SSRC of media source, and
    a variable-length field for\n   feedback control information (FCI).\n   In the
    RAMS messages, the PT field is set to RTPFB (205) and the FMT\n   field is set
    to RAMS (6).  Individual RAMS messages are identified by\n   a sub-field called
    sub-feedback message type (SFMT).  Any Reserved\n   field SHALL be set to zero
    and ignored.\n   Depending on the specific scenario and timeliness/importance
    of a\n   RAMS message, it can be desirable to send it in a reduced-size RTCP\n
    \  packet [RFC5506].  However, unless support for [RFC5506] has been\n   signaled,
    compound RTCP packets MUST be used by following [RFC3550]\n   rules.\n   Following
    the rules specified in [RFC3550], all integer fields in the\n   messages defined
    below are carried in network-byte order, that is,\n   most significant byte (octet)
    first, also known as big-endian.\n   Unless otherwise stated, numeric constants
    are in decimal (base 10).\n"
  - contents:
    - "7.1.  Extensions\n   To improve the functionality of the RAMS method in certain\n
      \  applications, it can be desirable to define new fields in the RAMS\n   Request,
      Information, and Termination messages.  Such fields MUST be\n   encoded as Type-Length-Value
      (TLV) elements as described below and\n   sketched in Figure 5:\n   o  Type:
      \ A single-octet identifier that defines the type of the\n      parameter represented
      in this TLV element.\n   o  Length:  A two-octet field that indicates the length
      (in octets)\n      of the TLV element excluding the Type and Length fields and
      the\n      8-bit Reserved field between them.  This length does not include\n
      \     any padding that is required for alignment.\n   o  Value:  Variable-size
      set of octets that contains the specific\n      value for the parameter.\n   In
      the extensions, the Reserved field SHALL be set to zero and\n   ignored.  If
      a TLV element does not fall on a 32-bit boundary, the\n   last word MUST be
      padded to the boundary using further bits set to\n   zero.\n   An RTP_Rx or
      BRS MAY include vendor-neutral and private extensions in\n   any RAMS message.
      \ The RTP_Rx or BRS MUST place such extensions after\n   the mandatory fields
      and mandatory TLV elements (if any) and MAY\n   place such extensions in any
      order.  The RTP_Rx or BRS MUST NOT\n   include multiple TLV elements with the
      same Type value in a RAMS\n   message.\n   The support for extensions (unless
      specified otherwise) is OPTIONAL.\n   An RTP_Rx or BRS receiving a vendor-neutral
      or private extension that\n   it does not understand MUST ignore that extension.\n
      \     0                   1                   2                   3\n      0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |     Type      |   Reserved    |            Length             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    :                             Value                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \                  Figure 5: Structure of a TLV Element\n"
    - contents:
      - "7.1.1.  Vendor-Neutral Extensions\n   If the goal in defining new TLV elements
        is to extend the\n   functionality in a vendor-neutral manner, they MUST be
        registered\n   with IANA through the guidelines provided in Section 11.5.\n
        \  The current document defines several vendor-neutral extensions in the\n
        \  subsequent sections.\n"
      title: 7.1.1.  Vendor-Neutral Extensions
    - contents:
      - "7.1.2.  Private Extensions\n   It is desirable to allow vendors to use private
        extensions in a TLV\n   format.  For interoperability, such extensions must
        not collide with\n   each other.\n   A certain range of TLV Types (between
        and including 128 and 254 ) is\n   reserved for private extensions (refer
        to Section 11.5).  IANA\n   management for these extensions is unnecessary,
        and they are the\n   responsibility of individual vendors.\n   The structure
        that MUST be used for the private extensions is\n   depicted in Figure 6.
        \ Here, the enterprise numbers are as listed on\n   http://www.iana.org.  This
        will ensure the uniqueness of the private\n   extensions and avoid any collision.\n
        \     0                   1                   2                   3\n      0
        1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |      Type     |   Reserved    |            Length             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    |                       Enterprise Number                       |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \    :                             Value                             :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \               Figure 6: Structure of a Private Extension\n"
      title: 7.1.2.  Private Extensions
    title: 7.1.  Extensions
  - contents:
    - "7.2.  RAMS Request\n   The RAMS Request (RAMS-R) message is identified by SFMT=1.
      \ This\n   message is sent as unicast feedback in the primary multicast RTP\n
      \  session by the RTP_Rx to request rapid acquisition of a primary\n   multicast
      RTP session or one or more primary multicast streams\n   belonging to the same
      primary multicast RTP session.  In the RAMS-R\n   message, the RTP_Rx MUST set
      both the packet sender SSRC and media\n   sender SSRC fields to its own SSRC
      since the media sender SSRC may\n   not be known.  The RTP_Rx MUST provide explicit
      signaling as\n   described below to request stream(s).  This minimizes the chances
      of\n   accidentally requesting a wrong primary multicast stream.\n   The FCI
      field MUST contain only one RAMS Request.  The FCI field has\n   the structure
      depicted in Figure 7.\n   The semantics of the RAMS-R message is independent
      of the payload\n   type carried in the primary multicast RTP session.\n      0
      \                  1                   2                   3\n      0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    SFMT=1     |                    Reserved                   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    :                  Requested Media Sender SSRC(s)               :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    :      Optional TLV-encoded Fields (and Padding, if needed)     :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \         Figure 7: FCI Field Syntax for the RAMS Request Message\n   o  Requested
      Media Sender SSRC(s):  Mandatory TLV element that lists\n      the media sender
      SSRC(s) requested by the RTP_Rx.  The BRS MUST\n      ignore the media sender
      SSRC specified in the header of the RAMS-R\n      message.\n      If the Length
      field is set to zero (i.e., no media sender SSRC is\n      listed), it means
      that the RTP_Rx is requesting to rapidly acquire\n      the entire primary multicast
      RTP session.  Otherwise, the RTP_Rx\n      lists the individual media sender
      SSRCs in this TLV element and\n      sets the Length field of the TLV element
      to 4*n, where n is the\n      number of SSRC entries.\n      Type:  1\n   o
      \ Min RAMS Buffer Fill Requirement (32 bits):  Optional TLV element\n      that
      denotes the minimum milliseconds of data that the RTP_Rx\n      desires to have
      in its buffer before allowing the data to be\n      consumed by the application.\n
      \     The RTP_Rx can have knowledge of its buffering requirements.\n      These
      requirements can be application and/or device specific.  For\n      instance,
      the RTP_Rx might need to have a certain amount of data\n      in its application
      buffer to handle transmission jitter and/or to\n      be able to support error-control
      methods.  If the BRS is told the\n      minimum buffering requirement of the
      receiver, the BRS can tailor\n      the burst(s) more precisely, e.g., by choosing
      an appropriate\n      starting point.  The methods used by the RTP_Rx to determine
      this\n      value are application specific and thus out of the scope of this\n
      \     document.\n      If specified, the amount of backfill that will be provided
      by the\n      unicast bursts and any payload-specific information MUST NOT be\n
      \     smaller than the specified value.  Otherwise, the backfill will\n      not
      be able to build up the desired level of buffer at the RTP_Rx\n      and can
      cause buffer underruns.\n      Type:  2\n   o  Max RAMS Buffer Fill Requirement
      (32 bits):  Optional TLV element\n      that denotes the maximum milliseconds
      of data that the RTP_Rx can\n      buffer without losing the data due to buffer
      overflow.\n      The RTP_Rx can have knowledge of its buffering requirements.\n
      \     These requirements can be application or device specific.  For\n      instance,
      one particular RTP_Rx might have more physical memory\n      than another RTP_Rx
      and thus can buffer more data.  If the BRS\n      knows the buffering ability
      of the receiver, the BRS can tailor\n      the burst(s) more precisely.  The
      methods used by the receiver to\n      determine this value are application
      specific and thus out of the\n      scope of this document.\n      If specified,
      the amount of backfill that will be provided by the\n      unicast bursts and
      any payload-specific information MUST NOT be\n      larger than this value.
      \ Otherwise, the backfill may cause buffer\n      overflows at the RTP_Rx.\n
      \     Type:  3\n   o  Max Receive Bitrate (64 bits):  Optional TLV element that
      denotes\n      the maximum bitrate (in bits per second) at which the RTP_Rx
      can\n      process the aggregation of the unicast burst(s) and any payload-\n
      \     specific information that will be provided by the BRS.  The limits\n      can
      include local receiver limits as well as network limits that\n      are known
      to the receiver.\n      If specified, the total bitrate of the unicast burst(s)
      plus any\n      payload-specific information MUST NOT be larger than this value.\n
      \     Otherwise, congestion and packet loss are more likely to occur.\n      Type:
      \ 4\n   o  Preamble-only Allowed (0 bits):  Optional TLV element that\n      indicates
      that the RTP_Rx is willing to receive only the preamble\n      information for
      the desired primary multicast stream(s) in case\n      the BRS cannot send the
      unicast burst stream(s).  (In such cases,\n      the BRS will not accept the
      request, but will send a response code\n      511 in the RAMS-I message as defined
      in Section 11.6.)  Note that\n      the RTP_Rx signals the particular preamble
      format(s) it supports\n      through a public or a private extension in the
      same RAMS-R\n      message.\n      If this TLV element does not exist in the
      RAMS-R message, the BRS\n      MUST NOT respond to the RAMS-R message by sending
      the preamble\n      information only.  Since this TLV element does not carry
      a Value\n      field, the Length field MUST be set to zero.\n      Type:  5\n
      \  o  Supported Enterprise Number(s):  Optional TLV element that\n      indicates
      the enterprise number(s) that the RTP_Rx implementation\n      supports.  Similar
      to the private extensions, the enterprise\n      numbers here are as listed
      on http://www.iana.org.  This TLV\n      element, if exists, provides a hint
      to the BRS about which private\n      extensions the RTP_Rx can potentially
      support.  Note that an\n      RTP_Rx does not necessarily support all the private
      extensions\n      under a particular enterprise number.  Unless the BRS explicitly\n
      \     knows which private extensions an RTP_Rx supports (through this or\n      some
      out-of-band means), the BRS SHOULD NOT use private extensions\n      in the
      RAMS-I messages.  The BRS SHOULD rather use only vendor-\n      neutral extensions.
      \ The Length field of this TLV element is set\n      to 4*n, where n is the
      number of enterprise number entries.\n      Type:  6\n"
    title: 7.2.  RAMS Request
  - contents:
    - "7.3.  RAMS Information\n   The RAMS Information (RAMS-I) message is identified
      by SFMT=2.  This\n   message is used to describe the unicast burst that will
      be sent for\n   rapid acquisition.  It also includes other useful information
      for the\n   RTP_Rx as described below.\n   A separate RAMS-I message with the
      appropriate response code is sent\n   in the unicast burst RTP session by the
      BRS for each primary\n   multicast stream that has been requested by the RTP_Rx.
      \ In each of\n   these RAMS-I messages, the media sender SSRC and packet sender
      SSRC\n   fields are both set to the SSRC of the BRS, which equals the SSRC of\n
      \  the respective primary multicast stream.\n   The FCI field MUST contain only
      one RAMS Information message.  The\n   FCI field has the structure depicted
      in Figure 8.\n   The semantics of the RAMS-I message is independent of the payload\n
      \  type carried in the primary multicast RTP session.\n      0                   1
      \                  2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    SFMT=2     |      MSN      |          Response             |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    :      Optional TLV-encoded Fields (and Padding, if needed)     :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \       Figure 8: FCI Field Syntax for the RAMS Information Message\n   A RAMS-I
      message has the following fields:\n   o  Message Sequence Number (MSN) (8 bits)
      :  Mandatory field that\n      denotes the sequence number of the RAMS-I message
      for the\n      particular media sender SSRC specified in the message header.
      \ The\n      MSN value SHALL be set to zero when a new RAMS request is\n      received.
      \ During rapid acquisition, the same RAMS-I message MAY\n      be repeated for
      redundancy purposes without incrementing the MSN\n      value.  If an updated
      RAMS-I message will be sent (either with new\n      information or updated information),
      the MSN value SHALL be\n      incremented by one.  In the MSN field, the regular
      wrapping rules\n      apply.  Note that if the RTP_Rx has sent an updated request,
      it\n      MUST check every RAMS-I message entirely, regardless of whether or\n
      \     not the MSN value has changed.\n   o  Response (16 bits):  Mandatory field
      that denotes the response\n      code for this RAMS-I message.  This document
      defines several\n      initial response codes in Section 7.3.1 and registers
      them with\n      IANA in Section 11.6.  If a new vendor-neutral response code
      will\n      be defined, it MUST be registered with IANA through the guidelines\n
      \     specified in Section 11.6.  If the new response code is intended\n      to
      be used privately by a vendor, there is no need for IANA\n      management.
      \ Instead, the vendor MUST use the private extension\n      mechanism (Section
      7.1.2) to convey its message and MUST indicate\n      this by putting zero in
      the Response field.\n      When the RTP_Rx receives a RAMS-I message with a
      response code\n      that it does not understand, the RTP_Rx MUST send a RAMS-T
      message\n      immediately to the BRS.\n   The following TLV elements have been
      defined for the RAMS-I messages:\n   o  Media Sender SSRC (32 bits):  Optional
      TLV element that specifies\n      the media sender SSRC of the unicast burst
      stream.  If the FT_Ap\n      that received the RAMS-R message is associated
      with a single\n      primary multicast stream but the requested media sender
      SSRC does\n      not match the SSRC of the RTP stream associated with this FT_Ap,\n
      \     the BRS includes this TLV element in the initial RAMS-I message to\n      let
      the RTP_Rx know that the media sender SSRC has changed.  If\n      the two SSRCs
      match, there is no need to include this TLV element.\n      Type:  31\n   o
      \ RTP Seqnum of the First Packet (16 bits):  TLV element that\n      specifies
      the RTP sequence number of the first packet that will be\n      sent in the
      respective unicast RTP stream.  This allows the RTP_Rx\n      to know whether
      one or more packets sent by the BRS have been\n      dropped at the beginning
      of the stream.  If the BRS accepts the\n      RAMS request, this element exists.
      \ If the BRS rejects the RAMS\n      request, this element SHALL NOT exist.\n
      \     Type:  32\n   o  Earliest Multicast Join Time (32 bits):  TLV element
      that\n      specifies the delta time (in ms) between the arrival of the first\n
      \     RTP packet in the unicast RTP stream (which could be a burst\n      packet
      or a payload-specific packet) and the earliest time instant\n      when an RTP_Rx
      MAY send an SFGMP Join message to join the\n      multicast session.  A zero
      value indicated in this element means\n      that the RTP_Rx MAY send the SFGMP
      Join message right away.  If\n      the RTP_Rx does not want to wait until the
      earliest multicast join\n      time, it MAY send a RAMS-T message, and after
      a reasonable amount\n      of time, it MAY join the SSM session.\n      If the
      RAMS request has been accepted, the BRS sends this element\n      at least once
      so that the RTP_Rx knows when to join the multicast\n      session.  If the
      burst request has been rejected as indicated in\n      the Response field, this
      element MUST indicate a zero value.  In\n      that case, it is up to the RTP_Rx
      when or whether to join the\n      multicast session.\n      When the BRS serves
      two or more bursts and sends a separate RAMS-I\n      message for each burst,
      the join times specified in these RAMS-I\n      messages SHOULD correspond to
      more or less the same time instant,\n      and the RTP_Rx sends the SFGMP Join
      message based on the earliest\n      join time.\n      Type:  33\n   o  Burst
      Duration (32 bits):  Optional TLV element that denotes the\n      time the burst
      will last (in ms), i.e., the difference between the\n      expected transmission
      times of the first and the last burst\n      packets that the BRS is planning
      to send in the respective unicast\n      RTP stream.  In the absence of additional
      stimulus, the BRS will\n      send a burst of this duration.  However, the burst
      duration can be\n      modified by subsequent events, including changes in the
      primary\n      multicast stream and reception of RAMS-T messages.\n      The
      BRS MUST terminate the flow in the timeframe indicated by this\n      burst
      duration or the duration established by those subsequent\n      events even
      if it does not get a RAMS-T or a BYE message from the\n      RTP_Rx.  It is
      OPTIONAL to send this element in a RAMS-I message\n      when the burst request
      is accepted.  If the burst request has been\n      rejected as indicated in
      the Response field, this element MAY be\n      omitted or indicate a zero value.\n
      \     Type:  34\n   o  Max Transmit Bitrate (64 bits):  Optional TLV element
      that denotes\n      the maximum bitrate (in bits per second) that will be used
      by the\n      BRS for the RTP stream associated with this RAMS-I message.\n
      \     Type:  35\n"
    - contents:
      - "7.3.1.  Response Code Definitions\n   1xx-Level Response Codes:  These response
        codes are sent for\n   informational purposes.\n   o  100:  This is used when
        the BRS wants to update a value that was\n      sent earlier to the RTP_Rx.\n
        \  2xx-Level Response Codes:  These response codes are sent to indicate\n
        \  success.\n   o  200:  This is used when the server accepts the RAMS request.\n
        \  o  201:  This is used when the unicast burst has been completed and\n      the
        BRS wants to notify the RTP_Rx.\n   4xx-Level Response Codes:  These response
        codes are sent to indicate\n   that the message sent by the RTP_Rx is either
        improperly formatted or\n   contains an invalid value.  The rules the RTP_Rx
        needs to follow upon\n   receiving one of these response codes are outlined
        in Step 5 in\n   Section 6.2.  The 4xx-level response codes are also used
        as status\n   codes in the Multicast Acquisition Report Block [MULTICAST-ACQ]
        in\n   order to collect RTP_Rx-based error conditions.\n   o  400:  This is
        used when the RAMS-R message is improperly\n      formatted.\n   o  401:  This
        is used when the minimum RAMS buffer fill requirement\n      value indicated
        in the RAMS-R message is invalid.\n   o  402:  This is used when the maximum
        RAMS buffer fill requirement\n      value indicated in the RAMS-R message
        is invalid.\n   o  403:  This is used when the maximum receive bitrate value\n
        \     indicated in the RAMS-R message is insufficient.\n   o  404:  This is
        used when the RAMS-T message is improperly\n      formatted.\n   5xx-Level
        Response Codes:  These response codes are sent to indicate\n   an error on
        the BRS side.  The rules the RTP_Rx needs to follow upon\n   receiving one
        of these response codes are outlined in Step 3 in\n   Section 6.2.  The 5xx-level
        response codes are also used as status\n   codes in the Multicast Acquisition
        Report Block [MULTICAST-ACQ] in\n   order to collect BRS-based error conditions.\n
        \  o  500:  This is used when the BRS has experienced an internal error\n
        \     and cannot accept the RAMS request.\n   o  501:  This is used when the
        BRS does not have enough bandwidth to\n      send the unicast burst stream.\n
        \  o  502:  This is used when the BRS terminates the unicast burst\n      stream
        due to network congestion.\n   o  503:  This is used when the BRS does not
        have enough CPU resources\n      to send the unicast burst stream.\n   o  504:
        \ This is used when the BRS does not support sending a unicast\n      burst
        stream.\n   o  505:  This is used when the requesting RTP_Rx is not eligible
        to\n      receive a unicast burst stream.\n   o  506:  This is used when RAMS
        functionality is not enabled for the\n      requested multicast stream.\n
        \  o  507:  This is used when the BRS cannot find a valid starting point\n
        \     for the unicast burst stream that satisfies the RTP_Rx's\n      requirements.\n
        \  o  508:  This is used when the BRS cannot find the essential\n      reference
        information for the requested multicast stream.\n   o  509:  This is used
        when the BRS cannot match the requested SSRC to\n      any of the streams
        it is serving.\n   o  510:  This is used when the BRS cannot serve the requested
        entire\n      session.\n   o  511:  This is used when the BRS sends only the
        preamble\n      information but not the whole unicast burst stream.\n   o
        \ 512:  This is used when the RAMS request is denied due to a policy\n      for
        the requested multicast stream, the RTP_Rx, or this particular\n      BRS.\n"
      title: 7.3.1.  Response Code Definitions
    title: 7.3.  RAMS Information
  - contents:
    - "7.4.  RAMS Termination\n   The RAMS Termination (RAMS-T) message is identified
      by SFMT=3.\n   The RAMS Termination is used to assist the BRS in determining
      when to\n   stop the burst.  A separate RAMS-T message is sent in the unicast\n
      \  burst RTP session by the RTP_Rx for each primary multicast stream\n   that
      has been served by the BRS.  Each of these RAMS-T message's\n   media sender
      SSRC field SHALL BE populated with the SSRC of the media\n   stream to be terminated.
      \ If the media sender SSRC populated in the\n   RAMS-T message does not match
      the SSRC of the burst served by the\n   BRS, BRS SHALL ignore the RAMS-T message.\n
      \  If the RTP_Rx wants the BRS to stop a burst prematurely, it sends a\n   RAMS-T
      message as described below.  Upon receiving this message, the\n   BRS stops
      the respective burst immediately.  If the RTP_Rx wants the\n   BRS to terminate
      all of the bursts, it needs to send all of the\n   respective RAMS-T messages
      in a single compound RTCP packet.\n   The default behavior for the RTP_Rx is
      to send a RAMS-T message\n   immediately after it joined the multicast session
      and started\n   receiving multicast packets.  In that case, the RTP_Rx includes
      the\n   sequence number of the first RTP packet received in the primary\n   multicast
      stream in the RAMS-T message.  With this information, the\n   BRS can decide
      when to terminate the unicast burst.\n   The FCI field MUST contain only one
      RAMS Termination.  The FCI field\n   has the structure depicted in Figure 9.\n
      \  The semantics of the RAMS-T message is independent of the payload\n   type
      carried in the primary multicast RTP session.\n      0                   1                   2
      \                  3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    |    SFMT=3     |                    Reserved                   |\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \    :      Optional TLV-encoded Fields (and Padding, if needed)     :\n     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \       Figure 9: FCI field syntax for the RAMS Termination message\n   o  Extended
      RTP Seqnum of First Multicast Packet (32 bits):  Optional\n      TLV element
      that specifies the extended RTP sequence number of the\n      first packet received
      from the SSM session for a particular\n      primary multicast stream.  The
      low 16 bits contain the sequence\n      number of the first packet received
      from the SSM session, and the\n      most significant 16 bits extend that sequence
      number with the\n      corresponding count of sequence number cycles, which
      can be\n      maintained according to the algorithm in Appendix A.1 of\n      [RFC3550].\n
      \     Type:  61\n"
    title: 7.4.  RAMS Termination
  title: 7.  Encoding of the Signaling Protocol in RTCP
- contents:
  - '8.  SDP Signaling

    '
  - contents:
    - "8.1.  Definitions\n   The syntax of the 'rtcp-fb' attribute has been defined
      in [RFC4585].\n   Here we add the following syntax to the 'rtcp-fb' attribute
      (the\n   feedback type and optional parameters are all case sensitive):\n   (In
      the following ABNF [RFC5234], rtcp-fb-nack-param is used as\n   defined in [RFC4585].)\n
      \        rtcp-fb-nack-param =/ SP \"rai\"\n   The following parameter is defined
      in this document for use with\n   'nack':\n   o  'rai' stands for Rapid Acquisition
      Indication and indicates the\n      use of RAMS messages as defined in Section
      7.\n   This document also defines a new media-level SDP attribute\n   ('rams-updates')
      that indicates whether or not the BRS supports\n   updated request messages.
      \ This attribute is used in a declarative\n   manner and no Offer/Answer Model
      behavior is specified.  If the BRS\n   supports updated request messages and
      this attribute is included in\n   the SDP description, the RTP_Rx can send updated
      requests.  The BRS\n   might or might not be able to accept value changes in
      every field in\n   an updated RAMS-R message.  However, if the 'rams-updates'
      attribute\n   is not included in the SDP description, the RTP_Rx SHALL NOT send\n
      \  updated requests.  The RTP_Rx MAY still repeat its initial request\n   without
      changes, though.\n"
    title: 8.1.  Definitions
  - contents:
    - "8.2.  Requirements\n   The use of SDP to describe the RAMS entities normatively
      requires\n   support for:\n   o  The SDP grouping framework and flow identification
      (FID) semantics\n      [RFC5888]\n   o  The RTP/AVPF profile [RFC4585]\n   o
      \ The RTP retransmission payload format [RFC4588]\n   o  The RTCP extensions
      for SSM sessions with unicast feedback\n      [RFC5760]\n   o  The 'multicast-rtcp'
      attribute [RFC6128]\n   o  Multiplexing RTP and RTCP on a single port on both
      endpoints in\n      the unicast session [RFC5761]\n   o  The 'portmapping-req'
      attribute [RFC6284]\n   Support for the source-specific media attributes [RFC5576]
      can also\n   be needed when the 'ssrc' attribute is to be used for the media\n
      \  descriptions.\n"
    title: 8.2.  Requirements
  - contents:
    - "8.3.  Example and Discussion\n   This section provides a declarative SDP [RFC4566]
      example (for the\n   RTP_Rx side) for enabling rapid acquisition of multicast
      RTP\n   sessions.\n        v=0\n        o=ali 1122334455 1122334466 IN IP4 rams.example.com\n
      \       s=Rapid Acquisition Example\n        t=0 0\n        a=group:FID 1 2\n
      \       a=rtcp-unicast:rsi\n        m=video 41000 RTP/AVPF 98\n        i=Primary
      Multicast Stream\n        c=IN IP4 233.252.0.2/255\n        a=source-filter:incl
      IN IP4 233.252.0.2 198.51.100.1\n        a=rtpmap:98 MP2T/90000\n        a=multicast-rtcp:42000\n
      \       a=rtcp:43000 IN IP4 192.0.2.1\n        a=rtcp-fb:98 nack\n        a=rtcp-fb:98
      nack rai\n        a=ssrc:123321 cname:iptv-ch32@rams.example.com\n        a=rams-updates\n
      \       a=portmapping-req:54000 IN IP4 192.0.2.1\n        a=mid:1\n        m=video
      51000 RTP/AVPF 99\n        i=Unicast Retransmission Stream (Ret. and Rapid Acq.
      Support)\n        c=IN IP4 192.0.2.1\n        a=sendonly\n        a=rtpmap:99
      rtx/90000\n        a=rtcp-mux\n        a=rtcp:51500\n        a=fmtp:99 apt=98;rtx-time=5000\n
      \       a=portmapping-req:55000\n        a=mid:2\n         Figure 10: Example
      SDP for a Single-Channel RAMS Scenario\n   In this example SDP description,
      we have a primary multicast (source)\n   stream and a unicast retransmission
      stream.  The source stream is\n   multicast from a distribution source (with
      a source IP address of\n   198.51.100.1) to the multicast destination address
      of 233.252.0.2 and\n   port 41000.  The corresponding RTCP traffic is multicast
      to the same\n   multicast destination address at port 42000.  Here, we are assuming\n
      \  that the multicast RTP and RTCP ports are carefully chosen so that\n   different
      RTP and RTCP streams do not collide with each other.\n   The feedback target
      (FT_Ap) residing on the RS (with an address of\n   192.0.2.1) at port 43000
      is declared with the \"a=rtcp\" line\n   [RFC3605].  The support for the conventional
      retransmission is\n   indicated through the \"a=rtcp-fb:98 nack\" line.  The
      RTP receiver(s)\n   can report missing packets on the source stream to the feedback\n
      \  target and request retransmissions.  The SDP above includes the\n   \"a=sendonly\"
      line for the media description of the retransmission\n   stream since the retransmissions
      are sent in only one direction.\n   The support for rapid acquisition is indicated
      through the \"a=rtcp-\n   fb:98 nack rai\" line.  The parameter 'rtx-time' applies
      to both the\n   conventional retransmissions and rapid acquisition.  However,
      when\n   rapid acquisition is enabled, the standard definition for the\n   parameter
      'rtx-time' given in [RFC4588] is not followed.  Instead,\n   when rapid acquisition
      support is enabled, 'rtx-time' specifies the\n   time in milliseconds that the
      BRS keeps an RTP packet in its cache\n   available for retransmission (measured
      from the time the packet was\n   received by the BRS, not from the time indicated
      in the packet\n   timestamp).\n   Once an RTP_Rx has acquired an SDP description,
      it can ask for rapid\n   acquisition before it joins a primary multicast RTP
      session.  To do\n   so, it sends a RAMS-R message to the feedback target of
      that primary\n   multicast RTP session.  If the FT_Ap is associated with only
      one RTP\n   stream, the RTP_Rx does not need to learn the SSRC of that stream
      via\n   an out-of-band method.  If the BRS accepts the rapid acquisition\n   request,
      it will send a RAMS-I message with the correct SSRC\n   identifier.  If the
      FT_Ap is associated with a multi-stream RTP\n   session and the RTP_Rx is willing
      to request rapid acquisition for\n   the entire session, the RTP_Rx again does
      not need to learn the SSRCs\n   via an out-of-band method.  However, if the
      RTP_Rx intends to request\n   a particular subset of the primary multicast streams,
      it must learn\n   their SSRC identifiers and list them in the RAMS-R message.
      \ Since\n   this RTP_Rx has not yet received any RTP packets for the primary\n
      \  multicast stream(s), the RTP_Rx must in this case learn the SSRC\n   value(s)
      from the 'ssrc' attribute of the media description\n   [RFC5576].  In addition
      to the SSRC value, the 'cname' source\n   attribute must also be present in
      the SDP description [RFC5576].\n   Listing the SSRC values for the primary multicast
      streams in the SDP\n   file does not create a problem in SSM sessions when an
      SSRC collision\n   occurs.  This is because in SSM sessions, an RTP_Rx that
      observed an\n   SSRC collision with a media sender must change its own SSRC
      [RFC5760]\n   by following the rules defined in [RFC3550].\n   A feedback target
      that receives a RAMS-R message becomes aware that\n   the RTP_Rx wants to rapidly
      catch up with a primary multicast RTP\n   session.  If the necessary conditions
      are satisfied (as outlined in\n   Section 7 of [RFC4585]) and available resources
      exist, the BRS can\n   react to the RAMS-R message by sending any transport-layer
      (and\n   optional payload-specific, when allowed) feedback message(s) and\n
      \  starting the unicast burst.\n   In this section, we considered the simplest
      scenario where the\n   primary multicast RTP session carried only one stream
      and the RTP_Rx\n   wanted to rapidly acquire this stream only.  Best practices
      for\n   scenarios where the primary multicast RTP session carries two or more\n
      \  streams or the RTP_Rx wants to acquire one or more streams from\n   multiple
      primary multicast RTP sessions at the same time are\n   presented in [RAMS-SCENARIOS].\n"
    title: 8.3.  Example and Discussion
  title: 8.  SDP Signaling
- contents:
  - "9.  NAT Considerations\n   For a variety of reasons, one or more Network Address
    Port\n   Translators (NAPT, hereafter simply called NAT) can exist between the\n
    \  RTP_Rx and RS.  NATs have a variety of operating characteristics for\n   UDP
    traffic [RFC4787].  For a NAT to permit traffic from the BRS to\n   arrive at
    the RTP_Rx, the NAT(s) must first either:\n   a.  See UDP (or DCCP) traffic sent
    from the RTP_Rx (which is on the\n       'inside' of the NAT) to the BRS (which
    is on the 'outside' of the\n       NAT).  This traffic has the same transport
    address as the\n       subsequent response traffic, or\n   b.  Be configured to
    forward certain ports (e.g., using HTML\n       configuration or Universal Plug
    and Play (UPnP) Internet Gateway\n       Device (IGD) [UPnP-IGD]).  Details of
    this are out of the scope\n       of this document.\n   For both (a) and (b),
    the RTP_Rx is responsible for maintaining the\n   NAT's state if it wants to receive
    traffic from the BRS on that port.\n   For (a), the RTP_Rx MUST send UDP traffic
    to keep the NAT binding\n   alive, at least every 30 seconds [RFC4787].  While
    (a) is more like\n   an automatic/dynamic configuration, (b) is more like a manual/static\n
    \  configuration.\n   When the RTP_Rx sends a request (RAMS-R) message to the
    FT as unicast\n   feedback in the primary multicast RTP session and the request
    is\n   received by the FT, a new unicast burst RTP session will be\n   established
    between the BRS and RTP_Rx.\n   While the FT and BRS ports on the RS are already
    signaled via out-of-\n   band means (e.g., SDP), the RTP_Rx needs to convey the
    RTP and RTCP\n   ports it wants to use on its side for the new session.  Since
    there\n   are two RTP sessions (one multicast and one unicast) involved during\n
    \  this process and one of them is established upon a feedback message\n   sent
    in the other one, this requires an explicit port mapping method.\n   Applications
    using RAMS MUST support the method presented in\n   [RFC6284] both on the RS and
    RTP_Rx side to allow RTP receivers to\n   use their desired ports and to support
    RAMS behind NAT devices.  The\n   port mapping message exchange needs to take
    place whenever the RTP_Rx\n   intends to make use of the RAMS protocol for rapidly
    acquiring a\n   specific multicast RTP session prior to joining the associated
    SSM\n   session.\n"
  title: 9.  NAT Considerations
- contents:
  - "10.  Security Considerations\n   Applications that are using RAMS make heavy
    use of the unicast\n   feedback mechanism described in [RFC5760], the payload
    format defined\n   in [RFC4588], and the port mapping solution specified in [RFC6284].\n
    \  Thus, these applications are subject to the general security\n   considerations
    discussed in those documents.  In particular, the\n   threats and risks discussed
    in [RFC5760] need to be considered\n   carefully.  In this section, we give an
    overview of the guidelines\n   and suggestions described in these specifications
    from a RAMS\n   perspective.  We also discuss the security considerations that\n
    \  explicitly apply to applications using RAMS.\n   First of all, much of the
    session description information is\n   available in the SDP descriptions that
    are distributed to the media\n   senders, retransmission servers, and RTP receivers.
    \ Adequate\n   security measures are RECOMMENDED to ensure the integrity and\n
    \  authenticity of the SDP descriptions so that transport addresses of\n   the
    media senders, distribution sources, feedback targets, and other\n   session-specific
    information can be protected.  See [RFC4566] for\n   details.\n   Compared to
    an RTCP NACK message that triggers one or more\n   retransmissions, a RAMS Request
    (RAMS-R) message can trigger a new\n   burst stream to be sent by the retransmission
    server.  Depending on\n   the application-specific requirements and conditions
    existing at the\n   time of the RAMS-R reception by the retransmission server,
    the\n   resulting burst stream can potentially contain a large number of\n   retransmission
    packets.  Since these packets are sent faster than the\n   nominal rate, RAMS
    consumes more resources on the retransmission\n   servers, RTP receivers, and
    the network.  In particular, this can\n   make denial-of-service (DoS) attacks
    more intense and hence more\n   harmful than attacks that target ordinary retransmission
    sessions.\n   As RAMS messages are sent as RTCP messages, counter-measures SHOULD\n
    \  be taken to prevent tampered or spoofed RTCP packets, following the\n   suggestions
    given in [RFC4588].  Tampered RAMS-R messages can trigger\n   inappropriate burst
    streams or alter the existing burst streams in an\n   inappropriate way.  For
    example, if the Max Receive Bitrate field is\n   altered by a tampered RAMS-R
    message, the updated burst can overflow\n   the buffer at the receiver side or,
    oppositely, can slow down the\n   burst to the point that it becomes useless.
    \ Tampered RAMS\n   Termination (RAMS-T) messages can terminate valid burst streams\n
    \  prematurely resulting in gaps in the received RTP packets.  RAMS\n   Information
    (RAMS-I) messages contain fields that are critical for a\n   successful rapid
    acquisition.  Any tampered information in the RAMS-I\n   message can easily cause
    an RTP receiver to make wrong decisions.\n   Consequently, the RAMS operation
    can fail.\n   RTCP BYE messages are similar to RAMS-T messages in the sense that\n
    \  they can be used to stop an existing burst.  The CNAME of an RTP\n   receiver
    is used to bind the RTCP BYE message to an existing burst.\n   Thus, one should
    be careful if the CNAMEs are reasonably easy to\n   guess and off-path attacks
    can be performed.  Also note that the\n   CNAMEs might be redistributed to all
    participants in the multicast\n   group (as in ASM or the simple feedback model
    of [RFC5760]).\n   The retransmission server has to consider if values indicated
    in a\n   RAMS-R message are reasonable.  For example, a request demanding a\n
    \  large value of many seconds in the Min RAMS Buffer Fill Requirement\n   element
    should, unless special use cases exist, likely be rejected\n   since it is likely
    to be an attempt to prolong a DoS attack on the\n   retransmission server, RTP
    receiver, and/or the network.  The Max\n   Receive Bitrate could also be set to
    a very large value to try to get\n   the retransmission server to cause massive
    congestion by bursting at\n   a bitrate that will not be supported by the network.
    \ An RTP_Rx\n   should also consider if the values for the Earliest Multicast
    Join\n   Time and Burst Duration indicated by the retransmission server in a\n
    \  RAMS-I message are reasonable.  For example, if the burst packets\n   stop
    arriving and the join time is still significantly far into the\n   future, this
    could be a sign of a man-in-the-middle attack where the\n   RAMS-I message has
    been manipulated by an attacker.\n   A basic mitigation against DoS attacks introduced
    by an attacker\n   injecting tampered RAMS messages is source address validation\n
    \  [RFC2827].  Also, most of the DoS attacks can be prevented by the\n   integrity
    and authenticity checks enabled by Secure RTP (SRTP)\n   [RFC3711].  However,
    an attack can still be started by legitimate\n   endpoints that send several valid
    RAMS-R messages to a particular\n   feedback target in a synchronized fashion
    and in a very short amount\n   of time.  Since a RAMS operation can temporarily
    consume a large\n   amount of resources, a series of the RAMS-R messages can temporarily\n
    \  overload the retransmission server.  In these circumstances, the\n   retransmission
    server can, for example, reject incoming RAMS requests\n   until its resources
    become available again.  One means to ameliorate\n   this threat is to apply a
    per-endpoint policing mechanism on the\n   incoming RAMS requests.  A reasonable
    policing mechanism should\n   consider application-specific requirements and minimize
    false\n   negatives.\n   In addition to the DoS attacks, man-in-the-middle and
    replay attacks\n   will also be harmful.  RAMS-R messages do not carry any information\n
    \  that allows the retransmission server to detect duplication or replay\n   attacks.
    \ Thus, the possibility of a replay attack using a captured\n   valid RAMS-R message
    exists unless a mitigation method such as Secure\n   RTCP (SRTCP) is used.  Similarly,
    RAMS-T messages can be replayed.\n   The RAMS-I has a sequence number that makes
    replay attacks less\n   likely but not impossible.  Man-in-the-middle attacks
    that are\n   capable of capturing, injecting, or modifying the RAMS messages can\n
    \  easily accomplish the attacks described above.  Thus, cryptographic\n   integrity
    and authentication is the only reliable protection.  To\n   protect the RTCP messages
    from man-in-the-middle and replay attacks,\n   the RTP receivers and retransmission
    server SHOULD perform a Datagram\n   Transport Layer Security (DTLS)-SRTP handshake
    [RFC5764] over the\n   RTCP channel.  Because there is no integrity-protected
    signaling\n   channel between an RTP receiver and the retransmission server, the\n
    \  retransmission server MUST maintain a list of certificates owned by\n   legitimate
    RTP receivers, or their certificates MUST be signed by a\n   trusted Certificate
    Authority.  Once the DTLS-SRTP security is\n   established, non-SRTCP-protected
    messages received from a particular\n   RTP receiver are ignored by the retransmission
    server.  To reduce the\n   impact of DTLS-SRTP overhead when communicating with
    different\n   feedback targets on the same retransmission server, it is RECOMMENDED\n
    \  that RTP receivers and the retransmission server both support TLS\n   Session
    Resumption without Server-side State [RFC5077].  To help\n   scale SRTP to handle
    many RTP receivers asking for retransmissions of\n   identical data, implementors
    may consider using the same SRTP key for\n   SRTP data sent to the receivers [SRTP-EKT]
    and be aware that such key\n   sharing allows those receivers to impersonate the
    sender.  Thus,\n   source address validation remains important.\n   [RFC4588]
    RECOMMENDS that cryptography mechanisms be used for the\n   retransmission payload
    format to provide protection against known\n   plain-text attacks.  As discussed
    in [RFC4588], the retransmission\n   payload format sets the timestamp field in
    the RTP header to the\n   media timestamp of the original packet, and this does
    not compromise\n   the confidentiality.  Furthermore, if cryptography is used
    to provide\n   security services on the original stream, then the same services,\n
    \  with equivalent cryptographic strength, MUST be provided on the\n   retransmission
    stream per [RFC4588].\n   Finally, a retransmission server that has become subverted
    by an\n   attacker is almost impossible to protect against as such a server can\n
    \  perform a large number of different actions to deny service to\n   receivers.\n"
  title: 10.  Security Considerations
- contents:
  - "11.  IANA Considerations\n   The following contact information is used for all
    registrations in\n   this document:\n   Ali Begen\n   abegen@cisco.com\n   Note
    that the \"RAMS\" (value 2) in the Multicast Acquisition Method\n   Registry refers
    to the method described in Section 6 of this\n   document.\n"
  - contents:
    - "11.1.  Registration of SDP Attributes\n   This document registers a new attribute
      name in SDP.\n        SDP Attribute (\"att-field\"):\n        Attribute name:
      \    rams-updates\n        Long form:          Support for Updated RAMS Request
      Messages\n        Type of name:       att-field\n        Type of attribute:
      \ Media level\n        Subject to charset: No\n        Purpose:            See
      this document\n        Reference:          [RFC6285]\n        Values:             None\n"
    title: 11.1.  Registration of SDP Attributes
  - contents:
    - "11.2.  Registration of SDP Attribute Values\n   This document registers a new
      value for the 'nack' attribute to be\n   used with the 'rtcp-fb' attribute in
      SDP.  For more information about\n   the 'rtcp-fb' attribute, refer to Section
      4.2 of [RFC4585].\n        Value name:     rai\n        Long name:      Rapid
      Acquisition Indication\n        Usable with:    nack\n        Reference:      [RFC6285]\n"
    title: 11.2.  Registration of SDP Attribute Values
  - contents:
    - "11.3.  Registration of FMT Values\n   Within the RTPFB range, the following
      format (FMT) value is\n   registered:\n        Name:           RAMS\n        Long
      name:      Rapid Acquisition of Multicast Sessions\n        Value:          6\n
      \       Reference:      [RFC6285]\n"
    title: 11.3.  Registration of FMT Values
  - contents:
    - "11.4.  SFMT Values for RAMS Messages Registry\n   This document creates a new
      sub-registry for the sub-feedback message\n   type (SFMT) values to be used
      with the FMT value registered for RAMS\n   messages.  The registry is called
      the SFMT Values for RAMS Messages\n   Registry.  This registry is managed by
      the IANA according to the\n   Specification Required policy of [RFC5226].\n
      \  The length of the SFMT field in the RAMS messages is a single octet,\n   allowing
      256 values.  The registry is initialized with the following\n   entries:\n   Value
      Name                                               Reference\n   ----- --------------------------------------------------
      ------------\n   0     Reserved                                           [RFC6285]\n
      \  1     RAMS Request                                       [RFC6285]\n   2
      \    RAMS Information                                   [RFC6285]\n   3     RAMS
      Termination                                   [RFC6285]\n   4-254 Unassigned
      - Specification Required\n   255   Reserved                                           [RFC6285]\n
      \  The SFMT values 0 and 255 are reserved for future use.\n   Any registration
      for an unassigned SFMT value needs to contain the\n   following information:\n
      \  o  Contact information of the one doing the registration, including\n      at
      least name, address, and email.\n   o  A detailed description of what the new
      SFMT represents and how it\n      shall be interpreted.\n   New RAMS functionality
      is intended to be introduced by using the\n   extension mechanism within the
      existing RAMS message types not by\n   introducing new message types unless
      it is absolutely necessary.\n"
    title: 11.4.  SFMT Values for RAMS Messages Registry
  - contents:
    - "11.5.  RAMS TLV Space Registry\n   This document creates a new IANA TLV space
      registry for the RAMS\n   extensions.  The registry is called the RAMS TLV Space
      Registry.\n   This registry is managed by the IANA according to the Specification\n
      \  Required policy of [RFC5226].\n   The length of the Type field in the TLV
      elements is a single octet,\n   allowing 256 values.  The Type values 0 and
      255 are reserved for\n   future use.  The Type values between (and including)
      128 and 254 are\n   reserved for private extensions.\n   The registry is initialized
      with the following entries:\n   Type    Description                                     Reference\n
      \  ----    ----------------------------------------------- -------------\n   0
      \      Reserved                                        [RFC6285]\n   1       Requested
      Media Sender SSRC(s)                  [RFC6285]\n   2       Min RAMS Buffer
      Fill Requirement                [RFC6285]\n   3       Max RAMS Buffer Fill Requirement
      \               [RFC6285]\n   4       Max Receive Bitrate                             [RFC6285]\n
      \  5       Request for Preamble Only                       [RFC6285]\n   6       Supported
      Enterprise Number(s)                  [RFC6285]\n   7-30    Unassigned - Specification
      Required\n   31      Media Sender SSRC                               [RFC6285]\n
      \  32      RTP Seqnum of the First Packet                  [RFC6285]\n   33
      \     Earliest Multicast Join Time                    [RFC6285]\n   34      Burst
      Duration                                  [RFC6285]\n   35      Max Transmit
      Bitrate                            [RFC6285]\n   36-60   Unassigned - Specification
      Required\n   61      Extended RTP Seqnum of First Multicast Packet   [RFC6285]\n
      \  62-127  Unassigned - Specification Required\n   128-254 Reserved for Private
      Use\n   255     Reserved                                        [RFC6285]\n
      \  Any registration for an unassigned Type value needs to contain the\n   following
      information:\n   o  Contact information of the one doing the registration, including\n
      \     at least name, address, and email.\n   o  A detailed description of what
      the new TLV element represents and\n      how it shall be interpreted.\n"
    title: 11.5.  RAMS TLV Space Registry
  - contents:
    - "11.6.  RAMS Response Code Space Registry\n   This document creates a new IANA
      TLV space registry for the RAMS\n   response codes.  The registry is called
      the RAMS Response Code Space\n   Registry.  This registry is managed by the
      IANA according to the\n   Specification Required policy of [RFC5226].\n   The
      length of the Response field is two octets, allowing 65536 codes.\n   However,
      in this document, the response codes have been classified\n   and registered
      following an HTTP-style code numbering.  New response\n   codes should be classified
      following the guidelines below:\n   Code Level Purpose\n   ---------- ---------------\n
      \  1xx        Informational\n   2xx        Success\n   3xx        Redirection\n
      \  4xx        RTP Receiver (RTP_Rx) Error\n   5xx        Burst/Retransmission
      Source (BRS) Error\n   The Response code 65535 is reserved for future use.\n
      \  The registry is initialized with the following entries:\n   Code  Description
      \                                       Reference\n   ----- --------------------------------------------------
      ------------\n   0     A private response code is included in the message [RFC6285]\n
      \  100   Parameter update for RAMS session                  [RFC6285]\n   200
      \  RAMS request has been accepted                     [RFC6285]\n   201   Unicast
      burst has been completed                   [RFC6285]\n   400   Invalid RAMS-R
      message syntax                      [RFC6285]\n   401   Invalid min buffer requirement
      in RAMS-R message   [RFC6285]\n   402   Invalid max buffer requirement in RAMS-R
      message   [RFC6285]\n   403   Insufficient max bitrate requirement in RAMS-R\n
      \        message                                            [RFC6285]\n   404
      \  Invalid RAMS-T message syntax                      [RFC6285]\n   500   An
      unspecified BRS internal error has occurred     [RFC6285]\n   501   BRS has
      insufficient bandwidth to start RAMS\n         session                                            [RFC6285]\n
      \  502   Burst is terminated due to network congestion      [RFC6285]\n   503
      \  BRS has insufficient CPU cycles to start RAMS\n         session                                            [RFC6285]\n
      \  504   RAMS functionality is not available on BRS         [RFC6285]\n   505
      \  RAMS functionality is not available for RTP_Rx     [RFC6285]\n   506   RAMS
      functionality is not available for\n         the requested multicast stream
      \                    [RFC6285]\n   507   BRS has no valid starting point available
      for\n         the requested multicast stream                     [RFC6285]\n
      \  508   BRS has no reference information available for\n         the requested
      multicast stream                     [RFC6285]\n   509   BRS has no RTP stream
      matching the requested SSRC  [RFC6285]\n   510   RAMS request to acquire the
      entire session\n         has been denied                                    [RFC6285]\n
      \  511   Only the preamble information is sent              [RFC6285]\n   512
      \  RAMS request has been denied due to a policy       [RFC6285]\n   Any registration
      for an unassigned Response code needs to contain the\n   following information:\n
      \  o  Contact information of the one doing the registration, including\n      at
      least name, address, and email.\n   o  A detailed description of what the new
      Response code describes and\n      how it shall be interpreted.\n"
    title: 11.6.  RAMS Response Code Space Registry
  title: 11.  IANA Considerations
- contents:
  - "12.  Contributors\n   Dave Oran, Magnus Westerlund, and Colin Perkins have contributed\n
    \  significantly to this specification by providing text and solutions\n   to
    some of the issues raised during the development of this\n   specification.\n"
  title: 12.  Contributors
- contents:
  - "13.  Acknowledgments\n   The following individuals reviewed earlier versions
    of this\n   specification and provided helpful comments:  Joerg Ott, Roni Even,\n
    \  Dan Wing, Tony Faustini, Peilin Yang, Jeff Goldberg, Muriel\n   Deschanel,
    Orit Levin, Guy Hirson, Tom Taylor, Xavier Marjou, Ye-Kui\n   Wang, Zixuan Zou,
    Ingemar Johansson, Haibin Song, Ning Zong, Jonathan\n   Lennox, Jose Rey, Sean
    Sheedy, and Keith Drage.\n"
  title: 13.  Acknowledgments
- contents:
  - '14.  References

    '
  - contents:
    - "14.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC2827]  Ferguson, P. and D. Senie, \"Network Ingress Filtering:\n
      \             Defeating Denial of Service Attacks which employ IP Source\n              Address
      Spoofing\", BCP 38, RFC 2827, May 2000.\n   [RFC3376]  Cain, B., Deering, S.,
      Kouvelas, I., Fenner, B., and A.\n              Thyagarajan, \"Internet Group
      Management Protocol, Version\n              3\", RFC 3376, October 2002.\n   [RFC3550]
      \ Schulzrinne, H., Casner, S., Frederick, R., and V.\n              Jacobson,
      \"RTP: A Transport Protocol for Real-Time\n              Applications\", STD
      64, RFC 3550, July 2003.\n   [RFC3605]  Huitema, C., \"Real Time Control Protocol
      (RTCP) attribute\n              in Session Description Protocol (SDP)\", RFC
      3605,\n              October 2003.\n   [RFC3711]  Baugher, M., McGrew, D., Naslund,
      M., Carrara, E., and K.\n              Norrman, \"The Secure Real-time Transport
      Protocol (SRTP)\",\n              RFC 3711, March 2004.\n   [RFC3810]  Vida,
      R. and L. Costa, \"Multicast Listener Discovery\n              Version 2 (MLDv2)
      for IPv6\", RFC 3810, June 2004.\n   [RFC4566]  Handley, M., Jacobson, V., and
      C. Perkins, \"SDP: Session\n              Description Protocol\", RFC 4566,
      July 2006.\n   [RFC4585]  Ott, J., Wenger, S., Sato, N., Burmeister, C., and
      J. Rey,\n              \"Extended RTP Profile for Real-time Transport Control\n
      \             Protocol (RTCP)-Based Feedback (RTP/AVPF)\", RFC 4585,\n              July
      2006.\n   [RFC4588]  Rey, J., Leon, D., Miyazaki, A., Varsa, V., and R.\n              Hakenberg,
      \"RTP Retransmission Payload Format\", RFC 4588,\n              July 2006.\n
      \  [RFC4604]  Holbrook, H., Cain, B., and B. Haberman, \"Using Internet\n              Group
      Management Protocol Version 3 (IGMPv3) and Multicast\n              Listener
      Discovery Protocol Version 2 (MLDv2) for Source-\n              Specific Multicast\",
      RFC 4604, August 2006.\n   [RFC5077]  Salowey, J., Zhou, H., Eronen, P., and
      H. Tschofenig,\n              \"Transport Layer Security (TLS) Session Resumption
      without\n              Server-Side State\", RFC 5077, January 2008.\n   [RFC5234]
      \ Crocker, D. and P. Overell, \"Augmented BNF for Syntax\n              Specifications:
      ABNF\", STD 68, RFC 5234, January 2008.\n   [RFC5285]  Singer, D. and H. Desineni,
      \"A General Mechanism for RTP\n              Header Extensions\", RFC 5285,
      July 2008.\n   [RFC5506]  Johansson, I. and M. Westerlund, \"Support for Reduced-Size\n
      \             Real-Time Transport Control Protocol (RTCP): Opportunities\n              and
      Consequences\", RFC 5506, April 2009.\n   [RFC5576]  Lennox, J., Ott, J., and
      T. Schierl, \"Source-Specific\n              Media Attributes in the Session
      Description Protocol\n              (SDP)\", RFC 5576, June 2009.\n   [RFC5760]
      \ Ott, J., Chesterfield, J., and E. Schooler, \"RTP Control\n              Protocol
      (RTCP) Extensions for Single-Source Multicast\n              Sessions with Unicast
      Feedback\", RFC 5760, February 2010.\n   [RFC5761]  Perkins, C. and M. Westerlund,
      \"Multiplexing RTP Data and\n              Control Packets on a Single Port\",
      RFC 5761, April 2010.\n   [RFC5764]  McGrew, D. and E. Rescorla, \"Datagram
      Transport Layer\n              Security (DTLS) Extension to Establish Keys for
      the Secure\n              Real-time Transport Protocol (SRTP)\", RFC 5764, May
      2010.\n   [RFC5888]  Camarillo, G. and H. Schulzrinne, \"The Session Description\n
      \             Protocol (SDP) Grouping Framework\", RFC 5888, June 2010.\n   [RFC6051]
      \ Perkins, C. and T. Schierl, \"Rapid Synchronisation of RTP\n              Flows\",
      RFC 6051, November 2010.\n   [RFC6128]  Begen, A., \"RTP Control Protocol (RTCP)
      Port for Source-\n              Specific Multicast (SSM) Sessions\", RFC 6128,\n
      \             February 2011.\n   [RFC6284]  Begen, A., Wing, D., and T. Van
      Caenegem, \"Port Mapping\n              Between Unicast and Multicast RTP Sessions\",
      RFC 6284,\n              June 2011.\n"
    title: 14.1.  Normative References
  - contents:
    - "14.2.  Informative References\n   [ECN-FOR-RTP]\n              Westerlund,
      M., Johansson, I., Perkins, C., O'Hanlon, P.,\n              and K. Carlberg,
      \"Explicit Congestion Notification (ECN)\n              for RTP over UDP\",
      Work in Progress, May 2011.\n   [IC2009]   Begen, A., Glazebrook, N., and W.
      Ver Steeg, \"Reducing\n              Channel Change Times in IPTV with Real-Time
      Transport\n              Protocol (IEEE Internet Computing)\", May 2009.\n   [MULTICAST-ACQ]\n
      \             Begen, A. and E. Friedrich, \"Multicast Acquisition Report\n              Block
      Type for RTP Control Protocol (RTCP) Extended\n              Reports (XRs)\",
      Work in Progress, May 2011.\n   [RAMS-SCENARIOS]\n              Begen, A., \"Considerations
      and Guidelines for Deploying\n              the Rapid Acquisition of Multicast
      Sessions (RAMS)\n              Method\", Work in Progress, June 2011.\n   [RFC0768]
      \ Postel, J., \"User Datagram Protocol\", STD 6, RFC 768,\n              August
      1980.\n   [RFC4787]  Audet, F. and C. Jennings, \"Network Address Translation\n
      \             (NAT) Behavioral Requirements for Unicast UDP\", BCP 127,\n              RFC
      4787, January 2007.\n   [RFC5226]  Narten, T. and H. Alvestrand, \"Guidelines
      for Writing an\n              IANA Considerations Section in RFCs\", BCP 26,
      RFC 5226,\n              May 2008.\n   [RFC5762]  Perkins, C., \"RTP and the
      Datagram Congestion Control\n              Protocol (DCCP)\", RFC 5762, April
      2010.\n   [RFC6015]  Begen, A., \"RTP Payload Format for 1-D Interleaved Parity\n
      \             Forward Error Correction (FEC)\", RFC 6015, October 2010.\n   [RFC6222]
      \ Begen, A., Perkins, C., and D. Wing, \"Guidelines for\n              Choosing
      RTP Control Protocol (RTCP) Canonical Names\n              (CNAMEs)\", RFC 6222,
      April 2011.\n   [SRTP-EKT] McGrew, D., Andreasen, F., Wing, D., and K. Fischer,\n
      \             \"Encrypted Key Transport for Secure RTP\", Work\n              in
      Progress, March 2011.\n   [UPnP-IGD] UPnP Forum, \"Universal Plug and Play (UPnP)
      Internet\n              Gateway Device (IGD)\", December 2010.\n"
    title: 14.2.  Informative References
  title: 14.  References
- contents:
  - "Authors' Addresses\n   Bill Ver Steeg\n   Cisco\n   5030 Sugarloaf Parkway\n
    \  Lawrenceville, GA  30044\n   USA\n   EMail:  billvs@cisco.com\n   Ali Begen\n
    \  Cisco\n   181 Bay Street\n   Toronto, ON  M5J 2T3\n   Canada\n   EMail:  abegen@cisco.com\n
    \  Tom Van Caenegem\n   Alcatel-Lucent\n   Copernicuslaan 50\n   Antwerpen  2018\n
    \  Belgium\n   EMail:  Tom.Van_Caenegem@alcatel-lucent.be\n   Zeev Vax\n   Magnum
    Semiconductor, Inc.\n   591 Yosemite Drive\n   Milpitas, CA  95035\n   USA\n   EMail:
    \ zeev.vax@magnumsemi.com\n"
  title: Authors' Addresses
