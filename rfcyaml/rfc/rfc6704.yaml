- contents:
  - '                    Forcerenew Nonce Authentication

    '
  title: __initial_text__
- contents:
  - "Abstract\n   Dynamic Host Configuration Protocol (DHCP) FORCERENEW allows for
    the\n   reconfiguration of a single host by forcing the DHCP client into a\n   Renew
    state on a trigger from the DHCP server.  In the Forcerenew\n   Nonce Authentication
    protocol, the server sends a nonce to the client\n   in the initial DHCP ACK that
    is used for subsequent validation of a\n   FORCERENEW message.  This document
    updates RFC 3203.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc6704.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2012 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \  2. Requirements Language ...........................................3\n   3.
    Message Authentication ..........................................3\n      3.1.
    Forcerenew Nonce Authentication ............................3\n           3.1.1.
    Forcerenew Nonce Protocol Capability Option .........4\n           3.1.2. Forcerenew
    Nonce Authentication Protocol ............6\n           3.1.3. Server Considerations
    for Forcerenew Nonce\n                  Authentication ......................................8\n
    \          3.1.4. Client Considerations for Forcerenew Nonce\n                  Authentication
    ......................................9\n   4. IANA Considerations ............................................10\n
    \  5. Security Considerations ........................................10\n      5.1.
    Protocol Vulnerabilities ..................................11\n   6. Acknowledgements
    ...............................................11\n   7. Normative References
    ...........................................11\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The DHCP reconfigure extension defined in [RFC3203] is a
    useful\n   mechanism allowing dynamic reconfiguration of a single host triggered\n
    \  by the DHCP server.  Its application is currently limited by a\n   requirement
    that a Forcerenew message is always authenticated using\n   procedures as described
    in [RFC3118].  Authentication for DHCP\n   [RFC3118] is mandatory for FORCERENEW;
    however, as it is currently\n   defined, [RFC3118] requires distribution of constant
    token or shared-\n   secret out-of-band to DHCP clients.\n   The motivation for
    making authentication mandatory in DHCP FORCERENEW\n   was to prevent an off-network
    attacker from taking advantage of DHCP\n   FORCERENEW to accurately predict the
    timing of a DHCP renewal.\n   Without DHCP FORCERENEW, DHCP renewal timing is
    under the control of\n   the client, and an off-network attacker has no way of
    predicting when\n   it will happen, since it doesn't have access to the exchange
    between\n   the DHCP client and DHCP server.\n   However, the requirement to use
    the DHCP authentication described in\n   [RFC3118] is more stringent than is required
    for this use case and\n   has limited adoption of DHCP FORCERENEW.  [RFC3315]
    defines an\n   authentication protocol using a nonce to prevent off-network\n
    \  attackers from successfully causing clients to renew.  Since the off-\n   network
    attacker doesn't have access to the nonce, it can't trick the\n   client into
    renewing at a time of its choosing.\n   This document defines extensions to Authentication
    for DHCPv4\n   Messages [RFC3118] to create a new authentication protocol for
    DHCPv4\n   FORCERENEW [RFC3203] messages; this method does not require out-of-\n
    \  band key distribution to DHCP clients.  The Forcerenew Nonce is\n   exchanged
    between server and client on initial DHCP ACK and is used\n   for verification
    of any subsequent FORCERENEW message.  This document\n   updates [RFC3203].\n"
  title: 1.  Introduction
- contents:
  - "2.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
    \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\",
    and \"OPTIONAL\" in this\n   document are to be interpreted as described in [RFC2119].\n"
  title: 2.  Requirements Language
- contents:
  - "3.  Message Authentication\n   The Forcerenew message MUST be authenticated using
    either [RFC3118]\n   or the proposed Forcerenew Nonce Authentication protocol.\n"
  - contents:
    - "3.1.  Forcerenew Nonce Authentication\n   The Forcerenew Nonce Authentication
      protocol provides protection\n   against misconfiguration of a client caused
      by a Forcerenew message\n   sent by a malicious DHCP server.  In this protocol,
      a DHCP server\n   sends a Forcerenew Nonce to the client in the initial exchange
      of\n   DHCP messages.  The client records the Forcerenew Nonce for use in\n
      \  authenticating subsequent Forcerenew messages from that server.  The\n   server
      then includes a Hashed Message Authentication Code (HMAC)\n   computed from
      the Forcerenew nonce in subsequent Forcerenew messages.\n   Both the Forcerenew
      Nonce sent from the server to the client and the\n   HMAC in subsequent Forcerenew
      messages are carried as the\n   Authentication information in a DHCP Authentication
      option.  The\n   format of the Authentication information is defined in the
      following\n   section.\n   The Forcerenew Nonce Authentication protocol is used
      (initiated by\n   the server) only if the client and server are not using the\n
      \  authentication mechanism specified in [RFC3118] and the client and\n   server
      have negotiated to use the Forcerenew Nonce Authentication\n   protocol.\n"
    - contents:
      - "3.1.1.  Forcerenew Nonce Protocol Capability Option\n   A DHCP client indicates
        DHCP Forcerenew Nonce Protocol capability by\n   including a FORCERENEW_NONCE_CAPABLE
        (145) option in DHCP Discover\n   and Request messages sent to the server.\n
        \  A DHCP server that does not support Forcerenew Nonce Authentication\n   protocol
        authentication SHOULD ignore the FORCERENEW_NONCE_CAPABLE\n   (145) option.
        \ A DHCP server indicates DHCP Forcerenew Nonce Protocol\n   preference by
        including a FORCERENEW_NONCE_CAPABLE (145) option in\n   any DHCP Offer messages
        sent to the client.\n   A DHCP client MUST NOT send DHCP messages with authentication
        options\n   where the protocol value is Forcerenew Nonce Authentication.\n
        \  The FORCERENEW_NONCE_CAPABLE option contains code 145, length n, and\n
        \  a sequence of algorithms the client supports:\n             Code   Len
        \  Algorithms\n            +-----+-----+----+----+----+\n            | 145
        |  n  | A1 | A2 | A3 | ....\n            +-----+-----+----+----+----+\n                 Figure
        1: FORCERENEW_NONCE_CAPABLE Option\n   In this document, Section 3.1.2 defines
        the Forcerenew Nonce\n   Authentication protocol for algorithm equal to 1
        and type equal to 2;\n   future documents will specify the other values for
        algorithm !=1 and\n   type !=2, allowing a different algorithm to be used
        with shorter/\n   longer values.\n   The client would indicate that it supports
        the functionality by\n   inserting the FORCERENEW_NONCE_CAPABLE option in
        the DHCP Discover\n   and Request messages.  If the server supports Forcerenew
        nonce\n   authentication and requires Forcerenew nonce authentication, it
        will\n   insert the FORCERENEW_NONCE_CAPABLE option in the DHCPOFFER.\n                     Server
        \         Client          Server\n                 (not selected)                    (selected)\n
        \                      v               v               v\n                       |
        \              |               |\n                       |     Begins initialization
        \    |\n                       |               |               |\n                       |
        _____________/|\\____________  |\n                       |/DHCPDISCOVER  |
        DHCPDISCOVER \\|\n                       | w/FORCERENEW- | w/FORCERENEW- |\n
        \                      | NONCE-CAPABLE | NONCE-CAPABLE |\n                       |
        \              |               |\n                   Determines          |
        \         Determines\n                  configuration        |         configuration\n
        \                      |               |               |\n                       |\\
        \             |              /|\n                       | \\__________   |
        \   _________/ |\n                       |  DHCPOFFER \\  |   /DHCPOFFER  |\n
        \                      |w/FORCERENEW \\ |  /w/FORCERENEW|\n                       |NONCE-CAPABLE
        \\| /NONCE-CAPABLE|\n                       |               |               |\n
        \                      |       Collects replies        |\n                       |
        \              |               |\n                       |     Selects configuration
        \    |\n                       |               |               |\n                       |
        _____________/|\\____________  |\n                       |/ DHCPREQUEST  |
        \ DHCPREQUEST\\ |\n                       | w/Forcerenew- | w/Forcerenew-
        |\n                       | Nonce-Capable | Nonce-Capable |\n                       |
        \              |               |\n                       |               |
        \    Commits configuration\n                       |               |               |\n
        \                      |               |Creates 128-bit Forcerenew Nonce\n
        \                      |               |               |\n                       |
        \              | _____________/|\n                       |               |/
        DHCPACK      |\n                       |               | w/Auth-Proto= |\n
        \                      |               | Forcerenew-   |\n                       |
        \              |        Nonce  |\n                       |               |
        \              |\n                       |Client stores Forcerenew Nonce |\n
        \                      |               |               |\n                       |
        \   Initialization complete    |\n                       |               |
        \              |\n                       .               .               .\n
        \                      .               .               .\n                       |
        \              |               |\n                       |          Forcerenew
        \          |\n                       |               | _____________/|\n                       |
        \              |/ DHCPFORCE    |\n                       |               |
        w/Auth-Proto= |\n                       |               | Forcerenew-   |\n
        \                      |               |   Digest(HMAC)|\n                       |
        \              |               |\n                       | Client checks HMAC
        digest     |\n                       | using stored Forcerenew Nonce |\n                       |
        \              |               |\n                       |               |\\____________
        \ |\n                       |               |  DHCPREQUEST\\ |\n                       |
        \              | w/FORCERENEW- |\n                       |               |
        NONCE-CAPABLE |\n                       |               |               |\n
        \                      |               |     Commits configuration\n                       |
        \              |               |\n                       |               |Creates
        128-bit Forcerenew Nonce\n                       |               |               |\n
        \                      |               | _____________/|\n                       |
        \              |/ DHCPACK      |\n                       |               |
        w/Auth-Proto= |\n                       |               |   Forcerenew- |\n
        \                      |               |         Nonce |\n                       |
        \              |               |\n                       |               |
        \              |\n                       |               |               |\n
        \                      .               .               .\n                       .
        \              .               .\n                       |               |
        \              |\n                       |      Graceful shutdown        |\n
        \                      |               |               |\n                       |
        \              |\\ ____________ |\n                       |               |
        DHCPRELEASE  \\|\n                       |               |               |\n
        \                      |               |        Discards lease\n                       |
        \              |               |\n                       v               v
        \              v\n   Figure 2: Timeline Diagram of Messages Exchanged between
        DHCP Client\n      and Servers Using the Forcerenew Nonce Authentication Protocol\n"
      title: 3.1.1.  Forcerenew Nonce Protocol Capability Option
    - contents:
      - "3.1.2.  Forcerenew Nonce Authentication Protocol\n   The Forcerenew Nonce
        Authentication protocol makes use of both the\n   DHCP authentication option
        defined in [RFC3118] reusing the option\n   format and of the Reconfigure
        Key Authentication Protocol defined in\n   [RFC3315].\n   The following diagram
        defines the format of the DHCP authentication\n   option:\n       0                   1
        \                  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |     Code      |    Length     |  Protocol     |   Algorithm   |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |     RDM       | Replay Detection (64 bits)                    |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |  Replay cont.                                                 |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |  Replay cont. |                                               |\n
        \     +-+-+-+-+-+-+-+-+                                               |\n
        \     |                                                               |\n
        \     |           Authentication Information                          |\n
        \     |                                                               |\n
        \     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \           Figure 3: Format of the DHCP Authentication Option\n   The following
        fields are set in an DHCP authentication option for the\n   Forcerenew Nonce
        Authentication protocol.\n      Code: 90 (Authentication) per [RFC3118]\n
        \     Length: contains the length of the protocol\n      Protocol: 3 (Reconfigure
        Key) per [RFC3118]\n      Algorithm: 1 (HMAC-MD5) per [RFC3118] and [RFC3315]\n
        \     Replay Detection: per the Replay Detection Method (RDM)\n      Replay
        Detection Method (RDM): 0\n      Authentication Information: specified below\n
        \  The format of the Authentication Information for the Forcerenew Nonce\n
        \  Authentication Protocol is as follows:\n       0                   1                   2
        \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2
        3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \     |     Type      |                 Value (128 bits)              |\n
        \     +-+-+-+-+-+-+-+-+                                               |\n
        \     .                                                               .\n
        \     .                                                               .\n
        \     .                                               +-+-+-+-+-+-+-+-+\n
        \     |                                               |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
        \           Figure 4: Format of the Authentication Information\n      Type:
        The type of data in Value field carried in this option:\n         1 Forcerenew
        nonce Value (used in ACK message)\n         2 HMAC-MD5 digest of the message
        (Forcerenew message)\n      Value: The message authentication code generated
        by applying MD5\n      to the DHCP message\n"
      title: 3.1.2.  Forcerenew Nonce Authentication Protocol
    - contents:
      - "3.1.3.  Server Considerations for Forcerenew Nonce Authentication\n   The
        use of Forcerenew Nonce Authentication protocol is dependent on\n   the client
        indicating its capability through the\n   FORCERENEW_NONCE_CAPABLE (145) DHCP
        option in any DHCP Discover or\n   Request messages.  The DHCP Discovery or
        Request message from the\n   client MUST contain the FORCERENEW_NONCE_CAPABLE
        (145) option if the\n   Forcerenew Nonce Protocol is to be used by the server.
        \ The absence\n   of the FORCERENEW_NONCE_CAPABLE (145) option indicates to
        the server\n   that the Forcerenew Nonce Authentication protocol is not supported;\n
        \  thus, the server MUST NOT include a Forcerenew Nonce Protocol\n   Authentication
        option in the DHCP ACK.\n   The server indicates its support of the Forcerenew
        Nonce\n   Authentication protocol by including the DHCP\n   FORCERENEW_NONCE_CAPABLE
        (145) option in the DHCPOFFER.  The server\n   SHOULD NOT include this option
        unless the client has indicated its\n   capability in a DHCP Discovery message.
        \ The presence of the\n   FORCERENEW_NONCE_CAPABLE (145) option in the DHCP
        offer may be used\n   by clients to prefer DHCP servers that are Forcerenew
        Nonce\n   Authentication protocol capable over those servers that do not\n
        \  support such capability.\n   If a capable server receives a DISCOVER or
        REQUEST (any type) that\n   indicates the client is capable, and the server
        has no previous nonce\n   recorded, it MUST generate a nonce and include it
        in the ACK.\n   The server selects a Forcerenew Nonce for a client only during\n
        \  Request/ACK message exchange.  The server records the Forcerenew\n   nonce
        and transmits that nonce to the client in an Authentication\n   option in
        the DHCP ACK message.\n   The server SHOULD NOT include the nonce in an ACK
        when responding to\n   a renew unless a new nonce was generated.  This minimizes
        the number\n   of times the nonce is sent over the wire.\n   If the server
        to which the DHCP Request message was sent at time T1\n   has not responded,
        the client enters the REBINDING state and attempts\n   to contact any server.
        \ The new Server receiving the DHCP message\n   MUST generate a new nonce.\n
        \  The Forcerenew nonce is 128 bits long, and it MUST be a\n   cryptographically
        strong random or pseudo-random number that cannot\n   easily be predicted.
        \ The nonce is embedded as a 128-bit value of the\n   Authentication information
        where type is set to 1 (Forcerenew nonce\n   Value).\n   To provide authentication
        for a Forcerenew message, the server\n   selects a replay detection value
        according to the RDM selected by the\n   server and computes an HMAC-MD5 of
        the Forcerenew message, based on\n   the procedure specified in Section 21.5
        of [RFC3315], using the\n   Forcerenew Nonce for the client.  The server computes
        the HMAC-MD5\n   over the entire DHCP Forcerenew message, including the Authentication\n
        \  option; the HMAC-MD5 field in the Authentication option is set to\n   zero
        for the HMAC-MD5 computation\n"
      title: 3.1.3.  Server Considerations for Forcerenew Nonce Authentication
    - contents:
      - "3.1.4.  Client Considerations for Forcerenew Nonce Authentication\n   A client
        that supports this mechanism MUST indicate Forcerenew nonce\n   Capability
        by including the FORCERENEW_NONCE_CAPABLE (145) DHCP\n   option defined in
        Section 3.1.1 in all DHCP Discover and Request\n   messages.  DHCP servers
        that support Forcerenew nonce Protocol\n   authentication MUST include the
        FORCERENEW_NONCE_CAPABLE (145) DHCP\n   option in all DHCP Offers, allowing
        the client to use this capability\n   in selecting DHCP servers should multiple
        Offers arrive.\n   The client MUST validate the DHCP ACK message contains
        a Forcerenew\n   Nonce in a DHCP authentication option.  If the server has
        indicated\n   capability for Forcerenew Nonce Authentication protocol in the
        DHCP\n   OFFER and the subsequent ACK received by the client while in the\n
        \  selecting state omits a valid DHCP authentication option for the\n   Forcerenew
        Nonce Authentication protocol, the client MUST discard the\n   message and
        return to the INIT state.\n   The client MUST record the Forcerenew Nonce
        from any valid ACK it\n   receives, if the ACK contains one.\n   To authenticate
        a Forcerenew message, the client computes an HMAC-\n   MD5, based on the procedure
        specified in Section 21.5 of [RFC3315],\n   over the DHCP Forcerenew message
        (after setting the HMAC-MD5 field in\n   the Authentication option to zero),
        using the Forcerenew Nonce\n   received from the server.  If this computed
        HMAC-MD5 matches the\n   value in the Authentication option, the client accepts
        the FORCERENEW\n   message.\n"
      title: 3.1.4.  Client Considerations for Forcerenew Nonce Authentication
    title: 3.1.  Forcerenew Nonce Authentication
  title: 3.  Message Authentication
- contents:
  - "4.  IANA Considerations\n   IANA has assigned the following new DHCPv4 option
    code from the\n   registry \"BOOTP Vendor Extensions and DHCP Options\" maintained
    at\n   http://www.iana.org/assignments/bootp-dhcp-parameters:\n   Tag: 145\n   Name:
    FORCERENEW_NONCE_CAPABLE\n   Data length: 1\n   Description: Forcerenew Nonce
    Capable\n   Reference: this document\n"
  title: 4.  IANA Considerations
- contents:
  - "5.  Security Considerations\n   As in some network environments FORCERENEW can
    be used to snoop and\n   spoof traffic, the FORCERENEW message MUST be authenticated
    using the\n   procedures as described in [RFC3118] or the mechanism described
    in\n   this document.\n   The mechanism in [RFC3315] for DHCPv6, which this document
    mirrors\n   for DHCPv4, uses a nonce to prevent an off-link attacker from\n   successfully
    triggering a renewal on a client by sending\n   DHCPFORCERENEW; since the attacker
    is off-link, it doesn't have the\n   nonce, and can't force a renewal.\n   An
    on-link attacker can always simply watch the DHCP renewal message\n   go out and
    respond to it, so this mechanism is useless for preventing\n   on-link attacks;
    hence, the security of the nonce in the case of on-\n   link attacks isn't relevant.
    \ Therefore, HMAC-MD5 is, by definition,\n   adequate for the purpose, and there
    is no need for an extensible HMAC\n   mechanism.  FORCERENEW messages failing
    the authentication should be\n   silently discarded by the client.\n"
  - contents:
    - "5.1.  Protocol Vulnerabilities\n   The mechanism described in this document
      is vulnerable to a denial-\n   of-service (DoS) attack through flooding a client
      with bogus\n   FORCERENEW messages.  The calculations involved in authenticating
      the\n   bogus FORECERENEW messages may overwhelm the device on which the\n   client
      is running.\n   The mechanism described provides protection against the use
      of a\n   FORCERENEW message by a malicious DHCP server to mount a DoS or man-\n
      \  in-the-middle attack on a client.  This protocol can be compromised\n   by
      an attacker that can intercept the initial message in which the\n   DHCP server
      sends the nonce to the client.\n"
    title: 5.1.  Protocol Vulnerabilities
  title: 5.  Security Considerations
- contents:
  - "6.  Acknowledgements\n   This contribution is based on work by Vitali Vinokour.
    \ Major\n   sections of this document use modified text from [RFC3315].  The\n
    \  authors wish to thank Ted Lemon, Matthew Ryan, and Bernie Volz for\n   their
    support.\n"
  title: 6.  Acknowledgements
- contents:
  - "7.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use in RFCs
    to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March 1997.\n
    \  [RFC3118]  Droms, R. and W. Arbaugh, \"Authentication for DHCP\n              Messages\",
    RFC 3118, June 2001.\n   [RFC3203]  T'Joens, Y., Hublet, C., and P. De Schrijver,
    \"DHCP\n              reconfigure extension\", RFC 3203, December 2001.\n   [RFC3315]
    \ Droms, R., Bound, J., Volz, B., Lemon, T., Perkins, C.,\n              and M.
    Carney, \"Dynamic Host Configuration Protocol for\n              IPv6 (DHCPv6)\",
    RFC 3315, July 2003.\n"
  title: 7.  Normative References
- contents:
  - "Authors' Addresses\n   David Miles\n   Google\n   EMail: davidmiles@google.com\n
    \  Wojciech Dec\n   Cisco Systems\n   Haarlerbergpark Haarlerbergweg 13-19\n   Amsterdam,
    NOORD-HOLLAND  1101 CH\n   Netherlands\n   EMail: wdec@cisco.com\n   James Bristow\n
    \  Swisscom Schweiz AG\n   Zentweg 9\n   Bern, 3050,\n   Switzerland\n   EMail:
    James.Bristow@swisscom.com\n   Roberta Maglione\n   Telecom Italia\n   Via Reiss
    Romoli 274\n   Torino  10148\n   Italy\n   EMail: roberta.maglione@telecomitalia.it\n"
  title: Authors' Addresses
