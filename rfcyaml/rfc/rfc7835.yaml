- title: __initial_text__
  contents:
  - '         Locator/ID Separation Protocol (LISP) Threat Analysis

    '
- title: Abstract
  contents:
  - "Abstract\n   This document provides a threat analysis of the Locator/ID Separation\n\
    \   Protocol (LISP).\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are a candidate for any level of Internet\n\
    \   Standard; see Section 2 of RFC 5741.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   http://www.rfc-editor.org/info/rfc7835.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2016 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (http://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   3\n   2.  Threat Model  . . . . . . . . . . . . . . . . . . . .\
    \ . . . .   3\n     2.1.  Operation Modes of Attackers  . . . . . . . . . . .\
    \ . . .   4\n       2.1.1.  On-Path vs. Off-Path Attackers  . . . . . . . . .\
    \ . .   4\n       2.1.2.  Internal vs. External Attackers . . . . . . . . . .\
    \ .   4\n       2.1.3.  Live vs. Time-Shifted Attackers . . . . . . . . . . .\
    \   5\n       2.1.4.  Control-Plane vs. Data-Plane Attackers  . . . . . . .  \
    \ 5\n       2.1.5.  Cross-Mode Attackers  . . . . . . . . . . . . . . . .   5\n\
    \     2.2.  Threat Categories . . . . . . . . . . . . . . . . . . . .   5\n  \
    \     2.2.1.  Replay Attack . . . . . . . . . . . . . . . . . . . .   5\n    \
    \   2.2.2.  Packet Manipulation . . . . . . . . . . . . . . . . .   6\n      \
    \ 2.2.3.  Packet Interception and Suppression . . . . . . . . .   6\n       2.2.4.\
    \  Spoofing  . . . . . . . . . . . . . . . . . . . . . .   6\n       2.2.5.  Rogue\
    \ Attack  . . . . . . . . . . . . . . . . . . . .   7\n       2.2.6.  Denial-of-Service\
    \ (DoS) Attack  . . . . . . . . . . .   7\n       2.2.7.  Performance Attack \
    \ . . . . . . . . . . . . . . . . .   7\n       2.2.8.  Intrusion Attack  . .\
    \ . . . . . . . . . . . . . . . .   7\n       2.2.9.  Amplification Attack  .\
    \ . . . . . . . . . . . . . . .   7\n       2.2.10. Passive Monitoring Attacks\
    \  . . . . . . . . . . . . .   7\n       2.2.11. Multi-category Attacks  . . .\
    \ . . . . . . . . . . . .   8\n   3.  Attack Vectors  . . . . . . . . . . . .\
    \ . . . . . . . . . . .   8\n     3.1.  Gleaning  . . . . . . . . . . . . . .\
    \ . . . . . . . . . .   8\n     3.2.  Locator Status Bits . . . . . . . . . .\
    \ . . . . . . . . .   9\n     3.3.  Map-Version . . . . . . . . . . . . . . .\
    \ . . . . . . . .  10\n     3.4.  Routing Locator Reachability  . . . . . . .\
    \ . . . . . . .  11\n     3.5.  Instance ID . . . . . . . . . . . . . . . . .\
    \ . . . . . .  12\n     3.6.  Interworking  . . . . . . . . . . . . . . . . .\
    \ . . . . .  12\n     3.7.  Map-Request Messages  . . . . . . . . . . . . . .\
    \ . . . .  12\n     3.8.  Map-Reply Messages  . . . . . . . . . . . . . . . .\
    \ . . .  13\n     3.9.  Map-Register Messages . . . . . . . . . . . . . . . .\
    \ . .  15\n     3.10. Map-Notify Messages . . . . . . . . . . . . . . . . . .\
    \ .  15\n   4.  Note on Privacy . . . . . . . . . . . . . . . . . . . . . . .\
    \  15\n   5.  Threat Mitigation . . . . . . . . . . . . . . . . . . . . . .  16\n\
    \   6.  Security Considerations . . . . . . . . . . . . . . . . . . .  16\n  \
    \ 7.  References  . . . . . . . . . . . . . . . . . . . . . . . . .  17\n    \
    \ 7.1.  Normative References  . . . . . . . . . . . . . . . . . .  17\n     7.2.\
    \  Informative References  . . . . . . . . . . . . . . . . .  17\n   Acknowledgments\
    \ . . . . . . . . . . . . . . . . . . . . . . . . .  18\n   Authors' Addresses\
    \  . . . . . . . . . . . . . . . . . . . . . . .  19\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   The Locator/ID Separation Protocol (LISP) is specified in\
    \ [RFC6830].\n   This document provides an assessment of the potential security\n\
    \   threats for the current LISP specifications if LISP is deployed in\n   the\
    \ Internet (i.e., a public non-trustable environment).\n   The document is composed\
    \ of three main parts.  The first part defines\n   a general threat model that\
    \ attackers use to mount attacks.  The\n   second part, using this threat model,\
    \ describes the techniques based\n   on LISP and its architecture that attackers\
    \ may use to construct\n   attacks.  The third part discusses mitigation techniques\
    \ and general\n   solutions to protect LISP and its architecture from attacks.\n\
    \   This document does not consider all the possible uses of LISP as\n   discussed\
    \ in [RFC6830] and [RFC7215] and does not cover threats due\n   to specific implementations.\
    \  The document focuses on LISP unicast,\n   including as well LISP Interworking\
    \ [RFC6832], LISP Map-Server\n   [RFC6833], and LISP Map-Versioning [RFC6834].\
    \  Additional threats may\n   be discovered in the future while deployment continues.\
    \  The reader\n   is assumed to be familiar with these documents for understanding\
    \ the\n   present document.\n   This document assumes a generic IP service and\
    \ does not discuss the\n   difference, from a security viewpoint, between using\
    \ IPv4 or IPv6.\n"
- title: 2.  Threat Model
  contents:
  - "2.  Threat Model\n   This document assumes that attackers can be located anywhere\
    \ in the\n   Internet (either in LISP sites or outside LISP sites) and that\n\
    \   attacks can be mounted either by a single attacker or by the\n   collusion\
    \ of several attackers.\n   An attacker is a malicious entity that performs the\
    \ action of\n   attacking a target in a network where LISP is (partially) deployed\
    \ by\n   leveraging LISP and/or its architecture.\n   An attack is the action\
    \ of performing an illegitimate action on a\n   target in a network where LISP\
    \ is (partially) deployed.\n   The target of an attack is the entity (i.e., a\
    \ device connected to\n   the network or a network) that is aimed to undergo the\
    \ consequences\n   of an attack.  Other entities can potentially undergo side\
    \ effects of\n   an attack, even though they are not directly targeted by the\
    \ attack.\n   The target of an attack can be selected specifically, i.e., a\n\
    \   particular entity, or arbitrarily, i.e., any entity.  Finally, an\n   attacker\
    \ can aim to attack one or several targets with a single\n   attack.\n   Section\
    \ 2.1 specifies the different modes of operation that attackers\n   can follow\
    \ to mount attacks, and Section 2.2 specifies the different\n   categories of\
    \ attacks that attackers can build.\n"
- title: 2.1.  Operation Modes of Attackers
  contents:
  - "2.1.  Operation Modes of Attackers\n   In this document, attackers are classified\
    \ according to their modes\n   of operation, i.e., the temporal and spacial diversity\
    \ of the\n   attacker.  These modes are not mutually exclusive; they can be used\n\
    \   by attackers in any combination, and other modes may be discovered in\n  \
    \ the future.  Further, attackers are not at all bound by our\n   classification\
    \ scheme, so implementers and those deploying will\n   always need to do additional\
    \ risk analysis for themselves.\n"
- title: 2.1.1.  On-Path vs. Off-Path Attackers
  contents:
  - "2.1.1.  On-Path vs. Off-Path Attackers\n   On-path attackers, also known as Men-in-the-Middle,\
    \ are able to\n   intercept and modify packets between legitimate communicating\n\
    \   entities.  On-path attackers are located either directly on the\n   normal\
    \ communication path (either by gaining access to a node on the\n   path or by\
    \ placing themselves directly on the path) or outside the\n   location path but\
    \ manage to deviate (or gain a copy of) packets sent\n   between the communication\
    \ entities.  On-path attackers hence mount\n   their attacks by modifying packets\
    \ initially sent legitimately\n   between communication entities.\n   An attacker\
    \ is called an off-path attacker if it does not have access\n   to packets exchanged\
    \ during the communication or if there is no\n   communication.  In order for\
    \ their attacks to succeed, off-path\n   attackers must hence generate packets\
    \ and inject them in the network.\n"
- title: 2.1.2.  Internal vs. External Attackers
  contents:
  - "2.1.2.  Internal vs. External Attackers\n   An internal attacker launches its\
    \ attack from a node located within a\n   legitimate LISP site.  Such an attacker\
    \ is either a legitimate node\n   of the site or it exploits a vulnerability to\
    \ gain access to a\n   legitimate node in the site.  Because of their location,\
    \ internal\n   attackers are trusted by the site they are in.\n   On the contrary,\
    \ an external attacker launches its attacks from the\n   outside of a legitimate\
    \ LISP site.\n"
- title: 2.1.3.  Live vs. Time-Shifted Attackers
  contents:
  - "2.1.3.  Live vs. Time-Shifted Attackers\n   A live attacker mounts attacks for\
    \ which it must remain connected as\n   long as the attack is mounted.  In other\
    \ words, the attacker must\n   remain active for the whole duration of the attack.\
    \  Consequently,\n   the attack ends as soon as the attacker (or the used attack\
    \ vector)\n   is neutralized.\n   On the contrary, a time-shifted attacker mounts\
    \ attacks that remain\n   active after it disconnects from the Internet.\n"
- title: 2.1.4.  Control-Plane vs. Data-Plane Attackers
  contents:
  - "2.1.4.  Control-Plane vs. Data-Plane Attackers\n   A control-plane attacker mounts\
    \ its attack by using control-plane\n   functionalities, typically the mapping\
    \ system.\n   A data-plane attacker mounts its attack by using data-plane\n  \
    \ functionalities.\n   As there is no complete isolation between the control plane\
    \ and the\n   data plane, an attacker can operate in the control plane (or data\n\
    \   plane) to mount attacks targeting the data plane (or control plane)\n   or\
    \ keep the attacked and targeted planes at the same layer (i.e.,\n   from control\
    \ plane to control plane or from data plane to data\n   plane).\n"
- title: 2.1.5.  Cross-Mode Attackers
  contents:
  - "2.1.5.  Cross-Mode Attackers\n   The modes of operation used by attackers are\
    \ not mutually exclusive;\n   hence, attackers can combine them to mount attacks.\n\
    \   For example, an attacker can launch an attack using the control plane\n  \
    \ directly from within a LISP site to which it is able to get temporary\n   access\
    \ (i.e., internal + control-plane attacker) to create a\n   vulnerability on its\
    \ target and later on (i.e., time-shifted +\n   external attacker) mount an attack\
    \ on the data plane (i.e., data-\n   plane attacker) that leverages the vulnerability.\n"
- title: 2.2.  Threat Categories
  contents:
  - "2.2.  Threat Categories\n   Attacks can be classified according to the eleven\
    \ following\n   categories.  These categories are not mutually exclusive and can\
    \ be\n   used by attackers in any combination.\n"
- title: 2.2.1.  Replay Attack
  contents:
  - "2.2.1.  Replay Attack\n   A replay attack happens when an attacker retransmits\
    \ a packet (or a\n   sequence of packets) without modifying it.\n"
- title: 2.2.2.  Packet Manipulation
  contents:
  - "2.2.2.  Packet Manipulation\n   A packet manipulation attack happens when an\
    \ attacker receives a\n   packet, modifies the packet (i.e., changes some information\
    \ contained\n   in the packet), and finally transmits the packet to its final\n\
    \   destination, which can be the initial destination of the packet or a\n   different\
    \ one.\n"
- title: 2.2.3.  Packet Interception and Suppression
  contents:
  - "2.2.3.  Packet Interception and Suppression\n   In a packet interception and\
    \ suppression attack, the attacker\n   captures the packet and drops it before\
    \ it can reach its final\n   destination.\n"
- title: 2.2.4.  Spoofing
  contents:
  - "2.2.4.  Spoofing\n   With a spoofing attack, the attacker injects packets in\
    \ the network\n   pretending to be another node.  Spoofing attacks are made by\
    \ forging\n   source addresses in packets.\n   It should be noted that with LISP,\
    \ packet spoofing is similar to\n   spoofing with any other existing tunneling\
    \ technology currently\n   deployed in the Internet.  Generally, the term \"spoofed\
    \ packet\"\n   indicates a packet containing a source IP address that is not the\n\
    \   actual originator of the packet.  Hence, since LISP uses\n   encapsulation,\
    \ the spoofed address could be in the outer header as\n   well as in the inner\
    \ header; this translates to two types of\n   spoofing.\n   Inner address spoofing:\
    \  The attacker uses encapsulation and uses a\n      spoofed source address in\
    \ the inner packet.  In case of data-plane\n      LISP encapsulation, that corresponds\
    \ to spoofing the source\n      Endpoint Identifier (EID) address of the encapsulated\
    \ packet.\n   Outer address spoofing:  The attacker does not use encapsulation\
    \ and\n      spoofs the source address of the packet.  In case of data-plane\n\
    \      LISP encapsulation, that corresponds to spoofing the source\n      Routing\
    \ Locator (RLOC) address of the encapsulated packet.\n   Note that the two types\
    \ of spoofing are not mutually exclusive;\n   rather, all combinations are possible\
    \ and could be used to perform\n   different kinds of attacks.  For example, an\
    \ attacker outside a LISP\n   site can generate a packet with a forged source\
    \ IP address (i.e.,\n   outer address spoofing) and forward it to a LISP destination.\
    \  The\n   packet is then eventually encapsulated by a Proxy Ingress Tunnel\n\
    \   Router (PITR) so that once encapsulated, the attack corresponds to an\n  \
    \ inner address spoofing.  One can also imagine an attacker forging a\n   packet\
    \ with encapsulation where both inner and outer source addresses\n   are spoofed.\n\
    \   It is important to note that the combination of inner and outer\n   spoofing\
    \ makes the identification of the attacker complex as the\n   packet may not contain\
    \ information that allows detection of the\n   origin of the attack.\n"
- title: 2.2.5.  Rogue Attack
  contents:
  - "2.2.5.  Rogue Attack\n   In a rogue attack, the attacker manages to appear as\
    \ a legitimate\n   source of information, without faking its identity (as opposed\
    \ to a\n   spoofing attacker).\n"
- title: 2.2.6.  Denial-of-Service (DoS) Attack
  contents:
  - "2.2.6.  Denial-of-Service (DoS) Attack\n   A DoS attack aims to disrupt a specific\
    \ targeted service to make it\n   unable to operate properly.\n"
- title: 2.2.7.  Performance Attack
  contents:
  - "2.2.7.  Performance Attack\n   A performance attack aims to exploit computational\
    \ resources (e.g.,\n   memory, processor) of a targeted node so as to make it\
    \ unable to\n   operate properly.\n"
- title: 2.2.8.  Intrusion Attack
  contents:
  - "2.2.8.  Intrusion Attack\n   In an intrusion attack, the attacker gains remote\
    \ access to a\n   resource (e.g., a host, a router, or a network) or information\
    \ that\n   it legitimately should not have accessed.  Intrusion attacks can lead\n\
    \   to privacy leakages.\n"
- title: 2.2.9.  Amplification Attack
  contents:
  - "2.2.9.  Amplification Attack\n   In an amplification attack, the traffic generated\
    \ by the target of\n   the attack in response to the attack is larger than the\
    \ traffic that\n   the attacker must generate.\n   In some cases, the data plane\
    \ can be several orders of magnitude\n   faster than the control plane at processing\
    \ packets.  This difference\n   can be exploited to overload the control plane\
    \ via the data plane\n   without overloading the data plane.\n"
- title: 2.2.10.  Passive Monitoring Attacks
  contents:
  - "2.2.10.  Passive Monitoring Attacks\n   An attacker can use pervasive monitoring,\
    \ which is a technical attack\n   [RFC7258] that targets information about LISP\
    \ traffic that may or may\n   not be used to mount other types of attacks.\n"
- title: 2.2.11.  Multi-category Attacks
  contents:
  - "2.2.11.  Multi-category Attacks\n   Attack categories are not mutually exclusive,\
    \ and any combination can\n   be used to perform specific attacks.\n   For example,\
    \ one can mount a rogue attack to perform a performance\n   attack starving the\
    \ memory of an Ingress Tunnel Router (ITR)\n   resulting in a DoS on the ITR.\n"
- title: 3.  Attack Vectors
  contents:
  - "3.  Attack Vectors\n   This section presents attack techniques that may be used\
    \ by attackers\n   when leveraging LISP and/or its architecture.\n"
- title: 3.1.  Gleaning
  contents:
  - "3.1.  Gleaning\n   To reduce the time required to obtain a mapping, the optional\n\
    \   gleaning mechanism defined for LISP allows an xTR (Ingress and/or\n   Egress\
    \ Tunnel Router) to directly learn a mapping from the LISP-\n   encapsulated data\
    \ packets and the Map-Request packets that it\n   receives.  LISP-encapsulated\
    \ data packets contain a source RLOC,\n   destination RLOC, source EID, and destination\
    \ EID.  When an xTR\n   receives an encapsulated data packet coming from a source\
    \ EID for\n   which it does not already know a mapping, it may insert the mapping\n\
    \   between the source RLOC and the source EID in its EID-to-RLOC cache.\n   The\
    \ same technique can be used when an xTR receives a Map-Request as\n   the Map-Request\
    \ also contains a source EID address and a source RLOC.\n   Once a gleaned entry\
    \ has been added to the EID-to-RLOC cache, the xTR\n   sends a Map-Request to\
    \ retrieve the actual mapping for the gleaned\n   EID from the mapping system.\n\
    \   If a packet injected by an off-path attacker and with a spoofed inner\n  \
    \ address is gleaned by an xTR, then the attacker may divert the\n   traffic meant\
    \ to be delivered to the spoofed EID as long as the\n   gleaned entry is used\
    \ by the xTR.  This attack can be used as part of\n   replay, packet manipulation,\
    \ packet interception and suppression, or\n   DoS attacks as the packets are sent\
    \ to the attacker.\n   If the packet sent by the attacker contains a spoofed outer\
    \ address\n   instead of a spoofed inner address, then it can achieve a DoS or\
    \ a\n   performance attack as the traffic normally destined to the attacker\n\
    \   will be redirected to the spoofed source RLOC.  Such traffic may\n   overload\
    \ the owner of the spoofed source RLOC, preventing it from\n   operating properly.\n\
    \   If the packet injected uses both inner and outer spoofing, the\n   attacker\
    \ can achieve a spoofing, a performance, or an amplification\n   attack as traffic\
    \ normally destined to the spoofed EID address will\n   be sent to the spoofed\
    \ RLOC address.  If the attacked LISP site also\n   generates traffic to the spoofed\
    \ EID address, such traffic may have a\n   positive amplification factor.\n  \
    \ A gleaning attack does not only impact the data plane but can also\n   have\
    \ repercussions on the control plane as a Map-Request is sent\n   after the creation\
    \ of a gleaned entry.  The attacker can then achieve\n   DoS and performance attacks\
    \ on the control plane.  For example, if an\n   attacker sends a packet for each\
    \ address of a prefix not yet cached\n   in the EID-to-RLOC cache of an xTR, the\
    \ xTR will potentially send a\n   Map-Request for each such packet until the mapping\
    \ is installed,\n   which leads to an over-utilization of the control plane as\
    \ each\n   packet generates a control-plane event.  In order for this attack to\n\
    \   succeed, the attacker may not need to use spoofing.  This issue can\n   occur\
    \ even if gleaning is turned off since whether or not gleaning is\n   used, the\
    \ ITR may need to send a Map-Request in response to incoming\n   packets whose\
    \ EID is not currently in the cache.\n   Gleaning attacks fundamentally involve\
    \ a time-shifted mode of\n   operation as the attack may last as long as the gleaned\
    \ entry is kept\n   by the targeted xTR.  [RFC6830] recommends storing the gleaned\n\
    \   entries for only a few seconds, which limits the duration of the\n   attack.\n\
    \   Gleaning attacks always involve external data-plane attackers but\n   result\
    \ in attacks on either the control plane or data plane.\n   Note that the outer\
    \ spoofed address does not need to be the RLOC of a\n   LISP site; it may be any\
    \ address.\n"
- title: 3.2.  Locator Status Bits
  contents:
  - "3.2.  Locator Status Bits\n   When the L bit in the LISP header is set to 1,\
    \ it indicates that the\n   second 32-bit longword of the LISP header contains\
    \ the Locator-\n   Status-Bits (LSBs).  In this field, each bit position reflects\
    \ the\n   status of one of the RLOCs mapped to the source EID found in the\n \
    \  encapsulated packet.  The reaction of a LISP xTR that receives such a\n   packet\
    \ is left as an operational choice in [RFC6830].\n   When an attacker sends a\
    \ LISP-encapsulated packet with an\n   illegitimately crafted LSB to an xTR, it\
    \ can influence the xTR's\n   choice of the locators for the prefix associated\
    \ with the source EID.\n   In case of an off-path attacker, the attacker must\
    \ inject a forged\n   packet in the network with a spoofed inner address.  An\
    \ on-path\n   attacker can manipulate the LSB of legitimate packets passing through\n\
    \   it and hence does not need to use spoofing.  Instead of manipulating\n   the\
    \ LSB field, an on-path attacker can also obtain the same result of\n   injecting\
    \ packets with invalid LSB values by replaying packets.\n   The LSB field can\
    \ be leveraged to mount a DoS attack by either\n   declaring all RLOCs as unreachable\
    \ (all LSBs set to 0), concentrating\n   all the traffic to one RLOC (e.g., all\
    \ but one LSB set to 0), and\n   hence overloading the RLOC concentrating all\
    \ the traffic from the\n   xTR, or by forcing packets to be sent to RLOCs that\
    \ are actually not\n   reachable (e.g., invert LSB values).\n   The LSB field\
    \ can also be used to mount a replay, a packet\n   manipulation, or a packet interception\
    \ and suppression attack.\n   Indeed, if the attacker manages to be on the path\
    \ between the xTR and\n   one of the RLOCs specified in the mapping, forcing packets\
    \ to go via\n   that RLOC implies that the attacker will gain access to the packets.\n\
    \   Attacks using the LSB fundamentally involve a time-shifted mode of\n   operation\
    \ as the attack may last as long as the reachability\n   information gathered\
    \ from the LSB is used by the xTR to decide the\n   RLOCs to be used.\n"
- title: 3.3.  Map-Version
  contents:
  - "3.3.  Map-Version\n   When the Map-Version bit of the LISP header is set to 1,\
    \ it indicates\n   that the low-order 24 bits of the first 32-bit longword of\
    \ the LISP\n   header contain a Source and Destination Map-Version.  When a LISP\
    \ xTR\n   receives a LISP-encapsulated packet with the Map-Version bit set to\n\
    \   1, the following actions are taken:\n   o  It compares the Destination Map-Version\
    \ found in the header with\n      the current version of its own configured EID-to-RLOC\
    \ mapping for\n      the destination EID found in the encapsulated packet.  If\
    \ the\n      received Destination Map-Version is smaller (i.e., older) than the\n\
    \      current version, the Egress Tunnel Router (ETR) should apply the\n    \
    \  Solicit-Map-Request (SMR) procedure described in [RFC6830] and\n      send\
    \ a Map-Request with the SMR bit set.\n   o  If a mapping exists in the EID-to-RLOC\
    \ cache for the source EID,\n      then it compares the Map-Version of that entry\
    \ with the Source\n      Map-Version found in the header of the packet.  If the\
    \ stored\n      mapping is older (i.e., the Map-Version is smaller), than the\n\
    \      source version of the LISP-encapsulated packet, the xTR, should\n     \
    \ send a Map-Request for the source EID.\n   A cross-mode attacker can use the\
    \ Map-Version bit to mount a DoS\n   attack, an amplification attack, or a spoofing\
    \ attack.  For instance,\n   if the mapping cached at the xTR is outdated, the\
    \ xTR will send a\n   Map-Request to retrieve the new mapping, which can yield\
    \ to a DoS\n   attack (by excess of signaling traffic) or an amplification attack\
    \ if\n   the data-plane packet sent by the attacker is smaller, or otherwise\n\
    \   uses fewer resources, than the control-plane packets sent in response\n  \
    \ to the attacker's packet.  With a spoofing attack, and if the xTR\n   considers\
    \ that the spoofed ITR has an outdated mapping, it will send\n   an SMR to the\
    \ spoofed ITR, which can result in a performance,\n   amplification, or DoS attack\
    \ as well.\n   Map-Version attackers are inherently cross-mode as the Map-Version\
    \ is\n   a method to put control information in the data plane.  Moreover,\n \
    \  this vector involves live attackers.  Nevertheless, on-path attackers\n   do\
    \ not have a specific advantage over off-path attackers.\n"
- title: 3.4.  Routing Locator Reachability
  contents:
  - "3.4.  Routing Locator Reachability\n   The Nonce-Present and Echo-Nonce bits\
    \ in the LISP header are used to\n   verify the reachability of an xTR.  A testing\
    \ xTR sets the Echo-Nonce\n   and the Nonce-Present bits in LISP-encapsulated\
    \ data packets and\n   includes a random nonce in the LISP header of the packets.\
    \  Upon\n   reception of these packets, the tested xTR stores the nonce and\n\
    \   echoes it whenever it returns a LISP-encapsulated data packet to the\n   testing\
    \ xTR.  The reception of the echoed nonce confirms that the\n   tested xTR is\
    \ reachable.\n   An attacker can interfere with the reachability test by sending\
    \ two\n   different types of packets:\n   1.  LISP-encapsulated data packets with\
    \ the Nonce-Present bit set and\n       a random nonce.  Such packets are normally\
    \ used in response to a\n       reachability test.\n   2.  LISP-encapsulated data\
    \ packets with the Nonce-Present and the\n       Echo-Nonce bits both set.  These\
    \ packets will force the receiving\n       ETR to store the received nonce and\
    \ echo it in the LISP-\n       encapsulated packets that it sends.  These packets\
    \ are normally\n       used as a trigger for a reachability test.\n   The first\
    \ type of packets are used to make xTRs think that another\n   xTR is reachable\
    \ when it is not.  It is hence a way to mount a DoS\n   attack (i.e., the ITR\
    \ will send its packet to a non-reachable ETR\n   when it should use another one).\n\
    \   The second type of packets could be exploited to attack the nonce-\n   based\
    \ reachability test.  If the attacker sends a continuous flow of\n   packets that\
    \ each have a different random nonce, the ETR that\n   receives such packets will\
    \ continuously change the nonce that it\n   returns to the remote ITR, which can\
    \ yield to a performance attack.\n   If the remote ITR tries a nonce reachability\
    \ test, this test may fail\n   because the ETR may echo an invalid nonce.  This\
    \ hence yields to a\n   DoS attack.\n   In the case of an on-path attacker, a\
    \ packet manipulation attack is\n   necessary to mount the attack.  To mount such\
    \ an attack, an off-path\n   attacker must mount an outer address spoofing attack.\n\
    \   If an xTR chooses to periodically check with active probes the\n   liveness\
    \ of entries in its EID-to-RLOC cache (as described in\n   Section 6.3 of [RFC6830]),\
    \ then this may amplify the attack that\n   caused the insertion of entries being\
    \ checked.\n"
- title: 3.5.  Instance ID
  contents:
  - "3.5.  Instance ID\n   LISP allows a 24-bit value called Instance ID to be carried\
    \ in its\n   header; it's used on the ITR to indicate which local Instance ID\
    \ has\n   been used for encapsulation, while on the ETR, the Instance ID\n   decides\
    \ which forwarding table to use to forward the decapsulated\n   packet in the\
    \ LISP site.\n   An attacker (either a control-plane or data-plane attacker) can\
    \ use\n   the Instance ID functionality to mount an intrusion attack.\n"
- title: 3.6.  Interworking
  contents:
  - "3.6.  Interworking\n   [RFC6832] defines Proxy-ITR and Proxy-ETR network elements\
    \ to allow\n   LISP and non-LISP sites to communicate.  The Proxy-ITR has\n  \
    \ functionality similar to the ITR; however, its main purpose is to\n   encapsulate\
    \ packets arriving from the Default-Free Zone (DFZ) in\n   order to reach LISP\
    \ sites.  A Proxy Egress Tunnel Router (PETR) has\n   functionality similar to\
    \ the ETR; however, its main purpose is to\n   inject de-encapsulated packets\
    \ in the DFZ in order to reach non-LISP\n   sites from LISP sites.  As a PITR\
    \ (or PETR) is a particular case of\n   ITR (or ETR), it is subject to similar\
    \ attacks as ITRs (or ETRs).\n   As any other system relying on proxies, LISP\
    \ interworking can be used\n   by attackers to hide their exact origin in the\
    \ network.\n"
- title: 3.7.  Map-Request Messages
  contents:
  - "3.7.  Map-Request Messages\n   A control-plane off-path attacker can exploit\
    \ Map-Request messages to\n   mount DoS, performance, or amplification attacks.\
    \  By sending Map-\n   Request messages at a high rate, the attacker can overload\
    \ nodes\n   involved in the mapping system.  For instance, sending Map-Requests\n\
    \   at a high rate can considerably increase the state maintained in a\n   Map-Resolver\
    \ or consume CPU cycles on ETRs that have to process the\n   Map-Request packets\
    \ they receive in their slow path (i.e.,\n   performance or DoS attack).  When\
    \ the Map-Reply packet is larger than\n   the Map-Request sent by the attacker,\
    \ that yields to an amplification\n   attack.  The attacker can combine the attack\
    \ with a spoofing attack\n   to overload the node to which the spoofed address\
    \ is actually\n   attached.\n   Note that if the attacker sets the P bit (Probe\
    \ Bit) in the Map-\n   Request, the Map-Request will be legitimately sent directly\
    \ to the\n   ETR instead of passing through the mapping system.\n   The SMR bit\
    \ can be used to mount a variant of these attacks.\n   For efficiency reasons,\
    \ Map-Records can be appended to Map-Request\n   messages.  When an xTR receives\
    \ a Map-Request with appended Map-\n   Records, it does the same operations as\
    \ for the other Map-Request\n   messages and so is subject to the same attacks.\
    \  However, it also\n   installs in its EID-to-RLOC cache the Map-Records contained\
    \ in the\n   Map-Request.  An attacker can then use this vector to force the\n\
    \   installation of mappings in its target xTR.  Consequently, the EID-\n   to-RLOC\
    \ cache of the xTR is polluted by potentially forged mappings\n   allowing the\
    \ attacker to mount any of the attacks categorized in\n   Section 2.2 (see Section\
    \ 3.8 for more details).  Note that the\n   attacker does not need to forge the\
    \ mappings present in the Map-\n   Request to achieve a performance or DoS attack.\
    \  Indeed, if the\n   attacker owns a large enough EID prefix, it can de-aggregate\
    \ it in\n   many small prefixes, each corresponding to another mapping, and it\n\
    \   installs them in the xTR cache by means of the Map-Request.\n   Moreover,\
    \ attackers can use Map Resolver and/or Map Server network\n   elements to relay\
    \ its attacks and hide the origin of the attack.\n   Indeed, on the one hand,\
    \ a Map Resolver is used to dispatch Map-\n   Request to the mapping system, and\
    \ on the other hand, a Map Server is\n   used to dispatch Map-Requests coming\
    \ from the mapping system to ETRs\n   that are authoritative for the EID in the\
    \ Map-Request.\n"
- title: 3.8.  Map-Reply Messages
  contents:
  - "3.8.  Map-Reply Messages\n   Most of the security risks associated with Map-Reply\
    \ messages will\n   depend on the 64-bit nonce that is included in a Map-Request\
    \ and\n   returned in the Map-Reply.  Given the size of the nonce (64 bits), if\n\
    \   a best current practice is used [RFC4086] and if an ETR does not\n   accept\
    \ Map-Reply messages with an invalid nonce, the risk of an off-\n   path attack\
    \ is limited.  Nevertheless, the nonce only confirms that\n   the Map-Reply received\
    \ was sent in response to a Map-Request sent; it\n   does not validate the contents\
    \ of that Map-Reply.\n   If an attacker manages to send a valid (i.e., in response\
    \ to a Map-\n   Request and with the correct nonce) Map-Reply to an ITR, then\
    \ it can\n   perform any of the attacks categorized in Section 2.2 as it can\n\
    \   inject forged mappings directly in the ITR EID-to-RLOC cache.  For\n   instance,\
    \ if the mapping injected to the ITR points to the address of\n   a node controlled\
    \ by the attacker, it can mount replay, packet\n   manipulation, packet interception\
    \ and suppression, or DoS attacks, as\n   it will receive every packet destined\
    \ to a destination lying in the\n   EID prefix of the injected mapping.  In addition,\
    \ the attacker can\n   inject a plethora of mappings in the ITR to mount a performance\n\
    \   attack by filling up the EID-to-RLOC cache of the ITR.  The attacker\n   can\
    \ also mount an amplification attack if the ITR at that time is\n   sending a\
    \ large number of packets to the EIDs matching the injected\n   mapping.  In this\
    \ case, the RLOC address associated with the mapping\n   is the address of the\
    \ real target of the attacker, so all the traffic\n   of the ITR will be sent\
    \ to the target, which means that with one\n   single packet the attacker may\
    \ generate very high traffic towards its\n   final target.\n   If the attacker\
    \ is a valid ETR in the system, it can mount a rogue\n   attack if it uses prefix\
    \ overclaiming.  In such a scenario, the\n   attacker ETR replies to a legitimate\
    \ Map-Request message that it\n   received with a Map-Reply message that contains\
    \ an EID prefix that is\n   larger than the prefix owned by the attacker.  For\
    \ example, if the\n   owned prefix is 192.0.2.0/25 but the Map-Reply contains\
    \ a mapping for\n   192.0.2.0/24, then the mapping will influence packets destined\
    \ to\n   EIDs other than the one the attacker has authority on.  With such\n \
    \  technique, the attacker can mount the attacks presented above as it\n   can\
    \ (partially) control the mappings installed on its target ITR.  To\n   force\
    \ its target ITR to send a Map-Request, nothing prevents the\n   attacker to initiate\
    \ some communication with the ITR.  This method\n   can be used by internal attackers\
    \ that want to control the mappings\n   installed in their site.  To that aim,\
    \ they simply have to collude\n   with an external attacker ready to overclaim\
    \ prefixes on behalf of\n   the internal attacker.\n   Note that when the Map-Reply\
    \ is in response to a Map-Request sent via\n   the mapping system (i.e., not sent\
    \ directly from the ITR to an ETR),\n   the attacker does not need to use a spoofing\
    \ attack to achieve its\n   attack as by design the source IP address of a Map-Reply\
    \ is not known\n   in advance by the ITR.\n   Map-Request and Map-Reply messages\
    \ are exposed to any type of\n   attackers, on-path or off-path but also external\
    \ or internal\n   attackers.  Also, even though they are control messages, they\
    \ can be\n   leveraged by data-plane attackers.  As the decision of removing\n\
    \   mappings is based on the TTL indicated in the mapping, time-shifted\n   attackers\
    \ can take advantage of injecting forged mappings as well.\n"
- title: 3.9.  Map-Register Messages
  contents:
  - "3.9.  Map-Register Messages\n   Map-Register messages are sent by ETRs to Map\
    \ Servers to indicate to\n   the mapping system the EID prefixes associated with\
    \ them.  The Map-\n   Register message provides an EID prefix and the list of\
    \ ETRs that are\n   able to provide Map-Replies for the EID covered by the EID\
    \ prefix.\n   As Map-Register messages are protected by an authentication\n  \
    \ mechanism, only a compromised ETR can register itself to its\n   allocated Map\
    \ Server.\n   A compromised ETR can overclaim the prefix it owns in order to\n\
    \   influence the route followed by Map-Requests for EIDs outside the\n   scope\
    \ of its legitimate EID prefix (see Section 3.8 for the list of\n   overclaiming\
    \ attacks).\n   A compromised ETR can also de-aggregate its EID prefix in order\
    \ to\n   register more EID prefixes than necessary to its Map Servers (see\n \
    \  Section 3.7 for the impact of de-aggregation of prefixes by an\n   attacker).\n\
    \   Similarly, a compromised Map Server can accept an invalid\n   registration\
    \ or advertise an invalid EID prefix to the mapping\n   system.\n"
- title: 3.10.  Map-Notify Messages
  contents:
  - "3.10.  Map-Notify Messages\n   Map-Notify messages are sent by a Map Server to\
    \ an ETR to acknowledge\n   the reception and processing of a Map-Register message.\n\
    \   Similarly, to the pair Map-Request/Map-Reply, the pair Map-Register/\n   Map-Notify\
    \ is protected by a nonce making it difficult for an\n   attacker to inject a\
    \ falsified notification to an ETR to make this\n   ETR believe that the registration\
    \ succeeded when it has not.\n"
- title: 4.  Note on Privacy
  contents:
  - "4.  Note on Privacy\n   As reviewed in [RFC6973], universal privacy considerations\
    \ are\n   difficult to establish as the privacy definitions may vary for\n   different\
    \ scenarios.  As a consequence, this document does not aim to\n   identify privacy\
    \ issues related to the LISP protocol, but the\n   security threats identified\
    \ in this document could play a role in\n   privacy threats as defined in Section\
    \ 5 of [RFC6973].\n   Similar to public deployments of any other control-plane\
    \ protocol, in\n   an Internet deployment, LISP mappings are public and hence\
    \ provide\n   information about the infrastructure and reachability of LISP sites\n\
    \   (i.e., the addresses of the edge routers).  Depending upon deployment\n  \
    \ details, LISP map replies might or might not provide finer-grained\n   and more\
    \ detailed information than is available with currently\n   deployed routing and\
    \ control protocols.\n"
- title: 5.  Threat Mitigation
  contents:
  - "5.  Threat Mitigation\n   Most of the above threats can be mitigated with careful\
    \ deployment\n   and configuration (e.g., filter) and also by applying the general\n\
    \   rules of security, e.g., only activating features that are necessary\n   for\
    \ the deployment and verifying the validity of the information\n   obtained from\
    \ third parties.\n   The control plane is the most critical part of LISP from\
    \ a security\n   viewpoint, and it is worth noticing that the LISP specifications\n\
    \   already offer an authentication mechanism for mappings registration\n   [RFC6833].\
    \  This mechanism, combined with LISP-SEC [LISP-SEC],\n   strongly mitigates threats\
    \ in non-trustable environments such as the\n   Internet.  Moreover, an authentication\
    \ data field for Map-Request\n   messages and Encapsulated Control messages was\
    \ allocated [RFC6830].\n   This field provides a general authentication mechanism\
    \ technique for\n   the LISP control plane that future specifications may use\
    \ while\n   staying backward compatible.  The exact technique still has to be\n\
    \   designed and defined.  To maximally mitigate the threats on the\n   mapping\
    \ system, authentication must be used, whenever possible, for\n   both Map-Request\
    \ and Map-Reply messages and for messages exchanged\n   internally among elements\
    \ of the mapping system, such as specified in\n   [LISP-SEC] and [LISP-DDT].\n\
    \   Systematically applying filters and rate limitation, as proposed in\n   [RFC6830],\
    \ will mitigate most of the threats presented in this\n   document.  In order\
    \ to minimize the risk of overloading the control\n   plane with actions triggered\
    \ from data-plane events, such actions\n   should be rate limited.\n   Moreover,\
    \ all information opportunistically learned (e.g., with LSB\n   or gleaning) should\
    \ be used with care until they are verified.  For\n   example, a reachability\
    \ change learned with LSB should not be used\n   directly to decide the destination\
    \ RLOC but instead should trigger a\n   rate-limited reachability test.  Similarly,\
    \ a gleaned entry should be\n   used only for the flow that triggered the gleaning\
    \ procedure until\n   the gleaned entry has been verified [Trilogy].\n"
- title: 6.  Security Considerations
  contents:
  - "6.  Security Considerations\n   This document provides a threat analysis and\
    \ proposes mitigation\n   techniques for the Locator/ID Separation Protocol.\n"
- title: 7.  References
  contents:
  - '7.  References

    '
- title: 7.1.  Normative References
  contents:
  - "7.1.  Normative References\n   [RFC6830]  Farinacci, D., Fuller, V., Meyer, D.,\
    \ and D. Lewis, \"The\n              Locator/ID Separation Protocol (LISP)\",\
    \ RFC 6830,\n              DOI 10.17487/RFC6830, January 2013,\n             \
    \ <http://www.rfc-editor.org/info/rfc6830>.\n   [RFC6832]  Lewis, D., Meyer, D.,\
    \ Farinacci, D., and V. Fuller,\n              \"Interworking between Locator/ID\
    \ Separation Protocol\n              (LISP) and Non-LISP Sites\", RFC 6832,\n\
    \              DOI 10.17487/RFC6832, January 2013,\n              <http://www.rfc-editor.org/info/rfc6832>.\n\
    \   [RFC6833]  Fuller, V. and D. Farinacci, \"Locator/ID Separation\n        \
    \      Protocol (LISP) Map-Server Interface\", RFC 6833,\n              DOI 10.17487/RFC6833,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6833>.\n   [RFC6834]\
    \  Iannone, L., Saucez, D., and O. Bonaventure, \"Locator/ID\n              Separation\
    \ Protocol (LISP) Map-Versioning\", RFC 6834,\n              DOI 10.17487/RFC6834,\
    \ January 2013,\n              <http://www.rfc-editor.org/info/rfc6834>.\n   [RFC6973]\
    \  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,\n              Morris,\
    \ J., Hansen, M., and R. Smith, \"Privacy\n              Considerations for Internet\
    \ Protocols\", RFC 6973,\n              DOI 10.17487/RFC6973, July 2013,\n   \
    \           <http://www.rfc-editor.org/info/rfc6973>.\n"
- title: 7.2.  Informative References
  contents:
  - "7.2.  Informative References\n   [LISP-DDT] Fuller, V., Lewis, D., Ermagan, V.,\
    \ and A. Jain, \"LISP\n              Delegated Database Tree\", Work in Progress,\n\
    \              draft-ietf-lisp-ddt-03, April 2015.\n   [LISP-SEC] Maino, F., Ermagan,\
    \ V., Cabellos-Aparicio, A., and D.\n              Saucez, \"LISP-Security (LISP-SEC)\"\
    , Work in Progress,\n              draft-ietf-lisp-sec-10, October 2015.\n   [PRELIM-LISP-THREAT]\n\
    \              Bagnulo, M., \"Preliminary LISP Threat Analysis\", Work in\n  \
    \            Progress, draft-bagnulo-lisp-threat-01, July 2007.\n   [RFC4086]\
    \  Eastlake 3rd, D., Schiller, J., and S. Crocker,\n              \"Randomness\
    \ Requirements for Security\", BCP 106, RFC 4086,\n              DOI 10.17487/RFC4086,\
    \ June 2005,\n              <http://www.rfc-editor.org/info/rfc4086>.\n   [RFC7215]\
    \  Jakab, L., Cabellos-Aparicio, A., Coras, F., Domingo-\n              Pascual,\
    \ J., and D. Lewis, \"Locator/Identifier Separation\n              Protocol (LISP)\
    \ Network Element Deployment\n              Considerations\", RFC 7215, DOI 10.17487/RFC7215,\
    \ April\n              2014, <http://www.rfc-editor.org/info/rfc7215>.\n   [RFC7258]\
    \  Farrell, S. and H. Tschofenig, \"Pervasive Monitoring Is an\n             \
    \ Attack\", BCP 188, RFC 7258, DOI 10.17487/RFC7258, May\n              2014,\
    \ <http://www.rfc-editor.org/info/rfc7258>.\n   [Trilogy]  Saucez, D. and L. Iannone,\
    \ \"How to mitigate the effect of\n              scans on mapping systems\", Trilogy\
    \ Future Internet Summer\n              School, 2009.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   This document builds upon the document by Marcelo Bagnulo\n\
    \   [PRELIM-LISP-THREAT], where the flooding attack and the reference\n   environment\
    \ was first described.\n   The authors would like to thank Ronald Bonica, Deborah\
    \ Brungard,\n   Albert Cabellos, Ross Callon, Noel Chiappa, Florin Coras, Vina\n\
    \   Ermagan, Dino Farinacci, Stephen Farrell, Joel Halpern, Emily\n   Hiltzik,\
    \ Darrel Lewis, Edward Lopez, Fabio Maino, Terry Manderson,\n   and Jeff Wheeler\
    \ for their comments.\n   This work has been partially supported by the INFSO-ICT-216372\n\
    \   TRILOGY Project <http://www.trilogy-project.org>.\n   The work of Luigi Iannone\
    \ has been partially supported by the\n   ANR-13-INFR-0009 LISP-Lab Project <http://www.lisp-lab.org>\
    \ and the\n   EIT KIC ICT-Labs SOFNETS Project.\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Damien Saucez\n   INRIA\n   2004 route des Lucioles BP\
    \ 93\n   06902 Sophia Antipolis Cedex\n   France\n   Email: damien.saucez@inria.fr\n\
    \   Luigi Iannone\n   Telecom ParisTech\n   23, Avenue d'Italie, CS 51327\n  \
    \ 75214 Paris Cedex 13\n   France\n   Email: ggx@gigix.net\n   Olivier Bonaventure\n\
    \   Universite catholique de Louvain\n   Place St. Barbe 2\n   Louvain la Neuve\n\
    \   Belgium\n   Email: olivier.bonaventure@uclouvain.be\n"
