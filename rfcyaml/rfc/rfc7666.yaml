- contents:
  - "            Management Information Base for Virtual Machines\n                       Controlled
    by a Hypervisor\n"
  title: __initial_text__
- contents:
  - "Abstract\n   This document defines a portion of the Management Information Base\n
    \  (MIB) for use with network management protocols in the Internet\n   community.
    \ In particular, this specifies objects for managing\n   virtual machines controlled
    by a hypervisor (a.k.a. virtual machine\n   monitor).\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    5741.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   http://www.rfc-editor.org/info/rfc7666.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2015 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (http://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .
    . . . . .   2\n   2.  The Internet-Standard Management Framework  . . . . . .
    . . .   3\n   3.  Overview and Objectives . . . . . . . . . . . . . . . . . .
    .   3\n   4.  Structure of the VM-MIB Module  . . . . . . . . . . . . . . .   5\n
    \  5.  Relationship to Other MIB Modules . . . . . . . . . . . . . .   7\n   6.
    \ Definitions . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     6.1.
    \ VM-MIB  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n     6.2.  IANA-STORAGE-MEDIA-TYPE-MIB
    . . . . . . . . . . . . . . .  43\n   7.  IANA Considerations . . . . . . . .
    . . . . . . . . . . . . .  45\n   8.  Security Considerations . . . . . . . .
    . . . . . . . . . . .  45\n   9.  References  . . . . . . . . . . . . . . . .
    . . . . . . . . .  46\n     9.1.  Normative References  . . . . . . . . . . .
    . . . . . . .  46\n     9.2.  Informative References  . . . . . . . . . . . .
    . . . . .  47\n   Appendix A.  State Transition Table . . . . . . . . . . . .
    . . .  49\n   Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . .
    .  51\n   Contributors  . . . . . . . . . . . . . . . . . . . . . . . . . .  51\n
    \  Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  52\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   This document defines a portion of the Management Information
    Base\n   (MIB) for use with network management protocols in the Internet\n   community.
    \ In particular, this specifies objects for managing\n   virtual machines controlled
    by a hypervisor (a.k.a. virtual machine\n   monitor).  A hypervisor controls multiple
    virtual machines on a\n   single physical machine by allocating resources to each
    virtual\n   machine using virtualization technologies.  Therefore, this MIB\n
    \  module contains information on virtual machines and their resources\n   controlled
    by a hypervisor as well as information about a\n   hypervisor's hardware and software.\n
    \  The design of this MIB module has been derived from product-specific\n   MIB
    modules -- namely, a MIB module for managing guests of the Xen\n   hypervisor
    [Xen], a MIB module for managing virtual machines\n   controlled by the VMware
    hypervisor [VMware], and a MIB module using\n   the libvirt programming interface
    [libvirt] to access different\n   hypervisors.  However, this MIB module attempts
    to generalize the\n   managed objects to support other implementations of hypervisors.\n
    \  The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n
    \  \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\n
    \  document are to be interpreted as described in RFC 2119 [RFC2119].\n"
  title: 1.  Introduction
- contents:
  - "2.  The Internet-Standard Management Framework\n   For a detailed overview of
    the documents that describe the current\n   Internet-Standard Management Framework,
    please refer to section 7 of\n   RFC 3410 [RFC3410].\n   Managed objects are accessed
    via a virtual information store, termed\n   the Management Information Base or
    MIB.  MIB objects are generally\n   accessed through the Simple Network Management
    Protocol (SNMP).\n   Objects in the MIB are defined using the mechanisms defined
    in the\n   Structure of Management Information (SMI).  This memo specifies a MIB\n
    \  module that is compliant to the SMIv2, which is described in STD 58,\n   RFC
    2578 [RFC2578], STD 58, RFC 2579 [RFC2579] and STD 58, RFC 2580\n   [RFC2580].\n"
  title: 2.  The Internet-Standard Management Framework
- contents:
  - "3.  Overview and Objectives\n   This document defines a portion of MIB for the
    management of virtual\n   machines controlled by a hypervisor.  This MIB module
    consists of the\n   managed objects related to system and software information
    of a\n   hypervisor, the list of virtual machines controlled by the\n   hypervisor,
    and information of virtual resources allocated to virtual\n   machines by the
    hypervisor.  This document specifies four specific\n   types of virtual resources
    that are common to many hypervisor\n   implementations: processors (CPUs), memory,
    network interfaces\n   (NICs), and storage devices.  These managed objects are
    independent\n   of the families of hypervisors or operating systems running on\n
    \  virtual machines.\n   +------------------------------------------------------------------+\n
    \  | +-------------------------------------------------+              |\n   |
    | Virtual machine                                 |              |\n   | |                                                 |
    \             |\n   | | +---------+ +---------+ +---------+ +---------+ | .......
    \     |\n   | | | Virtual | | Virtual | | Virtual | | Virtual | |              |\n
    \  | +-| CPU     |-| memory  |-| storage |-| NIC     |-+              |\n   |
    \  +---------+ +---------+ +---------+ +---------+                |\n   |            Virtual
    resources                                     |\n   |                   ^                                              |\n
    \  |                   | Allocation using virtualization technologies |\n   |
    \                  |                                              |\n   |                   +--
    Physical resources  ._____.                |\n   |              +--------+    .--------.
    \   /       \\    +--^--+    |\n   +- - - - - - - |        | - /________/| - *\\_______/*
    - |     | - -+\n   | Hypervisor   |  CPU   |   | Memory |/   | Storage |   | NIC
    |    |\n   |              +--------+   +--------+     \\_______/    +-----+    |\n
    \  |  +-----------------------+                                       |\n   |
    \ ||     MIB objects     ||                                       |\n   |  +-----------------------+
    \                                      |\n   +------------------------------------------------------------------+\n
    \          Figure 1: An Example of a Virtualization Environment\n   On the common
    implementations of hypervisors, a hypervisor allocates\n   virtual resources from
    physical resources: virtual CPUs, virtual\n   memory, virtual storage devices,
    and virtual network interfaces to\n   virtual machines as shown in Figure 1.  Since
    the virtual resources\n   allocated to virtual machines are managed by the hypervisor,
    the MIB\n   objects are managed at the hypervisor.  In case that the objects are\n
    \  accessed through the SNMP, an SNMP agent is launched at the\n   hypervisor
    to provide access to the objects.\n   The objects are managed from the viewpoint
    of the operators of\n   hypervisors, but not the operators of virtual machines;
    that is, the\n   objects do not take into account the actual resource utilization
    on\n   each virtual machine but rather the resource allocation from the\n   physical
    resources.  For example, vmNetworkIfIndex indicates the\n   virtual interface
    associated with an interface of a virtual machine\n   at the hypervisor, and consequently,
    the 'in' and 'out' directions\n   denote 'from a virtual machine to the hypervisor'
    and 'from the\n   hypervisor to a virtual machine', respectively.  Moreover,\n
    \  vmStorageAllocatedSize denotes the size allocated by the hypervisor,\n   but
    not the size actually used by the operating system on the virtual\n   machine.
    \ This means that vmStorageDefinedSize and\n   vmStorageAllocatedSize do not take
    different values when the\n   vmStorageSourceType is 'block' or 'raw'.\n   The
    objectives of this document are the following: 1) this document\n   defines the
    MIB objects common to many hypervisors for the management\n   of virtual machines
    controlled by a hypervisor, and 2) this document\n   clarifies the relationship
    with other MIB modules for managing host\n   computers and network devices.\n"
  title: 3.  Overview and Objectives
- contents:
  - "4.  Structure of the VM-MIB Module\n   The MIB module is organized into a group
    of scalars and tables.  The\n   scalars below 'vmHypervisor' provide basic information
    about the\n   hypervisor.  The 'vmTable' lists the virtual machines (guests) that\n
    \  are known to the hypervisor.  The 'vmCpuTable' provides the mapping\n   table
    of virtual CPUs to virtual machines, including CPU time used by\n   each virtual
    CPU.  The 'vmCpuAffinityTable' provides the affinity of\n   each virtual CPU to
    a physical CPU.  The 'vmStorageTable' provides\n   the list of virtual storage
    devices and their mapping to virtual\n   machines.  In case that an entry in the
    'vmStorageTable' has a\n   corresponding parent physical storage device managed
    in\n   'vmStorageTable' of HOST-RESOURCES-MIB [RFC2790], the entry contains\n
    \  a pointer 'vmStorageParent' to the physical storage device.  The\n   'vmNetworkTable'
    provides the list of virtual network interfaces and\n   their mapping to virtual
    machines.  Each entry in the\n   'vmNetworkTable' also provides a pointer 'vmNetworkIfIndex'
    to the\n   corresponding entry in the 'ifTable' of IF-MIB [RFC2863].  In case\n
    \  that an entry in the 'vmNetworkTable' has a corresponding parent\n   physical
    network interface managed in the 'ifTable' of IF-MIB, the\n   entry contains a
    pointer 'vmNetworkParent' to the physical network\n   interface.\n   Notation:\n
    \      +-------------+\n       | vmOperState | : Finite state; the first line
    presents the\n       |             |   'vmOperState', and the second line presents
    a\n       +-------------+   notification generated if applicable.\n       + -
    - - - - - +\n       | vmOperState | : Transient state; first line presents the\n
    \      |             |   'vmOperState', and the second line presents a\n       +
    - - - - - - +   notification generated if applicable.\n       !               :
    Notification; a text followed by the symbol \"!\"\n                         denotes
    a notification generated.\n   =====================================================================\n
    \  +---------------+   + - - - - - - - -+     +------------+\n   |  suspended(6)
    |<--|  suspending(5) |     |  paused(8) |\n   | !vmSuspended  |   | !vmSuspending
    \ |     | !vmPaused  |\n   +---------------+   + - - - - - - - -+     +------------+\n
    \        |                ^                    ^\n         |                |
    \                   |\n         v                |                    |\n   +
    - - - - - - -+   +-------------+<----------+    + - - - - - - - +\n   |  resuming(7)
    |-->|  running(4) |<-------------->|  migrating(9) |\n   | !vmResuming  |   |
    !vmRunning  |                | !vmMigrating  |\n   + - - - - - - -+   +-------------+
    \               + - - - - - - - +\n                          |      ^                        ^\n
    \                         |      |                        |\n                          |
    \     +-------------------+    |\n                          |                          |
    \   |\n                          v                          v    v\n                   +
    - - - - - - - - - +          +---------------+\n                   |  shuttingdown(10)
    |--------->|  shutdown(11) |\n                   | !vmShuttingdown   |          |
    !vmShutdown   |\n                   + - - - - - - - - - +          +---------------+\n
    \                                                   ^      |\n                                                    |
    \     v !vmDeleted\n                   +--------------+   + - - - - - - - -+  (Deleted
    from\n                   |  crashed(12) |   |  preparing(3)  |   vmTable)\n                   |
    !vmCrashed   |   |                |\n                   +--------------+   + -
    - - - - - - -+\n              Figure 2: State Transition of a Virtual Machine\n
    \  The 'vmAdminState' and 'vmOperState' textual conventions define an\n   administrative
    state and an operational state model for virtual\n   machines.  Events causing
    transitions between major operational\n   states will cause the generation of
    notifications.  Per virtual\n   machine (per-VM) notifications (vmRunning, vmShutdown,
    vmPaused,\n   vmSuspended, vmCrashed, vmDeleted) are generated if\n   vmPerVMNotificationsEnabled
    is true(1).  Bulk notifications\n   (vmBulkRunning, vmBulkShutdown, vmBulkPaused,
    vmBulkSuspended,\n   vmBulkCrashed, vmBulkDeleted) are generated if\n   vmBulkNotificationsEnabled
    is true(1).  The overview of the\n   transition of 'vmOperState' by the write
    access to 'vmAdminState' and\n   the notifications generated by the operational
    state changes are\n   illustrated in Figure 2.  The detailed state transition
    is summarized\n   in Appendix A.  Note that the notifications shown in this figure
    are\n   per-VM notifications.  In the case of Bulk notifications, the prefix\n
    \  'vm' is replaced with 'vmBulk'.\n   The bulk notification mechanism is designed
    to reduce the number of\n   notifications that are trapped by an SNMP manager.
    \ This is because\n   the number of virtual machines managed by a bunch of hypervisors
    in a\n   data center possibly becomes several thousands or more, and\n   consequently,
    many notifications could be trapped if these virtual\n   machines frequently change
    their administrative state.  The per-VM\n   notifications carry more detailed
    information, but the scalability is\n   a problem.  The notification filtering
    mechanism described in\n   Section 6 of RFC 3413 [RFC3413] is used by the management\n
    \  applications to control the notifications.\n"
  title: 4.  Structure of the VM-MIB Module
- contents:
  - "5.  Relationship to Other MIB Modules\n   The HOST-RESOURCES-MIB [RFC2790] defines
    the MIB objects for managing\n   host systems.  On systems implementing the HOST-RESOURCES-MIB,
    the\n   objects of HOST-RESOURCES-MIB indicate resources of a hypervisor.\n   Some
    objects of HOST-RESOURCES-MIB are used to indicate physical\n   resources through
    indexes.  On systems implementing\n   HOST-RESOURCES-MIB, the 'vmCpuPhysIndex'
    points to the processor's\n   'hrDeviceIndex' in the 'hrProcessorTable'.  The
    'vmStorageParent'\n   also points to the storage device's 'hrStorageIndex' in
    the\n   'hrStorageTable'.\n   The IF-MIB [RFC2863] defines the MIB objects for
    managing network\n   interfaces.  Both physical and virtual network interfaces
    are\n   required to be contained in the 'ifTable' of IF-MIB.  The virtual\n   network
    interfaces in the 'ifTable' of IF-MIB are pointed from the\n   'vmNetworkTable'
    defined in this document through a pointer\n   'vmNetworkIfIndex'.  In case that
    an entry in the 'vmNetworkTable'\n   has a corresponding parent physical network
    interface managed in the\n   'ifTable' of IF-MIB, the entry contains a pointer
    'vmNetworkParent'\n   to the physical network interface.\n   The objects related
    to virtual switches are not included in the MIB\n   module defined in this document
    though virtual switches MAY be placed\n   on a hypervisor.  This is because the
    virtual network interfaces are\n   the lowest abstraction of network resources
    allocated to a virtual\n   machine.  Instead of including the objects related
    to virtual\n   switches, for example, IEEE8021-BRIDGE-MIB [IEEE8021-BRIDGE-MIB]
    and\n   IEEE8021-Q-BRIDGE-MIB [IEEE8021-Q-BRIDGE-MIB] could be used.\n   The other
    objects related to virtual machines such as management IP\n   addresses of a virtual
    machine are not included in this MIB module\n   because this MIB module defines
    the objects common to general\n   hypervisors, but they are specific to some hypervisors.
    \ They may be\n   included in the entLogicalTable of ENTITY-MIB [RFC6933].\n   The
    SNMPv2-MIB [RFC3418] provides an object 'sysObjectID' that\n   identifies the
    network management subsytem and an object 'sysUpTime'\n   that reports the uptime
    of the network management portion of the\n   system.  The HOST-RESOURCES-MIB [RFC2790]
    provides an object\n   'hrSystemUptime' that reports the uptime of the host's
    operating\n   system.  To complement these objects, the new 'vmHvUpTime' object\n
    \  reports the time since the hypervisor was last re-initialized, and\n   the
    new 'vmHvObjectID' provides an identification of the hypervisor\n   software.\n"
  title: 5.  Relationship to Other MIB Modules
- contents:
  - '6.  Definitions

    '
  - contents:
    - "6.1.  VM-MIB\n   VM-MIB DEFINITIONS ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY,
      OBJECT-TYPE, NOTIFICATION-TYPE, TimeTicks,\n       Counter64, Integer32, mib-2\n
      \          FROM SNMPv2-SMI\n       OBJECT-GROUP, MODULE-COMPLIANCE, NOTIFICATION-GROUP\n
      \          FROM SNMPv2-CONF\n       TEXTUAL-CONVENTION, PhysAddress, TruthValue\n
      \          FROM SNMPv2-TC\n       SnmpAdminString\n           FROM SNMP-FRAMEWORK-MIB\n
      \      UUIDorZero\n           FROM UUID-TC-MIB\n       InterfaceIndexOrZero\n
      \          FROM IF-MIB\n       IANAStorageMediaType\n           FROM IANA-STORAGE-MEDIA-TYPE-MIB;\n
      \  vmMIB MODULE-IDENTITY\n       LAST-UPDATED \"201510120000Z\"        -- 12
      October 2015\n       ORGANIZATION \"IETF Operations and Management Area Working
      Group\"\n       CONTACT-INFO\n               \"WG Email: opsawg@ietf.org\n               Mailing
      list subscription info:\n               https://www.ietf.org/mailman/listinfo/opsawg\n
      \              Hirochika Asai\n               The University of Tokyo\n               7-3-1
      Hongo\n               Bunkyo-ku, Tokyo  113-8656\n               Japan\n               Phone:
      +81 3 5841 6748\n               Email: panda@hongo.wide.ad.jp\n               Michael
      MacFaden\n               VMware Inc.\n               Email: mrm@vmware.com\n
      \              Juergen Schoenwaelder\n               Jacobs University\n               Campus
      Ring 1\n               Bremen 28759\n               Germany\n               Email:
      j.schoenwaelder@jacobs-university.de\n               Keiichi Shima\n               IIJ
      Innovation Institute Inc.\n               3-13 Kanda-Nishikicho\n               Chiyoda-ku,
      Tokyo  101-0054\n               Japan\n               Email: keiichi@iijlab.net\n
      \              Tina Tsou\n               Huawei Technologies (USA)\n               2330
      Central Expressway\n               Santa Clara, CA 95050\n               United
      States\n               Email: tina.tsou.zouting@huawei.com\"\n       DESCRIPTION\n
      \              \"This MIB module is for use in managing a hypervisor and\n               virtual
      machines controlled by the hypervisor.\n               Copyright (c) 2015 IETF
      Trust and the persons identified\n               as authors of the code.  All
      rights reserved.\n               Redistribution and use in source and binary
      forms, with\n               or without modification, is permitted pursuant to,
      and\n               subject to the license terms contained in, the\n               Simplified
      BSD License set forth in Section 4.c of the\n               IETF Trust's Legal
      Provisions Relating to IETF Documents\n               (http://trustee.ietf.org/license-info).\"\n
      \      REVISION \"201510120000Z\"        -- 12 October 2015\n       DESCRIPTION\n
      \              \"The initial version of this MIB, published as\n               RFC
      7666.\"\n       ::= { mib-2 236 }\n   vmNotifications OBJECT IDENTIFIER ::=
      { vmMIB 0 }\n   vmObjects       OBJECT IDENTIFIER ::= { vmMIB 1 }\n   vmConformance
      \  OBJECT IDENTIFIER ::= { vmMIB 2 }\n   -- Textual conversion definitions\n
      \  --\n   VirtualMachineIndex ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"d\"\n
      \      STATUS       current\n       DESCRIPTION\n               \"A unique value,
      greater than zero, identifying a\n               virtual machine.  The value
      for each virtual machine\n               MUST remain constant at least from
      one re-initialization\n               of the hypervisor to the next re-initialization.\"\n
      \      SYNTAX       Integer32 (1..2147483647)\n   VirtualMachineIndexOrZero
      ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"d\"\n       STATUS       current\n
      \      DESCRIPTION\n               \"This textual convention is an extension
      of the\n               VirtualMachineIndex convention.  This extension permits\n
      \              the additional value of zero.  The meaning of the value\n               zero
      is object-specific and MUST therefore be defined as\n               part of
      the description of any object that uses this\n               syntax.  Examples
      of the usage of zero might include\n               situations where a virtual
      machine is unknown, or when\n               none or all virtual machines need
      to be referenced.\"\n       SYNTAX       Integer32 (0..2147483647)\n   VirtualMachineAdminState
      ::= TEXTUAL-CONVENTION\n       STATUS      current\n       DESCRIPTION\n               \"The
      administrative state of a virtual machine:\n               running(1)    The
      administrative state of the virtual\n                             machine indicating
      the virtual machine\n                             is currently online or should
      be brought\n                             online.\n               suspended(2)
      \ The administrative state of the virtual\n                             machine
      where its memory and CPU execution\n                             state has been
      saved to persistent store\n                             and will be restored
      at next running(1).\n               paused(3)     The administrative state indicating
      the\n                             virtual machine is resident in memory but\n
      \                            is no longer scheduled to execute by the\n                             hypervisor.\n
      \              shutdown(4)   The administrative state of the virtual\n                             machine
      indicating the virtual machine\n                             is currently offline
      or should be\n                             shutting down.\"\n       SYNTAX       INTEGER
      {\n                       running(1),\n                       suspended(2),\n
      \                      paused(3),\n                       shutdown(4)\n                    }\n
      \  VirtualMachineOperState ::= TEXTUAL-CONVENTION\n       STATUS       current\n
      \      DESCRIPTION\n               \"The operational state of a virtual machine:\n
      \              unknown(1)     The operational state of the virtual\n                              machine
      is unknown, e.g., because the\n                              implementation
      failed to obtain the state\n                              from the hypervisor.\n
      \              other(2)       The operational state of the virtual\n                              machine
      indicating that an operational\n                              state is obtained
      from the hypervisor, but\n                              it is not a state defined
      in this MIB\n                              module.\n               preparing(3)
      \  The operational state of the virtual\n                              machine
      indicating the virtual machine is\n                              currently in
      the process of preparation,\n                              e.g., allocating
      and initializing virtual\n                              storage after creating
      (defining) the\n                              virtual machine.\n               running(4)
      \    The operational state of the virtual\n                              machine
      indicating the virtual machine is\n                              currently executed,
      but it is not in the\n                              process of preparing(3),
      suspending(5),\n                              resuming(7), migrating(9), and\n
      \                             shuttingdown(10).\n               suspending(5)
      \ The operational state of the virtual\n                              machine
      indicating the virtual machine is\n                              currently in
      the process of suspending\n                              to save its memory
      and CPU execution\n                              state to persistent store.
      \ This is a\n                              transient state from running(4) to\n
      \                             suspended(6).\n               suspended(6)   The
      operational state of the virtual\n                              machine indicating
      the virtual machine is\n                              currently suspended, which
      means the\n                              memory and CPU execution state of the\n
      \                             virtual machine are saved to persistent\n                              store.
      \ During this state, the virtual\n                              machine is not
      scheduled to execute by\n                              the hypervisor.\n               resuming(7)
      \   The operational state of the virtual\n                              machine
      indicating the virtual machine is\n                              currently in
      the process of resuming\n                              to restore its memory
      and CPU execution\n                              state from persistent store.
      \ This is a\n                              transient state from suspended(6)
      to\n                              running(4).\n               paused(8)      The
      operational state of the virtual\n                              machine indicating
      the virtual machine is\n                              resident in memory but
      no longer\n                              scheduled to execute by the hypervisor.\n
      \              migrating(9)   The operational state of the virtual\n                              machine
      indicating the virtual machine is\n                              currently in
      the process of migration\n                              from/to another hypervisor.\n
      \              shuttingdown(10)\n                              The operational
      state of the virtual\n                              machine indicating the virtual
      machine is\n                              currently in the process of shutting\n
      \                             down.  This is a transient state from\n                              running(4)
      to shutdown(11).\n               shutdown(11)   The operational state of the
      virtual\n                              machine indicating the virtual machine
      is\n                              down, and CPU execution is no longer\n                              scheduled
      by the hypervisor and its\n                              memory is not resident
      in the hypervisor.\n               crashed(12)    The operational state of the
      virtual\n                              machine indicating the virtual machine\n
      \                             has crashed.\"\n       SYNTAX       INTEGER {\n
      \                      unknown(1),\n                       other(2),\n                       preparing(3),\n
      \                      running(4),\n                       suspending(5),\n
      \                      suspended(6),\n                       resuming(7),\n
      \                      paused(8),\n                       migrating(9),\n                       shuttingdown(10),\n
      \                      shutdown(11),\n                       crashed(12)\n                    }\n
      \  VirtualMachineAutoStart ::= TEXTUAL-CONVENTION\n       STATUS       current\n
      \      DESCRIPTION\n               \"The autostart configuration of a virtual
      machine:\n               unknown(1)     The autostart configuration is unknown,\n
      \                             e.g., because the implementation failed\n                              to
      obtain the autostart configuration\n                              from the hypervisor.\n
      \              enabled(2)     The autostart configuration of the\n                              virtual
      machine is enabled.  The virtual\n                              machine should
      be automatically brought\n                              online at the next re-initialization
      of\n                              the hypervisor.\n               disabled(3)
      \   The autostart configuration of the\n                              virtual
      machine is disabled.  The virtual\n                              machine should
      not be automatically\n                              brought online at the next\n
      \                             re-initialization of the hypervisor.\"\n       SYNTAX
      \     INTEGER {\n                       unknown(1),\n                       enabled(2),\n
      \                      disabled(3)\n                   }\n   VirtualMachinePersistent
      ::= TEXTUAL-CONVENTION\n       STATUS       current\n       DESCRIPTION\n               \"This
      value indicates whether a virtual machine has a\n               persistent configuration,
      which means the virtual machine\n               will still exist after shutting
      down:\n               unknown(1)     The persistent configuration is unknown,\n
      \                             e.g., because the implementation failed\n                              to
      obtain the persistent configuration\n                              from the
      hypervisor. (read-only)\n               persistent(2)  The virtual machine is
      persistent, i.e.,\n                              the virtual machine will exist
      after it\n                              shuts down.\n               transient(3)
      \  The virtual machine is transient, i.e.,\n                              the
      virtual machine will not exist after\n                              it shuts
      down.\"\n       SYNTAX       INTEGER {\n                       unknown(1),\n
      \                      persistent(2),\n                       transient(3)\n
      \                   }\n   VirtualMachineCpuIndex ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT
      \"d\"\n       STATUS       current\n       DESCRIPTION\n               \"A unique
      value for each virtual machine, greater than\n               zero, identifying
      a virtual CPU assigned to a virtual\n               machine.  The value for
      each virtual CPU MUST remain\n               constant at least from one re-initialization
      of the\n               hypervisor to the next re-initialization.\"\n        SYNTAX
      \     Integer32 (1..2147483647)\n   VirtualMachineStorageIndex ::= TEXTUAL-CONVENTION\n
      \      DISPLAY-HINT \"d\"\n       STATUS       current\n       DESCRIPTION\n
      \              \"A unique value for each virtual machine, greater than\n               zero,
      identifying a virtual storage device allocated to\n               a virtual
      machine.  The value for each virtual storage\n               device MUST remain
      constant at least from one\n               re-initialization of the hypervisor
      to the next\n               re-initialization.\"\n        SYNTAX      Integer32
      (1..2147483647)\n   VirtualMachineStorageSourceType ::= TEXTUAL-CONVENTION\n
      \      STATUS       current\n       DESCRIPTION\n               \"The source
      type of a virtual storage device:\n               unknown(1)     The source
      type is unknown, e.g., because\n                              the implementation
      failed to obtain the\n                              media type from the hypervisor.\n
      \              other(2)       The source type is other than those\n                              defined
      in this conversion.\n               block(3)       The source type is a block
      device.\n               raw(4)         The source type is a raw-formatted file.\n
      \              sparse(5)      The source type is a sparse file.\n               network(6)
      \    The source type is a network device.\"\n       SYNTAX       INTEGER {\n
      \                      unknown(1),\n                       other(2),\n                       block(3),\n
      \                      raw(4),\n                       sparse(5),\n                       network(6)\n
      \                   }\n   VirtualMachineStorageAccess ::= TEXTUAL-CONVENTION\n
      \      STATUS       current\n       DESCRIPTION\n               \"The access
      permission of a virtual storage:\n               unknown(1)     The access permission
      of the virtual\n                              storage is unknown.\n               readwrite(2)
      \  The virtual storage is a read-write\n                              device.\n
      \              readonly(3)    The virtual storage is a read-only\n                              device.\"\n
      \      SYNTAX       INTEGER {\n                       unknown(1),\n                       readwrite(2),\n
      \                      readonly(3)\n                    }\n   VirtualMachineNetworkIndex
      ::= TEXTUAL-CONVENTION\n       DISPLAY-HINT \"d\"\n       STATUS       current\n
      \      DESCRIPTION\n               \"A unique value for each virtual machine,
      greater than\n               zero, identifying a virtual network interface allocated\n
      \              to the virtual machine.  The value for each virtual\n               network
      interface MUST remain constant at least from one\n               re-initialization
      of the hypervisor to the next\n               re-initialization.\"\n        SYNTAX
      \     Integer32 (1..2147483647)\n   VirtualMachineList ::= TEXTUAL-CONVENTION\n
      \      DISPLAY-HINT \"1x\"\n       STATUS       current\n       DESCRIPTION\n
      \              \"Each octet within this value specifies a set of eight\n               virtual
      machine vmIndex values, with the first octet\n               specifying virtual
      machine 1 through 8, the second octet\n               specifying virtual machine
      9 through 16, etc.  Within\n               each octet, the most significant
      bit represents the\n               lowest-numbered vmIndex, and the least significant
      bit\n               represents the highest-numbered vmIndex.  Thus, each\n               virtual
      machine of the host is represented by a single\n               bit within the
      value of this object.  If that bit has\n               a value of '1', then
      that virtual machine is included\n               in the set of virtual machines;
      the virtual machine is\n               not included if its bit has a value of
      '0'.\"\n       SYNTAX      OCTET STRING\n   -- The hypervisor group\n   --\n
      \  -- A collection of objects common to all hypervisors.\n   --\n   vmHypervisor
      \   OBJECT IDENTIFIER ::= { vmObjects 1 }\n   vmHvSoftware OBJECT-TYPE\n       SYNTAX
      \      SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"A textual description of
      the hypervisor software.  This\n               value SHOULD NOT include its
      version as it SHOULD be\n               included in 'vmHvVersion'.\"\n       ::=
      { vmHypervisor 1 }\n   vmHvVersion OBJECT-TYPE\n       SYNTAX       SnmpAdminString
      (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS       current\n
      \      DESCRIPTION\n               \"A textual description of the version of
      the hypervisor\n               software.\"\n       ::= { vmHypervisor 2 }\n
      \  vmHvObjectID OBJECT-TYPE\n       SYNTAX       OBJECT IDENTIFIER\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      vendor's authoritative identification of the\n               hypervisor software
      contained in the entity.  This value\n               is allocated within the
      SMI enterprises\n               subtree (1.3.6.1.4.1).  Note that this is different
      from\n               sysObjectID in the SNMPv2-MIB (RFC 3418) because\n               sysObjectID
      is not the identification of the hypervisor\n               software but the
      device, firmware, or management\n               operating system.\"\n       ::=
      { vmHypervisor 3 }\n   vmHvUpTime OBJECT-TYPE\n       SYNTAX       TimeTicks\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The time (in centiseconds) since the hypervisor was\n               last
      re-initialized.  Note that this is different from\n               sysUpTime
      in the SNMPv2-MIB (RFC 3418) and hrSystemUptime\n               in the HOST-RESOURCES-MIB
      (RFC 2790) because sysUpTime is\n               the uptime of the network management
      portion of the\n               system, and hrSystemUptime is the uptime of the\n
      \              management operating system but not the hypervisor\n               software.\"\n
      \      ::= { vmHypervisor 4 }\n   -- The virtual machine information\n   --\n
      \  -- A collection of objects common to all virtual machines.\n   --\n   vmNumber
      \ OBJECT-TYPE\n       SYNTAX       Integer32 (0..2147483647)\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      number of virtual machines (regardless of their\n               current state)
      present on this hypervisor.\"\n       ::= { vmObjects 2 }\n   vmTableLastChange
      \ OBJECT-TYPE\n       SYNTAX       TimeTicks\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The value
      of vmHvUpTime at the time of the last creation\n               or deletion of
      an entry in the vmTable.\"\n       ::= { vmObjects 3 }\n   vmTable OBJECT-TYPE\n
      \      SYNTAX       SEQUENCE OF VmEntry\n       MAX-ACCESS   not-accessible\n
      \      STATUS       current\n       DESCRIPTION\n               \"A list of
      virtual machine entries.  The number of\n               entries is given by
      the value of vmNumber.\"\n       ::= { vmObjects 4 }\n   vmEntry OBJECT-TYPE\n
      \      SYNTAX       VmEntry\n       MAX-ACCESS   not-accessible\n       STATUS
      \      current\n       DESCRIPTION\n               \"An entry containing management
      information applicable\n               to a particular virtual machine.\"\n
      \      INDEX   { vmIndex }\n       ::= { vmTable 1 }\n   VmEntry ::=\n       SEQUENCE
      {\n           vmIndex                 VirtualMachineIndex,\n           vmName
      \                 SnmpAdminString,\n           vmUUID                  UUIDorZero,\n
      \          vmOSType                SnmpAdminString,\n           vmAdminState
      \           VirtualMachineAdminState,\n           vmOperState             VirtualMachineOperState,\n
      \          vmAutoStart             VirtualMachineAutoStart,\n           vmPersistent
      \           VirtualMachinePersistent,\n           vmCurCpuNumber          Integer32,\n
      \          vmMinCpuNumber          Integer32,\n           vmMaxCpuNumber          Integer32,\n
      \          vmMemUnit               Integer32,\n           vmCurMem                Integer32,\n
      \          vmMinMem                Integer32,\n           vmMaxMem                Integer32,\n
      \          vmUpTime                TimeTicks,\n           vmCpuTime               Counter64\n
      \      }\n   vmIndex OBJECT-TYPE\n       SYNTAX       VirtualMachineIndex\n
      \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
      \              \"A unique value, greater than zero, identifying the\n               virtual
      machine.  The value assigned to a given virtual\n               machine may
      not persist across re-initialization of the\n               hypervisor.  A command
      generator MUST use the vmUUID to\n               identify a given virtual machine
      of interest.\"\n       ::= { vmEntry 1 }\n   vmName OBJECT-TYPE\n       SYNTAX
      \      SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"A textual name of the virtual
      machine.\"\n       ::= { vmEntry 2 }\n   vmUUID OBJECT-TYPE\n       SYNTAX       UUIDorZero\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The virtual machine's 128-bit Universally Unique\n               Identifier
      (UUID) or the zero-length string when a\n               UUID is not available.
      \ If set, the UUID MUST uniquely\n               identify a virtual machine
      from all other virtual\n               machines in an administrative domain.
      \ A zero-length\n               octet string is returned if no UUID information
      is\n               known.\"\n       ::= { vmEntry 3 }\n   vmOSType OBJECT-TYPE\n
      \      SYNTAX       SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"A textual
      description containing operating system\n               information installed
      on the virtual machine.  This\n               value corresponds to the operating
      system the hypervisor\n               assumes to be running when the virtual
      machine is\n               started.  This may differ from the actual operating\n
      \              system in case the virtual machine boots into a\n               different
      operating system.\"\n       ::= { vmEntry 4 }\n   vmAdminState OBJECT-TYPE\n
      \      SYNTAX       VirtualMachineAdminState\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The administrative
      state of the virtual machine.\"\n       ::= { vmEntry 5 }\n   vmOperState OBJECT-TYPE\n
      \      SYNTAX       VirtualMachineOperState\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The operational
      state of the virtual machine.\"\n       ::= { vmEntry 6 }\n   vmAutoStart OBJECT-TYPE\n
      \      SYNTAX       VirtualMachineAutoStart\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The autostart
      configuration of the virtual machine.  If\n               this value is enable(2),
      the virtual machine\n               automatically starts at the next initialization
      of the\n               hypervisor.\"\n       ::= { vmEntry 7 }\n   vmPersistent
      OBJECT-TYPE\n       SYNTAX       VirtualMachinePersistent\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"This
      value indicates whether the virtual machine has a\n               persistent
      configuration, which means the virtual machine\n               will still exist
      after its shutdown.\"\n       ::= { vmEntry 8 }\n   vmCurCpuNumber OBJECT-TYPE\n
      \      SYNTAX       Integer32 (0..2147483647)\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The number
      of virtual CPUs currently assigned to the\n               virtual machine.\"\n
      \      ::= { vmEntry 9 }\n   vmMinCpuNumber OBJECT-TYPE\n       SYNTAX       Integer32
      (-1|0..2147483647)\n       MAX-ACCESS   read-only\n       STATUS       current\n
      \      DESCRIPTION\n               \"The minimum number of virtual CPUs that
      are assigned to\n               the virtual machine when it is in a power-on
      state.  The\n               value -1 indicates that there is no hard boundary
      for\n               the minimum number of virtual CPUs.\"\n       ::= { vmEntry
      10 }\n   vmMaxCpuNumber OBJECT-TYPE\n       SYNTAX       Integer32 (-1|0..2147483647)\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The maximum number of virtual CPUs that are assigned to\n               the
      virtual machine when it is in a power-on state.  The\n               value -1
      indicates that there is no limit.\"\n       ::= { vmEntry 11 }\n   vmMemUnit
      OBJECT-TYPE\n       SYNTAX       Integer32 (1..2147483647)\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      multiplication unit in bytes for vmCurMem, vmMinMem,\n               and vmMaxMem.
      \ For example, when this value is 1024, the\n               memory size unit
      for vmCurMem, vmMinMem, and vmMaxMem is\n               KiB.\"\n       ::= {
      vmEntry 12 }\n   vmCurMem OBJECT-TYPE\n       SYNTAX       Integer32 (0..2147483647)\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The current memory size currently allocated to the\n               virtual
      memory module in the unit designated by\n               vmMemUnit.\"\n       ::=
      { vmEntry 13 }\n   vmMinMem OBJECT-TYPE\n       SYNTAX       Integer32 (-1|0..2147483647)\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The minimum memory size defined to the virtual machine\n               in
      the unit designated by vmMemUnit.  The value -1\n               indicates that
      there is no hard boundary for the minimum\n               memory size.\"\n       ::=
      { vmEntry 14 }\n   vmMaxMem OBJECT-TYPE\n       SYNTAX       Integer32 (-1|0..2147483647)\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The maximum memory size defined to the virtual machine\n               in
      the unit designated by vmMemUnit.  The value -1\n               indicates that
      there is no limit.\"\n       ::= { vmEntry 15 }\n   vmUpTime OBJECT-TYPE\n       SYNTAX
      \      TimeTicks\n       MAX-ACCESS   read-only\n       STATUS       current\n
      \      DESCRIPTION\n               \"The time (in centiseconds) since the administrative\n
      \              state of the virtual machine was last changed from\n               shutdown(4)
      to running(1).\"\n       ::= { vmEntry 16 }\n   vmCpuTime OBJECT-TYPE\n       SYNTAX
      \      Counter64\n       UNITS        \"microsecond\"\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The total
      CPU time used in microseconds.  If the number\n               of virtual CPUs
      is larger than 1, vmCpuTime may exceed\n               real time.\n               Discontinuities
      in the value of this counter can occur\n               at re-initialization
      of the hypervisor and\n               administrative state (vmAdminState) changes
      of the\n               virtual machine.\"\n       ::= { vmEntry 17 }\n   --
      The virtual CPU on each virtual machines\n   vmCpuTable OBJECT-TYPE\n       SYNTAX
      \      SEQUENCE OF VmCpuEntry\n       MAX-ACCESS   not-accessible\n       STATUS
      \      current\n       DESCRIPTION\n               \"The table of virtual CPUs
      provided by the hypervisor.\"\n       ::= { vmObjects 5 }\n   vmCpuEntry OBJECT-TYPE\n
      \      SYNTAX       VmCpuEntry\n       MAX-ACCESS   not-accessible\n       STATUS
      \      current\n       DESCRIPTION\n               \"An entry for one virtual
      processor assigned to a\n               virtual machine.\"\n       INDEX { vmIndex,
      vmCpuIndex }\n       ::= { vmCpuTable 1 }\n   VmCpuEntry ::=\n       SEQUENCE
      {\n           vmCpuIndex              VirtualMachineCpuIndex,\n           vmCpuCoreTime
      \          Counter64\n       }\n   vmCpuIndex OBJECT-TYPE\n       SYNTAX       VirtualMachineCpuIndex\n
      \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
      \              \"A unique value identifying a virtual CPU assigned to\n               the
      virtual machine.\"\n       ::= { vmCpuEntry 1 }\n   vmCpuCoreTime OBJECT-TYPE\n
      \      SYNTAX       Counter64\n       UNITS        \"microsecond\"\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      total CPU time used by this virtual CPU in\n               microseconds.\n               Discontinuities
      in the value of this counter can occur\n               at re-initialization
      of the hypervisor and\n               administrative state (vmAdminState) changes
      of the\n               virtual machine.\"\n       ::= { vmCpuEntry 2 }\n   --
      The virtual CPU affinity on each virtual machines\n   vmCpuAffinityTable OBJECT-TYPE\n
      \      SYNTAX       SEQUENCE OF VmCpuAffinityEntry\n       MAX-ACCESS   not-accessible\n
      \      STATUS       current\n       DESCRIPTION\n               \"A list of
      CPU affinity entries of a virtual CPU.\"\n       ::= { vmObjects 6 }\n   vmCpuAffinityEntry
      OBJECT-TYPE\n       SYNTAX       VmCpuAffinityEntry\n       MAX-ACCESS   not-accessible\n
      \      STATUS       current\n       DESCRIPTION\n               \"An entry containing
      CPU affinity associated with a\n               particular virtual machine.\"\n
      \      INDEX   { vmIndex, vmCpuIndex, vmCpuPhysIndex }\n       ::= { vmCpuAffinityTable
      1 }\n   VmCpuAffinityEntry ::=\n       SEQUENCE {\n           vmCpuPhysIndex
      \         Integer32,\n           vmCpuAffinity           INTEGER\n       }\n
      \  vmCpuPhysIndex OBJECT-TYPE\n       SYNTAX       Integer32 (1..2147483647)\n
      \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
      \              \"A value identifying a physical CPU on the hypervisor.\n               On
      systems implementing the HOST-RESOURCES-MIB, the\n               value MUST
      be the same value that is used as the index\n               in the hrProcessorTable
      (hrDeviceIndex).\"\n       ::= { vmCpuAffinityEntry 2 }\n   vmCpuAffinity OBJECT-TYPE\n
      \      SYNTAX       INTEGER {\n                       unknown(0),   -- unknown\n
      \                      enable(1),    -- enabled\n                       disable(2)
      \   -- disabled\n                    }\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"The CPU affinity of this
      virtual CPU to the physical\n               CPU represented by 'vmCpuPhysIndex'.\"\n
      \      ::= { vmCpuAffinityEntry 3 }\n   -- The virtual storage devices on each
      virtual machine.  This\n   -- document defines some overlapped objects with
      hrStorage in\n   -- HOST-RESOURCES-MIB (RFC 2790), because virtual resources
      are\n   -- allocated from the hypervisor's resources, which is the 'host\n   --
      resources'.\n   vmStorageTable OBJECT-TYPE\n       SYNTAX       SEQUENCE OF
      VmStorageEntry\n       MAX-ACCESS   not-accessible\n       STATUS       current\n
      \      DESCRIPTION\n               \"The conceptual table of virtual storage
      devices\n               attached to the virtual machine.\"\n       ::= { vmObjects
      7 }\n   vmStorageEntry OBJECT-TYPE\n       SYNTAX       VmStorageEntry\n       MAX-ACCESS
      \  not-accessible\n       STATUS       current\n       DESCRIPTION\n               \"An
      entry for one virtual storage device attached to the\n               virtual
      machine.\"\n       INDEX { vmStorageVmIndex, vmStorageIndex }\n       ::= {
      vmStorageTable 1 }\n   VmStorageEntry ::=\n       SEQUENCE {\n           vmStorageVmIndex
      \       VirtualMachineIndexOrZero,\n           vmStorageIndex          VirtualMachineStorageIndex,\n
      \          vmStorageParent         Integer32,\n           vmStorageSourceType
      \    VirtualMachineStorageSourceType,\n           vmStorageSourceTypeString\n
      \                                  SnmpAdminString,\n           vmStorageResourceID
      \    SnmpAdminString,\n           vmStorageAccess         VirtualMachineStorageAccess,\n
      \          vmStorageMediaType      IANAStorageMediaType,\n           vmStorageMediaTypeString\n
      \                                  SnmpAdminString,\n           vmStorageSizeUnit
      \      Integer32,\n           vmStorageDefinedSize    Integer32,\n           vmStorageAllocatedSize
      \ Integer32,\n           vmStorageReadIOs        Counter64,\n           vmStorageWriteIOs
      \      Counter64,\n           vmStorageReadOctets     Counter64,\n           vmStorageWriteOctets
      \   Counter64,\n           vmStorageReadLatency    Counter64,\n           vmStorageWriteLatency
      \  Counter64\n       }\n   vmStorageVmIndex OBJECT-TYPE\n       SYNTAX       VirtualMachineIndexOrZero\n
      \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
      \              \"This value identifies the virtual machine (guest) this\n               storage
      device has been allocated to.  The value zero\n               indicates that
      the storage device is currently not\n               allocated to any virtual
      machines.\"\n       ::= { vmStorageEntry 1 }\n   vmStorageIndex OBJECT-TYPE\n
      \      SYNTAX       VirtualMachineStorageIndex\n       MAX-ACCESS   not-accessible\n
      \      STATUS       current\n       DESCRIPTION\n               \"A unique value
      identifying a virtual storage device\n               allocated to the virtual
      machine.\"\n       ::= { vmStorageEntry 2 }\n   vmStorageParent OBJECT-TYPE\n
      \      SYNTAX       Integer32 (0..2147483647)\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The value
      of hrStorageIndex, which is the parent (i.e.,\n               physical) device
      of this virtual device on systems\n               implementing the HOST-RESOURCES-MIB.
      \ The value zero\n               denotes this virtual device is not any child\n
      \              represented in the hrStorageTable.\"\n       ::= { vmStorageEntry
      3 }\n   vmStorageSourceType OBJECT-TYPE\n       SYNTAX       VirtualMachineStorageSourceType\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The source type of the virtual storage device.\"\n       ::=
      { vmStorageEntry 4 }\n   vmStorageSourceTypeString OBJECT-TYPE\n       SYNTAX
      \      SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"A (detailed) textual string
      of the source type of the\n               virtual storage device.  For example,
      this represents\n               the specific format name of the sparse file.\"\n
      \      ::= { vmStorageEntry 5 }\n   vmStorageResourceID OBJECT-TYPE\n       SYNTAX
      \      SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"A textual string that represents
      the resource\n               identifier of the virtual storage.  For example,
      this\n               contains the path to the disk image file that\n               corresponds
      to the virtual storage.\"\n       ::= { vmStorageEntry 6 }\n   vmStorageAccess
      OBJECT-TYPE\n       SYNTAX       VirtualMachineStorageAccess\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      access permission of the virtual storage device.\"\n       ::= { vmStorageEntry
      7 }\n   vmStorageMediaType OBJECT-TYPE\n       SYNTAX       IANAStorageMediaType\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The media type of the virtual storage device.\"\n       ::=
      { vmStorageEntry 8 }\n   vmStorageMediaTypeString OBJECT-TYPE\n       SYNTAX
      \      SnmpAdminString (SIZE (0..255))\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"A (detailed) textual string
      of the virtual storage\n               media.  For example, this represents
      the specific driver\n               name of the emulated media such as 'IDE'
      and 'SCSI'.\"\n       ::= { vmStorageEntry 9 }\n   vmStorageSizeUnit OBJECT-TYPE\n
      \      SYNTAX       Integer32 (1..2147483647)\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The multiplication
      unit in bytes for\n               vmStorageDefinedSize and vmStorageAllocatedSize.
      \ For\n               example, when this value is 1048576, the storage size\n
      \              unit for vmStorageDefinedSize and vmStorageAllocatedSize\n               is
      MiB.\"\n       ::= { vmStorageEntry 10 }\n   vmStorageDefinedSize OBJECT-TYPE\n
      \      SYNTAX       Integer32 (-1|0..2147483647)\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The defined
      virtual storage size defined in the unit\n               designated by vmStorageSizeUnit.
      \ If this information is\n               not available, this value MUST be -1.\"\n
      \      ::= { vmStorageEntry 11 }\n   vmStorageAllocatedSize OBJECT-TYPE\n       SYNTAX
      \      Integer32 (-1|0..2147483647)\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"The storage size allocated
      to the virtual storage from\n               a physical storage in the unit designated
      by\n               vmStorageSizeUnit.  When the virtual storage is block\n               device
      or raw file, this value and vmStorageDefinedSize\n               are supposed
      to equal.  This value MUST NOT be different\n               from vmStorageDefinedSize
      when vmStorageSourceType is\n               'block' or 'raw'.  If this information
      is not available,\n               this value MUST be -1.\"\n       ::= { vmStorageEntry
      12 }\n   vmStorageReadIOs OBJECT-TYPE\n       SYNTAX       Counter64\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      number of read I/O requests.\n               Discontinuities in the value of
      this counter can occur\n               at re-initialization of the hypervisor
      and\n               administrative state (vmAdminState) changes of the\n               virtual
      machine.\"\n       ::= { vmStorageEntry 13 }\n   vmStorageWriteIOs OBJECT-TYPE\n
      \      SYNTAX       Counter64\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"The number of write I/O
      requests.\n               Discontinuities in the value of this counter can occur\n
      \              at re-initialization of the hypervisor and\n               administrative
      state (vmAdminState) changes of the\n               virtual machine.\"\n       ::=
      { vmStorageEntry 14 }\n   vmStorageReadOctets OBJECT-TYPE\n       SYNTAX       Counter64\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The total number of bytes read from this device.\n               Discontinuities
      in the value of this counter can occur\n               at re-initialization
      of the hypervisor and\n               administrative state (vmAdminState) changes
      of the\n               virtual machine.\"\n       ::= { vmStorageEntry 15 }\n
      \  vmStorageWriteOctets OBJECT-TYPE\n       SYNTAX       Counter64\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      total number of bytes written to this device.\n               Discontinuities
      in the value of this counter can occur\n               at re-initialization
      of the hypervisor and\n               administrative state (vmAdminState) changes
      of the\n               virtual machine.\"\n       ::= { vmStorageEntry 16 }\n
      \  vmStorageReadLatency OBJECT-TYPE\n       SYNTAX       Counter64\n       MAX-ACCESS
      \  read-only\n       STATUS       current\n       DESCRIPTION\n               \"The
      total number of microseconds read requests have\n               been queued
      for this device.\n               This would typically be implemented by storing
      the high\n               precision system timestamp of when the request is\n
      \              received from the virtual machine with the request, the\n               difference
      between this initial timestamp and the time\n               at which the requested
      operation has completed SHOULD be\n               converted to microseconds
      and accumulated.\n               Discontinuities in the value of this counter
      can occur at\n               re-initialization of the hypervisor and administrative\n
      \              state (vmAdminState) changes of the virtual machine.\"\n       ::=
      { vmStorageEntry 17 }\n   vmStorageWriteLatency OBJECT-TYPE\n       SYNTAX       Counter64\n
      \      MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"The total number of microseconds write requests have\n               been
      queued for this device.\n               This would typically be implemented
      by storing the high\n               precision system timestamp of when the request
      is\n               received from the virtual machine with the request; the\n
      \              difference between this initial timestamp and the time\n               at
      which the requested operation has completed SHOULD be\n               converted
      to microseconds and accumulated.\n               Discontinuities in the value
      of this counter can occur\n               at re-initialization of the hypervisor
      and\n               administrative state (vmAdminState) changes of the\n               virtual
      machine.\"\n       ::= { vmStorageEntry 18 }\n   -- The virtual network interfaces
      on each virtual machine.\n   vmNetworkTable OBJECT-TYPE\n       SYNTAX       SEQUENCE
      OF VmNetworkEntry\n       MAX-ACCESS   not-accessible\n       STATUS       current\n
      \      DESCRIPTION\n               \"The conceptual table of virtual network
      interfaces\n               attached to the virtual machine.\"\n       ::= {
      vmObjects 8 }\n   vmNetworkEntry OBJECT-TYPE\n       SYNTAX       VmNetworkEntry\n
      \      MAX-ACCESS   not-accessible\n       STATUS       current\n       DESCRIPTION\n
      \              \"An entry for one virtual network interface attached to\n               the
      virtual machine.\"\n       INDEX { vmIndex, vmNetworkIndex }\n       ::= { vmNetworkTable
      1 }\n   VmNetworkEntry ::=\n       SEQUENCE {\n           vmNetworkIndex          VirtualMachineNetworkIndex,\n
      \          vmNetworkIfIndex        InterfaceIndexOrZero,\n           vmNetworkParent
      \        InterfaceIndexOrZero,\n           vmNetworkModel          SnmpAdminString,\n
      \          vmNetworkPhysAddress    PhysAddress\n       }\n   vmNetworkIndex
      OBJECT-TYPE\n       SYNTAX       VirtualMachineNetworkIndex\n       MAX-ACCESS
      \  not-accessible\n       STATUS       current\n       DESCRIPTION\n               \"A
      unique value identifying a virtual network interface\n               allocated
      to the virtual machine.\"\n       ::= { vmNetworkEntry 1 }\n   vmNetworkIfIndex
      OBJECT-TYPE\n       SYNTAX       InterfaceIndexOrZero\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The value
      of ifIndex, which corresponds to this virtual\n               network interface.
      \ If this device is not represented in\n               the ifTable, then this
      value MUST be zero.\"\n       ::= { vmNetworkEntry 2 }\n   vmNetworkParent OBJECT-TYPE\n
      \      SYNTAX       InterfaceIndexOrZero\n       MAX-ACCESS   read-only\n       STATUS
      \      current\n       DESCRIPTION\n               \"The value of ifIndex, which
      corresponds to the parent\n               (i.e., physical) device of this virtual
      device.  The\n               value zero denotes this virtual device is not any\n
      \              child represented in the ifTable.\"\n       ::= { vmNetworkEntry
      3 }\n   vmNetworkModel OBJECT-TYPE\n       SYNTAX       SnmpAdminString (SIZE
      (0..255))\n       MAX-ACCESS   read-only\n       STATUS       current\n       DESCRIPTION\n
      \              \"A textual string containing the (emulated) model of the\n               virtual
      network interface.  For example, this value is\n               'virtio' when
      the emulation driver model is virtio.\"\n       ::= { vmNetworkEntry 4 }\n   vmNetworkPhysAddress
      OBJECT-TYPE\n       SYNTAX       PhysAddress\n       MAX-ACCESS   read-only\n
      \      STATUS       current\n       DESCRIPTION\n               \"The Media
      Access Control (MAC) address of the virtual\n               network interface.\"\n
      \      ::= { vmNetworkEntry 5 }\n   -- Notification definitions:\n   vmPerVMNotificationsEnabled
      OBJECT-TYPE\n       SYNTAX       TruthValue\n       MAX-ACCESS   read-write\n
      \      STATUS       current\n       DESCRIPTION\n               \"Indicates
      if the notification generator will send\n               notifications per virtual
      machine.  Changes to this\n               object MUST NOT persist across re-initialization
      of\n               the management system, e.g., SNMP agent.\"\n       ::= {
      vmObjects 9 }\n   vmBulkNotificationsEnabled OBJECT-TYPE\n       SYNTAX       TruthValue\n
      \      MAX-ACCESS   read-write\n       STATUS       current\n       DESCRIPTION\n
      \              \"Indicates if the notification generator will send\n               notifications
      per set of virtual machines.  Changes to\n               this object MUST NOT
      persist across re-initialization of\n               the management system, e.g.,
      SNMP agent.\"\n       ::= { vmObjects 10 }\n   vmAffectedVMs OBJECT-TYPE\n       SYNTAX
      \      VirtualMachineList\n       MAX-ACCESS   accessible-for-notify\n       STATUS
      \      current\n       DESCRIPTION\n               \"A complete list of virtual
      machines whose state has\n               changed.  This object is the only object
      sent with bulk\n               notifications.\"\n       ::= { vmObjects 11 }\n
      \  vmRunning NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmName,\n
      \                      vmUUID,\n                       vmOperState\n                    }\n
      \      STATUS       current\n       DESCRIPTION\n               \"This notification
      is generated when the operational\n               state of a virtual machine
      has been changed to\n               running(4) from some other state.  The other
      state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 1 }\n   vmShuttingdown NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of a virtual
      machine has been changed to\n               shuttingdown(10) from some other
      state.  The other state\n               is indicated by the included value of
      vmOperState.\"\n       ::= { vmNotifications 2 }\n   vmShutdown NOTIFICATION-TYPE\n
      \      OBJECTS      {\n                       vmName,\n                       vmUUID,\n
      \                      vmOperState\n                    }\n       STATUS       current\n
      \      DESCRIPTION\n               \"This notification is generated when the
      operational\n               state of a virtual machine has been changed to\n
      \              shutdown(11) from some other state.  The other state is\n               indicated
      by the included value of vmOperState.\"\n       ::= { vmNotifications 3 }\n
      \  vmPaused NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmName,\n
      \                      vmUUID,\n                       vmOperState\n                    }\n
      \      STATUS       current\n       DESCRIPTION\n               \"This notification
      is generated when the operational\n               state of a virtual machine
      has been changed to\n               paused(8) from some other state.  The other
      state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 4 }\n   vmSuspending NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of a virtual
      machine has been changed to\n               suspending(5) from some other state.
      \ The other state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 5 }\n   vmSuspended NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of a virtual
      machine has been changed to\n               suspended(6) from some other state.
      \ The other state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 6 }\n   vmResuming NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of a virtual
      machine has been changed to\n               resuming(7) from some other state.
      \ The other state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 7 }\n   vmMigrating NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of a virtual
      machine has been changed to\n               migrating(9) from some other state.
      \ The other state is\n               indicated by the included value of vmOperState.\"\n
      \      ::= { vmNotifications 8 }\n   vmCrashed NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmName,\n                       vmUUID,\n                       vmOperState\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when a virtual machine\n               has been crashed.
      \ The previous state of the virtual\n               machine is indicated by
      the included value of\n               vmOperState.\"\n       ::= { vmNotifications
      9 }\n   vmDeleted NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmName,\n
      \                      vmUUID,\n                       vmOperState,\n                       vmPersistent\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when a virtual machine\n               has been deleted.
      \ The prior state of the virtual\n               machine is indicated by the
      included value of\n               vmOperState.\"\n       ::= { vmNotifications
      10 }\n   vmBulkRunning NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to running(4) from
      any prior state, except for\n               running(4).  Management stations
      are encouraged to\n               subsequently poll the subset of virtual machines
      of\n               interest for vmOperState.\"\n       ::= { vmNotifications
      11 }\n   vmBulkShuttingdown NOTIFICATION-TYPE\n       OBJECTS      {\n                      vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to shuttingdown(10)
      from a state other than\n               shuttingdown(10).  Management stations
      are encouraged to\n               subsequently poll the subset of virtual machines
      of\n               interest for vmOperState.\"\n       ::= { vmNotifications
      12 }\n   vmBulkShutdown NOTIFICATION-TYPE\n       OBJECTS      {\n                      vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machine has been changed to\n               shutdown(11) from
      a state other than shutdown(11).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 13 }\n   vmBulkPaused
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to paused(8) from
      a state other than paused(8).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 14 }\n   vmBulkSuspending
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to suspending(5) from
      a state other than suspending(5).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 15 }\n   vmBulkSuspended
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to suspended(6) from
      a state other than suspended(6).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 16 }\n   vmBulkResuming
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to resuming(7) from
      a state other than resuming(7).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 17 }\n   vmBulkMigrating
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when the operational\n               state of one
      or more virtual machines has been changed\n               to migrating(9) from
      a state other than migrating(9).\n               Management stations are encouraged
      to subsequently poll\n               the subset of virtual machines of interest
      for\n               vmOperState.\"\n       ::= { vmNotifications 18 }\n   vmBulkCrashed
      NOTIFICATION-TYPE\n       OBJECTS      {\n                       vmAffectedVMs\n
      \                   }\n       STATUS       current\n       DESCRIPTION\n               \"This
      notification is generated when one or more virtual\n               machines
      have been crashed.  Management stations are\n               encouraged to subsequently
      poll the subset of virtual\n               machines of interest for vmOperState.\"\n
      \      ::= { vmNotifications 19 }\n   vmBulkDeleted NOTIFICATION-TYPE\n       OBJECTS
      \     {\n                       vmAffectedVMs\n                    }\n       STATUS
      \      current\n       DESCRIPTION\n               \"This notification is generated
      when one or more virtual\n               machines have been deleted.  Management
      stations are\n               encouraged to subsequently poll the subset of virtual\n
      \              machines of interest for vmOperState.\"\n       ::= { vmNotifications
      20 }\n   -- Compliance definitions:\n   vmCompliances  OBJECT IDENTIFIER ::=
      { vmConformance 1 }\n   vmGroups       OBJECT IDENTIFIER ::= { vmConformance
      2 }\n   vmFullCompliances MODULE-COMPLIANCE\n       STATUS       current\n       DESCRIPTION\n
      \              \"Compliance statement for implementations supporting\n               read/write
      access, according to the object definitions.\"\n       MODULE     -- this module\n
      \      MANDATORY-GROUPS {\n           vmHypervisorGroup,\n           vmVirtualMachineGroup,\n
      \          vmCpuGroup,\n           vmCpuAffinityGroup,\n           vmStorageGroup,\n
      \          vmNetworkGroup\n       }\n       GROUP  vmPerVMNotificationOptionalGroup\n
      \      DESCRIPTION\n               \"Support for per-VM notifications is optional.
      \ If not\n               implemented, then vmPerVMNotificationsEnabled MUST
      report\n               false(2).\"\n       GROUP  vmBulkNotificationsVariablesGroup\n
      \      DESCRIPTION\n               \"Necessary only if vmPerVMNotificationOptionalGroup
      is\n               implemented.\"\n       GROUP  vmBulkNotificationOptionalGroup\n
      \      DESCRIPTION\n               \"Support for bulk notifications is optional.
      \ If not\n               implemented, then vmBulkNotificationsEnabled MUST report\n
      \              false(2).\"\n       ::= { vmCompliances 1 }\n   vmReadOnlyCompliances
      MODULE-COMPLIANCE\n       STATUS       current\n       DESCRIPTION\n               \"Compliance
      statement for implementations supporting\n               only read-only access.\"\n
      \      MODULE     -- this module\n       MANDATORY-GROUPS {\n           vmHypervisorGroup,\n
      \          vmVirtualMachineGroup,\n           vmCpuGroup,\n           vmCpuAffinityGroup,\n
      \          vmStorageGroup,\n           vmNetworkGroup\n       }\n       OBJECT
      vmPerVMNotificationsEnabled\n       MIN-ACCESS   read-only\n       DESCRIPTION\n
      \              \"Write access is not required.\"\n       OBJECT vmBulkNotificationsEnabled\n
      \      MIN-ACCESS   read-only\n       DESCRIPTION\n               \"Write access
      is not required.\"\n       ::= { vmCompliances 2 }\n   vmHypervisorGroup OBJECT-GROUP\n
      \      OBJECTS {\n           vmHvSoftware,\n           vmHvVersion,\n           vmHvObjectID,\n
      \          vmHvUpTime,\n           vmNumber,\n           vmTableLastChange,\n
      \          vmPerVMNotificationsEnabled,\n           vmBulkNotificationsEnabled\n
      \      }\n       STATUS       current\n       DESCRIPTION\n               \"A
      collection of objects providing insight into the\n               hypervisor
      itself.\"\n        ::= { vmGroups 1 }\n   vmVirtualMachineGroup OBJECT-GROUP\n
      \      OBJECTS {\n           -- vmIndex\n           vmName,\n           vmUUID,\n
      \          vmOSType,\n           vmAdminState,\n           vmOperState,\n           vmAutoStart,\n
      \          vmPersistent,\n           vmCurCpuNumber,\n           vmMinCpuNumber,\n
      \          vmMaxCpuNumber,\n           vmMemUnit,\n           vmCurMem,\n           vmMinMem,\n
      \          vmMaxMem,\n           vmUpTime,\n           vmCpuTime\n       }\n
      \      STATUS       current\n       DESCRIPTION\n               \"A collection
      of objects providing insight into the\n               virtual machines controlled
      by a hypervisor.\"\n       ::= { vmGroups 2 }\n   vmCpuGroup OBJECT-GROUP\n
      \      OBJECTS {\n           -- vmCpuIndex,\n           vmCpuCoreTime\n       }\n
      \      STATUS       current\n       DESCRIPTION\n               \"A collection
      of objects providing insight into the\n               virtual machines controlled
      by a hypervisor.\"\n       ::= { vmGroups 3 }\n   vmCpuAffinityGroup OBJECT-GROUP\n
      \      OBJECTS {\n           -- vmCpuPhysIndex,\n           vmCpuAffinity\n
      \      }\n       STATUS       current\n       DESCRIPTION\n               \"A
      collection of objects providing insight into the\n               virtual machines
      controlled by a hypervisor.\"\n       ::= { vmGroups 4 }\n   vmStorageGroup
      OBJECT-GROUP\n       OBJECTS {\n           -- vmStorageVmIndex,\n           --
      vmStorageIndex,\n           vmStorageParent,\n           vmStorageSourceType,\n
      \          vmStorageSourceTypeString,\n           vmStorageResourceID,\n           vmStorageAccess,\n
      \          vmStorageMediaType,\n           vmStorageMediaTypeString,\n           vmStorageSizeUnit,\n
      \          vmStorageDefinedSize,\n           vmStorageAllocatedSize,\n           vmStorageReadIOs,\n
      \          vmStorageWriteIOs,\n           vmStorageReadOctets,\n           vmStorageWriteOctets,\n
      \          vmStorageReadLatency,\n           vmStorageWriteLatency\n       }\n
      \      STATUS       current\n       DESCRIPTION\n               \"A collection
      of objects providing insight into the\n               virtual storage devices
      controlled by a hypervisor.\"\n       ::= { vmGroups 5 }\n   vmNetworkGroup
      OBJECT-GROUP\n       OBJECTS {\n           -- vmNetworkIndex,\n           vmNetworkIfIndex,\n
      \          vmNetworkParent,\n           vmNetworkModel,\n           vmNetworkPhysAddress\n
      \      }\n       STATUS       current\n       DESCRIPTION\n               \"A
      collection of objects providing insight into the\n               virtual network
      interfaces controlled by a hypervisor.\"\n       ::= { vmGroups 6 }\n   vmPerVMNotificationOptionalGroup
      NOTIFICATION-GROUP\n       NOTIFICATIONS {\n           vmRunning,\n           vmShuttingdown,\n
      \          vmShutdown,\n           vmPaused,\n           vmSuspending,\n           vmSuspended,\n
      \          vmResuming,\n           vmMigrating,\n           vmCrashed,\n           vmDeleted\n
      \      }\n       STATUS       current\n       DESCRIPTION\n               \"A
      collection of notifications for per-VM notification\n               of changes
      to virtual machine state (vmOperState) as\n               reported by a hypervisor.\"\n
      \      ::= { vmGroups 7 }\n   vmBulkNotificationsVariablesGroup OBJECT-GROUP\n
      \      OBJECTS {\n           vmAffectedVMs\n       }\n       STATUS       current\n
      \      DESCRIPTION\n               \"The variables used in vmBulkNotificationOptionalGroup\n
      \              virtual network interfaces controlled by a hypervisor.\"\n       ::=
      { vmGroups 8 }\n   vmBulkNotificationOptionalGroup NOTIFICATION-GROUP\n       NOTIFICATIONS
      {\n           vmBulkRunning,\n           vmBulkShuttingdown,\n           vmBulkShutdown,\n
      \          vmBulkPaused,\n           vmBulkSuspending,\n           vmBulkSuspended,\n
      \          vmBulkResuming,\n           vmBulkMigrating,\n           vmBulkCrashed,\n
      \          vmBulkDeleted\n       }\n       STATUS       current\n       DESCRIPTION\n
      \              \"A collection of notifications for bulk notification of\n               changes
      to virtual machine state (vmOperState) as\n               reported by a given
      hypervisor.\"\n       ::= { vmGroups 9 }\n   END\n"
    title: 6.1.  VM-MIB
  - contents:
    - "6.2.  IANA-STORAGE-MEDIA-TYPE-MIB\n   IANA-STORAGE-MEDIA-TYPE-MIB DEFINITIONS
      ::= BEGIN\n   IMPORTS\n       MODULE-IDENTITY, mib-2\n           FROM SNMPv2-SMI\n
      \      TEXTUAL-CONVENTION\n           FROM SNMPv2-TC;\n   ianaStorageMediaTypeMIB
      MODULE-IDENTITY\n       LAST-UPDATED \"201510120000Z\"        -- 12 October
      2015\n       ORGANIZATION \"IANA\"\n       CONTACT-INFO\n               \"Internet
      Assigned Numbers Authority\n                Postal: ICANN\n                        12025
      Waterfront Drive, Suite 300\n                        Los Angeles, CA 90094-2536\n
      \                       United States\n                Tel:    +1 310-301-5800\n
      \               Email: iana@iana.org\"\n       DESCRIPTION\n               \"This
      MIB module defines Textual Conventions\n               representing the media
      type of a storage device.\n               Copyright (c) 2015 IETF Trust and
      the persons identified\n               as authors of the code.  All rights reserved.\n
      \              Redistribution and use in source and binary forms, with\n               or
      without modification, is permitted pursuant to, and\n               subject
      to the license terms contained in, the\n               Simplified BSD License
      set forth in Section 4.c of the\n               IETF Trust's Legal Provisions
      Relating to IETF Documents\n               (http://trustee.ietf.org/license-info).\"\n
      \         REVISION \"201510120000Z\"        -- 12 October 2015\n          DESCRIPTION\n
      \                 \"The initial version of this MIB, published as\n                  RFC
      7666.\"\n          ::= { mib-2 237 }\n   IANAStorageMediaType ::= TEXTUAL-CONVENTION\n
      \      STATUS       current\n       DESCRIPTION\n               \"The media
      type of a storage device:\n               unknown(1)     The media type is unknown,
      e.g., because\n                              the implementation failed to obtain
      the\n                              media type from the hypervisor.\n               other(2)
      \      The media type is other than those\n                              defined
      in this conversion.\n               hardDisk(3)    The media type is hard disk.\n
      \              opticalDisk(4) The media type is optical disk.\n               floppyDisk(5)
      \ The media type is floppy disk.\"\n       SYNTAX       INTEGER {\n                       other(1),\n
      \                      unknown(2),\n                       hardDisk(3),\n                       opticalDisk(4),\n
      \                      floppyDisk(5)\n                    }\n   END\n"
    title: 6.2.  IANA-STORAGE-MEDIA-TYPE-MIB
  title: 6.  Definitions
- contents:
  - "7.  IANA Considerations\n   This document defines the first version of the IANA-maintained\n
    \  IANA-STORAGE-MEDIA-TYPE-MIB module, which allows new storage media\n   types
    to be added to the enumeration in IANAStorageMediaType.  An\n   Expert Review,
    as defined in RFC 5226 [RFC5226], is REQUIRED for each\n   modification.\n   The
    MIB module in this document uses the following IANA-assigned\n   OBJECT IDENTIFIER
    values recorded in the SMI Numbers registry:\n         Descriptor                OBJECT
    IDENTIFIER value\n         ----------                -----------------------\n
    \        vmMIB                     { mib-2 236 }\n         ianaStorageMediaTypeMIB
    \  { mib-2 237 }\n"
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   This MIB module is typically implemented on the
    hypervisor not inside\n   a virtual machine.  Virtual machines, possibly under
    other\n   administrative domains, would not have access to this MIB as the SNMP\n
    \  service would typically operate in a separate management network.\n   There
    are two objects defined in this MIB module,\n   vmPerVMNotificationsEnabled and
    vmBulkNotificationsEnabled, that have\n   a MAX-ACCESS clause of read-write.  Enabling
    notifications can lead\n   to a substantial number of notifications if many virtual
    machines\n   change their state concurrently.  Hence, such objects may be\n   considered
    sensitive or vulnerable in some network environments.  The\n   support for SET
    operations in a non-secure environment without proper\n   protection can have
    a negative effect on the management system.  It\n   is RECOMMENDED that these
    objects have access of read-only instead of\n   read-write on deployments where
    SNMPv3 strong security (i.e.,\n   authentication and encryption) is not used.\n
    \  There are a number of managed objects in this MIB that may contain\n   sensitive
    information.  The objects in the vmHvSoftware and\n   vmHvVersion list information
    about the hypervisor's software and\n   version.  Some may wish not to disclose
    to others which software they\n   are running.  Further, an inventory of the running
    software and\n   versions may be helpful to an attacker who hopes to exploit software\n
    \  bugs in certain applications.  Moreover, the objects in the vmTable,\n   vmCpuTable,
    vmCpuAffinityTable, vmStorageTable, and\n   vmNetworkTable list information about
    the virtual machines and their\n   virtual resource allocation.  Some may wish
    not to disclose to others\n   how many and what virtual machines they are operating.\n
    \  It is thus important to control even GET access to these objects and\n   possibly
    to even encrypt the values of these objects when sending\n   them over the network
    via SNMP.  Not all versions of SNMP provide\n   features for such a secure environment.\n
    \  SNMPv1 by itself is not a secure environment.  Even if the network\n   itself
    is secure (for example by using IPsec), there is no control as\n   to who on the
    secure network is allowed to access and GET/SET\n   (read/change/create/delete)
    the objects in this MIB module.\n   It is recommended that the implementers consider
    using the security\n   features as provided by the SNMPv3 framework.  Specifically,
    the use\n   of the User-based Security Model [RFC3414] and the View-based Access\n
    \  Control Model [RFC3415] is recommended.\n   It is then a customer/user responsibility
    to ensure that the SNMP\n   entity giving access to an instance of this MIB is
    properly\n   configured to give access to the objects only to those principals\n
    \  (users) that have legitimate rights to indeed GET or SET\n   (change/create/delete)
    them.\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <http://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC2578]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Structure of Management Information\n              Version 2 (SMIv2)\",
      STD 58, RFC 2578,\n              DOI 10.17487/RFC2578, April 1999,\n              <http://www.rfc-editor.org/info/rfc2578>.\n
      \  [RFC2579]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Textual Conventions for SMIv2\",\n              STD 58, RFC 2579, DOI
      10.17487/RFC2579, April 1999,\n              <http://www.rfc-editor.org/info/rfc2579>.\n
      \  [RFC2580]  McCloghrie, K., Ed., Perkins, D., Ed., and J.\n              Schoenwaelder,
      Ed., \"Conformance Statements for SMIv2\",\n              STD 58, RFC 2580,
      DOI 10.17487/RFC2580, April 1999,\n              <http://www.rfc-editor.org/info/rfc2580>.\n
      \  [RFC2790]  Waldbusser, S. and P. Grillo, \"Host Resources MIB\",\n              RFC
      2790, DOI 10.17487/RFC2790, March 2000,\n              <http://www.rfc-editor.org/info/rfc2790>.\n
      \  [RFC2863]  McCloghrie, K. and F. Kastenholz, \"The Interfaces Group\n              MIB\",
      RFC 2863, DOI 10.17487/RFC2863, June 2000,\n              <http://www.rfc-editor.org/info/rfc2863>.\n
      \  [RFC3413]  Levi, D., Meyer, P., and B. Stewart, \"Simple Network\n              Management
      Protocol (SNMP) Applications\", STD 62,\n              RFC 3413, DOI 10.17487/RFC3413,
      December 2002,\n              <http://www.rfc-editor.org/info/rfc3413>.\n   [RFC3414]
      \ Blumenthal, U. and B. Wijnen, \"User-based Security Model\n              (USM)
      for version 3 of the Simple Network Management\n              Protocol (SNMPv3)\",
      STD 62, RFC 3414,\n              DOI 10.17487/RFC3414, December 2002,\n              <http://www.rfc-editor.org/info/rfc3414>.\n
      \  [RFC3415]  Wijnen, B., Presuhn, R., and K. McCloghrie, \"View-based\n              Access
      Control Model (VACM) for the Simple Network\n              Management Protocol
      (SNMP)\", STD 62, RFC 3415,\n              DOI 10.17487/RFC3415, December 2002,\n
      \             <http://www.rfc-editor.org/info/rfc3415>.\n   [RFC3418]  Presuhn,
      R., Ed., \"Management Information Base (MIB) for\n              the Simple Network
      Management Protocol (SNMP)\", STD 62,\n              RFC 3418, DOI 10.17487/RFC3418,
      December 2002,\n              <http://www.rfc-editor.org/info/rfc3418>.\n   [RFC5226]
      \ Narten, T. and H. Alvestrand, \"Guidelines for Writing an\n              IANA
      Considerations Section in RFCs\", BCP 26, RFC 5226,\n              DOI 10.17487/RFC5226,
      May 2008,\n              <http://www.rfc-editor.org/info/rfc5226>.\n   [RFC6933]
      \ Bierman, A., Romascanu, D., Quittek, J., and M.\n              Chandramouli,
      \"Entity MIB (Version 4)\", RFC 6933,\n              DOI 10.17487/RFC6933, May
      2013,\n              <http://www.rfc-editor.org/info/rfc6933>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [IEEE8021-BRIDGE-MIB]\n              IEEE,
      \"IEEE8021-BRIDGE-MIB\", October 2008,\n              <http://www.ieee802.org/1/files/public/MIBs/\n
      \             IEEE8021-BRIDGE-MIB-200810150000Z.txt>.\n   [IEEE8021-Q-BRIDGE-MIB]\n
      \             IEEE, \"IEEE8021-Q-BRIDGE-MIB\", October 2008,\n              <http://www.ieee802.org/1/files/public/MIBs/\n
      \             IEEE8021-Q-BRIDGE-MIB-200810150000Z.txt>.\n   [libvirt]  The libvirt
      developers, \"The libvirt virtialization API\",\n              <http://www.libvirt.org/>.\n
      \  [RFC3410]  Case, J., Mundy, R., Partain, D., and B. Stewart,\n              \"Introduction
      and Applicability Statements for Internet-\n              Standard Management
      Framework\", RFC 3410,\n              DOI 10.17487/RFC3410, December 2002,\n
      \             <http://www.rfc-editor.org/info/rfc3410>.\n   [VMware]   VMware,
      Inc., \"The VMware Hypervisor\",\n              <http://www.vmware.com/>.\n
      \  [Xen]      The Xen Project, \"The Xen Hypervisor\",\n              <http://www.xenproject.org/>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Appendix A.  State Transition Table\n   +--------------+----------------+--------------+--------------------+\n
    \  |    State     |   Change to    |  Next State  |    Notification    |\n   |
    \             |  vmAdminState  |              |                    |\n   |              |
    \    at the     |              |                    |\n   |              | hypervisor
    or  |              |                    |\n   |              |    (Event)     |
    \             |                    |\n   +--------------+----------------+--------------+--------------------+\n
    \  |  suspended   |    running     |   resuming   |    vmResuming |    |\n   |
    \             |                |              |   vmBulkResuming   |\n   |              |
    \               |              |                    |\n   |  suspending  |    (suspend
    \   |  suspended   |   vmSuspended |    |\n   |              |   operation    |
    \             |  vmBulkSuspended   |\n   |              |   completed)   |              |
    \                   |\n   |              |                |              |                    |\n
    \  |   running    |   suspended    |  suspending  |   vmSuspending |   |\n   |
    \             |                |              |  vmBulkSuspending  |\n   |              |
    \               |              |                    |\n   |              |    shutdown
    \   | shuttingdown |  vmShuttingdown |  |\n   |              |                |
    \             | vmBulkShuttingdown |\n   |              |                |              |
    \                   |\n   |              | (migration to  |  migrating   |   vmMigrating
    |    |\n   |              |     other      |              |  vmBulkMigrating   |\n
    \  |              |   hypervisor   |              |                    |\n   |
    \             |   initiated)   |              |                    |\n   |              |
    \               |              |                    |\n   |   resuming   |    (resume
    \    |   running    |    vmRunning |     |\n   |              |   operation    |
    \             |   vmBulkRunning    |\n   |              |   completed)   |              |
    \                   |\n   |              |                |              |                    |\n
    \  |    paused    |    running     |   running    |    vmRunning |     |\n   |
    \             |                |              |   vmBulkRunning    |\n   |              |
    \               |              |                    |\n   | shuttingdown |   (shutdown
    \   |   shutdown   |    vmShutdown |    |\n   |              |   operation    |
    \             |   vmBulkShutdown   |\n   |              |   completed)   |              |
    \                   |\n   |              |                |              |                    |\n
    \  |   shutdown   |    running     |   running    |    vmRunning |     |\n   |
    \             |                |              |   vmBulkRunning    |\n   |              |
    \               |              |                    |\n   |              | (if
    this state |  migrating   |   vmMigrating |    |\n   |              |    entry
    is    |              |  vmBulkMigrating   |\n   |              |  created by a
    \ |              |                    |\n   |              |   migration    |
    \             |                    |\n   |              | operation (*)  |              |
    \                   |\n   |              |                |              |                    |\n
    \  |              |   (deletion    |  (no state)  |    vmDeleted |     |\n   |
    \             |   operation    |              |   vmBulkDeleted    |\n   |              |
    \  completed)   |              |                    |\n   |              |                |
    \             |                    |\n   |  migrating   |   (migration   |   running
    \   |    vmRunning |     |\n   |              |   from other   |              |
    \  vmBulkRunning    |\n   |              |   hypervisor   |              |                    |\n
    \  |              |   completed)   |              |                    |\n   |
    \             |                |              |                    |\n   |              |
    (migration to  |   shutdown   |    vmShutdown |    |\n   |              |     other
    \     |              |   vmBulkShutdown   |\n   |              |   hypervisor
    \  |              |                    |\n   |              |   completed)   |
    \             |                    |\n   |              |                |              |
    \                   |\n   |  preparing   |  (preparation  |   shutdown   |    vmShutdown
    |    |\n   |              |   completed)   |              |   vmBulkShutdown   |\n
    \  |              |                |              |                    |\n   |
    \  crashed    |       -        |      -       |         -          |\n   |              |
    \               |              |                    |\n   |              |   (crashed)
    \   |   crashed    |    vmCrashed |     |\n   |              |                |
    \             |   vmBulkCrashed    |\n   |              |                |              |
    \                   |\n   |  (no state)  |  (preparation  |  preparing   |         -
    \         |\n   |              |   initiated)   |              |                    |\n
    \  |              |                |              |                    |\n   |
    \             | (migrate from  | shutdown (*) |    vmShutdown |    |\n   |              |
    \    other      |              |   vmBulkShutdown   |\n   |              |   hypervisor
    \  |              |                    |\n   |              |   initiated)   |
    \             |                    |\n   +--------------+----------------+--------------+--------------------+\n
    \                 State Transition Table for vmOperState\n"
  title: Appendix A.  State Transition Table
- contents:
  - "Acknowledgements\n   The authors would like to thank Andy Bierman, David Black,
    Joe Marcus\n   Clarke, C.M. Heard, Joel Jaeggli, Tom Petch, Randy Presuhn, and
    Ian\n   West for providing helpful comments during the development of this\n   specification.\n
    \  Juergen Schoenwaelder was partly funded by Flamingo, a Network of\n   Excellence
    project (ICT-318488) supported by the European Commission\n   under its Seventh
    Framework Programme.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   Yuji Sekiya\n   The University of Tokyo\n   2-11-16 Yayoi\n
    \  Bunkyo-ku, Tokyo 113-8658\n   Japan\n   Email: sekiya@wide.ad.jp\n   Cathy
    Zhou\n   Huawei Technologies\n   Bantian, Longgang District\n   Shenzhen 518129\n
    \  China\n   Email: cathyzhou@huawei.com\n   Hiroshi Esaki\n   The University
    of Tokyo\n   7-3-1 Hongo\n   Bunkyo-ku, Tokyo 113-8656\n   Japan\n   Email: hiroshi@wide.ad.jp\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Hirochika Asai\n   The University of Tokyo\n   7-3-1 Hongo\n
    \  Bunkyo-ku, Tokyo  113-8656\n   Japan\n   Phone: +81 3 5841 6748\n   Email:
    panda@hongo.wide.ad.jp\n   Michael MacFaden\n   VMware Inc.\n   Email: mrm@vmware.com\n
    \  Juergen Schoenwaelder\n   Jacobs University\n   Campus Ring 1\n   Bremen 28759\n
    \  Germany\n   Email: j.schoenwaelder@jacobs-university.de\n   Keiichi Shima\n
    \  IIJ Innovation Institute Inc.\n   2-10-2 Fujimi\n   Chiyoda-ku, Tokyo  102-0071\n
    \  Japan\n   Email: keiichi@iijlab.net\n   Tina Tsou\n   Huawei Technologies (USA)\n
    \  2330 Central Expressway\n   Santa Clara, CA  95050\n   United States\n   Email:
    tina.tsou.zouting@huawei.com\n"
  title: Authors' Addresses
