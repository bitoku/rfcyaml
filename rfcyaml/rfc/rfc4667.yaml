- contents:
  - "          Layer 2 Virtual Private Network (L2VPN) Extensions\n                 for
    Layer 2 Tunneling Protocol (L2TP)\n"
  title: __initial_text__
- contents:
  - "Status of This Memo\n   This document specifies an Internet standards track protocol
    for the\n   Internet community, and requests discussion and suggestions for\n
    \  improvements.  Please refer to the current edition of the \"Internet\n   Official
    Protocol Standards\" (STD 1) for the standardization state\n   and status of this
    protocol.  Distribution of this memo is unlimited.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2006).\n"
  title: Copyright Notice
- contents:
  - "Abstract\n   The Layer 2 Tunneling Protocol (L2TP) provides a standard method
    for\n   setting up and managing L2TP sessions to tunnel a variety of L2\n   protocols.
    \ One of the reference models supported by L2TP describes\n   the use of an L2TP
    session to connect two Layer 2 circuits attached\n   to a pair of peering L2TP
    Access Concentrators (LACs), which is a\n   basic form of Layer 2 Virtual Private
    Network (L2VPN).  This document\n   defines the protocol extensions for L2TP to
    set up different types of\n   L2VPNs in a unified fashion.\n"
  title: Abstract
- contents:
  - "Table of Contents\n   1. Introduction ....................................................2\n
    \     1.1. Specification of Requirements ..............................2\n   2.
    Network Reference Model .........................................2\n   3. Forwarder
    Identifier ............................................3\n   4. Protocol Components
    .............................................4\n      4.1. Control Messages ...........................................4\n
    \     4.2. Existing AVPs for L2VPN ....................................4\n      4.3.
    New AVPs for L2VPN .........................................5\n      4.4. AVP
    Interoperability .......................................7\n   5. Signaling Procedures
    ............................................7\n      5.1. Overview ...................................................7\n
    \     5.2. Pseudowire Tie Detection ...................................8\n      5.3.
    Generic Algorithm ..........................................9\n   6. IANA Considerations
    ............................................12\n   7. Security Considerations
    ........................................12\n   8. Acknowledgement ................................................13\n
    \  9. References .....................................................13\n      9.1.
    Normative References ......................................13\n      9.2. Informative
    References ....................................13\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   [RFC3931] defines a dynamic tunneling mechanism to carry
    multiple\n   Layer 2 protocols besides Point-to-Point Protocol (PPP), the only\n
    \  protocol supported in [RFC2661], over a packet-based network.  The\n   baseline
    protocol supports various types of applications, which have\n   been highlighted
    in the different Layer 2 Tunneling Protocol (L2TP)\n   reference models in [RFC3931].
    \ An L2TP Access Concentrator (LAC) is\n   an L2TP Control Connection Endpoint
    (LCCE) that cross-connects\n   attachment circuits and L2TP sessions.  Layer 2
    Virtual Private\n   Network (L2VPN) applications are typically in the scope of
    the LAC-\n   LAC reference model.\n   This document discusses the commonalities
    and differences among L2VPN\n   applications with respect to using L2TPv3 as the
    signaling protocol.\n   In this document, the acronym \"L2TP\" refers to L2TPv3
    or L2TP in\n   general.\n"
  - contents:
    - "1.1.  Specification of Requirements\n   The key words \"MUST\", \"MUST NOT\",
      \"REQUIRED\", \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",
      \"MAY\", and \"OPTIONAL\" in this\n   document are to be interpreted as described
      in [RFC2119].\n"
    title: 1.1.  Specification of Requirements
  title: 1.  Introduction
- contents:
  - "2.  Network Reference Model\n   In the LAC-LAC reference model, a LAC serves
    as a cross-connect\n   between attachment circuits and L2TP sessions.  Each L2TP
    session\n   acts as an emulated circuit, also known as pseudowire.  A pseudowire\n
    \  is used to bind two \"forwarders\" together.  For different L2VPN\n   applications,
    different types of forwarders are defined.\n   In the L2VPN framework [L2VPNFW],
    a LAC is a Provider Edge (PE)\n   device.  LAC and PE are interchangeable terms
    in the context of this\n   document.  Remote systems in the LAC-LAC reference
    model are Customer\n   Edge (CE) devices.\n   +----+  L2  +----+                      +----+
    \ L2  +----+\n   | CE |------| PE |....[core network]....| PE |------| CE |\n
    \  +----+      +----+                      +----+      +----+\n                    |<-
    emulated service ->|\n         |<----------------- L2 service -------------->|\n
    \                 L2VPN Network Reference Model\n   In a simple cross-connect
    application, an attachment circuit is a\n   forwarder directly bound to a pseudowire.
    \ It is a one-to-one\n   mapping.  Traffic received from the attachment circuit
    on a local PE\n   is forwarded to the remote PE through the pseudowire.  When
    the\n   remote PE receives traffic from the pseudowire, it forwards the\n   traffic
    to the corresponding attachment circuit on its end.  The\n   forwarding decision
    is based on the attachment circuit or pseudowire\n   demultiplexing identifier.\n
    \  With Virtual Private LAN Service (VPLS), a Virtual Switching Instance\n   (VSI)
    is a forwarder connected to one or more attachment circuits and\n   pseudowires.
    \ A single pseudowire is used to connect a pair of VSIs\n   on two peering PEs.
    \ Traffic received from an attachment circuit or a\n   pseudowire is first forwarded
    to the corresponding VSI based on the\n   attachment circuit or pseudowire demultiplexing
    identifier.  The VSI\n   performs additional lookup to determine where to further
    forward the\n   traffic.\n   With Virtual Private Wire Service (VPWS), attachment
    circuits are\n   grouped into \"colored pools\".  Each pool is a forwarder and
    is\n   connected through a network of point-to-point cross-connects.  The\n   data
    forwarding perspective is identical to the cross-connect\n   application.  However,
    constructing colored pools involves more\n   complicated signaling procedures.\n"
  title: 2.  Network Reference Model
- contents:
  - "3.  Forwarder Identifier\n   A forwarder identifier is assigned to each forwarder
    on a given PE\n   and is unique in the context of the PE.  It is defined as the\n
    \  concatenation of an Attachment Group Identifier (AGI) and an\n   Attachment
    Individual Identifier (AII), denoted as <AGI, AII>.  The\n   AGI is used to group
    a set of forwarders together for signaling\n   purposes.  An AII is used to distinguish
    forwarders within a group.\n   AII can be unique on a per-platform or per-group
    basis.\n   As far as the signaling procedures are concerned, a forwarder\n   identifier
    is an arbitrary string of bytes.  It is up to\n   implementations to decide the
    values for AGI and AII.\n   When connecting two forwarders together, both MUST
    have the same AGI\n   as part of their forwarder identifiers.  The AII of the
    source\n   forwarder is known as the Source AII (SAII), and the AII of the\n   target
    forwarder is known as the Target AII (TAII).  Therefore, the\n   source forwarder
    and target forwarder can be denoted as <AGI, SAII>\n   and <AGI, TAII>, respectively.\n"
  title: 3.  Forwarder Identifier
- contents:
  - '4.  Protocol Components

    '
  - contents:
    - "4.1.  Control Messages\n   L2TP defines two sets of session management procedures:
      incoming call\n   and outgoing call.  Even though it is entirely possible to
      use the\n   outgoing call procedures for signaling L2VPNs, the incoming call\n
      \  procedures have some advantages in terms of the relevance of the\n   semantics.
      \ [PWE3L2TP] gives more details on why the incoming call\n   procedures are
      more appropriate for setting up pseudowires.\n   The signaling procedures for
      L2VPNs described in the following\n   sections are based on the Control Connection
      Management and the\n   Incoming Call procedures, defined in Sections 3.3 and
      3.4.1 of\n   [RFC3931], respectively.  L2TP control message types are defined
      in\n   Section 3.1 of [RFC3931].  This document references the following\n   L2TP
      control messages:\n     Start-Control-Connection-Request (SCCRQ)\n     Start-Control-Connection-Reply
      \  (SCCRP)\n     Incoming-Call-Request            (ICRQ)\n     Incoming-Call-Reply
      \             (ICRP)\n     Incoming-Call-Connected          (ICCN)\n     Set-Link-Info
      \                   (SLI)\n"
    title: 4.1.  Control Messages
  - contents:
    - "4.2.  Existing AVPs for L2VPN\n   The following Attribute Value Pairs (AVPs),
      defined in Sections\n   5.4.3, 5.4.4, and 5.4.5 of [RFC3931], are used for signaling
      L2VPNs.\n   Router ID\n      The Router ID sent in SCCRQ and SCCRP during control
      connection\n      setup establishes the unique identity of each PE.\n   Pseudowire
      Capabilities List\n      The Pseudowire Capabilities List sent in the SCCRQ
      and SCCRP\n      indicates the pseudowire types supported by the sending PE.
      \ It\n      merely serves as an advertisement to the receiving PE.  Its\n      content
      should not affect the control connection setup.\n      Before a local PE initiates
      a session of a particular pseudowire\n      type to a remote PE, it MUST examine
      whether the remote PE has\n      advertised this pseudowire type in this AVP
      and SHOULD NOT attempt\n      to initiate the session if the intended pseudowire
      type is not\n      supported by the remote PE.\n   Pseudowire Type\n      The
      Pseudowire Type sent in ICRQ signals the intended pseudowire\n      type to
      the receiving PE.  The receiving PE checks it against its\n      local pseudowire
      capabilities list.  If it finds a match, it\n      responds with an ICRP without
      a Pseudowire Type AVP, which\n      implicitly acknowledges its acceptance of
      the intended pseudowire.\n      If it does not find a match, it MUST respond
      with a Call-\n      Disconnect-Notify (CDN), with an \"unsupported pseudowire
      type\"\n      result code.\n   L2-Specific Sublayer\n      The L2-Specific Sublayer
      can be sent in ICRQ, ICRP, and ICCN.  If\n      the receiving PE supports the
      specified L2-Specific Sublayer, it\n      MUST include the identified L2-Specific
      Sublayer in its data\n      packets sent to the sending PE.  Otherwise, it MUST
      reject the\n      connection by sending a CDN to the sending PE.\n   Circuit
      Status\n      The Circuit Status is sent in both ICRQ and ICRP to inform the\n
      \     receiving PE about the circuit status on the sending PE.  It can\n      also
      be sent in ICCN and SLI to update the status.\n   Remote End Identifier\n      The
      TAII value is encoded in the Remote End ID AVP and sent in\n      ICRQ along
      with the optional AGI to instruct the receiving PE to\n      bind the proposed
      pseudowire to the forwarder that matches the\n      specified forwarder identifier.\n"
    title: 4.2.  Existing AVPs for L2VPN
  - contents:
    - "4.3.  New AVPs for L2VPN\n   Attachment Group Identifier\n      The AGI AVP,
      Attribute Type 89, is an identifier used to associate\n      a forwarder to
      a logical group.  The AGI AVP is used in\n      conjunction with the Local End
      ID AVP and Remote End ID AVP, which\n      encode the SAII and TAII, respectively,
      to identify a specific\n      forwarder.  When the AGI AVP is omitted in the
      control messages or\n      contains a zero-length value, the forwarders are
      considered to use\n      the default AGI.  Note that there is only one designated
      default\n      AGI value for all forwarders.\n      The Attribute Value field
      for this AVP has the following format:\n       0                   1                   2
      \                  3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3
      4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |M|H|0|0|0|0|    Length         |              0                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |               89              |      AGI (variable length)    |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     The AGI field is a variable-length field.  This AVP MAY be present\n      in
      ICRQ.\n      This AVP MAY be hidden (the H bit MAY be 0 or 1).  The hiding of\n
      \     AVP attribute values is defined in Section 5.3 of [RFC3931].  The\n      M
      bit for this AVP SHOULD be set to 0.  The Length (before hiding)\n      of this
      AVP is 6 octets plus the length of the AGI field.\n   Local End ID\n      The
      Local End ID AVP, Attribute Type 90, encodes the SAII value.\n      The SAII
      may also be used in conjunction with the TAII to detect\n      pseudowire ties.
      \ When it is omitted in the control messages, it\n      is assumed that it has
      the same value as the TAII.\n      The Attribute Value field for this AVP has
      the following format:\n       0                   1                   2                   3\n
      \      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |M|H|0|0|0|0|    Length         |              0                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |               90              |       SAII (variable length)  |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     The SAII field is a variable-length field.  This AVP MAY be\n      present
      in ICRQ.\n      This AVP MAY be hidden (the H bit MAY be 0 or 1).  The M bit
      for\n      this AVP SHOULD be set to 0.  The Length (before hiding) of this\n
      \     AVP is 6 octets plus the length of the SAII field.\n   Interface Maximum
      Transmission Unit\n      The Interface Maximum Transmission Unit (MTU) AVP,
      Attribute Type\n      91, indicates the MTU in octets of a packet that can be
      sent out\n      from the CE-facing interface.  The MTU values of a given\n      pseudowire,
      if advertised in both directions, MUST be identical.\n      If they do not match,
      the pseudowire SHOULD NOT be established.\n      When this AVP is omitted in
      the control messages in either\n      direction, it is assumed that the remote
      PE has the same interface\n      MTU as the local PE for the pseudowire being
      signaled.\n      The Attribute Value field for this AVP has the following format:\n
      \      0                   1                   2                   3\n       0
      1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |M|H|0|0|0|0|    Length         |              0                |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     |               91              |          Interface MTU        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n
      \     The Interface MTU field is a 2-octet integer value.  This AVP MAY\n      be
      present in ICRQ and ICRP.  When a PE receives an Interface MTU\n      AVP with
      an MTU value different from its own, it MAY respond with\n      a CDN with a
      new result code indicating the disconnect cause.\n        23 - Mismatching interface
      MTU\n      This AVP MAY be hidden (the H bit MAY be 0 or 1).  The M bit for\n
      \     this AVP SHOULD be set to 0.  The Length (before hiding) of this\n      AVP
      is 8 octets.\n"
    title: 4.3.  New AVPs for L2VPN
  - contents:
    - "4.4.  AVP Interoperability\n   To ensure interoperability, the mandatory (M)
      bit settings of the\n   existing AVPs used in L2VPN applications should be the
      same as those\n   specified in [RFC3931].  The generic M-bit processing is described
      in\n   Section 5.2 of [RFC3931].  Setting the M-bit of the new AVPs to 1\n   will
      impair interoperability.\n"
    title: 4.4.  AVP Interoperability
  title: 4.  Protocol Components
- contents:
  - '5. Signaling Procedures

    '
  - contents:
    - "5.1.  Overview\n   Assume that a PE assigns a forwarder identifier to one of
      its local\n   forwarders and that it knows it needs to set up a pseudowire to
      a\n   remote forwarder on a remote PE that has a certain Forwarder ID.\n   This
      knowledge can be obtained either through manual configuration or\n   some auto-discovery
      procedure.\n   Before establishing the intended pseudowire, each pair of peering
      PEs\n   exchanges control connection messages to establish a control\n   connection.
      \ Each advertises its supported pseudowire types, as\n   defined in [PWE3IANA],
      in the Pseudowire Capabilities List AVP.\n   After the control connection is
      established, the local PE examines\n   whether the remote PE supports the pseudowire
      type it intends to set\n   up.  Only if the remote PE supports the intended
      pseudowire type\n   should it initiate a pseudowire connection request.\n   When
      the local PE receives an ICRQ for a pseudowire connection, it\n   examines the
      forwarder identifiers encoded in the AGI, SAII, and TAII\n   in order to determine
      the following:\n     - Whether it has a local forwarder with the forwarder identifier\n
      \      value specified in the ICRQ.\n     - Whether the remote forwarder with
      the forwarder identifier\n       specified in the ICRQ is allowed to connect
      with this local\n       forwarder.\n   If both conditions are met, it sends
      an ICRP to the remote PE to\n   accept the connection request.  If either of
      the two conditions\n   fails, it sends a CDN to the remote PE to reject the
      connection\n   request.\n   The local PE can optionally include a result code
      in the CDN to\n   indicate the disconnect cause.  The possible result codes
      are\n     24 - Attempt to connect to non-existent forwarder\n     25 - Attempt
      to connect to unauthorized forwarder\n"
    title: 5.1.  Overview
  - contents:
    - "5.2.  Pseudowire Tie Detection\n   Conceivably in the network reference models,
      as either PE may\n   initiate a pseudowire to another PE at any time, the PEs
      could end up\n   initiating a pseudowire to each other simultaneously.  In order
      to\n   avoid setting up duplicated pseudowires between two forwarders, each\n
      \  PE must be able to independently detect such a pseudowire tie.  The\n   following
      procedures need to be followed to detect a tie:\n   If both TAII and SAII are
      present in the ICRQ, the receiving PE\n   compares the TAII and SAII against
      the SAII and TAII previously sent\n   to the sending PE.  If the received TAII
      matches the sent SAII and\n   the received SAII matches the sent TAII, a tie
      is detected.\n   If only the TAII is present in the ICRQ, the SAII is assumed
      to have\n   the same value as the TAII.  The receiving PE compares the received\n
      \  TAII with the SAII that it previously sent to the sending PE.  If the\n   SAII
      in that ICRQ is also omitted, then the value encoded in the sent\n   TAII is
      used for comparison.  If they match, a tie is detected.\n   If the AGI is present,
      it is first prepended to the TAII and SAII\n   values before the tie detection
      occurs.\n   Once a tie is discovered, the PE uses the standard L2TP tie breaking\n
      \  procedure, as described in Section 5.4.4 of [RFC3931], to disconnect\n   the
      duplicated pseudowire.\n"
    title: 5.2.  Pseudowire Tie Detection
  - contents:
    - "5.3.  Generic Algorithm\n   The following uses a generic algorithm to illustrate
      the protocol\n   interactions when constructing an L2VPN using L2TP signaling.\n
      \  Each PE first forms a list, SOURCE_FORWARDERS, consisting of all\n   local
      forwarders of a given VPN.  Then it puts all local forwarders\n   that need
      to be interconnected and all remote forwarders of the same\n   VPN into another
      list, TARGET_FORWARDERS.  The formation of the\n   network topology depends
      on the content in the SOURCE_FORWARDERS and\n   TARGET_FORWARDERS lists.  These
      two lists can be constructed by\n   manual configuration or some auto-discovery
      procedure.\n   The algorithm is used to set up a full mesh of interconnections\n
      \  between SOURCE_FORWARDERS and TARGET_FORWARDERS.  An L2VPN is formed\n   when
      the algorithm is finished in every participating PE of this\n   L2VPN.\n     1.
      \ Pick the next forwarder, from SOURCE_FORWARDERS.  If no\n         forwarder
      is available for processing, the processing is\n         complete.\n     2.
      \ Pick the next forwarder, from TARGET_FORWARDERS.  If no\n         forwarder
      is available for processing, go back to step 1.\n     3.  If the two forwarders
      are associated with different Router\n         IDs, a pseudowire must be established
      between them.  Proceed\n         to step 6.\n     4.  Compare the <AGI, AII>
      values of the two forwarders.  If\n         they match, the source and target
      forwarders are the same,\n         so no more action is necessary.  Go back
      to step 2.\n     5.  As the source and target forwarders both reside on the
      local\n         PE, no pseudowire is needed.  The PE simply creates a local\n
      \        cross-connect between the two forwarders.  Go back to step 2.\n     6.
      \ As the source and target forwarders reside on different PEs,\n         a pseudowire
      must be established between them.  The PE first\n         examines whether the
      source forwarder has already established a\n         pseudowire to the target
      forwarder.  If so, go back to step 2.\n     7.  If no pseudowire is already
      established between the source and\n         target forwarders, the local PE
      obtains the address of the\n         remote PE and establishes a control connection
      to the remote\n         PE if one does not already exist.\n     8.  The local
      PE sends an ICRQ to the remote PE.  The AGI, TAII,\n         and SAII values
      are encoded in the AGI AVP, the Remote End ID\n         AVP, and the Local End
      ID AVP, respectively.\n     9.  If the local PE receives a response corresponding
      to the\n         ICRQ it just sent, proceed to step 10.  Otherwise, if the\n
      \        local PE receives an ICRQ from the same remote PE, proceed\n         to
      step 11.\n     10. The local PE receives a response from the remote PE.  If\n
      \        it is a CDN, go back to step 2.  If it's an ICRP, the local\n         PE
      binds the source forwarder to the pseudowire and sends\n         an ICCN to
      the remote PE.  Go back to step 2.\n     11. If the local PE receives an ICRQ
      from the same remote PE,\n         it needs to perform session tie detection,
      as described in\n         Section 5.2.  If a session tie is detected, the PE
      performs\n         tie breaking.\n     12. If the local PE loses the tie breaker,
      it sends a CDN with\n         the result code that indicates that the disconnection
      is due to\n         losing the tie breaker.  Proceed to step 14.\n     13. If
      the local PE wins the tie breaker, it ignores the remote\n         PE's ICRQ,
      but acknowledges receipt of the control message\n         and continues waiting
      for the response from the remote PE.\n         Go to step 10.\n     14. The
      local PE determines whether it should accept the\n         connection request,
      as described in Section 5.1.\n         If it accepts the ICRQ, it sends an ICRP
      to the remote PE.\n     15. The local PE receives a response from the remote
      PE.  If\n         it is a CDN, go back to step 2.  If it is an ICCN, the local\n
      \        PE binds the source forwarder to the pseudowire, go back\n         to
      step 2.\n   The following diagram illustrates the above procedure:\n          --------->
      \    Pick Next\n          |           Source Forwarder\n          |                 |\n
      \         |                 |\n          |                 v                  N\n
      \         |        Found Source Forwarder? ----------> End\n          |                 |\n
      \         |              Y  |\n          |                 v\n          |              Pick
      Next     <--------------------------------\n          |           Target Forwarder
      \                                |\n          |                 |                                          |\n
      \         |                 |                                          |\n          |
      \ N              v                                          |\n          --------
      Found Target Forwarder?                             |\n                            |
      \                                         |\n                         Y  |                                          |\n
      \                           v             Y                        Y   |\n                      Same
      Router ID? ------> Same Forwarder ID? ------|\n                            |
      \                        |                |\n                         N  |                      N
      \ |                |\n                            |                         v
      \               |\n                            |                      Create
      Local -------|\n                            v                      Cross-connect
      \      |\n                    Pseudowire Already    Y                            |\n
      \                   Established Between -------------------------------|\n                    Source
      and Target?                                 |\n                            |
      \                                         |\n                         N  |                                          |\n
      \                           v                                          |\n                 Local
      Initiates Pseudowire                            |\n               Connection
      Request to Remote                            |\n                            |
      \                                         |\n                            |                                          |\n
      \                           v                                          |\n      ------->
      \   Local Wait for Message                               |\n      |           -----
      from Remote   --------------                   |\n      |           |                                |
      \                  |\n      |           |                                |                   |\n
      \     |           v                                v                   |\n      |
      \  Local Receives Pseudowire      Local Receives Pseudowire     |\n      |     Connection
      Request             Connection Response         |\n      |       from Remote
      \                    from Remote              |\n      |           |                                |
      \                  |\n      |           |                                |                   |\n
      \     |           v                                v             N     |\n      |
      \  Perform Pseudowire              Connection Accepted? --------|\n      |   Tie
      Detection                            |                   |\n      |           |
      \                            Y  |                   |\n      |           |                                v
      \                  |\n      |           |                        Local Binds
      Source ---------|\n      |           |                      Forwarder to Pseudowire
      \      |\n      |           |                                                    |\n
      \     |           v             N                  N                   |\n      |
      \      Tie Detected?  -----> Accept Remote ----->  Reject ------|\n      |           |
      \            Connection Request?    Remote Request  |\n      |        Y  |                        ^
      \  |                       |\n      |           v                        |   |
      \  Y                   |\n      |   Perform Tie Breaking             |   ------>
      \ Local Binds ----\n      |           |                        |         Source
      Forwarder\n      |           |                        |           to Pseudowire\n
      \     |           v             N          |\n      |   Won Tie Breaking?  ------>
      \  Disconnect\n      |           |                  Local Connection\n      |
      \       Y  |\n      |           v\n      ------ Ignore Remote\n            Connection
      Request\n"
    title: 5.3.  Generic Algorithm
  title: 5. Signaling Procedures
- contents:
  - "6.  IANA Considerations\n   The IANA registry procedure in this document follows
    that in Section\n   10 of [RFC3931].  The IANA has assigned the following new
    values for\n   existing registries managed by IANA.\n   This document defines
    three new L2TP control message Attribute Value\n   Pairs (AVPs) that have been
    assigned by the IANA.  These are\n   described in Section 4.3 and are summarized
    below:\n     89 - Attachment Group Identifier\n     90 - Local End Identifier\n
    \    91 - Interface Maximum Transmission Unit\n   Sections 4.3 and 5.1 define
    three new result codes for the CDN\n   message that have been assigned by the
    IANA:\n     23 - Mismatching interface MTU\n     24 - Attempt to connect to non-existent
    forwarder\n     25 - Attempt to connect to unauthorized forwarder\n"
  title: 6.  IANA Considerations
- contents:
  - "7.  Security Considerations\n   This specification does not introduce any additional
    security\n   considerations beyond those discussed in [RFC3931] and [L2VPNFW].\n"
  title: 7.  Security Considerations
- contents:
  - "8.  Acknowledgement\n   The author would like to thank Mark Townsley and Carlos
    Pignataro for\n   their valuable input.\n"
  title: 8.  Acknowledgement
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119, March
      1997.\n   [RFC3931]  Lau, J., Townsley, M., and I. Goyret, \"Layer Two Tunneling\n
      \             Protocol - Version 3 (L2TPv3)\", RFC 3931, March 2005.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [PWE3IANA] Martini, L., \"IANA Allocations
      for Pseudowire Edge to Edge\n              Emulation (PWE3)\", BCP 116, RFC
      4446, April 2006.\n   [L2VPNFW]  Andersson L., Ed. and E. Rosen, Ed., \"Framework
      for Layer\n              2 Virtual Private Networks (L2VPNs)\", RFC 4664, September\n
      \             2006.\n   [PWE3L2TP] W. Townsley, \"Pseudowires and L2TPv3\",
      Work in Progress.\n   [RFC2661]  Townsley, W., Valencia, A., Rubens, A., Pall,
      G., Zorn,\n              G., and B. Palter, \"Layer Two Tunneling Protocol \"L2TP\"\",\n
      \             RFC 2661, August 1999.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Author's Address\n   Wei Luo\n   Cisco Systems, Inc.\n   170 West Tasman Drive\n
    \  San Jose, CA 95134\n   EMail: luo@cisco.com\n"
  title: Author's Address
- contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2006).\n   This
    document is subject to the rights, licenses and restrictions\n   contained in
    BCP 78, and except as set forth therein, the authors\n   retain all their rights.\n
    \  This document and the information contained herein are provided on an\n   \"AS
    IS\" basis and THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS\n   OR IS SPONSORED
    BY (IF ANY), THE INTERNET SOCIETY AND THE INTERNET\n   ENGINEERING TASK FORCE
    DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED,\n   INCLUDING BUT NOT LIMITED TO
    ANY WARRANTY THAT THE USE OF THE\n   INFORMATION HEREIN WILL NOT INFRINGE ANY
    RIGHTS OR ANY IMPLIED\n   WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR
    PURPOSE.\n"
  title: Full Copyright Statement
- contents:
  - "Intellectual Property\n   The IETF takes no position regarding the validity or
    scope of any\n   Intellectual Property Rights or other rights that might be claimed
    to\n   pertain to the implementation or use of the technology described in\n   this
    document or the extent to which any license under such rights\n   might or might
    not be available; nor does it represent that it has\n   made any independent effort
    to identify any such rights.  Information\n   on the procedures with respect to
    rights in RFC documents can be\n   found in BCP 78 and BCP 79.\n   Copies of IPR
    disclosures made to the IETF Secretariat and any\n   assurances of licenses to
    be made available, or the result of an\n   attempt made to obtain a general license
    or permission for the use of\n   such proprietary rights by implementers or users
    of this\n   specification can be obtained from the IETF on-line IPR repository
    at\n   http://www.ietf.org/ipr.\n   The IETF invites any interested party to bring
    to its attention any\n   copyrights, patents or patent applications, or other
    proprietary\n   rights that may cover technology that may be required to implement\n
    \  this standard.  Please address the information to the IETF at\n   ietf-ipr@ietf.org.\n"
  title: Intellectual Property
- contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is provided by the IETF\n
    \  Administrative Support Activity (IASA).\n"
  title: Acknowledgement
