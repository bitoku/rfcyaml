- title: __initial_text__
  contents:
  - '                     Session Announcement Protocol

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (2000).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   This document describes version 2 of the multicast session directory\n\
    \   announcement protocol, Session Announcement Protocol (SAP), and the\n   related\
    \ issues affecting security and scalability that should be\n   taken into account\
    \ by implementors.\n"
- title: 1  Introduction
  contents:
  - "1  Introduction\n   In order to assist the advertisement of multicast multimedia\n\
    \   conferences and other multicast sessions, and to communicate the\n   relevant\
    \ session setup information to prospective participants, a\n   distributed session\
    \ directory may be used.  An instance of such a\n   session directory periodically\
    \ multicasts packets containing a\n   description of the session, and these advertisements\
    \ are received by\n   other session directories such that potential remote participants\
    \ can\n   use the session description to start the tools required to\n   participate\
    \ in the session.\n   This memo describes the issues involved in the multicast\
    \ announcement\n   of session description information and defines an announcement\n\
    \   protocol to be used.  Sessions are described using the session\n   description\
    \ protocol which is described in a companion memo [4].\n"
- title: 2  Terminology
  contents:
  - "2  Terminology\n   A SAP announcer periodically multicasts an announcement packet\
    \ to a\n   well known multicast address and port.  The announcement is multicast\n\
    \   with the same scope as the session it is announcing, ensuring that\n   the\
    \ recipients of the announcement are within the scope of the\n   session the announcement\
    \ describes (bandwidth and other such\n   constraints permitting).  This is also\
    \ important for the scalability\n   of the protocol, as it keeps local session\
    \ announcements local.\n   A SAP listener learns of the multicast scopes it is\
    \ within (for\n   example, using the Multicast-Scope Zone Announcement Protocol\
    \ [5])\n   and listens on the well known SAP address and port for those scopes.\n\
    \   In this manner, it will eventually learn of all the sessions being\n   announced,\
    \ allowing those sessions to be joined.\n   The key words `MUST', `MUST NOT',\
    \ `REQUIRED', `SHALL', `SHALL NOT',\n   `SHOULD', `SHOULD NOT', `RECOMMENDED',\
    \ `MAY', and `OPTIONAL' in this\n   document are to be interpreted as described\
    \ in [1].\n"
- title: 3  Session Announcement
  contents:
  - "3  Session Announcement\n   As noted previously, a SAP announcer periodically\
    \ sends an\n   announcement packet to a well known multicast address and port.\n\
    \   There is no rendezvous mechanism - the SAP announcer is not aware of\n   the\
    \ presence or absence of any SAP listeners - and no additional\n   reliability\
    \ is provided over the standard best-effort UDP/IP\n   semantics.\n   That announcement\
    \ contains a session description and SHOULD contain\n   an authentication header.\
    \  The session description MAY be encrypted\n   although this is NOT RECOMMENDED\
    \ (see section 7).\n   A SAP announcement is multicast with the same scope as\
    \ the session it\n   is announcing, ensuring that the recipients of the announcement\
    \ are\n   within the scope of the session the announcement describes. There are\n\
    \   a number of possibilities:\n   IPv4 global scope sessions use multicast addresses\
    \ in the range\n      224.2.128.0 - 224.2.255.255 with SAP announcements being\
    \ sent to\n      224.2.127.254 (note that 224.2.127.255 is used by the obsolete\n\
    \      SAPv0 and MUST NOT be used).\n   IPv4 administrative scope sessions using\
    \ administratively scoped IP\n      multicast as defined in [7].  The multicast\
    \ address to be used for\n      announcements is the highest multicast address\
    \ in the relevant\n      administrative scope zone.  For example, if the scope\
    \ range is\n      239.16.32.0 - 239.16.33.255, then 239.16.33.255 is used for\
    \ SAP\n      announcements.\n   IPv6 sessions are announced on the address FF0X:0:0:0:0:0:2:7FFE\n\
    \      where X is the 4-bit scope value.  For example, an announcement\n     \
    \ for a link-local session assigned the address\n      FF02:0:0:0:0:0:1234:5678,\
    \ should be advertised on SAP address\n      FF02:0:0:0:0:0:2:7FFE.\n   Ensuring\
    \ that a description is not used by a potential participant\n   outside the session\
    \ scope is not addressed in this memo.\n   SAP announcements MUST be sent on port\
    \ 9875 and SHOULD be sent with\n   an IP time-to-live of 255 (the use of TTL scoping\
    \ for multicast is\n   discouraged [7]).\n   If a session uses addresses in multiple\
    \ administrative scope ranges,\n   it is necessary for the announcer to send identical\
    \ copies of the\n   announcement to each administrative scope range.  It is up\
    \ to the\n   listeners to parse such multiple announcements as the same session\n\
    \   (as identified by the SDP origin field, for example).  The\n   announcement\
    \ rate for each administrative scope range MUST be\n   calculated separately,\
    \ as if the multiple announcements were\n   separate.\n   Multiple announcers\
    \ may announce a single session, as an aid to\n   robustness in the face of packet\
    \ loss and failure of one or more\n   announcers.  The rate at which each announcer\
    \ repeats its\n   announcement MUST be scaled back such that the total announcement\n\
    \   rate is equal to that which a single server would choose.\n   Announcements\
    \ made in this manner MUST be identical.\n   If multiple announcements are being\
    \ made for a session, then each\n   announcement MUST carry an authentication\
    \ header signed by the same\n   key, or be treated as a completely separate announcement\
    \ by\n   listeners.\n   An IPv4 SAP listener SHOULD listen on the IPv4 global\
    \ scope SAP\n   address and on the SAP addresses for each IPv4 administrative\
    \ scope\n   zone it is within.  The discovery of administrative scope zones is\n\
    \   outside the scope of this memo, but it is assumed that each SAP\n   listener\
    \ within a particular scope zone is aware of that scope zone.\n   A SAP listener\
    \ which supports IPv6 SHOULD also listen to the IPv6 SAP\n   addresses.\n"
- title: 3.1 Announcement Interval
  contents:
  - "3.1 Announcement Interval\n   The time period between repetitions of an announcement\
    \ is chosen such\n   that the total bandwidth used by all announcements on a single\
    \ SAP\n   group remains below a preconfigured limit.  If not otherwise\n   specified,\
    \ the bandwidth limit SHOULD be assumed to be 4000 bits per\n   second.\n   Each\
    \ announcer is expected to listen to other announcements in order\n   to determine\
    \ the total number of sessions being announced on a\n   particular group.  Sessions\
    \ are uniquely identified by the\n   combination of the message identifier hash\
    \ and originating source\n   fields of the SAP header (note that SAP v0 announcers\
    \ always set the\n   message identifier hash to zero, and if such an announcement\
    \ is\n   received the entire message MUST be compared to determine\n   uniqueness).\n\
    \   Announcements are made by periodic multicast to the group.  The base\n   interval\
    \ between announcements is derived from the number of\n   announcements being\
    \ made in that group, the size of the announcement\n   and the configured bandwidth\
    \ limit.  The actual transmission time is\n   derived from this base interval\
    \ as follows:\n      1. The announcer initializes the variable tp to be the last\
    \ time a\n         particular announcement was transmitted (or the current time\
    \ if\n         this is the first time this announcement is to be made).\n    \
    \  2. Given a configured bandwidth limit in bits/second and an\n         announcement\
    \ of ad_size bytes, the base announcement interval\n         in seconds is\n \
    \               interval =max(300; (8*no_of_ads*ad_size)/limit)\n      3. An offset\
    \ is calculated based on the base announcement interval\n                offset=\
    \ rand(interval* 2/3)-(interval/3)\n      4. The next transmission time for an\
    \ announcement derived as\n                tn =tp+ interval+ offset\n   The announcer\
    \ then sets a timer to expire at tn and waits.  At time\n   tn the announcer SHOULD\
    \ recalculate the next transmission time.  If\n   the new value of tn is before\
    \ the current time, the announcement is\n   sent immediately.  Otherwise the transmission\
    \ is rescheduled for the\n   new tn.  This reconsideration prevents transient\
    \ packet bursts on\n   startup and when a network partition heals.\n"
- title: 4  Session Deletion
  contents:
  - "4  Session Deletion\n   Sessions may be deleted in one of several ways:\n   Explicit\
    \ Timeout The session description payload may contain\n      timestamp information\
    \ specifying the start- and end-times of the\n      session.  If the current time\
    \ is later than the end-time of the\n      session, then the session SHOULD be\
    \ deleted from the receiver's\n      session cache.\n   Implicit Timeout A session\
    \ announcement message should be received\n      periodically for each session\
    \ description in a receiver's session\n      cache.  The announcement period can\
    \ be predicted by the receiver\n      from the set of sessions currently being\
    \ announced.  If a session\n      announcement message has not been received for\
    \ ten times the\n      announcement period, or one hour, whichever is the greater,\
    \ then\n      the session is deleted from the receiver's session cache.  The one\n\
    \      hour minimum is to allow for transient network partitionings.\n   Explicit\
    \ Deletion A session deletion packet is received specifying\n      the session\
    \ to be deleted.  Session deletion packets SHOULD have a\n      valid authentication\
    \ header, matching that used to authenticate\n      previous announcement packets.\
    \  If this authentication is missing,\n      the deletion message SHOULD be ignored.\n"
- title: 5  Session Modification
  contents:
  - "5  Session Modification\n   A pre-announced session can be modified by simply\
    \ announcing the\n   modified session description.  In this case, the version\
    \ hash in the\n   SAP header MUST be changed to indicate to receivers that the\
    \ packet\n   contents should be parsed (or decrypted and parsed if it is\n   encrypted).\
    \  The session itself, as distinct from the session\n   announcement, is uniquely\
    \ identified by the payload and not by the\n   message identifier hash in the\
    \ header.\n   The same rules apply for session modification as for session\n \
    \  deletion:\n    o Either the modified announcement must contain an authentication\n\
    \      header signed by the same key as the cached session announcement\n    \
    \  it is modifying, or:\n    o The cached session announcement must not contain\
    \ an authentication\n      header, and the session modification announcement must\
    \ originate\n      from the same host as the session it is modifying.\n   If an\
    \ announcement is received containing an authentication header\n   and the cached\
    \ announcement did not contain an authentication header,\n   or it contained a\
    \ different authentication header, then the modified\n   announcement MUST be\
    \ treated as a new and different announcement, and\n   displayed in addition to\
    \ the un-authenticated announcement.  The same\n   should happen if a modified\
    \ packet without an authentication header\n   is received from a different source\
    \ than the original announcement.\n   These rules prevent an announcement having\
    \ an authentication header\n   added by a malicious user and then being deleted\
    \ using that header,\n   and it also prevents a denial-of-service attack by someone\
    \ putting\n   out a spoof announcement which, due to packet loss, reaches some\n\
    \   participants before the original announcement.  Note that under such\n   circumstances,\
    \ being able to authenticate the message originator is\n   the only way to discover\
    \ which session is the correct session.\n    0                   1           \
    \        2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0\
    \ 1 2 3 4 5 6 7 8 9 0 1\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   | V=1 |A|R|T|E|C|   auth len    |         msg id hash           |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                                                               |\n   :  \
    \              originating source (32 or 128 bits)            :\n   :        \
    \                                                       :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \   |                    optional authentication data               |\n   :  \
    \                            ....                             :\n   *-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\n\
    \   |                      optional payload type                    |\n   +  \
    \                                       +-+- - - - - - - - - -+\n   |        \
    \                                 |0|                   |\n   + - - - - - - -\
    \ - - - - - - - - - - - - - +-+                   |\n   |                    \
    \                                           |\n   :                          \
    \  payload                            :\n   |                                \
    \                               |\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \                     Figure 1: Packet format\n"
- title: 6  Packet Format
  contents:
  - "6  Packet Format\n   SAP data packets have the format described in figure 1.\n\
    \   V: Version Number. The version number field MUST be set to 1 (SAPv2\n    \
    \  announcements which use only SAPv1 features are backwards\n      compatible,\
    \ those which use new features can be detected by other\n      means, so the SAP\
    \ version number doesn't need to change).\n   A: Address type. If the A bit is\
    \ 0, the originating source field\n      contains a 32-bit IPv4 address.  If the\
    \ A bit is 1, the\n      originating source contains a 128-bit IPv6 address.\n\
    \   R: Reserved. SAP announcers MUST set this to 0, SAP listeners MUST\n     \
    \ ignore the contents of this field.\n   T: Message Type. If the T field is set\
    \ to 0 this is a session\n      announcement packet, if 1 this is a session deletion\
    \ packet.\n   E: Encryption Bit. If the encryption bit is set to 1, the payload\
    \ of\n      the SAP packet is encrypted.  If this bit is 0 the packet is not\n\
    \      encrypted.  See section 7 for details of the encryption process.\n   C:\
    \ Compressed bit. If the compressed bit is set to 1, the payload is\n      compressed\
    \ using the zlib compression algorithm [3].  If the\n      payload is to be compressed\
    \ and encrypted, the compression MUST be\n      performed first.\n   Authentication\
    \ Length. An 8 bit unsigned quantity giving the number\n      of 32 bit words\
    \ following the main SAP header that contain\n      authentication data.  If it\
    \ is zero, no authentication header is\n      present.\n   Authentication data\
    \ containing a digital signature of the packet,\n      with length as specified\
    \ by the authentication length header\n      field.  See section 8 for details\
    \ of the authentication process.\n   Message Identifier Hash. A 16 bit quantity\
    \ that, used in combination\n      with the originating source, provides a globally\
    \ unique identifier\n      indicating the precise version of this announcement.\
    \  The choice\n      of value for this field is not specified here, except that\
    \ it MUST\n      be unique for each session announced by a particular SAP announcer\n\
    \      and it MUST be changed if the session description is modified (and\n  \
    \    a session deletion message SHOULD be sent for the old version of\n      the\
    \ session).\n      Earlier versions of SAP used a value of zero to mean that the\
    \ hash\n      should be ignored and the payload should always be parsed.  This\n\
    \      had the unfortunate side-effect that SAP announcers had to study\n    \
    \  the payload data to determine how many unique sessions were being\n      advertised,\
    \ making the calculation of the announcement interval\n      more complex that\
    \ necessary.  In order to decouple the session\n      announcement process from\
    \ the contents of those announcements, SAP\n      announcers SHOULD NOT set the\
    \ message identifier hash to zero.\n      SAP listeners MAY silently discard messages\
    \ if the message\n      identifier hash is set to zero.\n   Originating Source.\
    \ This gives the IP address of the original source\n      of the message.  This\
    \ is an IPv4 address if the A field is set to\n      zero, else it is an IPv6\
    \ address.  The address is stored in\n      network byte order.\n      SAPv0 permitted\
    \ the originating source to be zero if the message\n      identifier hash was\
    \ also zero.  This practise is no longer legal,\n      and SAP announcers SHOULD\
    \ NOT set the originating source to zero.\n      SAP listeners MAY silently discard\
    \ packets with the originating\n      source set to zero.\n   The header is followed\
    \ by an optional payload type field and the\n   payload data itself.  If the E\
    \ or C bits are set in the header both\n   the payload type and payload are encrypted\
    \ and/or compressed.\n   The payload type field is a MIME content type specifier,\
    \ describing\n   the format of the payload.  This is a variable length ASCII text\n\
    \   string, followed by a single zero byte (ASCII NUL).  The payload type\n  \
    \ SHOULD be included in all packets.  If the payload type is\n   `application/sdp'\
    \ both the payload type and its terminating zero byte\n   MAY be omitted, although\
    \ this is intended for backwards compatibility\n   with SAP v1 listeners only.\n\
    \   The absence of a payload type field may be noted since the payload\n   section\
    \ of such a packet will start with an SDP `v=0' field, which is\n   not a legal\
    \ MIME content type specifier.\n   All implementations MUST support payloads of\
    \ type `application/sdp'\n   [4].  Other formats MAY be supported although since\
    \ there is no\n   negotiation in SAP an announcer which chooses to use a session\n\
    \   description format other than SDP cannot know that the listeners are\n   able\
    \ to understand the announcement.  A proliferation of payload\n   types in announcements\
    \ has the potential to lead to severe\n   interoperability problems, and for this\
    \ reason, the use of non-SDP\n   payloads is NOT RECOMMENDED.\n   If the packet\
    \ is an announcement packet, the payload contains a\n   session description.\n\
    \   If the packet is a session deletion packet, the payload contains a\n   session\
    \ deletion message.  If the payload format is `application/sdp'\n   the deletion\
    \ message is a single SDP line consisting of the origin\n   field of the announcement\
    \ to be deleted.\n   It is desirable for the payload to be sufficiently small\
    \ that SAP\n   packets do not get fragmented by the underlying network.\n   Fragmentation\
    \ has a loss multiplier effect, which is known to\n   significantly affect the\
    \ reliability of announcements.  It is\n   RECOMMENDED that SAP packets are smaller\
    \ than 1kByte in length,\n   although if it is known that announcements will use\
    \ a network with a\n   smaller MTU than this, then that SHOULD be used as the\
    \ maximum\n   recommended packet size.\n"
- title: 7  Encrypted Announcements
  contents:
  - "7  Encrypted Announcements\n   An announcement is received by all listeners in\
    \ the scope to which it\n   is sent.  If an announcement is encrypted, and many\
    \ of the receivers\n   do not have the encryption key, there is a considerable\
    \ waste of\n   bandwidth since those receivers cannot use the announcement they\
    \ have\n   received.  For this reason, the use of encrypted SAP announcements\
    \ is\n   NOT RECOMMENDED on the global scope SAP group or on administrative\n\
    \   scope groups which may have many receivers which cannot decrypt those\n  \
    \ announcements.\n   The opinion of the authors is that encrypted SAP is useful\
    \ in special\n   cases only, and that the vast majority of scenarios where encrypted\n\
    \   SAP has been proposed may be better served by distributing session\n   details\
    \ using another mechanism.  There are, however, certain\n   scenarios where encrypted\
    \ announcements may be useful.  For this\n   reason, the encryption bit is included\
    \ in the SAP header to allow\n   experimentation with encrypted announcements.\n\
    \   This memo does not specify details of the encryption algorithm to be\n   used\
    \ or the means by which keys are generated and distributed.  An\n   additional\
    \ specification should define these, if it is desired to use\n   encrypted SAP.\n\
    \   Note that if an encrypted announcement is being announced via a\n   proxy,\
    \ then there may be no way for the proxy to discover that the\n   announcement\
    \ has been superseded, and so it may continue to relay the\n   old announcement\
    \ in addition to the new announcement.  SAP provides\n   no mechanism to chain\
    \ modified encrypted announcements, so it is\n   advisable to announce the unmodified\
    \ session as deleted for a short\n   time after the modification has occurred.\
    \  This does not guarantee\n   that all proxies have deleted the session, and\
    \ so receivers of\n   encrypted sessions should be prepared to discard old versions\
    \ of\n   session announcements that they may receive.  In most cases however,\n\
    \   the only stateful proxy will be local to (and known to) the sender,\n   and\
    \ an additional (local-area) protocol involving a handshake for\n   such session\
    \ modifications can be used to avoid this problem.\n   Session announcements that\
    \ are encrypted with a symmetric algorithm\n   may allow a degree of privacy in\
    \ the announcement of a session, but\n   it should be recognized that a user in\
    \ possession of such a key can\n   pass it on to other users who should not be\
    \ in possession of such a\n   key.  Thus announcements to such a group of key\
    \ holders cannot be\n   assumed to have come from an authorized key holder unless\
    \ there is an\n   appropriate authentication header signed by an authorized key\
    \ holder.\n   In addition the recipients of such encrypted announcements cannot\
    \ be\n   assumed to only be authorized key holders.  Such encrypted\n   announcements\
    \ do not provide any real security unless all of the\n   authorized key holders\
    \ are trusted to maintain security of such\n   session directory keys.  This property\
    \ is shared by the multicast\n   session tools themselves, where it is possible\
    \ for an un-trustworthy\n   member of the session to pass on encryption keys to\
    \ un-authorized\n   users.  However it is likely that keys used for the session\
    \ tools\n   will be more short lived than those used for session directories.\n\
    \   Similar considerations should apply when session announcements are\n   encrypted\
    \ with an asymmetric algorithm, but then it is possible to\n   restrict the possessor(s)\
    \ of the private key, so that announcements\n   to a key-holder group can not\
    \ be made, even if one of the untrusted\n   members of the group proves to be\
    \ un-trustworthy.\n                        1                   2             \
    \      3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n\
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n   | V=1\
    \ |P| Auth  |                                               |\n   +-+-+-+-+-+-+-+-+\
    \                                               |\n   |              Format  specific\
    \ authentication subheader        |\n   :                        ..................\
    \                     :\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \    Figure 2:  Format of the authentication data in the SAP header\n"
- title: 8  Authenticated Announcements
  contents:
  - "8  Authenticated Announcements\n   The authentication header can be used for\
    \ two purposes:\n    o Verification that changes to a session description or deletion\
    \ of\n      a session are permitted.\n    o Authentication of the identity of\
    \ the session creator.\n   In some circumstances only verification is possible\
    \ because a\n   certificate signed by a mutually trusted person or authority is\
    \ not\n   available.  However, under such circumstances, the session originator\n\
    \   may still be authenticated to be the same as the session originator\n   of\
    \ previous sessions claiming to be from the same person.  This may\n   or may\
    \ not be sufficient depending on the purpose of the session and\n   the people\
    \ involved.\n   Clearly the key used for the authentication should not be trusted\
    \ to\n   belong to the session originator unless it has been separately\n   authenticated\
    \ by some other means, such as being certified by a\n   trusted third party. \
    \ Such certificates are not normally included in\n   an SAP header because they\
    \ take more space than can normally be\n   afforded in an SAP packet, and such\
    \ verification must therefore take\n   place by some other mechanism.  However,\
    \ as certified public keys are\n   normally locally cached, authentication of\
    \ a particular key only has\n   to take place once, rather than every time the\
    \ session directory\n   retransmits the announcement.\n   SAP is not tied to any\
    \ single authentication mechanism.\n   Authentication data in the header is self-describing,\
    \ but the precise\n   format depends on the authentication mechanism in use. \
    \ The generic\n   format of the authentication data is given in figure 2.  The\n\
    \   structure of the format specific authentication subheader, using both\n  \
    \ the PGP and the CMS formats, is discussed in sections 8.1 and 8.2\n   respectively.\
    \  Additional formats may be added in future.\n   Version Number, V:  The version\
    \ number of the authentication format\n      specified by this memo is 1.\n  \
    \ Padding Bit, P:  If necessary the authentication data is padded to be\n    \
    \  a multiple of 32 bits and the padding bit is set.  In this case\n      the\
    \ last byte of the authentication data contains the number of\n      padding bytes\
    \ (including the last byte) that must be discarded.\n   Authentication Type, Auth:\
    \ The authentication type is a  4 bit\n      encoded field that denotes the authentication\
    \ infrastructure the\n      sender expects the recipients to use to check the\
    \ authenticity and\n      integrity of the information.  This defines the format\
    \ of the\n      authentication subheader and can take the values:  0 = PGP format,\n\
    \      1 = CMS format.  All other values are undefined and SHOULD be\n      ignored.\n\
    \   If a SAP packet is to be compressed or encrypted, this MUST be done\n   before\
    \ the authentication is added.\n   The digital signature in the authentication\
    \ data MUST be calculated\n   over the entire packet, including the header.  The\
    \ authentication\n   length MUST be set to zero and the authentication data excluded\
    \ when\n   calculating the digital signature.\n   It is to be expected that sessions\
    \ may be announced by a number of\n   different mechanisms, not only SAP.  For\
    \ example, a session\n   description may placed on a web page, sent by email or\
    \ conveyed in a\n   session initiation protocol.  To ease interoperability with\
    \ these\n   other mechanisms, application level security is employed, rather than\n\
    \   using IPsec authentication headers.\n"
- title: 8.1 PGP Authentication
  contents:
  - "8.1 PGP Authentication\n   A full description of the PGP protocol can be found\
    \ in [2].  When\n   using PGP for SAP authentication the basic format specific\n\
    \   authentication subheader comprises a digital signature packet as\n   described\
    \ in [2].  The signature type MUST be 0x01 which means the\n   signature is that\
    \ of a canonical text document.\n"
- title: 8.2 CMS Authentication
  contents:
  - "8.2 CMS Authentication\n   A full description of the Cryptographic Message Syntax\
    \ can be found\n   in [6].  The format specific authentication subheader will,\
    \ in the\n   CMS case, have an ASN.1 ContentInfo type with the ContentType being\n\
    \   signedData.\n   Use is made of the option available in PKCS#7 to leave the\
    \ content\n   itself blank as the content which is signed is already present in\
    \ the\n   packet.  Inclusion of it within the SignedData type would duplicate\n\
    \   this data and increase the packet length unnecessarily.  In addition\n   this\
    \ allows recipients with either no interest in the authentication,\n   or with\
    \ no mechanism for checking it, to more easily skip the\n   authentication information.\n\
    \   There SHOULD be only one signerInfo and related fields corresponding\n   to\
    \ the originator of the SAP announcement.  The signingTime SHOULD be\n   present\
    \ as a signedAttribute.  However, due to the strict size\n   limitations on the\
    \ size of SAP packets, certificates and CRLs SHOULD\n   NOT be included in the\
    \ signedData structure.  It is expected that\n   users of the protocol will have\
    \ other methods for certificate and CRL\n   distribution.\n"
- title: 9  Scalability and caching
  contents:
  - "9  Scalability and caching\n   SAP is intended to announce the existence of long-lived\
    \ wide-area\n   multicast sessions.  It is not an especially timely protocol:\n\
    \   sessions are announced by periodic multicast with a repeat rate on\n   the\
    \ order of tens of minutes, and no enhanced reliability over UDP.\n   This leads\
    \ to a long startup delay before a complete set of\n   announcements is heard\
    \ by a listener.  This delay is clearly\n   undesirable for interactive browsing\
    \ of announced sessions.\n   In order to reduce the delays inherent in SAP, it\
    \ is recommended that\n   proxy caches are deployed.  A SAP proxy cache is expected\
    \ to listen\n   to all SAP groups in its scope, and to maintain an up-to-date\
    \ list of\n   all announced sessions along with the time each announcement was\
    \ last\n   received.  When a new SAP listeners starts, it should contact its\n\
    \   local proxy to download this information, which is then sufficient\n   for\
    \ it to process future announcements directly, as if it has been\n   continually\
    \ listening.\n   The protocol by which a SAP listener contacts its local proxy\
    \ cache\n   is not specified here.\n"
- title: 10 Security Considerations
  contents:
  - "10 Security Considerations\n   SAP contains mechanisms for ensuring integrity\
    \ of session\n   announcements, for authenticating the origin of an announcement\
    \ and\n   for encrypting such announcements (sections 7 and 8).\n   As stated\
    \ in section 5, if a session modification announcement is\n   received that contains\
    \ a valid authentication header, but which is\n   not signed by the original creator\
    \ of the session, then the session\n   must be treated as a new session in addition\
    \ to the original session\n   with the same SDP origin information unless the\
    \ originator of one of\n   the session descriptions can be authenticated using\
    \ a certificate\n   signed by a trusted third party.  If this were not done, there\
    \ would\n   be a possible denial of service attack whereby a party listens for\n\
    \   new announcements, strips off the original authentication header,\n   modifies\
    \ the session description, adds a new authentication header\n   and re-announces\
    \ the session.  If a rule was imposed that such spoof\n   announcements were ignored,\
    \ then if packet loss or late starting of a\n   session directory instance caused\
    \ the original announcement to fail\n   to arrive at a site, but the spoof announcement\
    \ did so, this would\n   then prevent the original announcement from being accepted\
    \ at that\n   site.\n   A similar denial-of-service attack is possible if a session\n\
    \   announcement receiver relies completely on the originating source and\n  \
    \ hash fields to indicate change, and fails to parse the remainder of\n   announcements\
    \ for which it has seen the origin/hash combination\n   before.\n   A denial of\
    \ service attack is possible from a malicious site close to\n   a legitimate site\
    \ which is making a session announcement.  This can\n   happen if the malicious\
    \ site floods the legitimate site with huge\n   numbers of (illegal) low TTL announcements\
    \ describing high TTL\n   sessions.  This may reduce the session announcement\
    \ rate of the\n   legitimate announcement to below a tenth of the rate expected\
    \ at\n   remote sites and therefore cause the session to time out.  Such an\n\
    \   attack is likely to be easily detectable, and we do not provide any\n   mechanism\
    \ here to prevent it.\n"
- title: A. Summary of differences between SAPv0 and SAPv1
  contents:
  - "A. Summary of differences between SAPv0 and SAPv1\n   For this purpose SAPv0\
    \ is defined as the protocol in use by version\n   2.2 of the session directory\
    \ tool, sdr.  SAPv1 is the protocol\n   described in the 19 November 1996 version\
    \ of this memo.  The packet\n   headers of SAP messages are the same in V0 and\
    \ V1 in that a V1 tool\n   can parse a V0 announcement header but not vice-versa.\
    \  In SAPv0, the\n   fields have the following values:\n     o Version Number:\
    \  0\n     o Message Type:  0 (Announcement)\n     o Authentication Type:  0 (No\
    \ Authentication)\n     o Encryption Bit:  0 (No Encryption)\n     o Compression\
    \ Bit:  0 (No compression)\n     o Message Id Hash:  0 (No Hash Specified)\n \
    \    o Originating Source:  0 (No source specified, announcement has\n       not\
    \ been relayed)\n"
- title: B. Summary of differences between SAPv1 and SAPv2
  contents:
  - "B. Summary of differences between SAPv1 and SAPv2\n   The packet headers of SAP\
    \ messages are the same in V1 and V2 in that\n   a V2 tool can parse a V1 announcement\
    \ header but not necessarily\n   vice-versa.\n    o The A bit has been added to\
    \ the SAP header, replacing one of the\n      bits of the SAPv1 message type field.\
    \  If set to zero the\n      announcement is of an IPv4 session, and the packet\
    \ is backwards\n      compatible with SAPv1.  If set to one the announcement is\
    \ of an\n      IPv6 session, and SAPv1 listeners (which do not support IPv6) will\n\
    \      see this as an illegal message type (MT) field.\n    o The second bit of\
    \ the message type field in SAPv1 has been\n      replaced by a reserved, must-be-zero,\
    \ bit.  This bit was unused in\n      SAPv1, so this change just codifies existing\
    \ usage.\n    o SAPv1 specified encryption of the payload.  SAPv2 includes the\
    \ E\n      bit in the SAP header to indicate that the payload is encrypted,\n\
    \      but does not specify any details of the encryption.\n    o SAPv1 allowed\
    \ the message identifier hash and originating source\n      fields to be set to\
    \ zero, for backwards compatibility.  This is no\n      longer legal.\n    o SAPv1\
    \ specified gzip compression.  SAPv2 uses zlib (the only known\n      implementation\
    \ of SAP compression used zlib, and gzip compression\n      was a mistake).\n\
    \    o SAPv2 provides a more complete specification for authentication.\n    o\
    \ SAPv2 allows for non-SDP payloads to be transported.  SAPv1\n      required\
    \ that the payload was SDP.\n    o SAPv1 included a timeout field for encrypted\
    \ announcement, SAPv2\n      does not (and relies of explicit deletion messages\
    \ or implicit\n      timeouts).\n"
- title: C. Acknowledgements
  contents:
  - "C. Acknowledgements\n   SAP and SDP were originally based on the protocol used\
    \ by the sd\n   session directory from Van Jacobson at LBNL.  Version 1 of SAP\
    \ was\n   designed by Mark Handley as part of the European Commission MICE\n \
    \  (Esprit 7602) and MERCI (Telematics 1007) projects.  Version 2\n   includes\
    \ authentication features developed by Edmund Whelan, Goli\n   Montasser-Kohsari\
    \ and Peter Kirstein as part of the European\n   Commission ICE-TEL project (Telematics\
    \ 1005), and support for IPv6\n   developed by Maryann P. Maher and Colin Perkins.\n"
- title: D. Authors' Addresses
  contents:
  - "D. Authors' Addresses\n   Mark Handley\n   AT&T Center for Internet Research\
    \ at ICSI,\n   International Computer Science Institute,\n   1947 Center Street,\
    \ Suite 600,\n   Berkeley, CA 94704, USA\n   EMail: mjh@aciri.org\n   Colin Perkins\n\
    \   USC Information Sciences Institute\n   4350 N. Fairfax Drive, Suite 620\n\
    \   Arlington, VA 22203, USA\n   EMail: csp@isi.edu\n   Edmund Whelan\n   Department\
    \ of Computer Science,\n   University College London,\n   Gower Street,\n   London,\
    \ WC1E 6BT, UK\n   EMail: e.whelan@cs.ucl.ac.uk\n"
- title: References
  contents:
  - "References\n   [1] Bradner, S., \"Key words for use in RFCs to indicate requirement\n\
    \       levels\", BCP 14, RFC 2119, March 1997.\n   [2] Callas, J., Donnerhacke,\
    \ L., Finney, H. and R. Thayer. \"OpenPGP\n       message format\", RFC 2440,\
    \ November 1998.\n   [3] Deutsch, P. and J.-L. Gailly, \"Zlib compressed data\
    \ format\n       specification version 3.3\", RFC 1950, May 1996.\n   [4] Handley,\
    \ M. and V. Jacobson, \"SDP: Session Description Protocol\",\n       RFC 2327,\
    \ April 1998.\n   [5] Handley, M., Thaler, D. and R. Kermode, \"Multicast-scope\
    \ zone\n       announcement protocol (MZAP)\", RFC 2776, February 2000.\n   [6]\
    \ Housley, R., \"Cryptographic message syntax\", RFC 2630, June 1999.\n   [7]\
    \ Mayer, D., \"Administratively scoped IP multicast\", RFC 2365, July\n      \
    \ 1998.\n"
- title: Full Copyright Statement
  contents:
  - "Full Copyright Statement\n   Copyright (C) The Internet Society (2000).  All\
    \ Rights Reserved.\n   This document and translations of it may be copied and\
    \ furnished to\n   others, and derivative works that comment on or otherwise explain\
    \ it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
