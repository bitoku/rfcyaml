- title: __initial_text__
  contents:
  - '            Guidelines for Next Hop Client (NHC) Developers

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo provides information for the Internet community.\
    \  It does\n   not specify an Internet standard of any kind.  Distribution of\
    \ this\n   memo is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: 1. Abstract
  contents:
  - "1. Abstract\n   This document provides guidelines for developers of the Next\
    \ Hop\n   Resolution Protocol Clients (NHC).  It assumes that the clients are\n\
    \   directly connected to an ATM based NBMA network.  The same principles\n  \
    \ will apply to clients connected to other types of NBMA networks.  The\n   intent\
    \ is to define the interaction between the NHC code and the\n   TCP/IP protocol\
    \ stack of the local host operating system.  The NHC is\n   capable of sending\
    \ NHRP requests to a Next Hop Resolution Protocol\n   Server (NHS) to resolve\
    \ both inter and intra LIS addresses.  The NHS\n   reply may be positive (ACK)\
    \ indicating a short-cut path is available\n   or negative (NAK) indicating that\
    \ a shortcut is not available and the\n   routed path must be used.  The NHC must\
    \ cache (maintain state) for\n   both the ACK and NAK replies in order to use\
    \ the correct shortcut or\n   routed path.  The NAK reply must be cached to avoid\
    \ making repeated\n   requests to the NHS when the routed path is being used.\n"
- title: 2. Overview
  contents:
  - "2. Overview\n   In the Classical IP over ATM model [1], an ATM attached host\n\
    \   communicates with an ATMARP server to resolve IP to ATM address\n   semantics.\
    \  This model supports the concept of a Logical IP Subnet\n   (LIS) with intra\
    \ LIS communications using direct PVCs/SVCs and inter\n   LIS communications using\
    \ IP routers to forward packets.  This model\n   easily maps to the conventional\
    \ LAN model of subnets and routers.\n   The Next Hop Resolution Protocol (NHRP)\
    \ [2] defines how the LIS model\n   can be modified to allow direct ATM SVCs (shortcut\
    \ paths) for inter\n   LIS traffic.  With NHRP, nodes directly attached to an\
    \ ATM network\n   can bypass the IP routers and establish a direct switched virtual\n\
    \   circuit to improve performance when needed.\n   The NHS code replaces the\
    \ ATMARP code in the ATMARP server.  Each NHS\n   serves a set of destination\
    \ client hosts and cooperates with other\n   NHSs to resolve NHRP next hop requests\
    \ within their own logical ATM\n   network. The NHC to NHS and NHS to NHS protocol\
    \ interactions are\n   described in [2].  Other documents in the NHRP series define\
    \ the\n   general applicability [3] and the transition from ATMARP servers to\n\
    \   NHSs [4].\n   The NHC code replaces the ATMARP code in the local workstations.\n\
    \   This code will take the destination IP address and map it into the\n   ATM\
    \ End Station Address (AESA) for both intra and inter LIS\n   destinations.  The\
    \ returned AESA will be stored in a local cache\n   table.  In addition to storing\
    \ the positive replies, the NHC will\n   need to store the negative replies to\
    \ avoid making repeated NHS calls\n   when using the routed path.\n   This document\
    \ describes a base line method for caching the returned\n   information.  Other\
    \ methods may be used as long as the same\n   functionality is provided.\n"
- title: 3. IP Processing
  contents:
  - "3. IP Processing\n   In the Classical IP LIS model [1] the TCP/IP protocol stack\
    \ treats\n   the ATM network as a simple data link layer protocol.  When an\n\
    \   application sends data using the Classical IP protocol, IP performs a\n  \
    \ routing table lookup to determine if the destination is reachable via\n   a\
    \ local interface or whether an intermediate router is the next hop\n   to the\
    \ IP destination.\n   If the destination is found to be local (e.g. in the same\
    \ LIS as the\n   source) the packet will be passed to the local ATM interface\
    \ with the\n   next hop IP address set to the destination nodes IP address.  At\
    \ this\n   point the ATMARP table will be searched to determine the ATM Address\n\
    \   of the destination node.  If no ATMARP table entry is found an ATMARP\n  \
    \ request will be sent to the ATMARP server.  This server can reply\n   with a\
    \ positive (ACK) or negative (NAK) answer depending on the\n   current information\
    \ it has in its cache.  If an ACK is received the\n   host's local ATMARP table\
    \ is filled in appropriately and the source\n   is now able to send IP datagrams\
    \ to the destination.  If a NAK is\n   returned, the calling application is notified\
    \ of this error condition\n   (e.g., ICMP destination unreachable).\n   If the\
    \ destination is found to be remote (e.g., in a different LIS\n   from the source)\
    \ the IP address of the next hop router is extracted\n   from the IP routing table\
    \ and the ATM Address of this router is\n   looked up in the ATMARP table.  Since\
    \ the router is in the same LIS\n   as the source node, the ATMARP procedure described\
    \ above will find\n   the correct ATM Address or the packet will be marked as\
    \ undeliverable\n   and the user application will be notified of the error.\n\
    \   The ATMARP service functions exactly as the existing ARP service\n   provided\
    \ on Ethernet broadcast networks.  Since the ARP service will\n   only try and\
    \ resolve addresses for nodes that are in a single IP\n   subnet, the ARP table\
    \ only needs to keep positive answers.  No state\n   information is retained about\
    \ failed mappings.\n"
- title: 4. NHC Processing
  contents:
  - "4. NHC Processing\n   In this section we briefly describe what is required in\
    \ order for a\n   host to take advantage of shortcuts through the ATM network.\
    \  On the\n   host, a NHC process initiates various NHRP requests in order to\n\
    \   obtain access to the NHRP service. Within the ATM subnetwork, the\n   ATMARP\
    \ server is replaced with a NHS.  As defined in [4] the NHS is\n   required to\
    \ respond to both ATMARP and NHRP Resolution requests.  In\n   the nodes wishing\
    \ to take advantage of shortcut paths across the ATM\n   subnetwork, the ATMARP\
    \ client code must be replaced with NHC code.\n   This allows the source node\
    \ to ask for the ATM AESA of both local and\n   remote nodes.  Finally the source\
    \ node must be modified to know when\n   it should ask for the ATM AESA of a remote\
    \ node and when the local\n   LIS router should be used.  These modifications\
    \ are described in the\n   remainder of this document.\n   The protocol processing\
    \ described in [2] states a source may query a\n   NHS for the ATM AESA of a destination\
    \ node.  However as is pointed\n   out in [5], to achieve shortcut paths through\
    \ the ATM network, it is\n   not enough to simply replace the ATMARP client code\
    \ with the NHC\n   code.  This is because the source host will never ask the NHS\
    \ for the\n   ATM AESA of a node in a remote LIS.  When the source consults the\
    \ IP\n   routing table, it performs the local/remote test, before the NHC code\n\
    \   is processed.  As a result, the IP address of the next hop router\n   will\
    \ be used by the NHC instead of the IP address of the remote\n   (inter LIS) host.\
    \  The NHC code must ignore the result of the IP\n   routing table lookup and\
    \ perform its own local/remote test.\n   The NHC must perform the following functions:\n\
    \   1.     Test to see if the destination node is `local' to this LIS.\n     \
    \     If so use the existing ATMARP rules described in [1].\n   2.     If not;\
    \ send an NHRP message to the local NHS and attempt to\n          setup a `shortcut'\
    \ path.  If successful; save the IP to ATM\n          AESA mapping in the local\
    \ NHC cache.\n   3.     If not successful; use the routed path and save this state\
    \ in\n          the NHC cache so future requests don't test for a shortcut\n \
    \         again.\n   4.     Allow user application to override system default\
    \ operation\n          and explicitly request a shortcut or routed path for a\
    \ flow.\n   It is required that this routed path state will be maintained in the\n\
    \   same manner as the existing ATMARP service.  That is a timer will be\n   used\
    \ to expire old information and some administrative function\n   exists to manually\
    \ delete data if needed.\n"
- title: 5. Need for State
  contents:
  - "5. Need for State\n   It is obvious that the IP to ATM AESA mappings should be\
    \ maintained\n   in a local cache to improve network performance.  This soft state\
    \ is\n   maintained in today's ARP and ATMARP systems using timers to purge\n\
    \   old or unused data.  The NHC will maintain both inter and intra LIS\n   IP\
    \ to ATM Address mappings in the same manner.  It may be less\n   obvious that\
    \ an NHC will also need to maintain this same soft state\n   for inter LIS mappings\
    \ using the routed path.  If this state is not\n   maintained, the source node\
    \ will send requests to the NHS asking if a\n   shortcut path can be setup every\
    \ time a packet is sent over the\n   routed path.\n   Some of the features of\
    \ this state are:\n   1.     Cache lookups must be fast as they are done on every\
    \ packet.\n   2.     The cache lookup must be on the destination IP address instead\n\
    \          of the next-hop router IP address.\n   3.     Both ACK and NAK data\
    \ should be cached for the length of the\n          holding time parameter in\
    \ the NHRP response.\n   Since state must be maintained, the questions of where\
    \ to maintain\n   it, how to manually managed it, and how to selectively override\
    \ it\n   need to be addressed.  No matter where this state information is\n  \
    \ kept, a method for manually examining and changing this state\n   information\
    \ must be provided.  This is essential to insure that the\n   network is operating\
    \ properly.\n   There are several possible locations for storing this state\n\
    \   information, they are:\n   1.     Store state in the `ARP' table.  This is\
    \ the traditional\n          location for this IP to ATM address mappings.  This\
    \ table must\n          be extended to handle the caching of negative (routed\
    \ path)\n          information. This solution provides a system wide service that\n\
    \          may be used by the NHC.\n   2.     Store state in the IP routing table.\
    \  This is the traditional\n          location for the local/remote state information.\n\
    \   3.     Store state in an ATM MIB structure.  This is the traditional\n   \
    \       location for storing ATM VCC data.  It also provides a system\n      \
    \    wide service that is geared toward ATM services.  This avoids\n         \
    \ munging the `ARP' table to hold negative data.\n   4.     Store state in the\
    \ TCP Process Control Block.  This allows a\n          per process tailoring of\
    \ shortcut or routed path information.\n          This works well for TCP connections,\
    \ but not UDP style\n          services.\n   5.     Store state in the socket\
    \ structure.  This also allows per\n          process tailoring of the state information.\n\
    \   6.     Store state in a newly defined table.\n   The NHC should also support\
    \ both local (per-process) and global\n   (per-system) state.  This would allow\
    \ a system wide default while\n   allowing a specific application to tailor the\
    \ operation for a\n   specific task.  For example assume a site runs both a DNS\
    \ server and\n   FTP server on a single host.  Inter LIS communications to the\
    \ DNS\n   server should take the routed path to avoid setup overhead.  While an\n\
    \   FTP session would benefit from the shortcut path to improve\n   performance.\
    \  Supporting both operations from a single client will\n   require both a global\
    \ state (e.g. use shortcut for FTP) and a local\n   state (e.g. use routed path\
    \ for DNS).\n"
- title: 5.1 Using TCP
  contents:
  - "5.1 Using TCP\n   TCP is a connection orientated protocol that provides per-process\n\
    \   state information using a TCP Protocol Control Block (PCB).  This PCB\n  \
    \ can be used to save the shortcut/routed path state information. Using\n   a\
    \ quad-state flag that shows the USE_SHORT_CUT, TRY_SHORT_CUT,\n   USE_ROUTED_PATH,\
    \ or TRY_ROUTED_PATH states would allow each process\n   to use the service it\
    \ chooses.  The advantage of this approach is\n   that it allows per flow control\
    \ over the use of the shortcut or\n   routed path.  The disadvantage is that this\
    \ PCB is only created for\n   TCP connections.  UDP connections will only use\
    \ the system default\n   action.\n   A second option is to store this information\
    \ in the socket PCB and\n   use the socket function (setsockopt) to save this\
    \ information.  This\n   option will allow both TCP and UDP applications to set\
    \ a per flow\n   action to override the system default operation.  To enable this\n\
    \   option, the IP kernel code will need to be modified to allow this\n   quad-state\
    \ flag to be set.  In addition this flag will need to be\n   checked when each\
    \ packet is sent to determine the if the shortcut or\n   routed path is being\
    \ used.\n"
- title: 5.2 Using UDP
  contents:
  - "5.2 Using UDP\n   UDP is a connectionless orientated protocol that doesn't provide\
    \ any\n   support for state information.  It relies on the application to\n  \
    \ provide the necessary state information.  In this case where should\n   the\
    \ state be stored?  The user application could store this itself\n   and pass\
    \ this down to the kernel in some manner.  Another option is\n   to store this\
    \ information in an ATM MIB structure.  A third option is\n   to allow a socket\
    \ option (setsockopt) that the user application can\n   set to override the default\
    \ behavior.\n"
- title: 5.3 Using ICMP
  contents:
  - "5.3 Using ICMP\n   In keeping with the tradition of using ICMP echo packets for\
    \ Internet\n   management functions (e.g. ping, traceroute) then it will be\n\
    \   necessary to allow these applications to run over the shortcut and\n   routed\
    \ paths.  The user will need to be able to specify which path to\n   use and a\
    \ default action needs to be defined too.\n"
- title: 6. Conclusions
  contents:
  - "6. Conclusions\n   NHRP provides new services and functionality for IP nodes\
    \ using ATM\n   networks.  To use these services the client must store state\n\
    \   information that describes whether a destination node is reachable\n   via\
    \ a shortcut or a routed path.\n   The state information should be stored on a\
    \ global per-application\n   basis with per-process override functionality.  This\
    \ allows short\n   lived functions (e.g. DNS requests) and long lived requests\
    \ (e.g. ftp\n   sessions) to use different paths.  Storing state only based on\
    \ the\n   destination address means that all processes must use the same path\n\
    \   and this creates unreasonable demands on the network.  To accomplish\n   this\
    \ the /etc/services file should be modified to carry a new flag to\n   indicate\
    \ the per-application default (shortcut vs. routed path)\n   behavior.\n   This\
    \ state information is required to avoid having the client make a\n   call to\
    \ the NHS for every packet it sends along the routed path.  It\n   is recommended\
    \ that the IP routing table be modified to support a new\n   flag.  This flag\
    \ will indicate whether the NHS returned an ACK or NAK\n   to the NHRP request.\n\
    \   In addition, application programmers and system administrators\n   require\
    \ the ability to explicitly request a specific service (e.g.\n   use the routed\
    \ path or shortcut path).  This includes the ability to\n   verify network operation\
    \ by specifying how ICMP echo requests (e.g.\n   ping, traceroute) are handled.\
    \  The NHC must support the manual\n   setting of this state information.  A new\
    \ socket option that allows\n   the user to specify the operation needs to be\
    \ supported.\n   To support this capability a new socket option will be created\
    \ to\n   allow the user application to control the operation of a particular\n\
    \   connection (flow).  This option will allow the user to specify that a\n  \
    \ connection use one of the following:\n   *      USE_SYSTEM_DEFAULT.  Use the\
    \ shortcut or routed path based on\n          the system configuration information\
    \ for this application.\n          (This is the default behavior.)\n   *     \
    \ USE_SHORT_CUT.  If a shortcut path exists, then use it to\n          deliver\
    \ the data.  If it doesn't exist, then try and create\n          it.  If the shortcut\
    \ cannot be created, fail the connection\n          and notify the user.\n   *\
    \      TRY_SHORT_CUT.  If a shortcut path exists, then use it to\n          deliver\
    \ the data.  If it doesn't exist, then try and create\n          it.  If the shortcut\
    \ cannot be created, try using the routed\n          path.\n   *      USE_ROUTED_PATH.\
    \  Use the routed path regardless of whether a\n          shortcut exists or not.\n\
    \   *      TRY_ROUTED_PATH.  If a shortcut doesn't exist, don't try and\n    \
    \      create it, use the routed path instead.\n"
- title: 7. Security
  contents:
  - "7. Security\n   The security issues for NHRP are addressed in other NHRP documents\n\
    \   [2,3].  Some specific security issues for the NHC developer are\n   discussed\
    \ below.\n   *      Address spoofing at the IP or ATM layer may allow an attacker\n\
    \          to hi-jack an IP connection or service. This threat may be\n      \
    \    reduced by limiting the scope of the ATM routing domain.  In\n          this\
    \ way only trusted IP hosts will be able to reach and use\n          the services\
    \ of the NHS.\n   *      Denial of service attacks may be launched at both the\
    \ IP and\n          ATM layers of the NHS.  At the ATM layer, the attacker may\n\
    \          repeatedly generate signaling messages that consuming system\n    \
    \      resources thus preventing NHCs from using the NHS services.\n         \
    \ At the IP layer, the attacker may register false IP to ATM\n          mappings\
    \ thus preventing a NHC from registering the correct IP\n          to ATM mapping.\n\
    \   *      When a NHC creates or accepts a short-cut path it bypasses the\n  \
    \        site border router.  Therefore, any security features in the\n      \
    \    border router are also bypassed.  This threat may be reduced\n          by\
    \ limiting the scope of the ATM routing domain, increasing\n          security\
    \ features in the NHC host, allowing the NHS to\n          evaluate security features\
    \ when short-cut paths are requested\n          or a compination of all of these\
    \ methods.\n"
- title: 8. Authors' Addresses
  contents:
  - "8. Authors' Addresses\n   Richard Carlson\n   Argonne National Laboratory\n \
    \  EMail: RACarlson@anl.gov\n   Linda Winkler\n   Argonne National Laboratory\n\
    \   EMail: lwinkler@anl.gov\n"
- title: '9. References:'
  contents:
  - "9. References:\n   [1] Laubach, M. and J. Halpern, \"Classical IP and ARP over\
    \ ATM\", RFC\n       2225, April 1998.\n   [2] Luciani, J., Katz, D., Piscitello,\
    \ D., Cole B. and N. Doraswamy,\n       \"NBMA Next Hop Resolution Protocol (NHRP)\"\
    , RFC 2332, April 1998.\n   [3] Cansever, D., \"NHRP Protocol Applicability Statement\"\
    , RFC 2333,\n       April 1998.\n   [4] Luciani, J., \"Classical IP to NHRP Transition\"\
    , RFC 2336, July\n       1998.\n   [5] Rekhter, Y. and D. Kandlur, \"Local/Remote\
    \ Forwarding Decision in\n       Switched Data link Subnetworks\", RFC 1937, May\
    \ 1996.\n"
- title: 10.  Full Copyright Statement
  contents:
  - "10.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999).\
    \  All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by\n   the Internet Society.\n"
