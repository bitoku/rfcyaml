- contents:
  - "   Path Computation Element Communication Protocol (PCEP) Extensions\n   for
    the Hierarchical Path Computation Element (H-PCE) Architecture\n"
  title: __initial_text__
- contents:
  - "Abstract\n   The Hierarchical Path Computation Element (H-PCE) architecture is\n
    \  defined in RFC 6805.  It provides a mechanism to derive an optimum\n   end-to-end
    path in a multi-domain environment by using a hierarchical\n   relationship between
    domains to select the optimum sequence of\n   domains and optimum paths across
    those domains.\n   This document defines extensions to the Path Computation Element\n
    \  Communication Protocol (PCEP) to support H-PCE procedures.\n"
  title: Abstract
- contents:
  - "Status of This Memo\n   This is an Internet Standards Track document.\n   This
    document is a product of the Internet Engineering Task Force\n   (IETF).  It represents
    the consensus of the IETF community.  It has\n   received public review and has
    been approved for publication by the\n   Internet Engineering Steering Group (IESG).
    \ Further information on\n   Internet Standards is available in Section 2 of RFC
    7841.\n   Information about the current status of this document, any errata,\n
    \  and how to provide feedback on it may be obtained at\n   https://www.rfc-editor.org/info/rfc8685.\n"
  title: Status of This Memo
- contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified
    as the\n   document authors.  All rights reserved.\n   This document is subject
    to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n
    \  (https://trustee.ietf.org/license-info) in effect on the date of\n   publication
    of this document.  Please review these documents\n   carefully, as they describe
    your rights and restrictions with respect\n   to this document.  Code Components
    extracted from this document must\n   include Simplified BSD License text as described
    in Section 4.e of\n   the Trust Legal Provisions and are provided without warranty
    as\n   described in the Simplified BSD License.\n"
  title: Copyright Notice
- contents:
  - "Table of Contents\n   1.  Introduction\n     1.1.  Scope\n     1.2.  Terminology\n
    \    1.3.  Requirements Language\n   2.  Requirements for the H-PCE Architecture\n
    \    2.1.  Path Computation Requests\n       2.1.1.  Qualification of PCEP Requests\n
    \      2.1.2.  Multi-domain Objective Functions\n       2.1.3.  Multi-domain Metrics\n
    \    2.2.  Parent PCE Capability Advertisement\n     2.3.  PCE Domain Identification\n
    \    2.4.  Domain Diversity\n   3.  PCEP Extensions\n     3.1.  Applicability
    to PCC-PCE Communications\n     3.2.  OPEN Object\n       3.2.1.  H-PCE-CAPABILITY
    TLV\n         3.2.1.1.  Backwards Compatibility\n       3.2.2.  Domain-ID TLV\n
    \    3.3.  RP Object\n       3.3.1.  H-PCE-FLAG TLV\n       3.3.2.  Domain-ID
    TLV\n     3.4.  Objective Functions\n       3.4.1.  OF Codes\n       3.4.2.  OF
    Object\n     3.5.  METRIC Object\n     3.6.  SVEC Object\n     3.7.  PCEP-ERROR
    Object\n       3.7.1.  Hierarchical PCE Error-Type\n     3.8.  NO-PATH Object\n
    \  4.  H-PCE Procedures\n     4.1.  OPEN Procedure between Child PCE and Parent
    PCE\n     4.2.  Procedure for Obtaining the Domain Sequence\n   5.  Error Handling\n
    \  6.  Manageability Considerations\n     6.1.  Control of Function and Policy\n
    \      6.1.1.  Child PCE\n       6.1.2.  Parent PCE\n       6.1.3.  Policy Control\n
    \    6.2.  Information and Data Models\n     6.3.  Liveness Detection and Monitoring\n
    \    6.4.  Verifying Correct Operations\n     6.5.  Requirements on Other Protocols\n
    \    6.6.  Impact on Network Operations\n   7.  IANA Considerations\n     7.1.
    \ PCEP TLV Type Indicators\n     7.2.  H-PCE-CAPABILITY TLV Flags\n     7.3.  Domain-ID
    TLV Domain Type\n     7.4.  H-PCE-FLAG TLV Flags\n     7.5.  OF Codes\n     7.6.
    \ METRIC Object Types\n     7.7.  New PCEP Error-Types and Values\n     7.8.  New
    NO-PATH-VECTOR TLV Bit Flag\n     7.9.  SVEC Flag\n   8.  Security Considerations\n
    \  9.  References\n     9.1.  Normative References\n     9.2.  Informative References\n
    \  Acknowledgements\n   Contributors\n   Authors' Addresses\n"
  title: Table of Contents
- contents:
  - "1.  Introduction\n   The Path Computation Element Communication Protocol (PCEP)
    provides a\n   mechanism for Path Computation Elements (PCEs) and Path Computation\n
    \  Clients (PCCs) to exchange requests for path computation and\n   responses
    that provide computed paths.\n   The capability to compute the routes of end-to-end
    inter-domain MPLS\n   Traffic Engineering (MPLS-TE) and GMPLS Label Switched Paths
    (LSPs)\n   is expressed as requirements in [RFC4105] and [RFC4216].  This\n   capability
    may be realized by a PCE [RFC4655].  The methods for\n   establishing and controlling
    inter-domain MPLS-TE and GMPLS LSPs are\n   documented in [RFC4726].\n   [RFC6805]
    describes a Hierarchical Path Computation Element (H-PCE)\n   architecture that
    can be used for computing end-to-end paths for\n   inter-domain MPLS-TE and GMPLS
    LSPs.\n   In the H-PCE architecture, the parent PCE is used to compute a multi-\n
    \  domain path based on the domain connectivity information.  A child\n   PCE
    may be responsible for single or multiple domains and is used to\n   compute the
    intra-domain path based on its own domain topology\n   information.\n   The H-PCE
    end-to-end domain path computation procedure is described\n   below:\n   *  A
    PCC sends the inter-domain Path Computation Request (PCReq)\n      messages [RFC5440]
    to the child PCE responsible for its domain.\n   *  The child PCE forwards the
    request to the parent PCE.\n   *  The parent PCE computes the likely domain paths
    from the ingress\n      domain to the egress domain.\n   *  The parent PCE sends
    the intra-domain PCReq messages (between the\n      domain border nodes) to the
    child PCEs that are responsible for\n      the domains along the domain path.\n
    \  *  The child PCEs return the intra-domain paths to the parent PCE.\n   *  The
    parent PCE constructs the end-to-end inter-domain path based\n      on the intra-domain
    paths.\n   *  The parent PCE returns the inter-domain path to the child PCE.\n
    \  *  The child PCE forwards the inter-domain path to the PCC.\n   The parent
    PCE may be requested to provide only the sequence of\n   domains to a child PCE
    so that alternative inter-domain path\n   computation procedures, including per-domain
    (PD) path computation\n   [RFC5152] and Backward-Recursive PCE-Based Computation
    (BRPC)\n   [RFC5441], may be used.\n   This document defines the PCEP extensions
    for the purpose of\n   implementing H-PCE procedures, which are described in [RFC6805].\n"
  - contents:
    - "1.1.  Scope\n   The following functions are out of scope for this document:\n
      \  *  Determination of the destination domain (Section 4.5 of\n      [RFC6805]):\n
      \     -  via a collection of reachability information from child\n         domains,\n
      \     -  via requests to the child PCEs to discover if they contain the\n         destination
      node, or\n      -  via any other methods.\n   *  Parent Traffic Engineering
      Database (TED) methods (Section 4.4 of\n      [RFC6805]), although suitable
      mechanisms include:\n      -  YANG-based management interfaces.\n      -  BGP
      - Link State (BGP-LS) [RFC7752].\n      -  Future extensions to PCEP (for example,
      see [PCEP-LS]).\n   *  Learning of domain connectivity and border node addresses.\n
      \     Methods to achieve this function include:\n      -  YANG-based management
      interfaces.\n      -  BGP-LS [RFC7752].\n      -  Future extensions to PCEP
      (for example, see [PCEP-LS]).\n   *  Stateful PCE operations.  (Refer to [STATEFUL-HPCE].)\n
      \  *  Applicability of the H-PCE model to large multi-domain\n      environments.\n
      \     -  The hierarchical relationship model is described in [RFC6805].\n         It
      is applicable to environments with small groups of domains\n         where visibility
      from the ingress Label Switching Routers\n         (LSRs) is limited.  As highlighted
      in [RFC7399], applying the\n         H-PCE model to very large groups of domains,
      such as the\n         Internet, is not considered feasible or desirable.\n"
    title: 1.1.  Scope
  - contents:
    - "1.2.  Terminology\n   This document uses the terminology defined in [RFC4655]
      and\n   [RFC5440], and the additional terms defined in Section 1.4 of\n   [RFC6805].\n"
    title: 1.2.  Terminology
  - contents:
    - "1.3.  Requirements Language\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\",
      \"SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT
      RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted
      as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear
      in all\n   capitals, as shown here.\n"
    title: 1.3.  Requirements Language
  title: 1.  Introduction
- contents:
  - "2.  Requirements for the H-PCE Architecture\n   This section compiles the set
    of requirements for the PCEP extensions\n   to support the H-PCE architecture
    and procedures.  [RFC6805]\n   identifies high-level requirements for PCEP extensions
    that are\n   required for supporting the H-PCE model.\n"
  - contents:
    - "2.1.  Path Computation Requests\n   The PCReq messages [RFC5440] are used by
      a PCC or a PCE to make a\n   path computation request to a PCE.  In order to
      achieve the full\n   functionality of the H-PCE procedures, the PCReq message
      needs to\n   include:\n   *  Qualification of PCE requests (Section 4.8.1 of
      [RFC6805]).\n   *  Multi-domain Objective Functions (OFs).\n   *  Multi-domain
      metrics.\n"
    - contents:
      - "2.1.1.  Qualification of PCEP Requests\n   As described in Section 4.8.1
        of [RFC6805], the H-PCE architecture\n   introduces new request qualifications,
        which are as follows:\n   *  The ability for a child PCE to indicate that
        a PCReq message sent\n      to a parent PCE should be satisfied by a domain
        sequence only --\n      that is, not by a full end-to-end path.  This allows
        the child PCE\n      to initiate a PD path computation per [RFC5152] or a
        BRPC\n      procedure [RFC5441].\n   *  As stated in [RFC6805], Section 4.5,
        if a PCC knows the egress\n      domain, it can supply this information as
        part of the PCReq\n      message.  The PCC may also want to specify the destination
        domain\n      information in a PCEP request, if it is known.\n   *  An inter-domain
        path computed by a parent PCE should be capable of\n      disallowing re-entry
        into a specified domain.\n"
      title: 2.1.1.  Qualification of PCEP Requests
    - contents:
      - "2.1.2.  Multi-domain Objective Functions\n   For H-PCE inter-domain path
        computation, there are three new OFs\n   defined in this document:\n   *  Minimize
        the number of Transit Domains (MTD)\n   *  Minimize the number of Border Nodes
        (MBN)\n   *  Minimize the number of Common Transit Domains (MCTD)\n   The
        PCC may specify the multi-domain OF code to use when requesting\n   inter-domain
        path computation.  It may also include intra-domain OFs,\n   such as Minimum
        Cost Path (MCP) [RFC5541], which must be considered\n   by participating child
        PCEs.\n"
      title: 2.1.2.  Multi-domain Objective Functions
    - contents:
      - "2.1.3.  Multi-domain Metrics\n   For inter-domain path computation, there
        are two path metrics of\n   interest.\n   *  Domain Count (number of domains
        crossed).\n   *  Border Node Count.\n   A PCC may be able to limit the number
        of domains crossed by applying\n   a limit on these metrics.  See Section
        3.4 for details.\n"
      title: 2.1.3.  Multi-domain Metrics
    title: 2.1.  Path Computation Requests
  - contents:
    - "2.2.  Parent PCE Capability Advertisement\n   A PCEP speaker (parent PCE or
      child PCE) that supports and wishes to\n   use the procedures described in this
      document must advertise this\n   fact and negotiate its role with its PCEP peers.
      \ It does this using\n   the \"H-PCE Capability\" TLV, as described in Section
      3.2.1, in the\n   OPEN object [RFC5440] to advertise its support for PCEP extensions\n
      \  for the H-PCE capability.\n   During the PCEP session establishment procedure,
      the child PCE needs\n   to be capable of indicating to the parent PCE whether
      it requests the\n   parent PCE capability or not.\n"
    title: 2.2.  Parent PCE Capability Advertisement
  - contents:
    - "2.3.  PCE Domain Identification\n   A PCE domain is a single domain with an
      associated PCE, although it\n   is possible for a PCE to manage multiple domains
      simultaneously.  The\n   PCE domain could be an IGP area or Autonomous System
      (AS).\n   The PCE domain identifiers MAY be provided during the PCEP session\n
      \  establishment procedure.\n"
    title: 2.3.  PCE Domain Identification
  - contents:
    - "2.4.  Domain Diversity\n   \"Domain diversity\" in the context of a multi-domain
      environment is\n   defined in [RFC6805] and described as follows:\n   |  A pair
      of paths are domain-diverse if they do not transit any of\n   |  the same domains.
      \ A pair of paths that share a common ingress and\n   |  egress are domain-diverse
      if they only share the same domains at\n   |  the ingress and egress (the ingress
      and egress domains).  Domain\n   |  diversity may be maximized for a pair of
      paths by selecting paths\n   |  that have the smallest number of shared domains.\n
      \  The main motivation behind domain diversity is to avoid fate-sharing.\n   However,
      domain diversity may also be requested to avoid specific\n   transit domains
      due to security, geopolitical, and commercial\n   reasons.  For example, a pair
      of paths should choose different\n   transit ASes because of certain policy
      considerations.\n   In the case when full domain diversity could not be achieved,
      it is\n   helpful to minimize the commonly shared domains.  Also, it is\n   interesting
      to note that other domain-diversity techniques (node,\n   link, Shared Risk
      Link Group (SRLG), etc.) can still be applied\n   inside the commonly shared
      domains.\n"
    title: 2.4.  Domain Diversity
  title: 2.  Requirements for the H-PCE Architecture
- contents:
  - "3.  PCEP Extensions\n   This section defines extensions to PCEP [RFC5440] to
    support the\n   H-PCE procedures.\n"
  - contents:
    - "3.1.  Applicability to PCC-PCE Communications\n   Although the extensions defined
      in this document are intended\n   primarily for use between a child PCE and
      a parent PCE, they are also\n   applicable for communications between a PCC
      and its PCE.\n   Thus, the information that may be encoded in a PCReq can be
      sent from\n   a PCC towards the child PCE.  This includes the Request Parameters\n
      \  (RP) object ([RFC5440] and Section 3.3), the OF codes\n   (Section 3.4.1),
      and the OF object (Section 3.4.2).  A PCC and a\n   child PCE could also exchange
      the H-PCE capability (Section 3.2.1)\n   during its session.\n   This allows
      a PCC to request paths that transit multiple domains\n   utilizing the capabilities
      defined in this document.\n"
    title: 3.1.  Applicability to PCC-PCE Communications
  - contents:
    - "3.2.  OPEN Object\n   This document defines two new TLVs to be carried in an
      OPEN object.\n   This way, during the PCEP session establishment, the H-PCE
      capability\n   and domain information can be advertised.\n"
    - contents:
      - "3.2.1.  H-PCE-CAPABILITY TLV\n   The H-PCE-CAPABILITY TLV is an optional
        TLV associated with the OPEN\n   object [RFC5440] to exchange the H-PCE capability
        of PCEP speakers.\n   Its format is shown in the following figure:\n    0
        \                  1                   2                   3\n    0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |               Type=13
        \        |            Length=4           |\n   |                         Flags
        \                              |P|\n                   Figure 1: H-PCE-CAPABILITY
        TLV Format\n   The type of the TLV is 13, and it has a fixed length of 4 octets.\n
        \  The value comprises a single field -- Flags (32 bits):\n      P (Parent
        PCE Request bit):\n         If set, will signal that the child PCE wishes
        to use the peer\n         PCE as a parent PCE.\n   Unassigned bits MUST be
        set to 0 on transmission and MUST be ignored\n   on receipt.\n   The inclusion
        of this TLV in an OPEN object indicates that the H-PCE\n   extensions are
        supported by the PCEP speaker.  The child PCE MUST\n   include this TLV and
        set the P-flag.  The parent PCE MUST include\n   this TLV and unset the P-flag.\n
        \  The setting of the P-flag (Parent PCE Request bit) would mean that\n   the
        PCEP speaker wants the peer to be a parent PCE, so in the case of\n   a PCC-to-child-PCE
        relationship, neither entity would set the P-flag.\n   If both peers attempt
        to set the P-flag, then the session\n   establishment MUST fail, and the PCEP
        speaker MUST respond with a\n   PCErr message using Error-Type 1 (PCEP session
        establishment failure)\n   as per [RFC5440].\n   If the PCE understands the
        H-PCE PCReq message but did not advertise\n   its H-PCE capability, it MUST
        send a PCErr message with Error-Type=28\n   (H-PCE Error) and Error-Value=1
        (H-PCE Capability not advertised).\n"
      - contents:
        - "3.2.1.1.  Backwards Compatibility\n   Section 7.1 of [RFC5440] specifies
          the following requirement:\n   \"Unrecognized TLVs MUST be ignored.\"\n
          \  The OPEN object [RFC5440] contains the necessary PCEP information\n   between
          the PCE entities, including session information and PCE\n   capabilities
          via TLVs (including if H-PCE is supported).  If the PCE\n   does not support
          this document but receives an Open message\n   containing an OPEN object
          that includes an H-PCE-CAPABILITY TLV, it\n   will ignore that TLV and continue
          to attempt to establish a PCEP\n   session.  However, it will not include
          the TLV in the Open message\n   that it sends, so the H-PCE relationship
          will not be created.\n   If a PCE does not support the extensions defined
          in this document but\n   receives them in a PCEP message (notwithstanding
          the fact that the\n   session was not established as supporting an H-PCE
          relationship), the\n   receiving PCE will ignore the H-PCE related parameters
          because they\n   are all encoded in TLVs in standard PCEP objects.\n"
        title: 3.2.1.1.  Backwards Compatibility
      title: 3.2.1.  H-PCE-CAPABILITY TLV
    - contents:
      - "3.2.2.  Domain-ID TLV\n   The Domain-ID TLV, when used in the OPEN object,
        identifies the\n   domains served by the PCE.  The child PCE uses this mechanism
        to\n   provide the domain information to the parent PCE.\n   The Domain-ID
        TLV is defined below:\n    0                   1                   2                   3\n
        \   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |
        \              Type=14         |            Length             |\n   | Domain
        Type   |                  Reserved                     |\n   //                          Domain
        ID                          //\n                       Figure 2: Domain-ID
        TLV Format\n   The type of the TLV is 14, and it has a variable Length of
        the value\n   portion.  The value part comprises the following:\n      Domain
        Type (8 bits):  Indicates the domain type.  Four types of\n         domains
        are currently defined:\n         Type=1:   The Domain ID field carries a 2-byte
        AS number.\n                   Padded with trailing zeros to a 4-byte boundary.\n
        \        Type=2:   The Domain ID field carries a 4-byte AS number.\n         Type=3:
        \  The Domain ID field carries a 4-byte OSPF area ID.\n         Type=4:   The
        Domain ID field carries a 2-byte Area-Len and a\n                   variable-length
        IS-IS area ID.  Padded with trailing\n                   zeros to a 4-byte
        boundary.\n      Reserved:  Zero at transmission; ignored on receipt.\n      Domain
        ID (variable):  Indicates an IGP area ID or AS number as\n         per the
        Domain Type field.  It can be 2 bytes, 4 bytes, or\n         variable length,
        depending on the domain identifier used.  It\n         is padded with trailing
        zeros to a 4-byte boundary.  In the\n         case of IS-IS, it includes the
        Area-Len as well.\n   In the case where a PCE serves more than one domain,
        multiple Domain-\n   ID TLVs are included for each domain it serves.\n"
      title: 3.2.2.  Domain-ID TLV
    title: 3.2.  OPEN Object
  - contents:
    - '3.3.  RP Object

      '
    - contents:
      - "3.3.1.  H-PCE-FLAG TLV\n   The H-PCE-FLAG TLV is an optional TLV associated
        with the RP object\n   [RFC5440] to indicate the H-PCE PCReq message and options.\n
        \  Its format is shown in the following figure:\n    0                   1
        \                  2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3
        4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n   |               Type=15         |
        \            Length=4          |\n   |                         Flags                             |D|S|\n
        \                     Figure 3: H-PCE-FLAG TLV Format\n   The type of the
        TLV is 15, and it has a fixed length of 4 octets.\n   The value comprises
        a single field -- Flags (32 bits):\n      D (Disallow Domain Re-entry bit):\n
        \        If set, will signal that the computed path does not enter a\n         domain
        more than once.\n      S (Domain Sequence bit):\n         If set, will signal
        that the child PCE wishes to get only the\n         domain sequence in the
        Path Computation Reply (PCRep) message\n         [RFC5440].  Refer to Section
        3.7 of [RFC7897] for details.\n   Unassigned bits MUST be set to 0 on transmission
        and MUST be ignored\n   on receipt.\n   The presence of the TLV indicates
        that the H-PCE-based path\n   computation is requested as per this document.\n"
      title: 3.3.1.  H-PCE-FLAG TLV
    - contents:
      - "3.3.2.  Domain-ID TLV\n   The Domain-ID TLV, carried in an OPEN object, is
        used to indicate a\n   managed domain (or a list of managed domains) and is
        described in\n   Section 3.2.2.  This TLV, when carried in an RP object, indicates
        the\n   destination domain ID.  If a PCC knows the egress domain, it can\n
        \  supply this information in the PCReq message.  Section 3.2.2 also\n   defines
        the format for this TLV and the procedure for using it.\n   If a Domain-ID
        TLV is used in the RP object and the destination is\n   not actually in the
        indicated domain, then the parent PCE should\n   respond with a NO-PATH object
        and the NO-PATH-VECTOR TLV should be\n   used.  A new bit number is assigned
        to indicate \"Destination is not\n   found in the indicated domain\" (see
        Section 3.8).\n"
      title: 3.3.2.  Domain-ID TLV
    title: 3.3.  RP Object
  - contents:
    - '3.4.  Objective Functions

      '
    - contents:
      - "3.4.1.  OF Codes\n   [RFC5541] defines a mechanism to specify an OF that
        is used by a PCE\n   when it computes a path.  Three new OFs are defined for
        the H-PCE\n   model; these are:\n   *  MTD\n      Name:  Minimize the number
        of Transit Domains (MTD)\n      OF code:  12\n      Description:  Find a path
        P such that it passes through the least\n         number of transit domains.\n
        \     -  OFs are formulated using the following terminology:\n         o  A
        network comprises a set of N domains {Di, (i=1...N)}.\n         o  A path
        P passes through K unique domains {Dpi, (i=1...K)}.\n         o  Find a path
        P such that the value of K is minimized.\n   *  MBN\n      Name:  Minimize
        the number of Border Nodes (MBN)\n      OF code:  13\n      Description:  Find
        a path P such that it passes through the least\n         number of border
        nodes.\n      -  OFs are formulated using the following terminology:\n         o
        \ A network comprises a set of N links {Li, (i=1...N)}.\n         o  A path
        P is a list of K links {Lpi, (i=1...K)}.\n         o  D(Lpi) is a function
        that determines if the links Lpi and\n            Lpi+1 belong to different
        domains.  D(Li) = 1 if link Li and\n            Li+1 belong to different domains;
        D(Lk) = 0 if link Lk and\n            Lk+1 belong to the same domain.\n         o
        \ The number of border nodes in a path P is denoted by B(P),\n            where
        B(P) = sum{D(Lpi), (i=1...K-1)}.\n         o  Find a path P such that B(P)
        is minimized.\n   There is one OF that applies to a set of synchronized PCReq
        messages\n   to increase the domain diversity:\n   *  MCTD\n      Name:  Minimize
        the number of Common Transit Domains (MCTD)\n      OF code:  14\n      Description:
        \ Find a set of paths such that it passes through the\n         least number
        of common transit domains.\n      -  A network comprises a set of N domains
        {Di, (i=1...N)}.\n      -  A path P passes through K unique domains {Dpi,
        (i=1...K)}.\n      -  A set of paths {P1...Pm} has L transit domains that
        are common\n         to more than one path {Dpi, (i=1...L)}.\n      -  Find
        a set of paths such that the value of L is minimized.\n"
      title: 3.4.1.  OF Codes
    - contents:
      - "3.4.2.  OF Object\n   The OF object [RFC5541] is carried in a PCReq message
        so as to\n   indicate the desired/required OF to be applied by the PCE during
        path\n   computation.  As per Section 3.2 of [RFC5541], a single OF object
        may\n   be included in a PCReq message.\n   The new OF codes described in
        Section 3.4.1 are applicable to the\n   inter-domain path computation performed
        by the parent PCE.  It is\n   also necessary to specify the OF code that may
        be applied for the\n   intra-domain path computation performed by the child
        PCE.  To\n   accommodate this, the OF-List TLV (described in Section 2.1 of\n
        \  [RFC5541]) is included in the OF object as an optional TLV.\n   The OF-List
        TLV allows the encoding of multiple OF codes.  When this\n   TLV is included
        inside the OF object, only the first OF code in the\n   OF-List TLV is considered.
        \ The parent PCE MUST use this OF code in\n   the OF object when sending the
        intra-domain PCReq message to the\n   child PCE.  If the OF-List TLV is included
        in the OF object, the OF\n   code inside the OF object MUST include one of
        the H-PCE OFs defined\n   in this document.  The OF code inside the OF-List
        TLV MUST NOT\n   include an H-PCE OF.  If this condition is not met, the PCEP
        speaker\n   MUST respond with a PCErr message with Error-Type=10 (Reception
        of an\n   invalid object) and Error-Value=23 (Incompatible OF codes in H-PCE).\n
        \  If the OFs defined in this document are unknown or unsupported by a\n   PCE,
        then the procedure as defined in [RFC5440] is followed.\n"
      title: 3.4.2.  OF Object
    title: 3.4.  Objective Functions
  - contents:
    - "3.5.  METRIC Object\n   The METRIC object is defined in Section 7.8 of [RFC5440]
      and is\n   comprised of the metric-value field, the metric type (the T field),\n
      \  and flags (the Flags field).  This document defines the following\n   types
      for the METRIC object for the H-PCE model:\n      T=20:  Domain Count metric
      (number of domains crossed).\n      T=21:  Border Node Count metric (number
      of border nodes crossed).\n   The Domain Count metric type of the METRIC object
      encodes the number\n   of domains crossed in the path.  The Border Node Count
      metric type of\n   the METRIC object encodes the number of border nodes in the
      path.  If\n   a domain is re-entered, then the domain should be double counted.\n
      \  A PCC or child PCE MAY use the metric in a PCReq message for an\n   inter-domain
      path computation, meeting the requirement for the number\n   of domains or border
      nodes being crossed.  As per [RFC5440], in this\n   case, the B-bit is set to
      suggest a bound (a maximum) for the metric\n   that must not be exceeded for
      the PCC to consider the computed path\n   acceptable.\n   A PCC or child PCE
      MAY also use this metric to ask the PCE to\n   optimize the metric during inter-domain
      path computation.  In this\n   case, the B-flag is cleared, and the C-flag is
      set.\n   The parent PCE MAY use the metric in a PCRep message along with a NO-\n
      \  PATH object in the case where the PCE cannot compute a path that\n   meets
      this constraint.  A PCE MAY also use this metric to send the\n   computed end-to-end
      metric value in a reply message.\n"
    title: 3.5.  METRIC Object
  - contents:
    - "3.6.  SVEC Object\n   [RFC5440] defines the Synchronization Vector (SVEC) object,
      which\n   includes flags for the potential dependency between the set of PCReq\n
      \  messages (Link, Node, and SRLG diverse).  This document defines a new\n   flag
      (the O-bit) for domain diversity.\n   The following new bit is added to the
      Flags field:\n      Domain Diverse O-bit - 18:\n         When set, this indicates
      that the computed paths corresponding\n         to the requests specified by
      any RP objects that might be\n         provided MUST NOT have any transit domains
      in common.\n   The Domain Diverse O-bit can be used in H-PCE path computation
      to\n   compute synchronized domain-diverse end-to-end paths or diverse\n   domain
      sequences.\n   When the Domain Diverse O-bit is set, it is applied to the transit\n
      \  domains.  The other bit in SVEC object L (Link diverse), N (Node\n   diverse),
      S (SRLG diverse), etc. MAY be set and MUST still be applied\n   in the ingress
      and egress shared domain.\n"
    title: 3.6.  SVEC Object
  - contents:
    - '3.7.  PCEP-ERROR Object

      '
    - contents:
      - "3.7.1.  Hierarchical PCE Error-Type\n   A new PCEP Error-Type [RFC5440] is
        used for the H-PCE extension as\n   defined below:\n   | Error-Type | Meaning
        \                                             |\n   | 28         | H-PCE Error
        \                                         |\n   |            |       Error-Value=1:
        H-PCE Capability not            |\n   |            |       advertised                                     |\n
        \  |            |       Error-Value=2: Parent PCE Capability cannot    |\n
        \  |            |       be provided                                    |\n
        \                           Table 1: H-PCE Error\n"
      title: 3.7.1.  Hierarchical PCE Error-Type
    title: 3.7.  PCEP-ERROR Object
  - contents:
    - "3.8.  NO-PATH Object\n   To communicate the reason(s) for not being able to
      find a multi-\n   domain path or domain sequence, the NO-PATH object can be
      used in the\n   PCRep message.  [RFC5440] defines the format of the NO-PATH
      object.\n   The object may contain a NO-PATH-VECTOR TLV to provide additional\n
      \  information about why a path computation has failed.\n   This document defines
      four new bit flags in the \"NO-PATH-VECTOR TLV\n   Flag Field\" subregistry.
      \ These flags are to be carried in the Flags\n   field in the NO-PATH-VECTOR
      TLV carried in the NO-PATH object.\n      Bit number 22:  When set, the parent
      PCE indicates that the\n                      destination domain is unknown.\n
      \     Bit number 21:  When set, the parent PCE indicates that one or\n                      more
      child PCEs are unresponsive.\n      Bit number 20:  When set, the parent PCE
      indicates that no\n                      resources are available in one or more
      domains.\n      Bit number 19:  When set, the parent PCE indicates that the\n
      \                     destination is not found in the indicated domain.\n"
    title: 3.8.  NO-PATH Object
  title: 3.  PCEP Extensions
- contents:
  - "4.  H-PCE Procedures\n   The H-PCE path computation procedure is described in
    [RFC6805].\n"
  - contents:
    - "4.1.  OPEN Procedure between Child PCE and Parent PCE\n   If a child PCE wants
      to use the peer PCE as a parent, it MUST set the\n   P-flag (Parent PCE Request
      flag) in the H-PCE-CAPABILITY TLV inside\n   the OPEN object carried in the
      Open message during the PCEP session\n   initialization procedure.\n   The child
      PCE MAY also report its list of domain IDs to the parent\n   PCE by specifying
      them in the Domain-ID TLVs in the OPEN object.\n   This object is carried in
      the Open message during the PCEP session\n   initialization procedure.\n   The
      OF codes defined in this document can be carried in the OF-List\n   TLV of the
      OPEN object.  If the OF-List TLV carries the OF codes, it\n   means that the
      PCE is capable of implementing the corresponding OFs.\n   This information can
      be used for selecting a proper parent PCE when a\n   child PCE wants to get
      a path that satisfies a certain OF.\n   When a child PCE sends a PCReq to a
      peer PCE that requires parental\n   activity and the H-PCE-CAPABILITY TLV but
      these items were not taken\n   into account in the session establishment procedure
      described above,\n   the peer PCE SHOULD send a PCErr message to the child PCE
      and MUST\n   specify Error-Type=28 (H-PCE Error) and Error-Value=1 (H-PCE\n
      \  Capability not advertised) in the PCEP-ERROR object.\n   When a specific
      child PCE sends a PCReq to a peer PCE that requires\n   parental activity and
      the peer PCE does not want to act as the parent\n   for it, the peer PCE SHOULD
      send a PCErr message to the child PCE and\n   MUST specify Error-Type=28 (H-PCE
      Error) and Error-Value=2 (Parent\n   PCE Capability cannot be provided) in the
      PCEP-ERROR object.\n"
    title: 4.1.  OPEN Procedure between Child PCE and Parent PCE
  - contents:
    - "4.2.  Procedure for Obtaining the Domain Sequence\n   If a child PCE only wants
      to get the domain sequence for a multi-\n   domain path computation from a parent
      PCE, it can set the Domain Path\n   Request bit in the H-PCE-FLAG TLV in the
      RP object carried in a PCReq\n   message.  The parent PCE that receives the
      PCReq message tries to\n   compute a domain sequence for it (instead of the
      end-to-end path).\n   If the domain path computation succeeds, the parent PCE
      sends a PCRep\n   message that carries the domain sequence in the Explicit Route
      Object\n   (ERO) to the child PCE.  Refer to [RFC7897] for more details about\n
      \  domain subobjects in the ERO.  Otherwise, it sends a PCReq message\n   that
      carries the NO-PATH object to the child PCE.\n"
    title: 4.2.  Procedure for Obtaining the Domain Sequence
  title: 4.  H-PCE Procedures
- contents:
  - "5.  Error Handling\n   A PCE that is capable of acting as a parent PCE might
    not be\n   configured or willing to act as the parent for a specific child PCE.\n
    \  When the child PCE sends a PCReq that requires parental activity, a\n   negative
    response in the form of a PCEP Error (PCErr) message that\n   includes H-PCE Error-Type=28
    (H-PCE Error) and an applicable Error-\n   Value (Section 3.7) might result.\n
    \  Additionally, the parent PCE may fail to find the multi-domain path\n   or
    domain sequence for one or more of the following reasons:\n   *  A child PCE cannot
    find a suitable path to the egress.\n   *  The parent PCE does not hear from a
    child PCE for a specified\n      time.\n   *  The OFs specified in the path request
    cannot be met.\n   In this case, the parent PCE MAY need to send a negative PCRep\n
    \  message specifying the reason for the failure.  This can be achieved\n   by
    including the NO-PATH object in the PCRep message.  An extension\n   to the NO-PATH
    object is needed in order to include the reasons\n   defined in Section 3.8.\n"
  title: 5.  Error Handling
- contents:
  - "6.  Manageability Considerations\n   General PCE and PCEP management/manageability
    considerations are\n   discussed in [RFC4655] and [RFC5440].  There are additional\n
    \  management considerations for the H-PCE model; these are described in\n   [RFC6805]
    and repeated in this section.\n   The administrative entity responsible for the
    management of the\n   parent PCEs must be determined for the following cases:\n
    \  *  Multiple domains (e.g., IGP areas or multiple ASes) in a single\n      service
    provider network.  The management responsibility for the\n      parent PCE would
    most likely be handled by the service provider.\n   *  Multiple ASes in different
    service provider networks.  It may be\n      necessary for a third party to manage
    the parent PCEs according to\n      commercial and policy agreements from each
    of the participating\n      service providers.\n"
  - contents:
    - "6.1.  Control of Function and Policy\n   Control of H-PCE function will need
      to be carefully managed via\n   configuration and interaction policies, which
      may be controlled via a\n   policy module on the H-PCE.  A child PCE will need
      to be configured\n   with the address of its parent PCE.  It is expected that
      there will\n   only be one or two parents of any child.\n   The parent PCE also
      needs to be aware of the child PCEs for all child\n   domains that it can see.
      \ This information is most likely to be\n   configured (as part of the administrative
      definition of each domain).\n   Discovery of the relationships between parent
      PCEs and child PCEs\n   does not form part of the H-PCE architecture.  Mechanisms
      that rely\n   on advertising or querying PCE locations across domain or provider\n
      \  boundaries are undesirable for security, scaling, commercial, and\n   confidentiality
      reasons.  The specific behavior of the child and\n   parent PCEs is described
      in the following subsections.\n"
    - contents:
      - "6.1.1.  Child PCE\n   Support of the hierarchical procedure will be controlled
        by the\n   management organization responsible for each child PCE.  A child
        PCE\n   must be configured with the address of its parent PCE in order for
        it\n   to interact with its parent PCE.  The child PCE must also be\n   authorized
        to peer with the parent PCE.\n"
      title: 6.1.1.  Child PCE
    - contents:
      - "6.1.2.  Parent PCE\n   The parent PCE MUST only accept PCReq messages from
        authorized child\n   PCEs.  If a parent PCE receives requests from an unauthorized
        child\n   PCE, the request SHOULD be dropped.  This means that a parent PCE\n
        \  MUST be able to cryptographically authenticate requests from child\n   PCEs.\n
        \  Multi-party shared key authentication schemes are not recommended for\n
        \  inter-domain relationships because of (1) the potential for\n   impersonation
        and repudiation and (2) operational difficulties should\n   revocation be
        required.\n   The choice of authentication schemes to employ may be left to\n
        \  implementers of the H-PCE architecture and are not discussed further\n
        \  in this document.\n"
      title: 6.1.2.  Parent PCE
    - contents:
      - "6.1.3.  Policy Control\n   It may be necessary to maintain H-PCE policy [RFC5394]
        via a policy\n   control module on the parent PCE.  This would allow the parent
        PCE to\n   apply commercially relevant constraints such as SLAs, security,\n
        \  peering preferences, and monetary costs.\n   It may also be necessary for
        the parent PCE to limit the end-to-end\n   path selection by including or
        excluding specific domains based on\n   commercial relationships, security
        implications, and reliability.\n"
      title: 6.1.3.  Policy Control
    title: 6.1.  Control of Function and Policy
  - contents:
    - "6.2.  Information and Data Models\n   [RFC7420] provides a MIB module for PCEP
      and describes managed\n   objects for the modeling of PCEP communication.  A
      YANG module for\n   PCEP has also been proposed [PCEP-YANG].\n   An H-PCE MIB
      module or an additional data model will also be required\n   for reporting parent
      PCE and child PCE information, including:\n   *  parent PCE configuration and
      status,\n   *  child PCE configuration and information,\n   *  notifications
      to indicate session changes between parent PCEs and\n      child PCEs, and\n
      \  *  notification of parent PCE TED updates and changes.\n"
    title: 6.2.  Information and Data Models
  - contents:
    - "6.3.  Liveness Detection and Monitoring\n   The hierarchical procedure requires
      interaction with multiple PCEs.\n   Once a child PCE requests an end-to-end
      path, a sequence of events\n   occurs that requires interaction between the
      parent PCE and each\n   child PCE.  If a child PCE is not operational and an
      alternate\n   transit domain is not available, then the failure must be reported.\n"
    title: 6.3.  Liveness Detection and Monitoring
  - contents:
    - "6.4.  Verifying Correct Operations\n   Verifying the correct operation of a
      parent PCE can be performed by\n   monitoring a set of parameters.  The parent
      PCE implementation should\n   provide the following parameters monitored at
      the parent PCE:\n   *  number of child PCE requests,\n   *  number of successful
      H-PCE procedure completions on a per-PCE-peer\n      basis,\n   *  number of
      H-PCE procedure-completion failures on a per-PCE-peer\n      basis, and\n   *
      \ number of H-PCE procedure requests from unauthorized child PCEs.\n"
    title: 6.4.  Verifying Correct Operations
  - contents:
    - "6.5.  Requirements on Other Protocols\n   Mechanisms defined in this document
      do not imply any new requirements\n   on other protocols.\n"
    title: 6.5.  Requirements on Other Protocols
  - contents:
    - "6.6.  Impact on Network Operations\n   The H-PCE procedure is a multiple-PCE
      path computation scheme.\n   Subsequent requests to and from the child and parent
      PCEs do not\n   differ from other path computation requests and should not have
      any\n   significant impact on network operations.\n"
    title: 6.6.  Impact on Network Operations
  title: 6.  Manageability Considerations
- contents:
  - "7.  IANA Considerations\n   IANA maintains the \"Path Computation Element Protocol
    (PCEP) Numbers\"\n   registry.  IANA has allocated code points for the protocol
    elements\n   defined in this document.\n"
  - contents:
    - "7.1.  PCEP TLV Type Indicators\n   IANA maintains the \"PCEP TLV Type Indicators\"
      subregistry (see\n   [RFC5440]) within the \"Path Computation Element Protocol
      (PCEP)\n   Numbers\" registry.\n   IANA has allocated the following three new
      PCEP TLVs:\n                  | Type | TLV Name         | Reference |\n                  |
      13   | H-PCE-CAPABILITY | RFC 8685  |\n                  | 14   | Domain-ID
      \       | RFC 8685  |\n                  | 15   | H-PCE-FLAG       | RFC 8685
      \ |\n                           Table 2: New PCEP TLVs\n"
    title: 7.1.  PCEP TLV Type Indicators
  - contents:
    - "7.2.  H-PCE-CAPABILITY TLV Flags\n   IANA has created the \"H-PCE-CAPABILITY
      TLV Flag Field\" subregistry\n   within the \"Path Computation Element Protocol
      (PCEP) Numbers\"\n   registry to manage the Flag field in the H-PCE-CAPABILITY
      TLV of the\n   PCEP OPEN object.\n   New values are assigned by Standards Action
      [RFC8126].  Each\n   registered bit should include the following information:\n
      \  *  Bit number (counting from bit 0 as the most significant bit)\n   *  Capability
      description\n   *  Defining RFC\n   The following value is defined in this document:\n
      \            | Bit | Description                | Reference |\n             |
      31  | P (Parent PCE Request bit) | RFC 8685  |\n                     Table 3:
      Parent PCE Request Bit\n"
    title: 7.2.  H-PCE-CAPABILITY TLV Flags
  - contents:
    - "7.3.  Domain-ID TLV Domain Type\n   IANA has created the \"Domain-ID TLV Domain
      Type\" subregistry within\n   the \"Path Computation Element Protocol (PCEP)
      Numbers\" registry to\n   manage the Domain Type field of the Domain-ID TLV.
      \ The allocation\n   policy for this new subregistry is IETF Review [RFC8126].\n
      \  The following values are defined in this document:\n                 | Value
      | Meaning                       |\n                 | 0     | Reserved                      |\n
      \                | 1     | 2-byte AS number              |\n                 |
      2     | 4-byte AS number              |\n                 | 3     | 4-byte OSPF
      area ID           |\n                 | 4     | Variable-length IS-IS area ID
      |\n                 | 5-255 | Unassigned                    |\n                   Table
      4: Parameters for Domain-ID TLV\n"
    title: 7.3.  Domain-ID TLV Domain Type
  - contents:
    - "7.4.  H-PCE-FLAG TLV Flags\n   IANA has created the \"H-PCE-FLAG TLV Flag Field\"
      subregistry within\n   the \"Path Computation Element Protocol (PCEP) Numbers\"
      registry to\n   manage the Flag field in the H-PCE-FLAG TLV of the PCEP RP object.\n
      \  New values are to be assigned by Standards Action [RFC8126].  Each\n   registered
      bit should include the following information:\n   *  Bit number (counting from
      bit 0 as the most significant bit)\n   *  Capability description\n   *  Defining
      RFC\n   The following values are defined in this document:\n          | Bit
      | Description                      | Reference |\n          | 30  | D (Disallow
      Domain Re-entry bit) | RFC 8685  |\n          | 31  | S (Domain Sequence bit)
      \         | RFC 8685  |\n              Table 5: New H-PCE-FLAG TLV Flag Field
      Entries\n"
    title: 7.4.  H-PCE-FLAG TLV Flags
  - contents:
    - "7.5.  OF Codes\n   IANA maintains a list of OFs (described in [RFC5541]) in
      the\n   \"Objective Function\" subregistry within the \"Path Computation Element\n
      \  Protocol (PCEP) Numbers\" registry.\n   IANA has allocated the following
      OFs:\n        | Code Point | Name                          | Reference |\n        |
      12         | Minimize the number of        | RFC 8685  |\n        |            |
      Transit Domains (MTD)         |           |\n        | 13         | Minimize
      the number of Border | RFC 8685  |\n        |            | Nodes (MBN)                   |
      \          |\n        | 14         | Minimize the number of Common | RFC 8685
      \ |\n        |            | Transit Domains (MCTD)        |           |\n                          Table
      6: New OF Codes\n"
    title: 7.5.  OF Codes
  - contents:
    - "7.6.  METRIC Object Types\n   IANA maintains the \"METRIC Object T Field\"
      subregistry [RFC5440]\n   within the \"Path Computation Element Protocol (PCEP)
      Numbers\"\n   registry.\n   The following two new metric types for the METRIC
      object are defined\n   in this document:\n             | Value | Description
      \             | Reference |\n             | 20    | Domain Count metric      |
      RFC 8685  |\n             | 21    | Border Node Count metric | RFC 8685  |\n
      \                    Table 7: New METRIC Object Types\n"
    title: 7.6.  METRIC Object Types
  - contents:
    - "7.7.  New PCEP Error-Types and Values\n   IANA maintains a list of Error-Types
      and Error-Values for use in PCEP\n   messages.  This list is maintained in the
      \"PCEP-ERROR Object Error\n   Types and Values\" subregistry within the \"Path
      Computation Element\n   Protocol (PCEP) Numbers\" registry.\n   IANA has allocated
      the following:\n   | Error-Type | Meaning and Error Values                 |
      Reference |\n   | 28         | H-PCE Error                              | RFC
      8685  |\n   |            |       Error-Value=1: H-PCE Capability    |           |\n
      \  |            |       not advertised                     |           |\n   |
      \           |       Error-Value=2: Parent PCE          |           |\n   |            |
      \      Capability cannot be provided      |           |\n   | 10         | Reception
      of an invalid object           | RFC 5440  |\n   |            |       Error-Value=23:
      Incompatible OF    | RFC 8685  |\n   |            |       codes in H-PCE                     |
      \          |\n                  Table 8: New PCEP Error-Types and Values\n"
    title: 7.7.  New PCEP Error-Types and Values
  - contents:
    - "7.8.  New NO-PATH-VECTOR TLV Bit Flag\n   IANA maintains the \"NO-PATH-VECTOR
      TLV Flag Field\" subregistry, which\n   contains a list of bit flags carried
      in the PCEP NO-PATH-VECTOR TLV\n   in the PCEP NO-PATH object as defined in
      [RFC5440].\n   IANA has allocated the following four new bit flags:\n          |
      Bit Number | Description                | Reference |\n          | 22         |
      Destination domain unknown | RFC 8685  |\n          | 21         | Unresponsive
      child PCE(s)  | RFC 8685  |\n          | 20         | No available resource
      in   | RFC 8685  |\n          |            | one or more domains        |           |\n
      \         | 19         | Destination is not found   | RFC 8685  |\n          |
      \           | in the indicated domain    |           |\n                     Table
      9: PCEP NO-PATH Object Flags\n"
    title: 7.8.  New NO-PATH-VECTOR TLV Bit Flag
  - contents:
    - "7.9.  SVEC Flag\n   IANA maintains the \"SVEC Object Flag Field\" subregistry,
      which\n   contains a list of bit flags carried in the PCEP SVEC object as\n
      \  defined in [RFC5440].\n   IANA has allocated the following new bit flag:\n
      \            | Bit Number | Description          | Reference |\n             |
      18         | Domain Diverse O-bit | RFC 8685  |\n                       Table
      10: Domain Diverse O-Bit\n"
    title: 7.9.  SVEC Flag
  title: 7.  IANA Considerations
- contents:
  - "8.  Security Considerations\n   The H-PCE procedure relies on PCEP and inherits
    the security\n   considerations defined in [RFC5440].  As PCEP operates over TCP,
    it\n   may also make use of TCP security mechanisms, such as the TCP\n   Authentication
    Option (TCP-AO) [RFC5925] or Transport Layer Security\n   (TLS) [RFC8253] [RFC8446].\n
    \  Any multi-domain operation necessarily involves the exchange of\n   information
    across domain boundaries.  This may represent a\n   significant security and confidentiality
    risk, especially when the\n   child domains are controlled by different commercial
    concerns.  PCEP\n   allows individual PCEs to maintain the confidentiality of
    their\n   domain path information using path-keys [RFC5520], and the H-PCE\n   architecture
    is specifically designed to enable as much isolation of\n   information related
    to domain topology and capabilities as possible.\n   For further considerations
    regarding the security issues related to\n   inter-AS path computation, see [RFC5376].\n"
  title: 8.  Security Considerations
- contents:
  - '9.  References

    '
  - contents:
    - "9.1.  Normative References\n   [RFC2119]  Bradner, S., \"Key words for use
      in RFCs to Indicate\n              Requirement Levels\", BCP 14, RFC 2119,\n
      \             DOI 10.17487/RFC2119, March 1997,\n              <https://www.rfc-editor.org/info/rfc2119>.\n
      \  [RFC5440]  Vasseur, JP., Ed. and JL. Le Roux, Ed., \"Path Computation\n              Element
      (PCE) Communication Protocol (PCEP)\", RFC 5440,\n              DOI 10.17487/RFC5440,
      March 2009,\n              <https://www.rfc-editor.org/info/rfc5440>.\n   [RFC5541]
      \ Le Roux, JL., Vasseur, JP., and Y. Lee, \"Encoding of\n              Objective
      Functions in the Path Computation Element\n              Communication Protocol
      (PCEP)\", RFC 5541,\n              DOI 10.17487/RFC5541, June 2009,\n              <https://www.rfc-editor.org/info/rfc5541>.\n
      \  [RFC8174]  Leiba, B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119
      Key Words\", BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017,
      <https://www.rfc-editor.org/info/rfc8174>.\n"
    title: 9.1.  Normative References
  - contents:
    - "9.2.  Informative References\n   [RFC4105]  Le Roux, J.-L., Ed., Vasseur, J.-P.,
      Ed., and J. Boyle,\n              Ed., \"Requirements for Inter-Area MPLS Traffic\n
      \             Engineering\", RFC 4105, DOI 10.17487/RFC4105, June 2005,\n              <https://www.rfc-editor.org/info/rfc4105>.\n
      \  [RFC4216]  Zhang, R., Ed. and J.-P. Vasseur, Ed., \"MPLS Inter-\n              Autonomous
      System (AS) Traffic Engineering (TE)\n              Requirements\", RFC 4216,
      DOI 10.17487/RFC4216, November\n              2005, <https://www.rfc-editor.org/info/rfc4216>.\n
      \  [RFC4655]  Farrel, A., Vasseur, J.-P., and J. Ash, \"A Path\n              Computation
      Element (PCE)-Based Architecture\", RFC 4655,\n              DOI 10.17487/RFC4655,
      August 2006,\n              <https://www.rfc-editor.org/info/rfc4655>.\n   [RFC4726]
      \ Farrel, A., Vasseur, J.-P., and A. Ayyangar, \"A Framework\n              for
      Inter-Domain Multiprotocol Label Switching Traffic\n              Engineering\",
      RFC 4726, DOI 10.17487/RFC4726, November\n              2006, <https://www.rfc-editor.org/info/rfc4726>.\n
      \  [RFC5152]  Vasseur, JP., Ed., Ayyangar, A., Ed., and R. Zhang, \"A\n              Per-Domain
      Path Computation Method for Establishing Inter-\n              Domain Traffic
      Engineering (TE) Label Switched Paths\n              (LSPs)\", RFC 5152, DOI
      10.17487/RFC5152, February 2008,\n              <https://www.rfc-editor.org/info/rfc5152>.\n
      \  [RFC5376]  Bitar, N., Zhang, R., and K. Kumaki, \"Inter-AS\n              Requirements
      for the Path Computation Element\n              Communication Protocol (PCECP)\",
      RFC 5376,\n              DOI 10.17487/RFC5376, November 2008,\n              <https://www.rfc-editor.org/info/rfc5376>.\n
      \  [RFC5394]  Bryskin, I., Papadimitriou, D., Berger, L., and J. Ash,\n              \"Policy-Enabled
      Path Computation Framework\", RFC 5394,\n              DOI 10.17487/RFC5394,
      December 2008,\n              <https://www.rfc-editor.org/info/rfc5394>.\n   [RFC5520]
      \ Bradford, R., Ed., Vasseur, JP., and A. Farrel,\n              \"Preserving
      Topology Confidentiality in Inter-Domain Path\n              Computation Using
      a Path-Key-Based Mechanism\", RFC 5520,\n              DOI 10.17487/RFC5520,
      April 2009,\n              <https://www.rfc-editor.org/info/rfc5520>.\n   [RFC5441]
      \ Vasseur, JP., Ed., Zhang, R., Bitar, N., and JL. Le Roux,\n              \"A
      Backward-Recursive PCE-Based Computation (BRPC)\n              Procedure to
      Compute Shortest Constrained Inter-Domain\n              Traffic Engineering
      Label Switched Paths\", RFC 5441,\n              DOI 10.17487/RFC5441, April
      2009,\n              <https://www.rfc-editor.org/info/rfc5441>.\n   [RFC5925]
      \ Touch, J., Mankin, A., and R. Bonica, \"The TCP\n              Authentication
      Option\", RFC 5925, DOI 10.17487/RFC5925,\n              June 2010, <https://www.rfc-editor.org/info/rfc5925>.\n
      \  [RFC6805]  King, D., Ed. and A. Farrel, Ed., \"The Application of the\n              Path
      Computation Element Architecture to the Determination\n              of a Sequence
      of Domains in MPLS and GMPLS\", RFC 6805,\n              DOI 10.17487/RFC6805,
      November 2012,\n              <https://www.rfc-editor.org/info/rfc6805>.\n   [RFC7399]
      \ Farrel, A. and D. King, \"Unanswered Questions in the Path\n              Computation
      Element Architecture\", RFC 7399,\n              DOI 10.17487/RFC7399, October
      2014,\n              <https://www.rfc-editor.org/info/rfc7399>.\n   [RFC7420]
      \ Koushik, A., Stephan, E., Zhao, Q., King, D., and J.\n              Hardwick,
      \"Path Computation Element Communication Protocol\n              (PCEP) Management
      Information Base (MIB) Module\",\n              RFC 7420, DOI 10.17487/RFC7420,
      December 2014,\n              <https://www.rfc-editor.org/info/rfc7420>.\n   [RFC7752]
      \ Gredler, H., Ed., Medved, J., Previdi, S., Farrel, A., and\n              S.
      Ray, \"North-Bound Distribution of Link-State and\n              Traffic Engineering
      (TE) Information Using BGP\", RFC 7752,\n              DOI 10.17487/RFC7752,
      March 2016,\n              <https://www.rfc-editor.org/info/rfc7752>.\n   [RFC7897]
      \ Dhody, D., Palle, U., and R. Casellas, \"Domain Subobjects\n              for
      the Path Computation Element Communication Protocol\n              (PCEP)\",
      RFC 7897, DOI 10.17487/RFC7897, June 2016,\n              <https://www.rfc-editor.org/info/rfc7897>.\n
      \  [RFC8126]  Cotton, M., Leiba, B., and T. Narten, \"Guidelines for\n              Writing
      an IANA Considerations Section in RFCs\", BCP 26,\n              RFC 8126, DOI
      10.17487/RFC8126, June 2017,\n              <https://www.rfc-editor.org/info/rfc8126>.\n
      \  [RFC8253]  Lopez, D., Gonzalez de Dios, O., Wu, Q., and D. Dhody,\n              \"PCEPS:
      Usage of TLS to Provide a Secure Transport for the\n              Path Computation
      Element Communication Protocol (PCEP)\",\n              RFC 8253, DOI 10.17487/RFC8253,
      October 2017,\n              <https://www.rfc-editor.org/info/rfc8253>.\n   [RFC8446]
      \ Rescorla, E., \"The Transport Layer Security (TLS) Protocol\n              Version
      1.3\", RFC 8446, DOI 10.17487/RFC8446, August 2018,\n              <https://www.rfc-editor.org/info/rfc8446>.\n
      \  [PCEP-YANG]\n              Dhody, D., Ed., Hardwick, J., Beeram, V., and
      J. Tantsura,\n              \"A YANG Data Model for Path Computation Element\n
      \             Communications Protocol (PCEP)\", Work in Progress,\n              Internet-Draft,
      draft-ietf-pce-pcep-yang-13, 31 October\n              2019,\n              <https://tools.ietf.org/html/draft-ietf-pce-pcep-yang-13>.\n
      \  [STATEFUL-HPCE]\n              Dhody, D., Lee, Y., Ceccarelli, D., Shin,
      J., and D. King,\n              \"Hierarchical Stateful Path Computation Element
      (PCE)\",\n              Work in Progress, Internet-Draft, draft-ietf-pce-stateful-\n
      \             hpce-15, 20 October 2019, <https://tools.ietf.org/html/\n              draft-ietf-pce-stateful-hpce-15>.\n
      \  [PCEP-LS]  Dhody, D., Lee, Y., and D. Ceccarelli, \"PCEP Extension for\n
      \             Distribution of Link-State and TE Information.\", Work in\n              Progress,
      Internet-Draft, draft-dhodylee-pce-pcep-ls-14,\n              21 October 2019,
      <https://tools.ietf.org/html/draft-\n              dhodylee-pce-pcep-ls-14>.\n"
    title: 9.2.  Informative References
  title: 9.  References
- contents:
  - "Acknowledgements\n   The authors would like to thank Mike McBride, Kyle Rose,
    and Roni\n   Even for their detailed review, comments, and suggestions, which\n
    \  helped improve this document.\n"
  title: Acknowledgements
- contents:
  - "Contributors\n   The following people contributed substantially to the content
    of this\n   document and should be considered coauthors:\n   Xian Zhang\n   Huawei\n
    \  Email: zhang.xian@huawei.com\n   Dhruv Dhody\n   Huawei Technologies\n   Divyashree
    Techno Park, Whitefield\n   Bangalore 560066\n   Karnataka\n   India\n   Email:
    dhruv.ietf@gmail.com\n"
  title: Contributors
- contents:
  - "Authors' Addresses\n   Fatai Zhang\n   Huawei\n   Huawei Base, Bantian, Longgang
    District\n   Shenzhen, 518129\n   China\n   Email: zhangfatai@huawei.com\n   Quintin
    Zhao\n   Huawei\n   125 Nagog Technology Park\n   Acton, MA 01719\n   United States
    of America\n   Email: quintinzhao@gmail.com\n   Oscar Gonzalez de Dios\n   Telefonica
    I+D\n   Don Ramon de la Cruz 82-84\n   28045 Madrid\n   Spain\n   Email: oscar.gonzalezdedios@telefonica.com\n
    \  Ramon Casellas\n   CTTC\n   Av. Carl Friedrich Gauss n.7\n   Castelldefels
    Barcelona\n   Spain\n   Email: ramon.casellas@cttc.es\n   Daniel King\n   Old
    Dog Consulting\n"
  title: Authors' Addresses
