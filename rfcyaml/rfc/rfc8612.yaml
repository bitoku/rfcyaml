- title: __initial_text__
  contents:
  - '             DDoS Open Threat Signaling (DOTS) Requirements

    '
- title: Abstract
  contents:
  - "Abstract\n   This document defines the requirements for the Distributed Denial-of-\n\
    \   Service (DDoS) Open Threat Signaling (DOTS) protocols enabling\n   coordinated\
    \ response to DDoS attacks.\n"
- title: Status of This Memo
  contents:
  - "Status of This Memo\n   This document is not an Internet Standards Track specification;\
    \ it is\n   published for informational purposes.\n   This document is a product\
    \ of the Internet Engineering Task Force\n   (IETF).  It represents the consensus\
    \ of the IETF community.  It has\n   received public review and has been approved\
    \ for publication by the\n   Internet Engineering Steering Group (IESG).  Not\
    \ all documents\n   approved by the IESG are candidates for any level of Internet\n\
    \   Standard; see Section 2 of RFC 7841.\n   Information about the current status\
    \ of this document, any errata,\n   and how to provide feedback on it may be obtained\
    \ at\n   https://www.rfc-editor.org/info/rfc8612.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (c) 2019 IETF Trust and the persons identified\
    \ as the\n   document authors.  All rights reserved.\n   This document is subject\
    \ to BCP 78 and the IETF Trust's Legal\n   Provisions Relating to IETF Documents\n\
    \   (https://trustee.ietf.org/license-info) in effect on the date of\n   publication\
    \ of this document.  Please review these documents\n   carefully, as they describe\
    \ your rights and restrictions with respect\n   to this document.  Code Components\
    \ extracted from this document must\n   include Simplified BSD License text as\
    \ described in Section 4.e of\n   the Trust Legal Provisions and are provided\
    \ without warranty as\n   described in the Simplified BSD License.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n     1.1.  Context and Motivation  . . . . . . . . . . . . .\
    \ . . . .   2\n     1.2.  Terminology . . . . . . . . . . . . . . . . . . . .\
    \ . . .   3\n   2.  Requirements  . . . . . . . . . . . . . . . . . . . . . .\
    \ . .   5\n     2.1.  General Requirements  . . . . . . . . . . . . . . . . .\
    \ .   7\n     2.2.  Signal Channel Requirements . . . . . . . . . . . . . . .\
    \   8\n     2.3.  Data Channel Requirements . . . . . . . . . . . . . . . .  13\n\
    \     2.4.  Security Requirements . . . . . . . . . . . . . . . . . .  14\n  \
    \   2.5.  Data Model Requirements . . . . . . . . . . . . . . . . .  16\n   3.\
    \  Congestion Control Considerations . . . . . . . . . . . . . .  17\n     3.1.\
    \  Signal Channel  . . . . . . . . . . . . . . . . . . . . .  17\n     3.2.  Data\
    \ Channel  . . . . . . . . . . . . . . . . . . . . . .  17\n   4.  Security Considerations\
    \ . . . . . . . . . . . . . . . . . . .  17\n   5.  IANA Considerations . . .\
    \ . . . . . . . . . . . . . . . . . .  18\n   6.  References  . . . . . . . .\
    \ . . . . . . . . . . . . . . . . .  18\n     6.1.  Normative References  . .\
    \ . . . . . . . . . . . . . . . .  18\n     6.2.  Informative References  . .\
    \ . . . . . . . . . . . . . . .  20\n   Acknowledgments . . . . . . . . . . .\
    \ . . . . . . . . . . . . . .  21\n   Contributors  . . . . . . . . . . . . .\
    \ . . . . . . . . . . . . .  21\n   Authors' Addresses  . . . . . . . . . . .\
    \ . . . . . . . . . . . .  21\n"
- title: 1.  Introduction
  contents:
  - '1.  Introduction

    '
- title: 1.1.  Context and Motivation
  contents:
  - "1.1.  Context and Motivation\n   Distributed Denial-of-Service (DDoS) attacks\
    \ afflict networks\n   connected to the Internet, plaguing network operators at\
    \ service\n   providers and enterprises around the world.  High-volume attacks\n\
    \   saturating inbound links are now common as attack scale and frequency\n  \
    \ continue to increase.\n   The prevalence and impact of these DDoS attacks has\
    \ led to an\n   increased focus on coordinated attack response.  However, many\n\
    \   enterprises lack the resources or expertise to operate on-premise\n   attack\
    \ mitigation solutions themselves, or are constrained by local\n   bandwidth limitations.\
    \  To address such gaps, service providers have\n   begun to offer on-demand traffic\
    \ scrubbing services, which are\n   designed to separate the DDoS attack traffic\
    \ from legitimate traffic\n   and forward only the latter.\n   Today, these services\
    \ offer proprietary interfaces for subscribers to\n   request attack mitigation.\
    \  Such proprietary interfaces tie a\n   subscriber to a service and limit the\
    \ abilities of network elements\n   that would otherwise be capable of participating\
    \ in attack\n   mitigation.  As a result of signaling interface incompatibility,\n\
    \   attack responses may be fragmented or otherwise incomplete, leaving\n   operators\
    \ in the attack path unable to assist in the defense.\n   A standardized method\
    \ to coordinate a real-time response among\n   involved operators will increase\
    \ the speed and effectiveness of DDoS\n   attack mitigation and reduce the impact\
    \ of these attacks.  This\n   document describes the required characteristics\
    \ of protocols that\n   enable attack response coordination and mitigation of\
    \ DDoS attacks.\n   DDoS Open Threat Signaling (DOTS) communicates the need for\
    \ defensive\n   action in anticipation of or in response to an attack, but it\
    \ does\n   not dictate the implementation of these actions.  The DOTS use cases\n\
    \   are discussed in [DOTS-USE], and the DOTS architecture is discussed\n   in\
    \ [DOTS-ARCH].\n"
- title: 1.2.  Terminology
  contents:
  - "1.2.  Terminology\n   The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"\
    SHALL\", \"SHALL NOT\",\n   \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\", \"NOT\
    \ RECOMMENDED\", \"MAY\", and\n   \"OPTIONAL\" in this document are to be interpreted\
    \ as described in\n   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear\
    \ in all\n   capitals, as shown here.\n   These capitalized words are used to\
    \ signify the requirements for the\n   DOTS protocols design.\n   This document\
    \ adopts the following terms:\n   DDoS:  A distributed denial-of-service attack\
    \ in which traffic\n      originating from multiple sources is directed at a target\
    \ on a\n      network.  DDoS attacks are intended to cause a negative impact on\n\
    \      the availability and/or functionality of an attack target.\n      Denial-of-service\
    \ considerations are discussed in detail in\n      [RFC4732].\n   DDoS attack\
    \ target:  A network-connected entity that is the target of\n      a DDoS attack.\
    \  Potential targets include (but are not limited to)\n      network elements,\
    \ network links, servers, and services.\n   DDoS attack telemetry:  Collected\
    \ measurements and behavioral\n      characteristics defining the nature of a\
    \ DDoS attack.\n   Countermeasure:  An action or set of actions focused on recognizing\n\
    \      and filtering out specific types of DDoS attack traffic while\n      passing\
    \ legitimate traffic to the attack target.  Distinct\n      countermeasures can\
    \ be layered to defend against attacks combining\n      multiple DDoS attack types.\n\
    \   Mitigation:  A set of countermeasures enforced against traffic\n      destined\
    \ for the target or targets of a detected or reported DDoS\n      attack, where\
    \ countermeasure enforcement is managed by an entity\n      in the network path\
    \ between attack sources and the attack target.\n      Mitigation methodology\
    \ is out of scope for this document.\n   Mitigator:  An entity, typically a network\
    \ element, capable of\n      performing mitigation of a detected or reported DDoS\
    \ attack.  The\n      means by which this entity performs these mitigations and\
    \ how they\n      are requested of it are out of scope for this document.  The\n\
    \      mitigator and DOTS server receiving a mitigation request are\n      assumed\
    \ to belong to the same administrative entity.\n   DOTS client:  A DOTS-aware\
    \ software module responsible for requesting\n      attack response coordination\
    \ with other DOTS-aware elements.\n   DOTS server:  A DOTS-aware software module\
    \ handling and responding to\n      messages from DOTS clients.  The DOTS server\
    \ enables mitigation on\n      behalf of the DOTS client, if requested, by communicating\
    \ the DOTS\n      client's request to the mitigator and returning selected mitigator\n\
    \      feedback to the requesting DOTS client.\n   DOTS agent:  Any DOTS-aware\
    \ software module capable of participating\n      in a DOTS signal or data channel.\
    \  It can be a DOTS client, DOTS\n      server, or, as a logical agent, a DOTS\
    \ gateway.\n   DOTS gateway:  A DOTS-aware software module resulting from the\n\
    \      logical concatenation of the functionality of a DOTS server and a\n   \
    \   DOTS client into a single DOTS agent.  This functionality is\n      analogous\
    \ to a Session Initiation Protocol (SIP) [RFC3261] Back-\n      to-Back User Agent\
    \ (B2BUA) [RFC7092].  A DOTS gateway has a\n      client-facing side, which behaves\
    \ as a DOTS server for downstream\n      clients, and a server-facing side, which\
    \ performs the role of a\n      DOTS client for upstream DOTS servers.  Client-domain\
    \ DOTS\n      gateways are DOTS gateways that are in the DOTS client's domain,\n\
    \      while server-domain DOTS gateways denote DOTS gateways that are in\n  \
    \    the DOTS server's domain.  A DOTS gateway may terminate multiple\n      discrete\
    \ DOTS client connections and may aggregate these into one\n      or more connections.\
    \  DOTS gateways are described further in\n      [DOTS-ARCH].\n   Signal channel:\
    \  A bidirectional, mutually authenticated\n      communication channel between\
    \ DOTS agents that is resilient even\n      in conditions leading to severe packet\
    \ loss such as a volumetric\n      DDoS attack causing network congestion.\n \
    \  DOTS signal:  A status/control message transmitted over the\n      authenticated\
    \ signal channel between DOTS agents, used to indicate\n      the client's need\
    \ for mitigation or to convey the status of any\n      requested mitigation.\n\
    \   Heartbeat:  A message transmitted between DOTS agents over the signal\n  \
    \    channel, used as a keep-alive and to measure peer health.\n   Data channel:\
    \  A bidirectional, mutually authenticated communication\n      channel between\
    \ two DOTS agents used for infrequent but reliable\n      bulk exchange of data\
    \ not easily or appropriately communicated\n      through the signal channel.\
    \  Reliable bulk data exchange may not\n      function well or at all during attacks\
    \ causing network congestion.\n      The data channel is not expected to operate\
    \ in such conditions.\n   Filter:  A specification of a matching network traffic\
    \ flow or set of\n      flows.  The filter will typically have a policy associated\
    \ with\n      it, e.g., rate-limiting or discarding matching traffic [RFC4949].\n\
    \   Drop-list:  A list of filters indicating sources from which traffic\n    \
    \  should be blocked regardless of traffic content.\n   Accept-list:  A list of\
    \ filters indicating sources from which traffic\n      should always be allowed\
    \ regardless of contradictory data gleaned\n      in a detected attack.\n   Multihomed\
    \ DOTS client:  A DOTS client exchanging messages with\n      multiple DOTS servers,\
    \ each in a separate administrative domain.\n"
- title: 2.  Requirements
  contents:
  - "2.  Requirements\n   The expected layout and interactions amongst DOTS entities\
    \ is\n   described in the DOTS Architecture [DOTS-ARCH].\n   The goal of the DOTS\
    \ requirements specification is to specify the\n   requirements for DOTS signal\
    \ channel and data channel protocols that\n   have different application and transport-layer\
    \ requirements.  This\n   section describes the required features and characteristics\
    \ of the\n   DOTS protocols.\n   The goal of DOTS protocols is to enable and manage\
    \ mitigation on\n   behalf of a network domain or resource that is or may become\
    \ the\n   focus of a DDoS attack.  An active DDoS attack against the entity\n\
    \   controlling the DOTS client need not be present before establishing a\n  \
    \ communication channel between DOTS agents.  Indeed, establishing a\n   relationship\
    \ with peer DOTS agents during normal network conditions\n   provides the foundation\
    \ for a more rapid attack response against\n   future attacks, as all interactions\
    \ setting up DOTS, including any\n   business or service-level agreements, are\
    \ already complete.\n   Reachability information of peer DOTS agents is provisioned\
    \ to a DOTS\n   client using a variety of manual or dynamic methods.  Once a\n\
    \   relationship between DOTS agents is established, regular\n   communication\
    \ between DOTS clients and servers enables a common\n   understanding of the DOTS\
    \ agents' health and activity.\n   The DOTS protocol must, at a minimum, make\
    \ it possible for a DOTS\n   client to request aid mounting a defense against\
    \ a suspected attack.\n   This defense could be coordinated by a DOTS server and\
    \ include\n   signaling within or between domains as requested by local operators.\n\
    \   DOTS clients should similarly be able to withdraw aid requests.  DOTS\n  \
    \ requires no justification from DOTS clients for requests for help,\n   nor do\
    \ DOTS clients need to justify withdrawing help requests; the\n   decision is\
    \ local to the DOTS clients' domain.  Multihomed DOTS\n   clients must be able\
    \ to select the appropriate DOTS server(s) to\n   which a mitigation request is\
    \ to be sent.  The method for selecting\n   the appropriate DOTS server in a multihomed\
    \ environment is out of\n   scope for this document.\n   DOTS protocol implementations\
    \ face competing operational goals when\n   maintaining this bidirectional communication\
    \ stream.  On the one\n   hand, DOTS must include measures to ensure message confidentiality,\n\
    \   integrity, authenticity, and replay protection to keep the protocols\n   from\
    \ becoming additional vectors for the very attacks it is meant to\n   help fight\
    \ off.  On the other hand, the protocol must be resilient\n   under extremely\
    \ hostile network conditions, providing continued\n   contact between DOTS agents\
    \ even as attack traffic saturates the\n   link.  Such resiliency may be developed\
    \ several ways, but\n   characteristics such as small message size, asynchronous\n\
    \   notifications, redundant message delivery, and minimal connection\n   overhead\
    \ (when possible, given local network policy) will tend to\n   contribute to the\
    \ robustness demanded by a viable DOTS protocol.\n   Operators of peer DOTS-enabled\
    \ domains may enable either quality-of-\n   service or class-of-service traffic\
    \ tagging to increase the\n   probability of successful DOTS signal delivery,\
    \ but DOTS does not\n   require such policies be in place and should be viable\
    \ in their\n   absence.\n   The DOTS server and client must also have some standardized\
    \ method of\n   defining the scope of any mitigation, as well as managing other\n\
    \   mitigation-related configurations.\n   Finally, DOTS should be sufficiently\
    \ extensible to meet future needs\n   in coordinated attack defense, although\
    \ this consideration is\n   necessarily superseded by the other operational requirements.\n"
- title: 2.1.  General Requirements
  contents:
  - "2.1.  General Requirements\n   GEN-001  Extensibility: Protocols and data models\
    \ developed as part\n      of DOTS MUST be extensible in order to keep DOTS adaptable\
    \ to\n      proprietary DDoS defenses.  Future extensions MUST be backward\n \
    \     compatible.  Implementations of older protocol versions MUST\n      ignore\
    \ optional information added to DOTS messages as part of\n      newer protocol\
    \ versions.  Implementations of older protocol\n      versions MUST reject DOTS\
    \ messages carrying mandatory information\n      as part of newer protocol versions.\n\
    \   GEN-002  Resilience and Robustness: The signaling protocol MUST be\n     \
    \ designed to maximize the probability of signal delivery even under\n      the\
    \ severely constrained network conditions caused by attack\n      traffic.  Additional\
    \ means to enhance the resilience of DOTS\n      protocols, including when multiple\
    \ DOTS servers are provisioned to\n      the DOTS clients, SHOULD be considered.\
    \  The protocol MUST be\n      resilient, that is, continue operating despite\
    \ message loss and\n      out-of-order or redundant message delivery.  In support\
    \ of\n      signaling protocol robustness, DOTS signals SHOULD be conveyed\n \
    \     over transport and application protocols not susceptible to head-\n    \
    \  of-line blocking.  These requirements are at SHOULD strength to\n      handle\
    \ middle-boxes and firewall traversal.\n   GEN-003  Bulk Data Exchange: Infrequent\
    \ bulk data exchange between\n      DOTS agents can also significantly augment\
    \ attack response\n      coordination, permitting such tasks as population of\
    \ drop- or\n      accept-listed source addresses, address or prefix group aliasing,\n\
    \      exchange of incident reports, and other hinting or configuration\n    \
    \  supplementing attack responses.\n      As the resilience requirements for the\
    \ DOTS signal channel mandate\n      a small signal message size, a separate,\
    \ secure data channel\n      utilizing a reliable transport protocol MUST be used\
    \ for bulk data\n      exchange.  However, reliable bulk data exchange may not\
    \ be\n      possible during attacks causing network congestion.\n   GEN-004  Mitigation\
    \ Hinting: DOTS clients may have access to attack\n      details that can be used\
    \ to inform mitigation techniques.  Example\n      attack details might include\
    \ locally collected fingerprints for an\n      on-going attack, or anticipated\
    \ or active attack focal points\n      based on other threat intelligence.  DOTS\
    \ clients MAY send\n      mitigation hints derived from attack details to DOTS\
    \ servers, with\n      the full understanding that the DOTS server MAY ignore\
    \ mitigation\n      hints.  Mitigation hints MUST be transmitted across the signal\n\
    \      channel, as the data channel may not be functional during an\n      attack.\
    \  DOTS-server handling of mitigation hints is\n      implementation-specific.\n\
    \   GEN-005  Loop Handling: In certain scenarios, typically involving\n      misconfiguration\
    \ of DNS or routing policy, it may be possible for\n      communication between\
    \ DOTS agents to loop.  Signal and data\n      channel implementations should\
    \ be prepared to detect and terminate\n      such loops to prevent service disruption.\n"
- title: 2.2.  Signal Channel Requirements
  contents:
  - "2.2.  Signal Channel Requirements\n   SIG-001  Use of Common Transport Protocols:\
    \ DOTS MUST operate over\n      common, widely deployed and standardized transport\
    \ protocols.\n      While connectionless transport such as the User Datagram Protocol\n\
    \      (UDP) [RFC768] SHOULD be used for the signal channel, the\n      Transmission\
    \ Control Protocol (TCP) [RFC793] MAY be used if\n      necessary due to network\
    \ policy or middlebox capabilities or\n      configurations.\n   SIG-002  Sub-MTU\
    \ Message Size: To avoid message fragmentation and the\n      consequently decreased\
    \ probability of message delivery over a\n      congested link, signaling protocol\
    \ message size MUST be kept under\n      the signaling Path Maximum Transmission\
    \ Unit (PMTU), including the\n      byte overhead of any encapsulation, transport\
    \ headers, and\n      transport- or message-level security.  If the total message\
    \ size\n      exceeds the PMTU, the DOTS agent MUST split the message into\n \
    \     separate messages; for example, the list of mitigation scope types\n   \
    \   could be split into multiple lists and each list conveyed in a new\n     \
    \ message.\n      DOTS agents can attempt to learn PMTU using the procedures\n\
    \      discussed in [IP-FRAG-FRAGILE].  If the PMTU cannot be discovered,\n  \
    \    DOTS agents MUST assume a PMTU of 1280 bytes, as IPv6 requires\n      that\
    \ every link in the Internet have an MTU of 1280 octets or\n      greater as specified\
    \ in [RFC8200].  If IPv4 support on legacy or\n      otherwise unusual networks\
    \ is a consideration and the PMTU is\n      unknown, DOTS implementations MAY\
    \ assume a PMTU of 576 bytes for\n      IPv4 datagrams, as every IPv4 host must\
    \ be capable of receiving a\n      packet whose length is equal to 576 bytes as\
    \ discussed in [RFC791]\n      and [RFC1122].\n   SIG-003  Bidirectionality: To\
    \ support peer health detection, to\n      maintain an active signal channel,\
    \ and to increase the probability\n      of signal delivery during an attack,\
    \ the signal channel MUST be\n      bidirectional, with client and server transmitting\
    \ signals to each\n      other at regular intervals regardless of any client request\
    \ for\n      mitigation.  The bidirectional signal channel MUST support\n    \
    \  unidirectional messaging to enable notifications between DOTS\n      agents.\n\
    \   SIG-004  Channel Health Monitoring: DOTS agents MUST support exchange\n  \
    \    of heartbeat messages over the signal channel to monitor channel\n      health.\
    \  These keep-alives serve to maintain any on-path NAT or\n      Firewall bindings\
    \ to avoid cryptographic handshake for new\n      mitigation requests.  The heartbeat\
    \ interval during active\n      mitigation could be negotiable based on NAT/Firewall\n\
    \      characteristics.  Absent information about the NAT/Firewall\n      characteristics,\
    \ DOTS agents need to ensure its on-path NAT or\n      Firewall bindings do not\
    \ expire, by using the keep-alive frequency\n      discussed in Section 3.5 of\
    \ [RFC8085].\n      To support scenarios in which loss of heartbeat is used to\
    \ trigger\n      mitigation, and to keep the channel active, DOTS servers MUST\n\
    \      solicit heartbeat exchanges after successful mutual\n      authentication.\
    \  When DOTS agents are exchanging heartbeats and no\n      mitigation request\
    \ is active, either agent MAY request changes to\n      the heartbeat rate.  For\
    \ example, a DOTS server might want to\n      reduce heartbeat frequency or cease\
    \ heartbeat exchanges when an\n      active DOTS client has not requested mitigation,\
    \ in order to\n      control load.\n      Following mutual authentication, a signal\
    \ channel MUST be\n      considered active until a DOTS agent explicitly ends\
    \ the session.\n      When no attack traffic is present, the signal channel MUST\
    \ be\n      considered active until either DOTS agent fails to receive\n     \
    \ heartbeats from the other peer after a mutually agreed upon\n      retransmission\
    \ procedure has been exhausted.  Peer DOTS agents\n      MUST regularly send heartbeats\
    \ to each other while a mitigation\n      request is active.  Because heartbeat\
    \ loss is much more likely\n      during volumetric attack, DOTS agents SHOULD\
    \ avoid signal channel\n      termination when mitigation is active and heartbeats\
    \ are not\n      received by either DOTS agent for an extended period.  The\n\
    \      exception circumstances to terminating the signal channel session\n   \
    \   during active mitigation are discussed below:\n      *  To handle a possible\
    \ DOTS server restart or crash, the DOTS\n         clients MAY attempt to establish\
    \ a new signal channel session\n         but MUST continue to send heartbeats\
    \ on the current session so\n         that the DOTS server knows the session is\
    \ still alive.  If the\n         new session is successfully established, the\
    \ DOTS client can\n         terminate the current session.\n      *  DOTS servers\
    \ are assumed to have the ability to monitor the\n         attack, using feedback\
    \ from the mitigator and other available\n         sources, and MAY use the absence\
    \ of attack traffic and lack of\n         client heartbeats as an indication the\
    \ signal channel is\n         defunct.\n   SIG-005  Channel Redirection: In order\
    \ to increase DOTS operational\n      flexibility and scalability, DOTS servers\
    \ SHOULD be able to\n      redirect DOTS clients to another DOTS server at any\
    \ time.  DOTS\n      clients MUST NOT assume the redirection target DOTS server\
    \ shares\n      security state with the redirecting DOTS server.  DOTS clients\
    \ are\n      free to attempt abbreviated security negotiation methods supported\n\
    \      by the protocol, such as DTLS session resumption, but MUST be\n      prepared\
    \ to negotiate new security state with the redirection\n      target DOTS server.\
    \  The redirection DOTS server and redirecting\n      DOTS server MUST belong\
    \ to the same administrative domain.\n      Due to the increased likelihood of\
    \ packet loss caused by link\n      congestion during an attack, DOTS servers\
    \ SHOULD NOT redirect\n      while mitigation is enabled during an active attack\
    \ against a\n      target in the DOTS client's domain.\n   SIG-006  Mitigation\
    \ Requests and Status: Authorized DOTS clients MUST\n      be able to request\
    \ scoped mitigation from DOTS servers.  DOTS\n      servers MUST send status to\
    \ the DOTS clients about mitigation\n      requests.  If a DOTS server rejects\
    \ an authorized request for\n      mitigation, the DOTS server MUST include a\
    \ reason for the\n      rejection in the status message sent to the client.\n\
    \      DOTS servers MUST regularly send mitigation status updates to\n      authorized\
    \ DOTS clients that have requested and been granted\n      mitigation.  If unreliable\
    \ transport is used for the signal\n      channel protocol, due to the higher\
    \ likelihood of packet loss\n      during a DDoS attack, DOTS servers need to\
    \ send the mitigation\n      status multiple times at regular intervals following\
    \ the data\n      transmission guidelines discussed in Section 3.1.3 of [RFC8085].\n\
    \      When DOTS client-requested mitigation is active, DOTS server\n      status\
    \ messages MUST include the following mitigation metrics:\n      *  Total number\
    \ of packets blocked by the mitigation\n      *  Current number of packets per\
    \ second blocked\n      *  Total number of bytes blocked\n      *  Current number\
    \ of bytes per second blocked\n      DOTS clients MAY take these metrics into\
    \ account when determining\n      whether to ask the DOTS server to cease mitigation.\n\
    \      A DOTS client MAY withdraw a mitigation request at any time\n      regardless\
    \ of whether mitigation is currently active.  The DOTS\n      server MUST immediately\
    \ acknowledge a DOTS client's request to\n      stop mitigation.\n      To protect\
    \ against route or DNS flapping caused by a client\n      rapidly toggling mitigation,\
    \ and to dampen the effect of\n      oscillating attacks, DOTS servers MAY allow\
    \ mitigation to continue\n      for a limited period after acknowledging a DOTS\
    \ client's\n      withdrawal of a mitigation request.  During this period, DOTS\n\
    \      server status messages SHOULD indicate that mitigation is active\n    \
    \  but terminating.  DOTS clients MAY reverse the mitigation\n      termination\
    \ during this active-but-terminating period with a new\n      mitigation request\
    \ for the same scope.  The DOTS server MUST treat\n      this request as a mitigation\
    \ lifetime extension (see SIG-007).\n      The initial active-but-terminating\
    \ period is both implementation-\n      and deployment-specific, but SHOULD be\
    \ sufficiently long enough to\n      absorb latency incurred by route propagation.\
    \  If a DOTS client\n      refreshes the mitigation before the active-but-terminating\
    \ period\n      elapses, the DOTS server MAY increase the active-but-terminating\n\
    \      period up to a maximum of 300 seconds (5 minutes).  After the\n      active-but-terminating\
    \ period elapses, the DOTS server MUST treat\n      the mitigation as terminated,\
    \ as the DOTS client is no longer\n      responsible for the mitigation.\n   SIG-007\
    \  Mitigation Lifetime: DOTS servers MUST support mitigations\n      for a negotiated\
    \ time interval and MUST terminate a mitigation\n      when the lifetime elapses.\
    \  DOTS servers also MUST support renewal\n      of mitigation lifetimes in mitigation\
    \ requests from DOTS clients,\n      allowing clients to extend mitigation as\
    \ necessary for the\n      duration of an attack.\n      DOTS servers MUST treat\
    \ a mitigation terminated due to lifetime\n      expiration exactly as if the\
    \ DOTS client originating the\n      mitigation had asked to end the mitigation,\
    \ including the active-\n      but-terminating period, as described above in SIG-005.\n\
    \      DOTS clients MUST include a mitigation lifetime in all mitigation\n   \
    \   requests.\n      DOTS servers SHOULD support indefinite mitigation lifetimes,\n\
    \      enabling architectures in which the mitigator is always in the\n      traffic\
    \ path to the resources for which the DOTS client is\n      requesting protection.\
    \  DOTS clients MUST be prepared to not be\n      granted mitigations with indefinite\
    \ lifetimes.  DOTS servers MAY\n      refuse mitigations with indefinite lifetimes\
    \ for policy reasons.\n      The reasons themselves are out of scope for this\
    \ document.  If the\n      DOTS server does not grant a mitigation request with\
    \ an indefinite\n      mitigation lifetime, it MUST set the lifetime to a value\
    \ that is\n      configured locally.  That value MUST be returned in a reply to\
    \ the\n      requesting DOTS client.\n   SIG-008  Mitigation Scope: DOTS clients\
    \ MUST indicate desired\n      mitigation scope.  The scope type will vary depending\
    \ on the\n      resources requiring mitigation.  All DOTS agent implementations\n\
    \      MUST support the following required scope types:\n      *  IPv4 prefixes\
    \ [RFC4632]\n      *  IPv6 prefixes [RFC4291] [RFC5952]\n      *  Domain names\
    \ [RFC1035]\n      The following mitigation scope type is OPTIONAL:\n      * \
    \ Uniform Resource Identifiers [RFC3986]\n      DOTS servers MUST be able to resolve\
    \ domain names and (when\n      supported) URIs.  How name resolution is managed\
    \ on the DOTS\n      server is implementation-specific.\n      DOTS agents MUST\
    \ support mitigation scope aliases, allowing DOTS\n      clients and servers to\
    \ refer to collections of protected resources\n      by an opaque identifier created\
    \ through the data channel, direct\n      configuration, or other means.  Domain\
    \ name and URI mitigation\n      scopes may be thought of as a form of scope alias\
    \ in which the\n      addresses to which the domain name or URI resolve represent\
    \ the\n      full scope of the mitigation.\n      If there is additional information\
    \ available narrowing the scope\n      of any requested attack response, such\
    \ as targeted port range,\n      protocol, or service, DOTS clients SHOULD include\
    \ that information\n      in client mitigation requests.  DOTS clients MAY also\
    \ include\n      additional attack details.  DOTS servers MAY ignore such\n  \
    \    supplemental information when enabling countermeasures on the\n      mitigator.\n\
    \      As an active attack evolves, DOTS clients MUST be able to adjust\n    \
    \  as necessary the scope of requested mitigation by refining the\n      scope\
    \ of resources requiring mitigation.\n      A DOTS client may obtain the mitigation\
    \ scope through direct\n      provisioning or through implementation-specific\
    \ methods of\n      discovery.  DOTS clients MUST support at least one mechanism\
    \ to\n      obtain mitigation scope.\n   SIG-009  Mitigation Efficacy: When a\
    \ mitigation request is active,\n      DOTS clients MUST be able to transmit a\
    \ metric of perceived\n      mitigation efficacy to the DOTS server.  DOTS servers\
    \ MAY use the\n      efficacy metric to adjust countermeasures activated on a\
    \ mitigator\n      on behalf of a DOTS client.\n   SIG-010  Conflict Detection\
    \ and Notification: Multiple DOTS clients\n      controlled by a single administrative\
    \ entity may send conflicting\n      mitigation requests as a result of misconfiguration,\
    \ operator\n      error, or compromised DOTS clients.  DOTS servers in the same\n\
    \      administrative domain attempting to honor conflicting requests may\n  \
    \    flap network route or DNS information, degrading the networks\n      attempting\
    \ to participate in attack response with the DOTS\n      clients.  DOTS servers\
    \ in a single administrative domain SHALL\n      detect such conflicting requests\
    \ and SHALL notify the DOTS clients\n      in conflict.  The notification MUST\
    \ indicate the nature and scope\n      of the conflict, for example, the overlapping\
    \ prefix range in a\n      conflicting mitigation request.\n   SIG-011  Network\
    \ Address Translator Traversal: DOTS clients may be\n      deployed behind a Network\
    \ Address Translator (NAT) and need to\n      communicate with DOTS servers through\
    \ the NAT.  DOTS protocols\n      MUST therefore be capable of traversing NATs.\n\
    \      If UDP is used as the transport for the DOTS signal channel, all\n    \
    \  considerations in \"Middlebox Traversal Guidelines\" in [RFC8085]\n      apply\
    \ to DOTS.  Regardless of transport, DOTS protocols MUST\n      follow established\
    \ best common practices established in BCP 127\n      for NAT traversal [RFC4787]\
    \ [RFC6888] [RFC7857].\n"
- title: 2.3.  Data Channel Requirements
  contents:
  - "2.3.  Data Channel Requirements\n   The data channel is intended to be used for\
    \ bulk data exchanges\n   between DOTS agents.  Unlike the signal channel, the\
    \ data channel is\n   not expected to be constructed to deal with attack conditions.\
    \  As\n   the primary function of the data channel is data exchange, a reliable\n\
    \   transport is required in order for DOTS agents to detect data\n   delivery\
    \ success or failure.\n   The data channel provides a protocol for DOTS configuration\
    \ and\n   management.  For example, a DOTS client may submit to a DOTS server\
    \ a\n   collection of prefixes it wants to refer to by alias when requesting\n\
    \   mitigation, to which the server would respond with a success status\n   and\
    \ the new prefix group alias, or an error status and message in the\n   event\
    \ the DOTS client's data channel request failed.\n   DATA-001  Reliable transport:\
    \ Messages sent over the data channel\n      MUST be delivered reliably in the\
    \ order sent.\n   DATA-003  Resource Configuration: To help meet the general and\
    \ signal\n      channel requirements in Sections 2.1 and 2.2, DOTS server\n  \
    \    implementations MUST provide an interface to configure resource\n      identifiers,\
    \ as described in SIG-008.  DOTS server implementations\n      MAY expose additional\
    \ configurability.  Additional configurability\n      is implementation-specific.\n\
    \   DATA-004  Policy Management: DOTS servers MUST provide methods for\n     \
    \ DOTS clients to manage drop- and accept-lists of traffic destined\n      for\
    \ resources belonging to a client.\n      For example, a DOTS client should be\
    \ able to create a drop- or\n      accept-list entry, retrieve a list of current\
    \ entries from either\n      list, update the content of either list, and delete\
    \ entries as\n      necessary.\n      How a DOTS server authorizes DOTS client\
    \ management of drop- and\n      accept-list entries is implementation-specific.\n"
- title: 2.4.  Security Requirements
  contents:
  - "2.4.  Security Requirements\n   DOTS must operate within a particularly strict\
    \ security context, as\n   an insufficiently protected signal or data channel\
    \ may be subject to\n   abuse, enabling or supplementing the very attacks DOTS\
    \ purports to\n   mitigate.\n   SEC-001  Peer Mutual Authentication: DOTS agents\
    \ MUST authenticate\n      each other before a DOTS signal or data channel is\
    \ considered\n      valid.  The method of authentication is not specified in this\n\
    \      document but should follow current IETF best practices [RFC7525]\n    \
    \  with respect to any cryptographic mechanisms to authenticate the\n      remote\
    \ peer.\n   SEC-002  Message Confidentiality, Integrity, and Authenticity: DOTS\n\
    \      protocols MUST take steps to protect the confidentiality,\n      integrity,\
    \ and authenticity of messages sent between client and\n      server.  While specific\
    \ transport- and message-level security\n      options are not specified, the\
    \ protocols MUST follow current IETF\n      best practices [RFC7525] for encryption\
    \ and message\n      authentication.  Client-domain DOTS gateways are more trusted\
    \ than\n      DOTS clients, while server-domain DOTS gateways and DOTS servers\n\
    \      share the same level of trust.  A security mechanism at the\n      transport\
    \ layer (TLS or DTLS) is thus adequate to provide security\n      between peer\
    \ DOTS agents.\n      In order for DOTS protocols to remain secure despite advancements\n\
    \      in cryptanalysis and traffic analysis, DOTS agents MUST support\n     \
    \ secure negotiation of the terms and mechanisms of protocol\n      security,\
    \ subject to the interoperability and signal message size\n      requirements\
    \ in Section 2.2.\n      While the interfaces between downstream DOTS server and\
    \ upstream\n      DOTS client within a DOTS gateway are implementation-specific,\n\
    \      those interfaces nevertheless MUST provide security equivalent to\n   \
    \   that of the signal channels bridged by gateways in the signaling\n      path.\
    \  For example, when a DOTS gateway consisting of a DOTS\n      server and DOTS\
    \ client is running on the same logical device, the\n      two DOTS agents could\
    \ be implemented within the same process\n      security boundary.\n   SEC-003\
    \  Data Privacy and Integrity: Transmissions over the DOTS\n      protocols are\
    \ likely to contain operationally or privacy-sensitive\n      information or instructions\
    \ from the remote DOTS agent.  Theft,\n      modification, or replay of message\
    \ transmissions could lead to\n      information leaks or malicious transactions\
    \ on behalf of the\n      sending agent (see Section 4).  Consequently, data sent\
    \ over the\n      DOTS protocols MUST be encrypted using secure transports (TLS\
    \ or\n      DTLS).  DOTS servers MUST enable means to prevent leaking\n      operationally\
    \ or privacy-sensitive data.  Although administrative\n      entities participating\
    \ in DOTS may detail what data may be\n      revealed to third-party DOTS agents,\
    \ such considerations are not\n      in scope for this document.\n   SEC-004 \
    \ Message Replay Protection: To prevent a passive attacker\n      from capturing\
    \ and replaying old messages, and thereby potentially\n      disrupting or influencing\
    \ the network policy of the receiving DOTS\n      agent's domain, DOTS protocols\
    \ MUST provide a method for replay\n      detection and prevention.\n      Within\
    \ the signal channel, messages MUST be uniquely identified\n      such that replayed\
    \ or duplicated messages can be detected and\n      discarded.  Unique mitigation\
    \ requests MUST be processed at most\n      once.\n   SEC-005  Authorization:\
    \ DOTS servers MUST authorize all messages from\n      DOTS clients that pertain\
    \ to mitigation, configuration, filtering,\n      or status.\n      DOTS servers\
    \ MUST reject mitigation requests with scopes that the\n      DOTS client is not\
    \ authorized to manage.\n      Likewise, DOTS servers MUST refuse to allow creation,\n\
    \      modification, or deletion of scope aliases and drop- or accept-\n     \
    \ lists when the DOTS client is unauthorized.\n      The modes of authorization\
    \ are implementation-specific.\n"
- title: 2.5.  Data Model Requirements
  contents:
  - "2.5.  Data Model Requirements\n   A well-structured DOTS data model is critical\
    \ to the development of\n   successful DOTS protocols.\n   DM-001  Structure:\
    \ The data-model structure for the DOTS protocol MAY\n      be described by a\
    \ single module or be divided into related\n      collections of hierarchical\
    \ modules and submodules.  If the data\n      model structure is split across\
    \ modules, those distinct modules\n      MUST allow references to describe the\
    \ overall data model's\n      structural dependencies.\n   DM-002  Versioning:\
    \ To ensure interoperability between DOTS protocol\n      implementations, data\
    \ models MUST be versioned.  How the protocols\n      represent data-model versions\
    \ is not defined in this document.\n   DM-003  Mitigation Status Representation:\
    \ The data model MUST provide\n      the ability to represent a request for mitigation\
    \ and the\n      withdrawal of such a request.  The data model MUST also support\
    \ a\n      representation of currently-requested mitigation status, including\n\
    \      failures and their causes.\n   DM-004  Mitigation Scope Representation:\
    \ The data model MUST support\n      representation of a requested mitigation's\
    \ scope.  As mitigation\n      scope may be represented in several different ways,\
    \ per SIG-008,\n      the data model MUST include extensible representation of\n\
    \      mitigation scope.\n   DM-005  Mitigation Lifetime Representation: The data\
    \ model MUST\n      support representation of a mitigation request's lifetime,\n\
    \      including mitigations with no specified end time.\n   DM-006  Mitigation\
    \ Efficacy Representation: The data model MUST\n      support representation of\
    \ a DOTS client's understanding of the\n      efficacy of a mitigation enabled\
    \ through a mitigation request.\n   DM-007  Acceptable Signal Loss Representation:\
    \ The data model MUST be\n      able to represent the DOTS agent's preference\
    \ for acceptable\n      signal loss when establishing a signal channel.  Measurements\
    \ of\n      loss might include, but are not restricted to, number of\n      consecutive\
    \ missed heartbeat messages, retransmission count, or\n      request timeouts.\n\
    \   DM-008  Heartbeat Interval Representation: The data model MUST be\n      able\
    \ to represent the DOTS agent's preferred heartbeat interval,\n      which the\
    \ client may include when establishing the signal channel,\n      as described\
    \ in SIG-003.\n   DM-009  Relationship to Transport: The DOTS data model MUST\
    \ NOT make\n      any assumptions about specific characteristics of any given\n\
    \      transport into the data model, but instead represent the fields in\n  \
    \    the model explicitly.\n"
- title: 3.  Congestion Control Considerations
  contents:
  - '3.  Congestion Control Considerations

    '
- title: 3.1.  Signal Channel
  contents:
  - "3.1.  Signal Channel\n   As part of a protocol expected to operate over links\
    \ affected by DDoS\n   attack traffic, the DOTS signal channel MUST NOT contribute\n\
    \   significantly to link congestion.  To meet the signal channel\n   requirements\
    \ above, DOTS signal channel implementations SHOULD\n   support connectionless\
    \ transports.  However, some connectionless\n   transports, when deployed naively,\
    \ can be a source of network\n   congestion, as discussed in [RFC8085].  Signal\
    \ channel\n   implementations using such connectionless transports, such as UDP,\n\
    \   therefore MUST include a congestion control mechanism.\n   Signal channel\
    \ implementations using an IETF standard congestion-\n   controlled transport\
    \ protocol (like TCP) may rely on built-in\n   transport congestion control support.\n"
- title: 3.2.  Data Channel
  contents:
  - "3.2.  Data Channel\n   As specified in DATA-001, the data channel requires reliable,\
    \ in-\n   order message delivery.  Data channel implementations using an IETF\n\
    \   standard congestion-controlled transport protocol may rely on the\n   transport\
    \ implementation's built-in congestion control mechanisms.\n"
- title: 4.  Security Considerations
  contents:
  - "4.  Security Considerations\n   This document informs future protocols under\
    \ development and so does\n   not have security considerations of its own.  However,\
    \ operators\n   should be aware of potential risks involved in deploying DOTS.\
    \  DOTS\n   agent impersonation and signal blocking are discussed here.\n   Additional\
    \ DOTS security considerations may be found in [DOTS-ARCH]\n   and DOTS protocol\
    \ documents.\n   Impersonation of either a DOTS server or a DOTS client could\
    \ have\n   catastrophic impact on operations in either domain.  If an attacker\n\
    \   has the ability to impersonate a DOTS client, that attacker can\n   affect\
    \ policy on the network path to the DOTS client's domain up to\n   and including\
    \ instantiation of drop-lists blocking all inbound\n   traffic to networks for\
    \ which the DOTS client is authorized to\n   request mitigation.\n   Similarly,\
    \ an impersonated DOTS server may be able to act as a sort\n   of malicious DOTS\
    \ gateway, intercepting requests from the downstream\n   DOTS client and modifying\
    \ them before transmission to the DOTS server\n   to inflict the desired impact\
    \ on traffic to or from the DOTS client's\n   domain.  Among other things, this\
    \ malicious DOTS gateway might\n   receive and discard mitigation requests from\
    \ the DOTS client,\n   ensuring no requested mitigation is ever applied.\n   To\
    \ detect misuse, as detailed in Section 2.4, DOTS implementations\n   require\
    \ mutual authentication of DOTS agents in order to make agent\n   impersonation\
    \ more difficult.  However, impersonation may still be\n   possible as a result\
    \ of credential theft, implementation flaws, or\n   DOTS agents being compromised.\n\
    \   To detect compromised DOTS agents, DOTS operators should carefully\n   monitor\
    \ and audit DOTS agents to detect misbehavior and deter misuse\n   while employing\
    \ best current practices to secure network\n   communications to reduce attack\
    \ surface.\n   Blocking communication between DOTS agents has the potential to\n\
    \   disrupt the core function of DOTS, which is to request mitigation of\n   active\
    \ or expected DDoS attacks.  The DOTS signal channel is expected\n   to operate\
    \ over congested inbound links, and, as described in\n   Section 2.2, the signal\
    \ channel protocol must be designed for minimal\n   data transfer to reduce the\
    \ incidence of signal loss.\n"
- title: 5.  IANA Considerations
  contents:
  - "5.  IANA Considerations\n   This document has no IANA actions.\n"
- title: 6.  References
  contents:
  - '6.  References

    '
- title: 6.1.  Normative References
  contents:
  - "6.1.  Normative References\n   [RFC768]   Postel, J., \"User Datagram Protocol\"\
    , STD 6, RFC 768,\n              DOI 10.17487/RFC0768, August 1980,\n        \
    \      <https://www.rfc-editor.org/info/rfc768>.\n   [RFC791]   Postel, J., \"\
    Internet Protocol\", STD 5, RFC 791,\n              DOI 10.17487/RFC0791, September\
    \ 1981,\n              <https://www.rfc-editor.org/info/rfc791>.\n   [RFC793]\
    \   Postel, J., \"Transmission Control Protocol\", STD 7,\n              RFC 793,\
    \ DOI 10.17487/RFC0793, September 1981,\n              <https://www.rfc-editor.org/info/rfc793>.\n\
    \   [RFC1035]  Mockapetris, P., \"Domain names - implementation and\n        \
    \      specification\", STD 13, RFC 1035, DOI 10.17487/RFC1035,\n            \
    \  November 1987, <https://www.rfc-editor.org/info/rfc1035>.\n   [RFC1122]  Braden,\
    \ R., Ed., \"Requirements for Internet Hosts -\n              Communication Layers\"\
    , STD 3, RFC 1122,\n              DOI 10.17487/RFC1122, October 1989,\n      \
    \        <https://www.rfc-editor.org/info/rfc1122>.\n   [RFC2119]  Bradner, S.,\
    \ \"Key words for use in RFCs to Indicate\n              Requirement Levels\"\
    , BCP 14, RFC 2119,\n              DOI 10.17487/RFC2119, March 1997,\n       \
    \       <https://www.rfc-editor.org/info/rfc2119>.\n   [RFC3986]  Berners-Lee,\
    \ T., Fielding, R., and L. Masinter, \"Uniform\n              Resource Identifier\
    \ (URI): Generic Syntax\", STD 66,\n              RFC 3986, DOI 10.17487/RFC3986,\
    \ January 2005,\n              <https://www.rfc-editor.org/info/rfc3986>.\n  \
    \ [RFC4291]  Hinden, R. and S. Deering, \"IP Version 6 Addressing\n          \
    \    Architecture\", RFC 4291, DOI 10.17487/RFC4291, February\n              2006,\
    \ <https://www.rfc-editor.org/info/rfc4291>.\n   [RFC4632]  Fuller, V. and T.\
    \ Li, \"Classless Inter-domain Routing\n              (CIDR): The Internet Address\
    \ Assignment and Aggregation\n              Plan\", BCP 122, RFC 4632, DOI 10.17487/RFC4632,\
    \ August\n              2006, <https://www.rfc-editor.org/info/rfc4632>.\n   [RFC4787]\
    \  Audet, F., Ed. and C. Jennings, \"Network Address\n              Translation\
    \ (NAT) Behavioral Requirements for Unicast\n              UDP\", BCP 127, RFC\
    \ 4787, DOI 10.17487/RFC4787, January\n              2007, <https://www.rfc-editor.org/info/rfc4787>.\n\
    \   [RFC5952]  Kawamura, S. and M. Kawashima, \"A Recommendation for IPv6\n  \
    \            Address Text Representation\", RFC 5952,\n              DOI 10.17487/RFC5952,\
    \ August 2010,\n              <https://www.rfc-editor.org/info/rfc5952>.\n   [RFC6888]\
    \  Perreault, S., Ed., Yamagata, I., Miyakawa, S., Nakagawa,\n              A.,\
    \ and H. Ashida, \"Common Requirements for Carrier-Grade\n              NATs (CGNs)\"\
    , BCP 127, RFC 6888, DOI 10.17487/RFC6888,\n              April 2013, <https://www.rfc-editor.org/info/rfc6888>.\n\
    \   [RFC7857]  Penno, R., Perreault, S., Boucadair, M., Ed., Sivakumar,\n    \
    \          S., and K. Naito, \"Updates to Network Address Translation\n      \
    \        (NAT) Behavioral Requirements\", BCP 127, RFC 7857,\n              DOI\
    \ 10.17487/RFC7857, April 2016,\n              <https://www.rfc-editor.org/info/rfc7857>.\n\
    \   [RFC8085]  Eggert, L., Fairhurst, G., and G. Shepherd, \"UDP Usage\n     \
    \         Guidelines\", BCP 145, RFC 8085, DOI 10.17487/RFC8085,\n           \
    \   March 2017, <https://www.rfc-editor.org/info/rfc8085>.\n   [RFC8174]  Leiba,\
    \ B., \"Ambiguity of Uppercase vs Lowercase in RFC\n              2119 Key Words\"\
    , BCP 14, RFC 8174, DOI 10.17487/RFC8174,\n              May 2017, <https://www.rfc-editor.org/info/rfc8174>.\n\
    \   [RFC8200]  Deering, S. and R. Hinden, \"Internet Protocol, Version 6\n   \
    \           (IPv6) Specification\", STD 86, RFC 8200,\n              DOI 10.17487/RFC8200,\
    \ July 2017,\n              <https://www.rfc-editor.org/info/rfc8200>.\n"
- title: 6.2.  Informative References
  contents:
  - "6.2.  Informative References\n   [DOTS-ARCH]\n              Mortensen, A., Ed.,\
    \ Reddy, T., Ed., Andreasen, F., Teague,\n              N., and R. Compton, \"\
    Distributed-Denial-of-Service Open\n              Threat Signaling (DOTS) Architecture\"\
    , Work in Progress,\n              draft-ietf-dots-architecture-13, April 2019.\n\
    \   [DOTS-USE]\n              Dobbins, R., Migault, D., Fouant, S., Moskowitz,\
    \ R.,\n              Teague, N., Xia, L., and K. Nishizuka, \"Use cases for DDoS\n\
    \              Open Threat Signaling\", Work in Progress, draft-ietf-dots-\n \
    \             use-cases-17, January 2019.\n   [IP-FRAG-FRAGILE]\n            \
    \  Bonica, R., Baker, F., Huston, G., Hinden, R., Troan, O.,\n              and\
    \ F. Gont, \"IP Fragmentation Considered Fragile\", Work\n              in Progress,\
    \ draft-ietf-intarea-frag-fragile-10, May 2019.\n   [RFC3261]  Rosenberg, J.,\
    \ Schulzrinne, H., Camarillo, G., Johnston,\n              A., Peterson, J., Sparks,\
    \ R., Handley, M., and E.\n              Schooler, \"SIP: Session Initiation Protocol\"\
    , RFC 3261,\n              DOI 10.17487/RFC3261, June 2002,\n              <https://www.rfc-editor.org/info/rfc3261>.\n\
    \   [RFC7092]  Kaplan, H. and V. Pascual, \"A Taxonomy of Session\n          \
    \    Initiation Protocol (SIP) Back-to-Back User Agents\",\n              RFC\
    \ 7092, DOI 10.17487/RFC7092, December 2013,\n              <https://www.rfc-editor.org/info/rfc7092>.\n\
    \   [RFC4732]  Handley, M., Ed., Rescorla, E., Ed., and IAB, \"Internet\n    \
    \          Denial-of-Service Considerations\", RFC 4732,\n              DOI 10.17487/RFC4732,\
    \ December 2006,\n              <https://www.rfc-editor.org/info/rfc4732>.\n \
    \  [RFC4949]  Shirey, R., \"Internet Security Glossary, Version 2\",\n       \
    \       FYI 36, RFC 4949, DOI 10.17487/RFC4949, August 2007,\n              <https://www.rfc-editor.org/info/rfc4949>.\n\
    \   [RFC7525]  Sheffer, Y., Holz, R., and P. Saint-Andre,\n              \"Recommendations\
    \ for Secure Use of Transport Layer\n              Security (TLS) and Datagram\
    \ Transport Layer Security\n              (DTLS)\", BCP 195, RFC 7525, DOI 10.17487/RFC7525,\
    \ May\n              2015, <https://www.rfc-editor.org/info/rfc7525>.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   Thanks to Roman Danyliw, Matt Richardson, Joe Touch, Scott\
    \ Bradner,\n   Robert Sparks, Brian Weis, Benjamin Kaduk, Eric Rescorla, Alvaro\n\
    \   Retana, Suresh Krishnan, Ben Campbell, Mirja Kuehlewind, and Jon\n   Shallow\
    \ for their careful reading and feedback.\n"
- title: Contributors
  contents:
  - "Contributors\n   Mohamed Boucadair\n      Orange\n      mohamed.boucadair@orange.com\n\
    \   Flemming Andreasen\n      Cisco Systems, Inc.\n      fandreas@cisco.com\n\
    \   Dave Dolson\n      Sandvine\n      ddolson@sandvine.com\n"
- title: Authors' Addresses
  contents:
  - "Authors' Addresses\n   Andrew Mortensen\n   Arbor Networks\n   2727 S. State\
    \ St.\n   Ann Arbor, MI  48104\n   United States of America\n   Email: andrewmortensen@gmail.com\n\
    \   Tirumaleswar Reddy\n   McAfee\n   Embassy Golf Link Business Park\n   Bangalore,\
    \ Karnataka  560071\n   India\n   Email: TirumaleswarReddy_Konda@McAfee.com\n\
    \   Robert Moskowitz\n   Huawei\n   Oak Park, MI  42837\n   United States of America\n\
    \   Email: rgm@htt-consult.com\n"
