- title: __initial_text__
  contents:
  - '      An LDAP Control and Schema for Holding Operation Signatures

    '
- title: Status of this Memo
  contents:
  - "Status of this Memo\n   This memo defines an Experimental Protocol for the Internet\n\
    \   community.  It does not specify an Internet standard of any kind.\n   Discussion\
    \ and suggestions for improvement are requested.\n   Distribution of this memo\
    \ is unlimited.\n"
- title: Copyright Notice
  contents:
  - "Copyright Notice\n   Copyright (C) The Internet Society (1999).  All Rights Reserved.\n"
- title: Abstract
  contents:
  - "Abstract\n   In many environments clients require the ability to validiate the\n\
    \   source and integrity of information provided by the directory.  This\n   document\
    \ describes an LDAP message control which allows for the\n   retrieval of digitally\
    \ signed information. This document defines an\n   LDAP v3 based mechanism for\
    \ signing directory operations in order to\n   create a secure journal of changes\
    \ that have been made to each\n   directory entry.  Both client and server based\
    \ signatures are\n   supported.  An object class for subsequent retrieval are\
    \ \"journal\n   entries\" is also defined.  This document specifies LDAP v3 controls\n\
    \   that enable this functionality.  It also defines an LDAP v3 schema\n   that\
    \ allows for subsequent browsing of the journal information.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1. Introduction  . . . . . . . . . . . . . . . . . . .\
    \ . . . . .   2\n   1.1 Audit Trail Mechanism  . . . . . . . . . . . . . . . .\
    \ . . .   2\n   1.2. Handling the Delete Operation . . . . . . . . . . . . . .\
    \ .   5\n   2. Signed Results Mechanism  . . . . . . . . . . . . . . . . . . \
    \  6\n   3. Security Considerations and Other Notes   . . . . . . . . . .   7\n\
    \   4. References  . . . . . . . . . . . . . . . . . . . . . . . . .   8\n   5.\
    \ Authors' Addresses  . . . . . . . . . . . . . . . . . . . . .   9\n   6. Full\
    \ Copyright Statement  . . . . . . . . . . . . . . . . . .  10\n"
- title: 1.  Introduction
  contents:
  - "1.  Introduction\n   In many environments clients require the ability to validiate\
    \ the\n   source and integrity of information provided by the directory.  This\n\
    \   document describes an LDAP message control which allows for the\n   retrieval\
    \ of digitally signed information.  The perspective of this\n   document is that\
    \ the origin of the information that is stored in LDAP\n   v3 accessible directories\
    \ is the LDAP v3 client that creates the\n   information.  The source and integrity\
    \ of the information is\n   guaranteed by allowing for the digital signing of\
    \ the operations that\n   make changes to entries in the directory.  The source\
    \ and integrity\n   of an individual LDAP connection can be guaranteed by making\
    \ use of\n   an underlying session layer that provides such services, such as\
    \ TLS.\n   Note that the integrity of an individual connection does not, in and\n\
    \   of itself guarantee the integrity of the data that comes across the\n   connection.\
    \  This is due to the fact that the LDAP server is only\n   capable of providing\
    \ information that it has stored.  In distributed\n   and replicated environments,\
    \ the fact that an entry has been\n   successfully retrieved from a server may\
    \ not be completely\n   reassuring, if the entry in question was replicated from\
    \ an untrusted\n   domain.\n   By making use of public key technology, and creating\
    \ digitally signed\n   transactions that are created by the LDAP v3 client as\
    \ entries are\n   created and modified, a complete journal of the history of the\
    \ entry\n   is available.  Since each entry in the journal has been digitally\n\
    \   signed with the private key of the creator, or modifier of the entry,\n  \
    \ the source and integrity of the directory entry can be validated by\n   verifying\
    \ the signature of each entry in the journal.  Note that not\n   all of the journal\
    \ entries will have been signed by the same user.\n"
- title: 1.1.  Audit Trail Mechanism
  contents:
  - "1.1.  Audit Trail Mechanism\n   Signed directory operations is a straightforward\
    \ application of\n   S/MIME technology that also leverages the extensible framework\
    \ that\n   is provided by LDAP version 3.  LDAP version 3 is defined in [4], and\n\
    \   S/MIME is defined in [2].  The security used in S/MIME is based in\n   the\
    \ definitions in [1].  The basic idea is that the submitter of an\n   LDAP operation\
    \ that changes the directory information includes an\n   LDAP version 3 control\
    \ that includes either a signature of the\n   operation, or a request that the\
    \ LDAP server sign the operation on\n   the behalf of the LDAP client.  The result\
    \ of the operation (in\n   addition to the change of the directory information),\
    \ is additional\n   information that is attached to directory objects, that includes\
    \ the\n   audit trail of signed operations.  The LDAP control is (OID =\n   1.2.840.113549.6.0.0):\n\
    \      SignedOperation ::= CHOICE {\n           signbyServer   NULL,\n       \
    \    signatureIncluded   OCTET STRING\n       }\n   If the SignatureIncluded CHOICE\
    \ is used, then the OCTET string is\n   just an S/MIME message of the multipart/signed\
    \ variety, that is\n   composed of a single piece, that is the signature of the\
    \ directory\n   operation.  Multipart/signed MIME objects are defined in [3].\
    \  If the\n   SignbyServer CHOICE us used, then the LDAP server creates the\n\
    \   signature on behalf of the client, using its own identity and not the\n  \
    \ identity of the client, in order to produce the audit trail entry.\n   In either\
    \ case the successful result of processing the control is the\n   creation of\
    \ additional information in the directory entry that is\n   being modified or\
    \ created. The signature of the LDAP operation is\n   computed on the LDAPMessage\
    \ prior to the inclusion of the\n   SignedOperation control. The procedure is\
    \ as follows:\n      - Build LDAPMessage without the SignedOperation control\n\
    \      - Compute signature on the above LDAPMessage\n      - Create new LDAPMessage\
    \ that includes the old MessageID,\n        protocolOp and any control fields\
    \ from the previous LDAPMessage,\n        plus  the computed signature formatted\
    \ as an S/MIME message.\n   No control is defined for the server to return in\
    \ the LDAPResult as\n   defined in [4].  The LDAP server MAY attempt to parse\
    \ and verify the\n   signature included in the SignedOperation control, but is\
    \ not\n   required to.  The server can accept the signed operation without\n \
    \  verifying the signature.  Signature verification can be quite a\n   lengthy\
    \ operation, requiring complex certificate chain traversals.\n   This allows a\
    \ more timely creation of the audit trail by the server.\n   Any LDAP client browsing\
    \ the directory that retrieves the 'Changes'\n   (defined in the following paragraphs)\
    \ attributes, should verify the\n   signature of each value according to the local\
    \ signature verification\n   policies.  Even if the LDAP server verifies the signature\
    \ contained\n   in the singed operation, the LDAP client has no way of knowing\
    \ what\n   policies were followed by the server in order to verify the\n   signature.\n\
    \   If the LDAP server is unable to verify the signature and wishes to\n   return\
    \ an error then the error code unwillingToPerform(53) should be\n   returned,\
    \ and the entire LDAP operation fails.  In this situation, an\n   appropriate\
    \ message (e.g. \"Unable to verify signature\") MAY be\n   included in the errorMessage\
    \ of the LDAPResult.  The SignedOperation\n   Control MAY be marked CRITICAL,\
    \ and if it is CRITICAL then if the\n   LDAP Server performs the LDAP operation,\
    \ then must include the\n   signature in the signedAuditTrail information.\n \
    \     The schema definition for the signedAuditTrail information is:\n      (\
    \ 1.2.840.113549.6.1.0\n      NAME 'signedAuditTrail'\n      SUP top\n      AUXILIARY\n\
    \      MUST (\n      Changes\n      )\n         )\n      The format of the Changes\
    \ attribute is:\n      ( 1.2.840.113549.6.2.0\n      NAME 'Changes'\n      DESC\
    \ 'a set of changes applied to an entry'\n      SYNTAX 'Binary' )\n      The actual\
    \ format of the Changes attribute is:\n      Changes ::= SEQUENCE {\n        \
    \   sequenceNumber [0] INTEGER (0 .. maxInt),\n           signedOperation [1]\
    \ OCTET STRING }\n   The SignedOperation attribute is a multipart/signed S/MIME\
    \ message.\n   Part 1 of the message is the directory operation, and part 2 is\
    \ the\n   signature.  Sequence number 0 (if present) always indicates the\n  \
    \ starting point directory object as represented by the definitions in\n   \"\
    A MIME Content-Type for Directory Information\", as defined in [5].\n   Subsequent\
    \ sequence numbers indicate the sequence of changes that\n   have been made to\
    \ this directory object.  Note that the sequence of\n   the changes can be verified\
    \ due to the fact that the signed directory\n   object will have a timestamp as\
    \ part of the signature object, and\n   that the sequence numbering as part of\
    \ the change attribute should be\n   considered to be an unverified aid to the\
    \ LDAP client.  Sequence\n   numbers are meaningful only within the context of\
    \ a single directory\n   entry, and LDAP servers are not expected to maintain\
    \ these sequence\n   numbers across all entries in the directory.\n   Some LDAP\
    \ servers will only allow operations that include the\n   SignedOperation control.\
    \  This is indicated by the inclusion of a\n   'signedDirectoryOperationSupport'\
    \ attribute in the rootDSE.  This\n   attribute is defined as:\n      1.2.840.113549.6.2.2\n\
    \      NAME 'signedDirectoryOperationSupport'\n      DESC 'how many of the LDAP\
    \ operations must be signed'\n      SYNTAX 'Integer' SINGLE-VALUE )\n   The 'signedDirectoryOperationSupport'\
    \ attribute above may have one of\n   the values, '0', '1' or '2' with the following\
    \ meanings:\n      - '0' Directory Operations may be signed\n      - '1' Directory\
    \ Operations must always be signed\n      - '2' Directory Operations must never\
    \ be signed\n   Some LDAP servers will desire that the audit trail be continuous,\
    \ and\n   not contain any gaps that would result from unsigned operations.\n \
    \  Such server will include a signature on each LDAP operation that\n   changes\
    \ a directory entry, even when the LDAP client does not include\n   a signed-Operation\
    \ control.\n"
- title: 1.2.  Handling the Delete Operation
  contents:
  - "1.2.  Handling the Delete Operation\n   The LDAP Delete operation represents\
    \ an interesting case for Signed\n   Directory Operations.  This is due to the\
    \ case that subsequent to the\n   successful completion of the Delete Operation,\
    \ the object that would\n   have held the latest 'Changes' attribute no longer\
    \ exists.  In order\n   to handle this situation, a new object class is defined\
    \ to represent\n   a directory object that has been deleted.\n      ( 1.2.840.113549.6.1.2\n\
    \      NAME 'zombieObject'\n      SUP top\n      STRUCTURAL\n      MUST (\n  \
    \    Cn $ Changes $ OriginalObject\n      )\n         )\n      The format of the\
    \ OriginalObject attribute is:\n      ( 1.2.840.113549.6.2.1\n      NAME OriginalObject\n\
    \      DESC 'The LDAP URL of an object that has been deleted from the\n      directory'\
    \ SYNTAX 'Binary' )\n   The OriginalObject attribute contains the URL of the object\
    \ that was\n   deleted from the directory.  It is formatted in accordance with\
    \ RFC\n   2255.  Directory servers that comply with this specification SHOULD\n\
    \   create a zombieObject when performing the delete Operation that\n   contains\
    \ a SignedOperation LDAPControl.  The Cn attribute of the\n   zombieObject is\
    \ synthesized by the LDAP server, and may or may not be\n   related to the original\
    \ name of the directory entry that was deleted.\n   All changes attributes that\
    \ were attached to the original entry are\n   copied over to the zombieObject.\
    \  In addition the LDAP Server MUST\n   attach the signature of the Delete operation\
    \ as the last successful\n   change that was made to the entry.\n"
- title: 2.  Signed Results Mechanism
  contents:
  - "2.  Signed Results Mechanism\n   A control is also defined that allows the LDAP\
    \ v3 client to request\n   that the server sign the results that it returns. \
    \ It is intended\n   that this control is primarily used in concert with the LDAPSearch\n\
    \   operation.  This control MAY be marked as CRITICAL.  If it is marked\n   as\
    \ CRITICAL and the LDAP Server supports this operation, then all\n   search results\
    \ MUST be returned with a signature as attached in the\n   SignedResult control\
    \ if it is willing to sign results for this user.\n   If the server supports this\
    \ control but does not wish to sign the\n   results for this user then the error\
    \ code unwillingToPerform(53)\n   should be returned, and the LDAP search will\
    \ have failed.  In this\n   situation, an appropriate message (e.g. \"Unwilling\
    \ to sign results\n   for you!\") MUST be included in the errorMessage of the\
    \ LDAPResult.\n   If the LDAPSigType has the value FALSE then the client is requesting\n\
    \   that the server not sign this operation.  This may be done in\n   situations\
    \ where servers are configured to always sign their\n   operations.\n   The LDAP\
    \ control to include in the LDAP request is (OID =\n   1.2.840.113549.6.0.1):\n\
    \      DemandSignedResult ::=  LDAPSigType\n      LDAPSigType ::= BOOLEAN\n  \
    \ In response to a DemandSignedResult control, the LDAP v3 server will\n   return\
    \ a SignedResult control in addition to the normal result as\n   defined by the\
    \ operation (assuming that the server understands the\n   con- trol, and is willing\
    \ to perform it).  The SignedResult control\n   MUST NOT be marked CRITICAL. \
    \ Some LDAP v3 servers may be configured\n   to sign all of their operations.\
    \  In this situation the server always\n   returns a SignedResult control, unless\
    \ instructed otherwise by the\n   DemandSigne-dResult Control.  Since the SignedResult\
    \ control is not\n   marked critical, the LDAP client is allowed to ignore it.\
    \  The\n   signature field below includes the signature of the enitre LDAPResult\n\
    \   formatted as an S/MIME pkcs-7/signature object, as defined in [2].\n   The\
    \ procedure for creating the signature of the signedResult control\n   is the\
    \ same as the procedure for the creation of the signedOperation\n   control. \
    \ The LDAP control in the LDAP response is (OID =\n   1.2.840.113549.6.0.2):\n\
    \      SignedResult ::= CHOICE {\n           signature     OCTET STRING }\n"
- title: 3.  Security Considerations and Other Notes
  contents:
  - "3.  Security Considerations and Other Notes\n      The base OIDs are:\n     \
    \ rsadsiLdap ::= {1 2 840 113549 6}\n      rsadsiLdapControls ::=  {1 2 840 113549\
    \ 6 0}\n      rsadsiLdapObjectClasses ::= {1 2 840 113549 6 1}\n      rsadsiLdapAttributes\
    \ ::= {1 2 840 113549 6 2}\n      The complete ASN.1 module for this specification\
    \ is:\n      SIGNEDOPERATIONS DEFINITIONS ::=\n      BEGIN\n      SignedOperation\
    \ ::= CHOICE {\n           signbyServer   NULL,\n           signatureIncluded\
    \   OCTET STRING\n       }\n      Changes ::= SEQUENCE {\n           sequenceNumber\
    \ [0] INTEGER (0 .. maxInt),\n           signedOperation [1] OCTET STRING }\n\
    \      DemandSignedResult ::=  LDAPSigType\n      LDAPSigType ::= BOOLEAN\n  \
    \    SignedResult ::= CHOICE {\n           signature     OCTET STRING }\n    \
    \  END\n   If any of the controls in this specification are supported by an LDAP\n\
    \   v3 server then that server MUST make available its certificate (if\n   any)\
    \ in the userCertificate attribute of its rootDSE object.  The\n   UserCertificate\
    \ attribute is defined in [6], and contains the public\n   key of the server that\
    \ is used in the creation of the various\n   signatures defined in this specification.\n\
    \   It is not the intention of this specification to provide a mechanism\n   that\
    \ guarantees the origin and integrity of LDAP v3 operations.  Such\n   a service\
    \ is best provided by the use of an underlying protocol such\n   as TLS [8]. \
    \ TLS defines additional features such as encryption and\n   compression.  This\
    \ specification does not define support for\n   encrypted operations.\n   This\
    \ memo proposes protocol elements for transmission and storage of\n   the digital\
    \ signatures of LDAP operations.  Though the LDAP server\n   may have verified\
    \ the operation signatures prior to their storage and\n   subsequent retrieval,\
    \ it is prudent for LDAP clients to verify the\n   signatures contained in the\
    \ chained attribute upon their retrieval.\n   The issuing Certification Authorities\
    \ of the signer's certificate\n   should also be consulted in order to determine\
    \ if the signer's\n   private key has been compromised or the certificate has\
    \ been\n   otherwise revoked.  Security considerations are discussed throughout\n\
    \   this memo.\n"
- title: 4.  References
  contents:
  - "4.  References\n   [1] Kaliski, B., \"PKCS 7: Cryptographic Message Syntax Version\
    \ 1-5\",\n       RFC 2315, March 1998.\n   [2] Dusse, S., Hoffman, P., Ramsdell,\
    \ B., Lundblade, L. and L.\n       Repka., \"S/MIME Version 2 Message Specification\"\
    , RFC 2311, March\n       1998.\n   [3] Galvin, J., Murphy, S., Crocker, S. and\
    \ N. Freed, \"Security\n       Multiparts for MIME: Multipart/Signed and Multipart/Encrypted\"\
    ,\n       RFC 1847, October 1995.\n   [4] Wahl, M., Howes, T. and S. Kille, \"\
    Lightweight Directory Access\n       Protocol (v3)\", RFC 2251, December 1997.\n\
    \   [5] Howes, T., Smith, M. and F. Dawson, \"A MIME Content-Type for\n      \
    \ Directory Information\", RFC 2425, September 1998.\n   [6] Wahl, M., \"A Summary\
    \ of the X.500(96) User Schema for use with\n       LDAPv3\", RFC 2256, December\
    \ 1997.\n   [7] Howes, T. and M. Smith, \"The LDAP URL Format\", RFC 2255, December\n\
    \       1997.\n   [8] Dierks, T. and C. Allen, \"The TLS Protocol Version 1.0\"\
    , RFC\n       2246, January 1999.\n"
- title: 5.  Authors' Addresses
  contents:
  - "5.  Authors' Addresses\n   Bruce Greenblatt\n   San Jose, CA 95119\n   USA\n\
    \   Phone: +1-408-224-5349\n   EMail: bgreenblatt@directory-applications.com\n\
    \   Pat Richard\n   Xcert Software, Inc.\n   Suite 1001 - 701 W. Georgia\n   Vancouver,\
    \ BC\n   CANADA V6G 1C9\n   EMail: patr@xcert.com\n"
- title: 6.  Full Copyright Statement
  contents:
  - "6.  Full Copyright Statement\n   Copyright (C) The Internet Society (1999). \
    \ All Rights Reserved.\n   This document and translations of it may be copied\
    \ and furnished to\n   others, and derivative works that comment on or otherwise\
    \ explain it\n   or assist in its implementation may be prepared, copied, published\n\
    \   and distributed, in whole or in part, without restriction of any\n   kind,\
    \ provided that the above copyright notice and this paragraph are\n   included\
    \ on all such copies and derivative works.  However, this\n   document itself\
    \ may not be modified in any way, such as by removing\n   the copyright notice\
    \ or references to the Internet Society or other\n   Internet organizations, except\
    \ as needed for the purpose of\n   developing Internet standards in which case\
    \ the procedures for\n   copyrights defined in the Internet Standards process\
    \ must be\n   followed, or as required to translate it into languages other than\n\
    \   English.\n   The limited permissions granted above are perpetual and will\
    \ not be\n   revoked by the Internet Society or its successors or assigns.\n \
    \  This document and the information contained herein is provided on an\n   \"\
    AS IS\" basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING\n   TASK FORCE\
    \ DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING\n   BUT NOT LIMITED\
    \ TO ANY WARRANTY THAT THE USE OF THE INFORMATION\n   HEREIN WILL NOT INFRINGE\
    \ ANY RIGHTS OR ANY IMPLIED WARRANTIES OF\n   MERCHANTABILITY OR FITNESS FOR A\
    \ PARTICULAR PURPOSE.\n"
- title: Acknowledgement
  contents:
  - "Acknowledgement\n   Funding for the RFC Editor function is currently provided\
    \ by the\n   Internet Society.\n"
