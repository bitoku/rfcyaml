Abstract This document defines the syntax as well as the semantics of the information to be included in the phone book for roaming applications.
It comprises the information necessary to select the most appropriate ISP and to configure the host to get access to the network of the provider.
The specification consists of a small set of required information elements and a variety of possible extensions.
All data is specified in XML [5]
(Extensible Markup Language) syntax leading to a concise XML DTD (Document Type Declaration) for the phone book.
Introduction Roaming applications depend on the delivery of information about provided services and the procedures to get connected to the network from the roaming consortium to the individual users as well as from the operators of the network access servers, normally the members of the roaming consortium, and the roaming consortium.
The roaming consortium assembles from the individual contributions of the providers belonging to the consortium a unified version of the phone book for usage by the customers.
Probably different groups of users get different versions of a phone book adapted to their particular needs.
Even users might generate different subsets especially suited to particular applications from the information received from the roaming consortium, e.g., retrieving only entries for a particular country or extracting all access points providing wireless connectivity.
Therefore it is desirable to define a highly portable and well formed structure of the phone book to enable easy generation and postprocessing.
Goals of this document include: Creating a flexible, extensible and robust framework upon which to build a standard phone book; Promoting a standard phone book format, to enhance interoperability between ISPs and roaming consortia as well as to enable automatic extraction of configuration data by a wide variety of devices; Defining a compact structure containing the essential information for the roaming user, to allow for storage and easy update even on small devices.
It is not intended by this document to create a plethoric solution, with phone book elements to fit every condition on earth, neither to define any kind of phone book update or transfer protocol.
Rationale for XML Usage XML is rapidly becoming a standard format for data exchange between different applications also taking into account the transfer and access of data over the web.
XML is used as syntax for expressing the structure and content of a roaming phone book to enable widespread usage and access to many different kind of media (e.g., paper, CDROM, www) using a widespread selection of access devices.
Furthermore XML enables: Extensibility Flexibility Integration with directories
Extensibility is important because phone books are living documents; as such, it is unlikely that all the semantic requirements of arbitrary Internet service providers (ISPs) would be met by a fixed scheme, no matter how well thought out.
Phone book designers must be free to create new attributes in a well understood fashion to meet changing business needs.
Flexibility is required of the attribute definition syntax for many of the same reasons that semantic extensibility is necessary.
If we assume that phone book designers may need to define elements of arbitrary type, the syntax chosen must be able to represent these data objects cleanly.
Using XML for describing the data content of the phone book fits this bill nicely, since it can be used to unambiguously describe virtually any data type.
Integration with directories: although it is unlikely that phone books will be stored in the directory due to performance considerations, the creation of a XML DTD describing phone book content leaves that option open, with relatively little incremental effort required to implement it.
In this document, the key words "MAY", "MUST, "MUST NOT", "optional", "recommended", "SHOULD", and "SHOULD NOT", are to be interpreted as described in [1].
Value type notations for 'stronger' typing XML DTDs do not currently have capabilities for 'strong typing' of the content of elements.
The only type definition foreseen in the base specification is "#PCDATA", 'parsable character data'.
This might be sufficient and is used throughout this document to define elements containing information mainly aimed for interpretation by human beings.
To enable a more concise description of the content of particular elements several value type notations are introduced.
This allows for a more detailed type description of the content of elements in cases where it seems to be desirable.
xml version "1.0" encoding "UTF 8"?
Phone book value type notation declarations
/roamPhoneBook/NOTATION value Type Base64 encoded gif image"
The phoneBook element is the basic container for phone book entries.
It has two attributes, a phone book name and a phone book version number (applying to the phone book as a whole), and always contains one or more pop elements.
A phoneBook element may also contain multiple Setup, Support and Provider elements, if they are referenced to by more than one pop element.
phoneBook Attribute "name" The phoneBook attribute "name" is an arbitrary string assigned as an identifier for a phone book.
The phoneBookVersion attribute is an integer representing the version of the phone book; it is a monotonically increasing counter which should be incremented each time the phone book is modified.
This element can be used by a server to help decide what (if any) actions are required to bring a client's phone book up to date.
For example, the client can, at connect time, send an update request to the server including in the request the version number of its current phone book.
If the client's phone book version is not the same as the server's current phone book version, the server can easily take appropriate action, e.g., reply with a URL pointing to a file containing the differences between the client and server phone books.
The pop element contains information elements relevant to individual network points of presence (POPs).
The required information elements are addrFamily, address, media and entryVersion.
The media element represents the media types supported by the POP, while the entryVersion element is a monotonically increasing integer which should be incremented whenever the object is modified.
The following information elements are currently defined for the pop element.
Additional information elements may be defined by IANA in future.
ELEMENT pop ( %popInformation; )
The entryVersion attribute is an integer representing the version of the POP object; it is a monotonically increasing counter which should be incremented each time the object is modified.
This attribute may be useful in merging and updating phone books.
The Setup element includes information elements which describe services which may change from provider to provider or even from POP to POP.
Some of the values contained in these information elements may be available by other means (e.g., DHCP), but others may not.
The following information elements are currently defined for the Setup element.
Additional information elements may be defined by IANA in future.
dnsServerAddress , nntpServerName , smtpServerName , popServerName , imapServerName , wwwProxyServerName , ftpProxyServerName , winsockProxyServerName , defaultGatewayAddress?
The Support element includes those information elements that are pertinent to the provision of customer support for a POP or provider.
Languages spoken by the staff at the support center might be specified by multiple entries for the attribute value language.
Additional information elements for the Support element may be defined by IANA in future.
Provider The Provider element contains information elements pertaining to the general business operations of a given network service provider.
The information elements include such things as telephone number, mailing address, etc., as well as URLs for e mail and a World Wide Web site.
A Provider element may also contain a reference to support information.
Currently the following information elements are defined for the Provider element.
Additional information elements may be defined by IANA in future.
Information elements defined for the POP element 6.1.1.
The address element provides the information representing the address of the POP.
For POPs offering dial up network access
More detailed information may be available by optional attribute values.
address Attribute "family" The attribute family of the element address defines the address family to which the element value belongs.
For POPs offering dial up network access, the addrFamily attribute will generally contain a value for a telephone network based address family.
Currently the following attribute values are defined.
Additional values may be registered by IANA in future.
X121    ITU T X.121 (X.25, Frame Relay) Syntax: <!
ATTLIST address family %addressFamily; #REQUIRED > 6.1.1.2.
The countryCode attribute indicates the international dialing prefix for the country in which the POP is located.
" The areaCode attribute contains the area or city code component of the telephone number in the 'address' element (if any) associated with this POP.
The media element is a container describing the types of media and related protocols supported by this POP.
The following media types are currently defined.
Additional types may be registered by IANA in future.
viaISDN viaATM viaFR viaX25) "
ELEMENT media %mediaTypes; > 6.1.2.1.
The viaMODEM element is an empty element representing by its optional type attribute the modem protocol supported by the access devices that can be reached at address.
To define multiple available protocols this element may be included repeatedly.
The initially defined modem protocol types are listed in the table below.
Additional values may be registered by IANA in future.
ITU T V.90 Syntax <!
ENTITY % modemProtocols "(V21 V22 V29 V32 V32B V34 V34B V90)"
The viaISDN element is an empty element representing by its optional type attribute the ISDN protocol supported by the access devices that can be reached at address.
To define multiple available protocols this element may be included repeatedly.
The initially defined ISDN protocol types are listed in the table below.
Additional values may be registered by IANA in future.
type %isdnProtocols; #IMPLIED > 6.1.2.3.
The viaATM element is an empty element representing by its optional type attribute a particular protocol supported by the access devices that can be reached at address.
To define multiple available protocols this element may be included repeatedly.
Currently only one protocol is defined.
Additional values may be registered by IANA in future.
ATTLIST viaATM type %atmProtocols; #IMPLIED > 6.1.2.4.
The viaFR element is an empty element representing by its optional type attribute the particular protocol supported by the access devices that can be reached at address.
To define multiple available protocols this element may be included repeatedly.
Currently only one protocol is defined.
Additional values may be registered by IANA in future.
ATTLIST viaFR type %frProtocols; #IMPLIED > 6.1.2.5.
The viaX25 element is an empty element representing by its optional type attribute the particular protocol supported by the access devices that can be reached at address.
To define multiple available protocols this element may be included repeatedly.
Currently only one protocol is defined.
Additional values may be registered by IANA in future.
The minBitsPerSecond element indicates the minimum data rate (in bits/second) supported by the access devices at the POP.
Minimum data rate supported by this POP in bits/
The maxBitsPerSecond element indicates the maximum data rate (in bits/second) supported by the access devices at the POP.
Maximum data rate supported by this POP in bits/
The popProperty element is an empty element representing by its attribute value a particular property of this POP.
To define multiple available protocols this element might be included several times.
The initially defined properties are listed in the table below.
Additional values may be registered by IANA in future.
ATTLIST popProperty type %popProperties; #REQUIRED> 6.1.6.
The tunnelProto element is an empty element representing by its attribute a tunneling protocol supported by this POP.
To define multiple available protocols this element might be included several times.
The initially defined values are listed in the table below.
Additional values may be registered by IANA in future.
IP ESP Tunnel Mode IPIP
(L2TP PPTP L2F ATMP AHT ESPT IPIP MIP GRE)"
ATTLIST tunnelProto type %tunnelingProtocols; #REQUIRED> 6.1.7.
The dialScript element contains the dialing script to be used when connecting to this POP.
The attribute value type of dialScript defines the type of the script that should be used when connecting to this POP.
The pricingInformation element is a free form string representing pricing information for this POP.
The city element contains the name of the city in which the POP is located (not the city(s) from which it is accessible by a local call).
The region element contains the name of the region in which the POP is located.
In the United States, this would be the name of a state or (for Washington, D.C.) administrative district.
In other countries, it might be the name of a province, parish or county.
The country element contains the name of the country in which the POP is located.
The country name may be abbreviated (e.g., "USA" for the United States of America or "UK" for the United Kingdom) but if abbreviations are used the usage must be consistent within a given phone book.
The popSetup element is either a setup element, if setup is specific to this particular POP, or a reference to any of the setup elements given in the outer scope of the phonebook element.
Reference for setup information for this POP
The popSupport element is either a support element, if support is specific to this particular POP, or a reference to any of the support elements given in the outer scope of the phonebook element.
Reference for support information for this POP
The popProvider element is either a provider element, if provider information is specific to this particular POP, or a reference to any of the provider elements given in the outer scope of the phonebook element.
Information elements defined for the Setup element 6.2.1.
The dnsServerAddress element represents the IP address of the Domain Name Service (DNS) server which should be used when connected to this POP.
The address is represented in the form of a string in dotted  decimal notation (e.g., 192.168.101.1).
Domain Name Server IP address
ATTLIST dnsServerAddress value NOTATION (IPADR)
The nntpServerName element contains the fully qualified domain name (FQDN) of the Network News Transfer Protocol (NNTP) server which should be used when connected to this POP.
ATTLIST nntpServerName value NOTATION (FQDN)
The smtpServerName element contains the FQDN of the Simple Mail Transfer Protocol (SMTP) server which should be used when connected to this POP.
Name of an SMTP mail server
ATTLIST smtpServerName value NOTATION (FQDN)
The popServerName element contains the FQDN of the Post Office Protocol (POP) server which should be used when connected to this POP.
The imapServerName element contains the FQDN of the Internet Mail Access Protocol (IMAP) server which should be used when connected to this POP.
ATTLIST imapServerName value NOTATION (FQDN)
The wwwProxyServerName element contains the FQDN of the World Wide Web (WWW) proxy server which should be used when connected to this POP.
ATTLIST wwwProxyServerName value NOTATION (FQDN)
The ftpProxyServerName element contains the FQDN of the File Transfer Protocol (FTP) proxy server which should be used when connected to this POP.
ATTLIST ftpProxyServerName value NOTATION (FQDN)
The winsockProxyServerName element contains the FQDN of the Windows Socket (Winsock) proxy server which should be used when connected to this POP.
ATTLIST winsockProxyServerName value NOTATION (FQDN)
The defaulttGatewayAddress element represents the address of the default gateway which should be used when connected to this POP.
The address is represented in the form of a string in dotted decimal notation (e.g., 192.168.101.1).
The userNameSuffix element represents a string which should be concatenated to the base username.
For example, if the base username is "userA" and the value of this element is "@bigco.com", the resulting augmented username would be "userA@bigco.com".
An intelligent dialer may concatenate the string automatically.
Note that both the userNameSuffix and the userNamePrefix (below) may be applied to the same base username.
The userNamePrefix element represents a string to which the base username should be concatenated.
For example, if the base username is "userB" and the value of this element is "BIGCO/" the resulting augmented username would be "BIGCO/userB".
An intelligent dialer may perform the concatenation automatically.
Note that both the userNameSuffix (above) and the userNamePrefix may be applied to the same base username.
Information elements defined for the support element 6.3.1.
The supportTelephoneNumber element contains a number that may be called to reach the support center for a particular provider or POP.
The supportMailtoURL element contains a URL for the provider's customer support email address, e.g., mailto:support@uu.net.
This URL could be used to contact customer support personnel regarding non urgent issues.
Information elements defined for the provider element 6.4.1.
The providerName element is a string containing the name of the provider (e.g., "BIGNET Corporation").
The providerIcon attribute contains a BASE64 encoded JPEG or GIF image which may be used for 'branding' phone book entries or displayed when dialing.
ATTLIST providerIcon value NOTATION (B64JPG   B64GIF)
Provider's World Wide Web URL
The wwwURL element contains a Uniform Resource Locator (URL) for the provider's Web site, for example, http://www.uu.net.
A Uniform Resource Locator for the provider's home page
The generalMailtoURL element contains a URL for the provider's main email address, for example, mailto:contact@uu.net.
This URL could be used for general correspondence, complaints, etc.
The billingMailtoURL element contains a URL for the provider's billing support email address, for example, mailto:billing@uu.net.
This URL could be used to for correspondence regarding billing and payment issues.
The remainder of the information elements of the provider element are described in principle in [3].
Complete XML DTD for the roaming phone book <?
xml version "1.0" encoding "UTF 8"?
This section will be maintained by IANA and can be direct referenced by the DTD specification by means of an external parameter entity.
viaISDN viaATM viaFR viaX25) "
ENTITY % modemProtocols "(V21 V22 V29 V32 V32B V34 V34B V90)"
ENTITY % popProperties "(MPPP MOBIP MCRX MCTX)"
(L2TP PPTP L2F ATMP AHT ESPT IPIP MIP GRE)"
dnsServerAddress , nntpServerName , smtpServerName , popServerName , imapServerName , wwwProxyServerName , ftpProxyServerName , winsockProxyServerName , defaultGatewayAddress?
ENTITY % supportInformation "(supportTelephoneNumber supportMailtoURL) "
Phone book value type notation declarations
ELEMENT pop ( %popInformation; )
ATTLIST dnsServerAddress value NOTATION (IPADR)
ATTLIST nntpServerName value NOTATION (FQDN)
ATTLIST smtpServerName value NOTATION (FQDN)
ATTLIST imapServerName value NOTATION (FQDN)
ATTLIST wwwProxyServerName value NOTATION (FQDN)
ATTLIST ftpProxyServerName value NOTATION (FQDN)
ATTLIST winsockProxyServerName value NOTATION (FQDN)
ATTLIST providerIcon value NOTATION (B64JPG B64GIF)
The secure distribution and transport of information of a phone book for roaming applications require a reliable authentication of the issuer of the information as well as means to preserve the integrity of the provided information.
No specific elements for security requirements are provided by the phone book XML DTD itself.
It is assumed that security of the roaming phone book is provided by means outside of the scope of this specification, such as signing the phone book using pgp.
This specification provides the possibility to define further attribute values for all information elements owning enumerated attribute lists as well as to extend the main structures 'pop', 'setup', 'support' and 'provider' by additional information elements.
Therefore the specification of the roaming phone book can be adopted to future requirements without changing this document.
Extensions and refinements to this specification can be achieved by registration of new elements and attributes by IANA.
Extending this specification with additional attributes or elements must not change the validity of documents based on an older version of the XML DTD.
Therefore all added information elements must be optional, prohibiting the mandatory inclusion of newly defined information elements.
Adding new values to enumerated attribute lists has no backward compatibility constraints because it does not harm the validity of attributes already defined.
To facilitate the registration of new information elements and attribute values the DTD of the phone book has been separated in two parts, the extensible part containing only parameter entity declarations for ease inclusion of new values, and the fixed part containing the detailed specification of the content and structure of the phone book.
By referencing the parameter entity declarations in the fixed part of the specification the whole phone book becomes extensible.
The part containing the parameter entity declarations has to be maintained by the IANA.
There are two different classes of declarations in this part requiring different policies for registering new values.
Registration of new attribute values
The entities 'addressFamily', 'modemProtocols', 'isdnProtocols', 'atmProtocols', 'frProtocols', 'x25Protocols', 'popProperties' and 'tunnelingProtocols' are describing enumerated attribute value lists.
Because there is no limitation in the name space of these attribute values and
newly defined attribute values can not harm the validity of existing values, new attribute values can be assigned by Specification Required [6].
Registration of new information elements
Inserting new values into these lists extends the phone book by arbitrarily new information elements.
Inappropriate use of the XML content model can destroy the backward compatibility of the DTD.
Therefore the assignment of new information elements requires the approval of a Designated Expert [6].
In addition to the insertion of a new value into the list, the detailed definition of the information element has to be appended to the specification part maintained by the IANA.
The most simple example <?
xml version "1.0" encoding "UTF 8"?
DOCTYPE phoneBook SYSTEM "roamPhoneBook.dtd"> <phoneBook name "minimalExample" version "1"
A more comprehensive example <?
xml version "1.0" encoding "UTF 8"?
DOCTYPE phoneBook SYSTEM "roamPhoneBook.dtd"> <phoneBook name "KNF simple" version "1"
"1"> <address family "E164" countryCode "49"
> <media> <viaMODEM type "
<support id "KNF main" language "EN DE"> <supportMailtoURL
