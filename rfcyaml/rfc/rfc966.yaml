- title: __initial_text__
  contents:
  - "                              Host Groups:\n             A Multicast Extension\
    \ to the Internet Protocol\n"
- title: 1. Status of this Memo
  contents:
  - "1. Status of this Memo\n   This RFC defines a model of service for Internet multicasting\
    \ and\n   proposes an extension to the Internet Protocol (IP) to support such\
    \ a\n   multicast service.  Discussion and suggestions for improvements are\n\
    \   requested.  Distribution of this memo is unlimited.\n"
- title: 2. Acknowledgements
  contents:
  - "2. Acknowledgements\n   This memo was adapted from a paper [7] presented at the\
    \ Ninth Data\n   Communications Symposium.  This work was sponsored in part by\
    \ the\n   Defense Advanced Research Projects Agency under contract N00039-83-\n\
    \   K-0431 and National Science Foundation Grant DCR-83-52048.\n   The Internet\
    \ task force on end-to-end protocols, headed by Bob\n   Braden, has provided valuable\
    \ input in the development of the host\n   group model.\n"
- title: 3. Introduction
  contents:
  - "3. Introduction\n   In this paper, we describe a model of multicast service we\
    \ call host\n   groups and propose this model as a way to support multicast in\
    \ the\n   DARPA Internet environment [14].  We argue that it is feasible to\n\
    \   implement this facility as an extension of the existing \"unicast\" IP\n \
    \  datagram model and mechanism.\n   Multicast is the transmission of a datagram\
    \ packet to a set of zero\n   or more destination hosts in a network or internetwork,\
    \ with a single\n   address specifying the set of destination hosts.  For example,\
    \ hosts\n   A, B, C and D may be associated with multicast address X. On\n   transmission,\
    \ a packet with destination address X is delivered with\n   datagram reliability\
    \ to hosts A, B, C and D.\n   Multicast has two primary uses, namely distributed\
    \ binding and\n   multi-destination delivery.  As a binding mechanism, multicast\
    \ is a\n   robust and often more efficient alternative to the use of name\n  \
    \ servers for finding a particular object or service when a particular\n   host\
    \ address is not known.  For example, in a distributed file\n   system, all the\
    \ file servers may be associated with one well-known\n   multicast address.  To\
    \ bind a file name to a particular server, a\n   client sends a query packet containing\
    \ the file name to the file\n   server multicast address, for delivery to all\
    \ the file servers.  The\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   server that recognizes\
    \ the file name then responds to the client,\n   allowing subsequent interaction\
    \ directly with that server host.  Even\n   when name servers are employed, multicast\
    \ can be used as the first\n   step in the binding process, that is, finding a\
    \ name server.\n   Multi-destination delivery is useful to several applications,\n\
    \   including:\n      - distributed, replicated databases [6,9].\n      - conferencing\
    \ [11].\n      - distributed parallel computation, including distributed\n   \
    \     gaming [2].\n   Ideally, multicast transmission to a set of hosts is not\
    \ more\n   complicated or expensive for the sender than transmission to a single\n\
    \   host.  Similarly, multicast transmission should not be more expensive\n  \
    \ for the networks and gateways than traversing the shortest path tree\n   that\
    \ connects the sending host to the hosts identified by the\n   multicast address.\n\
    \   Multicast, transmission to a set of hosts, is properly distinguished\n   from\
    \ broadcast, transmission to all hosts on a network or\n   internetwork. Broadcast\
    \ is not a generally useful facility since\n   there are few reasons for communicating\
    \ with all hosts.\n   A variety of local network applications and systems make\
    \ use of\n   multicast.  For instance, the V distributed system [8] uses\n   network-level\
    \ multicast for implementing efficient operations on\n   groups of processes spanning\
    \ multiple machines.  Similar use is being\n   made for replicated databases [6]\
    \ and other distributed applications\n   [4]. Providing multicast in the Internet\
    \ environment would allow\n   porting such local network distributed applications\
    \ to the Internet,\n   as well as making some existing Internet applications more\
    \ robust and\n   portable (by, for example, removing \"wired-in\" lists of addresses,\n\
    \   such as gateway addresses).\n   At present, an Internet application logically\
    \ requiring multicast\n   must send individually addressed packets to each recipient.\
    \  There\n   are two problems with this approach.  Firstly, requiring the sending\n\
    \   host to know the specific addresses of all the recipients defeats its\n  \
    \ use as a binding mechanism.  For example, a diskless workstation\n   needs on\
    \ boot to determine the network address of a disk server and\n   it is undesirable\
    \ to \"wire in\" specific network addresses.  With a\n   multicast facility, the\
    \ multicast address of the boot servers (or\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   name servers\
    \ that hold the addresses of the boot servers) can be\n   well-known, allowing\
    \ the workstation to transmit its initial queries\n   to this address.\n   Secondly,\
    \ transmitting multiple copies of the same packet makes\n   inefficient use of\
    \ network bandwidth, gateway resources and sender\n   resources.  For instance,\
    \ the same packet may repeatedly traverse the\n   same network links and pass\
    \ through the same gateways.  Furthermore,\n   the local network level cannot\
    \ recognize multi-destination delivery\n   to take advantage of multicast facilities\
    \ that the underlying network\n   technologies may provide.  For example, local-area\
    \ bus, ring, or\n   radio networks, as well as satellite-based wide-area networks,\
    \ can\n   provide efficient multicast delivery directly.  Besides using\n   excessive\
    \ communication resources, the use of multiple transmissions\n   to effect multicast\
    \ severely limits the amount of parallelism in\n   transmission and processing\
    \ that can be achieved compared to an\n   integrated multicast facility.\n   The\
    \ next section describes the host group model of multicast service.\n   Section\
    \ 5 describes the extensions to IP to support the host group\n   model.  Section\
    \ 6 discusses the implementation of multicast within\n   the networks and gateways\
    \ making up the Internet.  Section 7 relates\n   this model to other proposals.\
    \  Finally, we conclude with remarks on\n   our experimental prototype implementation\
    \ of host groups and comments\n   on future directions for investigation.\n"
- title: 4. The Host Group Model
  contents:
  - "4. The Host Group Model\n   The Internet architecture defines a name space of\
    \ individual host\n   addresses.  The host group model extends that name space\
    \ to include\n   addresses of host groups.  A host group is a set of zero or more\n\
    \   Internet hosts <1>.   When an IP packet is sent with a host group\n   address\
    \ as its destination, it is delivered with \"best effort\"\n   datagram reliability\
    \ to all members of that host group.\n   The sender need not be a member of the\
    \ destination group.  We refer\n   to such a group as open, in contrast to a closed\
    \ group where only\n   members are allowed to send to the group.  We chose to\
    \ provide open\n   groups because they are more flexible and more consistent as\
    \ an\n   extension of conventional unicast models (even though they may harder\n\
    \   to implement).\n   Dynamic management of group membership provides flexible\
    \ binding of\n   Internet addresses to hosts.  Hosts may join and leave groups\
    \ over\n   time. A host may also belong to more than one group at a time.\n  \
    \ Finally, a host may belong to no groups at times, during which that\n   host\
    \ is unreachable within the Internet architecture.  In fact, a\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   host need not\
    \ have an individual Internet address at all.  Some hosts\n   may only be associated\
    \ with multi-host group addresses.  For\n   instance, there may be no reason to\
    \ contact an individual time server\n   in the Internet, so time servers would\
    \ not require individual\n   addresses.\n   Internet addresses are dynamically\
    \ allocated for transient groups,\n   groups that often last only as long as the\
    \ execution of a single\n   distributed program.  In addition, a range of host\
    \ group identifiers\n   is reserved for identifying permanent groups.  One use\
    \ of permanent\n   host groups identifiers is for host groups with standard logical\n\
    \   meanings such as \"name server group\", \"boot server group\", \"Internet\n\
    \   monitor group\", etc.\n   In the current Internet architecture, addresses\
    \ are bound to single\n   hosts.  The host group model generalizes the binding\
    \ of Internet\n   addresses to hosts by allowing one address to bind to multiple\
    \ hosts\n   on multiple networks, more than one address to be bound (in part)\
    \ to\n   one host, and the binding of an address to host to be dynamic, i.e.\n\
    \   possible to be modified under application control.  Within this more\n   general\
    \ model, the current architecture is supported as a special\n   case, retaining\
    \ its current semantics and implementation.\n   The following subsections provide\
    \ further details of the model.\n   4.1. Host Group Management\n      Dynamic\
    \ binding of Internet addresses to hosts is managed by the\n      following three\
    \ operations which are made available to clients of\n      the Internet Protocol\
    \ <2>:\n         CreateGroup ( type ) --> outcome, group-address, access-key\n\
    \      requests the creation of a new transient host group with the\n      invoking\
    \ host as its only member.  The type argument specifies\n      whether the group\
    \ is restricted or unrestricted.  A restricted\n      group restricts membership\
    \ based on the access-key.  Only hosts\n      presenting a valid host access-key\
    \ are allowed to join.  All\n      unrestricted host groups have a null access-key.\
    \  outcome\n      indicates whether the request is approved or denied.  If it\
    \ is\n      approved, a new transient group address is returned in\n      group-address.\
    \  access-key is the protection key (or password)\n      associated with the new\
    \ group.  This should fail only if there are\n      no free transient group addresses.\n\
    \         JoinGroup ( group-address, access-key ) --> outcome\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      requests that\
    \ the invoking host become a member of the identified\n      host group (permanent\
    \ or transient).  outcome indicates whether\n      the request is approved or\
    \ denied.  A request is denied if the\n      access key is invalid.\n        \
    \ LeaveGroup ( group-address ) --> outcome\n      requests that the invoking host\
    \ be dropped from membership in the\n      identified group (permanent or transient).\
    \  outcome indicates\n      whether the request is approved or denied.\n     \
    \ There is no operation to destroy a transient host group because a\n      transient\
    \ host group is deemed to no longer exist when its\n      membership goes to zero.\n\
    \      Permanent host group addresses are allocated and published by\n      Internet\
    \ administrators, in the same way as well-known TCP and UDP\n      port numbers.\
    \  That is, they are published in future editions of\n      the \"Assigned Numbers\"\
    \ document [17].\n   4.2. Packet Transmission\n      Transmission of a packet\
    \ in the host group model is controlled by\n      two parameters of scope, one\
    \ being the destination internetwork\n      address and the other being the \"\
    distance\" to the destination\n      host(s).  In particular,\n         Send (\
    \ dest-address, source-address, data, distance )\n      transmits the specified\
    \ data in an internetwork datagram to the\n      host(s) identified by dest-address\
    \ that are within the specified\n      distance.  The destination address is thus\
    \ similar to conventional\n      networks except that delivery may be to multiple\
    \ hosts; the\n      distance parameter requires further discussion.\n      Distance\
    \ may be measured in several ways, including number of\n      network hops, time\
    \ to deliver and what might be called\n      administrative distance. Administrative\
    \ distance refers to the\n      distance between the administrations of two different\
    \ networks.\n      For example, in a company the networks of the research group\
    \ and\n      advanced development group might be considered quite close to each\n\
    \      other, networks of the corporate management more distant, and\n      networks\
    \ of other companies much more distant.  One may wish to\n      restrict a query\
    \ to members within one's own administrative domain\n      because servers outside\
    \ that domain may not be trusted.\n      Similarly, error reporting outside of\
    \ an administrative domain may\n      not be productive and may in fact be confusing.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      Besides limiting\
    \ the scope of transmission, the distance parameter\n      can be used to control\
    \ the scope of multicast as a binding\n      mechanism and to implement an expanding\
    \ scope of search for a\n      desired service.  For instance, to locate a name\
    \ server familiar\n      with a given name, one might check with nearby name servers\
    \ and\n      expand the distance (by incrementing the distance on\n      retransmission)\
    \ to include more distant name servers until the\n      name is found.\n     \
    \ To reach all members of a group, a sender specifies the maximum\n      value\
    \ for the distance parameter.  This maximum must exceed the\n      \"diameter\"\
    \ of the Internet.\n      Packet reception is the same as conventional architectures.\
    \  That\n      is,\n         Receive () --> dest-address, source-address, data\n\
    \      returns the next internetwork datagram that is, or has been,\n      received.\n\
    \   4.3. Delivery Requirements\n      We identify several requirements for the\
    \ packet delivery mechanism\n      that are essential to host groups being a useful\
    \ and used\n      facility.\n      Firstly, given the predominance of broadcast\
    \ local-area networks\n      and the locality of communication to individual networks,\
    \ the\n      delivery mechanism must be able to exploit the hardware's\n     \
    \ capability for very efficient multicast within a single local-area\n      network.\n\
    \      Secondly, the delivery mechanism must scale in sophistication to\n    \
    \  efficient delivery across the Internet as it acquires high-speed\n      wide-area\
    \ communication links and higher performance gateways.\n      The former are being\
    \ provided by the introduction of high-speed\n      satellite channels and long-haul\
    \ fiber optic links.  The latter\n      are made feasible by the falling cost\
    \ of memory and processing\n      power plus the increasing importance in controlling\
    \ access to\n      relatively unprotected local network environments.  A host\
    \ group\n      delivery mechanism must be able to take advantage of these trends\n\
    \      as they materialize.\n      Finally, the delivery mechanism must avoid\
    \ \"systematic errors\" in\n      delivery to members of the host group.  That\
    \ is, a small number of\n      repeated transmissions must result in delivery\
    \ to all group\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      members within\
    \ the specified distance, unless a member is\n      disconnected or has failed.\
    \  We refer to this property as\n      coverage.  In general, most reliable protocols\
    \ make this basic\n      assumption for unicast delivery.  It is important to\
    \ guarantee\n      this assumption for multicast as well or else applications\
    \ using\n      multicast may fail in unexpected ways when coverage is not\n  \
    \    provided.  For efficiency, the multicast delivery mechanism should\n    \
    \  also avoid regularly delivering multiple copies of a packet to\n      individual\
    \ hosts.\n      Failure notification is not viewed as an essential requirement,\n\
    \      given the datagram semantics of delivery.  However, a host group\n    \
    \  extension to IP should provide \"hint\"-level failure notification\n      as\
    \ the natural extension of the failure notification for unicast.\n"
- title: 5. Extensions to IP
  contents:
  - "5. Extensions to IP\n   This section discusses the specific extensions to the\
    \ DARPA Internet\n   Protocol required to support the host group model.  The extensions\n\
    \   need be implemented only on those hosts that wish to join host groups\n  \
    \ or send to host groups; existing implementations are not affected by\n   the\
    \ proposed changes.\n   5.1. Group Addresses\n      A portion of the 32-bit IP\
    \ address space is reserved for host\n      group addresses.  The range of group\
    \ addresses is chosen to be\n      easily recognized and to not conflict with\
    \ existing individual\n      addresses. Either Class A addresses with a distinguished\n\
    \      (currently unused) network number or Class D addresses (those\n      starting\
    \ with 111) would be suitable. The range of group addresses\n      is further\
    \ subdivided into a set of permanent group addresses and\n      a set of temporary\
    \ group addresses.\n      Host group addresses may be used in the same way as\
    \ individual\n      addresses in the source, destination, and options fields of\
    \ IP\n      datagrams.  An IP implementation adds to the list of its own\n   \
    \   individual addresses, the addresses of all groups to which it\n      belongs.\
    \  The source addresses of locally originated datagrams are\n      validated against\
    \ the list, and incoming datagrams which are not\n      destined to an address\
    \ on the list are discarded.  The addresses\n      on the list change dynamically\
    \ as IP users create, join and leave\n      groups.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   5.2. Group Management\n\
    \      To support the group management operations of CreateGroup,\n      JoinGroup\
    \ and LeaveGroup, an IP module must interact with one or\n      more multicast\
    \ agents which reside in neighbouring gateways or\n      other special-purpose\
    \ hosts.  These interaction are handled by an\n      Internet Group Management\
    \ Protocol (IGMP) which, like ICMP [15],\n      is an integral part of the IP\
    \ implementation.  A proposed\n      specification for IGMP is given in Appendix\
    \ I.\n   5.3. Multicast Delivery\n      In order to transmit a datagram destined\
    \ to a host group, an IP\n      module must map the destination group address\
    \ into a local network\n      address.  As with individual IP addresses, the mapping\
    \ algorithm\n      is local-network- specific.  On networks that directly support\n\
    \      multicast, the IP host group address is mapped to a local network\n   \
    \   multicast address that includes all local members of the host\n      group\
    \ plus one or more multicast agents.  For networks that do not\n      directly\
    \ support multicast, the mapping may be to a more general\n      broadcast address,\
    \ to a list of local unicast addresses, or\n      perhaps to the address of a\
    \ single machine that handles\n      multi-destination relaying.\n   5.4. Distance\
    \ Control\n      The existing Time to Live field in the IP header can be used\
    \ for\n      crude control over the delivery radius of multicast datagrams.  To\n\
    \      provide finer-grain control, a new IP option is defined to specify\n  \
    \    the maximum delivery distance in \"administrative units\", such as\n    \
    \  \"this network\", \"this department\", \"this company\", \"this country\",\n\
    \      etc.  The set of units and their encoding is to be determined.\n"
- title: 6. Implementation
  contents:
  - "6. Implementation\n   In this section, we sketch a design for implementing the\
    \ host group\n   model within the Internet.  This description of the design is\
    \ given\n   to further support the feasibility of the host group model as well\
    \ as\n   point out some of the problems yet to be addressed.\n   Implementation\
    \ of host groups involves implementing a binding\n   mechanism (binding Internet\
    \ addresses to zero or more hosts) and a\n   packet delivery mechanism (delivering\
    \ a packet to each host to which\n   its destination address binds).  This facility\
    \ fits most naturally\n   into the gateways of the Internet and the switching\
    \ nodes of the\n   constituent point-to-point networks (as opposed to separate\
    \ machines)\n   because multicast binding and delivery is a natural extension\
    \ of the\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   unicast binding\
    \ and delivery (i.e. routing plus store-and-forward).\n   That is, a multicast\
    \ packet is routed and transmitted to multiple\n   destinations, rather than to\
    \ a single destination.\n   In the following description, we start with a basic,\
    \ simple\n   implementation that provides coverage and then refine this mechanism\n\
    \   with various optimizations to improve efficiency of delivery and\n   group\
    \ management.\n   6.1. Basic Implementation\n      A host group defines a network\
    \ group, which is the set of networks\n      containing current members of the\
    \ host group.  When a packet is\n      sent to a host group, a copy is delivered\
    \ to each network in the\n      corresponding network group.  Then, within each\
    \ network, a copy is\n      delivered to each host belonging to the group.\n \
    \     To support such multicast delivery, every Internet gateway\n      maintains\
    \ the following data structures:\n         - routing table: conventional Internet\
    \ routing information,\n           including the distance and direction to the\
    \ nearest gateway\n           on every network.\n         - network membership\
    \ table:  A set of records, one for every\n           currently existing host\
    \ group.  The network membership record\n           for a group lists the network\
    \ group, i.e. the networks that\n           contain members of the group.\n  \
    \       - local host membership table:  A set of records, one for each\n     \
    \      host group that has members on directly attached networks.\n          \
    \ Each local host membership record indicates the local hosts\n           that\
    \ are members of the associated host group.  For networks\n           that support\
    \ multicast or broadcast, the record may contain\n           only the local network-specific\
    \ multicast address used by the\n           group plus a count of local members.\
    \  Otherwise, local group\n           members may be identified by a list of unicast\
    \ addresses to\n           be used in the software implementation of multicast\
    \ within\n           the network.\n      A host invokes the multicast delivery\
    \ service by sending a\n      group-destined IP datagram to an immediate neighbour\
    \ gateway (i.e.\n      a gateway that is directly attached to the same network\
    \ as the\n      sending host).  Upon receiving a group-destined datagram from\
    \ a\n      directly attached network, a gateway looks up the network\n      membership\
    \ record corresponding to the destination address of the\n      datagram.  For\
    \ each of the networks listed in the membership\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      record, the\
    \ gateway consults its routing table.  If, according to\n      the routing table,\
    \ a member network is directly attached, the\n      gateway transmits a copy of\
    \ the datagram on that network, using\n      the network-specific multicast address\
    \ allocated for the group on\n      that network.  For a member network that is\
    \ not directly attached\n      the gateway creates a copy of the datagram with\
    \ an additional\n      inter-gateway header identifying the destination network.\
    \  This\n      inter-gateway datagram is forwarded to the nearest gateway on the\n\
    \      destination network, using conventional store-and-forward routing\n   \
    \   techniques.  At the gateway on the destination network, the\n      datagram\
    \ is stripped of its inter-gateway header and transmitted\n      to the group's\
    \ multicast address on that network.  The datagram is\n      dropped by the relaying\
    \ gateways whenever it exceeds its distance\n      limit.\n      The network membership\
    \ records and the network-specific multicast\n      structures are updated in\
    \ response to group management requests\n      from hosts.  A host sends a request\
    \ to create, join, or leave a\n      group to an immediate neighbour gateway.\
    \  If the host requests\n      creation of a group, a new network membership record\
    \ is created by\n      the serving gateway and distributed to all other gateways.\
    \  If the\n      host is the first on its network to join a group, or if the host\n\
    \      is the last on its network to leave a group, the group's network\n    \
    \  membership record is updated in all gateways.  The updates need\n      not\
    \ be performed atomically at all gateways, due to the datagram\n      delivery\
    \ semantics; hosts can tolerate misrouted and lost packets\n      caused by temporary\
    \ gateway inconsistencies, as long as the\n      inconsistencies are resolved\
    \ within normal host retransmission\n      periods. In this respect, the network\
    \ membership data is similar\n      to the network reachability data maintained\
    \ by conventional\n      routing algorithms, and can be handled by similar mechanisms.\n\
    \      In many cases, a host joins a group that already has members on\n     \
    \ the same network, or leaves a group that has remaining members on\n      the\
    \ same network.  This is then a local matter between the hosts\n      and gateways\
    \ on a single network:  only the local host membership\n      table needs to be\
    \ updated to include or exclude the host.\n      This basic implementation strategy\
    \ meets the delivery requirements\n      stated at the end of Section 4.  However,\
    \ it is far from optimal,\n      in terms of either delivery efficiency or group\
    \ management\n      overhead. Below, we discuss some further refinements to the\
    \ basic\n      implementation.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   6.2. Multicast\
    \ Routing Between Networks\n      Multicast routing among the Internet gateways\
    \ is similar to\n      store-and-forward routing in a point-to-point network.\
    \  The main\n      difference is that the links between the nodes (gateways) can\
    \ be a\n      mixture of broadcast and unicast-type networks with widely\n   \
    \   different throughput and delay characteristics.  In addition,\n      packets\
    \ are addressed to networks rather than hosts (at the\n      gateway level).\n\
    \      We intend to use the extended reverse path forwarding algorithm of\n  \
    \    Dalal and Metcalfe [10].  Although originally designed for\n      broadcast,\
    \ it is a simple and efficient technique that can serve\n      well for multicast\
    \ delivery if network membership records in each\n      gateway are augmented\
    \ with information from neighbouring gateways.\n      This algorithm uses the\
    \ source network identifier, rather than a\n      destination network identifier\
    \ to make routing decisions.  Since\n      the source address of a datagram may\
    \ be a group address, it cannot\n      be used to identify the source network\
    \ of the datagram; the first\n      gateway must add a header specifying the source\
    \ network.  This\n      approach minimizes redundant transmissions when multiple\n\
    \      destination networks are reachable across a common intergateway\n     \
    \ link, a problem with the basic implementation described above.\n      Note that\
    \ we eliminate from consideration techniques that fail to\n      deliver along\
    \ the branches of the shortest delay tree rooted at\n      the source, such as\
    \ Wall's center-based forwarding [16] because\n      this compromises the meaning\
    \ of the multicast distance parameter\n      and detracts from multicast performance\
    \ in general.  We also\n      rejected the approach of having a multicast packet\
    \ carry more than\n      one network identifier in its inter-gateway header to\
    \ indicate\n      multiple destination networks because the resulting variable\n\
    \      length headers would cause buffering and fragmentation problems in\n  \
    \    the gateways.\n   6.3. Multicasting Within Networks\n      A simple optimization\
    \ within a network is to have the sender use\n      the local multicast address\
    \ of a host group for its initial\n      transmission. This allows the local host\
    \ group members to receive\n      the transmission immediately along with the\
    \ gateways (which must\n      now \"eavesdrop\" on all multicast transmissions).\
    \  A gateway only\n      forwards the datagram if the destination host group includes\n\
    \      members on other networks.  This scheme reduces the cost to reach\n   \
    \   local group members to one packet transmission from two required\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      in the basic\
    \ implementation <3> so transmission to local members\n      is basically as efficient\
    \ as the local multicast support provided\n      by the network.\n      A similar\
    \ opportunity for reducing packet traffic arises when a\n      datagram must traverse\
    \ a network to get from one gateway to\n      another, and that network also holds\
    \ members of the destination\n      group.  Again, use of a network-specific multicast\
    \ address which\n      includes member hosts plus gateways can achieve the desired\n\
    \      effect.  However, in this case, hosts must be prepared to accept\n    \
    \  datagrams that include an inter-gateway header or, alternatively,\n      every\
    \ datagram must include a spare field in its header for use by\n      gateways\
    \ in lieu of an additional inter-gateway header.\n   6.4. Distributing Membership\
    \ Information\n      A refinement to host group membership maintenance is to store\
    \ the\n      host group membership record for a group only in those gateways\n\
    \      that are directly connected to member networks.  Information about\n  \
    \    other groups is cached in the gateway only while it is required to\n    \
    \  route to those other groups.  When a gateway receives a datagram\n      to\
    \ be forwarded to a group for which it has no network membership\n      record\
    \ (which can only happen if the gateway is not directly\n      connected to a\
    \ member network), it takes the following action.\n      The gateway assumes temporarily\
    \ that the destination group has\n      members on every network in the internetwork,\
    \ except those\n      directly attached to the sending gateway, and routes the\
    \ datagram\n      accordingly.  In the inter-gateway header of the outgoing packet,\n\
    \      the gateway sets a bit indicating that it wishes to receive a copy\n  \
    \    of the network membership record for the destination host group.\n      When\
    \ such a datagram reaches a gateway on a member network, that\n      gateway sends\
    \ a copy of the membership record back to the\n      requesting gateway and clears\
    \ the copy request bit in the\n      datagram.\n      Copies of network membership\
    \ records sent to gateways outside of a\n      group's member networks are cached\
    \ for use in subsequent\n      transmissions by those gateways.  That raises the\
    \ danger of a\n      stale cache entry leading to systematic delivery failures.\
    \  To\n      counter that problem, the inter-gateway header contains a field\n\
    \      which is a hash value or checksum on the network membership record\n  \
    \    used to route the datagram.  Gateways on member networks compare\n      the\
    \ checksum on incoming datagrams with their up-to-date records.\n      If the\
    \ checksums don't match, an up-to-date copy of the record is\n      returned to\
    \ the gateway with the bad record.\n      This caching strategy minimizes intergateway\
    \ traffic for groups\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      that are only\
    \ used within one network or within the set of\n      networks on which members\
    \ reside, the expected common cases.\n      Partial replication with caching also\
    \ reduces the overhead for\n      network traffic to disseminate updates and keep\
    \ all copies\n      consistent.  Finally, it also reduces the total space required\
    \ in\n      all the gateways to support a large number of host groups.\n     \
    \ We have not addressed here the problem of maintaining up-to-date,\n      consistent\
    \ network membership records within the set of gateways\n      connected to members\
    \ of a group.  This can be viewed as a\n      distributed database problem which\
    \ has been well studied in other\n      contexts.  The loose consistency requirements\
    \ on network\n      membership records suggest that the techniques used in Grapevine\n\
    \      [3] might be useful for this application.\n"
- title: 7. Related Work
  contents:
  - "7. Related Work\n   The use of unreliable multicast by higher-level protocols\
    \ and the\n   implementation of multicast within various individual networks have\n\
    \   been well-studied (see [7] for references and discussion).  However,\n   there\
    \ is relatively little published work on the use or\n   implementation of internetwork\
    \ multicasting.\n   Boggs, in his thesis [4], describes a number of distributed\n\
    \   applications that are impossible or very awkward to support without\n   the\
    \ flexible binding nature of broadcast addressing.  Although he\n   recognizes\
    \ that almost all of his applications would be best served\n   by a multicast\
    \ mechanism, he advocates the use of \"directed\n   broadcast\" because it is\
    \ easy to implement within many kinds of\n   networks and can be extended across\
    \ an internetwork without placing\n   any new burden on internetwork gateways.\
    \  In RFC-919 [13], Mogul\n   proposes adopting directed broadcast for the DARPA\
    \ Internet.\n   Broadcasting has the undesirable side effect of delivering packets\
    \ to\n   more hosts than necessary, thus incurring overhead on uninvolved\n  \
    \ parties and possibly creating security problems.  As more and more\n   applications\
    \ take advantage of broadcasting, the overhead on all\n   hosts continues to rise.\
    \  Clearly, broadcast does not scale up to a\n   large internetwork.  As an attempt\
    \ to handle the scaling problem,\n   directed broadcast is less attractive than\
    \ true multicast because the\n   set of hosts that can be reached by a single\
    \ \"send\" operation is an\n   artifact of the internetwork topology, rather than\
    \ a grouping that is\n   meaningful to the sender.\n   In RFC-947 [12], Lebowitz\
    \ and Mankins propose the use of broadcast\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   repeaters that\
    \ pick up broadcast datagrams from one network and relay\n   them to other networks\
    \ for broadcast there.  This technique is even\n   less selective of its targets\
    \ than Bogg's directed broadcast method.\n   Aguilar [1] suggests allowing an\
    \ IP datagram to carry multiple\n   destination addresses, which are used by the\
    \ gateways to route the\n   datagram to each recipient.  Such a facility would\
    \ alleviate some of\n   the inefficiencies of sending individual datagrams to\
    \ a group, but it\n   would not be able to take advantage of local network multicast\n\
    \   facilities. More seriously, Aguilar's scheme requires the sender to\n   know\
    \ the individual IP addresses of all members of the destination\n   group and\
    \ thus lacks the flexible binding nature of true multicast or\n   broadcast.\n"
- title: 8. Concluding Remarks
  contents:
  - "8. Concluding Remarks\n   We have described a model of multicast communication\
    \ for the\n   Internet. As an extension of the existing Internet architecture,\
    \ it\n   views unicast communication and time-to-live constraints as special\n\
    \   cases of the more general form of communication arising with\n   multicast.\
    \  We have argued that this model is implementable in the\n   Internet and that\
    \ it provides a powerful facility for a variety of\n   applications.  In some\
    \ cases, it provides a facility that is required\n   for certain applications\
    \ to work in the Internet environment.  In\n   other cases, it provides a more\
    \ efficient, robust and possibly more\n   elegant way of implementing existing\
    \ Internet applications.\n   We are currently implementing a prototype host group\
    \ facility as an\n   extension of IP.  For practical reasons, this prototype implements\n\
    \   all group management functions and multicast routing outside of the\n   Internet\
    \ gateways, in special hosts called multicast agents, which\n   are similar to\
    \ the broadcast repeaters of Lebowitz and Mankins.  The\n   collection of multicast\
    \ agents in effect provides a second gateway\n   system on top of the existing\
    \ Internet, for multicast purposes.  The\n   major costs of this separation are\
    \ redundancy of routing tables\n   between gateways and multicast agents and the\
    \ increased delay and\n   unreliability of extra hops in the delivery path.  Much\
    \ of the\n   routing information in the multicast agents must be \"wired-in\"\n\
    \   because they do not have access to the gateways' routing tables.\n   However,\
    \ this rudimentary implementation provides an environment for\n   evaluating the\
    \ interface to the multicast service and for\n   investigating group management\
    \ and multicast routing protocols for\n   eventual use in the gateways.  It also\
    \ serves as a testbed for\n   porting multicast-based distributed applications\
    \ to the Internet.\n   For now, we are restricting group membership to local networks\
    \ that\n   already have a broadcast or multicast capability, such as the\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   Ethernet. We\
    \ feel that, in the future, any network that is to support\n   hosts other than\
    \ just gateways must have a multicast addressing mode.\n   Efficient implementation\
    \ of multicast within point-to-point or\n   virtual circuit networks deserves\
    \ investigation.\n   A significant issue raised by the host group model is authentication\n\
    \   and access control in the Internet.  Gateways must control which\n   hosts\
    \ can create and join host groups, presumably making their\n   decision based\
    \ on the identity of the requestor (thus requiring\n   authentication) and permissions\
    \ (access control lists).  This issue\n   does not arise in conventional internetwork\
    \ architectures because\n   host addresses are administratively assigned with\
    \ no notion of\n   dynamic assignment and binding as provided by host groups.\
    \  We\n   believe that access control should be recognized as a proper and\n \
    \  necessary function of gateways so as to protect the hosts of local\n   networks\
    \ from general internetwork activity.  Thus, group access\n   control can be subsumed\
    \ as part of this more general mechanism,\n   although more investigation of the\
    \ general issue is called for.\n   On a philosophical point, there has been considerable\
    \ reluctance to\n   make open use of multicast on local networks because it was\n\
    \   network-specific and not provided across the Internet.  We were\n   originally\
    \ of that school.  However, we recognized that our \"hidden\"\n   uses of multicast\
    \ in the V distributed system were essential unless\n   we resorted to dramatically\
    \ poorer solutions - wired-in addresses.\n   We also recognized, as described\
    \ in this paper, that an adequate\n   multicast facility for the Internet was\
    \ feasible.  As a consequence,\n   we now argue that multicast is an important\
    \ and basic facility to\n   provide in local networks and internetworks.  Higher\
    \ levels of\n   communication, including applications, should feel free to make\
    \ use\n   of this powerful facility. Networks and internetworks lacking\n   multicast\
    \ should be regarded as deficient relative to the future (and\n   present) requirements\
    \ of sophisticated distributed applications and\n   communication systems.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - 'Host Groups: A Multicast Extension to the Internet Protocol

    '
- title: Appendix I. Internet Group Management Protocol (IGMP)
  contents:
  - "Appendix I. Internet Group Management Protocol (IGMP)\n   The Internet Group\
    \ Management Protocol (IGMP) is used between IP\n   hosts and their immediate\
    \ neighbour multicast agents to support the\n   allocation of temporary group\
    \ addresses and the addition and deletion\n   of members of a group.\n   Like\
    \ ICMP, IGMP is a required part of all IP implementations.  IGMP\n   messages\
    \ are encapsulated in IP datagrams, with an IP protocol number\n   of 2.  IGMP\
    \ messages are formatted similarly to ICMP messages and the\n   different IGMP\
    \ message types are given values distinct from ICMP\n   message types, so that\
    \ both protocols may share common implementation\n   modules or, perhaps, be merged\
    \ into a single protocol.\n   IGMP interactions take the form of request-response\
    \ transactions.  A\n   request message is sent by hosts to the permanent group\
    \ of all\n   immediate neighbour multicast agents.  Multicast agents reply to\
    \ the\n   IP source address of a request.  If no reply is received within a\n\
    \   (currently unspecified) timeout interval, a host retransmits its\n   request,\
    \ up to some (currently unspecified) maximum number of times.\n   IGMP transactions\
    \ are considered idempotent, so that multicast agents\n   need not recognize and\
    \ filter out duplicate requests nor buffer\n   replies <4>.\n   The IGMP message\
    \ formats and procedures are defined below, in the\n   style used in the ICMP\
    \ specification.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   Create Group\
    \ Request or Create Group Reply Message\n       0                   1        \
    \           2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7\
    \ 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |     Code      |           Checksum            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |        Sequence Number        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Group Address                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      +   \
    \                      Access Key                            +\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      IP Fields:\n      Addresses\n         A Create Group Request message is\
    \ sent with an individual IP\n         address of the sending host as its source,\
    \ and the well-known\n         group address of the multicast agents as its destination.\n\
    \         The corresponding Create Group Reply is sent with those two\n      \
    \   addresses reversed.\n      IGMP Fields:\n      Type\n         101 for Create\
    \ Group Request\n         102 for Create Group Reply\n      Code\n         For\
    \ a Create Group Request message, the Code field indicates if\n         the group\
    \ is to be restricted:\n            0 = unrestricted\n            1 = restricted\n\
    \         For a Create Group Reply message, the Code field specifies the\n   \
    \      outcome of the request:\n            0 = request approved\n           \
    \ 1 = request denied, no resources\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      Checksum\n\
    \         The checksum is the 16-bit one's complement of the one's\n         complement\
    \ sum of the IGMP message starting with the IGMP Type.\n         For computing\
    \ the checksum, the checksum field should be zero.\n         This checksum may\
    \ be replaced in the future.\n      Identifier\n         An identifier to aid\
    \ in matching Request and Reply messages.\n      Sequence Number\n         A sequence\
    \ number to aid in matching Request and Reply\n         messages.\n      Group\
    \ Address\n         For a Create Group Request message, a value of 0.\n      \
    \   For a Create Group Reply message, either a newly allocated\n         group\
    \ address (if the request is approved) or a value of 0 (if\n         denied).\n\
    \      Access Key\n         For a Create Group Request message, a value of 0.\n\
    \         For a Create Group Reply message, either a pseudo-random 64-bit\n  \
    \       number (if the request for a restricted group is approved) or\n      \
    \   0.\n      Description\n         A Create Group Request message is sent to\
    \ the the group of\n         local multicast agents by a host wishing to allocate\
    \ a new\n         temporary group.\n         If no Reply message is received within\
    \ t seconds, the Request\n         is retransmitted.  If no Reply is received\
    \ after n\n         transmissions, the request is deemed to have failed.\n   \
    \      The first Reply message to arrive, if any, specifies the\n         outcome\
    \ of the request.  The request may be denied because of\n         lack of resources\
    \ (e.g. no table space in gateways or all\n         temporary addresses in use).\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n         If the\
    \ request is approved, the requesting host is considered\n         to be the first\
    \ and only current member of the new host group.\n         The Identifier and\
    \ Sequence Number fields are used to match the\n         Reply to the corresponding\
    \ Request.  The multicast agents may\n         choose to use these values to minimize\
    \ the chance of allocating\n         more than one new group for a single request,\
    \ for example when\n         a Reply is lost and a\n         Request is retransmitted.\
    \  However, the multicast agents must\n         be prepared to recover temporary\
    \ group addresses without\n         requiring explicit Leave Group Requests from\
    \ all members; they\n         may choose simply to allocate a new address for\
    \ every\n         retransmission and recover unused ones when needed <5>.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   Join Group Request\
    \ or Join Group Reply Message\n       0                   1                  \
    \ 2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |     Code      |           Checksum            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |        Sequence Number        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Group Address                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \                                                               |\n      +   \
    \                      Access Key                            +\n      |      \
    \                                                         |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      IP Fields:\n      Addresses\n         A Join Group Request message is sent\
    \ with an individual IP\n         address of the sending host as its source, and\
    \ the well-known\n         group address of the multicast agents as its destination.\n\
    \         The corresponding Join Group Reply is sent with those two\n        \
    \ addresses reversed.\n      IGMP Fields:\n      Type\n         103 for Join Group\
    \ Request\n         104 for Join Group Reply\n      Code\n         For a Join\
    \ Group Request message, the Code field contains 0.\n         For a Join Group\
    \ Reply message, the Code field specifies the\n         outcome of the request:\n\
    \            0 = request approved\n            1 = request denied, no resources\n\
    \            2 = request denied, invalid group address\n            3 = request\
    \ denied, invalid access key\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      Checksum\n\
    \         The checksum is the 16-bit one's complement of the one's\n         complement\
    \ sum of the IGMP message starting with the IGMP Type.\n         For computing\
    \ the checksum, the checksum field should be zero.\n         This checksum may\
    \ be replaced in the future.\n      Identifier\n         An identifier to aid\
    \ in matching Request and Reply messages.\n      Sequence Number\n         A sequence\
    \ number to aid in matching Request and Reply\n         messages.\n      Group\
    \ Address\n         For a Join Group Request message, a host group address.\n\
    \         For a Join Group Reply message, the same group address as in\n     \
    \    the corresponding request.\n      Access Key\n         For a Join Group Request\
    \ message, the access key allocated when\n         the group was created (0 for\
    \ unrestricted groups).\n         For a Join Group Reply message, the same access\
    \ key as in the\n         corresponding request.\n      Description\n        \
    \ A Join Group Request message is sent to the the group of local\n         multicast\
    \ agents by a host wishing to join a specified,\n         existing group.  If\
    \ no Reply message is received within t\n         seconds, the Request is retransmitted.\
    \  If no reply is received\n         after n transmissions, the request is deemed\
    \ to have failed.\n         The first Reply message to arrive, if any, specifies\
    \ the\n         outcome of the request.  The request may be denied because of\n\
    \         an invalid access key, an invalid specified group address (e.g.\n  \
    \       non-existent group) or lack of resources (e.g. no table space\n      \
    \   in gateways).\n         The Identifier and Sequence Number fields are used\
    \ to match the\n         Reply to the corresponding Request.  If a multicast agent\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n         receives\
    \ a request from a host to join a group to which it\n         already belongs,\
    \ the agent approves the request, under the\n         assumption that the request\
    \ was a retransmission for a lost\n         Reply.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   Leave Group Request\
    \ or Leave Group Reply Message\n       0                   1                 \
    \  2                   3\n       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2\
    \ 3 4 5 6 7 8 9 0 1\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |     Type      |     Code      |           Checksum            |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      |\
    \           Identifier          |        Sequence Number        |\n      +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\
    \      |                         Group Address                         |\n   \
    \   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n      IP\
    \ Fields:\n      Addresses\n         A Leave Group Request message is sent with\
    \ an individual IP\n         address of the sending host as its source, and the\
    \ well-known\n         group address of the multicast agents as its destination.\n\
    \         The corresponding Leave Group Reply is sent with those two\n       \
    \  addresses reversed.\n      IGMP Fields:\n      Type\n         105 for Leave\
    \ Group Request\n         106 for Leave Group Reply\n      Code\n         For\
    \ a Leave Group Request message, the Code field contains 0.\n         For  Leave\
    \ Group Reply message, the Code field specifies the\n         outcome of the request:\n\
    \            0 = request approved\n            2 = request denied, invalid group\
    \ address\n      Checksum\n         The checksum is the 16-bit one's complement\
    \ of the one's\n         complement sum of the IGMP message starting with the\
    \ IGMP Type.\n         For computing the checksum, the checksum field should be\
    \ zero.\n         This checksum may be replaced in the future.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n      Identifier\n\
    \         An identifier to aid in matching Request and Reply messages.\n     \
    \ Sequence Number\n         A sequence number to aid in matching Request and Reply\n\
    \         messages.\n      Group Address\n         For a Leave Group Request message,\
    \ a host group address.\n         For a Leave Group Reply message, the same group\
    \ address as in\n         the corresponding request.\n      Description\n    \
    \     A Leave Group Request message is sent to the the group of local\n      \
    \   multicast agents by a host wishing to leave a specified,\n         existing\
    \ group.  If no Reply message is received within t\n         seconds, the Request\
    \ is retransmitted.  If no reply is received\n         after n transmissions,\
    \ the request is deemed to have succeeded.\n         The first Reply message to\
    \ arrive, if any, specifies the\n         outcome of the request.  The request\
    \ may be denied only if the\n         specified group address is invalid (e.g.\
    \ an individual rather\n         than a group address.)\n         The Identifier\
    \ and Sequence Number fields are used to match the\n         Reply to the corresponding\
    \ Request, as with other ICMP\n         transactions. If a multicast agent receives\
    \ a request from a\n         host to leave a group to which it does not belong,\
    \ the agent\n         approves the request, under the assumption that the request\
    \ was\n         a retransmission for a lost Reply.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - 'Host Groups: A Multicast Extension to the Internet Protocol

    '
- title: 'Notes:'
  contents:
  - "Notes:\n   <1>  In reality, Internet addresses (individual or group) are bound\n\
    \        to network interfaces or network attachment points, not the host\n  \
    \      machines per se.\n   <2>  In this procedure call notation, the arguments\
    \ for an operation\n        are listed in parentheses after the operation name,\
    \ and the\n        returned values, if any, are listed after a --> symbol.\n \
    \  <3>  One unicast transmission from sender to gateway and one\n        multicast\
    \ transmission from gateway to local group members\n   <4>  This protocol may\
    \ eventually be replaced by a more general\n        reliable transaction protocol\
    \ designed for this type of\n        client/server interaction, as suggested in\
    \ RFC-955 [5].\n   <5>  Multicast agents can use an ICMP Echo message to determine\
    \ if a\n        group has any current members.  The Echo message should be\n \
    \       transmitted several times before deciding the group address is\n     \
    \   no longer in use.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - 'Host Groups: A Multicast Extension to the Internet Protocol

    '
- title: References
  contents:
  - "References\n   [1]   L. Aguilar. Datagram Routing for Internet Multicasting.\
    \ In ACM\n         SIGCOMM '84 Communications Architectures and Protocols, pages\n\
    \         58-63. ACM, June, 1984.\n   [2]   E. J. Berglund and D. R. Cheriton.\
    \ Amaze: A distributed\n         multi-player game program using the distributed\
    \ V kernel. In\n         Proceedings of the Fourth International Conference on\n\
    \         Distributed Systems. IEEE, May, 1984.\n   [3]   A. D. Birrell et al.\
    \ Grapevine: an exercise in distributed\n         computing. Communications of\
    \ the ACM 25(4):260-274, April,\n         1982.\n   [4]   D. R. Boggs. Internet\
    \ Broadcasting. PhD thesis, Stanford\n         University, January, 1982.\n  \
    \ [5]   R. Braden. Towards a Transport Service for Transaction\n         Processing\
    \ Applications. Technical Report RFC-919, SRI Network\n         Information Center,\
    \ September, 1985.\n   [6]   J-M. Chang. Simplifying Distributed Database Design\
    \ by Using a\n         Broadcast Network. In SIGMOD '84. ACM, June, 1984.\n  \
    \ [7]   D. R. Cheriton and S. E. Deering. Host Groups: A Multicast\n         Extension\
    \ for Datagram Internetworks. In Proceedings of the\n         Ninth Data Communications\
    \ Symposium. ACM/IEEE, September, 1985.\n   [8]   D. R. Cheriton and W. Zwaenepoel.\
    \ Distributed Process Groups in\n         the V Kernel. ACM Transactions on Computer\
    \ Systems 3(3), May,\n         1985.\n   [9]   F. Cristian et al. Atomic Broadcast:\
    \ from simple message\n         diffusion to Byzantine agreement. In 15th International\n\
    \         Conference on Fault Tolerant Computing. , Ann Arbor, Michigan,\n   \
    \      June, 1985.\n   [10]  Y. K. Dalal and R. M. Metcalfe. Reverse Path Forwarding\
    \ of\n         Broadcast Packets. Communications of the ACM 21(2):1040-1047,\n\
    \         December, 1978.\n   [11]  H. Forsdick. MMCF: A Multi-Media Conferencing\
    \ Facility.\n         personal communication.\n"
- title: RFC 966                                                    December 1985
  contents:
  - 'RFC 966                                                    December 1985

    '
- title: 'Host Groups: A Multicast Extension to the Internet Protocol'
  contents:
  - "Host Groups: A Multicast Extension to the Internet Protocol\n   [12]  K. Lebowitz\
    \ and D. Mankins. Multi-network Broadcasting within\n         the Internet.Technical\
    \ Report RFC-947, SRI Network Information\n         Center, June, 1985.\n   [13]\
    \  J. Mogul. Broadcasting Internet Datagrams. Technical Report\n         RFC-919,\
    \ SRI Network Information Center, October, 1984.\n   [14]  J. Postel. Internet\
    \ Protocol. Technical Report RFC-791, SRI\n         Network Information Center,\
    \ September, 1981.\n   [15]  J. Postel. Internet Control Message Protocol. Technical\
    \ Report\n         RFC-792, SRI Network Information Center, September, 1981.\n\
    \   [16]  D. W, Wall. Mechanisms for Broadcast and Selective Broadcast.\n    \
    \     Technical Report 190, Computer Systems Laboratory, Stanford\n         University,\
    \ June, 1980.\n   [17]  J. K. Reynolds and J. Postel. Assigned Numbers. Technical\n\
    \         Report RFC-960, SRI Network Information Center, September,\n       \
    \  1981.\n"
