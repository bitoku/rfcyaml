- title: __initial_text__
  contents:
  - "                     Comments on the Meyer Proposal\nWe find the Meyer proposal\
    \ (Note #46) to be the most acceptable\nto dare, for exactly the reasons that\
    \ he enumerates; viz., simple,\nsuffices for most planned uses of the Network,\
    \ easy to implement,\ncan be extended.  It does not encompass everything that\
    \ has been\nsuggested recently, however, we do agree with the items that are\n\
    proposed and we feel that the missing features are probably not\nworth doing battle\
    \ over and thus delaying the specification.\nWe make the following comments on\
    \ the seven issues rasied in\nNote #47.\n   1)  We agree with Steve that dynamic\
    \ reconnection will later\n       be required for more sophisticated uses of the\
    \ Network.\n       We also agree with the Project MAC people that it\n       unnecessary\
    \ initially.  A better job can be done of dynamic\n       reconnection given some\
    \ Network experience and the specific\n       needs of its use.\n   2)  INT is\
    \ easy to implement and serves a useful purpose.\n   3)  We favor including a\
    \ sub-field for instance tag identifier.\n       We see the need for both cases;\
    \ a) where multiple processes\n       should appear indistinguishable, and b)\
    \ where a given\n       user owning multiple processes must distinguish among\n\
    \       them.  Those program parts that should not distinguish\n       among processes\
    \ should simply ignore the instance tag.\n       Tom's suggestion to use part\
    \ of the user number sub-field\n       merely reduces the combined length of sub-fields\
    \ from 32\n       bits to 24 bits; the problem remains.\n   4)  We disagree with\
    \ both Steve and MAC in that no special\n       structure should be imposed on\
    \ the data transmitted.  We\n       prefer the \"message data type\" mentioned\
    \ by E. I. Ancona,\n       Note #42, page 1.  An example of its use was cited\
    \ in\n       Note #39, page 2, transmit vs broadcast.\n       ASCII.  We have\
    \ observed that most sites have previously\n       suggested ASCII.  Is there\
    \ anyone who objects?\n   5)  Word boundary alignment is more attractive than\
    \ double\n       padding.\n   6)  Steve's suggestion of short-term queueing of\
    \ RFCs is\n       acceptable as an option.\n   7)  We support the UCC in Note\
    \ #46 for three principle reasons:\n       a)  In general the user should not\
    \ know the remote socket\n           code of the process to whom he wishes to\
    \ communicate.\n       b)  The additional duplex connection can provide some\n\
    \           superfisory control over process behavior, possibly\n           in\
    \ conjunction with the interrupt procedure.\n       c)  Most of the other proposed\
    \ methods demand queueing.\n      We think there must be a standard UCC, yet we\
    \ encourage\n      parallel experimental UCCs.\nWe make two additional comments\
    \ on Note #46 that were not reiterated\nin Note #47.\nBLK and RSM are more straightforward\
    \ than previous suggestions and\nthey do not deny multiplexing over a given link.\
    \  With regard to\nthe use of links, we refer to an example given by Bob Kahn\
    \ where\nan intermediate IMP goes down and eats some's RFNM.  This\nshould not\
    \ necessitate reconnection.\nIn Note #46, page 6, the statement that the UCC has\
    \ the ability\nto close connections to a dead process is installation dependent.\n\
    In our particular case the NCP is notified directly of process\nfailure due to\
    \ the particular software interface through which all\nprocessea, including NCP,\
    \ must communicate.\nJFH:hs\n       [ This RFC was put into machine readable form\
    \ for entry ]\n          [ into the online RFC archives by Gary Okada 7/97 ]\n"
