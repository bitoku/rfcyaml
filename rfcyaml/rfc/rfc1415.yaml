- title: __initial_text__
  contents:
  - '                     FTP-FTAM Gateway Specification

    '
- title: Status of the Memo
  contents:
  - "Status of the Memo\n   This RFC specifies an IAB standards track protocol for\
    \ the Internet\n   community, and requests discussion and suggestions for improvements.\n\
    \   Please refer to the current edition of the \"IAB Official Protocol\n   Standards\"\
    \ for the standardization state and status of this protocol.\n   Distribution\
    \ of this memo is unlimited.\n"
- title: Abstract
  contents:
  - "Abstract\n   This memo describes a dual protocol stack application layer gateway\n\
    \   that performs protocol translation, in an interactive environment,\n   between\
    \ the FTP and FTAM file transfer protocols.\n   Two key assumptions are made:\
    \  1) POSIX file naming conventions and\n   hierarchical organization, rather\
    \ than proprietary conventions are in\n   use; and 2) X.500 Directory Services\
    \ are available.\n"
- title: Acknowledgments
  contents:
  - "Acknowledgments\n   The authors of this RFC would like to express their appreciation\
    \ to\n   the individuals and organizations that participated in the\n   implementation\
    \ of the FTP-FTAM Application Layer Gateway and its\n   fielding on the MILNET.\
    \  Implementation credits go to Mr. John Scott,\n   formerly of the MITRE Corporation,\
    \ while fielding credits are\n   extended to James Graham and R. Greg Lavender\
    \ of Open Networks, Inc.\n   (formerly NetWorks One) and Robert Cooney of the\
    \ Naval Computer and\n   Telecommunications Station (NCTS) Washington.  Dr. Marshall\
    \ Rose is\n   to be commended for recognizing the importance of the FTP-FTAM\n\
    \   gateway and promulgating it as a part of the ISO Development\n   Environment\
    \ (ISODE).   The following individuals have provided\n   valuable editorial comments:\
    \  Larry Friedman, Donna Vincent and\n   Michael Resnick of Digital Equipment\
    \ Corporation; Robert Cooney of\n   NCTS; and S.E. Hardcastle-Kille of University\
    \ College London. Funding\n   of the FTP-FTAM Gateway Request for Comments effort\
    \ was provided by\n   Open Networks Inc. and the Defense Information Systems Agency\
    \ (DISA),\n   formerly the Defense Communications Agency.  DISA sponsors include\n\
    \   Len Tabacchi, George Bradshaw, Tom Clarke, and Betsy Turner.\n"
- title: Table of Contents
  contents:
  - "Table of Contents\n   1.  Introduction..................................................2\n\
    \   1.1.   Relationship to Other Work ................................3\n   1.2.\
    \   Overview of Gateway Operation .............................4\n   2.  Gateway\
    \ Architecture..........................................6\n   3.  Network Naming\
    \ and Addressing.................................8\n   4.  Use of the Gateway\
    \ Services...................................9\n   4.1.   FTP-Initiated Gateway\
    \ Service .............................9\n   4.2.   FTAM-Initiated Gateway Service\
    \ ...........................11\n   4.3.   Summary of Usage .........................................12\n\
    \   5.  Gateway State Variables and Transitions......................13\n   5.1.\
    \   FTP-Initiated Gateway Service ............................14\n   5.2.   FTAM-Initiated\
    \ Gateway Service ...........................16\n   6.  Document Type Support........................................18\n\
    \   6.1.   Notes on NBS-9 ...........................................18\n   7.\
    \  Functional Comparison of FTP and FTAM........................19\n   7.1.  \
    \ Loss of Functionality ....................................20\n   8. Mapping\
    \ of Protocol Functions and Representations.............20\n   8.1.  FTP-Initiated\
    \ Gateway Service .............................22\n   8.2.  FTAM-Initiated Gateway\
    \ Service ............................38\n   9. Mapping between FTP Reply Codes\
    \ and FTAM Parameters...........47\n   9.1.  FTP Reply Codes to FTAM Parameters\
    \ ........................48\n   9.2.  FTAM Parameters to FTP Reply Codes ........................50\n\
    \   9.3.  Future Mapping Problem ....................................54\n   9.4.\
    \  Error Handling ............................................54\n   10. Implementation\
    \ and Configuration Guidelines..................54\n   10.1.  Robustness ...............................................54\n\
    \   10.2.  Well-Known TCP/IP Port ...................................55\n   10.3.\
    \  Gateway Listener Processes ...............................55\n   10.4.  Implementation\
    \ Testing ...................................55\n   10.5.  POSIX File Naming and\
    \ Organization .......................55\n   11. Security Considerations......................................55\n\
    \   12. References...................................................56\n   13.\
    \ Authors' Addresses...........................................58\n"
- title: 1. Introduction
  contents:
  - "1. Introduction\n   The TCP/IP and OSI protocol suites will coexist in the Internet\n\
    \   community for several years to come.  As more and more OSI hosts are\n   fielded\
    \ on the Internet, the requirement for gateways between the two\n   protocol suites\
    \ becomes more pressing.\n   This specification describes an application layer\
    \ gateway providing\n   interoperability between the TCP/IP File Transfer Protocol\
    \ (FTP) and\n   the OSI File Transfer, Access, and Management (FTAM) protocol.\
    \  The\n   proposed application layer gateway is based on a bi-directional set\n\
    \   of mappings between the FTP and FTAM protocols.  Since the protocols\n   have\
    \ quite different command structures, the mappings between them\n   are not one-to-one.\
    \  This paper assumes knowledge of the File\n   Transfer Protocol (FTP) [RFC959]\
    \ and the File Transfer, Access, and\n   Management Protocol (FTAM) [ISO8571-1,2,3,4,5].\n\
    \   Two important goals of the mappings are to:\n      Provide FTP users with\
    \ as much emulated FTP capability on an\n      FTAM Responder as possible, and\n\
    \      Provide FTAM users with as much emulated FTAM capability on an\n      FTP\
    \ Server as possible.\n   Though it is anticipated that the application layer\
    \ gateway will be\n   implemented on full protocol suites of both TCP/IP and OSI,\
    \ at least\n   one implementation of such a gateway (included in the ISO Development\n\
    \   Environment) can be configured to operate FTAM over either OSI or\n   TCP/IP\
    \ lower-layer services.\n"
- title: 1.1. Relationship to Other Work
  contents:
  - "1.1. Relationship to Other Work\n   Ideas presented in this specification are\
    \ based on lessons learned in\n   fielding the gateway on the MILNET, operational\
    \ at NCTS Washington\n   D.C. since 1989, and on the efforts of M. A. Wallace\
    \ et al. of the\n   National Institute of Standards and Technology (NIST) [NIST86].\
    \  In\n   1986, NIST published a design document for an FTP-FTAM gateway.\n  \
    \ Since that time, at least one implementation (for a subset of the FTP\n   and\
    \ FTAM protocols) of the gateway has been developed [MITRE87] and\n   is included\
    \ with the ISODE.  This implementation is based on the NIST\n   protocol translator\
    \ gateway design [NIST86].\n   This document's contribution to the advancement\
    \ of the FTP-FTAM\n   gateway concept is to:\n      *  Enhance the user interaction\
    \ capability provided by the ISODE\n         implementation of the FTP-FTAM application\
    \ layer gateway.\n      *  Clarify and enhance the mappings (FTP to FTAM, FTAM\
    \ to FTP)\n         documented by NIST.\n      *  Provide guidelines for fielding\
    \ the FTP-FTAM application layer\n         gateway on the Internet so that it\
    \ is useful as an Internet\n         resource.\n      *  Produce a formal specification\
    \ for the FTP-FTAM gateway suitable\n         for implementors to use in building\
    \ additional FTP-FTAM\n         gateways.\n      *  Provide a formal specification\
    \ for organizations wishing to\n         procure FTP-FTAM gateways.\n"
- title: 1.2. Overview of Gateway Operation
  contents:
  - "1.2. Overview of Gateway Operation\n   The gateway provides a virtual end-to-end\
    \ application file transfer\n   service.  As data is sent via FTP, the gateway\
    \ immediately maps the\n   requested function to FTAM and passes it to the FTAM\
    \ host.  In a\n   similar fashion, but using a different set of mappings, an FTAM\n\
    \   request is sent to the gateway, immediately mapped to an FTP\n   function,\
    \ and passed along to the FTP host.\n   In FTP, the two parties involved in a\
    \ file transfer are the Client\n   and Server.  The Client is responsible for\
    \ initiating a connection to\n   the Server.  Once the connection is established,\
    \ all service requests\n   originate from the Client.  The FTP-FTAM gateway does\
    \ not support the\n   FTP three node model.\n   In FTAM, the two parties involved\
    \ in a file transfer are the\n   Initiator and Responder.  The Initiator is responsible\
    \ for initiating\n   a connection to the Responder.  Once the connection is established,\n\
    \   either the Initiator or Responder may issue service requests to the\n   other.\n\
    \   The FTP-FTAM gateway provides two sets of services:\n        1. FTP-Initiated\
    \ Gateway Services\n           Utilized when an FTP Client contacts the FTP-FTAM\
    \ gateway to\n           instigate a file transfer with an FTAM Responder.\n \
    \       2. FTAM-Initiated Gateway Services\n           Utilized when an FTAM Initiator\
    \ contacts the FTP-FTAM\n           gateway to instigate a file transfer with\
    \ an FTP Server.\n   The gateway services' names were selected to identify the\
    \ roles that\n   the FTP-FTAM gateway plays when performing file transfers.  For\n\
    \   example, when a file transfer is instigated by an FTP Client, it\n   contacts\
    \ the FTP Server portion of the gateway, which maps protocol\n   information to\
    \ the FTAM Initiator portion of the gateway, which in\n   turn contacts the remote\
    \ FTAM Responder.  This example scenario uses\n   the FTP-Initiated Gateway Services.\n\
    \   Figure 1 illustrates the perspective of the application process in\n   the\
    \ FTP-Initiated service.  Figure 2 illustrates that of the FTAM-\n   Initiated\
    \ service.\n          TCP Host                                  OSI Host\n   \
    \   +--------------+                        +------------------+\n      |  FTP\
    \ Client  |                        |  FTAM Responder  |\n      +--------------+\
    \                        +------------------+\n             |                \
    \                          |\n             |                                 \
    \         |\n             |                                          |\n     \
    \        |            FTP-FTAM Gateway              |\n             |    +--------------------------------+\
    \    |\n             +--  |  FTP Server    FTAM Initiator  |  --+\n          \
    \        +--------------------------------+\n             Figure 1  -  FTP-Initiated\
    \ Gateway Service\n          TCP Host                                  OSI Host\n\
    \      +--------------+                        +------------------+\n      | \
    \ FTP Server  |                        |  FTAM Initiator  |\n      +--------------+\
    \                        +------------------+\n             |                \
    \                          |\n             |                                 \
    \         |\n             |                                          |\n     \
    \        |                                          |\n             |        \
    \    FTP-FTAM Gateway              |\n             |    +--------------------------------+\
    \    |\n             +--  |  FTP Client    FTAM Responder  |  --+\n          \
    \        +--------------------------------+\n             Figure 2  -  FTAM-Initiated\
    \ Gateway Service\n"
- title: 2. Gateway Architecture
  contents:
  - "2. Gateway Architecture\n   The gateway architecture, termed a protocol translator\
    \ [NIST86], is\n   depicted in Figure 3.  It implements TCP/IP and OSI protocol\
    \ stacks\n   with an application level process providing the link between the\
    \ two.\n   The link between FTP and FTAM is defined by two sets of protocol\n\
    \   mappings, one each for the FTP-Initiated and FTAM-Initiated service\n   sets.\n\
    \      +------------+                               +-------------+\n      | \
    \ FTP Host  |                               |  FTAM Host  |\n      +------------+\
    \                               +-------------+\n             |              \
    \                              |\n             |                             \
    \               |\n             |                                            |\n\
    \             |                                            |\n             | \
    \   +---------------------------------+     |\n             |    |          FTP\
    \  -  FTAM           |     |\n             |    |       Gateway Application  \
    \     |     |\n             |    |---------------------------------|     |\n \
    \            |    |      FTP       |      FTAM      |     |\n             |  \
    \  |----------------+----------------|     |\n             |    |    TCP/IP  \
    \    |    TP4/et al   |     |\n             |    +---------------------------------+\
    \     |\n             |           /|\\               /|\\            |\n     \
    \        |            |                 |             |\n             +------------+\
    \                 +-------------+\n                  Figure 3  -  Gateway Protocol\
    \ Stack\n   A fundamental aspect of this gateway architecture is that data is\n\
    \   mapped and transmitted immediately; i.e., no transferred file need\n   ever\
    \ reside on the gateway file system.  In the context of this\n   document, the\
    \ term \"filesystem\" refers to the file access and\n   maintenance mechanisms\
    \ provided by the operating system.  This lack\n   of gateway filesystem interaction\
    \ helps speed up the end-to-end data\n   transfer.  Another speed-enhancing feature\
    \ of this architecture is\n   that both the FTP and FTAM network connections can\
    \ operate\n   simultaneously.  Additional advantages include:\n        1. FTP\
    \ and FTAM hosts require no modification to utilize gateway\n           services.\n\
    \        2. Users require no knowledge of the other protocol.\n        3. Gateway\
    \ access control is not impaired (since users cannot\n           directly access\
    \ the gateway filesystem).\n        4. No additional filesystem space is required\
    \ on the gateway.\n        5. Interactive nature of protocols is preserved.\n\
    \        6. Users become aware of fatal errors immediately.\n   Disadvantages\
    \ of this design include the initial coding effort\n   required to develop the\
    \ gateway and the subsequent re-coding efforts\n   required to keep it current.\n"
- title: 3. Network Naming and Addressing
  contents:
  - "3. Network Naming and Addressing\n   The network naming and addressing schemes\
    \ used by FTP (Domain Names\n   (DN), IP Addresses) and FTAM (Distinguished Names,\
    \ Presentation\n   Addresses) are quite different.  This issue is quite apparent\
    \ when a\n   user of one protocol needs to identify a destination host of the\n\
    \   other protocol.\n   In the TCP/IP naming and addressing scheme, the identity\
    \ of the FTP\n   Server is its DN and its IP address [RFC1101].  To initiate a\n\
    \   connection to an FTP Server, the FTP Client looks up a DN in either\n   the\
    \ Domain Name System (DNS) or static host table and obtains an IP\n   address.\n\
    \   In the OSI naming and addressing scheme, the identity of the FTAM\n   Responder\
    \ service is its Distinguished Name in the OSI Directory\n   (X.500 or static\
    \ table) and its Presentation address.  The\n   Distinguished Name is an authoritative\
    \ description of the service.  A\n   Presentation address consists of a Presentation\
    \ selector, a session\n   selector, a transport selector, and a network address.\
    \  To initiate a\n   connection to an FTAM Responder, the FTAM Initiator contacts\
    \ the OSI\n   Directory, presents the Distinguished Name of the desired FTAM\n\
    \   Responder and asks for the Presentation address attribute associated\n   with\
    \ that name.\n   An alternative to the direct use of Distinguished Names is to\
    \ use\n   \"User Friendly Naming\", as defined in [Kille92].  Gateway support\
    \ for\n   \"User Friendly Naming\" is recommended, but not required.\n"
- title: 4. Use of the Gateway Services
  contents:
  - '4. Use of the Gateway Services

    '
- title: 4.1. FTP-Initiated Gateway Service
  contents:
  - "4.1. FTP-Initiated Gateway Service\n   The FTP Client uses the FTP-Initiated\
    \ gateway service to utilize the\n   resources of an FTAM Responder.\n   To initiate\
    \ a file transfer from an FTP Client, the Client connects\n   to the FTP-Initiated\
    \ gateway service via TCP/IP.  The gateway then\n   establishes a connection,\
    \ via OSI, to the FTAM Responder.  At this\n   point, the user can initiate file\
    \ transfer operations.\n   The FTP Client is responsible for providing the gateway\
    \ with an\n   authoritative Distinguished Name, or a User Friendly Name, of the\n\
    \   desired OSI filestore.  It is the responsibility of the gateway to\n   resolve\
    \ this Distinguished Name, or User Friendly Name, to its\n   corresponding Presentation\
    \ address.\n   The logon sequence taken by an FTP Client when initiating a file\n\
    \   transfer with an FTAM Responder is given below:\n             % ftp gateway\n\
    \             ftp> site Distinguished-Name-of-FTAM Responder\n             ftp>\
    \ user username\n             ftp> pass password\n   The \"ftp gateway\" command\
    \ initiates the connection between the FTP\n   Client and the gateway.  Once connected\
    \ to the gateway, the FTP\n   Client should identify the desired FTAM Responder\
    \ service via the\n   Responder's Distinguished Name, or User Friendly Name, which\
    \ is\n   resolved by an algorithm running on the Directory Services provider.\n\
    \   This information is sent via a \"site Distinguished-Name-of-FTAM\n   Responder\"\
    \ or \"site UFN-of-FTAM Responder\" command.\n   Upon receipt of a Distinguished\
    \ Name or a User Friendly Name, it is\n   the gateway's responsibility to resolve\
    \ it to the Presentation\n   Address associated with that name.  This resolution\
    \ is done by\n   contacting the OSI Directory (X.500 or local static table) and\n\
    \   presenting the Distinguished Name or User Friendly Name.  Once the\n   Presentation\
    \ address is obtained, the gateway can attempt a\n   connection with the ultimate\
    \ destination file transfer service\n   represented by this Presentation address.\n\
    \   The userid is passed via the \"user username\" command, and the\n   password\
    \ is passed via the \"pass password\".  If the FTAM Responder\n   requires a password,\
    \ a password prompt should appear after issuing\n   the \"user username\" command.\
    \  It is anticipated that stronger\n   authentication mechanisms will be required\
    \ for DoD gateways in the\n   future.\n   Using a specific example, suppose an\
    \ FTAM Responder has the following\n   Distinguished Name:\n           CountryName\
    \          =         \"US\"\n           Organization         =         \"Open\
    \ Networks\"\n           OrganizationalUnit   =         \"Network Services\"\n\
    \           CommonName           =         \"netwrx1\"\n           CommonName\
    \           =         \"FTAM service\"\n   and the FTP-FTAM gateway is available\
    \ at \"washdc1-osigw.navy.mil\".\n   The FTP user action will appear as:\n   \
    \        % ftp washdc1-osigw.navy.mil\n           ftp> site \"c=US@o=Open Networks@ou=Network\
    \ Services@cn=netwrx1\n                @cn=FTAM service\"\n           ftp> user\
    \ mindel\n           ftp> pass ***********\n   The \"ftp washdc1-osigw.navy.mil\"\
    \ command initiates the connection\n   between the FTP Client and the FTP-FTAM\
    \ gateway at the Washington\n   Navy Yard, Washington D.C.  Once connected, the\
    \ OSI filestore at Open\n   Networks is identified via its Distinguished Name,\
    \ \"@c=US@o=Open\n   Networks@ou=Network Services@cn=netwrx1@cn=FTAM service\"\
    .\n   Alternatively, a User Friendly Name, such as:\n           \"netwrx1, Open\
    \ Networks, us\"\n   can be specified, enabling the following FTP user action:\n\
    \           % ftp washdc1-osigw.navy.mil\n           ftp> site \"netwrx1, Open\
    \ Networks, us\"\n           ftp> user mindel\n           ftp> pass ***********\n\
    \   As this example indicates, use of an intermediate gateway is not\n   transparent.\
    \  To partially alleviate this awkwardness, the gateway\n   can be made more transparent\
    \ through the registration of the FTAM\n   host in the DNS using the address of\
    \ the gateway [RFC1279].\n   An example will clarify this point.  Suppose that\
    \ the \"netwrx1, Open\n   Networks, us\" FTAM host is registered in the TCP/IP\
    \ DNS with the DN\n   of \"ftam-service.netwrx1.com\" and the IP address of the\
    \ \"washdc1-\n   osigw.navy.mil\" gateway.  In this example, the following set\
    \ of user\n   actions is required:\n           % ftp ftam-service.netwrx1.com\n\
    \           ftp> user mindel\n           ftp> pass ***********\n   Since the \"\
    ftam-service.netwrx1.com\" really points to the gateway\n   address, the first\
    \ command will connect the FTP Client to the\n   gateway.  The gateway will then\
    \ use the name (using [RFC1279]) to\n   determine where the actual FTAM host is\
    \ resident.  Gateway support\n   for RFC1279 is recommended, but not required.\n"
- title: 4.2. FTAM-Initiated Gateway Service
  contents:
  - "4.2. FTAM-Initiated Gateway Service\n   The FTAM Initiator uses the FTAM-Initiated\
    \ gateway service to utilize\n   the resources of an FTP Server.\n   To initiate\
    \ a file transfer from an FTAM Initiator, the Initiator\n   connects to the FTAM-Initiated\
    \ gateway service via OSI.  The gateway\n   then establishes a connection, via\
    \ TCP/IP, to the FTP Server.  At\n   this point, the user can initiate file transfer\
    \ operations.\n   The FTAM Initiator is responsible for providing the gateway\
    \ with an\n   authoritative DN of the desired TCP/IP filestore.  It is the\n \
    \  responsibility of the gateway to resolve this DN to its corresponding\n   IP\
    \ address.\n   The logon sequence taken by an FTAM Initiator when initiating a\
    \ file\n   transfer with an FTP Server is given below:\n           % ftam gateway\n\
    \           ftam> user username@DNS-string\n           ftam> pass password\n \
    \  The \"ftam gateway\" command initiates the connection between the FTAM\n  \
    \ Initiator and the gateway.  Once connected, userid and TCP/IP\n   filestore\
    \ are identified in the \"username@DNS-string\" argument to the\n   user command.\
    \  If the FTP Server requires a password, a password\n   prompt should appear\
    \ after issuing the user command.\n   The gateway should incorporate the BIND\
    \ Resolver functionality so\n   that upon receipt of a Domain Name, the Gateway\
    \ FTP Client can\n   resolve it via the distributed Domain Name System.\n   Using\
    \ a specific example, suppose that a FTP Server has the following\n   Domain Name:\
    \  \"ftp-service.netwrx1.com\" and an FTP-FTAM gateway is\n   available at:\n\
    \           CountryName          =         \"US\"\n           Organization   \
    \      =         \"GOV\"\n           OrganizationalUnit   =         \"DOD\"\n\
    \           OrganizationalUnit   =         \"DISA\"\n           Locality     \
    \        =         \"Washington Navy Yard\"\n           CommonName           =\
    \         \"wnyosi7\"\n   The FTAM user action will appear as:\n           % ftam\
    \ @c=US@o=GOV@ou=DOD@ou=DISA@l=Washington Navy Yard\n                  @cn=wnyosi7\n\
    \           ftam> user mindel@ftp-service.netwrx1.com\n           ftam> pass ***********\n\
    \   Alternatively, a User Friendly Name could be used rather than the\n   Distinguished\
    \ Name.\n   As mentioned in the previous section, \"Use of the FTP-Initiated\n\
    \   Gateway Service\", use of an intermediate gateway is not transparent.\n  \
    \ The gateway can be made more transparent through the registration of\n   the\
    \ FTP host in the X.500 OSI Directory.  By querying the X.500 OSI\n   Directory,\
    \ the gateway can identify where the actual host is\n   resident.\n   For example,\
    \ suppose that the FTP Server in the previous example\n   (\"ftp-service.netwrx1.com\"\
    ) is registered in the X.500 Directory with\n   the following Distinguished Name:\n\
    \           CountryName          =         \"US\"\n           Organization   \
    \      =         \"Open Networks\"\n           OrganizationalUnit   =        \
    \ \"Network Services\"\n           CommonName           =         \"netwrx1\"\n\
    \           CommonName           =         \"FTP service\"\n   and the Presentation\
    \ Address of the FTP-FTAM gateway.  This approach,\n   described in [RFC1279],\
    \ would permit the following user interactions:\n           % ftam @c=US@o=Open\
    \ Networks@ou=Network Services\n                  @cn=netwrx1@cn=FTP Service\"\
    \n           ftam> user mindel\n           ftam> pass ***********\n"
- title: 4.3. Summary of Usage
  contents:
  - "4.3. Summary of Usage\n   As shown in the discussions of the FTP-Initiated and\
    \ FTAM-Initiated\n   Gateway Services, the gateway user does not have access to\
    \ the\n   gateway filesystem; he merely makes use of the gateway logon\n   procedure\
    \ to specify the ultimate destination userid and password.\n   Two methods of\
    \ interaction with the gateway were described.  In the\n   former, the user must:\n\
    \       1. Be aware that a gateway is required to reach the\n          destination\
    \ FTP or FTAM host.\n       2. Determine which gateway is most appropriate for\
    \ their\n          respective source-destination pair.\n       3. Explicitly connect\
    \ to the gateway host prior to connecting\n          to the destination host.\n\
    \   Needless to say, the exchange of files between FTP and FTAM hosts\n   requires\
    \ more effort than that required for the exchange of files\n   between a pair\
    \ of hosts utilizing the same file transfer protocol.\n   The latter, more transparent\
    \ method does not necessarily require that\n   the user determine which gateway\
    \ is most appropriate for their\n   respective source-destination pair.  In fact,\
    \ filestore service\n   providers are registered using the address of a predetermined\n\
    \   gateway.  With this approach, the user:\n       1. Must be aware that a gateway\
    \ is required to reach the\n          destination FTP or FTAM host.\n       2.\
    \ Need not determine which gateway is most appropriate to\n          access their\
    \ ultimate destination host.\n       3. Need not explicitly connect to the gateway\
    \ prior to\n          connecting to the destination FTP or FTAM host.\n"
- title: 5. Gateway State Variables and Transitions
  contents:
  - "5. Gateway State Variables and Transitions\n   As described, the FTP-FTAM gateway\
    \ provides two sets of services:\n   FTP-Initiated and FTAM-Initiated.  Each service\
    \ has its own mutually\n   exclusive set of state variables and transitions that\n\
    \   deterministically define the actions of the gateway.  Gateway support\n  \
    \ for these state variables and transitions is required.\n   For conciseness in\
    \ this discussion, FTP-Initiated will be abbreviated\n   with \"FTP-I\", and FTAM-Initiated\
    \ will be abbreviated with \"FTAM-I\".\n   Concerning error conditions, if a connection\
    \ is dropped when the\n   gateway is in any state other than FTP-I:Initial-State\
    \ or FTAM-\n   I:Initial-State, then the gateway will issue a fatal error message\
    \ to\n   the host with the remaining connection, and then drop that\n   connection.\
    \  If the remaining host is an FTP Client, then the gateway\n   will send an ABOR,\
    \ QUIT, and 426 reply code (Connection closed,\n   transfer aborted).  If it is\
    \ an FTAM Initiator, then the gateway will\n   send an F-P-ABORT with a <Diagnostic>\
    \ value with identifier 1011\n   (Lower layer failure), as well as any known <Further\
    \ Details>.\n   Other error conditions are not addressed in this discussion.\n"
- title: 5.1. FTP-Initiated Gateway Service
  contents:
  - "5.1. FTP-Initiated Gateway Service\n   The set of state variables for the FTP-Initiated\
    \ Gateway service\n   follow:\n  State Variable                State Definition\n\
    \  ----------------------------------------------------------------\n  FTP-I:Initial-State\
    \           Initial state of FTP-Initiated Gateway\n                         \
    \       service.\n                                Gateway is waiting for an FTP\
    \ Client to\n                                issue a USER command in order to\n\
    \                                proceed with connection establishment\n     \
    \                           with remote FTAM Responder.  If SITE or\n        \
    \                        ACCT commands are sent while waiting\n              \
    \                  for USER command, save arguments for\n                    \
    \            subsequent use.\n  FTP-I:Wait-for-PASS           Gateway has already\
    \ received USER\n                                command from FTP Client, as well\
    \ as\n                                userid and destination host DN.\n      \
    \                          Gateway is waiting for the FTAM\n                 \
    \               Responder logon password.\n  FTP-I:Wait-for-PAddress       Gateway\
    \ has already received PASS\n                                command from FTP\
    \ Client.  Gateway is\n                                resolving the provided\
    \ FTAM Responder's\n                                address to a Presentation\
    \ Address.  The\n                                provided address may be a Distinguished\n\
    \                                Name, User Friendly Name, or Domain\n       \
    \                         Name.  Resolution will typically be\n              \
    \                  done using X.500 directory services.\n  FTP-I:Wait-for-Connection\
    \     Gateway has initiated a connection to\n                                the\
    \ FTAM Responder and is waiting for\n                                notification\
    \ as to whether or not the\n                                logon is successful.\n\
    \  FTP-I:Wait-for-ClientCmd      Connection exists between FTP Client\n      \
    \                          and FTAM Responder.  Gateway is waiting\n         \
    \                       for next command or response from FTP\n              \
    \                  Client.  Commands and responses are\n                     \
    \           mapped as they are received.\n  FTP-I:Wait-for-RespondrCmd    Connection\
    \ exists between FTP Client\n                                and FTAM Responder.\
    \  Gateway is waiting\n                                for next command or response\
    \ from FTAM\n                                Responder.  Commands and responses\
    \ are\n                                mapped as they are received.\n   Each of\
    \ the possible state transitions is provided in the remainder\n   of Section 5.1.\
    \  For each state transition, the actions causing the\n   transition are listed.\n"
- title: 5.1.1. FTP-I:Initial-State   -->   FTP-I:Initial-State
  contents:
  - "5.1.1. FTP-I:Initial-State   -->   FTP-I:Initial-State\n        1. Gateway receives\
    \ SITE or ACCT command from FTP Client.\n           SITE argument includes Distinguish\
    \ Name of FTAM Responder.\n"
- title: 5.1.2. FTP-I:Initial-State   -->   FTP-I:Wait-for-PASS
  contents:
  - "5.1.2. FTP-I:Initial-State   -->   FTP-I:Wait-for-PASS\n        1. Gateway receives\
    \ USER command from FTP Client.  Arguments\n           include Distinguished Name\
    \ of FTAM Responder and userid on\n           FTAM responder.\n"
- title: 5.1.3. FTP-I:Wait-for-PASS   -->   FTP-I:Wait-for-PAddress
  contents:
  - "5.1.3. FTP-I:Wait-for-PASS   -->   FTP-I:Wait-for-PAddress\n        1. Gateway\
    \ receives PASS command from FTP Client.\n"
- title: 5.1.4. FTP-I:Wait-for-PAddress   -->   FTP-I:Wait-for-Connection
  contents:
  - "5.1.4. FTP-I:Wait-for-PAddress   -->   FTP-I:Wait-for-Connection\n        1.\
    \ Gateway resolves received Distinguished Name, User Friendly\n           Name,\
    \ or Domain Name of FTAM Responder to OSI Presentation\n           address.\n\
    \        2. Gateway sends F-INITIALIZE to FTAM Responder with\n           Presentation\
    \ Address in <Called Presentation Address>,\n           userid in <Initiator Identity>,\
    \ and password in <Filestore\n           Password>.\n"
- title: 5.1.5. FTP-I:Wait-for-Connection   -->   FTP-I:Wait-for-NextMapping
  contents:
  - "5.1.5. FTP-I:Wait-for-Connection   -->   FTP-I:Wait-for-NextMapping\n       \
    \ 1. Gateway receives <State Result> of \"Success\" .\n        2. Gateway sends\
    \ 230 reply code (User Logged In) to FTP\n           Client.\n"
- title: 5.1.6. FTP-I:Wait-for-ClientCmd   -->   FTP-I:Wait-for-RespondrCmd
  contents:
  - "5.1.6. FTP-I:Wait-for-ClientCmd   -->   FTP-I:Wait-for-RespondrCmd\n        1.\
    \ Gateway receives command or response from FTP Client and\n           maps it\
    \ to FTAM protocol, as defined in section 8.1.\n"
- title: 5.1.7. FTP-I:Wait-for-RespondrCmd   -->   FTP-I:Wait-for-ClientCmd
  contents:
  - "5.1.7. FTP-I:Wait-for-RespondrCmd   -->   FTP-I:Wait-for-ClientCmd\n        1.\
    \ Gateway receives command or response from FTAM Responder\n           and maps\
    \ it to FTP protocol, as defined in section 8.1.\n"
- title: 5.1.8. FTP-I:Wait-for-ClientCmd   -->   FTP-I:Wait-for-USER
  contents:
  - "5.1.8. FTP-I:Wait-for-ClientCmd   -->   FTP-I:Wait-for-USER\n        1. Gateway\
    \ receives QUIT command from FTP Client; maps QUIT as\n           per Section\
    \ 8.1.\n"
- title: 5.2. FTAM-Initiated Gateway Service
  contents:
  - "5.2. FTAM-Initiated Gateway Service\n   The set of state variables for the FTAM-Initiated\
    \ Gateway service\n   follow:\n  State Variable                State Definition\n\
    \  ----------------------------------------------------------------\n  FTAM-I:Initial-State\
    \          Initial state of FTAM-Initiated Gateway\n                         \
    \       Service.\n                                Gateway is waiting for an FTAM\n\
    \                                Initiator to issue an F-INITIALIZE\n        \
    \                        command in order to proceed with\n                  \
    \              connection establishment with remote\n                        \
    \        FTP Server.\n  FTAM-I:Wait-for-IPAddress     Gateway has already received\
    \ F-\n                                INITIALIZE from FTAM Initiator.\n      \
    \                          Gateway is resolving the provided FTP\n           \
    \                     Server's address to an IP address.  The\n              \
    \                  provided address may be a Domain Name,\n                  \
    \              Distinguished Name, or User Friendly\n                        \
    \        Name.\n  FTAM-I:Wait-for-Connection    Gateway has initiated a connection\
    \ to\n                                the FTP Server and is waiting for\n    \
    \                            notification as to whether or not the\n         \
    \                       logon is successful.\n  FTAM-I:Wait-for-InitiatrCmd  \
    \ Connection exists between FTAM\n                                Initiator and\
    \ FTP Server.  Gateway is\n                                waiting for next command\
    \ or response\n                                from FTAM Initiator.  Commands\
    \ and\n                                responses are mapped as they are\n    \
    \                            received.\n  FTP-I:Wait-for-ServerCmd      Connection\
    \ exists between FTAM\n                                Initiator and FTP Server.\
    \  Gateway is\n                                waiting for next command or response\n\
    \                                from FTP Server.  Commands and\n            \
    \                    responses are mapped as they are\n                      \
    \          received.\n   Each of the possible state transitions is provided in\
    \ the remainder\n   of Section 5.2.  For each state transition, the actions causing\
    \ the\n   transition are listed.\n"
- title: 5.2.1. FTAM-I:Initial-State   -->   FTAM-I:Wait-for-IPAddress
  contents:
  - "5.2.1. FTAM-I:Initial-State   -->   FTAM-I:Wait-for-IPAddress\n        1. Gateway\
    \ receives F-INITIALIZE from FTAM Initiator.  Domain\n           Name of FTP Server\
    \ is either in <Responding Presentation\n           Address> or in the \"@host\"\
    \ portion of the <Initiator\n           Identity> parameter.  The userid is in\
    \ <Initiator\n           Identity>, and password is in <Filestore Password>\n\
    \           parameter.\n"
- title: 5.2.2. FTAM-I:Wait-for-IPAddress   -->   FTAM-I:Wait-for-Connection
  contents:
  - "5.2.2. FTAM-I:Wait-for-IPAddress   -->   FTAM-I:Wait-for-Connection\n       \
    \ 1. Gateway resolves received Domain Name, Distinguished Name,\n           or\
    \ User Friendly Name of FTP Server to IP address.\n        2. Gateway sends USER\
    \ to FTP Server.\n        3. Gateway sends PASS to FTP Server.\n"
- title: 5.2.3. FTAM-I:Wait-for-Connection  -->   FTAM-I:Wait-for-NextMapping
  contents:
  - "5.2.3. FTAM-I:Wait-for-Connection  -->   FTAM-I:Wait-for-NextMapping\n      \
    \  1. Gateway receives 230 reply code (User Logged In) from FTP\n           Server.\n\
    \        2. Gateway sends <State Result> of \"Success\" to FTAM\n           Initiator.\n"
- title: 5.2.4  FTAM-I:Wait-for-InitiatrCmd   -->   FTAM-I:Wait-for-ServerCmd
  contents:
  - "5.2.4  FTAM-I:Wait-for-InitiatrCmd   -->   FTAM-I:Wait-for-ServerCmd\n      \
    \  1. Gateway receives command or response from FTAM Initiator\n           and\
    \ maps it to FTP protocol, as defined in section 8.2.\n"
- title: 5.2.5. FTAM-I:Wait-for-ServerCmd   -->   FTAM-I:Wait-for-InitiatrCmd
  contents:
  - "5.2.5. FTAM-I:Wait-for-ServerCmd   -->   FTAM-I:Wait-for-InitiatrCmd\n      \
    \  1. Gateway receives command or response from FTP Server and\n           maps\
    \ it to FTAM protocol, as defined in section 8.2.\n"
- title: 5.2.6. FTAM-I:Wait-for-InitiatrCmd  -->  FTAM-I:Wait-for-INITIALIZE
  contents:
  - "5.2.6. FTAM-I:Wait-for-InitiatrCmd  -->  FTAM-I:Wait-for-INITIALIZE\n       \
    \ 1. Gateway receives F-CLOSE primitive from FTAM Initiator;\n           maps\
    \ F-CLOSE as per Section 8.2.\n"
- title: 6. Document Type Support
  contents:
  - "6. Document Type Support\n   The set of FTAM document types supported by the\
    \ FTP-FTAM gateway is a\n   subset of the document types identified in the Stable\
    \ Implementation\n   Agreements for Open Systems Interconnection Protocols:  Part\
    \ 9 - FTAM\n   Phase 2, produced by the March 1992 Open Systems Environment\n\
    \   Implementors' Workshop [NIST92].  This subset was chosen for its\n   equivalence\
    \ to those document types supported by FTP.  The set\n   includes:\n         \
    \       FTAM-1    \"ISO FTAM Unstructured text file\n                FTAM-3  \
    \  \"ISO FTAM Unstructured binary file\n                NBS-9     \"NBS-9 FTAM\
    \ File directory file\"\n      FTAM document types map to FTP document types as\
    \ follows:\n                FTAM      <->       FTP\n                ----------------------------------\n\
    \                FTAM-1    <->       ASCII\n                FTAM-3    <->    \
    \   8 bit binary\n                NBS-9     <->       Directory\n   Gateway support\
    \ for FTAM-1 and FTAM-2 is required, whereas support\n   for NBS-9 is recommended.\n"
- title: 6.1. Notes on NBS-9
  contents:
  - "6.1. Notes on NBS-9\n   NBS-9 is optional in GOSIP versions 1 and 2 [NIST91].\
    \  NBS-9 will be\n   superseded by its replacement when ISO/IEC ISP 10607-2 and\
    \ ISO/IEC\n   ISP 10607-2/Amendment 1 are published [NIST92].\n   For conformance\
    \ to NBS-9, an FTAM Responder is only required to\n   return the <Filename> file\
    \ attribute, subject to local security and\n   access control.  All other requested\
    \ attributes need not be returned.\n   Systems supporting the NBS-9 document type\
    \ shall make available an\n   NBS-9 document called 'DIRLIS'.  This document can\
    \ be used to obtain\n   a listing of files and their associated attributes from\
    \ a remote\n   Filestore.\n"
- title: 7. Functional Comparison of FTP and FTAM
  contents:
  - "7. Functional Comparison of FTP and FTAM\n   A comprehensive comparison of the\
    \ services offered by FTP and FTAM is\n   beyond the scope of this specification.\
    \  What follows is an analysis\n   of several key points.  Refer to [NIST 86a]\
    \ and [ROSE90] for a more\n   complete discourse on this topic.\n   FTAM is not\
    \ a superset of FTP; each protocol has functions that only\n   it performs.  The\
    \ set of FTAM functions is, however, larger than the\n   set of FTP functions.\n\
    \   FTP combines file management and file transfer into one protocol\n   engine,\
    \ whereas FTAM separates management and transfer as they relate\n   to files.\n\
    \   The file transfer services of both FTP and FTAM expect a reliable\n   underlying\
    \ end-to-end service.  At a minimum, this service includes\n   the capability\
    \ to transfer entire files between remote hosts and to\n   display remote filenames.\n\
    \   In addition to this basic file transfer service, FTAM supports the\n   capability\
    \ to:  access a few records from a file server, create a\n   network file system\
    \ (similar to Sun's Network File System), handle\n   printing and spooling, and\
    \ access remote database records.  FTP does\n   not support these additional capabilities.\n\
    \   FTP uses TELNET services to set up a connection between the FTP\n   Client\
    \ and FTP Server.  A three-digit reply code followed by\n   explanatory text indicates\
    \ the status of the preceding request and\n   provides diagnostic information\
    \ explaining each transaction.\n   FTAM relies on the Association Control Service\
    \ Element (ACSE) to\n   start and stop the network for network file interaction.\
    \  Generally,\n   the ASCE establishes the application association and related\n\
    \   application context needed to support the FTAM protocol.\n   The FTAM protocol\
    \ is modularized so as to keep the allowable number\n   of actions in any particular\
    \ state relatively small.  There are many\n   more possible sequences of FTP operations\
    \ than possible sequences of\n   FTAM operations [NIST86].\n   Because FTAM is\
    \ more robust than FTP, FTAM allows greater flexibility\n   for conveying information\
    \ about files.  FTAM deals only with aspects\n   of application processes, and\
    \ leaves data representation and data\n   management facilities to other OSI service\
    \ elements.\n   In contrast to the Client/Server model present in the FTP scheme,\n\
    \   FTAM is based on the Initiator/Responder model.  The key distinction\n   is\
    \ that once the FTAM Initiator has established a connection with a\n   remote\
    \ host, either the Initiator or Responder can request services\n   of the other.\
    \  In the FTP realm, the Client both initiates a\n   connection and requests all\
    \ services.\n   The FTP Client knows the real properties of the remote host\n\
    \   filesystem.  FTAM, in contrast, embraces a conceptual model of a\n   filesystem,\
    \ labeled a virtual filestore model.  The virtual filestore\n   is a collection\
    \ of files, each of which has a name that uniquely\n   identifies it.  Each file\
    \ has a set of attributes, such as ownership\n   information and contents, which\
    \ is the data associated with the file.\n   One file attribute is the <Contents\
    \ Type> of the file, typically of\n   value \"FTAM-1\", \"FTAM-3\", or \"NBS-9\"\
    .  The FTAM Initiator only knows\n   the properties of the corresponding Responder\
    \ and virtual filestore,\n   not the real properties of the filesystem on the\
    \ remote host.\n"
- title: 7.1. Loss of Functionality
  contents:
  - "7.1. Loss of Functionality\n   As happens whenever two dissimilar protocols,\
    \ or languages for that\n   matter, are translated, some loss of functionality\
    \ is inevitable.\n   With reference to the FTP-FTAM gateway, several of the most\
    \ blatant\n   losses of functionality are:\n        1. Diagnostics passed between\
    \ protocols may not be precisely\n           translated.\n        2. The FTAM\
    \ partial file (record) transfer may not be\n           supported.\n        3.\
    \ Some FTAM attributes are not supported by FTP.\n   The primary goal of the gateway\
    \ protocol mappings are to minimize\n   this loss of functionality. As this gateway\
    \ specification and\n   subsequent implementations evolve, means to partially\
    \ overcome loss\n   of functionality may become more obvious.  For example, the\
    \ gateway\n   may be able to emulate file record transfers between FTAM Initiators\n\
    \   and FTP Servers.\n"
- title: 8. Mapping of Protocol Functions and Representations
  contents:
  - "8. Mapping of Protocol Functions and Representations\n   The mappings presented\
    \ are based upon the FTAM protocol\n   implementation as defined in Stable Implementation\
    \ Agreements for\n   Open Systems Interconnection Protocols:  Part 9 - FTAM Phase\
    \ 2,\n   produced by the March 1992 Open Systems Environment Implementors'\n \
    \  Workshop [NIST92], and in [ISO8571-1], [ISO8571-2],[ISO8571-\n   3],[ISO8571-4],\
    \ and [ISO8571-5].  The FTP protocol as defined in\n   Request for Comments [RFC959].\
    \   The mappings are strongly influenced\n   by the work of M. A. Wallace et.\
    \ al. at NIST [NIST86] and John Scott\n   at MITRE [MITRE87].\n   A key goal of\
    \ the mappings presented in this document is to minimize\n   the loss of functionality\
    \ between the two protocols.  The specific\n   approach taken to implement the\
    \ mappings is left to the discretion of\n   the gateway implementor.  The focus\
    \ of the protocol function and\n   representation mappings is on non-error encumbered\
    \ processing.  The\n   mapping of diagnostic and error messages is treated separately\
    \ in\n   section 9.\n   At a minimum, the FTAM implementation in the FTP-FTAM\
    \ gateway support\n   for Implementation Profiles T1 (Simple File Transfer) and\
    \ M1\n   (Management), as defined in [NIST92], is required.  These\n   Implementation\
    \ Profiles correspond to the A/111 and A/13 Profiles of\n   Standards Promotion\
    \ and Application Group in Europe, respectively\n   [NIST92].\n   At a minimum,\
    \ the gateway support for the following is required:\n      ASCII and 8 bit binary\
    \ file types.  It should also support FTP\n      File Stream Mode.\n      The\
    \ following FTAM document types: FTAM-1 (unstructured text\n      file), FTAM-3\
    \ (unstructured binary file), and NBS-9 (set of\n      directory entries).\n \
    \  POSIX file naming and organization conventions are assumed in these\n   mappings;\
    \ i.e., files in the systems are assumed to be organized in a\n   hierarchical\
    \ structure in which all of the non-terminal nodes are\n   directories and all\
    \ of the terminal nodes are any other type of file.\n   The following terminology\
    \ is used in the mapping specifications:\n      argument .......FTP Service Command\
    \ argument, as used in [RFC959].\n      parameter ......FTAM Service Primitive\
    \ parameters and attributes,\n                      as enumerated in Tables 6,\
    \ 50, and 51 of [ISO8571-\n                      3].\n   The following notation\
    \ is used in the mapping specifications:\n      Arguments and parameters are enclosed\
    \ in angle brackets; e.g.,\n      <Action Result>\n      Values of arguments and\
    \ parameters are enclosed in quotation\n      marks; e.g., \"Success\"\n     \
    \ FTP Service Commands and FTAM Primitives are in uppercase; e.g., F-\n      INITIALIZE\n"
- title: 8.1.  FTP-Initiated Gateway Service
  contents:
  - "8.1.  FTP-Initiated Gateway Service\n   The protocol mapping between FTP and\
    \ FTAM may be one-to-zero (i.e.,\n   not mappable), one-to-one, or one-to-many.\n\
    \   The general steps taken by the FTP-FTAM gateway to provide the FTP-\n   Initiated\
    \ service are:\n        1. Accept an FTP Client request at the FTP Server side\
    \ of the\n           gateway service.\n        2. Map the request to the (set\
    \ of) corresponding FTAM\n           Initiator function(s).\n        3. Acting\
    \ as an FTAM Initiator, send the FTAM Initiator\n           function(s) to the\
    \ FTAM Responder.\n        4. Accept information returned to the FTAM Initiator\
    \ side of\n           the gateway.  This information originated at the FTAM\n\
    \           Responder.\n        5. Map this returned information to the protocol\
    \ form\n           understood by the FTP Server side of the gateway.\n       \
    \ 6. Send this returned information from the FTP Server side of\n           the\
    \ gateway to the FTP Client.\n   For each FTP protocol function, the FTAM protocol\
    \ functions required\n   to map it are identified:\n   FTP       FTAM\n   ------------------------------------------------------------------\n\
    \   ABOR      F-BEGIN-GROUP, F-CANCEL, F-CLOSE, F-DESELECT, F-END-GROUP\n   ACCT\
    \      F-INITIALIZE,\n   ALLO      none\n   APPE      F-BEGIN-GROUP, F-CLOSE,\
    \ F-CREATE, F-DATA, F-DATA-END, F-\n             DESELECT, F-END-GROUP, F-OPEN,\
    \ F-READ-ATTRIBUTES, F-SELECT,\n             F-TRANSFER-END, F-WRITE\n   CDUP\
    \      F-BEGIN-GROUP, F-DESELECT, F-END-GROUP, F-SELECT\n   CWD       F-BEGIN-GROUP,\
    \ F-END-GROUP, F-DESELECT, F-SELECT\n   DELE      F-BEGIN-GROUP, F-DELETE, F-END-GROUP,\
    \ F-SELECT\n   HELP      none\n   LIST      F-BEGIN-GROUP, F-CLOSE, F-DATA, F-DATA-END,\
    \ F-DESELECT, F-\n             END-GROUP, F-OPEN, F-READ, F-READ-ATTRIBUTES, F-SELECT,\
    \ F-\n             TRANSFER-END\n   MKD       none\n   MODE      none\n   NLST\
    \      F-BEGIN-GROUP, F-CLOSE, F-DATA, F-DATA-END, F-DESELECT, F-\n          \
    \   END-GROUP, F-OPEN, F-READ, F-SELECT, F-TRANSFER-END\n   NOOP      none\n \
    \  PASS      F-INITIALIZE\n   PASV      none\n   PORT      none\n   PWD      \
    \ F-BEGIN-GROUP, F-DESELECT, F-END-GROUP, F-READ-ATTRIBUTES,\n             F-SELECT\n\
    \   QUIT      F-P-ABORT or F-U-ABORT, F-TERMINATE\n   REIN      F-BEGIN-GROUP,\
    \ F-CANCEL, F-CLOSE, F-DESELECT, F-END-GROUP\n   REST      F-CHECK, F-RESTART\n\
    \   RETR      F-BEGIN-GROUP, F-CLOSE, F-DATA, F-DATA-END, F-DESELECT, F-\n   \
    \          END-GROUP, F-OPEN, F-READ, F-SELECT, F-TRANSFER-END\n   RMD       none\n\
    \   RNFR      F-BEGIN-GROUP, F-DESELECT, F-END-GROUP, F-SELECT\n   RNTO      F-BEGIN-GROUP,\
    \ F-CHANGE-ATTRIBUTES, F-DESELECT, F-END-\n             GROUP, F-SELECT\n   SITE\
    \      F-INITIALIZE\n   SMNT      none\n   STAT      none\n   STOR      F-BEGIN-GROUP,F-CLOSE,\
    \ F-CREATE, F-DATA, F-DATA-END, F-\n             DESELECT, F-END-GROUP, F-OPEN,\
    \ F-READ-ATTRIBUTES, F-SELECT,\n             F-TRANSFER-END, F-WRITE\n   STOU\
    \      F-BEGIN-GROUP, F-CLOSE, F-CREATE, F-DATA, F-DATA-END, F-\n            \
    \ DESELECT, F-END-GROUP, F-OPEN, F-READ-ATTRIBUTES, F-SELECT,\n             F-TRANSFER-END,\
    \ F-WRITE\n   STRU      none\n   TYPE      none\n   USER      F-INITIALIZE\n \
    \  The remainder of this section presents detailed mapping procedures\n   for\
    \ each of the FTP protocol functions.  Gateway support for these\n   mappings\
    \ is required.\n"
- title: 8.1.1. ABOR
  contents:
  - "8.1.1. ABOR\n        1. Send F-CANCEL to FTAM Responder.\n        2. Send the\
    \ following grouped request to the FTAM Responder.\n           F-BEGIN-GROUP\n\
    \           F-CLOSE\n           F-DESELECT\n           F-END-GROUP\n        3.\
    \ Translate FTAM Responder <Action Result> and <Diagnostic>\n           parameters\
    \ to equivalent FTP reply code(s) and send reply\n           codes to FTP Client.\n\
    \        4. Translate FTP Client reply codes to equivalent FTAM <Action\n    \
    \       Result> and <Diagnostic> parameters and send parameters to\n         \
    \  FTAM Responder.\n"
- title: 8.1.2. ACCT
  contents:
  - "8.1.2. ACCT\n        1. Set <Account> parameter value for issuing F-INITIALIZE\
    \ to\n           FTAM Responder.\n        2. If <Called Presentation Address>,\
    \ <Initiator Identity>, and\n           <Filestore Password> parameters are available,\
    \ attempt\n           connection with FTAM Responder;\n           Otherwise wait\
    \ for additional ACCT commands.\n        3. Translate FTAM Responder <Action Result>\
    \ and <Diagnostic>\n           parameters to equivalent FTP reply code(s) and\
    \ send reply\n           codes to FTP Client.\n        4. Translate FTP Client\
    \ reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. The ACCT command will be effective with the next PASS\n          \
    \ command.\n"
- title: 8.1.3. ALLO
  contents:
  - "8.1.3. ALLO\n        1. Return a 200 reply code to FTP Client.\n"
- title: 8.1.4. APPE
  contents:
  - "8.1.4. APPE\n        1. Save current pathname by appending saved CWD string with\n\
    \           <pathname> argument.  If no saved CWD string, proceed to\n       \
    \    step 12.\n        2. Send the following grouped request to FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-READ-ATTRIBUTES\n\
    \                Save <Contents Type> parameter value\n            F-DESELECT\n\
    \            F-END-GROUP\n        3. If the <Contents Type> parameter value returned\
    \ with the\n           F-READ-ATTRIBUTES has a value of \"NBS-9\", proceed to\
    \ step\n           12.\n        4. Send the following grouped request to the FTAM\
    \ responder.\n            F-BEGIN-GROUP\n            F-CREATE\n              \
    \  Set the <Override> parameter in the F-CREATE to\n                \"Select Old\
    \ File\".\n            F-OPEN\n            F-END-GROUP\n        5. If the file\
    \ existed, set the <Contents Type> parameter in\n           the F-CREATE to match\
    \ that returned by the\n           F-READ-ATTRIBUTES.\n        6. If the file\
    \ did not exist and no previous FTP TYPE \"Image\"\n           command was issued,\
    \ then set the <Contents Type> parameter\n           to \"FTAM-1\";\n        \
    \   Otherwise, set the <Contents Type> parameter to \"FTAM-3\".\n        7. Send\
    \ F-WRITE, with <Bulk Data Transfer Specification, FADU\n           Operation>\
    \ parameter set to \"File Extend\", to FTAM\n           Responder.\n        8.\
    \ Loop reading data from FTP data connection, sending the\n           data in\
    \ F-DATA PDUs until end-of-file on the FTP\n           connection.\n        9.\
    \ Send F-DATA-END to FTAM Responder.\n        10. Send F-TRANSFER-END to FTAM\
    \ Responder.\n        11. Send the following grouped request to the FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-CLOSE\n            F-DESELECT\n    \
    \        F-END-GROUP\n        12. Translate FTAM Responder <Action Result> and\
    \ <Diagnostic>\n            parameters to equivalent FTP reply code(s) and send\
    \ reply\n            code(s) to FTP Client.\n        13. Translate FTP Client\
    \ reply codes to equivalent FTAM\n            <Action Result> and <Diagnostic>\
    \ parameters and send\n            parameters to FTAM Responder.\n        Note:\n\
    \        a. <pathname> argument is assumed to be a filename, relative\n      \
    \     to the currently saved CWD.\n        b. CWD of the FTAM system must be defined\
    \ prior to issuance of\n           APPE.\n"
- title: 8.1.5. CDUP
  contents:
  - "8.1.5. CDUP\n        1. Determine parent directory from saved CWD string.  If\
    \ no\n           saved CWD string, proceed to step 4.\n        2. Set <Contents\
    \ Type> parameter to \"NBS-9\".\n        3. Send the following grouped request\
    \ to FTAM Responder.\n           F-BEGIN-GROUP\n           F-SELECT\n        \
    \   F-DESELECT\n           F-END-GROUP\n        4. Translate FTAM Responder <Action\
    \ Result> and <Diagnostic>\n           parameters to equivalent FTP reply code(s)\
    \ and send reply\n           code(s) to FTP Client.\n        5. Translate FTP\
    \ Client reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. A POSIX file organization is assumed; i.e., files in the\n       \
    \    systems are organized in a hierarchical structure in which\n           all\
    \ of the non-terminal nodes are directories and all of\n           the terminal\
    \ nodes are any other type of file.\n        b. If the parent directory does not\
    \ exist, the current working\n           directory remains unchanged.\n      \
    \  c. CWD of the FTAM system must be defined prior to issuance of\n          \
    \ CDUP.\n"
- title: 8.1.6. CWD
  contents:
  - "8.1.6. CWD\n        1. Save <pathname> argument as CWD string.\n        2. Set\
    \ <Contents Type> parameter to \"NBS-9\".\n        3. Send the following grouped\
    \ request to FTAM Responder.\n            F-BEGIN-GROUP\n            F-SELECT\n\
    \            F-DESELECT\n            F-END-GROUP\n        4. Translate FTAM Responder\
    \ <Action Result> and <Diagnostic>\n           parameters to equivalent FTP reply\
    \ code(s) and send reply\n           code(s) to FTP Client.\n        5. Translate\
    \ FTP Client reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. The <pathname> argument is assumed to be an absolute\n           directory\
    \ specification.\n        b. If the specified directory does not exist, the current\n\
    \           working directory remains unchanged.\n        c. Saved CWD string\
    \ is used in other FTP-to-FTAM mappings,\n           such as APPE.\n"
- title: 8.1.7. DELE
  contents:
  - "8.1.7. DELE\n        1. Save current pathname by appending saved CWD string with\n\
    \           <pathname> argument.  If no saved CWD string, proceed to\n       \
    \    step 3.\n        2. Send the following grouped request to FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-DELETE\n     \
    \       F-END-GROUP\n        3. Translate FTAM Responder <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply code(s) and send reply\n      \
    \     code(s) to FTP Client.\n        4. Translate FTP Client reply codes to equivalent\
    \ FTAM\n           parameters and send parameters to FTAM Responder.\n       \
    \ Note:\n        a. <pathname> argument is assumed to be a filename, relative\n\
    \           to the currently saved CWD.\n        b. CWD of the FTAM system must\
    \ be defined prior to issuance of\n           DELE.\n"
- title: 8.1.8. HELP
  contents:
  - "8.1.8. HELP\n        1. If no <string> argument is provided, send helpful\n \
    \          information about the implementation of the gateway to the\n      \
    \     FTP Client.  If an argument is provided, send more specific\n          \
    \ information.\n        2. Return the FTP reply code 214 to the FTP Client.\n"
- title: 8.1.9. LIST
  contents:
  - "8.1.9. LIST\n        1. If <pathname> argument is provided, proceed to step 3.\n\
    \        2. Save current pathname by appending saved CWD string with\n       \
    \    <pathname> argument; If no saved CWD string, proceed to\n           step\
    \ 11.\n        3. Send the following grouped request to the FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-READ-ATTRIBUTES\n\
    \                Save <Filename>, <Contents Type>, <Data/Time of Last\n      \
    \     Modification>, and <Filesize> parameters\n            F-DESELECT\n     \
    \       F-END-GROUP\n        4. If the <Contents Type> parameter of the F-READ-ATTRIBUTES\n\
    \           is not \"NBS-9\", then return the <Filename>, <Contents\n        \
    \   Type>, <Date/Time of Last Modification>, and <Filesize>\n           parameter\
    \ values, obtained with the previous\n           F-READ-ATTRIBUTES, to the FTP\
    \ data connection;\n           and proceed to step 8.\n        5. Send the following\
    \ grouped request to the FTAM Responder.\n            F-BEGIN-GROUP\n        \
    \    F-SELECT\n            F-OPEN\n            F-END-GROUP\n        6. Send F-READ\
    \ to FTAM Responder.\n        7. Loop reading F-DATA until F-DATA-END.  As data\
    \ is received,\n           write the <Filename>, <Permitted Actions>, <Contents\
    \ Type>,\n           and <Date/Time of Last Modification> parameter values from\n\
    \           the PDU to the FTP data connection.\n        8. Send F-TRANSFER-END\
    \ to FTAM Responder.\n        9. Send the following grouped request to the FTAM\
    \ responder.\n            F-BEGIN-GROUP\n            F-CLOSE\n            F-DESELECT\n\
    \            F-END-GROUP\n        10. Translate FTAM Responder <Action Result>\
    \ and <Diagnostic>\n           parameters to equivalent FTP reply code(s) and\
    \ send reply\n           code(s) to FTP Client.\n        11. Translate FTP Client\
    \ reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. Assume the <pathname> argument is relative to the saved\n        \
    \   CWD, whether filename or directory specification.\n        b. CWD of the FTAM\
    \ system must be defined prior to issuance of\n           LIST.\n        c. Transfers\
    \ over data connection should be in ASCII.\n        e. If list of files with full\
    \ directory/file specification is\n           received from FTAM Responder, then\
    \ gateway should parse\n           list to strip off directory portion.\n"
- title: 8.1.10. MKD
  contents:
  - "8.1.10. MKD\n        1. Return a 502 reply code (Command not implemented) to\
    \ the\n           FTP Client.\n        Note:\n        a. As indicated in the NIST\
    \ Stable Implementation Agreements\n           for FTAM [NIST92], creation or\
    \ deletion of NBS-9 files is\n           outside the scope of the agreements.\n"
- title: 8.1.11. MODE
  contents:
  - "8.1.11. MODE\n        1. If <argument> is \"Stream\", return 200 reply code to\
    \ FTP\n           Client; Otherwise return a 504 reply code (Command not\n   \
    \        implemented for that parameter).\n"
- title: 8.1.12. NLST
  contents:
  - "8.1.12. NLST\n        1. If <pathname> argument is provided, use <pathname> argument\n\
    \           as <Filename> parameter value in F-SELECT issued in step 3.\n    \
    \    2. If no argument is provided, use saved CWD value as\n           <Filename>\
    \ parameter value in F-SELECT issued in step 3; If\n           no CWD string is\
    \ saved and no argument is provided, proceed\n           to step 9.\n        3.\
    \ Set <Contents Type> parameter to \"NBS-9\".\n        4. Send the following grouped\
    \ request to the FTAM Responder.\n            F-BEGIN-GROUP\n            F-SELECT\n\
    \            F-OPEN\n            F-END-GROUP\n        5. Send F-READ to FTAM Responder.\n\
    \        6. Loop reading F-DATA until F-DATA-END.  As data is received,\n    \
    \       write the filenames and other useful information from the\n          \
    \ PDU to the FTP data connection.\n        7. Send F-TRANSFER-END to FTAM Responder.\n\
    \        8. Send the following grouped request to the FTAM responder.\n      \
    \      F-BEGIN-GROUP\n            F-CLOSE\n            F-DESELECT\n          \
    \  F-END-GROUP\n        9. Translate FTAM Responder <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply code(s) and send reply\n      \
    \     code(s) to FTP Client.\n        10. Translate FTP Client reply codes to\
    \ equivalent FTAM <Action\n           Result> and <Diagnostic> parameters and\
    \ send parameters to\n           FTAM Responder.\n        Note:\n        a. As\
    \ per RFC 959 (FTP), the NLST <pathname> argument is a\n           directory.\n\
    \        b. Assume the argument is relative to the saved CWD, whether\n      \
    \     filename or directory specification.\n        c. CWD of the FTAM system\
    \ must be defined prior to issuance of\n           NLST.\n        d. Transfers\
    \ over data connection should be in ASCII.\n        e. Gateway should parse full\
    \ directory/file specifications\n           received from FTAM Responder to strip\
    \ off directory\n           portion.  This is required to support the \"FTP multiple\n\
    \           get\" function that pipes NLST output to the STOR command.\n"
- title: 8.1.13. NOOP
  contents:
  - "8.1.13. NOOP\n        1. Return a 200 reply code to FTP Client.\n"
- title: 8.1.14. PASS
  contents:
  - "8.1.14. PASS\n        1. Set <Filestore Password> parameter for F-INITIALIZE.\n\
    \        2. If <Called Presentation Address>, <User Identity>, and\n         \
    \  <Filestore Password> are available, issue F- INITIALIZE to\n           FTAM\
    \ Responder.\n        3. Translate FTAM Responder <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply code(s) and send reply\n      \
    \     code(s) to FTP Client.\n        4. Translate FTP Client reply codes to equivalent\
    \ FTAM <Action\n           Result> and <Diagnostic> parameters and send parameters\
    \ to\n           FTAM Responder.\n"
- title: 8.1.15. PASV
  contents:
  - "8.1.15. PASV\n        1. Wait for data transfer on default data port or data\
    \ port\n           specified by PORT command.\n        2. Return a 200 reply code\
    \ to FTP Client.\n"
- title: 8.1.16. PORT
  contents:
  - "8.1.16. PORT\n        1. Return a 200 reply code to FTP Client.\n"
- title: 8.1.17. PWD
  contents:
  - "8.1.17. PWD\n        1. If there is a saved CWD string, return it to the FTP\
    \ client\n           and proceed to step 4.\n        2. Set <Contents Type> attribute\
    \ to \"NBS-9\".\n        3. Send the following grouped request to FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-READ-ATTRIBUTES\n\
    \            F-DESELECT\n            F-END-GROUP\n        4. Return the current\
    \ directory name to the FTP client.\n        5. Translate FTAM Responder <Action\
    \ Result> and <Diagnostic>\n           parameters to equivalent FTP reply code(s)\
    \ and send reply\n           code(s) to FTP Client.\n        6. Translate FTP\
    \ Client reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n"
- title: 8.1.18. QUIT
  contents:
  - "8.1.18. QUIT\n        1. If user is not logged in, proceed to step 5.\n     \
    \   2. If file transfer is in progress, send F-P-ABORT or\n           F-U-ABORT\
    \ to FTAM Responder.\n        3. If file transfer is not in progress, send and\
    \ F-TERMINATE\n           to FTAM Responder.\n        4. Return charge information\
    \ to FTP Client.\n        5. Translate FTAM Responder <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply code(s) and send reply\n      \
    \     code(s) to FTP Client.\n        6. Translate FTP Client reply codes to equivalent\
    \ FTAM <Action\n           Result> and <Diagnostic> parameters and send parameters\
    \ to\n           FTAM Responder.\n"
- title: 8.1.19. REIN
  contents:
  - "8.1.19. REIN\n        1. Flush all I/O and account information.\n        2. Allow\
    \ all transfers in progress to be completed.\n        3. Set all parameters to\
    \ default values.\n        4. Send F-CANCEL to FTAM Responder.\n        5. Send\
    \ the following grouped request to FTAM Responder.\n            F-BEGIN-GROUP\n\
    \            F-CLOSE\n            F-DESELECT\n            F-END-GROUP\n      \
    \  6. Leave the control connection open.\n        7. Translate FTAM Responder\
    \ <Action Result> and <Diagnostic>\n           parameters to equivalent FTP reply\
    \ code(s) and send reply\n           code(s) to FTP Client.\n        8. Translate\
    \ FTP Client reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. Typically followed by a USER command.\n"
- title: 8.1.20. REST
  contents:
  - "8.1.20. REST\n        1. Send F-CHECK to FTAM Responder.\n        2. Send F-RESTART\
    \ to FTAM Responder.\n        3. Translate FTAM Responder <Action Result> and\
    \ <Diagnostic>\n           parameters to equivalent FTP reply code(s) and send\
    \ reply\n           code(s) to FTP Client.\n        4. Translate FTP Client reply\
    \ codes to equivalent FTAM <Action\n           Result> and <Diagnostic> parameters\
    \ and send parameters to\n           FTAM Responder.\n        Notes:\n       \
    \ a. Will only have affect on FTAM Responder if the restart\n           functional\
    \ unit is negotiated on F-INITIALIZE.\n        b. Refer to ISO 8571-3 for additional\
    \ subtleties of FTAM\n           checkpoint and restart.\n"
- title: 8.1.21. RETR
  contents:
  - "8.1.21. RETR\n        1. Save current pathname by appending saved CWD string\
    \ with\n           <pathname> argument.  If no saved CWD string, proceed to\n\
    \           step 9.\n        2. Set <Contents Type> parameter to appropriate type\
    \ of file.\n        3. Send the following grouped request to the FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-OPEN\n       \
    \     F-END-GROUP\n        4. If file does not exist, proceed to step 9.\n   \
    \     5. Send F-READ to FTAM Responder.\n        6. Loop reading F-DATA until\
    \ F-DATA-END.  As data is received,\n           write it to the FTP data connection.\n\
    \        7. Send F-TRANSFER-END to FTAM Responder.\n        8. Send the following\
    \ grouped request to the FTAM Responder.\n            F-BEGIN-GROUP\n        \
    \    F-CLOSE\n            F-DESELECT\n            F-END-GROUP\n        9. Translate\
    \ FTAM Responder <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply code(s) and send reply\n           code(s) to FTP Client.\n      \
    \  10. Translate FTP Client reply codes to equivalent FTAM <Action\n         \
    \   Result> and <Diagnostic> parameters and send parameters to\n            FTAM\
    \ Responder.\n        Note:\n        a. <pathname> argument is assumed to be a\
    \ filename, relative\n           to the currently saved CWD.\n        b. CWD of\
    \ the FTAM system must be defined prior to issuance of\n           RETR.\n"
- title: 8.1.22. RMD
  contents:
  - "8.1.22. RMD\n        1. Return a 502 reply code (Command not implemented) to\
    \ the\n           FTP Client.\n        Note:\n        a. As indicated in the NIST\
    \ Stable Implementation Agreements\n           for FTAM [NIST92], creation or\
    \ deletion of NBS-9 files is\n           outside the scope of the agreements.\n"
- title: 8.1.23. RNFR
  contents:
  - "8.1.23. RNFR\n        1. Save current pathname by appending saved CWD string\
    \ with\n           <pathname> argument.  If no saved CWD string, proceed to\n\
    \           step 3.\n        2. Send the following grouped request to the FTAM\
    \ Responder.\n            F-BEGIN-GROUP\n            F-SELECT\n              \
    \  Get <Filename> parameter value from RNFR <pathname>\n           argument.\n\
    \            F-DESELECT\n            F-END-GROUP\n        3. Translate FTAM Responder\
    \ <Action Result> and <Diagnostic>\n           parameters to equivalent FTP reply\
    \ code(s) and send reply\n           code(s) to FTP Client.\n        4. Translate\
    \ FTP Client reply codes to equivalent FTAM <Action\n           Result> and <Diagnostic>\
    \ parameters and send parameters to\n           FTAM Responder.\n        Note:\n\
    \        a. <pathname> argument is assumed to be a filename, relative\n      \
    \     to the currently saved CWD.\n        b. Together with RNTO, this command\
    \ causes a file to be\n           renamed.\n        c. CWD of the FTAM system\
    \ must be defined prior to issuance of\n           RNFR.\n"
- title: 8.1.24. RNTO
  contents:
  - "8.1.24. RNTO\n        1. Save current pathname by appending saved CWD string\
    \ with\n           <pathname> argument.  If no saved CWD string, proceed to\n\
    \           step 3.\n        2. Send the following grouped request to the FTAM\
    \ Responder.\n            F-BEGIN-GROUP\n            F-SELECT\n            F-CHANGE-ATTRIBUTES\n\
    \                Get <Filename> parameter from arguments provided by\n       \
    \         RNTO and previous RNFR.\n            F-DESELECT\n            F-END-GROUP\n\
    \        3. Translate FTAM Responder <Action Result> and <Diagnostic>\n      \
    \     parameters to equivalent FTP reply code(s) and send reply\n           code(s)\
    \ to FTP Client.\n        4. Translate FTP Client reply codes to equivalent FTAM\
    \ <Action\n           Result> and <Diagnostic> parameters and send parameters\
    \ to\n           FTAM Responder.\n        Note:\n        a. <pathname> argument\
    \ is assumed to be a filename, relative\n           to the currently saved CWD.\n\
    \        b. Together with RNFR, this command causes a file to be\n           renamed.\n\
    \        c. CWD of the FTAM system must be defined prior to issuance of\n    \
    \       RNTO.\n"
- title: 8.1.25. SITE
  contents:
  - "8.1.25. SITE\n        1. Save the specified destination address information.\n\
    \        2. Set the <Called Presentation Address> parameter value equal\n    \
    \       to the <string> argument.  This parameter will be used when\n        \
    \   the F-INITIALIZE is sent to the FTAM Responder.\n        3. Translate FTAM\
    \ Responder <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply code(s) and send reply\n           code(s) to FTP Client.\n      \
    \  4. Translate FTP Client reply codes to equivalent FTAM <Action\n          \
    \ Result> and <Diagnostic> parameters and send parameters to\n           FTAM\
    \ Responder.\n        Note:\n        a. The <string> argument to the SITE command\
    \ may include a\n           Distinguished Name or a User Friendly Name.\n"
- title: 8.1.26. SMNT
  contents:
  - "8.1.26. SMNT\n        1. Return a 502 reply code to FTP Client.\n        Note:\n\
    \        a. Argument is ignored.\n"
- title: 8.1.27. STAT
  contents:
  - "8.1.27. STAT\n        1. Provide the gateway session status to the FTP Client.\n\
    \        2. Return a 211 reply code to FTP Client.\n        Note:\n        a.\
    \ Argument is ignored.\n"
- title: 8.1.28. STOR
  contents:
  - "8.1.28. STOR\n        1. Save current pathname by appending saved CWD string\
    \ with\n           <pathname> argument.  If no saved CWD string, proceed to\n\
    \           step 11.\n        2. Send the following grouped request to FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-READ-ATTRIBUTES\n\
    \                Save <Contents Type> parameter value\n            F-DESELECT\n\
    \            F-END-GROUP\n        3. If the <Contents Type> parameter returned\
    \ with the F-READ-\n           ATTRIBUTES indicates a directory,  proceed to step\
    \ 11.\n        4. Send the following grouped request to the FTAM responder.\n\
    \            F-BEGIN-GROUP\n            F-CREATE\n                Set the <Override>\
    \ parameter in the F-CREATE to\n                \"Delete and create with new attributes.\"\
    .\n            F-OPEN\n            F-END-GROUP\n        5. If the file existed,\
    \ set the <Contents Type> parameter in\n           the F-CREATE to match the F-READ-ATTRIBUTES.\
    \  If the file\n           did not exist, set the <Contents Type> parameter to\n\
    \           \"FTAM-1\".  If TYPE \"Image\" was previously requested, set\n   \
    \        the <Contents Type> parameter to \"FTAM-3\".\n        6. Send F-WRITE,\
    \ with <Bulk Data Transfer Specification, FADU\n           Operation> parameter\
    \ set to \"File Extend\", to FTAM Responder.\n        7. Loop reading data from\
    \ FTP data connection, sending the\n           data in F-DATA PDUs until end-of-file\
    \ on the FTP\n           connection.\n        8. Send F-DATA-END to FTAM Responder.\n\
    \        9. Send F-TRANSFER-END to FTAM Responder.\n        10. Send the following\
    \ grouped request to the FTAM Responder.\n            F-BEGIN-GROUP\n        \
    \    F-CLOSE\n            F-DESELECT\n            F-END-GROUP\n        11. Translate\
    \ FTAM Responder <Action Result> and <Diagnostic>\n            parameters to equivalent\
    \ FTP reply code(s) and send reply\n            code(s) to FTP Client.\n     \
    \   12. Translate FTP Client reply codes to equivalent FTAM\n            <Action\
    \ Result> and <Diagnostic> parameters and send\n            parameters to FTAM\
    \ Responder.\n        Note:\n        a. <pathname> argument is assumed to be a\
    \ filename, relative\n           to the currently saved CWD.\n        b. CWD of\
    \ the FTAM system must be defined prior to issuance of\n           STOR.\n"
- title: 8.1.29. STOU
  contents:
  - "8.1.29. STOU\n        1. Save current pathname by appending saved CWD string\
    \ with\n           <pathname> argument.  If no saved CWD string, proceed to\n\
    \           step 11.\n        2. Send the following grouped request to FTAM Responder.\n\
    \            F-BEGIN-GROUP\n            F-SELECT\n            F-READ-ATTRIBUTES\n\
    \                Save <Contents Type> parameter value\n            F-DESELECT\n\
    \            F-END-GROUP\n        3. If the file already exists, proceed to step\
    \ 12.\n        4. If the <Contents Type> parameter returned with the F-READ-\n\
    \           ATTRIBUTES indicates a directory, proceed to step 11.\n        5.\
    \ Send the following grouped request to the FTAM responder.\n            F-BEGIN-GROUP\n\
    \            F-CREATE\n                Set the <Override> parameter in the F-CREATE\
    \ to\n                \"Delete and create with new attributes.\".\n          \
    \  F-OPEN\n            F-END-GROUP\n        6. If the file existed, set the <Contents\
    \ Type> parameter in\n           the F-CREATE to match the F-READ-ATTRIBUTES.\
    \  If the file\n           did not exist, set the <Contents Type> parameter to\n\
    \           \"FTAM-1\".  If TYPE \"Image\" was previously requested, set\n   \
    \        the <Contents Type> parameter to \"FTAM-3\".\n        7. Send F-WRITE,\
    \ with <Bulk Data Transfer Specification, FADU\n           Operation> parameter\
    \ set to \"File Extend\", to FTAM Responder.\n        8. Loop reading data from\
    \ FTP data connection, sending the\n           data in F-DATA PDUs until end-of-file\
    \ on the FTP\n           connection.\n        9. Send F-DATA-END to FTAM Responder.\n\
    \        10. Send F-TRANSFER-END to FTAM Responder.\n        11. Send the following\
    \ grouped request to the FTAM Responder.\n            F-BEGIN-GROUP\n        \
    \    F-CLOSE\n            F-DESELECT\n            F-END-GROUP\n        12. Translate\
    \ FTAM Responder <Action Result> and <Diagnostic>\n            parameters to equivalent\
    \ FTP reply code(s) and send reply\n            code(s) to FTP Client.\n     \
    \   13. Translate FTP Client reply codes to equivalent FTAM\n            <Action\
    \ Result> and <Diagnostic> parameters and send\n            parameters to FTAM\
    \ Responder.\n        Note:\n        a. <pathname> argument is assumed to be a\
    \ filename, relative\n           to the currently saved CWD.\n        b. Same\
    \ as STOR, except the name of the created file must be\n           unique in that\
    \ directory.\n        c. CWD of the FTAM system must be defined prior to issuance\
    \ of\n           STOU.\n"
- title: 8.1.30. STRU
  contents:
  - "8.1.30. STRU\n        1. If <structure code> argument is not \"File\", return\
    \ 504\n           reply code to FTP Client; Otherwise return 200 reply code\n\
    \           to FTP Client.\n"
- title: 8.1.31. SYST
  contents:
  - "8.1.31. SYST\n        1. Return 502 reply code to FTP client.\n"
- title: 8.1.32. TYPE
  contents:
  - "8.1.32. TYPE\n        1. If no <type code> argument is provided, set <Contents\
    \ Type>\n           parameter equal to \"FTAM-1\".\n        2. If argument is\
    \ provided, and equal to \"ASCII\", set <Contents\n           Type> parameter\
    \ to \"FTAM-1\".\n        3. If argument is provided, and equal to \"Image\",\
    \ set <Contents\n           Type> parameter to \"FTAM-3\".\n        4. Translate\
    \ FTAM Responder <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply code(s) and send reply\n           code(s) to FTP Client.\n      \
    \  5. Translate FTP Client reply codes to equivalent FTAM <Action\n          \
    \ Result> and <Diagnostic> parameters and send parameters to\n           FTAM\
    \ Responder.\n        Note:\n        a. Default to ASCII if no <type code> argument\
    \ is provided.\n"
- title: 8.1.33. USER
  contents:
  - "8.1.33. USER\n        1. Set <Initiator Identity> parameter for issuing F-INITIALIZE\n\
    \           to FTAM Responder.\n        2. If the destination address was specified\
    \ in the Domain Name\n           used to attach to the gateway, use it to set\
    \ the value of\n           the <Called Presentation Address> parameter of the\n\
    \           to-be-issued F-INITIALIZE command.\n        3. If the destination\
    \ address is not known, check if it was\n           specified in a previously\
    \ issued SITE command.  If\n           available, set <Called Presentation Address>\
    \ parameter for\n           issuing F-INITIALIZE to FTAM Responder.\n        4.\
    \ If the destination address is still not available, check if\n           it is\
    \ encoded in the user identity (e.g., user@host). If\n           encoded, set\
    \ <Called Presentation Address> parameter for\n           issuing F-INITIALIZE\
    \ to FTAM Responder using the \"host\"\n           portion.\n        5. If no\
    \ destination address is available, proceed to step 7.\n        6. Prompt user\
    \ for password.\n        7. Translate FTAM Responder <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply code(s) and send reply\n      \
    \     code(s) to FTP Client.\n        8. Translate FTP Client reply codes to equivalent\
    \ FTAM <Action\n           Result> and <Diagnostic> parameters and send parameters\
    \ to\n           FTAM Responder.\n        Note:\n        a. A USER command should\
    \ be acceptable in any state.\n        b. Multiple mechanisms are available for\
    \ specifying the\n           destination address: 1) Domain Name used in connecting\
    \ to\n           gateway (see section 4, Use of Gateway Services); 2) SITE\n \
    \          command argument; and 3) user@host format.\n"
- title: 8.2. FTAM-Initiated Gateway Service
  contents:
  - "8.2. FTAM-Initiated Gateway Service\n   The protocol mapping between FTP and\
    \ FTAM may be one-to-zero (i.e.,\n   not mappable), one-to-one, or one-to-many.\n\
    \   The general steps taken by the FTP-FTAM gateway to provide the FTAM-\n   Initiated\
    \ service are:\n        1. Accept an FTAM Initiator request at the FTAM Responder\
    \ side\n           of the gateway.\n        2. Map the request to the (set of)\
    \ corresponding FTP Client\n           function(s).\n        3. Acting as an FTP\
    \ Client, send the FTP Client function(s) to\n           the FTP Server.\n   \
    \     4. Accept information returned to the FTP Client side of the\n         \
    \  gateway.  This information originated at the FTP Server.\n        5. Map this\
    \ returned information to a form understood by the\n           FTAM Responder\
    \ side of the gateway.\n        6. Send this returned information from the FTAM\
    \ Responder side\n           of the gateway to the FTAM Initiator.\n   For each\
    \ FTAM protocol function, the FTP protocol functions required\n   to map it are\
    \ identified:\n      FTAM                FTP\n      -----------------------------------------------------------------\n\
    \      F-BEGIN-GROUP       none\n      F-CANCEL            ABOR\n      F-CHANGE-ATTRIBUTE\
    \  RNFR, RNTO\n      F-CHECK             none\n      F-CLOSE             none\n\
    \      F-CREATE            STOR\n      F-DATA              ALLO, STOR or RETR\
    \ or APPE\n      F-DATA-END          none\n      F-DELETE            DELE\n  \
    \    F-DESELECT          none\n      F-END-GROUP         STAT\n      F-ERASE \
    \            DELE\n      F-INITIALIZE        ACCT, PASS, USER\n      F-LOCATE\
    \            none\n      F-OPEN              MODE, STRU, TYPE\n      F-READ  \
    \            MODE, NLST, RETR, TYPE\n      F-READ-ATTRIBUTE    LIST\n      F-RECOVER\
    \           REST\n      F-RESTART           ABOR, REST\n      F-SELECT       \
    \     LIST\n      F-TERMINATE         QUIT\n      F-TRANSFER          none\n \
    \     F-P-ABORT           QUIT\n      F-U-ABORT           QUIT\n      F-WRITE\
    \             APPE or STOR, NOOP\n   The remainder of this section presents detailed\
    \ mapping procedures\n   for each of the FTAM protocol functions.  Where appropriate,\
    \ each\n   FTAM service primitive is followed by those parameters that are\n \
    \  relevant to the mapping.  Gateway support for these mappings is\n   required.\n"
- title: 8.2.1. F-BEGIN-GROUP REQ
  contents:
  - "8.2.1. F-BEGIN-GROUP REQ\n        1. Send F-BEGIN-GROUP RESP PDU to FTAM Initiator\
    \ signifying\n           that processes are available to handle concatenated\n\
    \           requests.\n"
- title: 8.2.2. F-CANCEL REQ
  contents:
  - "8.2.2. F-CANCEL REQ\n        1. Close FTP data connection.\n        2. Send ABOR\
    \ to FTP Server.\n        3. Translate FTP Server reply code to equivalent FTAM\n\
    \           Responder action and diagnostic parameters and send\n           parameters\
    \ to FTAM Initiator via F-CANCEL RESP PDU.\n        4. Translate FTAM Initiator\
    \ action and diagnostic parameters\n           to equivalent FTP reply codes and\
    \ send reply codes to FTP\n           Server.\n        Note:\n        a. F-U-ABORT\
    \ REQ is a viable alternative to F-CANCEL REQ.\n        b. Note that since ABOR\
    \ is not implemented by all FTP Servers,\n           the remote file may be corrupted,\
    \ though accessible.\n"
- title: 8.2.3. F-CHANGE-ATTRIBUTE REQ
  contents:
  - "8.2.3. F-CHANGE-ATTRIBUTE REQ\n        1. Get original filename from <Filename>\
    \ parameter and send it\n           with an RNFR to the FTP Server.\n        2.\
    \ Get new filename from <Filename> parameter and send it with\n           an RNTO\
    \ to the FTP Server.\n        3. Translate FTP Server reply code to equivalent\
    \ FTAM\n           Responder action and diagnostic parameters and send\n     \
    \      parameters to FTAM Initiator via F-CHANGE-ATTRIBUTE RESP\n           PDU.\n\
    \        4. Translate FTAM Initiator action and diagnostic parameters\n      \
    \     to equivalent FTP reply codes and send reply codes to FTP\n           Server.\n\
    \        Note:\n        a. Allow for processing an arbitrary number attributes\
    \ at one\n           time.\n        b. Allow for responses of \"Attribute currently\
    \ unavailable for\n           change\" and \"Attribute not currently supported\"\
    .\n        c. At a minimum, support the <Filename>, <Permitted Actions>,\n   \
    \        and <Contents Type> parameters.\n"
- title: 8.2.4. F-CHECK REQ
  contents:
  - "8.2.4. F-CHECK REQ\n        1. Send an F-CHECK RESP PDU to the FTAM Initiator.\n"
- title: 8.2.5. F-CLOSE REQ
  contents:
  - "8.2.5. F-CLOSE REQ\n        1. Send F-CLOSE RESP PDU , with <Action Result> parameter\n\
    \           value of \"Success\", to FTAM Initiator.\n        Note:\n        a.\
    \ If an error had occurred during transfer, it would have\n           been noted\
    \ before the F-CLOSE REQ.\n"
- title: 8.2.6. F-CREATE REQ
  contents:
  - "8.2.6. F-CREATE REQ\n        1. Send STOR and zero data bytes to FTP Server.\n\
    \        2. Translate FTP Server reply code to equivalent FTAM\n           Responder\
    \ <Action Result> and <Diagnostic> parameters and\n           send parameters\
    \ to FTAM Initiator.\n        3. Translate FTAM Initiator <Action Result> and\
    \ <Diagnostic>\n           parameters to equivalent FTP reply codes and send reply\n\
    \           codes to FTP Server.\n"
- title: 8.2.7. F-DATA PDU
  contents:
  - "8.2.7. F-DATA PDU\n        1. If necessary, send ALLO command to FTP Server.\n\
    \        2. Depending on whether reading or writing, send STOR, RETR,\n      \
    \     or APPE command to FTP Server.\n        3. Translate FTP Server reply code\
    \ to equivalent FTAM\n           Responder <Action Result> and <Diagnostic> parameters\
    \ and\n           send parameters to FTAM Initiator.\n        4. Translate FTAM\
    \ Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n        Note:\n\
    \        a. The use of an FTP command may be unnecessary.  Sending the\n     \
    \      data on the data connection may be adequate.\n"
- title: 8.2.8. F-DATA-END REQ
  contents:
  - "8.2.8. F-DATA-END REQ\n        1. Close the data connection.\n        2. Save\
    \ mandatory Diagnostic parameter for later use.\n        3. Translate FTP Server\
    \ reply code to equivalent FTAM\n           Responder <Action Result> and <Diagnostic>\
    \ parameters and\n           send parameters to FTAM Initiator.\n        4. Translate\
    \ FTAM Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n"
- title: 8.2.9. F-DELETE REQ
  contents:
  - "8.2.9. F-DELETE REQ\n        1. Send DELE to FTP server.\n        2. Translate\
    \ FTP Server reply code to equivalent FTAM\n           Responder <Action Result>\
    \ and <Diagnostic> parameters and\n           send parameters to FTAM Initiator\
    \ via F-DELETE RESP PDU.\n        3. Translate FTAM Initiator <Action Result>\
    \ and <Diagnostic>\n           parameters to equivalent FTP reply codes and send\
    \ reply\n           codes to FTP Server.\n"
- title: 8.2.10. F-DESELECT REQ
  contents:
  - "8.2.10. F-DESELECT REQ\n        1. Return F-DESELECT RESP PDU, with <Action Result>\
    \ parameter\n           value of \"Success\", to FTAM Initiator.\n"
- title: 8.2.11. F-END-GROUP REQ
  contents:
  - "8.2.11. F-END-GROUP REQ\n        1. Send STAT command sequence to FTP Server.\n\
    \        2. Translate FTP Server reply code to equivalent FTAM\n           Responder\
    \ <Action Result> and <Diagnostic>\n           parameters and send parameters\
    \ to FTAM Initiator via F-END\n           GROUP RESP.\n        3. Translate FTAM\
    \ Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n"
- title: 8.2.12. F-ERASE REQ
  contents:
  - "8.2.12. F-ERASE REQ\n        1. Send DELE to FTP Server.\n        2. Translate\
    \ FTP Server reply code to equivalent FTAM\n           Responder <Action Result>\
    \ and <Diagnostic> parameters and\n           send parameters to FTAM Initiator\
    \ via F-ERASE RESP PDU.\n        3. Translate FTAM Initiator <Action Result> and\
    \ <Diagnostic>\n           parameters to equivalent FTP reply codes and send reply\n\
    \           codes to FTP Server.\n"
- title: 8.2.13. F-INITIALIZE REQ
  contents:
  - "8.2.13. F-INITIALIZE REQ\n        1. Establish initial area for activity attributes.\n\
    \        2. Save <Responding Presentation Address>, <Initiator\n           Identity>,\
    \ and <Filestore Password> parameter values\n           received from FTAM Initiator.\n\
    \        3. If the destination address was specified in the\n           Distinguished\
    \ Name (or User Friendly Name) used to attach\n           to the gateway, save\
    \ it as the ultimate destination\n           address.\n        4. If the ultimate\
    \ destination address is not yet known, look\n           at the \"@host\" portion\
    \ of the <Initiator Identity>\n           parameter for the ultimate destination\
    \ parameter.\n        5. If the ultimate destination address is still not known,\n\
    \           check if it is available in the <Responding Presentation\n       \
    \    Address> parameter.\n        6. Get userid from <Initiator Identity> and\
    \ send it with USER\n           command to FTP Server.\n        7. Get password\
    \ from <Filestore Password> and send it with\n           PASS command to FTP Server.\n\
    \        8. If necessary, send ACCT command to FTP Server.\n        9. Negotiate\
    \ acceptance of mandatory functional units, service\n           classes, service\
    \ types, presentation contexts, and\n           attribute groups.\n        10.\
    \ Accept context management functional unit passed by\n            Presentation\
    \ service provider.\n        11. Translate FTP Server reply code to equivalent\
    \ FTAM\n            Responder <Action Result> and <Diagnostic> parameters and\n\
    \            send parameters to FTAM Initiator via F-INIT RESP PDU.\n        12.\
    \ Translate FTAM Initiator <Action Result> and <Diagnostic>\n            parameters\
    \ to equivalent FTP reply codes and send reply\n            codes to FTP Server.\n\
    \        Note:\n        a. Multiple mechanisms are available for specifying the\n\
    \           destination address: 1) Distinguished Name, or User\n           Friendly\
    \ Name, used in connecting to the gateway (see\n           section 4, Use of Gateway\
    \ Services); 2) user@host format;\n           and 3) Inclusion as <Responding\
    \ Presentation Address>\n           parameter value.\n"
- title: 8.2.14. F-LOCATE REQ
  contents:
  - "8.2.14. F-LOCATE REQ\n        Note:\n        a. Not supported since FTAM-1 and\
    \ FTAM-3 don't support this\n           primitive.\n"
- title: 8.2.15. F-OPEN REQ
  contents:
  - "8.2.15. F-OPEN REQ\n        1. Get <Contents Type> and <Processing Mode> parameter\
    \ values\n           from FTAM Initiator.\n        2. Send TYPE command to FTP\
    \ Server.\n        3. Send MODE command to FTP Server.\n        4. Send STRU command\
    \ to FTP Server.\n        5. Translate FTP Server reply code to equivalent FTAM\n\
    \           Responder <Action Result> and <Diagnostic>\n           parameters\
    \ and send parameters to FTAM Initiator via F-OPEN\n           RESP PDU.\n   \
    \     6. Translate FTAM Initiator <Action Result> and <Diagnostic>\n         \
    \  parameters to equivalent FTP reply codes and send reply\n           codes to\
    \ FTP Server.\n        Note:\n        a. Establishes definite value for presentation\
    \ context name\n           parameter for this data transfer.\n        b. Assumes\
    \ that the <Requested Access> parameter is permitted.\n"
- title: 8.2.16. F-READ REQ
  contents:
  - "8.2.16. F-READ REQ\n        1. If requested file type and file mode are different\
    \ than\n           current settings, send TYPE and MODE to FTP Server.\n     \
    \   2. If <Contents Type> is FTAM-1 or FTAM-3, then send RETR to\n           FTP\
    \ Server.\n        3. If <Contents Type> is \"NBS-9\", then send NLST to FTP\n\
    \           Server.\n        4. If reply code from FTP Server is 1xx, open FTP\
    \ data\n           connection and loop until End-of-File is read on FTP data\n\
    \           connection.  Inside loop, read block from FTP data\n           connection,\
    \ format FTAM DATA PDU, and send FTAM PDU to FTAM\n           Initiator.  At End-of-File\
    \ on FTP data connection, send\n           F-DATA-END and return.\n        5.\
    \ If reply code from FTP Server is not 1xx, send F-CANCEL REQ\n           to FTAM\
    \ Initiator.\n        6. Translate FTP Server reply code to equivalent FTAM\n\
    \           Responder <Action Result> and <Diagnostic> parameters and\n      \
    \     send parameters to FTAM Initiator via F-READ RESP PDU.\n        7. Translate\
    \ FTAM Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n        Note:\n\
    \        a. To send NLST response, TYPE must be ASCII.\n"
- title: 8.2.17. F-READ-ATTRIBUTE REQ
  contents:
  - "8.2.17. F-READ-ATTRIBUTE REQ\n        1. Send LIST to FTP Server.\n        2.\
    \ Translate returned information into the <Filename>,\n           <Contents Type>,\
    \ and <Permitted Actions> parameter values\n           and return them to the\
    \ FTAM Initiator.\n        3. Translate FTP Server reply code to equivalent FTAM\n\
    \           Responder <Action Result> and <Diagnostic> parameters and\n      \
    \     send parameters to FTAM Initiator via F-READ-ATTRIBUTE RESP\n          \
    \ PDU.\n        4. Translate FTAM Initiator <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply codes and send reply\n        \
    \   codes to FTP Server.\n"
- title: 8.2.18. F-RECOVER REQ
  contents:
  - "8.2.18. F-RECOVER REQ\n        1. Send REST command to FTP Server.\n        2.\
    \ Translate FTP Server reply code to equivalent FTAM\n           Responder <Action\
    \ Result> and <Diagnostic> parameters and\n           send parameters to FTAM\
    \ Initiator.\n        3. Translate FTAM Initiator <Action Result> and <Diagnostic>\n\
    \           parameters to equivalent FTP reply codes and send reply\n        \
    \   codes to FTP Server.\n        Note:\n        a. Regime recovery is only possible\
    \ if the <Recovery\n           Functional Unit> parameter was negotiated previously\
    \ by an\n           F-INITIALIZE.\n"
- title: 8.2.19. F-RESTART REQ
  contents:
  - "8.2.19. F-RESTART REQ\n        1. To interrupt any bulk data transfer in progress,\
    \ send ABOR\n           to FTP Server.\n        2. To negotiate the point at which\
    \ data transfer is to be\n           restarted, get <Checkpoint Identifier> parameter\
    \ from FTAM\n           Initiator and send it with REST to FTP Server.\n     \
    \   3. Translate FTP Server reply code to equivalent FTAM\n           Responder\
    \ <Action Result> and <Diagnostic> parameters and\n           send parameters\
    \ to FTAM Initiator via F-RESTART RESP PDU.\n        4. Translate FTAM Initiator\
    \ <Action Result> and <Diagnostic>\n           parameters to equivalent FTP reply\
    \ codes and send reply\n           codes to FTP Server.\n"
- title: 8.2.20. F-SELECT REQ
  contents:
  - "8.2.20. F-SELECT REQ\n        1. Get <Filename> parameter and send with LIST\
    \ command to FTP\n           Server to determine whether  or not the file exists.\n\
    \        2. If file exists, compare the POSIX file access rights with\n      \
    \     the <Requested Access> parameter sent by the FTAM\n           Initiator.\
    \  If the access rights match, return <Action\n           Result> parameter value\
    \ of \"Success\", otherwise return\n           <Action Result> parameter value\
    \ of \"Failure\".\n        3. Translate FTP Server reply code to equivalent FTAM\n\
    \           Responder <Action Result> and <Diagnostic> parameters and\n      \
    \     send parameters to FTAM Initiator via F-SELECT RESP PDU.\n        4. Translate\
    \ FTAM Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n        Note:\n\
    \        a. The specified file is binary/text file if one record is\n        \
    \   received or is a directory file if multiple records are\n           received.\n"
- title: 8.2.21. F-TERMINATE REQ
  contents:
  - "8.2.21. F-TERMINATE REQ\n        1. Send QUIT to FTP Server.\n        2. Translate\
    \ FTP Server reply code to equivalent FTAM\n           Responder <Action Result>\
    \ and <Diagnostic> parameters and\n           send parameters to FTAM Initiator\
    \ via F-TERMINATE RESP PDU.\n        3. Translate FTAM Initiator <Action Result>\
    \ and <Diagnostic>\n           parameters to equivalent FTP reply codes and send\
    \ reply\n           codes to FTP Server.\n"
- title: 8.2.22. F-TRANSFER-END
  contents:
  - "8.2.22. F-TRANSFER-END\n        1. Get <Action Result> parameter value from last\
    \ F-DATA-END\n           and return it to FTAM Initiator as <Action Result>\n\
    \           parameter of this F-TRANSFER-END.\n"
- title: 8.2.23. F-P-ABORT REQ
  contents:
  - "8.2.23. F-P-ABORT REQ\n        1. Send QUIT to FTP Server.\n        2. Return\
    \ <Action Result> parameter value of \"Permanent Error\"\n           to FTAM Initiator.\n\
    \        3. Translate FTP Server reply code to equivalent FTAM\n           Responder\
    \ <Action Result> and <Diagnostic> parameters and\n           send parameters\
    \ to FTAM Initiator.\n        4. Translate FTAM Initiator <Action Result> and\
    \ <Diagnostic>\n           parameters to equivalent FTP reply codes and send reply\n\
    \           codes to FTP Server.\n"
- title: 8.2.24. F-U-ABORT REQ
  contents:
  - "8.2.24. F-U-ABORT REQ\n        1. Send QUIT to FTP Server.\n        2. Return\
    \ <Action Result> parameter value of \"Permanent Error\"\n           to FTAM Initiator.\n\
    \        3. Translate FTP Server reply code to equivalent FTAM\n           Responder\
    \ <Action Result> and <Diagnostic> parameters and\n           send parameters\
    \ to FTAM Initiator.\n        4. Translate FTAM Initiator <Action Result> and\
    \ <Diagnostic>\n           parameters to equivalent FTP reply codes and send reply\n\
    \           codes to FTP Server.\n"
- title: 8.3. F-WRITE REQ
  contents:
  - "8.3. F-WRITE REQ\n        1. Save bulk transfer specification parameter from\
    \ PDU.\n        2. Send NOOP to FTP Server to receive status information.\n  \
    \      3. If the <Bulk Data Transfer Specification, FADU Operation>\n        \
    \   parameter has a value of \"File Extend\", then send an APPE\n           to\
    \ the FTP Server, otherwise send a STOR to the FTP Server.\n        4. If reply\
    \ code from FTP Server is 200, then accept FTP data\n           connection; otherwise\
    \ send F-CANCEL REQ to FTAM Initiator.\n        5. Translate FTP Server reply\
    \ code to equivalent FTAM Responder\n           <Action Result> and <Diagnostic>\
    \ parameters and send\n           parameters to FTAM Initiator.\n        6. Translate\
    \ FTAM Initiator <Action Result> and <Diagnostic>\n           parameters to equivalent\
    \ FTP reply codes and send reply\n           codes to FTP Server.\n"
- title: 9.  Mapping between FTP Reply Codes and FTAM Parameters
  contents:
  - "9.  Mapping between FTP Reply Codes and FTAM Parameters\n   The focus of the\
    \ protocol function and representation mappings,\n   presented in the previous\
    \ sections, is on non-error encumbered\n   processing.  Though appropriate responses\
    \ are designated in many\n   cases, it is intended that a more thorough use of\
    \ responses will be\n   incorporated into gateway implementations.\n   The purpose\
    \ of this section is to provide a set of mappings between\n   FTAM responses (<Action\
    \ Result> and <Diagnostic>) and FTP responses\n   (reply codes).\n   The <Action\
    \ Result> parameter of the FTAM File Service primitives\n   conveys information\
    \ which summarizes that available in the\n   <Diagnostic> parameter.  The value\
    \ is never less than the most severe\n   diagnostic value.  The valid values of\
    \ this parameter are \"Success\",\n   \"Transient Error\", and \"Permanent Error\"\
    .  The FTP response text\n   should be supplied in the <Further Details> field\
    \ of the\n   <Diagnostics> sequence in the FTAM response and abort messages.\n\
    \   An FTAM <Action Result> \"Success\" may be accompanied by a\n   <Diagnostic>\
    \ with value of \"Informative Error Type\".  These \"Success\"\n   diagnostic\
    \ messages are associated with error type 0 in the table\n   below (and in [ISO8571-3]).\
    \  Error type 1 indicates a transient\n   error, while type 2 indicates a permanent\
    \ error.\n   An FTP reply consists of a three digit number followed by some text.\n\
    \   The number is defined as a 3-digit code, each digit of which has a\n   special\
    \ significance.  The first digit conveys approximately the same\n   information\
    \ as the FTAM <Action Result> parameter; i.e., positive,\n   transient negative,\
    \ or permanent negative.\n   The FTP specification document [RFC959] explicitly\
    \ states that the\n   list of reply codes should not be expanded beyond that which\
    \ is\n   presented in [RFC959].  This requirement is adhered to in the\n   mappings\
    \ presented in this document.\n"
- title: 9.1.  FTP Reply Codes to FTAM Parameters
  contents:
  - "9.1.  FTP Reply Codes to FTAM Parameters\n   This section presents the set of\
    \ mappings between FTP reply codes and\n   their equivalent FTAM action and diagnostic\
    \ parameters.  Gateway\n   support for these mappings is recommended, but not\
    \ required.  The\n   following abbreviations are used for FTAM action parameter\
    \ values:\n        trans   =    transient error\n        perman  =    permanent\
    \ error\n      FTP Reply                                    |FTAM Diagnostic\n\
    \                                                   |\n                      \
    \                             |\n      Code      Text                        \
    \       |Result   Type Id\n      ---------------------------------------------+------------------\n\
    \      110       Restart marker reply               |success  0    0\n      120\
    \       Service ready in nnn minutes       |success  0    0\n      125       Data\
    \ connection open, transfer     |\n                starting                  \
    \         |success  0    0\n      150       File status okay; about to open  \
    \  |\n                data connection                    |success  0    0\n  \
    \    200       Command okay                       |success  0    0\n      202\
    \       Command not implemented;           |\n                superfluous    \
    \                    |success  0    0\n      211       System status, or system\
    \ help      |\n                reply                              |success  0\
    \    0\n      212       Directory status                   |success  0    0\n\
    \      213       File status                        |success  0    0\n      214\
    \       Help message                       |success  0    0\n      215       NAME\
    \ system type                   |success  0    0\n      220       Service ready\
    \ for new user         |success  0    0\n      221       Service closing control\
    \ connection |success  0    0\n      225       Data connection; no transfer in\
    \    |\n                progress                           |success  0    0\n\
    \      226       Closing data connection            |success  0    0\n      227\
    \       Entering passive mode (h1,h2,..)   |success  0    0\n      230       User\
    \ logged in, proceed            |success  0    0\n      250       Requested file\
    \ action okay,        |\n                completed                          |success\
    \  0    0\n      257       \"PATHNAME\" created                 |success  0  \
    \  0\n      331       User name okay, need password      |success  0    0\n  \
    \    332       Need account for logon             |success  0    0\n      350\
    \       Requested file action pending      |\n                further information\
    \                |success  0    0\n      421       Service not available, closing\
    \     |\n                control connection                 |trans    1    1\n\
    \      425       Can't open data connection         |trans    1    3\n      426\
    \       Connection closed, transfer        |\n                aborted        \
    \                    |trans    1    1014\n      450       Requested file action\
    \ not taken,   |\n                file unavailable (e.g., file busy) |trans  \
    \  1    5041\n      451       Requested file action aborted,     |\n         \
    \       local error in processing          |trans    1    5028\n      452    \
    \   Requested action not taken,        |\n                insufficient storage\
    \ space         |trans    1    9\n      500       Syntax error, command unrecognized\
    \ |perman   2    5015\n      501       Syntax error in parameters or      |\n\
    \                arguments                          |perman   2    4004\n    \
    \  502       Command not implemented            |perman   2    5016\n      503\
    \       Bad sequence of commands           |perman   2    1015\n      504    \
    \   Command not implemented for that   |\n                parameter          \
    \                |perman   2    4003\n      530       Not logged in          \
    \            |perman   2    2020\n      532       Need account for storing files\
    \     |perman   2    2008\n      550       Requested action not taken; file  \
    \ |\n                unavailable (e.g., file not found, |\n                no\
    \ access)                         |perman   2    3013\n      551       Requested\
    \ action aborted, page     |\n                type                           \
    \    |perman   2    5002\n      552       Requested file action aborted,     |\n\
    \                exceeded storage allocation        |perman   2    9\n      553\
    \       Requested file action not taken,   |\n                file name not allowed\
    \              |perman   2    3024\n"
- title: 9.2.  FTAM Parameters to FTP Reply Codes
  contents:
  - "9.2.  FTAM Parameters to FTP Reply Codes\n   This section presents the set of\
    \ mappings between FTAM diagnostic\n   parameters and their equivalent FTP reply\
    \ codes.  Gateway support for\n   these mappings is recommended, but not required.\
    \  As previously\n   mentioned, type 0 is an informative error type that may be\
    \ returned\n   with a \"Success\" action result, type 1 is a transient error type,\
    \ and\n   type 2 is a permanent error type.\n      FTAM Diagnostic           \
    \                        |FTP Reply Code\n                                   \
    \                     |\n      Type      Id   Reason                         \
    \    |\n      --------------------------------------------------+--------\n  \
    \                                                      |\n      1,2       0  \
    \  No reason                          |    421\n      0         1    Responder\
    \ error                    |    211\n      1,2       1    Responder error    \
    \                |    421\n      1,2       2    System shutdown              \
    \      |    421\n      0         3    FTAM mgmt problem, unspecific      |   \
    \ 211\n      1,2       3    FTAM mgmt problem, unspecific      |    425\n    \
    \  0         4    FTAM mgmt, bad account             |    221\n      2       \
    \  4    FTAM mgmt, bad account             |    532\n      0         5    FTAM\
    \ mgmt, security not passed     |    211\n      2         5    FTAM mgmt, security\
    \ not passed     |    530\n      0         6    Delay may be encountered     \
    \      |    211\n      0         7    Initiator error, unspecific        |   \
    \ 211\n      1,2       7    Initiator error, unspecific        |    421\n    \
    \  0         8    Subsequent error                   |    211\n      1,2     \
    \  8    Subsequent error                   |    421\n      0         9    Temporal\
    \ insufficiency of resources|    211\n      1,2       9    Temporal insufficiency\
    \ of resources|    452\n      1,2       10   Access req. violates VFS security\
    \  |    550\n      1,2       11   Access req. violates local security|    550\n\
    \      2         1000 Conflicting parameter values       |    504\n      2   \
    \      1001 Unsupported parameter values       |    504\n      2         1002\
    \ Mandatory parameter not set        |    504\n      2         1003 Unsupported\
    \ parameter              |    504\n      2         1004 Duplicated parameter \
    \              |    504\n      2         1005 Illegal parameter type         \
    \    |    504\n      2         1006 Unsupported parameter types        |    504\n\
    \      2         1007 FTAM protocol err., unspecific     |    426\n      2   \
    \      1008 FTAM protocol err., procedure err  |    426\n      2         1009\
    \ FTAM protocol err., funct. unit err|    426\n      2         1010 FTAM protocol\
    \ err., corruption err.|    426\n      2         1011 Lower layer failure    \
    \            |    426\n      1,2       1012 Lower layer addressing error     \
    \  |    426\n      1,2       1013 Timeout                            |    426\n\
    \      1,2       1014 System shutdown                    |    426\n      2   \
    \      1015 Illegal grouping sequence          |    503\n      2         1016\
    \ Grouping threshold violation       |    503\n      2         1017 Inconsistent\
    \ PDU request           |    503\n      2         2000 Association with user not\
    \ allowed  |    532\n      2         2002 Unsupported service class          |\
    \    504\n      0         2003 Unsupported functional unit        |    211\n \
    \     2         2003 Unsupported functional unit        |    502\n      0    \
    \     2004 Attribute group error, unspecific  |    211\n      1,2       2004 Attribute\
    \ group error, unspecific  |    504\n      2         2005 Attribute group not\
    \ supported      |    504\n      0         2006 Attribute group not allowed  \
    \      |    211\n      2         2006 Attribute group not allowed        |   \
    \ 504\n      0         2007 Bad account                        |    211\n    \
    \  2         2007 Bad account                        |    532\n      0       \
    \  2008 Association management, unspecific |    211\n      1,2       2008 Association\
    \ management, unspecific |    532\n      2         2009 Association management,\
    \ bad address|    532\n      1,2       2010 Association management, bad account|\
    \    532\n      0         2011 Checkpoint window error, too large |    211\n \
    \     2         2011 Checkpoint window error, too large |    426\n      0    \
    \     2012 Checkpoint window error, too small |    211\n      2         2012 Checkpoint\
    \ window error, too small |    426\n      0         2013 Checkpoint window error,\
    \ unsupp.   |    211\n      2         2013 Checkpoint window error, unsupp.  \
    \ |    504\n      0         2014 Communications QoS not supported   |    211\n\
    \      1,2       2014 Communications QoS not supported   |    504\n      2   \
    \      2015 Initiator identity unacceptable    |    532\n      0         2016\
    \ Context management refused         |    211\n      0         2017 Rollback not\
    \ available             |    211\n      0         2018 Contents type list cut\
    \ by          |\n                     responder                          |   \
    \ 211\n      0         2019 Contents type list by              |\n           \
    \          Presentation Service               |    211\n      2         2020 Invalid\
    \ filestore password         |    530\n      2         2021 Incompatible service\
    \ classes       |    530\n      1,2       3000 Filename not found            \
    \     |    550\n      1,2       3001 Selection attributes not matched   |    550\n\
    \      2         3002 Initial attributes not possible    |    550\n      2   \
    \      3003 Bad attribute name                 |    550\n      1,2       3004\
    \ Non-existent file                  |    550\n      1,2       3005 File already\
    \ exists                |    553\n      1,2       3006 File cannot be created\
    \             |    553\n      1,2       3007 File cannot be deleted          \
    \   |    553\n      0         3008 Concurrency control not available  |    211\n\
    \      2         3008 Concurrency control not available  |    503\n      0   \
    \      3009 Concurrency control not supported  |    211\n      2         3009\
    \ Concurrency control not supported  |    502\n      0         3010 Concurrency\
    \ control not possible   |    211\n      2         3010 Concurrency control not\
    \ possible   |    503\n      0         3011 More restrictive lock            \
    \  |    211\n      1         3011 More restrictive lock              |    450\n\
    \      1,2       3012 File busy                          |    450\n      1,2 \
    \      3013 File not available                 |    450\n      0         3014\
    \ Access control not available       |    211\n      1,2       3014 Access control\
    \ not available       |    503\n      0         3015 Access control not supported\
    \       |    211\n      1,2       3015 Access control not supported       |  \
    \  502\n      0         3016 Access control inconsistent        |    211\n   \
    \   1,2       3016 Access control inconsistent        |    503\n      0      \
    \   3017 Filename truncated                 |    211\n      0         3018 Initial\
    \ attributes altered         |    211\n      1,2       3019 Bad account      \
    \                  |    532\n      0         3020 Override selected existing file\
    \    |    211\n      0         3021 Override deleted and recreated     |    211\n\
    \      0         3022 Create override deleted and        |\n                 \
    \    recreate file with new attributes  |    211\n      1,2       3023 Create\
    \ override, not possible      |    553\n      1,2       3024 Ambiguous file specification\
    \       |    553\n      2         3025 Invalid create password            |  \
    \  550\n      2         3026 Invalid delete password on override|    550\n   \
    \   2         3027 Bad attribute value                |    550\n      2      \
    \   3028 Requested access violation         |    550\n      2         3029 Functional\
    \ unit not available for  |    550\n                     requested access    \
    \               |\n      0         3030 File created but not selected      | \
    \   211\n      1         3030 Invalid create password            |    550\n  \
    \    0         4000 Attribute non-existent             |    211\n      1,2   \
    \    4000 Attribute non-existent             |    501\n      1,2       4001 Attribute\
    \ cannot be read           |    504\n      1,2       4002 Attribute cannot be\
    \ changed        |    504\n      1,2       4003 Attribute not supported      \
    \      |    504\n      2         4004 Bad attribute name                 |   \
    \ 501\n      2         4005 Bad attribute value                |    501\n    \
    \  0         4006 Attribute partially supported      |    211\n      0       \
    \  4007 Additional set attribute value     |\n                     not distinct\
    \                       |    211\n      1,2       5000 Bad FADU, unspecific  \
    \             |    550\n      2         5001 Bad FADU, size error            \
    \   |    501\n      2         5002 Bad FADU, type error               |    551\n\
    \      2         5003 Bad FADU, poorly specified         |    501\n      2   \
    \      5004 Bad FADU, bad location             |    550\n      0         5005\
    \ FADU does not exist                |    550\n      1         5005 FADU does\
    \ not exist                |    550\n      0         5006 FADU not available,\
    \ unspecific     |    550\n      1,2       5006 FADU not available, unspecific\
    \     |    550\n      1,2       5007 FADU not available for reading     |    550\n\
    \      1,2       5008 FADU not available for writing     |    550\n      1,2 \
    \      5009 FADU not available for location    |    550\n      1,2       5010\
    \ FADU not available for erasure     |    550\n      1,2       5011 FADU cannot\
    \ be inserted            |    550\n      1,2       5012 FADU cannot be replaced\
    \            |    550\n      0         5013 FADU cannot be located           \
    \  |    550\n      1,2       5013 FADU cannot be located             |    550\n\
    \      2         5014 Bad data element type              |    550\n      1,2 \
    \      5015 Operation not available            |    500\n      1,2       5016\
    \ Operation not supported            |    502\n      0         5017 Operation\
    \ inconsistent             |    211\n      2         5017 Operation inconsistent\
    \             |    503\n      0         5018 Concurrency control not available\
    \  |    211\n      1,2       5018 Concurrency control not available  |    503\n\
    \      0         5019 Concurrency control not supported  |    211\n      2   \
    \      5019 Concurrency control not supported  |    502\n      0         5020\
    \ Concurrency control inconsistent   |    211\n      2         5020 Concurrency\
    \ control inconsistent   |    503\n      0         5021 Processing mode not available\
    \      |    211\n      1,2       5021 Processing mode not available      |   \
    \ 503\n      0         5022 Processing mode not supported      |    211\n    \
    \  2         5022 Processing mode not supported      |    504\n      0       \
    \  5023 Processing mode inconsistent       |    211\n      2         5023 Processing\
    \ mode inconsistent       |    503\n      0         5024 Access context not available\
    \       |    211\n      2         5024 Access context not available       |  \
    \  503\n      0         5025 Access context not supported       |    211\n   \
    \   2         5025 Access context not supported       |    504\n      1,2    \
    \   5026 Bad write, unspecific              |    550\n      1,2       5027 Bad\
    \ read, unspecific               |    550\n      0         5028 Local failure,\
    \ unspecific          |    211\n      1,2       5028 Local failure, unspecific\
    \          |    451\n      0         5029 Local failure, filespace exhausted |\
    \    211\n      1,2       5029 Local failure, filespace exhausted |    552\n \
    \     0         5030 Local failure, data corrupted      |    211\n      1,2  \
    \     5030 Local failure, data corrupted      |    451\n      0         5031 Local\
    \ failure, data corrupted      |    211\n      1,2       5031 Local failure, data\
    \ corrupted      |    451\n      2         5032 Future file size exceeded    \
    \      |    451\n      0         5034 Future file size increased         |   \
    \ 211\n      0         5035 Functional unit invalid in         |\n           \
    \          processing mode                    |    211\n      2         5035 Functional\
    \ unit invalid in         |\n                     processing mode            \
    \        |    503\n      0         5036 Contents type inconsistent         | \
    \   211\n      2         5036 Contents type inconsistent         |    503\n  \
    \    0         5037 Contents type simplified           |    211\n      0     \
    \    5038 Duplicate FADU name                |    211\n      1,2       5039 Damage\
    \ to select/open regime       |    553\n      1,2       5040 FADU locking not\
    \ available on file |    450\n      1,2       5041 FADU locked by another user\
    \        |    450\n"
- title: 9.3.  Future Mapping Problem
  contents:
  - "9.3.  Future Mapping Problem\n   At some point in the future, the FTAM <Responding\
    \ Presentation\n   Address> parameter may be used for purposes other than the\
    \ current\n   use of passing the final destination address in the FTAM-Initiated\n\
    \   gateway service [NIST86].  If this happens, the destination address\n   will\
    \ have to be passed in another location, such as in the \"@host\"\n   portion\
    \ of the <Initiator Identity>.  Currently, the FTP-FTAM gateway\n   specification\
    \ permits either mechanism for storage of the ultimate\n   destination address.\n"
- title: 9.4.  Error Handling
  contents:
  - "9.4.  Error Handling\n   The minimal acceptable solution for FTAM-Initiated service\
    \ errors is\n   to map FTP failures to FTAM \"Unrecoverable error\" and return\
    \ the FTP\n   diagnostic string in the FTAM <Further Details> field.  Similarly\
    \ for\n   FTP-Initiated service errors, the minimal acceptable solution is to\n\
    \   return reply code 221, \"Service closing control connection, Logged\n   out\
    \ if appropriate\".  While this minimal solution is acceptable, the\n   recommended\
    \ approach for Gateway developers is to implement the\n   mappings presented in\
    \ Section 9.1, FTP Reply Codes to FTAM\n   Parameters, and Section 9.2, FTAM Parameters\
    \ to FTP Reply Codes.\n"
- title: 10.  Implementation and Configuration Guidelines
  contents:
  - "10.  Implementation and Configuration Guidelines\n   The intent of this specification\
    \ is to specify the required\n   characteristics and functions of an FTP-FTAM\
    \ gateway.  The specific\n   approach taken to realize these specifications in\
    \ an operational\n   gateway are left to the discretion of the implementor.  We\
    \ do take\n   the liberty, however, of suggesting several ideas concerning the\n\
    \   configuration and implementation of such gateways.\n"
- title: 10.1.  Robustness
  contents:
  - "10.1.  Robustness\n   The gateway should be robust enough to handle situations\
    \ where a\n   subset of the FTP and/or FTAM protocols are implemented on a host.\n\
    \   The gateway should support multiple concurrent FTP and FTAM\n   connections.\n\
    \   These are requirements for gateway implementations.\n"
- title: 10.2.  Well-Known TCP/IP Port
  contents:
  - "10.2.  Well-Known TCP/IP Port\n   It is recommended that the FTP-Initiated gateway\
    \ process listen on\n   TCP/IP port 21, the well-known port for FTP listener processes.\
    \  As\n   the gateway computer is primarily intended to provide gateway\n   services,\
    \  use of this port will alleviate the need for gateway users\n   to specify the\
    \ desired port when they connect to the gateway.  The\n   standard FTP server\
    \ listener process can then be moved to another\n   port that is known to those\
    \ users (e.g., System Administrators)\n   requiring FTP-to-FTP access to the gateway\
    \ computer.\n"
- title: 10.3.  Gateway Listener Processes
  contents:
  - "10.3.  Gateway Listener Processes\n   To simplify the administrative overhead\
    \ on the gateway computer\n   system, it is recommended that the FTP-Initiated\
    \ service and FTAM-\n   Initiated gateway listener processes be merged into a\
    \ single\n   executable module.  This single daemon will act as the one and only\n\
    \   gateway listener processes.  As connections were established with\n   hosts,\
    \ other processes would be created.\n"
- title: 10.4.  Implementation Testing
  contents:
  - "10.4.  Implementation Testing\n   To assist in the development and evaluation\
    \ of FTP-FTAM gateway\n   prototypes, NIST has developed a test system to evaluate\
    \ a gateway's\n   conformance to the protocol standards [NIST88].\n"
- title: 10.5.  POSIX File Naming and Organization
  contents:
  - "10.5.  POSIX File Naming and Organization\n   The OSI profiles do not define\
    \ a standard manner for an FTAM\n   Responder to return file names.\n   To avoid\
    \ unnecessary complexity, proprietary file systems are not\n   addressed in these\
    \ mappings.  Gateway support for POSIX file naming\n   and organization conventions\
    \ is required; i.e., files are assumed to\n   be organized in a hierarchical structure\
    \ in which all of the non-\n   terminal nodes are directories and all of the terminal\
    \ nodes are any\n   other type of file.\n"
- title: 11.  Security Considerations
  contents:
  - "11.  Security Considerations\n   The gateway system may place the burden of authentication\
    \ on the\n   destination system.  However, the gateway must accommodate the\n\
    \   passing through of all authentication parameters.  The authentication\n  \
    \ parameters of each protocol are applied at the destination and no\n   additional\
    \ parameters are needed for authentication at the gateway.\n   As such, no gateway\
    \ password file is required to support gateway\n   functions.\n   It is anticipated\
    \ that the requirement for a strong authentication\n   mechanism will soon replace\
    \ the most currently used, userid and\n   password mechanism.  The U.S. National\
    \ Security Agency (NSA) has\n   already prototyped and has plans field a Message\
    \ Secure Protocol\n   (MSP) as part of the Defense Message System (DMS) Program\
    \ which will\n   soon become the Department of Defense (DoD) mandatory messaging\n\
    \   system.  MSP utilizes a public key encryption-like mechanism which\n   will\
    \ be used to authenticate users and allow signed operations.  The\n   current\
    \ philosophy is to use this same mechanism for all\n   authentication and access\
    \ control situations, such as logging onto\n   remote hosts or gateways.  Detailed\
    \ specifications for Pre-MSP, used\n   in the unclassified though sensitive arena,\
    \ are scheduled to be\n   published in the first quarter of 1993.  The requirement\
    \ for gateways\n   to process PMSP and MSP strong authentication mechanisms will\
    \ be part\n   of all future DoD procurements.\n"
- title: 12.  References
  contents:
  - "12.  References\n   [ISO8571-1]  Information processing systems - Open Systems\n\
    \                Interconnection - File Transfer, Access and\n               \
    \ Management, Part 1: General Introduction, International\n                Standards\
    \ Organization for Standards, First Edition,\n                October 1988.\n\
    \   [ISO8571-2]  Information processing systems - Open Systems\n             \
    \   Interconnection - File Transfer, Access and Management,\n                Part\
    \ 2: Virtual Filestore Definition, International\n                Standards Organization\
    \ for Standards, First Edition,\n                October 1988.\n   [ISO8571-3]\
    \  Information processing systems - Open Systems\n                Interconnection\
    \ - File Transfer, Access and Management,\n                Part 3: File Service\
    \ Definition, International Standards\n                Organization for Standards,\
    \ First Edition, October 1988.\n   [ISO8571-4]  Information processing systems\
    \ - Open Systems\n                Interconnection - File Transfer, Access and\
    \ Management,\n                Part 4: File Protocol Specification, International\n\
    \                Standards Organization for Standards, First Edition,\n      \
    \          October 1988.\n   [ISO8571-5]  Information processing systems - Open\
    \ Systems\n                Interconnection - File Transfer, Access and Management,\n\
    \                Part 5: Protocol Implementation Conformance Statement,\n    \
    \            International Standards Organization for Standards,\n           \
    \     First Edition.\n   [KILLE92]  Hardcastle-Kille, S., \"Using the OSI Directory\
    \ to achieve\n              User Friendly Naming\", OSI-DS 24 (v1.1), October\
    \ 1992.\n   [MITRE87]  Scott, J., \"An FTP/FTAM Application Bridge, An FTAM/FTAM\n\
    \              (MTR-87W00186)\", The MITRE Corporation, July 1987.\n   [NETWRX90a]\
    \  Mindel, J., \"Gateway Technical Specification\" Open\n                Networks,\
    \ Inc. (formerly NetWorks One), 28 February 1990.\n   [NETWRX90b]  Mindel, J.,\
    \ \"FTP Gateway User's Guide\", Open\n                Networks, Inc. (formerly\
    \ NetWorks One), 28 February 1990.\n   [NIST86]  Wallace, M, et. al., \"A Gateway\
    \ Architecture Between FTP\n             and FTAM (ICST/SNA86-6)\", National Institute\
    \ of Standards\n             and Technology, U.S. Department of Commerce, July\
    \ 1986.\n   [NIST88]  A Test System for Implementations of FTAM/FTP Gateways:\n\
    \             Final Report Part 1, National Institute of Standards and\n     \
    \        Technology, U.S. Chamber of Commerce, October 1988.\n   [NIST91]  CSL\
    \ Bulletin: File Transfer, Access, and Management,\n             National Institute\
    \ of Standards and Technology, U.S.\n             Chamber of Commerce, July 1991.\n\
    \   [NIST92]  Stable Implementation Agreements for Open Systems\n            \
    \ Interconnection Protocols: Part 9 - FTAM Phase 2, Output\n             from\
    \ the March 1992 Open Systems Environment Implementors'\n             Workshop\
    \ (OIW), March 1992.\n   [RFC959]  Postel, J., and J. Reynolds, \"File Transfer\
    \  Protocol\n             (FTP), STD 9, RFC 959, USC/Information Sciences Institute,\n\
    \             October 1985.\n   [RFC1101] Mockapetris, P., \"DNS Encoding of Network\
    \ Names and other\n             Types\",  RFC 1101, USC/Information Sciences Institute,\n\
    \             April 1989.\n   [RFC1279] Hardcastle-Kille, S., \"X.500 and Domain\"\
    , RFC 1279,\n             University College London, November 1991.\n   [ROSE90]\
    \  Rose, M., \"The Open Book: A Practical Perspective on OSI\",\n            \
    \ Prentice-Hall Inc., 1990.\n"
- title: 13.  Authors' Addresses
  contents:
  - "13.  Authors' Addresses\n   Joshua L. Mindel\n   Open Networks, Inc.\n   11490\
    \ Commerce Park Dr., Suite 205\n   Reston, Virginia 22091  USA\n   Phone:  (703)\
    \ 648-0013\n   Email: mindel@netwrx1.nw1.com\n   Robert L. Slaski\n   Open Networks,\
    \ Inc.\n   11490 Commerce Park Dr., Suite 205\n   Reston, Virginia 22091  USA\n\
    \   Phone:  (703) 648-0013\n   Email: slaski@netwrx1.nw1.com\n"
